
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000216bc  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002c68  0802186c  0802186c  0003186c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00001566  080244d4  080244d4  000344d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000090  08025a3c  08025a3c  00035a3c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 000001f4  08025acc  08025acc  00035acc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 000833f8  08025cc0  08025cc0  00035cc0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  080a90b8  080a90b8  000c016c  2**0
                  CONTENTS
  8 .ARM          00000008  080a90b8  080a90b8  000b90b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  080a90c0  080a90c0  000c016c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  080a90c0  080a90c0  000b90c0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  080a90d4  080a90d4  000b90d4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         0000016c  20000000  080a90dc  000c0000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          000155c8  2000016c  080a9248  000c016c  2**2
                  ALLOC
 14 ._user_heap_stack 00001404  20015734  080a9248  000c5734  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000c016c  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 0004b000  d0000000  d0000000  000d0000  2**2
                  ALLOC
 17 .debug_line   00050977  00000000  00000000  000c019c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_info   000ed8af  00000000  00000000  00110b13  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 00014f3c  00000000  00000000  001fe3c2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_aranges 00003050  00000000  00000000  00213300  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_str    00119baf  00000000  00000000  00216350  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 000070c0  00000000  00000000  0032ff00  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_loc    000356cd  00000000  00000000  00336fc0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_macro  00030b25  00000000  00000000  0036c68d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .comment      000000cf  00000000  00000000  0039d1b2  2**0
                  CONTENTS, READONLY
 26 .debug_frame  00008e70  00000000  00000000  0039d284  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	2000016c 	.word	0x2000016c
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08021854 	.word	0x08021854

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000170 	.word	0x20000170
 80001ec:	08021854 	.word	0x08021854

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b974 	b.w	8000590 <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9d08      	ldr	r5, [sp, #32]
 80002c6:	4604      	mov	r4, r0
 80002c8:	468e      	mov	lr, r1
 80002ca:	2b00      	cmp	r3, #0
 80002cc:	d14d      	bne.n	800036a <__udivmoddi4+0xaa>
 80002ce:	428a      	cmp	r2, r1
 80002d0:	4694      	mov	ip, r2
 80002d2:	d969      	bls.n	80003a8 <__udivmoddi4+0xe8>
 80002d4:	fab2 f282 	clz	r2, r2
 80002d8:	b152      	cbz	r2, 80002f0 <__udivmoddi4+0x30>
 80002da:	fa01 f302 	lsl.w	r3, r1, r2
 80002de:	f1c2 0120 	rsb	r1, r2, #32
 80002e2:	fa20 f101 	lsr.w	r1, r0, r1
 80002e6:	fa0c fc02 	lsl.w	ip, ip, r2
 80002ea:	ea41 0e03 	orr.w	lr, r1, r3
 80002ee:	4094      	lsls	r4, r2
 80002f0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80002f4:	0c21      	lsrs	r1, r4, #16
 80002f6:	fbbe f6f8 	udiv	r6, lr, r8
 80002fa:	fa1f f78c 	uxth.w	r7, ip
 80002fe:	fb08 e316 	mls	r3, r8, r6, lr
 8000302:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000306:	fb06 f107 	mul.w	r1, r6, r7
 800030a:	4299      	cmp	r1, r3
 800030c:	d90a      	bls.n	8000324 <__udivmoddi4+0x64>
 800030e:	eb1c 0303 	adds.w	r3, ip, r3
 8000312:	f106 30ff 	add.w	r0, r6, #4294967295
 8000316:	f080 811f 	bcs.w	8000558 <__udivmoddi4+0x298>
 800031a:	4299      	cmp	r1, r3
 800031c:	f240 811c 	bls.w	8000558 <__udivmoddi4+0x298>
 8000320:	3e02      	subs	r6, #2
 8000322:	4463      	add	r3, ip
 8000324:	1a5b      	subs	r3, r3, r1
 8000326:	b2a4      	uxth	r4, r4
 8000328:	fbb3 f0f8 	udiv	r0, r3, r8
 800032c:	fb08 3310 	mls	r3, r8, r0, r3
 8000330:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000334:	fb00 f707 	mul.w	r7, r0, r7
 8000338:	42a7      	cmp	r7, r4
 800033a:	d90a      	bls.n	8000352 <__udivmoddi4+0x92>
 800033c:	eb1c 0404 	adds.w	r4, ip, r4
 8000340:	f100 33ff 	add.w	r3, r0, #4294967295
 8000344:	f080 810a 	bcs.w	800055c <__udivmoddi4+0x29c>
 8000348:	42a7      	cmp	r7, r4
 800034a:	f240 8107 	bls.w	800055c <__udivmoddi4+0x29c>
 800034e:	4464      	add	r4, ip
 8000350:	3802      	subs	r0, #2
 8000352:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000356:	1be4      	subs	r4, r4, r7
 8000358:	2600      	movs	r6, #0
 800035a:	b11d      	cbz	r5, 8000364 <__udivmoddi4+0xa4>
 800035c:	40d4      	lsrs	r4, r2
 800035e:	2300      	movs	r3, #0
 8000360:	e9c5 4300 	strd	r4, r3, [r5]
 8000364:	4631      	mov	r1, r6
 8000366:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800036a:	428b      	cmp	r3, r1
 800036c:	d909      	bls.n	8000382 <__udivmoddi4+0xc2>
 800036e:	2d00      	cmp	r5, #0
 8000370:	f000 80ef 	beq.w	8000552 <__udivmoddi4+0x292>
 8000374:	2600      	movs	r6, #0
 8000376:	e9c5 0100 	strd	r0, r1, [r5]
 800037a:	4630      	mov	r0, r6
 800037c:	4631      	mov	r1, r6
 800037e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000382:	fab3 f683 	clz	r6, r3
 8000386:	2e00      	cmp	r6, #0
 8000388:	d14a      	bne.n	8000420 <__udivmoddi4+0x160>
 800038a:	428b      	cmp	r3, r1
 800038c:	d302      	bcc.n	8000394 <__udivmoddi4+0xd4>
 800038e:	4282      	cmp	r2, r0
 8000390:	f200 80f9 	bhi.w	8000586 <__udivmoddi4+0x2c6>
 8000394:	1a84      	subs	r4, r0, r2
 8000396:	eb61 0303 	sbc.w	r3, r1, r3
 800039a:	2001      	movs	r0, #1
 800039c:	469e      	mov	lr, r3
 800039e:	2d00      	cmp	r5, #0
 80003a0:	d0e0      	beq.n	8000364 <__udivmoddi4+0xa4>
 80003a2:	e9c5 4e00 	strd	r4, lr, [r5]
 80003a6:	e7dd      	b.n	8000364 <__udivmoddi4+0xa4>
 80003a8:	b902      	cbnz	r2, 80003ac <__udivmoddi4+0xec>
 80003aa:	deff      	udf	#255	; 0xff
 80003ac:	fab2 f282 	clz	r2, r2
 80003b0:	2a00      	cmp	r2, #0
 80003b2:	f040 8092 	bne.w	80004da <__udivmoddi4+0x21a>
 80003b6:	eba1 010c 	sub.w	r1, r1, ip
 80003ba:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003be:	fa1f fe8c 	uxth.w	lr, ip
 80003c2:	2601      	movs	r6, #1
 80003c4:	0c20      	lsrs	r0, r4, #16
 80003c6:	fbb1 f3f7 	udiv	r3, r1, r7
 80003ca:	fb07 1113 	mls	r1, r7, r3, r1
 80003ce:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80003d2:	fb0e f003 	mul.w	r0, lr, r3
 80003d6:	4288      	cmp	r0, r1
 80003d8:	d908      	bls.n	80003ec <__udivmoddi4+0x12c>
 80003da:	eb1c 0101 	adds.w	r1, ip, r1
 80003de:	f103 38ff 	add.w	r8, r3, #4294967295
 80003e2:	d202      	bcs.n	80003ea <__udivmoddi4+0x12a>
 80003e4:	4288      	cmp	r0, r1
 80003e6:	f200 80cb 	bhi.w	8000580 <__udivmoddi4+0x2c0>
 80003ea:	4643      	mov	r3, r8
 80003ec:	1a09      	subs	r1, r1, r0
 80003ee:	b2a4      	uxth	r4, r4
 80003f0:	fbb1 f0f7 	udiv	r0, r1, r7
 80003f4:	fb07 1110 	mls	r1, r7, r0, r1
 80003f8:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 80003fc:	fb0e fe00 	mul.w	lr, lr, r0
 8000400:	45a6      	cmp	lr, r4
 8000402:	d908      	bls.n	8000416 <__udivmoddi4+0x156>
 8000404:	eb1c 0404 	adds.w	r4, ip, r4
 8000408:	f100 31ff 	add.w	r1, r0, #4294967295
 800040c:	d202      	bcs.n	8000414 <__udivmoddi4+0x154>
 800040e:	45a6      	cmp	lr, r4
 8000410:	f200 80bb 	bhi.w	800058a <__udivmoddi4+0x2ca>
 8000414:	4608      	mov	r0, r1
 8000416:	eba4 040e 	sub.w	r4, r4, lr
 800041a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800041e:	e79c      	b.n	800035a <__udivmoddi4+0x9a>
 8000420:	f1c6 0720 	rsb	r7, r6, #32
 8000424:	40b3      	lsls	r3, r6
 8000426:	fa22 fc07 	lsr.w	ip, r2, r7
 800042a:	ea4c 0c03 	orr.w	ip, ip, r3
 800042e:	fa20 f407 	lsr.w	r4, r0, r7
 8000432:	fa01 f306 	lsl.w	r3, r1, r6
 8000436:	431c      	orrs	r4, r3
 8000438:	40f9      	lsrs	r1, r7
 800043a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800043e:	fa00 f306 	lsl.w	r3, r0, r6
 8000442:	fbb1 f8f9 	udiv	r8, r1, r9
 8000446:	0c20      	lsrs	r0, r4, #16
 8000448:	fa1f fe8c 	uxth.w	lr, ip
 800044c:	fb09 1118 	mls	r1, r9, r8, r1
 8000450:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000454:	fb08 f00e 	mul.w	r0, r8, lr
 8000458:	4288      	cmp	r0, r1
 800045a:	fa02 f206 	lsl.w	r2, r2, r6
 800045e:	d90b      	bls.n	8000478 <__udivmoddi4+0x1b8>
 8000460:	eb1c 0101 	adds.w	r1, ip, r1
 8000464:	f108 3aff 	add.w	sl, r8, #4294967295
 8000468:	f080 8088 	bcs.w	800057c <__udivmoddi4+0x2bc>
 800046c:	4288      	cmp	r0, r1
 800046e:	f240 8085 	bls.w	800057c <__udivmoddi4+0x2bc>
 8000472:	f1a8 0802 	sub.w	r8, r8, #2
 8000476:	4461      	add	r1, ip
 8000478:	1a09      	subs	r1, r1, r0
 800047a:	b2a4      	uxth	r4, r4
 800047c:	fbb1 f0f9 	udiv	r0, r1, r9
 8000480:	fb09 1110 	mls	r1, r9, r0, r1
 8000484:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000488:	fb00 fe0e 	mul.w	lr, r0, lr
 800048c:	458e      	cmp	lr, r1
 800048e:	d908      	bls.n	80004a2 <__udivmoddi4+0x1e2>
 8000490:	eb1c 0101 	adds.w	r1, ip, r1
 8000494:	f100 34ff 	add.w	r4, r0, #4294967295
 8000498:	d26c      	bcs.n	8000574 <__udivmoddi4+0x2b4>
 800049a:	458e      	cmp	lr, r1
 800049c:	d96a      	bls.n	8000574 <__udivmoddi4+0x2b4>
 800049e:	3802      	subs	r0, #2
 80004a0:	4461      	add	r1, ip
 80004a2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80004a6:	fba0 9402 	umull	r9, r4, r0, r2
 80004aa:	eba1 010e 	sub.w	r1, r1, lr
 80004ae:	42a1      	cmp	r1, r4
 80004b0:	46c8      	mov	r8, r9
 80004b2:	46a6      	mov	lr, r4
 80004b4:	d356      	bcc.n	8000564 <__udivmoddi4+0x2a4>
 80004b6:	d053      	beq.n	8000560 <__udivmoddi4+0x2a0>
 80004b8:	b15d      	cbz	r5, 80004d2 <__udivmoddi4+0x212>
 80004ba:	ebb3 0208 	subs.w	r2, r3, r8
 80004be:	eb61 010e 	sbc.w	r1, r1, lr
 80004c2:	fa01 f707 	lsl.w	r7, r1, r7
 80004c6:	fa22 f306 	lsr.w	r3, r2, r6
 80004ca:	40f1      	lsrs	r1, r6
 80004cc:	431f      	orrs	r7, r3
 80004ce:	e9c5 7100 	strd	r7, r1, [r5]
 80004d2:	2600      	movs	r6, #0
 80004d4:	4631      	mov	r1, r6
 80004d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004da:	f1c2 0320 	rsb	r3, r2, #32
 80004de:	40d8      	lsrs	r0, r3
 80004e0:	fa0c fc02 	lsl.w	ip, ip, r2
 80004e4:	fa21 f303 	lsr.w	r3, r1, r3
 80004e8:	4091      	lsls	r1, r2
 80004ea:	4301      	orrs	r1, r0
 80004ec:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80004f0:	fa1f fe8c 	uxth.w	lr, ip
 80004f4:	fbb3 f0f7 	udiv	r0, r3, r7
 80004f8:	fb07 3610 	mls	r6, r7, r0, r3
 80004fc:	0c0b      	lsrs	r3, r1, #16
 80004fe:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000502:	fb00 f60e 	mul.w	r6, r0, lr
 8000506:	429e      	cmp	r6, r3
 8000508:	fa04 f402 	lsl.w	r4, r4, r2
 800050c:	d908      	bls.n	8000520 <__udivmoddi4+0x260>
 800050e:	eb1c 0303 	adds.w	r3, ip, r3
 8000512:	f100 38ff 	add.w	r8, r0, #4294967295
 8000516:	d22f      	bcs.n	8000578 <__udivmoddi4+0x2b8>
 8000518:	429e      	cmp	r6, r3
 800051a:	d92d      	bls.n	8000578 <__udivmoddi4+0x2b8>
 800051c:	3802      	subs	r0, #2
 800051e:	4463      	add	r3, ip
 8000520:	1b9b      	subs	r3, r3, r6
 8000522:	b289      	uxth	r1, r1
 8000524:	fbb3 f6f7 	udiv	r6, r3, r7
 8000528:	fb07 3316 	mls	r3, r7, r6, r3
 800052c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000530:	fb06 f30e 	mul.w	r3, r6, lr
 8000534:	428b      	cmp	r3, r1
 8000536:	d908      	bls.n	800054a <__udivmoddi4+0x28a>
 8000538:	eb1c 0101 	adds.w	r1, ip, r1
 800053c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000540:	d216      	bcs.n	8000570 <__udivmoddi4+0x2b0>
 8000542:	428b      	cmp	r3, r1
 8000544:	d914      	bls.n	8000570 <__udivmoddi4+0x2b0>
 8000546:	3e02      	subs	r6, #2
 8000548:	4461      	add	r1, ip
 800054a:	1ac9      	subs	r1, r1, r3
 800054c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000550:	e738      	b.n	80003c4 <__udivmoddi4+0x104>
 8000552:	462e      	mov	r6, r5
 8000554:	4628      	mov	r0, r5
 8000556:	e705      	b.n	8000364 <__udivmoddi4+0xa4>
 8000558:	4606      	mov	r6, r0
 800055a:	e6e3      	b.n	8000324 <__udivmoddi4+0x64>
 800055c:	4618      	mov	r0, r3
 800055e:	e6f8      	b.n	8000352 <__udivmoddi4+0x92>
 8000560:	454b      	cmp	r3, r9
 8000562:	d2a9      	bcs.n	80004b8 <__udivmoddi4+0x1f8>
 8000564:	ebb9 0802 	subs.w	r8, r9, r2
 8000568:	eb64 0e0c 	sbc.w	lr, r4, ip
 800056c:	3801      	subs	r0, #1
 800056e:	e7a3      	b.n	80004b8 <__udivmoddi4+0x1f8>
 8000570:	4646      	mov	r6, r8
 8000572:	e7ea      	b.n	800054a <__udivmoddi4+0x28a>
 8000574:	4620      	mov	r0, r4
 8000576:	e794      	b.n	80004a2 <__udivmoddi4+0x1e2>
 8000578:	4640      	mov	r0, r8
 800057a:	e7d1      	b.n	8000520 <__udivmoddi4+0x260>
 800057c:	46d0      	mov	r8, sl
 800057e:	e77b      	b.n	8000478 <__udivmoddi4+0x1b8>
 8000580:	3b02      	subs	r3, #2
 8000582:	4461      	add	r1, ip
 8000584:	e732      	b.n	80003ec <__udivmoddi4+0x12c>
 8000586:	4630      	mov	r0, r6
 8000588:	e709      	b.n	800039e <__udivmoddi4+0xde>
 800058a:	4464      	add	r4, ip
 800058c:	3802      	subs	r0, #2
 800058e:	e742      	b.n	8000416 <__udivmoddi4+0x156>

08000590 <__aeabi_idiv0>:
 8000590:	4770      	bx	lr
 8000592:	bf00      	nop

08000594 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000594:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005cc <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000598:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800059a:	e003      	b.n	80005a4 <LoopCopyDataInit>

0800059c <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 800059c:	4b0c      	ldr	r3, [pc, #48]	; (80005d0 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 800059e:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005a0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005a2:	3104      	adds	r1, #4

080005a4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005a4:	480b      	ldr	r0, [pc, #44]	; (80005d4 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005a6:	4b0c      	ldr	r3, [pc, #48]	; (80005d8 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005a8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005aa:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005ac:	d3f6      	bcc.n	800059c <CopyDataInit>
  ldr  r2, =_sbss
 80005ae:	4a0b      	ldr	r2, [pc, #44]	; (80005dc <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005b0:	e002      	b.n	80005b8 <LoopFillZerobss>

080005b2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005b2:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005b4:	f842 3b04 	str.w	r3, [r2], #4

080005b8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005b8:	4b09      	ldr	r3, [pc, #36]	; (80005e0 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005ba:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005bc:	d3f9      	bcc.n	80005b2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005be:	f005 fb6d 	bl	8005c9c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005c2:	f020 f96b 	bl	802089c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005c6:	f000 ff45 	bl	8001454 <main>
  bx  lr    
 80005ca:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80005cc:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80005d0:	080a90dc 	.word	0x080a90dc
  ldr  r0, =_sdata
 80005d4:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005d8:	2000016c 	.word	0x2000016c
  ldr  r2, =_sbss
 80005dc:	2000016c 	.word	0x2000016c
  ldr  r3, = _ebss
 80005e0:	20015734 	.word	0x20015734

080005e4 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005e4:	e7fe      	b.n	80005e4 <ADC_IRQHandler>

080005e6 <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_init();
 80005e6:	f000 bc39 	b.w	8000e5c <touchgfx_init>

080005ea <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005ea:	f000 bcab 	b.w	8000f44 <touchgfx_taskEntry>

080005ee <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80005ee:	4770      	bx	lr

080005f0 <_ZN20STM32TouchControllerD0Ev>:
 80005f0:	b510      	push	{r4, lr}
 80005f2:	2104      	movs	r1, #4
 80005f4:	4604      	mov	r4, r0
 80005f6:	f01f ff5d 	bl	80204b4 <_ZdlPvj>
 80005fa:	4620      	mov	r0, r4
 80005fc:	bd10      	pop	{r4, pc}
	...

08000600 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8000600:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8000602:	4b0c      	ldr	r3, [pc, #48]	; (8000634 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000604:	4c0c      	ldr	r4, [pc, #48]	; (8000638 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8000606:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000608:	4b0c      	ldr	r3, [pc, #48]	; (800063c <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060a:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 800060c:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060e:	6863      	ldr	r3, [r4, #4]
 8000610:	4798      	blx	r3
 8000612:	f640 0311 	movw	r3, #2065	; 0x811
 8000616:	4298      	cmp	r0, r3
 8000618:	d10a      	bne.n	8000630 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 800061a:	4d09      	ldr	r5, [pc, #36]	; (8000640 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 800061c:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 800061e:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000620:	2082      	movs	r0, #130	; 0x82
 8000622:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000624:	682b      	ldr	r3, [r5, #0]
 8000626:	2082      	movs	r0, #130	; 0x82
 8000628:	68db      	ldr	r3, [r3, #12]
 800062a:	4798      	blx	r3
 800062c:	2000      	movs	r0, #0
    }

    return ret;
}
 800062e:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000630:	2001      	movs	r0, #1
 8000632:	e7fc      	b.n	800062e <_Z11BSP_TS_Inittt+0x2e>
 8000634:	20000188 	.word	0x20000188
 8000638:	20000054 	.word	0x20000054
 800063c:	2000018a 	.word	0x2000018a
 8000640:	2000018c 	.word	0x2000018c

08000644 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000644:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000648:	20f0      	movs	r0, #240	; 0xf0
 800064a:	f7ff bfd9 	b.w	8000600 <_Z11BSP_TS_Inittt>
	...

08000650 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000650:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000652:	4d2d      	ldr	r5, [pc, #180]	; (8000708 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb8>)
 8000654:	682b      	ldr	r3, [r5, #0]
{
 8000656:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000658:	691b      	ldr	r3, [r3, #16]
 800065a:	2082      	movs	r0, #130	; 0x82
 800065c:	4798      	blx	r3
 800065e:	b280      	uxth	r0, r0
 8000660:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000662:	2800      	cmp	r0, #0
 8000664:	d043      	beq.n	80006ee <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x9e>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000666:	682b      	ldr	r3, [r5, #0]
 8000668:	f10d 0206 	add.w	r2, sp, #6
 800066c:	695b      	ldr	r3, [r3, #20]
 800066e:	a901      	add	r1, sp, #4
 8000670:	2082      	movs	r0, #130	; 0x82
 8000672:	4798      	blx	r3

        /* Y value first correction */
        y -= 360;
 8000674:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8000678:	f5a2 72b4 	sub.w	r2, r2, #360	; 0x168
 800067c:	b292      	uxth	r2, r2

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 800067e:	2a0a      	cmp	r2, #10
 8000680:	d937      	bls.n	80006f2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa2>
        yr = y / 11;
 8000682:	230b      	movs	r3, #11
 8000684:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8000688:	4b20      	ldr	r3, [pc, #128]	; (800070c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>)
 800068a:	881b      	ldrh	r3, [r3, #0]
 800068c:	429a      	cmp	r2, r3
 800068e:	d901      	bls.n	8000694 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
        {
            yr = TsYBoundary - 1;
 8000690:	3b01      	subs	r3, #1
 8000692:	b29a      	uxth	r2, r3
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8000694:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000698:	f640 31b8 	movw	r1, #3000	; 0xbb8
 800069c:	428b      	cmp	r3, r1
 800069e:	d82a      	bhi.n	80006f6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa6>
        {
            x = 3870 - x;
 80006a0:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 80006a4:	330e      	adds	r3, #14
 80006a6:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 80006a8:	210f      	movs	r1, #15
 80006aa:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 80006ae:	4918      	ldr	r1, [pc, #96]	; (8000710 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>)
 80006b0:	8809      	ldrh	r1, [r1, #0]
 80006b2:	428b      	cmp	r3, r1
 80006b4:	d901      	bls.n	80006ba <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
        {
            xr = TsXBoundary - 1;
 80006b6:	1e4b      	subs	r3, r1, #1
 80006b8:	b29b      	uxth	r3, r3
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006ba:	4e16      	ldr	r6, [pc, #88]	; (8000714 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc4>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006bc:	4d16      	ldr	r5, [pc, #88]	; (8000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc8>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006be:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006c0:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006c2:	4283      	cmp	r3, r0
 80006c4:	b281      	uxth	r1, r0
 80006c6:	bf8c      	ite	hi
 80006c8:	1a59      	subhi	r1, r3, r1
 80006ca:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006cc:	b2b8      	uxth	r0, r7
 80006ce:	42ba      	cmp	r2, r7
 80006d0:	bf8c      	ite	hi
 80006d2:	1a10      	subhi	r0, r2, r0
 80006d4:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d6:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006d8:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80006da:	4401      	add	r1, r0
 80006dc:	2905      	cmp	r1, #5
        {
            _x = x;
 80006de:	bfc8      	it	gt
 80006e0:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80006e2:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80006e4:	bfc8      	it	gt
 80006e6:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80006e8:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80006ea:	682b      	ldr	r3, [r5, #0]
 80006ec:	80a3      	strh	r3, [r4, #4]
    }
}
 80006ee:	b003      	add	sp, #12
 80006f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
            yr = 0;
 80006f2:	2200      	movs	r2, #0
 80006f4:	e7ce      	b.n	8000694 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
            x = 3800 - x;
 80006f6:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 80006fa:	3308      	adds	r3, #8
 80006fc:	b29b      	uxth	r3, r3
        if (xr <= 0)
 80006fe:	2b0e      	cmp	r3, #14
 8000700:	d8d2      	bhi.n	80006a8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
            xr = 0;
 8000702:	2300      	movs	r3, #0
 8000704:	e7d9      	b.n	80006ba <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
 8000706:	bf00      	nop
 8000708:	2000018c 	.word	0x2000018c
 800070c:	2000018a 	.word	0x2000018a
 8000710:	20000188 	.word	0x20000188
 8000714:	20000190 	.word	0x20000190
 8000718:	20000194 	.word	0x20000194

0800071c <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 800071c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 800071e:	4668      	mov	r0, sp
{
 8000720:	460d      	mov	r5, r1
 8000722:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000724:	f7ff ff94 	bl	8000650 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000728:	f8bd 0000 	ldrh.w	r0, [sp]
 800072c:	b130      	cbz	r0, 800073c <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 800072e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000732:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000734:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000738:	6023      	str	r3, [r4, #0]
        return true;
 800073a:	2001      	movs	r0, #1
}
 800073c:	b003      	add	sp, #12
 800073e:	bd30      	pop	{r4, r5, pc}

08000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{

}
 8000740:	4770      	bx	lr

08000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
 8000742:	4770      	bx	lr

08000744 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
 8000744:	4770      	bx	lr

08000746 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000746:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000748:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 800074c:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000750:	4770      	bx	lr

08000752 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8000752:	2000      	movs	r0, #0
 8000754:	4770      	bx	lr
	...

08000758 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000758:	4b03      	ldr	r3, [pc, #12]	; (8000768 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800075a:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800075c:	3900      	subs	r1, #0
 800075e:	bf18      	it	ne
 8000760:	2101      	movne	r1, #1
 8000762:	7019      	strb	r1, [r3, #0]
    }
 8000764:	4770      	bx	lr
 8000766:	bf00      	nop
 8000768:	20015487 	.word	0x20015487

0800076c <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 800076c:	2000      	movs	r0, #0
 800076e:	4770      	bx	lr

08000770 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000770:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8000772:	b10b      	cbz	r3, 8000778 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000774:	4608      	mov	r0, r1
 8000776:	4718      	bx	r3
        }
    }
 8000778:	4770      	bx	lr

0800077a <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 800077a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800077e:	4770      	bx	lr

08000780 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000780:	6840      	ldr	r0, [r0, #4]
 8000782:	6803      	ldr	r3, [r0, #0]
 8000784:	699b      	ldr	r3, [r3, #24]
 8000786:	4718      	bx	r3

08000788 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000788:	4770      	bx	lr

0800078a <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 800078a:	4770      	bx	lr

0800078c <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800078c:	4770      	bx	lr

0800078e <_ZN11TouchGFXHAL10initializeEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800078e:	f000 bc79 	b.w	8001084 <_ZN20TouchGFXGeneratedHAL10initializeEv>

08000792 <_ZN11TouchGFXHAL9taskEntryEv>:
}

void TouchGFXHAL::taskEntry()
{
 8000792:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000794:	6803      	ldr	r3, [r0, #0]
{
 8000796:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8000798:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800079c:	4798      	blx	r3
    enableInterrupts();
 800079e:	6823      	ldr	r3, [r4, #0]
 80007a0:	4620      	mov	r0, r4
 80007a2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80007a4:	4798      	blx	r3

    OSWrappers::waitForVSync();
 80007a6:	f000 f8eb 	bl	8000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80007aa:	6823      	ldr	r3, [r4, #0]
 80007ac:	4620      	mov	r0, r4
 80007ae:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80007b0:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 80007b2:	2029      	movs	r0, #41	; 0x29
 80007b4:	f001 f91a 	bl	80019ec <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 80007b8:	f000 f8e2 	bl	8000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80007bc:	6823      	ldr	r3, [r4, #0]
 80007be:	4620      	mov	r0, r4
 80007c0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80007c2:	4798      	blx	r3
    for (;;)
 80007c4:	e7f8      	b.n	80007b8 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

080007c6 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80007c6:	b510      	push	{r4, lr}
 80007c8:	4604      	mov	r4, r0
        swapFrameBuffers();
 80007ca:	f00b f853 	bl	800b874 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80007ce:	6823      	ldr	r3, [r4, #0]
 80007d0:	4620      	mov	r0, r4
 80007d2:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 80007d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80007da:	4718      	bx	r3

080007dc <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80007dc:	f000 bc44 	b.w	8001068 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080007e0 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80007e0:	f000 bc48 	b.w	8001074 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080007e4 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80007e4:	f000 bc74 	b.w	80010d0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080007e8 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80007e8:	f000 bc1a 	b.w	8001020 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080007ec <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80007ec:	f000 bc74 	b.w	80010d8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080007f0 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80007f0:	f000 bc7c 	b.w	80010ec <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080007f4 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80007f4:	f000 bc1e 	b.w	8001034 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080007f8 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80007f8:	f00a bab0 	b.w	800ad5c <_ZN8touchgfx3HAL16flushFrameBufferEv>

080007fc <_ZN11TouchGFXHALD0Ev>:
 80007fc:	b510      	push	{r4, lr}
 80007fe:	217c      	movs	r1, #124	; 0x7c
 8000800:	4604      	mov	r4, r0
 8000802:	f01f fe57 	bl	80204b4 <_ZdlPvj>
 8000806:	4620      	mov	r0, r4
 8000808:	bd10      	pop	{r4, pc}

0800080a <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 800080a:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 800080e:	b11b      	cbz	r3, 8000818 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8000810:	6840      	ldr	r0, [r0, #4]
 8000812:	6803      	ldr	r3, [r0, #0]
 8000814:	681b      	ldr	r3, [r3, #0]
 8000816:	4718      	bx	r3
    }
 8000818:	4618      	mov	r0, r3
 800081a:	4770      	bx	lr

0800081c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 800081c:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 800081e:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8000822:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
            if (DISPLAY_ROTATION == rotate0)
 8000826:	4b0c      	ldr	r3, [pc, #48]	; (8000858 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8000828:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 800082a:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 800082c:	d009      	beq.n	8000842 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 800082e:	b93a      	cbnz	r2, 8000840 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000830:	4a0a      	ldr	r2, [pc, #40]	; (800085c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000832:	490b      	ldr	r1, [pc, #44]	; (8000860 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000834:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000836:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8000838:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800083a:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 800083c:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 800083e:	701a      	strb	r2, [r3, #0]
    }
 8000840:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000842:	2a00      	cmp	r2, #0
 8000844:	d0fc      	beq.n	8000840 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000846:	4a05      	ldr	r2, [pc, #20]	; (800085c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000848:	4905      	ldr	r1, [pc, #20]	; (8000860 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800084a:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 800084c:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 800084e:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000850:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000852:	2200      	movs	r2, #0
 8000854:	e7f3      	b.n	800083e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8000856:	bf00      	nop
 8000858:	20015480 	.word	0x20015480
 800085c:	2001547c 	.word	0x2001547c
 8000860:	2001547e 	.word	0x2001547e

08000864 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000864:	b570      	push	{r4, r5, r6, lr}
 8000866:	460d      	mov	r5, r1
 8000868:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800086a:	b935      	cbnz	r5, 800087a <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 800086c:	4b09      	ldr	r3, [pc, #36]	; (8000894 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 800086e:	4a0a      	ldr	r2, [pc, #40]	; (8000898 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000870:	480a      	ldr	r0, [pc, #40]	; (800089c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000872:	f240 21d2 	movw	r1, #722	; 0x2d2
 8000876:	f01f fed1 	bl	802061c <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800087a:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800087e:	4b08      	ldr	r3, [pc, #32]	; (80008a0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000880:	3a00      	subs	r2, #0
 8000882:	bf18      	it	ne
 8000884:	2201      	movne	r2, #1
 8000886:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000888:	6803      	ldr	r3, [r0, #0]
    }
 800088a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 800088e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000892:	4718      	bx	r3
 8000894:	080218c4 	.word	0x080218c4
 8000898:	080218fc 	.word	0x080218fc
 800089c:	0802194a 	.word	0x0802194a
 80008a0:	20015486 	.word	0x20015486

080008a4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80008a4:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80008a6:	4b09      	ldr	r3, [pc, #36]	; (80008cc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 80008a8:	881b      	ldrh	r3, [r3, #0]
 80008aa:	428b      	cmp	r3, r1
 80008ac:	d803      	bhi.n	80008b6 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 80008ae:	4b08      	ldr	r3, [pc, #32]	; (80008d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 80008b0:	881b      	ldrh	r3, [r3, #0]
 80008b2:	4293      	cmp	r3, r2
 80008b4:	d905      	bls.n	80008c2 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80008b6:	4b07      	ldr	r3, [pc, #28]	; (80008d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80008b8:	4a07      	ldr	r2, [pc, #28]	; (80008d8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80008ba:	4808      	ldr	r0, [pc, #32]	; (80008dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80008bc:	219e      	movs	r1, #158	; 0x9e
 80008be:	f01f fead 	bl	802061c <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80008c2:	4b07      	ldr	r3, [pc, #28]	; (80008e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80008c4:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80008c6:	4b07      	ldr	r3, [pc, #28]	; (80008e4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80008c8:	801a      	strh	r2, [r3, #0]
    }
 80008ca:	bd08      	pop	{r3, pc}
 80008cc:	2001547c 	.word	0x2001547c
 80008d0:	2001547e 	.word	0x2001547e
 80008d4:	0802198f 	.word	0x0802198f
 80008d8:	080219f2 	.word	0x080219f2
 80008dc:	0802194a 	.word	0x0802194a
 80008e0:	20015482 	.word	0x20015482
 80008e4:	20015484 	.word	0x20015484

080008e8 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80008e8:	2101      	movs	r1, #1
{
 80008ea:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80008ec:	2200      	movs	r2, #0
 80008ee:	4608      	mov	r0, r1
 80008f0:	f007 fe86 	bl	8008600 <osSemaphoreNew>
 80008f4:	4b0a      	ldr	r3, [pc, #40]	; (8000920 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 80008f6:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80008f8:	b928      	cbnz	r0, 8000906 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80008fa:	4b0a      	ldr	r3, [pc, #40]	; (8000924 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 80008fc:	4a0a      	ldr	r2, [pc, #40]	; (8000928 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80008fe:	2129      	movs	r1, #41	; 0x29

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000900:	480a      	ldr	r0, [pc, #40]	; (800092c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000902:	f01f fe8b 	bl	802061c <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000906:	2200      	movs	r2, #0
 8000908:	2104      	movs	r1, #4
 800090a:	2001      	movs	r0, #1
 800090c:	f007 ff3e 	bl	800878c <osMessageQueueNew>
 8000910:	4b07      	ldr	r3, [pc, #28]	; (8000930 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000912:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000914:	b918      	cbnz	r0, 800091e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000916:	4b07      	ldr	r3, [pc, #28]	; (8000934 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000918:	4a03      	ldr	r2, [pc, #12]	; (8000928 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800091a:	212d      	movs	r1, #45	; 0x2d
 800091c:	e7f0      	b.n	8000900 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 800091e:	bd08      	pop	{r3, pc}
 8000920:	2000019c 	.word	0x2000019c
 8000924:	08021b10 	.word	0x08021b10
 8000928:	08021b59 	.word	0x08021b59
 800092c:	08021b88 	.word	0x08021b88
 8000930:	20000198 	.word	0x20000198
 8000934:	08021bd6 	.word	0x08021bd6

08000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000938:	4b02      	ldr	r3, [pc, #8]	; (8000944 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 800093a:	f04f 31ff 	mov.w	r1, #4294967295
 800093e:	6818      	ldr	r0, [r3, #0]
 8000940:	f007 beb4 	b.w	80086ac <osSemaphoreAcquire>
 8000944:	2000019c 	.word	0x2000019c

08000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000948:	4b01      	ldr	r3, [pc, #4]	; (8000950 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 800094a:	6818      	ldr	r0, [r3, #0]
 800094c:	f007 bee8 	b.w	8008720 <osSemaphoreRelease>
 8000950:	2000019c 	.word	0x2000019c

08000954 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000954:	4b02      	ldr	r3, [pc, #8]	; (8000960 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000956:	2100      	movs	r1, #0
 8000958:	6818      	ldr	r0, [r3, #0]
 800095a:	f007 bea7 	b.w	80086ac <osSemaphoreAcquire>
 800095e:	bf00      	nop
 8000960:	2000019c 	.word	0x2000019c

08000964 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000964:	f7ff bff0 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000968 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000968:	4803      	ldr	r0, [pc, #12]	; (8000978 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 800096a:	4904      	ldr	r1, [pc, #16]	; (800097c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800096c:	6800      	ldr	r0, [r0, #0]
 800096e:	2300      	movs	r3, #0
 8000970:	461a      	mov	r2, r3
 8000972:	f007 bf51 	b.w	8008818 <osMessageQueuePut>
 8000976:	bf00      	nop
 8000978:	20000198 	.word	0x20000198
 800097c:	20000004 	.word	0x20000004

08000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000980:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000982:	4c08      	ldr	r4, [pc, #32]	; (80009a4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000984:	2300      	movs	r3, #0
 8000986:	461a      	mov	r2, r3
 8000988:	a901      	add	r1, sp, #4
 800098a:	6820      	ldr	r0, [r4, #0]
 800098c:	f007 ff86 	bl	800889c <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000990:	6820      	ldr	r0, [r4, #0]
 8000992:	f04f 33ff 	mov.w	r3, #4294967295
 8000996:	2200      	movs	r2, #0
 8000998:	a901      	add	r1, sp, #4
 800099a:	f007 ff7f 	bl	800889c <osMessageQueueGet>
}
 800099e:	b002      	add	sp, #8
 80009a0:	bd10      	pop	{r4, pc}
 80009a2:	bf00      	nop
 80009a4:	20000198 	.word	0x20000198

080009a8 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 80009a8:	6803      	ldr	r3, [r0, #0]
 80009aa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80009ac:	4718      	bx	r3

080009ae <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 80009ae:	2001      	movs	r0, #1
 80009b0:	4770      	bx	lr

080009b2 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 80009b2:	6803      	ldr	r3, [r0, #0]
 80009b4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80009b6:	4718      	bx	r3

080009b8 <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 80009b8:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80009ba:	2300      	movs	r3, #0
 80009bc:	9301      	str	r3, [sp, #4]
 80009be:	4b0d      	ldr	r3, [pc, #52]	; (80009f4 <_ZN8STM32DMA10initializeEv+0x3c>)
 80009c0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009c2:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80009c6:	631a      	str	r2, [r3, #48]	; 0x30
 80009c8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009ca:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 80009ce:	9201      	str	r2, [sp, #4]
 80009d0:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 80009d2:	691a      	ldr	r2, [r3, #16]
 80009d4:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80009d8:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 80009da:	691a      	ldr	r2, [r3, #16]
 80009dc:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 80009e0:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 80009e2:	4b05      	ldr	r3, [pc, #20]	; (80009f8 <_ZN8STM32DMA10initializeEv+0x40>)
 80009e4:	4a05      	ldr	r2, [pc, #20]	; (80009fc <_ZN8STM32DMA10initializeEv+0x44>)
 80009e6:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80009e8:	4b05      	ldr	r3, [pc, #20]	; (8000a00 <_ZN8STM32DMA10initializeEv+0x48>)
 80009ea:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80009ee:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 80009f0:	b002      	add	sp, #8
 80009f2:	4770      	bx	lr
 80009f4:	40023800 	.word	0x40023800
 80009f8:	200038e8 	.word	0x200038e8
 80009fc:	08000a45 	.word	0x08000a45
 8000a00:	e000e100 	.word	0xe000e100

08000a04 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000a04:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000a08:	4770      	bx	lr
	...

08000a0c <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000a0c:	4b05      	ldr	r3, [pc, #20]	; (8000a24 <_ZN8STM32DMAD1Ev+0x18>)
 8000a0e:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000a10:	4b05      	ldr	r3, [pc, #20]	; (8000a28 <_ZN8STM32DMAD1Ev+0x1c>)
 8000a12:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000a16:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000a1a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000a1e:	f3bf 8f6f 	isb	sy
}
 8000a22:	4770      	bx	lr
 8000a24:	08021d74 	.word	0x08021d74
 8000a28:	e000e100 	.word	0xe000e100

08000a2c <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000a2c:	b510      	push	{r4, lr}
 8000a2e:	4604      	mov	r4, r0
}
 8000a30:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8000a34:	f7ff ffea 	bl	8000a0c <_ZN8STM32DMAD1Ev>
 8000a38:	4620      	mov	r0, r4
 8000a3a:	f01f fd3b 	bl	80204b4 <_ZdlPvj>
 8000a3e:	4620      	mov	r0, r4
 8000a40:	bd10      	pop	{r4, pc}
	...

08000a44 <DMA2D_XferCpltCallback>:
        return instance;
 8000a44:	4b02      	ldr	r3, [pc, #8]	; (8000a50 <DMA2D_XferCpltCallback+0xc>)
 8000a46:	681b      	ldr	r3, [r3, #0]
 8000a48:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000a4a:	6803      	ldr	r3, [r0, #0]
 8000a4c:	695b      	ldr	r3, [r3, #20]
 8000a4e:	4718      	bx	r3
 8000a50:	20015488 	.word	0x20015488

08000a54 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000a54:	b570      	push	{r4, r5, r6, lr}
 8000a56:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000a58:	4625      	mov	r5, r4
 8000a5a:	4b0a      	ldr	r3, [pc, #40]	; (8000a84 <_ZN8STM32DMAC1Ev+0x30>)
 8000a5c:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000a5e:	2600      	movs	r6, #0
 8000a60:	6060      	str	r0, [r4, #4]
 8000a62:	7226      	strb	r6, [r4, #8]
 8000a64:	7266      	strb	r6, [r4, #9]
 8000a66:	f845 3b20 	str.w	r3, [r5], #32
 8000a6a:	2260      	movs	r2, #96	; 0x60
 8000a6c:	4629      	mov	r1, r5
 8000a6e:	f00b f857 	bl	800bb20 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000a72:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000a76:	60ee      	str	r6, [r5, #12]
 8000a78:	3524      	adds	r5, #36	; 0x24
 8000a7a:	42ab      	cmp	r3, r5
 8000a7c:	d1fb      	bne.n	8000a76 <_ZN8STM32DMAC1Ev+0x22>
}
 8000a7e:	4620      	mov	r0, r4
 8000a80:	bd70      	pop	{r4, r5, r6, pc}
 8000a82:	bf00      	nop
 8000a84:	08021d74 	.word	0x08021d74

08000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000a88:	b508      	push	{r3, lr}
    switch (format)
 8000a8a:	290b      	cmp	r1, #11
 8000a8c:	d80b      	bhi.n	8000aa6 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8000a8e:	e8df f001 	tbb	[pc, r1]
 8000a92:	0612      	.short	0x0612
 8000a94:	0a0a0a10 	.word	0x0a0a0a10
 8000a98:	0808080a 	.word	0x0808080a
 8000a9c:	0808      	.short	0x0808
 8000a9e:	2001      	movs	r0, #1
}
 8000aa0:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000aa2:	2005      	movs	r0, #5
        break;
 8000aa4:	e7fc      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8000aa6:	4b05      	ldr	r3, [pc, #20]	; (8000abc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000aa8:	4a05      	ldr	r2, [pc, #20]	; (8000ac0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000aaa:	4806      	ldr	r0, [pc, #24]	; (8000ac4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8000aac:	2167      	movs	r1, #103	; 0x67
 8000aae:	f01f fdb5 	bl	802061c <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000ab2:	2000      	movs	r0, #0
 8000ab4:	e7f4      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000ab6:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000ab8:	e7f2      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000aba:	bf00      	nop
 8000abc:	08021c18 	.word	0x08021c18
 8000ac0:	08021c33 	.word	0x08021c33
 8000ac4:	08021c7d 	.word	0x08021c7d

08000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000ac8:	b508      	push	{r3, lr}
    switch (format)
 8000aca:	290a      	cmp	r1, #10
 8000acc:	d809      	bhi.n	8000ae2 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8000ace:	e8df f001 	tbb	[pc, r1]
 8000ad2:	0610      	.short	0x0610
 8000ad4:	0808080e 	.word	0x0808080e
 8000ad8:	06060608 	.word	0x06060608
 8000adc:	06          	.byte	0x06
 8000add:	00          	.byte	0x00
 8000ade:	2001      	movs	r0, #1
}
 8000ae0:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000ae2:	4b05      	ldr	r3, [pc, #20]	; (8000af8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8000ae4:	4a05      	ldr	r2, [pc, #20]	; (8000afc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000ae6:	4806      	ldr	r0, [pc, #24]	; (8000b00 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000ae8:	2188      	movs	r1, #136	; 0x88
 8000aea:	f01f fd97 	bl	802061c <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000aee:	2000      	movs	r0, #0
 8000af0:	e7f6      	b.n	8000ae0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000af2:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000af4:	e7f4      	b.n	8000ae0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000af6:	bf00      	nop
 8000af8:	08021c18 	.word	0x08021c18
 8000afc:	08021cc9 	.word	0x08021cc9
 8000b00:	08021c7d 	.word	0x08021c7d

08000b04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000b04:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b08:	7f4f      	ldrb	r7, [r1, #29]
{
 8000b0a:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b0c:	4639      	mov	r1, r7
{
 8000b0e:	4681      	mov	r9, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b10:	f7ff ffba 	bl	8000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b14:	f894 801e 	ldrb.w	r8, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b18:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b1a:	4641      	mov	r1, r8
 8000b1c:	4648      	mov	r0, r9
 8000b1e:	f7ff ffb3 	bl	8000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b22:	4641      	mov	r1, r8
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b24:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b26:	4648      	mov	r0, r9
 8000b28:	f7ff ffce 	bl	8000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000b2c:	8aa1      	ldrh	r1, [r4, #20]
 8000b2e:	8b62      	ldrh	r2, [r4, #26]
 8000b30:	4b42      	ldr	r3, [pc, #264]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000b32:	1a52      	subs	r2, r2, r1
 8000b34:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000b36:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000b38:	8b22      	ldrh	r2, [r4, #24]
 8000b3a:	1a52      	subs	r2, r2, r1
 8000b3c:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000b3e:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000b40:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000b42:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000b46:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b48:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000b4a:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b4c:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000b4e:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000b50:	6821      	ldr	r1, [r4, #0]
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b52:	f894 c01c 	ldrb.w	ip, [r4, #28]
    switch (blitOp.operation)
 8000b56:	2980      	cmp	r1, #128	; 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b58:	ea4f 620c 	mov.w	r2, ip, lsl #24
    switch (blitOp.operation)
 8000b5c:	d026      	beq.n	8000bac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa8>
 8000b5e:	d810      	bhi.n	8000b82 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7e>
 8000b60:	2920      	cmp	r1, #32
 8000b62:	ea45 0402 	orr.w	r4, r5, r2
 8000b66:	d061      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000b68:	2940      	cmp	r1, #64	; 0x40
 8000b6a:	d05f      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000b6c:	2904      	cmp	r1, #4
 8000b6e:	d05d      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b70:	4b32      	ldr	r3, [pc, #200]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000b72:	432a      	orrs	r2, r5
 8000b74:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000b78:	4547      	cmp	r7, r8
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b7a:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000b7c:	d05a      	beq.n	8000c34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000b7e:	4a30      	ldr	r2, [pc, #192]	; (8000c40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000b80:	e040      	b.n	8000c04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
    switch (blitOp.operation)
 8000b82:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8000b86:	d007      	beq.n	8000b98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
 8000b88:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8000b8c:	d1f0      	bne.n	8000b70 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b8e:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000b92:	f042 0209 	orr.w	r2, r2, #9
 8000b96:	e003      	b.n	8000ba0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b98:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000b9c:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ba0:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000ba2:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000ba4:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000ba6:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ba8:	6158      	str	r0, [r3, #20]
 8000baa:	e02a      	b.n	8000c02 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000bac:	68a4      	ldr	r4, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bae:	432a      	orrs	r2, r5
 8000bb0:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000bb4:	1d21      	adds	r1, r4, #4
 8000bb6:	62d9      	str	r1, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bb8:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000bba:	7822      	ldrb	r2, [r4, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000bbc:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000bbe:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000bc0:	b142      	cbz	r2, 8000bd4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 8000bc2:	2a01      	cmp	r2, #1
 8000bc4:	d021      	beq.n	8000c0a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x106>
                assert(0 && "Unsupported format");
 8000bc6:	4b1f      	ldr	r3, [pc, #124]	; (8000c44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000bc8:	4a1f      	ldr	r2, [pc, #124]	; (8000c48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8000bca:	4820      	ldr	r0, [pc, #128]	; (8000c4c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8000bcc:	f44f 7189 	mov.w	r1, #274	; 0x112
 8000bd0:	f01f fd24 	bl	802061c <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000bd4:	69da      	ldr	r2, [r3, #28]
 8000bd6:	8861      	ldrh	r1, [r4, #2]
 8000bd8:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000bdc:	3901      	subs	r1, #1
 8000bde:	f022 0210 	bic.w	r2, r2, #16
 8000be2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000be6:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000be8:	2001      	movs	r0, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000bea:	4b14      	ldr	r3, [pc, #80]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000bec:	69da      	ldr	r2, [r3, #28]
 8000bee:	f042 0220 	orr.w	r2, r2, #32
 8000bf2:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000bf4:	69da      	ldr	r2, [r3, #28]
 8000bf6:	0692      	lsls	r2, r2, #26
 8000bf8:	d4fc      	bmi.n	8000bf4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf0>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000bfa:	2210      	movs	r2, #16
 8000bfc:	609a      	str	r2, [r3, #8]
            if(blend)
 8000bfe:	2800      	cmp	r0, #0
 8000c00:	d0bd      	beq.n	8000b7e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7a>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000c02:	4a13      	ldr	r2, [pc, #76]	; (8000c50 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000c04:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000c06:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c0a:	8862      	ldrh	r2, [r4, #2]
 8000c0c:	69d9      	ldr	r1, [r3, #28]
 8000c0e:	1e54      	subs	r4, r2, #1
 8000c10:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000c14:	f022 0210 	bic.w	r2, r2, #16
 8000c18:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
                if(blitOp.alpha == 255)
 8000c1c:	f1bc 00ff 	subs.w	r0, ip, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c20:	f042 0210 	orr.w	r2, r2, #16
                if(blitOp.alpha == 255)
 8000c24:	bf18      	it	ne
 8000c26:	2001      	movne	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c28:	61da      	str	r2, [r3, #28]
                break;
 8000c2a:	e7de      	b.n	8000bea <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c2c:	f444 3400 	orr.w	r4, r4, #131072	; 0x20000
 8000c30:	61dc      	str	r4, [r3, #28]
 8000c32:	e7b8      	b.n	8000ba6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000c34:	f240 2201 	movw	r2, #513	; 0x201
 8000c38:	e7e4      	b.n	8000c04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
 8000c3a:	bf00      	nop
 8000c3c:	4002b000 	.word	0x4002b000
 8000c40:	00010201 	.word	0x00010201
 8000c44:	08021d14 	.word	0x08021d14
 8000c48:	08021d2e 	.word	0x08021d2e
 8000c4c:	08021c7d 	.word	0x08021c7d
 8000c50:	00020201 	.word	0x00020201

08000c54 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000c54:	b570      	push	{r4, r5, r6, lr}
 8000c56:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c58:	7f89      	ldrb	r1, [r1, #30]
 8000c5a:	f7ff ff35 	bl	8000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c5e:	8aa6      	ldrh	r6, [r4, #20]
 8000c60:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c62:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c64:	4b15      	ldr	r3, [pc, #84]	; (8000cbc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c66:	6925      	ldr	r5, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c68:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c6a:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c6e:	1b92      	subs	r2, r2, r6
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c70:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c72:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c74:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000c76:	6826      	ldr	r6, [r4, #0]
 8000c78:	68e1      	ldr	r1, [r4, #12]
 8000c7a:	2e08      	cmp	r6, #8
 8000c7c:	d10d      	bne.n	8000c9a <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c7e:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c80:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000c82:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000c84:	7f20      	ldrb	r0, [r4, #28]
 8000c86:	4a0e      	ldr	r2, [pc, #56]	; (8000cc0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000c88:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000c8c:	61da      	str	r2, [r3, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000c8e:	4a0d      	ldr	r2, [pc, #52]	; (8000cc4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000c90:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c92:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c94:	60dd      	str	r5, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000c96:	601a      	str	r2, [r3, #0]
    }
}
 8000c98:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000c9a:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000c9c:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000c9e:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000ca0:	0948      	lsrs	r0, r1, #5
 8000ca2:	0a0a      	lsrs	r2, r1, #8
 8000ca4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8000ca8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8000cac:	4302      	orrs	r2, r0
 8000cae:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000cb2:	430a      	orrs	r2, r1
 8000cb4:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000cb6:	4a04      	ldr	r2, [pc, #16]	; (8000cc8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000cb8:	e7ed      	b.n	8000c96 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000cba:	bf00      	nop
 8000cbc:	4002b000 	.word	0x4002b000
 8000cc0:	00010009 	.word	0x00010009
 8000cc4:	00020201 	.word	0x00020201
 8000cc8:	00030201 	.word	0x00030201

08000ccc <_ZN8touchgfx5paint6rgb5658tearDownEv>:
    * @brief Waits until previous DMA drawing operation has finished
    */
    void tearDown()
    {
        /* Wait for DMA2D to finish last run */
        while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000ccc:	4b03      	ldr	r3, [pc, #12]	; (8000cdc <_ZN8touchgfx5paint6rgb5658tearDownEv+0x10>)
 8000cce:	681a      	ldr	r2, [r3, #0]
 8000cd0:	07d2      	lsls	r2, r2, #31
 8000cd2:	d4fc      	bmi.n	8000cce <_ZN8touchgfx5paint6rgb5658tearDownEv+0x2>

        /* Clear transfer flags */
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cd4:	2223      	movs	r2, #35	; 0x23
 8000cd6:	609a      	str	r2, [r3, #8]
    }
 8000cd8:	4770      	bx	lr
 8000cda:	bf00      	nop
 8000cdc:	4002b000 	.word	0x4002b000

08000ce0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
    *
    * @brief Renders Canvas Widget chunks using DMA.
    * This functions will not generate an interrupt, and will not affect the DMA queue.
    */
    void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
    {
 8000ce0:	b530      	push	{r4, r5, lr}
        /* Wait for DMA2D to finish last run */
        while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000ce2:	4c0f      	ldr	r4, [pc, #60]	; (8000d20 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8000ce4:	6825      	ldr	r5, [r4, #0]
 8000ce6:	07ed      	lsls	r5, r5, #31
 8000ce8:	d4fc      	bmi.n	8000ce4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

        /* Clear transfer flags */
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cea:	2523      	movs	r5, #35	; 0x23

        /* DMA2D OPFCCR register configuration */
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

        /* Configure DMA2D data size */
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cec:	0409      	lsls	r1, r1, #16
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cee:	60a5      	str	r5, [r4, #8]
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cf0:	f041 0101 	orr.w	r1, r1, #1
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000cf4:	2502      	movs	r5, #2

        /* Configure DMA2D destination address */
        WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

        if (alpha < 0xFF)
 8000cf6:	2bff      	cmp	r3, #255	; 0xff
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000cf8:	6365      	str	r5, [r4, #52]	; 0x34
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cfa:	6461      	str	r1, [r4, #68]	; 0x44
        WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000cfc:	63e0      	str	r0, [r4, #60]	; 0x3c
        if (alpha < 0xFF)
 8000cfe:	d00a      	beq.n	8000d16 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
        {
            /* Write DMA2D BGPFCCR register */
            WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

            /* Write DMA2D FGPFCCR register */
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d00:	4908      	ldr	r1, [pc, #32]	; (8000d24 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
            WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000d02:	6265      	str	r5, [r4, #36]	; 0x24
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d04:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8000d08:	61e3      	str	r3, [r4, #28]

            /* Configure DMA2D source address */
            WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

            /* Enable the Peripheral and Enable the transfer complete interrupt */
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000d0a:	4b07      	ldr	r3, [pc, #28]	; (8000d28 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
            WRITE_REG(DMA2D->FGCOLR, color);
 8000d0c:	6222      	str	r2, [r4, #32]
            WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8000d0e:	6160      	str	r0, [r4, #20]
            WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8000d10:	60e0      	str	r0, [r4, #12]

            /* Set color */
            WRITE_REG(DMA2D->OCOLR, color565);

            /* Enable the Peripheral and Enable the transfer complete interrupt */
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000d12:	6023      	str	r3, [r4, #0]
        }
    }
 8000d14:	bd30      	pop	{r4, r5, pc}
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000d16:	61e5      	str	r5, [r4, #28]
            WRITE_REG(DMA2D->OCOLR, color565);
 8000d18:	9b03      	ldr	r3, [sp, #12]
 8000d1a:	63a3      	str	r3, [r4, #56]	; 0x38
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000d1c:	4b03      	ldr	r3, [pc, #12]	; (8000d2c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 8000d1e:	e7f8      	b.n	8000d12 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 8000d20:	4002b000 	.word	0x4002b000
 8000d24:	00010009 	.word	0x00010009
 8000d28:	00020001 	.word	0x00020001
 8000d2c:	00030001 	.word	0x00030001

08000d30 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000d30:	2001      	movs	r0, #1
 8000d32:	4770      	bx	lr

08000d34 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000d34:	2038      	movs	r0, #56	; 0x38
 8000d36:	4770      	bx	lr

08000d38 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000d38:	2338      	movs	r3, #56	; 0x38
 8000d3a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d3e:	3008      	adds	r0, #8
 8000d40:	4770      	bx	lr

08000d42 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000d42:	2338      	movs	r3, #56	; 0x38
 8000d44:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d48:	3008      	adds	r0, #8
 8000d4a:	4770      	bx	lr

08000d4c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d4c:	2001      	movs	r0, #1
 8000d4e:	4770      	bx	lr

08000d50 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d50:	f242 6018 	movw	r0, #9752	; 0x2618
 8000d54:	4770      	bx	lr

08000d56 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d56:	f242 6318 	movw	r3, #9752	; 0x2618
 8000d5a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d5e:	3008      	adds	r0, #8
 8000d60:	4770      	bx	lr

08000d62 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d62:	f242 6318 	movw	r3, #9752	; 0x2618
 8000d66:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d6a:	3008      	adds	r0, #8
 8000d6c:	4770      	bx	lr

08000d6e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d6e:	2001      	movs	r0, #1
 8000d70:	4770      	bx	lr

08000d72 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d72:	2010      	movs	r0, #16
 8000d74:	4770      	bx	lr

08000d76 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d76:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d7a:	3008      	adds	r0, #8
 8000d7c:	4770      	bx	lr

08000d7e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d7e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d82:	3008      	adds	r0, #8
 8000d84:	4770      	bx	lr

08000d86 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 8000d86:	4608      	mov	r0, r1
 8000d88:	f001 bc6a 	b.w	8002660 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000d8c:	b510      	push	{r4, lr}
 8000d8e:	4b03      	ldr	r3, [pc, #12]	; (8000d9c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8000d90:	6003      	str	r3, [r0, #0]
 8000d92:	4604      	mov	r4, r0
 8000d94:	f009 fd2f 	bl	800a7f6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000d98:	4620      	mov	r0, r4
 8000d9a:	bd10      	pop	{r4, pc}
 8000d9c:	08021e2c 	.word	0x08021e2c

08000da0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8000da0:	b510      	push	{r4, lr}
 8000da2:	4604      	mov	r4, r0
 8000da4:	f7ff fff2 	bl	8000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000da8:	4620      	mov	r0, r4
 8000daa:	2140      	movs	r1, #64	; 0x40
 8000dac:	f01f fb82 	bl	80204b4 <_ZdlPvj>
 8000db0:	4620      	mov	r0, r4
 8000db2:	bd10      	pop	{r4, pc}

08000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000db4:	b510      	push	{r4, lr}
 8000db6:	4b03      	ldr	r3, [pc, #12]	; (8000dc4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000db8:	6003      	str	r3, [r0, #0]
 8000dba:	4604      	mov	r4, r0
 8000dbc:	f009 fd1b 	bl	800a7f6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000dc0:	4620      	mov	r0, r4
 8000dc2:	bd10      	pop	{r4, pc}
 8000dc4:	08021df8 	.word	0x08021df8

08000dc8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000dc8:	b510      	push	{r4, lr}
 8000dca:	4604      	mov	r4, r0
 8000dcc:	f7ff fff2 	bl	8000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dd0:	4620      	mov	r0, r4
 8000dd2:	f242 6120 	movw	r1, #9760	; 0x2620
 8000dd6:	f01f fb6d 	bl	80204b4 <_ZdlPvj>
 8000dda:	4620      	mov	r0, r4
 8000ddc:	bd10      	pop	{r4, pc}
	...

08000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000de0:	b510      	push	{r4, lr}
 8000de2:	4b03      	ldr	r3, [pc, #12]	; (8000df0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000de4:	6003      	str	r3, [r0, #0]
 8000de6:	4604      	mov	r4, r0
 8000de8:	f009 fd05 	bl	800a7f6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000dec:	4620      	mov	r0, r4
 8000dee:	bd10      	pop	{r4, pc}
 8000df0:	08021dc4 	.word	0x08021dc4

08000df4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000df4:	b510      	push	{r4, lr}
 8000df6:	4604      	mov	r4, r0
 8000df8:	f7ff fff2 	bl	8000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dfc:	4620      	mov	r0, r4
 8000dfe:	2118      	movs	r1, #24
 8000e00:	f01f fb58 	bl	80204b4 <_ZdlPvj>
 8000e04:	4620      	mov	r0, r4
 8000e06:	bd10      	pop	{r4, pc}

08000e08 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000e08:	b510      	push	{r4, lr}
 8000e0a:	4b09      	ldr	r3, [pc, #36]	; (8000e30 <_ZN12FrontendHeapD1Ev+0x28>)
 8000e0c:	6003      	str	r3, [r0, #0]
 8000e0e:	4604      	mov	r4, r0
 8000e10:	f500 5019 	add.w	r0, r0, #9792	; 0x2640
 8000e14:	300c      	adds	r0, #12
 8000e16:	f7ff ffb9 	bl	8000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000e1a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000e1e:	f7ff ffc9 	bl	8000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e22:	f104 0014 	add.w	r0, r4, #20
 8000e26:	f7ff ffdb 	bl	8000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e2a:	4620      	mov	r0, r4
 8000e2c:	bd10      	pop	{r4, pc}
 8000e2e:	bf00      	nop
 8000e30:	08021e60 	.word	0x08021e60

08000e34 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000e34:	b508      	push	{r3, lr}
 8000e36:	4802      	ldr	r0, [pc, #8]	; (8000e40 <__tcf_0+0xc>)
 8000e38:	f7ff ffe6 	bl	8000e08 <_ZN12FrontendHeapD1Ev>
 8000e3c:	bd08      	pop	{r3, pc}
 8000e3e:	bf00      	nop
 8000e40:	200001a4 	.word	0x200001a4

08000e44 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000e44:	b510      	push	{r4, lr}
 8000e46:	4604      	mov	r4, r0
 8000e48:	f7ff ffde 	bl	8000e08 <_ZN12FrontendHeapD1Ev>
 8000e4c:	4620      	mov	r0, r4
 8000e4e:	f242 71e8 	movw	r1, #10216	; 0x27e8
 8000e52:	f01f fb2f 	bl	80204b4 <_ZdlPvj>
 8000e56:	4620      	mov	r0, r4
 8000e58:	bd10      	pop	{r4, pc}
	...

08000e5c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000e5c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000e60:	f001 f9b8 	bl	80021d4 <_ZN14BitmapDatabase11getInstanceEv>
 8000e64:	4605      	mov	r5, r0
 8000e66:	f001 f9b9 	bl	80021dc <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000e6a:	2400      	movs	r4, #0
 8000e6c:	4601      	mov	r1, r0
 8000e6e:	4623      	mov	r3, r4
 8000e70:	4628      	mov	r0, r5
 8000e72:	4622      	mov	r2, r4
 8000e74:	9400      	str	r4, [sp, #0]
 8000e76:	f013 fa1d 	bl	80142b4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000e7a:	4b26      	ldr	r3, [pc, #152]	; (8000f14 <touchgfx_init+0xb8>)
 8000e7c:	4a26      	ldr	r2, [pc, #152]	; (8000f18 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8000e7e:	4d27      	ldr	r5, [pc, #156]	; (8000f1c <touchgfx_init+0xc0>)
 8000e80:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000e82:	4620      	mov	r0, r4
 8000e84:	f003 ff8e 	bl	8004da4 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000e88:	4825      	ldr	r0, [pc, #148]	; (8000f20 <touchgfx_init+0xc4>)
 8000e8a:	f013 f97b 	bl	8014184 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000e8e:	782b      	ldrb	r3, [r5, #0]
 8000e90:	f3bf 8f5b 	dmb	ish
 8000e94:	07db      	lsls	r3, r3, #31
 8000e96:	d436      	bmi.n	8000f06 <touchgfx_init+0xaa>
 8000e98:	4628      	mov	r0, r5
 8000e9a:	f01f fb0d 	bl	80204b8 <__cxa_guard_acquire>
 8000e9e:	b390      	cbz	r0, 8000f06 <touchgfx_init+0xaa>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8000ea0:	4c20      	ldr	r4, [pc, #128]	; (8000f24 <touchgfx_init+0xc8>)
 8000ea2:	4f21      	ldr	r7, [pc, #132]	; (8000f28 <touchgfx_init+0xcc>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000ea4:	4b21      	ldr	r3, [pc, #132]	; (8000f2c <touchgfx_init+0xd0>)
 8000ea6:	6023      	str	r3, [r4, #0]
 8000ea8:	f107 0644 	add.w	r6, r7, #68	; 0x44
 8000eac:	f104 0014 	add.w	r0, r4, #20
 8000eb0:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8000eb4:	6060      	str	r0, [r4, #4]
 8000eb6:	f8c4 8008 	str.w	r8, [r4, #8]
 8000eba:	60e7      	str	r7, [r4, #12]
 8000ebc:	6126      	str	r6, [r4, #16]
 8000ebe:	f009 fc9b 	bl	800a7f8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ec2:	4b1b      	ldr	r3, [pc, #108]	; (8000f30 <touchgfx_init+0xd4>)
 8000ec4:	6163      	str	r3, [r4, #20]
 8000ec6:	4640      	mov	r0, r8
 8000ec8:	f009 fc96 	bl	800a7f8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ecc:	4b19      	ldr	r3, [pc, #100]	; (8000f34 <touchgfx_init+0xd8>)
 8000ece:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000ed0:	4638      	mov	r0, r7
 8000ed2:	f009 fc91 	bl	800a7f8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ed6:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
 8000eda:	4a17      	ldr	r2, [pc, #92]	; (8000f38 <touchgfx_init+0xdc>)
 8000edc:	f8c3 264c 	str.w	r2, [r3, #1612]	; 0x64c
 8000ee0:	f203 608c 	addw	r0, r3, #1676	; 0x68c
 8000ee4:	f003 ffda 	bl	8004e9c <_ZN5ModelC1Ev>
 8000ee8:	4622      	mov	r2, r4
 8000eea:	f107 0140 	add.w	r1, r7, #64	; 0x40
 8000eee:	4630      	mov	r0, r6
 8000ef0:	f003 ffca 	bl	8004e88 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8000ef4:	4630      	mov	r0, r6
 8000ef6:	f001 fbb3 	bl	8002660 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8000efa:	4810      	ldr	r0, [pc, #64]	; (8000f3c <touchgfx_init+0xe0>)
 8000efc:	f01f fbac 	bl	8020658 <atexit>
 8000f00:	4628      	mov	r0, r5
 8000f02:	f01f fae5 	bl	80204d0 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8000f06:	480e      	ldr	r0, [pc, #56]	; (8000f40 <touchgfx_init+0xe4>)
}
 8000f08:	b002      	add	sp, #8
 8000f0a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8000f0e:	f7ff bc3e 	b.w	800078e <_ZN11TouchGFXHAL10initializeEv>
 8000f12:	bf00      	nop
 8000f14:	200154ec 	.word	0x200154ec
 8000f18:	200037ac 	.word	0x200037ac
 8000f1c:	200001a0 	.word	0x200001a0
 8000f20:	20000008 	.word	0x20000008
 8000f24:	200001a4 	.word	0x200001a4
 8000f28:	200027f0 	.word	0x200027f0
 8000f2c:	08021e60 	.word	0x08021e60
 8000f30:	08021dc4 	.word	0x08021dc4
 8000f34:	08021df8 	.word	0x08021df8
 8000f38:	08021e2c 	.word	0x08021e2c
 8000f3c:	08000e35 	.word	0x08000e35
 8000f40:	20003730 	.word	0x20003730

08000f44 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8000f44:	4801      	ldr	r0, [pc, #4]	; (8000f4c <touchgfx_taskEntry+0x8>)
 8000f46:	f7ff bc24 	b.w	8000792 <_ZN11TouchGFXHAL9taskEntryEv>
 8000f4a:	bf00      	nop
 8000f4c:	20003730 	.word	0x20003730

08000f50 <_GLOBAL__sub_I_touchgfx_init>:
}
 8000f50:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
 8000f52:	4c23      	ldr	r4, [pc, #140]	; (8000fe0 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static STM32DMA dma;
 8000f54:	4e23      	ldr	r6, [pc, #140]	; (8000fe4 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8000f56:	4b24      	ldr	r3, [pc, #144]	; (8000fe8 <_GLOBAL__sub_I_touchgfx_init+0x98>)
static LCD16bpp display;
 8000f58:	4d24      	ldr	r5, [pc, #144]	; (8000fec <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 8000f5a:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8000f5c:	4630      	mov	r0, r6
 8000f5e:	f7ff fd79 	bl	8000a54 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8000f62:	4628      	mov	r0, r5
 8000f64:	f016 fab0 	bl	80174c8 <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 8000f68:	4b21      	ldr	r3, [pc, #132]	; (8000ff0 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
        instance = this;
 8000f6a:	4822      	ldr	r0, [pc, #136]	; (8000ff4 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
          lastRenderMethod(HARDWARE)
 8000f6c:	60dc      	str	r4, [r3, #12]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f6e:	4c22      	ldr	r4, [pc, #136]	; (8000ff8 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
        instance = this;
 8000f70:	6003      	str	r3, [r0, #0]
          lastRenderMethod(HARDWARE)
 8000f72:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f74:	20f0      	movs	r0, #240	; 0xf0
          lastRenderMethod(HARDWARE)
 8000f76:	f44f 7180 	mov.w	r1, #256	; 0x100
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f7a:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 8000f7c:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f80:	4c1e      	ldr	r4, [pc, #120]	; (8000ffc <_GLOBAL__sub_I_touchgfx_init+0xac>)
          lastRenderMethod(HARDWARE)
 8000f82:	491f      	ldr	r1, [pc, #124]	; (8001000 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f84:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 8000f86:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f8a:	4c1e      	ldr	r4, [pc, #120]	; (8001004 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8000f8c:	861a      	strh	r2, [r3, #48]	; 0x30
          lastRenderMethod(HARDWARE)
 8000f8e:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f92:	f44f 70a0 	mov.w	r0, #320	; 0x140
          lastRenderMethod(HARDWARE)
 8000f96:	6759      	str	r1, [r3, #116]	; 0x74
 8000f98:	2101      	movs	r1, #1
 8000f9a:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8000f9e:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8000fa2:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8000fa6:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8000faa:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8000fae:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8000fb2:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 8000fb6:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
 8000fba:	661a      	str	r2, [r3, #96]	; 0x60
 8000fbc:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 8000fc0:	671a      	str	r2, [r3, #112]	; 0x70
 8000fc2:	e9c3 6501 	strd	r6, r5, [r3, #4]
 8000fc6:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000fca:	8020      	strh	r0, [r4, #0]
 8000fcc:	4c0e      	ldr	r4, [pc, #56]	; (8001008 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8000fce:	f883 1034 	strb.w	r1, [r3, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000fd2:	8020      	strh	r0, [r4, #0]
        DISPLAY_ROTATION = rotate0;
 8000fd4:	480d      	ldr	r0, [pc, #52]	; (800100c <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8000fd6:	7002      	strb	r2, [r0, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8000fd8:	4a0d      	ldr	r2, [pc, #52]	; (8001010 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8000fda:	601a      	str	r2, [r3, #0]
}
 8000fdc:	bd70      	pop	{r4, r5, r6, pc}
 8000fde:	bf00      	nop
 8000fe0:	2000298c 	.word	0x2000298c
 8000fe4:	20002990 	.word	0x20002990
 8000fe8:	080218b4 	.word	0x080218b4
 8000fec:	200037b0 	.word	0x200037b0
 8000ff0:	20003730 	.word	0x20003730
 8000ff4:	20015488 	.word	0x20015488
 8000ff8:	2001547c 	.word	0x2001547c
 8000ffc:	20015482 	.word	0x20015482
 8001000:	01000001 	.word	0x01000001
 8001004:	2001547e 	.word	0x2001547e
 8001008:	20015484 	.word	0x20015484
 800100c:	20015480 	.word	0x20015480
 8001010:	08021a40 	.word	0x08021a40

08001014 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001014:	4801      	ldr	r0, [pc, #4]	; (800101c <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001016:	f7ff bcf9 	b.w	8000a0c <_ZN8STM32DMAD1Ev>
 800101a:	bf00      	nop
 800101c:	20002990 	.word	0x20002990

08001020 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001020:	4b03      	ldr	r3, [pc, #12]	; (8001030 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 8001022:	2290      	movs	r2, #144	; 0x90
 8001024:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 8001028:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 800102c:	4770      	bx	lr
 800102e:	bf00      	nop
 8001030:	e000e100 	.word	0xe000e100

08001034 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001034:	4a09      	ldr	r2, [pc, #36]	; (800105c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8001036:	490a      	ldr	r1, [pc, #40]	; (8001060 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001038:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800103a:	480a      	ldr	r0, [pc, #40]	; (8001064 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800103c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001040:	3b01      	subs	r3, #1
 8001042:	b29b      	uxth	r3, r3
 8001044:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001046:	6911      	ldr	r1, [r2, #16]
 8001048:	f3c1 010a 	ubfx	r1, r1, #0, #11
 800104c:	3901      	subs	r1, #1
 800104e:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8001050:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8001052:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001054:	f043 0301 	orr.w	r3, r3, #1
 8001058:	6353      	str	r3, [r2, #52]	; 0x34
}
 800105a:	4770      	bx	lr
 800105c:	40016800 	.word	0x40016800
 8001060:	2000382c 	.word	0x2000382c
 8001064:	2000382a 	.word	0x2000382a

08001068 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001068:	4b01      	ldr	r3, [pc, #4]	; (8001070 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 800106a:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 800106e:	4770      	bx	lr
 8001070:	40016800 	.word	0x40016800

08001074 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001074:	4b02      	ldr	r3, [pc, #8]	; (8001080 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001076:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001078:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800107c:	625a      	str	r2, [r3, #36]	; 0x24
}
 800107e:	4770      	bx	lr
 8001080:	40016800 	.word	0x40016800

08001084 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001084:	b570      	push	{r4, r5, r6, lr}
 8001086:	4604      	mov	r4, r0
    HAL::initialize();
 8001088:	f009 febd 	bl	800ae06 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800108c:	6823      	ldr	r3, [r4, #0]
 800108e:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8001090:	f00f fef4 	bl	8010e7c <_ZN8touchgfx11Application11getInstanceEv>
 8001094:	4601      	mov	r1, r0
 8001096:	4620      	mov	r0, r4
 8001098:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800109a:	6823      	ldr	r3, [r4, #0]
 800109c:	4a05      	ldr	r2, [pc, #20]	; (80010b4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800109e:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 80010a2:	4620      	mov	r0, r4
 80010a4:	46ac      	mov	ip, r5
 80010a6:	2300      	movs	r3, #0
}
 80010a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80010ac:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 80010b0:	4760      	bx	ip
 80010b2:	bf00      	nop
 80010b4:	d0025800 	.word	0xd0025800

080010b8 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 80010b8:	f009 be8c 	b.w	800add4 <_ZN8touchgfx3HAL10beginFrameEv>

080010bc <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    if (frameBufferUpdatedThisFrame)
 80010bc:	f890 304b 	ldrb.w	r3, [r0, #75]	; 0x4b
 80010c0:	b113      	cbz	r3, 80010c8 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xc>
        refreshRequested = true;
 80010c2:	4b02      	ldr	r3, [pc, #8]	; (80010cc <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x10>)
 80010c4:	2201      	movs	r2, #1
 80010c6:	701a      	strb	r2, [r3, #0]
    HAL::endFrame();
 80010c8:	f009 be90 	b.w	800adec <_ZN8touchgfx3HAL8endFrameEv>
 80010cc:	20003828 	.word	0x20003828

080010d0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80010d0:	f009 be4a 	b.w	800ad68 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080010d4 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80010d4:	f009 bfa3 	b.w	800b01e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080010d8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010d8:	4b03      	ldr	r3, [pc, #12]	; (80010e8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 80010da:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80010de:	609a      	str	r2, [r3, #8]
 80010e0:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80010e4:	609a      	str	r2, [r3, #8]
}
 80010e6:	4770      	bx	lr
 80010e8:	e000e100 	.word	0xe000e100

080010ec <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010ec:	4b08      	ldr	r3, [pc, #32]	; (8001110 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 80010ee:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80010f2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80010f6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80010fa:	f3bf 8f6f 	isb	sy
 80010fe:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001102:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001106:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800110a:	f3bf 8f6f 	isb	sy
}
 800110e:	4770      	bx	lr
 8001110:	e000e100 	.word	0xe000e100

08001114 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001114:	b510      	push	{r4, lr}
        return instance;
 8001116:	4c14      	ldr	r4, [pc, #80]	; (8001168 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001118:	6823      	ldr	r3, [r4, #0]
 800111a:	b323      	cbz	r3, 8001166 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 800111c:	4b13      	ldr	r3, [pc, #76]	; (800116c <HAL_LTDC_LineEventCallback+0x58>)
 800111e:	4a14      	ldr	r2, [pc, #80]	; (8001170 <HAL_LTDC_LineEventCallback+0x5c>)
 8001120:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001122:	8811      	ldrh	r1, [r2, #0]
 8001124:	428b      	cmp	r3, r1
 8001126:	d113      	bne.n	8001150 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001128:	4b12      	ldr	r3, [pc, #72]	; (8001174 <HAL_LTDC_LineEventCallback+0x60>)
 800112a:	8819      	ldrh	r1, [r3, #0]
 800112c:	f006 f856 	bl	80071dc <HAL_LTDC_ProgramLineEvent>
 8001130:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8001132:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8001136:	3301      	adds	r3, #1
 8001138:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 800113c:	f7ff fc14 	bl	8000968 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001140:	6820      	ldr	r0, [r4, #0]
 8001142:	f00a fb97 	bl	800b874 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001146:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 800114a:	2000      	movs	r0, #0
 800114c:	f7ff baf8 	b.w	8000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001150:	f006 f844 	bl	80071dc <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001154:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8001156:	6803      	ldr	r3, [r0, #0]
 8001158:	6a1b      	ldr	r3, [r3, #32]
 800115a:	4798      	blx	r3
    }
 800115c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001160:	2000      	movs	r0, #0
 8001162:	f7ff baee 	b.w	8000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001166:	bd10      	pop	{r4, pc}
 8001168:	20015488 	.word	0x20015488
 800116c:	40016800 	.word	0x40016800
 8001170:	2000382c 	.word	0x2000382c
 8001174:	2000382a 	.word	0x2000382a

08001178 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8001178:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;
  
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800117a:	4b06      	ldr	r3, [pc, #24]	; (8001194 <SPI5_Write+0x1c>)
{
 800117c:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001180:	681b      	ldr	r3, [r3, #0]
 8001182:	4805      	ldr	r0, [pc, #20]	; (8001198 <SPI5_Write+0x20>)
 8001184:	2201      	movs	r2, #1
 8001186:	f10d 0106 	add.w	r1, sp, #6
 800118a:	f006 fd38 	bl	8007bfe <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 800118e:	b003      	add	sp, #12
 8001190:	f85d fb04 	ldr.w	pc, [sp], #4
 8001194:	20000010 	.word	0x20000010
 8001198:	20003a58 	.word	0x20003a58

0800119c <CountAvgFrom60sec>:
			result+=ladowarka.PomiaryCoSec[i];
 800119c:	490c      	ldr	r1, [pc, #48]	; (80011d0 <CountAvgFrom60sec+0x34>)
float CountAvgFrom60sec(){
 800119e:	b082      	sub	sp, #8
 80011a0:	2300      	movs	r3, #0
			result+=ladowarka.PomiaryCoSec[i];
 80011a2:	f203 225e 	addw	r2, r3, #606	; 0x25e
 80011a6:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 80011aa:	ed92 7a00 	vldr	s14, [r2]
 80011ae:	eddd 7a01 	vldr	s15, [sp, #4]
		for (uint8_t i=0;i<60;i++)
 80011b2:	3301      	adds	r3, #1
			result+=ladowarka.PomiaryCoSec[i];
 80011b4:	ee77 7a87 	vadd.f32	s15, s15, s14
		for (uint8_t i=0;i<60;i++)
 80011b8:	2b3c      	cmp	r3, #60	; 0x3c
			result+=ladowarka.PomiaryCoSec[i];
 80011ba:	edcd 7a01 	vstr	s15, [sp, #4]
		for (uint8_t i=0;i<60;i++)
 80011be:	d1f0      	bne.n	80011a2 <CountAvgFrom60sec+0x6>
	return result/60;
 80011c0:	ed9d 0a01 	vldr	s0, [sp, #4]
}
 80011c4:	eddf 7a03 	vldr	s15, [pc, #12]	; 80011d4 <CountAvgFrom60sec+0x38>
 80011c8:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80011cc:	b002      	add	sp, #8
 80011ce:	4770      	bx	lr
 80011d0:	20003af0 	.word	0x20003af0
 80011d4:	42700000 	.word	0x42700000

080011d8 <ZadanieDwa>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_ZadanieDwa */
__weak void ZadanieDwa(void *argument)
{
 80011d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	  static volatile uint32_t value=0; //actual value of adc measurement on battery
	  static volatile uint32_t value2=0; //actual value of adc measurement on battery  + resistor.

	  static int sec0to59=0;

		if(ladowarka.Minelo100ms){ //jesli zostalo wykryte przerwanie z liniczka7
 80011dc:	4c63      	ldr	r4, [pc, #396]	; (800136c <ZadanieDwa+0x194>)
			ladowarka.Minelo100ms=0; //kasuj flage

					//pomiar napiecia baterii
					HAL_ADC_Start(&hadc1);
 80011de:	4d64      	ldr	r5, [pc, #400]	; (8001370 <ZadanieDwa+0x198>)
		if(ladowarka.Minelo100ms){ //jesli zostalo wykryte przerwanie z liniczka7
 80011e0:	f8d4 3a6c 	ldr.w	r3, [r4, #2668]	; 0xa6c
 80011e4:	2b00      	cmp	r3, #0
 80011e6:	f000 8096 	beq.w	8001316 <ZadanieDwa+0x13e>
			ladowarka.Minelo100ms=0; //kasuj flage
 80011ea:	2300      	movs	r3, #0
					HAL_ADC_Start(&hadc1);
 80011ec:	4628      	mov	r0, r5
			ladowarka.Minelo100ms=0; //kasuj flage
 80011ee:	f8c4 3a6c 	str.w	r3, [r4, #2668]	; 0xa6c
					value += HAL_ADC_GetValue(&hadc1);
 80011f2:	4f60      	ldr	r7, [pc, #384]	; (8001374 <ZadanieDwa+0x19c>)

					//pomiar napiecia na baterii i rezystorze
					HAL_ADC_Start(&hadc2);
					value2 += HAL_ADC_GetValue(&hadc2);
					liczbaPomiarow++;
 80011f4:	f8df 819c 	ldr.w	r8, [pc, #412]	; 8001394 <ZadanieDwa+0x1bc>
					value2 += HAL_ADC_GetValue(&hadc2);
 80011f8:	4e5f      	ldr	r6, [pc, #380]	; (8001378 <ZadanieDwa+0x1a0>)
					HAL_ADC_Start(&hadc1);
 80011fa:	f004 fe43 	bl	8005e84 <HAL_ADC_Start>
					value += HAL_ADC_GetValue(&hadc1);
 80011fe:	4628      	mov	r0, r5
 8001200:	f004 feb4 	bl	8005f6c <HAL_ADC_GetValue>
 8001204:	683b      	ldr	r3, [r7, #0]
 8001206:	4418      	add	r0, r3
 8001208:	6038      	str	r0, [r7, #0]
					HAL_ADC_Start(&hadc2);
 800120a:	485c      	ldr	r0, [pc, #368]	; (800137c <ZadanieDwa+0x1a4>)
 800120c:	f004 fe3a 	bl	8005e84 <HAL_ADC_Start>
					value2 += HAL_ADC_GetValue(&hadc2);
 8001210:	485a      	ldr	r0, [pc, #360]	; (800137c <ZadanieDwa+0x1a4>)
 8001212:	f004 feab 	bl	8005f6c <HAL_ADC_GetValue>
					liczbaPomiarow++;
 8001216:	f8d8 2000 	ldr.w	r2, [r8]
					value2 += HAL_ADC_GetValue(&hadc2);
 800121a:	6833      	ldr	r3, [r6, #0]
					liczbaPomiarow++;
 800121c:	3201      	adds	r2, #1
 800121e:	210a      	movs	r1, #10
					value2 += HAL_ADC_GetValue(&hadc2);
 8001220:	4418      	add	r0, r3
					liczbaPomiarow++;
 8001222:	f8c8 2000 	str.w	r2, [r8]
 8001226:	fb92 f3f1 	sdiv	r3, r2, r1
 800122a:	fb01 2213 	mls	r2, r1, r3, r2
					value2 += HAL_ADC_GetValue(&hadc2);
 800122e:	6030      	str	r0, [r6, #0]

					/****** jesli minela sekunda ->10tickow co 100ms********/

					if(liczbaPomiarow%10==0){ //jesli minela sekunda
 8001230:	2a00      	cmp	r2, #0
 8001232:	d170      	bne.n	8001316 <ZadanieDwa+0x13e>
						ladowarka.BatteryVoltage=(value/10) * Vdd / 4096.0f; // napiecie na baterii
 8001234:	683a      	ldr	r2, [r7, #0]
 8001236:	fbb2 f3f1 	udiv	r3, r2, r1
 800123a:	ee07 3a10 	vmov	s14, r3
 800123e:	ed9f 6a50 	vldr	s12, [pc, #320]	; 8001380 <ZadanieDwa+0x1a8>
 8001242:	eddf 6a50 	vldr	s13, [pc, #320]	; 8001384 <ZadanieDwa+0x1ac>
 8001246:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800124a:	ee27 7a06 	vmul.f32	s14, s14, s12
 800124e:	ee27 7a26 	vmul.f32	s14, s14, s13
 8001252:	ed84 7a00 	vstr	s14, [r4]
						ladowarka.ChargingCurrent=(value2/10) * Vdd / 4096.0f; // napiecie na baterii i rezystorze,
 8001256:	6833      	ldr	r3, [r6, #0]
 8001258:	fbb3 f3f1 	udiv	r3, r3, r1
 800125c:	ee07 3a90 	vmov	s15, r3
 8001260:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001264:	4b48      	ldr	r3, [pc, #288]	; (8001388 <ZadanieDwa+0x1b0>)
 8001266:	ee67 7a86 	vmul.f32	s15, s15, s12
 800126a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800126e:	edc3 7a00 	vstr	s15, [r3]
						ladowarka.ChargingCurrent=(ladowarka.ChargingCurrent-ladowarka.BatteryVoltage)*1000; //	Jako ze rezystor jest 1Ohm, to prad jest rowny napiecu. wynik w [mA]
 8001272:	edd3 7a00 	vldr	s15, [r3]
 8001276:	ed94 7a00 	vldr	s14, [r4]
 800127a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800127e:	ed9f 7a43 	vldr	s14, [pc, #268]	; 800138c <ZadanieDwa+0x1b4>
 8001282:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001286:	edc3 7a00 	vstr	s15, [r3]

						if (ladowarka.ChargeStarted){ //jesli zaczeto ladwowac
 800128a:	6923      	ldr	r3, [r4, #16]
 800128c:	2b00      	cmp	r3, #0
 800128e:	d03d      	beq.n	800130c <ZadanieDwa+0x134>
							if (ladowarka.CzsasLadowaniaWSec<1) {ladowarka.NapiecieBaterii[0]=ladowarka.BatteryVoltage;ladowarka.narysujPunktNaWykresieMin=1; }//dla 0 pomiaru dodaj od razy do tablicy oraz wyplotuj na obu wykreasch.
 8001290:	f8d4 3a78 	ldr.w	r3, [r4, #2680]	; 0xa78
							ladowarka.CzsasLadowaniaWSec++; //jesli zaczal sie proces ladowana ziwekszja wartosc czas ladowania w sec
							ladowarka.narysujPunktNaWykresie=1; //zezwol na narysowanie danej na wykresie


							/********* dodawanie co 1 sek wartosc pomiaru do tabeli********/
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 8001294:	f8df 9100 	ldr.w	r9, [pc, #256]	; 8001398 <ZadanieDwa+0x1c0>
							if (ladowarka.CzsasLadowaniaWSec<1) {ladowarka.NapiecieBaterii[0]=ladowarka.BatteryVoltage;ladowarka.narysujPunktNaWykresieMin=1; }//dla 0 pomiaru dodaj od razy do tablicy oraz wyplotuj na obu wykreasch.
 8001298:	2b00      	cmp	r3, #0
 800129a:	bfdf      	itttt	le
 800129c:	6823      	ldrle	r3, [r4, #0]
 800129e:	61a3      	strle	r3, [r4, #24]
 80012a0:	2301      	movle	r3, #1
 80012a2:	f8c4 3a74 	strle.w	r3, [r4, #2676]	; 0xa74
							if (ladowarka.BatteryVoltage>ladowarka.MaxBatteryVoltage) ladowarka.MaxBatteryVoltage=ladowarka.BatteryVoltage; //uaktualnij max wartosc.
 80012a6:	ed94 7a00 	vldr	s14, [r4]
 80012aa:	edd4 7a01 	vldr	s15, [r4, #4]
 80012ae:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80012b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80012b6:	bfc4      	itt	gt
 80012b8:	6823      	ldrgt	r3, [r4, #0]
 80012ba:	6063      	strgt	r3, [r4, #4]
							ladowarka.CzsasLadowaniaWSec++; //jesli zaczal sie proces ladowana ziwekszja wartosc czas ladowania w sec
 80012bc:	f8d4 3a78 	ldr.w	r3, [r4, #2680]	; 0xa78
 80012c0:	3301      	adds	r3, #1
 80012c2:	f8c4 3a78 	str.w	r3, [r4, #2680]	; 0xa78
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 80012c6:	f8d9 3000 	ldr.w	r3, [r9]
							ladowarka.narysujPunktNaWykresie=1; //zezwol na narysowanie danej na wykresie
 80012ca:	f04f 0a01 	mov.w	sl, #1
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 80012ce:	eb03 020a 	add.w	r2, r3, sl
 80012d2:	f203 235e 	addw	r3, r3, #606	; 0x25e
							ladowarka.narysujPunktNaWykresie=1; //zezwol na narysowanie danej na wykresie
 80012d6:	f8c4 aa70 	str.w	sl, [r4, #2672]	; 0xa70
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 80012da:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 80012de:	6821      	ldr	r1, [r4, #0]
 80012e0:	f8c9 2000 	str.w	r2, [r9]
							if (sec0to59>59) {	//jesli mamy 10 elementow w tabeli (minelo 10sec) usrednij i dodaj wartosc do NapiecieBaterii
 80012e4:	2a3b      	cmp	r2, #59	; 0x3b
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 80012e6:	6019      	str	r1, [r3, #0]
							if (sec0to59>59) {	//jesli mamy 10 elementow w tabeli (minelo 10sec) usrednij i dodaj wartosc do NapiecieBaterii
 80012e8:	dd10      	ble.n	800130c <ZadanieDwa+0x134>
								ladowarka.NapiecieBaterii[ladowarka.CzsasLadowaniaWSec/60]=CountAvgFrom60sec(); // TO DO srednia z 10 pomiarow
 80012ea:	233c      	movs	r3, #60	; 0x3c
 80012ec:	f8d4 0a78 	ldr.w	r0, [r4, #2680]	; 0xa78
 80012f0:	fb90 f0f3 	sdiv	r0, r0, r3
 80012f4:	f7ff ff52 	bl	800119c <CountAvgFrom60sec>
 80012f8:	3006      	adds	r0, #6
 80012fa:	eb04 0080 	add.w	r0, r4, r0, lsl #2
								sec0to59=0;
 80012fe:	2300      	movs	r3, #0
								ladowarka.NapiecieBaterii[ladowarka.CzsasLadowaniaWSec/60]=CountAvgFrom60sec(); // TO DO srednia z 10 pomiarow
 8001300:	ed80 0a00 	vstr	s0, [r0]
								sec0to59=0;
 8001304:	f8c9 3000 	str.w	r3, [r9]

								ladowarka.narysujPunktNaWykresieMin=1;//zezwol na narysowanie na wykresie minut.
 8001308:	f8c4 aa74 	str.w	sl, [r4, #2676]	; 0xa74
							}

						}
						liczbaPomiarow=0; //po 1 sek ustaw to na 0
 800130c:	2300      	movs	r3, #0
						value=0; //resetuj pomiar napiecia na baterii
 800130e:	603b      	str	r3, [r7, #0]
						liczbaPomiarow=0; //po 1 sek ustaw to na 0
 8001310:	f8c8 3000 	str.w	r3, [r8]
						value2=0; //resetuj  napiecie na baterii i rezystorze,
 8001314:	6033      	str	r3, [r6, #0]


					}

					/*************** generowanie napiecia ***************************/
					if(ladowarka.ChargeStarted==1 && ladowarka.UstawioneNapiecieNaopAmpie==0 ) { //jesli kliknieto przycik na GUI START   i nie ustawiono jeszce napiecia na op ampie
 8001316:	6923      	ldr	r3, [r4, #16]
 8001318:	2b01      	cmp	r3, #1
 800131a:	d119      	bne.n	8001350 <ZadanieDwa+0x178>
 800131c:	6963      	ldr	r3, [r4, #20]
 800131e:	b9bb      	cbnz	r3, 8001350 <ZadanieDwa+0x178>
						/********* ustawienie poprawnego napiecia************/
						int napiecie=4095;//domyslnie 0
						if (ladowarka.LoadingCurrent==400) napiecie=3100;
 8001320:	68a3      	ldr	r3, [r4, #8]
 8001322:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 8001326:	d017      	beq.n	8001358 <ZadanieDwa+0x180>
						else if (ladowarka.LoadingCurrent==300) napiecie=3250;
 8001328:	68a3      	ldr	r3, [r4, #8]
 800132a:	f5b3 7f96 	cmp.w	r3, #300	; 0x12c
 800132e:	d016      	beq.n	800135e <ZadanieDwa+0x186>
						else if (ladowarka.LoadingCurrent==200) napiecie=3530;
 8001330:	68a3      	ldr	r3, [r4, #8]
 8001332:	2bc8      	cmp	r3, #200	; 0xc8
 8001334:	d016      	beq.n	8001364 <ZadanieDwa+0x18c>
						else if (ladowarka.LoadingCurrent==100) napiecie=3700;
 8001336:	68a1      	ldr	r1, [r4, #8]
 8001338:	f640 73ff 	movw	r3, #4095	; 0xfff
 800133c:	f640 6274 	movw	r2, #3700	; 0xe74
 8001340:	2964      	cmp	r1, #100	; 0x64
 8001342:	bf08      	it	eq
 8001344:	4613      	moveq	r3, r2
							HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, napiecie);  //ustaw poprawne napiece tutaj (3V)
 8001346:	4812      	ldr	r0, [pc, #72]	; (8001390 <ZadanieDwa+0x1b8>)
 8001348:	2200      	movs	r2, #0
 800134a:	2110      	movs	r1, #16
 800134c:	f004 ff71 	bl	8006232 <HAL_DAC_SetValue>
							//ladowarka.UstawioneNapiecieNaopAmpie=1;
					}



    osDelay(1); //to chyba ma zostac?
 8001350:	2001      	movs	r0, #1
 8001352:	f007 f93b 	bl	80085cc <osDelay>
  {
 8001356:	e743      	b.n	80011e0 <ZadanieDwa+0x8>
						if (ladowarka.LoadingCurrent==400) napiecie=3100;
 8001358:	f640 431c 	movw	r3, #3100	; 0xc1c
 800135c:	e7f3      	b.n	8001346 <ZadanieDwa+0x16e>
						else if (ladowarka.LoadingCurrent==300) napiecie=3250;
 800135e:	f640 43b2 	movw	r3, #3250	; 0xcb2
 8001362:	e7f0      	b.n	8001346 <ZadanieDwa+0x16e>
						else if (ladowarka.LoadingCurrent==200) napiecie=3530;
 8001364:	f640 53ca 	movw	r3, #3530	; 0xdca
 8001368:	e7ed      	b.n	8001346 <ZadanieDwa+0x16e>
 800136a:	bf00      	nop
 800136c:	20003af0 	.word	0x20003af0
 8001370:	2000383c 	.word	0x2000383c
 8001374:	20004578 	.word	0x20004578
 8001378:	2000457c 	.word	0x2000457c
 800137c:	20003884 	.word	0x20003884
 8001380:	404851ec 	.word	0x404851ec
 8001384:	39800000 	.word	0x39800000
 8001388:	2000456c 	.word	0x2000456c
 800138c:	447a0000 	.word	0x447a0000
 8001390:	200038d4 	.word	0x200038d4
 8001394:	20004570 	.word	0x20004570
 8001398:	20004574 	.word	0x20004574

0800139c <SystemClock_Config>:
{
 800139c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800139e:	b0a1      	sub	sp, #132	; 0x84
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80013a0:	2210      	movs	r2, #16
 80013a2:	2100      	movs	r1, #0
 80013a4:	a80a      	add	r0, sp, #40	; 0x28
 80013a6:	f01f fabf 	bl	8020928 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80013aa:	2214      	movs	r2, #20
 80013ac:	2100      	movs	r1, #0
 80013ae:	a803      	add	r0, sp, #12
 80013b0:	f01f faba 	bl	8020928 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80013b4:	2100      	movs	r1, #0
 80013b6:	2230      	movs	r2, #48	; 0x30
 80013b8:	a814      	add	r0, sp, #80	; 0x50
 80013ba:	f01f fab5 	bl	8020928 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 80013be:	2400      	movs	r4, #0
 80013c0:	4b22      	ldr	r3, [pc, #136]	; (800144c <SystemClock_Config+0xb0>)
 80013c2:	9401      	str	r4, [sp, #4]
 80013c4:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80013c6:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80013ca:	641a      	str	r2, [r3, #64]	; 0x40
 80013cc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80013ce:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80013d2:	9301      	str	r3, [sp, #4]
 80013d4:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80013d6:	4b1e      	ldr	r3, [pc, #120]	; (8001450 <SystemClock_Config+0xb4>)
 80013d8:	9402      	str	r4, [sp, #8]
 80013da:	681a      	ldr	r2, [r3, #0]
 80013dc:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 80013e0:	601a      	str	r2, [r3, #0]
 80013e2:	681b      	ldr	r3, [r3, #0]
 80013e4:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80013e8:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80013ea:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80013ec:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80013ee:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80013f2:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80013f6:	2502      	movs	r5, #2
 80013f8:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 80013fc:	e9cd 530e 	strd	r5, r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001400:	2708      	movs	r7, #8
 8001402:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001406:	2604      	movs	r6, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001408:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLN = 336;
 800140a:	e9cd 7310 	strd	r7, r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800140e:	9512      	str	r5, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001410:	9613      	str	r6, [sp, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001412:	f005 ff01 	bl	8007218 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001416:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001418:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800141c:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 8001420:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001424:	e9cd 1306 	strd	r1, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001428:	a803      	add	r0, sp, #12
 800142a:	2105      	movs	r1, #5
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800142c:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800142e:	f006 f8cb 	bl	80075c8 <HAL_RCC_ClockConfig>
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001432:	23c0      	movs	r3, #192	; 0xc0
 8001434:	9318      	str	r3, [sp, #96]	; 0x60
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001436:	a814      	add	r0, sp, #80	; 0x50
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001438:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 800143c:	9714      	str	r7, [sp, #80]	; 0x50
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 800143e:	961a      	str	r6, [sp, #104]	; 0x68
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001440:	931d      	str	r3, [sp, #116]	; 0x74
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001442:	f006 f99b 	bl	800777c <HAL_RCCEx_PeriphCLKConfig>
}
 8001446:	b021      	add	sp, #132	; 0x84
 8001448:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800144a:	bf00      	nop
 800144c:	40023800 	.word	0x40023800
 8001450:	40007000 	.word	0x40007000

08001454 <main>:
{
 8001454:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8001458:	b09b      	sub	sp, #108	; 0x6c
  HAL_Init();
 800145a:	f004 fc2d 	bl	8005cb8 <HAL_Init>
  SystemClock_Config();
 800145e:	f7ff ff9d 	bl	800139c <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001462:	2214      	movs	r2, #20
 8001464:	2100      	movs	r1, #0
 8001466:	a80d      	add	r0, sp, #52	; 0x34
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001468:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800146a:	f01f fa5d 	bl	8020928 <memset>
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800146e:	4bc6      	ldr	r3, [pc, #792]	; (8001788 <main+0x334>)
 8001470:	9400      	str	r4, [sp, #0]
 8001472:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001474:	48c5      	ldr	r0, [pc, #788]	; (800178c <main+0x338>)
  hi2c3.Instance = I2C3;
 8001476:	4ec6      	ldr	r6, [pc, #792]	; (8001790 <main+0x33c>)
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001478:	f042 0220 	orr.w	r2, r2, #32
 800147c:	631a      	str	r2, [r3, #48]	; 0x30
 800147e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001480:	f002 0220 	and.w	r2, r2, #32
 8001484:	9200      	str	r2, [sp, #0]
 8001486:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001488:	9401      	str	r4, [sp, #4]
 800148a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800148c:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8001490:	631a      	str	r2, [r3, #48]	; 0x30
 8001492:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001494:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8001498:	9201      	str	r2, [sp, #4]
 800149a:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800149c:	9402      	str	r4, [sp, #8]
 800149e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014a0:	f042 0204 	orr.w	r2, r2, #4
 80014a4:	631a      	str	r2, [r3, #48]	; 0x30
 80014a6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014a8:	f002 0204 	and.w	r2, r2, #4
 80014ac:	9202      	str	r2, [sp, #8]
 80014ae:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80014b0:	9403      	str	r4, [sp, #12]
 80014b2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014b4:	f042 0201 	orr.w	r2, r2, #1
 80014b8:	631a      	str	r2, [r3, #48]	; 0x30
 80014ba:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014bc:	f002 0201 	and.w	r2, r2, #1
 80014c0:	9203      	str	r2, [sp, #12]
 80014c2:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80014c4:	9404      	str	r4, [sp, #16]
 80014c6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014c8:	f042 0202 	orr.w	r2, r2, #2
 80014cc:	631a      	str	r2, [r3, #48]	; 0x30
 80014ce:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014d0:	f002 0202 	and.w	r2, r2, #2
 80014d4:	9204      	str	r2, [sp, #16]
 80014d6:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80014d8:	9405      	str	r4, [sp, #20]
 80014da:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014dc:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80014e0:	631a      	str	r2, [r3, #48]	; 0x30
 80014e2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014e4:	f002 0240 	and.w	r2, r2, #64	; 0x40
 80014e8:	9205      	str	r2, [sp, #20]
 80014ea:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014ec:	9406      	str	r4, [sp, #24]
 80014ee:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014f0:	f042 0210 	orr.w	r2, r2, #16
 80014f4:	631a      	str	r2, [r3, #48]	; 0x30
 80014f6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014f8:	f002 0210 	and.w	r2, r2, #16
 80014fc:	9206      	str	r2, [sp, #24]
 80014fe:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001500:	9407      	str	r4, [sp, #28]
 8001502:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001504:	f042 0208 	orr.w	r2, r2, #8
 8001508:	631a      	str	r2, [r3, #48]	; 0x30
 800150a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800150c:	f003 0308 	and.w	r3, r3, #8
 8001510:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001512:	4622      	mov	r2, r4
 8001514:	2104      	movs	r1, #4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001516:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001518:	f005 f882 	bl	8006620 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 800151c:	489d      	ldr	r0, [pc, #628]	; (8001794 <main+0x340>)
 800151e:	4622      	mov	r2, r4
 8001520:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001524:	f005 f87c 	bl	8006620 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001528:	4622      	mov	r2, r4
 800152a:	489b      	ldr	r0, [pc, #620]	; (8001798 <main+0x344>)
 800152c:	f44f 5140 	mov.w	r1, #12288	; 0x3000
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001530:	2501      	movs	r5, #1
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001532:	f005 f875 	bl	8006620 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001536:	2702      	movs	r7, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001538:	f04f 0b04 	mov.w	fp, #4
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800153c:	4893      	ldr	r0, [pc, #588]	; (800178c <main+0x338>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800153e:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001540:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001542:	e9cd b50d 	strd	fp, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001546:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001548:	f004 ff82 	bl	8006450 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 800154c:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001550:	4890      	ldr	r0, [pc, #576]	; (8001794 <main+0x340>)
 8001552:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001554:	e9cd 250d 	strd	r2, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001558:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800155c:	f004 ff78 	bl	8006450 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001560:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8001562:	f44f 5240 	mov.w	r2, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001566:	488c      	ldr	r0, [pc, #560]	; (8001798 <main+0x344>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001568:	e9cd 250d 	strd	r2, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800156c:	e9cd 470f 	strd	r4, r7, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001570:	f004 ff6e 	bl	8006450 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001574:	4889      	ldr	r0, [pc, #548]	; (800179c <main+0x348>)
 8001576:	4a8a      	ldr	r2, [pc, #552]	; (80017a0 <main+0x34c>)
 8001578:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 800157a:	f004 fde9 	bl	8006150 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 800157e:	4b89      	ldr	r3, [pc, #548]	; (80017a4 <main+0x350>)
 8001580:	4a89      	ldr	r2, [pc, #548]	; (80017a8 <main+0x354>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001582:	6234      	str	r4, [r6, #32]
  hi2c3.Init.ClockSpeed = 100000;
 8001584:	e9c6 3200 	strd	r3, r2, [r6]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001588:	4630      	mov	r0, r6
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 800158a:	f44f 4280 	mov.w	r2, #16384	; 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800158e:	e9c6 2404 	strd	r2, r4, [r6, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8001592:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001596:	e9c6 4406 	strd	r4, r4, [r6, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800159a:	f005 fa23 	bl	80069e4 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 800159e:	2110      	movs	r1, #16
 80015a0:	4630      	mov	r0, r6
 80015a2:	f005 fc5f 	bl	8006e64 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 80015a6:	4621      	mov	r1, r4
 80015a8:	4630      	mov	r0, r6
 80015aa:	f005 fc7a 	bl	8006ea2 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 80015ae:	487f      	ldr	r0, [pc, #508]	; (80017ac <main+0x358>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 80015b0:	497f      	ldr	r1, [pc, #508]	; (80017b0 <main+0x35c>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80015b2:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 80015b4:	f44f 7282 	mov.w	r2, #260	; 0x104
 80015b8:	e9c0 1200 	strd	r1, r2, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 80015bc:	f44f 7600 	mov.w	r6, #512	; 0x200
 80015c0:	2218      	movs	r2, #24
 80015c2:	e9c0 6206 	strd	r6, r2, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 80015c6:	220a      	movs	r2, #10
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80015c8:	4e7a      	ldr	r6, [pc, #488]	; (80017b4 <main+0x360>)
  hspi5.Init.CRCPolynomial = 10;
 80015ca:	62c2      	str	r2, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 80015cc:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 80015d0:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 80015d4:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 80015d8:	f006 fad4 	bl	8007b84 <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80015dc:	4a76      	ldr	r2, [pc, #472]	; (80017b8 <main+0x364>)
  SdramTiming.LoadToActiveDelay = 2;
 80015de:	970d      	str	r7, [sp, #52]	; 0x34
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80015e0:	f04f 0810 	mov.w	r8, #16
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 80015e4:	e9c6 2500 	strd	r2, r5, [r6]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80015e8:	2240      	movs	r2, #64	; 0x40
 80015ea:	e9c6 8204 	strd	r8, r2, [r6, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 80015ee:	f44f 72c0 	mov.w	r2, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80015f2:	e9c6 2406 	strd	r2, r4, [r6, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80015f6:	f44f 6200 	mov.w	r2, #2048	; 0x800
  SdramTiming.WriteRecoveryTime = 3;
 80015fa:	2303      	movs	r3, #3
  SdramTiming.ExitSelfRefreshDelay = 7;
 80015fc:	f04f 0a07 	mov.w	sl, #7
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001600:	e9c6 2408 	strd	r2, r4, [r6, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001604:	a90d      	add	r1, sp, #52	; 0x34
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001606:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800160a:	4630      	mov	r0, r6
  SdramTiming.RPDelay = 2;
 800160c:	e9cd 3711 	strd	r3, r7, [sp, #68]	; 0x44
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001610:	f04f 0908 	mov.w	r9, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001614:	e9c6 4b02 	strd	r4, fp, [r6, #8]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001618:	62b2      	str	r2, [r6, #40]	; 0x28
  SdramTiming.SelfRefreshTime = 4;
 800161a:	e9cd ab0e 	strd	sl, fp, [sp, #56]	; 0x38
  SdramTiming.RowCycleDelay = 7;
 800161e:	f8cd a040 	str.w	sl, [sp, #64]	; 0x40
  SdramTiming.RCDDelay = 2;
 8001622:	9713      	str	r7, [sp, #76]	; 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001624:	f006 f9d4 	bl	80079d0 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001628:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800162c:	a909      	add	r1, sp, #36	; 0x24
 800162e:	4630      	mov	r0, r6
  Command->AutoRefreshNumber       = 1;
 8001630:	e9cd 950a 	strd	r9, r5, [sp, #40]	; 0x28
 __IO uint32_t tmpmrd =0;
 8001634:	9408      	str	r4, [sp, #32]
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 8001636:	9509      	str	r5, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 8001638:	940c      	str	r4, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800163a:	f006 f9e9 	bl	8007a10 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 800163e:	4628      	mov	r0, r5
 8001640:	f004 fb66 	bl	8005d10 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 8001644:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001648:	a909      	add	r1, sp, #36	; 0x24
 800164a:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800164c:	e9cd 7909 	strd	r7, r9, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 8001650:	e9cd 540b 	strd	r5, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 8001654:	f006 f9dc 	bl	8007a10 <HAL_SDRAM_SendCommand>
  Command->CommandMode             = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 8001658:	2303      	movs	r3, #3
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800165a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800165e:	a909      	add	r1, sp, #36	; 0x24
 8001660:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001662:	e9cd 3909 	strd	r3, r9, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 8001666:	e9cd b40b 	strd	fp, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800166a:	f006 f9d1 	bl	8007a10 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 800166e:	f44f 720c 	mov.w	r2, #560	; 0x230
 8001672:	9208      	str	r2, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8001674:	9b08      	ldr	r3, [sp, #32]
 8001676:	930c      	str	r3, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001678:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800167c:	a909      	add	r1, sp, #36	; 0x24
 800167e:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001680:	e9cd b909 	strd	fp, r9, [sp, #36]	; 0x24
  Command->AutoRefreshNumber       = 1;
 8001684:	950b      	str	r5, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001686:	f006 f9c3 	bl	8007a10 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT); 
 800168a:	f240 516a 	movw	r1, #1386	; 0x56a
 800168e:	4630      	mov	r0, r6
 8001690:	f006 f9d5 	bl	8007a3e <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001694:	2234      	movs	r2, #52	; 0x34
 8001696:	4621      	mov	r1, r4
 8001698:	eb0d 0002 	add.w	r0, sp, r2
 800169c:	f01f f944 	bl	8020928 <memset>
  hltdc.Instance = LTDC;
 80016a0:	4e46      	ldr	r6, [pc, #280]	; (80017bc <main+0x368>)
 80016a2:	4b47      	ldr	r3, [pc, #284]	; (80017c0 <main+0x36c>)
  hltdc.Init.Backcolor.Blue = 0;
 80016a4:	86b4      	strh	r4, [r6, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 80016a6:	e9c6 3400 	strd	r3, r4, [r6]
  hltdc.Init.HorizontalSync = 9;
 80016aa:	2309      	movs	r3, #9
  hltdc.Init.AccumulatedVBP = 3;
 80016ac:	f04f 0c1d 	mov.w	ip, #29
  hltdc.Init.VerticalSync = 1;
 80016b0:	e9c6 3505 	strd	r3, r5, [r6, #20]
  hltdc.Init.AccumulatedVBP = 3;
 80016b4:	2303      	movs	r3, #3
 80016b6:	e9c6 c307 	strd	ip, r3, [r6, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 80016ba:	f240 1e0d 	movw	lr, #269	; 0x10d
 80016be:	f240 1343 	movw	r3, #323	; 0x143
 80016c2:	e9c6 e309 	strd	lr, r3, [r6, #36]	; 0x24
  hltdc.Init.TotalHeigh = 327;
 80016c6:	f240 1917 	movw	r9, #279	; 0x117
 80016ca:	f240 1347 	movw	r3, #327	; 0x147
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80016ce:	4630      	mov	r0, r6
  hltdc.Init.TotalHeigh = 327;
 80016d0:	e9c6 930b 	strd	r9, r3, [r6, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 80016d4:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 80016d8:	6134      	str	r4, [r6, #16]
  hltdc.Init.Backcolor.Red = 0;
 80016da:	f886 4036 	strb.w	r4, [r6, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80016de:	f005 fc85 	bl	8006fec <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 80016e2:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowX1 = 240;
 80016e4:	22f0      	movs	r2, #240	; 0xf0
  pLayerCfg.Alpha0 = 0;
 80016e6:	e9cd 1412 	strd	r1, r4, [sp, #72]	; 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80016ea:	f44f 6b80 	mov.w	fp, #1024	; 0x400
 80016ee:	2105      	movs	r1, #5
  pLayerCfg.WindowY1 = 320;
 80016f0:	f44f 73a0 	mov.w	r3, #320	; 0x140
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80016f4:	e9cd b114 	strd	fp, r1, [sp, #80]	; 0x50
  pLayerCfg.WindowY0 = 0;
 80016f8:	e9cd 240e 	strd	r2, r4, [sp, #56]	; 0x38
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80016fc:	a90d      	add	r1, sp, #52	; 0x34
  pLayerCfg.ImageWidth = 240;
 80016fe:	e9cd 4216 	strd	r4, r2, [sp, #88]	; 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001702:	4630      	mov	r0, r6
 8001704:	4622      	mov	r2, r4
  LcdDrv = &ili9341_drv;
 8001706:	4e2f      	ldr	r6, [pc, #188]	; (80017c4 <main+0x370>)
  pLayerCfg.ImageHeight = 320;
 8001708:	9318      	str	r3, [sp, #96]	; 0x60
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 800170a:	e9cd 3710 	strd	r3, r7, [sp, #64]	; 0x40
  pLayerCfg.WindowX0 = 0;
 800170e:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.Backcolor.Blue = 0;
 8001710:	f8ad 4064 	strh.w	r4, [sp, #100]	; 0x64
  pLayerCfg.Backcolor.Red = 0;
 8001714:	f88d 4066 	strb.w	r4, [sp, #102]	; 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001718:	f005 fd33 	bl	8007182 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 800171c:	4b2a      	ldr	r3, [pc, #168]	; (80017c8 <main+0x374>)
 800171e:	6033      	str	r3, [r6, #0]
  LcdDrv->Init();
 8001720:	681b      	ldr	r3, [r3, #0]
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8001722:	f8df b0b8 	ldr.w	fp, [pc, #184]	; 80017dc <main+0x388>
  hdac.Instance = DAC;
 8001726:	f8df 90b8 	ldr.w	r9, [pc, #184]	; 80017e0 <main+0x38c>
  LcdDrv->Init();
 800172a:	4798      	blx	r3
  LcdDrv->DisplayOff();
 800172c:	6833      	ldr	r3, [r6, #0]
  hdma2d.Instance = DMA2D;
 800172e:	4e27      	ldr	r6, [pc, #156]	; (80017cc <main+0x378>)
  LcdDrv->DisplayOff();
 8001730:	68db      	ldr	r3, [r3, #12]
 8001732:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 8001734:	4b26      	ldr	r3, [pc, #152]	; (80017d0 <main+0x37c>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 8001736:	e9c6 470a 	strd	r4, r7, [r6, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 800173a:	e9c6 440c 	strd	r4, r4, [r6, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800173e:	4630      	mov	r0, r6
  hdma2d.Init.Mode = DMA2D_M2M;
 8001740:	e9c6 3400 	strd	r3, r4, [r6]
  hdma2d.Init.OutputOffset = 0;
 8001744:	e9c6 7402 	strd	r7, r4, [r6, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001748:	f004 fd85 	bl	8006256 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 800174c:	4629      	mov	r1, r5
 800174e:	4630      	mov	r0, r6
 8001750:	f004 fe3a 	bl	80063c8 <HAL_DMA2D_ConfigLayer>
  hadc1.Instance = ADC1;
 8001754:	4e1f      	ldr	r6, [pc, #124]	; (80017d4 <main+0x380>)
  ADC_ChannelConfTypeDef sConfig = {0};
 8001756:	4621      	mov	r1, r4
 8001758:	4642      	mov	r2, r8
 800175a:	a80d      	add	r0, sp, #52	; 0x34
 800175c:	f01f f8e4 	bl	8020928 <memset>
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8001760:	4a1d      	ldr	r2, [pc, #116]	; (80017d8 <main+0x384>)
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8001762:	60b4      	str	r4, [r6, #8]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8001764:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8001768:	4630      	mov	r0, r6
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 800176a:	e9c6 2300 	strd	r2, r3, [r6]
  hadc1.Init.ScanConvMode = DISABLE;
 800176e:	6134      	str	r4, [r6, #16]
  hadc1.Init.ContinuousConvMode = ENABLE;
 8001770:	7635      	strb	r5, [r6, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8001772:	f886 4020 	strb.w	r4, [r6, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8001776:	62f4      	str	r4, [r6, #44]	; 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8001778:	f8c6 b028 	str.w	fp, [r6, #40]	; 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 800177c:	60f4      	str	r4, [r6, #12]
  hadc1.Init.NbrOfConversion = 1;
 800177e:	61f5      	str	r5, [r6, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8001780:	f886 4030 	strb.w	r4, [r6, #48]	; 0x30
 8001784:	e02e      	b.n	80017e4 <main+0x390>
 8001786:	bf00      	nop
 8001788:	40023800 	.word	0x40023800
 800178c:	40020800 	.word	0x40020800
 8001790:	20003928 	.word	0x20003928
 8001794:	40020400 	.word	0x40020400
 8001798:	40020c00 	.word	0x40020c00
 800179c:	200038cc 	.word	0x200038cc
 80017a0:	40023000 	.word	0x40023000
 80017a4:	40005c00 	.word	0x40005c00
 80017a8:	000186a0 	.word	0x000186a0
 80017ac:	20003a58 	.word	0x20003a58
 80017b0:	40015000 	.word	0x40015000
 80017b4:	20003a24 	.word	0x20003a24
 80017b8:	a0000140 	.word	0xa0000140
 80017bc:	2000397c 	.word	0x2000397c
 80017c0:	40016800 	.word	0x40016800
 80017c4:	20003834 	.word	0x20003834
 80017c8:	2000001c 	.word	0x2000001c
 80017cc:	200038e8 	.word	0x200038e8
 80017d0:	4002b000 	.word	0x4002b000
 80017d4:	2000383c 	.word	0x2000383c
 80017d8:	40012000 	.word	0x40012000
 80017dc:	0f000001 	.word	0x0f000001
 80017e0:	200038d4 	.word	0x200038d4
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80017e4:	6175      	str	r5, [r6, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 80017e6:	f004 faa7 	bl	8005d38 <HAL_ADC_Init>
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80017ea:	a90d      	add	r1, sp, #52	; 0x34
 80017ec:	4630      	mov	r0, r6
  sConfig.Rank = 1;
 80017ee:	e9cd a50d 	strd	sl, r5, [sp, #52]	; 0x34
  htim7.Instance = TIM7;
 80017f2:	4e37      	ldr	r6, [pc, #220]	; (80018d0 <main+0x47c>)
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 80017f4:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80017f8:	f004 fbbc 	bl	8005f74 <HAL_ADC_ConfigChannel>
  htim7.Init.Prescaler = 8400-1;
 80017fc:	4935      	ldr	r1, [pc, #212]	; (80018d4 <main+0x480>)
  htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 80017fe:	60b4      	str	r4, [r6, #8]
  htim7.Init.Prescaler = 8400-1;
 8001800:	f242 02cf 	movw	r2, #8399	; 0x20cf
 8001804:	e9c6 1200 	strd	r1, r2, [r6]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 8001808:	4630      	mov	r0, r6
  htim7.Init.Period = 1000-1;
 800180a:	f240 32e7 	movw	r2, #999	; 0x3e7
 800180e:	60f2      	str	r2, [r6, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001810:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001814:	61b4      	str	r4, [r6, #24]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 8001816:	f006 fd4f 	bl	80082b8 <HAL_TIM_Base_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 800181a:	a90d      	add	r1, sp, #52	; 0x34
 800181c:	4630      	mov	r0, r6
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800181e:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 8001822:	f006 fd63 	bl	80082ec <HAL_TIMEx_MasterConfigSynchronization>
  hdac.Instance = DAC;
 8001826:	4a2c      	ldr	r2, [pc, #176]	; (80018d8 <main+0x484>)
 8001828:	f8c9 2000 	str.w	r2, [r9]
  if (HAL_DAC_Init(&hdac) != HAL_OK)
 800182c:	4648      	mov	r0, r9
  DAC_ChannelConfTypeDef sConfig = {0};
 800182e:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_DAC_Init(&hdac) != HAL_OK)
 8001832:	f004 fc9d 	bl	8006170 <HAL_DAC_Init>
  if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 8001836:	4642      	mov	r2, r8
 8001838:	a90d      	add	r1, sp, #52	; 0x34
 800183a:	4648      	mov	r0, r9
  sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 800183c:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 8001840:	f004 fcd6 	bl	80061f0 <HAL_DAC_ConfigChannel>
  ADC_ChannelConfTypeDef sConfig = {0};
 8001844:	4642      	mov	r2, r8
 8001846:	4621      	mov	r1, r4
 8001848:	a80d      	add	r0, sp, #52	; 0x34
 800184a:	f01f f86d 	bl	8020928 <memset>
  hadc2.Instance = ADC2;
 800184e:	4a23      	ldr	r2, [pc, #140]	; (80018dc <main+0x488>)
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8001850:	4923      	ldr	r1, [pc, #140]	; (80018e0 <main+0x48c>)
  hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 8001852:	6094      	str	r4, [r2, #8]
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8001854:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 8001858:	4610      	mov	r0, r2
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 800185a:	e9c2 1300 	strd	r1, r3, [r2]
  hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 800185e:	e9c2 b40a 	strd	fp, r4, [r2, #40]	; 0x28
  hadc2.Init.ScanConvMode = DISABLE;
 8001862:	6114      	str	r4, [r2, #16]
  hadc2.Init.ContinuousConvMode = ENABLE;
 8001864:	7615      	strb	r5, [r2, #24]
  hadc2.Init.DiscontinuousConvMode = DISABLE;
 8001866:	f882 4020 	strb.w	r4, [r2, #32]
  hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 800186a:	60d4      	str	r4, [r2, #12]
  hadc2.Init.NbrOfConversion = 1;
 800186c:	61d5      	str	r5, [r2, #28]
  hadc2.Init.DMAContinuousRequests = DISABLE;
 800186e:	f882 4030 	strb.w	r4, [r2, #48]	; 0x30
  hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8001872:	6155      	str	r5, [r2, #20]
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 8001874:	f004 fa60 	bl	8005d38 <HAL_ADC_Init>
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 8001878:	4a18      	ldr	r2, [pc, #96]	; (80018dc <main+0x488>)
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 800187a:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 800187e:	4610      	mov	r0, r2
 8001880:	a90d      	add	r1, sp, #52	; 0x34
  sConfig.Rank = 1;
 8001882:	e9cd 750d 	strd	r7, r5, [sp, #52]	; 0x34
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 8001886:	f004 fb75 	bl	8005f74 <HAL_ADC_ConfigChannel>
  MX_TouchGFX_Init();
 800188a:	f7fe feac 	bl	80005e6 <MX_TouchGFX_Init>
HAL_TIM_Base_Start_IT(&htim7); //uruchomienie timera 7 (przerwanie co 1 sek)
 800188e:	4630      	mov	r0, r6
 8001890:	f006 fbf5 	bl	800807e <HAL_TIM_Base_Start_IT>
HAL_DAC_Start(&hdac, DAC_CHANNEL_2);
 8001894:	4641      	mov	r1, r8
 8001896:	4648      	mov	r0, r9
 8001898:	f004 fc7d 	bl	8006196 <HAL_DAC_Start>
HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, 4095); //ustaw max napiecie na ADC, zeby nie plynal zaden prad !ZMIENIC
 800189c:	f640 73ff 	movw	r3, #4095	; 0xfff
 80018a0:	4622      	mov	r2, r4
 80018a2:	4641      	mov	r1, r8
 80018a4:	4648      	mov	r0, r9
 80018a6:	f004 fcc4 	bl	8006232 <HAL_DAC_SetValue>
  osKernelInitialize();
 80018aa:	f006 fdff 	bl	80084ac <osKernelInitialize>
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80018ae:	4a0d      	ldr	r2, [pc, #52]	; (80018e4 <main+0x490>)
 80018b0:	480d      	ldr	r0, [pc, #52]	; (80018e8 <main+0x494>)
 80018b2:	4621      	mov	r1, r4
 80018b4:	f006 fe34 	bl	8008520 <osThreadNew>
 80018b8:	4b0c      	ldr	r3, [pc, #48]	; (80018ec <main+0x498>)
  TaskDwaHandle = osThreadNew(ZadanieDwa, NULL, &TaskDwa_attributes);
 80018ba:	4a0d      	ldr	r2, [pc, #52]	; (80018f0 <main+0x49c>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80018bc:	6018      	str	r0, [r3, #0]
  TaskDwaHandle = osThreadNew(ZadanieDwa, NULL, &TaskDwa_attributes);
 80018be:	4621      	mov	r1, r4
 80018c0:	480c      	ldr	r0, [pc, #48]	; (80018f4 <main+0x4a0>)
 80018c2:	f006 fe2d 	bl	8008520 <osThreadNew>
 80018c6:	4b0c      	ldr	r3, [pc, #48]	; (80018f8 <main+0x4a4>)
 80018c8:	6018      	str	r0, [r3, #0]
  osKernelStart();
 80018ca:	f006 fe09 	bl	80084e0 <osKernelStart>
  while (1)
 80018ce:	e7fe      	b.n	80018ce <main+0x47a>
 80018d0:	20003ab0 	.word	0x20003ab0
 80018d4:	40001400 	.word	0x40001400
 80018d8:	40007400 	.word	0x40007400
 80018dc:	20003884 	.word	0x20003884
 80018e0:	40012100 	.word	0x40012100
 80018e4:	08021e80 	.word	0x08021e80
 80018e8:	080005eb 	.word	0x080005eb
 80018ec:	20003830 	.word	0x20003830
 80018f0:	08021ea4 	.word	0x08021ea4
 80018f4:	080011d9 	.word	0x080011d9
 80018f8:	20003838 	.word	0x20003838

080018fc <IOE_Init>:
 80018fc:	4770      	bx	lr

080018fe <IOE_ITConfig>:
 80018fe:	4770      	bx	lr

08001900 <IOE_Write>:
{
 8001900:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout); 
 8001902:	4b09      	ldr	r3, [pc, #36]	; (8001928 <IOE_Write+0x28>)
 8001904:	f88d 2017 	strb.w	r2, [sp, #23]
 8001908:	681b      	ldr	r3, [r3, #0]
 800190a:	9302      	str	r3, [sp, #8]
 800190c:	f10d 0217 	add.w	r2, sp, #23
 8001910:	2301      	movs	r3, #1
 8001912:	9200      	str	r2, [sp, #0]
 8001914:	9301      	str	r3, [sp, #4]
 8001916:	460a      	mov	r2, r1
 8001918:	4601      	mov	r1, r0
 800191a:	4804      	ldr	r0, [pc, #16]	; (800192c <IOE_Write+0x2c>)
 800191c:	f005 f90a 	bl	8006b34 <HAL_I2C_Mem_Write>
}
 8001920:	b007      	add	sp, #28
 8001922:	f85d fb04 	ldr.w	pc, [sp], #4
 8001926:	bf00      	nop
 8001928:	2000000c 	.word	0x2000000c
 800192c:	20003928 	.word	0x20003928

08001930 <IOE_Read>:
{
 8001930:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 8001932:	2300      	movs	r3, #0
 8001934:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001938:	4b08      	ldr	r3, [pc, #32]	; (800195c <IOE_Read+0x2c>)
 800193a:	681b      	ldr	r3, [r3, #0]
 800193c:	9302      	str	r3, [sp, #8]
{
 800193e:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001940:	2301      	movs	r3, #1
 8001942:	f10d 0117 	add.w	r1, sp, #23
 8001946:	9100      	str	r1, [sp, #0]
 8001948:	9301      	str	r3, [sp, #4]
 800194a:	4601      	mov	r1, r0
 800194c:	4804      	ldr	r0, [pc, #16]	; (8001960 <IOE_Read+0x30>)
 800194e:	f005 f981 	bl	8006c54 <HAL_I2C_Mem_Read>
}
 8001952:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8001956:	b007      	add	sp, #28
 8001958:	f85d fb04 	ldr.w	pc, [sp], #4
 800195c:	2000000c 	.word	0x2000000c
 8001960:	20003928 	.word	0x20003928

08001964 <IOE_ReadMultiple>:
{
 8001964:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001966:	4c08      	ldr	r4, [pc, #32]	; (8001988 <IOE_ReadMultiple+0x24>)
 8001968:	6824      	ldr	r4, [r4, #0]
 800196a:	9200      	str	r2, [sp, #0]
 800196c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8001970:	460a      	mov	r2, r1
 8001972:	2301      	movs	r3, #1
 8001974:	4601      	mov	r1, r0
 8001976:	4805      	ldr	r0, [pc, #20]	; (800198c <IOE_ReadMultiple+0x28>)
 8001978:	f005 f96c 	bl	8006c54 <HAL_I2C_Mem_Read>
}
 800197c:	3800      	subs	r0, #0
 800197e:	bf18      	it	ne
 8001980:	2001      	movne	r0, #1
 8001982:	b004      	add	sp, #16
 8001984:	bd10      	pop	{r4, pc}
 8001986:	bf00      	nop
 8001988:	2000000c 	.word	0x2000000c
 800198c:	20003928 	.word	0x20003928

08001990 <IOE_Delay>:
 8001990:	f004 b9be 	b.w	8005d10 <HAL_Delay>

08001994 <LCD_IO_Init>:
{
 8001994:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001996:	4806      	ldr	r0, [pc, #24]	; (80019b0 <LCD_IO_Init+0x1c>)
 8001998:	2200      	movs	r2, #0
 800199a:	2104      	movs	r1, #4
 800199c:	f004 fe40 	bl	8006620 <HAL_GPIO_WritePin>
}
 80019a0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80019a4:	4802      	ldr	r0, [pc, #8]	; (80019b0 <LCD_IO_Init+0x1c>)
 80019a6:	2201      	movs	r2, #1
 80019a8:	2104      	movs	r1, #4
 80019aa:	f004 be39 	b.w	8006620 <HAL_GPIO_WritePin>
 80019ae:	bf00      	nop
 80019b0:	40020800 	.word	0x40020800

080019b4 <LCD_IO_WriteData>:
{
 80019b4:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019b6:	4d0b      	ldr	r5, [pc, #44]	; (80019e4 <LCD_IO_WriteData+0x30>)
{
 80019b8:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80019ba:	2201      	movs	r2, #1
 80019bc:	480a      	ldr	r0, [pc, #40]	; (80019e8 <LCD_IO_WriteData+0x34>)
 80019be:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80019c2:	f004 fe2d 	bl	8006620 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019c6:	2200      	movs	r2, #0
 80019c8:	2104      	movs	r1, #4
 80019ca:	4628      	mov	r0, r5
 80019cc:	f004 fe28 	bl	8006620 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 80019d0:	4620      	mov	r0, r4
 80019d2:	f7ff fbd1 	bl	8001178 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80019d6:	4628      	mov	r0, r5
 80019d8:	2201      	movs	r2, #1
}
 80019da:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80019de:	2104      	movs	r1, #4
 80019e0:	f004 be1e 	b.w	8006620 <HAL_GPIO_WritePin>
 80019e4:	40020800 	.word	0x40020800
 80019e8:	40020c00 	.word	0x40020c00

080019ec <LCD_IO_WriteReg>:
{
 80019ec:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019ee:	4d0b      	ldr	r5, [pc, #44]	; (8001a1c <LCD_IO_WriteReg+0x30>)
{
 80019f0:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80019f2:	2200      	movs	r2, #0
 80019f4:	480a      	ldr	r0, [pc, #40]	; (8001a20 <LCD_IO_WriteReg+0x34>)
 80019f6:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80019fa:	f004 fe11 	bl	8006620 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019fe:	2200      	movs	r2, #0
 8001a00:	2104      	movs	r1, #4
 8001a02:	4628      	mov	r0, r5
 8001a04:	f004 fe0c 	bl	8006620 <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 8001a08:	4620      	mov	r0, r4
 8001a0a:	f7ff fbb5 	bl	8001178 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a0e:	4628      	mov	r0, r5
 8001a10:	2201      	movs	r2, #1
}
 8001a12:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a16:	2104      	movs	r1, #4
 8001a18:	f004 be02 	b.w	8006620 <HAL_GPIO_WritePin>
 8001a1c:	40020800 	.word	0x40020800
 8001a20:	40020c00 	.word	0x40020c00

08001a24 <LCD_IO_ReadData>:
{
 8001a24:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a26:	4e14      	ldr	r6, [pc, #80]	; (8001a78 <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a28:	4f14      	ldr	r7, [pc, #80]	; (8001a7c <LCD_IO_ReadData+0x58>)
{
 8001a2a:	4605      	mov	r5, r0
 8001a2c:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a2e:	4630      	mov	r0, r6
 8001a30:	2200      	movs	r2, #0
 8001a32:	2104      	movs	r1, #4
 8001a34:	f004 fdf4 	bl	8006620 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a38:	2200      	movs	r2, #0
 8001a3a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a3e:	4638      	mov	r0, r7
 8001a40:	f004 fdee 	bl	8006620 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001a44:	4628      	mov	r0, r5
 8001a46:	f7ff fb97 	bl	8001178 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001a4a:	4b0d      	ldr	r3, [pc, #52]	; (8001a80 <LCD_IO_ReadData+0x5c>)
 8001a4c:	480d      	ldr	r0, [pc, #52]	; (8001a84 <LCD_IO_ReadData+0x60>)
 8001a4e:	681b      	ldr	r3, [r3, #0]
 8001a50:	4622      	mov	r2, r4
 8001a52:	a901      	add	r1, sp, #4
 8001a54:	f006 fa71 	bl	8007f3a <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001a58:	4638      	mov	r0, r7
 8001a5a:	2201      	movs	r2, #1
 8001a5c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001a60:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001a62:	f004 fddd 	bl	8006620 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a66:	4630      	mov	r0, r6
 8001a68:	2201      	movs	r2, #1
 8001a6a:	2104      	movs	r1, #4
 8001a6c:	f004 fdd8 	bl	8006620 <HAL_GPIO_WritePin>
}
 8001a70:	4620      	mov	r0, r4
 8001a72:	b003      	add	sp, #12
 8001a74:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001a76:	bf00      	nop
 8001a78:	40020800 	.word	0x40020800
 8001a7c:	40020c00 	.word	0x40020c00
 8001a80:	20000010 	.word	0x20000010
 8001a84:	20003a58 	.word	0x20003a58

08001a88 <LCD_Delay>:
  HAL_Delay(Delay);
 8001a88:	f004 b942 	b.w	8005d10 <HAL_Delay>

08001a8c <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM8) {
 8001a8c:	6802      	ldr	r2, [r0, #0]
 8001a8e:	4b08      	ldr	r3, [pc, #32]	; (8001ab0 <HAL_TIM_PeriodElapsedCallback+0x24>)
 8001a90:	429a      	cmp	r2, r3
{
 8001a92:	b510      	push	{r4, lr}
 8001a94:	4604      	mov	r4, r0
  if (htim->Instance == TIM8) {
 8001a96:	d101      	bne.n	8001a9c <HAL_TIM_PeriodElapsedCallback+0x10>
    HAL_IncTick();
 8001a98:	f004 f928 	bl	8005cec <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */
  if (htim->Instance == TIM7){ //timer co 100ms
 8001a9c:	6822      	ldr	r2, [r4, #0]
 8001a9e:	4b05      	ldr	r3, [pc, #20]	; (8001ab4 <HAL_TIM_PeriodElapsedCallback+0x28>)
 8001aa0:	429a      	cmp	r2, r3
	  ladowarka.Minelo100ms=1;
 8001aa2:	bf02      	ittt	eq
 8001aa4:	4b04      	ldreq	r3, [pc, #16]	; (8001ab8 <HAL_TIM_PeriodElapsedCallback+0x2c>)
 8001aa6:	2201      	moveq	r2, #1
 8001aa8:	f8c3 2a6c 	streq.w	r2, [r3, #2668]	; 0xa6c
  }

  /* USER CODE END Callback 1 */
}
 8001aac:	bd10      	pop	{r4, pc}
 8001aae:	bf00      	nop
 8001ab0:	40010400 	.word	0x40010400
 8001ab4:	40001400 	.word	0x40001400
 8001ab8:	20003af0 	.word	0x20003af0

08001abc <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001abc:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001abe:	4b0e      	ldr	r3, [pc, #56]	; (8001af8 <HAL_MspInit+0x3c>)
 8001ac0:	2200      	movs	r2, #0
 8001ac2:	9200      	str	r2, [sp, #0]
 8001ac4:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001ac6:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001aca:	6459      	str	r1, [r3, #68]	; 0x44
 8001acc:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001ace:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8001ad2:	9100      	str	r1, [sp, #0]
 8001ad4:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001ad6:	9201      	str	r2, [sp, #4]
 8001ad8:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001ada:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8001ade:	6419      	str	r1, [r3, #64]	; 0x40
 8001ae0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001ae2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001ae6:	9301      	str	r3, [sp, #4]
 8001ae8:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001aea:	210f      	movs	r1, #15
 8001aec:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001af0:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001af2:	f004 baed 	b.w	80060d0 <HAL_NVIC_SetPriority>
 8001af6:	bf00      	nop
 8001af8:	40023800 	.word	0x40023800

08001afc <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8001afc:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001afe:	2214      	movs	r2, #20
{
 8001b00:	b08a      	sub	sp, #40	; 0x28
 8001b02:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b04:	2100      	movs	r1, #0
 8001b06:	eb0d 0002 	add.w	r0, sp, r2
 8001b0a:	f01e ff0d 	bl	8020928 <memset>
  if(hadc->Instance==ADC1)
 8001b0e:	6823      	ldr	r3, [r4, #0]
 8001b10:	4a1e      	ldr	r2, [pc, #120]	; (8001b8c <HAL_ADC_MspInit+0x90>)
 8001b12:	4293      	cmp	r3, r2
 8001b14:	d11f      	bne.n	8001b56 <HAL_ADC_MspInit+0x5a>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 8001b16:	4b1e      	ldr	r3, [pc, #120]	; (8001b90 <HAL_ADC_MspInit+0x94>)
 8001b18:	2100      	movs	r1, #0
 8001b1a:	9101      	str	r1, [sp, #4]
 8001b1c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001b1e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001b22:	645a      	str	r2, [r3, #68]	; 0x44
 8001b24:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001b26:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8001b2a:	9201      	str	r2, [sp, #4]
 8001b2c:	9a01      	ldr	r2, [sp, #4]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b2e:	9102      	str	r1, [sp, #8]
 8001b30:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b32:	f042 0201 	orr.w	r2, r2, #1
 8001b36:	631a      	str	r2, [r3, #48]	; 0x30
 8001b38:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001b3a:	f003 0301 	and.w	r3, r3, #1
 8001b3e:	9302      	str	r3, [sp, #8]
 8001b40:	9b02      	ldr	r3, [sp, #8]
    /**ADC1 GPIO Configuration
    PA7     ------> ADC1_IN7
    */
    GPIO_InitStruct.Pin = GPIO_PIN_7;
 8001b42:	2380      	movs	r3, #128	; 0x80

    __HAL_RCC_GPIOA_CLK_ENABLE();
    /**ADC2 GPIO Configuration
    PA2     ------> ADC2_IN2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001b44:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b46:	4813      	ldr	r0, [pc, #76]	; (8001b94 <HAL_ADC_MspInit+0x98>)
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001b48:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b4a:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001b4c:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b4e:	f004 fc7f 	bl	8006450 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC2_MspInit 1 */

  /* USER CODE END ADC2_MspInit 1 */
  }

}
 8001b52:	b00a      	add	sp, #40	; 0x28
 8001b54:	bd10      	pop	{r4, pc}
  else if(hadc->Instance==ADC2)
 8001b56:	4a10      	ldr	r2, [pc, #64]	; (8001b98 <HAL_ADC_MspInit+0x9c>)
 8001b58:	4293      	cmp	r3, r2
 8001b5a:	d1fa      	bne.n	8001b52 <HAL_ADC_MspInit+0x56>
    __HAL_RCC_ADC2_CLK_ENABLE();
 8001b5c:	4b0c      	ldr	r3, [pc, #48]	; (8001b90 <HAL_ADC_MspInit+0x94>)
 8001b5e:	2100      	movs	r1, #0
 8001b60:	9103      	str	r1, [sp, #12]
 8001b62:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001b64:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001b68:	645a      	str	r2, [r3, #68]	; 0x44
 8001b6a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001b6c:	f402 7200 	and.w	r2, r2, #512	; 0x200
 8001b70:	9203      	str	r2, [sp, #12]
 8001b72:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b74:	9104      	str	r1, [sp, #16]
 8001b76:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b78:	f042 0201 	orr.w	r2, r2, #1
 8001b7c:	631a      	str	r2, [r3, #48]	; 0x30
 8001b7e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001b80:	f003 0301 	and.w	r3, r3, #1
 8001b84:	9304      	str	r3, [sp, #16]
 8001b86:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001b88:	2304      	movs	r3, #4
 8001b8a:	e7db      	b.n	8001b44 <HAL_ADC_MspInit+0x48>
 8001b8c:	40012000 	.word	0x40012000
 8001b90:	40023800 	.word	0x40023800
 8001b94:	40020000 	.word	0x40020000
 8001b98:	40012100 	.word	0x40012100

08001b9c <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001b9c:	6802      	ldr	r2, [r0, #0]
 8001b9e:	4b09      	ldr	r3, [pc, #36]	; (8001bc4 <HAL_CRC_MspInit+0x28>)
 8001ba0:	429a      	cmp	r2, r3
{
 8001ba2:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001ba4:	d10b      	bne.n	8001bbe <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001ba6:	2300      	movs	r3, #0
 8001ba8:	9301      	str	r3, [sp, #4]
 8001baa:	4b07      	ldr	r3, [pc, #28]	; (8001bc8 <HAL_CRC_MspInit+0x2c>)
 8001bac:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001bae:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001bb2:	631a      	str	r2, [r3, #48]	; 0x30
 8001bb4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001bb6:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001bba:	9301      	str	r3, [sp, #4]
 8001bbc:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001bbe:	b002      	add	sp, #8
 8001bc0:	4770      	bx	lr
 8001bc2:	bf00      	nop
 8001bc4:	40023000 	.word	0x40023000
 8001bc8:	40023800 	.word	0x40023800

08001bcc <HAL_DAC_MspInit>:
* This function configures the hardware resources used in this example
* @param hdac: DAC handle pointer
* @retval None
*/
void HAL_DAC_MspInit(DAC_HandleTypeDef* hdac)
{
 8001bcc:	b510      	push	{r4, lr}
 8001bce:	4604      	mov	r4, r0
 8001bd0:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001bd2:	2214      	movs	r2, #20
 8001bd4:	2100      	movs	r1, #0
 8001bd6:	a803      	add	r0, sp, #12
 8001bd8:	f01e fea6 	bl	8020928 <memset>
  if(hdac->Instance==DAC)
 8001bdc:	6822      	ldr	r2, [r4, #0]
 8001bde:	4b12      	ldr	r3, [pc, #72]	; (8001c28 <HAL_DAC_MspInit+0x5c>)
 8001be0:	429a      	cmp	r2, r3
 8001be2:	d11e      	bne.n	8001c22 <HAL_DAC_MspInit+0x56>
  {
  /* USER CODE BEGIN DAC_MspInit 0 */

  /* USER CODE END DAC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DAC_CLK_ENABLE();
 8001be4:	f503 33e2 	add.w	r3, r3, #115712	; 0x1c400
 8001be8:	2100      	movs	r1, #0
 8001bea:	9101      	str	r1, [sp, #4]
 8001bec:	6c1a      	ldr	r2, [r3, #64]	; 0x40
    PA5     ------> DAC_OUT2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001bee:	480f      	ldr	r0, [pc, #60]	; (8001c2c <HAL_DAC_MspInit+0x60>)
    __HAL_RCC_DAC_CLK_ENABLE();
 8001bf0:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 8001bf4:	641a      	str	r2, [r3, #64]	; 0x40
 8001bf6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001bf8:	f002 5200 	and.w	r2, r2, #536870912	; 0x20000000
 8001bfc:	9201      	str	r2, [sp, #4]
 8001bfe:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c00:	9102      	str	r1, [sp, #8]
 8001c02:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c04:	f042 0201 	orr.w	r2, r2, #1
 8001c08:	631a      	str	r2, [r3, #48]	; 0x30
 8001c0a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c0c:	f003 0301 	and.w	r3, r3, #1
 8001c10:	9302      	str	r3, [sp, #8]
 8001c12:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001c14:	2220      	movs	r2, #32
 8001c16:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c18:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001c1a:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c1e:	f004 fc17 	bl	8006450 <HAL_GPIO_Init>
  /* USER CODE BEGIN DAC_MspInit 1 */

  /* USER CODE END DAC_MspInit 1 */
  }

}
 8001c22:	b008      	add	sp, #32
 8001c24:	bd10      	pop	{r4, pc}
 8001c26:	bf00      	nop
 8001c28:	40007400 	.word	0x40007400
 8001c2c:	40020000 	.word	0x40020000

08001c30 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001c30:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001c32:	4b0f      	ldr	r3, [pc, #60]	; (8001c70 <HAL_DMA2D_MspInit+0x40>)
 8001c34:	6802      	ldr	r2, [r0, #0]
 8001c36:	429a      	cmp	r2, r3
 8001c38:	d116      	bne.n	8001c68 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001c3a:	2200      	movs	r2, #0
 8001c3c:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001c40:	9201      	str	r2, [sp, #4]
 8001c42:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001c44:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001c48:	6319      	str	r1, [r3, #48]	; 0x30
 8001c4a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c4c:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001c50:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001c52:	2105      	movs	r1, #5
 8001c54:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001c56:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001c58:	f004 fa3a 	bl	80060d0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001c5c:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001c5e:	b003      	add	sp, #12
 8001c60:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001c64:	f004 ba66 	b.w	8006134 <HAL_NVIC_EnableIRQ>
}
 8001c68:	b003      	add	sp, #12
 8001c6a:	f85d fb04 	ldr.w	pc, [sp], #4
 8001c6e:	bf00      	nop
 8001c70:	4002b000 	.word	0x4002b000

08001c74 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001c74:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001c78:	4604      	mov	r4, r0
 8001c7a:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c7c:	2214      	movs	r2, #20
 8001c7e:	2100      	movs	r1, #0
 8001c80:	a803      	add	r0, sp, #12
 8001c82:	f01e fe51 	bl	8020928 <memset>
  if(hi2c->Instance==I2C3)
 8001c86:	6822      	ldr	r2, [r4, #0]
 8001c88:	4b24      	ldr	r3, [pc, #144]	; (8001d1c <HAL_I2C_MspInit+0xa8>)
 8001c8a:	429a      	cmp	r2, r3
 8001c8c:	d143      	bne.n	8001d16 <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001c8e:	4c24      	ldr	r4, [pc, #144]	; (8001d20 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c90:	4824      	ldr	r0, [pc, #144]	; (8001d24 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001c92:	2500      	movs	r5, #0
 8001c94:	9500      	str	r5, [sp, #0]
 8001c96:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001c98:	f043 0304 	orr.w	r3, r3, #4
 8001c9c:	6323      	str	r3, [r4, #48]	; 0x30
 8001c9e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001ca0:	f003 0304 	and.w	r3, r3, #4
 8001ca4:	9300      	str	r3, [sp, #0]
 8001ca6:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001ca8:	9501      	str	r5, [sp, #4]
 8001caa:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001cac:	f043 0301 	orr.w	r3, r3, #1
 8001cb0:	6323      	str	r3, [r4, #48]	; 0x30
 8001cb2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001cb4:	f003 0301 	and.w	r3, r3, #1
 8001cb8:	9301      	str	r3, [sp, #4]
 8001cba:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001cbc:	f04f 0912 	mov.w	r9, #18
 8001cc0:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001cc4:	f04f 0801 	mov.w	r8, #1
 8001cc8:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001cca:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ccc:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001cce:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001cd2:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001cd6:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001cd8:	f004 fbba 	bl	8006450 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001cdc:	f44f 7380 	mov.w	r3, #256	; 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ce0:	4811      	ldr	r0, [pc, #68]	; (8001d28 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001ce2:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ce4:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001ce6:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001cea:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001cee:	f004 fbaf 	bl	8006450 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001cf2:	9502      	str	r5, [sp, #8]
 8001cf4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001cf6:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001cfa:	6423      	str	r3, [r4, #64]	; 0x40
 8001cfc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001cfe:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001d02:	9302      	str	r3, [sp, #8]
 8001d04:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 8001d06:	6a23      	ldr	r3, [r4, #32]
 8001d08:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001d0c:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001d0e:	6a23      	ldr	r3, [r4, #32]
 8001d10:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001d14:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001d16:	b009      	add	sp, #36	; 0x24
 8001d18:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001d1c:	40005c00 	.word	0x40005c00
 8001d20:	40023800 	.word	0x40023800
 8001d24:	40020800 	.word	0x40020800
 8001d28:	40020000 	.word	0x40020000

08001d2c <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001d2c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001d2e:	4604      	mov	r4, r0
 8001d30:	b08d      	sub	sp, #52	; 0x34
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d32:	2214      	movs	r2, #20
 8001d34:	2100      	movs	r1, #0
 8001d36:	a807      	add	r0, sp, #28
 8001d38:	f01e fdf6 	bl	8020928 <memset>
  if(hltdc->Instance==LTDC)
 8001d3c:	6822      	ldr	r2, [r4, #0]
 8001d3e:	4b57      	ldr	r3, [pc, #348]	; (8001e9c <HAL_LTDC_MspInit+0x170>)
 8001d40:	429a      	cmp	r2, r3
 8001d42:	f040 80a8 	bne.w	8001e96 <HAL_LTDC_MspInit+0x16a>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001d46:	f503 4350 	add.w	r3, r3, #53248	; 0xd000
 8001d4a:	2500      	movs	r5, #0
 8001d4c:	9500      	str	r5, [sp, #0]
 8001d4e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d50:	4853      	ldr	r0, [pc, #332]	; (8001ea0 <HAL_LTDC_MspInit+0x174>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001d52:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001d56:	645a      	str	r2, [r3, #68]	; 0x44
 8001d58:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001d5a:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001d5e:	9200      	str	r2, [sp, #0]
 8001d60:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001d62:	9501      	str	r5, [sp, #4]
 8001d64:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d66:	f042 0220 	orr.w	r2, r2, #32
 8001d6a:	631a      	str	r2, [r3, #48]	; 0x30
 8001d6c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d6e:	f002 0220 	and.w	r2, r2, #32
 8001d72:	9201      	str	r2, [sp, #4]
 8001d74:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001d76:	9502      	str	r5, [sp, #8]
 8001d78:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d7a:	f042 0201 	orr.w	r2, r2, #1
 8001d7e:	631a      	str	r2, [r3, #48]	; 0x30
 8001d80:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d82:	f002 0201 	and.w	r2, r2, #1
 8001d86:	9202      	str	r2, [sp, #8]
 8001d88:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001d8a:	9503      	str	r5, [sp, #12]
 8001d8c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d8e:	f042 0202 	orr.w	r2, r2, #2
 8001d92:	631a      	str	r2, [r3, #48]	; 0x30
 8001d94:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d96:	f002 0202 	and.w	r2, r2, #2
 8001d9a:	9203      	str	r2, [sp, #12]
 8001d9c:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001d9e:	9504      	str	r5, [sp, #16]
 8001da0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001da2:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001da6:	631a      	str	r2, [r3, #48]	; 0x30
 8001da8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001daa:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001dae:	9204      	str	r2, [sp, #16]
 8001db0:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001db2:	9505      	str	r5, [sp, #20]
 8001db4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001db6:	f042 0204 	orr.w	r2, r2, #4
 8001dba:	631a      	str	r2, [r3, #48]	; 0x30
 8001dbc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dbe:	f002 0204 	and.w	r2, r2, #4
 8001dc2:	9205      	str	r2, [sp, #20]
 8001dc4:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001dc6:	9506      	str	r5, [sp, #24]
 8001dc8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dca:	f042 0208 	orr.w	r2, r2, #8
 8001dce:	631a      	str	r2, [r3, #48]	; 0x30
 8001dd0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001dd2:	f003 0308 	and.w	r3, r3, #8
 8001dd6:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dd8:	2402      	movs	r4, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001dda:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001ddc:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001dde:	940a      	str	r4, [sp, #40]	; 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001de0:	f44f 6380 	mov.w	r3, #1024	; 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001de4:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001de6:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001dea:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001dec:	f004 fb30 	bl	8006450 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001df0:	f641 0358 	movw	r3, #6232	; 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001df4:	482b      	ldr	r0, [pc, #172]	; (8001ea4 <HAL_LTDC_MspInit+0x178>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001df6:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001df8:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dfa:	e9cd 3407 	strd	r3, r4, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001dfe:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001e00:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e04:	f004 fb24 	bl	8006450 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001e08:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e0a:	4827      	ldr	r0, [pc, #156]	; (8001ea8 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001e0c:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e0e:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e10:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001e14:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e18:	f004 fb1a 	bl	8006450 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001e1c:	f44f 6370 	mov.w	r3, #3840	; 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e20:	4821      	ldr	r0, [pc, #132]	; (8001ea8 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e22:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e24:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e26:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001e2a:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e2e:	f004 fb0f 	bl	8006450 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001e32:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e36:	481d      	ldr	r0, [pc, #116]	; (8001eac <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e38:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e3a:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e3c:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001e40:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e44:	f004 fb04 	bl	8006450 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001e48:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e4a:	4819      	ldr	r0, [pc, #100]	; (8001eb0 <HAL_LTDC_MspInit+0x184>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e4c:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e4e:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e50:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001e54:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e58:	f004 fafa 	bl	8006450 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001e5c:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e5e:	4815      	ldr	r0, [pc, #84]	; (8001eb4 <HAL_LTDC_MspInit+0x188>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e60:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e62:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e64:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001e68:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e6c:	f004 faf0 	bl	8006450 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001e70:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e74:	480d      	ldr	r0, [pc, #52]	; (8001eac <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001e76:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e78:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e7a:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001e7e:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e82:	f004 fae5 	bl	8006450 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001e86:	2058      	movs	r0, #88	; 0x58
 8001e88:	462a      	mov	r2, r5
 8001e8a:	2105      	movs	r1, #5
 8001e8c:	f004 f920 	bl	80060d0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001e90:	2058      	movs	r0, #88	; 0x58
 8001e92:	f004 f94f 	bl	8006134 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001e96:	b00d      	add	sp, #52	; 0x34
 8001e98:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001e9a:	bf00      	nop
 8001e9c:	40016800 	.word	0x40016800
 8001ea0:	40021400 	.word	0x40021400
 8001ea4:	40020000 	.word	0x40020000
 8001ea8:	40020400 	.word	0x40020400
 8001eac:	40021800 	.word	0x40021800
 8001eb0:	40020800 	.word	0x40020800
 8001eb4:	40020c00 	.word	0x40020c00

08001eb8 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001eb8:	b510      	push	{r4, lr}
 8001eba:	4604      	mov	r4, r0
 8001ebc:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ebe:	2214      	movs	r2, #20
 8001ec0:	2100      	movs	r1, #0
 8001ec2:	a803      	add	r0, sp, #12
 8001ec4:	f01e fd30 	bl	8020928 <memset>
  if(hspi->Instance==SPI5)
 8001ec8:	6822      	ldr	r2, [r4, #0]
 8001eca:	4b14      	ldr	r3, [pc, #80]	; (8001f1c <HAL_SPI_MspInit+0x64>)
 8001ecc:	429a      	cmp	r2, r3
 8001ece:	d123      	bne.n	8001f18 <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001ed0:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8001ed4:	2100      	movs	r1, #0
 8001ed6:	9101      	str	r1, [sp, #4]
 8001ed8:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001eda:	4811      	ldr	r0, [pc, #68]	; (8001f20 <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001edc:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8001ee0:	645a      	str	r2, [r3, #68]	; 0x44
 8001ee2:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001ee4:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 8001ee8:	9201      	str	r2, [sp, #4]
 8001eea:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001eec:	9102      	str	r1, [sp, #8]
 8001eee:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ef0:	f042 0220 	orr.w	r2, r2, #32
 8001ef4:	631a      	str	r2, [r3, #48]	; 0x30
 8001ef6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ef8:	f003 0320 	and.w	r3, r3, #32
 8001efc:	9302      	str	r3, [sp, #8]
 8001efe:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f00:	f44f 7260 	mov.w	r2, #896	; 0x380
 8001f04:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001f06:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f08:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001f0c:	2305      	movs	r3, #5
 8001f0e:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f12:	a903      	add	r1, sp, #12
 8001f14:	f004 fa9c 	bl	8006450 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001f18:	b008      	add	sp, #32
 8001f1a:	bd10      	pop	{r4, pc}
 8001f1c:	40015000 	.word	0x40015000
 8001f20:	40021400 	.word	0x40021400

08001f24 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001f24:	b507      	push	{r0, r1, r2, lr}
  if(htim_base->Instance==TIM7)
 8001f26:	4b0f      	ldr	r3, [pc, #60]	; (8001f64 <HAL_TIM_Base_MspInit+0x40>)
 8001f28:	6802      	ldr	r2, [r0, #0]
 8001f2a:	429a      	cmp	r2, r3
 8001f2c:	d116      	bne.n	8001f5c <HAL_TIM_Base_MspInit+0x38>
  {
  /* USER CODE BEGIN TIM7_MspInit 0 */

  /* USER CODE END TIM7_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM7_CLK_ENABLE();
 8001f2e:	2200      	movs	r2, #0
 8001f30:	f503 3309 	add.w	r3, r3, #140288	; 0x22400
 8001f34:	9201      	str	r2, [sp, #4]
 8001f36:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001f38:	f041 0120 	orr.w	r1, r1, #32
 8001f3c:	6419      	str	r1, [r3, #64]	; 0x40
 8001f3e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001f40:	f003 0320 	and.w	r3, r3, #32
 8001f44:	9301      	str	r3, [sp, #4]
    /* TIM7 interrupt Init */
    HAL_NVIC_SetPriority(TIM7_IRQn, 5, 0);
 8001f46:	2105      	movs	r1, #5
 8001f48:	2037      	movs	r0, #55	; 0x37
    __HAL_RCC_TIM7_CLK_ENABLE();
 8001f4a:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(TIM7_IRQn, 5, 0);
 8001f4c:	f004 f8c0 	bl	80060d0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 8001f50:	2037      	movs	r0, #55	; 0x37
  /* USER CODE BEGIN TIM7_MspInit 1 */

  /* USER CODE END TIM7_MspInit 1 */
  }

}
 8001f52:	b003      	add	sp, #12
 8001f54:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 8001f58:	f004 b8ec 	b.w	8006134 <HAL_NVIC_EnableIRQ>
}
 8001f5c:	b003      	add	sp, #12
 8001f5e:	f85d fb04 	ldr.w	pc, [sp], #4
 8001f62:	bf00      	nop
 8001f64:	40001400 	.word	0x40001400

08001f68 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001f68:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001f6c:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001f6e:	2300      	movs	r3, #0
 8001f70:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8001f72:	4b2b      	ldr	r3, [pc, #172]	; (8002020 <HAL_SDRAM_MspInit+0xb8>)
 8001f74:	681c      	ldr	r4, [r3, #0]
 8001f76:	2c00      	cmp	r4, #0
 8001f78:	d14f      	bne.n	800201a <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 8001f7a:	f04f 0801 	mov.w	r8, #1
 8001f7e:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001f82:	4b28      	ldr	r3, [pc, #160]	; (8002024 <HAL_SDRAM_MspInit+0xbc>)
 8001f84:	9400      	str	r4, [sp, #0]
 8001f86:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f88:	4827      	ldr	r0, [pc, #156]	; (8002028 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001f8a:	ea42 0208 	orr.w	r2, r2, r8
 8001f8e:	639a      	str	r2, [r3, #56]	; 0x38
 8001f90:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001f92:	ea03 0308 	and.w	r3, r3, r8
 8001f96:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f98:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001f9a:	2603      	movs	r6, #3
 8001f9c:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001f9e:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fa0:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fa2:	f64f 033f 	movw	r3, #63551	; 0xf83f
 8001fa6:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001faa:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fae:	f004 fa4f 	bl	8006450 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fb2:	481e      	ldr	r0, [pc, #120]	; (800202c <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001fb4:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fb6:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fb8:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001fbc:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fc0:	f004 fa46 	bl	8006450 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001fc4:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001fc8:	4819      	ldr	r0, [pc, #100]	; (8002030 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001fca:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001fcc:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fce:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001fd2:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001fd6:	f004 fa3b 	bl	8006450 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8001fda:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001fde:	4815      	ldr	r0, [pc, #84]	; (8002034 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001fe0:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001fe2:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fe4:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001fe8:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001fec:	f004 fa30 	bl	8006450 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8001ff0:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ff4:	4810      	ldr	r0, [pc, #64]	; (8002038 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001ff6:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ff8:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ffa:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001ffe:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002002:	f004 fa25 	bl	8006450 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002006:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002008:	480c      	ldr	r0, [pc, #48]	; (800203c <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800200a:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800200c:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800200e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002012:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002016:	f004 fa1b 	bl	8006450 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 800201a:	b006      	add	sp, #24
 800201c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002020:	20004580 	.word	0x20004580
 8002024:	40023800 	.word	0x40023800
 8002028:	40021400 	.word	0x40021400
 800202c:	40020800 	.word	0x40020800
 8002030:	40021800 	.word	0x40021800
 8002034:	40021000 	.word	0x40021000
 8002038:	40020c00 	.word	0x40020c00
 800203c:	40020400 	.word	0x40020400

08002040 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002040:	b530      	push	{r4, r5, lr}
 8002042:	4601      	mov	r1, r0
 8002044:	b089      	sub	sp, #36	; 0x24
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;

  /*Configure the TIM8 IRQ priority */
  HAL_NVIC_SetPriority(TIM8_UP_TIM13_IRQn, TickPriority ,0);
 8002046:	2200      	movs	r2, #0
 8002048:	202c      	movs	r0, #44	; 0x2c
 800204a:	f004 f841 	bl	80060d0 <HAL_NVIC_SetPriority>

  /* Enable the TIM8 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM8_UP_TIM13_IRQn);
 800204e:	202c      	movs	r0, #44	; 0x2c
 8002050:	f004 f870 	bl	8006134 <HAL_NVIC_EnableIRQ>

  /* Enable TIM8 clock */
  __HAL_RCC_TIM8_CLK_ENABLE();
 8002054:	2500      	movs	r5, #0
 8002056:	4b15      	ldr	r3, [pc, #84]	; (80020ac <HAL_InitTick+0x6c>)
 8002058:	9502      	str	r5, [sp, #8]
 800205a:	6c5a      	ldr	r2, [r3, #68]	; 0x44

  /* Compute the prescaler value to have TIM8 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);

  /* Initialize TIM8 */
  htim8.Instance = TIM8;
 800205c:	4c14      	ldr	r4, [pc, #80]	; (80020b0 <HAL_InitTick+0x70>)
  __HAL_RCC_TIM8_CLK_ENABLE();
 800205e:	f042 0202 	orr.w	r2, r2, #2
 8002062:	645a      	str	r2, [r3, #68]	; 0x44
 8002064:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002066:	f003 0302 	and.w	r3, r3, #2
 800206a:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 800206c:	a901      	add	r1, sp, #4
 800206e:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM8_CLK_ENABLE();
 8002070:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002072:	f005 fb65 	bl	8007740 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK2Freq();
 8002076:	f005 fb53 	bl	8007720 <HAL_RCC_GetPCLK2Freq>
  htim8.Instance = TIM8;
 800207a:	4b0e      	ldr	r3, [pc, #56]	; (80020b4 <HAL_InitTick+0x74>)
 800207c:	6023      	str	r3, [r4, #0]
  + Period = [(TIM8CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim8.Init.Period = (1000000 / 1000) - 1;
 800207e:	f240 33e7 	movw	r3, #999	; 0x3e7
 8002082:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK2Freq();
 8002084:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
 8002086:	4b0c      	ldr	r3, [pc, #48]	; (80020b8 <HAL_InitTick+0x78>)
 8002088:	fbb0 f0f3 	udiv	r0, r0, r3
 800208c:	3801      	subs	r0, #1
  htim8.Init.Prescaler = uwPrescalerValue;
 800208e:	6060      	str	r0, [r4, #4]
  htim8.Init.ClockDivision = 0;
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
  if(HAL_TIM_Base_Init(&htim8) == HAL_OK)
 8002090:	4620      	mov	r0, r4
  htim8.Init.ClockDivision = 0;
 8002092:	6125      	str	r5, [r4, #16]
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002094:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim8) == HAL_OK)
 8002096:	f006 f90f 	bl	80082b8 <HAL_TIM_Base_Init>
 800209a:	b920      	cbnz	r0, 80020a6 <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim8);
 800209c:	4620      	mov	r0, r4
 800209e:	f005 ffee 	bl	800807e <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 80020a2:	b009      	add	sp, #36	; 0x24
 80020a4:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 80020a6:	2001      	movs	r0, #1
 80020a8:	e7fb      	b.n	80020a2 <HAL_InitTick+0x62>
 80020aa:	bf00      	nop
 80020ac:	40023800 	.word	0x40023800
 80020b0:	20004584 	.word	0x20004584
 80020b4:	40010400 	.word	0x40010400
 80020b8:	000f4240 	.word	0x000f4240

080020bc <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 80020bc:	4770      	bx	lr

080020be <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80020be:	e7fe      	b.n	80020be <HardFault_Handler>

080020c0 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80020c0:	e7fe      	b.n	80020c0 <MemManage_Handler>

080020c2 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80020c2:	e7fe      	b.n	80020c2 <BusFault_Handler>

080020c4 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80020c4:	e7fe      	b.n	80020c4 <UsageFault_Handler>

080020c6 <DebugMon_Handler>:
 80020c6:	4770      	bx	lr

080020c8 <TIM8_UP_TIM13_IRQHandler>:
void TIM8_UP_TIM13_IRQHandler(void)
{
  /* USER CODE BEGIN TIM8_UP_TIM13_IRQn 0 */

  /* USER CODE END TIM8_UP_TIM13_IRQn 0 */
  HAL_TIM_IRQHandler(&htim8);
 80020c8:	4801      	ldr	r0, [pc, #4]	; (80020d0 <TIM8_UP_TIM13_IRQHandler+0x8>)
 80020ca:	f005 bfec 	b.w	80080a6 <HAL_TIM_IRQHandler>
 80020ce:	bf00      	nop
 80020d0:	20004584 	.word	0x20004584

080020d4 <TIM7_IRQHandler>:
void TIM7_IRQHandler(void)
{
  /* USER CODE BEGIN TIM7_IRQn 0 */

  /* USER CODE END TIM7_IRQn 0 */
  HAL_TIM_IRQHandler(&htim7);
 80020d4:	4801      	ldr	r0, [pc, #4]	; (80020dc <TIM7_IRQHandler+0x8>)
 80020d6:	f005 bfe6 	b.w	80080a6 <HAL_TIM_IRQHandler>
 80020da:	bf00      	nop
 80020dc:	20003ab0 	.word	0x20003ab0

080020e0 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 80020e0:	4801      	ldr	r0, [pc, #4]	; (80020e8 <LTDC_IRQHandler+0x8>)
 80020e2:	f004 bff1 	b.w	80070c8 <HAL_LTDC_IRQHandler>
 80020e6:	bf00      	nop
 80020e8:	2000397c 	.word	0x2000397c

080020ec <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 80020ec:	4801      	ldr	r0, [pc, #4]	; (80020f4 <DMA2D_IRQHandler+0x8>)
 80020ee:	f004 b8e0 	b.w	80062b2 <HAL_DMA2D_IRQHandler>
 80020f2:	bf00      	nop
 80020f4:	200038e8 	.word	0x200038e8

080020f8 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 80020f8:	2001      	movs	r0, #1
 80020fa:	4770      	bx	lr

080020fc <_kill>:

int _kill(int pid, int sig)
{
 80020fc:	b508      	push	{r3, lr}
	errno = EINVAL;
 80020fe:	f01e fabf 	bl	8020680 <__errno>
 8002102:	2316      	movs	r3, #22
 8002104:	6003      	str	r3, [r0, #0]
	return -1;
}
 8002106:	f04f 30ff 	mov.w	r0, #4294967295
 800210a:	bd08      	pop	{r3, pc}

0800210c <_exit>:

void _exit (int status)
{
 800210c:	b508      	push	{r3, lr}
	errno = EINVAL;
 800210e:	f01e fab7 	bl	8020680 <__errno>
 8002112:	2316      	movs	r3, #22
 8002114:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8002116:	e7fe      	b.n	8002116 <_exit+0xa>

08002118 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002118:	b570      	push	{r4, r5, r6, lr}
 800211a:	460d      	mov	r5, r1
 800211c:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800211e:	460e      	mov	r6, r1
 8002120:	1b73      	subs	r3, r6, r5
 8002122:	429c      	cmp	r4, r3
 8002124:	dc01      	bgt.n	800212a <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8002126:	4620      	mov	r0, r4
 8002128:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 800212a:	f3af 8000 	nop.w
 800212e:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002132:	e7f5      	b.n	8002120 <_read+0x8>

08002134 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002134:	b570      	push	{r4, r5, r6, lr}
 8002136:	460d      	mov	r5, r1
 8002138:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800213a:	460e      	mov	r6, r1
 800213c:	1b73      	subs	r3, r6, r5
 800213e:	429c      	cmp	r4, r3
 8002140:	dc01      	bgt.n	8002146 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8002142:	4620      	mov	r0, r4
 8002144:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8002146:	f816 0b01 	ldrb.w	r0, [r6], #1
 800214a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800214e:	e7f5      	b.n	800213c <_write+0x8>

08002150 <_close>:

int _close(int file)
{
	return -1;
}
 8002150:	f04f 30ff 	mov.w	r0, #4294967295
 8002154:	4770      	bx	lr

08002156 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8002156:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800215a:	604b      	str	r3, [r1, #4]
	return 0;
}
 800215c:	2000      	movs	r0, #0
 800215e:	4770      	bx	lr

08002160 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8002160:	2001      	movs	r0, #1
 8002162:	4770      	bx	lr

08002164 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002164:	2000      	movs	r0, #0
 8002166:	4770      	bx	lr

08002168 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002168:	4a0a      	ldr	r2, [pc, #40]	; (8002194 <_sbrk+0x2c>)
 800216a:	6811      	ldr	r1, [r2, #0]
{
 800216c:	b508      	push	{r3, lr}
 800216e:	4603      	mov	r3, r0
	if (heap_end == 0)
 8002170:	b909      	cbnz	r1, 8002176 <_sbrk+0xe>
		heap_end = &end;
 8002172:	4909      	ldr	r1, [pc, #36]	; (8002198 <_sbrk+0x30>)
 8002174:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 8002176:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8002178:	4669      	mov	r1, sp
 800217a:	4403      	add	r3, r0
 800217c:	428b      	cmp	r3, r1
 800217e:	d906      	bls.n	800218e <_sbrk+0x26>
	{
		errno = ENOMEM;
 8002180:	f01e fa7e 	bl	8020680 <__errno>
 8002184:	230c      	movs	r3, #12
 8002186:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8002188:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 800218c:	bd08      	pop	{r3, pc}
	heap_end += incr;
 800218e:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 8002190:	e7fc      	b.n	800218c <_sbrk+0x24>
 8002192:	bf00      	nop
 8002194:	200045c4 	.word	0x200045c4
 8002198:	20015738 	.word	0x20015738

0800219c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 800219c:	4770      	bx	lr

0800219e <_ZN23ApplicationFontProviderD0Ev>:
 800219e:	b510      	push	{r4, lr}
 80021a0:	2104      	movs	r1, #4
 80021a2:	4604      	mov	r4, r0
 80021a4:	f01e f986 	bl	80204b4 <_ZdlPvj>
 80021a8:	4620      	mov	r0, r4
 80021aa:	bd10      	pop	{r4, pc}

080021ac <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 80021ac:	2901      	cmp	r1, #1
{
 80021ae:	b508      	push	{r3, lr}
    switch (typography)
 80021b0:	d006      	beq.n	80021c0 <_ZN23ApplicationFontProvider7getFontEt+0x14>
 80021b2:	2902      	cmp	r1, #2
 80021b4:	d008      	beq.n	80021c8 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 80021b6:	b959      	cbnz	r1, 80021d0 <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_15_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 80021b8:	f002 fe40 	bl	8004e3c <_ZN17TypedTextDatabase8getFontsEv>
 80021bc:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 80021be:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 80021c0:	f002 fe3c 	bl	8004e3c <_ZN17TypedTextDatabase8getFontsEv>
 80021c4:	6840      	ldr	r0, [r0, #4]
 80021c6:	e7fa      	b.n	80021be <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 80021c8:	f002 fe38 	bl	8004e3c <_ZN17TypedTextDatabase8getFontsEv>
 80021cc:	6880      	ldr	r0, [r0, #8]
 80021ce:	e7f6      	b.n	80021be <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 80021d0:	2000      	movs	r0, #0
 80021d2:	e7f4      	b.n	80021be <_ZN23ApplicationFontProvider7getFontEt+0x12>

080021d4 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 80021d4:	4800      	ldr	r0, [pc, #0]	; (80021d8 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 80021d6:	4770      	bx	lr
 80021d8:	08021edc 	.word	0x08021edc

080021dc <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 80021dc:	2009      	movs	r0, #9
 80021de:	4770      	bx	lr

080021e0 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80021e0:	b513      	push	{r0, r1, r4, lr}
 80021e2:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 80021e4:	b151      	cbz	r1, 80021fc <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80021e6:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 80021e8:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 80021ea:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80021ee:	aa01      	add	r2, sp, #4
 80021f0:	689c      	ldr	r4, [r3, #8]
 80021f2:	f10d 0303 	add.w	r3, sp, #3
 80021f6:	47a0      	blx	r4
        return glyph;
    }
 80021f8:	b002      	add	sp, #8
 80021fa:	bd10      	pop	{r4, pc}
            return 0;
 80021fc:	4608      	mov	r0, r1
 80021fe:	e7fb      	b.n	80021f8 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002200 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002200:	8940      	ldrh	r0, [r0, #10]
 8002202:	4770      	bx	lr

08002204 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002204:	8980      	ldrh	r0, [r0, #12]
 8002206:	4770      	bx	lr

08002208 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 8002208:	8880      	ldrh	r0, [r0, #4]
 800220a:	4770      	bx	lr

0800220c <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 800220c:	7983      	ldrb	r3, [r0, #6]
 800220e:	8880      	ldrh	r0, [r0, #4]
 8002210:	4418      	add	r0, r3
    }
 8002212:	b280      	uxth	r0, r0
 8002214:	4770      	bx	lr

08002216 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002216:	79c0      	ldrb	r0, [r0, #7]
    }
 8002218:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 800221c:	4770      	bx	lr

0800221e <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 800221e:	79c0      	ldrb	r0, [r0, #7]
    }
 8002220:	09c0      	lsrs	r0, r0, #7
 8002222:	4770      	bx	lr

08002224 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002224:	4770      	bx	lr

08002226 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002226:	b510      	push	{r4, lr}
    }
 8002228:	2108      	movs	r1, #8
    virtual ~TypedText()
 800222a:	4604      	mov	r4, r0
    }
 800222c:	f01e f942 	bl	80204b4 <_ZdlPvj>
 8002230:	4620      	mov	r0, r4
 8002232:	bd10      	pop	{r4, pc}

08002234 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8002234:	4770      	bx	lr

08002236 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8002236:	4770      	bx	lr

08002238 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002238:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 800223c:	6808      	ldr	r0, [r1, #0]
 800223e:	6849      	ldr	r1, [r1, #4]
 8002240:	c303      	stmia	r3!, {r0, r1}
    }
 8002242:	4770      	bx	lr

08002244 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002244:	2000      	movs	r0, #0
 8002246:	4770      	bx	lr

08002248 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002248:	8081      	strh	r1, [r0, #4]
    }
 800224a:	4770      	bx	lr

0800224c <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 800224c:	80c1      	strh	r1, [r0, #6]
    }
 800224e:	4770      	bx	lr

08002250 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8002250:	8101      	strh	r1, [r0, #8]
    }
 8002252:	4770      	bx	lr

08002254 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002254:	8141      	strh	r1, [r0, #10]
    }
 8002256:	4770      	bx	lr

08002258 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002258:	4770      	bx	lr

0800225a <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 800225a:	4770      	bx	lr

0800225c <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 800225c:	4770      	bx	lr

0800225e <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 800225e:	4770      	bx	lr

08002260 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8002260:	4770      	bx	lr

08002262 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8002262:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002264:	88c4      	ldrh	r4, [r0, #6]
 8002266:	6803      	ldr	r3, [r0, #0]
 8002268:	1b12      	subs	r2, r2, r4
 800226a:	8884      	ldrh	r4, [r0, #4]
 800226c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800226e:	1b09      	subs	r1, r1, r4
 8002270:	b212      	sxth	r2, r2
    }
 8002272:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8002276:	b209      	sxth	r1, r1
 8002278:	4718      	bx	r3

0800227a <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800227a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800227e:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8002280:	f04f 33ff 	mov.w	r3, #4294967295
 8002284:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8002286:	6813      	ldr	r3, [r2, #0]
 8002288:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 800228a:	6010      	str	r0, [r2, #0]
    }
 800228c:	4770      	bx	lr

0800228e <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 800228e:	4770      	bx	lr

08002290 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8002290:	4770      	bx	lr

08002292 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8002292:	6041      	str	r1, [r0, #4]
    }
 8002294:	4770      	bx	lr

08002296 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8002296:	4770      	bx	lr

08002298 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002298:	4b06      	ldr	r3, [pc, #24]	; (80022b4 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 800229a:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 800229e:	2300      	movs	r3, #0
 80022a0:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80022a4:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 80022a8:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 80022ac:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
 80022b0:	4770      	bx	lr
 80022b2:	bf00      	nop
 80022b4:	080023c9 	.word	0x080023c9

080022b8 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 80022b8:	2301      	movs	r3, #1
 80022ba:	7203      	strb	r3, [r0, #8]
    }
 80022bc:	4770      	bx	lr

080022be <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 80022be:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80022c2:	b11a      	cbz	r2, 80022cc <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 80022c4:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 80022c8:	b102      	cbz	r2, 80022cc <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 80022ca:	6018      	str	r0, [r3, #0]
        }
    }
 80022cc:	4770      	bx	lr

080022ce <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD1Ev>:
{
public:
    /**
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
 80022ce:	4770      	bx	lr

080022d0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
class WipeTransition : public Transition
 80022d0:	4770      	bx	lr

080022d2 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 80022d2:	4770      	bx	lr

080022d4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 80022d4:	4770      	bx	lr

080022d6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
            // Copy rect from tft to client framebuffer
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
        }
    }

    virtual void tearDown()
 80022d6:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 80022d8:	6840      	ldr	r0, [r0, #4]
 80022da:	6803      	ldr	r3, [r0, #0]
 80022dc:	3110      	adds	r1, #16
 80022de:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80022e0:	4718      	bx	r3

080022e2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    }

    virtual void init()
 80022e2:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 80022e4:	6840      	ldr	r0, [r0, #4]
 80022e6:	6803      	ldr	r3, [r0, #0]
 80022e8:	3110      	adds	r1, #16
 80022ea:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80022ec:	4718      	bx	r3

080022ee <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 80022ee:	4770      	bx	lr

080022f0 <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect4drawERKNS_4RectE>:
        }
 80022f0:	4770      	bx	lr

080022f2 <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect12getSolidRectEv>:
        virtual Rect getSolidRect() const
 80022f2:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80022f4:	2200      	movs	r2, #0
            return Rect(0U, 0U, rect.width, rect.height);
 80022f6:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 80022fa:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80022fe:	8002      	strh	r2, [r0, #0]
 8002300:	8042      	strh	r2, [r0, #2]
 8002302:	8084      	strh	r4, [r0, #4]
 8002304:	80c1      	strh	r1, [r0, #6]
        }
 8002306:	bd10      	pop	{r4, pc}

08002308 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002308:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 800230a:	68c2      	ldr	r2, [r0, #12]
 800230c:	6841      	ldr	r1, [r0, #4]
 800230e:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8002310:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8002312:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002316:	07d2      	lsls	r2, r2, #31
 8002318:	bf48      	it	mi
 800231a:	590a      	ldrmi	r2, [r1, r4]
 800231c:	689b      	ldr	r3, [r3, #8]
    }
 800231e:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8002322:	bf48      	it	mi
 8002324:	58d3      	ldrmi	r3, [r2, r3]
 8002326:	4718      	bx	r3

08002328 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002328:	6843      	ldr	r3, [r0, #4]
 800232a:	b12b      	cbz	r3, 8002338 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 800232c:	6883      	ldr	r3, [r0, #8]
 800232e:	b92b      	cbnz	r3, 800233c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002330:	68c0      	ldr	r0, [r0, #12]
 8002332:	f000 0001 	and.w	r0, r0, #1
 8002336:	4770      	bx	lr
 8002338:	4618      	mov	r0, r3
 800233a:	4770      	bx	lr
 800233c:	2001      	movs	r0, #1
    }
 800233e:	4770      	bx	lr

08002340 <_ZN8touchgfx12NoTransitionD0Ev>:
 8002340:	b510      	push	{r4, lr}
 8002342:	210c      	movs	r1, #12
 8002344:	4604      	mov	r4, r0
 8002346:	f01e f8b5 	bl	80204b4 <_ZdlPvj>
 800234a:	4620      	mov	r0, r4
 800234c:	bd10      	pop	{r4, pc}

0800234e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800234e:	b510      	push	{r4, lr}
 8002350:	2110      	movs	r1, #16
 8002352:	4604      	mov	r4, r0
 8002354:	f01e f8ae 	bl	80204b4 <_ZdlPvj>
 8002358:	4620      	mov	r0, r4
 800235a:	bd10      	pop	{r4, pc}

0800235c <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 800235c:	b510      	push	{r4, lr}
 800235e:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8002362:	4604      	mov	r4, r0
 8002364:	f01e f8a6 	bl	80204b4 <_ZdlPvj>
 8002368:	4620      	mov	r0, r4
 800236a:	bd10      	pop	{r4, pc}

0800236c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
class WipeTransition : public Transition
 800236c:	b510      	push	{r4, lr}
 800236e:	2138      	movs	r1, #56	; 0x38
 8002370:	4604      	mov	r4, r0
 8002372:	f01e f89f 	bl	80204b4 <_ZdlPvj>
 8002376:	4620      	mov	r0, r4
 8002378:	bd10      	pop	{r4, pc}

0800237a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD0Ev>:
    class FullSolidRect : public Widget
 800237a:	b510      	push	{r4, lr}
 800237c:	2128      	movs	r1, #40	; 0x28
 800237e:	4604      	mov	r4, r0
 8002380:	f01e f898 	bl	80204b4 <_ZdlPvj>
 8002384:	4620      	mov	r0, r4
 8002386:	bd10      	pop	{r4, pc}

08002388 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8002388:	b508      	push	{r3, lr}
        Application::getInstance()->invalidate();
 800238a:	f00e fd77 	bl	8010e7c <_ZN8touchgfx11Application11getInstanceEv>
    }
 800238e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        Application::getInstance()->invalidate();
 8002392:	f00f b917 	b.w	80115c4 <_ZN8touchgfx11Application10invalidateEv>

08002396 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8002396:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800239a:	b112      	cbz	r2, 80023a2 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 800239c:	6803      	ldr	r3, [r0, #0]
 800239e:	695b      	ldr	r3, [r3, #20]
 80023a0:	4718      	bx	r3
    }
 80023a2:	4770      	bx	lr

080023a4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80023a4:	b510      	push	{r4, lr}
 80023a6:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80023a8:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 80023ac:	b158      	cbz	r0, 80023c6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80023ae:	6803      	ldr	r3, [r0, #0]
 80023b0:	68db      	ldr	r3, [r3, #12]
 80023b2:	4798      	blx	r3
 80023b4:	b138      	cbz	r0, 80023c6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80023b6:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 80023ba:	6803      	ldr	r3, [r0, #0]
 80023bc:	689b      	ldr	r3, [r3, #8]
 80023be:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80023c0:	2300      	movs	r3, #0
 80023c2:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 80023c6:	bd10      	pop	{r4, pc}

080023c8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 80023c8:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80023cc:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 80023d0:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80023d2:	68a8      	ldr	r0, [r5, #8]
 80023d4:	6803      	ldr	r3, [r0, #0]
 80023d6:	6a1b      	ldr	r3, [r3, #32]
 80023d8:	4798      	blx	r3
 80023da:	f5b0 6fc2 	cmp.w	r0, #1552	; 0x610
 80023de:	d205      	bcs.n	80023ec <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>
 80023e0:	4b45      	ldr	r3, [pc, #276]	; (80024f8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 80023e2:	4a46      	ldr	r2, [pc, #280]	; (80024fc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 80023e4:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80023e6:	4846      	ldr	r0, [pc, #280]	; (8002500 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 80023e8:	f01e f918 	bl	802061c <__assert_func>
 80023ec:	6868      	ldr	r0, [r5, #4]
 80023ee:	6803      	ldr	r3, [r0, #0]
 80023f0:	6a1b      	ldr	r3, [r3, #32]
 80023f2:	4798      	blx	r3
 80023f4:	280f      	cmp	r0, #15
 80023f6:	d803      	bhi.n	8002400 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x38>
 80023f8:	4b42      	ldr	r3, [pc, #264]	; (8002504 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 80023fa:	4a40      	ldr	r2, [pc, #256]	; (80024fc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 80023fc:	21a4      	movs	r1, #164	; 0xa4
 80023fe:	e7f2      	b.n	80023e6 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002400:	68e8      	ldr	r0, [r5, #12]
 8002402:	6803      	ldr	r3, [r0, #0]
 8002404:	6a1b      	ldr	r3, [r3, #32]
 8002406:	4798      	blx	r3
 8002408:	280b      	cmp	r0, #11
 800240a:	d803      	bhi.n	8002414 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4c>
 800240c:	4b3e      	ldr	r3, [pc, #248]	; (8002508 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 800240e:	4a3b      	ldr	r2, [pc, #236]	; (80024fc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002410:	21a5      	movs	r1, #165	; 0xa5
 8002412:	e7e8      	b.n	80023e6 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    if (*currentTrans)
 8002414:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8002510 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
    Application::getInstance()->clearAllTimerWidgets();
 8002418:	f00e fd30 	bl	8010e7c <_ZN8touchgfx11Application11getInstanceEv>
 800241c:	f00e fd34 	bl	8010e88 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002420:	f8d9 0000 	ldr.w	r0, [r9]
 8002424:	b110      	cbz	r0, 800242c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 8002426:	6803      	ldr	r3, [r0, #0]
 8002428:	68db      	ldr	r3, [r3, #12]
 800242a:	4798      	blx	r3
    if (*currentTrans)
 800242c:	f8d9 0000 	ldr.w	r0, [r9]
 8002430:	b110      	cbz	r0, 8002438 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 8002432:	6803      	ldr	r3, [r0, #0]
 8002434:	681b      	ldr	r3, [r3, #0]
 8002436:	4798      	blx	r3
    if (*currentScreen)
 8002438:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8002514 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x14c>
 800243c:	f8d8 0000 	ldr.w	r0, [r8]
 8002440:	b110      	cbz	r0, 8002448 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8002442:	6803      	ldr	r3, [r0, #0]
 8002444:	695b      	ldr	r3, [r3, #20]
 8002446:	4798      	blx	r3
    if (*currentPresenter)
 8002448:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 800244c:	b110      	cbz	r0, 8002454 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 800244e:	6803      	ldr	r3, [r0, #0]
 8002450:	685b      	ldr	r3, [r3, #4]
 8002452:	4798      	blx	r3
    if (*currentScreen)
 8002454:	f8d8 0000 	ldr.w	r0, [r8]
 8002458:	b110      	cbz	r0, 8002460 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 800245a:	6803      	ldr	r3, [r0, #0]
 800245c:	681b      	ldr	r3, [r3, #0]
 800245e:	4798      	blx	r3
    if (*currentPresenter)
 8002460:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002464:	b110      	cbz	r0, 800246c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8002466:	6803      	ldr	r3, [r0, #0]
 8002468:	689b      	ldr	r3, [r3, #8]
 800246a:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800246c:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 800246e:	6803      	ldr	r3, [r0, #0]
 8002470:	2100      	movs	r1, #0
 8002472:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002474:	4798      	blx	r3
        : screenContainer(0), done(false)
 8002476:	f04f 0b00 	mov.w	fp, #0
 800247a:	4b24      	ldr	r3, [pc, #144]	; (800250c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>)
 800247c:	6003      	str	r3, [r0, #0]
 800247e:	4604      	mov	r4, r0
 8002480:	f8c0 b004 	str.w	fp, [r0, #4]
 8002484:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002488:	68a8      	ldr	r0, [r5, #8]
 800248a:	6803      	ldr	r3, [r0, #0]
 800248c:	4659      	mov	r1, fp
 800248e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002490:	4798      	blx	r3
 8002492:	4606      	mov	r6, r0
 8002494:	f002 fe02 	bl	800509c <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002498:	6868      	ldr	r0, [r5, #4]
 800249a:	6803      	ldr	r3, [r0, #0]
 800249c:	4659      	mov	r1, fp
 800249e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80024a0:	4798      	blx	r3
 80024a2:	4631      	mov	r1, r6
 80024a4:	4605      	mov	r5, r0
 80024a6:	f002 fd4d 	bl	8004f44 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 80024aa:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80024ae:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 80024b2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80024b6:	b1e5      	cbz	r5, 80024f2 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12a>
 80024b8:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80024ba:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80024be:	6833      	ldr	r3, [r6, #0]
    virtual void DisplayRunningTime() {} ;
    virtual void DisplayCurrentValue() {};

    void bind(Model* m)
    {
        model = m;
 80024c0:	f8c5 a008 	str.w	sl, [r5, #8]
 80024c4:	4630      	mov	r0, r6
 80024c6:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 80024c8:	63f5      	str	r5, [r6, #60]	; 0x3c
 80024ca:	4798      	blx	r3
    newPresenter->activate();
 80024cc:	682b      	ldr	r3, [r5, #0]
 80024ce:	4628      	mov	r0, r5
 80024d0:	681b      	ldr	r3, [r3, #0]
 80024d2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80024d4:	4621      	mov	r1, r4
 80024d6:	4630      	mov	r0, r6
 80024d8:	f010 f97e 	bl	80127d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80024dc:	6823      	ldr	r3, [r4, #0]
 80024de:	4620      	mov	r0, r4
 80024e0:	691b      	ldr	r3, [r3, #16]
 80024e2:	4798      	blx	r3
    newTransition->invalidate();
 80024e4:	6823      	ldr	r3, [r4, #0]
 80024e6:	695b      	ldr	r3, [r3, #20]
 80024e8:	4620      	mov	r0, r4
}
 80024ea:	b001      	add	sp, #4
 80024ec:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80024f0:	4718      	bx	r3
    model->bind(newPresenter);
 80024f2:	462b      	mov	r3, r5
 80024f4:	e7e1      	b.n	80024ba <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xf2>
 80024f6:	bf00      	nop
 80024f8:	08021fa0 	.word	0x08021fa0
 80024fc:	0802202e 	.word	0x0802202e
 8002500:	08022132 	.word	0x08022132
 8002504:	08022179 	.word	0x08022179
 8002508:	0802221c 	.word	0x0802221c
 800250c:	08022560 	.word	0x08022560
 8002510:	200154d0 	.word	0x200154d0
 8002514:	200154cc 	.word	0x200154cc

08002518 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002518:	4b04      	ldr	r3, [pc, #16]	; (800252c <_ZN8touchgfx3HAL3lcdEv+0x14>)
 800251a:	681b      	ldr	r3, [r3, #0]
 800251c:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8002520:	b10a      	cbz	r2, 8002526 <_ZN8touchgfx3HAL3lcdEv+0xe>
 8002522:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002524:	b900      	cbnz	r0, 8002528 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 8002526:	6898      	ldr	r0, [r3, #8]
    }
 8002528:	4770      	bx	lr
 800252a:	bf00      	nop
 800252c:	20015488 	.word	0x20015488

08002530 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8002530:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002532:	4604      	mov	r4, r0
        animationCounter++;
 8002534:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter <= (animationSteps))
 8002536:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8002538:	3001      	adds	r0, #1
 800253a:	b2c0      	uxtb	r0, r0
        if (animationCounter <= (animationSteps))
 800253c:	4298      	cmp	r0, r3
    virtual void handleTickEvent()
 800253e:	b089      	sub	sp, #36	; 0x24
        animationCounter++;
 8002540:	72a0      	strb	r0, [r4, #10]
        if (animationCounter <= (animationSteps))
 8002542:	d850      	bhi.n	80025e6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xb6>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002544:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8002548:	2100      	movs	r1, #0
 800254a:	f010 f94b 	bl	80127e4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
            if (calculatedValue % 2)
 800254e:	f010 0201 	ands.w	r2, r0, #1
 8002552:	b283      	uxth	r3, r0
 8002554:	d04d      	beq.n	80025f2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xc2>
                calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8002556:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800255a:	2800      	cmp	r0, #0
 800255c:	bfd8      	it	le
 800255e:	460a      	movle	r2, r1
 8002560:	4413      	add	r3, r2
 8002562:	81e3      	strh	r3, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002564:	4e24      	ldr	r6, [pc, #144]	; (80025f8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xc8>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8002566:	4f25      	ldr	r7, [pc, #148]	; (80025fc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xcc>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002568:	8831      	ldrh	r1, [r6, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 800256a:	f8b4 c018 	ldrh.w	ip, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800256e:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8002570:	f9b7 0000 	ldrsh.w	r0, [r7]
 8002574:	f8ad 001e 	strh.w	r0, [sp, #30]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002578:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 800257a:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 800257c:	4463      	add	r3, ip
 800257e:	1a5b      	subs	r3, r3, r1
 8002580:	f8ad 301c 	strh.w	r3, [sp, #28]
                screenContainer->invalidateRect(r);
 8002584:	6803      	ldr	r3, [r0, #0]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002586:	b212      	sxth	r2, r2
 8002588:	2500      	movs	r5, #0
                screenContainer->invalidateRect(r);
 800258a:	691b      	ldr	r3, [r3, #16]
        rect.width = width;
 800258c:	8322      	strh	r2, [r4, #24]
 800258e:	f8ad 2018 	strh.w	r2, [sp, #24]
 8002592:	f8ad 501a 	strh.w	r5, [sp, #26]
 8002596:	a906      	add	r1, sp, #24
 8002598:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800259a:	7aa3      	ldrb	r3, [r4, #10]
 800259c:	2b01      	cmp	r3, #1
 800259e:	d126      	bne.n	80025ee <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
 80025a0:	4b17      	ldr	r3, [pc, #92]	; (8002600 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xd0>)
 80025a2:	781b      	ldrb	r3, [r3, #0]
 80025a4:	b31b      	cbz	r3, 80025ee <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
            Rect rect = solid.getRect(); // Part to copy between buffers
 80025a6:	69a1      	ldr	r1, [r4, #24]
 80025a8:	6960      	ldr	r0, [r4, #20]
 80025aa:	ab04      	add	r3, sp, #16
 80025ac:	c303      	stmia	r3!, {r0, r1}
        return instance;
 80025ae:	4b15      	ldr	r3, [pc, #84]	; (8002604 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xd4>)
 80025b0:	6818      	ldr	r0, [r3, #0]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 80025b2:	6803      	ldr	r3, [r0, #0]
 80025b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80025b6:	4798      	blx	r3
            source.width = HAL::DISPLAY_WIDTH;
 80025b8:	8833      	ldrh	r3, [r6, #0]
 80025ba:	f8ad 301c 	strh.w	r3, [sp, #28]
            source.height = HAL::DISPLAY_HEIGHT;
 80025be:	883b      	ldrh	r3, [r7, #0]
 80025c0:	f8ad 301e 	strh.w	r3, [sp, #30]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 80025c4:	9003      	str	r0, [sp, #12]
        : x(0), y(0), width(0), height(0)
 80025c6:	f8ad 5018 	strh.w	r5, [sp, #24]
 80025ca:	f8ad 501a 	strh.w	r5, [sp, #26]
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
 80025ce:	f7ff ffa3 	bl	8002518 <_ZN8touchgfx3HAL3lcdEv>
 80025d2:	22ff      	movs	r2, #255	; 0xff
 80025d4:	6803      	ldr	r3, [r0, #0]
 80025d6:	9200      	str	r2, [sp, #0]
 80025d8:	9501      	str	r5, [sp, #4]
 80025da:	68dc      	ldr	r4, [r3, #12]
 80025dc:	9903      	ldr	r1, [sp, #12]
 80025de:	ab04      	add	r3, sp, #16
 80025e0:	aa06      	add	r2, sp, #24
 80025e2:	47a0      	blx	r4
 80025e4:	e003      	b.n	80025ee <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
            done = true;
 80025e6:	2301      	movs	r3, #1
 80025e8:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80025ea:	2300      	movs	r3, #0
 80025ec:	72a3      	strb	r3, [r4, #10]
    }
 80025ee:	b009      	add	sp, #36	; 0x24
 80025f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80025f2:	81e0      	strh	r0, [r4, #14]
 80025f4:	e7b6      	b.n	8002564 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x34>
 80025f6:	bf00      	nop
 80025f8:	2001547c 	.word	0x2001547c
 80025fc:	2001547e 	.word	0x2001547e
 8002600:	20015486 	.word	0x20015486
 8002604:	20015488 	.word	0x20015488

08002608 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002608:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800260a:	4604      	mov	r4, r0
 800260c:	4617      	mov	r7, r2
 800260e:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8002610:	f00e fc54 	bl	8010ebc <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002614:	4b0e      	ldr	r3, [pc, #56]	; (8002650 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>)
 8002616:	601c      	str	r4, [r3, #0]
      model(m)
 8002618:	4b0e      	ldr	r3, [pc, #56]	; (8002654 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x4c>)
 800261a:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 800261c:	4b0e      	ldr	r3, [pc, #56]	; (8002658 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 800261e:	2500      	movs	r5, #0
 8002620:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
 8002624:	4b0d      	ldr	r3, [pc, #52]	; (800265c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 8002626:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 800262a:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 800262c:	6803      	ldr	r3, [r0, #0]
 800262e:	4629      	mov	r1, r5
 8002630:	689b      	ldr	r3, [r3, #8]
 8002632:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
      model(m)
 8002636:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 800263a:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 800263c:	4628      	mov	r0, r5
 800263e:	f002 fbb1 	bl	8004da4 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002642:	f7ff ff69 	bl	8002518 <_ZN8touchgfx3HAL3lcdEv>
 8002646:	f016 fd26 	bl	8019096 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 800264a:	4620      	mov	r0, r4
 800264c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800264e:	bf00      	nop
 8002650:	200154dc 	.word	0x200154dc
 8002654:	08022514 	.word	0x08022514
 8002658:	080224fc 	.word	0x080224fc
 800265c:	20015488 	.word	0x20015488

08002660 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002660:	4b06      	ldr	r3, [pc, #24]	; (800267c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 8002662:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002666:	2300      	movs	r3, #0
 8002668:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 800266c:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002670:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002674:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002678:	4770      	bx	lr
 800267a:	bf00      	nop
 800267c:	080023c9 	.word	0x080023c9

08002680 <_ZN23FrontendApplicationBase35gotoScreen1ScreenWipeTransitionEastEv>:
 8002680:	4b06      	ldr	r3, [pc, #24]	; (800269c <_ZN23FrontendApplicationBase35gotoScreen1ScreenWipeTransitionEastEv+0x1c>)
 8002682:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002686:	2300      	movs	r3, #0
 8002688:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c

void FrontendApplicationBase::gotoScreen1ScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 800268c:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002690:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002694:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002698:	4770      	bx	lr
 800269a:	bf00      	nop
 800269c:	08002865 	.word	0x08002865

080026a0 <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv>:
 80026a0:	4b06      	ldr	r3, [pc, #24]	; (80026bc <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv+0x1c>)
 80026a2:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 80026a6:	2300      	movs	r3, #0
 80026a8:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// ScreenGraph

void FrontendApplicationBase::gotoScreenGraphScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreenGraphScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80026ac:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 80026b0:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 80026b4:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 80026b8:	4770      	bx	lr
 80026ba:	bf00      	nop
 80026bc:	08002725 	.word	0x08002725

080026c0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
    WipeTransition(const uint8_t transitionSteps = 20)
 80026c0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80026c2:	4604      	mov	r4, r0
 80026c4:	2300      	movs	r3, #0
          solid()
 80026c6:	4a13      	ldr	r2, [pc, #76]	; (8002714 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
 80026c8:	6002      	str	r2, [r0, #0]
 80026ca:	6043      	str	r3, [r0, #4]
 80026cc:	7203      	strb	r3, [r0, #8]
 80026ce:	7241      	strb	r1, [r0, #9]
 80026d0:	7283      	strb	r3, [r0, #10]
 80026d2:	e9c4 3305 	strd	r3, r3, [r4, #20]
 80026d6:	e9c4 3307 	strd	r3, r3, [r4, #28]
 80026da:	e9c4 3309 	strd	r3, r3, [r4, #36]	; 0x24
 80026de:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 80026e2:	81e3      	strh	r3, [r4, #14]
 80026e4:	f44f 7380 	mov.w	r3, #256	; 0x100
 80026e8:	6363      	str	r3, [r4, #52]	; 0x34
    class FullSolidRect : public Widget
 80026ea:	4b0b      	ldr	r3, [pc, #44]	; (8002718 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
 80026ec:	6123      	str	r3, [r4, #16]
            targetValue = HAL::DISPLAY_WIDTH;
 80026ee:	4b0b      	ldr	r3, [pc, #44]	; (800271c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x5c>)
 80026f0:	f9b3 1000 	ldrsh.w	r1, [r3]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80026f4:	4b0a      	ldr	r3, [pc, #40]	; (8002720 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x60>)
            targetValue = HAL::DISPLAY_WIDTH;
 80026f6:	81a1      	strh	r1, [r4, #12]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80026f8:	f9b3 5000 	ldrsh.w	r5, [r3]
          solid()
 80026fc:	3010      	adds	r0, #16
        setWidth(width);
 80026fe:	9001      	str	r0, [sp, #4]
 8002700:	f7ff fda6 	bl	8002250 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8002704:	9801      	ldr	r0, [sp, #4]
 8002706:	4629      	mov	r1, r5
 8002708:	f7ff fda4 	bl	8002254 <_ZN8touchgfx8Drawable9setHeightEs>
    }
 800270c:	4620      	mov	r0, r4
 800270e:	b003      	add	sp, #12
 8002710:	bd30      	pop	{r4, r5, pc}
 8002712:	bf00      	nop
 8002714:	080225ec 	.word	0x080225ec
 8002718:	08022584 	.word	0x08022584
 800271c:	2001547c 	.word	0x2001547c
 8002720:	2001547e 	.word	0x2001547e

08002724 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv>:

void FrontendApplicationBase::gotoScreenGraphScreenWipeTransitionEastImpl()
{
 8002724:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<ScreenGraphView, ScreenGraphPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002728:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 800272c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800272e:	68a0      	ldr	r0, [r4, #8]
 8002730:	6803      	ldr	r3, [r0, #0]
 8002732:	6a1b      	ldr	r3, [r3, #32]
 8002734:	4798      	blx	r3
 8002736:	f242 6317 	movw	r3, #9751	; 0x2617
 800273a:	4298      	cmp	r0, r3
 800273c:	d805      	bhi.n	800274a <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x26>
 800273e:	4b42      	ldr	r3, [pc, #264]	; (8002848 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x124>)
 8002740:	4a42      	ldr	r2, [pc, #264]	; (800284c <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x128>)
 8002742:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002744:	4842      	ldr	r0, [pc, #264]	; (8002850 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x12c>)
 8002746:	f01d ff69 	bl	802061c <__assert_func>
 800274a:	6860      	ldr	r0, [r4, #4]
 800274c:	6803      	ldr	r3, [r0, #0]
 800274e:	6a1b      	ldr	r3, [r3, #32]
 8002750:	4798      	blx	r3
 8002752:	280f      	cmp	r0, #15
 8002754:	d803      	bhi.n	800275e <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x3a>
 8002756:	4b3f      	ldr	r3, [pc, #252]	; (8002854 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x130>)
 8002758:	4a3c      	ldr	r2, [pc, #240]	; (800284c <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x128>)
 800275a:	21a4      	movs	r1, #164	; 0xa4
 800275c:	e7f2      	b.n	8002744 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800275e:	68e0      	ldr	r0, [r4, #12]
 8002760:	6803      	ldr	r3, [r0, #0]
 8002762:	6a1b      	ldr	r3, [r3, #32]
 8002764:	4798      	blx	r3
 8002766:	2837      	cmp	r0, #55	; 0x37
 8002768:	d803      	bhi.n	8002772 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x4e>
 800276a:	4b3b      	ldr	r3, [pc, #236]	; (8002858 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x134>)
 800276c:	4a37      	ldr	r2, [pc, #220]	; (800284c <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x128>)
 800276e:	21a5      	movs	r1, #165	; 0xa5
 8002770:	e7e8      	b.n	8002744 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x20>
    if (*currentTrans)
 8002772:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 800285c <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x138>
    Application::getInstance()->clearAllTimerWidgets();
 8002776:	f00e fb81 	bl	8010e7c <_ZN8touchgfx11Application11getInstanceEv>
 800277a:	f00e fb85 	bl	8010e88 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800277e:	f8d9 0000 	ldr.w	r0, [r9]
 8002782:	b110      	cbz	r0, 800278a <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8002784:	6803      	ldr	r3, [r0, #0]
 8002786:	68db      	ldr	r3, [r3, #12]
 8002788:	4798      	blx	r3
    if (*currentTrans)
 800278a:	f8d9 0000 	ldr.w	r0, [r9]
 800278e:	b110      	cbz	r0, 8002796 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8002790:	6803      	ldr	r3, [r0, #0]
 8002792:	681b      	ldr	r3, [r3, #0]
 8002794:	4798      	blx	r3
    if (*currentScreen)
 8002796:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8002860 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x13c>
 800279a:	f8d8 0000 	ldr.w	r0, [r8]
 800279e:	b110      	cbz	r0, 80027a6 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80027a0:	6803      	ldr	r3, [r0, #0]
 80027a2:	695b      	ldr	r3, [r3, #20]
 80027a4:	4798      	blx	r3
    if (*currentPresenter)
 80027a6:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80027aa:	b110      	cbz	r0, 80027b2 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80027ac:	6803      	ldr	r3, [r0, #0]
 80027ae:	685b      	ldr	r3, [r3, #4]
 80027b0:	4798      	blx	r3
    if (*currentScreen)
 80027b2:	f8d8 0000 	ldr.w	r0, [r8]
 80027b6:	b110      	cbz	r0, 80027be <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 80027b8:	6803      	ldr	r3, [r0, #0]
 80027ba:	681b      	ldr	r3, [r3, #0]
 80027bc:	4798      	blx	r3
    if (*currentPresenter)
 80027be:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80027c2:	b110      	cbz	r0, 80027ca <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80027c4:	6803      	ldr	r3, [r0, #0]
 80027c6:	689b      	ldr	r3, [r3, #8]
 80027c8:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80027ca:	68e0      	ldr	r0, [r4, #12]
 80027cc:	6803      	ldr	r3, [r0, #0]
 80027ce:	2100      	movs	r1, #0
 80027d0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80027d2:	4798      	blx	r3
 80027d4:	2114      	movs	r1, #20
 80027d6:	4605      	mov	r5, r0
 80027d8:	f7ff ff72 	bl	80026c0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80027dc:	68a0      	ldr	r0, [r4, #8]
 80027de:	6803      	ldr	r3, [r0, #0]
 80027e0:	2100      	movs	r1, #0
 80027e2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80027e4:	4798      	blx	r3
 80027e6:	4606      	mov	r6, r0
 80027e8:	f002 ffae 	bl	8005748 <_ZN15ScreenGraphViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80027ec:	6860      	ldr	r0, [r4, #4]
 80027ee:	6803      	ldr	r3, [r0, #0]
 80027f0:	2100      	movs	r1, #0
 80027f2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80027f4:	4798      	blx	r3
 80027f6:	4631      	mov	r1, r6
 80027f8:	4604      	mov	r4, r0
 80027fa:	f002 fca1 	bl	8005140 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView>
    *currentTrans = newTransition;
 80027fe:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8002802:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8002806:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800280a:	b1dc      	cbz	r4, 8002844 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x120>
 800280c:	1d23      	adds	r3, r4, #4
 800280e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002812:	6833      	ldr	r3, [r6, #0]
 8002814:	f8c4 a008 	str.w	sl, [r4, #8]
 8002818:	4630      	mov	r0, r6
 800281a:	68db      	ldr	r3, [r3, #12]
 800281c:	63f4      	str	r4, [r6, #60]	; 0x3c
 800281e:	4798      	blx	r3
    newPresenter->activate();
 8002820:	6823      	ldr	r3, [r4, #0]
 8002822:	4620      	mov	r0, r4
 8002824:	681b      	ldr	r3, [r3, #0]
 8002826:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002828:	4629      	mov	r1, r5
 800282a:	4630      	mov	r0, r6
 800282c:	f00f ffd4 	bl	80127d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002830:	682b      	ldr	r3, [r5, #0]
 8002832:	4628      	mov	r0, r5
 8002834:	691b      	ldr	r3, [r3, #16]
 8002836:	4798      	blx	r3
    newTransition->invalidate();
 8002838:	682b      	ldr	r3, [r5, #0]
 800283a:	4628      	mov	r0, r5
 800283c:	695b      	ldr	r3, [r3, #20]
}
 800283e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002842:	4718      	bx	r3
    model->bind(newPresenter);
 8002844:	4623      	mov	r3, r4
 8002846:	e7e2      	b.n	800280e <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0xea>
 8002848:	08021fa0 	.word	0x08021fa0
 800284c:	080222bf 	.word	0x080222bf
 8002850:	08022132 	.word	0x08022132
 8002854:	08022179 	.word	0x08022179
 8002858:	0802221c 	.word	0x0802221c
 800285c:	200154d0 	.word	0x200154d0
 8002860:	200154cc 	.word	0x200154cc

08002864 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv>:
{
 8002864:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002868:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 800286c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800286e:	68a0      	ldr	r0, [r4, #8]
 8002870:	6803      	ldr	r3, [r0, #0]
 8002872:	6a1b      	ldr	r3, [r3, #32]
 8002874:	4798      	blx	r3
 8002876:	f5b0 6fc2 	cmp.w	r0, #1552	; 0x610
 800287a:	d205      	bcs.n	8002888 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x24>
 800287c:	4b42      	ldr	r3, [pc, #264]	; (8002988 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x124>)
 800287e:	4a43      	ldr	r2, [pc, #268]	; (800298c <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x128>)
 8002880:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002882:	4843      	ldr	r0, [pc, #268]	; (8002990 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x12c>)
 8002884:	f01d feca 	bl	802061c <__assert_func>
 8002888:	6860      	ldr	r0, [r4, #4]
 800288a:	6803      	ldr	r3, [r0, #0]
 800288c:	6a1b      	ldr	r3, [r3, #32]
 800288e:	4798      	blx	r3
 8002890:	280f      	cmp	r0, #15
 8002892:	d803      	bhi.n	800289c <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x38>
 8002894:	4b3f      	ldr	r3, [pc, #252]	; (8002994 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x130>)
 8002896:	4a3d      	ldr	r2, [pc, #244]	; (800298c <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x128>)
 8002898:	21a4      	movs	r1, #164	; 0xa4
 800289a:	e7f2      	b.n	8002882 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800289c:	68e0      	ldr	r0, [r4, #12]
 800289e:	6803      	ldr	r3, [r0, #0]
 80028a0:	6a1b      	ldr	r3, [r3, #32]
 80028a2:	4798      	blx	r3
 80028a4:	2837      	cmp	r0, #55	; 0x37
 80028a6:	d803      	bhi.n	80028b0 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x4c>
 80028a8:	4b3b      	ldr	r3, [pc, #236]	; (8002998 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x134>)
 80028aa:	4a38      	ldr	r2, [pc, #224]	; (800298c <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x128>)
 80028ac:	21a5      	movs	r1, #165	; 0xa5
 80028ae:	e7e8      	b.n	8002882 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x1e>
    if (*currentTrans)
 80028b0:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 800299c <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x138>
    Application::getInstance()->clearAllTimerWidgets();
 80028b4:	f00e fae2 	bl	8010e7c <_ZN8touchgfx11Application11getInstanceEv>
 80028b8:	f00e fae6 	bl	8010e88 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80028bc:	f8d9 0000 	ldr.w	r0, [r9]
 80028c0:	b110      	cbz	r0, 80028c8 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x64>
        (*currentTrans)->tearDown();
 80028c2:	6803      	ldr	r3, [r0, #0]
 80028c4:	68db      	ldr	r3, [r3, #12]
 80028c6:	4798      	blx	r3
    if (*currentTrans)
 80028c8:	f8d9 0000 	ldr.w	r0, [r9]
 80028cc:	b110      	cbz	r0, 80028d4 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x70>
        (*currentTrans)->~Transition();
 80028ce:	6803      	ldr	r3, [r0, #0]
 80028d0:	681b      	ldr	r3, [r3, #0]
 80028d2:	4798      	blx	r3
    if (*currentScreen)
 80028d4:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80029a0 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x13c>
 80028d8:	f8d8 0000 	ldr.w	r0, [r8]
 80028dc:	b110      	cbz	r0, 80028e4 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 80028de:	6803      	ldr	r3, [r0, #0]
 80028e0:	695b      	ldr	r3, [r3, #20]
 80028e2:	4798      	blx	r3
    if (*currentPresenter)
 80028e4:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80028e8:	b110      	cbz	r0, 80028f0 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x8c>
        (*currentPresenter)->deactivate();
 80028ea:	6803      	ldr	r3, [r0, #0]
 80028ec:	685b      	ldr	r3, [r3, #4]
 80028ee:	4798      	blx	r3
    if (*currentScreen)
 80028f0:	f8d8 0000 	ldr.w	r0, [r8]
 80028f4:	b110      	cbz	r0, 80028fc <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x98>
        (*currentScreen)->~Screen();
 80028f6:	6803      	ldr	r3, [r0, #0]
 80028f8:	681b      	ldr	r3, [r3, #0]
 80028fa:	4798      	blx	r3
    if (*currentPresenter)
 80028fc:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002900:	b110      	cbz	r0, 8002908 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8002902:	6803      	ldr	r3, [r0, #0]
 8002904:	689b      	ldr	r3, [r3, #8]
 8002906:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002908:	68e0      	ldr	r0, [r4, #12]
 800290a:	6803      	ldr	r3, [r0, #0]
 800290c:	2100      	movs	r1, #0
 800290e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002910:	4798      	blx	r3
 8002912:	2114      	movs	r1, #20
 8002914:	4605      	mov	r5, r0
 8002916:	f7ff fed3 	bl	80026c0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800291a:	68a0      	ldr	r0, [r4, #8]
 800291c:	6803      	ldr	r3, [r0, #0]
 800291e:	2100      	movs	r1, #0
 8002920:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002922:	4798      	blx	r3
 8002924:	4606      	mov	r6, r0
 8002926:	f002 fbb9 	bl	800509c <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800292a:	6860      	ldr	r0, [r4, #4]
 800292c:	6803      	ldr	r3, [r0, #0]
 800292e:	2100      	movs	r1, #0
 8002930:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002932:	4798      	blx	r3
 8002934:	4631      	mov	r1, r6
 8002936:	4604      	mov	r4, r0
 8002938:	f002 fb04 	bl	8004f44 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 800293c:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8002940:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8002944:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002948:	b1dc      	cbz	r4, 8002982 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x11e>
 800294a:	1d23      	adds	r3, r4, #4
 800294c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002950:	6833      	ldr	r3, [r6, #0]
 8002952:	f8c4 a008 	str.w	sl, [r4, #8]
 8002956:	4630      	mov	r0, r6
 8002958:	68db      	ldr	r3, [r3, #12]
 800295a:	63f4      	str	r4, [r6, #60]	; 0x3c
 800295c:	4798      	blx	r3
    newPresenter->activate();
 800295e:	6823      	ldr	r3, [r4, #0]
 8002960:	4620      	mov	r0, r4
 8002962:	681b      	ldr	r3, [r3, #0]
 8002964:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002966:	4629      	mov	r1, r5
 8002968:	4630      	mov	r0, r6
 800296a:	f00f ff35 	bl	80127d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800296e:	682b      	ldr	r3, [r5, #0]
 8002970:	4628      	mov	r0, r5
 8002972:	691b      	ldr	r3, [r3, #16]
 8002974:	4798      	blx	r3
    newTransition->invalidate();
 8002976:	682b      	ldr	r3, [r5, #0]
 8002978:	4628      	mov	r0, r5
 800297a:	695b      	ldr	r3, [r3, #20]
}
 800297c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002980:	4718      	bx	r3
    model->bind(newPresenter);
 8002982:	4623      	mov	r3, r4
 8002984:	e7e2      	b.n	800294c <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0xe8>
 8002986:	bf00      	nop
 8002988:	08021fa0 	.word	0x08021fa0
 800298c:	080223dd 	.word	0x080223dd
 8002990:	08022132 	.word	0x08022132
 8002994:	08022179 	.word	0x08022179
 8002998:	0802221c 	.word	0x0802221c
 800299c:	200154d0 	.word	0x200154d0
 80029a0:	200154cc 	.word	0x200154cc

080029a4 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 80029a4:	6a00      	ldr	r0, [r0, #32]
 80029a6:	4770      	bx	lr

080029a8 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 80029a8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80029aa:	4770      	bx	lr

080029ac <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 80029ac:	4770      	bx	lr

080029ae <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 80029ae:	888b      	ldrh	r3, [r1, #4]
 80029b0:	6980      	ldr	r0, [r0, #24]
 80029b2:	680a      	ldr	r2, [r1, #0]
 80029b4:	0adb      	lsrs	r3, r3, #11
 80029b6:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 80029ba:	4410      	add	r0, r2
 80029bc:	4770      	bx	lr

080029be <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80029be:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 80029c0:	b1c2      	cbz	r2, 80029f4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 80029c2:	7b13      	ldrb	r3, [r2, #12]
 80029c4:	b1b3      	cbz	r3, 80029f4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 80029c6:	7b54      	ldrb	r4, [r2, #13]
 80029c8:	7ad2      	ldrb	r2, [r2, #11]
 80029ca:	0224      	lsls	r4, r4, #8
 80029cc:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80029d0:	4314      	orrs	r4, r2
 80029d2:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80029d4:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80029d6:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 80029da:	8813      	ldrh	r3, [r2, #0]
 80029dc:	428b      	cmp	r3, r1
 80029de:	d102      	bne.n	80029e6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 80029e0:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 80029e4:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 80029e6:	d805      	bhi.n	80029f4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80029e8:	3801      	subs	r0, #1
 80029ea:	b280      	uxth	r0, r0
 80029ec:	3204      	adds	r2, #4
 80029ee:	2800      	cmp	r0, #0
 80029f0:	d1f3      	bne.n	80029da <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80029f2:	e7f7      	b.n	80029e4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 80029f4:	2000      	movs	r0, #0
 80029f6:	e7f5      	b.n	80029e4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

080029f8 <_ZN8touchgfx13GeneratedFontD0Ev>:
 80029f8:	b510      	push	{r4, lr}
 80029fa:	2128      	movs	r1, #40	; 0x28
 80029fc:	4604      	mov	r4, r0
 80029fe:	f01d fd59 	bl	80204b4 <_ZdlPvj>
 8002a02:	4620      	mov	r0, r4
 8002a04:	bd10      	pop	{r4, pc}
	...

08002a08 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8002a08:	b530      	push	{r4, r5, lr}
 8002a0a:	b089      	sub	sp, #36	; 0x24
 8002a0c:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8002a0e:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 8002a12:	9506      	str	r5, [sp, #24]
 8002a14:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8002a18:	9505      	str	r5, [sp, #20]
 8002a1a:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8002a1e:	9504      	str	r5, [sp, #16]
 8002a20:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8002a24:	9503      	str	r5, [sp, #12]
 8002a26:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 8002a2a:	9502      	str	r5, [sp, #8]
 8002a2c:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8002a30:	9501      	str	r5, [sp, #4]
 8002a32:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8002a36:	9500      	str	r5, [sp, #0]
 8002a38:	f00f fa64 	bl	8011f04 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 8002a3c:	4b06      	ldr	r3, [pc, #24]	; (8002a58 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
 8002a3e:	6023      	str	r3, [r4, #0]
 8002a40:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002a42:	61a3      	str	r3, [r4, #24]
 8002a44:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002a46:	61e3      	str	r3, [r4, #28]
 8002a48:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8002a4a:	6223      	str	r3, [r4, #32]
 8002a4c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8002a4e:	6263      	str	r3, [r4, #36]	; 0x24
}
 8002a50:	4620      	mov	r0, r4
 8002a52:	b009      	add	sp, #36	; 0x24
 8002a54:	bd30      	pop	{r4, r5, pc}
 8002a56:	bf00      	nop
 8002a58:	08022610 	.word	0x08022610

08002a5c <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8002a5c:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8002a5e:	4770      	bx	lr

08002a60 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002a60:	4770      	bx	lr

08002a62 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002a62:	4770      	bx	lr

08002a64 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002a64:	4770      	bx	lr

08002a66 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002a66:	4770      	bx	lr

08002a68 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002a68:	4770      	bx	lr

08002a6a <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8002a6a:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002a6c:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 8002a6e:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8002a70:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002a72:	466d      	mov	r5, sp
 8002a74:	4601      	mov	r1, r0
 8002a76:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 8002a7a:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002a7c:	4628      	mov	r0, r5
 8002a7e:	4798      	blx	r3
 8002a80:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002a84:	343c      	adds	r4, #60	; 0x3c
 8002a86:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002a8a:	b005      	add	sp, #20
 8002a8c:	bd30      	pop	{r4, r5, pc}

08002a8e <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 8002a8e:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8002a90:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 8002a92:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 8002a94:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002a96:	466d      	mov	r5, sp
 8002a98:	4601      	mov	r1, r0
 8002a9a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 8002a9e:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002aa0:	4628      	mov	r0, r5
 8002aa2:	4798      	blx	r3
 8002aa4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002aa8:	343c      	adds	r4, #60	; 0x3c
 8002aaa:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002aae:	b005      	add	sp, #20
 8002ab0:	bd30      	pop	{r4, r5, pc}

08002ab2 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 8002ab2:	2200      	movs	r2, #0
 8002ab4:	8002      	strh	r2, [r0, #0]
 8002ab6:	8042      	strh	r2, [r0, #2]
 8002ab8:	8082      	strh	r2, [r0, #4]
 8002aba:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002abc:	4770      	bx	lr

08002abe <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002abe:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 8002ac2:	4770      	bx	lr

08002ac4 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002ac4:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 8002ac6:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002ac8:	4604      	mov	r4, r0
        setX(x);
 8002aca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002acc:	4615      	mov	r5, r2
        setX(x);
 8002ace:	4798      	blx	r3
        setBaselineY(baselineY);
 8002ad0:	6823      	ldr	r3, [r4, #0]
 8002ad2:	4629      	mov	r1, r5
 8002ad4:	4620      	mov	r0, r4
 8002ad6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 8002ad8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002adc:	4718      	bx	r3

08002ade <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 8002ade:	2000      	movs	r0, #0
 8002ae0:	4770      	bx	lr

08002ae2 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 8002ae2:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8002ae4:	4770      	bx	lr

08002ae6 <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 8002ae6:	4770      	bx	lr

08002ae8 <_ZN15Screen1ViewBase17ButtonDownClickedEv>:
     * Virtual Action Handlers
     */
    virtual void ButtonDownClicked()
    {
        // Override and implement this function in Screen1
    }
 8002ae8:	4770      	bx	lr

08002aea <_ZN15Screen1ViewBase15ButtonUpClickedEv>:

    virtual void ButtonUpClicked()
    {
        // Override and implement this function in Screen1
    }
 8002aea:	4770      	bx	lr

08002aec <_ZN15Screen1ViewBase18ButtonStartClickedEv>:

    virtual void ButtonStartClicked()
    {
        // Override and implement this function in Screen1
    }
 8002aec:	4770      	bx	lr

08002aee <_ZN15Screen1ViewBase19ButtonUpTimeClickedEv>:

    virtual void ButtonUpTimeClicked()
    {
        // Override and implement this function in Screen1
    }
 8002aee:	4770      	bx	lr

08002af0 <_ZN15Screen1ViewBase21ButtonDownTimeClickedEv>:

    virtual void ButtonDownTimeClicked()
    {
        // Override and implement this function in Screen1
    }
 8002af0:	4770      	bx	lr

08002af2 <_ZN15Screen1ViewBase11setupScreenEv>:
}

void Screen1ViewBase::setupScreen()
{

}
 8002af2:	4770      	bx	lr

08002af4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
 * @tparam T Generic type parameter. Typically a AbstractButtonContainer subclass.
 *
 * @see AbstractButtonContainer, BoxWithBorder
 */
template <class T>
class BoxWithBorderButtonStyle : public T
 8002af4:	4770      	bx	lr

08002af6 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
     *
     * @see setPressed
     */
    bool getPressed()
    {
        return pressed;
 8002af6:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
 8002afa:	b14b      	cbz	r3, 8002b10 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x1a>
 8002afc:	f100 026c 	add.w	r2, r0, #108	; 0x6c
 8002b00:	6812      	ldr	r2, [r2, #0]
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8002b02:	65c2      	str	r2, [r0, #92]	; 0x5c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8002b04:	b13b      	cbz	r3, 8002b16 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x20>
 8002b06:	f100 0374 	add.w	r3, r0, #116	; 0x74
 8002b0a:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
 8002b0c:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
 8002b0e:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 8002b10:	f100 0268 	add.w	r2, r0, #104	; 0x68
 8002b14:	e7f4      	b.n	8002b00 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xa>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8002b16:	f100 0370 	add.w	r3, r0, #112	; 0x70
 8002b1a:	e7f6      	b.n	8002b0a <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>

08002b1c <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002b1c:	4770      	bx	lr

08002b1e <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 8002b1e:	4770      	bx	lr

08002b20 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
 * The position of the icon can be adjusted with setIconXY.
 *
 * @see AbstractButtonContainer
 */
template <class T>
class IconButtonStyle : public T
 8002b20:	4770      	bx	lr

08002b22 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8002b22:	4770      	bx	lr

08002b24 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002b24:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002b26:	68c2      	ldr	r2, [r0, #12]
 8002b28:	6844      	ldr	r4, [r0, #4]
 8002b2a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002b2c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002b2e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002b32:	07d2      	lsls	r2, r2, #31
 8002b34:	bf48      	it	mi
 8002b36:	5962      	ldrmi	r2, [r4, r5]
 8002b38:	689b      	ldr	r3, [r3, #8]
    }
 8002b3a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002b3c:	bf48      	it	mi
 8002b3e:	58d3      	ldrmi	r3, [r2, r3]
 8002b40:	4718      	bx	r3

08002b42 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002b42:	6843      	ldr	r3, [r0, #4]
 8002b44:	b12b      	cbz	r3, 8002b52 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 8002b46:	6883      	ldr	r3, [r0, #8]
 8002b48:	b92b      	cbnz	r3, 8002b56 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8002b4a:	68c0      	ldr	r0, [r0, #12]
 8002b4c:	f000 0001 	and.w	r0, r0, #1
 8002b50:	4770      	bx	lr
 8002b52:	4618      	mov	r0, r3
 8002b54:	4770      	bx	lr
 8002b56:	2001      	movs	r0, #1
    }
 8002b58:	4770      	bx	lr

08002b5a <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002b5a:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002b5c:	68c2      	ldr	r2, [r0, #12]
 8002b5e:	6844      	ldr	r4, [r0, #4]
 8002b60:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002b62:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002b64:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002b68:	07d2      	lsls	r2, r2, #31
 8002b6a:	bf48      	it	mi
 8002b6c:	5962      	ldrmi	r2, [r4, r5]
 8002b6e:	689b      	ldr	r3, [r3, #8]
    }
 8002b70:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002b72:	bf48      	it	mi
 8002b74:	58d3      	ldrmi	r3, [r2, r3]
 8002b76:	4718      	bx	r3

08002b78 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002b78:	6843      	ldr	r3, [r0, #4]
 8002b7a:	b12b      	cbz	r3, 8002b88 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002b7c:	6883      	ldr	r3, [r0, #8]
 8002b7e:	b92b      	cbnz	r3, 8002b8c <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002b80:	68c0      	ldr	r0, [r0, #12]
 8002b82:	f000 0001 	and.w	r0, r0, #1
 8002b86:	4770      	bx	lr
 8002b88:	4618      	mov	r0, r3
 8002b8a:	4770      	bx	lr
 8002b8c:	2001      	movs	r0, #1
    }
 8002b8e:	4770      	bx	lr

08002b90 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:
    }

    /** @copydoc Image::getAlpha() */
    uint8_t getAlpha() const
    {
        return alpha;
 8002b90:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
     *
     * @note The user code must call invalidate() in order to update the display.
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002b94:	f880 30a4 	strb.w	r3, [r0, #164]	; 0xa4
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002b98:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        iconImage.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8002b9c:	4770      	bx	lr

08002b9e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
 8002b9e:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 8002ba2:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8002ba6:	4770      	bx	lr

08002ba8 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    virtual void handlePressedUpdated()
 8002ba8:	b510      	push	{r4, lr}
 8002baa:	4604      	mov	r4, r0
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 8002bac:	307c      	adds	r0, #124	; 0x7c
 8002bae:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8002bb2:	b13b      	cbz	r3, 8002bc4 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x1c>
 8002bb4:	f104 017a 	add.w	r1, r4, #122	; 0x7a
 8002bb8:	f00b fcb2 	bl	800e520 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::handlePressedUpdated();
 8002bbc:	4620      	mov	r0, r4
 8002bbe:	f7ff ff9a 	bl	8002af6 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 8002bc2:	bd10      	pop	{r4, pc}
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 8002bc4:	f104 0178 	add.w	r1, r4, #120	; 0x78
 8002bc8:	e7f6      	b.n	8002bb8 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x10>

08002bca <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002bca:	b510      	push	{r4, lr}
 8002bcc:	214c      	movs	r1, #76	; 0x4c
 8002bce:	4604      	mov	r4, r0
 8002bd0:	f01d fc70 	bl	80204b4 <_ZdlPvj>
 8002bd4:	4620      	mov	r0, r4
 8002bd6:	bd10      	pop	{r4, pc}

08002bd8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
 8002bd8:	b510      	push	{r4, lr}
 8002bda:	2178      	movs	r1, #120	; 0x78
 8002bdc:	4604      	mov	r4, r0
 8002bde:	f01d fc69 	bl	80204b4 <_ZdlPvj>
 8002be2:	4620      	mov	r0, r4
 8002be4:	bd10      	pop	{r4, pc}

08002be6 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class IconButtonStyle : public T
 8002be6:	b510      	push	{r4, lr}
 8002be8:	21a8      	movs	r1, #168	; 0xa8
 8002bea:	4604      	mov	r4, r0
 8002bec:	f01d fc62 	bl	80204b4 <_ZdlPvj>
 8002bf0:	4620      	mov	r0, r4
 8002bf2:	bd10      	pop	{r4, pc}

08002bf4 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002bf4:	b510      	push	{r4, lr}
 8002bf6:	2110      	movs	r1, #16
 8002bf8:	4604      	mov	r4, r0
 8002bfa:	f01d fc5b 	bl	80204b4 <_ZdlPvj>
 8002bfe:	4620      	mov	r0, r4
 8002c00:	bd10      	pop	{r4, pc}

08002c02 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 8002c02:	b510      	push	{r4, lr}
 8002c04:	2110      	movs	r1, #16
 8002c06:	4604      	mov	r4, r0
 8002c08:	f01d fc54 	bl	80204b4 <_ZdlPvj>
 8002c0c:	4620      	mov	r0, r4
 8002c0e:	bd10      	pop	{r4, pc}

08002c10 <_ZN15Screen1ViewBaseD0Ev>:
    virtual ~Screen1ViewBase() {}
 8002c10:	b510      	push	{r4, lr}
 8002c12:	f44f 61c2 	mov.w	r1, #1552	; 0x610
 8002c16:	4604      	mov	r4, r0
 8002c18:	f01d fc4c 	bl	80204b4 <_ZdlPvj>
 8002c1c:	4620      	mov	r0, r4
 8002c1e:	bd10      	pop	{r4, pc}

08002c20 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 8002c20:	b510      	push	{r4, lr}
 8002c22:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
 8002c24:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8002c26:	b150      	cbz	r0, 8002c3e <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 8002c28:	6803      	ldr	r3, [r0, #0]
 8002c2a:	68db      	ldr	r3, [r3, #12]
 8002c2c:	4798      	blx	r3
 8002c2e:	b130      	cbz	r0, 8002c3e <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
        {
            action->execute(*this);
 8002c30:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8002c32:	6803      	ldr	r3, [r0, #0]
 8002c34:	4621      	mov	r1, r4
 8002c36:	689b      	ldr	r3, [r3, #8]
        }
    }
 8002c38:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 8002c3c:	4718      	bx	r3
    }
 8002c3e:	bd10      	pop	{r4, pc}

08002c40 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:
    }
}

void Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &ButtonDown)
 8002c40:	f100 02c4 	add.w	r2, r0, #196	; 0xc4
 8002c44:	4291      	cmp	r1, r2
 8002c46:	d102      	bne.n	8002c4e <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
    {
        //ButtonUpInteraction
        //When ButtonDown clicked call virtual function
        //Call ButtonDownClicked
        ButtonDownClicked();
 8002c48:	6803      	ldr	r3, [r0, #0]
 8002c4a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    else if (&src == &ButtonUpTime)
    {
        //InteractionButtonUpTimeClicked
        //When ButtonUpTime clicked call virtual function
        //Call ButtonUpTimeClicked
        ButtonUpTimeClicked();
 8002c4c:	4718      	bx	r3
    else if (&src == &ButtonUp)
 8002c4e:	f500 72b6 	add.w	r2, r0, #364	; 0x16c
 8002c52:	4291      	cmp	r1, r2
 8002c54:	d102      	bne.n	8002c5c <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1c>
        ButtonUpClicked();
 8002c56:	6803      	ldr	r3, [r0, #0]
 8002c58:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002c5a:	e7f7      	b.n	8002c4c <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    else if (&src == &ButtonDownTime)
 8002c5c:	f200 4224 	addw	r2, r0, #1060	; 0x424
 8002c60:	4291      	cmp	r1, r2
 8002c62:	d102      	bne.n	8002c6a <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x2a>
        ButtonDownTimeClicked();
 8002c64:	6803      	ldr	r3, [r0, #0]
 8002c66:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002c68:	e7f0      	b.n	8002c4c <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    else if (&src == &ButtonUpTime)
 8002c6a:	f200 42cc 	addw	r2, r0, #1228	; 0x4cc
 8002c6e:	4291      	cmp	r1, r2
 8002c70:	d102      	bne.n	8002c78 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x38>
        ButtonUpTimeClicked();
 8002c72:	6803      	ldr	r3, [r0, #0]
 8002c74:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002c76:	e7e9      	b.n	8002c4c <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    }
}
 8002c78:	4770      	bx	lr

08002c7a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
 8002c7a:	790b      	ldrb	r3, [r1, #4]
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8002c7c:	b570      	push	{r4, r5, r6, lr}
        return pressed;
 8002c7e:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
 8002c82:	4604      	mov	r4, r0
 8002c84:	460d      	mov	r5, r1
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002c86:	b99b      	cbnz	r3, 8002cb0 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x36>
 8002c88:	b98e      	cbnz	r6, 8002cae <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 8002c8a:	fab3 f383 	clz	r3, r3
 8002c8e:	095b      	lsrs	r3, r3, #5
 8002c90:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        handlePressedUpdated();
 8002c94:	6823      	ldr	r3, [r4, #0]
 8002c96:	4620      	mov	r0, r4
 8002c98:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002c9c:	4798      	blx	r3
        {
            setPressed(newPressedValue);
            invalidate();
 8002c9e:	6823      	ldr	r3, [r4, #0]
 8002ca0:	4620      	mov	r0, r4
 8002ca2:	695b      	ldr	r3, [r3, #20]
 8002ca4:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 8002ca6:	b116      	cbz	r6, 8002cae <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002ca8:	792b      	ldrb	r3, [r5, #4]
 8002caa:	2b01      	cmp	r3, #1
 8002cac:	d003      	beq.n	8002cb6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
 8002cae:	bd70      	pop	{r4, r5, r6, pc}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002cb0:	2e00      	cmp	r6, #0
 8002cb2:	d0fc      	beq.n	8002cae <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002cb4:	e7e9      	b.n	8002c8a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            executeAction();
 8002cb6:	6823      	ldr	r3, [r4, #0]
 8002cb8:	4620      	mov	r0, r4
 8002cba:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    }
 8002cbe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 8002cc2:	4718      	bx	r3

08002cc4 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002cc4:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002cc6:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002cc8:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002cca:	4b12      	ldr	r3, [pc, #72]	; (8002d14 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8002ccc:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002cce:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002cd0:	b28d      	uxth	r5, r1
 8002cd2:	b92b      	cbnz	r3, 8002ce0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8002cd4:	4b10      	ldr	r3, [pc, #64]	; (8002d18 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8002cd6:	4a11      	ldr	r2, [pc, #68]	; (8002d1c <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002cd8:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002cda:	4811      	ldr	r0, [pc, #68]	; (8002d20 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8002cdc:	f01d fc9e 	bl	802061c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002ce0:	4910      	ldr	r1, [pc, #64]	; (8002d24 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8002ce2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002ce4:	8809      	ldrh	r1, [r1, #0]
 8002ce6:	4291      	cmp	r1, r2
 8002ce8:	d803      	bhi.n	8002cf2 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8002cea:	4b0f      	ldr	r3, [pc, #60]	; (8002d28 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8002cec:	4a0b      	ldr	r2, [pc, #44]	; (8002d1c <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002cee:	216d      	movs	r1, #109	; 0x6d
 8002cf0:	e7f3      	b.n	8002cda <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002cf2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8002cf6:	4b0d      	ldr	r3, [pc, #52]	; (8002d2c <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8002cf8:	681b      	ldr	r3, [r3, #0]
 8002cfa:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8002cfe:	6803      	ldr	r3, [r0, #0]
 8002d00:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002d02:	4798      	blx	r3
 8002d04:	1a28      	subs	r0, r5, r0
 8002d06:	b201      	sxth	r1, r0
 8002d08:	4633      	mov	r3, r6
 8002d0a:	4620      	mov	r0, r4
    }
 8002d0c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002d10:	4718      	bx	r3
 8002d12:	bf00      	nop
 8002d14:	200154e0 	.word	0x200154e0
 8002d18:	08022660 	.word	0x08022660
 8002d1c:	080226a2 	.word	0x080226a2
 8002d20:	080226dd 	.word	0x080226dd
 8002d24:	200154e4 	.word	0x200154e4
 8002d28:	08022724 	.word	0x08022724
 8002d2c:	200154e8 	.word	0x200154e8

08002d30 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonStart)
 8002d30:	f500 732a 	add.w	r3, r0, #680	; 0x2a8
 8002d34:	428b      	cmp	r3, r1
{
 8002d36:	b510      	push	{r4, lr}
 8002d38:	4604      	mov	r4, r0
    if (&src == &buttonStart)
 8002d3a:	d109      	bne.n	8002d50 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x20>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002d3c:	f00e f89e 	bl	8010e7c <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoScreenGraphScreenWipeTransitionEast();
 8002d40:	f7ff fcae 	bl	80026a0 <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv>
        ButtonStartClicked();
 8002d44:	6823      	ldr	r3, [r4, #0]
 8002d46:	4620      	mov	r0, r4
 8002d48:	6b5b      	ldr	r3, [r3, #52]	; 0x34
}
 8002d4a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        ButtonStartClicked();
 8002d4e:	4718      	bx	r3
}
 8002d50:	bd10      	pop	{r4, pc}

08002d52 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8002d52:	2200      	movs	r2, #0
 8002d54:	f04f 31ff 	mov.w	r1, #4294967295
 8002d58:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8002d5c:	6082      	str	r2, [r0, #8]
    }
 8002d5e:	4770      	bx	lr

08002d60 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002d60:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002d62:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002d64:	4604      	mov	r4, r0
        setX(x);
 8002d66:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002d68:	4615      	mov	r5, r2
        setX(x);
 8002d6a:	4798      	blx	r3
        setY(y);
 8002d6c:	6823      	ldr	r3, [r4, #0]
 8002d6e:	4629      	mov	r1, r5
 8002d70:	4620      	mov	r0, r4
 8002d72:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8002d74:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002d78:	4718      	bx	r3

08002d7a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>:
        iconReleased = newIconReleased;
 8002d7a:	880b      	ldrh	r3, [r1, #0]
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002d7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        iconReleased = newIconReleased;
 8002d80:	f8a0 3078 	strh.w	r3, [r0, #120]	; 0x78
        iconPressed = newIconPressed;
 8002d84:	8813      	ldrh	r3, [r2, #0]
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002d86:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
        iconPressed = newIconPressed;
 8002d8a:	f8a0 307a 	strh.w	r3, [r0, #122]	; 0x7a
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002d8e:	4604      	mov	r4, r0
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002d90:	4610      	mov	r0, r2
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002d92:	4690      	mov	r8, r2
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002d94:	f011 faa2 	bl	80142dc <_ZNK8touchgfx6Bitmap8getWidthEv>
 8002d98:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8002d9c:	4607      	mov	r7, r0
 8002d9e:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8002da2:	4640      	mov	r0, r8
 8002da4:	f3c3 064f 	ubfx	r6, r3, #1, #16
 8002da8:	f011 facc 	bl	8014344 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8002dac:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8002db0:	f3c5 054f 	ubfx	r5, r5, #1, #16
 8002db4:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8002db8:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
 8002dbc:	eba6 0260 	sub.w	r2, r6, r0, asr #1
 8002dc0:	eba5 0767 	sub.w	r7, r5, r7, asr #1
 8002dc4:	f104 007c 	add.w	r0, r4, #124	; 0x7c
 8002dc8:	b239      	sxth	r1, r7
 8002dca:	b212      	sxth	r2, r2
 8002dcc:	f7ff ffc8 	bl	8002d60 <_ZN8touchgfx8Drawable5setXYEss>
        handlePressedUpdated();
 8002dd0:	6823      	ldr	r3, [r4, #0]
 8002dd2:	4620      	mov	r0, r4
 8002dd4:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
    }
 8002dd8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        handlePressedUpdated();
 8002ddc:	4718      	bx	r3

08002dde <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002dde:	b570      	push	{r4, r5, r6, lr}
 8002de0:	4604      	mov	r4, r0
 8002de2:	461d      	mov	r5, r3
 8002de4:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002de8:	f7ff ffba 	bl	8002d60 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002dec:	6823      	ldr	r3, [r4, #0]
 8002dee:	4629      	mov	r1, r5
 8002df0:	4620      	mov	r0, r4
 8002df2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002df4:	4798      	blx	r3
        setHeight(height);
 8002df6:	6823      	ldr	r3, [r4, #0]
 8002df8:	4631      	mov	r1, r6
 8002dfa:	4620      	mov	r0, r4
 8002dfc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002dfe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002e02:	4718      	bx	r3

08002e04 <_ZN8touchgfx6WidgetC1Ev>:
 8002e04:	2200      	movs	r2, #0
 8002e06:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002e0a:	e9c0 2203 	strd	r2, r2, [r0, #12]
          visible(true)
 8002e0e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8002e12:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8002e16:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002e1a:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8002e1c:	4a01      	ldr	r2, [pc, #4]	; (8002e24 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8002e1e:	6002      	str	r2, [r0, #0]
 8002e20:	4770      	bx	lr
 8002e22:	bf00      	nop
 8002e24:	080227a8 	.word	0x080227a8

08002e28 <_ZN8touchgfx3BoxC1Ev>:
    Box()
 8002e28:	b510      	push	{r4, lr}
        : Widget(), alpha(255), color(0)
 8002e2a:	2226      	movs	r2, #38	; 0x26
    Box()
 8002e2c:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 8002e2e:	2100      	movs	r1, #0
 8002e30:	f01d fd7a 	bl	8020928 <memset>
 8002e34:	4620      	mov	r0, r4
 8002e36:	f7ff ffe5 	bl	8002e04 <_ZN8touchgfx6WidgetC1Ev>
 8002e3a:	4b04      	ldr	r3, [pc, #16]	; (8002e4c <_ZN8touchgfx3BoxC1Ev+0x24>)
 8002e3c:	6023      	str	r3, [r4, #0]
 8002e3e:	23ff      	movs	r3, #255	; 0xff
 8002e40:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
        : color(col)
 8002e44:	2300      	movs	r3, #0
 8002e46:	62a3      	str	r3, [r4, #40]	; 0x28
    }
 8002e48:	4620      	mov	r0, r4
 8002e4a:	bd10      	pop	{r4, pc}
 8002e4c:	08023e34 	.word	0x08023e34

08002e50 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
    Image(const Bitmap& bmp = Bitmap())
 8002e50:	b538      	push	{r3, r4, r5, lr}
        : Widget(), bitmap(bmp), alpha(255)
 8002e52:	2226      	movs	r2, #38	; 0x26
    Image(const Bitmap& bmp = Bitmap())
 8002e54:	4604      	mov	r4, r0
 8002e56:	460d      	mov	r5, r1
        : Widget(), bitmap(bmp), alpha(255)
 8002e58:	2100      	movs	r1, #0
 8002e5a:	f01d fd65 	bl	8020928 <memset>
 8002e5e:	4620      	mov	r0, r4
 8002e60:	f7ff ffd0 	bl	8002e04 <_ZN8touchgfx6WidgetC1Ev>
 8002e64:	4b06      	ldr	r3, [pc, #24]	; (8002e80 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 8002e66:	6023      	str	r3, [r4, #0]
 8002e68:	882b      	ldrh	r3, [r5, #0]
 8002e6a:	84e3      	strh	r3, [r4, #38]	; 0x26
 8002e6c:	23ff      	movs	r3, #255	; 0xff
        Image::setBitmap(bmp);
 8002e6e:	4620      	mov	r0, r4
        : Widget(), bitmap(bmp), alpha(255)
 8002e70:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
        Image::setBitmap(bmp);
 8002e74:	4629      	mov	r1, r5
 8002e76:	f00b fb53 	bl	800e520 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 8002e7a:	4620      	mov	r0, r4
 8002e7c:	bd38      	pop	{r3, r4, r5, pc}
 8002e7e:	bf00      	nop
 8002e80:	08023f78 	.word	0x08023f78

08002e84 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8002e84:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002e86:	2226      	movs	r2, #38	; 0x26
    TextArea()
 8002e88:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002e8a:	2100      	movs	r1, #0
 8002e8c:	f01d fd4c 	bl	8020928 <memset>
 8002e90:	4620      	mov	r0, r4
 8002e92:	f7ff ffb7 	bl	8002e04 <_ZN8touchgfx6WidgetC1Ev>
 8002e96:	4b0a      	ldr	r3, [pc, #40]	; (8002ec0 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8002e98:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8002e9a:	4b0a      	ldr	r3, [pc, #40]	; (8002ec4 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 8002e9c:	62a3      	str	r3, [r4, #40]	; 0x28
 8002e9e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002ea2:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002ea4:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002ea8:	2300      	movs	r3, #0
 8002eaa:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002eae:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 8002eb2:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002eb6:	8723      	strh	r3, [r4, #56]	; 0x38
 8002eb8:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8002eba:	4620      	mov	r0, r4
 8002ebc:	bd10      	pop	{r4, pc}
 8002ebe:	bf00      	nop
 8002ec0:	08023da4 	.word	0x08023da4
 8002ec4:	08021f98 	.word	0x08021f98

08002ec8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8002ec8:	4b1b      	ldr	r3, [pc, #108]	; (8002f38 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8002eca:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8002ecc:	881b      	ldrh	r3, [r3, #0]
 8002ece:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8002ed0:	428b      	cmp	r3, r1
    void updateTextPosition()
 8002ed2:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8002ed4:	d92b      	bls.n	8002f2e <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002ed6:	4b19      	ldr	r3, [pc, #100]	; (8002f3c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8002ed8:	681b      	ldr	r3, [r3, #0]
 8002eda:	b92b      	cbnz	r3, 8002ee8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8002edc:	4b18      	ldr	r3, [pc, #96]	; (8002f40 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8002ede:	4a19      	ldr	r2, [pc, #100]	; (8002f44 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8002ee0:	4819      	ldr	r0, [pc, #100]	; (8002f48 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8002ee2:	216c      	movs	r1, #108	; 0x6c
 8002ee4:	f01d fb9a 	bl	802061c <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002ee8:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002eec:	4b17      	ldr	r3, [pc, #92]	; (8002f4c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8002eee:	681b      	ldr	r3, [r3, #0]
 8002ef0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002ef4:	4b16      	ldr	r3, [pc, #88]	; (8002f50 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x88>)
 8002ef6:	6818      	ldr	r0, [r3, #0]
 8002ef8:	f001 ff90 	bl	8004e1c <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002efc:	682b      	ldr	r3, [r5, #0]
 8002efe:	9001      	str	r0, [sp, #4]
 8002f00:	4601      	mov	r1, r0
 8002f02:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002f04:	4628      	mov	r0, r5
 8002f06:	4798      	blx	r3
 8002f08:	682b      	ldr	r3, [r5, #0]
 8002f0a:	9901      	ldr	r1, [sp, #4]
 8002f0c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002f0e:	4604      	mov	r4, r0
 8002f10:	4628      	mov	r0, r5
 8002f12:	4798      	blx	r3
 8002f14:	682b      	ldr	r3, [r5, #0]
 8002f16:	9901      	ldr	r1, [sp, #4]
 8002f18:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002f1a:	fb14 f400 	smulbb	r4, r4, r0
 8002f1e:	4628      	mov	r0, r5
 8002f20:	4798      	blx	r3
 8002f22:	b2e4      	uxtb	r4, r4
 8002f24:	4404      	add	r4, r0
 8002f26:	f886 4045 	strb.w	r4, [r6, #69]	; 0x45
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002f2a:	b002      	add	sp, #8
 8002f2c:	bd70      	pop	{r4, r5, r6, pc}
            textHeightIncludingSpacing = 0;
 8002f2e:	2300      	movs	r3, #0
 8002f30:	f880 3045 	strb.w	r3, [r0, #69]	; 0x45
    }
 8002f34:	e7f9      	b.n	8002f2a <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x62>
 8002f36:	bf00      	nop
 8002f38:	200154e4 	.word	0x200154e4
 8002f3c:	200154e0 	.word	0x200154e0
 8002f40:	08022660 	.word	0x08022660
 8002f44:	080226a2 	.word	0x080226a2
 8002f48:	080226dd 	.word	0x080226dd
 8002f4c:	200154e8 	.word	0x200154e8
 8002f50:	200154ec 	.word	0x200154ec

08002f54 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>:
        : pressed(false), alpha(255), action(0)
 8002f54:	f44f 437f 	mov.w	r3, #65280	; 0xff00
    IconButtonStyle()
 8002f58:	b573      	push	{r0, r1, r4, r5, r6, lr}
        : T(), up(), down()
 8002f5a:	4606      	mov	r6, r0
 8002f5c:	8583      	strh	r3, [r0, #44]	; 0x2c
        touchable = touch;
 8002f5e:	f240 1301 	movw	r3, #257	; 0x101
          firstChild(0)
 8002f62:	2500      	movs	r5, #0
 8002f64:	8483      	strh	r3, [r0, #36]	; 0x24
 8002f66:	4b1d      	ldr	r3, [pc, #116]	; (8002fdc <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x88>)
 8002f68:	6285      	str	r5, [r0, #40]	; 0x28
        : x(0), y(0), width(0), height(0)
 8002f6a:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8002f6e:	e9c0 5503 	strd	r5, r5, [r0, #12]
          visible(true)
 8002f72:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8002f76:	e9c0 5507 	strd	r5, r5, [r0, #28]
 8002f7a:	6305      	str	r5, [r0, #48]	; 0x30
 8002f7c:	f846 3b34 	str.w	r3, [r6], #52
 8002f80:	4604      	mov	r4, r0
        : Box(), borderColor(0), borderSize(0)
 8002f82:	4630      	mov	r0, r6
 8002f84:	f7ff ff50 	bl	8002e28 <_ZN8touchgfx3BoxC1Ev>
 8002f88:	4b15      	ldr	r3, [pc, #84]	; (8002fe0 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x8c>)
 8002f8a:	6363      	str	r3, [r4, #52]	; 0x34
        borderBox.setXY(0, 0);
 8002f8c:	462a      	mov	r2, r5
        : color(0)
 8002f8e:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8002f92:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
        : color(col)
 8002f96:	6625      	str	r5, [r4, #96]	; 0x60
 8002f98:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8002f9c:	4629      	mov	r1, r5
 8002f9e:	4630      	mov	r0, r6
 8002fa0:	f7ff fede 	bl	8002d60 <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 8002fa4:	4631      	mov	r1, r6
 8002fa6:	4620      	mov	r0, r4
 8002fa8:	f007 fc38 	bl	800a81c <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : T()
 8002fac:	4b0d      	ldr	r3, [pc, #52]	; (8002fe4 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x90>)
 8002fae:	6023      	str	r3, [r4, #0]
 8002fb0:	f104 057c 	add.w	r5, r4, #124	; 0x7c
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002fb4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002fb8:	f8a4 3078 	strh.w	r3, [r4, #120]	; 0x78
 8002fbc:	f8a4 307a 	strh.w	r3, [r4, #122]	; 0x7a
 8002fc0:	a901      	add	r1, sp, #4
 8002fc2:	4628      	mov	r0, r5
 8002fc4:	f8ad 3004 	strh.w	r3, [sp, #4]
 8002fc8:	f7ff ff42 	bl	8002e50 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
        T::add(iconImage);
 8002fcc:	4620      	mov	r0, r4
 8002fce:	4629      	mov	r1, r5
 8002fd0:	f007 fc24 	bl	800a81c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8002fd4:	4620      	mov	r0, r4
 8002fd6:	b002      	add	sp, #8
 8002fd8:	bd70      	pop	{r4, r5, r6, pc}
 8002fda:	bf00      	nop
 8002fdc:	080228a0 	.word	0x080228a0
 8002fe0:	08023f10 	.word	0x08023f10
 8002fe4:	0802293c 	.word	0x0802293c

08002fe8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>:
    void setBoxWithBorderColors(const colortype colorReleased, const colortype colorPressed, const colortype borderColorReleased, const colortype borderColorPressed)
 8002fe8:	b410      	push	{r4}
        borderUp = borderColorReleased;
 8002fea:	6703      	str	r3, [r0, #112]	; 0x70
        borderDown = borderColorPressed;
 8002fec:	9b01      	ldr	r3, [sp, #4]
 8002fee:	6743      	str	r3, [r0, #116]	; 0x74
        handlePressedUpdated();
 8002ff0:	6803      	ldr	r3, [r0, #0]
    }
 8002ff2:	f85d 4b04 	ldr.w	r4, [sp], #4
        handlePressedUpdated();
 8002ff6:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
        down = colorPressed;
 8002ffa:	e9c0 121a 	strd	r1, r2, [r0, #104]	; 0x68
        handlePressedUpdated();
 8002ffe:	4718      	bx	r3

08003000 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 8003000:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003004:	ed2d 8b0c 	vpush	{d8-d13}
 8003008:	4604      	mov	r4, r0
 800300a:	b08d      	sub	sp, #52	; 0x34
        : presenter(0)
 800300c:	f00f fa38 	bl	8012480 <_ZN8touchgfx6ScreenC1Ev>
    flexButtonCallback(this, &Screen1ViewBase::flexButtonCallbackHandler)
 8003010:	4622      	mov	r2, r4
 8003012:	2500      	movs	r5, #0
 8003014:	4be5      	ldr	r3, [pc, #916]	; (80033ac <_ZN15Screen1ViewBaseC1Ev+0x3ac>)
 8003016:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003018:	f842 3b40 	str.w	r3, [r2], #64
 800301c:	4610      	mov	r0, r2
 800301e:	ee08 2a10 	vmov	s16, r2
 8003022:	f7ff ff01 	bl	8002e28 <_ZN8touchgfx3BoxC1Ev>
 8003026:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 800302a:	f64f 76ff 	movw	r6, #65535	; 0xffff
 800302e:	a90a      	add	r1, sp, #40	; 0x28
 8003030:	4618      	mov	r0, r3
 8003032:	ee0c 3a10 	vmov	s24, r3
 8003036:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 800303a:	f7ff ff09 	bl	8002e50 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800303e:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8003042:	a90a      	add	r1, sp, #40	; 0x28
 8003044:	4618      	mov	r0, r3
 8003046:	ee0c 3a90 	vmov	s25, r3
 800304a:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 800304e:	f7ff feff 	bl	8002e50 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003052:	f104 03c4 	add.w	r3, r4, #196	; 0xc4
 8003056:	4618      	mov	r0, r3
 8003058:	ee08 3a90 	vmov	s17, r3
 800305c:	f7ff ff7a 	bl	8002f54 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8003060:	f504 73b6 	add.w	r3, r4, #364	; 0x16c
 8003064:	4618      	mov	r0, r3
 8003066:	ee09 3a10 	vmov	s18, r3
 800306a:	f7ff ff73 	bl	8002f54 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800306e:	f504 7305 	add.w	r3, r4, #532	; 0x214
 8003072:	4618      	mov	r0, r3
 8003074:	ee09 3a90 	vmov	s19, r3
 8003078:	f7ff ff04 	bl	8002e84 <_ZN8touchgfx8TextAreaC1Ev>
 800307c:	f504 7317 	add.w	r3, r4, #604	; 0x25c
        : TextArea()
 8003080:	4618      	mov	r0, r3
 8003082:	ee0a 3a10 	vmov	s20, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8003086:	4fca      	ldr	r7, [pc, #808]	; (80033b0 <_ZN15Screen1ViewBaseC1Ev+0x3b0>)
        : TextArea()
 8003088:	f7ff fefc 	bl	8002e84 <_ZN8touchgfx8TextAreaC1Ev>
 800308c:	f504 732a 	add.w	r3, r4, #680	; 0x2a8
        : TextAreaWithWildcardBase(), wc1(0)
 8003090:	f8c4 725c 	str.w	r7, [r4, #604]	; 0x25c
 8003094:	f8c4 52a4 	str.w	r5, [r4, #676]	; 0x2a4
 8003098:	4618      	mov	r0, r3
 800309a:	ee0a 3a90 	vmov	s21, r3
 800309e:	f00b fb71 	bl	800e784 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80030a2:	f504 733c 	add.w	r3, r4, #752	; 0x2f0
 80030a6:	a90a      	add	r1, sp, #40	; 0x28
 80030a8:	4618      	mov	r0, r3
 80030aa:	ee0d 3a10 	vmov	s26, r3
 80030ae:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 80030b2:	f7ff fecd 	bl	8002e50 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80030b6:	f504 7347 	add.w	r3, r4, #796	; 0x31c
 80030ba:	4618      	mov	r0, r3
 80030bc:	ee0b 3a10 	vmov	s22, r3
 80030c0:	f7ff fee0 	bl	8002e84 <_ZN8touchgfx8TextAreaC1Ev>
 80030c4:	f504 7359 	add.w	r3, r4, #868	; 0x364
 80030c8:	f504 7b6c 	add.w	fp, r4, #944	; 0x3b0
        : TextArea()
 80030cc:	4618      	mov	r0, r3
 80030ce:	ee0b 3a90 	vmov	s23, r3
 80030d2:	f7ff fed7 	bl	8002e84 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80030d6:	f8c4 7364 	str.w	r7, [r4, #868]	; 0x364
 80030da:	f8c4 53ac 	str.w	r5, [r4, #940]	; 0x3ac
 80030de:	4658      	mov	r0, fp
 80030e0:	f7ff fed0 	bl	8002e84 <_ZN8touchgfx8TextAreaC1Ev>
 80030e4:	f504 737e 	add.w	r3, r4, #1016	; 0x3f8
 80030e8:	a90a      	add	r1, sp, #40	; 0x28
 80030ea:	4618      	mov	r0, r3
 80030ec:	f204 4924 	addw	r9, r4, #1060	; 0x424
 80030f0:	ee0d 3a90 	vmov	s27, r3
 80030f4:	f204 48cc 	addw	r8, r4, #1228	; 0x4cc
 80030f8:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 80030fc:	f7ff fea8 	bl	8002e50 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003100:	4648      	mov	r0, r9
 8003102:	f7ff ff27 	bl	8002f54 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8003106:	f204 5a74 	addw	sl, r4, #1396	; 0x574
 800310a:	4640      	mov	r0, r8
 800310c:	f7ff ff22 	bl	8002f54 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
        : TextArea()
 8003110:	4650      	mov	r0, sl
 8003112:	f7ff feb7 	bl	8002e84 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003116:	4ba7      	ldr	r3, [pc, #668]	; (80033b4 <_ZN15Screen1ViewBaseC1Ev+0x3b4>)
 8003118:	f8c4 35f0 	str.w	r3, [r4, #1520]	; 0x5f0
 800311c:	4ba6      	ldr	r3, [pc, #664]	; (80033b8 <_ZN15Screen1ViewBaseC1Ev+0x3b8>)
 800311e:	f8c4 35f8 	str.w	r3, [r4, #1528]	; 0x5f8
 8003122:	4ba6      	ldr	r3, [pc, #664]	; (80033bc <_ZN15Screen1ViewBaseC1Ev+0x3bc>)
 8003124:	f8c4 3600 	str.w	r3, [r4, #1536]	; 0x600
 8003128:	4ba5      	ldr	r3, [pc, #660]	; (80033c0 <_ZN15Screen1ViewBaseC1Ev+0x3c0>)
 800312a:	f8c4 3608 	str.w	r3, [r4, #1544]	; 0x608
    __background.setPosition(0, 0, 320, 240);
 800312e:	23f0      	movs	r3, #240	; 0xf0
 8003130:	462a      	mov	r2, r5
 8003132:	4629      	mov	r1, r5
 8003134:	ee18 0a10 	vmov	r0, s16
        : TextAreaWithWildcardBase(), wc1(0)
 8003138:	f8c4 7574 	str.w	r7, [r4, #1396]	; 0x574
 800313c:	f8c4 55bc 	str.w	r5, [r4, #1468]	; 0x5bc
 8003140:	f8c4 55fc 	str.w	r5, [r4, #1532]	; 0x5fc
 8003144:	f8c4 560c 	str.w	r5, [r4, #1548]	; 0x60c
 8003148:	9300      	str	r3, [sp, #0]
 800314a:	f8c4 45f4 	str.w	r4, [r4, #1524]	; 0x5f4
 800314e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8003152:	f8c4 4604 	str.w	r4, [r4, #1540]	; 0x604
 8003156:	f7ff fe42 	bl	8002dde <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 800315a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800315e:	66a3      	str	r3, [r4, #104]	; 0x68
    image2.setXY(0, 0);
 8003160:	462a      	mov	r2, r5
 8003162:	4629      	mov	r1, r5
 8003164:	ee1c 0a10 	vmov	r0, s24
 8003168:	f7ff fdfa 	bl	8002d60 <_ZN8touchgfx8Drawable5setXYEss>
    image2.setBitmap(touchgfx::Bitmap(BITMAP_BG_ID));
 800316c:	ee1c 0a10 	vmov	r0, s24
 8003170:	a90a      	add	r1, sp, #40	; 0x28
 8003172:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 8003176:	f00b f9d3 	bl	800e520 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    image3.setXY(118, 25);
 800317a:	ee1c 0a90 	vmov	r0, s25
 800317e:	2219      	movs	r2, #25
 8003180:	2176      	movs	r1, #118	; 0x76
 8003182:	f7ff fded 	bl	8002d60 <_ZN8touchgfx8Drawable5setXYEss>
    image3.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 8003186:	aa0a      	add	r2, sp, #40	; 0x28
 8003188:	f04f 0303 	mov.w	r3, #3
 800318c:	4611      	mov	r1, r2
 800318e:	ee1c 0a90 	vmov	r0, s25
 8003192:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003196:	f00b f9c3 	bl	800e520 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        borderBox.setPosition(x, y, width, height);
 800319a:	2317      	movs	r3, #23
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 800319c:	2705      	movs	r7, #5
    ButtonDown.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800319e:	4e89      	ldr	r6, [pc, #548]	; (80033c4 <_ZN15Screen1ViewBaseC1Ev+0x3c4>)
 80031a0:	9300      	str	r3, [sp, #0]
 80031a2:	462a      	mov	r2, r5
 80031a4:	4629      	mov	r1, r5
 80031a6:	232b      	movs	r3, #43	; 0x2b
 80031a8:	f104 00f8 	add.w	r0, r4, #248	; 0xf8
 80031ac:	f7ff fe17 	bl	8002dde <_ZN8touchgfx8Drawable11setPositionEssss>
 80031b0:	4b85      	ldr	r3, [pc, #532]	; (80033c8 <_ZN15Screen1ViewBaseC1Ev+0x3c8>)
 80031b2:	4a86      	ldr	r2, [pc, #536]	; (80033cc <_ZN15Screen1ViewBaseC1Ev+0x3cc>)
 80031b4:	4986      	ldr	r1, [pc, #536]	; (80033d0 <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
 80031b6:	9600      	str	r6, [sp, #0]
 80031b8:	ee18 0a90 	vmov	r0, s17
 80031bc:	f8a4 7128 	strh.w	r7, [r4, #296]	; 0x128
 80031c0:	f7ff ff12 	bl	8002fe8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    ButtonDown.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID));
 80031c4:	ee18 0a90 	vmov	r0, s17
 80031c8:	aa0a      	add	r2, sp, #40	; 0x28
 80031ca:	a909      	add	r1, sp, #36	; 0x24
 80031cc:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 80031d0:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 80031d4:	f7ff fdd1 	bl	8002d7a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
    ButtonDown.setPosition(273, 49, 43, 23);
 80031d8:	2317      	movs	r3, #23
 80031da:	ee18 0a90 	vmov	r0, s17
 80031de:	9300      	str	r3, [sp, #0]
 80031e0:	2231      	movs	r2, #49	; 0x31
 80031e2:	232b      	movs	r3, #43	; 0x2b
 80031e4:	f240 1111 	movw	r1, #273	; 0x111
        rect.x = x;
 80031e8:	f8c4 7144 	str.w	r7, [r4, #324]	; 0x144
 80031ec:	f7ff fdf7 	bl	8002dde <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonDown.setAction(flexButtonCallback);
 80031f0:	f504 63c0 	add.w	r3, r4, #1536	; 0x600
 80031f4:	9303      	str	r3, [sp, #12]
        action = &callback;
 80031f6:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
 80031fa:	2317      	movs	r3, #23
 80031fc:	462a      	mov	r2, r5
 80031fe:	4629      	mov	r1, r5
 8003200:	9300      	str	r3, [sp, #0]
 8003202:	f504 70d0 	add.w	r0, r4, #416	; 0x1a0
 8003206:	232b      	movs	r3, #43	; 0x2b
 8003208:	f7ff fde9 	bl	8002dde <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonUp.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800320c:	4b6e      	ldr	r3, [pc, #440]	; (80033c8 <_ZN15Screen1ViewBaseC1Ev+0x3c8>)
 800320e:	4a6f      	ldr	r2, [pc, #444]	; (80033cc <_ZN15Screen1ViewBaseC1Ev+0x3cc>)
 8003210:	496f      	ldr	r1, [pc, #444]	; (80033d0 <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
 8003212:	9600      	str	r6, [sp, #0]
 8003214:	ee19 0a10 	vmov	r0, s18
 8003218:	f8a4 71d0 	strh.w	r7, [r4, #464]	; 0x1d0
 800321c:	f7ff fee4 	bl	8002fe8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 8003220:	f04f 0206 	mov.w	r2, #6
    ButtonUp.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID));
 8003224:	a80a      	add	r0, sp, #40	; 0x28
 8003226:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800322a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 800322e:	a909      	add	r1, sp, #36	; 0x24
 8003230:	4602      	mov	r2, r0
 8003232:	ee19 0a10 	vmov	r0, s18
 8003236:	f7ff fda0 	bl	8002d7a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
 800323a:	2006      	movs	r0, #6
 800323c:	f8c4 01ec 	str.w	r0, [r4, #492]	; 0x1ec
    ButtonUp.setPosition(273, 25, 43, 23);
 8003240:	2017      	movs	r0, #23
 8003242:	232b      	movs	r3, #43	; 0x2b
 8003244:	9000      	str	r0, [sp, #0]
 8003246:	2219      	movs	r2, #25
 8003248:	ee19 0a10 	vmov	r0, s18
 800324c:	f240 1111 	movw	r1, #273	; 0x111
 8003250:	f7ff fdc5 	bl	8002dde <_ZN8touchgfx8Drawable11setPositionEssss>
 8003254:	9a03      	ldr	r2, [sp, #12]
 8003256:	f8c4 219c 	str.w	r2, [r4, #412]	; 0x19c
    LabelPradLadowania.setXY(41, 28);
 800325a:	ee19 0a90 	vmov	r0, s19
 800325e:	221c      	movs	r2, #28
 8003260:	2129      	movs	r1, #41	; 0x29
        boundingArea = calculateBoundingArea();
 8003262:	ae04      	add	r6, sp, #16
 8003264:	f7ff fd7c 	bl	8002d60 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003268:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 800326c:	ee19 1a90 	vmov	r1, s19
        color = newColor;
 8003270:	f8c4 0244 	str.w	r0, [r4, #580]	; 0x244
        linespace = space;
 8003274:	f8a4 5248 	strh.w	r5, [r4, #584]	; 0x248
        boundingArea = calculateBoundingArea();
 8003278:	4630      	mov	r0, r6
 800327a:	f00a fc43 	bl	800db04 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800327e:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003282:	f504 7314 	add.w	r3, r4, #592	; 0x250
 8003286:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800328a:	4b52      	ldr	r3, [pc, #328]	; (80033d4 <_ZN15Screen1ViewBaseC1Ev+0x3d4>)
 800328c:	930a      	str	r3, [sp, #40]	; 0x28
    LabelPradLadowania.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OQ6C));
 800328e:	ee19 0a90 	vmov	r0, s19
 8003292:	2313      	movs	r3, #19
 8003294:	a90a      	add	r1, sp, #40	; 0x28
 8003296:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800329a:	f00a fec3 	bl	800e024 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtPradLadowania.setPosition(143, 36, 124, 24);
 800329e:	2018      	movs	r0, #24
 80032a0:	2224      	movs	r2, #36	; 0x24
 80032a2:	9000      	str	r0, [sp, #0]
 80032a4:	237c      	movs	r3, #124	; 0x7c
 80032a6:	ee1a 0a10 	vmov	r0, s20
 80032aa:	218f      	movs	r1, #143	; 0x8f
 80032ac:	f7ff fd97 	bl	8002dde <_ZN8touchgfx8Drawable11setPositionEssss>
 80032b0:	f8d4 325c 	ldr.w	r3, [r4, #604]	; 0x25c
        linespace = space;
 80032b4:	f8a4 5290 	strh.w	r5, [r4, #656]	; 0x290
        color = newColor;
 80032b8:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 80032bc:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80032c0:	f8c4 028c 	str.w	r0, [r4, #652]	; 0x28c
        boundingArea = calculateBoundingArea();
 80032c4:	ee1a 1a10 	vmov	r1, s20
 80032c8:	4630      	mov	r0, r6
 80032ca:	4798      	blx	r3
 80032cc:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80032d0:	f504 7326 	add.w	r3, r4, #664	; 0x298
 80032d4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    txtPradLadowania.setWildcard(txtPradLadowaniaBuffer);
 80032d8:	f504 63b8 	add.w	r3, r4, #1472	; 0x5c0
        wc1 = value;
 80032dc:	f8c4 32a4 	str.w	r3, [r4, #676]	; 0x2a4
 80032e0:	4b3c      	ldr	r3, [pc, #240]	; (80033d4 <_ZN15Screen1ViewBaseC1Ev+0x3d4>)
    txtPradLadowaniaBuffer[0] = 0;
 80032e2:	f8a4 55c0 	strh.w	r5, [r4, #1472]	; 0x5c0
    txtPradLadowania.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9VFQ));
 80032e6:	ee1a 0a10 	vmov	r0, s20
 80032ea:	930a      	str	r3, [sp, #40]	; 0x28
 80032ec:	a90a      	add	r1, sp, #40	; 0x28
 80032ee:	2312      	movs	r3, #18
 80032f0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80032f4:	f00a fe96 	bl	800e024 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    buttonStart.setXY(78, 180);
 80032f8:	ee1a 0a90 	vmov	r0, s21
 80032fc:	22b4      	movs	r2, #180	; 0xb4
 80032fe:	214e      	movs	r1, #78	; 0x4e
 8003300:	f7ff fd2e 	bl	8002d60 <_ZN8touchgfx8Drawable5setXYEss>
 8003304:	f04f 0002 	mov.w	r0, #2
 8003308:	f8ad 0028 	strh.w	r0, [sp, #40]	; 0x28
    buttonStart.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 800330c:	a80a      	add	r0, sp, #40	; 0x28
 800330e:	4602      	mov	r2, r0
 8003310:	2301      	movs	r3, #1
 8003312:	a909      	add	r1, sp, #36	; 0x24
 8003314:	ee1a 0a90 	vmov	r0, s21
 8003318:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800331c:	f00a fedd 	bl	800e0da <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8003320:	2311      	movs	r3, #17
        updateTextPosition();
 8003322:	ee1a 0a90 	vmov	r0, s21
 8003326:	f8a4 32e0 	strh.w	r3, [r4, #736]	; 0x2e0
 800332a:	f7ff fdcd 	bl	8002ec8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonStart.setAction(buttonCallback);
 800332e:	f504 63be 	add.w	r3, r4, #1520	; 0x5f0
        color = col;
 8003332:	f04f 30ff 	mov.w	r0, #4294967295
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8003336:	f8c4 32d0 	str.w	r3, [r4, #720]	; 0x2d0
    image3_1.setXY(118, 138);
 800333a:	228a      	movs	r2, #138	; 0x8a
        colorPressed = col;
 800333c:	e9c4 00b9 	strd	r0, r0, [r4, #740]	; 0x2e4
 8003340:	2176      	movs	r1, #118	; 0x76
 8003342:	ee1d 0a10 	vmov	r0, s26
 8003346:	f7ff fd0b 	bl	8002d60 <_ZN8touchgfx8Drawable5setXYEss>
 800334a:	f04f 0103 	mov.w	r1, #3
    image3_1.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 800334e:	a80a      	add	r0, sp, #40	; 0x28
 8003350:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
 8003354:	4601      	mov	r1, r0
 8003356:	ee1d 0a10 	vmov	r0, s26
 800335a:	f00b f8e1 	bl	800e520 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    LabelNapiecieBaterii.setXY(41, 141);
 800335e:	228d      	movs	r2, #141	; 0x8d
 8003360:	ee1b 0a10 	vmov	r0, s22
 8003364:	2129      	movs	r1, #41	; 0x29
 8003366:	f7ff fcfb 	bl	8002d60 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800336a:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 800336e:	ee1b 1a10 	vmov	r1, s22
        color = newColor;
 8003372:	f8c4 034c 	str.w	r0, [r4, #844]	; 0x34c
        linespace = space;
 8003376:	f8a4 5350 	strh.w	r5, [r4, #848]	; 0x350
        boundingArea = calculateBoundingArea();
 800337a:	4630      	mov	r0, r6
 800337c:	f00a fbc2 	bl	800db04 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003380:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003384:	f504 7356 	add.w	r3, r4, #856	; 0x358
 8003388:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800338c:	4b11      	ldr	r3, [pc, #68]	; (80033d4 <_ZN15Screen1ViewBaseC1Ev+0x3d4>)
 800338e:	930a      	str	r3, [sp, #40]	; 0x28
    LabelNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_O6MQ));
 8003390:	a80a      	add	r0, sp, #40	; 0x28
 8003392:	2310      	movs	r3, #16
 8003394:	4601      	mov	r1, r0
 8003396:	ee1b 0a10 	vmov	r0, s22
 800339a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800339e:	f00a fe41 	bl	800e024 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtNapiecieBaterii.setPosition(143, 147, 124, 24);
 80033a2:	2018      	movs	r0, #24
 80033a4:	2293      	movs	r2, #147	; 0x93
 80033a6:	9000      	str	r0, [sp, #0]
 80033a8:	e016      	b.n	80033d8 <_ZN15Screen1ViewBaseC1Ev+0x3d8>
 80033aa:	bf00      	nop
 80033ac:	08022a0c 	.word	0x08022a0c
 80033b0:	08022810 	.word	0x08022810
 80033b4:	080229dc 	.word	0x080229dc
 80033b8:	08002d31 	.word	0x08002d31
 80033bc:	080229f4 	.word	0x080229f4
 80033c0:	08002c41 	.word	0x08002c41
 80033c4:	ff336699 	.word	0xff336699
 80033c8:	ff003366 	.word	0xff003366
 80033cc:	ff0099cc 	.word	0xff0099cc
 80033d0:	ff006699 	.word	0xff006699
 80033d4:	08021f98 	.word	0x08021f98
 80033d8:	237c      	movs	r3, #124	; 0x7c
 80033da:	ee1b 0a90 	vmov	r0, s23
 80033de:	218f      	movs	r1, #143	; 0x8f
 80033e0:	f7ff fcfd 	bl	8002dde <_ZN8touchgfx8Drawable11setPositionEssss>
 80033e4:	f8d4 3364 	ldr.w	r3, [r4, #868]	; 0x364
        linespace = space;
 80033e8:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        color = newColor;
 80033ec:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 80033f0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80033f4:	f8c4 0394 	str.w	r0, [r4, #916]	; 0x394
        boundingArea = calculateBoundingArea();
 80033f8:	ee1b 1a90 	vmov	r1, s23
 80033fc:	4630      	mov	r0, r6
 80033fe:	4798      	blx	r3
 8003400:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003404:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 8003408:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    txtNapiecieBaterii.setWildcard(txtNapiecieBateriiBuffer);
 800340c:	f204 53d4 	addw	r3, r4, #1492	; 0x5d4
 8003410:	f8c4 33ac 	str.w	r3, [r4, #940]	; 0x3ac
    txtNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JY89));
 8003414:	a80a      	add	r0, sp, #40	; 0x28
 8003416:	4b98      	ldr	r3, [pc, #608]	; (8003678 <_ZN15Screen1ViewBaseC1Ev+0x678>)
    txtNapiecieBateriiBuffer[0] = 0;
 8003418:	f8a4 55d4 	strh.w	r5, [r4, #1492]	; 0x5d4
    txtNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JY89));
 800341c:	4601      	mov	r1, r0
 800341e:	930a      	str	r3, [sp, #40]	; 0x28
 8003420:	ee1b 0a90 	vmov	r0, s23
 8003424:	230f      	movs	r3, #15
 8003426:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800342a:	f00a fdfb 	bl	800e024 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    LabelChargingTime.setXY(6, 86);
 800342e:	2256      	movs	r2, #86	; 0x56
 8003430:	2106      	movs	r1, #6
 8003432:	4658      	mov	r0, fp
 8003434:	f7ff fc94 	bl	8002d60 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003438:	f04f 30ff 	mov.w	r0, #4294967295
 800343c:	f8c4 03e0 	str.w	r0, [r4, #992]	; 0x3e0
        linespace = space;
 8003440:	f8a4 53e4 	strh.w	r5, [r4, #996]	; 0x3e4
        boundingArea = calculateBoundingArea();
 8003444:	4659      	mov	r1, fp
 8003446:	4630      	mov	r0, r6
 8003448:	f00a fb5c 	bl	800db04 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800344c:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003450:	f504 737b 	add.w	r3, r4, #1004	; 0x3ec
 8003454:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003458:	4b87      	ldr	r3, [pc, #540]	; (8003678 <_ZN15Screen1ViewBaseC1Ev+0x678>)
 800345a:	930a      	str	r3, [sp, #40]	; 0x28
    LabelChargingTime.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LNZH));
 800345c:	a80a      	add	r0, sp, #40	; 0x28
 800345e:	2304      	movs	r3, #4
 8003460:	4601      	mov	r1, r0
 8003462:	4658      	mov	r0, fp
 8003464:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003468:	f00a fddc 	bl	800e024 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    image3_2.setXY(118, 83);
 800346c:	2253      	movs	r2, #83	; 0x53
 800346e:	ee1d 0a90 	vmov	r0, s27
 8003472:	2176      	movs	r1, #118	; 0x76
 8003474:	f7ff fc74 	bl	8002d60 <_ZN8touchgfx8Drawable5setXYEss>
 8003478:	f04f 0103 	mov.w	r1, #3
    image3_2.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 800347c:	ee1d 0a90 	vmov	r0, s27
 8003480:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
 8003484:	a90a      	add	r1, sp, #40	; 0x28
 8003486:	f00b f84b 	bl	800e520 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800348a:	2117      	movs	r1, #23
 800348c:	462a      	mov	r2, r5
 800348e:	9100      	str	r1, [sp, #0]
 8003490:	232b      	movs	r3, #43	; 0x2b
 8003492:	4629      	mov	r1, r5
 8003494:	f504 608b 	add.w	r0, r4, #1112	; 0x458
 8003498:	f7ff fca1 	bl	8002dde <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonDownTime.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800349c:	4b77      	ldr	r3, [pc, #476]	; (800367c <_ZN15Screen1ViewBaseC1Ev+0x67c>)
 800349e:	9300      	str	r3, [sp, #0]
 80034a0:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 80034a4:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 80034a8:	4a75      	ldr	r2, [pc, #468]	; (8003680 <_ZN15Screen1ViewBaseC1Ev+0x680>)
 80034aa:	4976      	ldr	r1, [pc, #472]	; (8003684 <_ZN15Screen1ViewBaseC1Ev+0x684>)
 80034ac:	f8a4 7488 	strh.w	r7, [r4, #1160]	; 0x488
 80034b0:	4648      	mov	r0, r9
 80034b2:	f7ff fd99 	bl	8002fe8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    ButtonDownTime.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID));
 80034b6:	a90a      	add	r1, sp, #40	; 0x28
 80034b8:	460a      	mov	r2, r1
 80034ba:	4648      	mov	r0, r9
 80034bc:	a909      	add	r1, sp, #36	; 0x24
 80034be:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 80034c2:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 80034c6:	f7ff fc58 	bl	8002d7a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
    ButtonDownTime.setPosition(273, 105, 43, 23);
 80034ca:	2117      	movs	r1, #23
 80034cc:	9100      	str	r1, [sp, #0]
 80034ce:	232b      	movs	r3, #43	; 0x2b
 80034d0:	2269      	movs	r2, #105	; 0x69
 80034d2:	f240 1111 	movw	r1, #273	; 0x111
 80034d6:	4648      	mov	r0, r9
 80034d8:	f8c4 74a4 	str.w	r7, [r4, #1188]	; 0x4a4
 80034dc:	f7ff fc7f 	bl	8002dde <_ZN8touchgfx8Drawable11setPositionEssss>
 80034e0:	9a03      	ldr	r2, [sp, #12]
 80034e2:	f8c4 2454 	str.w	r2, [r4, #1108]	; 0x454
 80034e6:	2117      	movs	r1, #23
 80034e8:	462a      	mov	r2, r5
 80034ea:	9100      	str	r1, [sp, #0]
 80034ec:	232b      	movs	r3, #43	; 0x2b
 80034ee:	4629      	mov	r1, r5
 80034f0:	f504 60a0 	add.w	r0, r4, #1280	; 0x500
 80034f4:	f7ff fc73 	bl	8002dde <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonUpTime.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80034f8:	4b60      	ldr	r3, [pc, #384]	; (800367c <_ZN15Screen1ViewBaseC1Ev+0x67c>)
 80034fa:	9300      	str	r3, [sp, #0]
 80034fc:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 8003500:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 8003504:	4a5e      	ldr	r2, [pc, #376]	; (8003680 <_ZN15Screen1ViewBaseC1Ev+0x680>)
 8003506:	495f      	ldr	r1, [pc, #380]	; (8003684 <_ZN15Screen1ViewBaseC1Ev+0x684>)
 8003508:	f8a4 7530 	strh.w	r7, [r4, #1328]	; 0x530
 800350c:	4640      	mov	r0, r8
 800350e:	f7ff fd6b 	bl	8002fe8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 8003512:	f04f 0206 	mov.w	r2, #6
 8003516:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800351a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
    ButtonUpTime.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID));
 800351e:	a909      	add	r1, sp, #36	; 0x24
 8003520:	aa0a      	add	r2, sp, #40	; 0x28
 8003522:	4640      	mov	r0, r8
 8003524:	f7ff fc29 	bl	8002d7a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
 8003528:	2306      	movs	r3, #6
 800352a:	f8c4 354c 	str.w	r3, [r4, #1356]	; 0x54c
    ButtonUpTime.setPosition(273, 81, 43, 23);
 800352e:	2317      	movs	r3, #23
 8003530:	9300      	str	r3, [sp, #0]
 8003532:	2251      	movs	r2, #81	; 0x51
 8003534:	232b      	movs	r3, #43	; 0x2b
 8003536:	f240 1111 	movw	r1, #273	; 0x111
 800353a:	4640      	mov	r0, r8
 800353c:	f7ff fc4f 	bl	8002dde <_ZN8touchgfx8Drawable11setPositionEssss>
 8003540:	9b03      	ldr	r3, [sp, #12]
 8003542:	f8c4 34fc 	str.w	r3, [r4, #1276]	; 0x4fc
    txtChargingTime.setPosition(143, 93, 124, 24);
 8003546:	2318      	movs	r3, #24
 8003548:	225d      	movs	r2, #93	; 0x5d
 800354a:	9300      	str	r3, [sp, #0]
 800354c:	218f      	movs	r1, #143	; 0x8f
 800354e:	237c      	movs	r3, #124	; 0x7c
 8003550:	4650      	mov	r0, sl
 8003552:	f7ff fc44 	bl	8002dde <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003556:	f04f 33ff 	mov.w	r3, #4294967295
 800355a:	f8c4 35a4 	str.w	r3, [r4, #1444]	; 0x5a4
        boundingArea = calculateBoundingArea();
 800355e:	f8d4 3574 	ldr.w	r3, [r4, #1396]	; 0x574
        linespace = space;
 8003562:	f8a4 55a8 	strh.w	r5, [r4, #1448]	; 0x5a8
        boundingArea = calculateBoundingArea();
 8003566:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800356a:	4651      	mov	r1, sl
 800356c:	4630      	mov	r0, r6
 800356e:	4798      	blx	r3
 8003570:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003574:	f504 63b6 	add.w	r3, r4, #1456	; 0x5b0
 8003578:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800357c:	4b42      	ldr	r3, [pc, #264]	; (8003688 <_ZN15Screen1ViewBaseC1Ev+0x688>)
 800357e:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(txtChargingTimeBuffer, TXTCHARGINGTIME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_JGTL).getText());
 8003580:	f504 65bd 	add.w	r5, r4, #1512	; 0x5e8
 8003584:	b92b      	cbnz	r3, 8003592 <_ZN15Screen1ViewBaseC1Ev+0x592>
 8003586:	4b41      	ldr	r3, [pc, #260]	; (800368c <_ZN15Screen1ViewBaseC1Ev+0x68c>)
 8003588:	4a41      	ldr	r2, [pc, #260]	; (8003690 <_ZN15Screen1ViewBaseC1Ev+0x690>)
 800358a:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800358c:	4841      	ldr	r0, [pc, #260]	; (8003694 <_ZN15Screen1ViewBaseC1Ev+0x694>)
 800358e:	f01d f845 	bl	802061c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8003592:	4b41      	ldr	r3, [pc, #260]	; (8003698 <_ZN15Screen1ViewBaseC1Ev+0x698>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003594:	881b      	ldrh	r3, [r3, #0]
 8003596:	2b02      	cmp	r3, #2
 8003598:	d803      	bhi.n	80035a2 <_ZN15Screen1ViewBaseC1Ev+0x5a2>
 800359a:	4b40      	ldr	r3, [pc, #256]	; (800369c <_ZN15Screen1ViewBaseC1Ev+0x69c>)
 800359c:	4a3c      	ldr	r2, [pc, #240]	; (8003690 <_ZN15Screen1ViewBaseC1Ev+0x690>)
 800359e:	2161      	movs	r1, #97	; 0x61
 80035a0:	e7f4      	b.n	800358c <_ZN15Screen1ViewBaseC1Ev+0x58c>
        return texts->getText(typedTextId);
 80035a2:	4b3f      	ldr	r3, [pc, #252]	; (80036a0 <_ZN15Screen1ViewBaseC1Ev+0x6a0>)
 80035a4:	2102      	movs	r1, #2
 80035a6:	6818      	ldr	r0, [r3, #0]
 80035a8:	f001 fc38 	bl	8004e1c <_ZNK8touchgfx5Texts7getTextEt>
 80035ac:	4a3d      	ldr	r2, [pc, #244]	; (80036a4 <_ZN15Screen1ViewBaseC1Ev+0x6a4>)
 80035ae:	4603      	mov	r3, r0
 80035b0:	2103      	movs	r1, #3
 80035b2:	4628      	mov	r0, r5
 80035b4:	f010 fc20 	bl	8013df8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80035b8:	4b2f      	ldr	r3, [pc, #188]	; (8003678 <_ZN15Screen1ViewBaseC1Ev+0x678>)
 80035ba:	f8c4 55bc 	str.w	r5, [r4, #1468]	; 0x5bc
 80035be:	930a      	str	r3, [sp, #40]	; 0x28
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80035c0:	1d25      	adds	r5, r4, #4
 80035c2:	f04f 0303 	mov.w	r3, #3
    txtChargingTime.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8IRX));
 80035c6:	a90a      	add	r1, sp, #40	; 0x28
 80035c8:	4650      	mov	r0, sl
 80035ca:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80035ce:	f00a fd29 	bl	800e024 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80035d2:	ee18 1a10 	vmov	r1, s16
 80035d6:	4628      	mov	r0, r5
 80035d8:	f007 f920 	bl	800a81c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80035dc:	ee1c 1a10 	vmov	r1, s24
 80035e0:	4628      	mov	r0, r5
 80035e2:	f007 f91b 	bl	800a81c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80035e6:	ee1c 1a90 	vmov	r1, s25
 80035ea:	4628      	mov	r0, r5
 80035ec:	f007 f916 	bl	800a81c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80035f0:	ee18 1a90 	vmov	r1, s17
 80035f4:	4628      	mov	r0, r5
 80035f6:	f007 f911 	bl	800a81c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80035fa:	ee19 1a10 	vmov	r1, s18
 80035fe:	4628      	mov	r0, r5
 8003600:	f007 f90c 	bl	800a81c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003604:	ee19 1a90 	vmov	r1, s19
 8003608:	4628      	mov	r0, r5
 800360a:	f007 f907 	bl	800a81c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800360e:	ee1a 1a10 	vmov	r1, s20
 8003612:	4628      	mov	r0, r5
 8003614:	f007 f902 	bl	800a81c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003618:	ee1a 1a90 	vmov	r1, s21
 800361c:	4628      	mov	r0, r5
 800361e:	f007 f8fd 	bl	800a81c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003622:	ee1d 1a10 	vmov	r1, s26
 8003626:	4628      	mov	r0, r5
 8003628:	f007 f8f8 	bl	800a81c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800362c:	ee1b 1a10 	vmov	r1, s22
 8003630:	4628      	mov	r0, r5
 8003632:	f007 f8f3 	bl	800a81c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003636:	ee1b 1a90 	vmov	r1, s23
 800363a:	4628      	mov	r0, r5
 800363c:	f007 f8ee 	bl	800a81c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003640:	4659      	mov	r1, fp
 8003642:	4628      	mov	r0, r5
 8003644:	f007 f8ea 	bl	800a81c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003648:	ee1d 1a90 	vmov	r1, s27
 800364c:	4628      	mov	r0, r5
 800364e:	f007 f8e5 	bl	800a81c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003652:	4649      	mov	r1, r9
 8003654:	4628      	mov	r0, r5
 8003656:	f007 f8e1 	bl	800a81c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800365a:	4641      	mov	r1, r8
 800365c:	4628      	mov	r0, r5
 800365e:	f007 f8dd 	bl	800a81c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003662:	4628      	mov	r0, r5
 8003664:	4651      	mov	r1, sl
 8003666:	f007 f8d9 	bl	800a81c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800366a:	4620      	mov	r0, r4
 800366c:	b00d      	add	sp, #52	; 0x34
 800366e:	ecbd 8b0c 	vpop	{d8-d13}
 8003672:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003676:	bf00      	nop
 8003678:	08021f98 	.word	0x08021f98
 800367c:	ff336699 	.word	0xff336699
 8003680:	ff0099cc 	.word	0xff0099cc
 8003684:	ff006699 	.word	0xff006699
 8003688:	200154e0 	.word	0x200154e0
 800368c:	08022660 	.word	0x08022660
 8003690:	08022762 	.word	0x08022762
 8003694:	080226dd 	.word	0x080226dd
 8003698:	200154e4 	.word	0x200154e4
 800369c:	08022724 	.word	0x08022724
 80036a0:	200154ec 	.word	0x200154ec
 80036a4:	0802279a 	.word	0x0802279a

080036a8 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 80036a8:	2000      	movs	r0, #0
 80036aa:	4770      	bx	lr

080036ac <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 80036ac:	888b      	ldrh	r3, [r1, #4]
 80036ae:	8083      	strh	r3, [r0, #4]
        return true;
    }
 80036b0:	2001      	movs	r0, #1
 80036b2:	4770      	bx	lr

080036b4 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 80036b4:	4770      	bx	lr

080036b6 <_ZN8touchgfx17AbstractDataGraph8setAlphaEh>:
     *
     * @note All graph elements have to take this alpha into consideration.
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80036b6:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
    }
 80036ba:	4770      	bx	lr

080036bc <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>:
     * @param  min The minimum x value.
     * @param  max The maximum x value.
     *
     * @note The graph as well as the area above and below are automatically redrawn (invalidated).
     */
    virtual void setGraphRangeX(int min, int max)
 80036bc:	b410      	push	{r4}
    {
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 80036be:	6803      	ldr	r3, [r0, #0]
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int int2scaledX(int i) const
    {
        return int2scaled(i, xScale);
 80036c0:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 80036c2:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 80036c6:	4362      	muls	r2, r4
 80036c8:	4361      	muls	r1, r4
    }
 80036ca:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 80036ce:	4718      	bx	r3

080036d0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff>:
     *
     * @return The product of the two numbers, rounded to nearest integer value.
     */
    FORCE_INLINE_FUNCTION static int float2scaled(float f, int scale)
    {
        const float fs = f * (float)scale;
 80036d0:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 80036d4:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 80036d6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 80036da:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
        const float fs = f * (float)scale;
 80036de:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 80036e2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80036e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80036ea:	db17      	blt.n	800371c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4c>
        {
            return (int)(fs + 0.5f);
 80036ec:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80036f0:	ee30 0a07 	vadd.f32	s0, s0, s14
 80036f4:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80036f8:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 80036fc:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 8003700:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 8003704:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003708:	db1c      	blt.n	8003744 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x74>
            return (int)(fs + 0.5f);
 800370a:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800370e:	ee70 0aa7 	vadd.f32	s1, s1, s15
 8003712:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8003716:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 800371a:	4718      	bx	r3
        }
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800371c:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8003720:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8003724:	ee17 2a10 	vmov	r2, s14
 8003728:	ee30 0a66 	vsub.f32	s0, s0, s13
 800372c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8003730:	ee30 0a26 	vadd.f32	s0, s0, s13
 8003734:	1e51      	subs	r1, r2, #1
 8003736:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800373a:	ee10 2a10 	vmov	r2, s0
 800373e:	440a      	add	r2, r1
 8003740:	4611      	mov	r1, r2
 8003742:	e7db      	b.n	80036fc <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x2c>
 8003744:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8003748:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800374c:	ee17 2a90 	vmov	r2, s15
 8003750:	ee70 0ac7 	vsub.f32	s1, s1, s14
 8003754:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003758:	ee70 0a87 	vadd.f32	s1, s1, s14
 800375c:	3a01      	subs	r2, #1
 800375e:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 8003762:	ee10 ca90 	vmov	ip, s1
 8003766:	4494      	add	ip, r2
 8003768:	4662      	mov	r2, ip
 800376a:	e7d6      	b.n	800371a <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4a>

0800376c <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbi>:
    virtual void setGraphRangeXAuto(bool showYaxis = true, int margin = 0)
 800376c:	b410      	push	{r4}
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 800376e:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 8003770:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8003772:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8003776:	4362      	muls	r2, r4
    }
 8003778:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 800377c:	4718      	bx	r3

0800377e <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf>:
        const float fs = f * (float)scale;
 800377e:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8003782:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003784:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8003788:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
        const float fs = f * (float)scale;
 800378c:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003790:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003794:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003798:	db08      	blt.n	80037ac <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2e>
            return (int)(fs + 0.5f);
 800379a:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800379e:	ee30 0a27 	vadd.f32	s0, s0, s15
 80037a2:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80037a6:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 80037aa:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80037ac:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80037b0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80037b4:	ee17 2a90 	vmov	r2, s15
 80037b8:	ee30 0a47 	vsub.f32	s0, s0, s14
 80037bc:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 80037c0:	ee30 0a07 	vadd.f32	s0, s0, s14
 80037c4:	3a01      	subs	r2, #1
 80037c6:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80037ca:	ee10 ca10 	vmov	ip, s0
 80037ce:	4494      	add	ip, r2
 80037d0:	4662      	mov	r2, ip
 80037d2:	e7ea      	b.n	80037aa <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2c>

080037d4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii>:
    virtual void setGraphRangeY(int min, int max)
 80037d4:	b410      	push	{r4}
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 80037d6:	6803      	ldr	r3, [r0, #0]
        return int2scaled(i, yScale);
 80037d8:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 80037da:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80037de:	4362      	muls	r2, r4
 80037e0:	4361      	muls	r1, r4
    }
 80037e2:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 80037e6:	4718      	bx	r3

080037e8 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>:
        const float fs = f * (float)scale;
 80037e8:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 80037ec:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 80037ee:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 80037f2:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
        const float fs = f * (float)scale;
 80037f6:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 80037fa:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80037fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003802:	db17      	blt.n	8003834 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4c>
            return (int)(fs + 0.5f);
 8003804:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8003808:	ee30 0a07 	vadd.f32	s0, s0, s14
 800380c:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8003810:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 8003814:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 8003818:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 800381c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003820:	db1c      	blt.n	800385c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x74>
            return (int)(fs + 0.5f);
 8003822:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003826:	ee70 0aa7 	vadd.f32	s1, s1, s15
 800382a:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 800382e:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 8003832:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003834:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8003838:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800383c:	ee17 2a10 	vmov	r2, s14
 8003840:	ee30 0a66 	vsub.f32	s0, s0, s13
 8003844:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8003848:	ee30 0a26 	vadd.f32	s0, s0, s13
 800384c:	1e51      	subs	r1, r2, #1
 800384e:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003852:	ee10 2a10 	vmov	r2, s0
 8003856:	440a      	add	r2, r1
 8003858:	4611      	mov	r1, r2
 800385a:	e7db      	b.n	8003814 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x2c>
 800385c:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8003860:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003864:	ee17 2a90 	vmov	r2, s15
 8003868:	ee70 0ac7 	vsub.f32	s1, s1, s14
 800386c:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003870:	ee70 0a87 	vadd.f32	s1, s1, s14
 8003874:	3a01      	subs	r2, #1
 8003876:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 800387a:	ee10 ca90 	vmov	ip, s1
 800387e:	4494      	add	ip, r2
 8003880:	4662      	mov	r2, ip
 8003882:	e7d6      	b.n	8003832 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4a>

08003884 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbi>:
    virtual void setGraphRangeYAuto(bool showXaxis = true, int margin = 0)
 8003884:	b410      	push	{r4}
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 8003886:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 8003888:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 800388a:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800388e:	4362      	muls	r2, r4
    }
 8003890:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 8003894:	4718      	bx	r3

08003896 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf>:
        const float fs = f * (float)scale;
 8003896:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 800389a:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 800389c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 80038a0:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
        const float fs = f * (float)scale;
 80038a4:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 80038a8:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80038ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80038b0:	db08      	blt.n	80038c4 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2e>
            return (int)(fs + 0.5f);
 80038b2:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80038b6:	ee30 0a27 	vadd.f32	s0, s0, s15
 80038ba:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80038be:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 80038c2:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80038c4:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80038c8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80038cc:	ee17 2a90 	vmov	r2, s15
 80038d0:	ee30 0a47 	vsub.f32	s0, s0, s14
 80038d4:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 80038d8:	ee30 0a07 	vadd.f32	s0, s0, s14
 80038dc:	3a01      	subs	r2, #1
 80038de:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80038e2:	ee10 ca10 	vmov	ip, s0
 80038e6:	4494      	add	ip, r2
 80038e8:	4662      	mov	r2, ip
 80038ea:	e7ea      	b.n	80038c2 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2c>

080038ec <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv>:
        return scaled2intX(graphRangeMinX);
 80038ec:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int scaled2intX(int i) const
    {
        return scaled2int(i, xScale);
 80038f0:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 80038f2:	2b00      	cmp	r3, #0
 80038f4:	db07      	blt.n	8003906 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 80038f6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80038fa:	fb93 f0f2 	sdiv	r0, r3, r2
 80038fe:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003902:	1040      	asrs	r0, r0, #1
 8003904:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003906:	f06f 0001 	mvn.w	r0, #1
 800390a:	fb00 2003 	mla	r0, r0, r3, r2
 800390e:	3801      	subs	r0, #1
 8003910:	fb90 f0f2 	sdiv	r0, r0, r2
 8003914:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003918:	1040      	asrs	r0, r0, #1
 800391a:	4240      	negs	r0, r0
    }
 800391c:	4770      	bx	lr

0800391e <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMinAsFloatEv>:
     *
     * @return The number divided by the scale.
     */
    FORCE_INLINE_FUNCTION static float scaled2float(int i, int scale)
    {
        return (float)i / (float)scale;
 800391e:	edd0 7a4b 	vldr	s15, [r0, #300]	; 0x12c
 8003922:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003926:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 800392a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 800392e:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003932:	4770      	bx	lr

08003934 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMinScaledEv>:
    }
 8003934:	f8d0 012c 	ldr.w	r0, [r0, #300]	; 0x12c
 8003938:	4770      	bx	lr

0800393a <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv>:
        return scaled2intX(graphRangeMaxX);
 800393a:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
        return scaled2int(i, xScale);
 800393e:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 8003940:	2b00      	cmp	r3, #0
 8003942:	db07      	blt.n	8003954 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 8003944:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8003948:	fb93 f0f2 	sdiv	r0, r3, r2
 800394c:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003950:	1040      	asrs	r0, r0, #1
 8003952:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003954:	f06f 0001 	mvn.w	r0, #1
 8003958:	fb00 2003 	mla	r0, r0, r3, r2
 800395c:	3801      	subs	r0, #1
 800395e:	fb90 f0f2 	sdiv	r0, r0, r2
 8003962:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003966:	1040      	asrs	r0, r0, #1
 8003968:	4240      	negs	r0, r0
    }
 800396a:	4770      	bx	lr

0800396c <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMaxAsFloatEv>:
        return (float)i / (float)scale;
 800396c:	edd0 7a4c 	vldr	s15, [r0, #304]	; 0x130
 8003970:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003974:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 8003978:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 800397c:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003980:	4770      	bx	lr

08003982 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMaxScaledEv>:
    }
 8003982:	f8d0 0130 	ldr.w	r0, [r0, #304]	; 0x130
 8003986:	4770      	bx	lr

08003988 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv>:
        return scaled2intY(graphRangeMinY);
 8003988:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
        return scaled2int(i, yScale);
 800398c:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 800398e:	2b00      	cmp	r3, #0
 8003990:	db07      	blt.n	80039a2 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 8003992:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8003996:	fb93 f0f2 	sdiv	r0, r3, r2
 800399a:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800399e:	1040      	asrs	r0, r0, #1
 80039a0:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80039a2:	f06f 0001 	mvn.w	r0, #1
 80039a6:	fb00 2003 	mla	r0, r0, r3, r2
 80039aa:	3801      	subs	r0, #1
 80039ac:	fb90 f0f2 	sdiv	r0, r0, r2
 80039b0:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80039b4:	1040      	asrs	r0, r0, #1
 80039b6:	4240      	negs	r0, r0
    }
 80039b8:	4770      	bx	lr

080039ba <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMinAsFloatEv>:
        return (float)i / (float)scale;
 80039ba:	edd0 7a4d 	vldr	s15, [r0, #308]	; 0x134
 80039be:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80039c2:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 80039c6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 80039ca:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80039ce:	4770      	bx	lr

080039d0 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMinScaledEv>:
    }
 80039d0:	f8d0 0134 	ldr.w	r0, [r0, #308]	; 0x134
 80039d4:	4770      	bx	lr

080039d6 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv>:
        return scaled2intY(graphRangeMaxY);
 80039d6:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
        return scaled2int(i, yScale);
 80039da:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 80039dc:	2b00      	cmp	r3, #0
 80039de:	db07      	blt.n	80039f0 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 80039e0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80039e4:	fb93 f0f2 	sdiv	r0, r3, r2
 80039e8:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80039ec:	1040      	asrs	r0, r0, #1
 80039ee:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80039f0:	f06f 0001 	mvn.w	r0, #1
 80039f4:	fb00 2003 	mla	r0, r0, r3, r2
 80039f8:	3801      	subs	r0, #1
 80039fa:	fb90 f0f2 	sdiv	r0, r0, r2
 80039fe:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003a02:	1040      	asrs	r0, r0, #1
 8003a04:	4240      	negs	r0, r0
    }
 8003a06:	4770      	bx	lr

08003a08 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMaxAsFloatEv>:
        return (float)i / (float)scale;
 8003a08:	edd0 7a4e 	vldr	s15, [r0, #312]	; 0x138
 8003a0c:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003a10:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 8003a14:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003a18:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003a1c:	4770      	bx	lr

08003a1e <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMaxScaledEv>:
    }
 8003a1e:	f8d0 0138 	ldr.w	r0, [r0, #312]	; 0x138
 8003a22:	4770      	bx	lr

08003a24 <_ZN8touchgfx16DynamicDataGraph8setScaleEib>:
     * @see getScale
     *
     * @note The current xAxisFactor, xAxisOffet and xGraphRange values are updated to reflect the
     *       new scale being set.
     */
    virtual void setScale(int scale, bool updateData = false)
 8003a24:	b570      	push	{r4, r5, r6, lr}
    {
        setScaleX(scale, updateData);
 8003a26:	6803      	ldr	r3, [r0, #0]
    virtual void setScale(int scale, bool updateData = false)
 8003a28:	4604      	mov	r4, r0
        setScaleX(scale, updateData);
 8003a2a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    virtual void setScale(int scale, bool updateData = false)
 8003a2e:	460d      	mov	r5, r1
 8003a30:	4616      	mov	r6, r2
        setScaleX(scale, updateData);
 8003a32:	4798      	blx	r3
        setScaleY(scale, updateData);
 8003a34:	6823      	ldr	r3, [r4, #0]
 8003a36:	4632      	mov	r2, r6
 8003a38:	4629      	mov	r1, r5
 8003a3a:	4620      	mov	r0, r4
 8003a3c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    }
 8003a40:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setScaleY(scale, updateData);
 8003a44:	4718      	bx	r3

08003a46 <_ZNK8touchgfx16DynamicDataGraph8getScaleEv>:
     *
     * @see setScale
     */
    virtual int getScale() const
    {
        return getScaleY();
 8003a46:	6803      	ldr	r3, [r0, #0]
 8003a48:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003a4c:	4718      	bx	r3

08003a4e <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMinEv>:
     *
     * @return The minimum x coordinate .
     */
    virtual int getGraphRangeXMin() const
    {
        return getGraphRangeXMinScaled();
 8003a4e:	6803      	ldr	r3, [r0, #0]
 8003a50:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8003a54:	4718      	bx	r3

08003a56 <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMaxEv>:
     *
     * @return The maximum x coordinate .
     */
    virtual int getGraphRangeXMax() const
    {
        return getGraphRangeXMaxScaled();
 8003a56:	6803      	ldr	r3, [r0, #0]
 8003a58:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8003a5c:	4718      	bx	r3

08003a5e <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi>:

    virtual void setGraphRangeYAutoScaled(bool showXaxis, int margin);

    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
    {
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003a5e:	6803      	ldr	r3, [r0, #0]
        if (i >= 0)
 8003a60:	2a00      	cmp	r2, #0
    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
 8003a62:	b410      	push	{r4}
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003a64:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
        return scaled2int(i, xScale);
 8003a68:	6b04      	ldr	r4, [r0, #48]	; 0x30
        if (i >= 0)
 8003a6a:	db0e      	blt.n	8003a8a <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x2c>
            return ((i * 2 + scale) / scale) / 2;
 8003a6c:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8003a70:	fb92 f1f4 	sdiv	r1, r2, r4
 8003a74:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003a78:	1049      	asrs	r1, r1, #1
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003a7a:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
    }
 8003a7e:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003a82:	3a01      	subs	r2, #1
 8003a84:	440a      	add	r2, r1
 8003a86:	4249      	negs	r1, r1
 8003a88:	4718      	bx	r3
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003a8a:	f06f 0101 	mvn.w	r1, #1
 8003a8e:	fb01 4102 	mla	r1, r1, r2, r4
 8003a92:	3901      	subs	r1, #1
 8003a94:	fb91 f1f4 	sdiv	r1, r1, r4
 8003a98:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003a9c:	1049      	asrs	r1, r1, #1
 8003a9e:	4249      	negs	r1, r1
 8003aa0:	e7eb      	b.n	8003a7a <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x1c>

08003aa2 <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(int scale))
    {
        setXAxisFactor(scale);
 8003aa2:	6803      	ldr	r3, [r0, #0]
 8003aa4:	f8d3 313c 	ldr.w	r3, [r3, #316]	; 0x13c
 8003aa8:	4718      	bx	r3

08003aaa <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEi>:
        return i * scale;
 8003aaa:	6b02      	ldr	r2, [r0, #48]	; 0x30
     *
     * @param  factor The x axis factor.
     */
    virtual void setXAxisFactor(int factor)
    {
        setXAxisFactorScaled(int2scaledX(factor));
 8003aac:	6803      	ldr	r3, [r0, #0]
 8003aae:	4351      	muls	r1, r2
 8003ab0:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 8003ab4:	4718      	bx	r3

08003ab6 <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEf>:
    }

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(float scale))
    {
        setXAxisFactor(scale);
 8003ab6:	6803      	ldr	r3, [r0, #0]
 8003ab8:	f8d3 3144 	ldr.w	r3, [r3, #324]	; 0x144
 8003abc:	4718      	bx	r3

08003abe <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf>:
        const float fs = f * (float)scale;
 8003abe:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
    /// @endcond

    /** @copydoc setXAxisFactor(int) */
    virtual void setXAxisFactor(float factor)
    {
        setXAxisFactorScaled(float2scaledX(factor));
 8003ac2:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003ac4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisFactorScaled(float2scaledX(factor));
 8003ac8:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
        const float fs = f * (float)scale;
 8003acc:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003ad0:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003ad4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003ad8:	db08      	blt.n	8003aec <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2e>
            return (int)(fs + 0.5f);
 8003ada:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003ade:	ee30 0a27 	vadd.f32	s0, s0, s15
 8003ae2:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003ae6:	ee17 1a90 	vmov	r1, s15
        setXAxisFactorScaled(float2scaledX(factor));
 8003aea:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003aec:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003af0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003af4:	ee17 2a90 	vmov	r2, s15
 8003af8:	ee30 0a47 	vsub.f32	s0, s0, s14
 8003afc:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003b00:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003b04:	1e51      	subs	r1, r2, #1
 8003b06:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003b0a:	ee10 2a10 	vmov	r2, s0
 8003b0e:	440a      	add	r2, r1
 8003b10:	4611      	mov	r1, r2
 8003b12:	e7ea      	b.n	8003aea <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2c>

08003b14 <_ZN8touchgfx16DynamicDataGraph20setXAxisFactorScaledEi>:
     *
     * @see setXAxisFactorScaled,setXAxisFactor
     */
    virtual void setXAxisFactorScaled(int factor)
    {
        xAxisFactor = factor;
 8003b14:	f8c0 113c 	str.w	r1, [r0, #316]	; 0x13c
    }
 8003b18:	4770      	bx	lr

08003b1a <_ZNK8touchgfx16DynamicDataGraph18getXAxisScaleAsIntEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsInt()", virtual int getXAxisScaleAsInt() const)
    {
        return getXAxisFactorAsInt();
 8003b1a:	6803      	ldr	r3, [r0, #0]
 8003b1c:	f8d3 3150 	ldr.w	r3, [r3, #336]	; 0x150
 8003b20:	4718      	bx	r3

08003b22 <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv>:
     *
     * @return The x axis factor.
     */
    virtual int getXAxisFactorAsInt() const
    {
        return scaled2intX(getXAxisFactorScaled());
 8003b22:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisFactorAsInt() const
 8003b24:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisFactorScaled());
 8003b26:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
    virtual int getXAxisFactorAsInt() const
 8003b2a:	4604      	mov	r4, r0
        return scaled2intX(getXAxisFactorScaled());
 8003b2c:	4798      	blx	r3
        if (i >= 0)
 8003b2e:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 8003b30:	6b23      	ldr	r3, [r4, #48]	; 0x30
        if (i >= 0)
 8003b32:	db07      	blt.n	8003b44 <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 8003b34:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8003b38:	fb90 f0f3 	sdiv	r0, r0, r3
 8003b3c:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003b40:	1040      	asrs	r0, r0, #1
    }
 8003b42:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003b44:	f06f 0201 	mvn.w	r2, #1
 8003b48:	fb02 3000 	mla	r0, r2, r0, r3
 8003b4c:	3801      	subs	r0, #1
 8003b4e:	fb90 f0f3 	sdiv	r0, r0, r3
 8003b52:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003b56:	1040      	asrs	r0, r0, #1
 8003b58:	4240      	negs	r0, r0
        return scaled2intX(getXAxisFactorScaled());
 8003b5a:	e7f2      	b.n	8003b42 <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x20>

08003b5c <_ZNK8touchgfx16DynamicDataGraph20getXAxisScaleAsFloatEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsFloat()", virtual float getXAxisScaleAsFloat() const)
    {
        return getXAxisFactorAsFloat();
 8003b5c:	6803      	ldr	r3, [r0, #0]
 8003b5e:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 8003b62:	4718      	bx	r3

08003b64 <_ZNK8touchgfx16DynamicDataGraph21getXAxisFactorAsFloatEv>:
    /// @endcond

    /** @copydoc getXAxisFactorAsInt() */
    virtual float getXAxisFactorAsFloat() const
    {
        return scaled2floatX(getXAxisFactorScaled());
 8003b64:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisFactorAsFloat() const
 8003b66:	b510      	push	{r4, lr}
        return scaled2floatX(getXAxisFactorScaled());
 8003b68:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
    virtual float getXAxisFactorAsFloat() const
 8003b6c:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisFactorScaled());
 8003b6e:	4798      	blx	r3
        return (float)i / (float)scale;
 8003b70:	ee07 0a90 	vmov	s15, r0
 8003b74:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003b78:	edd4 7a0c 	vldr	s15, [r4, #48]	; 0x30
 8003b7c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003b80:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003b84:	bd10      	pop	{r4, pc}

08003b86 <_ZNK8touchgfx16DynamicDataGraph20getXAxisFactorScaledEv>:
     * @see getXAxisFactorAsInt, getXAxisFactorAsFloat, setXAxisFactor
     */
    virtual int getXAxisFactorScaled() const
    {
        return xAxisFactor;
    }
 8003b86:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8003b8a:	4770      	bx	lr

08003b8c <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEi>:
        return i * scale;
 8003b8c:	6b02      	ldr	r2, [r0, #48]	; 0x30
     *
     * @param  offset The x axis offset.
     */
    virtual void setXAxisOffset(int offset)
    {
        setXAxisOffsetScaled(int2scaledX(offset));
 8003b8e:	6803      	ldr	r3, [r0, #0]
 8003b90:	4351      	muls	r1, r2
 8003b92:	f8d3 3168 	ldr.w	r3, [r3, #360]	; 0x168
 8003b96:	4718      	bx	r3

08003b98 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf>:
        const float fs = f * (float)scale;
 8003b98:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
    }

    /** @copydoc setXAxisOffset(int) */
    virtual void setXAxisOffset(float offset)
    {
        setXAxisOffsetScaled(float2scaledX(offset));
 8003b9c:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003b9e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 8003ba2:	f8d3 3168 	ldr.w	r3, [r3, #360]	; 0x168
        const float fs = f * (float)scale;
 8003ba6:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003baa:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003bae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003bb2:	db08      	blt.n	8003bc6 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2e>
            return (int)(fs + 0.5f);
 8003bb4:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003bb8:	ee30 0a27 	vadd.f32	s0, s0, s15
 8003bbc:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003bc0:	ee17 1a90 	vmov	r1, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 8003bc4:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003bc6:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003bca:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003bce:	ee17 2a90 	vmov	r2, s15
 8003bd2:	ee30 0a47 	vsub.f32	s0, s0, s14
 8003bd6:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003bda:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003bde:	1e51      	subs	r1, r2, #1
 8003be0:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003be4:	ee10 2a10 	vmov	r2, s0
 8003be8:	440a      	add	r2, r1
 8003bea:	4611      	mov	r1, r2
 8003bec:	e7ea      	b.n	8003bc4 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2c>

08003bee <_ZN8touchgfx16DynamicDataGraph20setXAxisOffsetScaledEi>:
     *
     * @see setXAxisOffset, getXAxisOffsetScaled
     */
    virtual void setXAxisOffsetScaled(int offset)
    {
        xAxisOffset = offset;
 8003bee:	f8c0 1140 	str.w	r1, [r0, #320]	; 0x140
    }
 8003bf2:	4770      	bx	lr

08003bf4 <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv>:
     *
     * @return The x axis offset.
     */
    virtual int getXAxisOffsetAsInt() const
    {
        return scaled2intX(getXAxisOffsetScaled());
 8003bf4:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisOffsetAsInt() const
 8003bf6:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisOffsetScaled());
 8003bf8:	f8d3 3174 	ldr.w	r3, [r3, #372]	; 0x174
    virtual int getXAxisOffsetAsInt() const
 8003bfc:	4604      	mov	r4, r0
        return scaled2intX(getXAxisOffsetScaled());
 8003bfe:	4798      	blx	r3
        if (i >= 0)
 8003c00:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 8003c02:	6b23      	ldr	r3, [r4, #48]	; 0x30
        if (i >= 0)
 8003c04:	db07      	blt.n	8003c16 <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 8003c06:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8003c0a:	fb90 f0f3 	sdiv	r0, r0, r3
 8003c0e:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003c12:	1040      	asrs	r0, r0, #1
    }
 8003c14:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003c16:	f06f 0201 	mvn.w	r2, #1
 8003c1a:	fb02 3000 	mla	r0, r2, r0, r3
 8003c1e:	3801      	subs	r0, #1
 8003c20:	fb90 f0f3 	sdiv	r0, r0, r3
 8003c24:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003c28:	1040      	asrs	r0, r0, #1
 8003c2a:	4240      	negs	r0, r0
        return scaled2intX(getXAxisOffsetScaled());
 8003c2c:	e7f2      	b.n	8003c14 <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x20>

08003c2e <_ZNK8touchgfx16DynamicDataGraph21getXAxisOffsetAsFloatEv>:

    /** @copydoc getXAxisOffsetAsInt() */
    virtual float getXAxisOffsetAsFloat() const
    {
        return scaled2floatX(getXAxisOffsetScaled());
 8003c2e:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisOffsetAsFloat() const
 8003c30:	b510      	push	{r4, lr}
        return scaled2floatX(getXAxisOffsetScaled());
 8003c32:	f8d3 3174 	ldr.w	r3, [r3, #372]	; 0x174
    virtual float getXAxisOffsetAsFloat() const
 8003c36:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisOffsetScaled());
 8003c38:	4798      	blx	r3
        return (float)i / (float)scale;
 8003c3a:	ee07 0a90 	vmov	s15, r0
 8003c3e:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003c42:	edd4 7a0c 	vldr	s15, [r4, #48]	; 0x30
 8003c46:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003c4a:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003c4e:	bd10      	pop	{r4, pc}

08003c50 <_ZNK8touchgfx16DynamicDataGraph20getXAxisOffsetScaledEv>:
     * @see getXAxisOffsetAsInt, getXAxisOffsetAsFloat, setXAxisOffsetScaled, setXAxisOffset
     */
    virtual int getXAxisOffsetScaled() const
    {
        return xAxisOffset;
    }
 8003c50:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 8003c54:	4770      	bx	lr

08003c56 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii>:
    }

    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
    {
        // Value is also index for these types of graphs.
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003c56:	6803      	ldr	r3, [r0, #0]
        return scaled2int(i, xScale);
 8003c58:	6b02      	ldr	r2, [r0, #48]	; 0x30
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003c5a:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
        if (i >= 0)
 8003c5e:	2900      	cmp	r1, #0
    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
 8003c60:	b510      	push	{r4, lr}
 8003c62:	4604      	mov	r4, r0
        if (i >= 0)
 8003c64:	db0e      	blt.n	8003c84 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x2e>
            return ((i * 2 + scale) / scale) / 2;
 8003c66:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8003c6a:	fb91 f1f2 	sdiv	r1, r1, r2
 8003c6e:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003c72:	1049      	asrs	r1, r1, #1
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003c74:	b209      	sxth	r1, r1
 8003c76:	4620      	mov	r0, r4
 8003c78:	4798      	blx	r3
 8003c7a:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	; 0x13c
    }
 8003c7e:	fb02 3000 	mla	r0, r2, r0, r3
 8003c82:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003c84:	f06f 0001 	mvn.w	r0, #1
 8003c88:	fb00 2101 	mla	r1, r0, r1, r2
 8003c8c:	3901      	subs	r1, #1
 8003c8e:	fb91 f1f2 	sdiv	r1, r1, r2
 8003c92:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003c96:	1049      	asrs	r1, r1, #1
 8003c98:	4249      	negs	r1, r1
 8003c9a:	e7eb      	b.n	8003c74 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x1e>

08003c9c <_ZNK8touchgfx16DynamicDataGraph9getScaleXEv>:
    virtual void setScaleX(int scale, bool updateData = false);

    virtual int getScaleX() const
    {
        return AbstractDataGraph::getScaleX();
    }
 8003c9c:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8003c9e:	4770      	bx	lr

08003ca0 <_ZNK8touchgfx16DynamicDataGraph9getScaleYEv>:
    virtual void setScaleY(int scale, bool updateData = false);

    virtual int getScaleY() const
    {
        return AbstractDataGraph::getScaleY();
    }
 8003ca0:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8003ca2:	4770      	bx	lr

08003ca4 <_ZN8touchgfx16DynamicDataGraph19setXAxisScaleScaledEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactorScaled()", virtual void setXAxisScaleScaled(int scale))
    {
        setXAxisFactorScaled(scale);
 8003ca4:	6803      	ldr	r3, [r0, #0]
 8003ca6:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 8003caa:	4718      	bx	r3

08003cac <_ZNK8touchgfx16DynamicDataGraph19getXAxisScaleScaledEv>:
    /// @endcond

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorScaled()", virtual int getXAxisScaleScaled() const)
    {
        return getXAxisFactorScaled();
 8003cac:	6803      	ldr	r3, [r0, #0]
 8003cae:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
 8003cb2:	4718      	bx	r3

08003cb4 <_ZNK8touchgfx16DynamicDataGraph16indexToScreenXQ5Es>:
        return i * scale;
 8003cb4:	6b02      	ldr	r2, [r0, #48]	; 0x30
    }
    /// @endcond

    virtual CWRUtil::Q5 indexToScreenXQ5(int16_t index) const
    {
        return valueToScreenXQ5(int2scaledX(index));
 8003cb6:	6803      	ldr	r3, [r0, #0]
 8003cb8:	4351      	muls	r1, r2
 8003cba:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 8003cbe:	4718      	bx	r3

08003cc0 <_ZNK8touchgfx16DynamicDataGraph16indexToScreenYQ5Es>:
    }

    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
    {
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003cc0:	6803      	ldr	r3, [r0, #0]
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 8003cc2:	b570      	push	{r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003cc4:	f8d3 5118 	ldr.w	r5, [r3, #280]	; 0x118
 8003cc8:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 8003ccc:	f8d0 6144 	ldr.w	r6, [r0, #324]	; 0x144
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 8003cd0:	4604      	mov	r4, r0
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003cd2:	4798      	blx	r3
 8003cd4:	462b      	mov	r3, r5
 8003cd6:	f856 1020 	ldr.w	r1, [r6, r0, lsl #2]
 8003cda:	4620      	mov	r0, r4
    }
 8003cdc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003ce0:	4718      	bx	r3

08003ce2 <_ZNK8touchgfx15GraphScrollData9dataIndexEs>:

    virtual int16_t addValue(int value);

    virtual int16_t dataIndex(int16_t screenIndex) const
    {
        return usedCapacity < maxCapacity ? screenIndex : (screenIndex + current) % maxCapacity;
 8003ce2:	f9b0 211c 	ldrsh.w	r2, [r0, #284]	; 0x11c
 8003ce6:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 8003cea:	4293      	cmp	r3, r2
 8003cec:	db07      	blt.n	8003cfe <_ZNK8touchgfx15GraphScrollData9dataIndexEs+0x1c>
 8003cee:	f9b0 314c 	ldrsh.w	r3, [r0, #332]	; 0x14c
 8003cf2:	4419      	add	r1, r3
 8003cf4:	fb91 f0f2 	sdiv	r0, r1, r2
 8003cf8:	fb02 1110 	mls	r1, r2, r0, r1
 8003cfc:	b209      	sxth	r1, r1
    }
 8003cfe:	4608      	mov	r0, r1
 8003d00:	4770      	bx	lr

08003d02 <_ZNK8touchgfx15GraphScrollData10indexToXQ5Es>:

private:
    virtual CWRUtil::Q5 indexToXQ5(int16_t index) const
    {
        return CWRUtil::toQ5(index);
    }
 8003d02:	0148      	lsls	r0, r1, #5
 8003d04:	4770      	bx	lr

08003d06 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8003d06:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 8003d0a:	4770      	bx	lr

08003d0c <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8003d0c:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 8003d10:	4770      	bx	lr

08003d12 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8003d12:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003d14:	2200      	movs	r2, #0
        return rect.width;
 8003d16:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8003d1a:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8003d1e:	8002      	strh	r2, [r0, #0]
 8003d20:	8042      	strh	r2, [r0, #2]
 8003d22:	8084      	strh	r4, [r0, #4]
 8003d24:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8003d26:	bd10      	pop	{r4, pc}

08003d28 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8003d28:	2200      	movs	r2, #0
 8003d2a:	8002      	strh	r2, [r0, #0]
 8003d2c:	8042      	strh	r2, [r0, #2]
 8003d2e:	8082      	strh	r2, [r0, #4]
 8003d30:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8003d32:	4770      	bx	lr

08003d34 <_ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE>:
     *
     * @see getColor
     */
    virtual void setColor(colortype newColor)
    {
        color = newColor;
 8003d34:	62c1      	str	r1, [r0, #44]	; 0x2c
    }
 8003d36:	4770      	bx	lr

08003d38 <_ZNK8touchgfx25AbstractGraphElementNoCWR8getColorEv>:
     * @see setColor
     */
    virtual colortype getColor() const
    {
        return color;
    }
 8003d38:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8003d3a:	4770      	bx	lr

08003d3c <_ZNK8touchgfx25AbstractGraphElementNoCWR16drawCanvasWidgetERKNS_4RectE>:

    virtual bool drawCanvasWidget(const Rect&) const
    {
        return true;
    }
 8003d3c:	2001      	movs	r0, #1
 8003d3e:	4770      	bx	lr

08003d40 <_ZN8touchgfx25AbstractGraphElementNoCWR10setPainterERNS_15AbstractPainterE>:
    void normalizeRect(Rect& r) const;

private:
    virtual void setPainter(AbstractPainter& /*painter*/)
    {
    }
 8003d40:	4770      	bx	lr

08003d42 <_ZN8touchgfx20GraphElementGridBase22invalidateGraphPointAtEs>:
        return lineWidth;
    }

    virtual void invalidateGraphPointAt(int16_t)
    {
    }
 8003d42:	4770      	bx	lr

08003d44 <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
     *
     * @return The correctly scaled major interval.
     */
    virtual int getCorrectlyScaledMajorInterval(const AbstractDataGraph* graph) const
    {
        return majorGrid == 0 ? 0 : majorGrid->getCorrectlyScaledGridInterval(graph);
 8003d44:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8003d46:	b118      	cbz	r0, 8003d50 <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 8003d48:	6803      	ldr	r3, [r0, #0]
 8003d4a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8003d4e:	4718      	bx	r3
    }
 8003d50:	4770      	bx	lr

08003d52 <_ZNK8touchgfx17GraphElementGridX13enclosingAreaEPKNS_17AbstractDataGraphE>:
    {
        return convertToGraphScaleX(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 8003d52:	b530      	push	{r4, r5, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003d54:	f8b2 111a 	ldrh.w	r1, [r2, #282]	; 0x11a
        return topPadding;
 8003d58:	f9b2 4114 	ldrsh.w	r4, [r2, #276]	; 0x114
        return rect.width;
 8003d5c:	f9b2 5040 	ldrsh.w	r5, [r2, #64]	; 0x40
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003d60:	f8b2 2042 	ldrh.w	r2, [r2, #66]	; 0x42
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003d64:	8044      	strh	r4, [r0, #2]
 8003d66:	4421      	add	r1, r4
 8003d68:	1a52      	subs	r2, r2, r1
 8003d6a:	2100      	movs	r1, #0
 8003d6c:	8001      	strh	r1, [r0, #0]
 8003d6e:	8085      	strh	r5, [r0, #4]
 8003d70:	80c2      	strh	r2, [r0, #6]
    {
        return Rect(0, graph->getGraphAreaPaddingTop(), graph->getGraphAreaWidthIncludingPadding(), graph->getGraphAreaHeight());
    }
 8003d72:	bd30      	pop	{r4, r5, pc}

08003d74 <_ZNK8touchgfx17GraphElementGridX8lineRectEssss>:

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
 8003d74:	b510      	push	{r4, lr}
 8003d76:	8042      	strh	r2, [r0, #2]
 8003d78:	f9bd 4008 	ldrsh.w	r4, [sp, #8]
 8003d7c:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8003d80:	8004      	strh	r4, [r0, #0]
 8003d82:	8082      	strh	r2, [r0, #4]
 8003d84:	80c3      	strh	r3, [r0, #6]
    {
        return Rect(pos, start, width, length);
    }
 8003d86:	bd10      	pop	{r4, pc}

08003d88 <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMinScaled();
 8003d88:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 8003d8a:	4608      	mov	r0, r1
        return graph->getGraphRangeXMinScaled();
 8003d8c:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8003d90:	4718      	bx	r3

08003d92 <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMaxScaled();
 8003d92:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 8003d94:	4608      	mov	r0, r1
        return graph->getGraphRangeXMaxScaled();
 8003d96:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8003d9a:	4718      	bx	r3

08003d9c <_ZNK8touchgfx17GraphElementGridX17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 8003d9c:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 8003da0:	4770      	bx	lr

08003da2 <_ZNK8touchgfx17GraphElementGridX18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 8003da2:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 8003da6:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 8003daa:	4403      	add	r3, r0
 8003dac:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 8003db0:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 8003db2:	b200      	sxth	r0, r0
 8003db4:	4770      	bx	lr

08003db6 <_ZNK8touchgfx17GraphElementGridX20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 8003db6:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 8003dba:	4770      	bx	lr

08003dbc <_ZNK8touchgfx17GraphElementGridX18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003dbc:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 8003dc0:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 8003dc4:	4403      	add	r3, r0
 8003dc6:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 8003dca:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 8003dcc:	b200      	sxth	r0, r0
 8003dce:	4770      	bx	lr

08003dd0 <_ZNK8touchgfx17GraphElementGridX15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenXQ5(x);
 8003dd0:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 8003dd2:	4608      	mov	r0, r1
        return graph->valueToScreenXQ5(x);
 8003dd4:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 8003dd8:	4611      	mov	r1, r2
 8003dda:	4718      	bx	r3

08003ddc <_ZNK8touchgfx17GraphElementGridY13enclosingAreaEPKNS_17AbstractDataGraphE>:
 8003ddc:	f8b2 1118 	ldrh.w	r1, [r2, #280]	; 0x118
    {
        return convertToGraphScaleY(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 8003de0:	b530      	push	{r4, r5, lr}
        return leftPadding;
 8003de2:	f9b2 5116 	ldrsh.w	r5, [r2, #278]	; 0x116
 8003de6:	8005      	strh	r5, [r0, #0]
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003de8:	186c      	adds	r4, r5, r1
 8003dea:	f8b2 1040 	ldrh.w	r1, [r2, #64]	; 0x40
        return rect.height;
 8003dee:	f9b2 2042 	ldrsh.w	r2, [r2, #66]	; 0x42
 8003df2:	80c2      	strh	r2, [r0, #6]
 8003df4:	1b09      	subs	r1, r1, r4
 8003df6:	2400      	movs	r4, #0
 8003df8:	8044      	strh	r4, [r0, #2]
 8003dfa:	8081      	strh	r1, [r0, #4]
    {
        return Rect(graph->getGraphAreaPaddingLeft(), 0, graph->getGraphAreaWidth(), graph->getGraphAreaHeightIncludingPadding());
    }
 8003dfc:	bd30      	pop	{r4, r5, pc}

08003dfe <_ZNK8touchgfx17GraphElementGridY8lineRectEssss>:
 8003dfe:	8002      	strh	r2, [r0, #0]
 8003e00:	8083      	strh	r3, [r0, #4]
 8003e02:	f9bd 2000 	ldrsh.w	r2, [sp]
 8003e06:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8003e0a:	8042      	strh	r2, [r0, #2]
 8003e0c:	80c3      	strh	r3, [r0, #6]

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
    {
        return Rect(start, pos, length, width);
    }
 8003e0e:	4770      	bx	lr

08003e10 <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMinScaled();
 8003e10:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 8003e12:	4608      	mov	r0, r1
        return graph->getGraphRangeYMinScaled();
 8003e14:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 8003e18:	4718      	bx	r3

08003e1a <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMaxScaled();
 8003e1a:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 8003e1c:	4608      	mov	r0, r1
        return graph->getGraphRangeYMaxScaled();
 8003e1e:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 8003e22:	4718      	bx	r3

08003e24 <_ZNK8touchgfx17GraphElementGridY17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 8003e24:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 8003e28:	4770      	bx	lr

08003e2a <_ZNK8touchgfx17GraphElementGridY18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 8003e2a:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 8003e2e:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 8003e32:	4403      	add	r3, r0
 8003e34:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 8003e38:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 8003e3a:	b200      	sxth	r0, r0
 8003e3c:	4770      	bx	lr

08003e3e <_ZNK8touchgfx17GraphElementGridY20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 8003e3e:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 8003e42:	4770      	bx	lr

08003e44 <_ZNK8touchgfx17GraphElementGridY18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003e44:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 8003e48:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 8003e4c:	4403      	add	r3, r0
 8003e4e:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 8003e52:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 8003e54:	b200      	sxth	r0, r0
 8003e56:	4770      	bx	lr

08003e58 <_ZNK8touchgfx17GraphElementGridY15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenYQ5(y);
 8003e58:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 8003e5a:	4608      	mov	r0, r1
        return graph->valueToScreenYQ5(y);
 8003e5c:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 8003e60:	4611      	mov	r1, r2
 8003e62:	4718      	bx	r3

08003e64 <_ZN19ScreenGraphViewBaseD1Ev>:

class ScreenGraphViewBase : public touchgfx::View<ScreenGraphPresenter>
{
public:
    ScreenGraphViewBase();
    virtual ~ScreenGraphViewBase() {}
 8003e64:	4770      	bx	lr

08003e66 <_ZN19ScreenGraphViewBase11setupScreenEv>:
}

void ScreenGraphViewBase::setupScreen()
{

}
 8003e66:	4770      	bx	lr

08003e68 <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003e68:	4770      	bx	lr

08003e6a <_ZN8touchgfx11GraphScrollILs60EED1Ev>:
 * the new values added to the graph.
 *
 * @tparam CAPACITY The maximum number of data points on the graph.
 */
template <int16_t CAPACITY>
class GraphScroll : public GraphScrollData
 8003e6a:	4770      	bx	lr

08003e6c <_ZN8touchgfx11GraphScrollILs600EED1Ev>:
 8003e6c:	4770      	bx	lr

08003e6e <_ZN8touchgfx17GraphElementGridYD1Ev>:
class GraphElementGridY : public GraphElementGridBase
 8003e6e:	4770      	bx	lr

08003e70 <_ZN8touchgfx17GraphElementGridXD1Ev>:
class GraphElementGridX : public GraphElementGridBase
 8003e70:	4770      	bx	lr

08003e72 <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003e72:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003e74:	68c2      	ldr	r2, [r0, #12]
 8003e76:	6844      	ldr	r4, [r0, #4]
 8003e78:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003e7a:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003e7c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003e80:	07d2      	lsls	r2, r2, #31
 8003e82:	bf48      	it	mi
 8003e84:	5962      	ldrmi	r2, [r4, r5]
 8003e86:	689b      	ldr	r3, [r3, #8]
    }
 8003e88:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003e8a:	bf48      	it	mi
 8003e8c:	58d3      	ldrmi	r3, [r2, r3]
 8003e8e:	4718      	bx	r3

08003e90 <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8003e90:	6843      	ldr	r3, [r0, #4]
 8003e92:	b12b      	cbz	r3, 8003ea0 <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8003e94:	6883      	ldr	r3, [r0, #8]
 8003e96:	b92b      	cbnz	r3, 8003ea4 <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003e98:	68c0      	ldr	r0, [r0, #12]
 8003e9a:	f000 0001 	and.w	r0, r0, #1
 8003e9e:	4770      	bx	lr
 8003ea0:	4618      	mov	r0, r3
 8003ea2:	4770      	bx	lr
 8003ea4:	2001      	movs	r0, #1
    }
 8003ea6:	4770      	bx	lr

08003ea8 <_ZN8touchgfx17GraphElementGridXD0Ev>:
 8003ea8:	b510      	push	{r4, lr}
 8003eaa:	2140      	movs	r1, #64	; 0x40
 8003eac:	4604      	mov	r4, r0
 8003eae:	f01c fb01 	bl	80204b4 <_ZdlPvj>
 8003eb2:	4620      	mov	r0, r4
 8003eb4:	bd10      	pop	{r4, pc}

08003eb6 <_ZN8touchgfx17GraphElementGridYD0Ev>:
class GraphElementGridY : public GraphElementGridBase
 8003eb6:	b510      	push	{r4, lr}
 8003eb8:	2140      	movs	r1, #64	; 0x40
 8003eba:	4604      	mov	r4, r0
 8003ebc:	f01c fafa 	bl	80204b4 <_ZdlPvj>
 8003ec0:	4620      	mov	r0, r4
 8003ec2:	bd10      	pop	{r4, pc}

08003ec4 <_ZN8touchgfx11GraphScrollILs600EED0Ev>:
 8003ec4:	b510      	push	{r4, lr}
 8003ec6:	f44f 612b 	mov.w	r1, #2736	; 0xab0
 8003eca:	4604      	mov	r4, r0
 8003ecc:	f01c faf2 	bl	80204b4 <_ZdlPvj>
 8003ed0:	4620      	mov	r0, r4
 8003ed2:	bd10      	pop	{r4, pc}

08003ed4 <_ZN8touchgfx11GraphScrollILs60EED0Ev>:
 8003ed4:	b510      	push	{r4, lr}
 8003ed6:	f44f 7110 	mov.w	r1, #576	; 0x240
 8003eda:	4604      	mov	r4, r0
 8003edc:	f01c faea 	bl	80204b4 <_ZdlPvj>
 8003ee0:	4620      	mov	r0, r4
 8003ee2:	bd10      	pop	{r4, pc}

08003ee4 <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003ee4:	b510      	push	{r4, lr}
 8003ee6:	2110      	movs	r1, #16
 8003ee8:	4604      	mov	r4, r0
 8003eea:	f01c fae3 	bl	80204b4 <_ZdlPvj>
 8003eee:	4620      	mov	r0, r4
 8003ef0:	bd10      	pop	{r4, pc}

08003ef2 <_ZN19ScreenGraphViewBaseD0Ev>:
 8003ef2:	b510      	push	{r4, lr}
 8003ef4:	f242 6118 	movw	r1, #9752	; 0x2618
 8003ef8:	4604      	mov	r4, r0
 8003efa:	f01c fadb 	bl	80204b4 <_ZdlPvj>
 8003efe:	4620      	mov	r0, r4
 8003f00:	bd10      	pop	{r4, pc}

08003f02 <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv>:
        if (alpha > 0)
 8003f02:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8003f06:	b10b      	cbz	r3, 8003f0c <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv+0xa>
            Container::invalidateContent();
 8003f08:	f006 bcc1 	b.w	800a88e <_ZNK8touchgfx9Container17invalidateContentEv>
    }
 8003f0c:	4770      	bx	lr

08003f0e <_ZNK8touchgfx17GraphElementGridX30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 8003f0e:	b513      	push	{r0, r1, r4, lr}
 8003f10:	4603      	mov	r3, r0
 8003f12:	4608      	mov	r0, r1
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 8003f14:	e9d3 140c 	ldrd	r1, r4, [r3, #48]	; 0x30
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003f18:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 8003f1a:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003f1c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8003f20:	4798      	blx	r3
 8003f22:	9901      	ldr	r1, [sp, #4]
 8003f24:	4602      	mov	r2, r0
 8003f26:	4620      	mov	r0, r4
    }
 8003f28:	b002      	add	sp, #8
 8003f2a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003f2e:	f008 baf7 	b.w	800c520 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

08003f32 <_ZNK8touchgfx17GraphElementGridY30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 8003f32:	b513      	push	{r0, r1, r4, lr}
 8003f34:	4603      	mov	r3, r0
 8003f36:	4608      	mov	r0, r1
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 8003f38:	e9d3 140c 	ldrd	r1, r4, [r3, #48]	; 0x30
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003f3c:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 8003f3e:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003f40:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003f44:	4798      	blx	r3
 8003f46:	9901      	ldr	r1, [sp, #4]
 8003f48:	4602      	mov	r2, r0
 8003f4a:	4620      	mov	r0, r4
    }
 8003f4c:	b002      	add	sp, #8
 8003f4e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003f52:	f008 bae5 	b.w	800c520 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
	...

08003f58 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 8003f58:	1e0a      	subs	r2, r1, #0
    virtual int indexToDataPointYScaled(int16_t index) const
 8003f5a:	b510      	push	{r4, lr}
        assert(index >= 0 && index < usedCapacity);
 8003f5c:	db03      	blt.n	8003f66 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0xe>
 8003f5e:	f9b0 411e 	ldrsh.w	r4, [r0, #286]	; 0x11e
 8003f62:	4294      	cmp	r4, r2
 8003f64:	dc06      	bgt.n	8003f74 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x1c>
 8003f66:	4b08      	ldr	r3, [pc, #32]	; (8003f88 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x30>)
 8003f68:	4a08      	ldr	r2, [pc, #32]	; (8003f8c <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x34>)
 8003f6a:	4809      	ldr	r0, [pc, #36]	; (8003f90 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x38>)
 8003f6c:	f240 6133 	movw	r1, #1587	; 0x633
 8003f70:	f01c fb54 	bl	802061c <__assert_func>
        return yValues[dataIndex(index)];
 8003f74:	6803      	ldr	r3, [r0, #0]
 8003f76:	f8d0 4144 	ldr.w	r4, [r0, #324]	; 0x144
 8003f7a:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 8003f7e:	4798      	blx	r3
    }
 8003f80:	f854 0020 	ldr.w	r0, [r4, r0, lsl #2]
 8003f84:	bd10      	pop	{r4, pc}
 8003f86:	bf00      	nop
 8003f88:	08022a4c 	.word	0x08022a4c
 8003f8c:	08022a6f 	.word	0x08022a6f
 8003f90:	08022abe 	.word	0x08022abe

08003f94 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 8003f94:	1e0b      	subs	r3, r1, #0
    virtual int indexToDataPointXScaled(int16_t index) const
 8003f96:	b510      	push	{r4, lr}
 8003f98:	4604      	mov	r4, r0
        assert(index >= 0 && index < usedCapacity);
 8003f9a:	db03      	blt.n	8003fa4 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x10>
 8003f9c:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
 8003fa0:	429a      	cmp	r2, r3
 8003fa2:	dc06      	bgt.n	8003fb2 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x1e>
 8003fa4:	4b07      	ldr	r3, [pc, #28]	; (8003fc4 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x30>)
 8003fa6:	4a08      	ldr	r2, [pc, #32]	; (8003fc8 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x34>)
 8003fa8:	4808      	ldr	r0, [pc, #32]	; (8003fcc <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x38>)
 8003faa:	f240 612d 	movw	r1, #1581	; 0x62d
 8003fae:	f01c fb35 	bl	802061c <__assert_func>
        return (indexToGlobalIndex(index) * xAxisFactor) + xAxisOffset;
 8003fb2:	6803      	ldr	r3, [r0, #0]
 8003fb4:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8003fb8:	4798      	blx	r3
 8003fba:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	; 0x13c
    }
 8003fbe:	fb02 3000 	mla	r0, r2, r0, r3
 8003fc2:	bd10      	pop	{r4, pc}
 8003fc4:	08022a4c 	.word	0x08022a4c
 8003fc8:	08022b1b 	.word	0x08022b1b
 8003fcc:	08022abe 	.word	0x08022abe

08003fd0 <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

}

void ScreenGraphViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button1)
 8003fd0:	f100 03cc 	add.w	r3, r0, #204	; 0xcc
 8003fd4:	4299      	cmp	r1, r3
{
 8003fd6:	b510      	push	{r4, lr}
 8003fd8:	4604      	mov	r4, r0
    if (&src == &button1)
 8003fda:	d105      	bne.n	8003fe8 <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x18>
     */
    virtual void action1();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003fdc:	f00c ff4e 	bl	8010e7c <_ZN8touchgfx11Application11getInstanceEv>
        dynamicGraph1.setVisible(!dynamicGraph1.isVisible());
        dynamicGraph2.setVisible(!dynamicGraph2.isVisible());
        dynamicGraph1.invalidate();
        dynamicGraph2.invalidate();
    }
}
 8003fe0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        application().gotoScreen1ScreenWipeTransitionEast();
 8003fe4:	f7fe bb4c 	b.w	8002680 <_ZN23FrontendApplicationBase35gotoScreen1ScreenWipeTransitionEastEv>
    else if (&src == &toggleButton1)
 8003fe8:	f500 538a 	add.w	r3, r0, #4416	; 0x1140
 8003fec:	331c      	adds	r3, #28
 8003fee:	4299      	cmp	r1, r3
 8003ff0:	d115      	bne.n	800401e <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x4e>
        dynamicGraph1.setVisible(!dynamicGraph1.isVisible());
 8003ff2:	f890 3db1 	ldrb.w	r3, [r0, #3505]	; 0xdb1
 8003ff6:	f083 0301 	eor.w	r3, r3, #1
        visible = vis;
 8003ffa:	f880 3db1 	strb.w	r3, [r0, #3505]	; 0xdb1
        dynamicGraph2.setVisible(!dynamicGraph2.isVisible());
 8003ffe:	f890 3125 	ldrb.w	r3, [r0, #293]	; 0x125
 8004002:	f083 0301 	eor.w	r3, r3, #1
 8004006:	f880 3125 	strb.w	r3, [r0, #293]	; 0x125
        dynamicGraph1.invalidate();
 800400a:	f600 508c 	addw	r0, r0, #3468	; 0xd8c
 800400e:	f00d fecc 	bl	8011daa <_ZNK8touchgfx8Drawable10invalidateEv>
        dynamicGraph2.invalidate();
 8004012:	f504 7080 	add.w	r0, r4, #256	; 0x100
}
 8004016:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        dynamicGraph2.invalidate();
 800401a:	f00d bec6 	b.w	8011daa <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800401e:	bd10      	pop	{r4, pc}

08004020 <_ZN8touchgfx14AbstractButtonC1Ev>:
    AbstractButton()
 8004020:	b510      	push	{r4, lr}
        : Widget(), action(), pressed(false)
 8004022:	2226      	movs	r2, #38	; 0x26
    AbstractButton()
 8004024:	4604      	mov	r4, r0
        : Widget(), action(), pressed(false)
 8004026:	2100      	movs	r1, #0
 8004028:	f01c fc7e 	bl	8020928 <memset>
 800402c:	4620      	mov	r0, r4
 800402e:	f7fe fee9 	bl	8002e04 <_ZN8touchgfx6WidgetC1Ev>
 8004032:	4b05      	ldr	r3, [pc, #20]	; (8004048 <_ZN8touchgfx14AbstractButtonC1Ev+0x28>)
 8004034:	6023      	str	r3, [r4, #0]
 8004036:	2300      	movs	r3, #0
 8004038:	62a3      	str	r3, [r4, #40]	; 0x28
 800403a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        touchable = touch;
 800403e:	2301      	movs	r3, #1
 8004040:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
    }
 8004044:	4620      	mov	r0, r4
 8004046:	bd10      	pop	{r4, pc}
 8004048:	08023cc0 	.word	0x08023cc0

0800404c <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>:
     * @param  factor2 The second factor.
     * @param  divisor The divisor.
     *
     * @return factor1 * factor2 / divisor as a Q5
     */
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 800404c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    {
        int32_t remainder;
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 800404e:	ab01      	add	r3, sp, #4
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8004050:	4615      	mov	r5, r2
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8004052:	f00e f84c 	bl	80120ee <_ZN8touchgfx6muldivElllRl>
        if (result >= 0)
 8004056:	2800      	cmp	r0, #0
 8004058:	ea4f 1440 	mov.w	r4, r0, lsl #5
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 800405c:	9901      	ldr	r1, [sp, #4]
 800405e:	462a      	mov	r2, r5
 8004060:	f04f 0020 	mov.w	r0, #32
        if (result >= 0)
 8004064:	db04      	blt.n	8004070 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x24>
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8004066:	f00e f861 	bl	801212c <_ZN8touchgfx6muldivElll>
            return Q5(v + q5.v);
 800406a:	4420      	add	r0, r4
        {
            return toQ5(result) + muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
        }
        return toQ5(result) - muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
    }
 800406c:	b003      	add	sp, #12
 800406e:	bd30      	pop	{r4, r5, pc}
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8004070:	f00e f85c 	bl	801212c <_ZN8touchgfx6muldivElll>
            return Q5(v - q5.v);
 8004074:	1a20      	subs	r0, r4, r0
 8004076:	e7f9      	b.n	800406c <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x20>

08004078 <_ZNK8touchgfx17AbstractDataGraph16valueToScreenYQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 8004078:	b570      	push	{r4, r5, r6, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 800407a:	f9b0 4114 	ldrsh.w	r4, [r0, #276]	; 0x114
 800407e:	f8b0 511a 	ldrh.w	r5, [r0, #282]	; 0x11a
 8004082:	1963      	adds	r3, r4, r5
 8004084:	f8b0 5042 	ldrh.w	r5, [r0, #66]	; 0x42
 8004088:	1aed      	subs	r5, r5, r3
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 800408a:	e9d0 324d 	ldrd	r3, r2, [r0, #308]	; 0x134
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 800408e:	460e      	mov	r6, r1
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 8004090:	b22d      	sxth	r5, r5
 8004092:	1ad2      	subs	r2, r2, r3
 8004094:	1e69      	subs	r1, r5, #1
 8004096:	1af0      	subs	r0, r6, r3
 8004098:	f7ff ffd8 	bl	800404c <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
 800409c:	442c      	add	r4, r5
 800409e:	3c01      	subs	r4, #1
    }
 80040a0:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
 80040a4:	bd70      	pop	{r4, r5, r6, pc}

080040a6 <_ZNK8touchgfx17AbstractDataGraph16valueToScreenXQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenXQ5(int x) const
 80040a6:	b538      	push	{r3, r4, r5, lr}
 80040a8:	4604      	mov	r4, r0
 80040aa:	4608      	mov	r0, r1
        return graphArea.getWidth() - (leftPadding + rightPadding);
 80040ac:	f8b4 3118 	ldrh.w	r3, [r4, #280]	; 0x118
 80040b0:	f8b4 1116 	ldrh.w	r1, [r4, #278]	; 0x116
 80040b4:	440b      	add	r3, r1
 80040b6:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 80040ba:	e9d4 524b 	ldrd	r5, r2, [r4, #300]	; 0x12c
        return graphArea.getWidth() - (leftPadding + rightPadding);
 80040be:	1ac9      	subs	r1, r1, r3
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 80040c0:	b209      	sxth	r1, r1
 80040c2:	1b52      	subs	r2, r2, r5
 80040c4:	3901      	subs	r1, #1
 80040c6:	1b40      	subs	r0, r0, r5
 80040c8:	f7ff ffc0 	bl	800404c <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
            return Q5(v + q5.v);
 80040cc:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	; 0x116
    }
 80040d0:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 80040d4:	bd38      	pop	{r3, r4, r5, pc}
	...

080040d8 <_ZN8touchgfx20GraphElementGridBaseC1Ev>:
    GraphElementGridBase()
 80040d8:	b510      	push	{r4, lr}
 80040da:	4604      	mov	r4, r0
        : CanvasWidget()
 80040dc:	f007 fe08 	bl	800bcf0 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 80040e0:	4a06      	ldr	r2, [pc, #24]	; (80040fc <_ZN8touchgfx20GraphElementGridBaseC1Ev+0x24>)
 80040e2:	6022      	str	r2, [r4, #0]
        : color(col)
 80040e4:	2300      	movs	r3, #0
 80040e6:	2201      	movs	r2, #1
 80040e8:	210a      	movs	r1, #10
 80040ea:	e9c4 210c 	strd	r2, r1, [r4, #48]	; 0x30
 80040ee:	62e3      	str	r3, [r4, #44]	; 0x2c
 80040f0:	f884 2038 	strb.w	r2, [r4, #56]	; 0x38
 80040f4:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 80040f6:	4620      	mov	r0, r4
 80040f8:	bd10      	pop	{r4, pc}
 80040fa:	bf00      	nop
 80040fc:	08023a28 	.word	0x08023a28

08004100 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8004100:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 8004102:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8004104:	4e12      	ldr	r6, [pc, #72]	; (8004150 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 8004106:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8004108:	4b12      	ldr	r3, [pc, #72]	; (8004154 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 800410a:	6003      	str	r3, [r0, #0]
 800410c:	6833      	ldr	r3, [r6, #0]
 800410e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
    AbstractPainterRGB565()
 8004112:	4605      	mov	r5, r0
 8004114:	b10a      	cbz	r2, 800411a <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 8004116:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8004118:	b900      	cbnz	r0, 800411c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 800411a:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 800411c:	6803      	ldr	r3, [r0, #0]
 800411e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004120:	4798      	blx	r3
        return auxiliaryLCD;
 8004122:	6833      	ldr	r3, [r6, #0]
 8004124:	fab0 f480 	clz	r4, r0
 8004128:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800412a:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 800412c:	b130      	cbz	r0, 800413c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 800412e:	6803      	ldr	r3, [r0, #0]
 8004130:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004132:	4798      	blx	r3
 8004134:	2800      	cmp	r0, #0
 8004136:	bf08      	it	eq
 8004138:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 800413c:	b92c      	cbnz	r4, 800414a <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 800413e:	4b06      	ldr	r3, [pc, #24]	; (8004158 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8004140:	4a06      	ldr	r2, [pc, #24]	; (800415c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8004142:	4807      	ldr	r0, [pc, #28]	; (8004160 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8004144:	212c      	movs	r1, #44	; 0x2c
 8004146:	f01c fa69 	bl	802061c <__assert_func>
    }
 800414a:	4628      	mov	r0, r5
 800414c:	bd70      	pop	{r4, r5, r6, pc}
 800414e:	bf00      	nop
 8004150:	20015488 	.word	0x20015488
 8004154:	08022ddc 	.word	0x08022ddc
 8004158:	08022b6a 	.word	0x08022b6a
 800415c:	08022bc8 	.word	0x08022bc8
 8004160:	08022c01 	.word	0x08022c01

08004164 <_ZN8touchgfx15GraphLabelsBaseC1Ev>:
 * @see GraphLabelsX, GraphLabelsY
 */
class GraphLabelsBase : public AbstractGraphDecoration
{
public:
    GraphLabelsBase()
 8004164:	b510      	push	{r4, lr}
 8004166:	4604      	mov	r4, r0
        : CanvasWidget()
 8004168:	f007 fdc2 	bl	800bcf0 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : AbstractGraphDecoration(),
          dataScale(1), labelInterval(0), labelTypedText(TYPED_TEXT_INVALID), labelRotation(TEXT_ROTATE_0), labelDecimals(0), labelDecimalPoint('.'), majorLabel(0)
 800416c:	4a0a      	ldr	r2, [pc, #40]	; (8004198 <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x34>)
 800416e:	6022      	str	r2, [r4, #0]
 8004170:	2300      	movs	r3, #0
 8004172:	2201      	movs	r2, #1
 8004174:	e9c4 230c 	strd	r2, r3, [r4, #48]	; 0x30
 8004178:	4a08      	ldr	r2, [pc, #32]	; (800419c <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x38>)
 800417a:	63a2      	str	r2, [r4, #56]	; 0x38
 800417c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8004180:	87a2      	strh	r2, [r4, #60]	; 0x3c
 8004182:	222e      	movs	r2, #46	; 0x2e
 8004184:	62e3      	str	r3, [r4, #44]	; 0x2c
 8004186:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800418a:	f8a4 3042 	strh.w	r3, [r4, #66]	; 0x42
 800418e:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 8004192:	64a3      	str	r3, [r4, #72]	; 0x48
    {
    }
 8004194:	4620      	mov	r0, r4
 8004196:	bd10      	pop	{r4, pc}
 8004198:	08023c20 	.word	0x08023c20
 800419c:	08021f98 	.word	0x08021f98

080041a0 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 80041a0:	b510      	push	{r4, lr}
 80041a2:	4604      	mov	r4, r0
        : TextArea()
 80041a4:	f7fe fe6e 	bl	8002e84 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80041a8:	4b02      	ldr	r3, [pc, #8]	; (80041b4 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x14>)
 80041aa:	6023      	str	r3, [r4, #0]
 80041ac:	2300      	movs	r3, #0
 80041ae:	64a3      	str	r3, [r4, #72]	; 0x48
    }
 80041b0:	4620      	mov	r0, r4
 80041b2:	bd10      	pop	{r4, pc}
 80041b4:	08022810 	.word	0x08022810

080041b8 <_ZN19ScreenGraphViewBaseC1Ev>:
ScreenGraphViewBase::ScreenGraphViewBase() :
 80041b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80041bc:	ed2d 8b10 	vpush	{d8-d15}
 80041c0:	4604      	mov	r4, r0
 80041c2:	b095      	sub	sp, #84	; 0x54
 80041c4:	f00e f95c 	bl	8012480 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &ScreenGraphViewBase::buttonCallbackHandler)
 80041c8:	4622      	mov	r2, r4
 80041ca:	2600      	movs	r6, #0
 80041cc:	4be9      	ldr	r3, [pc, #932]	; (8004574 <_ZN19ScreenGraphViewBaseC1Ev+0x3bc>)
 80041ce:	63e6      	str	r6, [r4, #60]	; 0x3c
 80041d0:	f842 3b40 	str.w	r3, [r2], #64
 80041d4:	4610      	mov	r0, r2
 80041d6:	ee0b 2a10 	vmov	s22, r2
 80041da:	f7fe fe25 	bl	8002e28 <_ZN8touchgfx3BoxC1Ev>
 80041de:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 80041e2:	ee09 3a10 	vmov	s18, r3
 80041e6:	f64f 79ff 	movw	r9, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 80041ea:	2226      	movs	r2, #38	; 0x26
 80041ec:	4631      	mov	r1, r6
 80041ee:	4618      	mov	r0, r3
 80041f0:	f8ad 9048 	strh.w	r9, [sp, #72]	; 0x48
 80041f4:	f01c fb98 	bl	8020928 <memset>
 80041f8:	ee19 0a10 	vmov	r0, s18
 80041fc:	f7fe fe02 	bl	8002e04 <_ZN8touchgfx6WidgetC1Ev>
 8004200:	4bdd      	ldr	r3, [pc, #884]	; (8004578 <_ZN19ScreenGraphViewBaseC1Ev+0x3c0>)
 8004202:	66e3      	str	r3, [r4, #108]	; 0x6c
 8004204:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8004208:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800420c:	a912      	add	r1, sp, #72	; 0x48
 800420e:	ee19 0a10 	vmov	r0, s18
        : Widget(), bitmap(bmp), alpha(255)
 8004212:	f884 9094 	strb.w	r9, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8004216:	f00a f983 	bl	800e520 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800421a:	f104 0398 	add.w	r3, r4, #152	; 0x98
        : Box(), borderColor(0), borderSize(0)
 800421e:	4618      	mov	r0, r3
 8004220:	ee0c 3a90 	vmov	s25, r3
 8004224:	f7fe fe00 	bl	8002e28 <_ZN8touchgfx3BoxC1Ev>
 8004228:	4bd4      	ldr	r3, [pc, #848]	; (800457c <_ZN19ScreenGraphViewBaseC1Ev+0x3c4>)
 800422a:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 800422e:	f104 03cc 	add.w	r3, r4, #204	; 0xcc
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 8004232:	4618      	mov	r0, r3
 8004234:	f8c4 60c4 	str.w	r6, [r4, #196]	; 0xc4
 8004238:	f8a4 60c8 	strh.w	r6, [r4, #200]	; 0xc8
 800423c:	f504 7780 	add.w	r7, r4, #256	; 0x100
 8004240:	ee0b 3a90 	vmov	s23, r3
 8004244:	f7ff feec 	bl	8004020 <_ZN8touchgfx14AbstractButtonC1Ev>
 8004248:	4bcd      	ldr	r3, [pc, #820]	; (8004580 <_ZN19ScreenGraphViewBaseC1Ev+0x3c8>)
 800424a:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
 800424e:	f8a4 90fa 	strh.w	r9, [r4, #250]	; 0xfa
 8004252:	f8a4 90fc 	strh.w	r9, [r4, #252]	; 0xfc
 8004256:	f884 90fe 	strb.w	r9, [r4, #254]	; 0xfe
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 800425a:	f44f 7116 	mov.w	r1, #600	; 0x258
 800425e:	4638      	mov	r0, r7
 8004260:	f008 f8fa 	bl	800c458 <_ZN8touchgfx17AbstractDataGraphC1Es>
 8004264:	2301      	movs	r3, #1
 8004266:	4dc7      	ldr	r5, [pc, #796]	; (8004584 <_ZN19ScreenGraphViewBaseC1Ev+0x3cc>)
 8004268:	f8c4 5100 	str.w	r5, [r4, #256]	; 0x100
 800426c:	e9c4 368f 	strd	r3, r6, [r4, #572]	; 0x23c
{
public:
    GraphScroll()
        : GraphScrollData(CAPACITY, y)
 8004270:	f504 7314 	add.w	r3, r4, #592	; 0x250
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8004274:	4631      	mov	r1, r6
 8004276:	f240 2257 	movw	r2, #599	; 0x257
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 800427a:	e9c4 3691 	strd	r3, r6, [r4, #580]	; 0x244
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 800427e:	4638      	mov	r0, r7
 8004280:	f7ff fa1c 	bl	80036bc <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
 8004284:	4bc0      	ldr	r3, [pc, #768]	; (8004588 <_ZN19ScreenGraphViewBaseC1Ev+0x3d0>)
 8004286:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 800428a:	f504 633b 	add.w	r3, r4, #2992	; 0xbb0
 800428e:	4618      	mov	r0, r3
        : DynamicDataGraph(capacity, values), current(0)
 8004290:	f8a4 624c 	strh.w	r6, [r4, #588]	; 0x24c
 8004294:	ee0e 3a10 	vmov	s28, r3
 8004298:	f007 fd2a 	bl	800bcf0 <_ZN8touchgfx12CanvasWidgetC1Ev>
 */
class GraphElementLine : public AbstractGraphElement
{
public:
    GraphElementLine()
        : lineWidth(2)
 800429c:	f04f 0202 	mov.w	r2, #2
 80042a0:	4bba      	ldr	r3, [pc, #744]	; (800458c <_ZN19ScreenGraphViewBaseC1Ev+0x3d4>)
 80042a2:	f884 2bdc 	strb.w	r2, [r4, #3036]	; 0xbdc
 80042a6:	f504 623e 	add.w	r2, r4, #3040	; 0xbe0
 80042aa:	f8c4 3bb0 	str.w	r3, [r4, #2992]	; 0xbb0
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80042ae:	4610      	mov	r0, r2
 80042b0:	9208      	str	r2, [sp, #32]
 80042b2:	f7ff ff25 	bl	8004100 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80042b6:	4bb6      	ldr	r3, [pc, #728]	; (8004590 <_ZN19ScreenGraphViewBaseC1Ev+0x3d8>)
 80042b8:	f8c4 3be0 	str.w	r3, [r4, #3040]	; 0xbe0
 80042bc:	f103 0224 	add.w	r2, r3, #36	; 0x24
 80042c0:	f604 31f4 	addw	r1, r4, #3060	; 0xbf4
 80042c4:	f8c4 2be8 	str.w	r2, [r4, #3048]	; 0xbe8
class GraphElementGridX : public GraphElementGridBase
 80042c8:	4608      	mov	r0, r1
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 80042ca:	f8c4 6bec 	str.w	r6, [r4, #3052]	; 0xbec
 80042ce:	f8df b2dc 	ldr.w	fp, [pc, #732]	; 80045ac <_ZN19ScreenGraphViewBaseC1Ev+0x3f4>
class GraphElementGridY : public GraphElementGridBase
 80042d2:	f8df a2dc 	ldr.w	sl, [pc, #732]	; 80045b0 <_ZN19ScreenGraphViewBaseC1Ev+0x3f8>
 80042d6:	ee0e 1a90 	vmov	s29, r1
class GraphElementGridX : public GraphElementGridBase
 80042da:	f7ff fefd 	bl	80040d8 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 80042de:	f604 4134 	addw	r1, r4, #3124	; 0xc34
 80042e2:	f8c4 bbf4 	str.w	fp, [r4, #3060]	; 0xbf4
class GraphElementGridY : public GraphElementGridBase
 80042e6:	4608      	mov	r0, r1
 80042e8:	ee0f 1a10 	vmov	s30, r1
 80042ec:	f7ff fef4 	bl	80040d8 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 80042f0:	f604 4174 	addw	r1, r4, #3188	; 0xc74
 80042f4:	f8c4 ac34 	str.w	sl, [r4, #3124]	; 0xc34
class GraphElementGridX : public GraphElementGridBase
 80042f8:	4608      	mov	r0, r1
 80042fa:	ee0d 1a10 	vmov	s26, r1
 80042fe:	f7ff feeb 	bl	80040d8 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8004302:	f604 41b4 	addw	r1, r4, #3252	; 0xcb4
 8004306:	f8c4 bc74 	str.w	fp, [r4, #3188]	; 0xc74
class GraphElementGridY : public GraphElementGridBase
 800430a:	4608      	mov	r0, r1
 800430c:	ee0d 1a90 	vmov	s27, r1
 8004310:	f7ff fee2 	bl	80040d8 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8004314:	f604 41f4 	addw	r1, r4, #3316	; 0xcf4
 8004318:	f8c4 acb4 	str.w	sl, [r4, #3252]	; 0xcb4

/**
 * GraphLabelsX will draw labels along the X axis at given intervals. By combining two
 * GraphLabelsX it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsX : public GraphLabelsBase
 800431c:	4608      	mov	r0, r1
 800431e:	ee0f 1a90 	vmov	s31, r1
 8004322:	f7ff ff1f 	bl	8004164 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 8004326:	4a9b      	ldr	r2, [pc, #620]	; (8004594 <_ZN19ScreenGraphViewBaseC1Ev+0x3dc>)
 8004328:	f8c4 2cf4 	str.w	r2, [r4, #3316]	; 0xcf4
 800432c:	f504 6154 	add.w	r1, r4, #3392	; 0xd40

/**
 * GraphLabelsY will draw labels along the Y axis at given intervals. By combining two
 * GraphLabelsY it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsY : public GraphLabelsBase
 8004330:	4608      	mov	r0, r1
 8004332:	f604 588c 	addw	r8, r4, #3468	; 0xd8c
 8004336:	9109      	str	r1, [sp, #36]	; 0x24
 8004338:	f7ff ff14 	bl	8004164 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 800433c:	4996      	ldr	r1, [pc, #600]	; (8004598 <_ZN19ScreenGraphViewBaseC1Ev+0x3e0>)
 800433e:	f8c4 1d40 	str.w	r1, [r4, #3392]	; 0xd40
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8004342:	4640      	mov	r0, r8
 8004344:	213c      	movs	r1, #60	; 0x3c
 8004346:	f008 f887 	bl	800c458 <_ZN8touchgfx17AbstractDataGraphC1Es>
 800434a:	2001      	movs	r0, #1
        : GraphScrollData(CAPACITY, y)
 800434c:	f604 62dc 	addw	r2, r4, #3804	; 0xedc
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8004350:	4631      	mov	r1, r6
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8004352:	f8c4 5d8c 	str.w	r5, [r4, #3468]	; 0xd8c
 8004356:	f8c4 0ec8 	str.w	r0, [r4, #3784]	; 0xec8
 800435a:	f8c4 2ed0 	str.w	r2, [r4, #3792]	; 0xed0
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 800435e:	4640      	mov	r0, r8
 8004360:	223b      	movs	r2, #59	; 0x3b
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8004362:	f8c4 6ecc 	str.w	r6, [r4, #3788]	; 0xecc
 8004366:	f8c4 6ed4 	str.w	r6, [r4, #3796]	; 0xed4
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 800436a:	f7ff f9a7 	bl	80036bc <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
 800436e:	4a8b      	ldr	r2, [pc, #556]	; (800459c <_ZN19ScreenGraphViewBaseC1Ev+0x3e4>)
 8004370:	f8c4 2d8c 	str.w	r2, [r4, #3468]	; 0xd8c
 8004374:	f604 70cc 	addw	r0, r4, #4044	; 0xfcc
        : DynamicDataGraph(capacity, values), current(0)
 8004378:	f8a4 6ed8 	strh.w	r6, [r4, #3800]	; 0xed8
 800437c:	900a      	str	r0, [sp, #40]	; 0x28
        : CanvasWidget()
 800437e:	f007 fcb7 	bl	800bcf0 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : lineWidth(2)
 8004382:	4b82      	ldr	r3, [pc, #520]	; (800458c <_ZN19ScreenGraphViewBaseC1Ev+0x3d4>)
 8004384:	f8c4 3fcc 	str.w	r3, [r4, #4044]	; 0xfcc
 8004388:	f04f 0302 	mov.w	r3, #2
 800438c:	f884 3ff8 	strb.w	r3, [r4, #4088]	; 0xff8
 8004390:	f604 73fc 	addw	r3, r4, #4092	; 0xffc
 8004394:	4618      	mov	r0, r3
 8004396:	f504 5580 	add.w	r5, r4, #4096	; 0x1000
 800439a:	930b      	str	r3, [sp, #44]	; 0x2c
 800439c:	f7ff feb0 	bl	8004100 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80043a0:	4b7b      	ldr	r3, [pc, #492]	; (8004590 <_ZN19ScreenGraphViewBaseC1Ev+0x3d8>)
 80043a2:	60ae      	str	r6, [r5, #8]
 80043a4:	f103 0224 	add.w	r2, r3, #36	; 0x24
 80043a8:	f8c4 3ffc 	str.w	r3, [r4, #4092]	; 0xffc
 80043ac:	462b      	mov	r3, r5
 80043ae:	3310      	adds	r3, #16
 80043b0:	606a      	str	r2, [r5, #4]
class GraphElementGridX : public GraphElementGridBase
 80043b2:	4618      	mov	r0, r3
 80043b4:	9304      	str	r3, [sp, #16]
 80043b6:	f7ff fe8f 	bl	80040d8 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 80043ba:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 80043be:	3310      	adds	r3, #16
 80043c0:	f8c5 b010 	str.w	fp, [r5, #16]
class GraphElementGridY : public GraphElementGridBase
 80043c4:	4618      	mov	r0, r3
 80043c6:	9305      	str	r3, [sp, #20]
 80043c8:	f7ff fe86 	bl	80040d8 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 80043cc:	f504 5384 	add.w	r3, r4, #4224	; 0x1080
 80043d0:	3310      	adds	r3, #16
class GraphElementGridX : public GraphElementGridBase
 80043d2:	4618      	mov	r0, r3
class GraphElementGridY : public GraphElementGridBase
 80043d4:	f8c5 a050 	str.w	sl, [r5, #80]	; 0x50
 80043d8:	9303      	str	r3, [sp, #12]
class GraphElementGridX : public GraphElementGridBase
 80043da:	f7ff fe7d 	bl	80040d8 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 80043de:	f8c5 b090 	str.w	fp, [r5, #144]	; 0x90
 80043e2:	f504 5b86 	add.w	fp, r4, #4288	; 0x10c0
 80043e6:	f10b 0b10 	add.w	fp, fp, #16
class GraphElementGridY : public GraphElementGridBase
 80043ea:	4658      	mov	r0, fp
 80043ec:	f7ff fe74 	bl	80040d8 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 80043f0:	f504 5388 	add.w	r3, r4, #4352	; 0x1100
 80043f4:	3310      	adds	r3, #16
 80043f6:	f8c5 a0d0 	str.w	sl, [r5, #208]	; 0xd0
 80043fa:	4618      	mov	r0, r3
 80043fc:	9306      	str	r3, [sp, #24]
 80043fe:	f7ff feb1 	bl	8004164 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 8004402:	f504 538a 	add.w	r3, r4, #4416	; 0x1140
 8004406:	4964      	ldr	r1, [pc, #400]	; (8004598 <_ZN19ScreenGraphViewBaseC1Ev+0x3e0>)
 8004408:	f8c5 1110 	str.w	r1, [r5, #272]	; 0x110
 800440c:	331c      	adds	r3, #28
 800440e:	4618      	mov	r0, r3
 8004410:	ee09 3a90 	vmov	s19, r3
 8004414:	f7ff fe04 	bl	8004020 <_ZN8touchgfx14AbstractButtonC1Ev>
 * A ToggleButton is a Button specialization that swaps the two bitmaps when clicked, such that
 * the previous "pressed" bitmap, now becomes the one displayed when button is not
 * pressed. This can by used to give the effect of a button that can be pressed in and
 * when it is subsequently pressed, it will pop back out.
 */
class ToggleButton : public Button
 8004418:	4b61      	ldr	r3, [pc, #388]	; (80045a0 <_ZN19ScreenGraphViewBaseC1Ev+0x3e8>)
 800441a:	f8c5 315c 	str.w	r3, [r5, #348]	; 0x15c
 800441e:	f504 538c 	add.w	r3, r4, #4480	; 0x1180
 8004422:	3314      	adds	r3, #20
 8004424:	f8a5 918a 	strh.w	r9, [r5, #394]	; 0x18a
 8004428:	f8a5 918c 	strh.w	r9, [r5, #396]	; 0x18c
 800442c:	f885 918e 	strb.w	r9, [r5, #398]	; 0x18e
 8004430:	f8a5 9190 	strh.w	r9, [r5, #400]	; 0x190
 8004434:	4618      	mov	r0, r3
 8004436:	ee08 3a10 	vmov	s16, r3
 800443a:	f7fe fd23 	bl	8002e84 <_ZN8touchgfx8TextAreaC1Ev>
 800443e:	f504 538e 	add.w	r3, r4, #4544	; 0x11c0
 8004442:	331c      	adds	r3, #28
 8004444:	4618      	mov	r0, r3
 8004446:	ee08 3a90 	vmov	s17, r3
 800444a:	f7ff fea9 	bl	80041a0 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800444e:	f504 5391 	add.w	r3, r4, #4640	; 0x1220
 8004452:	3308      	adds	r3, #8
 8004454:	4618      	mov	r0, r3
 8004456:	ee0a 3a10 	vmov	s20, r3
 800445a:	f7ff fea1 	bl	80041a0 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800445e:	f504 5393 	add.w	r3, r4, #4704	; 0x1260
 8004462:	3314      	adds	r3, #20
 8004464:	4618      	mov	r0, r3
 8004466:	ee0a 3a90 	vmov	s21, r3
 800446a:	f7ff fe99 	bl	80041a0 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800446e:	f504 5396 	add.w	r3, r4, #4800	; 0x12c0
 8004472:	4618      	mov	r0, r3
 8004474:	ee0c 3a10 	vmov	s24, r3
 8004478:	f7ff fe92 	bl	80041a0 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800447c:	4b49      	ldr	r3, [pc, #292]	; (80045a4 <_ZN19ScreenGraphViewBaseC1Ev+0x3ec>)
        color = newColor;
 800447e:	f8df a134 	ldr.w	sl, [pc, #308]	; 80045b4 <_ZN19ScreenGraphViewBaseC1Ev+0x3fc>
 8004482:	e9c5 34d2 	strd	r3, r4, [r5, #840]	; 0x348
 8004486:	4b48      	ldr	r3, [pc, #288]	; (80045a8 <_ZN19ScreenGraphViewBaseC1Ev+0x3f0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8004488:	f504 509a 	add.w	r0, r4, #4928	; 0x1340
 800448c:	e9c5 36d4 	strd	r3, r6, [r5, #848]	; 0x350
 8004490:	f44f 5196 	mov.w	r1, #4800	; 0x12c0
 8004494:	3018      	adds	r0, #24
 8004496:	f00b f831 	bl	800f4fc <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 800449a:	23f0      	movs	r3, #240	; 0xf0
 800449c:	ee1b 0a10 	vmov	r0, s22
 80044a0:	9300      	str	r3, [sp, #0]
 80044a2:	4632      	mov	r2, r6
 80044a4:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80044a8:	4631      	mov	r1, r6
 80044aa:	f7fe fc98 	bl	8002dde <_ZN8touchgfx8Drawable11setPositionEssss>
 80044ae:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
    Background.setXY(-109, -23);
 80044b2:	f06f 0216 	mvn.w	r2, #22
 80044b6:	ee19 0a10 	vmov	r0, s18
 80044ba:	66a3      	str	r3, [r4, #104]	; 0x68
 80044bc:	f06f 016c 	mvn.w	r1, #108	; 0x6c
 80044c0:	f7fe fc4e 	bl	8002d60 <_ZN8touchgfx8Drawable5setXYEss>
 80044c4:	f04f 0304 	mov.w	r3, #4
    Background.setBitmap(touchgfx::Bitmap(BITMAP_DARK_BACKGROUNDS_MAIN_BG_TEXTURE_480X272PX_ID));
 80044c8:	ee19 0a10 	vmov	r0, s18
 80044cc:	a912      	add	r1, sp, #72	; 0x48
 80044ce:	f8ad 3048 	strh.w	r3, [sp, #72]	; 0x48
 80044d2:	f00a f825 	bl	800e520 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    boxWithBorder1.setPosition(0, 0, 320, 166);
 80044d6:	23a6      	movs	r3, #166	; 0xa6
 80044d8:	ee1c 0a90 	vmov	r0, s25
 80044dc:	9300      	str	r3, [sp, #0]
 80044de:	4632      	mov	r2, r6
 80044e0:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80044e4:	4631      	mov	r1, r6
 80044e6:	f7fe fc7a 	bl	8002dde <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = colorBorder;
 80044ea:	f04f 32ff 	mov.w	r2, #4294967295
 80044ee:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80044f2:	e9c4 2330 	strd	r2, r3, [r4, #192]	; 0xc0
        borderSize = size;
 80044f6:	f04f 0301 	mov.w	r3, #1
    button1.setXY(187, 189);
 80044fa:	ee1b 0a90 	vmov	r0, s23
 80044fe:	f8a4 30c8 	strh.w	r3, [r4, #200]	; 0xc8
 8004502:	22bd      	movs	r2, #189	; 0xbd
 8004504:	21bb      	movs	r1, #187	; 0xbb
 8004506:	4699      	mov	r9, r3
 8004508:	f7fe fc2a 	bl	8002d60 <_ZN8touchgfx8Drawable5setXYEss>
 800450c:	f04f 0302 	mov.w	r3, #2
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 8004510:	ee1b 0a90 	vmov	r0, s23
 8004514:	aa12      	add	r2, sp, #72	; 0x48
 8004516:	a911      	add	r1, sp, #68	; 0x44
 8004518:	f8ad 9044 	strh.w	r9, [sp, #68]	; 0x44
 800451c:	f8ad 3048 	strh.w	r3, [sp, #72]	; 0x48
 8004520:	f009 fddb 	bl	800e0da <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    button1.setAction(buttonCallback);
 8004524:	f504 539a 	add.w	r3, r4, #4928	; 0x1340
 8004528:	3308      	adds	r3, #8
        action = &callback;
 800452a:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
    dynamicGraph2.setScale(1000);
 800452e:	4632      	mov	r2, r6
 8004530:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8004534:	4638      	mov	r0, r7
    button1.setAction(buttonCallback);
 8004536:	9307      	str	r3, [sp, #28]
    dynamicGraph2.setScale(1000);
 8004538:	f7ff fa74 	bl	8003a24 <_ZN8touchgfx16DynamicDataGraph8setScaleEib>
    dynamicGraph2.setGraphRangeX(0, 10);
 800453c:	220a      	movs	r2, #10
 800453e:	4631      	mov	r1, r6
 8004540:	4638      	mov	r0, r7
 8004542:	f7ff f8bb 	bl	80036bc <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
    dynamicGraph2.setPosition(0, 0, 320, 166);
 8004546:	23a6      	movs	r3, #166	; 0xa6
 8004548:	9300      	str	r3, [sp, #0]
 800454a:	4632      	mov	r2, r6
 800454c:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8004550:	4631      	mov	r1, r6
 8004552:	4638      	mov	r0, r7
 8004554:	f7fe fc43 	bl	8002dde <_ZN8touchgfx8Drawable11setPositionEssss>
    dynamicGraph2.setGraphAreaMargin(6, 20, 5, 15);
 8004558:	230f      	movs	r3, #15
 800455a:	9300      	str	r3, [sp, #0]
 800455c:	2214      	movs	r2, #20
 800455e:	2305      	movs	r3, #5
 8004560:	2106      	movs	r1, #6
 8004562:	4638      	mov	r0, r7
 8004564:	f007 ff2a 	bl	800c3bc <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    dynamicGraph2.setGraphAreaPadding(0, 0, 0, 0);
 8004568:	4633      	mov	r3, r6
 800456a:	4632      	mov	r2, r6
 800456c:	4631      	mov	r1, r6
 800456e:	4638      	mov	r0, r7
 8004570:	9600      	str	r6, [sp, #0]
 8004572:	e021      	b.n	80045b8 <_ZN19ScreenGraphViewBaseC1Ev+0x400>
 8004574:	0802314c 	.word	0x0802314c
 8004578:	08023f78 	.word	0x08023f78
 800457c:	08023f10 	.word	0x08023f10
 8004580:	08023e9c 	.word	0x08023e9c
 8004584:	080236d4 	.word	0x080236d4
 8004588:	08022dfc 	.word	0x08022dfc
 800458c:	080239ac 	.word	0x080239ac
 8004590:	08023624 	.word	0x08023624
 8004594:	08023ae0 	.word	0x08023ae0
 8004598:	08023b80 	.word	0x08023b80
 800459c:	08022f98 	.word	0x08022f98
 80045a0:	08023d30 	.word	0x08023d30
 80045a4:	08023134 	.word	0x08023134
 80045a8:	08003fd1 	.word	0x08003fd1
 80045ac:	08022c6c 	.word	0x08022c6c
 80045b0:	08022d24 	.word	0x08022d24
 80045b4:	ff1497c5 	.word	0xff1497c5
 80045b8:	f007 fe03 	bl	800c1c2 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
    dynamicGraph2.setGraphRangeY(1.0f, 1.5f);
 80045bc:	eef7 0a08 	vmov.f32	s1, #120	; 0x3fc00000  1.5
 80045c0:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 80045c4:	4638      	mov	r0, r7
 80045c6:	f7ff f90f 	bl	80037e8 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 80045ca:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80045ce:	f8d4 1c24 	ldr.w	r1, [r4, #3108]	; 0xc24
 80045d2:	f8d4 0c28 	ldr.w	r0, [r4, #3112]	; 0xc28
        visible = vis;
 80045d6:	f884 6125 	strb.w	r6, [r4, #293]	; 0x125
 80045da:	f007 ffa1 	bl	800c520 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        lineWidth = width;
 80045de:	f04f 0301 	mov.w	r3, #1
 80045e2:	f884 3c2c 	strb.w	r3, [r4, #3116]	; 0xc2c
        majorGrid = &major;
 80045e6:	ee1d 3a10 	vmov	r3, s26
        dataScale = scale;
 80045ea:	f44f 797a 	mov.w	r9, #1000	; 0x3e8
        majorGrid = &major;
 80045ee:	f8c4 3c30 	str.w	r3, [r4, #3120]	; 0xc30
    dynamicGraph2.addGraphElement(dynamicGraph2MinorXAxisGrid);
 80045f2:	ee1e 1a90 	vmov	r1, s29
        dataScale = scale;
 80045f6:	f8c4 9c24 	str.w	r9, [r4, #3108]	; 0xc24
        color = newColor;
 80045fa:	f8c4 ac20 	str.w	sl, [r4, #3104]	; 0xc20
        gridInterval = abs(interval);
 80045fe:	f8c4 9c28 	str.w	r9, [r4, #3112]	; 0xc28
 8004602:	4638      	mov	r0, r7
 8004604:	f007 fde8 	bl	800c1d8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004608:	464a      	mov	r2, r9
 800460a:	f8d4 1c64 	ldr.w	r1, [r4, #3172]	; 0xc64
 800460e:	f8d4 0c68 	ldr.w	r0, [r4, #3176]	; 0xc68
 8004612:	f007 ff85 	bl	800c520 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 8004616:	234b      	movs	r3, #75	; 0x4b
 8004618:	f8c4 3c68 	str.w	r3, [r4, #3176]	; 0xc68
        lineWidth = width;
 800461c:	f04f 0301 	mov.w	r3, #1
 8004620:	f884 3c6c 	strb.w	r3, [r4, #3180]	; 0xc6c
        majorGrid = &major;
 8004624:	ee1d 3a90 	vmov	r3, s27
    dynamicGraph2.addGraphElement(dynamicGraph2MinorYAxisGrid);
 8004628:	ee1f 1a10 	vmov	r1, s30
 800462c:	f8c4 3c70 	str.w	r3, [r4, #3184]	; 0xc70
        dataScale = scale;
 8004630:	f8c4 9c64 	str.w	r9, [r4, #3172]	; 0xc64
        color = newColor;
 8004634:	f8c4 ac60 	str.w	sl, [r4, #3168]	; 0xc60
 8004638:	4638      	mov	r0, r7
 800463a:	f007 fdcd 	bl	800c1d8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 800463e:	464a      	mov	r2, r9
 8004640:	f8d4 1ca4 	ldr.w	r1, [r4, #3236]	; 0xca4
 8004644:	f8d4 0ca8 	ldr.w	r0, [r4, #3240]	; 0xca8
 8004648:	f007 ff6a 	bl	800c520 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        lineWidth = width;
 800464c:	f04f 0302 	mov.w	r3, #2
 8004650:	f884 3cac 	strb.w	r3, [r4, #3244]	; 0xcac
    dynamicGraph2.addGraphElement(dynamicGraph2MajorXAxisGrid);
 8004654:	ee1d 1a10 	vmov	r1, s26
        dataScale = scale;
 8004658:	f8c4 9ca4 	str.w	r9, [r4, #3236]	; 0xca4
        color = newColor;
 800465c:	f8c4 aca0 	str.w	sl, [r4, #3232]	; 0xca0
        gridInterval = abs(interval);
 8004660:	f8c4 9ca8 	str.w	r9, [r4, #3240]	; 0xca8
 8004664:	4638      	mov	r0, r7
 8004666:	f007 fdb7 	bl	800c1d8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 800466a:	464a      	mov	r2, r9
 800466c:	f8d4 1ce4 	ldr.w	r1, [r4, #3300]	; 0xce4
 8004670:	f8d4 0ce8 	ldr.w	r0, [r4, #3304]	; 0xce8
 8004674:	f007 ff54 	bl	800c520 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        lineWidth = width;
 8004678:	f04f 0302 	mov.w	r3, #2
        gridInterval = abs(interval);
 800467c:	2296      	movs	r2, #150	; 0x96
        lineWidth = width;
 800467e:	f884 3cec 	strb.w	r3, [r4, #3308]	; 0xcec
    dynamicGraph2.addGraphElement(dynamicGraph2MajorYAxisGrid);
 8004682:	ee1d 1a90 	vmov	r1, s27
        dataScale = scale;
 8004686:	f8c4 9ce4 	str.w	r9, [r4, #3300]	; 0xce4
        color = newColor;
 800468a:	f8c4 ace0 	str.w	sl, [r4, #3296]	; 0xce0
        gridInterval = abs(interval);
 800468e:	f8c4 2ce8 	str.w	r2, [r4, #3304]	; 0xce8
 8004692:	4638      	mov	r0, r7
 8004694:	f007 fda0 	bl	800c1d8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 8004698:	464a      	mov	r2, r9
 800469a:	f8d4 1d24 	ldr.w	r1, [r4, #3364]	; 0xd24
 800469e:	f8d4 0d28 	ldr.w	r0, [r4, #3368]	; 0xd28
 80046a2:	f007 ff3d 	bl	800c520 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
class TypedText
 80046a6:	f04f 0206 	mov.w	r2, #6
    dynamicGraph2.addBottomElement(dynamicGraph2MajorXAxisLabel);
 80046aa:	ee1f 1a90 	vmov	r1, s31
        dataScale = scale;
 80046ae:	f8c4 9d24 	str.w	r9, [r4, #3364]	; 0xd24
        labelInterval = abs(interval);
 80046b2:	f8c4 9d28 	str.w	r9, [r4, #3368]	; 0xd28
 80046b6:	f8a4 2d30 	strh.w	r2, [r4, #3376]	; 0xd30
        color = newColor;
 80046ba:	f8c4 ad20 	str.w	sl, [r4, #3360]	; 0xd20
 80046be:	4638      	mov	r0, r7
 80046c0:	f007 fdae 	bl	800c220 <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 80046c4:	464a      	mov	r2, r9
 80046c6:	f8d4 1d70 	ldr.w	r1, [r4, #3440]	; 0xd70
 80046ca:	f8d4 0d74 	ldr.w	r0, [r4, #3444]	; 0xd74
 80046ce:	f007 ff27 	bl	800c520 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        labelInterval = abs(interval);
 80046d2:	2296      	movs	r2, #150	; 0x96
 80046d4:	2305      	movs	r3, #5
 80046d6:	f8c4 2d74 	str.w	r2, [r4, #3444]	; 0xd74
        labelDecimals = decimals;
 80046da:	f04f 0201 	mov.w	r2, #1
    dynamicGraph2.addLeftElement(dynamicGraph2MajorYAxisLabel);
 80046de:	9909      	ldr	r1, [sp, #36]	; 0x24
        dataScale = scale;
 80046e0:	f8c4 9d70 	str.w	r9, [r4, #3440]	; 0xd70
 80046e4:	f8a4 3d7c 	strh.w	r3, [r4, #3452]	; 0xd7c
        labelDecimals = decimals;
 80046e8:	f8a4 2d82 	strh.w	r2, [r4, #3458]	; 0xd82
 80046ec:	f8c4 ad6c 	str.w	sl, [r4, #3436]	; 0xd6c
 80046f0:	4638      	mov	r0, r7
 80046f2:	f007 fd83 	bl	800c1fc <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
        canvasPainter = &painter;
 80046f6:	9b08      	ldr	r3, [sp, #32]
 80046f8:	f8c4 3bd8 	str.w	r3, [r4, #3032]	; 0xbd8
 80046fc:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
     *
     * @see getLineWidth
     */
    FORCE_INLINE_FUNCTION void setLineWidth(uint8_t width)
    {
        lineWidth = width;
 8004700:	f04f 0302 	mov.w	r3, #2
 8004704:	f884 3bdc 	strb.w	r3, [r4, #3036]	; 0xbdc
    dynamicGraph2.addGraphElement(dynamicGraph2Line1);
 8004708:	ee1e 1a10 	vmov	r1, s28
 800470c:	f8c4 2bec 	str.w	r2, [r4, #3052]	; 0xbec
 8004710:	4638      	mov	r0, r7
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 8004712:	f8a4 6bf0 	strh.w	r6, [r4, #3056]	; 0xbf0
 8004716:	f007 fd5f 	bl	800c1d8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
    dynamicGraph1.setScale(1000);
 800471a:	4649      	mov	r1, r9
 800471c:	4632      	mov	r2, r6
 800471e:	4640      	mov	r0, r8
 8004720:	f7ff f980 	bl	8003a24 <_ZN8touchgfx16DynamicDataGraph8setScaleEib>
    dynamicGraph1.setPosition(0, 0, 320, 166);
 8004724:	22a6      	movs	r2, #166	; 0xa6
 8004726:	9200      	str	r2, [sp, #0]
 8004728:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800472c:	4632      	mov	r2, r6
 800472e:	4631      	mov	r1, r6
 8004730:	4640      	mov	r0, r8
 8004732:	f7fe fb54 	bl	8002dde <_ZN8touchgfx8Drawable11setPositionEssss>
    dynamicGraph1.setGraphAreaMargin(6, 24, 0, 15);
 8004736:	220f      	movs	r2, #15
 8004738:	9200      	str	r2, [sp, #0]
 800473a:	4633      	mov	r3, r6
 800473c:	2218      	movs	r2, #24
 800473e:	2106      	movs	r1, #6
 8004740:	4640      	mov	r0, r8
 8004742:	f007 fe3b 	bl	800c3bc <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    dynamicGraph1.setGraphAreaPadding(0, 0, 0, 0);
 8004746:	4633      	mov	r3, r6
 8004748:	4632      	mov	r2, r6
 800474a:	4631      	mov	r1, r6
 800474c:	4640      	mov	r0, r8
 800474e:	9600      	str	r6, [sp, #0]
 8004750:	f007 fd37 	bl	800c1c2 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
    dynamicGraph1.setGraphRangeY(1.0f, 1.5f);
 8004754:	eef7 0a08 	vmov.f32	s1, #120	; 0x3fc00000  1.5
 8004758:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 800475c:	4640      	mov	r0, r8
 800475e:	f7ff f843 	bl	80037e8 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004762:	464a      	mov	r2, r9
 8004764:	e9d5 1010 	ldrd	r1, r0, [r5, #64]	; 0x40
 8004768:	f007 feda 	bl	800c520 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 800476c:	f241 3388 	movw	r3, #5000	; 0x1388
        lineWidth = width;
 8004770:	f04f 0201 	mov.w	r2, #1
        gridInterval = abs(interval);
 8004774:	646b      	str	r3, [r5, #68]	; 0x44
        majorGrid = &major;
 8004776:	9b03      	ldr	r3, [sp, #12]
 8004778:	64eb      	str	r3, [r5, #76]	; 0x4c
        color = newColor;
 800477a:	e9c5 a90f 	strd	sl, r9, [r5, #60]	; 0x3c
    dynamicGraph1.addGraphElement(dynamicGraph1MinorXAxisGrid);
 800477e:	9904      	ldr	r1, [sp, #16]
        lineWidth = width;
 8004780:	f885 2048 	strb.w	r2, [r5, #72]	; 0x48
 8004784:	4640      	mov	r0, r8
 8004786:	f007 fd27 	bl	800c1d8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 800478a:	464a      	mov	r2, r9
 800478c:	e9d5 1020 	ldrd	r1, r0, [r5, #128]	; 0x80
 8004790:	f007 fec6 	bl	800c520 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 8004794:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
        lineWidth = width;
 8004798:	f04f 0201 	mov.w	r2, #1
        color = newColor;
 800479c:	e9c5 a91f 	strd	sl, r9, [r5, #124]	; 0x7c
        gridInterval = abs(interval);
 80047a0:	f8c5 3084 	str.w	r3, [r5, #132]	; 0x84
    dynamicGraph1.addGraphElement(dynamicGraph1MinorYAxisGrid);
 80047a4:	9905      	ldr	r1, [sp, #20]
        lineWidth = width;
 80047a6:	f885 2088 	strb.w	r2, [r5, #136]	; 0x88
        majorGrid = &major;
 80047aa:	f8c5 b08c 	str.w	fp, [r5, #140]	; 0x8c
 80047ae:	4640      	mov	r0, r8
 80047b0:	f007 fd12 	bl	800c1d8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 80047b4:	464a      	mov	r2, r9
 80047b6:	e9d5 1030 	ldrd	r1, r0, [r5, #192]	; 0xc0
 80047ba:	f007 feb1 	bl	800c520 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 80047be:	f242 7310 	movw	r3, #10000	; 0x2710
 80047c2:	f8c5 30c4 	str.w	r3, [r5, #196]	; 0xc4
        lineWidth = width;
 80047c6:	f04f 0302 	mov.w	r3, #2
        color = newColor;
 80047ca:	e9c5 a92f 	strd	sl, r9, [r5, #188]	; 0xbc
        lineWidth = width;
 80047ce:	f885 30c8 	strb.w	r3, [r5, #200]	; 0xc8
    dynamicGraph1.addGraphElement(dynamicGraph1MajorXAxisGrid);
 80047d2:	9903      	ldr	r1, [sp, #12]
 80047d4:	4640      	mov	r0, r8
 80047d6:	f007 fcff 	bl	800c1d8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 80047da:	464a      	mov	r2, r9
 80047dc:	e9d5 1040 	ldrd	r1, r0, [r5, #256]	; 0x100
 80047e0:	f007 fe9e 	bl	800c520 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        lineWidth = width;
 80047e4:	f04f 0302 	mov.w	r3, #2
        color = newColor;
 80047e8:	e9c5 a93f 	strd	sl, r9, [r5, #252]	; 0xfc
        lineWidth = width;
 80047ec:	f885 3108 	strb.w	r3, [r5, #264]	; 0x108
    dynamicGraph1.addGraphElement(dynamicGraph1MajorYAxisGrid);
 80047f0:	4659      	mov	r1, fp
        gridInterval = abs(interval);
 80047f2:	f8c5 9104 	str.w	r9, [r5, #260]	; 0x104
 80047f6:	4640      	mov	r0, r8
 80047f8:	f007 fcee 	bl	800c1d8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 80047fc:	464a      	mov	r2, r9
 80047fe:	e9d5 1050 	ldrd	r1, r0, [r5, #320]	; 0x140
 8004802:	f007 fe8d 	bl	800c520 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        labelInterval = abs(interval);
 8004806:	2396      	movs	r3, #150	; 0x96
 8004808:	f8c5 3144 	str.w	r3, [r5, #324]	; 0x144
 800480c:	230e      	movs	r3, #14
 800480e:	f8a5 314c 	strh.w	r3, [r5, #332]	; 0x14c
        labelDecimals = decimals;
 8004812:	f04f 0302 	mov.w	r3, #2
    dynamicGraph1.addLeftElement(dynamicGraph1MajorYAxisLabel);
 8004816:	9906      	ldr	r1, [sp, #24]
        dataScale = scale;
 8004818:	f8c5 9140 	str.w	r9, [r5, #320]	; 0x140
        labelDecimals = decimals;
 800481c:	f8a5 3152 	strh.w	r3, [r5, #338]	; 0x152
        color = newColor;
 8004820:	f8c5 a13c 	str.w	sl, [r5, #316]	; 0x13c
 8004824:	4640      	mov	r0, r8
 8004826:	f007 fce9 	bl	800c1fc <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
 800482a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800482e:	60ab      	str	r3, [r5, #8]
 8004830:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004832:	81ae      	strh	r6, [r5, #12]
 8004834:	f8c4 3ff4 	str.w	r3, [r4, #4084]	; 0xff4
        lineWidth = width;
 8004838:	f04f 0302 	mov.w	r3, #2
 800483c:	f884 3ff8 	strb.w	r3, [r4, #4088]	; 0xff8
    dynamicGraph1.addGraphElement(dynamicGraph1Line1);
 8004840:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004842:	4640      	mov	r0, r8
 8004844:	f007 fcc8 	bl	800c1d8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
 8004848:	f04f 0908 	mov.w	r9, #8
    toggleButton1.setXY(65, 211);
 800484c:	ee19 0a90 	vmov	r0, s19
 8004850:	22d3      	movs	r2, #211	; 0xd3
 8004852:	2141      	movs	r1, #65	; 0x41
 8004854:	f7fe fa84 	bl	8002d60 <_ZN8touchgfx8Drawable5setXYEss>
 8004858:	f04f 0307 	mov.w	r3, #7
{
public:
    virtual void setBitmaps(const Bitmap& bitmapReleased, const Bitmap& bitmapPressed)
    {
        originalPressed = bitmapPressed;
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 800485c:	ee19 0a90 	vmov	r0, s19
 8004860:	aa12      	add	r2, sp, #72	; 0x48
 8004862:	a911      	add	r1, sp, #68	; 0x44
        originalPressed = bitmapPressed;
 8004864:	f8a5 9190 	strh.w	r9, [r5, #400]	; 0x190
 8004868:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 800486c:	f8ad 9048 	strh.w	r9, [sp, #72]	; 0x48
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 8004870:	f009 fc33 	bl	800e0da <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8004874:	9b07      	ldr	r3, [sp, #28]
 8004876:	f8c5 3184 	str.w	r3, [r5, #388]	; 0x184
    txtShowWholeGraph.setXY(1, 219);
 800487a:	22db      	movs	r2, #219	; 0xdb
 800487c:	ee18 0a10 	vmov	r0, s16
 8004880:	2101      	movs	r1, #1
 8004882:	f7fe fa6d 	bl	8002d60 <_ZN8touchgfx8Drawable5setXYEss>
 8004886:	f10d 0a30 	add.w	sl, sp, #48	; 0x30
        color = newColor;
 800488a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 800488e:	4650      	mov	r0, sl
 8004890:	ee18 1a10 	vmov	r1, s16
        color = newColor;
 8004894:	f8c5 31c4 	str.w	r3, [r5, #452]	; 0x1c4
        linespace = space;
 8004898:	f8a5 61c8 	strh.w	r6, [r5, #456]	; 0x1c8
        boundingArea = calculateBoundingArea();
 800489c:	f009 f932 	bl	800db04 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80048a0:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 80048a4:	ee18 3a10 	vmov	r3, s16
 80048a8:	333c      	adds	r3, #60	; 0x3c
 80048aa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80048ae:	4ba0      	ldr	r3, [pc, #640]	; (8004b30 <_ZN19ScreenGraphViewBaseC1Ev+0x978>)
 80048b0:	9312      	str	r3, [sp, #72]	; 0x48
    txtShowWholeGraph.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DO01));
 80048b2:	ee18 0a10 	vmov	r0, s16
 80048b6:	230d      	movs	r3, #13
 80048b8:	a912      	add	r1, sp, #72	; 0x48
 80048ba:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
 80048be:	f009 fbb1 	bl	800e024 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtLastValue.setPosition(2, 168, 132, 15);
 80048c2:	230f      	movs	r3, #15
 80048c4:	22a8      	movs	r2, #168	; 0xa8
 80048c6:	ee18 0a90 	vmov	r0, s17
 80048ca:	9300      	str	r3, [sp, #0]
 80048cc:	2102      	movs	r1, #2
 80048ce:	2384      	movs	r3, #132	; 0x84
 80048d0:	f7fe fa85 	bl	8002dde <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 80048d4:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80048d8:	f8c5 320c 	str.w	r3, [r5, #524]	; 0x20c
        boundingArea = calculateBoundingArea();
 80048dc:	f8d5 31dc 	ldr.w	r3, [r5, #476]	; 0x1dc
        linespace = space;
 80048e0:	f8a5 6210 	strh.w	r6, [r5, #528]	; 0x210
        boundingArea = calculateBoundingArea();
 80048e4:	4650      	mov	r0, sl
 80048e6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80048ea:	ee18 1a90 	vmov	r1, s17
 80048ee:	4798      	blx	r3
 80048f0:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 80048f4:	ee18 3a90 	vmov	r3, s17
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80048f8:	f8df a254 	ldr.w	sl, [pc, #596]	; 8004b50 <_ZN19ScreenGraphViewBaseC1Ev+0x998>
 80048fc:	333c      	adds	r3, #60	; 0x3c
 80048fe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004902:	f8da 3000 	ldr.w	r3, [sl]
    Unicode::snprintf(txtLastValueBuffer, TXTLASTVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_SQ4H).getText());
 8004906:	f504 5b98 	add.w	fp, r4, #4864	; 0x1300
 800490a:	f10b 0b0c 	add.w	fp, fp, #12
 800490e:	b92b      	cbnz	r3, 800491c <_ZN19ScreenGraphViewBaseC1Ev+0x764>
 8004910:	4b88      	ldr	r3, [pc, #544]	; (8004b34 <_ZN19ScreenGraphViewBaseC1Ev+0x97c>)
 8004912:	4a89      	ldr	r2, [pc, #548]	; (8004b38 <_ZN19ScreenGraphViewBaseC1Ev+0x980>)
 8004914:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004916:	4889      	ldr	r0, [pc, #548]	; (8004b3c <_ZN19ScreenGraphViewBaseC1Ev+0x984>)
 8004918:	f01b fe80 	bl	802061c <__assert_func>
 800491c:	4b88      	ldr	r3, [pc, #544]	; (8004b40 <_ZN19ScreenGraphViewBaseC1Ev+0x988>)
 800491e:	881b      	ldrh	r3, [r3, #0]
 8004920:	2b0a      	cmp	r3, #10
 8004922:	d803      	bhi.n	800492c <_ZN19ScreenGraphViewBaseC1Ev+0x774>
 8004924:	4b87      	ldr	r3, [pc, #540]	; (8004b44 <_ZN19ScreenGraphViewBaseC1Ev+0x98c>)
 8004926:	4a84      	ldr	r2, [pc, #528]	; (8004b38 <_ZN19ScreenGraphViewBaseC1Ev+0x980>)
 8004928:	2161      	movs	r1, #97	; 0x61
 800492a:	e7f4      	b.n	8004916 <_ZN19ScreenGraphViewBaseC1Ev+0x75e>
        return texts->getText(typedTextId);
 800492c:	4b86      	ldr	r3, [pc, #536]	; (8004b48 <_ZN19ScreenGraphViewBaseC1Ev+0x990>)
 800492e:	210a      	movs	r1, #10
 8004930:	6818      	ldr	r0, [r3, #0]
 8004932:	f000 fa73 	bl	8004e1c <_ZNK8touchgfx5Texts7getTextEt>
 8004936:	4a85      	ldr	r2, [pc, #532]	; (8004b4c <_ZN19ScreenGraphViewBaseC1Ev+0x994>)
 8004938:	4603      	mov	r3, r0
 800493a:	4649      	mov	r1, r9
 800493c:	4658      	mov	r0, fp
 800493e:	f00f fa5b 	bl	8013df8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8004942:	4a7b      	ldr	r2, [pc, #492]	; (8004b30 <_ZN19ScreenGraphViewBaseC1Ev+0x978>)
        wc1 = value;
 8004944:	f8c5 b224 	str.w	fp, [r5, #548]	; 0x224
 8004948:	230c      	movs	r3, #12
    txtLastValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_POMN));
 800494a:	ee18 0a90 	vmov	r0, s17
 800494e:	a912      	add	r1, sp, #72	; 0x48
 8004950:	9212      	str	r2, [sp, #72]	; 0x48
 8004952:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
 8004956:	f009 fb65 	bl	800e024 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtMaxValue.setPosition(2, 183, 132, 15);
 800495a:	210f      	movs	r1, #15
 800495c:	9100      	str	r1, [sp, #0]
 800495e:	2384      	movs	r3, #132	; 0x84
 8004960:	2102      	movs	r1, #2
 8004962:	ee1a 0a10 	vmov	r0, s20
 8004966:	22b7      	movs	r2, #183	; 0xb7
 8004968:	f7fe fa39 	bl	8002dde <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 800496c:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004970:	f8da 3000 	ldr.w	r3, [sl]
 8004974:	f8c5 1258 	str.w	r1, [r5, #600]	; 0x258
    Unicode::snprintf(txtMaxValueBuffer, TXTMAXVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_JAK9).getText());
 8004978:	f504 5b98 	add.w	fp, r4, #4864	; 0x1300
        boundingArea = calculateBoundingArea();
 800497c:	f04f 31ff 	mov.w	r1, #4294967295
 8004980:	e9c5 169a 	strd	r1, r6, [r5, #616]	; 0x268
        linespace = space;
 8004984:	f8a5 625c 	strh.w	r6, [r5, #604]	; 0x25c
        boundingArea = calculateBoundingArea();
 8004988:	f8c5 6264 	str.w	r6, [r5, #612]	; 0x264
 800498c:	f10b 0b1c 	add.w	fp, fp, #28
 8004990:	2b00      	cmp	r3, #0
 8004992:	d0bd      	beq.n	8004910 <_ZN19ScreenGraphViewBaseC1Ev+0x758>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004994:	496a      	ldr	r1, [pc, #424]	; (8004b40 <_ZN19ScreenGraphViewBaseC1Ev+0x988>)
 8004996:	880b      	ldrh	r3, [r1, #0]
 8004998:	2b09      	cmp	r3, #9
 800499a:	d9c3      	bls.n	8004924 <_ZN19ScreenGraphViewBaseC1Ev+0x76c>
        return texts->getText(typedTextId);
 800499c:	4b6a      	ldr	r3, [pc, #424]	; (8004b48 <_ZN19ScreenGraphViewBaseC1Ev+0x990>)
 800499e:	2109      	movs	r1, #9
 80049a0:	6818      	ldr	r0, [r3, #0]
 80049a2:	f000 fa3b 	bl	8004e1c <_ZNK8touchgfx5Texts7getTextEt>
 80049a6:	4a69      	ldr	r2, [pc, #420]	; (8004b4c <_ZN19ScreenGraphViewBaseC1Ev+0x994>)
 80049a8:	4603      	mov	r3, r0
 80049aa:	4649      	mov	r1, r9
 80049ac:	4658      	mov	r0, fp
 80049ae:	f00f fa23 	bl	8013df8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtMaxValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5RGF));
 80049b2:	a812      	add	r0, sp, #72	; 0x48
        : typedTextId(id)
 80049b4:	4a5e      	ldr	r2, [pc, #376]	; (8004b30 <_ZN19ScreenGraphViewBaseC1Ev+0x978>)
 80049b6:	f8c5 b270 	str.w	fp, [r5, #624]	; 0x270
 80049ba:	230b      	movs	r3, #11
 80049bc:	4601      	mov	r1, r0
 80049be:	ee1a 0a10 	vmov	r0, s20
 80049c2:	9212      	str	r2, [sp, #72]	; 0x48
 80049c4:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
 80049c8:	f009 fb2c 	bl	800e024 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textChargingTme.setPosition(2, 198, 132, 15);
 80049cc:	200f      	movs	r0, #15
 80049ce:	9000      	str	r0, [sp, #0]
 80049d0:	2384      	movs	r3, #132	; 0x84
 80049d2:	ee1a 0a90 	vmov	r0, s21
 80049d6:	22c6      	movs	r2, #198	; 0xc6
 80049d8:	2102      	movs	r1, #2
 80049da:	f7fe fa00 	bl	8002dde <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 80049de:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80049e2:	f8da 3000 	ldr.w	r3, [sl]
 80049e6:	f8c5 02a4 	str.w	r0, [r5, #676]	; 0x2a4
    Unicode::snprintf(textChargingTmeBuffer, TEXTCHARGINGTME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_E1C6).getText());
 80049ea:	f504 5b99 	add.w	fp, r4, #4896	; 0x1320
        boundingArea = calculateBoundingArea();
 80049ee:	f04f 30ff 	mov.w	r0, #4294967295
 80049f2:	e9c5 06ad 	strd	r0, r6, [r5, #692]	; 0x2b4
        linespace = space;
 80049f6:	f8a5 62a8 	strh.w	r6, [r5, #680]	; 0x2a8
        boundingArea = calculateBoundingArea();
 80049fa:	f8c5 62b0 	str.w	r6, [r5, #688]	; 0x2b0
 80049fe:	f10b 0b0c 	add.w	fp, fp, #12
 8004a02:	2b00      	cmp	r3, #0
 8004a04:	d084      	beq.n	8004910 <_ZN19ScreenGraphViewBaseC1Ev+0x758>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004a06:	494e      	ldr	r1, [pc, #312]	; (8004b40 <_ZN19ScreenGraphViewBaseC1Ev+0x988>)
 8004a08:	880b      	ldrh	r3, [r1, #0]
 8004a0a:	2b07      	cmp	r3, #7
 8004a0c:	d98a      	bls.n	8004924 <_ZN19ScreenGraphViewBaseC1Ev+0x76c>
        return texts->getText(typedTextId);
 8004a0e:	4b4e      	ldr	r3, [pc, #312]	; (8004b48 <_ZN19ScreenGraphViewBaseC1Ev+0x990>)
 8004a10:	2107      	movs	r1, #7
 8004a12:	6818      	ldr	r0, [r3, #0]
 8004a14:	f000 fa02 	bl	8004e1c <_ZNK8touchgfx5Texts7getTextEt>
 8004a18:	4a4c      	ldr	r2, [pc, #304]	; (8004b4c <_ZN19ScreenGraphViewBaseC1Ev+0x994>)
 8004a1a:	4603      	mov	r3, r0
 8004a1c:	210a      	movs	r1, #10
 8004a1e:	4658      	mov	r0, fp
 8004a20:	f00f f9ea 	bl	8013df8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textChargingTme.setTypedText(touchgfx::TypedText(T___SINGLEUSE_U9Q3));
 8004a24:	a812      	add	r0, sp, #72	; 0x48
        : typedTextId(id)
 8004a26:	4a42      	ldr	r2, [pc, #264]	; (8004b30 <_ZN19ScreenGraphViewBaseC1Ev+0x978>)
 8004a28:	f8c5 b2bc 	str.w	fp, [r5, #700]	; 0x2bc
 8004a2c:	4601      	mov	r1, r0
 8004a2e:	ee1a 0a90 	vmov	r0, s21
 8004a32:	9212      	str	r2, [sp, #72]	; 0x48
 8004a34:	f8ad 904c 	strh.w	r9, [sp, #76]	; 0x4c
 8004a38:	f009 faf4 	bl	800e024 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textChargingCurrent.setPosition(160, 168, 153, 15);
 8004a3c:	200f      	movs	r0, #15
 8004a3e:	9000      	str	r0, [sp, #0]
 8004a40:	2399      	movs	r3, #153	; 0x99
 8004a42:	ee1c 0a10 	vmov	r0, s24
 8004a46:	22a8      	movs	r2, #168	; 0xa8
 8004a48:	21a0      	movs	r1, #160	; 0xa0
 8004a4a:	f7fe f9c8 	bl	8002dde <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8004a4e:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004a52:	f8da 3000 	ldr.w	r3, [sl]
 8004a56:	f8c5 02f0 	str.w	r0, [r5, #752]	; 0x2f0
        boundingArea = calculateBoundingArea();
 8004a5a:	f04f 30ff 	mov.w	r0, #4294967295
 8004a5e:	e9c5 06c0 	strd	r0, r6, [r5, #768]	; 0x300
        linespace = space;
 8004a62:	f8a5 62f4 	strh.w	r6, [r5, #756]	; 0x2f4
        boundingArea = calculateBoundingArea();
 8004a66:	f8c5 62fc 	str.w	r6, [r5, #764]	; 0x2fc
    Unicode::snprintf(textChargingCurrentBuffer, TEXTCHARGINGCURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_G6V4).getText());
 8004a6a:	f504 599a 	add.w	r9, r4, #4928	; 0x1340
 8004a6e:	2b00      	cmp	r3, #0
 8004a70:	f43f af4e 	beq.w	8004910 <_ZN19ScreenGraphViewBaseC1Ev+0x758>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004a74:	4932      	ldr	r1, [pc, #200]	; (8004b40 <_ZN19ScreenGraphViewBaseC1Ev+0x988>)
 8004a76:	880b      	ldrh	r3, [r1, #0]
 8004a78:	2b00      	cmp	r3, #0
 8004a7a:	f43f af53 	beq.w	8004924 <_ZN19ScreenGraphViewBaseC1Ev+0x76c>
        return texts->getText(typedTextId);
 8004a7e:	4b32      	ldr	r3, [pc, #200]	; (8004b48 <_ZN19ScreenGraphViewBaseC1Ev+0x990>)
 8004a80:	4631      	mov	r1, r6
 8004a82:	6818      	ldr	r0, [r3, #0]
 8004a84:	f000 f9ca 	bl	8004e1c <_ZNK8touchgfx5Texts7getTextEt>
 8004a88:	4a30      	ldr	r2, [pc, #192]	; (8004b4c <_ZN19ScreenGraphViewBaseC1Ev+0x994>)
 8004a8a:	4603      	mov	r3, r0
 8004a8c:	2104      	movs	r1, #4
 8004a8e:	4648      	mov	r0, r9
 8004a90:	f00f f9b2 	bl	8013df8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8004a94:	4a26      	ldr	r2, [pc, #152]	; (8004b30 <_ZN19ScreenGraphViewBaseC1Ev+0x978>)
 8004a96:	f8c5 9308 	str.w	r9, [r5, #776]	; 0x308
 8004a9a:	f04f 0301 	mov.w	r3, #1
 8004a9e:	1d25      	adds	r5, r4, #4
    textChargingCurrent.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZLXT));
 8004aa0:	ee1c 0a10 	vmov	r0, s24
 8004aa4:	a912      	add	r1, sp, #72	; 0x48
 8004aa6:	9212      	str	r2, [sp, #72]	; 0x48
 8004aa8:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
 8004aac:	f009 faba 	bl	800e024 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004ab0:	ee1b 1a10 	vmov	r1, s22
 8004ab4:	4628      	mov	r0, r5
 8004ab6:	f005 feb1 	bl	800a81c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004aba:	ee19 1a10 	vmov	r1, s18
 8004abe:	4628      	mov	r0, r5
 8004ac0:	f005 feac 	bl	800a81c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004ac4:	ee1c 1a90 	vmov	r1, s25
 8004ac8:	4628      	mov	r0, r5
 8004aca:	f005 fea7 	bl	800a81c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004ace:	ee1b 1a90 	vmov	r1, s23
 8004ad2:	4628      	mov	r0, r5
 8004ad4:	f005 fea2 	bl	800a81c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004ad8:	4639      	mov	r1, r7
 8004ada:	4628      	mov	r0, r5
 8004adc:	f005 fe9e 	bl	800a81c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004ae0:	4641      	mov	r1, r8
 8004ae2:	4628      	mov	r0, r5
 8004ae4:	f005 fe9a 	bl	800a81c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004ae8:	ee19 1a90 	vmov	r1, s19
 8004aec:	4628      	mov	r0, r5
 8004aee:	f005 fe95 	bl	800a81c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004af2:	ee18 1a10 	vmov	r1, s16
 8004af6:	4628      	mov	r0, r5
 8004af8:	f005 fe90 	bl	800a81c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004afc:	ee18 1a90 	vmov	r1, s17
 8004b00:	4628      	mov	r0, r5
 8004b02:	f005 fe8b 	bl	800a81c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004b06:	ee1a 1a10 	vmov	r1, s20
 8004b0a:	4628      	mov	r0, r5
 8004b0c:	f005 fe86 	bl	800a81c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004b10:	ee1a 1a90 	vmov	r1, s21
 8004b14:	4628      	mov	r0, r5
 8004b16:	f005 fe81 	bl	800a81c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004b1a:	4628      	mov	r0, r5
 8004b1c:	ee1c 1a10 	vmov	r1, s24
 8004b20:	f005 fe7c 	bl	800a81c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004b24:	4620      	mov	r0, r4
 8004b26:	b015      	add	sp, #84	; 0x54
 8004b28:	ecbd 8b10 	vpop	{d8-d15}
 8004b2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004b30:	08021f98 	.word	0x08021f98
 8004b34:	08022660 	.word	0x08022660
 8004b38:	08022762 	.word	0x08022762
 8004b3c:	080226dd 	.word	0x080226dd
 8004b40:	200154e4 	.word	0x200154e4
 8004b44:	08022724 	.word	0x08022724
 8004b48:	200154ec 	.word	0x200154ec
 8004b4c:	0802279a 	.word	0x0802279a
 8004b50:	200154e0 	.word	0x200154e0

08004b54 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 40, 10, 2, 4, 1, 0, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004b54:	4770      	bx	lr
	...

08004b58 <_Z23getFont_verdana_10_4bppv>:
{
 8004b58:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 40, 10, 2, 4, 1, 0, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004b5a:	4d16      	ldr	r5, [pc, #88]	; (8004bb4 <_Z23getFont_verdana_10_4bppv+0x5c>)
 8004b5c:	782c      	ldrb	r4, [r5, #0]
 8004b5e:	f3bf 8f5b 	dmb	ish
 8004b62:	f014 0401 	ands.w	r4, r4, #1
{
 8004b66:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 40, 10, 2, 4, 1, 0, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004b68:	d120      	bne.n	8004bac <_Z23getFont_verdana_10_4bppv+0x54>
 8004b6a:	4628      	mov	r0, r5
 8004b6c:	f01b fca4 	bl	80204b8 <__cxa_guard_acquire>
 8004b70:	b1e0      	cbz	r0, 8004bac <_Z23getFont_verdana_10_4bppv+0x54>
 8004b72:	233f      	movs	r3, #63	; 0x3f
 8004b74:	9307      	str	r3, [sp, #28]
 8004b76:	4b10      	ldr	r3, [pc, #64]	; (8004bb8 <_Z23getFont_verdana_10_4bppv+0x60>)
 8004b78:	9306      	str	r3, [sp, #24]
 8004b7a:	4b10      	ldr	r3, [pc, #64]	; (8004bbc <_Z23getFont_verdana_10_4bppv+0x64>)
 8004b7c:	9305      	str	r3, [sp, #20]
 8004b7e:	2301      	movs	r3, #1
 8004b80:	e9cd 4303 	strd	r4, r3, [sp, #12]
 8004b84:	9302      	str	r3, [sp, #8]
 8004b86:	2204      	movs	r2, #4
 8004b88:	2302      	movs	r3, #2
 8004b8a:	e9cd 3200 	strd	r3, r2, [sp]
 8004b8e:	490c      	ldr	r1, [pc, #48]	; (8004bc0 <_Z23getFont_verdana_10_4bppv+0x68>)
 8004b90:	480c      	ldr	r0, [pc, #48]	; (8004bc4 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8004b92:	9408      	str	r4, [sp, #32]
 8004b94:	230a      	movs	r3, #10
 8004b96:	2228      	movs	r2, #40	; 0x28
 8004b98:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8004b9c:	f7fd ff34 	bl	8002a08 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004ba0:	4809      	ldr	r0, [pc, #36]	; (8004bc8 <_Z23getFont_verdana_10_4bppv+0x70>)
 8004ba2:	f01b fd59 	bl	8020658 <atexit>
 8004ba6:	4628      	mov	r0, r5
 8004ba8:	f01b fc92 	bl	80204d0 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8004bac:	4805      	ldr	r0, [pc, #20]	; (8004bc4 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8004bae:	b00d      	add	sp, #52	; 0x34
 8004bb0:	bd30      	pop	{r4, r5, pc}
 8004bb2:	bf00      	nop
 8004bb4:	200045c8 	.word	0x200045c8
 8004bb8:	08025a3c 	.word	0x08025a3c
 8004bbc:	08025ac0 	.word	0x08025ac0
 8004bc0:	080255b0 	.word	0x080255b0
 8004bc4:	200045cc 	.word	0x200045cc
 8004bc8:	08004b55 	.word	0x08004b55

08004bcc <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_15_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_15_4bpp();

touchgfx::GeneratedFont& getFont_verdana_15_4bpp()
{
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 38, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8004bcc:	4770      	bx	lr
	...

08004bd0 <_Z23getFont_verdana_15_4bppv>:
{
 8004bd0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 38, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8004bd2:	4d16      	ldr	r5, [pc, #88]	; (8004c2c <_Z23getFont_verdana_15_4bppv+0x5c>)
 8004bd4:	782c      	ldrb	r4, [r5, #0]
 8004bd6:	f3bf 8f5b 	dmb	ish
 8004bda:	f014 0401 	ands.w	r4, r4, #1
{
 8004bde:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 38, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8004be0:	d120      	bne.n	8004c24 <_Z23getFont_verdana_15_4bppv+0x54>
 8004be2:	4628      	mov	r0, r5
 8004be4:	f01b fc68 	bl	80204b8 <__cxa_guard_acquire>
 8004be8:	b1e0      	cbz	r0, 8004c24 <_Z23getFont_verdana_15_4bppv+0x54>
 8004bea:	233f      	movs	r3, #63	; 0x3f
 8004bec:	9307      	str	r3, [sp, #28]
 8004bee:	4b10      	ldr	r3, [pc, #64]	; (8004c30 <_Z23getFont_verdana_15_4bppv+0x60>)
 8004bf0:	9306      	str	r3, [sp, #24]
 8004bf2:	4b10      	ldr	r3, [pc, #64]	; (8004c34 <_Z23getFont_verdana_15_4bppv+0x64>)
 8004bf4:	9305      	str	r3, [sp, #20]
 8004bf6:	2301      	movs	r3, #1
 8004bf8:	e9cd 4303 	strd	r4, r3, [sp, #12]
 8004bfc:	9302      	str	r3, [sp, #8]
 8004bfe:	2204      	movs	r2, #4
 8004c00:	2303      	movs	r3, #3
 8004c02:	e9cd 3200 	strd	r3, r2, [sp]
 8004c06:	490c      	ldr	r1, [pc, #48]	; (8004c38 <_Z23getFont_verdana_15_4bppv+0x68>)
 8004c08:	480c      	ldr	r0, [pc, #48]	; (8004c3c <_Z23getFont_verdana_15_4bppv+0x6c>)
 8004c0a:	9408      	str	r4, [sp, #32]
 8004c0c:	230f      	movs	r3, #15
 8004c0e:	2226      	movs	r2, #38	; 0x26
 8004c10:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8004c14:	f7fd fef8 	bl	8002a08 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004c18:	4809      	ldr	r0, [pc, #36]	; (8004c40 <_Z23getFont_verdana_15_4bppv+0x70>)
 8004c1a:	f01b fd1d 	bl	8020658 <atexit>
 8004c1e:	4628      	mov	r0, r5
 8004c20:	f01b fc56 	bl	80204d0 <__cxa_guard_release>
    return verdana_15_4bpp;
}
 8004c24:	4805      	ldr	r0, [pc, #20]	; (8004c3c <_Z23getFont_verdana_15_4bppv+0x6c>)
 8004c26:	b00d      	add	sp, #52	; 0x34
 8004c28:	bd30      	pop	{r4, r5, pc}
 8004c2a:	bf00      	nop
 8004c2c:	200045f4 	.word	0x200045f4
 8004c30:	08025a58 	.word	0x08025a58
 8004c34:	08025ac4 	.word	0x08025ac4
 8004c38:	080257e0 	.word	0x080257e0
 8004c3c:	200045f8 	.word	0x200045f8
 8004c40:	08004bcd 	.word	0x08004bcd

08004c44 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004c44:	4770      	bx	lr
	...

08004c48 <_Z23getFont_verdana_40_4bppv>:
{
 8004c48:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004c4a:	4d15      	ldr	r5, [pc, #84]	; (8004ca0 <_Z23getFont_verdana_40_4bppv+0x58>)
 8004c4c:	782c      	ldrb	r4, [r5, #0]
 8004c4e:	f3bf 8f5b 	dmb	ish
 8004c52:	f014 0401 	ands.w	r4, r4, #1
{
 8004c56:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004c58:	d11f      	bne.n	8004c9a <_Z23getFont_verdana_40_4bppv+0x52>
 8004c5a:	4628      	mov	r0, r5
 8004c5c:	f01b fc2c 	bl	80204b8 <__cxa_guard_acquire>
 8004c60:	b1d8      	cbz	r0, 8004c9a <_Z23getFont_verdana_40_4bppv+0x52>
 8004c62:	233f      	movs	r3, #63	; 0x3f
 8004c64:	9307      	str	r3, [sp, #28]
 8004c66:	4b0f      	ldr	r3, [pc, #60]	; (8004ca4 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8004c68:	9306      	str	r3, [sp, #24]
 8004c6a:	4b0f      	ldr	r3, [pc, #60]	; (8004ca8 <_Z23getFont_verdana_40_4bppv+0x60>)
 8004c6c:	490f      	ldr	r1, [pc, #60]	; (8004cac <_Z23getFont_verdana_40_4bppv+0x64>)
 8004c6e:	4810      	ldr	r0, [pc, #64]	; (8004cb0 <_Z23getFont_verdana_40_4bppv+0x68>)
 8004c70:	9408      	str	r4, [sp, #32]
 8004c72:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8004c76:	2204      	movs	r2, #4
 8004c78:	2301      	movs	r3, #1
 8004c7a:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8004c7e:	9300      	str	r3, [sp, #0]
 8004c80:	2205      	movs	r2, #5
 8004c82:	2328      	movs	r3, #40	; 0x28
 8004c84:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8004c88:	9403      	str	r4, [sp, #12]
 8004c8a:	f7fd febd 	bl	8002a08 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004c8e:	4809      	ldr	r0, [pc, #36]	; (8004cb4 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8004c90:	f01b fce2 	bl	8020658 <atexit>
 8004c94:	4628      	mov	r0, r5
 8004c96:	f01b fc1b 	bl	80204d0 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8004c9a:	4805      	ldr	r0, [pc, #20]	; (8004cb0 <_Z23getFont_verdana_40_4bppv+0x68>)
 8004c9c:	b00d      	add	sp, #52	; 0x34
 8004c9e:	bd30      	pop	{r4, r5, pc}
 8004ca0:	20004620 	.word	0x20004620
 8004ca4:	08025aac 	.word	0x08025aac
 8004ca8:	08025ac8 	.word	0x08025ac8
 8004cac:	080259f4 	.word	0x080259f4
 8004cb0:	20004624 	.word	0x20004624
 8004cb4:	08004c45 	.word	0x08004c45

08004cb8 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8004cb8:	2000      	movs	r0, #0
 8004cba:	4770      	bx	lr

08004cbc <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8004cbc:	2000      	movs	r0, #0
 8004cbe:	4770      	bx	lr

08004cc0 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8004cc0:	b40e      	push	{r1, r2, r3}
 8004cc2:	b503      	push	{r0, r1, lr}
 8004cc4:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8004cc6:	2100      	movs	r1, #0
{
 8004cc8:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8004ccc:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8004cce:	f00c ff4b 	bl	8011b68 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8004cd2:	b002      	add	sp, #8
 8004cd4:	f85d eb04 	ldr.w	lr, [sp], #4
 8004cd8:	b003      	add	sp, #12
 8004cda:	4770      	bx	lr

08004cdc <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8004cdc:	b40c      	push	{r2, r3}
 8004cde:	b507      	push	{r0, r1, r2, lr}
 8004ce0:	ab04      	add	r3, sp, #16
 8004ce2:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8004ce6:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8004ce8:	f00c ff3e 	bl	8011b68 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8004cec:	b003      	add	sp, #12
 8004cee:	f85d eb04 	ldr.w	lr, [sp], #4
 8004cf2:	b002      	add	sp, #8
 8004cf4:	4770      	bx	lr
	...

08004cf8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8004cf8:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8004cfa:	b510      	push	{r4, lr}
 8004cfc:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8004cfe:	b373      	cbz	r3, 8004d5e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8004d00:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8004d02:	b92b      	cbnz	r3, 8004d10 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8004d04:	4b18      	ldr	r3, [pc, #96]	; (8004d68 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8004d06:	4a19      	ldr	r2, [pc, #100]	; (8004d6c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8004d08:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8004d0a:	4819      	ldr	r0, [pc, #100]	; (8004d70 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8004d0c:	f01b fc86 	bl	802061c <__assert_func>
            return buffer[pos];
 8004d10:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8004d12:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8004d16:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8004d18:	b30b      	cbz	r3, 8004d5e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8004d1a:	f00e fabe 	bl	801329a <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8004d1e:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8004d20:	2b01      	cmp	r3, #1
 8004d22:	d803      	bhi.n	8004d2c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8004d24:	4b13      	ldr	r3, [pc, #76]	; (8004d74 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8004d26:	4a14      	ldr	r2, [pc, #80]	; (8004d78 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8004d28:	21c5      	movs	r1, #197	; 0xc5
 8004d2a:	e7ee      	b.n	8004d0a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8004d2c:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8004d2e:	1c53      	adds	r3, r2, #1
 8004d30:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8004d32:	2b09      	cmp	r3, #9
 8004d34:	4619      	mov	r1, r3
 8004d36:	bf88      	it	hi
 8004d38:	f1a3 010a 	subhi.w	r1, r3, #10
 8004d3c:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8004d40:	f640 103f 	movw	r0, #2367	; 0x93f
 8004d44:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8004d46:	4281      	cmp	r1, r0
 8004d48:	d109      	bne.n	8004d5e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8004d4a:	2b0a      	cmp	r3, #10
 8004d4c:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8004d50:	bf28      	it	cs
 8004d52:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8004d54:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8004d58:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8004d5a:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8004d5c:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8004d5e:	4620      	mov	r0, r4
}
 8004d60:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8004d64:	f00e b99c 	b.w	80130a0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8004d68:	0802317c 	.word	0x0802317c
 8004d6c:	08023185 	.word	0x08023185
 8004d70:	08023230 	.word	0x08023230
 8004d74:	0802327a 	.word	0x0802327a
 8004d78:	08023288 	.word	0x08023288

08004d7c <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8004d7c:	f00e b957 	b.w	801302e <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08004d80 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8004d80:	b510      	push	{r4, lr}
 8004d82:	b086      	sub	sp, #24
 8004d84:	ac02      	add	r4, sp, #8
 8004d86:	e884 0006 	stmia.w	r4, {r1, r2}
 8004d8a:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8004d8c:	ab0a      	add	r3, sp, #40	; 0x28
 8004d8e:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8004d90:	9301      	str	r3, [sp, #4]
 8004d92:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004d94:	9300      	str	r3, [sp, #0]
 8004d96:	4621      	mov	r1, r4
 8004d98:	9b08      	ldr	r3, [sp, #32]
 8004d9a:	f00b fbea 	bl	8010572 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8004d9e:	b006      	add	sp, #24
 8004da0:	bd10      	pop	{r4, pc}
	...

08004da4 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8004da4:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8004da6:	bb18      	cbnz	r0, 8004df0 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8004da8:	4b12      	ldr	r3, [pc, #72]	; (8004df4 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8004daa:	4813      	ldr	r0, [pc, #76]	; (8004df8 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8004dac:	681b      	ldr	r3, [r3, #0]
 8004dae:	4913      	ldr	r1, [pc, #76]	; (8004dfc <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8004db0:	b1b3      	cbz	r3, 8004de0 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8004db2:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8004db4:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8004db6:	441a      	add	r2, r3
 8004db8:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8004dba:	685a      	ldr	r2, [r3, #4]
 8004dbc:	441a      	add	r2, r3
 8004dbe:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8004dc0:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8004dc2:	4b0f      	ldr	r3, [pc, #60]	; (8004e00 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8004dc4:	2200      	movs	r2, #0
 8004dc6:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8004dc8:	f000 f838 	bl	8004e3c <_ZN17TypedTextDatabase8getFontsEv>
 8004dcc:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8004dce:	f000 f833 	bl	8004e38 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8004dd2:	4b0c      	ldr	r3, [pc, #48]	; (8004e04 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8004dd4:	601c      	str	r4, [r3, #0]
        fonts = f;
 8004dd6:	4b0c      	ldr	r3, [pc, #48]	; (8004e08 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8004dd8:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8004dda:	4b0c      	ldr	r3, [pc, #48]	; (8004e0c <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8004ddc:	8018      	strh	r0, [r3, #0]
    }
}
 8004dde:	e007      	b.n	8004df0 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8004de0:	4b0b      	ldr	r3, [pc, #44]	; (8004e10 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8004de2:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8004de4:	4b0b      	ldr	r3, [pc, #44]	; (8004e14 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8004de6:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8004de8:	4b0b      	ldr	r3, [pc, #44]	; (8004e18 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8004dea:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8004dec:	2c00      	cmp	r4, #0
 8004dee:	d1e8      	bne.n	8004dc2 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8004df0:	bd38      	pop	{r3, r4, r5, pc}
 8004df2:	bf00      	nop
 8004df4:	2000464c 	.word	0x2000464c
 8004df8:	20004650 	.word	0x20004650
 8004dfc:	20004654 	.word	0x20004654
 8004e00:	20004658 	.word	0x20004658
 8004e04:	200154e0 	.word	0x200154e0
 8004e08:	200154e8 	.word	0x200154e8
 8004e0c:	200154e4 	.word	0x200154e4
 8004e10:	08025b1c 	.word	0x08025b1c
 8004e14:	08025acc 	.word	0x08025acc
 8004e18:	08025cbc 	.word	0x08025cbc

08004e1c <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8004e1c:	4b04      	ldr	r3, [pc, #16]	; (8004e30 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8004e1e:	681b      	ldr	r3, [r3, #0]
 8004e20:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8004e24:	4b03      	ldr	r3, [pc, #12]	; (8004e34 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8004e26:	681b      	ldr	r3, [r3, #0]
}
 8004e28:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8004e2c:	4770      	bx	lr
 8004e2e:	bf00      	nop
 8004e30:	20004654 	.word	0x20004654
 8004e34:	20004650 	.word	0x20004650

08004e38 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8004e38:	2014      	movs	r0, #20
 8004e3a:	4770      	bx	lr

08004e3c <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8004e3c:	4800      	ldr	r0, [pc, #0]	; (8004e40 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8004e3e:	4770      	bx	lr
 8004e40:	2000465c 	.word	0x2000465c

08004e44 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8004e44:	b510      	push	{r4, lr}
    &(getFont_verdana_15_4bpp()),
 8004e46:	f7ff fec3 	bl	8004bd0 <_Z23getFont_verdana_15_4bppv>
};
 8004e4a:	4c04      	ldr	r4, [pc, #16]	; (8004e5c <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 8004e4c:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8004e4e:	f7ff fefb 	bl	8004c48 <_Z23getFont_verdana_40_4bppv>
};
 8004e52:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 8004e54:	f7ff fe80 	bl	8004b58 <_Z23getFont_verdana_10_4bppv>
};
 8004e58:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 8004e5a:	bd10      	pop	{r4, pc}
 8004e5c:	2000465c 	.word	0x2000465c

08004e60 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8004e60:	4770      	bx	lr

08004e62 <_ZN19FrontendApplicationD0Ev>:
 8004e62:	b510      	push	{r4, lr}
 8004e64:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8004e68:	4604      	mov	r4, r0
 8004e6a:	f01b fb23 	bl	80204b4 <_ZdlPvj>
 8004e6e:	4620      	mov	r0, r4
 8004e70:	bd10      	pop	{r4, pc}

08004e72 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8004e72:	b510      	push	{r4, lr}
 8004e74:	4604      	mov	r4, r0
    {
        model.tick();
 8004e76:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 8004e7a:	f000 f813 	bl	8004ea4 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8004e7e:	4620      	mov	r0, r4
    }
 8004e80:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8004e84:	f00b beee 	b.w	8010c64 <_ZN8touchgfx11Application15handleTickEventEv>

08004e88 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8004e88:	b510      	push	{r4, lr}
 8004e8a:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8004e8c:	f7fd fbbc 	bl	8002608 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8004e90:	4b01      	ldr	r3, [pc, #4]	; (8004e98 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8004e92:	6023      	str	r3, [r4, #0]
{

}
 8004e94:	4620      	mov	r0, r4
 8004e96:	bd10      	pop	{r4, pc}
 8004e98:	08023364 	.word	0x08023364

08004e9c <_ZN5ModelC1Ev>:
extern LadowarkaStruct ladowarka;
#endif
int PradLadowania=400; //Set default charging curretn to 400mA
int licznik;
int ChargingTime=10; //Set default charging time to 10hrs
Model::Model() : modelListener(0)
 8004e9c:	2200      	movs	r2, #0
 8004e9e:	6002      	str	r2, [r0, #0]
{

}
 8004ea0:	4770      	bx	lr
	...

08004ea4 <_ZN5Model4tickEv>:

void Model::tick()
{
 8004ea4:	b570      	push	{r4, r5, r6, lr}
 8004ea6:	4604      	mov	r4, r0
//	if (licznik>1000 )licznik =0;
//
//	if (licznik%100) modelListener->UpdateBatteryVoltage();

/************* UPDATE BATT VOLTAGE ON GRAPH *********************/
modelListener->UpdateBatteryVoltage();
 8004ea8:	6800      	ldr	r0, [r0, #0]

#ifndef SIMULATOR

if(ladowarka.narysujPunktNaWykresie){
 8004eaa:	4d17      	ldr	r5, [pc, #92]	; (8004f08 <_ZN5Model4tickEv+0x64>)
modelListener->UpdateBatteryVoltage();
 8004eac:	6803      	ldr	r3, [r0, #0]
 8004eae:	689b      	ldr	r3, [r3, #8]
 8004eb0:	4798      	blx	r3
if(ladowarka.narysujPunktNaWykresie){
 8004eb2:	f8d5 3a70 	ldr.w	r3, [r5, #2672]	; 0xa70
 8004eb6:	b173      	cbz	r3, 8004ed6 <_ZN5Model4tickEv+0x32>
	if (ladowarka.CzsasLadowaniaWSec==1)	modelListener->DrawPoint(); //dodanie jednego extra punktu bo zaczynamy od 0
 8004eb8:	f8d5 3a78 	ldr.w	r3, [r5, #2680]	; 0xa78
 8004ebc:	2b01      	cmp	r3, #1
 8004ebe:	d103      	bne.n	8004ec8 <_ZN5Model4tickEv+0x24>
 8004ec0:	6820      	ldr	r0, [r4, #0]
 8004ec2:	6803      	ldr	r3, [r0, #0]
 8004ec4:	68db      	ldr	r3, [r3, #12]
 8004ec6:	4798      	blx	r3
	modelListener->DrawPoint();
 8004ec8:	6820      	ldr	r0, [r4, #0]
 8004eca:	6803      	ldr	r3, [r0, #0]
 8004ecc:	68db      	ldr	r3, [r3, #12]
 8004ece:	4798      	blx	r3
	ladowarka.narysujPunktNaWykresie=0;
 8004ed0:	2300      	movs	r3, #0
 8004ed2:	f8c5 3a70 	str.w	r3, [r5, #2672]	; 0xa70
}

if (ladowarka.narysujPunktNaWykresieMin){
 8004ed6:	f8d5 3a74 	ldr.w	r3, [r5, #2676]	; 0xa74
 8004eda:	b133      	cbz	r3, 8004eea <_ZN5Model4tickEv+0x46>
	modelListener->DrawPointMin();
 8004edc:	6820      	ldr	r0, [r4, #0]
 8004ede:	6803      	ldr	r3, [r0, #0]
 8004ee0:	691b      	ldr	r3, [r3, #16]
 8004ee2:	4798      	blx	r3
	ladowarka.narysujPunktNaWykresieMin=0;
 8004ee4:	2300      	movs	r3, #0
 8004ee6:	f8c5 3a74 	str.w	r3, [r5, #2676]	; 0xa74
#endif



/*************** Update min/max value **************************/
modelListener->DisplayLastAndMaxVlt();
 8004eea:	6820      	ldr	r0, [r4, #0]
 8004eec:	6803      	ldr	r3, [r0, #0]
 8004eee:	695b      	ldr	r3, [r3, #20]
 8004ef0:	4798      	blx	r3
/*************** Update Runningn Time value **************************/
modelListener->DisplayRunningTime();
 8004ef2:	6820      	ldr	r0, [r4, #0]
 8004ef4:	6803      	ldr	r3, [r0, #0]
 8004ef6:	699b      	ldr	r3, [r3, #24]
 8004ef8:	4798      	blx	r3
/*************** Update Charging current value **************************/
modelListener->DisplayCurrentValue();
 8004efa:	6820      	ldr	r0, [r4, #0]
 8004efc:	6803      	ldr	r3, [r0, #0]
}
 8004efe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
modelListener->DisplayCurrentValue();
 8004f02:	69db      	ldr	r3, [r3, #28]
 8004f04:	4718      	bx	r3
 8004f06:	bf00      	nop
 8004f08:	20003af0 	.word	0x20003af0

08004f0c <_ZN13ModelListener9DrawPointEv>:
    virtual void DrawPoint () {};
 8004f0c:	4770      	bx	lr

08004f0e <_ZN13ModelListener12DrawPointMinEv>:
    virtual void DrawPointMin () {};
 8004f0e:	4770      	bx	lr

08004f10 <_ZN13ModelListener20DisplayLastAndMaxVltEv>:
    virtual void DisplayLastAndMaxVlt() {} ;
 8004f10:	4770      	bx	lr

08004f12 <_ZN13ModelListener18DisplayRunningTimeEv>:
    virtual void DisplayRunningTime() {} ;
 8004f12:	4770      	bx	lr

08004f14 <_ZN13ModelListener19DisplayCurrentValueEv>:
    virtual void DisplayCurrentValue() {};
 8004f14:	4770      	bx	lr

08004f16 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 8004f16:	4770      	bx	lr

08004f18 <_ZThn4_N16Screen1PresenterD1Ev>:
 8004f18:	3804      	subs	r0, #4
 8004f1a:	4770      	bx	lr

08004f1c <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8004f1c:	4770      	bx	lr

08004f1e <_ZN16Screen1Presenter20UpdateBatteryVoltageEv>:
{

}

void Screen1Presenter:: UpdateBatteryVoltage(){
view.DisplayBatteryVoltage();
 8004f1e:	68c0      	ldr	r0, [r0, #12]
 8004f20:	6803      	ldr	r3, [r0, #0]
 8004f22:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004f24:	4718      	bx	r3

08004f26 <_ZThn4_N16Screen1Presenter20UpdateBatteryVoltageEv>:
    virtual void UpdateBatteryVoltage();
 8004f26:	f1a0 0004 	sub.w	r0, r0, #4
 8004f2a:	f7ff bff8 	b.w	8004f1e <_ZN16Screen1Presenter20UpdateBatteryVoltageEv>

08004f2e <_ZN16Screen1PresenterD0Ev>:
    virtual ~Screen1Presenter() {};
 8004f2e:	b510      	push	{r4, lr}
 8004f30:	2110      	movs	r1, #16
 8004f32:	4604      	mov	r4, r0
 8004f34:	f01b fabe 	bl	80204b4 <_ZdlPvj>
 8004f38:	4620      	mov	r0, r4
 8004f3a:	bd10      	pop	{r4, pc}

08004f3c <_ZThn4_N16Screen1PresenterD0Ev>:
 8004f3c:	f1a0 0004 	sub.w	r0, r0, #4
 8004f40:	e7f5      	b.n	8004f2e <_ZN16Screen1PresenterD0Ev>
	...

08004f44 <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 8004f44:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8004f46:	2200      	movs	r2, #0
 8004f48:	6082      	str	r2, [r0, #8]
    : view(v)
 8004f4a:	4a04      	ldr	r2, [pc, #16]	; (8004f5c <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 8004f4c:	60c1      	str	r1, [r0, #12]
 8004f4e:	f102 0408 	add.w	r4, r2, #8
 8004f52:	3224      	adds	r2, #36	; 0x24
 8004f54:	6004      	str	r4, [r0, #0]
 8004f56:	6042      	str	r2, [r0, #4]
}
 8004f58:	bd10      	pop	{r4, pc}
 8004f5a:	bf00      	nop
 8004f5c:	080233a8 	.word	0x080233a8

08004f60 <_ZN11Screen1ViewD1Ev>:
#include <gui/screen1_screen/Screen1Presenter.hpp>
class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8004f60:	4770      	bx	lr

08004f62 <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 8004f62:	4770      	bx	lr

08004f64 <_ZN11Screen1View18ButtonStartClickedEv>:
}

void Screen1View::ButtonStartClicked()
{
#ifndef SIMULATOR
 ladowarka.LoadingCurrent=PradLadowania;
 8004f64:	4b04      	ldr	r3, [pc, #16]	; (8004f78 <_ZN11Screen1View18ButtonStartClickedEv+0x14>)
 8004f66:	681a      	ldr	r2, [r3, #0]
 8004f68:	4b04      	ldr	r3, [pc, #16]	; (8004f7c <_ZN11Screen1View18ButtonStartClickedEv+0x18>)
 8004f6a:	609a      	str	r2, [r3, #8]
 ladowarka.ChargeStarted=1;
 8004f6c:	2201      	movs	r2, #1
 8004f6e:	611a      	str	r2, [r3, #16]
 ladowarka.ChargingTime=ChargingTime;
 8004f70:	4a03      	ldr	r2, [pc, #12]	; (8004f80 <_ZN11Screen1View18ButtonStartClickedEv+0x1c>)
 8004f72:	6812      	ldr	r2, [r2, #0]
 8004f74:	60da      	str	r2, [r3, #12]
#endif
}
 8004f76:	4770      	bx	lr
 8004f78:	20000018 	.word	0x20000018
 8004f7c:	20003af0 	.word	0x20003af0
 8004f80:	20000014 	.word	0x20000014

08004f84 <_ZN11Screen1View15ButtonUpClickedEv>:
	PradLadowania=PradLadowania+100;
 8004f84:	4b0b      	ldr	r3, [pc, #44]	; (8004fb4 <_ZN11Screen1View15ButtonUpClickedEv+0x30>)
 8004f86:	681a      	ldr	r2, [r3, #0]
{
 8004f88:	b510      	push	{r4, lr}
	PradLadowania=PradLadowania+100;
 8004f8a:	3264      	adds	r2, #100	; 0x64
	if (PradLadowania >400){
 8004f8c:	f5b2 7fc8 	cmp.w	r2, #400	; 0x190
	PradLadowania=400;}
 8004f90:	bfc8      	it	gt
 8004f92:	f44f 72c8 	movgt.w	r2, #400	; 0x190
 8004f96:	601a      	str	r2, [r3, #0]
{
 8004f98:	4604      	mov	r4, r0
	Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 8004f9a:	681b      	ldr	r3, [r3, #0]
 8004f9c:	4a06      	ldr	r2, [pc, #24]	; (8004fb8 <_ZN11Screen1View15ButtonUpClickedEv+0x34>)
 8004f9e:	210a      	movs	r1, #10
 8004fa0:	f500 60b8 	add.w	r0, r0, #1472	; 0x5c0
 8004fa4:	f00e ff28 	bl	8013df8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 8004fa8:	f504 7017 	add.w	r0, r4, #604	; 0x25c
}
 8004fac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtPradLadowania.invalidate();
 8004fb0:	f00c befb 	b.w	8011daa <_ZNK8touchgfx8Drawable10invalidateEv>
 8004fb4:	20000018 	.word	0x20000018
 8004fb8:	080233ec 	.word	0x080233ec

08004fbc <_ZN11Screen1View17ButtonDownClickedEv>:
	PradLadowania=PradLadowania-100;
 8004fbc:	4b0a      	ldr	r3, [pc, #40]	; (8004fe8 <_ZN11Screen1View17ButtonDownClickedEv+0x2c>)
 8004fbe:	681a      	ldr	r2, [r3, #0]
{
 8004fc0:	b510      	push	{r4, lr}
	PradLadowania=PradLadowania-100;
 8004fc2:	3a64      	subs	r2, #100	; 0x64
    if (PradLadowania <100){
 8004fc4:	2a63      	cmp	r2, #99	; 0x63
	PradLadowania=100;}
 8004fc6:	bfd8      	it	le
 8004fc8:	2264      	movle	r2, #100	; 0x64
 8004fca:	601a      	str	r2, [r3, #0]
{
 8004fcc:	4604      	mov	r4, r0
	Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 8004fce:	681b      	ldr	r3, [r3, #0]
 8004fd0:	4a06      	ldr	r2, [pc, #24]	; (8004fec <_ZN11Screen1View17ButtonDownClickedEv+0x30>)
 8004fd2:	210a      	movs	r1, #10
 8004fd4:	f500 60b8 	add.w	r0, r0, #1472	; 0x5c0
 8004fd8:	f00e ff0e 	bl	8013df8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 8004fdc:	f504 7017 	add.w	r0, r4, #604	; 0x25c
}
 8004fe0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtPradLadowania.invalidate();
 8004fe4:	f00c bee1 	b.w	8011daa <_ZNK8touchgfx8Drawable10invalidateEv>
 8004fe8:	20000018 	.word	0x20000018
 8004fec:	080233ec 	.word	0x080233ec

08004ff0 <_ZN11Screen1View19ButtonUpTimeClickedEv>:
	ChargingTime=ChargingTime+1;
 8004ff0:	4b0a      	ldr	r3, [pc, #40]	; (800501c <_ZN11Screen1View19ButtonUpTimeClickedEv+0x2c>)
 8004ff2:	681a      	ldr	r2, [r3, #0]
{
 8004ff4:	b510      	push	{r4, lr}
	ChargingTime=ChargingTime+1;
 8004ff6:	3201      	adds	r2, #1
	if (ChargingTime >10){
 8004ff8:	2a0a      	cmp	r2, #10
		ChargingTime=10;}
 8004ffa:	bfc8      	it	gt
 8004ffc:	220a      	movgt	r2, #10
 8004ffe:	601a      	str	r2, [r3, #0]
{
 8005000:	4604      	mov	r4, r0
	Unicode::snprintf(txtChargingTimeBuffer,TXTCHARGINGTIME_SIZE,"%d",ChargingTime);
 8005002:	681b      	ldr	r3, [r3, #0]
 8005004:	4a06      	ldr	r2, [pc, #24]	; (8005020 <_ZN11Screen1View19ButtonUpTimeClickedEv+0x30>)
 8005006:	2103      	movs	r1, #3
 8005008:	f500 60bd 	add.w	r0, r0, #1512	; 0x5e8
 800500c:	f00e fef4 	bl	8013df8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtChargingTime.invalidate();
 8005010:	f204 5074 	addw	r0, r4, #1396	; 0x574
}
 8005014:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtChargingTime.invalidate();
 8005018:	f00c bec7 	b.w	8011daa <_ZNK8touchgfx8Drawable10invalidateEv>
 800501c:	20000014 	.word	0x20000014
 8005020:	080233ec 	.word	0x080233ec

08005024 <_ZN11Screen1View21ButtonDownTimeClickedEv>:
	ChargingTime=ChargingTime-1;
 8005024:	4b0a      	ldr	r3, [pc, #40]	; (8005050 <_ZN11Screen1View21ButtonDownTimeClickedEv+0x2c>)
 8005026:	681a      	ldr	r2, [r3, #0]
{
 8005028:	b510      	push	{r4, lr}
	ChargingTime=ChargingTime-1;
 800502a:	3a01      	subs	r2, #1
    if (ChargingTime <1){
 800502c:	2a00      	cmp	r2, #0
    	ChargingTime=1;}
 800502e:	bfd8      	it	le
 8005030:	2201      	movle	r2, #1
 8005032:	601a      	str	r2, [r3, #0]
{
 8005034:	4604      	mov	r4, r0
	Unicode::snprintf(txtChargingTimeBuffer,TXTCHARGINGTIME_SIZE,"%d",ChargingTime);
 8005036:	681b      	ldr	r3, [r3, #0]
 8005038:	4a06      	ldr	r2, [pc, #24]	; (8005054 <_ZN11Screen1View21ButtonDownTimeClickedEv+0x30>)
 800503a:	2103      	movs	r1, #3
 800503c:	f500 60bd 	add.w	r0, r0, #1512	; 0x5e8
 8005040:	f00e feda 	bl	8013df8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtChargingTime.invalidate();
 8005044:	f204 5074 	addw	r0, r4, #1396	; 0x574
}
 8005048:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtChargingTime.invalidate();
 800504c:	f00c bead 	b.w	8011daa <_ZNK8touchgfx8Drawable10invalidateEv>
 8005050:	20000014 	.word	0x20000014
 8005054:	080233ec 	.word	0x080233ec

08005058 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 8005058:	f7fd bd4b 	b.w	8002af2 <_ZN15Screen1ViewBase11setupScreenEv>

0800505c <_ZN11Screen1View21DisplayBatteryVoltageEv>:
void Screen1View::DisplayBatteryVoltage(){
 800505c:	b513      	push	{r0, r1, r4, lr}
	Unicode::snprintfFloat(txtNapiecieBateriiBuffer,TXTNAPIECIEBATERII_SIZE,"%.3f",ladowarka.BatteryVoltage);
 800505e:	4b09      	ldr	r3, [pc, #36]	; (8005084 <_ZN11Screen1View21DisplayBatteryVoltageEv+0x28>)
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 8005060:	4a09      	ldr	r2, [pc, #36]	; (8005088 <_ZN11Screen1View21DisplayBatteryVoltageEv+0x2c>)
 8005062:	681b      	ldr	r3, [r3, #0]
 8005064:	9301      	str	r3, [sp, #4]
void Screen1View::DisplayBatteryVoltage(){
 8005066:	4604      	mov	r4, r0
 8005068:	ab01      	add	r3, sp, #4
 800506a:	210a      	movs	r1, #10
 800506c:	f200 50d4 	addw	r0, r0, #1492	; 0x5d4
 8005070:	f00f f87e 	bl	8014170 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	txtNapiecieBaterii.invalidate();
 8005074:	f504 7059 	add.w	r0, r4, #868	; 0x364
}
 8005078:	b002      	add	sp, #8
 800507a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtNapiecieBaterii.invalidate();
 800507e:	f00c be94 	b.w	8011daa <_ZNK8touchgfx8Drawable10invalidateEv>
 8005082:	bf00      	nop
 8005084:	20003af0 	.word	0x20003af0
 8005088:	080233ef 	.word	0x080233ef

0800508c <_ZN11Screen1ViewD0Ev>:
 800508c:	b510      	push	{r4, lr}
 800508e:	f44f 61c2 	mov.w	r1, #1552	; 0x610
 8005092:	4604      	mov	r4, r0
 8005094:	f01b fa0e 	bl	80204b4 <_ZdlPvj>
 8005098:	4620      	mov	r0, r4
 800509a:	bd10      	pop	{r4, pc}

0800509c <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 800509c:	b510      	push	{r4, lr}
 800509e:	4604      	mov	r4, r0
 80050a0:	f7fd ffae 	bl	8003000 <_ZN15Screen1ViewBaseC1Ev>
 80050a4:	4b07      	ldr	r3, [pc, #28]	; (80050c4 <_ZN11Screen1ViewC1Ev+0x28>)
 80050a6:	6023      	str	r3, [r4, #0]
Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 80050a8:	4b07      	ldr	r3, [pc, #28]	; (80050c8 <_ZN11Screen1ViewC1Ev+0x2c>)
 80050aa:	4a08      	ldr	r2, [pc, #32]	; (80050cc <_ZN11Screen1ViewC1Ev+0x30>)
 80050ac:	681b      	ldr	r3, [r3, #0]
 80050ae:	210a      	movs	r1, #10
 80050b0:	f504 60b8 	add.w	r0, r4, #1472	; 0x5c0
 80050b4:	f00e fea0 	bl	8013df8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 80050b8:	f504 7017 	add.w	r0, r4, #604	; 0x25c
 80050bc:	f00c fe75 	bl	8011daa <_ZNK8touchgfx8Drawable10invalidateEv>
}
 80050c0:	4620      	mov	r0, r4
 80050c2:	bd10      	pop	{r4, pc}
 80050c4:	080233fc 	.word	0x080233fc
 80050c8:	20000018 	.word	0x20000018
 80050cc:	080233ec 	.word	0x080233ec

080050d0 <_ZN13ModelListener20UpdateBatteryVoltageEv>:
    virtual void UpdateBatteryVoltage () {};
 80050d0:	4770      	bx	lr

080050d2 <_ZN20ScreenGraphPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~ScreenGraphPresenter() {};
 80050d2:	4770      	bx	lr

080050d4 <_ZThn4_N20ScreenGraphPresenterD1Ev>:
 80050d4:	3804      	subs	r0, #4
 80050d6:	4770      	bx	lr

080050d8 <_ZN20ScreenGraphPresenter10deactivateEv>:
}

void ScreenGraphPresenter::activate()
{

}
 80050d8:	4770      	bx	lr

080050da <_ZN20ScreenGraphPresenter9DrawPointEv>:
{

}
void ScreenGraphPresenter::DrawPoint()
{
	view.DrawPoint2();
 80050da:	68c0      	ldr	r0, [r0, #12]
 80050dc:	6803      	ldr	r3, [r0, #0]
 80050de:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80050e0:	4718      	bx	r3

080050e2 <_ZThn4_N20ScreenGraphPresenter9DrawPointEv>:
    virtual void DrawPoint();
 80050e2:	f1a0 0004 	sub.w	r0, r0, #4
 80050e6:	f7ff bff8 	b.w	80050da <_ZN20ScreenGraphPresenter9DrawPointEv>

080050ea <_ZN20ScreenGraphPresenter12DrawPointMinEv>:
}
void ScreenGraphPresenter::DrawPointMin()
{
	view.DrawPoint2Min();
 80050ea:	68c0      	ldr	r0, [r0, #12]
 80050ec:	6803      	ldr	r3, [r0, #0]
 80050ee:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80050f0:	4718      	bx	r3

080050f2 <_ZThn4_N20ScreenGraphPresenter12DrawPointMinEv>:
    virtual void DrawPointMin();
 80050f2:	f1a0 0004 	sub.w	r0, r0, #4
 80050f6:	f7ff bff8 	b.w	80050ea <_ZN20ScreenGraphPresenter12DrawPointMinEv>

080050fa <_ZN20ScreenGraphPresenter20DisplayLastAndMaxVltEv>:
}
void ScreenGraphPresenter::DisplayLastAndMaxVlt()
{
	view.DisplayLastAndMaxVlt2();
 80050fa:	68c0      	ldr	r0, [r0, #12]
 80050fc:	6803      	ldr	r3, [r0, #0]
 80050fe:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005100:	4718      	bx	r3

08005102 <_ZThn4_N20ScreenGraphPresenter20DisplayLastAndMaxVltEv>:
    virtual void DisplayLastAndMaxVlt();
 8005102:	f1a0 0004 	sub.w	r0, r0, #4
 8005106:	f7ff bff8 	b.w	80050fa <_ZN20ScreenGraphPresenter20DisplayLastAndMaxVltEv>

0800510a <_ZN20ScreenGraphPresenter18DisplayRunningTimeEv>:
}
void ScreenGraphPresenter::DisplayRunningTime()
{
	view.DisplayRunningTime2();
 800510a:	68c0      	ldr	r0, [r0, #12]
 800510c:	6803      	ldr	r3, [r0, #0]
 800510e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005110:	4718      	bx	r3

08005112 <_ZThn4_N20ScreenGraphPresenter18DisplayRunningTimeEv>:
    virtual void DisplayRunningTime();
 8005112:	f1a0 0004 	sub.w	r0, r0, #4
 8005116:	f7ff bff8 	b.w	800510a <_ZN20ScreenGraphPresenter18DisplayRunningTimeEv>

0800511a <_ZN20ScreenGraphPresenter19DisplayCurrentValueEv>:
}
void ScreenGraphPresenter::DisplayCurrentValue()
{
	view.DisplayCurrentValue2();
 800511a:	68c0      	ldr	r0, [r0, #12]
 800511c:	6803      	ldr	r3, [r0, #0]
 800511e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005120:	4718      	bx	r3

08005122 <_ZThn4_N20ScreenGraphPresenter19DisplayCurrentValueEv>:
    virtual void DisplayCurrentValue();
 8005122:	f1a0 0004 	sub.w	r0, r0, #4
 8005126:	f7ff bff8 	b.w	800511a <_ZN20ScreenGraphPresenter19DisplayCurrentValueEv>

0800512a <_ZN20ScreenGraphPresenterD0Ev>:
    virtual ~ScreenGraphPresenter() {};
 800512a:	b510      	push	{r4, lr}
 800512c:	2110      	movs	r1, #16
 800512e:	4604      	mov	r4, r0
 8005130:	f01b f9c0 	bl	80204b4 <_ZdlPvj>
 8005134:	4620      	mov	r0, r4
 8005136:	bd10      	pop	{r4, pc}

08005138 <_ZThn4_N20ScreenGraphPresenterD0Ev>:
 8005138:	f1a0 0004 	sub.w	r0, r0, #4
 800513c:	e7f5      	b.n	800512a <_ZN20ScreenGraphPresenterD0Ev>
	...

08005140 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView>:
ScreenGraphPresenter::ScreenGraphPresenter(ScreenGraphView& v)
 8005140:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8005142:	2200      	movs	r2, #0
 8005144:	6082      	str	r2, [r0, #8]
    : view(v)
 8005146:	4a04      	ldr	r2, [pc, #16]	; (8005158 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView+0x18>)
 8005148:	60c1      	str	r1, [r0, #12]
 800514a:	f102 0408 	add.w	r4, r2, #8
 800514e:	3234      	adds	r2, #52	; 0x34
 8005150:	6004      	str	r4, [r0, #0]
 8005152:	6042      	str	r2, [r0, #4]
}
 8005154:	bd10      	pop	{r4, pc}
 8005156:	bf00      	nop
 8005158:	08023440 	.word	0x08023440

0800515c <_ZN15ScreenGraphViewD1Ev>:

class ScreenGraphView : public ScreenGraphViewBase
{
public:
    ScreenGraphView();
    virtual ~ScreenGraphView() {}
 800515c:	4770      	bx	lr

0800515e <_ZN15ScreenGraphView14tearDownScreenEv>:
}

void ScreenGraphView::tearDownScreen()
{
    ScreenGraphViewBase::tearDownScreen();
}
 800515e:	4770      	bx	lr

08005160 <_ZN15ScreenGraphView8countMinEv>:
	Unicode::snprintf(textChargingTmeBuffer,TEXTCHARGINGTME_SIZE,"%02d:%02d:%02d\n",h,m,s);
	textChargingTme.invalidate();
#endif
}

float ScreenGraphView::countMin(){
 8005160:	b508      	push	{r3, lr}
#ifndef SIMULATOR
	float results= ladowarka.PomiaryCoSec[0]; //domyslna wartocs
 8005162:	4915      	ldr	r1, [pc, #84]	; (80051b8 <_ZN15ScreenGraphView8countMinEv+0x58>)
float ScreenGraphView::countMin(){
 8005164:	ed2d 8b02 	vpush	{d8}
	float results= ladowarka.PomiaryCoSec[0]; //domyslna wartocs
 8005168:	ed91 0a00 	vldr	s0, [r1]
	for (int i=0;i<59;i++){
 800516c:	2200      	movs	r2, #0
		if ((ladowarka.PomiaryCoSec[i] < results) && ladowarka.PomiaryCoSec[i]!=0)  results=ladowarka.PomiaryCoSec[i];
 800516e:	f6a1 1178 	subw	r1, r1, #2424	; 0x978
 8005172:	f202 235e 	addw	r3, r2, #606	; 0x25e
 8005176:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 800517a:	edd3 7a00 	vldr	s15, [r3]
 800517e:	eef4 7ac0 	vcmpe.f32	s15, s0
 8005182:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005186:	d508      	bpl.n	800519a <_ZN15ScreenGraphView8countMinEv+0x3a>
 8005188:	edd3 7a00 	vldr	s15, [r3]
 800518c:	eef5 7a40 	vcmp.f32	s15, #0.0
 8005190:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005194:	bf18      	it	ne
 8005196:	ed93 0a00 	vldrne	s0, [r3]
	for (int i=0;i<59;i++){
 800519a:	3201      	adds	r2, #1
 800519c:	2a3b      	cmp	r2, #59	; 0x3b
 800519e:	d1e8      	bne.n	8005172 <_ZN15ScreenGraphView8countMinEv+0x12>
	}

	return (floor(results*100)/100);
 80051a0:	ed9f 8a06 	vldr	s16, [pc, #24]	; 80051bc <_ZN15ScreenGraphView8countMinEv+0x5c>
  using ::floor;

#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  inline _GLIBCXX_CONSTEXPR float
  floor(float __x)
  { return __builtin_floorf(__x); }
 80051a4:	ee20 0a08 	vmul.f32	s0, s0, s16
 80051a8:	f01b f9ee 	bl	8020588 <floorf>
#else
	return 1.5;
#endif
}
 80051ac:	ee80 0a08 	vdiv.f32	s0, s0, s16
 80051b0:	ecbd 8b02 	vpop	{d8}
 80051b4:	bd08      	pop	{r3, pc}
 80051b6:	bf00      	nop
 80051b8:	20004468 	.word	0x20004468
 80051bc:	42c80000 	.word	0x42c80000

080051c0 <_ZN15ScreenGraphView8countMaxEv>:
float ScreenGraphView::countMax(){
 80051c0:	b508      	push	{r3, lr}
 80051c2:	ed2d 8b02 	vpush	{d8}
#ifndef SIMULATOR
	float results= 0; //domyslna wartocs
 80051c6:	ed9f 0a10 	vldr	s0, [pc, #64]	; 8005208 <_ZN15ScreenGraphView8countMaxEv+0x48>
	for (int i=0;i<59;i++){
		if (ladowarka.PomiaryCoSec[i] > results)  results=ladowarka.PomiaryCoSec[i];
 80051ca:	4910      	ldr	r1, [pc, #64]	; (800520c <_ZN15ScreenGraphView8countMaxEv+0x4c>)
	for (int i=0;i<59;i++){
 80051cc:	2300      	movs	r3, #0
		if (ladowarka.PomiaryCoSec[i] > results)  results=ladowarka.PomiaryCoSec[i];
 80051ce:	f203 225e 	addw	r2, r3, #606	; 0x25e
 80051d2:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 80051d6:	edd2 7a00 	vldr	s15, [r2]
 80051da:	eef4 7ac0 	vcmpe.f32	s15, s0
 80051de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
	for (int i=0;i<59;i++){
 80051e2:	f103 0301 	add.w	r3, r3, #1
		if (ladowarka.PomiaryCoSec[i] > results)  results=ladowarka.PomiaryCoSec[i];
 80051e6:	bfc8      	it	gt
 80051e8:	ed92 0a00 	vldrgt	s0, [r2]
	for (int i=0;i<59;i++){
 80051ec:	2b3b      	cmp	r3, #59	; 0x3b
 80051ee:	d1ee      	bne.n	80051ce <_ZN15ScreenGraphView8countMaxEv+0xe>
	}

	return (ceil(results*100)/100);
 80051f0:	ed9f 8a07 	vldr	s16, [pc, #28]	; 8005210 <_ZN15ScreenGraphView8countMaxEv+0x50>
  { return __builtin_ceilf(__x); }
 80051f4:	ee20 0a08 	vmul.f32	s0, s0, s16
 80051f8:	f01b f984 	bl	8020504 <ceilf>


#else
	return 1.5;
#endif
}
 80051fc:	ee80 0a08 	vdiv.f32	s0, s0, s16
 8005200:	ecbd 8b02 	vpop	{d8}
 8005204:	bd08      	pop	{r3, pc}
 8005206:	bf00      	nop
 8005208:	00000000 	.word	0x00000000
 800520c:	20003af0 	.word	0x20003af0
 8005210:	42c80000 	.word	0x42c80000

08005214 <_ZN15ScreenGraphView19DisplayRunningTime2Ev>:
	sec=ladowarka.CzsasLadowaniaWSec;
 8005214:	4b11      	ldr	r3, [pc, #68]	; (800525c <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x48>)
void ScreenGraphView::DisplayRunningTime2(){
 8005216:	b513      	push	{r0, r1, r4, lr}
	sec=ladowarka.CzsasLadowaniaWSec;
 8005218:	f8d3 2a78 	ldr.w	r2, [r3, #2680]	; 0xa78
	m = (sec -(3600*h))/60;
 800521c:	4910      	ldr	r1, [pc, #64]	; (8005260 <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x4c>)
void ScreenGraphView::DisplayRunningTime2(){
 800521e:	4604      	mov	r4, r0
	h = (sec/3600);
 8005220:	f44f 6361 	mov.w	r3, #3600	; 0xe10
	s = (sec -(3600*h)-(m*60));
 8005224:	f06f 003b 	mvn.w	r0, #59	; 0x3b
	h = (sec/3600);
 8005228:	fb92 f3f3 	sdiv	r3, r2, r3
	m = (sec -(3600*h))/60;
 800522c:	fb01 2203 	mla	r2, r1, r3, r2
 8005230:	213c      	movs	r1, #60	; 0x3c
 8005232:	fb92 f1f1 	sdiv	r1, r2, r1
	s = (sec -(3600*h)-(m*60));
 8005236:	fb00 2201 	mla	r2, r0, r1, r2
	Unicode::snprintf(textChargingTmeBuffer,TEXTCHARGINGTME_SIZE,"%02d:%02d:%02d\n",h,m,s);
 800523a:	f504 5099 	add.w	r0, r4, #4896	; 0x1320
 800523e:	e9cd 1200 	strd	r1, r2, [sp]
 8005242:	300c      	adds	r0, #12
 8005244:	4a07      	ldr	r2, [pc, #28]	; (8005264 <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x50>)
 8005246:	210a      	movs	r1, #10
 8005248:	f00e fdd6 	bl	8013df8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textChargingTme.invalidate();
 800524c:	f504 5093 	add.w	r0, r4, #4704	; 0x1260
 8005250:	3014      	adds	r0, #20
}
 8005252:	b002      	add	sp, #8
 8005254:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	textChargingTme.invalidate();
 8005258:	f00c bda7 	b.w	8011daa <_ZNK8touchgfx8Drawable10invalidateEv>
 800525c:	20003af0 	.word	0x20003af0
 8005260:	fffff1f0 	.word	0xfffff1f0
 8005264:	08023494 	.word	0x08023494

08005268 <_ZN15ScreenGraphViewD0Ev>:
 8005268:	b510      	push	{r4, lr}
 800526a:	f242 6118 	movw	r1, #9752	; 0x2618
 800526e:	4604      	mov	r4, r0
 8005270:	f01b f920 	bl	80204b4 <_ZdlPvj>
 8005274:	4620      	mov	r0, r4
 8005276:	bd10      	pop	{r4, pc}

08005278 <_ZN15ScreenGraphView11setupScreenEv>:
{
 8005278:	b510      	push	{r4, lr}
 800527a:	4604      	mov	r4, r0
    ScreenGraphViewBase::setupScreen();
 800527c:	f7fe fdf3 	bl	8003e66 <_ZN19ScreenGraphViewBase11setupScreenEv>
        setIntervalScaled(AbstractDataGraph::float2scaled(interval, dataScale));
 8005280:	f504 5280 	add.w	r2, r4, #4096	; 0x1000
        const float fs = f * (float)scale;
 8005284:	edd2 7a50 	vldr	s15, [r2, #320]	; 0x140
 8005288:	ed9f 6a91 	vldr	s12, [pc, #580]	; 80054d0 <_ZN15ScreenGraphView11setupScreenEv+0x258>
 800528c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8005290:	ee27 7a06 	vmul.f32	s14, s14, s12
        if (fs >= 0)
 8005294:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8005298:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800529c:	f2c0 809f 	blt.w	80053de <_ZN15ScreenGraphView11setupScreenEv+0x166>
            return (int)(fs + 0.5f);
 80052a0:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80052a4:	ee37 7a27 	vadd.f32	s14, s14, s15
 80052a8:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 80052ac:	ee17 3a90 	vmov	r3, s15
        const float fs = f * (float)scale;
 80052b0:	edd2 7a40 	vldr	s15, [r2, #256]	; 0x100
 80052b4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 * @return The absolute (non-negative) value of d.
 */
template <typename T>
T abs(T d)
{
    return (d < 0) ? -d : d;
 80052b8:	2b00      	cmp	r3, #0
 80052ba:	ee67 7a86 	vmul.f32	s15, s15, s12
 80052be:	bfb8      	it	lt
 80052c0:	425b      	neglt	r3, r3
        if (fs >= 0)
 80052c2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80052c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
        labelInterval = abs(interval);
 80052ca:	f8c2 3144 	str.w	r3, [r2, #324]	; 0x144
 80052ce:	f2c0 809a 	blt.w	8005406 <_ZN15ScreenGraphView11setupScreenEv+0x18e>
            return (int)(fs + 0.5f);
 80052d2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80052d6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80052da:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80052de:	ee17 3a90 	vmov	r3, s15
        const float fs = f * (float)scale;
 80052e2:	edd2 7a20 	vldr	s15, [r2, #128]	; 0x80
 80052e6:	ed9f 7a7b 	vldr	s14, [pc, #492]	; 80054d4 <_ZN15ScreenGraphView11setupScreenEv+0x25c>
 80052ea:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80052ee:	2b00      	cmp	r3, #0
 80052f0:	ee67 7a87 	vmul.f32	s15, s15, s14
 80052f4:	bfb8      	it	lt
 80052f6:	425b      	neglt	r3, r3
        if (fs >= 0)
 80052f8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80052fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
        gridInterval = abs(interval);
 8005300:	f8c2 3104 	str.w	r3, [r2, #260]	; 0x104
 8005304:	f2c0 8093 	blt.w	800542e <_ZN15ScreenGraphView11setupScreenEv+0x1b6>
            return (int)(fs + 0.5f);
 8005308:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800530c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005310:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005314:	ee17 3a90 	vmov	r3, s15
 8005318:	2b00      	cmp	r3, #0
 800531a:	bfb8      	it	lt
 800531c:	425b      	neglt	r3, r3
 800531e:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
        const float fs = f * (float)scale;
 8005322:	f8d4 3d70 	ldr.w	r3, [r4, #3440]	; 0xd70
 8005326:	ed9f 6a6c 	vldr	s12, [pc, #432]	; 80054d8 <_ZN15ScreenGraphView11setupScreenEv+0x260>
 800532a:	ee07 3a90 	vmov	s15, r3
 800532e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8005332:	ee27 7a06 	vmul.f32	s14, s14, s12
        if (fs >= 0)
 8005336:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800533a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800533e:	f2c0 808a 	blt.w	8005456 <_ZN15ScreenGraphView11setupScreenEv+0x1de>
            return (int)(fs + 0.5f);
 8005342:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8005346:	ee37 7a27 	vadd.f32	s14, s14, s15
 800534a:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 800534e:	ee17 3a90 	vmov	r3, s15
 8005352:	2b00      	cmp	r3, #0
 8005354:	bfb8      	it	lt
 8005356:	425b      	neglt	r3, r3
 8005358:	f8c4 3d74 	str.w	r3, [r4, #3444]	; 0xd74
        const float fs = f * (float)scale;
 800535c:	f8d4 3ce4 	ldr.w	r3, [r4, #3300]	; 0xce4
 8005360:	ee07 3a90 	vmov	s15, r3
 8005364:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005368:	ee67 7a86 	vmul.f32	s15, s15, s12
        if (fs >= 0)
 800536c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005370:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005374:	f2c0 8083 	blt.w	800547e <_ZN15ScreenGraphView11setupScreenEv+0x206>
            return (int)(fs + 0.5f);
 8005378:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800537c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005380:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005384:	ee17 3a90 	vmov	r3, s15
 8005388:	2b00      	cmp	r3, #0
 800538a:	bfb8      	it	lt
 800538c:	425b      	neglt	r3, r3
 800538e:	f8c4 3ce8 	str.w	r3, [r4, #3304]	; 0xce8
        const float fs = f * (float)scale;
 8005392:	f8d4 3c64 	ldr.w	r3, [r4, #3172]	; 0xc64
 8005396:	ed9f 7a51 	vldr	s14, [pc, #324]	; 80054dc <_ZN15ScreenGraphView11setupScreenEv+0x264>
 800539a:	ee07 3a90 	vmov	s15, r3
 800539e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80053a2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80053a6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80053aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80053ae:	db7a      	blt.n	80054a6 <_ZN15ScreenGraphView11setupScreenEv+0x22e>
            return (int)(fs + 0.5f);
 80053b0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80053b4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80053b8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80053bc:	ee17 3a90 	vmov	r3, s15
 80053c0:	2b00      	cmp	r3, #0
 80053c2:	bfb8      	it	lt
 80053c4:	425b      	neglt	r3, r3
     dynamicGraph1.invalidate();
 80053c6:	f604 508c 	addw	r0, r4, #3468	; 0xd8c
 80053ca:	f8c4 3c68 	str.w	r3, [r4, #3176]	; 0xc68
 80053ce:	f00c fcec 	bl	8011daa <_ZNK8touchgfx8Drawable10invalidateEv>
     dynamicGraph2.invalidate();
 80053d2:	f504 7080 	add.w	r0, r4, #256	; 0x100
}
 80053d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     dynamicGraph2.invalidate();
 80053da:	f00c bce6 	b.w	8011daa <_ZNK8touchgfx8Drawable10invalidateEv>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80053de:	eefd 6ac7 	vcvt.s32.f32	s13, s14
 80053e2:	eef8 7ae6 	vcvt.f32.s32	s15, s13
 80053e6:	ee16 3a90 	vmov	r3, s13
 80053ea:	ee37 7a67 	vsub.f32	s14, s14, s15
 80053ee:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 80053f2:	ee37 7a27 	vadd.f32	s14, s14, s15
 80053f6:	3b01      	subs	r3, #1
 80053f8:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 80053fc:	ee17 1a10 	vmov	r1, s14
 8005400:	4419      	add	r1, r3
 8005402:	460b      	mov	r3, r1
 8005404:	e754      	b.n	80052b0 <_ZN15ScreenGraphView11setupScreenEv+0x38>
 8005406:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800540a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800540e:	ee17 3a10 	vmov	r3, s14
 8005412:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005416:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800541a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800541e:	3b01      	subs	r3, #1
 8005420:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005424:	ee17 1a90 	vmov	r1, s15
 8005428:	4419      	add	r1, r3
 800542a:	460b      	mov	r3, r1
 800542c:	e759      	b.n	80052e2 <_ZN15ScreenGraphView11setupScreenEv+0x6a>
 800542e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005432:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005436:	ee17 3a10 	vmov	r3, s14
 800543a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800543e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005442:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005446:	3b01      	subs	r3, #1
 8005448:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800544c:	ee17 1a90 	vmov	r1, s15
 8005450:	4419      	add	r1, r3
 8005452:	460b      	mov	r3, r1
 8005454:	e760      	b.n	8005318 <_ZN15ScreenGraphView11setupScreenEv+0xa0>
 8005456:	eefd 6ac7 	vcvt.s32.f32	s13, s14
 800545a:	eef8 7ae6 	vcvt.f32.s32	s15, s13
 800545e:	ee16 3a90 	vmov	r3, s13
 8005462:	ee37 7a67 	vsub.f32	s14, s14, s15
 8005466:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 800546a:	ee37 7a27 	vadd.f32	s14, s14, s15
 800546e:	3b01      	subs	r3, #1
 8005470:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8005474:	ee17 2a10 	vmov	r2, s14
 8005478:	441a      	add	r2, r3
 800547a:	4613      	mov	r3, r2
 800547c:	e769      	b.n	8005352 <_ZN15ScreenGraphView11setupScreenEv+0xda>
 800547e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005482:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005486:	ee17 3a10 	vmov	r3, s14
 800548a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800548e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005492:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005496:	3b01      	subs	r3, #1
 8005498:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800549c:	ee17 2a90 	vmov	r2, s15
 80054a0:	441a      	add	r2, r3
 80054a2:	4613      	mov	r3, r2
 80054a4:	e770      	b.n	8005388 <_ZN15ScreenGraphView11setupScreenEv+0x110>
 80054a6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80054aa:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80054ae:	ee17 3a10 	vmov	r3, s14
 80054b2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80054b6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80054ba:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80054be:	3b01      	subs	r3, #1
 80054c0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80054c4:	ee17 2a90 	vmov	r2, s15
 80054c8:	441a      	add	r2, r3
 80054ca:	4613      	mov	r3, r2
 80054cc:	e778      	b.n	80053c0 <_ZN15ScreenGraphView11setupScreenEv+0x148>
 80054ce:	bf00      	nop
 80054d0:	3c23d70a 	.word	0x3c23d70a
 80054d4:	3ba3d70a 	.word	0x3ba3d70a
 80054d8:	3dcccccd 	.word	0x3dcccccd
 80054dc:	3d4ccccd 	.word	0x3d4ccccd

080054e0 <_ZN15ScreenGraphView20DisplayCurrentValue2Ev>:
void ScreenGraphView::DisplayCurrentValue2(){
 80054e0:	b513      	push	{r0, r1, r4, lr}
	Unicode::snprintfFloat(textChargingCurrentBuffer,TEXTCHARGINGCURRENT_SIZE,"%3f",ladowarka.ChargingCurrent);
 80054e2:	4b09      	ldr	r3, [pc, #36]	; (8005508 <_ZN15ScreenGraphView20DisplayCurrentValue2Ev+0x28>)
 80054e4:	4a09      	ldr	r2, [pc, #36]	; (800550c <_ZN15ScreenGraphView20DisplayCurrentValue2Ev+0x2c>)
 80054e6:	681b      	ldr	r3, [r3, #0]
 80054e8:	9301      	str	r3, [sp, #4]
void ScreenGraphView::DisplayCurrentValue2(){
 80054ea:	4604      	mov	r4, r0
 80054ec:	ab01      	add	r3, sp, #4
 80054ee:	2104      	movs	r1, #4
 80054f0:	f500 509a 	add.w	r0, r0, #4928	; 0x1340
 80054f4:	f00e fe3c 	bl	8014170 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	textChargingCurrent.invalidate();
 80054f8:	f504 5096 	add.w	r0, r4, #4800	; 0x12c0
}
 80054fc:	b002      	add	sp, #8
 80054fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	textChargingCurrent.invalidate();
 8005502:	f00c bc52 	b.w	8011daa <_ZNK8touchgfx8Drawable10invalidateEv>
 8005506:	bf00      	nop
 8005508:	2000456c 	.word	0x2000456c
 800550c:	080234a4 	.word	0x080234a4

08005510 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev>:
void ScreenGraphView::DisplayLastAndMaxVlt2(){
 8005510:	b537      	push	{r0, r1, r2, r4, r5, lr}
	Unicode::snprintfFloat(txtLastValueBuffer,TXTLASTVALUE_SIZE,"%.3f",ladowarka.BatteryVoltage);
 8005512:	4d11      	ldr	r5, [pc, #68]	; (8005558 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x48>)
 8005514:	4a11      	ldr	r2, [pc, #68]	; (800555c <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x4c>)
 8005516:	682b      	ldr	r3, [r5, #0]
 8005518:	9301      	str	r3, [sp, #4]
void ScreenGraphView::DisplayLastAndMaxVlt2(){
 800551a:	4604      	mov	r4, r0
 800551c:	f500 5098 	add.w	r0, r0, #4864	; 0x1300
 8005520:	ab01      	add	r3, sp, #4
 8005522:	2108      	movs	r1, #8
 8005524:	300c      	adds	r0, #12
 8005526:	f00e fe23 	bl	8014170 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	Unicode::snprintfFloat(txtMaxValueBuffer,TXTMAXVALUE_SIZE,"%.3f",ladowarka.MaxBatteryVoltage);
 800552a:	686b      	ldr	r3, [r5, #4]
 800552c:	4a0b      	ldr	r2, [pc, #44]	; (800555c <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x4c>)
 800552e:	9301      	str	r3, [sp, #4]
 8005530:	f504 5098 	add.w	r0, r4, #4864	; 0x1300
 8005534:	ab01      	add	r3, sp, #4
 8005536:	2108      	movs	r1, #8
 8005538:	301c      	adds	r0, #28
 800553a:	f00e fe19 	bl	8014170 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	txtMaxValue.invalidate();
 800553e:	f504 5091 	add.w	r0, r4, #4640	; 0x1220
 8005542:	3008      	adds	r0, #8
 8005544:	f00c fc31 	bl	8011daa <_ZNK8touchgfx8Drawable10invalidateEv>
	txtLastValue.invalidate();
 8005548:	f504 508e 	add.w	r0, r4, #4544	; 0x11c0
 800554c:	301c      	adds	r0, #28
}
 800554e:	b003      	add	sp, #12
 8005550:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	txtLastValue.invalidate();
 8005554:	f00c bc29 	b.w	8011daa <_ZNK8touchgfx8Drawable10invalidateEv>
 8005558:	20003af0 	.word	0x20003af0
 800555c:	080233ef 	.word	0x080233ef

08005560 <_ZN15ScreenGraphView10DrawPoint2Ev>:
void ScreenGraphView::DrawPoint2(){
 8005560:	b538      	push	{r3, r4, r5, lr}
	dynamicGraph1.addDataPoint(ladowarka.BatteryVoltage);
 8005562:	4b24      	ldr	r3, [pc, #144]	; (80055f4 <_ZN15ScreenGraphView10DrawPoint2Ev+0x94>)
 8005564:	ed93 7a00 	vldr	s14, [r3]
        const float fs = f * (float)scale;
 8005568:	f8d0 3dc0 	ldr.w	r3, [r0, #3520]	; 0xdc0
 800556c:	ee07 3a90 	vmov	s15, r3
 8005570:	eef8 7ae7 	vcvt.f32.s32	s15, s15
void ScreenGraphView::DrawPoint2(){
 8005574:	ed2d 8b02 	vpush	{d8}
 8005578:	ee67 7a87 	vmul.f32	s15, s15, s14
 800557c:	4604      	mov	r4, r0
        if (fs >= 0)
 800557e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005582:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
	dynamicGraph1.addDataPoint(ladowarka.BatteryVoltage);
 8005586:	f600 558c 	addw	r5, r0, #3468	; 0xd8c
 800558a:	db1e      	blt.n	80055ca <_ZN15ScreenGraphView10DrawPoint2Ev+0x6a>
            return (int)(fs + 0.5f);
 800558c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005590:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005594:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005598:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800559c:	4628      	mov	r0, r5
 800559e:	f007 f819 	bl	800c5d4 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
    dynamicGraph1.setGraphRangeY(countMin(), countMax());
 80055a2:	6823      	ldr	r3, [r4, #0]
 80055a4:	4620      	mov	r0, r4
 80055a6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80055a8:	4798      	blx	r3
 80055aa:	6823      	ldr	r3, [r4, #0]
 80055ac:	4620      	mov	r0, r4
 80055ae:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80055b0:	eeb0 8a40 	vmov.f32	s16, s0
 80055b4:	4798      	blx	r3
 80055b6:	4628      	mov	r0, r5
 80055b8:	eef0 0a40 	vmov.f32	s1, s0
 80055bc:	eeb0 0a48 	vmov.f32	s0, s16
 80055c0:	f7fe f912 	bl	80037e8 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
}
 80055c4:	ecbd 8b02 	vpop	{d8}
 80055c8:	bd38      	pop	{r3, r4, r5, pc}
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80055ca:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80055ce:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80055d2:	ee17 3a10 	vmov	r3, s14
 80055d6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80055da:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80055de:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80055e2:	1e59      	subs	r1, r3, #1
 80055e4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80055e8:	ee17 3a90 	vmov	r3, s15
 80055ec:	440b      	add	r3, r1
 80055ee:	4619      	mov	r1, r3
 80055f0:	e7d4      	b.n	800559c <_ZN15ScreenGraphView10DrawPoint2Ev+0x3c>
 80055f2:	bf00      	nop
 80055f4:	20003af0 	.word	0x20003af0

080055f8 <_ZN15ScreenGraphView13DrawPoint2MinEv>:
void ScreenGraphView::DrawPoint2Min(){
 80055f8:	b570      	push	{r4, r5, r6, lr}
	dynamicGraph2.addDataPoint(ladowarka.NapiecieBaterii[ladowarka.CzsasLadowaniaWSec/60]);
 80055fa:	4d52      	ldr	r5, [pc, #328]	; (8005744 <_ZN15ScreenGraphView13DrawPoint2MinEv+0x14c>)
        const float fs = f * (float)scale;
 80055fc:	edd0 7a4d 	vldr	s15, [r0, #308]	; 0x134
 8005600:	f8d5 3a78 	ldr.w	r3, [r5, #2680]	; 0xa78
 8005604:	223c      	movs	r2, #60	; 0x3c
 8005606:	fb93 f3f2 	sdiv	r3, r3, r2
 800560a:	3306      	adds	r3, #6
 800560c:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 8005610:	ed93 7a00 	vldr	s14, [r3]
 8005614:	eef8 7ae7 	vcvt.f32.s32	s15, s15
void ScreenGraphView::DrawPoint2Min(){
 8005618:	ed2d 8b02 	vpush	{d8}
 800561c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8005620:	4604      	mov	r4, r0
        if (fs >= 0)
 8005622:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005626:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
	dynamicGraph2.addDataPoint(ladowarka.NapiecieBaterii[ladowarka.CzsasLadowaniaWSec/60]);
 800562a:	f500 7680 	add.w	r6, r0, #256	; 0x100
 800562e:	db74      	blt.n	800571a <_ZN15ScreenGraphView13DrawPoint2MinEv+0x122>
            return (int)(fs + 0.5f);
 8005630:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005634:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005638:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800563c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005640:	4630      	mov	r0, r6
 8005642:	f006 ffc7 	bl	800c5d4 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
	    dynamicGraph2.setGraphRangeY((floor(ladowarka.NapiecieBaterii[0]*10)/10),(ceil(ladowarka.MaxBatteryVoltage*10)/10) );
 8005646:	ed95 0a06 	vldr	s0, [r5, #24]
 800564a:	eeb2 8a04 	vmov.f32	s16, #36	; 0x41200000  10.0
  { return __builtin_floorf(__x); }
 800564e:	ee20 0a08 	vmul.f32	s0, s0, s16
 8005652:	f01a ff99 	bl	8020588 <floorf>
 8005656:	eef0 8a40 	vmov.f32	s17, s0
 800565a:	ed95 0a01 	vldr	s0, [r5, #4]
  { return __builtin_ceilf(__x); }
 800565e:	ee20 0a08 	vmul.f32	s0, s0, s16
 8005662:	f01a ff4f 	bl	8020504 <ceilf>
 8005666:	4630      	mov	r0, r6
 8005668:	eec0 0a08 	vdiv.f32	s1, s0, s16
 800566c:	ee88 0a88 	vdiv.f32	s0, s17, s16
 8005670:	f7fe f8ba 	bl	80037e8 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
	if (ladowarka.CzsasLadowaniaWSec>9*60 && ladowarka.CzsasLadowaniaWSec <59*60){ //jesli czas jest >9min i <59 min
 8005674:	f8d5 3a78 	ldr.w	r3, [r5, #2680]	; 0xa78
 8005678:	f5b3 7f07 	cmp.w	r3, #540	; 0x21c
 800567c:	dd23      	ble.n	80056c6 <_ZN15ScreenGraphView13DrawPoint2MinEv+0xce>
 800567e:	f8d5 2a78 	ldr.w	r2, [r5, #2680]	; 0xa78
 8005682:	f640 53d3 	movw	r3, #3539	; 0xdd3
 8005686:	429a      	cmp	r2, r3
 8005688:	dc1d      	bgt.n	80056c6 <_ZN15ScreenGraphView13DrawPoint2MinEv+0xce>
		dynamicGraph2.setGraphRangeX(0,60);
 800568a:	223c      	movs	r2, #60	; 0x3c
 800568c:	2100      	movs	r1, #0
 800568e:	4630      	mov	r0, r6
 8005690:	f7fe f814 	bl	80036bc <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
        setIntervalScaled(abs(interval) * dataScale);
 8005694:	f8d4 2ca4 	ldr.w	r2, [r4, #3236]	; 0xca4
        return i * scale;
 8005698:	f8d4 3d24 	ldr.w	r3, [r4, #3364]	; 0xd24
 800569c:	210a      	movs	r1, #10
 800569e:	434a      	muls	r2, r1
 80056a0:	2a00      	cmp	r2, #0
 80056a2:	bfb8      	it	lt
 80056a4:	4252      	neglt	r2, r2
        gridInterval = abs(interval);
 80056a6:	f8c4 2ca8 	str.w	r2, [r4, #3240]	; 0xca8
        setIntervalScaled(abs(interval) * dataScale);
 80056aa:	f8d4 2c24 	ldr.w	r2, [r4, #3108]	; 0xc24
 80056ae:	0052      	lsls	r2, r2, #1
 80056b0:	434b      	muls	r3, r1
 80056b2:	2a00      	cmp	r2, #0
 80056b4:	bfb8      	it	lt
 80056b6:	4252      	neglt	r2, r2
 80056b8:	2b00      	cmp	r3, #0
 80056ba:	bfb8      	it	lt
 80056bc:	425b      	neglt	r3, r3
        gridInterval = abs(interval);
 80056be:	f8c4 2c28 	str.w	r2, [r4, #3112]	; 0xc28
 80056c2:	f8c4 3d28 	str.w	r3, [r4, #3368]	; 0xd28
	if (ladowarka.CzsasLadowaniaWSec >59*60){ //jesli czas jest >59 min
 80056c6:	f8d5 2a78 	ldr.w	r2, [r5, #2680]	; 0xa78
 80056ca:	f640 53d4 	movw	r3, #3540	; 0xdd4
 80056ce:	429a      	cmp	r2, r3
 80056d0:	dd20      	ble.n	8005714 <_ZN15ScreenGraphView13DrawPoint2MinEv+0x11c>
			dynamicGraph2.setGraphRangeX(0,ladowarka.ChargingTime*60);
 80056d2:	68ea      	ldr	r2, [r5, #12]
 80056d4:	253c      	movs	r5, #60	; 0x3c
 80056d6:	436a      	muls	r2, r5
 80056d8:	2100      	movs	r1, #0
 80056da:	4630      	mov	r0, r6
 80056dc:	f7fd ffee 	bl	80036bc <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
        setIntervalScaled(abs(interval) * dataScale);
 80056e0:	f8d4 2ca4 	ldr.w	r2, [r4, #3236]	; 0xca4
 80056e4:	436a      	muls	r2, r5
 80056e6:	2a00      	cmp	r2, #0
 80056e8:	bfb8      	it	lt
 80056ea:	4252      	neglt	r2, r2
        gridInterval = abs(interval);
 80056ec:	f8c4 2ca8 	str.w	r2, [r4, #3240]	; 0xca8
        setIntervalScaled(abs(interval) * dataScale);
 80056f0:	f8d4 2c24 	ldr.w	r2, [r4, #3108]	; 0xc24
 80056f4:	230a      	movs	r3, #10
 80056f6:	435a      	muls	r2, r3
 80056f8:	f8d4 3d24 	ldr.w	r3, [r4, #3364]	; 0xd24
 80056fc:	2a00      	cmp	r2, #0
 80056fe:	fb05 f303 	mul.w	r3, r5, r3
 8005702:	bfb8      	it	lt
 8005704:	4252      	neglt	r2, r2
 8005706:	2b00      	cmp	r3, #0
 8005708:	bfb8      	it	lt
 800570a:	425b      	neglt	r3, r3
        gridInterval = abs(interval);
 800570c:	f8c4 2c28 	str.w	r2, [r4, #3112]	; 0xc28
 8005710:	f8c4 3d28 	str.w	r3, [r4, #3368]	; 0xd28
}
 8005714:	ecbd 8b02 	vpop	{d8}
 8005718:	bd70      	pop	{r4, r5, r6, pc}
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800571a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800571e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005722:	ee17 3a10 	vmov	r3, s14
 8005726:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800572a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800572e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005732:	1e59      	subs	r1, r3, #1
 8005734:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005738:	ee17 3a90 	vmov	r3, s15
 800573c:	440b      	add	r3, r1
 800573e:	4619      	mov	r1, r3
 8005740:	e77e      	b.n	8005640 <_ZN15ScreenGraphView13DrawPoint2MinEv+0x48>
 8005742:	bf00      	nop
 8005744:	20003af0 	.word	0x20003af0

08005748 <_ZN15ScreenGraphViewC1Ev>:
ScreenGraphView::ScreenGraphView()
 8005748:	b510      	push	{r4, lr}
 800574a:	4604      	mov	r4, r0
 800574c:	f7fe fd34 	bl	80041b8 <_ZN19ScreenGraphViewBaseC1Ev>
 8005750:	4b01      	ldr	r3, [pc, #4]	; (8005758 <_ZN15ScreenGraphViewC1Ev+0x10>)
 8005752:	6023      	str	r3, [r4, #0]
}
 8005754:	4620      	mov	r0, r4
 8005756:	bd10      	pop	{r4, pc}
 8005758:	080234b0 	.word	0x080234b0

0800575c <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 800575c:	20f0      	movs	r0, #240	; 0xf0
 800575e:	4770      	bx	lr

08005760 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8005760:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8005764:	4770      	bx	lr

08005766 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8005766:	2029      	movs	r0, #41	; 0x29
 8005768:	f7fc b940 	b.w	80019ec <LCD_IO_WriteReg>

0800576c <ili9341_DisplayOff>:
 800576c:	2028      	movs	r0, #40	; 0x28
 800576e:	f7fc b93d 	b.w	80019ec <LCD_IO_WriteReg>

08005772 <ili9341_Init>:
{
 8005772:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8005774:	f7fc f90e 	bl	8001994 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8005778:	20ca      	movs	r0, #202	; 0xca
 800577a:	f7fc f937 	bl	80019ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800577e:	20c3      	movs	r0, #195	; 0xc3
 8005780:	f7fc f918 	bl	80019b4 <LCD_IO_WriteData>
 8005784:	2008      	movs	r0, #8
 8005786:	f7fc f915 	bl	80019b4 <LCD_IO_WriteData>
 800578a:	2050      	movs	r0, #80	; 0x50
 800578c:	f7fc f912 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005790:	20cf      	movs	r0, #207	; 0xcf
 8005792:	f7fc f92b 	bl	80019ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005796:	2000      	movs	r0, #0
 8005798:	f7fc f90c 	bl	80019b4 <LCD_IO_WriteData>
 800579c:	20c1      	movs	r0, #193	; 0xc1
 800579e:	f7fc f909 	bl	80019b4 <LCD_IO_WriteData>
 80057a2:	2030      	movs	r0, #48	; 0x30
 80057a4:	f7fc f906 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80057a8:	20ed      	movs	r0, #237	; 0xed
 80057aa:	f7fc f91f 	bl	80019ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80057ae:	2064      	movs	r0, #100	; 0x64
 80057b0:	f7fc f900 	bl	80019b4 <LCD_IO_WriteData>
 80057b4:	2003      	movs	r0, #3
 80057b6:	f7fc f8fd 	bl	80019b4 <LCD_IO_WriteData>
 80057ba:	2012      	movs	r0, #18
 80057bc:	f7fc f8fa 	bl	80019b4 <LCD_IO_WriteData>
 80057c0:	2081      	movs	r0, #129	; 0x81
 80057c2:	f7fc f8f7 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80057c6:	20e8      	movs	r0, #232	; 0xe8
 80057c8:	f7fc f910 	bl	80019ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80057cc:	2085      	movs	r0, #133	; 0x85
 80057ce:	f7fc f8f1 	bl	80019b4 <LCD_IO_WriteData>
 80057d2:	2000      	movs	r0, #0
 80057d4:	f7fc f8ee 	bl	80019b4 <LCD_IO_WriteData>
 80057d8:	2078      	movs	r0, #120	; 0x78
 80057da:	f7fc f8eb 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80057de:	20cb      	movs	r0, #203	; 0xcb
 80057e0:	f7fc f904 	bl	80019ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80057e4:	2039      	movs	r0, #57	; 0x39
 80057e6:	f7fc f8e5 	bl	80019b4 <LCD_IO_WriteData>
 80057ea:	202c      	movs	r0, #44	; 0x2c
 80057ec:	f7fc f8e2 	bl	80019b4 <LCD_IO_WriteData>
 80057f0:	2000      	movs	r0, #0
 80057f2:	f7fc f8df 	bl	80019b4 <LCD_IO_WriteData>
 80057f6:	2034      	movs	r0, #52	; 0x34
 80057f8:	f7fc f8dc 	bl	80019b4 <LCD_IO_WriteData>
 80057fc:	2002      	movs	r0, #2
 80057fe:	f7fc f8d9 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005802:	20f7      	movs	r0, #247	; 0xf7
 8005804:	f7fc f8f2 	bl	80019ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005808:	2020      	movs	r0, #32
 800580a:	f7fc f8d3 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800580e:	20ea      	movs	r0, #234	; 0xea
 8005810:	f7fc f8ec 	bl	80019ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005814:	2000      	movs	r0, #0
 8005816:	f7fc f8cd 	bl	80019b4 <LCD_IO_WriteData>
 800581a:	2000      	movs	r0, #0
 800581c:	f7fc f8ca 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005820:	20b1      	movs	r0, #177	; 0xb1
 8005822:	f7fc f8e3 	bl	80019ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005826:	2000      	movs	r0, #0
 8005828:	f7fc f8c4 	bl	80019b4 <LCD_IO_WriteData>
 800582c:	201b      	movs	r0, #27
 800582e:	f7fc f8c1 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005832:	20b6      	movs	r0, #182	; 0xb6
 8005834:	f7fc f8da 	bl	80019ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005838:	200a      	movs	r0, #10
 800583a:	f7fc f8bb 	bl	80019b4 <LCD_IO_WriteData>
 800583e:	20a2      	movs	r0, #162	; 0xa2
 8005840:	f7fc f8b8 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005844:	20c0      	movs	r0, #192	; 0xc0
 8005846:	f7fc f8d1 	bl	80019ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800584a:	2010      	movs	r0, #16
 800584c:	f7fc f8b2 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005850:	20c1      	movs	r0, #193	; 0xc1
 8005852:	f7fc f8cb 	bl	80019ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005856:	2010      	movs	r0, #16
 8005858:	f7fc f8ac 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800585c:	20c5      	movs	r0, #197	; 0xc5
 800585e:	f7fc f8c5 	bl	80019ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005862:	2045      	movs	r0, #69	; 0x45
 8005864:	f7fc f8a6 	bl	80019b4 <LCD_IO_WriteData>
 8005868:	2015      	movs	r0, #21
 800586a:	f7fc f8a3 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800586e:	20c7      	movs	r0, #199	; 0xc7
 8005870:	f7fc f8bc 	bl	80019ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005874:	2090      	movs	r0, #144	; 0x90
 8005876:	f7fc f89d 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800587a:	2036      	movs	r0, #54	; 0x36
 800587c:	f7fc f8b6 	bl	80019ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005880:	20c8      	movs	r0, #200	; 0xc8
 8005882:	f7fc f897 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005886:	20f2      	movs	r0, #242	; 0xf2
 8005888:	f7fc f8b0 	bl	80019ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800588c:	2000      	movs	r0, #0
 800588e:	f7fc f891 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005892:	20b0      	movs	r0, #176	; 0xb0
 8005894:	f7fc f8aa 	bl	80019ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005898:	20c2      	movs	r0, #194	; 0xc2
 800589a:	f7fc f88b 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800589e:	20b6      	movs	r0, #182	; 0xb6
 80058a0:	f7fc f8a4 	bl	80019ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80058a4:	200a      	movs	r0, #10
 80058a6:	f7fc f885 	bl	80019b4 <LCD_IO_WriteData>
 80058aa:	20a7      	movs	r0, #167	; 0xa7
 80058ac:	f7fc f882 	bl	80019b4 <LCD_IO_WriteData>
 80058b0:	2027      	movs	r0, #39	; 0x27
 80058b2:	f7fc f87f 	bl	80019b4 <LCD_IO_WriteData>
 80058b6:	2004      	movs	r0, #4
 80058b8:	f7fc f87c 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80058bc:	202a      	movs	r0, #42	; 0x2a
 80058be:	f7fc f895 	bl	80019ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80058c2:	2000      	movs	r0, #0
 80058c4:	f7fc f876 	bl	80019b4 <LCD_IO_WriteData>
 80058c8:	2000      	movs	r0, #0
 80058ca:	f7fc f873 	bl	80019b4 <LCD_IO_WriteData>
 80058ce:	2000      	movs	r0, #0
 80058d0:	f7fc f870 	bl	80019b4 <LCD_IO_WriteData>
 80058d4:	20ef      	movs	r0, #239	; 0xef
 80058d6:	f7fc f86d 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80058da:	202b      	movs	r0, #43	; 0x2b
 80058dc:	f7fc f886 	bl	80019ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80058e0:	2000      	movs	r0, #0
 80058e2:	f7fc f867 	bl	80019b4 <LCD_IO_WriteData>
 80058e6:	2000      	movs	r0, #0
 80058e8:	f7fc f864 	bl	80019b4 <LCD_IO_WriteData>
 80058ec:	2001      	movs	r0, #1
 80058ee:	f7fc f861 	bl	80019b4 <LCD_IO_WriteData>
 80058f2:	203f      	movs	r0, #63	; 0x3f
 80058f4:	f7fc f85e 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80058f8:	20f6      	movs	r0, #246	; 0xf6
 80058fa:	f7fc f877 	bl	80019ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80058fe:	2001      	movs	r0, #1
 8005900:	f7fc f858 	bl	80019b4 <LCD_IO_WriteData>
 8005904:	2000      	movs	r0, #0
 8005906:	f7fc f855 	bl	80019b4 <LCD_IO_WriteData>
 800590a:	2006      	movs	r0, #6
 800590c:	f7fc f852 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005910:	202c      	movs	r0, #44	; 0x2c
 8005912:	f7fc f86b 	bl	80019ec <LCD_IO_WriteReg>
  LCD_Delay(200);
 8005916:	20c8      	movs	r0, #200	; 0xc8
 8005918:	f7fc f8b6 	bl	8001a88 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800591c:	2026      	movs	r0, #38	; 0x26
 800591e:	f7fc f865 	bl	80019ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005922:	2001      	movs	r0, #1
 8005924:	f7fc f846 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005928:	20e0      	movs	r0, #224	; 0xe0
 800592a:	f7fc f85f 	bl	80019ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800592e:	200f      	movs	r0, #15
 8005930:	f7fc f840 	bl	80019b4 <LCD_IO_WriteData>
 8005934:	2029      	movs	r0, #41	; 0x29
 8005936:	f7fc f83d 	bl	80019b4 <LCD_IO_WriteData>
 800593a:	2024      	movs	r0, #36	; 0x24
 800593c:	f7fc f83a 	bl	80019b4 <LCD_IO_WriteData>
 8005940:	200c      	movs	r0, #12
 8005942:	f7fc f837 	bl	80019b4 <LCD_IO_WriteData>
 8005946:	200e      	movs	r0, #14
 8005948:	f7fc f834 	bl	80019b4 <LCD_IO_WriteData>
 800594c:	2009      	movs	r0, #9
 800594e:	f7fc f831 	bl	80019b4 <LCD_IO_WriteData>
 8005952:	204e      	movs	r0, #78	; 0x4e
 8005954:	f7fc f82e 	bl	80019b4 <LCD_IO_WriteData>
 8005958:	2078      	movs	r0, #120	; 0x78
 800595a:	f7fc f82b 	bl	80019b4 <LCD_IO_WriteData>
 800595e:	203c      	movs	r0, #60	; 0x3c
 8005960:	f7fc f828 	bl	80019b4 <LCD_IO_WriteData>
 8005964:	2009      	movs	r0, #9
 8005966:	f7fc f825 	bl	80019b4 <LCD_IO_WriteData>
 800596a:	2013      	movs	r0, #19
 800596c:	f7fc f822 	bl	80019b4 <LCD_IO_WriteData>
 8005970:	2005      	movs	r0, #5
 8005972:	f7fc f81f 	bl	80019b4 <LCD_IO_WriteData>
 8005976:	2017      	movs	r0, #23
 8005978:	f7fc f81c 	bl	80019b4 <LCD_IO_WriteData>
 800597c:	2011      	movs	r0, #17
 800597e:	f7fc f819 	bl	80019b4 <LCD_IO_WriteData>
 8005982:	2000      	movs	r0, #0
 8005984:	f7fc f816 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005988:	20e1      	movs	r0, #225	; 0xe1
 800598a:	f7fc f82f 	bl	80019ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800598e:	2000      	movs	r0, #0
 8005990:	f7fc f810 	bl	80019b4 <LCD_IO_WriteData>
 8005994:	2016      	movs	r0, #22
 8005996:	f7fc f80d 	bl	80019b4 <LCD_IO_WriteData>
 800599a:	201b      	movs	r0, #27
 800599c:	f7fc f80a 	bl	80019b4 <LCD_IO_WriteData>
 80059a0:	2004      	movs	r0, #4
 80059a2:	f7fc f807 	bl	80019b4 <LCD_IO_WriteData>
 80059a6:	2011      	movs	r0, #17
 80059a8:	f7fc f804 	bl	80019b4 <LCD_IO_WriteData>
 80059ac:	2007      	movs	r0, #7
 80059ae:	f7fc f801 	bl	80019b4 <LCD_IO_WriteData>
 80059b2:	2031      	movs	r0, #49	; 0x31
 80059b4:	f7fb fffe 	bl	80019b4 <LCD_IO_WriteData>
 80059b8:	2033      	movs	r0, #51	; 0x33
 80059ba:	f7fb fffb 	bl	80019b4 <LCD_IO_WriteData>
 80059be:	2042      	movs	r0, #66	; 0x42
 80059c0:	f7fb fff8 	bl	80019b4 <LCD_IO_WriteData>
 80059c4:	2005      	movs	r0, #5
 80059c6:	f7fb fff5 	bl	80019b4 <LCD_IO_WriteData>
 80059ca:	200c      	movs	r0, #12
 80059cc:	f7fb fff2 	bl	80019b4 <LCD_IO_WriteData>
 80059d0:	200a      	movs	r0, #10
 80059d2:	f7fb ffef 	bl	80019b4 <LCD_IO_WriteData>
 80059d6:	2028      	movs	r0, #40	; 0x28
 80059d8:	f7fb ffec 	bl	80019b4 <LCD_IO_WriteData>
 80059dc:	202f      	movs	r0, #47	; 0x2f
 80059de:	f7fb ffe9 	bl	80019b4 <LCD_IO_WriteData>
 80059e2:	200f      	movs	r0, #15
 80059e4:	f7fb ffe6 	bl	80019b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80059e8:	2011      	movs	r0, #17
 80059ea:	f7fb ffff 	bl	80019ec <LCD_IO_WriteReg>
  LCD_Delay(200);
 80059ee:	20c8      	movs	r0, #200	; 0xc8
 80059f0:	f7fc f84a 	bl	8001a88 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80059f4:	2029      	movs	r0, #41	; 0x29
 80059f6:	f7fb fff9 	bl	80019ec <LCD_IO_WriteReg>
}
 80059fa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 80059fe:	202c      	movs	r0, #44	; 0x2c
 8005a00:	f7fb bff4 	b.w	80019ec <LCD_IO_WriteReg>

08005a04 <ili9341_ReadID>:
{
 8005a04:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8005a06:	f7fb ffc5 	bl	8001994 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8005a0a:	2103      	movs	r1, #3
 8005a0c:	20d3      	movs	r0, #211	; 0xd3
 8005a0e:	f7fc f809 	bl	8001a24 <LCD_IO_ReadData>
}
 8005a12:	b280      	uxth	r0, r0
 8005a14:	bd08      	pop	{r3, pc}

08005a16 <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 8005a16:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8005a18:	b2c4      	uxtb	r4, r0
 8005a1a:	2202      	movs	r2, #2
 8005a1c:	2103      	movs	r1, #3
 8005a1e:	4620      	mov	r0, r4
 8005a20:	f7fb ff6e 	bl	8001900 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 8005a24:	200a      	movs	r0, #10
 8005a26:	f7fb ffb3 	bl	8001990 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8005a2a:	4620      	mov	r0, r4
 8005a2c:	2200      	movs	r2, #0
 8005a2e:	2103      	movs	r1, #3
 8005a30:	f7fb ff66 	bl	8001900 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 8005a34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8005a38:	2002      	movs	r0, #2
 8005a3a:	f7fb bfa9 	b.w	8001990 <IOE_Delay>

08005a3e <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 8005a3e:	b538      	push	{r3, r4, r5, lr}
 8005a40:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005a42:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 8005a44:	f7fb ff5a 	bl	80018fc <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005a48:	2100      	movs	r1, #0
 8005a4a:	4620      	mov	r0, r4
 8005a4c:	f7fb ff70 	bl	8001930 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8005a50:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005a52:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8005a54:	4620      	mov	r0, r4
 8005a56:	f7fb ff6b 	bl	8001930 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005a5a:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 8005a5e:	b280      	uxth	r0, r0
 8005a60:	bd38      	pop	{r3, r4, r5, pc}

08005a62 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8005a62:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8005a64:	b2c4      	uxtb	r4, r0
 8005a66:	2140      	movs	r1, #64	; 0x40
 8005a68:	4620      	mov	r0, r4
 8005a6a:	f7fb ff61 	bl	8001930 <IOE_Read>
  
  if(state > 0)
 8005a6e:	0603      	lsls	r3, r0, #24
 8005a70:	d507      	bpl.n	8005a82 <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8005a72:	214c      	movs	r1, #76	; 0x4c
 8005a74:	4620      	mov	r0, r4
 8005a76:	f7fb ff5b 	bl	8001930 <IOE_Read>
    {
      ret = 1;
 8005a7a:	3800      	subs	r0, #0
 8005a7c:	bf18      	it	ne
 8005a7e:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 8005a80:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005a82:	2201      	movs	r2, #1
 8005a84:	214b      	movs	r1, #75	; 0x4b
 8005a86:	4620      	mov	r0, r4
 8005a88:	f7fb ff3a 	bl	8001900 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8005a8c:	4620      	mov	r0, r4
 8005a8e:	2200      	movs	r2, #0
 8005a90:	214b      	movs	r1, #75	; 0x4b
 8005a92:	f7fb ff35 	bl	8001900 <IOE_Write>
  uint8_t ret = 0;
 8005a96:	2000      	movs	r0, #0
 8005a98:	e7f2      	b.n	8005a80 <stmpe811_TS_DetectTouch+0x1e>

08005a9a <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 8005a9a:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8005a9c:	2304      	movs	r3, #4
 8005a9e:	b2c4      	uxtb	r4, r0
{
 8005aa0:	460e      	mov	r6, r1
 8005aa2:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8005aa4:	21d7      	movs	r1, #215	; 0xd7
 8005aa6:	eb0d 0203 	add.w	r2, sp, r3
 8005aaa:	4620      	mov	r0, r4
 8005aac:	f7fb ff5a 	bl	8001964 <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8005ab0:	9b01      	ldr	r3, [sp, #4]
 8005ab2:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8005ab4:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8005ab6:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8005aba:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005abc:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8005abe:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005ac0:	2201      	movs	r2, #1
 8005ac2:	214b      	movs	r1, #75	; 0x4b
 8005ac4:	f7fb ff1c 	bl	8001900 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8005ac8:	2200      	movs	r2, #0
 8005aca:	214b      	movs	r1, #75	; 0x4b
 8005acc:	4620      	mov	r0, r4
 8005ace:	f7fb ff17 	bl	8001900 <IOE_Write>
}
 8005ad2:	b002      	add	sp, #8
 8005ad4:	bd70      	pop	{r4, r5, r6, pc}
	...

08005ad8 <stmpe811_Init>:
{
 8005ad8:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8005ada:	4b0a      	ldr	r3, [pc, #40]	; (8005b04 <stmpe811_Init+0x2c>)
 8005adc:	781a      	ldrb	r2, [r3, #0]
 8005ade:	4290      	cmp	r0, r2
{
 8005ae0:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 8005ae2:	d00d      	beq.n	8005b00 <stmpe811_Init+0x28>
 8005ae4:	7859      	ldrb	r1, [r3, #1]
 8005ae6:	4288      	cmp	r0, r1
 8005ae8:	d00a      	beq.n	8005b00 <stmpe811_Init+0x28>
 8005aea:	b10a      	cbz	r2, 8005af0 <stmpe811_Init+0x18>
 8005aec:	b941      	cbnz	r1, 8005b00 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 8005aee:	2201      	movs	r2, #1
      stmpe811[empty] = DeviceAddr;
 8005af0:	549c      	strb	r4, [r3, r2]
      IOE_Init(); 
 8005af2:	f7fb ff03 	bl	80018fc <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 8005af6:	4620      	mov	r0, r4
}
 8005af8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 8005afc:	f7ff bf8b 	b.w	8005a16 <stmpe811_Reset>
}
 8005b00:	bd10      	pop	{r4, pc}
 8005b02:	bf00      	nop
 8005b04:	20004668 	.word	0x20004668

08005b08 <stmpe811_EnableGlobalIT>:
{
 8005b08:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8005b0a:	b2c4      	uxtb	r4, r0
 8005b0c:	2109      	movs	r1, #9
 8005b0e:	4620      	mov	r0, r4
 8005b10:	f7fb ff0e 	bl	8001930 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8005b14:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8005b18:	b2c2      	uxtb	r2, r0
 8005b1a:	2109      	movs	r1, #9
 8005b1c:	4620      	mov	r0, r4
}
 8005b1e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8005b22:	f7fb beed 	b.w	8001900 <IOE_Write>

08005b26 <stmpe811_DisableGlobalIT>:
{
 8005b26:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8005b28:	b2c4      	uxtb	r4, r0
 8005b2a:	2109      	movs	r1, #9
 8005b2c:	4620      	mov	r0, r4
 8005b2e:	f7fb feff 	bl	8001930 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8005b32:	2109      	movs	r1, #9
 8005b34:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8005b38:	4620      	mov	r0, r4
}
 8005b3a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8005b3e:	f7fb bedf 	b.w	8001900 <IOE_Write>

08005b42 <stmpe811_EnableITSource>:
{
 8005b42:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005b44:	b2c4      	uxtb	r4, r0
{
 8005b46:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005b48:	4620      	mov	r0, r4
 8005b4a:	210a      	movs	r1, #10
 8005b4c:	f7fb fef0 	bl	8001930 <IOE_Read>
  tmp |= Source; 
 8005b50:	4328      	orrs	r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005b52:	b2c2      	uxtb	r2, r0
 8005b54:	210a      	movs	r1, #10
 8005b56:	4620      	mov	r0, r4
}
 8005b58:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005b5c:	f7fb bed0 	b.w	8001900 <IOE_Write>

08005b60 <stmpe811_TS_EnableIT>:
{
 8005b60:	b507      	push	{r0, r1, r2, lr}
 8005b62:	9001      	str	r0, [sp, #4]
  IOE_ITConfig();
 8005b64:	f7fb fecb 	bl	80018fe <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 8005b68:	9801      	ldr	r0, [sp, #4]
 8005b6a:	211f      	movs	r1, #31
 8005b6c:	f7ff ffe9 	bl	8005b42 <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 8005b70:	9801      	ldr	r0, [sp, #4]
}
 8005b72:	b003      	add	sp, #12
 8005b74:	f85d eb04 	ldr.w	lr, [sp], #4
  stmpe811_EnableGlobalIT(DeviceAddr);
 8005b78:	f7ff bfc6 	b.w	8005b08 <stmpe811_EnableGlobalIT>

08005b7c <stmpe811_DisableITSource>:
{
 8005b7c:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005b7e:	b2c4      	uxtb	r4, r0
{
 8005b80:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005b82:	4620      	mov	r0, r4
 8005b84:	210a      	movs	r1, #10
 8005b86:	f7fb fed3 	bl	8001930 <IOE_Read>
  tmp &= ~Source; 
 8005b8a:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005b8e:	b2c2      	uxtb	r2, r0
 8005b90:	210a      	movs	r1, #10
 8005b92:	4620      	mov	r0, r4
}
 8005b94:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005b98:	f7fb beb2 	b.w	8001900 <IOE_Write>

08005b9c <stmpe811_TS_DisableIT>:
{
 8005b9c:	b510      	push	{r4, lr}
 8005b9e:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 8005ba0:	f7ff ffc1 	bl	8005b26 <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8005ba4:	4620      	mov	r0, r4
 8005ba6:	211f      	movs	r1, #31
}
 8005ba8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8005bac:	f7ff bfe6 	b.w	8005b7c <stmpe811_DisableITSource>

08005bb0 <stmpe811_ReadGITStatus>:
{
 8005bb0:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8005bb2:	b2c0      	uxtb	r0, r0
{
 8005bb4:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8005bb6:	210b      	movs	r1, #11
 8005bb8:	f7fb feba 	bl	8001930 <IOE_Read>
}
 8005bbc:	4020      	ands	r0, r4
 8005bbe:	bd10      	pop	{r4, pc}

08005bc0 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 8005bc0:	211f      	movs	r1, #31
 8005bc2:	f7ff bff5 	b.w	8005bb0 <stmpe811_ReadGITStatus>

08005bc6 <stmpe811_ClearGlobalIT>:
{
 8005bc6:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8005bc8:	b2c0      	uxtb	r0, r0
 8005bca:	210b      	movs	r1, #11
 8005bcc:	f7fb be98 	b.w	8001900 <IOE_Write>

08005bd0 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 8005bd0:	211f      	movs	r1, #31
 8005bd2:	f7ff bff8 	b.w	8005bc6 <stmpe811_ClearGlobalIT>

08005bd6 <stmpe811_IO_EnableAF>:
{
 8005bd6:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8005bd8:	b2c4      	uxtb	r4, r0
{
 8005bda:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8005bdc:	4620      	mov	r0, r4
 8005bde:	2117      	movs	r1, #23
 8005be0:	f7fb fea6 	bl	8001930 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 8005be4:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8005be8:	b2c2      	uxtb	r2, r0
 8005bea:	2117      	movs	r1, #23
 8005bec:	4620      	mov	r0, r4
}
 8005bee:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8005bf2:	f7fb be85 	b.w	8001900 <IOE_Write>

08005bf6 <stmpe811_TS_Start>:
{
 8005bf6:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8005bf8:	b2c4      	uxtb	r4, r0
{
 8005bfa:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8005bfc:	2104      	movs	r1, #4
 8005bfe:	4620      	mov	r0, r4
 8005c00:	f7fb fe96 	bl	8001930 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8005c04:	2104      	movs	r1, #4
 8005c06:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8005c0a:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8005c0c:	4620      	mov	r0, r4
 8005c0e:	f7fb fe77 	bl	8001900 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 8005c12:	4630      	mov	r0, r6
 8005c14:	21f0      	movs	r1, #240	; 0xf0
 8005c16:	f7ff ffde 	bl	8005bd6 <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8005c1a:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8005c1e:	4620      	mov	r0, r4
 8005c20:	2104      	movs	r1, #4
 8005c22:	f7fb fe6d 	bl	8001900 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8005c26:	2249      	movs	r2, #73	; 0x49
 8005c28:	2120      	movs	r1, #32
 8005c2a:	4620      	mov	r0, r4
 8005c2c:	f7fb fe68 	bl	8001900 <IOE_Write>
  IOE_Delay(2); 
 8005c30:	2002      	movs	r0, #2
 8005c32:	f7fb fead 	bl	8001990 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8005c36:	4620      	mov	r0, r4
 8005c38:	2201      	movs	r2, #1
 8005c3a:	2121      	movs	r1, #33	; 0x21
 8005c3c:	f7fb fe60 	bl	8001900 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8005c40:	4620      	mov	r0, r4
 8005c42:	229a      	movs	r2, #154	; 0x9a
 8005c44:	2141      	movs	r1, #65	; 0x41
 8005c46:	f7fb fe5b 	bl	8001900 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8005c4a:	4620      	mov	r0, r4
 8005c4c:	2201      	movs	r2, #1
 8005c4e:	214a      	movs	r1, #74	; 0x4a
 8005c50:	f7fb fe56 	bl	8001900 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005c54:	4620      	mov	r0, r4
 8005c56:	2201      	movs	r2, #1
 8005c58:	214b      	movs	r1, #75	; 0x4b
 8005c5a:	f7fb fe51 	bl	8001900 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8005c5e:	4620      	mov	r0, r4
 8005c60:	2200      	movs	r2, #0
 8005c62:	214b      	movs	r1, #75	; 0x4b
 8005c64:	f7fb fe4c 	bl	8001900 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8005c68:	4620      	mov	r0, r4
 8005c6a:	2201      	movs	r2, #1
 8005c6c:	2156      	movs	r1, #86	; 0x56
 8005c6e:	f7fb fe47 	bl	8001900 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8005c72:	4620      	mov	r0, r4
 8005c74:	2201      	movs	r2, #1
 8005c76:	2158      	movs	r1, #88	; 0x58
 8005c78:	f7fb fe42 	bl	8001900 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8005c7c:	4620      	mov	r0, r4
 8005c7e:	2201      	movs	r2, #1
 8005c80:	2140      	movs	r1, #64	; 0x40
 8005c82:	f7fb fe3d 	bl	8001900 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8005c86:	4620      	mov	r0, r4
 8005c88:	22ff      	movs	r2, #255	; 0xff
 8005c8a:	210b      	movs	r1, #11
 8005c8c:	f7fb fe38 	bl	8001900 <IOE_Write>
}
 8005c90:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 8005c94:	2002      	movs	r0, #2
 8005c96:	f7fb be7b 	b.w	8001990 <IOE_Delay>
	...

08005c9c <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8005c9c:	4b05      	ldr	r3, [pc, #20]	; (8005cb4 <SystemInit+0x18>)
 8005c9e:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8005ca2:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8005ca6:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8005caa:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8005cae:	609a      	str	r2, [r3, #8]
#endif
}
 8005cb0:	4770      	bx	lr
 8005cb2:	bf00      	nop
 8005cb4:	e000ed00 	.word	0xe000ed00

08005cb8 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8005cb8:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8005cba:	4b0b      	ldr	r3, [pc, #44]	; (8005ce8 <HAL_Init+0x30>)
 8005cbc:	681a      	ldr	r2, [r3, #0]
 8005cbe:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005cc2:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8005cc4:	681a      	ldr	r2, [r3, #0]
 8005cc6:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8005cca:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8005ccc:	681a      	ldr	r2, [r3, #0]
 8005cce:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005cd2:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8005cd4:	2003      	movs	r0, #3
 8005cd6:	f000 f9e9 	bl	80060ac <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8005cda:	2000      	movs	r0, #0
 8005cdc:	f7fc f9b0 	bl	8002040 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8005ce0:	f7fb feec 	bl	8001abc <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8005ce4:	2000      	movs	r0, #0
 8005ce6:	bd08      	pop	{r3, pc}
 8005ce8:	40023c00 	.word	0x40023c00

08005cec <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8005cec:	4a03      	ldr	r2, [pc, #12]	; (8005cfc <HAL_IncTick+0x10>)
 8005cee:	4b04      	ldr	r3, [pc, #16]	; (8005d00 <HAL_IncTick+0x14>)
 8005cf0:	6811      	ldr	r1, [r2, #0]
 8005cf2:	781b      	ldrb	r3, [r3, #0]
 8005cf4:	440b      	add	r3, r1
 8005cf6:	6013      	str	r3, [r2, #0]
}
 8005cf8:	4770      	bx	lr
 8005cfa:	bf00      	nop
 8005cfc:	2000466c 	.word	0x2000466c
 8005d00:	20000080 	.word	0x20000080

08005d04 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8005d04:	4b01      	ldr	r3, [pc, #4]	; (8005d0c <HAL_GetTick+0x8>)
 8005d06:	6818      	ldr	r0, [r3, #0]
}
 8005d08:	4770      	bx	lr
 8005d0a:	bf00      	nop
 8005d0c:	2000466c 	.word	0x2000466c

08005d10 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8005d10:	b538      	push	{r3, r4, r5, lr}
 8005d12:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8005d14:	f7ff fff6 	bl	8005d04 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8005d18:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8005d1a:	bf1c      	itt	ne
 8005d1c:	4b05      	ldrne	r3, [pc, #20]	; (8005d34 <HAL_Delay+0x24>)
 8005d1e:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8005d20:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8005d22:	bf18      	it	ne
 8005d24:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8005d26:	f7ff ffed 	bl	8005d04 <HAL_GetTick>
 8005d2a:	1b43      	subs	r3, r0, r5
 8005d2c:	42a3      	cmp	r3, r4
 8005d2e:	d3fa      	bcc.n	8005d26 <HAL_Delay+0x16>
  {
  }
}
 8005d30:	bd38      	pop	{r3, r4, r5, pc}
 8005d32:	bf00      	nop
 8005d34:	20000080 	.word	0x20000080

08005d38 <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
{
 8005d38:	b538      	push	{r3, r4, r5, lr}
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  
  /* Check ADC handle */
  if(hadc == NULL)
 8005d3a:	4604      	mov	r4, r0
 8005d3c:	2800      	cmp	r0, #0
 8005d3e:	f000 809b 	beq.w	8005e78 <HAL_ADC_Init+0x140>
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }
  
  if(hadc->State == HAL_ADC_STATE_RESET)
 8005d42:	6c05      	ldr	r5, [r0, #64]	; 0x40
 8005d44:	b925      	cbnz	r5, 8005d50 <HAL_ADC_Init+0x18>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 8005d46:	f7fb fed9 	bl	8001afc <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 8005d4a:	6465      	str	r5, [r4, #68]	; 0x44
    
    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 8005d4c:	f884 503c 	strb.w	r5, [r4, #60]	; 0x3c
  }
  
  /* Configuration of ADC parameters if previous preliminary actions are      */ 
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8005d50:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005d52:	06db      	lsls	r3, r3, #27
 8005d54:	f100 808e 	bmi.w	8005e74 <HAL_ADC_Init+0x13c>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8005d58:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005d5a:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 8005d5e:	f023 0302 	bic.w	r3, r3, #2
 8005d62:	f043 0302 	orr.w	r3, r3, #2
 8005d66:	6423      	str	r3, [r4, #64]	; 0x40
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
  
  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 8005d68:	4b44      	ldr	r3, [pc, #272]	; (8005e7c <HAL_ADC_Init+0x144>)
 8005d6a:	685a      	ldr	r2, [r3, #4]
 8005d6c:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8005d70:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 8005d72:	685a      	ldr	r2, [r3, #4]
 8005d74:	6861      	ldr	r1, [r4, #4]
 8005d76:	430a      	orrs	r2, r1
 8005d78:	605a      	str	r2, [r3, #4]
  
  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8005d7a:	6823      	ldr	r3, [r4, #0]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8005d7c:	6921      	ldr	r1, [r4, #16]
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8005d7e:	685a      	ldr	r2, [r3, #4]
 8005d80:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8005d84:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8005d86:	685a      	ldr	r2, [r3, #4]
 8005d88:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8005d8c:	605a      	str	r2, [r3, #4]
  
  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 8005d8e:	685a      	ldr	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8005d90:	68a1      	ldr	r1, [r4, #8]
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 8005d92:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8005d96:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8005d98:	685a      	ldr	r2, [r3, #4]
 8005d9a:	430a      	orrs	r2, r1
 8005d9c:	605a      	str	r2, [r3, #4]
  
  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8005d9e:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8005da0:	68e1      	ldr	r1, [r4, #12]
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8005da2:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005da6:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8005da8:	689a      	ldr	r2, [r3, #8]
 8005daa:	430a      	orrs	r2, r1
 8005dac:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8005dae:	4934      	ldr	r1, [pc, #208]	; (8005e80 <HAL_ADC_Init+0x148>)
 8005db0:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8005db2:	428a      	cmp	r2, r1
 8005db4:	d052      	beq.n	8005e5c <HAL_ADC_Init+0x124>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8005db6:	6899      	ldr	r1, [r3, #8]
 8005db8:	f021 6170 	bic.w	r1, r1, #251658240	; 0xf000000
 8005dbc:	6099      	str	r1, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 8005dbe:	6899      	ldr	r1, [r3, #8]
 8005dc0:	430a      	orrs	r2, r1
 8005dc2:	609a      	str	r2, [r3, #8]
    
    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8005dc4:	689a      	ldr	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 8005dc6:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8005dc8:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8005dcc:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 8005dce:	689a      	ldr	r2, [r3, #8]
 8005dd0:	430a      	orrs	r2, r1
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8005dd2:	609a      	str	r2, [r3, #8]
  }
  
  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 8005dd4:	689a      	ldr	r2, [r3, #8]
 8005dd6:	f022 0202 	bic.w	r2, r2, #2
 8005dda:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 8005ddc:	689a      	ldr	r2, [r3, #8]
 8005dde:	7e21      	ldrb	r1, [r4, #24]
 8005de0:	ea42 0241 	orr.w	r2, r2, r1, lsl #1
 8005de4:	609a      	str	r2, [r3, #8]
  
  if(hadc->Init.DiscontinuousConvMode != DISABLE)
 8005de6:	f894 2020 	ldrb.w	r2, [r4, #32]
 8005dea:	2a00      	cmp	r2, #0
 8005dec:	d03e      	beq.n	8005e6c <HAL_ADC_Init+0x134>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
  
    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8005dee:	685a      	ldr	r2, [r3, #4]
    
    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8005df0:	6a61      	ldr	r1, [r4, #36]	; 0x24
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8005df2:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8005df6:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 8005df8:	685a      	ldr	r2, [r3, #4]
 8005dfa:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 8005dfe:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8005e00:	685a      	ldr	r2, [r3, #4]
 8005e02:	3901      	subs	r1, #1
 8005e04:	ea42 3241 	orr.w	r2, r2, r1, lsl #13
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8005e08:	605a      	str	r2, [r3, #4]
  }
  
  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8005e0a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8005e0c:	69e1      	ldr	r1, [r4, #28]
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8005e0e:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8005e12:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8005e14:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005e16:	3901      	subs	r1, #1
 8005e18:	ea42 5201 	orr.w	r2, r2, r1, lsl #20
 8005e1c:	62da      	str	r2, [r3, #44]	; 0x2c
  
  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 8005e1e:	689a      	ldr	r2, [r3, #8]
 8005e20:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8005e24:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 8005e26:	689a      	ldr	r2, [r3, #8]
 8005e28:	f894 1030 	ldrb.w	r1, [r4, #48]	; 0x30
 8005e2c:	ea42 2241 	orr.w	r2, r2, r1, lsl #9
 8005e30:	609a      	str	r2, [r3, #8]
  
  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 8005e32:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8005e34:	6961      	ldr	r1, [r4, #20]
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 8005e36:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005e3a:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8005e3c:	689a      	ldr	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 8005e3e:	2000      	movs	r0, #0
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8005e40:	ea42 2281 	orr.w	r2, r2, r1, lsl #10
 8005e44:	609a      	str	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 8005e46:	6460      	str	r0, [r4, #68]	; 0x44
    ADC_STATE_CLR_SET(hadc->State,
 8005e48:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005e4a:	f023 0303 	bic.w	r3, r3, #3
 8005e4e:	f043 0301 	orr.w	r3, r3, #1
 8005e52:	6423      	str	r3, [r4, #64]	; 0x40
  __HAL_UNLOCK(hadc);
 8005e54:	2300      	movs	r3, #0
 8005e56:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
}
 8005e5a:	bd38      	pop	{r3, r4, r5, pc}
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8005e5c:	689a      	ldr	r2, [r3, #8]
 8005e5e:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8005e62:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8005e64:	689a      	ldr	r2, [r3, #8]
 8005e66:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8005e6a:	e7b2      	b.n	8005dd2 <HAL_ADC_Init+0x9a>
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8005e6c:	685a      	ldr	r2, [r3, #4]
 8005e6e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005e72:	e7c9      	b.n	8005e08 <HAL_ADC_Init+0xd0>
    tmp_hal_status = HAL_ERROR;
 8005e74:	2001      	movs	r0, #1
 8005e76:	e7ed      	b.n	8005e54 <HAL_ADC_Init+0x11c>
    return HAL_ERROR;
 8005e78:	2001      	movs	r0, #1
 8005e7a:	e7ee      	b.n	8005e5a <HAL_ADC_Init+0x122>
 8005e7c:	40012300 	.word	0x40012300
 8005e80:	0f000001 	.word	0x0f000001

08005e84 <HAL_ADC_Start>:
{
 8005e84:	b082      	sub	sp, #8
  __IO uint32_t counter = 0U;
 8005e86:	2300      	movs	r3, #0
 8005e88:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 8005e8a:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8005e8e:	2b01      	cmp	r3, #1
 8005e90:	d060      	beq.n	8005f54 <HAL_ADC_Start+0xd0>
 8005e92:	2301      	movs	r3, #1
 8005e94:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 8005e98:	6803      	ldr	r3, [r0, #0]
 8005e9a:	689a      	ldr	r2, [r3, #8]
 8005e9c:	07d2      	lsls	r2, r2, #31
 8005e9e:	d505      	bpl.n	8005eac <HAL_ADC_Start+0x28>
  if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 8005ea0:	689a      	ldr	r2, [r3, #8]
 8005ea2:	07d1      	lsls	r1, r2, #31
 8005ea4:	d414      	bmi.n	8005ed0 <HAL_ADC_Start+0x4c>
  return HAL_OK;
 8005ea6:	2000      	movs	r0, #0
}
 8005ea8:	b002      	add	sp, #8
 8005eaa:	4770      	bx	lr
    __HAL_ADC_ENABLE(hadc);
 8005eac:	689a      	ldr	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8005eae:	492a      	ldr	r1, [pc, #168]	; (8005f58 <HAL_ADC_Start+0xd4>)
    __HAL_ADC_ENABLE(hadc);
 8005eb0:	f042 0201 	orr.w	r2, r2, #1
 8005eb4:	609a      	str	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8005eb6:	4a29      	ldr	r2, [pc, #164]	; (8005f5c <HAL_ADC_Start+0xd8>)
 8005eb8:	6812      	ldr	r2, [r2, #0]
 8005eba:	fbb2 f2f1 	udiv	r2, r2, r1
 8005ebe:	eb02 0242 	add.w	r2, r2, r2, lsl #1
      counter--;
 8005ec2:	9201      	str	r2, [sp, #4]
    while(counter != 0U)
 8005ec4:	9a01      	ldr	r2, [sp, #4]
 8005ec6:	2a00      	cmp	r2, #0
 8005ec8:	d0ea      	beq.n	8005ea0 <HAL_ADC_Start+0x1c>
      counter--;
 8005eca:	9a01      	ldr	r2, [sp, #4]
 8005ecc:	3a01      	subs	r2, #1
 8005ece:	e7f8      	b.n	8005ec2 <HAL_ADC_Start+0x3e>
    ADC_STATE_CLR_SET(hadc->State,
 8005ed0:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8005ed2:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8005ed6:	f022 0201 	bic.w	r2, r2, #1
 8005eda:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005ede:	6402      	str	r2, [r0, #64]	; 0x40
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 8005ee0:	685a      	ldr	r2, [r3, #4]
 8005ee2:	0552      	lsls	r2, r2, #21
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 8005ee4:	bf41      	itttt	mi
 8005ee6:	6c02      	ldrmi	r2, [r0, #64]	; 0x40
 8005ee8:	f422 5240 	bicmi.w	r2, r2, #12288	; 0x3000
 8005eec:	f442 5280 	orrmi.w	r2, r2, #4096	; 0x1000
 8005ef0:	6402      	strmi	r2, [r0, #64]	; 0x40
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8005ef2:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8005ef4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 8005ef8:	bf1c      	itt	ne
 8005efa:	6c42      	ldrne	r2, [r0, #68]	; 0x44
 8005efc:	f022 0206 	bicne.w	r2, r2, #6
      ADC_CLEAR_ERRORCODE(hadc);
 8005f00:	6442      	str	r2, [r0, #68]	; 0x44
    __HAL_UNLOCK(hadc);
 8005f02:	2200      	movs	r2, #0
 8005f04:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 8005f08:	f06f 0222 	mvn.w	r2, #34	; 0x22
 8005f0c:	601a      	str	r2, [r3, #0]
    if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 8005f0e:	4a14      	ldr	r2, [pc, #80]	; (8005f60 <HAL_ADC_Start+0xdc>)
 8005f10:	6851      	ldr	r1, [r2, #4]
 8005f12:	f011 0f1f 	tst.w	r1, #31
 8005f16:	4913      	ldr	r1, [pc, #76]	; (8005f64 <HAL_ADC_Start+0xe0>)
 8005f18:	d119      	bne.n	8005f4e <HAL_ADC_Start+0xca>
      if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 8005f1a:	428b      	cmp	r3, r1
 8005f1c:	d007      	beq.n	8005f2e <HAL_ADC_Start+0xaa>
 8005f1e:	f501 7180 	add.w	r1, r1, #256	; 0x100
 8005f22:	428b      	cmp	r3, r1
 8005f24:	d10c      	bne.n	8005f40 <HAL_ADC_Start+0xbc>
 8005f26:	6852      	ldr	r2, [r2, #4]
 8005f28:	f012 0f1f 	tst.w	r2, #31
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8005f2c:	d1bb      	bne.n	8005ea6 <HAL_ADC_Start+0x22>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8005f2e:	6898      	ldr	r0, [r3, #8]
 8005f30:	f010 5040 	ands.w	r0, r0, #805306368	; 0x30000000
 8005f34:	d1b7      	bne.n	8005ea6 <HAL_ADC_Start+0x22>
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8005f36:	689a      	ldr	r2, [r3, #8]
 8005f38:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8005f3c:	609a      	str	r2, [r3, #8]
 8005f3e:	e7b3      	b.n	8005ea8 <HAL_ADC_Start+0x24>
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8005f40:	4909      	ldr	r1, [pc, #36]	; (8005f68 <HAL_ADC_Start+0xe4>)
 8005f42:	428b      	cmp	r3, r1
 8005f44:	d1af      	bne.n	8005ea6 <HAL_ADC_Start+0x22>
 8005f46:	6852      	ldr	r2, [r2, #4]
 8005f48:	f012 0f10 	tst.w	r2, #16
 8005f4c:	e7ee      	b.n	8005f2c <HAL_ADC_Start+0xa8>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8005f4e:	428b      	cmp	r3, r1
 8005f50:	d1a9      	bne.n	8005ea6 <HAL_ADC_Start+0x22>
 8005f52:	e7ec      	b.n	8005f2e <HAL_ADC_Start+0xaa>
  __HAL_LOCK(hadc);
 8005f54:	2002      	movs	r0, #2
 8005f56:	e7a7      	b.n	8005ea8 <HAL_ADC_Start+0x24>
 8005f58:	000f4240 	.word	0x000f4240
 8005f5c:	2000007c 	.word	0x2000007c
 8005f60:	40012300 	.word	0x40012300
 8005f64:	40012000 	.word	0x40012000
 8005f68:	40012200 	.word	0x40012200

08005f6c <HAL_ADC_GetValue>:
  return hadc->Instance->DR;
 8005f6c:	6803      	ldr	r3, [r0, #0]
 8005f6e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
}
 8005f70:	4770      	bx	lr
	...

08005f74 <HAL_ADC_ConfigChannel>:
{
 8005f74:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  __IO uint32_t counter = 0U;
 8005f76:	2300      	movs	r3, #0
 8005f78:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 8005f7a:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8005f7e:	2b01      	cmp	r3, #1
 8005f80:	d069      	beq.n	8006056 <HAL_ADC_ConfigChannel+0xe2>
 8005f82:	2301      	movs	r3, #1
 8005f84:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  if (sConfig->Channel > ADC_CHANNEL_9)
 8005f88:	680d      	ldr	r5, [r1, #0]
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8005f8a:	6803      	ldr	r3, [r0, #0]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8005f8c:	688e      	ldr	r6, [r1, #8]
  if (sConfig->Channel > ADC_CHANNEL_9)
 8005f8e:	2d09      	cmp	r5, #9
 8005f90:	b2ac      	uxth	r4, r5
 8005f92:	d934      	bls.n	8005ffe <HAL_ADC_ConfigChannel+0x8a>
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8005f94:	eb04 0244 	add.w	r2, r4, r4, lsl #1
 8005f98:	68df      	ldr	r7, [r3, #12]
 8005f9a:	3a1e      	subs	r2, #30
 8005f9c:	f04f 0c07 	mov.w	ip, #7
 8005fa0:	fa0c fc02 	lsl.w	ip, ip, r2
 8005fa4:	ea27 070c 	bic.w	r7, r7, ip
 8005fa8:	60df      	str	r7, [r3, #12]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8005faa:	68df      	ldr	r7, [r3, #12]
 8005fac:	fa06 f202 	lsl.w	r2, r6, r2
 8005fb0:	433a      	orrs	r2, r7
 8005fb2:	60da      	str	r2, [r3, #12]
  if (sConfig->Rank < 7U)
 8005fb4:	6849      	ldr	r1, [r1, #4]
 8005fb6:	2906      	cmp	r1, #6
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8005fb8:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  if (sConfig->Rank < 7U)
 8005fbc:	d82f      	bhi.n	800601e <HAL_ADC_ConfigChannel+0xaa>
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8005fbe:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8005fc0:	3a05      	subs	r2, #5
 8005fc2:	261f      	movs	r6, #31
 8005fc4:	4096      	lsls	r6, r2
 8005fc6:	ea21 0106 	bic.w	r1, r1, r6
 8005fca:	6359      	str	r1, [r3, #52]	; 0x34
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 8005fcc:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8005fce:	fa04 f202 	lsl.w	r2, r4, r2
 8005fd2:	430a      	orrs	r2, r1
 8005fd4:	635a      	str	r2, [r3, #52]	; 0x34
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 8005fd6:	4a30      	ldr	r2, [pc, #192]	; (8006098 <HAL_ADC_ConfigChannel+0x124>)
 8005fd8:	4293      	cmp	r3, r2
 8005fda:	d10a      	bne.n	8005ff2 <HAL_ADC_ConfigChannel+0x7e>
 8005fdc:	2d12      	cmp	r5, #18
 8005fde:	d13c      	bne.n	800605a <HAL_ADC_ConfigChannel+0xe6>
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 8005fe0:	4b2e      	ldr	r3, [pc, #184]	; (800609c <HAL_ADC_ConfigChannel+0x128>)
 8005fe2:	685a      	ldr	r2, [r3, #4]
 8005fe4:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8005fe8:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 8005fea:	685a      	ldr	r2, [r3, #4]
 8005fec:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8005ff0:	605a      	str	r2, [r3, #4]
  __HAL_UNLOCK(hadc);
 8005ff2:	2300      	movs	r3, #0
 8005ff4:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  return HAL_OK;
 8005ff8:	4618      	mov	r0, r3
}
 8005ffa:	b003      	add	sp, #12
 8005ffc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 8005ffe:	691f      	ldr	r7, [r3, #16]
 8006000:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 8006004:	f04f 0c07 	mov.w	ip, #7
 8006008:	fa0c fc02 	lsl.w	ip, ip, r2
 800600c:	ea27 070c 	bic.w	r7, r7, ip
 8006010:	611f      	str	r7, [r3, #16]
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 8006012:	691f      	ldr	r7, [r3, #16]
 8006014:	fa06 f202 	lsl.w	r2, r6, r2
 8006018:	433a      	orrs	r2, r7
 800601a:	611a      	str	r2, [r3, #16]
 800601c:	e7ca      	b.n	8005fb4 <HAL_ADC_ConfigChannel+0x40>
  else if (sConfig->Rank < 13U)
 800601e:	290c      	cmp	r1, #12
 8006020:	f04f 011f 	mov.w	r1, #31
 8006024:	d80b      	bhi.n	800603e <HAL_ADC_ConfigChannel+0xca>
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 8006026:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 8006028:	3a23      	subs	r2, #35	; 0x23
 800602a:	4091      	lsls	r1, r2
 800602c:	ea26 0101 	bic.w	r1, r6, r1
 8006030:	6319      	str	r1, [r3, #48]	; 0x30
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 8006032:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8006034:	fa04 f202 	lsl.w	r2, r4, r2
 8006038:	430a      	orrs	r2, r1
 800603a:	631a      	str	r2, [r3, #48]	; 0x30
 800603c:	e7cb      	b.n	8005fd6 <HAL_ADC_ConfigChannel+0x62>
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 800603e:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8006040:	3a41      	subs	r2, #65	; 0x41
 8006042:	4091      	lsls	r1, r2
 8006044:	ea26 0101 	bic.w	r1, r6, r1
 8006048:	62d9      	str	r1, [r3, #44]	; 0x2c
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 800604a:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800604c:	fa04 f202 	lsl.w	r2, r4, r2
 8006050:	430a      	orrs	r2, r1
 8006052:	62da      	str	r2, [r3, #44]	; 0x2c
 8006054:	e7bf      	b.n	8005fd6 <HAL_ADC_ConfigChannel+0x62>
  __HAL_LOCK(hadc);
 8006056:	2002      	movs	r0, #2
 8006058:	e7cf      	b.n	8005ffa <HAL_ADC_ConfigChannel+0x86>
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 800605a:	4b11      	ldr	r3, [pc, #68]	; (80060a0 <HAL_ADC_ConfigChannel+0x12c>)
 800605c:	429d      	cmp	r5, r3
 800605e:	d001      	beq.n	8006064 <HAL_ADC_ConfigChannel+0xf0>
 8006060:	2d11      	cmp	r5, #17
 8006062:	d1c6      	bne.n	8005ff2 <HAL_ADC_ConfigChannel+0x7e>
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 8006064:	4b0d      	ldr	r3, [pc, #52]	; (800609c <HAL_ADC_ConfigChannel+0x128>)
 8006066:	685a      	ldr	r2, [r3, #4]
 8006068:	f422 0280 	bic.w	r2, r2, #4194304	; 0x400000
 800606c:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 800606e:	685a      	ldr	r2, [r3, #4]
 8006070:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8006074:	605a      	str	r2, [r3, #4]
    if((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR))
 8006076:	4b0a      	ldr	r3, [pc, #40]	; (80060a0 <HAL_ADC_ConfigChannel+0x12c>)
 8006078:	429d      	cmp	r5, r3
 800607a:	d1ba      	bne.n	8005ff2 <HAL_ADC_ConfigChannel+0x7e>
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 800607c:	4b09      	ldr	r3, [pc, #36]	; (80060a4 <HAL_ADC_ConfigChannel+0x130>)
 800607e:	4a0a      	ldr	r2, [pc, #40]	; (80060a8 <HAL_ADC_ConfigChannel+0x134>)
 8006080:	681b      	ldr	r3, [r3, #0]
 8006082:	fbb3 f3f2 	udiv	r3, r3, r2
 8006086:	220a      	movs	r2, #10
 8006088:	4353      	muls	r3, r2
        counter--;
 800608a:	9301      	str	r3, [sp, #4]
      while(counter != 0U)
 800608c:	9b01      	ldr	r3, [sp, #4]
 800608e:	2b00      	cmp	r3, #0
 8006090:	d0af      	beq.n	8005ff2 <HAL_ADC_ConfigChannel+0x7e>
        counter--;
 8006092:	9b01      	ldr	r3, [sp, #4]
 8006094:	3b01      	subs	r3, #1
 8006096:	e7f8      	b.n	800608a <HAL_ADC_ConfigChannel+0x116>
 8006098:	40012000 	.word	0x40012000
 800609c:	40012300 	.word	0x40012300
 80060a0:	10000012 	.word	0x10000012
 80060a4:	2000007c 	.word	0x2000007c
 80060a8:	000f4240 	.word	0x000f4240

080060ac <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80060ac:	4907      	ldr	r1, [pc, #28]	; (80060cc <HAL_NVIC_SetPriorityGrouping+0x20>)
 80060ae:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80060b0:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80060b4:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80060b6:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80060b8:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80060bc:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80060be:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80060c0:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80060c4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 80060c8:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80060ca:	4770      	bx	lr
 80060cc:	e000ed00 	.word	0xe000ed00

080060d0 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80060d0:	4b16      	ldr	r3, [pc, #88]	; (800612c <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80060d2:	b530      	push	{r4, r5, lr}
 80060d4:	68dc      	ldr	r4, [r3, #12]
 80060d6:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80060da:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80060de:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80060e0:	2d04      	cmp	r5, #4
 80060e2:	bf28      	it	cs
 80060e4:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80060e6:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80060e8:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80060ec:	bf8c      	ite	hi
 80060ee:	3c03      	subhi	r4, #3
 80060f0:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80060f2:	fa03 f505 	lsl.w	r5, r3, r5
 80060f6:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80060fa:	40a3      	lsls	r3, r4
 80060fc:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8006100:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 8006102:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8006104:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006108:	bfac      	ite	ge
 800610a:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800610e:	4a08      	ldrlt	r2, [pc, #32]	; (8006130 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006110:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006114:	bfb8      	it	lt
 8006116:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800611a:	b2db      	uxtb	r3, r3
 800611c:	bfaa      	itet	ge
 800611e:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006122:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006124:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8006128:	bd30      	pop	{r4, r5, pc}
 800612a:	bf00      	nop
 800612c:	e000ed00 	.word	0xe000ed00
 8006130:	e000ed14 	.word	0xe000ed14

08006134 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8006134:	2800      	cmp	r0, #0
 8006136:	db08      	blt.n	800614a <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8006138:	0942      	lsrs	r2, r0, #5
 800613a:	2301      	movs	r3, #1
 800613c:	f000 001f 	and.w	r0, r0, #31
 8006140:	fa03 f000 	lsl.w	r0, r3, r0
 8006144:	4b01      	ldr	r3, [pc, #4]	; (800614c <HAL_NVIC_EnableIRQ+0x18>)
 8006146:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800614a:	4770      	bx	lr
 800614c:	e000e100 	.word	0xe000e100

08006150 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8006150:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8006152:	4604      	mov	r4, r0
 8006154:	b150      	cbz	r0, 800616c <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8006156:	7943      	ldrb	r3, [r0, #5]
 8006158:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800615c:	b913      	cbnz	r3, 8006164 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 800615e:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8006160:	f7fb fd1c 	bl	8001b9c <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8006164:	2301      	movs	r3, #1
 8006166:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8006168:	2000      	movs	r0, #0
}
 800616a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800616c:	2001      	movs	r0, #1
 800616e:	e7fc      	b.n	800616a <HAL_CRC_Init+0x1a>

08006170 <HAL_DAC_Init>:
  * @param  hdac pointer to a DAC_HandleTypeDef structure that contains
  *         the configuration information for the specified DAC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_Init(DAC_HandleTypeDef* hdac)
{ 
 8006170:	b510      	push	{r4, lr}
  /* Check DAC handle */
  if(hdac == NULL)
 8006172:	4604      	mov	r4, r0
 8006174:	b168      	cbz	r0, 8006192 <HAL_DAC_Init+0x22>
     return HAL_ERROR;
  }
  /* Check the parameters */
  assert_param(IS_DAC_ALL_INSTANCE(hdac->Instance));
  
  if(hdac->State == HAL_DAC_STATE_RESET)
 8006176:	7903      	ldrb	r3, [r0, #4]
 8006178:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800617c:	b913      	cbnz	r3, 8006184 <HAL_DAC_Init+0x14>
    {
      hdac->MspInitCallback               = HAL_DAC_MspInit;
    }
#endif /* USE_HAL_DAC_REGISTER_CALLBACKS */
    /* Allocate lock resource and initialize it */
    hdac->Lock = HAL_UNLOCKED;
 800617e:	7142      	strb	r2, [r0, #5]
#if (USE_HAL_DAC_REGISTER_CALLBACKS == 1)
    /* Init the low level hardware */
    hdac->MspInitCallback(hdac);
#else
    /* Init the low level hardware */
    HAL_DAC_MspInit(hdac);
 8006180:	f7fb fd24 	bl	8001bcc <HAL_DAC_MspInit>
#endif /* USE_HAL_DAC_REGISTER_CALLBACKS */
  }
  
  /* Initialize the DAC state*/
  hdac->State = HAL_DAC_STATE_BUSY;
 8006184:	2302      	movs	r3, #2
 8006186:	7123      	strb	r3, [r4, #4]
  
  /* Set DAC error code to none */
  hdac->ErrorCode = HAL_DAC_ERROR_NONE;
 8006188:	2000      	movs	r0, #0
  
  /* Initialize the DAC state*/
  hdac->State = HAL_DAC_STATE_READY;
 800618a:	2301      	movs	r3, #1
  hdac->ErrorCode = HAL_DAC_ERROR_NONE;
 800618c:	6120      	str	r0, [r4, #16]
  hdac->State = HAL_DAC_STATE_READY;
 800618e:	7123      	strb	r3, [r4, #4]
  
  /* Return function status */
  return HAL_OK;
}
 8006190:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 8006192:	2001      	movs	r0, #1
 8006194:	e7fc      	b.n	8006190 <HAL_DAC_Init+0x20>

08006196 <HAL_DAC_Start>:
  *            @arg DAC_CHANNEL_1: DAC Channel1 selected
  *            @arg DAC_CHANNEL_2: DAC Channel2 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_Start(DAC_HandleTypeDef* hdac, uint32_t Channel)
{
 8006196:	b510      	push	{r4, lr}
  
  /* Check the parameters */
  assert_param(IS_DAC_CHANNEL(Channel));
  
  /* Process locked */
  __HAL_LOCK(hdac);
 8006198:	7943      	ldrb	r3, [r0, #5]
 800619a:	2b01      	cmp	r3, #1
 800619c:	f04f 0302 	mov.w	r3, #2
 80061a0:	d017      	beq.n	80061d2 <HAL_DAC_Start+0x3c>
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_BUSY;
 80061a2:	7103      	strb	r3, [r0, #4]
  
  /* Enable the Peripheral */
  __HAL_DAC_ENABLE(hdac, Channel);
 80061a4:	6803      	ldr	r3, [r0, #0]
 80061a6:	2201      	movs	r2, #1
 80061a8:	681c      	ldr	r4, [r3, #0]
 80061aa:	408a      	lsls	r2, r1
 80061ac:	4322      	orrs	r2, r4
 80061ae:	601a      	str	r2, [r3, #0]
  
  if(Channel == DAC_CHANNEL_1)
 80061b0:	b989      	cbnz	r1, 80061d6 <HAL_DAC_Start+0x40>
  {
    tmp1 = hdac->Instance->CR & DAC_CR_TEN1;
 80061b2:	6819      	ldr	r1, [r3, #0]
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL1;
 80061b4:	681a      	ldr	r2, [r3, #0]
    /* Check if software trigger enabled */
    if((tmp1 ==  DAC_CR_TEN1) && (tmp2 ==  DAC_CR_TSEL1))
 80061b6:	074c      	lsls	r4, r1, #29
 80061b8:	d507      	bpl.n	80061ca <HAL_DAC_Start+0x34>
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL1;
 80061ba:	f002 0238 	and.w	r2, r2, #56	; 0x38
    if((tmp1 ==  DAC_CR_TEN1) && (tmp2 ==  DAC_CR_TSEL1))
 80061be:	2a38      	cmp	r2, #56	; 0x38
 80061c0:	d103      	bne.n	80061ca <HAL_DAC_Start+0x34>
    {
      /* Enable the selected DAC software conversion */
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG1;
 80061c2:	685a      	ldr	r2, [r3, #4]
 80061c4:	f042 0201 	orr.w	r2, r2, #1
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
    /* Check if software trigger enabled */
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
    {
      /* Enable the selected DAC software conversion*/
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG2;
 80061c8:	605a      	str	r2, [r3, #4]
    }
  }
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_READY;
 80061ca:	2301      	movs	r3, #1
 80061cc:	7103      	strb	r3, [r0, #4]
  
  /* Process unlocked */
  __HAL_UNLOCK(hdac);
 80061ce:	2300      	movs	r3, #0
 80061d0:	7143      	strb	r3, [r0, #5]
  __HAL_LOCK(hdac);
 80061d2:	4618      	mov	r0, r3
    
  /* Return function status */
  return HAL_OK;
}
 80061d4:	bd10      	pop	{r4, pc}
    tmp1 = hdac->Instance->CR & DAC_CR_TEN2;
 80061d6:	6819      	ldr	r1, [r3, #0]
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
 80061d8:	681a      	ldr	r2, [r3, #0]
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
 80061da:	0349      	lsls	r1, r1, #13
 80061dc:	d5f5      	bpl.n	80061ca <HAL_DAC_Start+0x34>
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
 80061de:	f402 1260 	and.w	r2, r2, #3670016	; 0x380000
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
 80061e2:	f5b2 1f60 	cmp.w	r2, #3670016	; 0x380000
 80061e6:	d1f0      	bne.n	80061ca <HAL_DAC_Start+0x34>
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG2;
 80061e8:	685a      	ldr	r2, [r3, #4]
 80061ea:	f042 0202 	orr.w	r2, r2, #2
 80061ee:	e7eb      	b.n	80061c8 <HAL_DAC_Start+0x32>

080061f0 <HAL_DAC_ConfigChannel>:
  *            @arg DAC_CHANNEL_1: DAC Channel1 selected
  *            @arg DAC_CHANNEL_2: DAC Channel2 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_ConfigChannel(DAC_HandleTypeDef* hdac, DAC_ChannelConfTypeDef* sConfig, uint32_t Channel)
{
 80061f0:	b530      	push	{r4, r5, lr}
  assert_param(IS_DAC_TRIGGER(sConfig->DAC_Trigger));
  assert_param(IS_DAC_OUTPUT_BUFFER_STATE(sConfig->DAC_OutputBuffer));
  assert_param(IS_DAC_CHANNEL(Channel));
  
  /* Process locked */
  __HAL_LOCK(hdac);
 80061f2:	7943      	ldrb	r3, [r0, #5]
 80061f4:	2b01      	cmp	r3, #1
 80061f6:	f04f 0302 	mov.w	r3, #2
 80061fa:	d018      	beq.n	800622e <HAL_DAC_ConfigChannel+0x3e>
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_BUSY;
  
  /* Get the DAC CR value */
  tmpreg1 = hdac->Instance->CR;
 80061fc:	6804      	ldr	r4, [r0, #0]
  hdac->State = HAL_DAC_STATE_BUSY;
 80061fe:	7103      	strb	r3, [r0, #4]
  tmpreg1 = hdac->Instance->CR;
 8006200:	6823      	ldr	r3, [r4, #0]
  /* Clear BOFFx, TENx, TSELx, WAVEx and MAMPx bits */
  tmpreg1 &= ~(((uint32_t)(DAC_CR_MAMP1 | DAC_CR_WAVE1 | DAC_CR_TSEL1 | DAC_CR_TEN1 | DAC_CR_BOFF1)) << Channel);
 8006202:	f640 75fe 	movw	r5, #4094	; 0xffe
 8006206:	4095      	lsls	r5, r2
 8006208:	ea23 0505 	bic.w	r5, r3, r5
  /* Configure for the selected DAC channel: buffer output, trigger */
  /* Set TSELx and TENx bits according to DAC_Trigger value */
  /* Set BOFFx bit according to DAC_OutputBuffer value */   
  tmpreg2 = (sConfig->DAC_Trigger | sConfig->DAC_OutputBuffer);
 800620c:	e9d1 3100 	ldrd	r3, r1, [r1]
 8006210:	430b      	orrs	r3, r1
  /* Calculate CR register value depending on DAC_Channel */
  tmpreg1 |= tmpreg2 << Channel;
 8006212:	4093      	lsls	r3, r2
 8006214:	432b      	orrs	r3, r5
  /* Write to DAC CR */
  hdac->Instance->CR = tmpreg1;
 8006216:	6023      	str	r3, [r4, #0]
  /* Disable wave generation */
  hdac->Instance->CR &= ~(DAC_CR_WAVE1 << Channel);
 8006218:	6823      	ldr	r3, [r4, #0]
 800621a:	21c0      	movs	r1, #192	; 0xc0
 800621c:	fa01 f202 	lsl.w	r2, r1, r2
 8006220:	ea23 0202 	bic.w	r2, r3, r2
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_READY;
 8006224:	2301      	movs	r3, #1
  hdac->Instance->CR &= ~(DAC_CR_WAVE1 << Channel);
 8006226:	6022      	str	r2, [r4, #0]
  hdac->State = HAL_DAC_STATE_READY;
 8006228:	7103      	strb	r3, [r0, #4]
  
  /* Process unlocked */
  __HAL_UNLOCK(hdac);
 800622a:	2300      	movs	r3, #0
 800622c:	7143      	strb	r3, [r0, #5]
  __HAL_LOCK(hdac);
 800622e:	4618      	mov	r0, r3
  
  /* Return function status */
  return HAL_OK;
}
 8006230:	bd30      	pop	{r4, r5, pc}

08006232 <HAL_DAC_SetValue>:
  *            @arg DAC_ALIGN_12B_R: 12bit right data alignment selected
  * @param  Data Data to be loaded in the selected data holding register.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_SetValue(DAC_HandleTypeDef* hdac, uint32_t Channel, uint32_t Alignment, uint32_t Data)
{  
 8006232:	b513      	push	{r0, r1, r4, lr}
  /* Check the parameters */
  assert_param(IS_DAC_CHANNEL(Channel));
  assert_param(IS_DAC_ALIGN(Alignment));
  assert_param(IS_DAC_DATA(Data));
  
  tmp = (uint32_t)hdac->Instance; 
 8006234:	6800      	ldr	r0, [r0, #0]
  __IO uint32_t tmp = 0U;
 8006236:	2400      	movs	r4, #0
 8006238:	9401      	str	r4, [sp, #4]
  tmp = (uint32_t)hdac->Instance; 
 800623a:	9001      	str	r0, [sp, #4]
  if(Channel == DAC_CHANNEL_1)
 800623c:	b941      	cbnz	r1, 8006250 <HAL_DAC_SetValue+0x1e>
  {
    tmp += DAC_DHR12R1_ALIGNMENT(Alignment);
 800623e:	9901      	ldr	r1, [sp, #4]
 8006240:	3108      	adds	r1, #8
  }
  else
  {
    tmp += DAC_DHR12R2_ALIGNMENT(Alignment);
 8006242:	440a      	add	r2, r1
 8006244:	9201      	str	r2, [sp, #4]
  }

  /* Set the DAC channel1 selected data holding register */
  *(__IO uint32_t *) tmp = Data;
 8006246:	9a01      	ldr	r2, [sp, #4]
  
  /* Return function status */
  return HAL_OK;
}
 8006248:	2000      	movs	r0, #0
  *(__IO uint32_t *) tmp = Data;
 800624a:	6013      	str	r3, [r2, #0]
}
 800624c:	b002      	add	sp, #8
 800624e:	bd10      	pop	{r4, pc}
    tmp += DAC_DHR12R2_ALIGNMENT(Alignment);
 8006250:	9901      	ldr	r1, [sp, #4]
 8006252:	3114      	adds	r1, #20
 8006254:	e7f5      	b.n	8006242 <HAL_DAC_SetValue+0x10>

08006256 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8006256:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if(hdma2d == NULL)
 8006258:	4604      	mov	r4, r0
 800625a:	b330      	cbz	r0, 80062aa <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 800625c:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8006260:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006264:	b91b      	cbnz	r3, 800626e <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8006266:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 800626a:	f7fb fce1 	bl	8001c30 <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800626e:	6822      	ldr	r2, [r4, #0]
 8006270:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8006272:	2302      	movs	r3, #2
 8006274:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8006278:	6813      	ldr	r3, [r2, #0]
 800627a:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800627e:	430b      	orrs	r3, r1
 8006280:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8006282:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8006284:	68a1      	ldr	r1, [r4, #8]
 8006286:	f023 0307 	bic.w	r3, r3, #7
 800628a:	430b      	orrs	r3, r1
 800628c:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 800628e:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8006290:	68e1      	ldr	r1, [r4, #12]
 8006292:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8006296:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800629a:	430b      	orrs	r3, r1
 800629c:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800629e:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80062a0:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80062a2:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80062a4:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 80062a8:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 80062aa:	2001      	movs	r0, #1
 80062ac:	e7fc      	b.n	80062a8 <HAL_DMA2D_Init+0x52>

080062ae <HAL_DMA2D_LineEventCallback>:
 80062ae:	4770      	bx	lr

080062b0 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 80062b0:	4770      	bx	lr

080062b2 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80062b2:	6803      	ldr	r3, [r0, #0]
{
 80062b4:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80062b6:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 80062b8:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80062ba:	07f2      	lsls	r2, r6, #31
{
 80062bc:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80062be:	d514      	bpl.n	80062ea <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 80062c0:	05e9      	lsls	r1, r5, #23
 80062c2:	d512      	bpl.n	80062ea <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 80062c4:	681a      	ldr	r2, [r3, #0]
 80062c6:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80062ca:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 80062cc:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 80062ce:	f042 0201 	orr.w	r2, r2, #1
 80062d2:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 80062d4:	2201      	movs	r2, #1
 80062d6:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80062d8:	2304      	movs	r3, #4
 80062da:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80062de:	2300      	movs	r3, #0
 80062e0:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 80062e4:	6943      	ldr	r3, [r0, #20]
 80062e6:	b103      	cbz	r3, 80062ea <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80062e8:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 80062ea:	06b2      	lsls	r2, r6, #26
 80062ec:	d516      	bpl.n	800631c <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 80062ee:	04ab      	lsls	r3, r5, #18
 80062f0:	d514      	bpl.n	800631c <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 80062f2:	6823      	ldr	r3, [r4, #0]
 80062f4:	681a      	ldr	r2, [r3, #0]
 80062f6:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80062fa:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 80062fc:	2220      	movs	r2, #32
 80062fe:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8006300:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006302:	f043 0302 	orr.w	r3, r3, #2
 8006306:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8006308:	2304      	movs	r3, #4
 800630a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800630e:	2300      	movs	r3, #0
 8006310:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 8006314:	6963      	ldr	r3, [r4, #20]
 8006316:	b10b      	cbz	r3, 800631c <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8006318:	4620      	mov	r0, r4
 800631a:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 800631c:	0730      	lsls	r0, r6, #28
 800631e:	d516      	bpl.n	800634e <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8006320:	0529      	lsls	r1, r5, #20
 8006322:	d514      	bpl.n	800634e <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8006324:	6823      	ldr	r3, [r4, #0]
 8006326:	681a      	ldr	r2, [r3, #0]
 8006328:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800632c:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 800632e:	2208      	movs	r2, #8
 8006330:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8006332:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006334:	f043 0304 	orr.w	r3, r3, #4
 8006338:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800633a:	2304      	movs	r3, #4
 800633c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8006340:	2300      	movs	r3, #0
 8006342:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 8006346:	6963      	ldr	r3, [r4, #20]
 8006348:	b10b      	cbz	r3, 800634e <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800634a:	4620      	mov	r0, r4
 800634c:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 800634e:	0772      	lsls	r2, r6, #29
 8006350:	d50b      	bpl.n	800636a <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8006352:	056b      	lsls	r3, r5, #21
 8006354:	d509      	bpl.n	800636a <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8006356:	6823      	ldr	r3, [r4, #0]
 8006358:	681a      	ldr	r2, [r3, #0]
 800635a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800635e:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8006360:	2204      	movs	r2, #4
 8006362:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 8006364:	4620      	mov	r0, r4
 8006366:	f7ff ffa2 	bl	80062ae <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 800636a:	07b0      	lsls	r0, r6, #30
 800636c:	d514      	bpl.n	8006398 <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 800636e:	05a9      	lsls	r1, r5, #22
 8006370:	d512      	bpl.n	8006398 <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8006372:	6823      	ldr	r3, [r4, #0]
 8006374:	681a      	ldr	r2, [r3, #0]
 8006376:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800637a:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 800637c:	2202      	movs	r2, #2
 800637e:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8006380:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006382:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8006384:	2301      	movs	r3, #1
 8006386:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800638a:	2300      	movs	r3, #0
 800638c:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferCpltCallback != NULL)
 8006390:	6923      	ldr	r3, [r4, #16]
 8006392:	b10b      	cbz	r3, 8006398 <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 8006394:	4620      	mov	r0, r4
 8006396:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8006398:	06f2      	lsls	r2, r6, #27
 800639a:	d513      	bpl.n	80063c4 <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 800639c:	04eb      	lsls	r3, r5, #19
 800639e:	d511      	bpl.n	80063c4 <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 80063a0:	6823      	ldr	r3, [r4, #0]
 80063a2:	681a      	ldr	r2, [r3, #0]
 80063a4:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 80063a8:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 80063aa:	2210      	movs	r2, #16
 80063ac:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80063ae:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80063b0:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80063b2:	2301      	movs	r3, #1
 80063b4:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80063b8:	2300      	movs	r3, #0
 80063ba:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 80063be:	4620      	mov	r0, r4
 80063c0:	f7ff ff76 	bl	80062b0 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 80063c4:	bd70      	pop	{r4, r5, r6, pc}
	...

080063c8 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 80063c8:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 80063ca:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 80063ce:	2b01      	cmp	r3, #1
 80063d0:	f04f 0302 	mov.w	r3, #2
 80063d4:	d02b      	beq.n	800642e <HAL_DMA2D_ConfigLayer+0x66>
 80063d6:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80063d8:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 80063dc:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80063e0:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 80063e4:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 80063e8:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 80063ea:	4f18      	ldr	r7, [pc, #96]	; (800644c <HAL_DMA2D_ConfigLayer+0x84>)
 80063ec:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80063f0:	3c09      	subs	r4, #9
 80063f2:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 80063f4:	bf9c      	itt	ls
 80063f6:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 80063fa:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80063fc:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8006400:	6803      	ldr	r3, [r0, #0]
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8006402:	bf88      	it	hi
 8006404:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 8006408:	b999      	cbnz	r1, 8006432 <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800640a:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800640c:	4039      	ands	r1, r7
 800640e:	430a      	orrs	r2, r1
 8006410:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8006412:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8006414:	6982      	ldr	r2, [r0, #24]
 8006416:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8006418:	d803      	bhi.n	8006422 <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 800641a:	6a42      	ldr	r2, [r0, #36]	; 0x24
 800641c:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8006420:	629a      	str	r2, [r3, #40]	; 0x28
    {
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8006422:	2301      	movs	r3, #1
 8006424:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8006428:	2300      	movs	r3, #0
 800642a:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 800642e:	4618      	mov	r0, r3

  return HAL_OK;
}
 8006430:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8006432:	69d9      	ldr	r1, [r3, #28]
 8006434:	4039      	ands	r1, r7
 8006436:	430a      	orrs	r2, r1
 8006438:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800643a:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800643c:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800643e:	6992      	ldr	r2, [r2, #24]
 8006440:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 8006442:	bf9c      	itt	ls
 8006444:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 8006448:	621d      	strls	r5, [r3, #32]
 800644a:	e7ea      	b.n	8006422 <HAL_DMA2D_ConfigLayer+0x5a>
 800644c:	00fcfff0 	.word	0x00fcfff0

08006450 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8006450:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8006454:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8006618 <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8006458:	4a6d      	ldr	r2, [pc, #436]	; (8006610 <HAL_GPIO_Init+0x1c0>)
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800645a:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 800661c <HAL_GPIO_Init+0x1cc>
  for(position = 0U; position < GPIO_NUMBER; position++)
 800645e:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8006460:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 8006462:	2401      	movs	r4, #1
 8006464:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8006466:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 800646a:	43ac      	bics	r4, r5
 800646c:	f040 80b7 	bne.w	80065de <HAL_GPIO_Init+0x18e>
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8006470:	684c      	ldr	r4, [r1, #4]
 8006472:	f024 0c10 	bic.w	ip, r4, #16
 8006476:	ea4f 0e43 	mov.w	lr, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800647a:	2503      	movs	r5, #3
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 800647c:	f10c 37ff 	add.w	r7, ip, #4294967295
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8006480:	fa05 f50e 	lsl.w	r5, r5, lr
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8006484:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8006486:	ea6f 0505 	mvn.w	r5, r5
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 800648a:	d811      	bhi.n	80064b0 <HAL_GPIO_Init+0x60>
        temp = GPIOx->OSPEEDR; 
 800648c:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800648e:	ea07 0a05 	and.w	sl, r7, r5
        temp |= (GPIO_Init->Speed << (position * 2U));
 8006492:	68cf      	ldr	r7, [r1, #12]
 8006494:	fa07 f70e 	lsl.w	r7, r7, lr
 8006498:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 800649c:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800649e:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80064a0:	ea27 0a06 	bic.w	sl, r7, r6
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 80064a4:	f3c4 1700 	ubfx	r7, r4, #4, #1
 80064a8:	409f      	lsls	r7, r3
 80064aa:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OTYPER = temp;
 80064ae:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 80064b0:	68c7      	ldr	r7, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 80064b2:	ea07 0a05 	and.w	sl, r7, r5
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 80064b6:	688f      	ldr	r7, [r1, #8]
 80064b8:	fa07 f70e 	lsl.w	r7, r7, lr
 80064bc:	ea47 070a 	orr.w	r7, r7, sl
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80064c0:	f1bc 0f02 	cmp.w	ip, #2
      GPIOx->PUPDR = temp;
 80064c4:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80064c6:	d116      	bne.n	80064f6 <HAL_GPIO_Init+0xa6>
        temp = GPIOx->AFR[position >> 3U];
 80064c8:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 80064cc:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80064d0:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 80064d4:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80064d8:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 80064dc:	f04f 0c0f 	mov.w	ip, #15
 80064e0:	fa0c fc0b 	lsl.w	ip, ip, fp
 80064e4:	ea27 0c0c 	bic.w	ip, r7, ip
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80064e8:	690f      	ldr	r7, [r1, #16]
 80064ea:	fa07 f70b 	lsl.w	r7, r7, fp
 80064ee:	ea47 070c 	orr.w	r7, r7, ip
        GPIOx->AFR[position >> 3U] = temp;
 80064f2:	f8ca 7020 	str.w	r7, [sl, #32]
      temp = GPIOx->MODER;
 80064f6:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80064f8:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80064fa:	f004 0703 	and.w	r7, r4, #3
 80064fe:	fa07 f70e 	lsl.w	r7, r7, lr
 8006502:	433d      	orrs	r5, r7
      GPIOx->MODER = temp;
 8006504:	6005      	str	r5, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8006506:	00e5      	lsls	r5, r4, #3
 8006508:	d569      	bpl.n	80065de <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800650a:	f04f 0b00 	mov.w	fp, #0
 800650e:	f8cd b004 	str.w	fp, [sp, #4]
 8006512:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8006516:	4d3f      	ldr	r5, [pc, #252]	; (8006614 <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8006518:	f447 4780 	orr.w	r7, r7, #16384	; 0x4000
 800651c:	f8c8 7044 	str.w	r7, [r8, #68]	; 0x44
 8006520:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 8006524:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 8006528:	9701      	str	r7, [sp, #4]
 800652a:	9f01      	ldr	r7, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 800652c:	f023 0703 	bic.w	r7, r3, #3
 8006530:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8006534:	f507 379c 	add.w	r7, r7, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8006538:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 800653c:	f8d7 a008 	ldr.w	sl, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8006540:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8006544:	f04f 0c0f 	mov.w	ip, #15
 8006548:	fa0c fc0e 	lsl.w	ip, ip, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800654c:	42a8      	cmp	r0, r5
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800654e:	ea2a 0c0c 	bic.w	ip, sl, ip
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8006552:	d04b      	beq.n	80065ec <HAL_GPIO_Init+0x19c>
 8006554:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006558:	42a8      	cmp	r0, r5
 800655a:	d049      	beq.n	80065f0 <HAL_GPIO_Init+0x1a0>
 800655c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006560:	42a8      	cmp	r0, r5
 8006562:	d047      	beq.n	80065f4 <HAL_GPIO_Init+0x1a4>
 8006564:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006568:	42a8      	cmp	r0, r5
 800656a:	d045      	beq.n	80065f8 <HAL_GPIO_Init+0x1a8>
 800656c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006570:	42a8      	cmp	r0, r5
 8006572:	d043      	beq.n	80065fc <HAL_GPIO_Init+0x1ac>
 8006574:	4548      	cmp	r0, r9
 8006576:	d043      	beq.n	8006600 <HAL_GPIO_Init+0x1b0>
 8006578:	f505 6500 	add.w	r5, r5, #2048	; 0x800
 800657c:	42a8      	cmp	r0, r5
 800657e:	d041      	beq.n	8006604 <HAL_GPIO_Init+0x1b4>
 8006580:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006584:	42a8      	cmp	r0, r5
 8006586:	d03f      	beq.n	8006608 <HAL_GPIO_Init+0x1b8>
 8006588:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800658c:	42a8      	cmp	r0, r5
 800658e:	d03d      	beq.n	800660c <HAL_GPIO_Init+0x1bc>
 8006590:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006594:	42a8      	cmp	r0, r5
 8006596:	bf0c      	ite	eq
 8006598:	2509      	moveq	r5, #9
 800659a:	250a      	movne	r5, #10
 800659c:	fa05 f50e 	lsl.w	r5, r5, lr
 80065a0:	ea45 050c 	orr.w	r5, r5, ip
        SYSCFG->EXTICR[position >> 2U] = temp;
 80065a4:	60bd      	str	r5, [r7, #8]
        temp = EXTI->IMR;
 80065a6:	6815      	ldr	r5, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 80065a8:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 80065aa:	f414 3f80 	tst.w	r4, #65536	; 0x10000
        temp &= ~((uint32_t)iocurrent);
 80065ae:	bf0c      	ite	eq
 80065b0:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 80065b2:	4335      	orrne	r5, r6
        }
        EXTI->IMR = temp;
 80065b4:	6015      	str	r5, [r2, #0]

        temp = EXTI->EMR;
 80065b6:	6855      	ldr	r5, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 80065b8:	f414 3f00 	tst.w	r4, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 80065bc:	bf0c      	ite	eq
 80065be:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 80065c0:	4335      	orrne	r5, r6
        }
        EXTI->EMR = temp;
 80065c2:	6055      	str	r5, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80065c4:	6895      	ldr	r5, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 80065c6:	f414 1f80 	tst.w	r4, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 80065ca:	bf0c      	ite	eq
 80065cc:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 80065ce:	4335      	orrne	r5, r6
        }
        EXTI->RTSR = temp;
 80065d0:	6095      	str	r5, [r2, #8]

        temp = EXTI->FTSR;
 80065d2:	68d5      	ldr	r5, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 80065d4:	02a4      	lsls	r4, r4, #10
        temp &= ~((uint32_t)iocurrent);
 80065d6:	bf54      	ite	pl
 80065d8:	403d      	andpl	r5, r7
        {
          temp |= iocurrent;
 80065da:	4335      	orrmi	r5, r6
        }
        EXTI->FTSR = temp;
 80065dc:	60d5      	str	r5, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80065de:	3301      	adds	r3, #1
 80065e0:	2b10      	cmp	r3, #16
 80065e2:	f47f af3d 	bne.w	8006460 <HAL_GPIO_Init+0x10>
      }
    }
  }
}
 80065e6:	b003      	add	sp, #12
 80065e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80065ec:	465d      	mov	r5, fp
 80065ee:	e7d5      	b.n	800659c <HAL_GPIO_Init+0x14c>
 80065f0:	2501      	movs	r5, #1
 80065f2:	e7d3      	b.n	800659c <HAL_GPIO_Init+0x14c>
 80065f4:	2502      	movs	r5, #2
 80065f6:	e7d1      	b.n	800659c <HAL_GPIO_Init+0x14c>
 80065f8:	2503      	movs	r5, #3
 80065fa:	e7cf      	b.n	800659c <HAL_GPIO_Init+0x14c>
 80065fc:	2504      	movs	r5, #4
 80065fe:	e7cd      	b.n	800659c <HAL_GPIO_Init+0x14c>
 8006600:	2505      	movs	r5, #5
 8006602:	e7cb      	b.n	800659c <HAL_GPIO_Init+0x14c>
 8006604:	2506      	movs	r5, #6
 8006606:	e7c9      	b.n	800659c <HAL_GPIO_Init+0x14c>
 8006608:	2507      	movs	r5, #7
 800660a:	e7c7      	b.n	800659c <HAL_GPIO_Init+0x14c>
 800660c:	2508      	movs	r5, #8
 800660e:	e7c5      	b.n	800659c <HAL_GPIO_Init+0x14c>
 8006610:	40013c00 	.word	0x40013c00
 8006614:	40020000 	.word	0x40020000
 8006618:	40023800 	.word	0x40023800
 800661c:	40021400 	.word	0x40021400

08006620 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8006620:	b10a      	cbz	r2, 8006626 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8006622:	6181      	str	r1, [r0, #24]
  }
}
 8006624:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8006626:	0409      	lsls	r1, r1, #16
 8006628:	e7fb      	b.n	8006622 <HAL_GPIO_WritePin+0x2>

0800662a <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800662a:	6801      	ldr	r1, [r0, #0]
 800662c:	694b      	ldr	r3, [r1, #20]
 800662e:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 8006632:	f04f 0200 	mov.w	r2, #0
 8006636:	d010      	beq.n	800665a <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8006638:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 800663c:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 800663e:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8006640:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8006642:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006646:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800664a:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800664c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8006650:	f043 0304 	orr.w	r3, r3, #4
 8006654:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 8006656:	2001      	movs	r0, #1
 8006658:	4770      	bx	lr
  }
  return HAL_OK;
 800665a:	4618      	mov	r0, r3
}
 800665c:	4770      	bx	lr

0800665e <I2C_WaitOnFlagUntilTimeout>:
{
 800665e:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 8006662:	4606      	mov	r6, r0
 8006664:	460f      	mov	r7, r1
 8006666:	4691      	mov	r9, r2
 8006668:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800666a:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800666e:	6833      	ldr	r3, [r6, #0]
 8006670:	f1ba 0f01 	cmp.w	sl, #1
 8006674:	bf0c      	ite	eq
 8006676:	695c      	ldreq	r4, [r3, #20]
 8006678:	699c      	ldrne	r4, [r3, #24]
 800667a:	ea27 0404 	bic.w	r4, r7, r4
 800667e:	b2a4      	uxth	r4, r4
 8006680:	fab4 f484 	clz	r4, r4
 8006684:	0964      	lsrs	r4, r4, #5
 8006686:	45a1      	cmp	r9, r4
 8006688:	d001      	beq.n	800668e <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 800668a:	2000      	movs	r0, #0
 800668c:	e017      	b.n	80066be <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 800668e:	1c6a      	adds	r2, r5, #1
 8006690:	d0ee      	beq.n	8006670 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006692:	f7ff fb37 	bl	8005d04 <HAL_GetTick>
 8006696:	9b08      	ldr	r3, [sp, #32]
 8006698:	1ac0      	subs	r0, r0, r3
 800669a:	42a8      	cmp	r0, r5
 800669c:	d801      	bhi.n	80066a2 <I2C_WaitOnFlagUntilTimeout+0x44>
 800669e:	2d00      	cmp	r5, #0
 80066a0:	d1e5      	bne.n	800666e <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80066a2:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80066a4:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80066a6:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80066a8:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80066ac:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80066b0:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80066b2:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80066b6:	f042 0220 	orr.w	r2, r2, #32
 80066ba:	6432      	str	r2, [r6, #64]	; 0x40
        return HAL_ERROR;
 80066bc:	2001      	movs	r0, #1
}
 80066be:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

080066c2 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 80066c2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80066c6:	4604      	mov	r4, r0
 80066c8:	460f      	mov	r7, r1
 80066ca:	4616      	mov	r6, r2
 80066cc:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80066ce:	6825      	ldr	r5, [r4, #0]
 80066d0:	6968      	ldr	r0, [r5, #20]
 80066d2:	ea27 0000 	bic.w	r0, r7, r0
 80066d6:	b280      	uxth	r0, r0
 80066d8:	b1b8      	cbz	r0, 800670a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80066da:	696b      	ldr	r3, [r5, #20]
 80066dc:	055a      	lsls	r2, r3, #21
 80066de:	d516      	bpl.n	800670e <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80066e0:	682b      	ldr	r3, [r5, #0]
 80066e2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80066e6:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80066e8:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 80066ec:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 80066ee:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80066f0:	2300      	movs	r3, #0
 80066f2:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80066f4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80066f8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80066fc:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80066fe:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006702:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8006704:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 8006708:	2001      	movs	r0, #1
}
 800670a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 800670e:	1c73      	adds	r3, r6, #1
 8006710:	d0de      	beq.n	80066d0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006712:	f7ff faf7 	bl	8005d04 <HAL_GetTick>
 8006716:	eba0 0008 	sub.w	r0, r0, r8
 800671a:	42b0      	cmp	r0, r6
 800671c:	d801      	bhi.n	8006722 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 800671e:	2e00      	cmp	r6, #0
 8006720:	d1d5      	bne.n	80066ce <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006722:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8006724:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006726:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8006728:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800672c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006730:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8006732:	f042 0220 	orr.w	r2, r2, #32
 8006736:	e7e4      	b.n	8006702 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08006738 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8006738:	b570      	push	{r4, r5, r6, lr}
 800673a:	4604      	mov	r4, r0
 800673c:	460d      	mov	r5, r1
 800673e:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8006740:	6821      	ldr	r1, [r4, #0]
 8006742:	694b      	ldr	r3, [r1, #20]
 8006744:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 8006748:	d001      	beq.n	800674e <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 800674a:	2000      	movs	r0, #0
 800674c:	e010      	b.n	8006770 <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800674e:	694a      	ldr	r2, [r1, #20]
 8006750:	06d2      	lsls	r2, r2, #27
 8006752:	d50e      	bpl.n	8006772 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8006754:	f06f 0210 	mvn.w	r2, #16
 8006758:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800675a:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800675c:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800675e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006762:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8006766:	6c22      	ldr	r2, [r4, #64]	; 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006768:	6422      	str	r2, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800676a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      return HAL_ERROR;
 800676e:	2001      	movs	r0, #1
}
 8006770:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006772:	f7ff fac7 	bl	8005d04 <HAL_GetTick>
 8006776:	1b80      	subs	r0, r0, r6
 8006778:	42a8      	cmp	r0, r5
 800677a:	d801      	bhi.n	8006780 <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 800677c:	2d00      	cmp	r5, #0
 800677e:	d1df      	bne.n	8006740 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->PreviousState       = I2C_STATE_NONE;
 8006780:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 8006782:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8006784:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8006786:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800678a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800678e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8006790:	f042 0220 	orr.w	r2, r2, #32
 8006794:	e7e8      	b.n	8006768 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

08006796 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 8006796:	b570      	push	{r4, r5, r6, lr}
 8006798:	4604      	mov	r4, r0
 800679a:	460d      	mov	r5, r1
 800679c:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800679e:	6823      	ldr	r3, [r4, #0]
 80067a0:	695b      	ldr	r3, [r3, #20]
 80067a2:	075b      	lsls	r3, r3, #29
 80067a4:	d501      	bpl.n	80067aa <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 80067a6:	2000      	movs	r0, #0
}
 80067a8:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80067aa:	4620      	mov	r0, r4
 80067ac:	f7ff ff3d 	bl	800662a <I2C_IsAcknowledgeFailed>
 80067b0:	b9a8      	cbnz	r0, 80067de <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 80067b2:	1c6a      	adds	r2, r5, #1
 80067b4:	d0f3      	beq.n	800679e <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80067b6:	f7ff faa5 	bl	8005d04 <HAL_GetTick>
 80067ba:	1b80      	subs	r0, r0, r6
 80067bc:	42a8      	cmp	r0, r5
 80067be:	d801      	bhi.n	80067c4 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 80067c0:	2d00      	cmp	r5, #0
 80067c2:	d1ec      	bne.n	800679e <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80067c4:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80067c6:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80067c8:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80067ca:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80067ce:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80067d2:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80067d4:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80067d8:	f042 0220 	orr.w	r2, r2, #32
 80067dc:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 80067de:	2001      	movs	r0, #1
 80067e0:	e7e2      	b.n	80067a8 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

080067e2 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 80067e2:	b570      	push	{r4, r5, r6, lr}
 80067e4:	4604      	mov	r4, r0
 80067e6:	460d      	mov	r5, r1
 80067e8:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80067ea:	6823      	ldr	r3, [r4, #0]
 80067ec:	695b      	ldr	r3, [r3, #20]
 80067ee:	061b      	lsls	r3, r3, #24
 80067f0:	d501      	bpl.n	80067f6 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 80067f2:	2000      	movs	r0, #0
}
 80067f4:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80067f6:	4620      	mov	r0, r4
 80067f8:	f7ff ff17 	bl	800662a <I2C_IsAcknowledgeFailed>
 80067fc:	b9a8      	cbnz	r0, 800682a <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 80067fe:	1c6a      	adds	r2, r5, #1
 8006800:	d0f3      	beq.n	80067ea <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006802:	f7ff fa7f 	bl	8005d04 <HAL_GetTick>
 8006806:	1b80      	subs	r0, r0, r6
 8006808:	42a8      	cmp	r0, r5
 800680a:	d801      	bhi.n	8006810 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 800680c:	2d00      	cmp	r5, #0
 800680e:	d1ec      	bne.n	80067ea <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006810:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8006812:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006814:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8006816:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800681a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800681e:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8006820:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006824:	f042 0220 	orr.w	r2, r2, #32
 8006828:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 800682a:	2001      	movs	r0, #1
 800682c:	e7e2      	b.n	80067f4 <I2C_WaitOnTXEFlagUntilTimeout+0x12>
	...

08006830 <I2C_RequestMemoryWrite>:
{
 8006830:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006834:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006836:	6802      	ldr	r2, [r0, #0]
{
 8006838:	b085      	sub	sp, #20
 800683a:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 800683e:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006840:	6813      	ldr	r3, [r2, #0]
 8006842:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006846:	6013      	str	r3, [r2, #0]
{
 8006848:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800684a:	463b      	mov	r3, r7
 800684c:	f8cd 8000 	str.w	r8, [sp]
 8006850:	2200      	movs	r2, #0
 8006852:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8006856:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006858:	f7ff ff01 	bl	800665e <I2C_WaitOnFlagUntilTimeout>
 800685c:	6823      	ldr	r3, [r4, #0]
 800685e:	b138      	cbz	r0, 8006870 <I2C_RequestMemoryWrite+0x40>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8006860:	681b      	ldr	r3, [r3, #0]
 8006862:	05db      	lsls	r3, r3, #23
 8006864:	d502      	bpl.n	800686c <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8006866:	f44f 7300 	mov.w	r3, #512	; 0x200
 800686a:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 800686c:	2003      	movs	r0, #3
 800686e:	e00a      	b.n	8006886 <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8006870:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8006874:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8006876:	4919      	ldr	r1, [pc, #100]	; (80068dc <I2C_RequestMemoryWrite+0xac>)
 8006878:	4643      	mov	r3, r8
 800687a:	463a      	mov	r2, r7
 800687c:	4620      	mov	r0, r4
 800687e:	f7ff ff20 	bl	80066c2 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006882:	b118      	cbz	r0, 800688c <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 8006884:	2001      	movs	r0, #1
}
 8006886:	b005      	add	sp, #20
 8006888:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800688c:	6823      	ldr	r3, [r4, #0]
 800688e:	9003      	str	r0, [sp, #12]
 8006890:	695a      	ldr	r2, [r3, #20]
 8006892:	9203      	str	r2, [sp, #12]
 8006894:	699b      	ldr	r3, [r3, #24]
 8006896:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006898:	4642      	mov	r2, r8
 800689a:	4639      	mov	r1, r7
 800689c:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800689e:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80068a0:	f7ff ff9f 	bl	80067e2 <I2C_WaitOnTXEFlagUntilTimeout>
 80068a4:	b140      	cbz	r0, 80068b8 <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80068a6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80068a8:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80068aa:	bf01      	itttt	eq
 80068ac:	6822      	ldreq	r2, [r4, #0]
 80068ae:	6813      	ldreq	r3, [r2, #0]
 80068b0:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 80068b4:	6013      	streq	r3, [r2, #0]
 80068b6:	e7e5      	b.n	8006884 <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80068b8:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80068bc:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80068be:	d102      	bne.n	80068c6 <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80068c0:	b2ed      	uxtb	r5, r5
 80068c2:	611d      	str	r5, [r3, #16]
 80068c4:	e7df      	b.n	8006886 <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80068c6:	0a2a      	lsrs	r2, r5, #8
 80068c8:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80068ca:	4639      	mov	r1, r7
 80068cc:	4642      	mov	r2, r8
 80068ce:	4620      	mov	r0, r4
 80068d0:	f7ff ff87 	bl	80067e2 <I2C_WaitOnTXEFlagUntilTimeout>
 80068d4:	2800      	cmp	r0, #0
 80068d6:	d1e6      	bne.n	80068a6 <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80068d8:	6823      	ldr	r3, [r4, #0]
 80068da:	e7f1      	b.n	80068c0 <I2C_RequestMemoryWrite+0x90>
 80068dc:	00010002 	.word	0x00010002

080068e0 <I2C_RequestMemoryRead>:
{
 80068e0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80068e4:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80068e6:	6803      	ldr	r3, [r0, #0]
{
 80068e8:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80068ea:	681a      	ldr	r2, [r3, #0]
 80068ec:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80068f0:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80068f2:	681a      	ldr	r2, [r3, #0]
{
 80068f4:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80068f8:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80068fc:	601a      	str	r2, [r3, #0]
{
 80068fe:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006900:	463b      	mov	r3, r7
 8006902:	f8cd 8000 	str.w	r8, [sp]
 8006906:	2200      	movs	r2, #0
 8006908:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 800690c:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800690e:	f7ff fea6 	bl	800665e <I2C_WaitOnFlagUntilTimeout>
 8006912:	6823      	ldr	r3, [r4, #0]
 8006914:	b148      	cbz	r0, 800692a <I2C_RequestMemoryRead+0x4a>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8006916:	681b      	ldr	r3, [r3, #0]
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8006918:	05db      	lsls	r3, r3, #23
 800691a:	d502      	bpl.n	8006922 <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800691c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006920:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8006922:	2003      	movs	r0, #3
}
 8006924:	b004      	add	sp, #16
 8006926:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800692a:	fa5f f986 	uxtb.w	r9, r6
 800692e:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8006932:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8006934:	492a      	ldr	r1, [pc, #168]	; (80069e0 <I2C_RequestMemoryRead+0x100>)
 8006936:	4643      	mov	r3, r8
 8006938:	463a      	mov	r2, r7
 800693a:	4620      	mov	r0, r4
 800693c:	f7ff fec1 	bl	80066c2 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006940:	b108      	cbz	r0, 8006946 <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 8006942:	2001      	movs	r0, #1
 8006944:	e7ee      	b.n	8006924 <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006946:	6823      	ldr	r3, [r4, #0]
 8006948:	9003      	str	r0, [sp, #12]
 800694a:	695a      	ldr	r2, [r3, #20]
 800694c:	9203      	str	r2, [sp, #12]
 800694e:	699b      	ldr	r3, [r3, #24]
 8006950:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006952:	4642      	mov	r2, r8
 8006954:	4639      	mov	r1, r7
 8006956:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006958:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800695a:	f7ff ff42 	bl	80067e2 <I2C_WaitOnTXEFlagUntilTimeout>
 800695e:	b140      	cbz	r0, 8006972 <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8006960:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006962:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006964:	bf01      	itttt	eq
 8006966:	6822      	ldreq	r2, [r4, #0]
 8006968:	6813      	ldreq	r3, [r2, #0]
 800696a:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800696e:	6013      	streq	r3, [r2, #0]
 8006970:	e7e7      	b.n	8006942 <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006972:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006976:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006978:	d11a      	bne.n	80069b0 <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800697a:	b2ed      	uxtb	r5, r5
 800697c:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800697e:	4642      	mov	r2, r8
 8006980:	4639      	mov	r1, r7
 8006982:	4620      	mov	r0, r4
 8006984:	f7ff ff2d 	bl	80067e2 <I2C_WaitOnTXEFlagUntilTimeout>
 8006988:	2800      	cmp	r0, #0
 800698a:	d1e9      	bne.n	8006960 <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800698c:	6822      	ldr	r2, [r4, #0]
 800698e:	6813      	ldr	r3, [r2, #0]
 8006990:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006994:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006996:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800699a:	4602      	mov	r2, r0
 800699c:	f8cd 8000 	str.w	r8, [sp]
 80069a0:	463b      	mov	r3, r7
 80069a2:	4620      	mov	r0, r4
 80069a4:	f7ff fe5b 	bl	800665e <I2C_WaitOnFlagUntilTimeout>
 80069a8:	6822      	ldr	r2, [r4, #0]
 80069aa:	b160      	cbz	r0, 80069c6 <I2C_RequestMemoryRead+0xe6>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 80069ac:	6813      	ldr	r3, [r2, #0]
 80069ae:	e7b3      	b.n	8006918 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80069b0:	0a2a      	lsrs	r2, r5, #8
 80069b2:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80069b4:	4639      	mov	r1, r7
 80069b6:	4642      	mov	r2, r8
 80069b8:	4620      	mov	r0, r4
 80069ba:	f7ff ff12 	bl	80067e2 <I2C_WaitOnTXEFlagUntilTimeout>
 80069be:	2800      	cmp	r0, #0
 80069c0:	d1ce      	bne.n	8006960 <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80069c2:	6823      	ldr	r3, [r4, #0]
 80069c4:	e7d9      	b.n	800697a <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 80069c6:	f049 0301 	orr.w	r3, r9, #1
 80069ca:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80069cc:	4904      	ldr	r1, [pc, #16]	; (80069e0 <I2C_RequestMemoryRead+0x100>)
 80069ce:	4643      	mov	r3, r8
 80069d0:	463a      	mov	r2, r7
 80069d2:	4620      	mov	r0, r4
 80069d4:	f7ff fe75 	bl	80066c2 <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 80069d8:	3800      	subs	r0, #0
 80069da:	bf18      	it	ne
 80069dc:	2001      	movne	r0, #1
 80069de:	e7a1      	b.n	8006924 <I2C_RequestMemoryRead+0x44>
 80069e0:	00010002 	.word	0x00010002

080069e4 <HAL_I2C_Init>:
{
 80069e4:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 80069e6:	4604      	mov	r4, r0
 80069e8:	b908      	cbnz	r0, 80069ee <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 80069ea:	2001      	movs	r0, #1
}
 80069ec:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 80069ee:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80069f2:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80069f6:	b91b      	cbnz	r3, 8006a00 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 80069f8:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 80069fc:	f7fb f93a 	bl	8001c74 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8006a00:	2324      	movs	r3, #36	; 0x24
 8006a02:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8006a06:	6823      	ldr	r3, [r4, #0]
 8006a08:	681a      	ldr	r2, [r3, #0]
 8006a0a:	f022 0201 	bic.w	r2, r2, #1
 8006a0e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8006a10:	681a      	ldr	r2, [r3, #0]
 8006a12:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8006a16:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8006a18:	681a      	ldr	r2, [r3, #0]
 8006a1a:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8006a1e:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8006a20:	f000 fe6e 	bl	8007700 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8006a24:	4b3f      	ldr	r3, [pc, #252]	; (8006b24 <HAL_I2C_Init+0x140>)
 8006a26:	6865      	ldr	r5, [r4, #4]
 8006a28:	429d      	cmp	r5, r3
 8006a2a:	bf94      	ite	ls
 8006a2c:	4b3e      	ldrls	r3, [pc, #248]	; (8006b28 <HAL_I2C_Init+0x144>)
 8006a2e:	4b3f      	ldrhi	r3, [pc, #252]	; (8006b2c <HAL_I2C_Init+0x148>)
 8006a30:	4298      	cmp	r0, r3
 8006a32:	bf8c      	ite	hi
 8006a34:	2300      	movhi	r3, #0
 8006a36:	2301      	movls	r3, #1
 8006a38:	2b00      	cmp	r3, #0
 8006a3a:	d1d6      	bne.n	80069ea <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006a3c:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8006a3e:	4e39      	ldr	r6, [pc, #228]	; (8006b24 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006a40:	6853      	ldr	r3, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8006a42:	493b      	ldr	r1, [pc, #236]	; (8006b30 <HAL_I2C_Init+0x14c>)
 8006a44:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006a48:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8006a4c:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8006a4e:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006a50:	6053      	str	r3, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8006a52:	bf88      	it	hi
 8006a54:	f44f 7696 	movhi.w	r6, #300	; 0x12c
 8006a58:	6a13      	ldr	r3, [r2, #32]
 8006a5a:	bf88      	it	hi
 8006a5c:	4371      	mulhi	r1, r6
 8006a5e:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8006a62:	bf84      	itt	hi
 8006a64:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 8006a68:	fbb1 f1f6 	udivhi	r1, r1, r6
 8006a6c:	3101      	adds	r1, #1
 8006a6e:	4319      	orrs	r1, r3
 8006a70:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8006a72:	69d1      	ldr	r1, [r2, #28]
 8006a74:	1e43      	subs	r3, r0, #1
 8006a76:	482b      	ldr	r0, [pc, #172]	; (8006b24 <HAL_I2C_Init+0x140>)
 8006a78:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8006a7c:	4285      	cmp	r5, r0
 8006a7e:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8006a82:	d832      	bhi.n	8006aea <HAL_I2C_Init+0x106>
 8006a84:	006d      	lsls	r5, r5, #1
 8006a86:	f640 70fc 	movw	r0, #4092	; 0xffc
 8006a8a:	fbb3 f3f5 	udiv	r3, r3, r5
 8006a8e:	3301      	adds	r3, #1
 8006a90:	4203      	tst	r3, r0
 8006a92:	d042      	beq.n	8006b1a <HAL_I2C_Init+0x136>
 8006a94:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006a98:	430b      	orrs	r3, r1
 8006a9a:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8006a9c:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8006aa0:	6811      	ldr	r1, [r2, #0]
 8006aa2:	4303      	orrs	r3, r0
 8006aa4:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8006aa8:	430b      	orrs	r3, r1
 8006aaa:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8006aac:	6891      	ldr	r1, [r2, #8]
 8006aae:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8006ab2:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8006ab6:	4303      	orrs	r3, r0
 8006ab8:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8006abc:	430b      	orrs	r3, r1
 8006abe:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8006ac0:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8006ac4:	68d1      	ldr	r1, [r2, #12]
 8006ac6:	4303      	orrs	r3, r0
 8006ac8:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8006acc:	430b      	orrs	r3, r1
 8006ace:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8006ad0:	6813      	ldr	r3, [r2, #0]
 8006ad2:	f043 0301 	orr.w	r3, r3, #1
 8006ad6:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006ad8:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8006ada:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006adc:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8006ade:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8006ae2:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8006ae4:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 8006ae8:	e780      	b.n	80069ec <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8006aea:	68a0      	ldr	r0, [r4, #8]
 8006aec:	b950      	cbnz	r0, 8006b04 <HAL_I2C_Init+0x120>
 8006aee:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8006af2:	fbb3 f3f5 	udiv	r3, r3, r5
 8006af6:	3301      	adds	r3, #1
 8006af8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006afc:	b17b      	cbz	r3, 8006b1e <HAL_I2C_Init+0x13a>
 8006afe:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8006b02:	e7c9      	b.n	8006a98 <HAL_I2C_Init+0xb4>
 8006b04:	2019      	movs	r0, #25
 8006b06:	4345      	muls	r5, r0
 8006b08:	fbb3 f3f5 	udiv	r3, r3, r5
 8006b0c:	3301      	adds	r3, #1
 8006b0e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006b12:	b123      	cbz	r3, 8006b1e <HAL_I2C_Init+0x13a>
 8006b14:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8006b18:	e7be      	b.n	8006a98 <HAL_I2C_Init+0xb4>
 8006b1a:	2304      	movs	r3, #4
 8006b1c:	e7bc      	b.n	8006a98 <HAL_I2C_Init+0xb4>
 8006b1e:	2301      	movs	r3, #1
 8006b20:	e7ba      	b.n	8006a98 <HAL_I2C_Init+0xb4>
 8006b22:	bf00      	nop
 8006b24:	000186a0 	.word	0x000186a0
 8006b28:	001e847f 	.word	0x001e847f
 8006b2c:	003d08ff 	.word	0x003d08ff
 8006b30:	000f4240 	.word	0x000f4240

08006b34 <HAL_I2C_Mem_Write>:
{
 8006b34:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006b38:	4604      	mov	r4, r0
 8006b3a:	4699      	mov	r9, r3
 8006b3c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8006b3e:	460f      	mov	r7, r1
 8006b40:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8006b42:	f7ff f8df 	bl	8005d04 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006b46:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8006b4a:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8006b4c:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006b4e:	d003      	beq.n	8006b58 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 8006b50:	2002      	movs	r0, #2
}
 8006b52:	b003      	add	sp, #12
 8006b54:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8006b58:	9000      	str	r0, [sp, #0]
 8006b5a:	493c      	ldr	r1, [pc, #240]	; (8006c4c <HAL_I2C_Mem_Write+0x118>)
 8006b5c:	2319      	movs	r3, #25
 8006b5e:	2201      	movs	r2, #1
 8006b60:	4620      	mov	r0, r4
 8006b62:	f7ff fd7c 	bl	800665e <I2C_WaitOnFlagUntilTimeout>
 8006b66:	2800      	cmp	r0, #0
 8006b68:	d1f2      	bne.n	8006b50 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8006b6a:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8006b6e:	2b01      	cmp	r3, #1
 8006b70:	d0ee      	beq.n	8006b50 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006b72:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8006b74:	2301      	movs	r3, #1
 8006b76:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006b7a:	6803      	ldr	r3, [r0, #0]
 8006b7c:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8006b7e:	bf5e      	ittt	pl
 8006b80:	6803      	ldrpl	r3, [r0, #0]
 8006b82:	f043 0301 	orrpl.w	r3, r3, #1
 8006b86:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006b88:	6803      	ldr	r3, [r0, #0]
 8006b8a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006b8e:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8006b90:	2321      	movs	r3, #33	; 0x21
 8006b92:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8006b96:	2340      	movs	r3, #64	; 0x40
 8006b98:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006b9c:	2300      	movs	r3, #0
 8006b9e:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8006ba0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006ba2:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8006ba4:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8006ba8:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8006baa:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006bac:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8006bae:	4b28      	ldr	r3, [pc, #160]	; (8006c50 <HAL_I2C_Mem_Write+0x11c>)
 8006bb0:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8006bb2:	e9cd 6500 	strd	r6, r5, [sp]
 8006bb6:	464b      	mov	r3, r9
 8006bb8:	4642      	mov	r2, r8
 8006bba:	4639      	mov	r1, r7
 8006bbc:	4620      	mov	r0, r4
 8006bbe:	f7ff fe37 	bl	8006830 <I2C_RequestMemoryWrite>
 8006bc2:	2800      	cmp	r0, #0
 8006bc4:	d02a      	beq.n	8006c1c <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8006bc6:	2001      	movs	r0, #1
 8006bc8:	e7c3      	b.n	8006b52 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006bca:	f7ff fe0a 	bl	80067e2 <I2C_WaitOnTXEFlagUntilTimeout>
 8006bce:	b140      	cbz	r0, 8006be2 <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8006bd0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006bd2:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006bd4:	bf01      	itttt	eq
 8006bd6:	6822      	ldreq	r2, [r4, #0]
 8006bd8:	6813      	ldreq	r3, [r2, #0]
 8006bda:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8006bde:	6013      	streq	r3, [r2, #0]
 8006be0:	e7f1      	b.n	8006bc6 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8006be2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006be4:	6827      	ldr	r7, [r4, #0]
 8006be6:	461a      	mov	r2, r3
 8006be8:	f812 1b01 	ldrb.w	r1, [r2], #1
 8006bec:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8006bee:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8006bf0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8006bf2:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8006bf4:	3a01      	subs	r2, #1
 8006bf6:	b292      	uxth	r2, r2
 8006bf8:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006bfa:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8006bfc:	1e48      	subs	r0, r1, #1
 8006bfe:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006c00:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8006c02:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006c04:	d50a      	bpl.n	8006c1c <HAL_I2C_Mem_Write+0xe8>
 8006c06:	b148      	cbz	r0, 8006c1c <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8006c08:	785a      	ldrb	r2, [r3, #1]
 8006c0a:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8006c0c:	3302      	adds	r3, #2
 8006c0e:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8006c10:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006c12:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8006c14:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8006c16:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8006c18:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8006c1a:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8006c1c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006c1e:	462a      	mov	r2, r5
 8006c20:	4631      	mov	r1, r6
 8006c22:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8006c24:	2b00      	cmp	r3, #0
 8006c26:	d1d0      	bne.n	8006bca <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006c28:	f7ff fdb5 	bl	8006796 <I2C_WaitOnBTFFlagUntilTimeout>
 8006c2c:	2800      	cmp	r0, #0
 8006c2e:	d1cf      	bne.n	8006bd0 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006c30:	6822      	ldr	r2, [r4, #0]
 8006c32:	6813      	ldr	r3, [r2, #0]
 8006c34:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8006c38:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8006c3a:	2320      	movs	r3, #32
 8006c3c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8006c40:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8006c44:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 8006c48:	e783      	b.n	8006b52 <HAL_I2C_Mem_Write+0x1e>
 8006c4a:	bf00      	nop
 8006c4c:	00100002 	.word	0x00100002
 8006c50:	ffff0000 	.word	0xffff0000

08006c54 <HAL_I2C_Mem_Read>:
{
 8006c54:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006c58:	4604      	mov	r4, r0
 8006c5a:	b087      	sub	sp, #28
 8006c5c:	4699      	mov	r9, r3
 8006c5e:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8006c60:	460d      	mov	r5, r1
 8006c62:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8006c64:	f7ff f84e 	bl	8005d04 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006c68:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8006c6c:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8006c6e:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006c70:	d004      	beq.n	8006c7c <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 8006c72:	2502      	movs	r5, #2
}
 8006c74:	4628      	mov	r0, r5
 8006c76:	b007      	add	sp, #28
 8006c78:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8006c7c:	9000      	str	r0, [sp, #0]
 8006c7e:	4976      	ldr	r1, [pc, #472]	; (8006e58 <HAL_I2C_Mem_Read+0x204>)
 8006c80:	2319      	movs	r3, #25
 8006c82:	2201      	movs	r2, #1
 8006c84:	4620      	mov	r0, r4
 8006c86:	f7ff fcea 	bl	800665e <I2C_WaitOnFlagUntilTimeout>
 8006c8a:	2800      	cmp	r0, #0
 8006c8c:	d1f1      	bne.n	8006c72 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8006c8e:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8006c92:	2b01      	cmp	r3, #1
 8006c94:	d0ed      	beq.n	8006c72 <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006c96:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8006c98:	2301      	movs	r3, #1
 8006c9a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006c9e:	6803      	ldr	r3, [r0, #0]
 8006ca0:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8006ca2:	bf5e      	ittt	pl
 8006ca4:	6803      	ldrpl	r3, [r0, #0]
 8006ca6:	f043 0301 	orrpl.w	r3, r3, #1
 8006caa:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006cac:	6803      	ldr	r3, [r0, #0]
 8006cae:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006cb2:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8006cb4:	2322      	movs	r3, #34	; 0x22
 8006cb6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8006cba:	2340      	movs	r3, #64	; 0x40
 8006cbc:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006cc0:	2300      	movs	r3, #0
 8006cc2:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8006cc4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006cc6:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8006cc8:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8006ccc:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8006cce:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006cd0:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8006cd2:	4b62      	ldr	r3, [pc, #392]	; (8006e5c <HAL_I2C_Mem_Read+0x208>)
 8006cd4:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8006cd6:	4629      	mov	r1, r5
 8006cd8:	e9cd 7600 	strd	r7, r6, [sp]
 8006cdc:	464b      	mov	r3, r9
 8006cde:	4642      	mov	r2, r8
 8006ce0:	4620      	mov	r0, r4
 8006ce2:	f7ff fdfd 	bl	80068e0 <I2C_RequestMemoryRead>
 8006ce6:	4605      	mov	r5, r0
 8006ce8:	b108      	cbz	r0, 8006cee <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8006cea:	2501      	movs	r5, #1
 8006cec:	e7c2      	b.n	8006c74 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8006cee:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006cf0:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 8006cf2:	b9b2      	cbnz	r2, 8006d22 <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006cf4:	9002      	str	r0, [sp, #8]
 8006cf6:	695a      	ldr	r2, [r3, #20]
 8006cf8:	9202      	str	r2, [sp, #8]
 8006cfa:	699a      	ldr	r2, [r3, #24]
 8006cfc:	9202      	str	r2, [sp, #8]
 8006cfe:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006d00:	681a      	ldr	r2, [r3, #0]
 8006d02:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006d06:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006d08:	f8df 8154 	ldr.w	r8, [pc, #340]	; 8006e60 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 8006d0c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006d0e:	2b00      	cmp	r3, #0
 8006d10:	d12c      	bne.n	8006d6c <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8006d12:	2220      	movs	r2, #32
 8006d14:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8006d18:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8006d1c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8006d20:	e7a8      	b.n	8006c74 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8006d22:	2a01      	cmp	r2, #1
 8006d24:	d10a      	bne.n	8006d3c <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006d26:	681a      	ldr	r2, [r3, #0]
 8006d28:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006d2c:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006d2e:	9003      	str	r0, [sp, #12]
 8006d30:	695a      	ldr	r2, [r3, #20]
 8006d32:	9203      	str	r2, [sp, #12]
 8006d34:	699a      	ldr	r2, [r3, #24]
 8006d36:	9203      	str	r2, [sp, #12]
 8006d38:	9a03      	ldr	r2, [sp, #12]
 8006d3a:	e7e1      	b.n	8006d00 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8006d3c:	2a02      	cmp	r2, #2
 8006d3e:	d10e      	bne.n	8006d5e <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006d40:	681a      	ldr	r2, [r3, #0]
 8006d42:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006d46:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006d48:	681a      	ldr	r2, [r3, #0]
 8006d4a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8006d4e:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006d50:	9004      	str	r0, [sp, #16]
 8006d52:	695a      	ldr	r2, [r3, #20]
 8006d54:	9204      	str	r2, [sp, #16]
 8006d56:	699b      	ldr	r3, [r3, #24]
 8006d58:	9304      	str	r3, [sp, #16]
 8006d5a:	9b04      	ldr	r3, [sp, #16]
 8006d5c:	e7d4      	b.n	8006d08 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006d5e:	9005      	str	r0, [sp, #20]
 8006d60:	695a      	ldr	r2, [r3, #20]
 8006d62:	9205      	str	r2, [sp, #20]
 8006d64:	699b      	ldr	r3, [r3, #24]
 8006d66:	9305      	str	r3, [sp, #20]
 8006d68:	9b05      	ldr	r3, [sp, #20]
 8006d6a:	e7cd      	b.n	8006d08 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8006d6c:	2b03      	cmp	r3, #3
 8006d6e:	d856      	bhi.n	8006e1e <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8006d70:	2b01      	cmp	r3, #1
 8006d72:	d115      	bne.n	8006da0 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006d74:	4632      	mov	r2, r6
 8006d76:	4639      	mov	r1, r7
 8006d78:	4620      	mov	r0, r4
 8006d7a:	f7ff fcdd 	bl	8006738 <I2C_WaitOnRXNEFlagUntilTimeout>
 8006d7e:	2800      	cmp	r0, #0
 8006d80:	d1b3      	bne.n	8006cea <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006d82:	6823      	ldr	r3, [r4, #0]
 8006d84:	691a      	ldr	r2, [r3, #16]
 8006d86:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006d88:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8006d8a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006d8c:	3301      	adds	r3, #1
 8006d8e:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8006d90:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006d92:	3b01      	subs	r3, #1
 8006d94:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8006d96:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006d98:	3b01      	subs	r3, #1
 8006d9a:	b29b      	uxth	r3, r3
 8006d9c:	8563      	strh	r3, [r4, #42]	; 0x2a
 8006d9e:	e7b5      	b.n	8006d0c <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 8006da0:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006da2:	9600      	str	r6, [sp, #0]
 8006da4:	463b      	mov	r3, r7
 8006da6:	f04f 0200 	mov.w	r2, #0
 8006daa:	4641      	mov	r1, r8
 8006dac:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8006dae:	d119      	bne.n	8006de4 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006db0:	f7ff fc55 	bl	800665e <I2C_WaitOnFlagUntilTimeout>
 8006db4:	2800      	cmp	r0, #0
 8006db6:	d198      	bne.n	8006cea <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006db8:	6823      	ldr	r3, [r4, #0]
 8006dba:	681a      	ldr	r2, [r3, #0]
 8006dbc:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006dc0:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006dc2:	691a      	ldr	r2, [r3, #16]
 8006dc4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006dc6:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8006dc8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006dca:	1c53      	adds	r3, r2, #1
 8006dcc:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8006dce:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006dd0:	3b01      	subs	r3, #1
 8006dd2:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8006dd4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006dd6:	3b01      	subs	r3, #1
 8006dd8:	b29b      	uxth	r3, r3
 8006dda:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006ddc:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006dde:	691b      	ldr	r3, [r3, #16]
 8006de0:	7053      	strb	r3, [r2, #1]
 8006de2:	e7d2      	b.n	8006d8a <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006de4:	f7ff fc3b 	bl	800665e <I2C_WaitOnFlagUntilTimeout>
 8006de8:	2800      	cmp	r0, #0
 8006dea:	f47f af7e 	bne.w	8006cea <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006dee:	6823      	ldr	r3, [r4, #0]
 8006df0:	681a      	ldr	r2, [r3, #0]
 8006df2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006df6:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006df8:	691a      	ldr	r2, [r3, #16]
 8006dfa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006dfc:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8006dfe:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006e00:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 8006e02:	3301      	adds	r3, #1
 8006e04:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8006e06:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006e08:	3b01      	subs	r3, #1
 8006e0a:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8006e0c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006e0e:	3b01      	subs	r3, #1
 8006e10:	b29b      	uxth	r3, r3
 8006e12:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006e14:	4602      	mov	r2, r0
 8006e16:	463b      	mov	r3, r7
 8006e18:	4641      	mov	r1, r8
 8006e1a:	4620      	mov	r0, r4
 8006e1c:	e7c8      	b.n	8006db0 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006e1e:	4632      	mov	r2, r6
 8006e20:	4639      	mov	r1, r7
 8006e22:	4620      	mov	r0, r4
 8006e24:	f7ff fc88 	bl	8006738 <I2C_WaitOnRXNEFlagUntilTimeout>
 8006e28:	2800      	cmp	r0, #0
 8006e2a:	f47f af5e 	bne.w	8006cea <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006e2e:	6823      	ldr	r3, [r4, #0]
 8006e30:	691a      	ldr	r2, [r3, #16]
 8006e32:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006e34:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 8006e36:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006e38:	1c53      	adds	r3, r2, #1
 8006e3a:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 8006e3c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006e3e:	3b01      	subs	r3, #1
 8006e40:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8006e42:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006e44:	3b01      	subs	r3, #1
 8006e46:	b29b      	uxth	r3, r3
 8006e48:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8006e4a:	6823      	ldr	r3, [r4, #0]
 8006e4c:	6959      	ldr	r1, [r3, #20]
 8006e4e:	0749      	lsls	r1, r1, #29
 8006e50:	f57f af5c 	bpl.w	8006d0c <HAL_I2C_Mem_Read+0xb8>
 8006e54:	e7c3      	b.n	8006dde <HAL_I2C_Mem_Read+0x18a>
 8006e56:	bf00      	nop
 8006e58:	00100002 	.word	0x00100002
 8006e5c:	ffff0000 	.word	0xffff0000
 8006e60:	00010004 	.word	0x00010004

08006e64 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8006e64:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8006e66:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006e6a:	2b20      	cmp	r3, #32
 8006e6c:	b2dc      	uxtb	r4, r3
 8006e6e:	d116      	bne.n	8006e9e <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 8006e70:	2324      	movs	r3, #36	; 0x24
 8006e72:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8006e76:	6803      	ldr	r3, [r0, #0]
 8006e78:	681a      	ldr	r2, [r3, #0]
 8006e7a:	f022 0201 	bic.w	r2, r2, #1
 8006e7e:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8006e80:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8006e82:	f022 0210 	bic.w	r2, r2, #16
 8006e86:	625a      	str	r2, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 8006e88:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8006e8a:	4311      	orrs	r1, r2
 8006e8c:	6259      	str	r1, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8006e8e:	681a      	ldr	r2, [r3, #0]
 8006e90:	f042 0201 	orr.w	r2, r2, #1
 8006e94:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8006e96:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8006e9a:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8006e9c:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8006e9e:	2002      	movs	r0, #2
 8006ea0:	e7fc      	b.n	8006e9c <HAL_I2CEx_ConfigAnalogFilter+0x38>

08006ea2 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8006ea2:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8006ea4:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006ea8:	2b20      	cmp	r3, #32
 8006eaa:	b2dc      	uxtb	r4, r3
 8006eac:	d116      	bne.n	8006edc <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8006eae:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8006eb0:	2324      	movs	r3, #36	; 0x24
 8006eb2:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 8006eb6:	6813      	ldr	r3, [r2, #0]
 8006eb8:	f023 0301 	bic.w	r3, r3, #1
 8006ebc:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 8006ebe:	6a55      	ldr	r5, [r2, #36]	; 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8006ec0:	f64f 73f0 	movw	r3, #65520	; 0xfff0
 8006ec4:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 8006ec6:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 8006ec8:	b29b      	uxth	r3, r3
 8006eca:	6253      	str	r3, [r2, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8006ecc:	6813      	ldr	r3, [r2, #0]
 8006ece:	f043 0301 	orr.w	r3, r3, #1
 8006ed2:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8006ed4:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8006ed8:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8006eda:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 8006edc:	2002      	movs	r0, #2
 8006ede:	e7fc      	b.n	8006eda <HAL_I2CEx_ConfigDigitalFilter+0x38>

08006ee0 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006ee0:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006ee2:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006ee6:	01d2      	lsls	r2, r2, #7
 8006ee8:	3284      	adds	r2, #132	; 0x84
 8006eea:	1883      	adds	r3, r0, r2
{
 8006eec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006ef0:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006ef2:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006ef4:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8006ef6:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006efa:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8006efe:	605d      	str	r5, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006f00:	68c5      	ldr	r5, [r0, #12]
 8006f02:	f10c 0701 	add.w	r7, ip, #1
 8006f06:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006f0a:	f3c6 460b 	ubfx	r6, r6, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006f0e:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006f10:	4426      	add	r6, r4
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006f12:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8006f16:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8006f18:	68c5      	ldr	r5, [r0, #12]
 8006f1a:	68ce      	ldr	r6, [r1, #12]
 8006f1c:	f3c5 050a 	ubfx	r5, r5, #0, #11
 8006f20:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8006f22:	689d      	ldr	r5, [r3, #8]
 8006f24:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8006f28:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8006f2a:	68c7      	ldr	r7, [r0, #12]
 8006f2c:	688d      	ldr	r5, [r1, #8]
 8006f2e:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8006f32:	3501      	adds	r5, #1
 8006f34:	443d      	add	r5, r7
 8006f36:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8006f3a:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8006f3c:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8006f3e:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8006f40:	f025 0507 	bic.w	r5, r5, #7
 8006f44:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8006f46:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8006f4a:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8006f4c:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8006f4e:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8006f52:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8006f56:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8006f5a:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 8006f5e:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8006f62:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8006f66:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8006f6a:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8006f6c:	695d      	ldr	r5, [r3, #20]
 8006f6e:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 8006f72:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8006f74:	694d      	ldr	r5, [r1, #20]
 8006f76:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8006f78:	69dd      	ldr	r5, [r3, #28]
 8006f7a:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 8006f7e:	f025 0507 	bic.w	r5, r5, #7
 8006f82:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8006f84:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8006f88:	433d      	orrs	r5, r7
 8006f8a:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8006f8c:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8006f8e:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8006f90:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8006f94:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8006f96:	b31e      	cbz	r6, 8006fe0 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8006f98:	2e01      	cmp	r6, #1
 8006f9a:	d023      	beq.n	8006fe4 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8006f9c:	1eb5      	subs	r5, r6, #2
 8006f9e:	2d02      	cmp	r5, #2
 8006fa0:	d922      	bls.n	8006fe8 <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 8006fa2:	2e07      	cmp	r6, #7
 8006fa4:	bf0c      	ite	eq
 8006fa6:	2502      	moveq	r5, #2
 8006fa8:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8006faa:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8006fac:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
 8006fb0:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8006fb2:	eba4 040c 	sub.w	r4, r4, ip
 8006fb6:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8006fb8:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8006fba:	436c      	muls	r4, r5
 8006fbc:	436e      	muls	r6, r5
 8006fbe:	3403      	adds	r4, #3
 8006fc0:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 8006fc4:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8006fc6:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 8006fc8:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 8006fcc:	f024 0407 	bic.w	r4, r4, #7
 8006fd0:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8006fd2:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8006fd4:	5883      	ldr	r3, [r0, r2]
 8006fd6:	f043 0301 	orr.w	r3, r3, #1
 8006fda:	5083      	str	r3, [r0, r2]
}
 8006fdc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8006fe0:	2504      	movs	r5, #4
 8006fe2:	e7e2      	b.n	8006faa <LTDC_SetConfig+0xca>
    tmp = 3U;
 8006fe4:	2503      	movs	r5, #3
 8006fe6:	e7e0      	b.n	8006faa <LTDC_SetConfig+0xca>
    tmp = 2U;
 8006fe8:	2502      	movs	r5, #2
 8006fea:	e7de      	b.n	8006faa <LTDC_SetConfig+0xca>

08006fec <HAL_LTDC_Init>:
{
 8006fec:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8006fee:	4604      	mov	r4, r0
 8006ff0:	2800      	cmp	r0, #0
 8006ff2:	d063      	beq.n	80070bc <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8006ff4:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 8006ff8:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006ffc:	b91b      	cbnz	r3, 8007006 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8006ffe:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 8007002:	f7fa fe93 	bl	8001d2c <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8007006:	2302      	movs	r3, #2
 8007008:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800700c:	6823      	ldr	r3, [r4, #0]
 800700e:	699a      	ldr	r2, [r3, #24]
 8007010:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8007014:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8007016:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 800701a:	4302      	orrs	r2, r0
 800701c:	68e0      	ldr	r0, [r4, #12]
 800701e:	6999      	ldr	r1, [r3, #24]
 8007020:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8007022:	6920      	ldr	r0, [r4, #16]
 8007024:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8007026:	430a      	orrs	r2, r1
 8007028:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800702a:	689a      	ldr	r2, [r3, #8]
 800702c:	4924      	ldr	r1, [pc, #144]	; (80070c0 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800702e:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8007030:	400a      	ands	r2, r1
 8007032:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8007034:	689a      	ldr	r2, [r3, #8]
 8007036:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800703a:	69a0      	ldr	r0, [r4, #24]
 800703c:	4302      	orrs	r2, r0
 800703e:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8007040:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8007042:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8007044:	400a      	ands	r2, r1
 8007046:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8007048:	68da      	ldr	r2, [r3, #12]
 800704a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800704e:	6a20      	ldr	r0, [r4, #32]
 8007050:	4302      	orrs	r2, r0
 8007052:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8007054:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8007056:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8007058:	400a      	ands	r2, r1
 800705a:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800705c:	691a      	ldr	r2, [r3, #16]
 800705e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8007062:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8007064:	4302      	orrs	r2, r0
 8007066:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8007068:	695a      	ldr	r2, [r3, #20]
 800706a:	4011      	ands	r1, r2
 800706c:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800706e:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8007070:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8007072:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8007076:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8007078:	430a      	orrs	r2, r1
 800707a:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800707c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800707e:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8007082:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8007086:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 800708a:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800708c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800708e:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 8007092:	430a      	orrs	r2, r1
 8007094:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8007098:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800709c:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800709e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80070a0:	f042 0206 	orr.w	r2, r2, #6
 80070a4:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 80070a6:	699a      	ldr	r2, [r3, #24]
 80070a8:	f042 0201 	orr.w	r2, r2, #1
 80070ac:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80070ae:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 80070b0:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80070b2:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 80070b6:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 80070ba:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80070bc:	2001      	movs	r0, #1
 80070be:	e7fc      	b.n	80070ba <HAL_LTDC_Init+0xce>
 80070c0:	f000f800 	.word	0xf000f800

080070c4 <HAL_LTDC_ErrorCallback>:
 80070c4:	4770      	bx	lr

080070c6 <HAL_LTDC_ReloadEventCallback>:
 80070c6:	4770      	bx	lr

080070c8 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80070c8:	6803      	ldr	r3, [r0, #0]
{
 80070ca:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80070cc:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 80070ce:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80070d0:	0772      	lsls	r2, r6, #29
{
 80070d2:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80070d4:	d514      	bpl.n	8007100 <HAL_LTDC_IRQHandler+0x38>
 80070d6:	0769      	lsls	r1, r5, #29
 80070d8:	d512      	bpl.n	8007100 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 80070da:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80070dc:	f022 0204 	bic.w	r2, r2, #4
 80070e0:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 80070e2:	2204      	movs	r2, #4
 80070e4:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 80070e6:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 80070ea:	f043 0301 	orr.w	r3, r3, #1
 80070ee:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 80070f2:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80070f4:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80070f8:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 80070fc:	f7ff ffe2 	bl	80070c4 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8007100:	07b2      	lsls	r2, r6, #30
 8007102:	d516      	bpl.n	8007132 <HAL_LTDC_IRQHandler+0x6a>
 8007104:	07ab      	lsls	r3, r5, #30
 8007106:	d514      	bpl.n	8007132 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8007108:	6823      	ldr	r3, [r4, #0]
 800710a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800710c:	f022 0202 	bic.w	r2, r2, #2
 8007110:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8007112:	2202      	movs	r2, #2
 8007114:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8007116:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800711a:	4313      	orrs	r3, r2
 800711c:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8007120:	2304      	movs	r3, #4
 8007122:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8007126:	2300      	movs	r3, #0
 8007128:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800712c:	4620      	mov	r0, r4
 800712e:	f7ff ffc9 	bl	80070c4 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8007132:	07f0      	lsls	r0, r6, #31
 8007134:	d510      	bpl.n	8007158 <HAL_LTDC_IRQHandler+0x90>
 8007136:	07e9      	lsls	r1, r5, #31
 8007138:	d50e      	bpl.n	8007158 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800713a:	6823      	ldr	r3, [r4, #0]
 800713c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800713e:	f022 0201 	bic.w	r2, r2, #1
 8007142:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8007144:	2201      	movs	r2, #1
 8007146:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 8007148:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800714a:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800714e:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8007152:	4620      	mov	r0, r4
 8007154:	f7f9 ffde 	bl	8001114 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8007158:	0732      	lsls	r2, r6, #28
 800715a:	d511      	bpl.n	8007180 <HAL_LTDC_IRQHandler+0xb8>
 800715c:	072b      	lsls	r3, r5, #28
 800715e:	d50f      	bpl.n	8007180 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8007160:	6823      	ldr	r3, [r4, #0]
 8007162:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007164:	f022 0208 	bic.w	r2, r2, #8
 8007168:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800716a:	2208      	movs	r2, #8
 800716c:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 800716e:	2301      	movs	r3, #1
 8007170:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8007174:	2300      	movs	r3, #0
 8007176:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800717a:	4620      	mov	r0, r4
 800717c:	f7ff ffa3 	bl	80070c6 <HAL_LTDC_ReloadEventCallback>
}
 8007180:	bd70      	pop	{r4, r5, r6, pc}

08007182 <HAL_LTDC_ConfigLayer>:
{
 8007182:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 8007186:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800718a:	2b01      	cmp	r3, #1
{
 800718c:	4606      	mov	r6, r0
 800718e:	460f      	mov	r7, r1
 8007190:	4694      	mov	ip, r2
 8007192:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8007196:	d01f      	beq.n	80071d8 <HAL_LTDC_ConfigLayer+0x56>
 8007198:	f04f 0801 	mov.w	r8, #1
 800719c:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80071a0:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80071a4:	2434      	movs	r4, #52	; 0x34
 80071a6:	460d      	mov	r5, r1
 80071a8:	fb04 6402 	mla	r4, r4, r2, r6
 80071ac:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80071ae:	3438      	adds	r4, #56	; 0x38
 80071b0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80071b2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80071b4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80071b6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80071b8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80071ba:	682b      	ldr	r3, [r5, #0]
 80071bc:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 80071be:	4630      	mov	r0, r6
 80071c0:	4662      	mov	r2, ip
 80071c2:	4639      	mov	r1, r7
 80071c4:	f7ff fe8c 	bl	8006ee0 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80071c8:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 80071ca:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80071cc:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 80071d0:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80071d4:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 80071d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080071dc <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 80071dc:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 80071e0:	2b01      	cmp	r3, #1
 80071e2:	f04f 0302 	mov.w	r3, #2
 80071e6:	d012      	beq.n	800720e <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80071e8:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80071ec:	6803      	ldr	r3, [r0, #0]
 80071ee:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80071f0:	f022 0201 	bic.w	r2, r2, #1
 80071f4:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 80071f6:	4a07      	ldr	r2, [pc, #28]	; (8007214 <HAL_LTDC_ProgramLineEvent+0x38>)
 80071f8:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 80071fa:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80071fc:	f042 0201 	orr.w	r2, r2, #1
 8007200:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 8007202:	2301      	movs	r3, #1
 8007204:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8007208:	2300      	movs	r3, #0
 800720a:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 800720e:	4618      	mov	r0, r3
}
 8007210:	4770      	bx	lr
 8007212:	bf00      	nop
 8007214:	40016800 	.word	0x40016800

08007218 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8007218:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800721c:	4604      	mov	r4, r0
 800721e:	b340      	cbz	r0, 8007272 <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8007220:	6803      	ldr	r3, [r0, #0]
 8007222:	07dd      	lsls	r5, r3, #31
 8007224:	d410      	bmi.n	8007248 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8007226:	6823      	ldr	r3, [r4, #0]
 8007228:	0798      	lsls	r0, r3, #30
 800722a:	d45e      	bmi.n	80072ea <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800722c:	6823      	ldr	r3, [r4, #0]
 800722e:	071a      	lsls	r2, r3, #28
 8007230:	f100 80a0 	bmi.w	8007374 <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8007234:	6823      	ldr	r3, [r4, #0]
 8007236:	075b      	lsls	r3, r3, #29
 8007238:	f100 80c0 	bmi.w	80073bc <HAL_RCC_OscConfig+0x1a4>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800723c:	69a0      	ldr	r0, [r4, #24]
 800723e:	2800      	cmp	r0, #0
 8007240:	f040 8128 	bne.w	8007494 <HAL_RCC_OscConfig+0x27c>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8007244:	2000      	movs	r0, #0
 8007246:	e02b      	b.n	80072a0 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8007248:	4b8f      	ldr	r3, [pc, #572]	; (8007488 <HAL_RCC_OscConfig+0x270>)
 800724a:	689a      	ldr	r2, [r3, #8]
 800724c:	f002 020c 	and.w	r2, r2, #12
 8007250:	2a04      	cmp	r2, #4
 8007252:	d007      	beq.n	8007264 <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8007254:	689a      	ldr	r2, [r3, #8]
 8007256:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800725a:	2a08      	cmp	r2, #8
 800725c:	d10b      	bne.n	8007276 <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800725e:	685a      	ldr	r2, [r3, #4]
 8007260:	0251      	lsls	r1, r2, #9
 8007262:	d508      	bpl.n	8007276 <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8007264:	4b88      	ldr	r3, [pc, #544]	; (8007488 <HAL_RCC_OscConfig+0x270>)
 8007266:	681b      	ldr	r3, [r3, #0]
 8007268:	039a      	lsls	r2, r3, #14
 800726a:	d5dc      	bpl.n	8007226 <HAL_RCC_OscConfig+0xe>
 800726c:	6863      	ldr	r3, [r4, #4]
 800726e:	2b00      	cmp	r3, #0
 8007270:	d1d9      	bne.n	8007226 <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 8007272:	2001      	movs	r0, #1
 8007274:	e014      	b.n	80072a0 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8007276:	6862      	ldr	r2, [r4, #4]
 8007278:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 800727c:	d113      	bne.n	80072a6 <HAL_RCC_OscConfig+0x8e>
 800727e:	681a      	ldr	r2, [r3, #0]
 8007280:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8007284:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8007286:	f7fe fd3d 	bl	8005d04 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800728a:	4e7f      	ldr	r6, [pc, #508]	; (8007488 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 800728c:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800728e:	6833      	ldr	r3, [r6, #0]
 8007290:	039b      	lsls	r3, r3, #14
 8007292:	d4c8      	bmi.n	8007226 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8007294:	f7fe fd36 	bl	8005d04 <HAL_GetTick>
 8007298:	1b40      	subs	r0, r0, r5
 800729a:	2864      	cmp	r0, #100	; 0x64
 800729c:	d9f7      	bls.n	800728e <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 800729e:	2003      	movs	r0, #3
}
 80072a0:	b002      	add	sp, #8
 80072a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80072a6:	4d78      	ldr	r5, [pc, #480]	; (8007488 <HAL_RCC_OscConfig+0x270>)
 80072a8:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 80072ac:	682b      	ldr	r3, [r5, #0]
 80072ae:	d107      	bne.n	80072c0 <HAL_RCC_OscConfig+0xa8>
 80072b0:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80072b4:	602b      	str	r3, [r5, #0]
 80072b6:	682b      	ldr	r3, [r5, #0]
 80072b8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80072bc:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80072be:	e7e2      	b.n	8007286 <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80072c0:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80072c4:	602b      	str	r3, [r5, #0]
 80072c6:	682b      	ldr	r3, [r5, #0]
 80072c8:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80072cc:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80072ce:	2a00      	cmp	r2, #0
 80072d0:	d1d9      	bne.n	8007286 <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 80072d2:	f7fe fd17 	bl	8005d04 <HAL_GetTick>
 80072d6:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80072d8:	682b      	ldr	r3, [r5, #0]
 80072da:	039f      	lsls	r7, r3, #14
 80072dc:	d5a3      	bpl.n	8007226 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80072de:	f7fe fd11 	bl	8005d04 <HAL_GetTick>
 80072e2:	1b80      	subs	r0, r0, r6
 80072e4:	2864      	cmp	r0, #100	; 0x64
 80072e6:	d9f7      	bls.n	80072d8 <HAL_RCC_OscConfig+0xc0>
 80072e8:	e7d9      	b.n	800729e <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80072ea:	4b67      	ldr	r3, [pc, #412]	; (8007488 <HAL_RCC_OscConfig+0x270>)
 80072ec:	689a      	ldr	r2, [r3, #8]
 80072ee:	f012 0f0c 	tst.w	r2, #12
 80072f2:	d007      	beq.n	8007304 <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80072f4:	689a      	ldr	r2, [r3, #8]
 80072f6:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80072fa:	2a08      	cmp	r2, #8
 80072fc:	d111      	bne.n	8007322 <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80072fe:	685b      	ldr	r3, [r3, #4]
 8007300:	025e      	lsls	r6, r3, #9
 8007302:	d40e      	bmi.n	8007322 <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8007304:	4a60      	ldr	r2, [pc, #384]	; (8007488 <HAL_RCC_OscConfig+0x270>)
 8007306:	6813      	ldr	r3, [r2, #0]
 8007308:	079d      	lsls	r5, r3, #30
 800730a:	d502      	bpl.n	8007312 <HAL_RCC_OscConfig+0xfa>
 800730c:	68e3      	ldr	r3, [r4, #12]
 800730e:	2b01      	cmp	r3, #1
 8007310:	d1af      	bne.n	8007272 <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8007312:	6813      	ldr	r3, [r2, #0]
 8007314:	6921      	ldr	r1, [r4, #16]
 8007316:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800731a:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800731e:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8007320:	e784      	b.n	800722c <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8007322:	68e2      	ldr	r2, [r4, #12]
 8007324:	4b59      	ldr	r3, [pc, #356]	; (800748c <HAL_RCC_OscConfig+0x274>)
 8007326:	b1b2      	cbz	r2, 8007356 <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 8007328:	2201      	movs	r2, #1
 800732a:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800732c:	f7fe fcea 	bl	8005d04 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007330:	4d55      	ldr	r5, [pc, #340]	; (8007488 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8007332:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007334:	682b      	ldr	r3, [r5, #0]
 8007336:	0798      	lsls	r0, r3, #30
 8007338:	d507      	bpl.n	800734a <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800733a:	682b      	ldr	r3, [r5, #0]
 800733c:	6922      	ldr	r2, [r4, #16]
 800733e:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8007342:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8007346:	602b      	str	r3, [r5, #0]
 8007348:	e770      	b.n	800722c <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800734a:	f7fe fcdb 	bl	8005d04 <HAL_GetTick>
 800734e:	1b80      	subs	r0, r0, r6
 8007350:	2802      	cmp	r0, #2
 8007352:	d9ef      	bls.n	8007334 <HAL_RCC_OscConfig+0x11c>
 8007354:	e7a3      	b.n	800729e <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 8007356:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8007358:	f7fe fcd4 	bl	8005d04 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800735c:	4e4a      	ldr	r6, [pc, #296]	; (8007488 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 800735e:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8007360:	6833      	ldr	r3, [r6, #0]
 8007362:	0799      	lsls	r1, r3, #30
 8007364:	f57f af62 	bpl.w	800722c <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8007368:	f7fe fccc 	bl	8005d04 <HAL_GetTick>
 800736c:	1b40      	subs	r0, r0, r5
 800736e:	2802      	cmp	r0, #2
 8007370:	d9f6      	bls.n	8007360 <HAL_RCC_OscConfig+0x148>
 8007372:	e794      	b.n	800729e <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8007374:	6962      	ldr	r2, [r4, #20]
 8007376:	4b45      	ldr	r3, [pc, #276]	; (800748c <HAL_RCC_OscConfig+0x274>)
 8007378:	b182      	cbz	r2, 800739c <HAL_RCC_OscConfig+0x184>
      __HAL_RCC_LSI_ENABLE();
 800737a:	2201      	movs	r2, #1
 800737c:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8007380:	f7fe fcc0 	bl	8005d04 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8007384:	4e40      	ldr	r6, [pc, #256]	; (8007488 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 8007386:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8007388:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800738a:	079f      	lsls	r7, r3, #30
 800738c:	f53f af52 	bmi.w	8007234 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8007390:	f7fe fcb8 	bl	8005d04 <HAL_GetTick>
 8007394:	1b40      	subs	r0, r0, r5
 8007396:	2802      	cmp	r0, #2
 8007398:	d9f6      	bls.n	8007388 <HAL_RCC_OscConfig+0x170>
 800739a:	e780      	b.n	800729e <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 800739c:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 80073a0:	f7fe fcb0 	bl	8005d04 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80073a4:	4e38      	ldr	r6, [pc, #224]	; (8007488 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 80073a6:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80073a8:	6f73      	ldr	r3, [r6, #116]	; 0x74
 80073aa:	0798      	lsls	r0, r3, #30
 80073ac:	f57f af42 	bpl.w	8007234 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80073b0:	f7fe fca8 	bl	8005d04 <HAL_GetTick>
 80073b4:	1b40      	subs	r0, r0, r5
 80073b6:	2802      	cmp	r0, #2
 80073b8:	d9f6      	bls.n	80073a8 <HAL_RCC_OscConfig+0x190>
 80073ba:	e770      	b.n	800729e <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 80073bc:	4b32      	ldr	r3, [pc, #200]	; (8007488 <HAL_RCC_OscConfig+0x270>)
 80073be:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80073c0:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 80073c4:	d128      	bne.n	8007418 <HAL_RCC_OscConfig+0x200>
      __HAL_RCC_PWR_CLK_ENABLE();
 80073c6:	9201      	str	r2, [sp, #4]
 80073c8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80073ca:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80073ce:	641a      	str	r2, [r3, #64]	; 0x40
 80073d0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80073d2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80073d6:	9301      	str	r3, [sp, #4]
 80073d8:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 80073da:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80073dc:	4d2c      	ldr	r5, [pc, #176]	; (8007490 <HAL_RCC_OscConfig+0x278>)
 80073de:	682b      	ldr	r3, [r5, #0]
 80073e0:	05d9      	lsls	r1, r3, #23
 80073e2:	d51b      	bpl.n	800741c <HAL_RCC_OscConfig+0x204>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80073e4:	68a3      	ldr	r3, [r4, #8]
 80073e6:	4d28      	ldr	r5, [pc, #160]	; (8007488 <HAL_RCC_OscConfig+0x270>)
 80073e8:	2b01      	cmp	r3, #1
 80073ea:	d127      	bne.n	800743c <HAL_RCC_OscConfig+0x224>
 80073ec:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80073ee:	f043 0301 	orr.w	r3, r3, #1
 80073f2:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 80073f4:	f7fe fc86 	bl	8005d04 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80073f8:	4e23      	ldr	r6, [pc, #140]	; (8007488 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 80073fa:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80073fc:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8007400:	6f33      	ldr	r3, [r6, #112]	; 0x70
 8007402:	079b      	lsls	r3, r3, #30
 8007404:	d539      	bpl.n	800747a <HAL_RCC_OscConfig+0x262>
    if(pwrclkchanged == SET)
 8007406:	2f00      	cmp	r7, #0
 8007408:	f43f af18 	beq.w	800723c <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 800740c:	4a1e      	ldr	r2, [pc, #120]	; (8007488 <HAL_RCC_OscConfig+0x270>)
 800740e:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8007410:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8007414:	6413      	str	r3, [r2, #64]	; 0x40
 8007416:	e711      	b.n	800723c <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 8007418:	2700      	movs	r7, #0
 800741a:	e7df      	b.n	80073dc <HAL_RCC_OscConfig+0x1c4>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800741c:	682b      	ldr	r3, [r5, #0]
 800741e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8007422:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8007424:	f7fe fc6e 	bl	8005d04 <HAL_GetTick>
 8007428:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800742a:	682b      	ldr	r3, [r5, #0]
 800742c:	05da      	lsls	r2, r3, #23
 800742e:	d4d9      	bmi.n	80073e4 <HAL_RCC_OscConfig+0x1cc>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8007430:	f7fe fc68 	bl	8005d04 <HAL_GetTick>
 8007434:	1b80      	subs	r0, r0, r6
 8007436:	2802      	cmp	r0, #2
 8007438:	d9f7      	bls.n	800742a <HAL_RCC_OscConfig+0x212>
 800743a:	e730      	b.n	800729e <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800743c:	2b05      	cmp	r3, #5
 800743e:	d104      	bne.n	800744a <HAL_RCC_OscConfig+0x232>
 8007440:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007442:	f043 0304 	orr.w	r3, r3, #4
 8007446:	672b      	str	r3, [r5, #112]	; 0x70
 8007448:	e7d0      	b.n	80073ec <HAL_RCC_OscConfig+0x1d4>
 800744a:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 800744c:	f022 0201 	bic.w	r2, r2, #1
 8007450:	672a      	str	r2, [r5, #112]	; 0x70
 8007452:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8007454:	f022 0204 	bic.w	r2, r2, #4
 8007458:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800745a:	2b00      	cmp	r3, #0
 800745c:	d1ca      	bne.n	80073f4 <HAL_RCC_OscConfig+0x1dc>
      tickstart = HAL_GetTick();
 800745e:	f7fe fc51 	bl	8005d04 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007462:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 8007466:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8007468:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800746a:	0798      	lsls	r0, r3, #30
 800746c:	d5cb      	bpl.n	8007406 <HAL_RCC_OscConfig+0x1ee>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800746e:	f7fe fc49 	bl	8005d04 <HAL_GetTick>
 8007472:	1b80      	subs	r0, r0, r6
 8007474:	4540      	cmp	r0, r8
 8007476:	d9f7      	bls.n	8007468 <HAL_RCC_OscConfig+0x250>
 8007478:	e711      	b.n	800729e <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800747a:	f7fe fc43 	bl	8005d04 <HAL_GetTick>
 800747e:	1b40      	subs	r0, r0, r5
 8007480:	4540      	cmp	r0, r8
 8007482:	d9bd      	bls.n	8007400 <HAL_RCC_OscConfig+0x1e8>
 8007484:	e70b      	b.n	800729e <HAL_RCC_OscConfig+0x86>
 8007486:	bf00      	nop
 8007488:	40023800 	.word	0x40023800
 800748c:	42470000 	.word	0x42470000
 8007490:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8007494:	4d33      	ldr	r5, [pc, #204]	; (8007564 <HAL_RCC_OscConfig+0x34c>)
 8007496:	68ab      	ldr	r3, [r5, #8]
 8007498:	f003 030c 	and.w	r3, r3, #12
 800749c:	2b08      	cmp	r3, #8
 800749e:	d03d      	beq.n	800751c <HAL_RCC_OscConfig+0x304>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80074a0:	4b31      	ldr	r3, [pc, #196]	; (8007568 <HAL_RCC_OscConfig+0x350>)
 80074a2:	2200      	movs	r2, #0
 80074a4:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 80074a6:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80074a8:	d12b      	bne.n	8007502 <HAL_RCC_OscConfig+0x2ea>
        tickstart = HAL_GetTick();
 80074aa:	f7fe fc2b 	bl	8005d04 <HAL_GetTick>
 80074ae:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80074b0:	682b      	ldr	r3, [r5, #0]
 80074b2:	0199      	lsls	r1, r3, #6
 80074b4:	d41f      	bmi.n	80074f6 <HAL_RCC_OscConfig+0x2de>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 80074b6:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 80074ba:	4313      	orrs	r3, r2
 80074bc:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80074be:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80074c2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80074c4:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80074c8:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80074ca:	0852      	lsrs	r2, r2, #1
 80074cc:	3a01      	subs	r2, #1
 80074ce:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80074d2:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 80074d4:	4b24      	ldr	r3, [pc, #144]	; (8007568 <HAL_RCC_OscConfig+0x350>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80074d6:	4d23      	ldr	r5, [pc, #140]	; (8007564 <HAL_RCC_OscConfig+0x34c>)
        __HAL_RCC_PLL_ENABLE();
 80074d8:	2201      	movs	r2, #1
 80074da:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 80074dc:	f7fe fc12 	bl	8005d04 <HAL_GetTick>
 80074e0:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80074e2:	682b      	ldr	r3, [r5, #0]
 80074e4:	019a      	lsls	r2, r3, #6
 80074e6:	f53f aead 	bmi.w	8007244 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80074ea:	f7fe fc0b 	bl	8005d04 <HAL_GetTick>
 80074ee:	1b00      	subs	r0, r0, r4
 80074f0:	2802      	cmp	r0, #2
 80074f2:	d9f6      	bls.n	80074e2 <HAL_RCC_OscConfig+0x2ca>
 80074f4:	e6d3      	b.n	800729e <HAL_RCC_OscConfig+0x86>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80074f6:	f7fe fc05 	bl	8005d04 <HAL_GetTick>
 80074fa:	1b80      	subs	r0, r0, r6
 80074fc:	2802      	cmp	r0, #2
 80074fe:	d9d7      	bls.n	80074b0 <HAL_RCC_OscConfig+0x298>
 8007500:	e6cd      	b.n	800729e <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 8007502:	f7fe fbff 	bl	8005d04 <HAL_GetTick>
 8007506:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8007508:	682b      	ldr	r3, [r5, #0]
 800750a:	019b      	lsls	r3, r3, #6
 800750c:	f57f ae9a 	bpl.w	8007244 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8007510:	f7fe fbf8 	bl	8005d04 <HAL_GetTick>
 8007514:	1b00      	subs	r0, r0, r4
 8007516:	2802      	cmp	r0, #2
 8007518:	d9f6      	bls.n	8007508 <HAL_RCC_OscConfig+0x2f0>
 800751a:	e6c0      	b.n	800729e <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800751c:	2801      	cmp	r0, #1
 800751e:	f43f aebf 	beq.w	80072a0 <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 8007522:	686b      	ldr	r3, [r5, #4]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8007524:	69e2      	ldr	r2, [r4, #28]
 8007526:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
 800752a:	4291      	cmp	r1, r2
 800752c:	f47f aea1 	bne.w	8007272 <HAL_RCC_OscConfig+0x5a>
 8007530:	6a21      	ldr	r1, [r4, #32]
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8007532:	f003 023f 	and.w	r2, r3, #63	; 0x3f
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8007536:	428a      	cmp	r2, r1
 8007538:	f47f ae9b 	bne.w	8007272 <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 800753c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800753e:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 8007542:	401a      	ands	r2, r3
 8007544:	428a      	cmp	r2, r1
 8007546:	f47f ae94 	bne.w	8007272 <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 800754a:	6aa1      	ldr	r1, [r4, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 800754c:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8007550:	428a      	cmp	r2, r1
 8007552:	f47f ae8e 	bne.w	8007272 <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8007556:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 8007558:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 800755c:	4293      	cmp	r3, r2
 800755e:	f43f ae71 	beq.w	8007244 <HAL_RCC_OscConfig+0x2c>
 8007562:	e686      	b.n	8007272 <HAL_RCC_OscConfig+0x5a>
 8007564:	40023800 	.word	0x40023800
 8007568:	42470000 	.word	0x42470000

0800756c <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800756c:	4913      	ldr	r1, [pc, #76]	; (80075bc <HAL_RCC_GetSysClockFreq+0x50>)
{
 800756e:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007570:	688b      	ldr	r3, [r1, #8]
 8007572:	f003 030c 	and.w	r3, r3, #12
 8007576:	2b04      	cmp	r3, #4
 8007578:	d01c      	beq.n	80075b4 <HAL_RCC_GetSysClockFreq+0x48>
 800757a:	2b08      	cmp	r3, #8
 800757c:	d11c      	bne.n	80075b8 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800757e:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8007580:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007582:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8007584:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007588:	bf14      	ite	ne
 800758a:	480d      	ldrne	r0, [pc, #52]	; (80075c0 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800758c:	480d      	ldreq	r0, [pc, #52]	; (80075c4 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800758e:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8007592:	bf18      	it	ne
 8007594:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8007596:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800759a:	fba1 0100 	umull	r0, r1, r1, r0
 800759e:	f7f8 fe77 	bl	8000290 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 80075a2:	4b06      	ldr	r3, [pc, #24]	; (80075bc <HAL_RCC_GetSysClockFreq+0x50>)
 80075a4:	685b      	ldr	r3, [r3, #4]
 80075a6:	f3c3 4301 	ubfx	r3, r3, #16, #2
 80075aa:	3301      	adds	r3, #1
 80075ac:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 80075ae:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 80075b2:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80075b4:	4802      	ldr	r0, [pc, #8]	; (80075c0 <HAL_RCC_GetSysClockFreq+0x54>)
 80075b6:	e7fc      	b.n	80075b2 <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 80075b8:	4802      	ldr	r0, [pc, #8]	; (80075c4 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 80075ba:	e7fa      	b.n	80075b2 <HAL_RCC_GetSysClockFreq+0x46>
 80075bc:	40023800 	.word	0x40023800
 80075c0:	007a1200 	.word	0x007a1200
 80075c4:	00f42400 	.word	0x00f42400

080075c8 <HAL_RCC_ClockConfig>:
{
 80075c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80075cc:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 80075ce:	4604      	mov	r4, r0
 80075d0:	b910      	cbnz	r0, 80075d8 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 80075d2:	2001      	movs	r0, #1
}
 80075d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 80075d8:	4b44      	ldr	r3, [pc, #272]	; (80076ec <HAL_RCC_ClockConfig+0x124>)
 80075da:	681a      	ldr	r2, [r3, #0]
 80075dc:	f002 020f 	and.w	r2, r2, #15
 80075e0:	428a      	cmp	r2, r1
 80075e2:	d328      	bcc.n	8007636 <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80075e4:	6822      	ldr	r2, [r4, #0]
 80075e6:	0797      	lsls	r7, r2, #30
 80075e8:	d42d      	bmi.n	8007646 <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80075ea:	07d0      	lsls	r0, r2, #31
 80075ec:	d441      	bmi.n	8007672 <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 80075ee:	4b3f      	ldr	r3, [pc, #252]	; (80076ec <HAL_RCC_ClockConfig+0x124>)
 80075f0:	681a      	ldr	r2, [r3, #0]
 80075f2:	f002 020f 	and.w	r2, r2, #15
 80075f6:	42aa      	cmp	r2, r5
 80075f8:	d866      	bhi.n	80076c8 <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80075fa:	6822      	ldr	r2, [r4, #0]
 80075fc:	0751      	lsls	r1, r2, #29
 80075fe:	d46c      	bmi.n	80076da <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8007600:	0713      	lsls	r3, r2, #28
 8007602:	d507      	bpl.n	8007614 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8007604:	4a3a      	ldr	r2, [pc, #232]	; (80076f0 <HAL_RCC_ClockConfig+0x128>)
 8007606:	6921      	ldr	r1, [r4, #16]
 8007608:	6893      	ldr	r3, [r2, #8]
 800760a:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800760e:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8007612:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8007614:	f7ff ffaa 	bl	800756c <HAL_RCC_GetSysClockFreq>
 8007618:	4b35      	ldr	r3, [pc, #212]	; (80076f0 <HAL_RCC_ClockConfig+0x128>)
 800761a:	4a36      	ldr	r2, [pc, #216]	; (80076f4 <HAL_RCC_ClockConfig+0x12c>)
 800761c:	689b      	ldr	r3, [r3, #8]
 800761e:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8007622:	5cd3      	ldrb	r3, [r2, r3]
 8007624:	40d8      	lsrs	r0, r3
 8007626:	4b34      	ldr	r3, [pc, #208]	; (80076f8 <HAL_RCC_ClockConfig+0x130>)
 8007628:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 800762a:	4b34      	ldr	r3, [pc, #208]	; (80076fc <HAL_RCC_ClockConfig+0x134>)
 800762c:	6818      	ldr	r0, [r3, #0]
 800762e:	f7fa fd07 	bl	8002040 <HAL_InitTick>
  return HAL_OK;
 8007632:	2000      	movs	r0, #0
 8007634:	e7ce      	b.n	80075d4 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8007636:	b2ca      	uxtb	r2, r1
 8007638:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800763a:	681b      	ldr	r3, [r3, #0]
 800763c:	f003 030f 	and.w	r3, r3, #15
 8007640:	428b      	cmp	r3, r1
 8007642:	d1c6      	bne.n	80075d2 <HAL_RCC_ClockConfig+0xa>
 8007644:	e7ce      	b.n	80075e4 <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8007646:	4b2a      	ldr	r3, [pc, #168]	; (80076f0 <HAL_RCC_ClockConfig+0x128>)
 8007648:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800764c:	bf1e      	ittt	ne
 800764e:	6899      	ldrne	r1, [r3, #8]
 8007650:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 8007654:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8007656:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8007658:	bf42      	ittt	mi
 800765a:	6899      	ldrmi	r1, [r3, #8]
 800765c:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 8007660:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8007662:	4923      	ldr	r1, [pc, #140]	; (80076f0 <HAL_RCC_ClockConfig+0x128>)
 8007664:	68a0      	ldr	r0, [r4, #8]
 8007666:	688b      	ldr	r3, [r1, #8]
 8007668:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800766c:	4303      	orrs	r3, r0
 800766e:	608b      	str	r3, [r1, #8]
 8007670:	e7bb      	b.n	80075ea <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8007672:	6862      	ldr	r2, [r4, #4]
 8007674:	4b1e      	ldr	r3, [pc, #120]	; (80076f0 <HAL_RCC_ClockConfig+0x128>)
 8007676:	2a01      	cmp	r2, #1
 8007678:	d11c      	bne.n	80076b4 <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800767a:	681b      	ldr	r3, [r3, #0]
 800767c:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007680:	d0a7      	beq.n	80075d2 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8007682:	4e1b      	ldr	r6, [pc, #108]	; (80076f0 <HAL_RCC_ClockConfig+0x128>)
 8007684:	68b3      	ldr	r3, [r6, #8]
 8007686:	f023 0303 	bic.w	r3, r3, #3
 800768a:	4313      	orrs	r3, r2
 800768c:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800768e:	f7fe fb39 	bl	8005d04 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8007692:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 8007696:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8007698:	68b3      	ldr	r3, [r6, #8]
 800769a:	6862      	ldr	r2, [r4, #4]
 800769c:	f003 030c 	and.w	r3, r3, #12
 80076a0:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 80076a4:	d0a3      	beq.n	80075ee <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80076a6:	f7fe fb2d 	bl	8005d04 <HAL_GetTick>
 80076aa:	1bc0      	subs	r0, r0, r7
 80076ac:	4540      	cmp	r0, r8
 80076ae:	d9f3      	bls.n	8007698 <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 80076b0:	2003      	movs	r0, #3
 80076b2:	e78f      	b.n	80075d4 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80076b4:	1e91      	subs	r1, r2, #2
 80076b6:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80076b8:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80076ba:	d802      	bhi.n	80076c2 <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80076bc:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 80076c0:	e7de      	b.n	8007680 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80076c2:	f013 0f02 	tst.w	r3, #2
 80076c6:	e7db      	b.n	8007680 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80076c8:	b2ea      	uxtb	r2, r5
 80076ca:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80076cc:	681b      	ldr	r3, [r3, #0]
 80076ce:	f003 030f 	and.w	r3, r3, #15
 80076d2:	42ab      	cmp	r3, r5
 80076d4:	f47f af7d 	bne.w	80075d2 <HAL_RCC_ClockConfig+0xa>
 80076d8:	e78f      	b.n	80075fa <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 80076da:	4905      	ldr	r1, [pc, #20]	; (80076f0 <HAL_RCC_ClockConfig+0x128>)
 80076dc:	68e0      	ldr	r0, [r4, #12]
 80076de:	688b      	ldr	r3, [r1, #8]
 80076e0:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 80076e4:	4303      	orrs	r3, r0
 80076e6:	608b      	str	r3, [r1, #8]
 80076e8:	e78a      	b.n	8007600 <HAL_RCC_ClockConfig+0x38>
 80076ea:	bf00      	nop
 80076ec:	40023c00 	.word	0x40023c00
 80076f0:	40023800 	.word	0x40023800
 80076f4:	080234fc 	.word	0x080234fc
 80076f8:	2000007c 	.word	0x2000007c
 80076fc:	20000084 	.word	0x20000084

08007700 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8007700:	4b04      	ldr	r3, [pc, #16]	; (8007714 <HAL_RCC_GetPCLK1Freq+0x14>)
 8007702:	4a05      	ldr	r2, [pc, #20]	; (8007718 <HAL_RCC_GetPCLK1Freq+0x18>)
 8007704:	689b      	ldr	r3, [r3, #8]
 8007706:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800770a:	5cd3      	ldrb	r3, [r2, r3]
 800770c:	4a03      	ldr	r2, [pc, #12]	; (800771c <HAL_RCC_GetPCLK1Freq+0x1c>)
 800770e:	6810      	ldr	r0, [r2, #0]
}
 8007710:	40d8      	lsrs	r0, r3
 8007712:	4770      	bx	lr
 8007714:	40023800 	.word	0x40023800
 8007718:	0802350c 	.word	0x0802350c
 800771c:	2000007c 	.word	0x2000007c

08007720 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 8007720:	4b04      	ldr	r3, [pc, #16]	; (8007734 <HAL_RCC_GetPCLK2Freq+0x14>)
 8007722:	4a05      	ldr	r2, [pc, #20]	; (8007738 <HAL_RCC_GetPCLK2Freq+0x18>)
 8007724:	689b      	ldr	r3, [r3, #8]
 8007726:	f3c3 3342 	ubfx	r3, r3, #13, #3
 800772a:	5cd3      	ldrb	r3, [r2, r3]
 800772c:	4a03      	ldr	r2, [pc, #12]	; (800773c <HAL_RCC_GetPCLK2Freq+0x1c>)
 800772e:	6810      	ldr	r0, [r2, #0]
}
 8007730:	40d8      	lsrs	r0, r3
 8007732:	4770      	bx	lr
 8007734:	40023800 	.word	0x40023800
 8007738:	0802350c 	.word	0x0802350c
 800773c:	2000007c 	.word	0x2000007c

08007740 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8007740:	230f      	movs	r3, #15
 8007742:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8007744:	4b0b      	ldr	r3, [pc, #44]	; (8007774 <HAL_RCC_GetClockConfig+0x34>)
 8007746:	689a      	ldr	r2, [r3, #8]
 8007748:	f002 0203 	and.w	r2, r2, #3
 800774c:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800774e:	689a      	ldr	r2, [r3, #8]
 8007750:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8007754:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 8007756:	689a      	ldr	r2, [r3, #8]
 8007758:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800775c:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800775e:	689b      	ldr	r3, [r3, #8]
 8007760:	08db      	lsrs	r3, r3, #3
 8007762:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8007766:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8007768:	4b03      	ldr	r3, [pc, #12]	; (8007778 <HAL_RCC_GetClockConfig+0x38>)
 800776a:	681b      	ldr	r3, [r3, #0]
 800776c:	f003 030f 	and.w	r3, r3, #15
 8007770:	600b      	str	r3, [r1, #0]
}
 8007772:	4770      	bx	lr
 8007774:	40023800 	.word	0x40023800
 8007778:	40023c00 	.word	0x40023c00

0800777c <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800777c:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800777e:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 8007782:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007784:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8007786:	f040 808c 	bne.w	80078a2 <HAL_RCCEx_PeriphCLKConfig+0x126>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800778a:	6823      	ldr	r3, [r4, #0]
 800778c:	f013 0f0c 	tst.w	r3, #12
 8007790:	d045      	beq.n	800781e <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8007792:	4b8b      	ldr	r3, [pc, #556]	; (80079c0 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8007794:	4d8b      	ldr	r5, [pc, #556]	; (80079c4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_DISABLE();
 8007796:	2200      	movs	r2, #0
 8007798:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800779a:	f7fe fab3 	bl	8005d04 <HAL_GetTick>
 800779e:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 80077a0:	682b      	ldr	r3, [r5, #0]
 80077a2:	009f      	lsls	r7, r3, #2
 80077a4:	f100 80cf 	bmi.w	8007946 <HAL_RCCEx_PeriphCLKConfig+0x1ca>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 80077a8:	6821      	ldr	r1, [r4, #0]
 80077aa:	074e      	lsls	r6, r1, #29
 80077ac:	d515      	bpl.n	80077da <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 80077ae:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 80077b2:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 80077b6:	061b      	lsls	r3, r3, #24
 80077b8:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 80077bc:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 80077c0:	4313      	orrs	r3, r2
 80077c2:	f8c5 3088 	str.w	r3, [r5, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 80077c6:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 80077ca:	6a22      	ldr	r2, [r4, #32]
 80077cc:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 80077d0:	3a01      	subs	r2, #1
 80077d2:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80077d6:	f8c5 308c 	str.w	r3, [r5, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 80077da:	070d      	lsls	r5, r1, #28
 80077dc:	d514      	bpl.n	8007808 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80077de:	4a79      	ldr	r2, [pc, #484]	; (80079c4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 80077e0:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80077e2:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 80077e6:	6920      	ldr	r0, [r4, #16]
 80077e8:	071b      	lsls	r3, r3, #28
 80077ea:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 80077ee:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 80077f2:	430b      	orrs	r3, r1
 80077f4:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 80077f8:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 80077fc:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80077fe:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8007802:	430b      	orrs	r3, r1
 8007804:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8007808:	4b6d      	ldr	r3, [pc, #436]	; (80079c0 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800780a:	4e6e      	ldr	r6, [pc, #440]	; (80079c4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_ENABLE();
 800780c:	2201      	movs	r2, #1
 800780e:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 8007810:	f7fe fa78 	bl	8005d04 <HAL_GetTick>
 8007814:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8007816:	6833      	ldr	r3, [r6, #0]
 8007818:	0098      	lsls	r0, r3, #2
 800781a:	f140 809b 	bpl.w	8007954 <HAL_RCCEx_PeriphCLKConfig+0x1d8>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800781e:	6823      	ldr	r3, [r4, #0]
 8007820:	069b      	lsls	r3, r3, #26
 8007822:	d533      	bpl.n	800788c <HAL_RCCEx_PeriphCLKConfig+0x110>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8007824:	2300      	movs	r3, #0
 8007826:	9301      	str	r3, [sp, #4]
 8007828:	4b66      	ldr	r3, [pc, #408]	; (80079c4 <HAL_RCCEx_PeriphCLKConfig+0x248>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 800782a:	4d67      	ldr	r5, [pc, #412]	; (80079c8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800782c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800782e:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8007832:	641a      	str	r2, [r3, #64]	; 0x40
 8007834:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007836:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800783a:	9301      	str	r3, [sp, #4]
 800783c:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800783e:	682b      	ldr	r3, [r5, #0]
 8007840:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8007844:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 8007846:	f7fe fa5d 	bl	8005d04 <HAL_GetTick>
 800784a:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 800784c:	682b      	ldr	r3, [r5, #0]
 800784e:	05d9      	lsls	r1, r3, #23
 8007850:	f140 8087 	bpl.w	8007962 <HAL_RCCEx_PeriphCLKConfig+0x1e6>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8007854:	4d5b      	ldr	r5, [pc, #364]	; (80079c4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8007856:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8007858:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 800785c:	f040 8088 	bne.w	8007970 <HAL_RCCEx_PeriphCLKConfig+0x1f4>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8007860:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8007862:	f403 7240 	and.w	r2, r3, #768	; 0x300
 8007866:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800786a:	4a56      	ldr	r2, [pc, #344]	; (80079c4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800786c:	f040 80a4 	bne.w	80079b8 <HAL_RCCEx_PeriphCLKConfig+0x23c>
 8007870:	6891      	ldr	r1, [r2, #8]
 8007872:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 8007876:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 800787a:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 800787e:	4301      	orrs	r1, r0
 8007880:	6091      	str	r1, [r2, #8]
 8007882:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8007884:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8007888:	430b      	orrs	r3, r1
 800788a:	6713      	str	r3, [r2, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800788c:	6820      	ldr	r0, [r4, #0]
 800788e:	f010 0010 	ands.w	r0, r0, #16
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8007892:	bf1f      	itttt	ne
 8007894:	4b4d      	ldrne	r3, [pc, #308]	; (80079cc <HAL_RCCEx_PeriphCLKConfig+0x250>)
 8007896:	f894 202c 	ldrbne.w	r2, [r4, #44]	; 0x2c
 800789a:	f8c3 21e0 	strne.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800789e:	2000      	movne	r0, #0
 80078a0:	e04f      	b.n	8007942 <HAL_RCCEx_PeriphCLKConfig+0x1c6>
    __HAL_RCC_PLLI2S_DISABLE();
 80078a2:	4b47      	ldr	r3, [pc, #284]	; (80079c0 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80078a4:	4e47      	ldr	r6, [pc, #284]	; (80079c4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_DISABLE();
 80078a6:	2200      	movs	r2, #0
 80078a8:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 80078aa:	f7fe fa2b 	bl	8005d04 <HAL_GetTick>
 80078ae:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80078b0:	6833      	ldr	r3, [r6, #0]
 80078b2:	011f      	lsls	r7, r3, #4
 80078b4:	d43f      	bmi.n	8007936 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 80078b6:	6821      	ldr	r1, [r4, #0]
 80078b8:	07cd      	lsls	r5, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 80078ba:	bf41      	itttt	mi
 80078bc:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 80078c0:	071b      	lslmi	r3, r3, #28
 80078c2:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 80078c6:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 80078ca:	0788      	lsls	r0, r1, #30
 80078cc:	d515      	bpl.n	80078fa <HAL_RCCEx_PeriphCLKConfig+0x17e>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 80078ce:	4a3d      	ldr	r2, [pc, #244]	; (80079c4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 80078d0:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 80078d2:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 80078d6:	6865      	ldr	r5, [r4, #4]
 80078d8:	061b      	lsls	r3, r3, #24
 80078da:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 80078de:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 80078e2:	4303      	orrs	r3, r0
 80078e4:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 80078e8:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 80078ec:	69e3      	ldr	r3, [r4, #28]
 80078ee:	f020 001f 	bic.w	r0, r0, #31
 80078f2:	3b01      	subs	r3, #1
 80078f4:	4303      	orrs	r3, r0
 80078f6:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 80078fa:	0649      	lsls	r1, r1, #25
 80078fc:	d50a      	bpl.n	8007914 <HAL_RCCEx_PeriphCLKConfig+0x198>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 80078fe:	68e3      	ldr	r3, [r4, #12]
 8007900:	6862      	ldr	r2, [r4, #4]
 8007902:	061b      	lsls	r3, r3, #24
 8007904:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8007908:	68a2      	ldr	r2, [r4, #8]
 800790a:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 800790e:	4a2d      	ldr	r2, [pc, #180]	; (80079c4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8007910:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8007914:	4b2a      	ldr	r3, [pc, #168]	; (80079c0 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8007916:	4e2b      	ldr	r6, [pc, #172]	; (80079c4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_ENABLE();
 8007918:	2201      	movs	r2, #1
 800791a:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800791c:	f7fe f9f2 	bl	8005d04 <HAL_GetTick>
 8007920:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8007922:	6833      	ldr	r3, [r6, #0]
 8007924:	011a      	lsls	r2, r3, #4
 8007926:	f53f af30 	bmi.w	800778a <HAL_RCCEx_PeriphCLKConfig+0xe>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800792a:	f7fe f9eb 	bl	8005d04 <HAL_GetTick>
 800792e:	1b40      	subs	r0, r0, r5
 8007930:	2802      	cmp	r0, #2
 8007932:	d9f6      	bls.n	8007922 <HAL_RCCEx_PeriphCLKConfig+0x1a6>
 8007934:	e004      	b.n	8007940 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8007936:	f7fe f9e5 	bl	8005d04 <HAL_GetTick>
 800793a:	1b40      	subs	r0, r0, r5
 800793c:	2802      	cmp	r0, #2
 800793e:	d9b7      	bls.n	80078b0 <HAL_RCCEx_PeriphCLKConfig+0x134>
        return HAL_TIMEOUT;
 8007940:	2003      	movs	r0, #3
}
 8007942:	b003      	add	sp, #12
 8007944:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8007946:	f7fe f9dd 	bl	8005d04 <HAL_GetTick>
 800794a:	1b80      	subs	r0, r0, r6
 800794c:	2802      	cmp	r0, #2
 800794e:	f67f af27 	bls.w	80077a0 <HAL_RCCEx_PeriphCLKConfig+0x24>
 8007952:	e7f5      	b.n	8007940 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8007954:	f7fe f9d6 	bl	8005d04 <HAL_GetTick>
 8007958:	1b40      	subs	r0, r0, r5
 800795a:	2802      	cmp	r0, #2
 800795c:	f67f af5b 	bls.w	8007816 <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8007960:	e7ee      	b.n	8007940 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8007962:	f7fe f9cf 	bl	8005d04 <HAL_GetTick>
 8007966:	1b80      	subs	r0, r0, r6
 8007968:	2802      	cmp	r0, #2
 800796a:	f67f af6f 	bls.w	800784c <HAL_RCCEx_PeriphCLKConfig+0xd0>
 800796e:	e7e7      	b.n	8007940 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8007970:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8007972:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8007976:	4293      	cmp	r3, r2
 8007978:	f43f af72 	beq.w	8007860 <HAL_RCCEx_PeriphCLKConfig+0xe4>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800797c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800797e:	4a10      	ldr	r2, [pc, #64]	; (80079c0 <HAL_RCCEx_PeriphCLKConfig+0x244>)
 8007980:	2101      	movs	r1, #1
 8007982:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8007986:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800798a:	2100      	movs	r1, #0
 800798c:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 8007990:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8007992:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007994:	07da      	lsls	r2, r3, #31
 8007996:	f57f af63 	bpl.w	8007860 <HAL_RCCEx_PeriphCLKConfig+0xe4>
        tickstart = HAL_GetTick();
 800799a:	f7fe f9b3 	bl	8005d04 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800799e:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 80079a2:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80079a4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80079a6:	079b      	lsls	r3, r3, #30
 80079a8:	f53f af5a 	bmi.w	8007860 <HAL_RCCEx_PeriphCLKConfig+0xe4>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80079ac:	f7fe f9aa 	bl	8005d04 <HAL_GetTick>
 80079b0:	1b80      	subs	r0, r0, r6
 80079b2:	42b8      	cmp	r0, r7
 80079b4:	d9f6      	bls.n	80079a4 <HAL_RCCEx_PeriphCLKConfig+0x228>
 80079b6:	e7c3      	b.n	8007940 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80079b8:	6891      	ldr	r1, [r2, #8]
 80079ba:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 80079be:	e75f      	b.n	8007880 <HAL_RCCEx_PeriphCLKConfig+0x104>
 80079c0:	42470000 	.word	0x42470000
 80079c4:	40023800 	.word	0x40023800
 80079c8:	40007000 	.word	0x40007000
 80079cc:	42471000 	.word	0x42471000

080079d0 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 80079d0:	b538      	push	{r3, r4, r5, lr}
 80079d2:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 80079d4:	4604      	mov	r4, r0
 80079d6:	b1c8      	cbz	r0, 8007a0c <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 80079d8:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80079dc:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80079e0:	b91b      	cbnz	r3, 80079ea <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 80079e2:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 80079e6:	f7fa fabf 	bl	8001f68 <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80079ea:	2302      	movs	r3, #2
 80079ec:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 80079f0:	1d21      	adds	r1, r4, #4
 80079f2:	6820      	ldr	r0, [r4, #0]
 80079f4:	f000 fcba 	bl	800836c <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 80079f8:	6862      	ldr	r2, [r4, #4]
 80079fa:	6820      	ldr	r0, [r4, #0]
 80079fc:	4629      	mov	r1, r5
 80079fe:	f000 fceb 	bl	80083d8 <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8007a02:	2301      	movs	r3, #1
 8007a04:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 8007a08:	2000      	movs	r0, #0
}
 8007a0a:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8007a0c:	2001      	movs	r0, #1
 8007a0e:	e7fc      	b.n	8007a0a <HAL_SDRAM_Init+0x3a>

08007a10 <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8007a10:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007a12:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8007a16:	2b02      	cmp	r3, #2
{
 8007a18:	4604      	mov	r4, r0
 8007a1a:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007a1c:	b2d8      	uxtb	r0, r3
 8007a1e:	d00d      	beq.n	8007a3c <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8007a20:	2302      	movs	r3, #2
 8007a22:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8007a26:	6820      	ldr	r0, [r4, #0]
 8007a28:	f000 fd12 	bl	8008450 <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8007a2c:	682b      	ldr	r3, [r5, #0]
 8007a2e:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8007a30:	bf0c      	ite	eq
 8007a32:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 8007a34:	2301      	movne	r3, #1
 8007a36:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 8007a3a:	2000      	movs	r0, #0
}
 8007a3c:	bd38      	pop	{r3, r4, r5, pc}

08007a3e <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8007a3e:	b510      	push	{r4, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007a40:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8007a44:	2b02      	cmp	r3, #2
{
 8007a46:	4604      	mov	r4, r0
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007a48:	b2d8      	uxtb	r0, r3
 8007a4a:	d009      	beq.n	8007a60 <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8007a4c:	2302      	movs	r3, #2
 8007a4e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 8007a52:	6820      	ldr	r0, [r4, #0]
 8007a54:	f000 fd23 	bl	800849e <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8007a58:	2301      	movs	r3, #1
 8007a5a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 8007a5e:	2000      	movs	r0, #0
}
 8007a60:	bd10      	pop	{r4, pc}

08007a62 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 8007a62:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007a64:	4604      	mov	r4, r0
 8007a66:	460e      	mov	r6, r1
 8007a68:	4615      	mov	r5, r2
 8007a6a:	461f      	mov	r7, r3
                                                       uint32_t Timeout, uint32_t Tickstart)
{
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8007a6c:	6822      	ldr	r2, [r4, #0]
 8007a6e:	6893      	ldr	r3, [r2, #8]
 8007a70:	ea36 0303 	bics.w	r3, r6, r3
 8007a74:	d001      	beq.n	8007a7a <SPI_WaitFlagStateUntilTimeout.constprop.0+0x18>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8007a76:	2000      	movs	r0, #0
 8007a78:	e02d      	b.n	8007ad6 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x74>
    if (Timeout != HAL_MAX_DELAY)
 8007a7a:	1c6b      	adds	r3, r5, #1
 8007a7c:	d0f7      	beq.n	8007a6e <SPI_WaitFlagStateUntilTimeout.constprop.0+0xc>
      if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
 8007a7e:	f7fe f941 	bl	8005d04 <HAL_GetTick>
 8007a82:	1bc0      	subs	r0, r0, r7
 8007a84:	4285      	cmp	r5, r0
 8007a86:	d8f1      	bhi.n	8007a6c <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8007a88:	6823      	ldr	r3, [r4, #0]
 8007a8a:	685a      	ldr	r2, [r3, #4]
 8007a8c:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8007a90:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007a92:	6862      	ldr	r2, [r4, #4]
 8007a94:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8007a98:	d10a      	bne.n	8007ab0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4e>
 8007a9a:	68a2      	ldr	r2, [r4, #8]
 8007a9c:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8007aa0:	d002      	beq.n	8007aa8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x46>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8007aa2:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8007aa6:	d103      	bne.n	8007ab0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4e>
          __HAL_SPI_DISABLE(hspi);
 8007aa8:	681a      	ldr	r2, [r3, #0]
 8007aaa:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007aae:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8007ab0:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8007ab2:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 8007ab6:	d107      	bne.n	8007ac8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
          SPI_RESET_CRC(hspi);
 8007ab8:	681a      	ldr	r2, [r3, #0]
 8007aba:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8007abe:	601a      	str	r2, [r3, #0]
 8007ac0:	681a      	ldr	r2, [r3, #0]
 8007ac2:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8007ac6:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 8007ac8:	2301      	movs	r3, #1
 8007aca:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 8007ace:	2300      	movs	r3, #0
 8007ad0:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 8007ad4:	2003      	movs	r0, #3
}
 8007ad6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08007ad8 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 8007ad8:	b538      	push	{r3, r4, r5, lr}
 8007ada:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007adc:	6842      	ldr	r2, [r0, #4]
 8007ade:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8007ae2:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007ae4:	d11f      	bne.n	8007b26 <SPI_EndRxTransaction+0x4e>
 8007ae6:	6882      	ldr	r2, [r0, #8]
 8007ae8:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8007aec:	d002      	beq.n	8007af4 <SPI_EndRxTransaction+0x1c>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8007aee:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8007af2:	d107      	bne.n	8007b04 <SPI_EndRxTransaction+0x2c>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 8007af4:	6825      	ldr	r5, [r4, #0]
 8007af6:	6828      	ldr	r0, [r5, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8007af8:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
    __HAL_SPI_DISABLE(hspi);
 8007afc:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 8007b00:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8007b02:	d007      	beq.n	8007b14 <SPI_EndRxTransaction+0x3c>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8007b04:	460a      	mov	r2, r1
 8007b06:	2180      	movs	r1, #128	; 0x80
 8007b08:	4620      	mov	r0, r4
 8007b0a:	f7ff ffaa 	bl	8007a62 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8007b0e:	b920      	cbnz	r0, 8007b1a <SPI_EndRxTransaction+0x42>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 8007b10:	2000      	movs	r0, #0
}
 8007b12:	bd38      	pop	{r3, r4, r5, pc}
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8007b14:	460a      	mov	r2, r1
 8007b16:	2101      	movs	r1, #1
 8007b18:	e7f6      	b.n	8007b08 <SPI_EndRxTransaction+0x30>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007b1a:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8007b1c:	f043 0320 	orr.w	r3, r3, #32
 8007b20:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8007b22:	2003      	movs	r0, #3
 8007b24:	e7f5      	b.n	8007b12 <SPI_EndRxTransaction+0x3a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8007b26:	460a      	mov	r2, r1
 8007b28:	2101      	movs	r1, #1
 8007b2a:	e7ee      	b.n	8007b0a <SPI_EndRxTransaction+0x32>

08007b2c <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8007b2c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007b2e:	4613      	mov	r3, r2
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8007b30:	4a12      	ldr	r2, [pc, #72]	; (8007b7c <SPI_EndRxTxTransaction+0x50>)
 8007b32:	6815      	ldr	r5, [r2, #0]
 8007b34:	4a12      	ldr	r2, [pc, #72]	; (8007b80 <SPI_EndRxTxTransaction+0x54>)
 8007b36:	fbb5 f5f2 	udiv	r5, r5, r2
 8007b3a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8007b3e:	4355      	muls	r5, r2
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007b40:	6842      	ldr	r2, [r0, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8007b42:	9501      	str	r5, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007b44:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8007b48:	4604      	mov	r4, r0
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007b4a:	d10b      	bne.n	8007b64 <SPI_EndRxTxTransaction+0x38>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8007b4c:	460a      	mov	r2, r1
 8007b4e:	2180      	movs	r1, #128	; 0x80
 8007b50:	f7ff ff87 	bl	8007a62 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8007b54:	b178      	cbz	r0, 8007b76 <SPI_EndRxTxTransaction+0x4a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007b56:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8007b58:	f043 0320 	orr.w	r3, r3, #32
 8007b5c:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8007b5e:	2003      	movs	r0, #3
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 8007b60:	b003      	add	sp, #12
 8007b62:	bd30      	pop	{r4, r5, pc}
      if (count == 0U)
 8007b64:	9b01      	ldr	r3, [sp, #4]
 8007b66:	b133      	cbz	r3, 8007b76 <SPI_EndRxTxTransaction+0x4a>
      count--;
 8007b68:	9b01      	ldr	r3, [sp, #4]
 8007b6a:	3b01      	subs	r3, #1
 8007b6c:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8007b6e:	6823      	ldr	r3, [r4, #0]
 8007b70:	689b      	ldr	r3, [r3, #8]
 8007b72:	061b      	lsls	r3, r3, #24
 8007b74:	d4f6      	bmi.n	8007b64 <SPI_EndRxTxTransaction+0x38>
  return HAL_OK;
 8007b76:	2000      	movs	r0, #0
 8007b78:	e7f2      	b.n	8007b60 <SPI_EndRxTxTransaction+0x34>
 8007b7a:	bf00      	nop
 8007b7c:	2000007c 	.word	0x2000007c
 8007b80:	016e3600 	.word	0x016e3600

08007b84 <HAL_SPI_Init>:
{
 8007b84:	b510      	push	{r4, lr}
  if (hspi == NULL)
 8007b86:	4604      	mov	r4, r0
 8007b88:	2800      	cmp	r0, #0
 8007b8a:	d036      	beq.n	8007bfa <HAL_SPI_Init+0x76>
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8007b8c:	2300      	movs	r3, #0
 8007b8e:	6283      	str	r3, [r0, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 8007b90:	f890 3051 	ldrb.w	r3, [r0, #81]	; 0x51
 8007b94:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007b98:	b91b      	cbnz	r3, 8007ba2 <HAL_SPI_Init+0x1e>
    hspi->Lock = HAL_UNLOCKED;
 8007b9a:	f880 2050 	strb.w	r2, [r0, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 8007b9e:	f7fa f98b 	bl	8001eb8 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 8007ba2:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8007ba4:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 8007ba6:	2302      	movs	r3, #2
 8007ba8:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 8007bac:	680b      	ldr	r3, [r1, #0]
 8007bae:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8007bb2:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8007bb4:	e9d4 3001 	ldrd	r3, r0, [r4, #4]
 8007bb8:	4303      	orrs	r3, r0
 8007bba:	68e0      	ldr	r0, [r4, #12]
 8007bbc:	4303      	orrs	r3, r0
 8007bbe:	6920      	ldr	r0, [r4, #16]
 8007bc0:	4303      	orrs	r3, r0
 8007bc2:	6960      	ldr	r0, [r4, #20]
 8007bc4:	4303      	orrs	r3, r0
 8007bc6:	69e0      	ldr	r0, [r4, #28]
 8007bc8:	4303      	orrs	r3, r0
 8007bca:	6a20      	ldr	r0, [r4, #32]
 8007bcc:	4303      	orrs	r3, r0
 8007bce:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8007bd0:	4303      	orrs	r3, r0
 8007bd2:	f402 7000 	and.w	r0, r2, #512	; 0x200
 8007bd6:	4303      	orrs	r3, r0
 8007bd8:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 8007bda:	0c12      	lsrs	r2, r2, #16
 8007bdc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007bde:	f002 0204 	and.w	r2, r2, #4
 8007be2:	431a      	orrs	r2, r3
 8007be4:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8007be6:	69cb      	ldr	r3, [r1, #28]
 8007be8:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8007bec:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8007bee:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 8007bf0:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8007bf2:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8007bf4:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
}
 8007bf8:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8007bfa:	2001      	movs	r0, #1
 8007bfc:	e7fc      	b.n	8007bf8 <HAL_SPI_Init+0x74>

08007bfe <HAL_SPI_Transmit>:
{
 8007bfe:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007c02:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8007c04:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 8007c08:	2b01      	cmp	r3, #1
{
 8007c0a:	4604      	mov	r4, r0
 8007c0c:	460d      	mov	r5, r1
 8007c0e:	4617      	mov	r7, r2
  __HAL_LOCK(hspi);
 8007c10:	f000 809d 	beq.w	8007d4e <HAL_SPI_Transmit+0x150>
 8007c14:	2301      	movs	r3, #1
 8007c16:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8007c1a:	f7fe f873 	bl	8005d04 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8007c1e:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8007c22:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8007c24:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8007c26:	b2d8      	uxtb	r0, r3
 8007c28:	f040 808f 	bne.w	8007d4a <HAL_SPI_Transmit+0x14c>
  if ((pData == NULL) || (Size == 0U))
 8007c2c:	2d00      	cmp	r5, #0
 8007c2e:	d05a      	beq.n	8007ce6 <HAL_SPI_Transmit+0xe8>
 8007c30:	2f00      	cmp	r7, #0
 8007c32:	d058      	beq.n	8007ce6 <HAL_SPI_Transmit+0xe8>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8007c34:	2303      	movs	r3, #3
 8007c36:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007c3a:	68a2      	ldr	r2, [r4, #8]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8007c3c:	6325      	str	r5, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007c3e:	2300      	movs	r3, #0
 8007c40:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->RxISR       = NULL;
 8007c42:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->TxXferCount = Size;
 8007c46:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8007c48:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferCount = 0U;
 8007c4a:	87e3      	strh	r3, [r4, #62]	; 0x3e
  hspi->RxXferSize  = 0U;
 8007c4c:	87a3      	strh	r3, [r4, #60]	; 0x3c
    SPI_1LINE_TX(hspi);
 8007c4e:	6823      	ldr	r3, [r4, #0]
  hspi->TxXferSize  = Size;
 8007c50:	86a7      	strh	r7, [r4, #52]	; 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007c52:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    SPI_1LINE_TX(hspi);
 8007c56:	bf08      	it	eq
 8007c58:	681a      	ldreq	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007c5a:	68e1      	ldr	r1, [r4, #12]
    SPI_1LINE_TX(hspi);
 8007c5c:	bf04      	itt	eq
 8007c5e:	f442 4280 	orreq.w	r2, r2, #16384	; 0x4000
 8007c62:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007c64:	681a      	ldr	r2, [r3, #0]
 8007c66:	0652      	lsls	r2, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8007c68:	bf5e      	ittt	pl
 8007c6a:	681a      	ldrpl	r2, [r3, #0]
 8007c6c:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 8007c70:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007c72:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007c76:	6862      	ldr	r2, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007c78:	d141      	bne.n	8007cfe <HAL_SPI_Transmit+0x100>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007c7a:	b10a      	cbz	r2, 8007c80 <HAL_SPI_Transmit+0x82>
 8007c7c:	2f01      	cmp	r7, #1
 8007c7e:	d107      	bne.n	8007c90 <HAL_SPI_Transmit+0x92>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007c80:	f835 2b02 	ldrh.w	r2, [r5], #2
 8007c84:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8007c86:	6325      	str	r5, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007c88:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007c8a:	3b01      	subs	r3, #1
 8007c8c:	b29b      	uxth	r3, r3
 8007c8e:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8007c90:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007c92:	b29b      	uxth	r3, r3
 8007c94:	b9a3      	cbnz	r3, 8007cc0 <HAL_SPI_Transmit+0xc2>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8007c96:	4642      	mov	r2, r8
 8007c98:	4631      	mov	r1, r6
 8007c9a:	4620      	mov	r0, r4
 8007c9c:	f7ff ff46 	bl	8007b2c <SPI_EndRxTxTransaction>
 8007ca0:	2800      	cmp	r0, #0
 8007ca2:	d14f      	bne.n	8007d44 <HAL_SPI_Transmit+0x146>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8007ca4:	68a3      	ldr	r3, [r4, #8]
 8007ca6:	b933      	cbnz	r3, 8007cb6 <HAL_SPI_Transmit+0xb8>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8007ca8:	9301      	str	r3, [sp, #4]
 8007caa:	6823      	ldr	r3, [r4, #0]
 8007cac:	68da      	ldr	r2, [r3, #12]
 8007cae:	9201      	str	r2, [sp, #4]
 8007cb0:	689b      	ldr	r3, [r3, #8]
 8007cb2:	9301      	str	r3, [sp, #4]
 8007cb4:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8007cb6:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8007cb8:	3800      	subs	r0, #0
 8007cba:	bf18      	it	ne
 8007cbc:	2001      	movne	r0, #1
error:
 8007cbe:	e012      	b.n	8007ce6 <HAL_SPI_Transmit+0xe8>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8007cc0:	6822      	ldr	r2, [r4, #0]
 8007cc2:	6893      	ldr	r3, [r2, #8]
 8007cc4:	0798      	lsls	r0, r3, #30
 8007cc6:	d505      	bpl.n	8007cd4 <HAL_SPI_Transmit+0xd6>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007cc8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007cca:	f833 1b02 	ldrh.w	r1, [r3], #2
 8007cce:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8007cd0:	6323      	str	r3, [r4, #48]	; 0x30
 8007cd2:	e7d9      	b.n	8007c88 <HAL_SPI_Transmit+0x8a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007cd4:	f7fe f816 	bl	8005d04 <HAL_GetTick>
 8007cd8:	eba0 0008 	sub.w	r0, r0, r8
 8007cdc:	42b0      	cmp	r0, r6
 8007cde:	d30b      	bcc.n	8007cf8 <HAL_SPI_Transmit+0xfa>
 8007ce0:	1c71      	adds	r1, r6, #1
 8007ce2:	d0d5      	beq.n	8007c90 <HAL_SPI_Transmit+0x92>
          errorcode = HAL_TIMEOUT;
 8007ce4:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8007ce6:	2301      	movs	r3, #1
 8007ce8:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8007cec:	2300      	movs	r3, #0
 8007cee:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8007cf2:	b002      	add	sp, #8
 8007cf4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007cf8:	2e00      	cmp	r6, #0
 8007cfa:	d1c9      	bne.n	8007c90 <HAL_SPI_Transmit+0x92>
 8007cfc:	e7f2      	b.n	8007ce4 <HAL_SPI_Transmit+0xe6>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007cfe:	b10a      	cbz	r2, 8007d04 <HAL_SPI_Transmit+0x106>
 8007d00:	2f01      	cmp	r7, #1
 8007d02:	d108      	bne.n	8007d16 <HAL_SPI_Transmit+0x118>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007d04:	782a      	ldrb	r2, [r5, #0]
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007d06:	731a      	strb	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8007d08:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007d0a:	3301      	adds	r3, #1
 8007d0c:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007d0e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007d10:	3b01      	subs	r3, #1
 8007d12:	b29b      	uxth	r3, r3
 8007d14:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8007d16:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007d18:	b29b      	uxth	r3, r3
 8007d1a:	2b00      	cmp	r3, #0
 8007d1c:	d0bb      	beq.n	8007c96 <HAL_SPI_Transmit+0x98>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8007d1e:	6823      	ldr	r3, [r4, #0]
 8007d20:	689a      	ldr	r2, [r3, #8]
 8007d22:	0792      	lsls	r2, r2, #30
 8007d24:	d502      	bpl.n	8007d2c <HAL_SPI_Transmit+0x12e>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007d26:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007d28:	7812      	ldrb	r2, [r2, #0]
 8007d2a:	e7ec      	b.n	8007d06 <HAL_SPI_Transmit+0x108>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007d2c:	f7fd ffea 	bl	8005d04 <HAL_GetTick>
 8007d30:	eba0 0008 	sub.w	r0, r0, r8
 8007d34:	42b0      	cmp	r0, r6
 8007d36:	d302      	bcc.n	8007d3e <HAL_SPI_Transmit+0x140>
 8007d38:	1c73      	adds	r3, r6, #1
 8007d3a:	d0ec      	beq.n	8007d16 <HAL_SPI_Transmit+0x118>
 8007d3c:	e7d2      	b.n	8007ce4 <HAL_SPI_Transmit+0xe6>
 8007d3e:	2e00      	cmp	r6, #0
 8007d40:	d1e9      	bne.n	8007d16 <HAL_SPI_Transmit+0x118>
 8007d42:	e7cf      	b.n	8007ce4 <HAL_SPI_Transmit+0xe6>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8007d44:	2320      	movs	r3, #32
 8007d46:	6563      	str	r3, [r4, #84]	; 0x54
 8007d48:	e7ac      	b.n	8007ca4 <HAL_SPI_Transmit+0xa6>
    errorcode = HAL_BUSY;
 8007d4a:	2002      	movs	r0, #2
 8007d4c:	e7cb      	b.n	8007ce6 <HAL_SPI_Transmit+0xe8>
  __HAL_LOCK(hspi);
 8007d4e:	2002      	movs	r0, #2
 8007d50:	e7cf      	b.n	8007cf2 <HAL_SPI_Transmit+0xf4>

08007d52 <HAL_SPI_TransmitReceive>:
{
 8007d52:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007d56:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8007d58:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
{
 8007d5c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  __HAL_LOCK(hspi);
 8007d5e:	2b01      	cmp	r3, #1
{
 8007d60:	4604      	mov	r4, r0
 8007d62:	460d      	mov	r5, r1
 8007d64:	4691      	mov	r9, r2
  __HAL_LOCK(hspi);
 8007d66:	f000 80e6 	beq.w	8007f36 <HAL_SPI_TransmitReceive+0x1e4>
 8007d6a:	2301      	movs	r3, #1
 8007d6c:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8007d70:	f7fd ffc8 	bl	8005d04 <HAL_GetTick>
  tmp_state           = hspi->State;
 8007d74:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 8007d78:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8007d7a:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8007d7c:	4680      	mov	r8, r0
  tmp_state           = hspi->State;
 8007d7e:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8007d80:	d00a      	beq.n	8007d98 <HAL_SPI_TransmitReceive+0x46>
 8007d82:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8007d86:	f040 80d4 	bne.w	8007f32 <HAL_SPI_TransmitReceive+0x1e0>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8007d8a:	68a3      	ldr	r3, [r4, #8]
 8007d8c:	2b00      	cmp	r3, #0
 8007d8e:	f040 80d0 	bne.w	8007f32 <HAL_SPI_TransmitReceive+0x1e0>
 8007d92:	2904      	cmp	r1, #4
 8007d94:	f040 80cd 	bne.w	8007f32 <HAL_SPI_TransmitReceive+0x1e0>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8007d98:	2d00      	cmp	r5, #0
 8007d9a:	d040      	beq.n	8007e1e <HAL_SPI_TransmitReceive+0xcc>
 8007d9c:	f1b9 0f00 	cmp.w	r9, #0
 8007da0:	d03d      	beq.n	8007e1e <HAL_SPI_TransmitReceive+0xcc>
 8007da2:	2e00      	cmp	r6, #0
 8007da4:	d03b      	beq.n	8007e1e <HAL_SPI_TransmitReceive+0xcc>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8007da6:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8007daa:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8007dae:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8007db0:	bf1c      	itt	ne
 8007db2:	2305      	movne	r3, #5
 8007db4:	f884 3051 	strbne.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007db8:	2300      	movs	r3, #0
 8007dba:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 8007dbc:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007dc0:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8007dc2:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 8007dc4:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007dc6:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 8007dc8:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007dca:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 8007dcc:	bf58      	it	pl
 8007dce:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 8007dd0:	6325      	str	r5, [r4, #48]	; 0x30
    __HAL_SPI_ENABLE(hspi);
 8007dd2:	bf58      	it	pl
 8007dd4:	f041 0140 	orrpl.w	r1, r1, #64	; 0x40
  hspi->TxXferSize  = Size;
 8007dd8:	86a6      	strh	r6, [r4, #52]	; 0x34
    __HAL_SPI_ENABLE(hspi);
 8007dda:	bf58      	it	pl
 8007ddc:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007dde:	68e1      	ldr	r1, [r4, #12]
 8007de0:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 8007de4:	d152      	bne.n	8007e8c <HAL_SPI_TransmitReceive+0x13a>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007de6:	b10a      	cbz	r2, 8007dec <HAL_SPI_TransmitReceive+0x9a>
 8007de8:	2e01      	cmp	r6, #1
 8007dea:	d107      	bne.n	8007dfc <HAL_SPI_TransmitReceive+0xaa>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007dec:	f835 2b02 	ldrh.w	r2, [r5], #2
 8007df0:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 8007df2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8007df4:	6325      	str	r5, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8007df6:	3b01      	subs	r3, #1
 8007df8:	b29b      	uxth	r3, r3
 8007dfa:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8007dfc:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8007dfe:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007e00:	b29b      	uxth	r3, r3
 8007e02:	b973      	cbnz	r3, 8007e22 <HAL_SPI_TransmitReceive+0xd0>
 8007e04:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007e06:	b29b      	uxth	r3, r3
 8007e08:	b95b      	cbnz	r3, 8007e22 <HAL_SPI_TransmitReceive+0xd0>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8007e0a:	4642      	mov	r2, r8
 8007e0c:	4639      	mov	r1, r7
 8007e0e:	4620      	mov	r0, r4
 8007e10:	f7ff fe8c 	bl	8007b2c <SPI_EndRxTxTransaction>
 8007e14:	2800      	cmp	r0, #0
 8007e16:	f000 8081 	beq.w	8007f1c <HAL_SPI_TransmitReceive+0x1ca>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8007e1a:	2320      	movs	r3, #32
 8007e1c:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 8007e1e:	2001      	movs	r0, #1
 8007e20:	e02b      	b.n	8007e7a <HAL_SPI_TransmitReceive+0x128>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8007e22:	6821      	ldr	r1, [r4, #0]
 8007e24:	688b      	ldr	r3, [r1, #8]
 8007e26:	079e      	lsls	r6, r3, #30
 8007e28:	d50d      	bpl.n	8007e46 <HAL_SPI_TransmitReceive+0xf4>
 8007e2a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007e2c:	b29b      	uxth	r3, r3
 8007e2e:	b153      	cbz	r3, 8007e46 <HAL_SPI_TransmitReceive+0xf4>
 8007e30:	b14d      	cbz	r5, 8007e46 <HAL_SPI_TransmitReceive+0xf4>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007e32:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007e34:	f833 2b02 	ldrh.w	r2, [r3], #2
 8007e38:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8007e3a:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007e3c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007e3e:	3b01      	subs	r3, #1
 8007e40:	b29b      	uxth	r3, r3
 8007e42:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8007e44:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8007e46:	688a      	ldr	r2, [r1, #8]
 8007e48:	f012 0201 	ands.w	r2, r2, #1
 8007e4c:	d00c      	beq.n	8007e68 <HAL_SPI_TransmitReceive+0x116>
 8007e4e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007e50:	b29b      	uxth	r3, r3
 8007e52:	b14b      	cbz	r3, 8007e68 <HAL_SPI_TransmitReceive+0x116>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8007e54:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007e56:	68c9      	ldr	r1, [r1, #12]
 8007e58:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8007e5c:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8007e5e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007e60:	3b01      	subs	r3, #1
 8007e62:	b29b      	uxth	r3, r3
 8007e64:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8007e66:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8007e68:	f7fd ff4c 	bl	8005d04 <HAL_GetTick>
 8007e6c:	eba0 0008 	sub.w	r0, r0, r8
 8007e70:	42b8      	cmp	r0, r7
 8007e72:	d3c4      	bcc.n	8007dfe <HAL_SPI_TransmitReceive+0xac>
 8007e74:	1c78      	adds	r0, r7, #1
 8007e76:	d0c2      	beq.n	8007dfe <HAL_SPI_TransmitReceive+0xac>
        errorcode = HAL_TIMEOUT;
 8007e78:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8007e7a:	2301      	movs	r3, #1
 8007e7c:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8007e80:	2300      	movs	r3, #0
 8007e82:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8007e86:	b003      	add	sp, #12
 8007e88:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007e8c:	b10a      	cbz	r2, 8007e92 <HAL_SPI_TransmitReceive+0x140>
 8007e8e:	2e01      	cmp	r6, #1
 8007e90:	d108      	bne.n	8007ea4 <HAL_SPI_TransmitReceive+0x152>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007e92:	782a      	ldrb	r2, [r5, #0]
 8007e94:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8007e96:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007e98:	3301      	adds	r3, #1
 8007e9a:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8007e9c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007e9e:	3b01      	subs	r3, #1
 8007ea0:	b29b      	uxth	r3, r3
 8007ea2:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8007ea4:	2501      	movs	r5, #1
 8007ea6:	e02d      	b.n	8007f04 <HAL_SPI_TransmitReceive+0x1b2>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8007ea8:	6822      	ldr	r2, [r4, #0]
 8007eaa:	6893      	ldr	r3, [r2, #8]
 8007eac:	0799      	lsls	r1, r3, #30
 8007eae:	d50e      	bpl.n	8007ece <HAL_SPI_TransmitReceive+0x17c>
 8007eb0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007eb2:	b29b      	uxth	r3, r3
 8007eb4:	b15b      	cbz	r3, 8007ece <HAL_SPI_TransmitReceive+0x17c>
 8007eb6:	b155      	cbz	r5, 8007ece <HAL_SPI_TransmitReceive+0x17c>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 8007eb8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007eba:	781b      	ldrb	r3, [r3, #0]
 8007ebc:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 8007ebe:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007ec0:	3301      	adds	r3, #1
 8007ec2:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007ec4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007ec6:	3b01      	subs	r3, #1
 8007ec8:	b29b      	uxth	r3, r3
 8007eca:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8007ecc:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8007ece:	6822      	ldr	r2, [r4, #0]
 8007ed0:	6891      	ldr	r1, [r2, #8]
 8007ed2:	f011 0101 	ands.w	r1, r1, #1
 8007ed6:	d00d      	beq.n	8007ef4 <HAL_SPI_TransmitReceive+0x1a2>
 8007ed8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007eda:	b29b      	uxth	r3, r3
 8007edc:	b153      	cbz	r3, 8007ef4 <HAL_SPI_TransmitReceive+0x1a2>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 8007ede:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007ee0:	68d2      	ldr	r2, [r2, #12]
 8007ee2:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 8007ee4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007ee6:	3301      	adds	r3, #1
 8007ee8:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8007eea:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007eec:	3b01      	subs	r3, #1
 8007eee:	b29b      	uxth	r3, r3
 8007ef0:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8007ef2:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8007ef4:	f7fd ff06 	bl	8005d04 <HAL_GetTick>
 8007ef8:	eba0 0008 	sub.w	r0, r0, r8
 8007efc:	42b8      	cmp	r0, r7
 8007efe:	d30a      	bcc.n	8007f16 <HAL_SPI_TransmitReceive+0x1c4>
 8007f00:	1c7b      	adds	r3, r7, #1
 8007f02:	d1b9      	bne.n	8007e78 <HAL_SPI_TransmitReceive+0x126>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8007f04:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007f06:	b29b      	uxth	r3, r3
 8007f08:	2b00      	cmp	r3, #0
 8007f0a:	d1cd      	bne.n	8007ea8 <HAL_SPI_TransmitReceive+0x156>
 8007f0c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007f0e:	b29b      	uxth	r3, r3
 8007f10:	2b00      	cmp	r3, #0
 8007f12:	d1c9      	bne.n	8007ea8 <HAL_SPI_TransmitReceive+0x156>
 8007f14:	e779      	b.n	8007e0a <HAL_SPI_TransmitReceive+0xb8>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8007f16:	2f00      	cmp	r7, #0
 8007f18:	d1f4      	bne.n	8007f04 <HAL_SPI_TransmitReceive+0x1b2>
 8007f1a:	e7ad      	b.n	8007e78 <HAL_SPI_TransmitReceive+0x126>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8007f1c:	68a3      	ldr	r3, [r4, #8]
 8007f1e:	2b00      	cmp	r3, #0
 8007f20:	d1ab      	bne.n	8007e7a <HAL_SPI_TransmitReceive+0x128>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8007f22:	6823      	ldr	r3, [r4, #0]
 8007f24:	9001      	str	r0, [sp, #4]
 8007f26:	68da      	ldr	r2, [r3, #12]
 8007f28:	9201      	str	r2, [sp, #4]
 8007f2a:	689b      	ldr	r3, [r3, #8]
 8007f2c:	9301      	str	r3, [sp, #4]
 8007f2e:	9b01      	ldr	r3, [sp, #4]
 8007f30:	e7a3      	b.n	8007e7a <HAL_SPI_TransmitReceive+0x128>
    errorcode = HAL_BUSY;
 8007f32:	2002      	movs	r0, #2
 8007f34:	e7a1      	b.n	8007e7a <HAL_SPI_TransmitReceive+0x128>
  __HAL_LOCK(hspi);
 8007f36:	2002      	movs	r0, #2
 8007f38:	e7a5      	b.n	8007e86 <HAL_SPI_TransmitReceive+0x134>

08007f3a <HAL_SPI_Receive>:
{
 8007f3a:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007f3e:	461d      	mov	r5, r3
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8007f40:	6843      	ldr	r3, [r0, #4]
 8007f42:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
{
 8007f46:	4604      	mov	r4, r0
 8007f48:	4689      	mov	r9, r1
 8007f4a:	4617      	mov	r7, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8007f4c:	d10c      	bne.n	8007f68 <HAL_SPI_Receive+0x2e>
 8007f4e:	6883      	ldr	r3, [r0, #8]
 8007f50:	b953      	cbnz	r3, 8007f68 <HAL_SPI_Receive+0x2e>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8007f52:	2304      	movs	r3, #4
 8007f54:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8007f58:	4613      	mov	r3, r2
 8007f5a:	9500      	str	r5, [sp, #0]
 8007f5c:	460a      	mov	r2, r1
 8007f5e:	f7ff fef8 	bl	8007d52 <HAL_SPI_TransmitReceive>
}
 8007f62:	b003      	add	sp, #12
 8007f64:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(hspi);
 8007f68:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8007f6c:	2b01      	cmp	r3, #1
 8007f6e:	f000 8084 	beq.w	800807a <HAL_SPI_Receive+0x140>
 8007f72:	2301      	movs	r3, #1
 8007f74:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 8007f78:	f7fd fec4 	bl	8005d04 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8007f7c:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8007f80:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8007f82:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8007f84:	b2d8      	uxtb	r0, r3
 8007f86:	d176      	bne.n	8008076 <HAL_SPI_Receive+0x13c>
  if ((pData == NULL) || (Size == 0U))
 8007f88:	f1b9 0f00 	cmp.w	r9, #0
 8007f8c:	d05a      	beq.n	8008044 <HAL_SPI_Receive+0x10a>
 8007f8e:	2f00      	cmp	r7, #0
 8007f90:	d058      	beq.n	8008044 <HAL_SPI_Receive+0x10a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007f92:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 8007f94:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8007f98:	2304      	movs	r3, #4
 8007f9a:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007f9e:	2600      	movs	r6, #0
    SPI_1LINE_RX(hspi);
 8007fa0:	6823      	ldr	r3, [r4, #0]
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007fa2:	6566      	str	r6, [r4, #84]	; 0x54
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007fa4:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->RxXferCount = Size;
 8007fa8:	87e7      	strh	r7, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 8007faa:	86e6      	strh	r6, [r4, #54]	; 0x36
    SPI_1LINE_RX(hspi);
 8007fac:	bf08      	it	eq
 8007fae:	681a      	ldreq	r2, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 8007fb0:	6326      	str	r6, [r4, #48]	; 0x30
    SPI_1LINE_RX(hspi);
 8007fb2:	bf08      	it	eq
 8007fb4:	f422 4280 	biceq.w	r2, r2, #16384	; 0x4000
  hspi->TxISR       = NULL;
 8007fb8:	e9c4 6610 	strd	r6, r6, [r4, #64]	; 0x40
  hspi->TxXferSize  = 0U;
 8007fbc:	86a6      	strh	r6, [r4, #52]	; 0x34
  hspi->RxXferSize  = Size;
 8007fbe:	87a7      	strh	r7, [r4, #60]	; 0x3c
    SPI_1LINE_RX(hspi);
 8007fc0:	bf08      	it	eq
 8007fc2:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007fc4:	681a      	ldr	r2, [r3, #0]
 8007fc6:	0656      	lsls	r6, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8007fc8:	bf5e      	ittt	pl
 8007fca:	681a      	ldrpl	r2, [r3, #0]
 8007fcc:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 8007fd0:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 8007fd2:	68e3      	ldr	r3, [r4, #12]
 8007fd4:	b1f3      	cbz	r3, 8008014 <HAL_SPI_Receive+0xda>
    while (hspi->RxXferCount > 0U)
 8007fd6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007fd8:	b29b      	uxth	r3, r3
 8007fda:	b1fb      	cbz	r3, 800801c <HAL_SPI_Receive+0xe2>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8007fdc:	6823      	ldr	r3, [r4, #0]
 8007fde:	689a      	ldr	r2, [r3, #8]
 8007fe0:	07d2      	lsls	r2, r2, #31
 8007fe2:	d539      	bpl.n	8008058 <HAL_SPI_Receive+0x11e>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8007fe4:	68da      	ldr	r2, [r3, #12]
 8007fe6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007fe8:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8007fec:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8007fee:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007ff0:	3b01      	subs	r3, #1
 8007ff2:	b29b      	uxth	r3, r3
 8007ff4:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8007ff6:	e7ee      	b.n	8007fd6 <HAL_SPI_Receive+0x9c>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8007ff8:	6823      	ldr	r3, [r4, #0]
 8007ffa:	689a      	ldr	r2, [r3, #8]
 8007ffc:	07d0      	lsls	r0, r2, #31
 8007ffe:	d518      	bpl.n	8008032 <HAL_SPI_Receive+0xf8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8008000:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008002:	7b1b      	ldrb	r3, [r3, #12]
 8008004:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 8008006:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8008008:	3301      	adds	r3, #1
 800800a:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800800c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800800e:	3b01      	subs	r3, #1
 8008010:	b29b      	uxth	r3, r3
 8008012:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 8008014:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008016:	b29b      	uxth	r3, r3
 8008018:	2b00      	cmp	r3, #0
 800801a:	d1ed      	bne.n	8007ff8 <HAL_SPI_Receive+0xbe>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800801c:	4642      	mov	r2, r8
 800801e:	4629      	mov	r1, r5
 8008020:	4620      	mov	r0, r4
 8008022:	f7ff fd59 	bl	8007ad8 <SPI_EndRxTransaction>
 8008026:	bb18      	cbnz	r0, 8008070 <HAL_SPI_Receive+0x136>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8008028:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800802a:	3800      	subs	r0, #0
 800802c:	bf18      	it	ne
 800802e:	2001      	movne	r0, #1
error :
 8008030:	e008      	b.n	8008044 <HAL_SPI_Receive+0x10a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8008032:	f7fd fe67 	bl	8005d04 <HAL_GetTick>
 8008036:	eba0 0008 	sub.w	r0, r0, r8
 800803a:	42a8      	cmp	r0, r5
 800803c:	d309      	bcc.n	8008052 <HAL_SPI_Receive+0x118>
 800803e:	1c69      	adds	r1, r5, #1
 8008040:	d0e8      	beq.n	8008014 <HAL_SPI_Receive+0xda>
          errorcode = HAL_TIMEOUT;
 8008042:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8008044:	2301      	movs	r3, #1
 8008046:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800804a:	2300      	movs	r3, #0
 800804c:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  return errorcode;
 8008050:	e787      	b.n	8007f62 <HAL_SPI_Receive+0x28>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8008052:	2d00      	cmp	r5, #0
 8008054:	d1de      	bne.n	8008014 <HAL_SPI_Receive+0xda>
 8008056:	e7f4      	b.n	8008042 <HAL_SPI_Receive+0x108>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8008058:	f7fd fe54 	bl	8005d04 <HAL_GetTick>
 800805c:	eba0 0008 	sub.w	r0, r0, r8
 8008060:	42a8      	cmp	r0, r5
 8008062:	d302      	bcc.n	800806a <HAL_SPI_Receive+0x130>
 8008064:	1c6b      	adds	r3, r5, #1
 8008066:	d0b6      	beq.n	8007fd6 <HAL_SPI_Receive+0x9c>
 8008068:	e7eb      	b.n	8008042 <HAL_SPI_Receive+0x108>
 800806a:	2d00      	cmp	r5, #0
 800806c:	d1b3      	bne.n	8007fd6 <HAL_SPI_Receive+0x9c>
 800806e:	e7e8      	b.n	8008042 <HAL_SPI_Receive+0x108>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8008070:	2320      	movs	r3, #32
 8008072:	6563      	str	r3, [r4, #84]	; 0x54
 8008074:	e7d8      	b.n	8008028 <HAL_SPI_Receive+0xee>
    errorcode = HAL_BUSY;
 8008076:	2002      	movs	r0, #2
 8008078:	e7e4      	b.n	8008044 <HAL_SPI_Receive+0x10a>
  __HAL_LOCK(hspi);
 800807a:	2002      	movs	r0, #2
 800807c:	e771      	b.n	8007f62 <HAL_SPI_Receive+0x28>

0800807e <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800807e:	6803      	ldr	r3, [r0, #0]
 8008080:	68da      	ldr	r2, [r3, #12]
 8008082:	f042 0201 	orr.w	r2, r2, #1
 8008086:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8008088:	689a      	ldr	r2, [r3, #8]
 800808a:	f002 0207 	and.w	r2, r2, #7
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800808e:	2a06      	cmp	r2, #6
  {
    __HAL_TIM_ENABLE(htim);
 8008090:	bf1e      	ittt	ne
 8008092:	681a      	ldrne	r2, [r3, #0]
 8008094:	f042 0201 	orrne.w	r2, r2, #1
 8008098:	601a      	strne	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
}
 800809a:	2000      	movs	r0, #0
 800809c:	4770      	bx	lr

0800809e <HAL_TIM_OC_DelayElapsedCallback>:
 800809e:	4770      	bx	lr

080080a0 <HAL_TIM_IC_CaptureCallback>:
 80080a0:	4770      	bx	lr

080080a2 <HAL_TIM_PWM_PulseFinishedCallback>:
 80080a2:	4770      	bx	lr

080080a4 <HAL_TIM_TriggerCallback>:
 80080a4:	4770      	bx	lr

080080a6 <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 80080a6:	6803      	ldr	r3, [r0, #0]
 80080a8:	691a      	ldr	r2, [r3, #16]
 80080aa:	0791      	lsls	r1, r2, #30
{
 80080ac:	b510      	push	{r4, lr}
 80080ae:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 80080b0:	d50e      	bpl.n	80080d0 <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 80080b2:	68da      	ldr	r2, [r3, #12]
 80080b4:	0792      	lsls	r2, r2, #30
 80080b6:	d50b      	bpl.n	80080d0 <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 80080b8:	f06f 0202 	mvn.w	r2, #2
 80080bc:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 80080be:	2201      	movs	r2, #1
 80080c0:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 80080c2:	699b      	ldr	r3, [r3, #24]
 80080c4:	079b      	lsls	r3, r3, #30
 80080c6:	d077      	beq.n	80081b8 <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 80080c8:	f7ff ffea 	bl	80080a0 <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80080cc:	2300      	movs	r3, #0
 80080ce:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 80080d0:	6823      	ldr	r3, [r4, #0]
 80080d2:	691a      	ldr	r2, [r3, #16]
 80080d4:	0750      	lsls	r0, r2, #29
 80080d6:	d510      	bpl.n	80080fa <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 80080d8:	68da      	ldr	r2, [r3, #12]
 80080da:	0751      	lsls	r1, r2, #29
 80080dc:	d50d      	bpl.n	80080fa <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 80080de:	f06f 0204 	mvn.w	r2, #4
 80080e2:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80080e4:	2202      	movs	r2, #2
 80080e6:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80080e8:	699b      	ldr	r3, [r3, #24]
 80080ea:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80080ee:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80080f0:	d068      	beq.n	80081c4 <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 80080f2:	f7ff ffd5 	bl	80080a0 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80080f6:	2300      	movs	r3, #0
 80080f8:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 80080fa:	6823      	ldr	r3, [r4, #0]
 80080fc:	691a      	ldr	r2, [r3, #16]
 80080fe:	0712      	lsls	r2, r2, #28
 8008100:	d50f      	bpl.n	8008122 <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 8008102:	68da      	ldr	r2, [r3, #12]
 8008104:	0710      	lsls	r0, r2, #28
 8008106:	d50c      	bpl.n	8008122 <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8008108:	f06f 0208 	mvn.w	r2, #8
 800810c:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800810e:	2204      	movs	r2, #4
 8008110:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8008112:	69db      	ldr	r3, [r3, #28]
 8008114:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8008116:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8008118:	d05a      	beq.n	80081d0 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 800811a:	f7ff ffc1 	bl	80080a0 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800811e:	2300      	movs	r3, #0
 8008120:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8008122:	6823      	ldr	r3, [r4, #0]
 8008124:	691a      	ldr	r2, [r3, #16]
 8008126:	06d2      	lsls	r2, r2, #27
 8008128:	d510      	bpl.n	800814c <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800812a:	68da      	ldr	r2, [r3, #12]
 800812c:	06d0      	lsls	r0, r2, #27
 800812e:	d50d      	bpl.n	800814c <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8008130:	f06f 0210 	mvn.w	r2, #16
 8008134:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8008136:	2208      	movs	r2, #8
 8008138:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800813a:	69db      	ldr	r3, [r3, #28]
 800813c:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8008140:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8008142:	d04b      	beq.n	80081dc <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 8008144:	f7ff ffac 	bl	80080a0 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8008148:	2300      	movs	r3, #0
 800814a:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800814c:	6823      	ldr	r3, [r4, #0]
 800814e:	691a      	ldr	r2, [r3, #16]
 8008150:	07d1      	lsls	r1, r2, #31
 8008152:	d508      	bpl.n	8008166 <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8008154:	68da      	ldr	r2, [r3, #12]
 8008156:	07d2      	lsls	r2, r2, #31
 8008158:	d505      	bpl.n	8008166 <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800815a:	f06f 0201 	mvn.w	r2, #1
 800815e:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 8008160:	4620      	mov	r0, r4
 8008162:	f7f9 fc93 	bl	8001a8c <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8008166:	6823      	ldr	r3, [r4, #0]
 8008168:	691a      	ldr	r2, [r3, #16]
 800816a:	0610      	lsls	r0, r2, #24
 800816c:	d508      	bpl.n	8008180 <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800816e:	68da      	ldr	r2, [r3, #12]
 8008170:	0611      	lsls	r1, r2, #24
 8008172:	d505      	bpl.n	8008180 <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8008174:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8008178:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 800817a:	4620      	mov	r0, r4
 800817c:	f000 f8f5 	bl	800836a <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8008180:	6823      	ldr	r3, [r4, #0]
 8008182:	691a      	ldr	r2, [r3, #16]
 8008184:	0652      	lsls	r2, r2, #25
 8008186:	d508      	bpl.n	800819a <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8008188:	68da      	ldr	r2, [r3, #12]
 800818a:	0650      	lsls	r0, r2, #25
 800818c:	d505      	bpl.n	800819a <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800818e:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8008192:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8008194:	4620      	mov	r0, r4
 8008196:	f7ff ff85 	bl	80080a4 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800819a:	6823      	ldr	r3, [r4, #0]
 800819c:	691a      	ldr	r2, [r3, #16]
 800819e:	0691      	lsls	r1, r2, #26
 80081a0:	d522      	bpl.n	80081e8 <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 80081a2:	68da      	ldr	r2, [r3, #12]
 80081a4:	0692      	lsls	r2, r2, #26
 80081a6:	d51f      	bpl.n	80081e8 <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 80081a8:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 80081ac:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 80081ae:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 80081b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 80081b4:	f000 b8d8 	b.w	8008368 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 80081b8:	f7ff ff71 	bl	800809e <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 80081bc:	4620      	mov	r0, r4
 80081be:	f7ff ff70 	bl	80080a2 <HAL_TIM_PWM_PulseFinishedCallback>
 80081c2:	e783      	b.n	80080cc <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80081c4:	f7ff ff6b 	bl	800809e <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80081c8:	4620      	mov	r0, r4
 80081ca:	f7ff ff6a 	bl	80080a2 <HAL_TIM_PWM_PulseFinishedCallback>
 80081ce:	e792      	b.n	80080f6 <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80081d0:	f7ff ff65 	bl	800809e <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80081d4:	4620      	mov	r0, r4
 80081d6:	f7ff ff64 	bl	80080a2 <HAL_TIM_PWM_PulseFinishedCallback>
 80081da:	e7a0      	b.n	800811e <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80081dc:	f7ff ff5f 	bl	800809e <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80081e0:	4620      	mov	r0, r4
 80081e2:	f7ff ff5e 	bl	80080a2 <HAL_TIM_PWM_PulseFinishedCallback>
 80081e6:	e7af      	b.n	8008148 <HAL_TIM_IRQHandler+0xa2>
}
 80081e8:	bd10      	pop	{r4, pc}
	...

080081ec <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80081ec:	4a30      	ldr	r2, [pc, #192]	; (80082b0 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 80081ee:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80081f0:	4290      	cmp	r0, r2
 80081f2:	d012      	beq.n	800821a <TIM_Base_SetConfig+0x2e>
 80081f4:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80081f8:	d00f      	beq.n	800821a <TIM_Base_SetConfig+0x2e>
 80081fa:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80081fe:	4290      	cmp	r0, r2
 8008200:	d00b      	beq.n	800821a <TIM_Base_SetConfig+0x2e>
 8008202:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008206:	4290      	cmp	r0, r2
 8008208:	d007      	beq.n	800821a <TIM_Base_SetConfig+0x2e>
 800820a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800820e:	4290      	cmp	r0, r2
 8008210:	d003      	beq.n	800821a <TIM_Base_SetConfig+0x2e>
 8008212:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8008216:	4290      	cmp	r0, r2
 8008218:	d119      	bne.n	800824e <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 800821a:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800821c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8008220:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8008222:	4a23      	ldr	r2, [pc, #140]	; (80082b0 <TIM_Base_SetConfig+0xc4>)
 8008224:	4290      	cmp	r0, r2
 8008226:	d029      	beq.n	800827c <TIM_Base_SetConfig+0x90>
 8008228:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800822c:	d026      	beq.n	800827c <TIM_Base_SetConfig+0x90>
 800822e:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8008232:	4290      	cmp	r0, r2
 8008234:	d022      	beq.n	800827c <TIM_Base_SetConfig+0x90>
 8008236:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800823a:	4290      	cmp	r0, r2
 800823c:	d01e      	beq.n	800827c <TIM_Base_SetConfig+0x90>
 800823e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008242:	4290      	cmp	r0, r2
 8008244:	d01a      	beq.n	800827c <TIM_Base_SetConfig+0x90>
 8008246:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800824a:	4290      	cmp	r0, r2
 800824c:	d016      	beq.n	800827c <TIM_Base_SetConfig+0x90>
 800824e:	4a19      	ldr	r2, [pc, #100]	; (80082b4 <TIM_Base_SetConfig+0xc8>)
 8008250:	4290      	cmp	r0, r2
 8008252:	d013      	beq.n	800827c <TIM_Base_SetConfig+0x90>
 8008254:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008258:	4290      	cmp	r0, r2
 800825a:	d00f      	beq.n	800827c <TIM_Base_SetConfig+0x90>
 800825c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008260:	4290      	cmp	r0, r2
 8008262:	d00b      	beq.n	800827c <TIM_Base_SetConfig+0x90>
 8008264:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 8008268:	4290      	cmp	r0, r2
 800826a:	d007      	beq.n	800827c <TIM_Base_SetConfig+0x90>
 800826c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008270:	4290      	cmp	r0, r2
 8008272:	d003      	beq.n	800827c <TIM_Base_SetConfig+0x90>
 8008274:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008278:	4290      	cmp	r0, r2
 800827a:	d103      	bne.n	8008284 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800827c:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 800827e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8008282:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8008284:	694a      	ldr	r2, [r1, #20]
 8008286:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800828a:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 800828c:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800828e:	688b      	ldr	r3, [r1, #8]
 8008290:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8008292:	680b      	ldr	r3, [r1, #0]
 8008294:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8008296:	4b06      	ldr	r3, [pc, #24]	; (80082b0 <TIM_Base_SetConfig+0xc4>)
 8008298:	4298      	cmp	r0, r3
 800829a:	d003      	beq.n	80082a4 <TIM_Base_SetConfig+0xb8>
 800829c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80082a0:	4298      	cmp	r0, r3
 80082a2:	d101      	bne.n	80082a8 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 80082a4:	690b      	ldr	r3, [r1, #16]
 80082a6:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 80082a8:	2301      	movs	r3, #1
 80082aa:	6143      	str	r3, [r0, #20]
}
 80082ac:	4770      	bx	lr
 80082ae:	bf00      	nop
 80082b0:	40010000 	.word	0x40010000
 80082b4:	40014000 	.word	0x40014000

080082b8 <HAL_TIM_Base_Init>:
{
 80082b8:	b510      	push	{r4, lr}
  if (htim == NULL)
 80082ba:	4604      	mov	r4, r0
 80082bc:	b1a0      	cbz	r0, 80082e8 <HAL_TIM_Base_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 80082be:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80082c2:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80082c6:	b91b      	cbnz	r3, 80082d0 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 80082c8:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 80082cc:	f7f9 fe2a 	bl	8001f24 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 80082d0:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80082d2:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 80082d4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80082d8:	1d21      	adds	r1, r4, #4
 80082da:	f7ff ff87 	bl	80081ec <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 80082de:	2301      	movs	r3, #1
 80082e0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 80082e4:	2000      	movs	r0, #0
}
 80082e6:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80082e8:	2001      	movs	r0, #1
 80082ea:	e7fc      	b.n	80082e6 <HAL_TIM_Base_Init+0x2e>

080082ec <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        TIM_MasterConfigTypeDef *sMasterConfig)
{
 80082ec:	b530      	push	{r4, r5, lr}
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 80082ee:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 80082f2:	2b01      	cmp	r3, #1
 80082f4:	f04f 0302 	mov.w	r3, #2
 80082f8:	d032      	beq.n	8008360 <HAL_TIMEx_MasterConfigSynchronization+0x74>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 80082fa:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 80082fe:	6803      	ldr	r3, [r0, #0]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8008300:	680d      	ldr	r5, [r1, #0]
  tmpcr2 = htim->Instance->CR2;
 8008302:	685c      	ldr	r4, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;
 8008304:	689a      	ldr	r2, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 8008306:	f024 0470 	bic.w	r4, r4, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800830a:	432c      	orrs	r4, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800830c:	605c      	str	r4, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800830e:	4c15      	ldr	r4, [pc, #84]	; (8008364 <HAL_TIMEx_MasterConfigSynchronization+0x78>)
 8008310:	42a3      	cmp	r3, r4
 8008312:	d01a      	beq.n	800834a <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008314:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008318:	d017      	beq.n	800834a <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800831a:	f5a4 447c 	sub.w	r4, r4, #64512	; 0xfc00
 800831e:	42a3      	cmp	r3, r4
 8008320:	d013      	beq.n	800834a <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008322:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8008326:	42a3      	cmp	r3, r4
 8008328:	d00f      	beq.n	800834a <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800832a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800832e:	42a3      	cmp	r3, r4
 8008330:	d00b      	beq.n	800834a <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008332:	f504 4478 	add.w	r4, r4, #63488	; 0xf800
 8008336:	42a3      	cmp	r3, r4
 8008338:	d007      	beq.n	800834a <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800833a:	f504 5470 	add.w	r4, r4, #15360	; 0x3c00
 800833e:	42a3      	cmp	r3, r4
 8008340:	d003      	beq.n	800834a <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008342:	f5a4 3494 	sub.w	r4, r4, #75776	; 0x12800
 8008346:	42a3      	cmp	r3, r4
 8008348:	d104      	bne.n	8008354 <HAL_TIMEx_MasterConfigSynchronization+0x68>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800834a:	6849      	ldr	r1, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 800834c:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8008350:	430a      	orrs	r2, r1

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8008352:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8008354:	2301      	movs	r3, #1
 8008356:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 800835a:	2300      	movs	r3, #0
 800835c:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  __HAL_LOCK(htim);
 8008360:	4618      	mov	r0, r3

  return HAL_OK;
}
 8008362:	bd30      	pop	{r4, r5, pc}
 8008364:	40010000 	.word	0x40010000

08008368 <HAL_TIMEx_CommutCallback>:
 8008368:	4770      	bx	lr

0800836a <HAL_TIMEx_BreakCallback>:
 800836a:	4770      	bx	lr

0800836c <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 800836c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
                                               Init->InternalBankNumber |\
                                               Init->CASLatency         |\
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
 8008370:	6a4a      	ldr	r2, [r1, #36]	; 0x24
                                               Init->ReadBurst          |\
 8008372:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
                                               Init->RowBitsNumber      |\
 8008376:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
                                               Init->InternalBankNumber |\
 800837a:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
                                               Init->WriteProtection    |\
 800837e:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8008382:	6809      	ldr	r1, [r1, #0]
 8008384:	2901      	cmp	r1, #1
 8008386:	ea43 0304 	orr.w	r3, r3, r4
 800838a:	4912      	ldr	r1, [pc, #72]	; (80083d4 <FMC_SDRAM_Init+0x68>)
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 800838c:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 800838e:	d00f      	beq.n	80083b0 <FMC_SDRAM_Init+0x44>
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8008390:	431a      	orrs	r2, r3
 8008392:	432a      	orrs	r2, r5
 8008394:	ea42 0308 	orr.w	r3, r2, r8
 8008398:	ea43 030e 	orr.w	r3, r3, lr
 800839c:	ea43 030c 	orr.w	r3, r3, ip
 80083a0:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 80083a2:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80083a4:	4333      	orrs	r3, r6
 80083a6:	430b      	orrs	r3, r1
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 80083a8:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 80083aa:	2000      	movs	r0, #0
 80083ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 80083b0:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 80083b2:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 80083b4:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80083b6:	ea45 0208 	orr.w	r2, r5, r8
 80083ba:	ea42 020e 	orr.w	r2, r2, lr
 80083be:	ea42 020c 	orr.w	r2, r2, ip
 80083c2:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 80083c4:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80083c8:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 80083ca:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80083cc:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 80083ce:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 80083d0:	6042      	str	r2, [r0, #4]
 80083d2:	e7ea      	b.n	80083aa <FMC_SDRAM_Init+0x3e>
 80083d4:	ffff8000 	.word	0xffff8000

080083d8 <FMC_SDRAM_Timing_Init>:
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 80083d8:	68cb      	ldr	r3, [r1, #12]
{
 80083da:	b5f0      	push	{r4, r5, r6, r7, lr}
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80083dc:	680c      	ldr	r4, [r1, #0]
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 80083de:	688e      	ldr	r6, [r1, #8]
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 80083e0:	690d      	ldr	r5, [r1, #16]
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 80083e2:	1e5f      	subs	r7, r3, #1
                       (((Timing->RPDelay)-1U) << 20U)             |\
 80083e4:	694b      	ldr	r3, [r1, #20]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80083e6:	f104 3cff 	add.w	ip, r4, #4294967295
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 80083ea:	684c      	ldr	r4, [r1, #4]
                       (((Timing->RCDDelay)-1U) << 24U));
 80083ec:	6989      	ldr	r1, [r1, #24]
                       (((Timing->RPDelay)-1U) << 20U)             |\
 80083ee:	3b01      	subs	r3, #1
 80083f0:	051b      	lsls	r3, r3, #20
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 80083f2:	3c01      	subs	r4, #1
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 80083f4:	3e01      	subs	r6, #1
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 80083f6:	3d01      	subs	r5, #1
                       (((Timing->RCDDelay)-1U) << 24U));
 80083f8:	3901      	subs	r1, #1
  if (Bank != FMC_SDRAM_BANK2) 
 80083fa:	2a01      	cmp	r2, #1
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 80083fc:	ea4f 1404 	mov.w	r4, r4, lsl #4
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 8008400:	ea4f 2606 	mov.w	r6, r6, lsl #8
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 8008404:	ea4f 4505 	mov.w	r5, r5, lsl #16
                       (((Timing->RCDDelay)-1U) << 24U));
 8008408:	ea4f 6101 	mov.w	r1, r1, lsl #24
 800840c:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
  if (Bank != FMC_SDRAM_BANK2) 
 8008410:	d00c      	beq.n	800842c <FMC_SDRAM_Timing_Init+0x54>
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8008412:	ea43 030c 	orr.w	r3, r3, ip
 8008416:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8008418:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800841a:	4333      	orrs	r3, r6
 800841c:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 800841e:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8008422:	430b      	orrs	r3, r1
 8008424:	4313      	orrs	r3, r2
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8008426:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 8008428:	2000      	movs	r0, #0
 800842a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 800842c:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 800842e:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 8008432:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8008436:	4334      	orrs	r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 8008438:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800843a:	ea44 020c 	orr.w	r2, r4, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 800843e:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8008440:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8008442:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8008444:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8008448:	430a      	orrs	r2, r1
 800844a:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 800844c:	60c2      	str	r2, [r0, #12]
 800844e:	e7eb      	b.n	8008428 <FMC_SDRAM_Timing_Init+0x50>

08008450 <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8008450:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 8008452:	2300      	movs	r3, #0
 8008454:	9301      	str	r3, [sp, #4]
{
 8008456:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8008458:	e9d1 3200 	ldrd	r3, r2, [r1]
 800845c:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 800845e:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8008460:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 8008464:	688a      	ldr	r2, [r1, #8]
 8008466:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8008468:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800846c:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 800846e:	9b01      	ldr	r3, [sp, #4]
 8008470:	6103      	str	r3, [r0, #16]
{
 8008472:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 8008474:	f7fd fc46 	bl	8005d04 <HAL_GetTick>
 8008478:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800847a:	69a3      	ldr	r3, [r4, #24]
 800847c:	f013 0320 	ands.w	r3, r3, #32
 8008480:	d101      	bne.n	8008486 <FMC_SDRAM_SendCommand+0x36>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8008482:	4618      	mov	r0, r3
 8008484:	e003      	b.n	800848e <FMC_SDRAM_SendCommand+0x3e>
    if(Timeout != HAL_MAX_DELAY)
 8008486:	1c6b      	adds	r3, r5, #1
 8008488:	d0f7      	beq.n	800847a <FMC_SDRAM_SendCommand+0x2a>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800848a:	b915      	cbnz	r5, 8008492 <FMC_SDRAM_SendCommand+0x42>
        return HAL_TIMEOUT;
 800848c:	2003      	movs	r0, #3
}
 800848e:	b002      	add	sp, #8
 8008490:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8008492:	f7fd fc37 	bl	8005d04 <HAL_GetTick>
 8008496:	1b80      	subs	r0, r0, r6
 8008498:	42a8      	cmp	r0, r5
 800849a:	d9ee      	bls.n	800847a <FMC_SDRAM_SendCommand+0x2a>
 800849c:	e7f6      	b.n	800848c <FMC_SDRAM_SendCommand+0x3c>

0800849e <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 800849e:	6943      	ldr	r3, [r0, #20]
 80084a0:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 80084a4:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 80084a6:	2000      	movs	r0, #0
 80084a8:	4770      	bx	lr
	...

080084ac <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80084ac:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 80084b0:	b113      	cbz	r3, 80084b8 <osKernelInitialize+0xc>
    stat = osErrorISR;
 80084b2:	f06f 0005 	mvn.w	r0, #5
 80084b6:	4770      	bx	lr
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80084b8:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 80084bc:	4b07      	ldr	r3, [pc, #28]	; (80084dc <osKernelInitialize+0x30>)
  if (IS_IRQ()) {
 80084be:	b912      	cbnz	r2, 80084c6 <osKernelInitialize+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80084c0:	f3ef 8211 	mrs	r2, BASEPRI
 80084c4:	b112      	cbz	r2, 80084cc <osKernelInitialize+0x20>
 80084c6:	681a      	ldr	r2, [r3, #0]
 80084c8:	2a02      	cmp	r2, #2
 80084ca:	d0f2      	beq.n	80084b2 <osKernelInitialize+0x6>
  }
  else {
    if (KernelState == osKernelInactive) {
 80084cc:	6818      	ldr	r0, [r3, #0]
 80084ce:	b910      	cbnz	r0, 80084d6 <osKernelInitialize+0x2a>
      #if defined(USE_FREERTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 80084d0:	2201      	movs	r2, #1
 80084d2:	601a      	str	r2, [r3, #0]
      stat = osOK;
 80084d4:	4770      	bx	lr
    } else {
      stat = osError;
 80084d6:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 80084da:	4770      	bx	lr
 80084dc:	20004930 	.word	0x20004930

080084e0 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 80084e0:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80084e2:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 80084e6:	b113      	cbz	r3, 80084ee <osKernelStart+0xe>
    stat = osErrorISR;
 80084e8:	f06f 0005 	mvn.w	r0, #5
      stat = osError;
    }
  }

  return (stat);
}
 80084ec:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80084ee:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 80084f2:	4b0a      	ldr	r3, [pc, #40]	; (800851c <osKernelStart+0x3c>)
  if (IS_IRQ()) {
 80084f4:	b912      	cbnz	r2, 80084fc <osKernelStart+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80084f6:	f3ef 8211 	mrs	r2, BASEPRI
 80084fa:	b112      	cbz	r2, 8008502 <osKernelStart+0x22>
 80084fc:	681a      	ldr	r2, [r3, #0]
 80084fe:	2a02      	cmp	r2, #2
 8008500:	d0f2      	beq.n	80084e8 <osKernelStart+0x8>
    if (KernelState == osKernelReady) {
 8008502:	681a      	ldr	r2, [r3, #0]
 8008504:	2a01      	cmp	r2, #1
 8008506:	d105      	bne.n	8008514 <osKernelStart+0x34>
      KernelState = osKernelRunning;
 8008508:	2202      	movs	r2, #2
 800850a:	601a      	str	r2, [r3, #0]
      vTaskStartScheduler();
 800850c:	f001 fbda 	bl	8009cc4 <vTaskStartScheduler>
      stat = osOK;
 8008510:	2000      	movs	r0, #0
 8008512:	e7eb      	b.n	80084ec <osKernelStart+0xc>
      stat = osError;
 8008514:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8008518:	e7e8      	b.n	80084ec <osKernelStart+0xc>
 800851a:	bf00      	nop
 800851c:	20004930 	.word	0x20004930

08008520 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8008520:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008522:	b087      	sub	sp, #28
 8008524:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8008526:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8008528:	460b      	mov	r3, r1
  hTask = NULL;
 800852a:	9205      	str	r2, [sp, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800852c:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8008530:	bb22      	cbnz	r2, 800857c <osThreadNew+0x5c>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008532:	f3ef 8210 	mrs	r2, PRIMASK
 8008536:	b912      	cbnz	r2, 800853e <osThreadNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008538:	f3ef 8211 	mrs	r2, BASEPRI
 800853c:	b11a      	cbz	r2, 8008546 <osThreadNew+0x26>
 800853e:	4a22      	ldr	r2, [pc, #136]	; (80085c8 <osThreadNew+0xa8>)
 8008540:	6812      	ldr	r2, [r2, #0]
 8008542:	2a02      	cmp	r2, #2
 8008544:	d01a      	beq.n	800857c <osThreadNew+0x5c>
 8008546:	b1c8      	cbz	r0, 800857c <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8008548:	2c00      	cmp	r4, #0
 800854a:	d02f      	beq.n	80085ac <osThreadNew+0x8c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800854c:	69a5      	ldr	r5, [r4, #24]
 800854e:	2d00      	cmp	r5, #0
 8008550:	bf08      	it	eq
 8008552:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8008554:	1e6a      	subs	r2, r5, #1
 8008556:	2a37      	cmp	r2, #55	; 0x37
 8008558:	46ac      	mov	ip, r5
 800855a:	d82b      	bhi.n	80085b4 <osThreadNew+0x94>
 800855c:	6862      	ldr	r2, [r4, #4]
 800855e:	07d2      	lsls	r2, r2, #31
 8008560:	d428      	bmi.n	80085b4 <osThreadNew+0x94>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8008562:	6966      	ldr	r6, [r4, #20]
 8008564:	b16e      	cbz	r6, 8008582 <osThreadNew+0x62>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8008566:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008568:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 800856c:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800856e:	b157      	cbz	r7, 8008586 <osThreadNew+0x66>
 8008570:	f1be 0fbf 	cmp.w	lr, #191	; 0xbf
 8008574:	d902      	bls.n	800857c <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8008576:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008578:	b104      	cbz	r4, 800857c <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800857a:	b9ee      	cbnz	r6, 80085b8 <osThreadNew+0x98>
        }
      }
    }
  }

  return ((osThreadId_t)hTask);
 800857c:	9805      	ldr	r0, [sp, #20]
}
 800857e:	b007      	add	sp, #28
 8008580:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8008582:	2280      	movs	r2, #128	; 0x80
 8008584:	e7f0      	b.n	8008568 <osThreadNew+0x48>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8008586:	f1be 0f00 	cmp.w	lr, #0
 800858a:	d1f7      	bne.n	800857c <osThreadNew+0x5c>
      if (mem == 0) {
 800858c:	6924      	ldr	r4, [r4, #16]
 800858e:	2c00      	cmp	r4, #0
 8008590:	d1f4      	bne.n	800857c <osThreadNew+0x5c>
 8008592:	460c      	mov	r4, r1
        if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8008594:	a905      	add	r1, sp, #20
 8008596:	e9cd c100 	strd	ip, r1, [sp]
 800859a:	b292      	uxth	r2, r2
 800859c:	4621      	mov	r1, r4
 800859e:	f001 fb63 	bl	8009c68 <xTaskCreate>
 80085a2:	2801      	cmp	r0, #1
          hTask = NULL;
 80085a4:	bf1c      	itt	ne
 80085a6:	2300      	movne	r3, #0
 80085a8:	9305      	strne	r3, [sp, #20]
 80085aa:	e7e7      	b.n	800857c <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;
 80085ac:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 80085b0:	2280      	movs	r2, #128	; 0x80
 80085b2:	e7ef      	b.n	8008594 <osThreadNew+0x74>
        return (NULL);
 80085b4:	2000      	movs	r0, #0
 80085b6:	e7e2      	b.n	800857e <osThreadNew+0x5e>
      hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 80085b8:	e9cd 4701 	strd	r4, r7, [sp, #4]
 80085bc:	9500      	str	r5, [sp, #0]
 80085be:	f001 fb1b 	bl	8009bf8 <xTaskCreateStatic>
 80085c2:	9005      	str	r0, [sp, #20]
 80085c4:	e7da      	b.n	800857c <osThreadNew+0x5c>
 80085c6:	bf00      	nop
 80085c8:	20004930 	.word	0x20004930

080085cc <osDelay>:

  /* Return flags before clearing */
  return (rflags);
}

osStatus_t osDelay (uint32_t ticks) {
 80085cc:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80085ce:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 80085d2:	b113      	cbz	r3, 80085da <osDelay+0xe>
    stat = osErrorISR;
 80085d4:	f06f 0005 	mvn.w	r0, #5
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 80085d8:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80085da:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 80085de:	b913      	cbnz	r3, 80085e6 <osDelay+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80085e0:	f3ef 8311 	mrs	r3, BASEPRI
 80085e4:	b11b      	cbz	r3, 80085ee <osDelay+0x22>
 80085e6:	4b05      	ldr	r3, [pc, #20]	; (80085fc <osDelay+0x30>)
 80085e8:	681b      	ldr	r3, [r3, #0]
 80085ea:	2b02      	cmp	r3, #2
 80085ec:	d0f2      	beq.n	80085d4 <osDelay+0x8>
    if (ticks != 0U) {
 80085ee:	2800      	cmp	r0, #0
 80085f0:	d0f2      	beq.n	80085d8 <osDelay+0xc>
      vTaskDelay(ticks);
 80085f2:	f001 fccf 	bl	8009f94 <vTaskDelay>
    stat = osOK;
 80085f6:	2000      	movs	r0, #0
 80085f8:	e7ee      	b.n	80085d8 <osDelay+0xc>
 80085fa:	bf00      	nop
 80085fc:	20004930 	.word	0x20004930

08008600 <osSemaphoreNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8008600:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008602:	460e      	mov	r6, r1
 8008604:	4615      	mov	r5, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008606:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800860a:	b11b      	cbz	r3, 8008614 <osSemaphoreNew+0x14>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 800860c:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800860e:	4620      	mov	r0, r4
 8008610:	b002      	add	sp, #8
 8008612:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008614:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8008618:	b913      	cbnz	r3, 8008620 <osSemaphoreNew+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800861a:	f3ef 8311 	mrs	r3, BASEPRI
 800861e:	b11b      	cbz	r3, 8008628 <osSemaphoreNew+0x28>
 8008620:	4b21      	ldr	r3, [pc, #132]	; (80086a8 <osSemaphoreNew+0xa8>)
 8008622:	681b      	ldr	r3, [r3, #0]
 8008624:	2b02      	cmp	r3, #2
 8008626:	d0f1      	beq.n	800860c <osSemaphoreNew+0xc>
 8008628:	2800      	cmp	r0, #0
 800862a:	d0ef      	beq.n	800860c <osSemaphoreNew+0xc>
 800862c:	42b0      	cmp	r0, r6
 800862e:	d3ed      	bcc.n	800860c <osSemaphoreNew+0xc>
    if (attr != NULL) {
 8008630:	b1ed      	cbz	r5, 800866e <osSemaphoreNew+0x6e>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8008632:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
 8008636:	b1c3      	cbz	r3, 800866a <osSemaphoreNew+0x6a>
 8008638:	2a4f      	cmp	r2, #79	; 0x4f
 800863a:	d9e7      	bls.n	800860c <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 800863c:	2801      	cmp	r0, #1
 800863e:	d129      	bne.n	8008694 <osSemaphoreNew+0x94>
          hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8008640:	2203      	movs	r2, #3
 8008642:	9200      	str	r2, [sp, #0]
 8008644:	2200      	movs	r2, #0
 8008646:	4611      	mov	r1, r2
 8008648:	f000 fd2d 	bl	80090a6 <xQueueGenericCreateStatic>
          hSemaphore = xSemaphoreCreateBinary();
 800864c:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800864e:	2800      	cmp	r0, #0
 8008650:	d0dc      	beq.n	800860c <osSemaphoreNew+0xc>
 8008652:	b1ce      	cbz	r6, 8008688 <osSemaphoreNew+0x88>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8008654:	2300      	movs	r3, #0
 8008656:	461a      	mov	r2, r3
 8008658:	4619      	mov	r1, r3
 800865a:	f000 fdd9 	bl	8009210 <xQueueGenericSend>
 800865e:	2801      	cmp	r0, #1
 8008660:	d012      	beq.n	8008688 <osSemaphoreNew+0x88>
            vSemaphoreDelete (hSemaphore);
 8008662:	4620      	mov	r0, r4
 8008664:	f001 f914 	bl	8009890 <vQueueDelete>
 8008668:	e7d0      	b.n	800860c <osSemaphoreNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800866a:	2a00      	cmp	r2, #0
 800866c:	d1ce      	bne.n	800860c <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 800866e:	2801      	cmp	r0, #1
 8008670:	d104      	bne.n	800867c <osSemaphoreNew+0x7c>
          hSemaphore = xSemaphoreCreateBinary();
 8008672:	2203      	movs	r2, #3
 8008674:	2100      	movs	r1, #0
 8008676:	f000 fd64 	bl	8009142 <xQueueGenericCreate>
 800867a:	e7e7      	b.n	800864c <osSemaphoreNew+0x4c>
          hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800867c:	4631      	mov	r1, r6
 800867e:	f000 fda9 	bl	80091d4 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8008682:	4604      	mov	r4, r0
 8008684:	2800      	cmp	r0, #0
 8008686:	d0c1      	beq.n	800860c <osSemaphoreNew+0xc>
        if (attr != NULL) {
 8008688:	b95d      	cbnz	r5, 80086a2 <osSemaphoreNew+0xa2>
        vQueueAddToRegistry (hSemaphore, name);
 800868a:	4629      	mov	r1, r5
 800868c:	4620      	mov	r0, r4
 800868e:	f001 f8d9 	bl	8009844 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8008692:	e7bc      	b.n	800860e <osSemaphoreNew+0xe>
          hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8008694:	461a      	mov	r2, r3
 8008696:	4631      	mov	r1, r6
 8008698:	f000 fd7a 	bl	8009190 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 800869c:	4604      	mov	r4, r0
 800869e:	2800      	cmp	r0, #0
 80086a0:	d0b4      	beq.n	800860c <osSemaphoreNew+0xc>
          name = attr->name;
 80086a2:	682d      	ldr	r5, [r5, #0]
 80086a4:	e7f1      	b.n	800868a <osSemaphoreNew+0x8a>
 80086a6:	bf00      	nop
 80086a8:	20004930 	.word	0x20004930

080086ac <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 80086ac:	b513      	push	{r0, r1, r4, lr}
 80086ae:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 80086b0:	b918      	cbnz	r0, 80086ba <osSemaphoreAcquire+0xe>
    stat = osErrorParameter;
 80086b2:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 80086b6:	b002      	add	sp, #8
 80086b8:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80086ba:	f3ef 8305 	mrs	r3, IPSR
  else if (IS_IRQ()) {
 80086be:	b163      	cbz	r3, 80086da <osSemaphoreAcquire+0x2e>
    if (timeout != 0U) {
 80086c0:	2c00      	cmp	r4, #0
 80086c2:	d1f6      	bne.n	80086b2 <osSemaphoreAcquire+0x6>
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 80086c4:	aa01      	add	r2, sp, #4
 80086c6:	4621      	mov	r1, r4
      yield = pdFALSE;
 80086c8:	9401      	str	r4, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 80086ca:	f001 f86b 	bl	80097a4 <xQueueReceiveFromISR>
 80086ce:	2801      	cmp	r0, #1
 80086d0:	d113      	bne.n	80086fa <osSemaphoreAcquire+0x4e>
        portYIELD_FROM_ISR (yield);
 80086d2:	9b01      	ldr	r3, [sp, #4]
 80086d4:	b9a3      	cbnz	r3, 8008700 <osSemaphoreAcquire+0x54>
  stat = osOK;
 80086d6:	2000      	movs	r0, #0
 80086d8:	e7ed      	b.n	80086b6 <osSemaphoreAcquire+0xa>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80086da:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 80086de:	b913      	cbnz	r3, 80086e6 <osSemaphoreAcquire+0x3a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80086e0:	f3ef 8311 	mrs	r3, BASEPRI
 80086e4:	b11b      	cbz	r3, 80086ee <osSemaphoreAcquire+0x42>
 80086e6:	4b0d      	ldr	r3, [pc, #52]	; (800871c <osSemaphoreAcquire+0x70>)
 80086e8:	681b      	ldr	r3, [r3, #0]
 80086ea:	2b02      	cmp	r3, #2
 80086ec:	d0e8      	beq.n	80086c0 <osSemaphoreAcquire+0x14>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 80086ee:	4621      	mov	r1, r4
 80086f0:	f000 ff95 	bl	800961e <xQueueSemaphoreTake>
 80086f4:	2801      	cmp	r0, #1
 80086f6:	d0ee      	beq.n	80086d6 <osSemaphoreAcquire+0x2a>
      if (timeout != 0U) {
 80086f8:	b96c      	cbnz	r4, 8008716 <osSemaphoreAcquire+0x6a>
        stat = osErrorResource;
 80086fa:	f06f 0002 	mvn.w	r0, #2
 80086fe:	e7da      	b.n	80086b6 <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 8008700:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008704:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008708:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800870c:	f3bf 8f4f 	dsb	sy
 8008710:	f3bf 8f6f 	isb	sy
 8008714:	e7df      	b.n	80086d6 <osSemaphoreAcquire+0x2a>
        stat = osErrorTimeout;
 8008716:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800871a:	e7cc      	b.n	80086b6 <osSemaphoreAcquire+0xa>
 800871c:	20004930 	.word	0x20004930

08008720 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8008720:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8008722:	b370      	cbz	r0, 8008782 <osSemaphoreRelease+0x62>
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008724:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8008728:	b14b      	cbz	r3, 800873e <osSemaphoreRelease+0x1e>
    yield = pdFALSE;
 800872a:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800872c:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800872e:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008730:	f000 fe82 	bl	8009438 <xQueueGiveFromISR>
 8008734:	2801      	cmp	r0, #1
 8008736:	d014      	beq.n	8008762 <osSemaphoreRelease+0x42>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 8008738:	f06f 0002 	mvn.w	r0, #2
 800873c:	e014      	b.n	8008768 <osSemaphoreRelease+0x48>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800873e:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 8008742:	b913      	cbnz	r3, 800874a <osSemaphoreRelease+0x2a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008744:	f3ef 8311 	mrs	r3, BASEPRI
 8008748:	b11b      	cbz	r3, 8008752 <osSemaphoreRelease+0x32>
 800874a:	4b0f      	ldr	r3, [pc, #60]	; (8008788 <osSemaphoreRelease+0x68>)
 800874c:	681b      	ldr	r3, [r3, #0]
 800874e:	2b02      	cmp	r3, #2
 8008750:	d0eb      	beq.n	800872a <osSemaphoreRelease+0xa>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8008752:	2300      	movs	r3, #0
 8008754:	461a      	mov	r2, r3
 8008756:	4619      	mov	r1, r3
 8008758:	f000 fd5a 	bl	8009210 <xQueueGenericSend>
 800875c:	2801      	cmp	r0, #1
 800875e:	d002      	beq.n	8008766 <osSemaphoreRelease+0x46>
 8008760:	e7ea      	b.n	8008738 <osSemaphoreRelease+0x18>
      portYIELD_FROM_ISR (yield);
 8008762:	9b01      	ldr	r3, [sp, #4]
 8008764:	b913      	cbnz	r3, 800876c <osSemaphoreRelease+0x4c>
  stat = osOK;
 8008766:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 8008768:	b002      	add	sp, #8
 800876a:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 800876c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008770:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008774:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008778:	f3bf 8f4f 	dsb	sy
 800877c:	f3bf 8f6f 	isb	sy
 8008780:	e7f1      	b.n	8008766 <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 8008782:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8008786:	e7ef      	b.n	8008768 <osSemaphoreRelease+0x48>
 8008788:	20004930 	.word	0x20004930

0800878c <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800878c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800878e:	4614      	mov	r4, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008790:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8008794:	b11b      	cbz	r3, 800879e <osMessageQueueNew+0x12>
  hQueue = NULL;
 8008796:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8008798:	4628      	mov	r0, r5
 800879a:	b002      	add	sp, #8
 800879c:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800879e:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 80087a2:	b913      	cbnz	r3, 80087aa <osMessageQueueNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80087a4:	f3ef 8311 	mrs	r3, BASEPRI
 80087a8:	b11b      	cbz	r3, 80087b2 <osMessageQueueNew+0x26>
 80087aa:	4b1a      	ldr	r3, [pc, #104]	; (8008814 <osMessageQueueNew+0x88>)
 80087ac:	681b      	ldr	r3, [r3, #0]
 80087ae:	2b02      	cmp	r3, #2
 80087b0:	d0f1      	beq.n	8008796 <osMessageQueueNew+0xa>
 80087b2:	2800      	cmp	r0, #0
 80087b4:	d0ef      	beq.n	8008796 <osMessageQueueNew+0xa>
 80087b6:	2900      	cmp	r1, #0
 80087b8:	d0ed      	beq.n	8008796 <osMessageQueueNew+0xa>
    if (attr != NULL) {
 80087ba:	b1ec      	cbz	r4, 80087f8 <osMessageQueueNew+0x6c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 80087bc:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
 80087c0:	b193      	cbz	r3, 80087e8 <osMessageQueueNew+0x5c>
 80087c2:	2a4f      	cmp	r2, #79	; 0x4f
 80087c4:	d9e7      	bls.n	8008796 <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 80087c6:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 80087c8:	2a00      	cmp	r2, #0
 80087ca:	d0e4      	beq.n	8008796 <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 80087cc:	6966      	ldr	r6, [r4, #20]
 80087ce:	fb01 f500 	mul.w	r5, r1, r0
 80087d2:	42ae      	cmp	r6, r5
 80087d4:	d3df      	bcc.n	8008796 <osMessageQueueNew+0xa>
      hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 80087d6:	2500      	movs	r5, #0
 80087d8:	9500      	str	r5, [sp, #0]
 80087da:	f000 fc64 	bl	80090a6 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 80087de:	4605      	mov	r5, r0
 80087e0:	2800      	cmp	r0, #0
 80087e2:	d0d8      	beq.n	8008796 <osMessageQueueNew+0xa>
        name = attr->name;
 80087e4:	6824      	ldr	r4, [r4, #0]
 80087e6:	e00f      	b.n	8008808 <osMessageQueueNew+0x7c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 80087e8:	2a00      	cmp	r2, #0
 80087ea:	d1d4      	bne.n	8008796 <osMessageQueueNew+0xa>
 80087ec:	6923      	ldr	r3, [r4, #16]
 80087ee:	2b00      	cmp	r3, #0
 80087f0:	d1d1      	bne.n	8008796 <osMessageQueueNew+0xa>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 80087f2:	6963      	ldr	r3, [r4, #20]
 80087f4:	2b00      	cmp	r3, #0
 80087f6:	d1ce      	bne.n	8008796 <osMessageQueueNew+0xa>
        hQueue = xQueueCreate (msg_count, msg_size);
 80087f8:	2200      	movs	r2, #0
 80087fa:	f000 fca2 	bl	8009142 <xQueueGenericCreate>
    if (hQueue != NULL) {
 80087fe:	4605      	mov	r5, r0
 8008800:	2800      	cmp	r0, #0
 8008802:	d0c8      	beq.n	8008796 <osMessageQueueNew+0xa>
      if (attr != NULL) {
 8008804:	2c00      	cmp	r4, #0
 8008806:	d1ed      	bne.n	80087e4 <osMessageQueueNew+0x58>
      vQueueAddToRegistry (hQueue, name);
 8008808:	4621      	mov	r1, r4
 800880a:	4628      	mov	r0, r5
 800880c:	f001 f81a 	bl	8009844 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8008810:	e7c2      	b.n	8008798 <osMessageQueueNew+0xc>
 8008812:	bf00      	nop
 8008814:	20004930 	.word	0x20004930

08008818 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8008818:	b513      	push	{r0, r1, r4, lr}
 800881a:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800881c:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8008820:	b123      	cbz	r3, 800882c <osMessageQueuePut+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008822:	b9d8      	cbnz	r0, 800885c <osMessageQueuePut+0x44>
      stat = osErrorParameter;
 8008824:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8008828:	b002      	add	sp, #8
 800882a:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800882c:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8008830:	b913      	cbnz	r3, 8008838 <osMessageQueuePut+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008832:	f3ef 8311 	mrs	r3, BASEPRI
 8008836:	b11b      	cbz	r3, 8008840 <osMessageQueuePut+0x28>
 8008838:	4b17      	ldr	r3, [pc, #92]	; (8008898 <osMessageQueuePut+0x80>)
 800883a:	681b      	ldr	r3, [r3, #0]
 800883c:	2b02      	cmp	r3, #2
 800883e:	d0f0      	beq.n	8008822 <osMessageQueuePut+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008840:	2800      	cmp	r0, #0
 8008842:	d0ef      	beq.n	8008824 <osMessageQueuePut+0xc>
 8008844:	2900      	cmp	r1, #0
 8008846:	d0ed      	beq.n	8008824 <osMessageQueuePut+0xc>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8008848:	2300      	movs	r3, #0
 800884a:	4622      	mov	r2, r4
 800884c:	f000 fce0 	bl	8009210 <xQueueGenericSend>
 8008850:	2801      	cmp	r0, #1
 8008852:	d010      	beq.n	8008876 <osMessageQueuePut+0x5e>
        if (timeout != 0U) {
 8008854:	b9e4      	cbnz	r4, 8008890 <osMessageQueuePut+0x78>
          stat = osErrorResource;
 8008856:	f06f 0002 	mvn.w	r0, #2
 800885a:	e7e5      	b.n	8008828 <osMessageQueuePut+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800885c:	2900      	cmp	r1, #0
 800885e:	d0e1      	beq.n	8008824 <osMessageQueuePut+0xc>
 8008860:	2c00      	cmp	r4, #0
 8008862:	d1df      	bne.n	8008824 <osMessageQueuePut+0xc>
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8008864:	4623      	mov	r3, r4
 8008866:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008868:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800886a:	f000 fd84 	bl	8009376 <xQueueGenericSendFromISR>
 800886e:	2801      	cmp	r0, #1
 8008870:	d1f1      	bne.n	8008856 <osMessageQueuePut+0x3e>
        portYIELD_FROM_ISR (yield);
 8008872:	9b01      	ldr	r3, [sp, #4]
 8008874:	b90b      	cbnz	r3, 800887a <osMessageQueuePut+0x62>
  stat = osOK;
 8008876:	2000      	movs	r0, #0
 8008878:	e7d6      	b.n	8008828 <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 800887a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800887e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008882:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008886:	f3bf 8f4f 	dsb	sy
 800888a:	f3bf 8f6f 	isb	sy
 800888e:	e7f2      	b.n	8008876 <osMessageQueuePut+0x5e>
          stat = osErrorTimeout;
 8008890:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008894:	e7c8      	b.n	8008828 <osMessageQueuePut+0x10>
 8008896:	bf00      	nop
 8008898:	20004930 	.word	0x20004930

0800889c <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800889c:	b513      	push	{r0, r1, r4, lr}
 800889e:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80088a0:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 80088a4:	b123      	cbz	r3, 80088b0 <osMessageQueueGet+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80088a6:	b9d0      	cbnz	r0, 80088de <osMessageQueueGet+0x42>
      stat = osErrorParameter;
 80088a8:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 80088ac:	b002      	add	sp, #8
 80088ae:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80088b0:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 80088b4:	b913      	cbnz	r3, 80088bc <osMessageQueueGet+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80088b6:	f3ef 8311 	mrs	r3, BASEPRI
 80088ba:	b11b      	cbz	r3, 80088c4 <osMessageQueueGet+0x28>
 80088bc:	4b16      	ldr	r3, [pc, #88]	; (8008918 <osMessageQueueGet+0x7c>)
 80088be:	681b      	ldr	r3, [r3, #0]
 80088c0:	2b02      	cmp	r3, #2
 80088c2:	d0f0      	beq.n	80088a6 <osMessageQueueGet+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 80088c4:	2800      	cmp	r0, #0
 80088c6:	d0ef      	beq.n	80088a8 <osMessageQueueGet+0xc>
 80088c8:	2900      	cmp	r1, #0
 80088ca:	d0ed      	beq.n	80088a8 <osMessageQueueGet+0xc>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 80088cc:	4622      	mov	r2, r4
 80088ce:	f000 fe07 	bl	80094e0 <xQueueReceive>
 80088d2:	2801      	cmp	r0, #1
 80088d4:	d00f      	beq.n	80088f6 <osMessageQueueGet+0x5a>
        if (timeout != 0U) {
 80088d6:	b9dc      	cbnz	r4, 8008910 <osMessageQueueGet+0x74>
          stat = osErrorResource;
 80088d8:	f06f 0002 	mvn.w	r0, #2
 80088dc:	e7e6      	b.n	80088ac <osMessageQueueGet+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80088de:	2900      	cmp	r1, #0
 80088e0:	d0e2      	beq.n	80088a8 <osMessageQueueGet+0xc>
 80088e2:	2c00      	cmp	r4, #0
 80088e4:	d1e0      	bne.n	80088a8 <osMessageQueueGet+0xc>
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 80088e6:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80088e8:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 80088ea:	f000 ff5b 	bl	80097a4 <xQueueReceiveFromISR>
 80088ee:	2801      	cmp	r0, #1
 80088f0:	d1f2      	bne.n	80088d8 <osMessageQueueGet+0x3c>
        portYIELD_FROM_ISR (yield);
 80088f2:	9b01      	ldr	r3, [sp, #4]
 80088f4:	b90b      	cbnz	r3, 80088fa <osMessageQueueGet+0x5e>
  stat = osOK;
 80088f6:	2000      	movs	r0, #0
 80088f8:	e7d8      	b.n	80088ac <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 80088fa:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80088fe:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008902:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008906:	f3bf 8f4f 	dsb	sy
 800890a:	f3bf 8f6f 	isb	sy
 800890e:	e7f2      	b.n	80088f6 <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 8008910:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008914:	e7ca      	b.n	80088ac <osMessageQueueGet+0x10>
 8008916:	bf00      	nop
 8008918:	20004930 	.word	0x20004930

0800891c <vApplicationGetIdleTaskMemory>:
/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800891c:	4b03      	ldr	r3, [pc, #12]	; (800892c <vApplicationGetIdleTaskMemory+0x10>)
 800891e:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8008920:	4b03      	ldr	r3, [pc, #12]	; (8008930 <vApplicationGetIdleTaskMemory+0x14>)
 8008922:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8008924:	2380      	movs	r3, #128	; 0x80
 8008926:	6013      	str	r3, [r2, #0]
}
 8008928:	4770      	bx	lr
 800892a:	bf00      	nop
 800892c:	20004870 	.word	0x20004870
 8008930:	20004670 	.word	0x20004670

08008934 <vApplicationGetTimerTaskMemory>:
/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8008934:	4b03      	ldr	r3, [pc, #12]	; (8008944 <vApplicationGetTimerTaskMemory+0x10>)
 8008936:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8008938:	4b03      	ldr	r3, [pc, #12]	; (8008948 <vApplicationGetTimerTaskMemory+0x14>)
 800893a:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800893c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8008940:	6013      	str	r3, [r2, #0]
}
 8008942:	4770      	bx	lr
 8008944:	20004d34 	.word	0x20004d34
 8008948:	20004934 	.word	0x20004934

0800894c <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 800894c:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800894e:	4b0f      	ldr	r3, [pc, #60]	; (800898c <prvInsertBlockIntoFreeList+0x40>)
 8008950:	461a      	mov	r2, r3
 8008952:	681b      	ldr	r3, [r3, #0]
 8008954:	4283      	cmp	r3, r0
 8008956:	d3fb      	bcc.n	8008950 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8008958:	6854      	ldr	r4, [r2, #4]
 800895a:	1911      	adds	r1, r2, r4
 800895c:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800895e:	bf01      	itttt	eq
 8008960:	6841      	ldreq	r1, [r0, #4]
 8008962:	4610      	moveq	r0, r2
 8008964:	1909      	addeq	r1, r1, r4
 8008966:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8008968:	6844      	ldr	r4, [r0, #4]
 800896a:	1901      	adds	r1, r0, r4
 800896c:	428b      	cmp	r3, r1
 800896e:	d107      	bne.n	8008980 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8008970:	4907      	ldr	r1, [pc, #28]	; (8008990 <prvInsertBlockIntoFreeList+0x44>)
 8008972:	6809      	ldr	r1, [r1, #0]
 8008974:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8008976:	bf1f      	itttt	ne
 8008978:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800897a:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800897c:	1909      	addne	r1, r1, r4
 800897e:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8008980:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 8008982:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8008984:	bf18      	it	ne
 8008986:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8008988:	bd10      	pop	{r4, pc}
 800898a:	bf00      	nop
 800898c:	20014e04 	.word	0x20014e04
 8008990:	20004df4 	.word	0x20004df4

08008994 <pvPortMalloc>:
{
 8008994:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008998:	4604      	mov	r4, r0
	vTaskSuspendAll();
 800899a:	f001 f9e3 	bl	8009d64 <vTaskSuspendAll>
		if( pxEnd == NULL )
 800899e:	4840      	ldr	r0, [pc, #256]	; (8008aa0 <pvPortMalloc+0x10c>)
 80089a0:	4d40      	ldr	r5, [pc, #256]	; (8008aa4 <pvPortMalloc+0x110>)
 80089a2:	6803      	ldr	r3, [r0, #0]
 80089a4:	bb0b      	cbnz	r3, 80089ea <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 80089a6:	4940      	ldr	r1, [pc, #256]	; (8008aa8 <pvPortMalloc+0x114>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 80089a8:	074e      	lsls	r6, r1, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 80089aa:	bf1f      	itttt	ne
 80089ac:	1dcb      	addne	r3, r1, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80089ae:	f023 0307 	bicne.w	r3, r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 80089b2:	f501 3280 	addne.w	r2, r1, #65536	; 0x10000
 80089b6:	1ad2      	subne	r2, r2, r3
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80089b8:	bf14      	ite	ne
 80089ba:	4619      	movne	r1, r3
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 80089bc:	f44f 3280 	moveq.w	r2, #65536	; 0x10000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 80089c0:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 80089c2:	4e3a      	ldr	r6, [pc, #232]	; (8008aac <pvPortMalloc+0x118>)
	uxAddress -= xHeapStructSize;
 80089c4:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80089c6:	f022 0207 	bic.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 80089ca:	2300      	movs	r3, #0
 80089cc:	6073      	str	r3, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 80089ce:	6031      	str	r1, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 80089d0:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 80089d4:	1a53      	subs	r3, r2, r1
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 80089d6:	e9c1 2300 	strd	r2, r3, [r1]
	pxEnd = ( void * ) uxAddress;
 80089da:	6002      	str	r2, [r0, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 80089dc:	4a34      	ldr	r2, [pc, #208]	; (8008ab0 <pvPortMalloc+0x11c>)
 80089de:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 80089e0:	4a34      	ldr	r2, [pc, #208]	; (8008ab4 <pvPortMalloc+0x120>)
 80089e2:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 80089e4:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 80089e8:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 80089ea:	682f      	ldr	r7, [r5, #0]
 80089ec:	4227      	tst	r7, r4
 80089ee:	d151      	bne.n	8008a94 <pvPortMalloc+0x100>
			if( xWantedSize > 0 )
 80089f0:	2c00      	cmp	r4, #0
 80089f2:	d042      	beq.n	8008a7a <pvPortMalloc+0xe6>
				xWantedSize += xHeapStructSize;
 80089f4:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 80089f8:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 80089fa:	bf1c      	itt	ne
 80089fc:	f023 0307 	bicne.w	r3, r3, #7
 8008a00:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8008a02:	2b00      	cmp	r3, #0
 8008a04:	d046      	beq.n	8008a94 <pvPortMalloc+0x100>
 8008a06:	4c2b      	ldr	r4, [pc, #172]	; (8008ab4 <pvPortMalloc+0x120>)
 8008a08:	6826      	ldr	r6, [r4, #0]
 8008a0a:	429e      	cmp	r6, r3
 8008a0c:	d342      	bcc.n	8008a94 <pvPortMalloc+0x100>
				pxBlock = xStart.pxNextFreeBlock;
 8008a0e:	4a27      	ldr	r2, [pc, #156]	; (8008aac <pvPortMalloc+0x118>)
 8008a10:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8008a12:	6869      	ldr	r1, [r5, #4]
 8008a14:	4299      	cmp	r1, r3
 8008a16:	d204      	bcs.n	8008a22 <pvPortMalloc+0x8e>
 8008a18:	f8d5 c000 	ldr.w	ip, [r5]
 8008a1c:	f1bc 0f00 	cmp.w	ip, #0
 8008a20:	d115      	bne.n	8008a4e <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 8008a22:	6800      	ldr	r0, [r0, #0]
 8008a24:	42a8      	cmp	r0, r5
 8008a26:	d035      	beq.n	8008a94 <pvPortMalloc+0x100>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8008a28:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8008a2a:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8008a2c:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8008a30:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8008a32:	2910      	cmp	r1, #16
 8008a34:	d912      	bls.n	8008a5c <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8008a36:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8008a38:	0742      	lsls	r2, r0, #29
 8008a3a:	d00b      	beq.n	8008a54 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8008a3c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a40:	f383 8811 	msr	BASEPRI, r3
 8008a44:	f3bf 8f6f 	isb	sy
 8008a48:	f3bf 8f4f 	dsb	sy
 8008a4c:	e7fe      	b.n	8008a4c <pvPortMalloc+0xb8>
 8008a4e:	462a      	mov	r2, r5
 8008a50:	4665      	mov	r5, ip
 8008a52:	e7de      	b.n	8008a12 <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8008a54:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8008a56:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8008a58:	f7ff ff78 	bl	800894c <prvInsertBlockIntoFreeList>
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008a5c:	4914      	ldr	r1, [pc, #80]	; (8008ab0 <pvPortMalloc+0x11c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008a5e:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008a60:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008a62:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8008a64:	431f      	orrs	r7, r3
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008a66:	4286      	cmp	r6, r0
					pxBlock->pxNextFreeBlock = NULL;
 8008a68:	f04f 0300 	mov.w	r3, #0
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008a6c:	6026      	str	r6, [r4, #0]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8008a6e:	bf38      	it	cc
 8008a70:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8008a72:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8008a76:	606f      	str	r7, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 8008a78:	602b      	str	r3, [r5, #0]
	( void ) xTaskResumeAll();
 8008a7a:	f001 fa17 	bl	8009eac <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8008a7e:	0763      	lsls	r3, r4, #29
 8008a80:	d00a      	beq.n	8008a98 <pvPortMalloc+0x104>
 8008a82:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a86:	f383 8811 	msr	BASEPRI, r3
 8008a8a:	f3bf 8f6f 	isb	sy
 8008a8e:	f3bf 8f4f 	dsb	sy
 8008a92:	e7fe      	b.n	8008a92 <pvPortMalloc+0xfe>
void *pvReturn = NULL;
 8008a94:	2400      	movs	r4, #0
 8008a96:	e7f0      	b.n	8008a7a <pvPortMalloc+0xe6>
}
 8008a98:	4620      	mov	r0, r4
 8008a9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008a9e:	bf00      	nop
 8008aa0:	20004df4 	.word	0x20004df4
 8008aa4:	20014df8 	.word	0x20014df8
 8008aa8:	20004df8 	.word	0x20004df8
 8008aac:	20014e04 	.word	0x20014e04
 8008ab0:	20014e00 	.word	0x20014e00
 8008ab4:	20014dfc 	.word	0x20014dfc

08008ab8 <vPortFree>:
{
 8008ab8:	b510      	push	{r4, lr}
	if( pv != NULL )
 8008aba:	4604      	mov	r4, r0
 8008abc:	b370      	cbz	r0, 8008b1c <vPortFree+0x64>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8008abe:	4a18      	ldr	r2, [pc, #96]	; (8008b20 <vPortFree+0x68>)
 8008ac0:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8008ac4:	6812      	ldr	r2, [r2, #0]
 8008ac6:	4213      	tst	r3, r2
 8008ac8:	d108      	bne.n	8008adc <vPortFree+0x24>
 8008aca:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ace:	f383 8811 	msr	BASEPRI, r3
 8008ad2:	f3bf 8f6f 	isb	sy
 8008ad6:	f3bf 8f4f 	dsb	sy
 8008ada:	e7fe      	b.n	8008ada <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8008adc:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8008ae0:	b141      	cbz	r1, 8008af4 <vPortFree+0x3c>
 8008ae2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ae6:	f383 8811 	msr	BASEPRI, r3
 8008aea:	f3bf 8f6f 	isb	sy
 8008aee:	f3bf 8f4f 	dsb	sy
 8008af2:	e7fe      	b.n	8008af2 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8008af4:	ea23 0302 	bic.w	r3, r3, r2
 8008af8:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8008afc:	f001 f932 	bl	8009d64 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008b00:	4a08      	ldr	r2, [pc, #32]	; (8008b24 <vPortFree+0x6c>)
 8008b02:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8008b06:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8008b08:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008b0c:	440b      	add	r3, r1
 8008b0e:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8008b10:	f7ff ff1c 	bl	800894c <prvInsertBlockIntoFreeList>
}
 8008b14:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 8008b18:	f001 b9c8 	b.w	8009eac <xTaskResumeAll>
}
 8008b1c:	bd10      	pop	{r4, pc}
 8008b1e:	bf00      	nop
 8008b20:	20014df8 	.word	0x20014df8
 8008b24:	20014dfc 	.word	0x20014dfc

08008b28 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008b28:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8008b2c:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008b30:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008b34:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008b36:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8008b38:	2300      	movs	r3, #0
 8008b3a:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8008b3c:	4770      	bx	lr

08008b3e <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8008b3e:	2300      	movs	r3, #0
 8008b40:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8008b42:	4770      	bx	lr

08008b44 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8008b44:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 8008b46:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8008b48:	689a      	ldr	r2, [r3, #8]
 8008b4a:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8008b4c:	689a      	ldr	r2, [r3, #8]
 8008b4e:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8008b50:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008b52:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008b54:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008b56:	3301      	adds	r3, #1
 8008b58:	6003      	str	r3, [r0, #0]
}
 8008b5a:	4770      	bx	lr

08008b5c <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8008b5c:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8008b5e:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8008b60:	1c63      	adds	r3, r4, #1
 8008b62:	d10a      	bne.n	8008b7a <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8008b64:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8008b66:	685a      	ldr	r2, [r3, #4]
 8008b68:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8008b6a:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8008b6c:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8008b6e:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008b70:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008b72:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008b74:	3301      	adds	r3, #1
 8008b76:	6003      	str	r3, [r0, #0]
}
 8008b78:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8008b7a:	f100 0208 	add.w	r2, r0, #8
 8008b7e:	4613      	mov	r3, r2
 8008b80:	6852      	ldr	r2, [r2, #4]
 8008b82:	6815      	ldr	r5, [r2, #0]
 8008b84:	42a5      	cmp	r5, r4
 8008b86:	d9fa      	bls.n	8008b7e <vListInsert+0x22>
 8008b88:	e7ed      	b.n	8008b66 <vListInsert+0xa>

08008b8a <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8008b8a:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8008b8e:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8008b90:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8008b92:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8008b94:	6859      	ldr	r1, [r3, #4]
 8008b96:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8008b98:	bf08      	it	eq
 8008b9a:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8008b9c:	2200      	movs	r2, #0
 8008b9e:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8008ba0:	681a      	ldr	r2, [r3, #0]
 8008ba2:	3a01      	subs	r2, #1
 8008ba4:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8008ba6:	6818      	ldr	r0, [r3, #0]
}
 8008ba8:	4770      	bx	lr
	...

08008bac <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8008bac:	4808      	ldr	r0, [pc, #32]	; (8008bd0 <prvPortStartFirstTask+0x24>)
 8008bae:	6800      	ldr	r0, [r0, #0]
 8008bb0:	6800      	ldr	r0, [r0, #0]
 8008bb2:	f380 8808 	msr	MSP, r0
 8008bb6:	f04f 0000 	mov.w	r0, #0
 8008bba:	f380 8814 	msr	CONTROL, r0
 8008bbe:	b662      	cpsie	i
 8008bc0:	b661      	cpsie	f
 8008bc2:	f3bf 8f4f 	dsb	sy
 8008bc6:	f3bf 8f6f 	isb	sy
 8008bca:	df00      	svc	0
 8008bcc:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8008bce:	0000      	.short	0x0000
 8008bd0:	e000ed08 	.word	0xe000ed08

08008bd4 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8008bd4:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8008be4 <vPortEnableVFP+0x10>
 8008bd8:	6801      	ldr	r1, [r0, #0]
 8008bda:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8008bde:	6001      	str	r1, [r0, #0]
 8008be0:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8008be2:	0000      	.short	0x0000
 8008be4:	e000ed88 	.word	0xe000ed88

08008be8 <prvTaskExitError>:
{
 8008be8:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8008bea:	2300      	movs	r3, #0
 8008bec:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 8008bee:	4b0d      	ldr	r3, [pc, #52]	; (8008c24 <prvTaskExitError+0x3c>)
 8008bf0:	681b      	ldr	r3, [r3, #0]
 8008bf2:	3301      	adds	r3, #1
 8008bf4:	d008      	beq.n	8008c08 <prvTaskExitError+0x20>
 8008bf6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008bfa:	f383 8811 	msr	BASEPRI, r3
 8008bfe:	f3bf 8f6f 	isb	sy
 8008c02:	f3bf 8f4f 	dsb	sy
 8008c06:	e7fe      	b.n	8008c06 <prvTaskExitError+0x1e>
 8008c08:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c0c:	f383 8811 	msr	BASEPRI, r3
 8008c10:	f3bf 8f6f 	isb	sy
 8008c14:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8008c18:	9b01      	ldr	r3, [sp, #4]
 8008c1a:	2b00      	cmp	r3, #0
 8008c1c:	d0fc      	beq.n	8008c18 <prvTaskExitError+0x30>
}
 8008c1e:	b002      	add	sp, #8
 8008c20:	4770      	bx	lr
 8008c22:	bf00      	nop
 8008c24:	20000088 	.word	0x20000088

08008c28 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8008c28:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8008c2c:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8008c30:	4b07      	ldr	r3, [pc, #28]	; (8008c50 <pxPortInitialiseStack+0x28>)
 8008c32:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8008c36:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8008c3a:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8008c3e:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8008c42:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8008c46:	f840 3c24 	str.w	r3, [r0, #-36]
}
 8008c4a:	3844      	subs	r0, #68	; 0x44
 8008c4c:	4770      	bx	lr
 8008c4e:	bf00      	nop
 8008c50:	08008be9 	.word	0x08008be9
	...

08008c60 <SVC_Handler>:
	__asm volatile (
 8008c60:	4b07      	ldr	r3, [pc, #28]	; (8008c80 <pxCurrentTCBConst2>)
 8008c62:	6819      	ldr	r1, [r3, #0]
 8008c64:	6808      	ldr	r0, [r1, #0]
 8008c66:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008c6a:	f380 8809 	msr	PSP, r0
 8008c6e:	f3bf 8f6f 	isb	sy
 8008c72:	f04f 0000 	mov.w	r0, #0
 8008c76:	f380 8811 	msr	BASEPRI, r0
 8008c7a:	4770      	bx	lr
 8008c7c:	f3af 8000 	nop.w

08008c80 <pxCurrentTCBConst2>:
 8008c80:	20014e54 	.word	0x20014e54

08008c84 <vPortEnterCritical>:
 8008c84:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c88:	f383 8811 	msr	BASEPRI, r3
 8008c8c:	f3bf 8f6f 	isb	sy
 8008c90:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8008c94:	4a0a      	ldr	r2, [pc, #40]	; (8008cc0 <vPortEnterCritical+0x3c>)
 8008c96:	6813      	ldr	r3, [r2, #0]
 8008c98:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 8008c9a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 8008c9c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 8008c9e:	d10e      	bne.n	8008cbe <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8008ca0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008ca4:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 8008ca8:	b2db      	uxtb	r3, r3
 8008caa:	b143      	cbz	r3, 8008cbe <vPortEnterCritical+0x3a>
 8008cac:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008cb0:	f383 8811 	msr	BASEPRI, r3
 8008cb4:	f3bf 8f6f 	isb	sy
 8008cb8:	f3bf 8f4f 	dsb	sy
 8008cbc:	e7fe      	b.n	8008cbc <vPortEnterCritical+0x38>
}
 8008cbe:	4770      	bx	lr
 8008cc0:	20000088 	.word	0x20000088

08008cc4 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8008cc4:	4a08      	ldr	r2, [pc, #32]	; (8008ce8 <vPortExitCritical+0x24>)
 8008cc6:	6813      	ldr	r3, [r2, #0]
 8008cc8:	b943      	cbnz	r3, 8008cdc <vPortExitCritical+0x18>
 8008cca:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008cce:	f383 8811 	msr	BASEPRI, r3
 8008cd2:	f3bf 8f6f 	isb	sy
 8008cd6:	f3bf 8f4f 	dsb	sy
 8008cda:	e7fe      	b.n	8008cda <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8008cdc:	3b01      	subs	r3, #1
 8008cde:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8008ce0:	b90b      	cbnz	r3, 8008ce6 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8008ce2:	f383 8811 	msr	BASEPRI, r3
}
 8008ce6:	4770      	bx	lr
 8008ce8:	20000088 	.word	0x20000088
 8008cec:	00000000 	.word	0x00000000

08008cf0 <PendSV_Handler>:
	__asm volatile
 8008cf0:	f3ef 8009 	mrs	r0, PSP
 8008cf4:	f3bf 8f6f 	isb	sy
 8008cf8:	4b15      	ldr	r3, [pc, #84]	; (8008d50 <pxCurrentTCBConst>)
 8008cfa:	681a      	ldr	r2, [r3, #0]
 8008cfc:	f01e 0f10 	tst.w	lr, #16
 8008d00:	bf08      	it	eq
 8008d02:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8008d06:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008d0a:	6010      	str	r0, [r2, #0]
 8008d0c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8008d10:	f04f 0050 	mov.w	r0, #80	; 0x50
 8008d14:	f380 8811 	msr	BASEPRI, r0
 8008d18:	f3bf 8f4f 	dsb	sy
 8008d1c:	f3bf 8f6f 	isb	sy
 8008d20:	f001 f95c 	bl	8009fdc <vTaskSwitchContext>
 8008d24:	f04f 0000 	mov.w	r0, #0
 8008d28:	f380 8811 	msr	BASEPRI, r0
 8008d2c:	bc09      	pop	{r0, r3}
 8008d2e:	6819      	ldr	r1, [r3, #0]
 8008d30:	6808      	ldr	r0, [r1, #0]
 8008d32:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008d36:	f01e 0f10 	tst.w	lr, #16
 8008d3a:	bf08      	it	eq
 8008d3c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8008d40:	f380 8809 	msr	PSP, r0
 8008d44:	f3bf 8f6f 	isb	sy
 8008d48:	4770      	bx	lr
 8008d4a:	bf00      	nop
 8008d4c:	f3af 8000 	nop.w

08008d50 <pxCurrentTCBConst>:
 8008d50:	20014e54 	.word	0x20014e54

08008d54 <SysTick_Handler>:
{
 8008d54:	b508      	push	{r3, lr}
	__asm volatile
 8008d56:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d5a:	f383 8811 	msr	BASEPRI, r3
 8008d5e:	f3bf 8f6f 	isb	sy
 8008d62:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8008d66:	f001 f80b 	bl	8009d80 <xTaskIncrementTick>
 8008d6a:	b128      	cbz	r0, 8008d78 <SysTick_Handler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8008d6c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008d70:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008d74:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 8008d78:	2300      	movs	r3, #0
 8008d7a:	f383 8811 	msr	BASEPRI, r3
}
 8008d7e:	bd08      	pop	{r3, pc}

08008d80 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8008d80:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8008d84:	2300      	movs	r3, #0
 8008d86:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8008d88:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8008d8a:	4b05      	ldr	r3, [pc, #20]	; (8008da0 <vPortSetupTimerInterrupt+0x20>)
 8008d8c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8008d90:	681b      	ldr	r3, [r3, #0]
 8008d92:	fbb3 f3f1 	udiv	r3, r3, r1
 8008d96:	3b01      	subs	r3, #1
 8008d98:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 8008d9a:	2307      	movs	r3, #7
 8008d9c:	6113      	str	r3, [r2, #16]
}
 8008d9e:	4770      	bx	lr
 8008da0:	2000007c 	.word	0x2000007c

08008da4 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8008da4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 8008da8:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8008daa:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 8008dae:	4a3a      	ldr	r2, [pc, #232]	; (8008e98 <xPortStartScheduler+0xf4>)
 8008db0:	4291      	cmp	r1, r2
 8008db2:	d108      	bne.n	8008dc6 <xPortStartScheduler+0x22>
	__asm volatile
 8008db4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008db8:	f383 8811 	msr	BASEPRI, r3
 8008dbc:	f3bf 8f6f 	isb	sy
 8008dc0:	f3bf 8f4f 	dsb	sy
 8008dc4:	e7fe      	b.n	8008dc4 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8008dc6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 8008dca:	4b34      	ldr	r3, [pc, #208]	; (8008e9c <xPortStartScheduler+0xf8>)
 8008dcc:	429a      	cmp	r2, r3
 8008dce:	d108      	bne.n	8008de2 <xPortStartScheduler+0x3e>
 8008dd0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008dd4:	f383 8811 	msr	BASEPRI, r3
 8008dd8:	f3bf 8f6f 	isb	sy
 8008ddc:	f3bf 8f4f 	dsb	sy
 8008de0:	e7fe      	b.n	8008de0 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8008de2:	4b2f      	ldr	r3, [pc, #188]	; (8008ea0 <xPortStartScheduler+0xfc>)
 8008de4:	781a      	ldrb	r2, [r3, #0]
 8008de6:	b2d2      	uxtb	r2, r2
 8008de8:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8008dea:	22ff      	movs	r2, #255	; 0xff
 8008dec:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008dee:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008df0:	4a2c      	ldr	r2, [pc, #176]	; (8008ea4 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008df2:	b2db      	uxtb	r3, r3
 8008df4:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008df8:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8008dfc:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8008e00:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8008e02:	4a29      	ldr	r2, [pc, #164]	; (8008ea8 <xPortStartScheduler+0x104>)
 8008e04:	2307      	movs	r3, #7
 8008e06:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8008e08:	2100      	movs	r1, #0
 8008e0a:	f89d 0003 	ldrb.w	r0, [sp, #3]
 8008e0e:	0600      	lsls	r0, r0, #24
 8008e10:	f103 34ff 	add.w	r4, r3, #4294967295
 8008e14:	d40c      	bmi.n	8008e30 <xPortStartScheduler+0x8c>
 8008e16:	b111      	cbz	r1, 8008e1e <xPortStartScheduler+0x7a>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8008e18:	2b03      	cmp	r3, #3
 8008e1a:	6013      	str	r3, [r2, #0]
 8008e1c:	d011      	beq.n	8008e42 <xPortStartScheduler+0x9e>
 8008e1e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e22:	f383 8811 	msr	BASEPRI, r3
 8008e26:	f3bf 8f6f 	isb	sy
 8008e2a:	f3bf 8f4f 	dsb	sy
 8008e2e:	e7fe      	b.n	8008e2e <xPortStartScheduler+0x8a>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8008e30:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8008e34:	005b      	lsls	r3, r3, #1
 8008e36:	b2db      	uxtb	r3, r3
 8008e38:	f88d 3003 	strb.w	r3, [sp, #3]
 8008e3c:	2101      	movs	r1, #1
 8008e3e:	4623      	mov	r3, r4
 8008e40:	e7e3      	b.n	8008e0a <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8008e42:	f44f 7340 	mov.w	r3, #768	; 0x300
 8008e46:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8008e48:	9b01      	ldr	r3, [sp, #4]
 8008e4a:	4a15      	ldr	r2, [pc, #84]	; (8008ea0 <xPortStartScheduler+0xfc>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8008e4c:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8008e50:	b2db      	uxtb	r3, r3
 8008e52:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8008e54:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8008e58:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8008e5c:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8008e60:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8008e64:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8008e68:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 8008e6c:	f7ff ff88 	bl	8008d80 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8008e70:	4b0e      	ldr	r3, [pc, #56]	; (8008eac <xPortStartScheduler+0x108>)
 8008e72:	2500      	movs	r5, #0
 8008e74:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 8008e76:	f7ff fead 	bl	8008bd4 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 8008e7a:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 8008e7e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8008e82:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 8008e86:	f7ff fe91 	bl	8008bac <prvPortStartFirstTask>
	vTaskSwitchContext();
 8008e8a:	f001 f8a7 	bl	8009fdc <vTaskSwitchContext>
	prvTaskExitError();
 8008e8e:	f7ff feab 	bl	8008be8 <prvTaskExitError>
}
 8008e92:	4628      	mov	r0, r5
 8008e94:	b003      	add	sp, #12
 8008e96:	bd30      	pop	{r4, r5, pc}
 8008e98:	410fc271 	.word	0x410fc271
 8008e9c:	410fc270 	.word	0x410fc270
 8008ea0:	e000e400 	.word	0xe000e400
 8008ea4:	20014e0c 	.word	0x20014e0c
 8008ea8:	20014e10 	.word	0x20014e10
 8008eac:	20000088 	.word	0x20000088

08008eb0 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8008eb0:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8008eb4:	2b0f      	cmp	r3, #15
 8008eb6:	d90e      	bls.n	8008ed6 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8008eb8:	4a11      	ldr	r2, [pc, #68]	; (8008f00 <vPortValidateInterruptPriority+0x50>)
 8008eba:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8008ebc:	4a11      	ldr	r2, [pc, #68]	; (8008f04 <vPortValidateInterruptPriority+0x54>)
 8008ebe:	7812      	ldrb	r2, [r2, #0]
 8008ec0:	429a      	cmp	r2, r3
 8008ec2:	d908      	bls.n	8008ed6 <vPortValidateInterruptPriority+0x26>
 8008ec4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ec8:	f383 8811 	msr	BASEPRI, r3
 8008ecc:	f3bf 8f6f 	isb	sy
 8008ed0:	f3bf 8f4f 	dsb	sy
 8008ed4:	e7fe      	b.n	8008ed4 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8008ed6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008eda:	4a0b      	ldr	r2, [pc, #44]	; (8008f08 <vPortValidateInterruptPriority+0x58>)
 8008edc:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 8008ee0:	6812      	ldr	r2, [r2, #0]
 8008ee2:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8008ee6:	4293      	cmp	r3, r2
 8008ee8:	d908      	bls.n	8008efc <vPortValidateInterruptPriority+0x4c>
 8008eea:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008eee:	f383 8811 	msr	BASEPRI, r3
 8008ef2:	f3bf 8f6f 	isb	sy
 8008ef6:	f3bf 8f4f 	dsb	sy
 8008efa:	e7fe      	b.n	8008efa <vPortValidateInterruptPriority+0x4a>
	}
 8008efc:	4770      	bx	lr
 8008efe:	bf00      	nop
 8008f00:	e000e3f0 	.word	0xe000e3f0
 8008f04:	20014e0c 	.word	0x20014e0c
 8008f08:	20014e10 	.word	0x20014e10

08008f0c <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8008f0c:	b510      	push	{r4, lr}
 8008f0e:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8008f10:	f7ff feb8 	bl	8008c84 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8008f14:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8008f16:	f7ff fed5 	bl	8008cc4 <vPortExitCritical>

	return xReturn;
}
 8008f1a:	fab4 f084 	clz	r0, r4
 8008f1e:	0940      	lsrs	r0, r0, #5
 8008f20:	bd10      	pop	{r4, pc}

08008f22 <prvCopyDataToQueue>:
{
 8008f22:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008f24:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8008f26:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008f28:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 8008f2a:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8008f2c:	b952      	cbnz	r2, 8008f44 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008f2e:	6807      	ldr	r7, [r0, #0]
 8008f30:	bb47      	cbnz	r7, 8008f84 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008f32:	6880      	ldr	r0, [r0, #8]
 8008f34:	f001 f9ae 	bl	800a294 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8008f38:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008f3a:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008f3c:	3601      	adds	r6, #1
 8008f3e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 8008f40:	4628      	mov	r0, r5
 8008f42:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8008f44:	b965      	cbnz	r5, 8008f60 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008f46:	6840      	ldr	r0, [r0, #4]
 8008f48:	f017 fce0 	bl	802090c <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008f4c:	6863      	ldr	r3, [r4, #4]
 8008f4e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8008f50:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008f52:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008f54:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008f56:	4293      	cmp	r3, r2
 8008f58:	d3f0      	bcc.n	8008f3c <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8008f5a:	6823      	ldr	r3, [r4, #0]
 8008f5c:	6063      	str	r3, [r4, #4]
 8008f5e:	e7ed      	b.n	8008f3c <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8008f60:	68c0      	ldr	r0, [r0, #12]
 8008f62:	f017 fcd3 	bl	802090c <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008f66:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8008f68:	68e3      	ldr	r3, [r4, #12]
 8008f6a:	4251      	negs	r1, r2
 8008f6c:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008f6e:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008f70:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008f72:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8008f74:	bf3e      	ittt	cc
 8008f76:	68a3      	ldrcc	r3, [r4, #8]
 8008f78:	185b      	addcc	r3, r3, r1
 8008f7a:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8008f7c:	2d02      	cmp	r5, #2
 8008f7e:	d101      	bne.n	8008f84 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008f80:	b116      	cbz	r6, 8008f88 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 8008f82:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 8008f84:	2500      	movs	r5, #0
 8008f86:	e7d9      	b.n	8008f3c <prvCopyDataToQueue+0x1a>
 8008f88:	4635      	mov	r5, r6
 8008f8a:	e7d7      	b.n	8008f3c <prvCopyDataToQueue+0x1a>

08008f8c <prvCopyDataFromQueue>:
{
 8008f8c:	4603      	mov	r3, r0
 8008f8e:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8008f90:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 8008f92:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8008f94:	b16a      	cbz	r2, 8008fb2 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008f96:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8008f98:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008f9a:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8008f9c:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8008f9e:	bf28      	it	cs
 8008fa0:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008fa2:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8008fa4:	bf28      	it	cs
 8008fa6:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008fa8:	68d9      	ldr	r1, [r3, #12]
}
 8008faa:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008fae:	f017 bcad 	b.w	802090c <memcpy>
}
 8008fb2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008fb6:	4770      	bx	lr

08008fb8 <prvUnlockQueue>:
{
 8008fb8:	b570      	push	{r4, r5, r6, lr}
 8008fba:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8008fbc:	f7ff fe62 	bl	8008c84 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8008fc0:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008fc4:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8008fc8:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8008fca:	2d00      	cmp	r5, #0
 8008fcc:	dc14      	bgt.n	8008ff8 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 8008fce:	23ff      	movs	r3, #255	; 0xff
 8008fd0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8008fd4:	f7ff fe76 	bl	8008cc4 <vPortExitCritical>
	taskENTER_CRITICAL();
 8008fd8:	f7ff fe54 	bl	8008c84 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8008fdc:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008fe0:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 8008fe4:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8008fe6:	2d00      	cmp	r5, #0
 8008fe8:	dc12      	bgt.n	8009010 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 8008fea:	23ff      	movs	r3, #255	; 0xff
 8008fec:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 8008ff0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8008ff4:	f7ff be66 	b.w	8008cc4 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008ff8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008ffa:	2b00      	cmp	r3, #0
 8008ffc:	d0e7      	beq.n	8008fce <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008ffe:	4630      	mov	r0, r6
 8009000:	f001 f864 	bl	800a0cc <xTaskRemoveFromEventList>
 8009004:	b108      	cbz	r0, 800900a <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8009006:	f001 f8ed 	bl	800a1e4 <vTaskMissedYield>
			--cTxLock;
 800900a:	3d01      	subs	r5, #1
 800900c:	b26d      	sxtb	r5, r5
 800900e:	e7dc      	b.n	8008fca <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009010:	6923      	ldr	r3, [r4, #16]
 8009012:	2b00      	cmp	r3, #0
 8009014:	d0e9      	beq.n	8008fea <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009016:	4630      	mov	r0, r6
 8009018:	f001 f858 	bl	800a0cc <xTaskRemoveFromEventList>
 800901c:	b108      	cbz	r0, 8009022 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 800901e:	f001 f8e1 	bl	800a1e4 <vTaskMissedYield>
				--cRxLock;
 8009022:	3d01      	subs	r5, #1
 8009024:	b26d      	sxtb	r5, r5
 8009026:	e7de      	b.n	8008fe6 <prvUnlockQueue+0x2e>

08009028 <xQueueGenericReset>:
{
 8009028:	b538      	push	{r3, r4, r5, lr}
 800902a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800902c:	4604      	mov	r4, r0
 800902e:	b940      	cbnz	r0, 8009042 <xQueueGenericReset+0x1a>
 8009030:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009034:	f383 8811 	msr	BASEPRI, r3
 8009038:	f3bf 8f6f 	isb	sy
 800903c:	f3bf 8f4f 	dsb	sy
 8009040:	e7fe      	b.n	8009040 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8009042:	f7ff fe1f 	bl	8008c84 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009046:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 800904a:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800904c:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800904e:	434b      	muls	r3, r1
 8009050:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009052:	1a5b      	subs	r3, r3, r1
 8009054:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009056:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009058:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800905a:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 800905c:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800905e:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8009060:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8009064:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8009068:	b9a5      	cbnz	r5, 8009094 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800906a:	6923      	ldr	r3, [r4, #16]
 800906c:	b173      	cbz	r3, 800908c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800906e:	f104 0010 	add.w	r0, r4, #16
 8009072:	f001 f82b 	bl	800a0cc <xTaskRemoveFromEventList>
 8009076:	b148      	cbz	r0, 800908c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8009078:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800907c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009080:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009084:	f3bf 8f4f 	dsb	sy
 8009088:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800908c:	f7ff fe1a 	bl	8008cc4 <vPortExitCritical>
}
 8009090:	2001      	movs	r0, #1
 8009092:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8009094:	f104 0010 	add.w	r0, r4, #16
 8009098:	f7ff fd46 	bl	8008b28 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800909c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80090a0:	f7ff fd42 	bl	8008b28 <vListInitialise>
 80090a4:	e7f2      	b.n	800908c <xQueueGenericReset+0x64>

080090a6 <xQueueGenericCreateStatic>:
	{
 80090a6:	b513      	push	{r0, r1, r4, lr}
 80090a8:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 80090aa:	b940      	cbnz	r0, 80090be <xQueueGenericCreateStatic+0x18>
 80090ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090b0:	f383 8811 	msr	BASEPRI, r3
 80090b4:	f3bf 8f6f 	isb	sy
 80090b8:	f3bf 8f4f 	dsb	sy
 80090bc:	e7fe      	b.n	80090bc <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 80090be:	b943      	cbnz	r3, 80090d2 <xQueueGenericCreateStatic+0x2c>
 80090c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090c4:	f383 8811 	msr	BASEPRI, r3
 80090c8:	f3bf 8f6f 	isb	sy
 80090cc:	f3bf 8f4f 	dsb	sy
 80090d0:	e7fe      	b.n	80090d0 <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 80090d2:	b14a      	cbz	r2, 80090e8 <xQueueGenericCreateStatic+0x42>
 80090d4:	b991      	cbnz	r1, 80090fc <xQueueGenericCreateStatic+0x56>
 80090d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090da:	f383 8811 	msr	BASEPRI, r3
 80090de:	f3bf 8f6f 	isb	sy
 80090e2:	f3bf 8f4f 	dsb	sy
 80090e6:	e7fe      	b.n	80090e6 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 80090e8:	b141      	cbz	r1, 80090fc <xQueueGenericCreateStatic+0x56>
 80090ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090ee:	f383 8811 	msr	BASEPRI, r3
 80090f2:	f3bf 8f6f 	isb	sy
 80090f6:	f3bf 8f4f 	dsb	sy
 80090fa:	e7fe      	b.n	80090fa <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 80090fc:	2350      	movs	r3, #80	; 0x50
 80090fe:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8009100:	9b01      	ldr	r3, [sp, #4]
 8009102:	2b50      	cmp	r3, #80	; 0x50
 8009104:	d008      	beq.n	8009118 <xQueueGenericCreateStatic+0x72>
 8009106:	f04f 0350 	mov.w	r3, #80	; 0x50
 800910a:	f383 8811 	msr	BASEPRI, r3
 800910e:	f3bf 8f6f 	isb	sy
 8009112:	f3bf 8f4f 	dsb	sy
 8009116:	e7fe      	b.n	8009116 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 8009118:	2900      	cmp	r1, #0
 800911a:	bf08      	it	eq
 800911c:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800911e:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8009120:	6022      	str	r2, [r4, #0]
 8009122:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 8009124:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8009128:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800912c:	4619      	mov	r1, r3
 800912e:	4620      	mov	r0, r4
 8009130:	f7ff ff7a 	bl	8009028 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8009134:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8009138:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 800913c:	4620      	mov	r0, r4
 800913e:	b002      	add	sp, #8
 8009140:	bd10      	pop	{r4, pc}

08009142 <xQueueGenericCreate>:
	{
 8009142:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009144:	460d      	mov	r5, r1
 8009146:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8009148:	4606      	mov	r6, r0
 800914a:	b940      	cbnz	r0, 800915e <xQueueGenericCreate+0x1c>
 800914c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009150:	f383 8811 	msr	BASEPRI, r3
 8009154:	f3bf 8f6f 	isb	sy
 8009158:	f3bf 8f4f 	dsb	sy
 800915c:	e7fe      	b.n	800915c <xQueueGenericCreate+0x1a>
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800915e:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8009160:	3050      	adds	r0, #80	; 0x50
 8009162:	f7ff fc17 	bl	8008994 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8009166:	4604      	mov	r4, r0
 8009168:	b170      	cbz	r0, 8009188 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800916a:	2300      	movs	r3, #0
 800916c:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8009170:	b165      	cbz	r5, 800918c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009172:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8009176:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 800917a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800917c:	2101      	movs	r1, #1
 800917e:	4620      	mov	r0, r4
 8009180:	f7ff ff52 	bl	8009028 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8009184:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8009188:	4620      	mov	r0, r4
 800918a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800918c:	4603      	mov	r3, r0
 800918e:	e7f2      	b.n	8009176 <xQueueGenericCreate+0x34>

08009190 <xQueueCreateCountingSemaphoreStatic>:
	{
 8009190:	b513      	push	{r0, r1, r4, lr}
 8009192:	4613      	mov	r3, r2
 8009194:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8009196:	b940      	cbnz	r0, 80091aa <xQueueCreateCountingSemaphoreStatic+0x1a>
 8009198:	f04f 0350 	mov.w	r3, #80	; 0x50
 800919c:	f383 8811 	msr	BASEPRI, r3
 80091a0:	f3bf 8f6f 	isb	sy
 80091a4:	f3bf 8f4f 	dsb	sy
 80091a8:	e7fe      	b.n	80091a8 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 80091aa:	4288      	cmp	r0, r1
 80091ac:	d208      	bcs.n	80091c0 <xQueueCreateCountingSemaphoreStatic+0x30>
 80091ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091b2:	f383 8811 	msr	BASEPRI, r3
 80091b6:	f3bf 8f6f 	isb	sy
 80091ba:	f3bf 8f4f 	dsb	sy
 80091be:	e7fe      	b.n	80091be <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80091c0:	2202      	movs	r2, #2
 80091c2:	9200      	str	r2, [sp, #0]
 80091c4:	2200      	movs	r2, #0
 80091c6:	4611      	mov	r1, r2
 80091c8:	f7ff ff6d 	bl	80090a6 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 80091cc:	b100      	cbz	r0, 80091d0 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80091ce:	6384      	str	r4, [r0, #56]	; 0x38
	}
 80091d0:	b002      	add	sp, #8
 80091d2:	bd10      	pop	{r4, pc}

080091d4 <xQueueCreateCountingSemaphore>:
	{
 80091d4:	b510      	push	{r4, lr}
 80091d6:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 80091d8:	b940      	cbnz	r0, 80091ec <xQueueCreateCountingSemaphore+0x18>
 80091da:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091de:	f383 8811 	msr	BASEPRI, r3
 80091e2:	f3bf 8f6f 	isb	sy
 80091e6:	f3bf 8f4f 	dsb	sy
 80091ea:	e7fe      	b.n	80091ea <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 80091ec:	4288      	cmp	r0, r1
 80091ee:	d208      	bcs.n	8009202 <xQueueCreateCountingSemaphore+0x2e>
 80091f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091f4:	f383 8811 	msr	BASEPRI, r3
 80091f8:	f3bf 8f6f 	isb	sy
 80091fc:	f3bf 8f4f 	dsb	sy
 8009200:	e7fe      	b.n	8009200 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8009202:	2202      	movs	r2, #2
 8009204:	2100      	movs	r1, #0
 8009206:	f7ff ff9c 	bl	8009142 <xQueueGenericCreate>
		if( xHandle != NULL )
 800920a:	b100      	cbz	r0, 800920e <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800920c:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800920e:	bd10      	pop	{r4, pc}

08009210 <xQueueGenericSend>:
{
 8009210:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009214:	b085      	sub	sp, #20
 8009216:	4688      	mov	r8, r1
 8009218:	9201      	str	r2, [sp, #4]
 800921a:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800921c:	4604      	mov	r4, r0
 800921e:	b940      	cbnz	r0, 8009232 <xQueueGenericSend+0x22>
 8009220:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009224:	f383 8811 	msr	BASEPRI, r3
 8009228:	f3bf 8f6f 	isb	sy
 800922c:	f3bf 8f4f 	dsb	sy
 8009230:	e7fe      	b.n	8009230 <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009232:	b951      	cbnz	r1, 800924a <xQueueGenericSend+0x3a>
 8009234:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009236:	b143      	cbz	r3, 800924a <xQueueGenericSend+0x3a>
 8009238:	f04f 0350 	mov.w	r3, #80	; 0x50
 800923c:	f383 8811 	msr	BASEPRI, r3
 8009240:	f3bf 8f6f 	isb	sy
 8009244:	f3bf 8f4f 	dsb	sy
 8009248:	e7fe      	b.n	8009248 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800924a:	2f02      	cmp	r7, #2
 800924c:	d10b      	bne.n	8009266 <xQueueGenericSend+0x56>
 800924e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009250:	2b01      	cmp	r3, #1
 8009252:	d008      	beq.n	8009266 <xQueueGenericSend+0x56>
 8009254:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009258:	f383 8811 	msr	BASEPRI, r3
 800925c:	f3bf 8f6f 	isb	sy
 8009260:	f3bf 8f4f 	dsb	sy
 8009264:	e7fe      	b.n	8009264 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009266:	f000 ffc3 	bl	800a1f0 <xTaskGetSchedulerState>
 800926a:	4606      	mov	r6, r0
 800926c:	b950      	cbnz	r0, 8009284 <xQueueGenericSend+0x74>
 800926e:	9b01      	ldr	r3, [sp, #4]
 8009270:	b14b      	cbz	r3, 8009286 <xQueueGenericSend+0x76>
 8009272:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009276:	f383 8811 	msr	BASEPRI, r3
 800927a:	f3bf 8f6f 	isb	sy
 800927e:	f3bf 8f4f 	dsb	sy
 8009282:	e7fe      	b.n	8009282 <xQueueGenericSend+0x72>
 8009284:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8009286:	f04f 0900 	mov.w	r9, #0
 800928a:	e037      	b.n	80092fc <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 800928c:	9d01      	ldr	r5, [sp, #4]
 800928e:	b91d      	cbnz	r5, 8009298 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 8009290:	f7ff fd18 	bl	8008cc4 <vPortExitCritical>
			return errQUEUE_FULL;
 8009294:	2000      	movs	r0, #0
 8009296:	e052      	b.n	800933e <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 8009298:	b916      	cbnz	r6, 80092a0 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800929a:	a802      	add	r0, sp, #8
 800929c:	f000 ff5a 	bl	800a154 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80092a0:	f7ff fd10 	bl	8008cc4 <vPortExitCritical>
		vTaskSuspendAll();
 80092a4:	f000 fd5e 	bl	8009d64 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80092a8:	f7ff fcec 	bl	8008c84 <vPortEnterCritical>
 80092ac:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80092b0:	2bff      	cmp	r3, #255	; 0xff
 80092b2:	bf08      	it	eq
 80092b4:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 80092b8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80092bc:	2bff      	cmp	r3, #255	; 0xff
 80092be:	bf08      	it	eq
 80092c0:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 80092c4:	f7ff fcfe 	bl	8008cc4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80092c8:	a901      	add	r1, sp, #4
 80092ca:	a802      	add	r0, sp, #8
 80092cc:	f000 ff4e 	bl	800a16c <xTaskCheckForTimeOut>
 80092d0:	2800      	cmp	r0, #0
 80092d2:	d14a      	bne.n	800936a <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80092d4:	f7ff fcd6 	bl	8008c84 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 80092d8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80092da:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80092dc:	429a      	cmp	r2, r3
 80092de:	d131      	bne.n	8009344 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80092e0:	f7ff fcf0 	bl	8008cc4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 80092e4:	9901      	ldr	r1, [sp, #4]
 80092e6:	f104 0010 	add.w	r0, r4, #16
 80092ea:	f000 feb7 	bl	800a05c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80092ee:	4620      	mov	r0, r4
 80092f0:	f7ff fe62 	bl	8008fb8 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80092f4:	f000 fdda 	bl	8009eac <xTaskResumeAll>
 80092f8:	b360      	cbz	r0, 8009354 <xQueueGenericSend+0x144>
 80092fa:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80092fc:	f7ff fcc2 	bl	8008c84 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8009300:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8009302:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009304:	429a      	cmp	r2, r3
 8009306:	d301      	bcc.n	800930c <xQueueGenericSend+0xfc>
 8009308:	2f02      	cmp	r7, #2
 800930a:	d1bf      	bne.n	800928c <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800930c:	463a      	mov	r2, r7
 800930e:	4641      	mov	r1, r8
 8009310:	4620      	mov	r0, r4
 8009312:	f7ff fe06 	bl	8008f22 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009316:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009318:	b11b      	cbz	r3, 8009322 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800931a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800931e:	f000 fed5 	bl	800a0cc <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8009322:	b148      	cbz	r0, 8009338 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 8009324:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009328:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800932c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009330:	f3bf 8f4f 	dsb	sy
 8009334:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009338:	f7ff fcc4 	bl	8008cc4 <vPortExitCritical>
				return pdPASS;
 800933c:	2001      	movs	r0, #1
}
 800933e:	b005      	add	sp, #20
 8009340:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 8009344:	f7ff fcbe 	bl	8008cc4 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8009348:	4620      	mov	r0, r4
 800934a:	f7ff fe35 	bl	8008fb8 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800934e:	f000 fdad 	bl	8009eac <xTaskResumeAll>
 8009352:	e7d2      	b.n	80092fa <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 8009354:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009358:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800935c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009360:	f3bf 8f4f 	dsb	sy
 8009364:	f3bf 8f6f 	isb	sy
 8009368:	e7c7      	b.n	80092fa <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 800936a:	4620      	mov	r0, r4
 800936c:	f7ff fe24 	bl	8008fb8 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009370:	f000 fd9c 	bl	8009eac <xTaskResumeAll>
 8009374:	e78e      	b.n	8009294 <xQueueGenericSend+0x84>

08009376 <xQueueGenericSendFromISR>:
{
 8009376:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800937a:	4689      	mov	r9, r1
 800937c:	4690      	mov	r8, r2
 800937e:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8009380:	4604      	mov	r4, r0
 8009382:	b940      	cbnz	r0, 8009396 <xQueueGenericSendFromISR+0x20>
 8009384:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009388:	f383 8811 	msr	BASEPRI, r3
 800938c:	f3bf 8f6f 	isb	sy
 8009390:	f3bf 8f4f 	dsb	sy
 8009394:	e7fe      	b.n	8009394 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009396:	b951      	cbnz	r1, 80093ae <xQueueGenericSendFromISR+0x38>
 8009398:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800939a:	b143      	cbz	r3, 80093ae <xQueueGenericSendFromISR+0x38>
 800939c:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093a0:	f383 8811 	msr	BASEPRI, r3
 80093a4:	f3bf 8f6f 	isb	sy
 80093a8:	f3bf 8f4f 	dsb	sy
 80093ac:	e7fe      	b.n	80093ac <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80093ae:	2f02      	cmp	r7, #2
 80093b0:	d10b      	bne.n	80093ca <xQueueGenericSendFromISR+0x54>
 80093b2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80093b4:	2b01      	cmp	r3, #1
 80093b6:	d008      	beq.n	80093ca <xQueueGenericSendFromISR+0x54>
 80093b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093bc:	f383 8811 	msr	BASEPRI, r3
 80093c0:	f3bf 8f6f 	isb	sy
 80093c4:	f3bf 8f4f 	dsb	sy
 80093c8:	e7fe      	b.n	80093c8 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80093ca:	f7ff fd71 	bl	8008eb0 <vPortValidateInterruptPriority>
	__asm volatile
 80093ce:	f3ef 8611 	mrs	r6, BASEPRI
 80093d2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093d6:	f383 8811 	msr	BASEPRI, r3
 80093da:	f3bf 8f6f 	isb	sy
 80093de:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80093e2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80093e4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80093e6:	429a      	cmp	r2, r3
 80093e8:	d301      	bcc.n	80093ee <xQueueGenericSendFromISR+0x78>
 80093ea:	2f02      	cmp	r7, #2
 80093ec:	d122      	bne.n	8009434 <xQueueGenericSendFromISR+0xbe>
			const int8_t cTxLock = pxQueue->cTxLock;
 80093ee:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80093f2:	463a      	mov	r2, r7
			const int8_t cTxLock = pxQueue->cTxLock;
 80093f4:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80093f6:	4649      	mov	r1, r9
 80093f8:	4620      	mov	r0, r4
 80093fa:	f7ff fd92 	bl	8008f22 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 80093fe:	1c6b      	adds	r3, r5, #1
 8009400:	d113      	bne.n	800942a <xQueueGenericSendFromISR+0xb4>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009402:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009404:	b90b      	cbnz	r3, 800940a <xQueueGenericSendFromISR+0x94>
			xReturn = pdPASS;
 8009406:	2001      	movs	r0, #1
 8009408:	e00b      	b.n	8009422 <xQueueGenericSendFromISR+0xac>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800940a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800940e:	f000 fe5d 	bl	800a0cc <xTaskRemoveFromEventList>
 8009412:	2800      	cmp	r0, #0
 8009414:	d0f7      	beq.n	8009406 <xQueueGenericSendFromISR+0x90>
							if( pxHigherPriorityTaskWoken != NULL )
 8009416:	f1b8 0f00 	cmp.w	r8, #0
 800941a:	d0f4      	beq.n	8009406 <xQueueGenericSendFromISR+0x90>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800941c:	2001      	movs	r0, #1
 800941e:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8009422:	f386 8811 	msr	BASEPRI, r6
}
 8009426:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800942a:	3501      	adds	r5, #1
 800942c:	b26d      	sxtb	r5, r5
 800942e:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 8009432:	e7e8      	b.n	8009406 <xQueueGenericSendFromISR+0x90>
			xReturn = errQUEUE_FULL;
 8009434:	2000      	movs	r0, #0
 8009436:	e7f4      	b.n	8009422 <xQueueGenericSendFromISR+0xac>

08009438 <xQueueGiveFromISR>:
{
 8009438:	b570      	push	{r4, r5, r6, lr}
 800943a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800943c:	4604      	mov	r4, r0
 800943e:	b940      	cbnz	r0, 8009452 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8009440:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009444:	f383 8811 	msr	BASEPRI, r3
 8009448:	f3bf 8f6f 	isb	sy
 800944c:	f3bf 8f4f 	dsb	sy
 8009450:	e7fe      	b.n	8009450 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8009452:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009454:	b143      	cbz	r3, 8009468 <xQueueGiveFromISR+0x30>
 8009456:	f04f 0350 	mov.w	r3, #80	; 0x50
 800945a:	f383 8811 	msr	BASEPRI, r3
 800945e:	f3bf 8f6f 	isb	sy
 8009462:	f3bf 8f4f 	dsb	sy
 8009466:	e7fe      	b.n	8009466 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8009468:	6803      	ldr	r3, [r0, #0]
 800946a:	b953      	cbnz	r3, 8009482 <xQueueGiveFromISR+0x4a>
 800946c:	6883      	ldr	r3, [r0, #8]
 800946e:	b143      	cbz	r3, 8009482 <xQueueGiveFromISR+0x4a>
 8009470:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009474:	f383 8811 	msr	BASEPRI, r3
 8009478:	f3bf 8f6f 	isb	sy
 800947c:	f3bf 8f4f 	dsb	sy
 8009480:	e7fe      	b.n	8009480 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8009482:	f7ff fd15 	bl	8008eb0 <vPortValidateInterruptPriority>
	__asm volatile
 8009486:	f3ef 8611 	mrs	r6, BASEPRI
 800948a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800948e:	f383 8811 	msr	BASEPRI, r3
 8009492:	f3bf 8f6f 	isb	sy
 8009496:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800949a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800949c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800949e:	4293      	cmp	r3, r2
 80094a0:	d91c      	bls.n	80094dc <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 80094a2:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80094a6:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 80094a8:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 80094aa:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80094ac:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 80094ae:	d110      	bne.n	80094d2 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80094b0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80094b2:	b90b      	cbnz	r3, 80094b8 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 80094b4:	2001      	movs	r0, #1
 80094b6:	e009      	b.n	80094cc <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80094b8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80094bc:	f000 fe06 	bl	800a0cc <xTaskRemoveFromEventList>
 80094c0:	2800      	cmp	r0, #0
 80094c2:	d0f7      	beq.n	80094b4 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 80094c4:	2d00      	cmp	r5, #0
 80094c6:	d0f5      	beq.n	80094b4 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 80094c8:	2001      	movs	r0, #1
 80094ca:	6028      	str	r0, [r5, #0]
	__asm volatile
 80094cc:	f386 8811 	msr	BASEPRI, r6
}
 80094d0:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80094d2:	3301      	adds	r3, #1
 80094d4:	b25b      	sxtb	r3, r3
 80094d6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80094da:	e7eb      	b.n	80094b4 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 80094dc:	2000      	movs	r0, #0
 80094de:	e7f5      	b.n	80094cc <xQueueGiveFromISR+0x94>

080094e0 <xQueueReceive>:
{
 80094e0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80094e4:	460f      	mov	r7, r1
 80094e6:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 80094e8:	4604      	mov	r4, r0
 80094ea:	b940      	cbnz	r0, 80094fe <xQueueReceive+0x1e>
	__asm volatile
 80094ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 80094f0:	f383 8811 	msr	BASEPRI, r3
 80094f4:	f3bf 8f6f 	isb	sy
 80094f8:	f3bf 8f4f 	dsb	sy
 80094fc:	e7fe      	b.n	80094fc <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80094fe:	b951      	cbnz	r1, 8009516 <xQueueReceive+0x36>
 8009500:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009502:	b143      	cbz	r3, 8009516 <xQueueReceive+0x36>
 8009504:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009508:	f383 8811 	msr	BASEPRI, r3
 800950c:	f3bf 8f6f 	isb	sy
 8009510:	f3bf 8f4f 	dsb	sy
 8009514:	e7fe      	b.n	8009514 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009516:	f000 fe6b 	bl	800a1f0 <xTaskGetSchedulerState>
 800951a:	4606      	mov	r6, r0
 800951c:	b950      	cbnz	r0, 8009534 <xQueueReceive+0x54>
 800951e:	9b01      	ldr	r3, [sp, #4]
 8009520:	b14b      	cbz	r3, 8009536 <xQueueReceive+0x56>
 8009522:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009526:	f383 8811 	msr	BASEPRI, r3
 800952a:	f3bf 8f6f 	isb	sy
 800952e:	f3bf 8f4f 	dsb	sy
 8009532:	e7fe      	b.n	8009532 <xQueueReceive+0x52>
 8009534:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8009536:	f04f 0800 	mov.w	r8, #0
 800953a:	e03d      	b.n	80095b8 <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 800953c:	9d01      	ldr	r5, [sp, #4]
 800953e:	b91d      	cbnz	r5, 8009548 <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 8009540:	f7ff fbc0 	bl	8008cc4 <vPortExitCritical>
				return errQUEUE_EMPTY;
 8009544:	2000      	movs	r0, #0
 8009546:	e056      	b.n	80095f6 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 8009548:	b916      	cbnz	r6, 8009550 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800954a:	a802      	add	r0, sp, #8
 800954c:	f000 fe02 	bl	800a154 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8009550:	f7ff fbb8 	bl	8008cc4 <vPortExitCritical>
		vTaskSuspendAll();
 8009554:	f000 fc06 	bl	8009d64 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009558:	f7ff fb94 	bl	8008c84 <vPortEnterCritical>
 800955c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8009560:	2bff      	cmp	r3, #255	; 0xff
 8009562:	bf08      	it	eq
 8009564:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 8009568:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800956c:	2bff      	cmp	r3, #255	; 0xff
 800956e:	bf08      	it	eq
 8009570:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8009574:	f7ff fba6 	bl	8008cc4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009578:	a901      	add	r1, sp, #4
 800957a:	a802      	add	r0, sp, #8
 800957c:	f000 fdf6 	bl	800a16c <xTaskCheckForTimeOut>
 8009580:	2800      	cmp	r0, #0
 8009582:	d141      	bne.n	8009608 <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009584:	4620      	mov	r0, r4
 8009586:	f7ff fcc1 	bl	8008f0c <prvIsQueueEmpty>
 800958a:	b3b8      	cbz	r0, 80095fc <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800958c:	9901      	ldr	r1, [sp, #4]
 800958e:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009592:	f000 fd63 	bl	800a05c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8009596:	4620      	mov	r0, r4
 8009598:	f7ff fd0e 	bl	8008fb8 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800959c:	f000 fc86 	bl	8009eac <xTaskResumeAll>
 80095a0:	b948      	cbnz	r0, 80095b6 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 80095a2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80095a6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80095aa:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80095ae:	f3bf 8f4f 	dsb	sy
 80095b2:	f3bf 8f6f 	isb	sy
 80095b6:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80095b8:	f7ff fb64 	bl	8008c84 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80095bc:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80095be:	2d00      	cmp	r5, #0
 80095c0:	d0bc      	beq.n	800953c <xQueueReceive+0x5c>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 80095c2:	4639      	mov	r1, r7
 80095c4:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80095c6:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 80095c8:	f7ff fce0 	bl	8008f8c <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80095cc:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80095ce:	6923      	ldr	r3, [r4, #16]
 80095d0:	b173      	cbz	r3, 80095f0 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80095d2:	f104 0010 	add.w	r0, r4, #16
 80095d6:	f000 fd79 	bl	800a0cc <xTaskRemoveFromEventList>
 80095da:	b148      	cbz	r0, 80095f0 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 80095dc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80095e0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80095e4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80095e8:	f3bf 8f4f 	dsb	sy
 80095ec:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80095f0:	f7ff fb68 	bl	8008cc4 <vPortExitCritical>
				return pdPASS;
 80095f4:	2001      	movs	r0, #1
}
 80095f6:	b004      	add	sp, #16
 80095f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 80095fc:	4620      	mov	r0, r4
 80095fe:	f7ff fcdb 	bl	8008fb8 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8009602:	f000 fc53 	bl	8009eac <xTaskResumeAll>
 8009606:	e7d6      	b.n	80095b6 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 8009608:	4620      	mov	r0, r4
 800960a:	f7ff fcd5 	bl	8008fb8 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800960e:	f000 fc4d 	bl	8009eac <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009612:	4620      	mov	r0, r4
 8009614:	f7ff fc7a 	bl	8008f0c <prvIsQueueEmpty>
 8009618:	2800      	cmp	r0, #0
 800961a:	d0cc      	beq.n	80095b6 <xQueueReceive+0xd6>
 800961c:	e792      	b.n	8009544 <xQueueReceive+0x64>

0800961e <xQueueSemaphoreTake>:
{
 800961e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009620:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 8009622:	4604      	mov	r4, r0
{
 8009624:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8009626:	b940      	cbnz	r0, 800963a <xQueueSemaphoreTake+0x1c>
 8009628:	f04f 0350 	mov.w	r3, #80	; 0x50
 800962c:	f383 8811 	msr	BASEPRI, r3
 8009630:	f3bf 8f6f 	isb	sy
 8009634:	f3bf 8f4f 	dsb	sy
 8009638:	e7fe      	b.n	8009638 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 800963a:	6c05      	ldr	r5, [r0, #64]	; 0x40
 800963c:	b145      	cbz	r5, 8009650 <xQueueSemaphoreTake+0x32>
 800963e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009642:	f383 8811 	msr	BASEPRI, r3
 8009646:	f3bf 8f6f 	isb	sy
 800964a:	f3bf 8f4f 	dsb	sy
 800964e:	e7fe      	b.n	800964e <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009650:	f000 fdce 	bl	800a1f0 <xTaskGetSchedulerState>
 8009654:	4606      	mov	r6, r0
 8009656:	b950      	cbnz	r0, 800966e <xQueueSemaphoreTake+0x50>
 8009658:	9b01      	ldr	r3, [sp, #4]
 800965a:	b15b      	cbz	r3, 8009674 <xQueueSemaphoreTake+0x56>
 800965c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009660:	f383 8811 	msr	BASEPRI, r3
 8009664:	f3bf 8f6f 	isb	sy
 8009668:	f3bf 8f4f 	dsb	sy
 800966c:	e7fe      	b.n	800966c <xQueueSemaphoreTake+0x4e>
 800966e:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8009670:	2700      	movs	r7, #0
 8009672:	e053      	b.n	800971c <xQueueSemaphoreTake+0xfe>
 8009674:	4605      	mov	r5, r0
 8009676:	e7fb      	b.n	8009670 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 8009678:	9b01      	ldr	r3, [sp, #4]
 800967a:	b963      	cbnz	r3, 8009696 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800967c:	b145      	cbz	r5, 8009690 <xQueueSemaphoreTake+0x72>
 800967e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009682:	f383 8811 	msr	BASEPRI, r3
 8009686:	f3bf 8f6f 	isb	sy
 800968a:	f3bf 8f4f 	dsb	sy
 800968e:	e7fe      	b.n	800968e <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 8009690:	f7ff fb18 	bl	8008cc4 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8009694:	e062      	b.n	800975c <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 8009696:	b916      	cbnz	r6, 800969e <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8009698:	a802      	add	r0, sp, #8
 800969a:	f000 fd5b 	bl	800a154 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800969e:	f7ff fb11 	bl	8008cc4 <vPortExitCritical>
		vTaskSuspendAll();
 80096a2:	f000 fb5f 	bl	8009d64 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80096a6:	f7ff faed 	bl	8008c84 <vPortEnterCritical>
 80096aa:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80096ae:	2bff      	cmp	r3, #255	; 0xff
 80096b0:	bf08      	it	eq
 80096b2:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 80096b6:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80096ba:	2bff      	cmp	r3, #255	; 0xff
 80096bc:	bf08      	it	eq
 80096be:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 80096c2:	f7ff faff 	bl	8008cc4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80096c6:	a901      	add	r1, sp, #4
 80096c8:	a802      	add	r0, sp, #8
 80096ca:	f000 fd4f 	bl	800a16c <xTaskCheckForTimeOut>
 80096ce:	2800      	cmp	r0, #0
 80096d0:	d14d      	bne.n	800976e <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80096d2:	4620      	mov	r0, r4
 80096d4:	f7ff fc1a 	bl	8008f0c <prvIsQueueEmpty>
 80096d8:	2800      	cmp	r0, #0
 80096da:	d042      	beq.n	8009762 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80096dc:	6823      	ldr	r3, [r4, #0]
 80096de:	b93b      	cbnz	r3, 80096f0 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 80096e0:	f7ff fad0 	bl	8008c84 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 80096e4:	68a0      	ldr	r0, [r4, #8]
 80096e6:	f000 fd93 	bl	800a210 <xTaskPriorityInherit>
 80096ea:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 80096ec:	f7ff faea 	bl	8008cc4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 80096f0:	9901      	ldr	r1, [sp, #4]
 80096f2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80096f6:	f000 fcb1 	bl	800a05c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80096fa:	4620      	mov	r0, r4
 80096fc:	f7ff fc5c 	bl	8008fb8 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8009700:	f000 fbd4 	bl	8009eac <xTaskResumeAll>
 8009704:	b948      	cbnz	r0, 800971a <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 8009706:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800970a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800970e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009712:	f3bf 8f4f 	dsb	sy
 8009716:	f3bf 8f6f 	isb	sy
 800971a:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800971c:	f7ff fab2 	bl	8008c84 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8009720:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8009722:	2b00      	cmp	r3, #0
 8009724:	d0a8      	beq.n	8009678 <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8009726:	3b01      	subs	r3, #1
 8009728:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800972a:	6823      	ldr	r3, [r4, #0]
 800972c:	b913      	cbnz	r3, 8009734 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800972e:	f000 fe47 	bl	800a3c0 <pvTaskIncrementMutexHeldCount>
 8009732:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009734:	6923      	ldr	r3, [r4, #16]
 8009736:	b173      	cbz	r3, 8009756 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009738:	f104 0010 	add.w	r0, r4, #16
 800973c:	f000 fcc6 	bl	800a0cc <xTaskRemoveFromEventList>
 8009740:	b148      	cbz	r0, 8009756 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 8009742:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009746:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800974a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800974e:	f3bf 8f4f 	dsb	sy
 8009752:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009756:	f7ff fab5 	bl	8008cc4 <vPortExitCritical>
				return pdPASS;
 800975a:	2501      	movs	r5, #1
}
 800975c:	4628      	mov	r0, r5
 800975e:	b005      	add	sp, #20
 8009760:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 8009762:	4620      	mov	r0, r4
 8009764:	f7ff fc28 	bl	8008fb8 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8009768:	f000 fba0 	bl	8009eac <xTaskResumeAll>
 800976c:	e7d5      	b.n	800971a <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 800976e:	4620      	mov	r0, r4
 8009770:	f7ff fc22 	bl	8008fb8 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009774:	f000 fb9a 	bl	8009eac <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009778:	4620      	mov	r0, r4
 800977a:	f7ff fbc7 	bl	8008f0c <prvIsQueueEmpty>
 800977e:	2800      	cmp	r0, #0
 8009780:	d0cb      	beq.n	800971a <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 8009782:	2d00      	cmp	r5, #0
 8009784:	d0ea      	beq.n	800975c <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 8009786:	f7ff fa7d 	bl	8008c84 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800978a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800978c:	b119      	cbz	r1, 8009796 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800978e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8009790:	6819      	ldr	r1, [r3, #0]
 8009792:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8009796:	68a0      	ldr	r0, [r4, #8]
 8009798:	f000 fdc0 	bl	800a31c <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800979c:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 800979e:	f7ff fa91 	bl	8008cc4 <vPortExitCritical>
 80097a2:	e7db      	b.n	800975c <xQueueSemaphoreTake+0x13e>

080097a4 <xQueueReceiveFromISR>:
{
 80097a4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80097a8:	4689      	mov	r9, r1
 80097aa:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 80097ac:	4605      	mov	r5, r0
 80097ae:	b940      	cbnz	r0, 80097c2 <xQueueReceiveFromISR+0x1e>
 80097b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80097b4:	f383 8811 	msr	BASEPRI, r3
 80097b8:	f3bf 8f6f 	isb	sy
 80097bc:	f3bf 8f4f 	dsb	sy
 80097c0:	e7fe      	b.n	80097c0 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80097c2:	b951      	cbnz	r1, 80097da <xQueueReceiveFromISR+0x36>
 80097c4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80097c6:	b143      	cbz	r3, 80097da <xQueueReceiveFromISR+0x36>
 80097c8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80097cc:	f383 8811 	msr	BASEPRI, r3
 80097d0:	f3bf 8f6f 	isb	sy
 80097d4:	f3bf 8f4f 	dsb	sy
 80097d8:	e7fe      	b.n	80097d8 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80097da:	f7ff fb69 	bl	8008eb0 <vPortValidateInterruptPriority>
	__asm volatile
 80097de:	f3ef 8711 	mrs	r7, BASEPRI
 80097e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80097e6:	f383 8811 	msr	BASEPRI, r3
 80097ea:	f3bf 8f6f 	isb	sy
 80097ee:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80097f2:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80097f4:	b31c      	cbz	r4, 800983e <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 80097f6:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80097fa:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 80097fc:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80097fe:	4628      	mov	r0, r5
 8009800:	f7ff fbc4 	bl	8008f8c <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009804:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 8009806:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009808:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800980a:	d113      	bne.n	8009834 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800980c:	692b      	ldr	r3, [r5, #16]
 800980e:	b90b      	cbnz	r3, 8009814 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 8009810:	2001      	movs	r0, #1
 8009812:	e00b      	b.n	800982c <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009814:	f105 0010 	add.w	r0, r5, #16
 8009818:	f000 fc58 	bl	800a0cc <xTaskRemoveFromEventList>
 800981c:	2800      	cmp	r0, #0
 800981e:	d0f7      	beq.n	8009810 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 8009820:	f1b8 0f00 	cmp.w	r8, #0
 8009824:	d0f4      	beq.n	8009810 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8009826:	2001      	movs	r0, #1
 8009828:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800982c:	f387 8811 	msr	BASEPRI, r7
}
 8009830:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8009834:	3601      	adds	r6, #1
 8009836:	b276      	sxtb	r6, r6
 8009838:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 800983c:	e7e8      	b.n	8009810 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 800983e:	4620      	mov	r0, r4
 8009840:	e7f4      	b.n	800982c <xQueueReceiveFromISR+0x88>
	...

08009844 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8009844:	b510      	push	{r4, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8009846:	4a07      	ldr	r2, [pc, #28]	; (8009864 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009848:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800984a:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800984e:	b92c      	cbnz	r4, 800985c <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8009850:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8009854:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8009858:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800985a:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800985c:	3301      	adds	r3, #1
 800985e:	2b08      	cmp	r3, #8
 8009860:	d1f3      	bne.n	800984a <vQueueAddToRegistry+0x6>
 8009862:	e7fa      	b.n	800985a <vQueueAddToRegistry+0x16>
 8009864:	20014e14 	.word	0x20014e14

08009868 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8009868:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800986a:	4a08      	ldr	r2, [pc, #32]	; (800988c <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800986c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800986e:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 8009872:	684c      	ldr	r4, [r1, #4]
 8009874:	4284      	cmp	r4, r0
 8009876:	d104      	bne.n	8009882 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8009878:	2000      	movs	r0, #0
 800987a:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800987e:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8009880:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009882:	3301      	adds	r3, #1
 8009884:	2b08      	cmp	r3, #8
 8009886:	d1f2      	bne.n	800986e <vQueueUnregisterQueue+0x6>
 8009888:	e7fa      	b.n	8009880 <vQueueUnregisterQueue+0x18>
 800988a:	bf00      	nop
 800988c:	20014e14 	.word	0x20014e14

08009890 <vQueueDelete>:
{
 8009890:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8009892:	4604      	mov	r4, r0
 8009894:	b940      	cbnz	r0, 80098a8 <vQueueDelete+0x18>
	__asm volatile
 8009896:	f04f 0350 	mov.w	r3, #80	; 0x50
 800989a:	f383 8811 	msr	BASEPRI, r3
 800989e:	f3bf 8f6f 	isb	sy
 80098a2:	f3bf 8f4f 	dsb	sy
 80098a6:	e7fe      	b.n	80098a6 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 80098a8:	f7ff ffde 	bl	8009868 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 80098ac:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 80098b0:	b923      	cbnz	r3, 80098bc <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 80098b2:	4620      	mov	r0, r4
}
 80098b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 80098b8:	f7ff b8fe 	b.w	8008ab8 <vPortFree>
}
 80098bc:	bd10      	pop	{r4, pc}

080098be <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 80098be:	b570      	push	{r4, r5, r6, lr}
 80098c0:	4604      	mov	r4, r0
 80098c2:	460d      	mov	r5, r1
 80098c4:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 80098c6:	f7ff f9dd 	bl	8008c84 <vPortEnterCritical>
 80098ca:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80098ce:	2bff      	cmp	r3, #255	; 0xff
 80098d0:	bf04      	itt	eq
 80098d2:	2300      	moveq	r3, #0
 80098d4:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 80098d8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80098dc:	2bff      	cmp	r3, #255	; 0xff
 80098de:	bf04      	itt	eq
 80098e0:	2300      	moveq	r3, #0
 80098e2:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 80098e6:	f7ff f9ed 	bl	8008cc4 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 80098ea:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80098ec:	b92b      	cbnz	r3, 80098fa <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 80098ee:	4632      	mov	r2, r6
 80098f0:	4629      	mov	r1, r5
 80098f2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80098f6:	f000 fbcb 	bl	800a090 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 80098fa:	4620      	mov	r0, r4
	}
 80098fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8009900:	f7ff bb5a 	b.w	8008fb8 <prvUnlockQueue>

08009904 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8009904:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009908:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800990a:	f7ff f9bb 	bl	8008c84 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800990e:	4b30      	ldr	r3, [pc, #192]	; (80099d0 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 8009910:	4e30      	ldr	r6, [pc, #192]	; (80099d4 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 8009912:	681a      	ldr	r2, [r3, #0]
 8009914:	4f30      	ldr	r7, [pc, #192]	; (80099d8 <prvAddNewTaskToReadyList+0xd4>)
 8009916:	3201      	adds	r2, #1
 8009918:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800991a:	6835      	ldr	r5, [r6, #0]
 800991c:	2d00      	cmp	r5, #0
 800991e:	d14b      	bne.n	80099b8 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8009920:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8009922:	681b      	ldr	r3, [r3, #0]
 8009924:	2b01      	cmp	r3, #1
 8009926:	d11f      	bne.n	8009968 <prvAddNewTaskToReadyList+0x64>
 8009928:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800992a:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800992c:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800992e:	f7ff f8fb 	bl	8008b28 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8009932:	2d38      	cmp	r5, #56	; 0x38
 8009934:	f108 0814 	add.w	r8, r8, #20
 8009938:	d1f7      	bne.n	800992a <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 800993a:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8009a00 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 800993e:	4d27      	ldr	r5, [pc, #156]	; (80099dc <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 8009940:	4640      	mov	r0, r8
 8009942:	f7ff f8f1 	bl	8008b28 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8009946:	4628      	mov	r0, r5
 8009948:	f7ff f8ee 	bl	8008b28 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800994c:	4824      	ldr	r0, [pc, #144]	; (80099e0 <prvAddNewTaskToReadyList+0xdc>)
 800994e:	f7ff f8eb 	bl	8008b28 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8009952:	4824      	ldr	r0, [pc, #144]	; (80099e4 <prvAddNewTaskToReadyList+0xe0>)
 8009954:	f7ff f8e8 	bl	8008b28 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8009958:	4823      	ldr	r0, [pc, #140]	; (80099e8 <prvAddNewTaskToReadyList+0xe4>)
 800995a:	f7ff f8e5 	bl	8008b28 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800995e:	4b23      	ldr	r3, [pc, #140]	; (80099ec <prvAddNewTaskToReadyList+0xe8>)
 8009960:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8009964:	4b22      	ldr	r3, [pc, #136]	; (80099f0 <prvAddNewTaskToReadyList+0xec>)
 8009966:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 8009968:	4a22      	ldr	r2, [pc, #136]	; (80099f4 <prvAddNewTaskToReadyList+0xf0>)
 800996a:	6813      	ldr	r3, [r2, #0]
 800996c:	3301      	adds	r3, #1
 800996e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8009970:	4a21      	ldr	r2, [pc, #132]	; (80099f8 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8009972:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8009974:	6811      	ldr	r1, [r2, #0]
 8009976:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009978:	2014      	movs	r0, #20
 800997a:	428b      	cmp	r3, r1
 800997c:	fb00 7003 	mla	r0, r0, r3, r7
 8009980:	f104 0104 	add.w	r1, r4, #4
 8009984:	bf88      	it	hi
 8009986:	6013      	strhi	r3, [r2, #0]
 8009988:	f7ff f8dc 	bl	8008b44 <vListInsertEnd>
	taskEXIT_CRITICAL();
 800998c:	f7ff f99a 	bl	8008cc4 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8009990:	4b1a      	ldr	r3, [pc, #104]	; (80099fc <prvAddNewTaskToReadyList+0xf8>)
 8009992:	681b      	ldr	r3, [r3, #0]
 8009994:	b173      	cbz	r3, 80099b4 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8009996:	6833      	ldr	r3, [r6, #0]
 8009998:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800999a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800999c:	429a      	cmp	r2, r3
 800999e:	d209      	bcs.n	80099b4 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 80099a0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80099a4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80099a8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80099ac:	f3bf 8f4f 	dsb	sy
 80099b0:	f3bf 8f6f 	isb	sy
}
 80099b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 80099b8:	4b10      	ldr	r3, [pc, #64]	; (80099fc <prvAddNewTaskToReadyList+0xf8>)
 80099ba:	681b      	ldr	r3, [r3, #0]
 80099bc:	2b00      	cmp	r3, #0
 80099be:	d1d3      	bne.n	8009968 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 80099c0:	6833      	ldr	r3, [r6, #0]
 80099c2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80099c4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80099c6:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 80099c8:	bf98      	it	ls
 80099ca:	6034      	strls	r4, [r6, #0]
 80099cc:	e7cc      	b.n	8009968 <prvAddNewTaskToReadyList+0x64>
 80099ce:	bf00      	nop
 80099d0:	200152c0 	.word	0x200152c0
 80099d4:	20014e54 	.word	0x20014e54
 80099d8:	20014e60 	.word	0x20014e60
 80099dc:	200152ec 	.word	0x200152ec
 80099e0:	20015308 	.word	0x20015308
 80099e4:	20015334 	.word	0x20015334
 80099e8:	20015320 	.word	0x20015320
 80099ec:	20014e58 	.word	0x20014e58
 80099f0:	20014e5c 	.word	0x20014e5c
 80099f4:	200152d0 	.word	0x200152d0
 80099f8:	200152d4 	.word	0x200152d4
 80099fc:	2001531c 	.word	0x2001531c
 8009a00:	200152d8 	.word	0x200152d8

08009a04 <prvAddCurrentTaskToDelayedList>:
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8009a04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8009a06:	4b15      	ldr	r3, [pc, #84]	; (8009a5c <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009a08:	4e15      	ldr	r6, [pc, #84]	; (8009a60 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 8009a0a:	681d      	ldr	r5, [r3, #0]
{
 8009a0c:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009a0e:	6830      	ldr	r0, [r6, #0]
 8009a10:	3004      	adds	r0, #4
{
 8009a12:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009a14:	f7ff f8b9 	bl	8008b8a <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8009a18:	1c63      	adds	r3, r4, #1
 8009a1a:	d107      	bne.n	8009a2c <prvAddCurrentTaskToDelayedList+0x28>
 8009a1c:	b137      	cbz	r7, 8009a2c <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009a1e:	6831      	ldr	r1, [r6, #0]
 8009a20:	4810      	ldr	r0, [pc, #64]	; (8009a64 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8009a22:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009a26:	3104      	adds	r1, #4
 8009a28:	f7ff b88c 	b.w	8008b44 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8009a2c:	6833      	ldr	r3, [r6, #0]
 8009a2e:	192c      	adds	r4, r5, r4
 8009a30:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8009a32:	d307      	bcc.n	8009a44 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009a34:	4b0c      	ldr	r3, [pc, #48]	; (8009a68 <prvAddCurrentTaskToDelayedList+0x64>)
 8009a36:	6818      	ldr	r0, [r3, #0]
 8009a38:	6831      	ldr	r1, [r6, #0]
}
 8009a3a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009a3e:	3104      	adds	r1, #4
 8009a40:	f7ff b88c 	b.w	8008b5c <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009a44:	4b09      	ldr	r3, [pc, #36]	; (8009a6c <prvAddCurrentTaskToDelayedList+0x68>)
 8009a46:	6818      	ldr	r0, [r3, #0]
 8009a48:	6831      	ldr	r1, [r6, #0]
 8009a4a:	3104      	adds	r1, #4
 8009a4c:	f7ff f886 	bl	8008b5c <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8009a50:	4b07      	ldr	r3, [pc, #28]	; (8009a70 <prvAddCurrentTaskToDelayedList+0x6c>)
 8009a52:	681a      	ldr	r2, [r3, #0]
 8009a54:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 8009a56:	bf88      	it	hi
 8009a58:	601c      	strhi	r4, [r3, #0]
}
 8009a5a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009a5c:	20015348 	.word	0x20015348
 8009a60:	20014e54 	.word	0x20014e54
 8009a64:	20015320 	.word	0x20015320
 8009a68:	20014e5c 	.word	0x20014e5c
 8009a6c:	20014e58 	.word	0x20014e58
 8009a70:	20015300 	.word	0x20015300

08009a74 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009a74:	4a06      	ldr	r2, [pc, #24]	; (8009a90 <prvResetNextTaskUnblockTime+0x1c>)
 8009a76:	6813      	ldr	r3, [r2, #0]
 8009a78:	6819      	ldr	r1, [r3, #0]
 8009a7a:	4b06      	ldr	r3, [pc, #24]	; (8009a94 <prvResetNextTaskUnblockTime+0x20>)
 8009a7c:	b919      	cbnz	r1, 8009a86 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 8009a7e:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8009a82:	601a      	str	r2, [r3, #0]
}
 8009a84:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009a86:	6812      	ldr	r2, [r2, #0]
 8009a88:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8009a8a:	68d2      	ldr	r2, [r2, #12]
 8009a8c:	6852      	ldr	r2, [r2, #4]
 8009a8e:	e7f8      	b.n	8009a82 <prvResetNextTaskUnblockTime+0xe>
 8009a90:	20014e58 	.word	0x20014e58
 8009a94:	20015300 	.word	0x20015300

08009a98 <prvDeleteTCB>:
	{
 8009a98:	b510      	push	{r4, lr}
 8009a9a:	4604      	mov	r4, r0
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 8009a9c:	3058      	adds	r0, #88	; 0x58
 8009a9e:	f017 fb27 	bl	80210f0 <_reclaim_reent>
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8009aa2:	f894 30bd 	ldrb.w	r3, [r4, #189]	; 0xbd
 8009aa6:	b93b      	cbnz	r3, 8009ab8 <prvDeleteTCB+0x20>
				vPortFree( pxTCB->pxStack );
 8009aa8:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8009aaa:	f7ff f805 	bl	8008ab8 <vPortFree>
				vPortFree( pxTCB );
 8009aae:	4620      	mov	r0, r4
	}
 8009ab0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 8009ab4:	f7ff b800 	b.w	8008ab8 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8009ab8:	2b01      	cmp	r3, #1
 8009aba:	d0f8      	beq.n	8009aae <prvDeleteTCB+0x16>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8009abc:	2b02      	cmp	r3, #2
 8009abe:	d008      	beq.n	8009ad2 <prvDeleteTCB+0x3a>
 8009ac0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009ac4:	f383 8811 	msr	BASEPRI, r3
 8009ac8:	f3bf 8f6f 	isb	sy
 8009acc:	f3bf 8f4f 	dsb	sy
 8009ad0:	e7fe      	b.n	8009ad0 <prvDeleteTCB+0x38>
	}
 8009ad2:	bd10      	pop	{r4, pc}

08009ad4 <prvIdleTask>:
{
 8009ad4:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009ad6:	4c13      	ldr	r4, [pc, #76]	; (8009b24 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009ad8:	4f13      	ldr	r7, [pc, #76]	; (8009b28 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 8009ada:	4d14      	ldr	r5, [pc, #80]	; (8009b2c <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009adc:	6823      	ldr	r3, [r4, #0]
 8009ade:	b973      	cbnz	r3, 8009afe <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8009ae0:	4b13      	ldr	r3, [pc, #76]	; (8009b30 <prvIdleTask+0x5c>)
 8009ae2:	681b      	ldr	r3, [r3, #0]
 8009ae4:	2b01      	cmp	r3, #1
 8009ae6:	d9f8      	bls.n	8009ada <prvIdleTask+0x6>
				taskYIELD();
 8009ae8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009aec:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009af0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009af4:	f3bf 8f4f 	dsb	sy
 8009af8:	f3bf 8f6f 	isb	sy
 8009afc:	e7ed      	b.n	8009ada <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 8009afe:	f7ff f8c1 	bl	8008c84 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009b02:	68fb      	ldr	r3, [r7, #12]
 8009b04:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009b06:	1d30      	adds	r0, r6, #4
 8009b08:	f7ff f83f 	bl	8008b8a <uxListRemove>
				--uxCurrentNumberOfTasks;
 8009b0c:	682b      	ldr	r3, [r5, #0]
 8009b0e:	3b01      	subs	r3, #1
 8009b10:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8009b12:	6823      	ldr	r3, [r4, #0]
 8009b14:	3b01      	subs	r3, #1
 8009b16:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8009b18:	f7ff f8d4 	bl	8008cc4 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8009b1c:	4630      	mov	r0, r6
 8009b1e:	f7ff ffbb 	bl	8009a98 <prvDeleteTCB>
 8009b22:	e7db      	b.n	8009adc <prvIdleTask+0x8>
 8009b24:	200152c4 	.word	0x200152c4
 8009b28:	20015334 	.word	0x20015334
 8009b2c:	200152c0 	.word	0x200152c0
 8009b30:	20014e60 	.word	0x20014e60

08009b34 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009b34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009b38:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009b3c:	ea4f 0982 	mov.w	r9, r2, lsl #2
 8009b40:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009b42:	4606      	mov	r6, r0
 8009b44:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009b46:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8009b48:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009b4a:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009b4c:	f016 feec 	bl	8020928 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009b50:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8009b52:	f1a9 0904 	sub.w	r9, r9, #4
 8009b56:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8009b58:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 8009b5c:	2d00      	cmp	r5, #0
 8009b5e:	d042      	beq.n	8009be6 <prvInitialiseNewTask.constprop.0+0xb2>
 8009b60:	1e6b      	subs	r3, r5, #1
 8009b62:	f104 0234 	add.w	r2, r4, #52	; 0x34
 8009b66:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8009b68:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8009b6c:	f802 0b01 	strb.w	r0, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 8009b70:	b108      	cbz	r0, 8009b76 <prvInitialiseNewTask.constprop.0+0x42>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8009b72:	42ab      	cmp	r3, r5
 8009b74:	d1f8      	bne.n	8009b68 <prvInitialiseNewTask.constprop.0+0x34>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8009b76:	2300      	movs	r3, #0
 8009b78:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8009b7c:	9d08      	ldr	r5, [sp, #32]
 8009b7e:	2d37      	cmp	r5, #55	; 0x37
 8009b80:	bf28      	it	cs
 8009b82:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8009b84:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8009b88:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8009b8a:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009b8c:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 8009b8e:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009b92:	f7fe ffd4 	bl	8008b3e <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009b96:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8009b9a:	f104 0018 	add.w	r0, r4, #24
 8009b9e:	f7fe ffce 	bl	8008b3e <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8009ba2:	f8c4 a0b8 	str.w	sl, [r4, #184]	; 0xb8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8009ba6:	2260      	movs	r2, #96	; 0x60
 8009ba8:	4651      	mov	r1, sl
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8009baa:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009bac:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8009bae:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 8009bb0:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8009bb4:	f884 a0bc 	strb.w	sl, [r4, #188]	; 0xbc
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8009bb8:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8009bbc:	f016 feb4 	bl	8020928 <memset>
 8009bc0:	4b0a      	ldr	r3, [pc, #40]	; (8009bec <prvInitialiseNewTask.constprop.0+0xb8>)
 8009bc2:	65e3      	str	r3, [r4, #92]	; 0x5c
 8009bc4:	4b0a      	ldr	r3, [pc, #40]	; (8009bf0 <prvInitialiseNewTask.constprop.0+0xbc>)
 8009bc6:	6623      	str	r3, [r4, #96]	; 0x60
 8009bc8:	4b0a      	ldr	r3, [pc, #40]	; (8009bf4 <prvInitialiseNewTask.constprop.0+0xc0>)
 8009bca:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8009bcc:	463a      	mov	r2, r7
 8009bce:	4631      	mov	r1, r6
 8009bd0:	4648      	mov	r0, r9
 8009bd2:	f7ff f829 	bl	8008c28 <pxPortInitialiseStack>
 8009bd6:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8009bd8:	f1b8 0f00 	cmp.w	r8, #0
 8009bdc:	d001      	beq.n	8009be2 <prvInitialiseNewTask.constprop.0+0xae>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8009bde:	f8c8 4000 	str.w	r4, [r8]
}
 8009be2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8009be6:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 8009bea:	e7c7      	b.n	8009b7c <prvInitialiseNewTask.constprop.0+0x48>
 8009bec:	08024458 	.word	0x08024458
 8009bf0:	08024478 	.word	0x08024478
 8009bf4:	08024438 	.word	0x08024438

08009bf8 <xTaskCreateStatic>:
	{
 8009bf8:	b570      	push	{r4, r5, r6, lr}
 8009bfa:	b086      	sub	sp, #24
 8009bfc:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 8009c00:	b945      	cbnz	r5, 8009c14 <xTaskCreateStatic+0x1c>
 8009c02:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c06:	f383 8811 	msr	BASEPRI, r3
 8009c0a:	f3bf 8f6f 	isb	sy
 8009c0e:	f3bf 8f4f 	dsb	sy
 8009c12:	e7fe      	b.n	8009c12 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 8009c14:	b944      	cbnz	r4, 8009c28 <xTaskCreateStatic+0x30>
 8009c16:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c1a:	f383 8811 	msr	BASEPRI, r3
 8009c1e:	f3bf 8f6f 	isb	sy
 8009c22:	f3bf 8f4f 	dsb	sy
 8009c26:	e7fe      	b.n	8009c26 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8009c28:	26c0      	movs	r6, #192	; 0xc0
 8009c2a:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8009c2c:	9e05      	ldr	r6, [sp, #20]
 8009c2e:	2ec0      	cmp	r6, #192	; 0xc0
 8009c30:	d008      	beq.n	8009c44 <xTaskCreateStatic+0x4c>
 8009c32:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c36:	f383 8811 	msr	BASEPRI, r3
 8009c3a:	f3bf 8f6f 	isb	sy
 8009c3e:	f3bf 8f4f 	dsb	sy
 8009c42:	e7fe      	b.n	8009c42 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8009c44:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8009c46:	2502      	movs	r5, #2
 8009c48:	f884 50bd 	strb.w	r5, [r4, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009c4c:	ad04      	add	r5, sp, #16
 8009c4e:	9501      	str	r5, [sp, #4]
 8009c50:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8009c52:	9402      	str	r4, [sp, #8]
 8009c54:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8009c56:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009c58:	f7ff ff6c 	bl	8009b34 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009c5c:	4620      	mov	r0, r4
 8009c5e:	f7ff fe51 	bl	8009904 <prvAddNewTaskToReadyList>
	}
 8009c62:	9804      	ldr	r0, [sp, #16]
 8009c64:	b006      	add	sp, #24
 8009c66:	bd70      	pop	{r4, r5, r6, pc}

08009c68 <xTaskCreate>:
	{
 8009c68:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009c6c:	4607      	mov	r7, r0
 8009c6e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009c70:	0090      	lsls	r0, r2, #2
	{
 8009c72:	4688      	mov	r8, r1
 8009c74:	4616      	mov	r6, r2
 8009c76:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009c78:	f7fe fe8c 	bl	8008994 <pvPortMalloc>
			if( pxStack != NULL )
 8009c7c:	4605      	mov	r5, r0
 8009c7e:	b1e8      	cbz	r0, 8009cbc <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8009c80:	20c0      	movs	r0, #192	; 0xc0
 8009c82:	f7fe fe87 	bl	8008994 <pvPortMalloc>
				if( pxNewTCB != NULL )
 8009c86:	4604      	mov	r4, r0
 8009c88:	b1a8      	cbz	r0, 8009cb6 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8009c8a:	2300      	movs	r3, #0
 8009c8c:	f880 30bd 	strb.w	r3, [r0, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009c90:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 8009c92:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009c94:	9301      	str	r3, [sp, #4]
 8009c96:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8009c98:	9002      	str	r0, [sp, #8]
 8009c9a:	9300      	str	r3, [sp, #0]
 8009c9c:	4632      	mov	r2, r6
 8009c9e:	464b      	mov	r3, r9
 8009ca0:	4641      	mov	r1, r8
 8009ca2:	4638      	mov	r0, r7
 8009ca4:	f7ff ff46 	bl	8009b34 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009ca8:	4620      	mov	r0, r4
 8009caa:	f7ff fe2b 	bl	8009904 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8009cae:	2001      	movs	r0, #1
	}
 8009cb0:	b005      	add	sp, #20
 8009cb2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 8009cb6:	4628      	mov	r0, r5
 8009cb8:	f7fe fefe 	bl	8008ab8 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8009cbc:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 8009cc0:	e7f6      	b.n	8009cb0 <xTaskCreate+0x48>
	...

08009cc4 <vTaskStartScheduler>:
{
 8009cc4:	b510      	push	{r4, lr}
 8009cc6:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8009cc8:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009cca:	aa07      	add	r2, sp, #28
 8009ccc:	a906      	add	r1, sp, #24
 8009cce:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8009cd0:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009cd4:	f7fe fe22 	bl	800891c <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8009cd8:	9b05      	ldr	r3, [sp, #20]
 8009cda:	9302      	str	r3, [sp, #8]
 8009cdc:	9b06      	ldr	r3, [sp, #24]
 8009cde:	9a07      	ldr	r2, [sp, #28]
 8009ce0:	4919      	ldr	r1, [pc, #100]	; (8009d48 <vTaskStartScheduler+0x84>)
 8009ce2:	481a      	ldr	r0, [pc, #104]	; (8009d4c <vTaskStartScheduler+0x88>)
 8009ce4:	e9cd 4300 	strd	r4, r3, [sp]
 8009ce8:	4623      	mov	r3, r4
 8009cea:	f7ff ff85 	bl	8009bf8 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8009cee:	b340      	cbz	r0, 8009d42 <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 8009cf0:	f000 fbc4 	bl	800a47c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8009cf4:	2801      	cmp	r0, #1
 8009cf6:	d119      	bne.n	8009d2c <vTaskStartScheduler+0x68>
 8009cf8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009cfc:	f383 8811 	msr	BASEPRI, r3
 8009d00:	f3bf 8f6f 	isb	sy
 8009d04:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8009d08:	4b11      	ldr	r3, [pc, #68]	; (8009d50 <vTaskStartScheduler+0x8c>)
 8009d0a:	4a12      	ldr	r2, [pc, #72]	; (8009d54 <vTaskStartScheduler+0x90>)
 8009d0c:	681b      	ldr	r3, [r3, #0]
 8009d0e:	3358      	adds	r3, #88	; 0x58
 8009d10:	6013      	str	r3, [r2, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 8009d12:	4b11      	ldr	r3, [pc, #68]	; (8009d58 <vTaskStartScheduler+0x94>)
 8009d14:	f04f 32ff 	mov.w	r2, #4294967295
 8009d18:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8009d1a:	4b10      	ldr	r3, [pc, #64]	; (8009d5c <vTaskStartScheduler+0x98>)
 8009d1c:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8009d1e:	4b10      	ldr	r3, [pc, #64]	; (8009d60 <vTaskStartScheduler+0x9c>)
 8009d20:	601c      	str	r4, [r3, #0]
}
 8009d22:	b008      	add	sp, #32
 8009d24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 8009d28:	f7ff b83c 	b.w	8008da4 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8009d2c:	3001      	adds	r0, #1
 8009d2e:	d108      	bne.n	8009d42 <vTaskStartScheduler+0x7e>
 8009d30:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d34:	f383 8811 	msr	BASEPRI, r3
 8009d38:	f3bf 8f6f 	isb	sy
 8009d3c:	f3bf 8f4f 	dsb	sy
 8009d40:	e7fe      	b.n	8009d40 <vTaskStartScheduler+0x7c>
}
 8009d42:	b008      	add	sp, #32
 8009d44:	bd10      	pop	{r4, pc}
 8009d46:	bf00      	nop
 8009d48:	08023514 	.word	0x08023514
 8009d4c:	08009ad5 	.word	0x08009ad5
 8009d50:	20014e54 	.word	0x20014e54
 8009d54:	20000104 	.word	0x20000104
 8009d58:	20015300 	.word	0x20015300
 8009d5c:	2001531c 	.word	0x2001531c
 8009d60:	20015348 	.word	0x20015348

08009d64 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8009d64:	4a02      	ldr	r2, [pc, #8]	; (8009d70 <vTaskSuspendAll+0xc>)
 8009d66:	6813      	ldr	r3, [r2, #0]
 8009d68:	3301      	adds	r3, #1
 8009d6a:	6013      	str	r3, [r2, #0]
}
 8009d6c:	4770      	bx	lr
 8009d6e:	bf00      	nop
 8009d70:	200152cc 	.word	0x200152cc

08009d74 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8009d74:	4b01      	ldr	r3, [pc, #4]	; (8009d7c <xTaskGetTickCount+0x8>)
 8009d76:	6818      	ldr	r0, [r3, #0]
}
 8009d78:	4770      	bx	lr
 8009d7a:	bf00      	nop
 8009d7c:	20015348 	.word	0x20015348

08009d80 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009d80:	4b3f      	ldr	r3, [pc, #252]	; (8009e80 <xTaskIncrementTick+0x100>)
 8009d82:	681b      	ldr	r3, [r3, #0]
{
 8009d84:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009d88:	2b00      	cmp	r3, #0
 8009d8a:	d173      	bne.n	8009e74 <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8009d8c:	4b3d      	ldr	r3, [pc, #244]	; (8009e84 <xTaskIncrementTick+0x104>)
 8009d8e:	681d      	ldr	r5, [r3, #0]
 8009d90:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 8009d92:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8009d94:	b9bd      	cbnz	r5, 8009dc6 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 8009d96:	4b3c      	ldr	r3, [pc, #240]	; (8009e88 <xTaskIncrementTick+0x108>)
 8009d98:	681a      	ldr	r2, [r3, #0]
 8009d9a:	6812      	ldr	r2, [r2, #0]
 8009d9c:	b142      	cbz	r2, 8009db0 <xTaskIncrementTick+0x30>
 8009d9e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009da2:	f383 8811 	msr	BASEPRI, r3
 8009da6:	f3bf 8f6f 	isb	sy
 8009daa:	f3bf 8f4f 	dsb	sy
 8009dae:	e7fe      	b.n	8009dae <xTaskIncrementTick+0x2e>
 8009db0:	4a36      	ldr	r2, [pc, #216]	; (8009e8c <xTaskIncrementTick+0x10c>)
 8009db2:	6819      	ldr	r1, [r3, #0]
 8009db4:	6810      	ldr	r0, [r2, #0]
 8009db6:	6018      	str	r0, [r3, #0]
 8009db8:	6011      	str	r1, [r2, #0]
 8009dba:	4a35      	ldr	r2, [pc, #212]	; (8009e90 <xTaskIncrementTick+0x110>)
 8009dbc:	6813      	ldr	r3, [r2, #0]
 8009dbe:	3301      	adds	r3, #1
 8009dc0:	6013      	str	r3, [r2, #0]
 8009dc2:	f7ff fe57 	bl	8009a74 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009dc6:	4e33      	ldr	r6, [pc, #204]	; (8009e94 <xTaskIncrementTick+0x114>)
 8009dc8:	4f33      	ldr	r7, [pc, #204]	; (8009e98 <xTaskIncrementTick+0x118>)
 8009dca:	6833      	ldr	r3, [r6, #0]
 8009dcc:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 8009ea4 <xTaskIncrementTick+0x124>
 8009dd0:	42ab      	cmp	r3, r5
BaseType_t xSwitchRequired = pdFALSE;
 8009dd2:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009dd6:	d911      	bls.n	8009dfc <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8009dd8:	f8d8 3000 	ldr.w	r3, [r8]
 8009ddc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009dde:	2214      	movs	r2, #20
 8009de0:	4353      	muls	r3, r2
 8009de2:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 8009de4:	2b02      	cmp	r3, #2
 8009de6:	bf28      	it	cs
 8009de8:	2401      	movcs	r4, #1
		if( xYieldPending != pdFALSE )
 8009dea:	4b2c      	ldr	r3, [pc, #176]	; (8009e9c <xTaskIncrementTick+0x11c>)
 8009dec:	681b      	ldr	r3, [r3, #0]
			xSwitchRequired = pdTRUE;
 8009dee:	2b00      	cmp	r3, #0
}
 8009df0:	bf0c      	ite	eq
 8009df2:	4620      	moveq	r0, r4
 8009df4:	2001      	movne	r0, #1
 8009df6:	b003      	add	sp, #12
 8009df8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009dfc:	f8df 9088 	ldr.w	r9, [pc, #136]	; 8009e88 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 8009e00:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 8009ea8 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009e04:	f8d9 3000 	ldr.w	r3, [r9]
 8009e08:	681b      	ldr	r3, [r3, #0]
 8009e0a:	b91b      	cbnz	r3, 8009e14 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009e0c:	f04f 33ff 	mov.w	r3, #4294967295
 8009e10:	6033      	str	r3, [r6, #0]
					break;
 8009e12:	e7e1      	b.n	8009dd8 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009e14:	f8d9 3000 	ldr.w	r3, [r9]
 8009e18:	68db      	ldr	r3, [r3, #12]
 8009e1a:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8009e1e:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 8009e22:	4295      	cmp	r5, r2
 8009e24:	d201      	bcs.n	8009e2a <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 8009e26:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8009e28:	e7d6      	b.n	8009dd8 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009e2a:	f10b 0104 	add.w	r1, fp, #4
 8009e2e:	4608      	mov	r0, r1
 8009e30:	9101      	str	r1, [sp, #4]
 8009e32:	f7fe feaa 	bl	8008b8a <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8009e36:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 8009e3a:	9901      	ldr	r1, [sp, #4]
 8009e3c:	b122      	cbz	r2, 8009e48 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009e3e:	f10b 0018 	add.w	r0, fp, #24
 8009e42:	f7fe fea2 	bl	8008b8a <uxListRemove>
 8009e46:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 8009e48:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 8009e4c:	f8da 2000 	ldr.w	r2, [sl]
 8009e50:	2314      	movs	r3, #20
 8009e52:	4290      	cmp	r0, r2
 8009e54:	bf88      	it	hi
 8009e56:	f8ca 0000 	strhi.w	r0, [sl]
 8009e5a:	fb03 7000 	mla	r0, r3, r0, r7
 8009e5e:	f7fe fe71 	bl	8008b44 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009e62:	f8d8 1000 	ldr.w	r1, [r8]
 8009e66:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 8009e6a:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 8009e6c:	429a      	cmp	r2, r3
 8009e6e:	bf28      	it	cs
 8009e70:	2401      	movcs	r4, #1
 8009e72:	e7c7      	b.n	8009e04 <xTaskIncrementTick+0x84>
		++uxPendedTicks;
 8009e74:	4a0a      	ldr	r2, [pc, #40]	; (8009ea0 <xTaskIncrementTick+0x120>)
 8009e76:	6813      	ldr	r3, [r2, #0]
 8009e78:	3301      	adds	r3, #1
 8009e7a:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8009e7c:	2400      	movs	r4, #0
 8009e7e:	e7b4      	b.n	8009dea <xTaskIncrementTick+0x6a>
 8009e80:	200152cc 	.word	0x200152cc
 8009e84:	20015348 	.word	0x20015348
 8009e88:	20014e58 	.word	0x20014e58
 8009e8c:	20014e5c 	.word	0x20014e5c
 8009e90:	20015304 	.word	0x20015304
 8009e94:	20015300 	.word	0x20015300
 8009e98:	20014e60 	.word	0x20014e60
 8009e9c:	2001534c 	.word	0x2001534c
 8009ea0:	200152c8 	.word	0x200152c8
 8009ea4:	20014e54 	.word	0x20014e54
 8009ea8:	200152d4 	.word	0x200152d4

08009eac <xTaskResumeAll>:
{
 8009eac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 8009eae:	4c31      	ldr	r4, [pc, #196]	; (8009f74 <xTaskResumeAll+0xc8>)
 8009eb0:	6823      	ldr	r3, [r4, #0]
 8009eb2:	b943      	cbnz	r3, 8009ec6 <xTaskResumeAll+0x1a>
 8009eb4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009eb8:	f383 8811 	msr	BASEPRI, r3
 8009ebc:	f3bf 8f6f 	isb	sy
 8009ec0:	f3bf 8f4f 	dsb	sy
 8009ec4:	e7fe      	b.n	8009ec4 <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 8009ec6:	f7fe fedd 	bl	8008c84 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8009eca:	6823      	ldr	r3, [r4, #0]
 8009ecc:	3b01      	subs	r3, #1
 8009ece:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009ed0:	6824      	ldr	r4, [r4, #0]
 8009ed2:	b12c      	cbz	r4, 8009ee0 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 8009ed4:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8009ed6:	f7fe fef5 	bl	8008cc4 <vPortExitCritical>
}
 8009eda:	4620      	mov	r0, r4
 8009edc:	b003      	add	sp, #12
 8009ede:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8009ee0:	4b25      	ldr	r3, [pc, #148]	; (8009f78 <xTaskResumeAll+0xcc>)
 8009ee2:	681b      	ldr	r3, [r3, #0]
 8009ee4:	2b00      	cmp	r3, #0
 8009ee6:	d0f5      	beq.n	8009ed4 <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009ee8:	4d24      	ldr	r5, [pc, #144]	; (8009f7c <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 8009eea:	4e25      	ldr	r6, [pc, #148]	; (8009f80 <xTaskResumeAll+0xd4>)
 8009eec:	4f25      	ldr	r7, [pc, #148]	; (8009f84 <xTaskResumeAll+0xd8>)
 8009eee:	e01e      	b.n	8009f2e <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009ef0:	68eb      	ldr	r3, [r5, #12]
 8009ef2:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009ef4:	f104 0018 	add.w	r0, r4, #24
 8009ef8:	f7fe fe47 	bl	8008b8a <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009efc:	1d21      	adds	r1, r4, #4
 8009efe:	4608      	mov	r0, r1
 8009f00:	9101      	str	r1, [sp, #4]
 8009f02:	f7fe fe42 	bl	8008b8a <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8009f06:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009f08:	6832      	ldr	r2, [r6, #0]
 8009f0a:	9901      	ldr	r1, [sp, #4]
 8009f0c:	2014      	movs	r0, #20
 8009f0e:	4293      	cmp	r3, r2
 8009f10:	fb00 7003 	mla	r0, r0, r3, r7
 8009f14:	bf88      	it	hi
 8009f16:	6033      	strhi	r3, [r6, #0]
 8009f18:	f7fe fe14 	bl	8008b44 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009f1c:	4b1a      	ldr	r3, [pc, #104]	; (8009f88 <xTaskResumeAll+0xdc>)
 8009f1e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8009f20:	681b      	ldr	r3, [r3, #0]
 8009f22:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009f24:	429a      	cmp	r2, r3
 8009f26:	d302      	bcc.n	8009f2e <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 8009f28:	4b18      	ldr	r3, [pc, #96]	; (8009f8c <xTaskResumeAll+0xe0>)
 8009f2a:	2201      	movs	r2, #1
 8009f2c:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009f2e:	682b      	ldr	r3, [r5, #0]
 8009f30:	2b00      	cmp	r3, #0
 8009f32:	d1dd      	bne.n	8009ef0 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 8009f34:	b10c      	cbz	r4, 8009f3a <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 8009f36:	f7ff fd9d 	bl	8009a74 <prvResetNextTaskUnblockTime>
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 8009f3a:	4d15      	ldr	r5, [pc, #84]	; (8009f90 <xTaskResumeAll+0xe4>)
 8009f3c:	682c      	ldr	r4, [r5, #0]
					if( uxPendedCounts > ( UBaseType_t ) 0U )
 8009f3e:	b144      	cbz	r4, 8009f52 <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 8009f40:	4e12      	ldr	r6, [pc, #72]	; (8009f8c <xTaskResumeAll+0xe0>)
 8009f42:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8009f44:	f7ff ff1c 	bl	8009d80 <xTaskIncrementTick>
 8009f48:	b100      	cbz	r0, 8009f4c <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 8009f4a:	6037      	str	r7, [r6, #0]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 8009f4c:	3c01      	subs	r4, #1
 8009f4e:	d1f9      	bne.n	8009f44 <xTaskResumeAll+0x98>
						uxPendedTicks = 0;
 8009f50:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8009f52:	4b0e      	ldr	r3, [pc, #56]	; (8009f8c <xTaskResumeAll+0xe0>)
 8009f54:	681b      	ldr	r3, [r3, #0]
 8009f56:	2b00      	cmp	r3, #0
 8009f58:	d0bc      	beq.n	8009ed4 <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 8009f5a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009f5e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009f62:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009f66:	f3bf 8f4f 	dsb	sy
 8009f6a:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8009f6e:	2401      	movs	r4, #1
 8009f70:	e7b1      	b.n	8009ed6 <xTaskResumeAll+0x2a>
 8009f72:	bf00      	nop
 8009f74:	200152cc 	.word	0x200152cc
 8009f78:	200152c0 	.word	0x200152c0
 8009f7c:	20015308 	.word	0x20015308
 8009f80:	200152d4 	.word	0x200152d4
 8009f84:	20014e60 	.word	0x20014e60
 8009f88:	20014e54 	.word	0x20014e54
 8009f8c:	2001534c 	.word	0x2001534c
 8009f90:	200152c8 	.word	0x200152c8

08009f94 <vTaskDelay>:
	{
 8009f94:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 8009f96:	b950      	cbnz	r0, 8009fae <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8009f98:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009f9c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009fa0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009fa4:	f3bf 8f4f 	dsb	sy
 8009fa8:	f3bf 8f6f 	isb	sy
	}
 8009fac:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8009fae:	4b0a      	ldr	r3, [pc, #40]	; (8009fd8 <vTaskDelay+0x44>)
 8009fb0:	6819      	ldr	r1, [r3, #0]
 8009fb2:	b141      	cbz	r1, 8009fc6 <vTaskDelay+0x32>
 8009fb4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009fb8:	f383 8811 	msr	BASEPRI, r3
 8009fbc:	f3bf 8f6f 	isb	sy
 8009fc0:	f3bf 8f4f 	dsb	sy
 8009fc4:	e7fe      	b.n	8009fc4 <vTaskDelay+0x30>
			vTaskSuspendAll();
 8009fc6:	f7ff fecd 	bl	8009d64 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8009fca:	f7ff fd1b 	bl	8009a04 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 8009fce:	f7ff ff6d 	bl	8009eac <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 8009fd2:	2800      	cmp	r0, #0
 8009fd4:	d0e0      	beq.n	8009f98 <vTaskDelay+0x4>
 8009fd6:	e7e9      	b.n	8009fac <vTaskDelay+0x18>
 8009fd8:	200152cc 	.word	0x200152cc

08009fdc <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8009fdc:	4b19      	ldr	r3, [pc, #100]	; (800a044 <vTaskSwitchContext+0x68>)
 8009fde:	681a      	ldr	r2, [r3, #0]
 8009fe0:	4b19      	ldr	r3, [pc, #100]	; (800a048 <vTaskSwitchContext+0x6c>)
{
 8009fe2:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8009fe4:	b112      	cbz	r2, 8009fec <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8009fe6:	2201      	movs	r2, #1
 8009fe8:	601a      	str	r2, [r3, #0]
}
 8009fea:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009fec:	4d17      	ldr	r5, [pc, #92]	; (800a04c <vTaskSwitchContext+0x70>)
		xYieldPending = pdFALSE;
 8009fee:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009ff0:	682a      	ldr	r2, [r5, #0]
 8009ff2:	4917      	ldr	r1, [pc, #92]	; (800a050 <vTaskSwitchContext+0x74>)
 8009ff4:	2614      	movs	r6, #20
 8009ff6:	fb06 f302 	mul.w	r3, r6, r2
 8009ffa:	18c8      	adds	r0, r1, r3
 8009ffc:	58cc      	ldr	r4, [r1, r3]
 8009ffe:	b1ac      	cbz	r4, 800a02c <vTaskSwitchContext+0x50>
 800a000:	6844      	ldr	r4, [r0, #4]
 800a002:	3308      	adds	r3, #8
 800a004:	6864      	ldr	r4, [r4, #4]
 800a006:	6044      	str	r4, [r0, #4]
 800a008:	440b      	add	r3, r1
 800a00a:	429c      	cmp	r4, r3
 800a00c:	bf04      	itt	eq
 800a00e:	6863      	ldreq	r3, [r4, #4]
 800a010:	6043      	streq	r3, [r0, #4]
 800a012:	2314      	movs	r3, #20
 800a014:	fb03 1102 	mla	r1, r3, r2, r1
 800a018:	684b      	ldr	r3, [r1, #4]
 800a01a:	68d9      	ldr	r1, [r3, #12]
 800a01c:	4b0d      	ldr	r3, [pc, #52]	; (800a054 <vTaskSwitchContext+0x78>)
 800a01e:	6019      	str	r1, [r3, #0]
 800a020:	602a      	str	r2, [r5, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800a022:	681b      	ldr	r3, [r3, #0]
 800a024:	4a0c      	ldr	r2, [pc, #48]	; (800a058 <vTaskSwitchContext+0x7c>)
 800a026:	3358      	adds	r3, #88	; 0x58
 800a028:	6013      	str	r3, [r2, #0]
}
 800a02a:	e7de      	b.n	8009fea <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a02c:	b942      	cbnz	r2, 800a040 <vTaskSwitchContext+0x64>
 800a02e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a032:	f383 8811 	msr	BASEPRI, r3
 800a036:	f3bf 8f6f 	isb	sy
 800a03a:	f3bf 8f4f 	dsb	sy
 800a03e:	e7fe      	b.n	800a03e <vTaskSwitchContext+0x62>
 800a040:	3a01      	subs	r2, #1
 800a042:	e7d8      	b.n	8009ff6 <vTaskSwitchContext+0x1a>
 800a044:	200152cc 	.word	0x200152cc
 800a048:	2001534c 	.word	0x2001534c
 800a04c:	200152d4 	.word	0x200152d4
 800a050:	20014e60 	.word	0x20014e60
 800a054:	20014e54 	.word	0x20014e54
 800a058:	20000104 	.word	0x20000104

0800a05c <vTaskPlaceOnEventList>:
{
 800a05c:	b510      	push	{r4, lr}
 800a05e:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 800a060:	b940      	cbnz	r0, 800a074 <vTaskPlaceOnEventList+0x18>
 800a062:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a066:	f383 8811 	msr	BASEPRI, r3
 800a06a:	f3bf 8f6f 	isb	sy
 800a06e:	f3bf 8f4f 	dsb	sy
 800a072:	e7fe      	b.n	800a072 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a074:	4b05      	ldr	r3, [pc, #20]	; (800a08c <vTaskPlaceOnEventList+0x30>)
 800a076:	6819      	ldr	r1, [r3, #0]
 800a078:	3118      	adds	r1, #24
 800a07a:	f7fe fd6f 	bl	8008b5c <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a07e:	4620      	mov	r0, r4
 800a080:	2101      	movs	r1, #1
}
 800a082:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a086:	f7ff bcbd 	b.w	8009a04 <prvAddCurrentTaskToDelayedList>
 800a08a:	bf00      	nop
 800a08c:	20014e54 	.word	0x20014e54

0800a090 <vTaskPlaceOnEventListRestricted>:
	{
 800a090:	b538      	push	{r3, r4, r5, lr}
 800a092:	460d      	mov	r5, r1
 800a094:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800a096:	b940      	cbnz	r0, 800a0aa <vTaskPlaceOnEventListRestricted+0x1a>
 800a098:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a09c:	f383 8811 	msr	BASEPRI, r3
 800a0a0:	f3bf 8f6f 	isb	sy
 800a0a4:	f3bf 8f4f 	dsb	sy
 800a0a8:	e7fe      	b.n	800a0a8 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a0aa:	4b07      	ldr	r3, [pc, #28]	; (800a0c8 <vTaskPlaceOnEventListRestricted+0x38>)
 800a0ac:	6819      	ldr	r1, [r3, #0]
 800a0ae:	3118      	adds	r1, #24
 800a0b0:	f7fe fd48 	bl	8008b44 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800a0b4:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a0b6:	4621      	mov	r1, r4
 800a0b8:	bf0c      	ite	eq
 800a0ba:	4628      	moveq	r0, r5
 800a0bc:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800a0c0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a0c4:	f7ff bc9e 	b.w	8009a04 <prvAddCurrentTaskToDelayedList>
 800a0c8:	20014e54 	.word	0x20014e54

0800a0cc <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a0cc:	68c3      	ldr	r3, [r0, #12]
{
 800a0ce:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a0d0:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800a0d2:	b944      	cbnz	r4, 800a0e6 <xTaskRemoveFromEventList+0x1a>
 800a0d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a0d8:	f383 8811 	msr	BASEPRI, r3
 800a0dc:	f3bf 8f6f 	isb	sy
 800a0e0:	f3bf 8f4f 	dsb	sy
 800a0e4:	e7fe      	b.n	800a0e4 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800a0e6:	f104 0118 	add.w	r1, r4, #24
 800a0ea:	4608      	mov	r0, r1
 800a0ec:	9101      	str	r1, [sp, #4]
 800a0ee:	f7fe fd4c 	bl	8008b8a <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a0f2:	4b12      	ldr	r3, [pc, #72]	; (800a13c <xTaskRemoveFromEventList+0x70>)
 800a0f4:	9901      	ldr	r1, [sp, #4]
 800a0f6:	681b      	ldr	r3, [r3, #0]
 800a0f8:	b9eb      	cbnz	r3, 800a136 <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800a0fa:	1d21      	adds	r1, r4, #4
 800a0fc:	4608      	mov	r0, r1
 800a0fe:	9101      	str	r1, [sp, #4]
 800a100:	f7fe fd43 	bl	8008b8a <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800a104:	4a0e      	ldr	r2, [pc, #56]	; (800a140 <xTaskRemoveFromEventList+0x74>)
 800a106:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a108:	6810      	ldr	r0, [r2, #0]
 800a10a:	9901      	ldr	r1, [sp, #4]
 800a10c:	4283      	cmp	r3, r0
 800a10e:	bf88      	it	hi
 800a110:	6013      	strhi	r3, [r2, #0]
 800a112:	4a0c      	ldr	r2, [pc, #48]	; (800a144 <xTaskRemoveFromEventList+0x78>)
 800a114:	2014      	movs	r0, #20
 800a116:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800a11a:	f7fe fd13 	bl	8008b44 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800a11e:	4b0a      	ldr	r3, [pc, #40]	; (800a148 <xTaskRemoveFromEventList+0x7c>)
 800a120:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a122:	681b      	ldr	r3, [r3, #0]
 800a124:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a126:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800a128:	bf85      	ittet	hi
 800a12a:	4b08      	ldrhi	r3, [pc, #32]	; (800a14c <xTaskRemoveFromEventList+0x80>)
 800a12c:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800a12e:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800a130:	6018      	strhi	r0, [r3, #0]
}
 800a132:	b002      	add	sp, #8
 800a134:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800a136:	4806      	ldr	r0, [pc, #24]	; (800a150 <xTaskRemoveFromEventList+0x84>)
 800a138:	e7ef      	b.n	800a11a <xTaskRemoveFromEventList+0x4e>
 800a13a:	bf00      	nop
 800a13c:	200152cc 	.word	0x200152cc
 800a140:	200152d4 	.word	0x200152d4
 800a144:	20014e60 	.word	0x20014e60
 800a148:	20014e54 	.word	0x20014e54
 800a14c:	2001534c 	.word	0x2001534c
 800a150:	20015308 	.word	0x20015308

0800a154 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800a154:	4b03      	ldr	r3, [pc, #12]	; (800a164 <vTaskInternalSetTimeOutState+0x10>)
 800a156:	681b      	ldr	r3, [r3, #0]
 800a158:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800a15a:	4b03      	ldr	r3, [pc, #12]	; (800a168 <vTaskInternalSetTimeOutState+0x14>)
 800a15c:	681b      	ldr	r3, [r3, #0]
 800a15e:	6043      	str	r3, [r0, #4]
}
 800a160:	4770      	bx	lr
 800a162:	bf00      	nop
 800a164:	20015304 	.word	0x20015304
 800a168:	20015348 	.word	0x20015348

0800a16c <xTaskCheckForTimeOut>:
{
 800a16c:	b570      	push	{r4, r5, r6, lr}
 800a16e:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 800a170:	4605      	mov	r5, r0
 800a172:	b940      	cbnz	r0, 800a186 <xTaskCheckForTimeOut+0x1a>
 800a174:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a178:	f383 8811 	msr	BASEPRI, r3
 800a17c:	f3bf 8f6f 	isb	sy
 800a180:	f3bf 8f4f 	dsb	sy
 800a184:	e7fe      	b.n	800a184 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800a186:	b941      	cbnz	r1, 800a19a <xTaskCheckForTimeOut+0x2e>
 800a188:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a18c:	f383 8811 	msr	BASEPRI, r3
 800a190:	f3bf 8f6f 	isb	sy
 800a194:	f3bf 8f4f 	dsb	sy
 800a198:	e7fe      	b.n	800a198 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800a19a:	f7fe fd73 	bl	8008c84 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800a19e:	4b0f      	ldr	r3, [pc, #60]	; (800a1dc <xTaskCheckForTimeOut+0x70>)
 800a1a0:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800a1a2:	6823      	ldr	r3, [r4, #0]
 800a1a4:	1c5a      	adds	r2, r3, #1
 800a1a6:	d010      	beq.n	800a1ca <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a1a8:	480d      	ldr	r0, [pc, #52]	; (800a1e0 <xTaskCheckForTimeOut+0x74>)
 800a1aa:	682e      	ldr	r6, [r5, #0]
 800a1ac:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a1ae:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a1b0:	4286      	cmp	r6, r0
 800a1b2:	d001      	beq.n	800a1b8 <xTaskCheckForTimeOut+0x4c>
 800a1b4:	428a      	cmp	r2, r1
 800a1b6:	d90f      	bls.n	800a1d8 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a1b8:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800a1ba:	4283      	cmp	r3, r0
 800a1bc:	d90a      	bls.n	800a1d4 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 800a1be:	1a5b      	subs	r3, r3, r1
 800a1c0:	4413      	add	r3, r2
 800a1c2:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800a1c4:	4628      	mov	r0, r5
 800a1c6:	f7ff ffc5 	bl	800a154 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800a1ca:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800a1cc:	f7fe fd7a 	bl	8008cc4 <vPortExitCritical>
}
 800a1d0:	4620      	mov	r0, r4
 800a1d2:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 800a1d4:	2300      	movs	r3, #0
 800a1d6:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800a1d8:	2401      	movs	r4, #1
 800a1da:	e7f7      	b.n	800a1cc <xTaskCheckForTimeOut+0x60>
 800a1dc:	20015348 	.word	0x20015348
 800a1e0:	20015304 	.word	0x20015304

0800a1e4 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800a1e4:	4b01      	ldr	r3, [pc, #4]	; (800a1ec <vTaskMissedYield+0x8>)
 800a1e6:	2201      	movs	r2, #1
 800a1e8:	601a      	str	r2, [r3, #0]
}
 800a1ea:	4770      	bx	lr
 800a1ec:	2001534c 	.word	0x2001534c

0800a1f0 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800a1f0:	4b05      	ldr	r3, [pc, #20]	; (800a208 <xTaskGetSchedulerState+0x18>)
 800a1f2:	681b      	ldr	r3, [r3, #0]
 800a1f4:	b133      	cbz	r3, 800a204 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a1f6:	4b05      	ldr	r3, [pc, #20]	; (800a20c <xTaskGetSchedulerState+0x1c>)
 800a1f8:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
 800a1fa:	2b00      	cmp	r3, #0
 800a1fc:	bf0c      	ite	eq
 800a1fe:	2002      	moveq	r0, #2
 800a200:	2000      	movne	r0, #0
 800a202:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800a204:	2001      	movs	r0, #1
	}
 800a206:	4770      	bx	lr
 800a208:	2001531c 	.word	0x2001531c
 800a20c:	200152cc 	.word	0x200152cc

0800a210 <xTaskPriorityInherit>:
	{
 800a210:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800a212:	4604      	mov	r4, r0
 800a214:	b348      	cbz	r0, 800a26a <xTaskPriorityInherit+0x5a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800a216:	4d1c      	ldr	r5, [pc, #112]	; (800a288 <xTaskPriorityInherit+0x78>)
 800a218:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800a21a:	682a      	ldr	r2, [r5, #0]
 800a21c:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800a21e:	4293      	cmp	r3, r2
 800a220:	d229      	bcs.n	800a276 <xTaskPriorityInherit+0x66>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a222:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a224:	4e19      	ldr	r6, [pc, #100]	; (800a28c <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a226:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a228:	bfa1      	itttt	ge
 800a22a:	682a      	ldrge	r2, [r5, #0]
 800a22c:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 800a22e:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 800a232:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a234:	2214      	movs	r2, #20
 800a236:	fb02 6303 	mla	r3, r2, r3, r6
 800a23a:	6942      	ldr	r2, [r0, #20]
 800a23c:	429a      	cmp	r2, r3
 800a23e:	d116      	bne.n	800a26e <xTaskPriorityInherit+0x5e>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a240:	1d01      	adds	r1, r0, #4
 800a242:	4608      	mov	r0, r1
 800a244:	9101      	str	r1, [sp, #4]
 800a246:	f7fe fca0 	bl	8008b8a <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a24a:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a24c:	4a10      	ldr	r2, [pc, #64]	; (800a290 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a24e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a250:	6810      	ldr	r0, [r2, #0]
 800a252:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a254:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a256:	4283      	cmp	r3, r0
 800a258:	f04f 0014 	mov.w	r0, #20
 800a25c:	fb00 6003 	mla	r0, r0, r3, r6
 800a260:	bf88      	it	hi
 800a262:	6013      	strhi	r3, [r2, #0]
 800a264:	f7fe fc6e 	bl	8008b44 <vListInsertEnd>
				xReturn = pdTRUE;
 800a268:	2001      	movs	r0, #1
	}
 800a26a:	b002      	add	sp, #8
 800a26c:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a26e:	682b      	ldr	r3, [r5, #0]
 800a270:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a272:	62c3      	str	r3, [r0, #44]	; 0x2c
 800a274:	e7f8      	b.n	800a268 <xTaskPriorityInherit+0x58>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800a276:	682b      	ldr	r3, [r5, #0]
 800a278:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800a27a:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 800a27c:	42a0      	cmp	r0, r4
 800a27e:	bf2c      	ite	cs
 800a280:	2000      	movcs	r0, #0
 800a282:	2001      	movcc	r0, #1
 800a284:	e7f1      	b.n	800a26a <xTaskPriorityInherit+0x5a>
 800a286:	bf00      	nop
 800a288:	20014e54 	.word	0x20014e54
 800a28c:	20014e60 	.word	0x20014e60
 800a290:	200152d4 	.word	0x200152d4

0800a294 <xTaskPriorityDisinherit>:
	{
 800a294:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 800a296:	b910      	cbnz	r0, 800a29e <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 800a298:	2000      	movs	r0, #0
	}
 800a29a:	b002      	add	sp, #8
 800a29c:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800a29e:	4b1c      	ldr	r3, [pc, #112]	; (800a310 <xTaskPriorityDisinherit+0x7c>)
 800a2a0:	681c      	ldr	r4, [r3, #0]
 800a2a2:	4284      	cmp	r4, r0
 800a2a4:	d008      	beq.n	800a2b8 <xTaskPriorityDisinherit+0x24>
 800a2a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a2aa:	f383 8811 	msr	BASEPRI, r3
 800a2ae:	f3bf 8f6f 	isb	sy
 800a2b2:	f3bf 8f4f 	dsb	sy
 800a2b6:	e7fe      	b.n	800a2b6 <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 800a2b8:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800a2ba:	b943      	cbnz	r3, 800a2ce <xTaskPriorityDisinherit+0x3a>
 800a2bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a2c0:	f383 8811 	msr	BASEPRI, r3
 800a2c4:	f3bf 8f6f 	isb	sy
 800a2c8:	f3bf 8f4f 	dsb	sy
 800a2cc:	e7fe      	b.n	800a2cc <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a2ce:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800a2d0:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800a2d2:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a2d4:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800a2d6:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a2d8:	d0de      	beq.n	800a298 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800a2da:	2b00      	cmp	r3, #0
 800a2dc:	d1dc      	bne.n	800a298 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a2de:	1d21      	adds	r1, r4, #4
 800a2e0:	4608      	mov	r0, r1
 800a2e2:	9101      	str	r1, [sp, #4]
 800a2e4:	f7fe fc51 	bl	8008b8a <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a2e8:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800a2ea:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a2ec:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a2ee:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 800a2f2:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800a2f4:	4a07      	ldr	r2, [pc, #28]	; (800a314 <xTaskPriorityDisinherit+0x80>)
 800a2f6:	6810      	ldr	r0, [r2, #0]
 800a2f8:	4283      	cmp	r3, r0
 800a2fa:	bf88      	it	hi
 800a2fc:	6013      	strhi	r3, [r2, #0]
 800a2fe:	4a06      	ldr	r2, [pc, #24]	; (800a318 <xTaskPriorityDisinherit+0x84>)
 800a300:	2014      	movs	r0, #20
 800a302:	fb00 2003 	mla	r0, r0, r3, r2
 800a306:	f7fe fc1d 	bl	8008b44 <vListInsertEnd>
					xReturn = pdTRUE;
 800a30a:	2001      	movs	r0, #1
		return xReturn;
 800a30c:	e7c5      	b.n	800a29a <xTaskPriorityDisinherit+0x6>
 800a30e:	bf00      	nop
 800a310:	20014e54 	.word	0x20014e54
 800a314:	200152d4 	.word	0x200152d4
 800a318:	20014e60 	.word	0x20014e60

0800a31c <vTaskPriorityDisinheritAfterTimeout>:
	{
 800a31c:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800a31e:	4604      	mov	r4, r0
 800a320:	2800      	cmp	r0, #0
 800a322:	d044      	beq.n	800a3ae <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 800a324:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a326:	b942      	cbnz	r2, 800a33a <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800a328:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a32c:	f383 8811 	msr	BASEPRI, r3
 800a330:	f3bf 8f6f 	isb	sy
 800a334:	f3bf 8f4f 	dsb	sy
 800a338:	e7fe      	b.n	800a338 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800a33a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 800a33c:	4299      	cmp	r1, r3
 800a33e:	bf38      	it	cc
 800a340:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800a342:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800a344:	428b      	cmp	r3, r1
 800a346:	d032      	beq.n	800a3ae <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800a348:	2a01      	cmp	r2, #1
 800a34a:	d130      	bne.n	800a3ae <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 800a34c:	4a19      	ldr	r2, [pc, #100]	; (800a3b4 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800a34e:	6812      	ldr	r2, [r2, #0]
 800a350:	4282      	cmp	r2, r0
 800a352:	d108      	bne.n	800a366 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800a354:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a358:	f383 8811 	msr	BASEPRI, r3
 800a35c:	f3bf 8f6f 	isb	sy
 800a360:	f3bf 8f4f 	dsb	sy
 800a364:	e7fe      	b.n	800a364 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a366:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a368:	4d13      	ldr	r5, [pc, #76]	; (800a3b8 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 800a36a:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a36c:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a36e:	f04f 0214 	mov.w	r2, #20
 800a372:	fb02 5303 	mla	r3, r2, r3, r5
 800a376:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a378:	bfa4      	itt	ge
 800a37a:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 800a37e:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a380:	429a      	cmp	r2, r3
 800a382:	d114      	bne.n	800a3ae <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a384:	1d01      	adds	r1, r0, #4
 800a386:	4608      	mov	r0, r1
 800a388:	9101      	str	r1, [sp, #4]
 800a38a:	f7fe fbfe 	bl	8008b8a <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800a38e:	4a0b      	ldr	r2, [pc, #44]	; (800a3bc <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 800a390:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a392:	6810      	ldr	r0, [r2, #0]
 800a394:	9901      	ldr	r1, [sp, #4]
 800a396:	4283      	cmp	r3, r0
 800a398:	f04f 0014 	mov.w	r0, #20
 800a39c:	fb00 5003 	mla	r0, r0, r3, r5
 800a3a0:	bf88      	it	hi
 800a3a2:	6013      	strhi	r3, [r2, #0]
	}
 800a3a4:	b003      	add	sp, #12
 800a3a6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800a3aa:	f7fe bbcb 	b.w	8008b44 <vListInsertEnd>
	}
 800a3ae:	b003      	add	sp, #12
 800a3b0:	bd30      	pop	{r4, r5, pc}
 800a3b2:	bf00      	nop
 800a3b4:	20014e54 	.word	0x20014e54
 800a3b8:	20014e60 	.word	0x20014e60
 800a3bc:	200152d4 	.word	0x200152d4

0800a3c0 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800a3c0:	4b04      	ldr	r3, [pc, #16]	; (800a3d4 <pvTaskIncrementMutexHeldCount+0x14>)
 800a3c2:	681a      	ldr	r2, [r3, #0]
 800a3c4:	b11a      	cbz	r2, 800a3ce <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800a3c6:	6819      	ldr	r1, [r3, #0]
 800a3c8:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800a3ca:	3201      	adds	r2, #1
 800a3cc:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800a3ce:	6818      	ldr	r0, [r3, #0]
	}
 800a3d0:	4770      	bx	lr
 800a3d2:	bf00      	nop
 800a3d4:	20014e54 	.word	0x20014e54

0800a3d8 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800a3d8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800a3da:	4c11      	ldr	r4, [pc, #68]	; (800a420 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800a3dc:	f7fe fc52 	bl	8008c84 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800a3e0:	6825      	ldr	r5, [r4, #0]
 800a3e2:	b9bd      	cbnz	r5, 800a414 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800a3e4:	4f0f      	ldr	r7, [pc, #60]	; (800a424 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800a3e6:	4e10      	ldr	r6, [pc, #64]	; (800a428 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800a3e8:	4638      	mov	r0, r7
 800a3ea:	f7fe fb9d 	bl	8008b28 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800a3ee:	4630      	mov	r0, r6
 800a3f0:	f7fe fb9a 	bl	8008b28 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800a3f4:	4b0d      	ldr	r3, [pc, #52]	; (800a42c <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a3f6:	4a0e      	ldr	r2, [pc, #56]	; (800a430 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 800a3f8:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800a3fa:	4b0e      	ldr	r3, [pc, #56]	; (800a434 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a3fc:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800a3fe:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a400:	200a      	movs	r0, #10
 800a402:	4b0d      	ldr	r3, [pc, #52]	; (800a438 <prvCheckForValidListAndQueue+0x60>)
 800a404:	9500      	str	r5, [sp, #0]
 800a406:	f7fe fe4e 	bl	80090a6 <xQueueGenericCreateStatic>
 800a40a:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800a40c:	b110      	cbz	r0, 800a414 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800a40e:	490b      	ldr	r1, [pc, #44]	; (800a43c <prvCheckForValidListAndQueue+0x64>)
 800a410:	f7ff fa18 	bl	8009844 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800a414:	b003      	add	sp, #12
 800a416:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800a41a:	f7fe bc53 	b.w	8008cc4 <vPortExitCritical>
 800a41e:	bf00      	nop
 800a420:	20015474 	.word	0x20015474
 800a424:	200153f8 	.word	0x200153f8
 800a428:	2001540c 	.word	0x2001540c
 800a42c:	20015350 	.word	0x20015350
 800a430:	20015358 	.word	0x20015358
 800a434:	20015354 	.word	0x20015354
 800a438:	20015424 	.word	0x20015424
 800a43c:	08023519 	.word	0x08023519

0800a440 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 800a440:	4291      	cmp	r1, r2
{
 800a442:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800a444:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a446:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800a448:	d80a      	bhi.n	800a460 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a44a:	1ad2      	subs	r2, r2, r3
 800a44c:	6983      	ldr	r3, [r0, #24]
 800a44e:	429a      	cmp	r2, r3
 800a450:	d20d      	bcs.n	800a46e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800a452:	4b08      	ldr	r3, [pc, #32]	; (800a474 <prvInsertTimerInActiveList+0x34>)
 800a454:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a456:	6818      	ldr	r0, [r3, #0]
 800a458:	f7fe fb80 	bl	8008b5c <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800a45c:	2000      	movs	r0, #0
}
 800a45e:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800a460:	429a      	cmp	r2, r3
 800a462:	d201      	bcs.n	800a468 <prvInsertTimerInActiveList+0x28>
 800a464:	4299      	cmp	r1, r3
 800a466:	d202      	bcs.n	800a46e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a468:	4b03      	ldr	r3, [pc, #12]	; (800a478 <prvInsertTimerInActiveList+0x38>)
 800a46a:	1d01      	adds	r1, r0, #4
 800a46c:	e7f3      	b.n	800a456 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800a46e:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800a470:	e7f5      	b.n	800a45e <prvInsertTimerInActiveList+0x1e>
 800a472:	bf00      	nop
 800a474:	20015354 	.word	0x20015354
 800a478:	20015350 	.word	0x20015350

0800a47c <xTimerCreateTimerTask>:
{
 800a47c:	b510      	push	{r4, lr}
 800a47e:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800a480:	f7ff ffaa 	bl	800a3d8 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800a484:	4b12      	ldr	r3, [pc, #72]	; (800a4d0 <xTimerCreateTimerTask+0x54>)
 800a486:	681b      	ldr	r3, [r3, #0]
 800a488:	b1b3      	cbz	r3, 800a4b8 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800a48a:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a48c:	aa07      	add	r2, sp, #28
 800a48e:	a906      	add	r1, sp, #24
 800a490:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800a492:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a496:	f7fe fa4d 	bl	8008934 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800a49a:	9b05      	ldr	r3, [sp, #20]
 800a49c:	9302      	str	r3, [sp, #8]
 800a49e:	9b06      	ldr	r3, [sp, #24]
 800a4a0:	9301      	str	r3, [sp, #4]
 800a4a2:	2302      	movs	r3, #2
 800a4a4:	9300      	str	r3, [sp, #0]
 800a4a6:	9a07      	ldr	r2, [sp, #28]
 800a4a8:	490a      	ldr	r1, [pc, #40]	; (800a4d4 <xTimerCreateTimerTask+0x58>)
 800a4aa:	480b      	ldr	r0, [pc, #44]	; (800a4d8 <xTimerCreateTimerTask+0x5c>)
 800a4ac:	4623      	mov	r3, r4
 800a4ae:	f7ff fba3 	bl	8009bf8 <xTaskCreateStatic>
 800a4b2:	4b0a      	ldr	r3, [pc, #40]	; (800a4dc <xTimerCreateTimerTask+0x60>)
 800a4b4:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800a4b6:	b940      	cbnz	r0, 800a4ca <xTimerCreateTimerTask+0x4e>
 800a4b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a4bc:	f383 8811 	msr	BASEPRI, r3
 800a4c0:	f3bf 8f6f 	isb	sy
 800a4c4:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800a4c8:	e7fe      	b.n	800a4c8 <xTimerCreateTimerTask+0x4c>
}
 800a4ca:	2001      	movs	r0, #1
 800a4cc:	b008      	add	sp, #32
 800a4ce:	bd10      	pop	{r4, pc}
 800a4d0:	20015474 	.word	0x20015474
 800a4d4:	0802351e 	.word	0x0802351e
 800a4d8:	0800a5e5 	.word	0x0800a5e5
 800a4dc:	20015478 	.word	0x20015478

0800a4e0 <xTimerGenericCommand>:
{
 800a4e0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a4e2:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800a4e4:	4604      	mov	r4, r0
{
 800a4e6:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800a4e8:	b940      	cbnz	r0, 800a4fc <xTimerGenericCommand+0x1c>
 800a4ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a4ee:	f383 8811 	msr	BASEPRI, r3
 800a4f2:	f3bf 8f6f 	isb	sy
 800a4f6:	f3bf 8f4f 	dsb	sy
 800a4fa:	e7fe      	b.n	800a4fa <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800a4fc:	4d0d      	ldr	r5, [pc, #52]	; (800a534 <xTimerGenericCommand+0x54>)
 800a4fe:	6828      	ldr	r0, [r5, #0]
 800a500:	b180      	cbz	r0, 800a524 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800a502:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800a504:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800a508:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800a50a:	dc0d      	bgt.n	800a528 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800a50c:	f7ff fe70 	bl	800a1f0 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800a510:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800a512:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800a514:	bf08      	it	eq
 800a516:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800a518:	6828      	ldr	r0, [r5, #0]
 800a51a:	bf18      	it	ne
 800a51c:	461a      	movne	r2, r3
 800a51e:	4669      	mov	r1, sp
 800a520:	f7fe fe76 	bl	8009210 <xQueueGenericSend>
}
 800a524:	b004      	add	sp, #16
 800a526:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800a528:	2300      	movs	r3, #0
 800a52a:	4669      	mov	r1, sp
 800a52c:	f7fe ff23 	bl	8009376 <xQueueGenericSendFromISR>
 800a530:	e7f8      	b.n	800a524 <xTimerGenericCommand+0x44>
 800a532:	bf00      	nop
 800a534:	20015474 	.word	0x20015474

0800a538 <prvSampleTimeNow>:
{
 800a538:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800a53c:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800a5e0 <prvSampleTimeNow+0xa8>
{
 800a540:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800a542:	f7ff fc17 	bl	8009d74 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800a546:	f8d8 3000 	ldr.w	r3, [r8]
 800a54a:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 800a54c:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800a54e:	d940      	bls.n	800a5d2 <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800a550:	4f21      	ldr	r7, [pc, #132]	; (800a5d8 <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a552:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800a556:	683b      	ldr	r3, [r7, #0]
 800a558:	681a      	ldr	r2, [r3, #0]
 800a55a:	b95a      	cbnz	r2, 800a574 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 800a55c:	4a1f      	ldr	r2, [pc, #124]	; (800a5dc <prvSampleTimeNow+0xa4>)
 800a55e:	6811      	ldr	r1, [r2, #0]
 800a560:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 800a562:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 800a564:	2301      	movs	r3, #1
}
 800a566:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 800a568:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800a56a:	f8c8 5000 	str.w	r5, [r8]
}
 800a56e:	b004      	add	sp, #16
 800a570:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a574:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a576:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a578:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a57c:	1d21      	adds	r1, r4, #4
 800a57e:	4608      	mov	r0, r1
 800a580:	9103      	str	r1, [sp, #12]
 800a582:	f7fe fb02 	bl	8008b8a <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a586:	6a23      	ldr	r3, [r4, #32]
 800a588:	4620      	mov	r0, r4
 800a58a:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a58c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a590:	9903      	ldr	r1, [sp, #12]
 800a592:	f013 0f04 	tst.w	r3, #4
 800a596:	d0de      	beq.n	800a556 <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800a598:	69a3      	ldr	r3, [r4, #24]
 800a59a:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 800a59c:	459a      	cmp	sl, r3
 800a59e:	d205      	bcs.n	800a5ac <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a5a0:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800a5a2:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a5a4:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a5a6:	f7fe fad9 	bl	8008b5c <vListInsert>
 800a5aa:	e7d4      	b.n	800a556 <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a5ac:	2300      	movs	r3, #0
 800a5ae:	f8cd 9000 	str.w	r9, [sp]
 800a5b2:	4652      	mov	r2, sl
 800a5b4:	4619      	mov	r1, r3
 800a5b6:	4620      	mov	r0, r4
 800a5b8:	f7ff ff92 	bl	800a4e0 <xTimerGenericCommand>
				configASSERT( xResult );
 800a5bc:	2800      	cmp	r0, #0
 800a5be:	d1ca      	bne.n	800a556 <prvSampleTimeNow+0x1e>
 800a5c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a5c4:	f383 8811 	msr	BASEPRI, r3
 800a5c8:	f3bf 8f6f 	isb	sy
 800a5cc:	f3bf 8f4f 	dsb	sy
 800a5d0:	e7fe      	b.n	800a5d0 <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 800a5d2:	2300      	movs	r3, #0
 800a5d4:	e7c7      	b.n	800a566 <prvSampleTimeNow+0x2e>
 800a5d6:	bf00      	nop
 800a5d8:	20015350 	.word	0x20015350
 800a5dc:	20015354 	.word	0x20015354
 800a5e0:	20015420 	.word	0x20015420

0800a5e4 <prvTimerTask>:
{
 800a5e4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a5e8:	4d6e      	ldr	r5, [pc, #440]	; (800a7a4 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a5ea:	4e6f      	ldr	r6, [pc, #444]	; (800a7a8 <prvTimerTask+0x1c4>)
{
 800a5ec:	b089      	sub	sp, #36	; 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a5ee:	682b      	ldr	r3, [r5, #0]
 800a5f0:	f8d3 8000 	ldr.w	r8, [r3]
 800a5f4:	f1b8 0f00 	cmp.w	r8, #0
 800a5f8:	d035      	beq.n	800a666 <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a5fa:	68db      	ldr	r3, [r3, #12]
 800a5fc:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a600:	2400      	movs	r4, #0
	vTaskSuspendAll();
 800a602:	f7ff fbaf 	bl	8009d64 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a606:	a804      	add	r0, sp, #16
 800a608:	f7ff ff96 	bl	800a538 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800a60c:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a60e:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800a610:	2b00      	cmp	r3, #0
 800a612:	d169      	bne.n	800a6e8 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800a614:	2c00      	cmp	r4, #0
 800a616:	d14c      	bne.n	800a6b2 <prvTimerTask+0xce>
 800a618:	4540      	cmp	r0, r8
 800a61a:	d350      	bcc.n	800a6be <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 800a61c:	f7ff fc46 	bl	8009eac <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a620:	682b      	ldr	r3, [r5, #0]
 800a622:	68db      	ldr	r3, [r3, #12]
 800a624:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a626:	1d38      	adds	r0, r7, #4
 800a628:	f7fe faaf 	bl	8008b8a <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a62c:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800a630:	0758      	lsls	r0, r3, #29
 800a632:	d51a      	bpl.n	800a66a <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800a634:	69b9      	ldr	r1, [r7, #24]
 800a636:	4643      	mov	r3, r8
 800a638:	464a      	mov	r2, r9
 800a63a:	4441      	add	r1, r8
 800a63c:	4638      	mov	r0, r7
 800a63e:	f7ff feff 	bl	800a440 <prvInsertTimerInActiveList>
 800a642:	b1b0      	cbz	r0, 800a672 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a644:	9400      	str	r4, [sp, #0]
 800a646:	4623      	mov	r3, r4
 800a648:	4642      	mov	r2, r8
 800a64a:	4621      	mov	r1, r4
 800a64c:	4638      	mov	r0, r7
 800a64e:	f7ff ff47 	bl	800a4e0 <xTimerGenericCommand>
			configASSERT( xResult );
 800a652:	b970      	cbnz	r0, 800a672 <prvTimerTask+0x8e>
 800a654:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a658:	f383 8811 	msr	BASEPRI, r3
 800a65c:	f3bf 8f6f 	isb	sy
 800a660:	f3bf 8f4f 	dsb	sy
 800a664:	e7fe      	b.n	800a664 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a666:	2401      	movs	r4, #1
 800a668:	e7cb      	b.n	800a602 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a66a:	f023 0301 	bic.w	r3, r3, #1
 800a66e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a672:	6a3b      	ldr	r3, [r7, #32]
 800a674:	4638      	mov	r0, r7
 800a676:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800a678:	6830      	ldr	r0, [r6, #0]
 800a67a:	2200      	movs	r2, #0
 800a67c:	a904      	add	r1, sp, #16
 800a67e:	f7fe ff2f 	bl	80094e0 <xQueueReceive>
 800a682:	2800      	cmp	r0, #0
 800a684:	d0b3      	beq.n	800a5ee <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a686:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a688:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a68a:	2b00      	cmp	r3, #0
 800a68c:	db2f      	blt.n	800a6ee <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800a68e:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800a690:	6963      	ldr	r3, [r4, #20]
 800a692:	2b00      	cmp	r3, #0
 800a694:	d132      	bne.n	800a6fc <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a696:	a803      	add	r0, sp, #12
 800a698:	f7ff ff4e 	bl	800a538 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 800a69c:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a69e:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800a6a0:	2b09      	cmp	r3, #9
 800a6a2:	d8e9      	bhi.n	800a678 <prvTimerTask+0x94>
 800a6a4:	e8df f003 	tbb	[pc, r3]
 800a6a8:	572e2e2e 	.word	0x572e2e2e
 800a6ac:	2e2e765e 	.word	0x2e2e765e
 800a6b0:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800a6b2:	4b3e      	ldr	r3, [pc, #248]	; (800a7ac <prvTimerTask+0x1c8>)
 800a6b4:	681b      	ldr	r3, [r3, #0]
 800a6b6:	681c      	ldr	r4, [r3, #0]
 800a6b8:	fab4 f484 	clz	r4, r4
 800a6bc:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a6be:	6830      	ldr	r0, [r6, #0]
 800a6c0:	4622      	mov	r2, r4
 800a6c2:	eba8 0109 	sub.w	r1, r8, r9
 800a6c6:	f7ff f8fa 	bl	80098be <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800a6ca:	f7ff fbef 	bl	8009eac <xTaskResumeAll>
 800a6ce:	2800      	cmp	r0, #0
 800a6d0:	d1d2      	bne.n	800a678 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 800a6d2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a6d6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a6da:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a6de:	f3bf 8f4f 	dsb	sy
 800a6e2:	f3bf 8f6f 	isb	sy
 800a6e6:	e7c7      	b.n	800a678 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 800a6e8:	f7ff fbe0 	bl	8009eac <xTaskResumeAll>
}
 800a6ec:	e7c4      	b.n	800a678 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a6ee:	9b05      	ldr	r3, [sp, #20]
 800a6f0:	9907      	ldr	r1, [sp, #28]
 800a6f2:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800a6f4:	9b04      	ldr	r3, [sp, #16]
 800a6f6:	2b00      	cmp	r3, #0
 800a6f8:	dbbe      	blt.n	800a678 <prvTimerTask+0x94>
 800a6fa:	e7c8      	b.n	800a68e <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a6fc:	1d20      	adds	r0, r4, #4
 800a6fe:	f7fe fa44 	bl	8008b8a <uxListRemove>
 800a702:	e7c8      	b.n	800a696 <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a704:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a708:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a70a:	f043 0301 	orr.w	r3, r3, #1
 800a70e:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a712:	9b05      	ldr	r3, [sp, #20]
 800a714:	4620      	mov	r0, r4
 800a716:	4419      	add	r1, r3
 800a718:	f7ff fe92 	bl	800a440 <prvInsertTimerInActiveList>
 800a71c:	2800      	cmp	r0, #0
 800a71e:	d0ab      	beq.n	800a678 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a720:	6a23      	ldr	r3, [r4, #32]
 800a722:	4620      	mov	r0, r4
 800a724:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a726:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a72a:	0759      	lsls	r1, r3, #29
 800a72c:	d5a4      	bpl.n	800a678 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800a72e:	69a2      	ldr	r2, [r4, #24]
 800a730:	9905      	ldr	r1, [sp, #20]
 800a732:	2300      	movs	r3, #0
 800a734:	440a      	add	r2, r1
 800a736:	9300      	str	r3, [sp, #0]
 800a738:	4619      	mov	r1, r3
 800a73a:	4620      	mov	r0, r4
 800a73c:	f7ff fed0 	bl	800a4e0 <xTimerGenericCommand>
							configASSERT( xResult );
 800a740:	2800      	cmp	r0, #0
 800a742:	d199      	bne.n	800a678 <prvTimerTask+0x94>
 800a744:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a748:	f383 8811 	msr	BASEPRI, r3
 800a74c:	f3bf 8f6f 	isb	sy
 800a750:	f3bf 8f4f 	dsb	sy
 800a754:	e7fe      	b.n	800a754 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a756:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a75a:	f023 0301 	bic.w	r3, r3, #1
 800a75e:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 800a762:	e789      	b.n	800a678 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a764:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a768:	f043 0301 	orr.w	r3, r3, #1
 800a76c:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800a770:	9905      	ldr	r1, [sp, #20]
 800a772:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800a774:	b941      	cbnz	r1, 800a788 <prvTimerTask+0x1a4>
 800a776:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a77a:	f383 8811 	msr	BASEPRI, r3
 800a77e:	f3bf 8f6f 	isb	sy
 800a782:	f3bf 8f4f 	dsb	sy
 800a786:	e7fe      	b.n	800a786 <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800a788:	4603      	mov	r3, r0
 800a78a:	4401      	add	r1, r0
 800a78c:	4620      	mov	r0, r4
 800a78e:	f7ff fe57 	bl	800a440 <prvInsertTimerInActiveList>
					break;
 800a792:	e771      	b.n	800a678 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800a794:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a798:	079a      	lsls	r2, r3, #30
 800a79a:	d4de      	bmi.n	800a75a <prvTimerTask+0x176>
							vPortFree( pxTimer );
 800a79c:	4620      	mov	r0, r4
 800a79e:	f7fe f98b 	bl	8008ab8 <vPortFree>
 800a7a2:	e769      	b.n	800a678 <prvTimerTask+0x94>
 800a7a4:	20015350 	.word	0x20015350
 800a7a8:	20015474 	.word	0x20015474
 800a7ac:	20015354 	.word	0x20015354

0800a7b0 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800a7b0:	8880      	ldrh	r0, [r0, #4]
 800a7b2:	4770      	bx	lr

0800a7b4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800a7b4:	b570      	push	{r4, r5, r6, lr}
 800a7b6:	6803      	ldr	r3, [r0, #0]
 800a7b8:	4605      	mov	r5, r0
 800a7ba:	460c      	mov	r4, r1
 800a7bc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a7be:	2100      	movs	r1, #0
 800a7c0:	4798      	blx	r3
 800a7c2:	682b      	ldr	r3, [r5, #0]
 800a7c4:	4606      	mov	r6, r0
 800a7c6:	6a1b      	ldr	r3, [r3, #32]
 800a7c8:	4628      	mov	r0, r5
 800a7ca:	4798      	blx	r3
 800a7cc:	1ba4      	subs	r4, r4, r6
 800a7ce:	b2a4      	uxth	r4, r4
 800a7d0:	fbb4 f0f0 	udiv	r0, r4, r0
 800a7d4:	bd70      	pop	{r4, r5, r6, pc}

0800a7d6 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800a7d6:	2300      	movs	r3, #0
 800a7d8:	8083      	strh	r3, [r0, #4]
 800a7da:	4770      	bx	lr

0800a7dc <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800a7dc:	b510      	push	{r4, lr}
 800a7de:	6803      	ldr	r3, [r0, #0]
 800a7e0:	8881      	ldrh	r1, [r0, #4]
 800a7e2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a7e4:	4604      	mov	r4, r0
 800a7e6:	4798      	blx	r3
 800a7e8:	88a3      	ldrh	r3, [r4, #4]
 800a7ea:	3301      	adds	r3, #1
 800a7ec:	80a3      	strh	r3, [r4, #4]
 800a7ee:	bd10      	pop	{r4, pc}

0800a7f0 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800a7f0:	6803      	ldr	r3, [r0, #0]
 800a7f2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a7f4:	4718      	bx	r3

0800a7f6 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800a7f6:	4770      	bx	lr

0800a7f8 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800a7f8:	4a02      	ldr	r2, [pc, #8]	; (800a804 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800a7fa:	6002      	str	r2, [r0, #0]
 800a7fc:	2200      	movs	r2, #0
 800a7fe:	8082      	strh	r2, [r0, #4]
 800a800:	4770      	bx	lr
 800a802:	bf00      	nop
 800a804:	08023530 	.word	0x08023530

0800a808 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800a808:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a80a:	2000      	movs	r0, #0
 800a80c:	b12b      	cbz	r3, 800a81a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a80e:	b920      	cbnz	r0, 800a81a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a810:	1a5a      	subs	r2, r3, r1
 800a812:	4250      	negs	r0, r2
 800a814:	4150      	adcs	r0, r2
 800a816:	699b      	ldr	r3, [r3, #24]
 800a818:	e7f8      	b.n	800a80c <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800a81a:	4770      	bx	lr

0800a81c <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800a81c:	2300      	movs	r3, #0
 800a81e:	6148      	str	r0, [r1, #20]
 800a820:	618b      	str	r3, [r1, #24]
 800a822:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a824:	b913      	cbnz	r3, 800a82c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800a826:	6281      	str	r1, [r0, #40]	; 0x28
 800a828:	4770      	bx	lr
 800a82a:	4613      	mov	r3, r2
 800a82c:	699a      	ldr	r2, [r3, #24]
 800a82e:	2a00      	cmp	r2, #0
 800a830:	d1fb      	bne.n	800a82a <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800a832:	6199      	str	r1, [r3, #24]
 800a834:	4770      	bx	lr

0800a836 <_ZN8touchgfx9Container9removeAllEv>:
 800a836:	2200      	movs	r2, #0
 800a838:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a83a:	b123      	cbz	r3, 800a846 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800a83c:	6999      	ldr	r1, [r3, #24]
 800a83e:	6281      	str	r1, [r0, #40]	; 0x28
 800a840:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800a844:	e7f8      	b.n	800a838 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800a846:	4770      	bx	lr

0800a848 <_ZN8touchgfx9Container6unlinkEv>:
 800a848:	2300      	movs	r3, #0
 800a84a:	6283      	str	r3, [r0, #40]	; 0x28
 800a84c:	4770      	bx	lr

0800a84e <_ZNK8touchgfx9Container12getSolidRectEv>:
 800a84e:	2200      	movs	r2, #0
 800a850:	8002      	strh	r2, [r0, #0]
 800a852:	8042      	strh	r2, [r0, #2]
 800a854:	8082      	strh	r2, [r0, #4]
 800a856:	80c2      	strh	r2, [r0, #6]
 800a858:	4770      	bx	lr

0800a85a <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800a85a:	b570      	push	{r4, r5, r6, lr}
 800a85c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a85e:	460d      	mov	r5, r1
 800a860:	4616      	mov	r6, r2
 800a862:	b13c      	cbz	r4, 800a874 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800a864:	6823      	ldr	r3, [r4, #0]
 800a866:	4620      	mov	r0, r4
 800a868:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800a86a:	4632      	mov	r2, r6
 800a86c:	4629      	mov	r1, r5
 800a86e:	4798      	blx	r3
 800a870:	69a4      	ldr	r4, [r4, #24]
 800a872:	e7f6      	b.n	800a862 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800a874:	bd70      	pop	{r4, r5, r6, pc}

0800a876 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800a876:	b538      	push	{r3, r4, r5, lr}
 800a878:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a87a:	460d      	mov	r5, r1
 800a87c:	b134      	cbz	r4, 800a88c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800a87e:	682b      	ldr	r3, [r5, #0]
 800a880:	4621      	mov	r1, r4
 800a882:	689b      	ldr	r3, [r3, #8]
 800a884:	4628      	mov	r0, r5
 800a886:	4798      	blx	r3
 800a888:	69a4      	ldr	r4, [r4, #24]
 800a88a:	e7f7      	b.n	800a87c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800a88c:	bd38      	pop	{r3, r4, r5, pc}

0800a88e <_ZNK8touchgfx9Container17invalidateContentEv>:
 800a88e:	b510      	push	{r4, lr}
 800a890:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a892:	b12c      	cbz	r4, 800a8a0 <_ZNK8touchgfx9Container17invalidateContentEv+0x12>
 800a894:	6823      	ldr	r3, [r4, #0]
 800a896:	4620      	mov	r0, r4
 800a898:	699b      	ldr	r3, [r3, #24]
 800a89a:	4798      	blx	r3
 800a89c:	69a4      	ldr	r4, [r4, #24]
 800a89e:	e7f8      	b.n	800a892 <_ZNK8touchgfx9Container17invalidateContentEv+0x4>
 800a8a0:	bd10      	pop	{r4, pc}

0800a8a2 <_ZN8touchgfx9ContainerD1Ev>:
 800a8a2:	4770      	bx	lr

0800a8a4 <_ZN8touchgfx9ContainerD0Ev>:
 800a8a4:	b510      	push	{r4, lr}
 800a8a6:	212c      	movs	r1, #44	; 0x2c
 800a8a8:	4604      	mov	r4, r0
 800a8aa:	f015 fe03 	bl	80204b4 <_ZdlPvj>
 800a8ae:	4620      	mov	r0, r4
 800a8b0:	bd10      	pop	{r4, pc}

0800a8b2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800a8b2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a8b4:	b19b      	cbz	r3, 800a8de <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a8b6:	428b      	cmp	r3, r1
 800a8b8:	d109      	bne.n	800a8ce <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800a8ba:	699a      	ldr	r2, [r3, #24]
 800a8bc:	2100      	movs	r1, #0
 800a8be:	6159      	str	r1, [r3, #20]
 800a8c0:	6282      	str	r2, [r0, #40]	; 0x28
 800a8c2:	b902      	cbnz	r2, 800a8c6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800a8c4:	4770      	bx	lr
 800a8c6:	6199      	str	r1, [r3, #24]
 800a8c8:	4770      	bx	lr
 800a8ca:	4613      	mov	r3, r2
 800a8cc:	b13a      	cbz	r2, 800a8de <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a8ce:	699a      	ldr	r2, [r3, #24]
 800a8d0:	428a      	cmp	r2, r1
 800a8d2:	d1fa      	bne.n	800a8ca <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800a8d4:	698a      	ldr	r2, [r1, #24]
 800a8d6:	619a      	str	r2, [r3, #24]
 800a8d8:	2300      	movs	r3, #0
 800a8da:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800a8de:	4770      	bx	lr

0800a8e0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800a8e0:	b410      	push	{r4}
 800a8e2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a8e4:	4604      	mov	r4, r0
 800a8e6:	b92b      	cbnz	r3, 800a8f4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800a8e8:	6803      	ldr	r3, [r0, #0]
 800a8ea:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a8ee:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800a8f0:	4611      	mov	r1, r2
 800a8f2:	4718      	bx	r3
 800a8f4:	b941      	cbnz	r1, 800a908 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800a8f6:	6193      	str	r3, [r2, #24]
 800a8f8:	6282      	str	r2, [r0, #40]	; 0x28
 800a8fa:	6154      	str	r4, [r2, #20]
 800a8fc:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a900:	4770      	bx	lr
 800a902:	4603      	mov	r3, r0
 800a904:	2800      	cmp	r0, #0
 800a906:	d0f9      	beq.n	800a8fc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800a908:	4299      	cmp	r1, r3
 800a90a:	6998      	ldr	r0, [r3, #24]
 800a90c:	d1f9      	bne.n	800a902 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800a90e:	6190      	str	r0, [r2, #24]
 800a910:	618a      	str	r2, [r1, #24]
 800a912:	e7f2      	b.n	800a8fa <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800a914 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800a914:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a918:	461f      	mov	r7, r3
 800a91a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800a91e:	460d      	mov	r5, r1
 800a920:	4616      	mov	r6, r2
 800a922:	b103      	cbz	r3, 800a926 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800a924:	6038      	str	r0, [r7, #0]
 800a926:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a928:	b314      	cbz	r4, 800a970 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800a92a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800a92e:	b1eb      	cbz	r3, 800a96c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a930:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800a934:	428d      	cmp	r5, r1
 800a936:	db19      	blt.n	800a96c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a938:	8923      	ldrh	r3, [r4, #8]
 800a93a:	b289      	uxth	r1, r1
 800a93c:	440b      	add	r3, r1
 800a93e:	b21b      	sxth	r3, r3
 800a940:	429d      	cmp	r5, r3
 800a942:	da13      	bge.n	800a96c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a944:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800a948:	4296      	cmp	r6, r2
 800a94a:	db0f      	blt.n	800a96c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a94c:	8963      	ldrh	r3, [r4, #10]
 800a94e:	b292      	uxth	r2, r2
 800a950:	4413      	add	r3, r2
 800a952:	b21b      	sxth	r3, r3
 800a954:	429e      	cmp	r6, r3
 800a956:	da09      	bge.n	800a96c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a958:	6823      	ldr	r3, [r4, #0]
 800a95a:	1ab2      	subs	r2, r6, r2
 800a95c:	1a69      	subs	r1, r5, r1
 800a95e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800a962:	b212      	sxth	r2, r2
 800a964:	463b      	mov	r3, r7
 800a966:	b209      	sxth	r1, r1
 800a968:	4620      	mov	r0, r4
 800a96a:	47c0      	blx	r8
 800a96c:	69a4      	ldr	r4, [r4, #24]
 800a96e:	e7db      	b.n	800a928 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800a970:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a974 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800a974:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a978:	4c6e      	ldr	r4, [pc, #440]	; (800ab34 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800a97a:	b0a1      	sub	sp, #132	; 0x84
 800a97c:	6824      	ldr	r4, [r4, #0]
 800a97e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800a980:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800a984:	9303      	str	r3, [sp, #12]
 800a986:	2400      	movs	r4, #0
 800a988:	802c      	strh	r4, [r5, #0]
 800a98a:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800a98c:	802c      	strh	r4, [r5, #0]
 800a98e:	601c      	str	r4, [r3, #0]
 800a990:	4606      	mov	r6, r0
 800a992:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800a996:	f7ff ffbd 	bl	800a914 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800a99a:	f1b9 0f03 	cmp.w	r9, #3
 800a99e:	f340 80c2 	ble.w	800ab26 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800a9a2:	4631      	mov	r1, r6
 800a9a4:	a80c      	add	r0, sp, #48	; 0x30
 800a9a6:	f007 fa9b 	bl	8011ee0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a9aa:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800a9ae:	9306      	str	r3, [sp, #24]
 800a9b0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800a9b4:	9307      	str	r3, [sp, #28]
 800a9b6:	9b03      	ldr	r3, [sp, #12]
 800a9b8:	f8d3 a000 	ldr.w	sl, [r3]
 800a9bc:	f1ba 0f00 	cmp.w	sl, #0
 800a9c0:	f000 80b4 	beq.w	800ab2c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800a9c4:	4651      	mov	r1, sl
 800a9c6:	a810      	add	r0, sp, #64	; 0x40
 800a9c8:	f007 fa8a 	bl	8011ee0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a9cc:	9b01      	ldr	r3, [sp, #4]
 800a9ce:	9a06      	ldr	r2, [sp, #24]
 800a9d0:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800a9d4:	189d      	adds	r5, r3, r2
 800a9d6:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800a9da:	9a07      	ldr	r2, [sp, #28]
 800a9dc:	2002      	movs	r0, #2
 800a9de:	fb91 f1f0 	sdiv	r1, r1, r0
 800a9e2:	4419      	add	r1, r3
 800a9e4:	1a6d      	subs	r5, r5, r1
 800a9e6:	9b02      	ldr	r3, [sp, #8]
 800a9e8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800a9ec:	4413      	add	r3, r2
 800a9ee:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800a9f2:	fb92 f2f0 	sdiv	r2, r2, r0
 800a9f6:	440a      	add	r2, r1
 800a9f8:	1a9b      	subs	r3, r3, r2
 800a9fa:	435b      	muls	r3, r3
 800a9fc:	fb05 3505 	mla	r5, r5, r5, r3
 800aa00:	4f4d      	ldr	r7, [pc, #308]	; (800ab38 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800aa02:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800aa04:	ac10      	add	r4, sp, #64	; 0x40
 800aa06:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800aa08:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800aa0a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800aa0c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800aa0e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800aa10:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800aa14:	f1b9 0f0c 	cmp.w	r9, #12
 800aa18:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800aa1c:	f04f 0303 	mov.w	r3, #3
 800aa20:	bfc8      	it	gt
 800aa22:	4698      	movgt	r8, r3
 800aa24:	f8cd 9000 	str.w	r9, [sp]
 800aa28:	f04f 0400 	mov.w	r4, #0
 800aa2c:	bfdc      	itt	le
 800aa2e:	f109 32ff 	addle.w	r2, r9, #4294967295
 800aa32:	fb92 f8f3 	sdivle	r8, r2, r3
 800aa36:	1c63      	adds	r3, r4, #1
 800aa38:	aa10      	add	r2, sp, #64	; 0x40
 800aa3a:	f004 0401 	and.w	r4, r4, #1
 800aa3e:	9308      	str	r3, [sp, #32]
 800aa40:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800aa44:	9b00      	ldr	r3, [sp, #0]
 800aa46:	fb93 f3f8 	sdiv	r3, r3, r8
 800aa4a:	b29b      	uxth	r3, r3
 800aa4c:	3404      	adds	r4, #4
 800aa4e:	f04f 0b00 	mov.w	fp, #0
 800aa52:	9304      	str	r3, [sp, #16]
 800aa54:	9a04      	ldr	r2, [sp, #16]
 800aa56:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800aa5a:	fb13 f302 	smulbb	r3, r3, r2
 800aa5e:	9a01      	ldr	r2, [sp, #4]
 800aa60:	b29b      	uxth	r3, r3
 800aa62:	1899      	adds	r1, r3, r2
 800aa64:	9305      	str	r3, [sp, #20]
 800aa66:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800aa6a:	b209      	sxth	r1, r1
 800aa6c:	4299      	cmp	r1, r3
 800aa6e:	db4d      	blt.n	800ab0c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800aa70:	8932      	ldrh	r2, [r6, #8]
 800aa72:	4413      	add	r3, r2
 800aa74:	b21b      	sxth	r3, r3
 800aa76:	4299      	cmp	r1, r3
 800aa78:	da48      	bge.n	800ab0c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800aa7a:	9b04      	ldr	r3, [sp, #16]
 800aa7c:	6827      	ldr	r7, [r4, #0]
 800aa7e:	fb17 f703 	smulbb	r7, r7, r3
 800aa82:	9b02      	ldr	r3, [sp, #8]
 800aa84:	b2bf      	uxth	r7, r7
 800aa86:	18fa      	adds	r2, r7, r3
 800aa88:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800aa8c:	b212      	sxth	r2, r2
 800aa8e:	429a      	cmp	r2, r3
 800aa90:	db3c      	blt.n	800ab0c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800aa92:	8970      	ldrh	r0, [r6, #10]
 800aa94:	4403      	add	r3, r0
 800aa96:	b21b      	sxth	r3, r3
 800aa98:	429a      	cmp	r2, r3
 800aa9a:	da37      	bge.n	800ab0c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800aa9c:	2300      	movs	r3, #0
 800aa9e:	930b      	str	r3, [sp, #44]	; 0x2c
 800aaa0:	4630      	mov	r0, r6
 800aaa2:	ab0b      	add	r3, sp, #44	; 0x2c
 800aaa4:	f7ff ff36 	bl	800a914 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800aaa8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800aaaa:	b37a      	cbz	r2, 800ab0c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800aaac:	4552      	cmp	r2, sl
 800aaae:	d02d      	beq.n	800ab0c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800aab0:	4611      	mov	r1, r2
 800aab2:	a80e      	add	r0, sp, #56	; 0x38
 800aab4:	9209      	str	r2, [sp, #36]	; 0x24
 800aab6:	f007 fa13 	bl	8011ee0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800aaba:	9a06      	ldr	r2, [sp, #24]
 800aabc:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800aac0:	9b01      	ldr	r3, [sp, #4]
 800aac2:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800aac6:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800aaca:	4413      	add	r3, r2
 800aacc:	f04f 0e02 	mov.w	lr, #2
 800aad0:	fb91 f1fe 	sdiv	r1, r1, lr
 800aad4:	4401      	add	r1, r0
 800aad6:	1a58      	subs	r0, r3, r1
 800aad8:	9a07      	ldr	r2, [sp, #28]
 800aada:	9b02      	ldr	r3, [sp, #8]
 800aadc:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800aae0:	fb9c fcfe 	sdiv	ip, ip, lr
 800aae4:	4413      	add	r3, r2
 800aae6:	448c      	add	ip, r1
 800aae8:	eba3 030c 	sub.w	r3, r3, ip
 800aaec:	435b      	muls	r3, r3
 800aaee:	fb00 3300 	mla	r3, r0, r0, r3
 800aaf2:	42ab      	cmp	r3, r5
 800aaf4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800aaf6:	d208      	bcs.n	800ab0a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800aaf8:	9803      	ldr	r0, [sp, #12]
 800aafa:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800aafc:	6001      	str	r1, [r0, #0]
 800aafe:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800ab00:	9805      	ldr	r0, [sp, #20]
 800ab02:	8008      	strh	r0, [r1, #0]
 800ab04:	992b      	ldr	r1, [sp, #172]	; 0xac
 800ab06:	461d      	mov	r5, r3
 800ab08:	800f      	strh	r7, [r1, #0]
 800ab0a:	4692      	mov	sl, r2
 800ab0c:	f10b 0b01 	add.w	fp, fp, #1
 800ab10:	f1bb 0f04 	cmp.w	fp, #4
 800ab14:	f104 0408 	add.w	r4, r4, #8
 800ab18:	d19c      	bne.n	800aa54 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800ab1a:	9b00      	ldr	r3, [sp, #0]
 800ab1c:	9c08      	ldr	r4, [sp, #32]
 800ab1e:	444b      	add	r3, r9
 800ab20:	4544      	cmp	r4, r8
 800ab22:	9300      	str	r3, [sp, #0]
 800ab24:	d187      	bne.n	800aa36 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800ab26:	b021      	add	sp, #132	; 0x84
 800ab28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ab2c:	f04f 35ff 	mov.w	r5, #4294967295
 800ab30:	e766      	b.n	800aa00 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800ab32:	bf00      	nop
 800ab34:	20015488 	.word	0x20015488
 800ab38:	0802186c 	.word	0x0802186c

0800ab3c <_ZN8touchgfx4RectaNERKS0_>:
 800ab3c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ab40:	f9b1 7000 	ldrsh.w	r7, [r1]
 800ab44:	888c      	ldrh	r4, [r1, #4]
 800ab46:	f9b0 9000 	ldrsh.w	r9, [r0]
 800ab4a:	443c      	add	r4, r7
 800ab4c:	b2a4      	uxth	r4, r4
 800ab4e:	fa0f f884 	sxth.w	r8, r4
 800ab52:	45c1      	cmp	r9, r8
 800ab54:	da2f      	bge.n	800abb6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ab56:	8882      	ldrh	r2, [r0, #4]
 800ab58:	444a      	add	r2, r9
 800ab5a:	b292      	uxth	r2, r2
 800ab5c:	fa0f fe82 	sxth.w	lr, r2
 800ab60:	4577      	cmp	r7, lr
 800ab62:	da28      	bge.n	800abb6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ab64:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800ab68:	88cb      	ldrh	r3, [r1, #6]
 800ab6a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800ab6e:	442b      	add	r3, r5
 800ab70:	b21b      	sxth	r3, r3
 800ab72:	429e      	cmp	r6, r3
 800ab74:	da1f      	bge.n	800abb6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ab76:	88c3      	ldrh	r3, [r0, #6]
 800ab78:	4433      	add	r3, r6
 800ab7a:	b29b      	uxth	r3, r3
 800ab7c:	fa0f fc83 	sxth.w	ip, r3
 800ab80:	4565      	cmp	r5, ip
 800ab82:	da18      	bge.n	800abb6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ab84:	454f      	cmp	r7, r9
 800ab86:	bfb8      	it	lt
 800ab88:	464f      	movlt	r7, r9
 800ab8a:	42b5      	cmp	r5, r6
 800ab8c:	bfb8      	it	lt
 800ab8e:	4635      	movlt	r5, r6
 800ab90:	45f0      	cmp	r8, lr
 800ab92:	bfd8      	it	le
 800ab94:	4622      	movle	r2, r4
 800ab96:	1bd2      	subs	r2, r2, r7
 800ab98:	8082      	strh	r2, [r0, #4]
 800ab9a:	884a      	ldrh	r2, [r1, #2]
 800ab9c:	88c9      	ldrh	r1, [r1, #6]
 800ab9e:	8007      	strh	r7, [r0, #0]
 800aba0:	440a      	add	r2, r1
 800aba2:	b292      	uxth	r2, r2
 800aba4:	b211      	sxth	r1, r2
 800aba6:	458c      	cmp	ip, r1
 800aba8:	bfa8      	it	ge
 800abaa:	4613      	movge	r3, r2
 800abac:	1b5b      	subs	r3, r3, r5
 800abae:	80c3      	strh	r3, [r0, #6]
 800abb0:	8045      	strh	r5, [r0, #2]
 800abb2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800abb6:	2300      	movs	r3, #0
 800abb8:	8003      	strh	r3, [r0, #0]
 800abba:	8043      	strh	r3, [r0, #2]
 800abbc:	8083      	strh	r3, [r0, #4]
 800abbe:	80c3      	strh	r3, [r0, #6]
 800abc0:	e7f7      	b.n	800abb2 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800abc2 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800abc2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800abc6:	2b00      	cmp	r3, #0
 800abc8:	dd06      	ble.n	800abd8 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800abca:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800abce:	2800      	cmp	r0, #0
 800abd0:	bfcc      	ite	gt
 800abd2:	2000      	movgt	r0, #0
 800abd4:	2001      	movle	r0, #1
 800abd6:	4770      	bx	lr
 800abd8:	2001      	movs	r0, #1
 800abda:	4770      	bx	lr

0800abdc <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800abdc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800abe0:	2300      	movs	r3, #0
 800abe2:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800abe4:	8003      	strh	r3, [r0, #0]
 800abe6:	4604      	mov	r4, r0
 800abe8:	8043      	strh	r3, [r0, #2]
 800abea:	8083      	strh	r3, [r0, #4]
 800abec:	80c3      	strh	r3, [r0, #6]
 800abee:	2d00      	cmp	r5, #0
 800abf0:	d040      	beq.n	800ac74 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800abf2:	1d28      	adds	r0, r5, #4
 800abf4:	f7ff ffe5 	bl	800abc2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800abf8:	b988      	cbnz	r0, 800ac1e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800abfa:	4620      	mov	r0, r4
 800abfc:	f7ff ffe1 	bl	800abc2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ac00:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800ac04:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800ac08:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800ac0c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800ac10:	b138      	cbz	r0, 800ac22 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800ac12:	8022      	strh	r2, [r4, #0]
 800ac14:	8063      	strh	r3, [r4, #2]
 800ac16:	f8a4 e004 	strh.w	lr, [r4, #4]
 800ac1a:	f8a4 c006 	strh.w	ip, [r4, #6]
 800ac1e:	69ad      	ldr	r5, [r5, #24]
 800ac20:	e7e5      	b.n	800abee <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800ac22:	f9b4 0000 	ldrsh.w	r0, [r4]
 800ac26:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800ac2a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800ac2e:	4290      	cmp	r0, r2
 800ac30:	4607      	mov	r7, r0
 800ac32:	bfa8      	it	ge
 800ac34:	4617      	movge	r7, r2
 800ac36:	4472      	add	r2, lr
 800ac38:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800ac3c:	8027      	strh	r7, [r4, #0]
 800ac3e:	4299      	cmp	r1, r3
 800ac40:	460e      	mov	r6, r1
 800ac42:	4440      	add	r0, r8
 800ac44:	bfa8      	it	ge
 800ac46:	461e      	movge	r6, r3
 800ac48:	4471      	add	r1, lr
 800ac4a:	4463      	add	r3, ip
 800ac4c:	b200      	sxth	r0, r0
 800ac4e:	b212      	sxth	r2, r2
 800ac50:	b209      	sxth	r1, r1
 800ac52:	b21b      	sxth	r3, r3
 800ac54:	4290      	cmp	r0, r2
 800ac56:	bfac      	ite	ge
 800ac58:	ebc7 0200 	rsbge	r2, r7, r0
 800ac5c:	ebc7 0202 	rsblt	r2, r7, r2
 800ac60:	4299      	cmp	r1, r3
 800ac62:	bfac      	ite	ge
 800ac64:	ebc6 0301 	rsbge	r3, r6, r1
 800ac68:	ebc6 0303 	rsblt	r3, r6, r3
 800ac6c:	8066      	strh	r6, [r4, #2]
 800ac6e:	80a2      	strh	r2, [r4, #4]
 800ac70:	80e3      	strh	r3, [r4, #6]
 800ac72:	e7d4      	b.n	800ac1e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800ac74:	4620      	mov	r0, r4
 800ac76:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ac7a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800ac7a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800ac7e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800ac82:	b383      	cbz	r3, 800ace6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800ac84:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ac86:	b374      	cbz	r4, 800ace6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800ac88:	f9b1 5000 	ldrsh.w	r5, [r1]
 800ac8c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800ac90:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800ac94:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800ac98:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800ac9c:	b303      	cbz	r3, 800ace0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800ac9e:	4668      	mov	r0, sp
 800aca0:	1d21      	adds	r1, r4, #4
 800aca2:	f8ad 5000 	strh.w	r5, [sp]
 800aca6:	f8ad 6002 	strh.w	r6, [sp, #2]
 800acaa:	f8ad 7004 	strh.w	r7, [sp, #4]
 800acae:	f8ad 8006 	strh.w	r8, [sp, #6]
 800acb2:	f7ff ff43 	bl	800ab3c <_ZN8touchgfx4RectaNERKS0_>
 800acb6:	4668      	mov	r0, sp
 800acb8:	f7ff ff83 	bl	800abc2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800acbc:	b980      	cbnz	r0, 800ace0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800acbe:	f8bd 3000 	ldrh.w	r3, [sp]
 800acc2:	88a2      	ldrh	r2, [r4, #4]
 800acc4:	1a9b      	subs	r3, r3, r2
 800acc6:	f8ad 3000 	strh.w	r3, [sp]
 800acca:	88e2      	ldrh	r2, [r4, #6]
 800accc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800acd0:	1a9b      	subs	r3, r3, r2
 800acd2:	f8ad 3002 	strh.w	r3, [sp, #2]
 800acd6:	6823      	ldr	r3, [r4, #0]
 800acd8:	4669      	mov	r1, sp
 800acda:	689b      	ldr	r3, [r3, #8]
 800acdc:	4620      	mov	r0, r4
 800acde:	4798      	blx	r3
 800ace0:	69a4      	ldr	r4, [r4, #24]
 800ace2:	2c00      	cmp	r4, #0
 800ace4:	d1d8      	bne.n	800ac98 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800ace6:	b002      	add	sp, #8
 800ace8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800acec <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800acec:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800acee:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800acf2:	460d      	mov	r5, r1
 800acf4:	4616      	mov	r6, r2
 800acf6:	b323      	cbz	r3, 800ad42 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800acf8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800acfa:	b314      	cbz	r4, 800ad42 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800acfc:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800ad00:	b1eb      	cbz	r3, 800ad3e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800ad02:	6828      	ldr	r0, [r5, #0]
 800ad04:	6869      	ldr	r1, [r5, #4]
 800ad06:	466b      	mov	r3, sp
 800ad08:	c303      	stmia	r3!, {r0, r1}
 800ad0a:	4668      	mov	r0, sp
 800ad0c:	1d21      	adds	r1, r4, #4
 800ad0e:	f7ff ff15 	bl	800ab3c <_ZN8touchgfx4RectaNERKS0_>
 800ad12:	4668      	mov	r0, sp
 800ad14:	f7ff ff55 	bl	800abc2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ad18:	b988      	cbnz	r0, 800ad3e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800ad1a:	f8bd 3000 	ldrh.w	r3, [sp]
 800ad1e:	88a2      	ldrh	r2, [r4, #4]
 800ad20:	1a9b      	subs	r3, r3, r2
 800ad22:	f8ad 3000 	strh.w	r3, [sp]
 800ad26:	88e2      	ldrh	r2, [r4, #6]
 800ad28:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ad2c:	1a9b      	subs	r3, r3, r2
 800ad2e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800ad32:	6823      	ldr	r3, [r4, #0]
 800ad34:	4632      	mov	r2, r6
 800ad36:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800ad38:	4669      	mov	r1, sp
 800ad3a:	4620      	mov	r0, r4
 800ad3c:	4798      	blx	r3
 800ad3e:	69a4      	ldr	r4, [r4, #24]
 800ad40:	e7db      	b.n	800acfa <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800ad42:	b002      	add	sp, #8
 800ad44:	bd70      	pop	{r4, r5, r6, pc}

0800ad46 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800ad46:	b513      	push	{r0, r1, r4, lr}
 800ad48:	6803      	ldr	r3, [r0, #0]
 800ad4a:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800ad4e:	2300      	movs	r3, #0
 800ad50:	e9cd 3300 	strd	r3, r3, [sp]
 800ad54:	466b      	mov	r3, sp
 800ad56:	47a0      	blx	r4
 800ad58:	b002      	add	sp, #8
 800ad5a:	bd10      	pop	{r4, pc}

0800ad5c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800ad5c:	2301      	movs	r3, #1
 800ad5e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800ad62:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800ad66:	4770      	bx	lr

0800ad68 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800ad68:	2301      	movs	r3, #1
 800ad6a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800ad6e:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800ad72:	4770      	bx	lr

0800ad74 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800ad74:	6843      	ldr	r3, [r0, #4]
 800ad76:	2201      	movs	r2, #1
 800ad78:	725a      	strb	r2, [r3, #9]
 800ad7a:	6840      	ldr	r0, [r0, #4]
 800ad7c:	6803      	ldr	r3, [r0, #0]
 800ad7e:	691b      	ldr	r3, [r3, #16]
 800ad80:	4718      	bx	r3

0800ad82 <_ZN8touchgfx3HAL8flushDMAEv>:
 800ad82:	6840      	ldr	r0, [r0, #4]
 800ad84:	6803      	ldr	r3, [r0, #0]
 800ad86:	689b      	ldr	r3, [r3, #8]
 800ad88:	4718      	bx	r3

0800ad8a <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800ad8a:	b530      	push	{r4, r5, lr}
 800ad8c:	b08b      	sub	sp, #44	; 0x2c
 800ad8e:	6804      	ldr	r4, [r0, #0]
 800ad90:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800ad94:	9509      	str	r5, [sp, #36]	; 0x24
 800ad96:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800ad9a:	9508      	str	r5, [sp, #32]
 800ad9c:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800ada0:	9507      	str	r5, [sp, #28]
 800ada2:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800ada6:	9506      	str	r5, [sp, #24]
 800ada8:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800adac:	9505      	str	r5, [sp, #20]
 800adae:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800adb2:	9504      	str	r5, [sp, #16]
 800adb4:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800adb8:	9503      	str	r5, [sp, #12]
 800adba:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800adbe:	9502      	str	r5, [sp, #8]
 800adc0:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800adc4:	e9cd 3500 	strd	r3, r5, [sp]
 800adc8:	4613      	mov	r3, r2
 800adca:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800adcc:	2200      	movs	r2, #0
 800adce:	47a0      	blx	r4
 800add0:	b00b      	add	sp, #44	; 0x2c
 800add2:	bd30      	pop	{r4, r5, pc}

0800add4 <_ZN8touchgfx3HAL10beginFrameEv>:
 800add4:	4b04      	ldr	r3, [pc, #16]	; (800ade8 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800add6:	781b      	ldrb	r3, [r3, #0]
 800add8:	b123      	cbz	r3, 800ade4 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800adda:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800adde:	f080 0001 	eor.w	r0, r0, #1
 800ade2:	4770      	bx	lr
 800ade4:	2001      	movs	r0, #1
 800ade6:	4770      	bx	lr
 800ade8:	20015486 	.word	0x20015486

0800adec <_ZN8touchgfx3HAL8endFrameEv>:
 800adec:	b510      	push	{r4, lr}
 800adee:	4604      	mov	r4, r0
 800adf0:	6840      	ldr	r0, [r0, #4]
 800adf2:	6803      	ldr	r3, [r0, #0]
 800adf4:	689b      	ldr	r3, [r3, #8]
 800adf6:	4798      	blx	r3
 800adf8:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 800adfc:	b113      	cbz	r3, 800ae04 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800adfe:	2301      	movs	r3, #1
 800ae00:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800ae04:	bd10      	pop	{r4, pc}

0800ae06 <_ZN8touchgfx3HAL10initializeEv>:
 800ae06:	b510      	push	{r4, lr}
 800ae08:	4604      	mov	r4, r0
 800ae0a:	f7f5 fd6d 	bl	80008e8 <_ZN8touchgfx10OSWrappers10initializeEv>
 800ae0e:	6860      	ldr	r0, [r4, #4]
 800ae10:	6803      	ldr	r3, [r0, #0]
 800ae12:	68db      	ldr	r3, [r3, #12]
 800ae14:	4798      	blx	r3
 800ae16:	68e0      	ldr	r0, [r4, #12]
 800ae18:	6803      	ldr	r3, [r0, #0]
 800ae1a:	689b      	ldr	r3, [r3, #8]
 800ae1c:	4798      	blx	r3
 800ae1e:	6823      	ldr	r3, [r4, #0]
 800ae20:	4620      	mov	r0, r4
 800ae22:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800ae24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ae28:	4718      	bx	r3
	...

0800ae2c <_ZN8touchgfx3HAL4tickEv>:
 800ae2c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ae2e:	6803      	ldr	r3, [r0, #0]
 800ae30:	4d5b      	ldr	r5, [pc, #364]	; (800afa0 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800ae32:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800ae36:	4604      	mov	r4, r0
 800ae38:	4798      	blx	r3
 800ae3a:	2800      	cmp	r0, #0
 800ae3c:	f000 8095 	beq.w	800af6a <_ZN8touchgfx3HAL4tickEv+0x13e>
 800ae40:	2001      	movs	r0, #1
 800ae42:	f7f5 fc7d 	bl	8000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800ae46:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 800ae4a:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800ae4e:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800ae52:	2600      	movs	r6, #0
 800ae54:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800ae58:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800ae5c:	b133      	cbz	r3, 800ae6c <_ZN8touchgfx3HAL4tickEv+0x40>
 800ae5e:	6823      	ldr	r3, [r4, #0]
 800ae60:	4620      	mov	r0, r4
 800ae62:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800ae66:	4798      	blx	r3
 800ae68:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 800ae6c:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800ae70:	6862      	ldr	r2, [r4, #4]
 800ae72:	f083 0301 	eor.w	r3, r3, #1
 800ae76:	7253      	strb	r3, [r2, #9]
 800ae78:	2601      	movs	r6, #1
 800ae7a:	702e      	strb	r6, [r5, #0]
 800ae7c:	f005 fffe 	bl	8010e7c <_ZN8touchgfx11Application11getInstanceEv>
 800ae80:	6803      	ldr	r3, [r0, #0]
 800ae82:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ae84:	4798      	blx	r3
 800ae86:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800ae8a:	b90b      	cbnz	r3, 800ae90 <_ZN8touchgfx3HAL4tickEv+0x64>
 800ae8c:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 800ae90:	f005 fff4 	bl	8010e7c <_ZN8touchgfx11Application11getInstanceEv>
 800ae94:	6803      	ldr	r3, [r0, #0]
 800ae96:	695b      	ldr	r3, [r3, #20]
 800ae98:	4798      	blx	r3
 800ae9a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800ae9c:	6803      	ldr	r3, [r0, #0]
 800ae9e:	691b      	ldr	r3, [r3, #16]
 800aea0:	4798      	blx	r3
 800aea2:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800aea6:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800aeaa:	3b01      	subs	r3, #1
 800aeac:	b2db      	uxtb	r3, r3
 800aeae:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800aeb2:	b10a      	cbz	r2, 800aeb8 <_ZN8touchgfx3HAL4tickEv+0x8c>
 800aeb4:	2b00      	cmp	r3, #0
 800aeb6:	d1eb      	bne.n	800ae90 <_ZN8touchgfx3HAL4tickEv+0x64>
 800aeb8:	4a3a      	ldr	r2, [pc, #232]	; (800afa4 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800aeba:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 800aebe:	7813      	ldrb	r3, [r2, #0]
 800aec0:	3301      	adds	r3, #1
 800aec2:	b25b      	sxtb	r3, r3
 800aec4:	4299      	cmp	r1, r3
 800aec6:	7013      	strb	r3, [r2, #0]
 800aec8:	dc10      	bgt.n	800aeec <_ZN8touchgfx3HAL4tickEv+0xc0>
 800aeca:	68e0      	ldr	r0, [r4, #12]
 800aecc:	2300      	movs	r3, #0
 800aece:	7013      	strb	r3, [r2, #0]
 800aed0:	6803      	ldr	r3, [r0, #0]
 800aed2:	aa03      	add	r2, sp, #12
 800aed4:	68db      	ldr	r3, [r3, #12]
 800aed6:	a902      	add	r1, sp, #8
 800aed8:	4798      	blx	r3
 800aeda:	6823      	ldr	r3, [r4, #0]
 800aedc:	2800      	cmp	r0, #0
 800aede:	d050      	beq.n	800af82 <_ZN8touchgfx3HAL4tickEv+0x156>
 800aee0:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800aee4:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800aee8:	4620      	mov	r0, r4
 800aeea:	4798      	blx	r3
 800aeec:	6960      	ldr	r0, [r4, #20]
 800aeee:	2300      	movs	r3, #0
 800aef0:	f88d 3007 	strb.w	r3, [sp, #7]
 800aef4:	b158      	cbz	r0, 800af0e <_ZN8touchgfx3HAL4tickEv+0xe2>
 800aef6:	6803      	ldr	r3, [r0, #0]
 800aef8:	f10d 0107 	add.w	r1, sp, #7
 800aefc:	68db      	ldr	r3, [r3, #12]
 800aefe:	4798      	blx	r3
 800af00:	b128      	cbz	r0, 800af0e <_ZN8touchgfx3HAL4tickEv+0xe2>
 800af02:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800af04:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800af08:	6803      	ldr	r3, [r0, #0]
 800af0a:	68db      	ldr	r3, [r3, #12]
 800af0c:	4798      	blx	r3
 800af0e:	f104 001c 	add.w	r0, r4, #28
 800af12:	f014 ff07 	bl	801fd24 <_ZN8touchgfx8Gestures4tickEv>
 800af16:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800af1a:	b30b      	cbz	r3, 800af60 <_ZN8touchgfx3HAL4tickEv+0x134>
 800af1c:	6920      	ldr	r0, [r4, #16]
 800af1e:	6803      	ldr	r3, [r0, #0]
 800af20:	691b      	ldr	r3, [r3, #16]
 800af22:	4798      	blx	r3
 800af24:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800af26:	4606      	mov	r6, r0
 800af28:	b903      	cbnz	r3, 800af2c <_ZN8touchgfx3HAL4tickEv+0x100>
 800af2a:	6720      	str	r0, [r4, #112]	; 0x70
 800af2c:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800af2e:	4a1e      	ldr	r2, [pc, #120]	; (800afa8 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800af30:	1af3      	subs	r3, r6, r3
 800af32:	4293      	cmp	r3, r2
 800af34:	d914      	bls.n	800af60 <_ZN8touchgfx3HAL4tickEv+0x134>
 800af36:	6920      	ldr	r0, [r4, #16]
 800af38:	6803      	ldr	r3, [r0, #0]
 800af3a:	699b      	ldr	r3, [r3, #24]
 800af3c:	4798      	blx	r3
 800af3e:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800af40:	2264      	movs	r2, #100	; 0x64
 800af42:	1af3      	subs	r3, r6, r3
 800af44:	fbb3 f3f2 	udiv	r3, r3, r2
 800af48:	fbb0 f0f3 	udiv	r0, r0, r3
 800af4c:	2800      	cmp	r0, #0
 800af4e:	dc1d      	bgt.n	800af8c <_ZN8touchgfx3HAL4tickEv+0x160>
 800af50:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800af54:	6920      	ldr	r0, [r4, #16]
 800af56:	6803      	ldr	r3, [r0, #0]
 800af58:	2100      	movs	r1, #0
 800af5a:	69db      	ldr	r3, [r3, #28]
 800af5c:	4798      	blx	r3
 800af5e:	6726      	str	r6, [r4, #112]	; 0x70
 800af60:	f005 ff8c 	bl	8010e7c <_ZN8touchgfx11Application11getInstanceEv>
 800af64:	6803      	ldr	r3, [r0, #0]
 800af66:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800af68:	4798      	blx	r3
 800af6a:	6823      	ldr	r3, [r4, #0]
 800af6c:	4620      	mov	r0, r4
 800af6e:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800af72:	4798      	blx	r3
 800af74:	2001      	movs	r0, #1
 800af76:	f7f5 fbe4 	bl	8000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800af7a:	2300      	movs	r3, #0
 800af7c:	702b      	strb	r3, [r5, #0]
 800af7e:	b004      	add	sp, #16
 800af80:	bd70      	pop	{r4, r5, r6, pc}
 800af82:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800af86:	4620      	mov	r0, r4
 800af88:	4798      	blx	r3
 800af8a:	e7af      	b.n	800aeec <_ZN8touchgfx3HAL4tickEv+0xc0>
 800af8c:	2863      	cmp	r0, #99	; 0x63
 800af8e:	bfcb      	itete	gt
 800af90:	2300      	movgt	r3, #0
 800af92:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800af96:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800af9a:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800af9e:	e7d9      	b.n	800af54 <_ZN8touchgfx3HAL4tickEv+0x128>
 800afa0:	2001548c 	.word	0x2001548c
 800afa4:	2001548d 	.word	0x2001548d
 800afa8:	05f5e100 	.word	0x05f5e100

0800afac <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800afac:	f7f5 bccc 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800afb0 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800afb0:	6581      	str	r1, [r0, #88]	; 0x58
 800afb2:	301c      	adds	r0, #28
 800afb4:	f014 beb4 	b.w	801fd20 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800afb8 <_ZN8touchgfx3HAL5touchEll>:
 800afb8:	b530      	push	{r4, r5, lr}
 800afba:	b087      	sub	sp, #28
 800afbc:	4604      	mov	r4, r0
 800afbe:	a804      	add	r0, sp, #16
 800afc0:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800afc4:	f005 fd1c 	bl	8010a00 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800afc8:	9b04      	ldr	r3, [sp, #16]
 800afca:	f8ad 300c 	strh.w	r3, [sp, #12]
 800afce:	a906      	add	r1, sp, #24
 800afd0:	9b05      	ldr	r3, [sp, #20]
 800afd2:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800afd6:	a803      	add	r0, sp, #12
 800afd8:	f005 fd64 	bl	8010aa4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800afdc:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800afe0:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800afe4:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800afe8:	f104 001c 	add.w	r0, r4, #28
 800afec:	b189      	cbz	r1, 800b012 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800afee:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800aff2:	9300      	str	r3, [sp, #0]
 800aff4:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800aff8:	4613      	mov	r3, r2
 800affa:	462a      	mov	r2, r5
 800affc:	f014 fea0 	bl	801fd40 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800b000:	b128      	cbz	r0, 800b00e <_ZN8touchgfx3HAL5touchEll+0x56>
 800b002:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800b006:	65e3      	str	r3, [r4, #92]	; 0x5c
 800b008:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800b00c:	6623      	str	r3, [r4, #96]	; 0x60
 800b00e:	b007      	add	sp, #28
 800b010:	bd30      	pop	{r4, r5, pc}
 800b012:	f014 fed5 	bl	801fdc0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b016:	2301      	movs	r3, #1
 800b018:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800b01c:	e7f1      	b.n	800b002 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800b01e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800b01e:	b510      	push	{r4, lr}
 800b020:	2b00      	cmp	r3, #0
 800b022:	d046      	beq.n	800b0b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b024:	ea81 0002 	eor.w	r0, r1, r2
 800b028:	07c4      	lsls	r4, r0, #31
 800b02a:	d508      	bpl.n	800b03e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800b02c:	440b      	add	r3, r1
 800b02e:	3a01      	subs	r2, #1
 800b030:	428b      	cmp	r3, r1
 800b032:	d93e      	bls.n	800b0b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b034:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b038:	f801 0b01 	strb.w	r0, [r1], #1
 800b03c:	e7f8      	b.n	800b030 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800b03e:	07d0      	lsls	r0, r2, #31
 800b040:	bf42      	ittt	mi
 800b042:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800b046:	f801 0b01 	strbmi.w	r0, [r1], #1
 800b04a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800b04e:	2b01      	cmp	r3, #1
 800b050:	d911      	bls.n	800b076 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b052:	ea81 0402 	eor.w	r4, r1, r2
 800b056:	07a4      	lsls	r4, r4, #30
 800b058:	4610      	mov	r0, r2
 800b05a:	d022      	beq.n	800b0a2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800b05c:	f023 0401 	bic.w	r4, r3, #1
 800b060:	440c      	add	r4, r1
 800b062:	428c      	cmp	r4, r1
 800b064:	4602      	mov	r2, r0
 800b066:	d904      	bls.n	800b072 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800b068:	8812      	ldrh	r2, [r2, #0]
 800b06a:	f821 2b02 	strh.w	r2, [r1], #2
 800b06e:	3002      	adds	r0, #2
 800b070:	e7f7      	b.n	800b062 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800b072:	f003 0301 	and.w	r3, r3, #1
 800b076:	f023 0003 	bic.w	r0, r3, #3
 800b07a:	4408      	add	r0, r1
 800b07c:	4288      	cmp	r0, r1
 800b07e:	4614      	mov	r4, r2
 800b080:	d904      	bls.n	800b08c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800b082:	6824      	ldr	r4, [r4, #0]
 800b084:	f841 4b04 	str.w	r4, [r1], #4
 800b088:	3204      	adds	r2, #4
 800b08a:	e7f7      	b.n	800b07c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800b08c:	f003 0303 	and.w	r3, r3, #3
 800b090:	440b      	add	r3, r1
 800b092:	3a01      	subs	r2, #1
 800b094:	428b      	cmp	r3, r1
 800b096:	d90c      	bls.n	800b0b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b098:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b09c:	f801 0b01 	strb.w	r0, [r1], #1
 800b0a0:	e7f8      	b.n	800b094 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800b0a2:	0790      	lsls	r0, r2, #30
 800b0a4:	d0e7      	beq.n	800b076 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b0a6:	f832 0b02 	ldrh.w	r0, [r2], #2
 800b0aa:	f821 0b02 	strh.w	r0, [r1], #2
 800b0ae:	3b02      	subs	r3, #2
 800b0b0:	e7e1      	b.n	800b076 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b0b2:	2001      	movs	r0, #1
 800b0b4:	bd10      	pop	{r4, pc}

0800b0b6 <_ZN8touchgfx3HAL7noTouchEv>:
 800b0b6:	b510      	push	{r4, lr}
 800b0b8:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800b0bc:	4604      	mov	r4, r0
 800b0be:	b153      	cbz	r3, 800b0d6 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800b0c0:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800b0c4:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800b0c8:	2101      	movs	r1, #1
 800b0ca:	301c      	adds	r0, #28
 800b0cc:	f014 fe78 	bl	801fdc0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b0d0:	2300      	movs	r3, #0
 800b0d2:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800b0d6:	bd10      	pop	{r4, pc}

0800b0d8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800b0d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b0dc:	b085      	sub	sp, #20
 800b0de:	ad04      	add	r5, sp, #16
 800b0e0:	4604      	mov	r4, r0
 800b0e2:	2000      	movs	r0, #0
 800b0e4:	f845 0d04 	str.w	r0, [r5, #-4]!
 800b0e8:	69a0      	ldr	r0, [r4, #24]
 800b0ea:	6806      	ldr	r6, [r0, #0]
 800b0ec:	9501      	str	r5, [sp, #4]
 800b0ee:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800b0f2:	9500      	str	r5, [sp, #0]
 800b0f4:	6835      	ldr	r5, [r6, #0]
 800b0f6:	4699      	mov	r9, r3
 800b0f8:	460f      	mov	r7, r1
 800b0fa:	4690      	mov	r8, r2
 800b0fc:	47a8      	blx	r5
 800b0fe:	4d10      	ldr	r5, [pc, #64]	; (800b140 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800b100:	4606      	mov	r6, r0
 800b102:	f8a5 9000 	strh.w	r9, [r5]
 800b106:	f7f7 fa07 	bl	8002518 <_ZN8touchgfx3HAL3lcdEv>
 800b10a:	6803      	ldr	r3, [r0, #0]
 800b10c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b10e:	4798      	blx	r3
 800b110:	b128      	cbz	r0, 800b11e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800b112:	2801      	cmp	r0, #1
 800b114:	d00b      	beq.n	800b12e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800b116:	4630      	mov	r0, r6
 800b118:	b005      	add	sp, #20
 800b11a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b11e:	882b      	ldrh	r3, [r5, #0]
 800b120:	fb08 7203 	mla	r2, r8, r3, r7
 800b124:	9b03      	ldr	r3, [sp, #12]
 800b126:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800b12a:	63e3      	str	r3, [r4, #60]	; 0x3c
 800b12c:	e7f3      	b.n	800b116 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b12e:	882a      	ldrh	r2, [r5, #0]
 800b130:	9b03      	ldr	r3, [sp, #12]
 800b132:	fb08 7202 	mla	r2, r8, r2, r7
 800b136:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800b13a:	1a9a      	subs	r2, r3, r2
 800b13c:	63e2      	str	r2, [r4, #60]	; 0x3c
 800b13e:	e7ea      	b.n	800b116 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b140:	20015482 	.word	0x20015482

0800b144 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800b144:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b146:	b08b      	sub	sp, #44	; 0x2c
 800b148:	4617      	mov	r7, r2
 800b14a:	4604      	mov	r4, r0
 800b14c:	460e      	mov	r6, r1
 800b14e:	461d      	mov	r5, r3
 800b150:	f7f7 f9e2 	bl	8002518 <_ZN8touchgfx3HAL3lcdEv>
 800b154:	6803      	ldr	r3, [r0, #0]
 800b156:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b158:	4798      	blx	r3
 800b15a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800b15e:	9007      	str	r0, [sp, #28]
 800b160:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b164:	4b0d      	ldr	r3, [pc, #52]	; (800b19c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800b166:	6822      	ldr	r2, [r4, #0]
 800b168:	881b      	ldrh	r3, [r3, #0]
 800b16a:	9306      	str	r3, [sp, #24]
 800b16c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800b170:	9305      	str	r3, [sp, #20]
 800b172:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800b176:	9304      	str	r3, [sp, #16]
 800b178:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b17c:	9303      	str	r3, [sp, #12]
 800b17e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b182:	9302      	str	r3, [sp, #8]
 800b184:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b188:	e9cd 5300 	strd	r5, r3, [sp]
 800b18c:	4631      	mov	r1, r6
 800b18e:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800b190:	463b      	mov	r3, r7
 800b192:	2200      	movs	r2, #0
 800b194:	4620      	mov	r0, r4
 800b196:	47a8      	blx	r5
 800b198:	b00b      	add	sp, #44	; 0x2c
 800b19a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b19c:	20015482 	.word	0x20015482

0800b1a0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800b1a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b1a4:	4698      	mov	r8, r3
 800b1a6:	6803      	ldr	r3, [r0, #0]
 800b1a8:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800b1aa:	4b15      	ldr	r3, [pc, #84]	; (800b200 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800b1ac:	b08b      	sub	sp, #44	; 0x2c
 800b1ae:	4617      	mov	r7, r2
 800b1b0:	f8b3 9000 	ldrh.w	r9, [r3]
 800b1b4:	460e      	mov	r6, r1
 800b1b6:	4604      	mov	r4, r0
 800b1b8:	f7f7 f9ae 	bl	8002518 <_ZN8touchgfx3HAL3lcdEv>
 800b1bc:	6803      	ldr	r3, [r0, #0]
 800b1be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b1c0:	4798      	blx	r3
 800b1c2:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800b1c6:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b1ca:	2302      	movs	r3, #2
 800b1cc:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800b1d0:	2301      	movs	r3, #1
 800b1d2:	9305      	str	r3, [sp, #20]
 800b1d4:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800b1d8:	9304      	str	r3, [sp, #16]
 800b1da:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800b1de:	9303      	str	r3, [sp, #12]
 800b1e0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b1e4:	9302      	str	r3, [sp, #8]
 800b1e6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b1ea:	2200      	movs	r2, #0
 800b1ec:	e9cd 8300 	strd	r8, r3, [sp]
 800b1f0:	4631      	mov	r1, r6
 800b1f2:	463b      	mov	r3, r7
 800b1f4:	4620      	mov	r0, r4
 800b1f6:	47a8      	blx	r5
 800b1f8:	b00b      	add	sp, #44	; 0x2c
 800b1fa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b1fe:	bf00      	nop
 800b200:	20015482 	.word	0x20015482

0800b204 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800b204:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b208:	4698      	mov	r8, r3
 800b20a:	6803      	ldr	r3, [r0, #0]
 800b20c:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 800b20e:	4b11      	ldr	r3, [pc, #68]	; (800b254 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800b210:	b087      	sub	sp, #28
 800b212:	f8b3 9000 	ldrh.w	r9, [r3]
 800b216:	460e      	mov	r6, r1
 800b218:	4617      	mov	r7, r2
 800b21a:	4604      	mov	r4, r0
 800b21c:	f7f7 f97c 	bl	8002518 <_ZN8touchgfx3HAL3lcdEv>
 800b220:	6803      	ldr	r3, [r0, #0]
 800b222:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b224:	4798      	blx	r3
 800b226:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800b22a:	f8cd 900c 	str.w	r9, [sp, #12]
 800b22e:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800b232:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800b236:	9302      	str	r3, [sp, #8]
 800b238:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800b23c:	9301      	str	r3, [sp, #4]
 800b23e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800b242:	9300      	str	r3, [sp, #0]
 800b244:	463a      	mov	r2, r7
 800b246:	4643      	mov	r3, r8
 800b248:	4631      	mov	r1, r6
 800b24a:	4620      	mov	r0, r4
 800b24c:	47a8      	blx	r5
 800b24e:	b007      	add	sp, #28
 800b250:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b254:	20015482 	.word	0x20015482

0800b258 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800b258:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b25c:	4604      	mov	r4, r0
 800b25e:	b08f      	sub	sp, #60	; 0x3c
 800b260:	4610      	mov	r0, r2
 800b262:	460d      	mov	r5, r1
 800b264:	4691      	mov	r9, r2
 800b266:	461e      	mov	r6, r3
 800b268:	f008 ffa4 	bl	80141b4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b26c:	2800      	cmp	r0, #0
 800b26e:	f000 809d 	beq.w	800b3ac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800b272:	6823      	ldr	r3, [r4, #0]
 800b274:	f8df b198 	ldr.w	fp, [pc, #408]	; 800b410 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800b278:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b27a:	f8df a198 	ldr.w	sl, [pc, #408]	; 800b414 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800b27e:	4f61      	ldr	r7, [pc, #388]	; (800b404 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b280:	4620      	mov	r0, r4
 800b282:	4798      	blx	r3
 800b284:	6823      	ldr	r3, [r4, #0]
 800b286:	4620      	mov	r0, r4
 800b288:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b28a:	4798      	blx	r3
 800b28c:	f8bb 3000 	ldrh.w	r3, [fp]
 800b290:	9301      	str	r3, [sp, #4]
 800b292:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800b296:	f8ba 3000 	ldrh.w	r3, [sl]
 800b29a:	9302      	str	r3, [sp, #8]
 800b29c:	883b      	ldrh	r3, [r7, #0]
 800b29e:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800b2a2:	9303      	str	r3, [sp, #12]
 800b2a4:	4b58      	ldr	r3, [pc, #352]	; (800b408 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b2a6:	9305      	str	r3, [sp, #20]
 800b2a8:	881a      	ldrh	r2, [r3, #0]
 800b2aa:	9204      	str	r2, [sp, #16]
 800b2ac:	4640      	mov	r0, r8
 800b2ae:	f009 f815 	bl	80142dc <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b2b2:	8038      	strh	r0, [r7, #0]
 800b2b4:	4640      	mov	r0, r8
 800b2b6:	f009 f845 	bl	8014344 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b2ba:	9b05      	ldr	r3, [sp, #20]
 800b2bc:	b280      	uxth	r0, r0
 800b2be:	8018      	strh	r0, [r3, #0]
 800b2c0:	4b52      	ldr	r3, [pc, #328]	; (800b40c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800b2c2:	781b      	ldrb	r3, [r3, #0]
 800b2c4:	2b00      	cmp	r3, #0
 800b2c6:	d174      	bne.n	800b3b2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800b2c8:	883b      	ldrh	r3, [r7, #0]
 800b2ca:	f8ab 3000 	strh.w	r3, [fp]
 800b2ce:	f8aa 0000 	strh.w	r0, [sl]
 800b2d2:	4648      	mov	r0, r9
 800b2d4:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800b2d8:	f008 ff6c 	bl	80141b4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b2dc:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800b2e0:	2200      	movs	r2, #0
 800b2e2:	4611      	mov	r1, r2
 800b2e4:	4628      	mov	r0, r5
 800b2e6:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800b2ea:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800b2ee:	f7f7 fd37 	bl	8002d60 <_ZN8touchgfx8Drawable5setXYEss>
 800b2f2:	2301      	movs	r3, #1
 800b2f4:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800b2f8:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800b2fc:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800b300:	2b00      	cmp	r3, #0
 800b302:	dd5c      	ble.n	800b3be <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b304:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800b308:	2b00      	cmp	r3, #0
 800b30a:	dd58      	ble.n	800b3be <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b30c:	462a      	mov	r2, r5
 800b30e:	ab0a      	add	r3, sp, #40	; 0x28
 800b310:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b314:	6851      	ldr	r1, [r2, #4]
 800b316:	c303      	stmia	r3!, {r0, r1}
 800b318:	4631      	mov	r1, r6
 800b31a:	a80a      	add	r0, sp, #40	; 0x28
 800b31c:	f7ff fc0e 	bl	800ab3c <_ZN8touchgfx4RectaNERKS0_>
 800b320:	4b38      	ldr	r3, [pc, #224]	; (800b404 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b322:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b326:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800b32a:	2100      	movs	r1, #0
 800b32c:	aa0a      	add	r2, sp, #40	; 0x28
 800b32e:	4b36      	ldr	r3, [pc, #216]	; (800b408 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b330:	910c      	str	r1, [sp, #48]	; 0x30
 800b332:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b336:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b33a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800b33e:	ab08      	add	r3, sp, #32
 800b340:	e883 0003 	stmia.w	r3, {r0, r1}
 800b344:	4618      	mov	r0, r3
 800b346:	a90c      	add	r1, sp, #48	; 0x30
 800b348:	f7ff fbf8 	bl	800ab3c <_ZN8touchgfx4RectaNERKS0_>
 800b34c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800b34e:	2b00      	cmp	r3, #0
 800b350:	d13c      	bne.n	800b3cc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800b352:	2000      	movs	r0, #0
 800b354:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 800b358:	2600      	movs	r6, #0
 800b35a:	682a      	ldr	r2, [r5, #0]
 800b35c:	696b      	ldr	r3, [r5, #20]
 800b35e:	616e      	str	r6, [r5, #20]
 800b360:	9305      	str	r3, [sp, #20]
 800b362:	6892      	ldr	r2, [r2, #8]
 800b364:	a908      	add	r1, sp, #32
 800b366:	4628      	mov	r0, r5
 800b368:	4790      	blx	r2
 800b36a:	9b05      	ldr	r3, [sp, #20]
 800b36c:	616b      	str	r3, [r5, #20]
 800b36e:	4652      	mov	r2, sl
 800b370:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 800b374:	4649      	mov	r1, r9
 800b376:	4628      	mov	r0, r5
 800b378:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800b37c:	f7f7 fcf0 	bl	8002d60 <_ZN8touchgfx8Drawable5setXYEss>
 800b380:	4b23      	ldr	r3, [pc, #140]	; (800b410 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800b382:	9a01      	ldr	r2, [sp, #4]
 800b384:	801a      	strh	r2, [r3, #0]
 800b386:	4b23      	ldr	r3, [pc, #140]	; (800b414 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800b388:	9a02      	ldr	r2, [sp, #8]
 800b38a:	801a      	strh	r2, [r3, #0]
 800b38c:	4b1d      	ldr	r3, [pc, #116]	; (800b404 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b38e:	9a03      	ldr	r2, [sp, #12]
 800b390:	801a      	strh	r2, [r3, #0]
 800b392:	4b1d      	ldr	r3, [pc, #116]	; (800b408 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b394:	9a04      	ldr	r2, [sp, #16]
 800b396:	801a      	strh	r2, [r3, #0]
 800b398:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800b39c:	6823      	ldr	r3, [r4, #0]
 800b39e:	4620      	mov	r0, r4
 800b3a0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b3a2:	4798      	blx	r3
 800b3a4:	6823      	ldr	r3, [r4, #0]
 800b3a6:	4620      	mov	r0, r4
 800b3a8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b3aa:	4798      	blx	r3
 800b3ac:	b00f      	add	sp, #60	; 0x3c
 800b3ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b3b2:	883b      	ldrh	r3, [r7, #0]
 800b3b4:	f8ab 0000 	strh.w	r0, [fp]
 800b3b8:	f8aa 3000 	strh.w	r3, [sl]
 800b3bc:	e789      	b.n	800b2d2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800b3be:	462a      	mov	r2, r5
 800b3c0:	ab0a      	add	r3, sp, #40	; 0x28
 800b3c2:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b3c6:	6851      	ldr	r1, [r2, #4]
 800b3c8:	c303      	stmia	r3!, {r0, r1}
 800b3ca:	e7a9      	b.n	800b320 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800b3cc:	a807      	add	r0, sp, #28
 800b3ce:	f009 f8f5 	bl	80145bc <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b3d2:	4606      	mov	r6, r0
 800b3d4:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800b3d6:	6803      	ldr	r3, [r0, #0]
 800b3d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b3da:	4798      	blx	r3
 800b3dc:	4286      	cmp	r6, r0
 800b3de:	d1b8      	bne.n	800b352 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800b3e0:	f7f7 f89a 	bl	8002518 <_ZN8touchgfx3HAL3lcdEv>
 800b3e4:	6803      	ldr	r3, [r0, #0]
 800b3e6:	4606      	mov	r6, r0
 800b3e8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b3ea:	9305      	str	r3, [sp, #20]
 800b3ec:	a807      	add	r0, sp, #28
 800b3ee:	f009 f8e5 	bl	80145bc <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b3f2:	9b05      	ldr	r3, [sp, #20]
 800b3f4:	4601      	mov	r1, r0
 800b3f6:	4630      	mov	r0, r6
 800b3f8:	4798      	blx	r3
 800b3fa:	f080 0001 	eor.w	r0, r0, #1
 800b3fe:	b2c0      	uxtb	r0, r0
 800b400:	e7a8      	b.n	800b354 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800b402:	bf00      	nop
 800b404:	2001547c 	.word	0x2001547c
 800b408:	2001547e 	.word	0x2001547e
 800b40c:	20015480 	.word	0x20015480
 800b410:	20015482 	.word	0x20015482
 800b414:	20015484 	.word	0x20015484

0800b418 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800b418:	b510      	push	{r4, lr}
 800b41a:	4b07      	ldr	r3, [pc, #28]	; (800b438 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800b41c:	781b      	ldrb	r3, [r3, #0]
 800b41e:	4604      	mov	r4, r0
 800b420:	b13b      	cbz	r3, 800b432 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b422:	6803      	ldr	r3, [r0, #0]
 800b424:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b426:	4798      	blx	r3
 800b428:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800b42a:	4283      	cmp	r3, r0
 800b42c:	d101      	bne.n	800b432 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b42e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800b430:	bd10      	pop	{r4, pc}
 800b432:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800b434:	e7fc      	b.n	800b430 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800b436:	bf00      	nop
 800b438:	20015486 	.word	0x20015486

0800b43c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800b43c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b440:	b08a      	sub	sp, #40	; 0x28
 800b442:	461d      	mov	r5, r3
 800b444:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800b448:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b44c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b450:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b454:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b458:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b45c:	2400      	movs	r4, #0
 800b45e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b462:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800b466:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b46a:	4690      	mov	r8, r2
 800b46c:	4607      	mov	r7, r0
 800b46e:	9404      	str	r4, [sp, #16]
 800b470:	f88d 4020 	strb.w	r4, [sp, #32]
 800b474:	f7ff ffd0 	bl	800b418 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b478:	fb06 8505 	mla	r5, r6, r5, r8
 800b47c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b480:	6878      	ldr	r0, [r7, #4]
 800b482:	9505      	str	r5, [sp, #20]
 800b484:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b488:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b48c:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 800b490:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800b494:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800b498:	6803      	ldr	r3, [r0, #0]
 800b49a:	a901      	add	r1, sp, #4
 800b49c:	685b      	ldr	r3, [r3, #4]
 800b49e:	4798      	blx	r3
 800b4a0:	b00a      	add	sp, #40	; 0x28
 800b4a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b4a6 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800b4a6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b4aa:	b08b      	sub	sp, #44	; 0x2c
 800b4ac:	2400      	movs	r4, #0
 800b4ae:	461d      	mov	r5, r3
 800b4b0:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800b4b4:	4688      	mov	r8, r1
 800b4b6:	4691      	mov	r9, r2
 800b4b8:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 800b4bc:	9404      	str	r4, [sp, #16]
 800b4be:	4607      	mov	r7, r0
 800b4c0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b4c4:	f7ff ffa8 	bl	800b418 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b4c8:	fb06 9505 	mla	r5, r6, r5, r9
 800b4cc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b4d0:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b4d4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b4d8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b4dc:	6878      	ldr	r0, [r7, #4]
 800b4de:	9505      	str	r5, [sp, #20]
 800b4e0:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b4e4:	f8ad 401c 	strh.w	r4, [sp, #28]
 800b4e8:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b4ec:	f8cd 8010 	str.w	r8, [sp, #16]
 800b4f0:	f8ad 4020 	strh.w	r4, [sp, #32]
 800b4f4:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b4f8:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800b4fc:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800b500:	6803      	ldr	r3, [r0, #0]
 800b502:	a901      	add	r1, sp, #4
 800b504:	685b      	ldr	r3, [r3, #4]
 800b506:	4798      	blx	r3
 800b508:	b00b      	add	sp, #44	; 0x2c
 800b50a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800b510 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800b510:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b514:	b08a      	sub	sp, #40	; 0x28
 800b516:	4698      	mov	r8, r3
 800b518:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 800b51c:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 800b520:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 800b524:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 800b528:	2300      	movs	r3, #0
 800b52a:	2d0b      	cmp	r5, #11
 800b52c:	4606      	mov	r6, r0
 800b52e:	9304      	str	r3, [sp, #16]
 800b530:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 800b534:	d138      	bne.n	800b5a8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800b536:	2380      	movs	r3, #128	; 0x80
 800b538:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b53c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b540:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b544:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b548:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b54c:	f88d 0020 	strb.w	r0, [sp, #32]
 800b550:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b554:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b558:	4630      	mov	r0, r6
 800b55a:	9203      	str	r2, [sp, #12]
 800b55c:	f7ff ff5c 	bl	800b418 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b560:	2c0b      	cmp	r4, #11
 800b562:	bf98      	it	ls
 800b564:	4b1b      	ldrls	r3, [pc, #108]	; (800b5d4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800b566:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800b56a:	bf98      	it	ls
 800b56c:	5d19      	ldrbls	r1, [r3, r4]
 800b56e:	f8ad 701e 	strh.w	r7, [sp, #30]
 800b572:	bf88      	it	hi
 800b574:	2100      	movhi	r1, #0
 800b576:	fb02 8307 	mla	r3, r2, r7, r8
 800b57a:	10c9      	asrs	r1, r1, #3
 800b57c:	fb01 0003 	mla	r0, r1, r3, r0
 800b580:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 800b584:	9005      	str	r0, [sp, #20]
 800b586:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800b58a:	6870      	ldr	r0, [r6, #4]
 800b58c:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 800b590:	2300      	movs	r3, #0
 800b592:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b596:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b59a:	6803      	ldr	r3, [r0, #0]
 800b59c:	a901      	add	r1, sp, #4
 800b59e:	685b      	ldr	r3, [r3, #4]
 800b5a0:	4798      	blx	r3
 800b5a2:	b00a      	add	sp, #40	; 0x28
 800b5a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b5a8:	2d02      	cmp	r5, #2
 800b5aa:	d109      	bne.n	800b5c0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800b5ac:	28ff      	cmp	r0, #255	; 0xff
 800b5ae:	d105      	bne.n	800b5bc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800b5b0:	f1bc 0f00 	cmp.w	ip, #0
 800b5b4:	bf14      	ite	ne
 800b5b6:	2340      	movne	r3, #64	; 0x40
 800b5b8:	2320      	moveq	r3, #32
 800b5ba:	e7bd      	b.n	800b538 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b5bc:	2340      	movs	r3, #64	; 0x40
 800b5be:	e7bb      	b.n	800b538 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b5c0:	28ff      	cmp	r0, #255	; 0xff
 800b5c2:	d105      	bne.n	800b5d0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800b5c4:	f1bc 0f00 	cmp.w	ip, #0
 800b5c8:	bf14      	ite	ne
 800b5ca:	2304      	movne	r3, #4
 800b5cc:	2301      	moveq	r3, #1
 800b5ce:	e7b3      	b.n	800b538 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b5d0:	2304      	movs	r3, #4
 800b5d2:	e7b1      	b.n	800b538 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b5d4:	080235ec 	.word	0x080235ec

0800b5d8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800b5d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b5dc:	b08b      	sub	sp, #44	; 0x2c
 800b5de:	461d      	mov	r5, r3
 800b5e0:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800b5e4:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 800b5e8:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 800b5ec:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 800b5f0:	bf14      	ite	ne
 800b5f2:	2308      	movne	r3, #8
 800b5f4:	2302      	moveq	r3, #2
 800b5f6:	2400      	movs	r4, #0
 800b5f8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b5fc:	4688      	mov	r8, r1
 800b5fe:	4693      	mov	fp, r2
 800b600:	9404      	str	r4, [sp, #16]
 800b602:	4607      	mov	r7, r0
 800b604:	f7ff ff08 	bl	800b418 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b608:	2e0b      	cmp	r6, #11
 800b60a:	bf98      	it	ls
 800b60c:	4b15      	ldrls	r3, [pc, #84]	; (800b664 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800b60e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800b612:	bf98      	it	ls
 800b614:	5d9c      	ldrbls	r4, [r3, r6]
 800b616:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800b61a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b61e:	fb05 b50a 	mla	r5, r5, sl, fp
 800b622:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800b626:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b62a:	10e4      	asrs	r4, r4, #3
 800b62c:	fb04 0405 	mla	r4, r4, r5, r0
 800b630:	2300      	movs	r3, #0
 800b632:	6878      	ldr	r0, [r7, #4]
 800b634:	9405      	str	r4, [sp, #20]
 800b636:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b63a:	f8ad a01e 	strh.w	sl, [sp, #30]
 800b63e:	f8cd 8010 	str.w	r8, [sp, #16]
 800b642:	f88d 9020 	strb.w	r9, [sp, #32]
 800b646:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 800b64a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b64e:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 800b652:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 800b656:	6803      	ldr	r3, [r0, #0]
 800b658:	a901      	add	r1, sp, #4
 800b65a:	685b      	ldr	r3, [r3, #4]
 800b65c:	4798      	blx	r3
 800b65e:	b00b      	add	sp, #44	; 0x2c
 800b660:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b664:	080235ec 	.word	0x080235ec

0800b668 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800b668:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b66c:	461e      	mov	r6, r3
 800b66e:	4b0a      	ldr	r3, [pc, #40]	; (800b698 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800b670:	460f      	mov	r7, r1
 800b672:	881d      	ldrh	r5, [r3, #0]
 800b674:	4690      	mov	r8, r2
 800b676:	f7f6 ff4f 	bl	8002518 <_ZN8touchgfx3HAL3lcdEv>
 800b67a:	6803      	ldr	r3, [r0, #0]
 800b67c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b67e:	4798      	blx	r3
 800b680:	280b      	cmp	r0, #11
 800b682:	bf9a      	itte	ls
 800b684:	4b05      	ldrls	r3, [pc, #20]	; (800b69c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800b686:	5c1c      	ldrbls	r4, [r3, r0]
 800b688:	2400      	movhi	r4, #0
 800b68a:	fb08 7005 	mla	r0, r8, r5, r7
 800b68e:	10e4      	asrs	r4, r4, #3
 800b690:	fb04 6000 	mla	r0, r4, r0, r6
 800b694:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b698:	20015482 	.word	0x20015482
 800b69c:	080235ec 	.word	0x080235ec

0800b6a0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800b6a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b6a2:	b08b      	sub	sp, #44	; 0x2c
 800b6a4:	461f      	mov	r7, r3
 800b6a6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800b6aa:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b6ae:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b6b2:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b6b6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b6ba:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b6be:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b6c2:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b6c6:	2500      	movs	r5, #0
 800b6c8:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800b6cc:	f88d 3020 	strb.w	r3, [sp, #32]
 800b6d0:	4604      	mov	r4, r0
 800b6d2:	4616      	mov	r6, r2
 800b6d4:	9504      	str	r5, [sp, #16]
 800b6d6:	f7ff fe9f 	bl	800b418 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b6da:	463a      	mov	r2, r7
 800b6dc:	4631      	mov	r1, r6
 800b6de:	4603      	mov	r3, r0
 800b6e0:	4620      	mov	r0, r4
 800b6e2:	f7ff ffc1 	bl	800b668 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b6e6:	4b0e      	ldr	r3, [pc, #56]	; (800b720 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800b6e8:	9005      	str	r0, [sp, #20]
 800b6ea:	881b      	ldrh	r3, [r3, #0]
 800b6ec:	f8ad 301e 	strh.w	r3, [sp, #30]
 800b6f0:	f7f6 ff12 	bl	8002518 <_ZN8touchgfx3HAL3lcdEv>
 800b6f4:	6803      	ldr	r3, [r0, #0]
 800b6f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b6f8:	4798      	blx	r3
 800b6fa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800b6fc:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800b700:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800b704:	9304      	str	r3, [sp, #16]
 800b706:	6860      	ldr	r0, [r4, #4]
 800b708:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800b70c:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800b710:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 800b714:	6803      	ldr	r3, [r0, #0]
 800b716:	a901      	add	r1, sp, #4
 800b718:	685b      	ldr	r3, [r3, #4]
 800b71a:	4798      	blx	r3
 800b71c:	b00b      	add	sp, #44	; 0x2c
 800b71e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b720:	20015482 	.word	0x20015482

0800b724 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800b724:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b726:	b08d      	sub	sp, #52	; 0x34
 800b728:	466b      	mov	r3, sp
 800b72a:	e883 0006 	stmia.w	r3, {r1, r2}
 800b72e:	2300      	movs	r3, #0
 800b730:	9306      	str	r3, [sp, #24]
 800b732:	6803      	ldr	r3, [r0, #0]
 800b734:	f8bd 6000 	ldrh.w	r6, [sp]
 800b738:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b73a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800b73e:	2501      	movs	r5, #1
 800b740:	9503      	str	r5, [sp, #12]
 800b742:	4604      	mov	r4, r0
 800b744:	4798      	blx	r3
 800b746:	463a      	mov	r2, r7
 800b748:	4631      	mov	r1, r6
 800b74a:	4603      	mov	r3, r0
 800b74c:	4620      	mov	r0, r4
 800b74e:	f7ff ff8b 	bl	800b668 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b752:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800b754:	9307      	str	r3, [sp, #28]
 800b756:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b75a:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b75e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b762:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800b766:	4b0f      	ldr	r3, [pc, #60]	; (800b7a4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800b768:	9004      	str	r0, [sp, #16]
 800b76a:	881b      	ldrh	r3, [r3, #0]
 800b76c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800b770:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800b774:	f7f6 fed0 	bl	8002518 <_ZN8touchgfx3HAL3lcdEv>
 800b778:	6803      	ldr	r3, [r0, #0]
 800b77a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b77c:	4798      	blx	r3
 800b77e:	23ff      	movs	r3, #255	; 0xff
 800b780:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800b784:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800b788:	6860      	ldr	r0, [r4, #4]
 800b78a:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800b78e:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800b792:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800b796:	6803      	ldr	r3, [r0, #0]
 800b798:	a903      	add	r1, sp, #12
 800b79a:	685b      	ldr	r3, [r3, #4]
 800b79c:	4798      	blx	r3
 800b79e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800b7a0:	b00d      	add	sp, #52	; 0x34
 800b7a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b7a4:	20015482 	.word	0x20015482

0800b7a8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800b7a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b7ac:	b08c      	sub	sp, #48	; 0x30
 800b7ae:	461e      	mov	r6, r3
 800b7b0:	466d      	mov	r5, sp
 800b7b2:	2300      	movs	r3, #0
 800b7b4:	e885 0006 	stmia.w	r5, {r1, r2}
 800b7b8:	9306      	str	r3, [sp, #24]
 800b7ba:	6803      	ldr	r3, [r0, #0]
 800b7bc:	f8bd 7000 	ldrh.w	r7, [sp]
 800b7c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b7c2:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800b7c6:	2501      	movs	r5, #1
 800b7c8:	9503      	str	r5, [sp, #12]
 800b7ca:	4604      	mov	r4, r0
 800b7cc:	4798      	blx	r3
 800b7ce:	4642      	mov	r2, r8
 800b7d0:	4639      	mov	r1, r7
 800b7d2:	4603      	mov	r3, r0
 800b7d4:	4620      	mov	r0, r4
 800b7d6:	f7ff ff47 	bl	800b668 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b7da:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b7de:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b7e2:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b7e6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800b7ea:	4b11      	ldr	r3, [pc, #68]	; (800b830 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800b7ec:	9004      	str	r0, [sp, #16]
 800b7ee:	881b      	ldrh	r3, [r3, #0]
 800b7f0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800b7f4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800b7f6:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800b7fa:	9607      	str	r6, [sp, #28]
 800b7fc:	f7f6 fe8c 	bl	8002518 <_ZN8touchgfx3HAL3lcdEv>
 800b800:	6803      	ldr	r3, [r0, #0]
 800b802:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b804:	4798      	blx	r3
 800b806:	23ff      	movs	r3, #255	; 0xff
 800b808:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800b80c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800b810:	6860      	ldr	r0, [r4, #4]
 800b812:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800b816:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800b81a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800b81e:	6803      	ldr	r3, [r0, #0]
 800b820:	a903      	add	r1, sp, #12
 800b822:	685b      	ldr	r3, [r3, #4]
 800b824:	4798      	blx	r3
 800b826:	4630      	mov	r0, r6
 800b828:	b00c      	add	sp, #48	; 0x30
 800b82a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b82e:	bf00      	nop
 800b830:	20015482 	.word	0x20015482

0800b834 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800b834:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b836:	b085      	sub	sp, #20
 800b838:	ac02      	add	r4, sp, #8
 800b83a:	e884 0006 	stmia.w	r4, {r1, r2}
 800b83e:	4605      	mov	r5, r0
 800b840:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800b844:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800b848:	f7ff fde6 	bl	800b418 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b84c:	463a      	mov	r2, r7
 800b84e:	4603      	mov	r3, r0
 800b850:	4631      	mov	r1, r6
 800b852:	4628      	mov	r0, r5
 800b854:	f7ff ff08 	bl	800b668 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b858:	4a05      	ldr	r2, [pc, #20]	; (800b870 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800b85a:	682b      	ldr	r3, [r5, #0]
 800b85c:	8812      	ldrh	r2, [r2, #0]
 800b85e:	9200      	str	r2, [sp, #0]
 800b860:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 800b862:	e894 0006 	ldmia.w	r4, {r1, r2}
 800b866:	4603      	mov	r3, r0
 800b868:	4628      	mov	r0, r5
 800b86a:	47b0      	blx	r6
 800b86c:	b005      	add	sp, #20
 800b86e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b870:	20015482 	.word	0x20015482

0800b874 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800b874:	b570      	push	{r4, r5, r6, lr}
 800b876:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800b87a:	4604      	mov	r4, r0
 800b87c:	b19b      	cbz	r3, 800b8a6 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800b87e:	2002      	movs	r0, #2
 800b880:	f7f4 ff60 	bl	8000744 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800b884:	2300      	movs	r3, #0
 800b886:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800b88a:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800b88e:	6823      	ldr	r3, [r4, #0]
 800b890:	4620      	mov	r0, r4
 800b892:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800b896:	f7ff fdbf 	bl	800b418 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b89a:	462b      	mov	r3, r5
 800b89c:	4601      	mov	r1, r0
 800b89e:	4620      	mov	r0, r4
 800b8a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b8a4:	4718      	bx	r3
 800b8a6:	bd70      	pop	{r4, r5, r6, pc}

0800b8a8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800b8a8:	b538      	push	{r3, r4, r5, lr}
 800b8aa:	f890 3078 	ldrb.w	r3, [r0, #120]	; 0x78
 800b8ae:	428b      	cmp	r3, r1
 800b8b0:	4604      	mov	r4, r0
 800b8b2:	460d      	mov	r5, r1
 800b8b4:	d006      	beq.n	800b8c4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800b8b6:	6803      	ldr	r3, [r0, #0]
 800b8b8:	b929      	cbnz	r1, 800b8c6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800b8ba:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800b8be:	4798      	blx	r3
 800b8c0:	f884 5078 	strb.w	r5, [r4, #120]	; 0x78
 800b8c4:	bd38      	pop	{r3, r4, r5, pc}
 800b8c6:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800b8ca:	e7f8      	b.n	800b8be <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800b8cc <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800b8cc:	b510      	push	{r4, lr}
 800b8ce:	4b0d      	ldr	r3, [pc, #52]	; (800b904 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800b8d0:	781b      	ldrb	r3, [r3, #0]
 800b8d2:	4604      	mov	r4, r0
 800b8d4:	b95b      	cbnz	r3, 800b8ee <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b8d6:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800b8da:	2b02      	cmp	r3, #2
 800b8dc:	d007      	beq.n	800b8ee <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b8de:	6840      	ldr	r0, [r0, #4]
 800b8e0:	f000 f92a 	bl	800bb38 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800b8e4:	b118      	cbz	r0, 800b8ee <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b8e6:	6862      	ldr	r2, [r4, #4]
 800b8e8:	7a53      	ldrb	r3, [r2, #9]
 800b8ea:	2b00      	cmp	r3, #0
 800b8ec:	d0fc      	beq.n	800b8e8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800b8ee:	f7f5 f823 	bl	8000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800b8f2:	4620      	mov	r0, r4
 800b8f4:	2100      	movs	r1, #0
 800b8f6:	f7ff ffd7 	bl	800b8a8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b8fa:	4620      	mov	r0, r4
 800b8fc:	f7ff fd8c 	bl	800b418 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b900:	bd10      	pop	{r4, pc}
 800b902:	bf00      	nop
 800b904:	20015486 	.word	0x20015486

0800b908 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800b908:	b570      	push	{r4, r5, r6, lr}
 800b90a:	4604      	mov	r4, r0
 800b90c:	6803      	ldr	r3, [r0, #0]
 800b90e:	b919      	cbnz	r1, 800b918 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800b910:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b912:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b916:	4718      	bx	r3
 800b918:	2200      	movs	r2, #0
 800b91a:	f890 6078 	ldrb.w	r6, [r0, #120]	; 0x78
 800b91e:	f880 2078 	strb.w	r2, [r0, #120]	; 0x78
 800b922:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b924:	4798      	blx	r3
 800b926:	f884 6078 	strb.w	r6, [r4, #120]	; 0x78
 800b92a:	4605      	mov	r5, r0
 800b92c:	2101      	movs	r1, #1
 800b92e:	4620      	mov	r0, r4
 800b930:	f7ff ffba 	bl	800b8a8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b934:	4628      	mov	r0, r5
 800b936:	bd70      	pop	{r4, r5, r6, pc}

0800b938 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800b938:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800b93c:	1a13      	subs	r3, r2, r0
 800b93e:	4258      	negs	r0, r3
 800b940:	4158      	adcs	r0, r3
 800b942:	4770      	bx	lr

0800b944 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800b944:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800b948:	1a9b      	subs	r3, r3, r2
 800b94a:	2b00      	cmp	r3, #0
 800b94c:	bfdc      	itt	le
 800b94e:	6882      	ldrle	r2, [r0, #8]
 800b950:	189b      	addle	r3, r3, r2
 800b952:	2b01      	cmp	r3, #1
 800b954:	bfcc      	ite	gt
 800b956:	2000      	movgt	r0, #0
 800b958:	2001      	movle	r0, #1
 800b95a:	4770      	bx	lr

0800b95c <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800b95c:	6902      	ldr	r2, [r0, #16]
 800b95e:	6843      	ldr	r3, [r0, #4]
 800b960:	2024      	movs	r0, #36	; 0x24
 800b962:	fb00 3002 	mla	r0, r0, r2, r3
 800b966:	4770      	bx	lr

0800b968 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800b968:	6803      	ldr	r3, [r0, #0]
 800b96a:	691b      	ldr	r3, [r3, #16]
 800b96c:	4718      	bx	r3

0800b96e <_ZN8touchgfx13DMA_Interface7executeEv>:
 800b96e:	b570      	push	{r4, r5, r6, lr}
 800b970:	2301      	movs	r3, #1
 800b972:	7203      	strb	r3, [r0, #8]
 800b974:	4604      	mov	r4, r0
 800b976:	6840      	ldr	r0, [r0, #4]
 800b978:	6803      	ldr	r3, [r0, #0]
 800b97a:	699b      	ldr	r3, [r3, #24]
 800b97c:	4798      	blx	r3
 800b97e:	6803      	ldr	r3, [r0, #0]
 800b980:	2b40      	cmp	r3, #64	; 0x40
 800b982:	4605      	mov	r5, r0
 800b984:	d00c      	beq.n	800b9a0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b986:	d810      	bhi.n	800b9aa <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800b988:	2b04      	cmp	r3, #4
 800b98a:	d01d      	beq.n	800b9c8 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800b98c:	d804      	bhi.n	800b998 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800b98e:	2b01      	cmp	r3, #1
 800b990:	d006      	beq.n	800b9a0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b992:	2b02      	cmp	r3, #2
 800b994:	d02c      	beq.n	800b9f0 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800b996:	bd70      	pop	{r4, r5, r6, pc}
 800b998:	2b08      	cmp	r3, #8
 800b99a:	d01d      	beq.n	800b9d8 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800b99c:	2b20      	cmp	r3, #32
 800b99e:	d1fa      	bne.n	800b996 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800b9a0:	6823      	ldr	r3, [r4, #0]
 800b9a2:	4620      	mov	r0, r4
 800b9a4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b9a6:	4798      	blx	r3
 800b9a8:	e013      	b.n	800b9d2 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800b9aa:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800b9ae:	d0f7      	beq.n	800b9a0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b9b0:	d804      	bhi.n	800b9bc <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800b9b2:	2b80      	cmp	r3, #128	; 0x80
 800b9b4:	d0f4      	beq.n	800b9a0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b9b6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800b9ba:	e7f0      	b.n	800b99e <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800b9bc:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800b9c0:	d0ee      	beq.n	800b9a0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b9c2:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800b9c6:	e7e5      	b.n	800b994 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800b9c8:	6823      	ldr	r3, [r4, #0]
 800b9ca:	7f01      	ldrb	r1, [r0, #28]
 800b9cc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b9ce:	4620      	mov	r0, r4
 800b9d0:	4798      	blx	r3
 800b9d2:	6823      	ldr	r3, [r4, #0]
 800b9d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b9d6:	e006      	b.n	800b9e6 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800b9d8:	6823      	ldr	r3, [r4, #0]
 800b9da:	7f01      	ldrb	r1, [r0, #28]
 800b9dc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b9de:	4620      	mov	r0, r4
 800b9e0:	4798      	blx	r3
 800b9e2:	6823      	ldr	r3, [r4, #0]
 800b9e4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b9e6:	4629      	mov	r1, r5
 800b9e8:	4620      	mov	r0, r4
 800b9ea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b9ee:	4718      	bx	r3
 800b9f0:	6823      	ldr	r3, [r4, #0]
 800b9f2:	4620      	mov	r0, r4
 800b9f4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b9f6:	4798      	blx	r3
 800b9f8:	e7f3      	b.n	800b9e2 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800b9fa <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800b9fa:	4770      	bx	lr

0800b9fc <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800b9fc:	4770      	bx	lr

0800b9fe <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800b9fe:	4770      	bx	lr

0800ba00 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800ba00:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800ba04:	1ad2      	subs	r2, r2, r3
 800ba06:	2a00      	cmp	r2, #0
 800ba08:	b510      	push	{r4, lr}
 800ba0a:	bfdc      	itt	le
 800ba0c:	6884      	ldrle	r4, [r0, #8]
 800ba0e:	1912      	addle	r2, r2, r4
 800ba10:	2a01      	cmp	r2, #1
 800ba12:	dd16      	ble.n	800ba42 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800ba14:	6842      	ldr	r2, [r0, #4]
 800ba16:	2424      	movs	r4, #36	; 0x24
 800ba18:	fb04 2303 	mla	r3, r4, r3, r2
 800ba1c:	f101 0220 	add.w	r2, r1, #32
 800ba20:	f851 4b04 	ldr.w	r4, [r1], #4
 800ba24:	f843 4b04 	str.w	r4, [r3], #4
 800ba28:	4291      	cmp	r1, r2
 800ba2a:	d1f9      	bne.n	800ba20 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800ba2c:	780a      	ldrb	r2, [r1, #0]
 800ba2e:	701a      	strb	r2, [r3, #0]
 800ba30:	68c3      	ldr	r3, [r0, #12]
 800ba32:	6882      	ldr	r2, [r0, #8]
 800ba34:	f3bf 8f5b 	dmb	ish
 800ba38:	3301      	adds	r3, #1
 800ba3a:	429a      	cmp	r2, r3
 800ba3c:	bfd8      	it	le
 800ba3e:	1a9b      	suble	r3, r3, r2
 800ba40:	60c3      	str	r3, [r0, #12]
 800ba42:	bd10      	pop	{r4, pc}

0800ba44 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800ba44:	6903      	ldr	r3, [r0, #16]
 800ba46:	6882      	ldr	r2, [r0, #8]
 800ba48:	f3bf 8f5b 	dmb	ish
 800ba4c:	3301      	adds	r3, #1
 800ba4e:	429a      	cmp	r2, r3
 800ba50:	bfd8      	it	le
 800ba52:	1a9b      	suble	r3, r3, r2
 800ba54:	6103      	str	r3, [r0, #16]
 800ba56:	4770      	bx	lr

0800ba58 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800ba58:	b570      	push	{r4, r5, r6, lr}
 800ba5a:	4604      	mov	r4, r0
 800ba5c:	460e      	mov	r6, r1
 800ba5e:	6860      	ldr	r0, [r4, #4]
 800ba60:	6803      	ldr	r3, [r0, #0]
 800ba62:	685b      	ldr	r3, [r3, #4]
 800ba64:	4798      	blx	r3
 800ba66:	2800      	cmp	r0, #0
 800ba68:	d1f9      	bne.n	800ba5e <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800ba6a:	4d0d      	ldr	r5, [pc, #52]	; (800baa0 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800ba6c:	6828      	ldr	r0, [r5, #0]
 800ba6e:	6803      	ldr	r3, [r0, #0]
 800ba70:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800ba72:	4798      	blx	r3
 800ba74:	f7f4 ff6e 	bl	8000954 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800ba78:	6828      	ldr	r0, [r5, #0]
 800ba7a:	2101      	movs	r1, #1
 800ba7c:	f7ff ff14 	bl	800b8a8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800ba80:	6860      	ldr	r0, [r4, #4]
 800ba82:	6803      	ldr	r3, [r0, #0]
 800ba84:	4631      	mov	r1, r6
 800ba86:	689b      	ldr	r3, [r3, #8]
 800ba88:	4798      	blx	r3
 800ba8a:	6823      	ldr	r3, [r4, #0]
 800ba8c:	4620      	mov	r0, r4
 800ba8e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ba90:	4798      	blx	r3
 800ba92:	6828      	ldr	r0, [r5, #0]
 800ba94:	6803      	ldr	r3, [r0, #0]
 800ba96:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ba9a:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800ba9c:	4718      	bx	r3
 800ba9e:	bf00      	nop
 800baa0:	20015488 	.word	0x20015488

0800baa4 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800baa4:	b508      	push	{r3, lr}
 800baa6:	f7f4 ff47 	bl	8000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800baaa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800baae:	f7f4 bf4b 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800bab2 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800bab2:	b510      	push	{r4, lr}
 800bab4:	2114      	movs	r1, #20
 800bab6:	4604      	mov	r4, r0
 800bab8:	f014 fcfc 	bl	80204b4 <_ZdlPvj>
 800babc:	4620      	mov	r0, r4
 800babe:	bd10      	pop	{r4, pc}

0800bac0 <_ZN8touchgfx13DMA_Interface5startEv>:
 800bac0:	b510      	push	{r4, lr}
 800bac2:	4604      	mov	r4, r0
 800bac4:	6840      	ldr	r0, [r0, #4]
 800bac6:	6803      	ldr	r3, [r0, #0]
 800bac8:	681b      	ldr	r3, [r3, #0]
 800baca:	4798      	blx	r3
 800bacc:	b948      	cbnz	r0, 800bae2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bace:	7a63      	ldrb	r3, [r4, #9]
 800bad0:	b13b      	cbz	r3, 800bae2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bad2:	7a23      	ldrb	r3, [r4, #8]
 800bad4:	b92b      	cbnz	r3, 800bae2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bad6:	6823      	ldr	r3, [r4, #0]
 800bad8:	4620      	mov	r0, r4
 800bada:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800badc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bae0:	4718      	bx	r3
 800bae2:	bd10      	pop	{r4, pc}

0800bae4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800bae4:	b570      	push	{r4, r5, r6, lr}
 800bae6:	4604      	mov	r4, r0
 800bae8:	6840      	ldr	r0, [r0, #4]
 800baea:	6803      	ldr	r3, [r0, #0]
 800baec:	681b      	ldr	r3, [r3, #0]
 800baee:	4798      	blx	r3
 800baf0:	4605      	mov	r5, r0
 800baf2:	b930      	cbnz	r0, 800bb02 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800baf4:	7a23      	ldrb	r3, [r4, #8]
 800baf6:	b123      	cbz	r3, 800bb02 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800baf8:	6860      	ldr	r0, [r4, #4]
 800bafa:	6803      	ldr	r3, [r0, #0]
 800bafc:	695b      	ldr	r3, [r3, #20]
 800bafe:	4798      	blx	r3
 800bb00:	7225      	strb	r5, [r4, #8]
 800bb02:	6860      	ldr	r0, [r4, #4]
 800bb04:	6803      	ldr	r3, [r0, #0]
 800bb06:	681b      	ldr	r3, [r3, #0]
 800bb08:	4798      	blx	r3
 800bb0a:	b928      	cbnz	r0, 800bb18 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800bb0c:	6823      	ldr	r3, [r4, #0]
 800bb0e:	4620      	mov	r0, r4
 800bb10:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bb12:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bb16:	4718      	bx	r3
 800bb18:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bb1c:	f7f4 bf22 	b.w	8000964 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800bb20 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800bb20:	b510      	push	{r4, lr}
 800bb22:	4c04      	ldr	r4, [pc, #16]	; (800bb34 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800bb24:	6082      	str	r2, [r0, #8]
 800bb26:	2200      	movs	r2, #0
 800bb28:	e9c0 4100 	strd	r4, r1, [r0]
 800bb2c:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800bb30:	bd10      	pop	{r4, pc}
 800bb32:	bf00      	nop
 800bb34:	08023600 	.word	0x08023600

0800bb38 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800bb38:	6840      	ldr	r0, [r0, #4]
 800bb3a:	6803      	ldr	r3, [r0, #0]
 800bb3c:	681b      	ldr	r3, [r3, #0]
 800bb3e:	4718      	bx	r3

0800bb40 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800bb40:	4b06      	ldr	r3, [pc, #24]	; (800bb5c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 800bb42:	60c1      	str	r1, [r0, #12]
 800bb44:	094a      	lsrs	r2, r1, #5
 800bb46:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 800bb4a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800bb4e:	4313      	orrs	r3, r2
 800bb50:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 800bb54:	4319      	orrs	r1, r3
 800bb56:	8201      	strh	r1, [r0, #16]
 800bb58:	4770      	bx	lr
 800bb5a:	bf00      	nop
 800bb5c:	fffff800 	.word	0xfffff800

0800bb60 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800bb60:	f1a0 0008 	sub.w	r0, r0, #8
 800bb64:	e7ec      	b.n	800bb40 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 800bb66:	bf00      	nop

0800bb68 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 800bb68:	b508      	push	{r3, lr}
 800bb6a:	4b05      	ldr	r3, [pc, #20]	; (800bb80 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 800bb6c:	6818      	ldr	r0, [r3, #0]
 800bb6e:	6803      	ldr	r3, [r0, #0]
 800bb70:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800bb74:	4798      	blx	r3
 800bb76:	1e43      	subs	r3, r0, #1
 800bb78:	4258      	negs	r0, r3
 800bb7a:	4158      	adcs	r0, r3
 800bb7c:	bd08      	pop	{r3, pc}
 800bb7e:	bf00      	nop
 800bb80:	20015488 	.word	0x20015488

0800bb84 <_ZN8touchgfx13PainterRGB565D1Ev>:
 800bb84:	4770      	bx	lr

0800bb86 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 800bb86:	3808      	subs	r0, #8
 800bb88:	4770      	bx	lr

0800bb8a <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 800bb8a:	b430      	push	{r4, r5}
 800bb8c:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800bb90:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 800bb94:	8a02      	ldrh	r2, [r0, #16]
 800bb96:	9202      	str	r2, [sp, #8]
 800bb98:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800bb9c:	68c2      	ldr	r2, [r0, #12]
 800bb9e:	4629      	mov	r1, r5
 800bba0:	4620      	mov	r0, r4
 800bba2:	bc30      	pop	{r4, r5}
 800bba4:	f7f5 b89c 	b.w	8000ce0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0800bba8 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 800bba8:	f7f5 b890 	b.w	8000ccc <_ZN8touchgfx5paint6rgb5658tearDownEv>

0800bbac <_ZN8touchgfx13PainterRGB565D0Ev>:
 800bbac:	b510      	push	{r4, lr}
 800bbae:	2114      	movs	r1, #20
 800bbb0:	4604      	mov	r4, r0
 800bbb2:	f014 fc7f 	bl	80204b4 <_ZdlPvj>
 800bbb6:	4620      	mov	r0, r4
 800bbb8:	bd10      	pop	{r4, pc}

0800bbba <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 800bbba:	f1a0 0008 	sub.w	r0, r0, #8
 800bbbe:	e7f5      	b.n	800bbac <_ZN8touchgfx13PainterRGB565D0Ev>

0800bbc0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800bbc0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800bbc2:	6803      	ldr	r3, [r0, #0]
 800bbc4:	460d      	mov	r5, r1
 800bbc6:	4604      	mov	r4, r0
 800bbc8:	4601      	mov	r1, r0
 800bbca:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800bbcc:	a802      	add	r0, sp, #8
 800bbce:	4798      	blx	r3
 800bbd0:	6828      	ldr	r0, [r5, #0]
 800bbd2:	6869      	ldr	r1, [r5, #4]
 800bbd4:	466b      	mov	r3, sp
 800bbd6:	c303      	stmia	r3!, {r0, r1}
 800bbd8:	4668      	mov	r0, sp
 800bbda:	4619      	mov	r1, r3
 800bbdc:	f7fe ffae 	bl	800ab3c <_ZN8touchgfx4RectaNERKS0_>
 800bbe0:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800bbe2:	b1a8      	cbz	r0, 800bc10 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800bbe4:	6803      	ldr	r3, [r0, #0]
 800bbe6:	1d21      	adds	r1, r4, #4
 800bbe8:	68db      	ldr	r3, [r3, #12]
 800bbea:	4798      	blx	r3
 800bbec:	b180      	cbz	r0, 800bc10 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800bbee:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800bbf2:	2b00      	cmp	r3, #0
 800bbf4:	dd0c      	ble.n	800bc10 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800bbf6:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 800bbfa:	2d00      	cmp	r5, #0
 800bbfc:	dd08      	ble.n	800bc10 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800bbfe:	4a2d      	ldr	r2, [pc, #180]	; (800bcb4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xf4>)
 800bc00:	7812      	ldrb	r2, [r2, #0]
 800bc02:	b13a      	cbz	r2, 800bc14 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x54>
 800bc04:	2a01      	cmp	r2, #1
 800bc06:	d02d      	beq.n	800bc64 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa4>
 800bc08:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800bc0a:	6803      	ldr	r3, [r0, #0]
 800bc0c:	691b      	ldr	r3, [r3, #16]
 800bc0e:	4798      	blx	r3
 800bc10:	b004      	add	sp, #16
 800bc12:	bd70      	pop	{r4, r5, r6, pc}
 800bc14:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800bc18:	441d      	add	r5, r3
 800bc1a:	b2ad      	uxth	r5, r5
 800bc1c:	b22e      	sxth	r6, r5
 800bc1e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800bc22:	42b3      	cmp	r3, r6
 800bc24:	daf0      	bge.n	800bc08 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800bc26:	6823      	ldr	r3, [r4, #0]
 800bc28:	4669      	mov	r1, sp
 800bc2a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800bc2c:	4620      	mov	r0, r4
 800bc2e:	4798      	blx	r3
 800bc30:	b940      	cbnz	r0, 800bc44 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
 800bc32:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800bc36:	2b01      	cmp	r3, #1
 800bc38:	d004      	beq.n	800bc44 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
 800bc3a:	3301      	adds	r3, #1
 800bc3c:	105b      	asrs	r3, r3, #1
 800bc3e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800bc42:	e7f0      	b.n	800bc26 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x66>
 800bc44:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800bc48:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800bc4c:	4413      	add	r3, r2
 800bc4e:	b29b      	uxth	r3, r3
 800bc50:	441a      	add	r2, r3
 800bc52:	b212      	sxth	r2, r2
 800bc54:	4296      	cmp	r6, r2
 800bc56:	f8ad 3002 	strh.w	r3, [sp, #2]
 800bc5a:	dae0      	bge.n	800bc1e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800bc5c:	1aeb      	subs	r3, r5, r3
 800bc5e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800bc62:	e7dc      	b.n	800bc1e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800bc64:	f8bd 5000 	ldrh.w	r5, [sp]
 800bc68:	441d      	add	r5, r3
 800bc6a:	b2ad      	uxth	r5, r5
 800bc6c:	b22e      	sxth	r6, r5
 800bc6e:	f9bd 3000 	ldrsh.w	r3, [sp]
 800bc72:	42b3      	cmp	r3, r6
 800bc74:	dac8      	bge.n	800bc08 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800bc76:	6823      	ldr	r3, [r4, #0]
 800bc78:	4669      	mov	r1, sp
 800bc7a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800bc7c:	4620      	mov	r0, r4
 800bc7e:	4798      	blx	r3
 800bc80:	b940      	cbnz	r0, 800bc94 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
 800bc82:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800bc86:	2b01      	cmp	r3, #1
 800bc88:	d004      	beq.n	800bc94 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
 800bc8a:	3301      	adds	r3, #1
 800bc8c:	105b      	asrs	r3, r3, #1
 800bc8e:	f8ad 3004 	strh.w	r3, [sp, #4]
 800bc92:	e7f0      	b.n	800bc76 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xb6>
 800bc94:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800bc98:	f8bd 3000 	ldrh.w	r3, [sp]
 800bc9c:	4413      	add	r3, r2
 800bc9e:	b29b      	uxth	r3, r3
 800bca0:	441a      	add	r2, r3
 800bca2:	b212      	sxth	r2, r2
 800bca4:	4296      	cmp	r6, r2
 800bca6:	f8ad 3000 	strh.w	r3, [sp]
 800bcaa:	dae0      	bge.n	800bc6e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800bcac:	1aeb      	subs	r3, r5, r3
 800bcae:	f8ad 3004 	strh.w	r3, [sp, #4]
 800bcb2:	e7dc      	b.n	800bc6e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800bcb4:	20015480 	.word	0x20015480

0800bcb8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800bcb8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bcba:	6803      	ldr	r3, [r0, #0]
 800bcbc:	4604      	mov	r4, r0
 800bcbe:	4601      	mov	r1, r0
 800bcc0:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800bcc2:	4668      	mov	r0, sp
 800bcc4:	4798      	blx	r3
 800bcc6:	2100      	movs	r1, #0
 800bcc8:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800bccc:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800bcd0:	9102      	str	r1, [sp, #8]
 800bcd2:	4668      	mov	r0, sp
 800bcd4:	a902      	add	r1, sp, #8
 800bcd6:	f8ad 200c 	strh.w	r2, [sp, #12]
 800bcda:	f8ad 300e 	strh.w	r3, [sp, #14]
 800bcde:	f7fe ff2d 	bl	800ab3c <_ZN8touchgfx4RectaNERKS0_>
 800bce2:	6823      	ldr	r3, [r4, #0]
 800bce4:	4669      	mov	r1, sp
 800bce6:	691b      	ldr	r3, [r3, #16]
 800bce8:	4620      	mov	r0, r4
 800bcea:	4798      	blx	r3
 800bcec:	b004      	add	sp, #16
 800bcee:	bd10      	pop	{r4, pc}

0800bcf0 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800bcf0:	2101      	movs	r1, #1
 800bcf2:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800bcf6:	490b      	ldr	r1, [pc, #44]	; (800bd24 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 800bcf8:	6001      	str	r1, [r0, #0]
 800bcfa:	2200      	movs	r2, #0
 800bcfc:	21ff      	movs	r1, #255	; 0xff
 800bcfe:	8082      	strh	r2, [r0, #4]
 800bd00:	80c2      	strh	r2, [r0, #6]
 800bd02:	8102      	strh	r2, [r0, #8]
 800bd04:	8142      	strh	r2, [r0, #10]
 800bd06:	8182      	strh	r2, [r0, #12]
 800bd08:	81c2      	strh	r2, [r0, #14]
 800bd0a:	8202      	strh	r2, [r0, #16]
 800bd0c:	8242      	strh	r2, [r0, #18]
 800bd0e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800bd12:	61c2      	str	r2, [r0, #28]
 800bd14:	8402      	strh	r2, [r0, #32]
 800bd16:	8442      	strh	r2, [r0, #34]	; 0x22
 800bd18:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800bd1c:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 800bd20:	6282      	str	r2, [r0, #40]	; 0x28
 800bd22:	4770      	bx	lr
 800bd24:	0802365c 	.word	0x0802365c

0800bd28 <_ZN8touchgfx17AbstractDataGraph9setScaleXEib>:
 800bd28:	6301      	str	r1, [r0, #48]	; 0x30
 800bd2a:	4770      	bx	lr

0800bd2c <_ZNK8touchgfx17AbstractDataGraph9getScaleXEv>:
 800bd2c:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800bd2e:	4770      	bx	lr

0800bd30 <_ZN8touchgfx17AbstractDataGraph9setScaleYEib>:
 800bd30:	6341      	str	r1, [r0, #52]	; 0x34
 800bd32:	4770      	bx	lr

0800bd34 <_ZNK8touchgfx17AbstractDataGraph9getScaleYEv>:
 800bd34:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800bd36:	4770      	bx	lr

0800bd38 <_ZN8touchgfx16DynamicDataGraph14beforeAddValueEv>:
 800bd38:	4770      	bx	lr

0800bd3a <_ZNK8touchgfx16DynamicDataGraph9dataIndexEs>:
 800bd3a:	4608      	mov	r0, r1
 800bd3c:	4770      	bx	lr

0800bd3e <_ZNK8touchgfx16DynamicDataGraph18indexToGlobalIndexEs>:
 800bd3e:	4608      	mov	r0, r1
 800bd40:	4770      	bx	lr

0800bd42 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE>:
 800bd42:	b530      	push	{r4, r5, lr}
 800bd44:	460d      	mov	r5, r1
 800bd46:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800bd48:	8949      	ldrh	r1, [r1, #10]
 800bd4a:	1ac9      	subs	r1, r1, r3
 800bd4c:	6803      	ldr	r3, [r0, #0]
 800bd4e:	b085      	sub	sp, #20
 800bd50:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 800bd54:	f10d 0206 	add.w	r2, sp, #6
 800bd58:	b209      	sxth	r1, r1
 800bd5a:	4604      	mov	r4, r0
 800bd5c:	4798      	blx	r3
 800bd5e:	b1a0      	cbz	r0, 800bd8a <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800bd60:	792b      	ldrb	r3, [r5, #4]
 800bd62:	b993      	cbnz	r3, 800bd8a <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800bd64:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 800bd68:	b178      	cbz	r0, 800bd8a <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800bd6a:	6803      	ldr	r3, [r0, #0]
 800bd6c:	68db      	ldr	r3, [r3, #12]
 800bd6e:	4798      	blx	r3
 800bd70:	b158      	cbz	r0, 800bd8a <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800bd72:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800bd76:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 800bd7a:	f8ad 3008 	strh.w	r3, [sp, #8]
 800bd7e:	9503      	str	r5, [sp, #12]
 800bd80:	6803      	ldr	r3, [r0, #0]
 800bd82:	aa02      	add	r2, sp, #8
 800bd84:	689b      	ldr	r3, [r3, #8]
 800bd86:	4621      	mov	r1, r4
 800bd88:	4798      	blx	r3
 800bd8a:	b005      	add	sp, #20
 800bd8c:	bd30      	pop	{r4, r5, pc}

0800bd8e <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii>:
 800bd8e:	b510      	push	{r4, lr}
 800bd90:	428a      	cmp	r2, r1
 800bd92:	bfbe      	ittt	lt
 800bd94:	460b      	movlt	r3, r1
 800bd96:	4611      	movlt	r1, r2
 800bd98:	461a      	movlt	r2, r3
 800bd9a:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
 800bd9e:	428b      	cmp	r3, r1
 800bda0:	4604      	mov	r4, r0
 800bda2:	d103      	bne.n	800bdac <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x1e>
 800bda4:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
 800bda8:	4293      	cmp	r3, r2
 800bdaa:	d011      	beq.n	800bdd0 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x42>
 800bdac:	f8c4 112c 	str.w	r1, [r4, #300]	; 0x12c
 800bdb0:	f8c4 2130 	str.w	r2, [r4, #304]	; 0x130
 800bdb4:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800bdb8:	f005 fff7 	bl	8011daa <_ZNK8touchgfx8Drawable10invalidateEv>
 800bdbc:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800bdc0:	f005 fff3 	bl	8011daa <_ZNK8touchgfx8Drawable10invalidateEv>
 800bdc4:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800bdc8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bdcc:	f005 bfed 	b.w	8011daa <_ZNK8touchgfx8Drawable10invalidateEv>
 800bdd0:	bd10      	pop	{r4, pc}

0800bdd2 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii>:
 800bdd2:	b510      	push	{r4, lr}
 800bdd4:	428a      	cmp	r2, r1
 800bdd6:	bfbe      	ittt	lt
 800bdd8:	460b      	movlt	r3, r1
 800bdda:	4611      	movlt	r1, r2
 800bddc:	461a      	movlt	r2, r3
 800bdde:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
 800bde2:	428b      	cmp	r3, r1
 800bde4:	4604      	mov	r4, r0
 800bde6:	d103      	bne.n	800bdf0 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x1e>
 800bde8:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
 800bdec:	4293      	cmp	r3, r2
 800bdee:	d011      	beq.n	800be14 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x42>
 800bdf0:	f8c4 1134 	str.w	r1, [r4, #308]	; 0x134
 800bdf4:	f8c4 2138 	str.w	r2, [r4, #312]	; 0x138
 800bdf8:	f104 0064 	add.w	r0, r4, #100	; 0x64
 800bdfc:	f005 ffd5 	bl	8011daa <_ZNK8touchgfx8Drawable10invalidateEv>
 800be00:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800be04:	f005 ffd1 	bl	8011daa <_ZNK8touchgfx8Drawable10invalidateEv>
 800be08:	f104 0090 	add.w	r0, r4, #144	; 0x90
 800be0c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800be10:	f005 bfcb 	b.w	8011daa <_ZNK8touchgfx8Drawable10invalidateEv>
 800be14:	bd10      	pop	{r4, pc}

0800be16 <_ZN8touchgfx17AbstractDataGraph5clearEv>:
 800be16:	2300      	movs	r3, #0
 800be18:	f8a0 311e 	strh.w	r3, [r0, #286]	; 0x11e
 800be1c:	3038      	adds	r0, #56	; 0x38
 800be1e:	f005 bfc4 	b.w	8011daa <_ZNK8touchgfx8Drawable10invalidateEv>

0800be22 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi>:
 800be22:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800be26:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 800be2a:	4605      	mov	r5, r0
 800be2c:	4688      	mov	r8, r1
 800be2e:	4617      	mov	r7, r2
 800be30:	2b00      	cmp	r3, #0
 800be32:	d03f      	beq.n	800beb4 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800be34:	6803      	ldr	r3, [r0, #0]
 800be36:	f8d3 3130 	ldr.w	r3, [r3, #304]	; 0x130
 800be3a:	4798      	blx	r3
 800be3c:	682b      	ldr	r3, [r5, #0]
 800be3e:	4604      	mov	r4, r0
 800be40:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
 800be44:	4628      	mov	r0, r5
 800be46:	4798      	blx	r3
 800be48:	4284      	cmp	r4, r0
 800be4a:	bfc8      	it	gt
 800be4c:	4623      	movgt	r3, r4
 800be4e:	f9b5 611e 	ldrsh.w	r6, [r5, #286]	; 0x11e
 800be52:	bfc4      	itt	gt
 800be54:	4604      	movgt	r4, r0
 800be56:	4618      	movgt	r0, r3
 800be58:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
 800be5c:	42b3      	cmp	r3, r6
 800be5e:	da29      	bge.n	800beb4 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800be60:	42b0      	cmp	r0, r6
 800be62:	bfa8      	it	ge
 800be64:	4630      	movge	r0, r6
 800be66:	2800      	cmp	r0, #0
 800be68:	db24      	blt.n	800beb4 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800be6a:	f1b8 0f00 	cmp.w	r8, #0
 800be6e:	d11e      	bne.n	800beae <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x8c>
 800be70:	f8d5 2144 	ldr.w	r2, [r5, #324]	; 0x144
 800be74:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 800be78:	460c      	mov	r4, r1
 800be7a:	009a      	lsls	r2, r3, #2
 800be7c:	4298      	cmp	r0, r3
 800be7e:	dd0b      	ble.n	800be98 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x76>
 800be80:	f8d5 6144 	ldr.w	r6, [r5, #324]	; 0x144
 800be84:	58b6      	ldr	r6, [r6, r2]
 800be86:	42b1      	cmp	r1, r6
 800be88:	bfa8      	it	ge
 800be8a:	4631      	movge	r1, r6
 800be8c:	42b4      	cmp	r4, r6
 800be8e:	bfb8      	it	lt
 800be90:	4634      	movlt	r4, r6
 800be92:	3301      	adds	r3, #1
 800be94:	3204      	adds	r2, #4
 800be96:	e7f1      	b.n	800be7c <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x5a>
 800be98:	1bc9      	subs	r1, r1, r7
 800be9a:	193a      	adds	r2, r7, r4
 800be9c:	4291      	cmp	r1, r2
 800be9e:	d009      	beq.n	800beb4 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800bea0:	682b      	ldr	r3, [r5, #0]
 800bea2:	4628      	mov	r0, r5
 800bea4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800bea8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800beac:	4718      	bx	r3
 800beae:	427c      	negs	r4, r7
 800beb0:	4639      	mov	r1, r7
 800beb2:	e7e2      	b.n	800be7a <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x58>
 800beb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800beb8 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE>:
 800beb8:	b530      	push	{r4, r5, lr}
 800beba:	790b      	ldrb	r3, [r1, #4]
 800bebc:	2b02      	cmp	r3, #2
 800bebe:	b085      	sub	sp, #20
 800bec0:	4604      	mov	r4, r0
 800bec2:	460d      	mov	r5, r1
 800bec4:	d020      	beq.n	800bf08 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800bec6:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800bec8:	88c9      	ldrh	r1, [r1, #6]
 800beca:	1ac9      	subs	r1, r1, r3
 800becc:	6803      	ldr	r3, [r0, #0]
 800bece:	f10d 0206 	add.w	r2, sp, #6
 800bed2:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 800bed6:	b209      	sxth	r1, r1
 800bed8:	4798      	blx	r3
 800beda:	b1a8      	cbz	r0, 800bf08 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800bedc:	792b      	ldrb	r3, [r5, #4]
 800bede:	2b01      	cmp	r3, #1
 800bee0:	d812      	bhi.n	800bf08 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800bee2:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 800bee6:	b178      	cbz	r0, 800bf08 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800bee8:	6803      	ldr	r3, [r0, #0]
 800beea:	68db      	ldr	r3, [r3, #12]
 800beec:	4798      	blx	r3
 800beee:	b158      	cbz	r0, 800bf08 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800bef0:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800bef4:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 800bef8:	f8ad 3008 	strh.w	r3, [sp, #8]
 800befc:	9503      	str	r5, [sp, #12]
 800befe:	6803      	ldr	r3, [r0, #0]
 800bf00:	aa02      	add	r2, sp, #8
 800bf02:	689b      	ldr	r3, [r3, #8]
 800bf04:	4621      	mov	r1, r4
 800bf06:	4798      	blx	r3
 800bf08:	b005      	add	sp, #20
 800bf0a:	bd30      	pop	{r4, r5, pc}

0800bf0c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_>:
 800bf0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bf10:	4604      	mov	r4, r0
 800bf12:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800bf16:	9e06      	ldr	r6, [sp, #24]
 800bf18:	4690      	mov	r8, r2
 800bf1a:	461f      	mov	r7, r3
 800bf1c:	b928      	cbnz	r0, 800bf2a <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1e>
 800bf1e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800bf22:	8033      	strh	r3, [r6, #0]
 800bf24:	803b      	strh	r3, [r7, #0]
 800bf26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bf2a:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 800bf2e:	f9b4 0116 	ldrsh.w	r0, [r4, #278]	; 0x116
 800bf32:	1883      	adds	r3, r0, r2
 800bf34:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 800bf38:	1ad2      	subs	r2, r2, r3
 800bf3a:	b212      	sxth	r2, r2
 800bf3c:	2a01      	cmp	r2, #1
 800bf3e:	dc07      	bgt.n	800bf50 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x44>
 800bf40:	2300      	movs	r3, #0
 800bf42:	803b      	strh	r3, [r7, #0]
 800bf44:	f8b4 311e 	ldrh.w	r3, [r4, #286]	; 0x11e
 800bf48:	3b01      	subs	r3, #1
 800bf4a:	8033      	strh	r3, [r6, #0]
 800bf4c:	2001      	movs	r0, #1
 800bf4e:	e7ea      	b.n	800bf26 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800bf50:	1a08      	subs	r0, r1, r0
 800bf52:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800bf56:	f8d4 112c 	ldr.w	r1, [r4, #300]	; 0x12c
 800bf5a:	6b25      	ldr	r5, [r4, #48]	; 0x30
 800bf5c:	1a5b      	subs	r3, r3, r1
 800bf5e:	ea4f 1040 	mov.w	r0, r0, lsl #5
 800bf62:	d45b      	bmi.n	800c01c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x110>
 800bf64:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 800bf68:	fb93 f1f5 	sdiv	r1, r3, r5
 800bf6c:	2302      	movs	r3, #2
 800bf6e:	fb91 f1f3 	sdiv	r1, r1, r3
 800bf72:	3a01      	subs	r2, #1
 800bf74:	f006 f8da 	bl	801212c <_ZN8touchgfx6muldivElll>
 800bf78:	f8d4 112c 	ldr.w	r1, [r4, #300]	; 0x12c
 800bf7c:	f8d4 c030 	ldr.w	ip, [r4, #48]	; 0x30
 800bf80:	2900      	cmp	r1, #0
 800bf82:	db57      	blt.n	800c034 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x128>
 800bf84:	eb0c 0341 	add.w	r3, ip, r1, lsl #1
 800bf88:	2502      	movs	r5, #2
 800bf8a:	fb93 f3fc 	sdiv	r3, r3, ip
 800bf8e:	fb93 f3f5 	sdiv	r3, r3, r5
 800bf92:	eb00 1543 	add.w	r5, r0, r3, lsl #5
 800bf96:	f8d4 2130 	ldr.w	r2, [r4, #304]	; 0x130
 800bf9a:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	; 0x116
 800bf9e:	1a52      	subs	r2, r2, r1
 800bfa0:	eba8 0003 	sub.w	r0, r8, r3
 800bfa4:	ea4f 1040 	mov.w	r0, r0, lsl #5
 800bfa8:	d450      	bmi.n	800c04c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x140>
 800bfaa:	eb0c 0242 	add.w	r2, ip, r2, lsl #1
 800bfae:	fb92 f1fc 	sdiv	r1, r2, ip
 800bfb2:	2202      	movs	r2, #2
 800bfb4:	fb91 f1f2 	sdiv	r1, r1, r2
 800bfb8:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 800bfbc:	4413      	add	r3, r2
 800bfbe:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 800bfc2:	1ad2      	subs	r2, r2, r3
 800bfc4:	b212      	sxth	r2, r2
 800bfc6:	3a01      	subs	r2, #1
 800bfc8:	f006 f8b0 	bl	801212c <_ZN8touchgfx6muldivElll>
 800bfcc:	f8d4 312c 	ldr.w	r3, [r4, #300]	; 0x12c
 800bfd0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800bfd2:	2b00      	cmp	r3, #0
 800bfd4:	db46      	blt.n	800c064 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x158>
 800bfd6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800bfda:	fb93 f3f2 	sdiv	r3, r3, r2
 800bfde:	2202      	movs	r2, #2
 800bfe0:	fb93 f3f2 	sdiv	r3, r3, r2
 800bfe4:	eb00 1343 	add.w	r3, r0, r3, lsl #5
 800bfe8:	429d      	cmp	r5, r3
 800bfea:	bfde      	ittt	le
 800bfec:	461a      	movle	r2, r3
 800bfee:	462b      	movle	r3, r5
 800bff0:	4615      	movle	r5, r2
 800bff2:	2d00      	cmp	r5, #0
 800bff4:	bfa4      	itt	ge
 800bff6:	351f      	addge	r5, #31
 800bff8:	116d      	asrge	r5, r5, #5
 800bffa:	f04f 0020 	mov.w	r0, #32
 800bffe:	bfb8      	it	lt
 800c000:	fb95 f5f0 	sdivlt	r5, r5, r0
 800c004:	b22d      	sxth	r5, r5
 800c006:	2d00      	cmp	r5, #0
 800c008:	b21b      	sxth	r3, r3
 800c00a:	fb93 f3f0 	sdiv	r3, r3, r0
 800c00e:	803b      	strh	r3, [r7, #0]
 800c010:	8035      	strh	r5, [r6, #0]
 800c012:	da33      	bge.n	800c07c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x170>
 800c014:	2000      	movs	r0, #0
 800c016:	8030      	strh	r0, [r6, #0]
 800c018:	8038      	strh	r0, [r7, #0]
 800c01a:	e784      	b.n	800bf26 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800c01c:	f06f 0101 	mvn.w	r1, #1
 800c020:	fb01 5303 	mla	r3, r1, r3, r5
 800c024:	1e59      	subs	r1, r3, #1
 800c026:	2302      	movs	r3, #2
 800c028:	fb91 f1f5 	sdiv	r1, r1, r5
 800c02c:	fb91 f1f3 	sdiv	r1, r1, r3
 800c030:	4249      	negs	r1, r1
 800c032:	e79e      	b.n	800bf72 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x66>
 800c034:	f06f 0301 	mvn.w	r3, #1
 800c038:	fb03 c301 	mla	r3, r3, r1, ip
 800c03c:	3b01      	subs	r3, #1
 800c03e:	2502      	movs	r5, #2
 800c040:	fb93 f3fc 	sdiv	r3, r3, ip
 800c044:	fb93 f3f5 	sdiv	r3, r3, r5
 800c048:	425b      	negs	r3, r3
 800c04a:	e7a2      	b.n	800bf92 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x86>
 800c04c:	f06f 0101 	mvn.w	r1, #1
 800c050:	fb01 c202 	mla	r2, r1, r2, ip
 800c054:	1e51      	subs	r1, r2, #1
 800c056:	2202      	movs	r2, #2
 800c058:	fb91 f1fc 	sdiv	r1, r1, ip
 800c05c:	fb91 f1f2 	sdiv	r1, r1, r2
 800c060:	4249      	negs	r1, r1
 800c062:	e7a9      	b.n	800bfb8 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xac>
 800c064:	f06f 0101 	mvn.w	r1, #1
 800c068:	fb01 2303 	mla	r3, r1, r3, r2
 800c06c:	3b01      	subs	r3, #1
 800c06e:	fb93 f3f2 	sdiv	r3, r3, r2
 800c072:	2202      	movs	r2, #2
 800c074:	fb93 f3f2 	sdiv	r3, r3, r2
 800c078:	425b      	negs	r3, r3
 800c07a:	e7b3      	b.n	800bfe4 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xd8>
 800c07c:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c080:	f9b7 2000 	ldrsh.w	r2, [r7]
 800c084:	4293      	cmp	r3, r2
 800c086:	dc05      	bgt.n	800c094 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x188>
 800c088:	3b01      	subs	r3, #1
 800c08a:	b21b      	sxth	r3, r3
 800c08c:	8033      	strh	r3, [r6, #0]
 800c08e:	2000      	movs	r0, #0
 800c090:	803b      	strh	r3, [r7, #0]
 800c092:	e748      	b.n	800bf26 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800c094:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800c098:	803a      	strh	r2, [r7, #0]
 800c09a:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c09e:	f9b6 2000 	ldrsh.w	r2, [r6]
 800c0a2:	4293      	cmp	r3, r2
 800c0a4:	bfdc      	itt	le
 800c0a6:	f103 33ff 	addle.w	r3, r3, #4294967295
 800c0aa:	b21a      	sxthle	r2, r3
 800c0ac:	8032      	strh	r2, [r6, #0]
 800c0ae:	e74d      	b.n	800bf4c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x40>

0800c0b0 <_ZN8touchgfx9ContainerC1Ev>:
 800c0b0:	2101      	movs	r1, #1
 800c0b2:	2200      	movs	r2, #0
 800c0b4:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800c0b8:	4909      	ldr	r1, [pc, #36]	; (800c0e0 <_ZN8touchgfx9ContainerC1Ev+0x30>)
 800c0ba:	8082      	strh	r2, [r0, #4]
 800c0bc:	80c2      	strh	r2, [r0, #6]
 800c0be:	8102      	strh	r2, [r0, #8]
 800c0c0:	8142      	strh	r2, [r0, #10]
 800c0c2:	8182      	strh	r2, [r0, #12]
 800c0c4:	81c2      	strh	r2, [r0, #14]
 800c0c6:	8202      	strh	r2, [r0, #16]
 800c0c8:	8242      	strh	r2, [r0, #18]
 800c0ca:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800c0ce:	61c2      	str	r2, [r0, #28]
 800c0d0:	8402      	strh	r2, [r0, #32]
 800c0d2:	8442      	strh	r2, [r0, #34]	; 0x22
 800c0d4:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800c0d8:	6001      	str	r1, [r0, #0]
 800c0da:	6282      	str	r2, [r0, #40]	; 0x28
 800c0dc:	4770      	bx	lr
 800c0de:	bf00      	nop
 800c0e0:	08023564 	.word	0x08023564

0800c0e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>:
 800c0e4:	6800      	ldr	r0, [r0, #0]
 800c0e6:	2800      	cmp	r0, #0
 800c0e8:	bfbd      	ittte	lt
 800c0ea:	380f      	sublt	r0, #15
 800c0ec:	2320      	movlt	r3, #32
 800c0ee:	fb90 f0f3 	sdivlt	r0, r0, r3
 800c0f2:	3010      	addge	r0, #16
 800c0f4:	bfa8      	it	ge
 800c0f6:	1140      	asrge	r0, r0, #5
 800c0f8:	4770      	bx	lr

0800c0fa <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs>:
 800c0fa:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c0fe:	4605      	mov	r5, r0
 800c100:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800c104:	4688      	mov	r8, r1
 800c106:	4691      	mov	r9, r2
 800c108:	469a      	mov	sl, r3
 800c10a:	b360      	cbz	r0, 800c166 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6c>
 800c10c:	2700      	movs	r7, #0
 800c10e:	f04f 3bff 	mov.w	fp, #4294967295
 800c112:	f9b5 311e 	ldrsh.w	r3, [r5, #286]	; 0x11e
 800c116:	b23e      	sxth	r6, r7
 800c118:	42b3      	cmp	r3, r6
 800c11a:	dd23      	ble.n	800c164 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6a>
 800c11c:	682b      	ldr	r3, [r5, #0]
 800c11e:	4631      	mov	r1, r6
 800c120:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800c124:	4628      	mov	r0, r5
 800c126:	4798      	blx	r3
 800c128:	9001      	str	r0, [sp, #4]
 800c12a:	a801      	add	r0, sp, #4
 800c12c:	f7ff ffda 	bl	800c0e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c130:	682b      	ldr	r3, [r5, #0]
 800c132:	eba0 0008 	sub.w	r0, r0, r8
 800c136:	b204      	sxth	r4, r0
 800c138:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800c13c:	4631      	mov	r1, r6
 800c13e:	4628      	mov	r0, r5
 800c140:	4798      	blx	r3
 800c142:	9001      	str	r0, [sp, #4]
 800c144:	a801      	add	r0, sp, #4
 800c146:	f7ff ffcd 	bl	800c0e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c14a:	eba0 0009 	sub.w	r0, r0, r9
 800c14e:	fb10 f000 	smulbb	r0, r0, r0
 800c152:	fb04 0404 	mla	r4, r4, r4, r0
 800c156:	455c      	cmp	r4, fp
 800c158:	bf3c      	itt	cc
 800c15a:	f8aa 6000 	strhcc.w	r6, [sl]
 800c15e:	46a3      	movcc	fp, r4
 800c160:	3701      	adds	r7, #1
 800c162:	e7d6      	b.n	800c112 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x18>
 800c164:	2001      	movs	r0, #1
 800c166:	b003      	add	sp, #12
 800c168:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c16c <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs>:
 800c16c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800c170:	4604      	mov	r4, r0
 800c172:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800c176:	4688      	mov	r8, r1
 800c178:	4691      	mov	r9, r2
 800c17a:	b1f8      	cbz	r0, 800c1bc <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x50>
 800c17c:	2500      	movs	r5, #0
 800c17e:	f04f 37ff 	mov.w	r7, #4294967295
 800c182:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c186:	b22e      	sxth	r6, r5
 800c188:	42b3      	cmp	r3, r6
 800c18a:	dd16      	ble.n	800c1ba <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x4e>
 800c18c:	6823      	ldr	r3, [r4, #0]
 800c18e:	4631      	mov	r1, r6
 800c190:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800c194:	4620      	mov	r0, r4
 800c196:	4798      	blx	r3
 800c198:	9001      	str	r0, [sp, #4]
 800c19a:	a801      	add	r0, sp, #4
 800c19c:	f7ff ffa2 	bl	800c0e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c1a0:	b200      	sxth	r0, r0
 800c1a2:	eba0 0008 	sub.w	r0, r0, r8
 800c1a6:	2800      	cmp	r0, #0
 800c1a8:	bfb8      	it	lt
 800c1aa:	4240      	neglt	r0, r0
 800c1ac:	42b8      	cmp	r0, r7
 800c1ae:	bf3c      	itt	cc
 800c1b0:	f8a9 6000 	strhcc.w	r6, [r9]
 800c1b4:	4607      	movcc	r7, r0
 800c1b6:	3501      	adds	r5, #1
 800c1b8:	e7e3      	b.n	800c182 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x16>
 800c1ba:	2001      	movs	r0, #1
 800c1bc:	b003      	add	sp, #12
 800c1be:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800c1c2 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>:
 800c1c2:	f8a0 3118 	strh.w	r3, [r0, #280]	; 0x118
 800c1c6:	f9bd 3000 	ldrsh.w	r3, [sp]
 800c1ca:	f8a0 1114 	strh.w	r1, [r0, #276]	; 0x114
 800c1ce:	f8a0 2116 	strh.w	r2, [r0, #278]	; 0x116
 800c1d2:	f8a0 311a 	strh.w	r3, [r0, #282]	; 0x11a
 800c1d6:	4770      	bx	lr

0800c1d8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>:
 800c1d8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c1da:	4604      	mov	r4, r0
 800c1dc:	3038      	adds	r0, #56	; 0x38
 800c1de:	460d      	mov	r5, r1
 800c1e0:	f7fe fb1c 	bl	800a81c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c1e4:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 800c1e8:	9200      	str	r2, [sp, #0]
 800c1ea:	2200      	movs	r2, #0
 800c1ec:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800c1f0:	4611      	mov	r1, r2
 800c1f2:	4628      	mov	r0, r5
 800c1f4:	f7f6 fdf3 	bl	8002dde <_ZN8touchgfx8Drawable11setPositionEssss>
 800c1f8:	b003      	add	sp, #12
 800c1fa:	bd30      	pop	{r4, r5, pc}

0800c1fc <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>:
 800c1fc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c1fe:	4604      	mov	r4, r0
 800c200:	3064      	adds	r0, #100	; 0x64
 800c202:	460d      	mov	r5, r1
 800c204:	f7fe fb0a 	bl	800a81c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c208:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 800c20c:	9200      	str	r2, [sp, #0]
 800c20e:	2200      	movs	r2, #0
 800c210:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 800c214:	4611      	mov	r1, r2
 800c216:	4628      	mov	r0, r5
 800c218:	f7f6 fde1 	bl	8002dde <_ZN8touchgfx8Drawable11setPositionEssss>
 800c21c:	b003      	add	sp, #12
 800c21e:	bd30      	pop	{r4, r5, pc}

0800c220 <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>:
 800c220:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c222:	4604      	mov	r4, r0
 800c224:	30e8      	adds	r0, #232	; 0xe8
 800c226:	460d      	mov	r5, r1
 800c228:	f7fe faf8 	bl	800a81c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c22c:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	; 0xf2
 800c230:	9200      	str	r2, [sp, #0]
 800c232:	2200      	movs	r2, #0
 800c234:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	; 0xf0
 800c238:	4611      	mov	r1, r2
 800c23a:	4628      	mov	r0, r5
 800c23c:	f7f6 fdcf 	bl	8002dde <_ZN8touchgfx8Drawable11setPositionEssss>
 800c240:	b003      	add	sp, #12
 800c242:	bd30      	pop	{r4, r5, pc}

0800c244 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>:
 800c244:	b538      	push	{r3, r4, r5, lr}
 800c246:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 800c24a:	428b      	cmp	r3, r1
 800c24c:	460d      	mov	r5, r1
 800c24e:	dd08      	ble.n	800c262 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 800c250:	6e04      	ldr	r4, [r0, #96]	; 0x60
 800c252:	b134      	cbz	r4, 800c262 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 800c254:	6823      	ldr	r3, [r4, #0]
 800c256:	4620      	mov	r0, r4
 800c258:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c25a:	4629      	mov	r1, r5
 800c25c:	4798      	blx	r3
 800c25e:	69a4      	ldr	r4, [r4, #24]
 800c260:	e7f7      	b.n	800c252 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0xe>
 800c262:	bd38      	pop	{r3, r4, r5, pc}

0800c264 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>:
 800c264:	b570      	push	{r4, r5, r6, lr}
 800c266:	f8d0 40e4 	ldr.w	r4, [r0, #228]	; 0xe4
 800c26a:	4606      	mov	r6, r0
 800c26c:	460d      	mov	r5, r1
 800c26e:	b134      	cbz	r4, 800c27e <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1a>
 800c270:	6823      	ldr	r3, [r4, #0]
 800c272:	4620      	mov	r0, r4
 800c274:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c276:	4629      	mov	r1, r5
 800c278:	4798      	blx	r3
 800c27a:	69a4      	ldr	r4, [r4, #24]
 800c27c:	e7f7      	b.n	800c26e <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0xa>
 800c27e:	f8d6 4110 	ldr.w	r4, [r6, #272]	; 0x110
 800c282:	b134      	cbz	r4, 800c292 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x2e>
 800c284:	6823      	ldr	r3, [r4, #0]
 800c286:	4620      	mov	r0, r4
 800c288:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c28a:	4629      	mov	r1, r5
 800c28c:	4798      	blx	r3
 800c28e:	69a4      	ldr	r4, [r4, #24]
 800c290:	e7f7      	b.n	800c282 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1e>
 800c292:	bd70      	pop	{r4, r5, r6, pc}

0800c294 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>:
 800c294:	b538      	push	{r3, r4, r5, lr}
 800c296:	4604      	mov	r4, r0
 800c298:	2500      	movs	r5, #0
 800c29a:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c29e:	42ab      	cmp	r3, r5
 800c2a0:	db05      	blt.n	800c2ae <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x1a>
 800c2a2:	b229      	sxth	r1, r5
 800c2a4:	4620      	mov	r0, r4
 800c2a6:	f7ff ffdd 	bl	800c264 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>
 800c2aa:	3501      	adds	r5, #1
 800c2ac:	e7f5      	b.n	800c29a <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x6>
 800c2ae:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800c2b2:	f005 fd7a 	bl	8011daa <_ZNK8touchgfx8Drawable10invalidateEv>
 800c2b6:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800c2ba:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c2be:	f005 bd74 	b.w	8011daa <_ZNK8touchgfx8Drawable10invalidateEv>

0800c2c2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>:
 800c2c2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c2c4:	6e05      	ldr	r5, [r0, #96]	; 0x60
 800c2c6:	4604      	mov	r4, r0
 800c2c8:	b15d      	cbz	r5, 800c2e2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x20>
 800c2ca:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 800c2ce:	9200      	str	r2, [sp, #0]
 800c2d0:	2200      	movs	r2, #0
 800c2d2:	4628      	mov	r0, r5
 800c2d4:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800c2d8:	4611      	mov	r1, r2
 800c2da:	f7f6 fd80 	bl	8002dde <_ZN8touchgfx8Drawable11setPositionEssss>
 800c2de:	69ad      	ldr	r5, [r5, #24]
 800c2e0:	e7f2      	b.n	800c2c8 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x6>
 800c2e2:	f8d4 50e4 	ldr.w	r5, [r4, #228]	; 0xe4
 800c2e6:	b15d      	cbz	r5, 800c300 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x3e>
 800c2e8:	f9b4 20c6 	ldrsh.w	r2, [r4, #198]	; 0xc6
 800c2ec:	9200      	str	r2, [sp, #0]
 800c2ee:	2200      	movs	r2, #0
 800c2f0:	4628      	mov	r0, r5
 800c2f2:	f9b4 30c4 	ldrsh.w	r3, [r4, #196]	; 0xc4
 800c2f6:	4611      	mov	r1, r2
 800c2f8:	f7f6 fd71 	bl	8002dde <_ZN8touchgfx8Drawable11setPositionEssss>
 800c2fc:	69ad      	ldr	r5, [r5, #24]
 800c2fe:	e7f2      	b.n	800c2e6 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x24>
 800c300:	f8d4 508c 	ldr.w	r5, [r4, #140]	; 0x8c
 800c304:	b15d      	cbz	r5, 800c31e <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x5c>
 800c306:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 800c30a:	9200      	str	r2, [sp, #0]
 800c30c:	2200      	movs	r2, #0
 800c30e:	4628      	mov	r0, r5
 800c310:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 800c314:	4611      	mov	r1, r2
 800c316:	f7f6 fd62 	bl	8002dde <_ZN8touchgfx8Drawable11setPositionEssss>
 800c31a:	69ad      	ldr	r5, [r5, #24]
 800c31c:	e7f2      	b.n	800c304 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x42>
 800c31e:	f8d4 50b8 	ldr.w	r5, [r4, #184]	; 0xb8
 800c322:	b15d      	cbz	r5, 800c33c <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7a>
 800c324:	f9b4 209a 	ldrsh.w	r2, [r4, #154]	; 0x9a
 800c328:	9200      	str	r2, [sp, #0]
 800c32a:	2200      	movs	r2, #0
 800c32c:	4628      	mov	r0, r5
 800c32e:	f9b4 3098 	ldrsh.w	r3, [r4, #152]	; 0x98
 800c332:	4611      	mov	r1, r2
 800c334:	f7f6 fd53 	bl	8002dde <_ZN8touchgfx8Drawable11setPositionEssss>
 800c338:	69ad      	ldr	r5, [r5, #24]
 800c33a:	e7f2      	b.n	800c322 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x60>
 800c33c:	f8d4 5110 	ldr.w	r5, [r4, #272]	; 0x110
 800c340:	b15d      	cbz	r5, 800c35a <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x98>
 800c342:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	; 0xf2
 800c346:	9200      	str	r2, [sp, #0]
 800c348:	2200      	movs	r2, #0
 800c34a:	4628      	mov	r0, r5
 800c34c:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	; 0xf0
 800c350:	4611      	mov	r1, r2
 800c352:	f7f6 fd44 	bl	8002dde <_ZN8touchgfx8Drawable11setPositionEssss>
 800c356:	69ad      	ldr	r5, [r5, #24]
 800c358:	e7f2      	b.n	800c340 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7e>
 800c35a:	6823      	ldr	r3, [r4, #0]
 800c35c:	695b      	ldr	r3, [r3, #20]
 800c35e:	4620      	mov	r0, r4
 800c360:	b003      	add	sp, #12
 800c362:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800c366:	4718      	bx	r3

0800c368 <_ZN8touchgfx17AbstractDataGraph8setWidthEs>:
 800c368:	b430      	push	{r4, r5}
 800c36a:	f8b0 4098 	ldrh.w	r4, [r0, #152]	; 0x98
 800c36e:	f8a0 10c4 	strh.w	r1, [r0, #196]	; 0xc4
 800c372:	b28a      	uxth	r2, r1
 800c374:	1b15      	subs	r5, r2, r4
 800c376:	f8a0 5094 	strh.w	r5, [r0, #148]	; 0x94
 800c37a:	f8b0 506c 	ldrh.w	r5, [r0, #108]	; 0x6c
 800c37e:	f8a0 10f0 	strh.w	r1, [r0, #240]	; 0xf0
 800c382:	442c      	add	r4, r5
 800c384:	1b12      	subs	r2, r2, r4
 800c386:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800c38a:	8101      	strh	r1, [r0, #8]
 800c38c:	bc30      	pop	{r4, r5}
 800c38e:	f7ff bf98 	b.w	800c2c2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800c392 <_ZN8touchgfx17AbstractDataGraph9setHeightEs>:
 800c392:	b430      	push	{r4, r5}
 800c394:	f8b0 40f2 	ldrh.w	r4, [r0, #242]	; 0xf2
 800c398:	f8a0 106e 	strh.w	r1, [r0, #110]	; 0x6e
 800c39c:	b28a      	uxth	r2, r1
 800c39e:	1b15      	subs	r5, r2, r4
 800c3a0:	f8a0 50ee 	strh.w	r5, [r0, #238]	; 0xee
 800c3a4:	f8b0 50c6 	ldrh.w	r5, [r0, #198]	; 0xc6
 800c3a8:	f8a0 109a 	strh.w	r1, [r0, #154]	; 0x9a
 800c3ac:	442c      	add	r4, r5
 800c3ae:	1b12      	subs	r2, r2, r4
 800c3b0:	f8a0 2042 	strh.w	r2, [r0, #66]	; 0x42
 800c3b4:	8141      	strh	r1, [r0, #10]
 800c3b6:	bc30      	pop	{r4, r5}
 800c3b8:	f7ff bf83 	b.w	800c2c2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800c3bc <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>:
 800c3bc:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800c3c0:	f9bd 7028 	ldrsh.w	r7, [sp, #40]	; 0x28
 800c3c4:	fa1f fa83 	uxth.w	sl, r3
 800c3c8:	4699      	mov	r9, r3
 800c3ca:	8903      	ldrh	r3, [r0, #8]
 800c3cc:	4604      	mov	r4, r0
 800c3ce:	4615      	mov	r5, r2
 800c3d0:	fa1f f887 	uxth.w	r8, r7
 800c3d4:	4452      	add	r2, sl
 800c3d6:	8940      	ldrh	r0, [r0, #10]
 800c3d8:	1a9b      	subs	r3, r3, r2
 800c3da:	eb08 0201 	add.w	r2, r8, r1
 800c3de:	1a80      	subs	r0, r0, r2
 800c3e0:	b200      	sxth	r0, r0
 800c3e2:	460e      	mov	r6, r1
 800c3e4:	9000      	str	r0, [sp, #0]
 800c3e6:	460a      	mov	r2, r1
 800c3e8:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800c3ec:	4629      	mov	r1, r5
 800c3ee:	b21b      	sxth	r3, r3
 800c3f0:	f7f6 fcf5 	bl	8002dde <_ZN8touchgfx8Drawable11setPositionEssss>
 800c3f4:	2200      	movs	r2, #0
 800c3f6:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800c3fa:	9600      	str	r6, [sp, #0]
 800c3fc:	4611      	mov	r1, r2
 800c3fe:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800c402:	f7f6 fcec 	bl	8002dde <_ZN8touchgfx8Drawable11setPositionEssss>
 800c406:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c40a:	9300      	str	r3, [sp, #0]
 800c40c:	2200      	movs	r2, #0
 800c40e:	462b      	mov	r3, r5
 800c410:	4611      	mov	r1, r2
 800c412:	f104 0064 	add.w	r0, r4, #100	; 0x64
 800c416:	f7f6 fce2 	bl	8002dde <_ZN8touchgfx8Drawable11setPositionEssss>
 800c41a:	8921      	ldrh	r1, [r4, #8]
 800c41c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c420:	9300      	str	r3, [sp, #0]
 800c422:	eba1 010a 	sub.w	r1, r1, sl
 800c426:	464b      	mov	r3, r9
 800c428:	f104 0090 	add.w	r0, r4, #144	; 0x90
 800c42c:	2200      	movs	r2, #0
 800c42e:	b209      	sxth	r1, r1
 800c430:	f7f6 fcd5 	bl	8002dde <_ZN8touchgfx8Drawable11setPositionEssss>
 800c434:	8962      	ldrh	r2, [r4, #10]
 800c436:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800c43a:	9700      	str	r7, [sp, #0]
 800c43c:	eba2 0208 	sub.w	r2, r2, r8
 800c440:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800c444:	b212      	sxth	r2, r2
 800c446:	2100      	movs	r1, #0
 800c448:	f7f6 fcc9 	bl	8002dde <_ZN8touchgfx8Drawable11setPositionEssss>
 800c44c:	4620      	mov	r0, r4
 800c44e:	b002      	add	sp, #8
 800c450:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c454:	f7ff bf35 	b.w	800c2c2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800c458 <_ZN8touchgfx17AbstractDataGraphC1Es>:
 800c458:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c45c:	b085      	sub	sp, #20
 800c45e:	4604      	mov	r4, r0
 800c460:	9103      	str	r1, [sp, #12]
 800c462:	f7ff fe25 	bl	800c0b0 <_ZN8touchgfx9ContainerC1Ev>
 800c466:	4b2d      	ldr	r3, [pc, #180]	; (800c51c <_ZN8touchgfx17AbstractDataGraphC1Es+0xc4>)
 800c468:	6023      	str	r3, [r4, #0]
 800c46a:	2601      	movs	r6, #1
 800c46c:	23ff      	movs	r3, #255	; 0xff
 800c46e:	f104 0b38 	add.w	fp, r4, #56	; 0x38
 800c472:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800c476:	f104 0964 	add.w	r9, r4, #100	; 0x64
 800c47a:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800c47e:	4658      	mov	r0, fp
 800c480:	f7ff fe16 	bl	800c0b0 <_ZN8touchgfx9ContainerC1Ev>
 800c484:	f104 0890 	add.w	r8, r4, #144	; 0x90
 800c488:	4648      	mov	r0, r9
 800c48a:	f7ff fe11 	bl	800c0b0 <_ZN8touchgfx9ContainerC1Ev>
 800c48e:	f104 0abc 	add.w	sl, r4, #188	; 0xbc
 800c492:	4640      	mov	r0, r8
 800c494:	f7ff fe0c 	bl	800c0b0 <_ZN8touchgfx9ContainerC1Ev>
 800c498:	f104 07e8 	add.w	r7, r4, #232	; 0xe8
 800c49c:	4650      	mov	r0, sl
 800c49e:	f7ff fe07 	bl	800c0b0 <_ZN8touchgfx9ContainerC1Ev>
 800c4a2:	4638      	mov	r0, r7
 800c4a4:	f7ff fe04 	bl	800c0b0 <_ZN8touchgfx9ContainerC1Ev>
 800c4a8:	2500      	movs	r5, #0
 800c4aa:	9903      	ldr	r1, [sp, #12]
 800c4ac:	f8a4 111c 	strh.w	r1, [r4, #284]	; 0x11c
 800c4b0:	4620      	mov	r0, r4
 800c4b2:	4659      	mov	r1, fp
 800c4b4:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 800c4b8:	f8c4 5118 	str.w	r5, [r4, #280]	; 0x118
 800c4bc:	f8a4 511e 	strh.w	r5, [r4, #286]	; 0x11e
 800c4c0:	f8a4 5120 	strh.w	r5, [r4, #288]	; 0x120
 800c4c4:	f8c4 5124 	str.w	r5, [r4, #292]	; 0x124
 800c4c8:	f8c4 5128 	str.w	r5, [r4, #296]	; 0x128
 800c4cc:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800c4d0:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800c4d4:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 800c4d8:	f8c4 5138 	str.w	r5, [r4, #312]	; 0x138
 800c4dc:	f7fe f99e 	bl	800a81c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c4e0:	4651      	mov	r1, sl
 800c4e2:	4620      	mov	r0, r4
 800c4e4:	f7fe f99a 	bl	800a81c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c4e8:	4649      	mov	r1, r9
 800c4ea:	4620      	mov	r0, r4
 800c4ec:	f7fe f996 	bl	800a81c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c4f0:	4641      	mov	r1, r8
 800c4f2:	4620      	mov	r0, r4
 800c4f4:	f7fe f992 	bl	800a81c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c4f8:	4639      	mov	r1, r7
 800c4fa:	4620      	mov	r0, r4
 800c4fc:	f7fe f98e 	bl	800a81c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c500:	4620      	mov	r0, r4
 800c502:	9500      	str	r5, [sp, #0]
 800c504:	462b      	mov	r3, r5
 800c506:	462a      	mov	r2, r5
 800c508:	4629      	mov	r1, r5
 800c50a:	f7ff ff57 	bl	800c3bc <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
 800c50e:	4620      	mov	r0, r4
 800c510:	f884 6024 	strb.w	r6, [r4, #36]	; 0x24
 800c514:	b005      	add	sp, #20
 800c516:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c51a:	bf00      	nop
 800c51c:	0802386c 	.word	0x0802386c

0800c520 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>:
 800c520:	4291      	cmp	r1, r2
 800c522:	4613      	mov	r3, r2
 800c524:	d003      	beq.n	800c52e <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii+0xe>
 800c526:	460a      	mov	r2, r1
 800c528:	4619      	mov	r1, r3
 800c52a:	f005 bdff 	b.w	801212c <_ZN8touchgfx6muldivElll>
 800c52e:	4770      	bx	lr

0800c530 <_ZN8touchgfx16DynamicDataGraph9setScaleXEib>:
 800c530:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c534:	6803      	ldr	r3, [r0, #0]
 800c536:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800c53a:	460d      	mov	r5, r1
 800c53c:	4604      	mov	r4, r0
 800c53e:	4798      	blx	r3
 800c540:	42a8      	cmp	r0, r5
 800c542:	4606      	mov	r6, r0
 800c544:	d024      	beq.n	800c590 <_ZN8touchgfx16DynamicDataGraph9setScaleXEib+0x60>
 800c546:	6823      	ldr	r3, [r4, #0]
 800c548:	4601      	mov	r1, r0
 800c54a:	462a      	mov	r2, r5
 800c54c:	f8d4 012c 	ldr.w	r0, [r4, #300]	; 0x12c
 800c550:	f8d3 70a4 	ldr.w	r7, [r3, #164]	; 0xa4
 800c554:	f7ff ffe4 	bl	800c520 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c558:	462a      	mov	r2, r5
 800c55a:	4680      	mov	r8, r0
 800c55c:	4631      	mov	r1, r6
 800c55e:	f8d4 0130 	ldr.w	r0, [r4, #304]	; 0x130
 800c562:	f7ff ffdd 	bl	800c520 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c566:	4641      	mov	r1, r8
 800c568:	4602      	mov	r2, r0
 800c56a:	4620      	mov	r0, r4
 800c56c:	47b8      	blx	r7
 800c56e:	462a      	mov	r2, r5
 800c570:	4631      	mov	r1, r6
 800c572:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 800c576:	f7ff ffd3 	bl	800c520 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c57a:	462a      	mov	r2, r5
 800c57c:	f8c4 013c 	str.w	r0, [r4, #316]	; 0x13c
 800c580:	4631      	mov	r1, r6
 800c582:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 800c586:	f7ff ffcb 	bl	800c520 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c58a:	6325      	str	r5, [r4, #48]	; 0x30
 800c58c:	f8c4 0140 	str.w	r0, [r4, #320]	; 0x140
 800c590:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c594 <_ZN8touchgfx16DynamicDataGraph9setScaleYEib>:
 800c594:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c598:	4604      	mov	r4, r0
 800c59a:	460f      	mov	r7, r1
 800c59c:	b1ba      	cbz	r2, 800c5ce <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x3a>
 800c59e:	6803      	ldr	r3, [r0, #0]
 800c5a0:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800c5a4:	4798      	blx	r3
 800c5a6:	2600      	movs	r6, #0
 800c5a8:	4681      	mov	r9, r0
 800c5aa:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c5ae:	b235      	sxth	r5, r6
 800c5b0:	42ab      	cmp	r3, r5
 800c5b2:	f106 0601 	add.w	r6, r6, #1
 800c5b6:	dd0a      	ble.n	800c5ce <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x3a>
 800c5b8:	f8d4 8144 	ldr.w	r8, [r4, #324]	; 0x144
 800c5bc:	463a      	mov	r2, r7
 800c5be:	4649      	mov	r1, r9
 800c5c0:	f858 0025 	ldr.w	r0, [r8, r5, lsl #2]
 800c5c4:	f7ff ffac 	bl	800c520 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c5c8:	f848 0025 	str.w	r0, [r8, r5, lsl #2]
 800c5cc:	e7ed      	b.n	800c5aa <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x16>
 800c5ce:	6367      	str	r7, [r4, #52]	; 0x34
 800c5d0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0800c5d4 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>:
 800c5d4:	b570      	push	{r4, r5, r6, lr}
 800c5d6:	6803      	ldr	r3, [r0, #0]
 800c5d8:	4604      	mov	r4, r0
 800c5da:	f8d3 3178 	ldr.w	r3, [r3, #376]	; 0x178
 800c5de:	460d      	mov	r5, r1
 800c5e0:	4798      	blx	r3
 800c5e2:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 800c5e6:	3301      	adds	r3, #1
 800c5e8:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
 800c5ec:	6823      	ldr	r3, [r4, #0]
 800c5ee:	4629      	mov	r1, r5
 800c5f0:	4620      	mov	r0, r4
 800c5f2:	f8d3 317c 	ldr.w	r3, [r3, #380]	; 0x17c
 800c5f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c5fa:	4718      	bx	r3

0800c5fc <_ZN8touchgfx16GraphElementLineD1Ev>:
 800c5fc:	4770      	bx	lr

0800c5fe <_ZN8touchgfx16GraphElementLineD0Ev>:
 800c5fe:	b510      	push	{r4, lr}
 800c600:	2130      	movs	r1, #48	; 0x30
 800c602:	4604      	mov	r4, r0
 800c604:	f013 ff56 	bl	80204b4 <_ZdlPvj>
 800c608:	4620      	mov	r0, r4
 800c60a:	bd10      	pop	{r4, pc}

0800c60c <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800c60c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c60e:	4604      	mov	r4, r0
 800c610:	4608      	mov	r0, r1
 800c612:	460d      	mov	r5, r1
 800c614:	f7fe fad5 	bl	800abc2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c618:	b978      	cbnz	r0, 800c63a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800c61a:	4620      	mov	r0, r4
 800c61c:	f7fe fad1 	bl	800abc2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c620:	f9b5 6000 	ldrsh.w	r6, [r5]
 800c624:	b150      	cbz	r0, 800c63c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800c626:	8026      	strh	r6, [r4, #0]
 800c628:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800c62c:	8063      	strh	r3, [r4, #2]
 800c62e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800c632:	80a3      	strh	r3, [r4, #4]
 800c634:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800c638:	80e3      	strh	r3, [r4, #6]
 800c63a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c63c:	f9b4 1000 	ldrsh.w	r1, [r4]
 800c640:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800c644:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800c648:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800c64c:	88ed      	ldrh	r5, [r5, #6]
 800c64e:	42b1      	cmp	r1, r6
 800c650:	460f      	mov	r7, r1
 800c652:	bfa8      	it	ge
 800c654:	4637      	movge	r7, r6
 800c656:	4293      	cmp	r3, r2
 800c658:	4618      	mov	r0, r3
 800c65a:	4466      	add	r6, ip
 800c65c:	bfa8      	it	ge
 800c65e:	4610      	movge	r0, r2
 800c660:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800c664:	8027      	strh	r7, [r4, #0]
 800c666:	442a      	add	r2, r5
 800c668:	88e5      	ldrh	r5, [r4, #6]
 800c66a:	8060      	strh	r0, [r4, #2]
 800c66c:	4461      	add	r1, ip
 800c66e:	442b      	add	r3, r5
 800c670:	b236      	sxth	r6, r6
 800c672:	b209      	sxth	r1, r1
 800c674:	b212      	sxth	r2, r2
 800c676:	b21b      	sxth	r3, r3
 800c678:	428e      	cmp	r6, r1
 800c67a:	bfac      	ite	ge
 800c67c:	ebc7 0106 	rsbge	r1, r7, r6
 800c680:	ebc7 0101 	rsblt	r1, r7, r1
 800c684:	429a      	cmp	r2, r3
 800c686:	bfac      	ite	ge
 800c688:	ebc0 0202 	rsbge	r2, r0, r2
 800c68c:	ebc0 0203 	rsblt	r2, r0, r3
 800c690:	80a1      	strh	r1, [r4, #4]
 800c692:	80e2      	strh	r2, [r4, #6]
 800c694:	e7d1      	b.n	800c63a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>

0800c696 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 800c696:	6800      	ldr	r0, [r0, #0]
 800c698:	2800      	cmp	r0, #0
 800c69a:	bfb9      	ittee	lt
 800c69c:	2320      	movlt	r3, #32
 800c69e:	fb90 f0f3 	sdivlt	r0, r0, r3
 800c6a2:	301f      	addge	r0, #31
 800c6a4:	1140      	asrge	r0, r0, #5
 800c6a6:	4770      	bx	lr

0800c6a8 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE>:
 800c6a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c6ac:	6803      	ldr	r3, [r0, #0]
 800c6ae:	6945      	ldr	r5, [r0, #20]
 800c6b0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800c6b2:	b093      	sub	sp, #76	; 0x4c
 800c6b4:	4604      	mov	r4, r0
 800c6b6:	460f      	mov	r7, r1
 800c6b8:	2d00      	cmp	r5, #0
 800c6ba:	f000 81ad 	beq.w	800ca18 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x370>
 800c6be:	696d      	ldr	r5, [r5, #20]
 800c6c0:	4798      	blx	r3
 800c6c2:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800c6c6:	2b00      	cmp	r3, #0
 800c6c8:	d077      	beq.n	800c7ba <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c6ca:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800c6ce:	fb13 f000 	smulbb	r0, r3, r0
 800c6d2:	b283      	uxth	r3, r0
 800c6d4:	1c58      	adds	r0, r3, #1
 800c6d6:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 800c6da:	1200      	asrs	r0, r0, #8
 800c6dc:	d06d      	beq.n	800c7ba <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c6de:	b2c3      	uxtb	r3, r0
 800c6e0:	9308      	str	r3, [sp, #32]
 800c6e2:	6823      	ldr	r3, [r4, #0]
 800c6e4:	f10d 0840 	add.w	r8, sp, #64	; 0x40
 800c6e8:	462a      	mov	r2, r5
 800c6ea:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800c6ee:	4621      	mov	r1, r4
 800c6f0:	4640      	mov	r0, r8
 800c6f2:	4798      	blx	r3
 800c6f4:	e898 0003 	ldmia.w	r8, {r0, r1}
 800c6f8:	ae0e      	add	r6, sp, #56	; 0x38
 800c6fa:	e886 0003 	stmia.w	r6, {r0, r1}
 800c6fe:	4639      	mov	r1, r7
 800c700:	4630      	mov	r0, r6
 800c702:	f7fe fa1b 	bl	800ab3c <_ZN8touchgfx4RectaNERKS0_>
 800c706:	6823      	ldr	r3, [r4, #0]
 800c708:	4629      	mov	r1, r5
 800c70a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800c70e:	4620      	mov	r0, r4
 800c710:	4798      	blx	r3
 800c712:	6823      	ldr	r3, [r4, #0]
 800c714:	4607      	mov	r7, r0
 800c716:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800c71a:	4629      	mov	r1, r5
 800c71c:	4620      	mov	r0, r4
 800c71e:	4798      	blx	r3
 800c720:	4681      	mov	r9, r0
 800c722:	f894 0038 	ldrb.w	r0, [r4, #56]	; 0x38
 800c726:	0103      	lsls	r3, r0, #4
 800c728:	9309      	str	r3, [sp, #36]	; 0x24
 800c72a:	6823      	ldr	r3, [r4, #0]
 800c72c:	4629      	mov	r1, r5
 800c72e:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800c732:	4620      	mov	r0, r4
 800c734:	4798      	blx	r3
 800c736:	b203      	sxth	r3, r0
 800c738:	9306      	str	r3, [sp, #24]
 800c73a:	6823      	ldr	r3, [r4, #0]
 800c73c:	4629      	mov	r1, r5
 800c73e:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800c742:	4620      	mov	r0, r4
 800c744:	4798      	blx	r3
 800c746:	2f00      	cmp	r7, #0
 800c748:	b203      	sxth	r3, r0
 800c74a:	9307      	str	r3, [sp, #28]
 800c74c:	d138      	bne.n	800c7c0 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x118>
 800c74e:	f1b9 0f00 	cmp.w	r9, #0
 800c752:	d132      	bne.n	800c7ba <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c754:	6823      	ldr	r3, [r4, #0]
 800c756:	464a      	mov	r2, r9
 800c758:	4629      	mov	r1, r5
 800c75a:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800c75e:	4620      	mov	r0, r4
 800c760:	4798      	blx	r3
 800c762:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c764:	1ac0      	subs	r0, r0, r3
 800c766:	9010      	str	r0, [sp, #64]	; 0x40
 800c768:	4640      	mov	r0, r8
 800c76a:	f7ff fcbb 	bl	800c0e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c76e:	6823      	ldr	r3, [r4, #0]
 800c770:	4607      	mov	r7, r0
 800c772:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800c776:	4629      	mov	r1, r5
 800c778:	4620      	mov	r0, r4
 800c77a:	4798      	blx	r3
 800c77c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800c780:	1a38      	subs	r0, r7, r0
 800c782:	fa0f f880 	sxth.w	r8, r0
 800c786:	eb13 0f08 	cmn.w	r3, r8
 800c78a:	d416      	bmi.n	800c7ba <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c78c:	6823      	ldr	r3, [r4, #0]
 800c78e:	4629      	mov	r1, r5
 800c790:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 800c794:	4620      	mov	r0, r4
 800c796:	4798      	blx	r3
 800c798:	4580      	cmp	r8, r0
 800c79a:	da0e      	bge.n	800c7ba <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c79c:	9a08      	ldr	r2, [sp, #32]
 800c79e:	6823      	ldr	r3, [r4, #0]
 800c7a0:	9202      	str	r2, [sp, #8]
 800c7a2:	b23f      	sxth	r7, r7
 800c7a4:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800c7a8:	9201      	str	r2, [sp, #4]
 800c7aa:	9700      	str	r7, [sp, #0]
 800c7ac:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800c7b0:	4631      	mov	r1, r6
 800c7b2:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800c7b6:	4620      	mov	r0, r4
 800c7b8:	47a8      	blx	r5
 800c7ba:	b013      	add	sp, #76	; 0x4c
 800c7bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c7c0:	ddfb      	ble.n	800c7ba <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c7c2:	6823      	ldr	r3, [r4, #0]
 800c7c4:	4629      	mov	r1, r5
 800c7c6:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800c7ca:	4620      	mov	r0, r4
 800c7cc:	4798      	blx	r3
 800c7ce:	6823      	ldr	r3, [r4, #0]
 800c7d0:	4683      	mov	fp, r0
 800c7d2:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800c7d6:	4629      	mov	r1, r5
 800c7d8:	4620      	mov	r0, r4
 800c7da:	4798      	blx	r3
 800c7dc:	eba0 030b 	sub.w	r3, r0, fp
 800c7e0:	2b00      	cmp	r3, #0
 800c7e2:	bfb8      	it	lt
 800c7e4:	425b      	neglt	r3, r3
 800c7e6:	fb93 f3f7 	sdiv	r3, r3, r7
 800c7ea:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800c7ee:	4680      	mov	r8, r0
 800c7f0:	dce3      	bgt.n	800c7ba <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c7f2:	6823      	ldr	r3, [r4, #0]
 800c7f4:	465a      	mov	r2, fp
 800c7f6:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800c7fa:	4629      	mov	r1, r5
 800c7fc:	4620      	mov	r0, r4
 800c7fe:	4798      	blx	r3
 800c800:	6823      	ldr	r3, [r4, #0]
 800c802:	4606      	mov	r6, r0
 800c804:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800c808:	4642      	mov	r2, r8
 800c80a:	4629      	mov	r1, r5
 800c80c:	4620      	mov	r0, r4
 800c80e:	4798      	blx	r3
 800c810:	42b0      	cmp	r0, r6
 800c812:	bfa2      	ittt	ge
 800c814:	4643      	movge	r3, r8
 800c816:	46d8      	movge	r8, fp
 800c818:	469b      	movge	fp, r3
 800c81a:	45d8      	cmp	r8, fp
 800c81c:	bfac      	ite	ge
 800c81e:	f04f 33ff 	movge.w	r3, #4294967295
 800c822:	2301      	movlt	r3, #1
 800c824:	fb98 f6f7 	sdiv	r6, r8, r7
 800c828:	fb9b f2f7 	sdiv	r2, fp, r7
 800c82c:	1af6      	subs	r6, r6, r3
 800c82e:	441a      	add	r2, r3
 800c830:	4296      	cmp	r6, r2
 800c832:	bfac      	ite	ge
 800c834:	f04f 3aff 	movge.w	sl, #4294967295
 800c838:	f04f 0a01 	movlt.w	sl, #1
 800c83c:	f1b9 0f00 	cmp.w	r9, #0
 800c840:	d13e      	bne.n	800c8c0 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x218>
 800c842:	fb07 fb0a 	mul.w	fp, r7, sl
 800c846:	eb0a 0802 	add.w	r8, sl, r2
 800c84a:	4377      	muls	r7, r6
 800c84c:	45b0      	cmp	r8, r6
 800c84e:	d0b4      	beq.n	800c7ba <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c850:	6823      	ldr	r3, [r4, #0]
 800c852:	463a      	mov	r2, r7
 800c854:	4629      	mov	r1, r5
 800c856:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800c85a:	4620      	mov	r0, r4
 800c85c:	4798      	blx	r3
 800c85e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c860:	1ac0      	subs	r0, r0, r3
 800c862:	9010      	str	r0, [sp, #64]	; 0x40
 800c864:	a810      	add	r0, sp, #64	; 0x40
 800c866:	f7ff fc3d 	bl	800c0e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c86a:	6823      	ldr	r3, [r4, #0]
 800c86c:	4681      	mov	r9, r0
 800c86e:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800c872:	4629      	mov	r1, r5
 800c874:	4620      	mov	r0, r4
 800c876:	4798      	blx	r3
 800c878:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800c87c:	eba9 0000 	sub.w	r0, r9, r0
 800c880:	b203      	sxth	r3, r0
 800c882:	42da      	cmn	r2, r3
 800c884:	9304      	str	r3, [sp, #16]
 800c886:	d418      	bmi.n	800c8ba <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 800c888:	6822      	ldr	r2, [r4, #0]
 800c88a:	4629      	mov	r1, r5
 800c88c:	f8d2 20a8 	ldr.w	r2, [r2, #168]	; 0xa8
 800c890:	4620      	mov	r0, r4
 800c892:	4790      	blx	r2
 800c894:	9b04      	ldr	r3, [sp, #16]
 800c896:	4283      	cmp	r3, r0
 800c898:	da0f      	bge.n	800c8ba <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 800c89a:	9b08      	ldr	r3, [sp, #32]
 800c89c:	9302      	str	r3, [sp, #8]
 800c89e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800c8a2:	6822      	ldr	r2, [r4, #0]
 800c8a4:	9301      	str	r3, [sp, #4]
 800c8a6:	fa0f f389 	sxth.w	r3, r9
 800c8aa:	9300      	str	r3, [sp, #0]
 800c8ac:	f8d2 9088 	ldr.w	r9, [r2, #136]	; 0x88
 800c8b0:	a90e      	add	r1, sp, #56	; 0x38
 800c8b2:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800c8b6:	4620      	mov	r0, r4
 800c8b8:	47c8      	blx	r9
 800c8ba:	4456      	add	r6, sl
 800c8bc:	445f      	add	r7, fp
 800c8be:	e7c5      	b.n	800c84c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x1a4>
 800c8c0:	fb98 f8f9 	sdiv	r8, r8, r9
 800c8c4:	eba8 0203 	sub.w	r2, r8, r3
 800c8c8:	fb9b f8f9 	sdiv	r8, fp, r9
 800c8cc:	4498      	add	r8, r3
 800c8ce:	4542      	cmp	r2, r8
 800c8d0:	bfac      	ite	ge
 800c8d2:	f04f 33ff 	movge.w	r3, #4294967295
 800c8d6:	2301      	movlt	r3, #1
 800c8d8:	930a      	str	r3, [sp, #40]	; 0x28
 800c8da:	6823      	ldr	r3, [r4, #0]
 800c8dc:	9204      	str	r2, [sp, #16]
 800c8de:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800c8e2:	fb02 f209 	mul.w	r2, r2, r9
 800c8e6:	4629      	mov	r1, r5
 800c8e8:	4620      	mov	r0, r4
 800c8ea:	4798      	blx	r3
 800c8ec:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
 800c8f0:	f84b 0d08 	str.w	r0, [fp, #-8]!
 800c8f4:	4658      	mov	r0, fp
 800c8f6:	f7ff fbf5 	bl	800c0e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c8fa:	b203      	sxth	r3, r0
 800c8fc:	9305      	str	r3, [sp, #20]
 800c8fe:	6823      	ldr	r3, [r4, #0]
 800c900:	fb06 f207 	mul.w	r2, r6, r7
 800c904:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800c908:	4629      	mov	r1, r5
 800c90a:	4620      	mov	r0, r4
 800c90c:	4798      	blx	r3
 800c90e:	9010      	str	r0, [sp, #64]	; 0x40
 800c910:	4658      	mov	r0, fp
 800c912:	f7ff fbe7 	bl	800c0e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c916:	fb07 f20a 	mul.w	r2, r7, sl
 800c91a:	920b      	str	r2, [sp, #44]	; 0x2c
 800c91c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800c91e:	4442      	add	r2, r8
 800c920:	b203      	sxth	r3, r0
 800c922:	920c      	str	r2, [sp, #48]	; 0x30
 800c924:	9a05      	ldr	r2, [sp, #20]
 800c926:	429a      	cmp	r2, r3
 800c928:	dc16      	bgt.n	800c958 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x2b0>
 800c92a:	eb06 080a 	add.w	r8, r6, sl
 800c92e:	fb07 f808 	mul.w	r8, r7, r8
 800c932:	9a05      	ldr	r2, [sp, #20]
 800c934:	429a      	cmp	r2, r3
 800c936:	db54      	blt.n	800c9e2 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x33a>
 800c938:	6823      	ldr	r3, [r4, #0]
 800c93a:	4642      	mov	r2, r8
 800c93c:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800c940:	4629      	mov	r1, r5
 800c942:	4620      	mov	r0, r4
 800c944:	4798      	blx	r3
 800c946:	9010      	str	r0, [sp, #64]	; 0x40
 800c948:	4658      	mov	r0, fp
 800c94a:	f7ff fbcb 	bl	800c0e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c94e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800c950:	4456      	add	r6, sl
 800c952:	b203      	sxth	r3, r0
 800c954:	4490      	add	r8, r2
 800c956:	e7ec      	b.n	800c932 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x28a>
 800c958:	6823      	ldr	r3, [r4, #0]
 800c95a:	fb07 f206 	mul.w	r2, r7, r6
 800c95e:	4629      	mov	r1, r5
 800c960:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800c964:	4620      	mov	r0, r4
 800c966:	4798      	blx	r3
 800c968:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c96a:	1ac0      	subs	r0, r0, r3
 800c96c:	9010      	str	r0, [sp, #64]	; 0x40
 800c96e:	4658      	mov	r0, fp
 800c970:	f7ff fbb8 	bl	800c0e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c974:	6823      	ldr	r3, [r4, #0]
 800c976:	4680      	mov	r8, r0
 800c978:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800c97c:	4629      	mov	r1, r5
 800c97e:	4620      	mov	r0, r4
 800c980:	4798      	blx	r3
 800c982:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800c986:	eba8 0000 	sub.w	r0, r8, r0
 800c98a:	b203      	sxth	r3, r0
 800c98c:	42da      	cmn	r2, r3
 800c98e:	930d      	str	r3, [sp, #52]	; 0x34
 800c990:	d418      	bmi.n	800c9c4 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 800c992:	6822      	ldr	r2, [r4, #0]
 800c994:	4629      	mov	r1, r5
 800c996:	f8d2 20a8 	ldr.w	r2, [r2, #168]	; 0xa8
 800c99a:	4620      	mov	r0, r4
 800c99c:	4790      	blx	r2
 800c99e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c9a0:	4283      	cmp	r3, r0
 800c9a2:	da0f      	bge.n	800c9c4 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 800c9a4:	9b08      	ldr	r3, [sp, #32]
 800c9a6:	9302      	str	r3, [sp, #8]
 800c9a8:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800c9ac:	6822      	ldr	r2, [r4, #0]
 800c9ae:	9301      	str	r3, [sp, #4]
 800c9b0:	fa0f f388 	sxth.w	r3, r8
 800c9b4:	9300      	str	r3, [sp, #0]
 800c9b6:	f8d2 8088 	ldr.w	r8, [r2, #136]	; 0x88
 800c9ba:	a90e      	add	r1, sp, #56	; 0x38
 800c9bc:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800c9c0:	4620      	mov	r0, r4
 800c9c2:	47c0      	blx	r8
 800c9c4:	6823      	ldr	r3, [r4, #0]
 800c9c6:	4456      	add	r6, sl
 800c9c8:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800c9cc:	fb06 f207 	mul.w	r2, r6, r7
 800c9d0:	4629      	mov	r1, r5
 800c9d2:	4620      	mov	r0, r4
 800c9d4:	4798      	blx	r3
 800c9d6:	9010      	str	r0, [sp, #64]	; 0x40
 800c9d8:	4658      	mov	r0, fp
 800c9da:	f7ff fb83 	bl	800c0e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c9de:	b203      	sxth	r3, r0
 800c9e0:	e7a0      	b.n	800c924 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 800c9e2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800c9e4:	930d      	str	r3, [sp, #52]	; 0x34
 800c9e6:	9b04      	ldr	r3, [sp, #16]
 800c9e8:	4413      	add	r3, r2
 800c9ea:	9304      	str	r3, [sp, #16]
 800c9ec:	9a04      	ldr	r2, [sp, #16]
 800c9ee:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800c9f0:	4293      	cmp	r3, r2
 800c9f2:	f43f aee2 	beq.w	800c7ba <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c9f6:	9b04      	ldr	r3, [sp, #16]
 800c9f8:	6822      	ldr	r2, [r4, #0]
 800c9fa:	4629      	mov	r1, r5
 800c9fc:	f8d2 80ac 	ldr.w	r8, [r2, #172]	; 0xac
 800ca00:	4620      	mov	r0, r4
 800ca02:	fb03 f209 	mul.w	r2, r3, r9
 800ca06:	47c0      	blx	r8
 800ca08:	9010      	str	r0, [sp, #64]	; 0x40
 800ca0a:	4658      	mov	r0, fp
 800ca0c:	f7ff fb6a 	bl	800c0e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800ca10:	b203      	sxth	r3, r0
 800ca12:	9305      	str	r3, [sp, #20]
 800ca14:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ca16:	e785      	b.n	800c924 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 800ca18:	4798      	blx	r3
 800ca1a:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800ca1e:	deff      	udf	#255	; 0xff

0800ca20 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 800ca20:	b510      	push	{r4, lr}
 800ca22:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 800ca26:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 800ca2a:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 800ca2e:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 800ca32:	13a4      	asrs	r4, r4, #14
 800ca34:	139b      	asrs	r3, r3, #14
 800ca36:	429c      	cmp	r4, r3
 800ca38:	bfb8      	it	lt
 800ca3a:	461c      	movlt	r4, r3
 800ca3c:	2c01      	cmp	r4, #1
 800ca3e:	dd07      	ble.n	800ca50 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 800ca40:	fb91 f1f4 	sdiv	r1, r1, r4
 800ca44:	fb90 f0f4 	sdiv	r0, r0, r4
 800ca48:	f7ff ffea 	bl	800ca20 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800ca4c:	4360      	muls	r0, r4
 800ca4e:	bd10      	pop	{r4, pc}
 800ca50:	4340      	muls	r0, r0
 800ca52:	fb01 0101 	mla	r1, r1, r1, r0
 800ca56:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 800ca5a:	bfb4      	ite	lt
 800ca5c:	f44f 4380 	movlt.w	r3, #16384	; 0x4000
 800ca60:	f04f 4380 	movge.w	r3, #1073741824	; 0x40000000
 800ca64:	2000      	movs	r0, #0
 800ca66:	18c2      	adds	r2, r0, r3
 800ca68:	428a      	cmp	r2, r1
 800ca6a:	bf9c      	itt	ls
 800ca6c:	1898      	addls	r0, r3, r2
 800ca6e:	1a89      	subls	r1, r1, r2
 800ca70:	089b      	lsrs	r3, r3, #2
 800ca72:	ea4f 0050 	mov.w	r0, r0, lsr #1
 800ca76:	d1f6      	bne.n	800ca66 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x46>
 800ca78:	e7e9      	b.n	800ca4e <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

0800ca7a <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>:
 800ca7a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ca7c:	9906      	ldr	r1, [sp, #24]
 800ca7e:	4291      	cmp	r1, r2
 800ca80:	bfbc      	itt	lt
 800ca82:	9206      	strlt	r2, [sp, #24]
 800ca84:	460a      	movlt	r2, r1
 800ca86:	9907      	ldr	r1, [sp, #28]
 800ca88:	428b      	cmp	r3, r1
 800ca8a:	4606      	mov	r6, r0
 800ca8c:	461c      	mov	r4, r3
 800ca8e:	f04f 0020 	mov.w	r0, #32
 800ca92:	bfc8      	it	gt
 800ca94:	460c      	movgt	r4, r1
 800ca96:	fb92 f5f0 	sdiv	r5, r2, r0
 800ca9a:	fb94 f4f0 	sdiv	r4, r4, r0
 800ca9e:	a806      	add	r0, sp, #24
 800caa0:	bfc8      	it	gt
 800caa2:	9307      	strgt	r3, [sp, #28]
 800caa4:	f7ff fdf7 	bl	800c696 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800caa8:	4607      	mov	r7, r0
 800caaa:	a807      	add	r0, sp, #28
 800caac:	f7ff fdf3 	bl	800c696 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800cab0:	1b7a      	subs	r2, r7, r5
 800cab2:	1b00      	subs	r0, r0, r4
 800cab4:	80f0      	strh	r0, [r6, #6]
 800cab6:	8035      	strh	r5, [r6, #0]
 800cab8:	8074      	strh	r4, [r6, #2]
 800caba:	80b2      	strh	r2, [r6, #4]
 800cabc:	4630      	mov	r0, r6
 800cabe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800cac0 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>:
 800cac0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800cac2:	9c08      	ldr	r4, [sp, #32]
 800cac4:	2602      	movs	r6, #2
 800cac6:	3401      	adds	r4, #1
 800cac8:	fb94 f4f6 	sdiv	r4, r4, r6
 800cacc:	18a6      	adds	r6, r4, r2
 800cace:	191f      	adds	r7, r3, r4
 800cad0:	e9cd 6700 	strd	r6, r7, [sp]
 800cad4:	1b1b      	subs	r3, r3, r4
 800cad6:	1b12      	subs	r2, r2, r4
 800cad8:	4605      	mov	r5, r0
 800cada:	f7ff ffce 	bl	800ca7a <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>
 800cade:	4628      	mov	r0, r5
 800cae0:	b003      	add	sp, #12
 800cae2:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800cae4 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs>:
 800cae4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cae8:	6943      	ldr	r3, [r0, #20]
 800caea:	b087      	sub	sp, #28
 800caec:	4606      	mov	r6, r0
 800caee:	460d      	mov	r5, r1
 800caf0:	2b00      	cmp	r3, #0
 800caf2:	d072      	beq.n	800cbda <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xf6>
 800caf4:	695c      	ldr	r4, [r3, #20]
 800caf6:	f890 702c 	ldrb.w	r7, [r0, #44]	; 0x2c
 800cafa:	6823      	ldr	r3, [r4, #0]
 800cafc:	4620      	mov	r0, r4
 800cafe:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800cb02:	4798      	blx	r3
 800cb04:	6823      	ldr	r3, [r4, #0]
 800cb06:	4680      	mov	r8, r0
 800cb08:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800cb0c:	4629      	mov	r1, r5
 800cb0e:	4620      	mov	r0, r4
 800cb10:	4798      	blx	r3
 800cb12:	017f      	lsls	r7, r7, #5
 800cb14:	4603      	mov	r3, r0
 800cb16:	9700      	str	r7, [sp, #0]
 800cb18:	4642      	mov	r2, r8
 800cb1a:	4631      	mov	r1, r6
 800cb1c:	a802      	add	r0, sp, #8
 800cb1e:	f7ff ffcf 	bl	800cac0 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800cb22:	2d00      	cmp	r5, #0
 800cb24:	dd1b      	ble.n	800cb5e <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0x7a>
 800cb26:	6823      	ldr	r3, [r4, #0]
 800cb28:	f105 38ff 	add.w	r8, r5, #4294967295
 800cb2c:	fa0f f888 	sxth.w	r8, r8
 800cb30:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800cb34:	4641      	mov	r1, r8
 800cb36:	4620      	mov	r0, r4
 800cb38:	4798      	blx	r3
 800cb3a:	6823      	ldr	r3, [r4, #0]
 800cb3c:	4681      	mov	r9, r0
 800cb3e:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800cb42:	4641      	mov	r1, r8
 800cb44:	4620      	mov	r0, r4
 800cb46:	4798      	blx	r3
 800cb48:	4631      	mov	r1, r6
 800cb4a:	4603      	mov	r3, r0
 800cb4c:	9700      	str	r7, [sp, #0]
 800cb4e:	a804      	add	r0, sp, #16
 800cb50:	464a      	mov	r2, r9
 800cb52:	f7ff ffb5 	bl	800cac0 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800cb56:	a904      	add	r1, sp, #16
 800cb58:	a802      	add	r0, sp, #8
 800cb5a:	f7ff fd57 	bl	800c60c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800cb5e:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800cb62:	3b01      	subs	r3, #1
 800cb64:	429d      	cmp	r5, r3
 800cb66:	da19      	bge.n	800cb9c <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xb8>
 800cb68:	6823      	ldr	r3, [r4, #0]
 800cb6a:	3501      	adds	r5, #1
 800cb6c:	b22d      	sxth	r5, r5
 800cb6e:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800cb72:	4629      	mov	r1, r5
 800cb74:	4620      	mov	r0, r4
 800cb76:	4798      	blx	r3
 800cb78:	6823      	ldr	r3, [r4, #0]
 800cb7a:	4680      	mov	r8, r0
 800cb7c:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800cb80:	4629      	mov	r1, r5
 800cb82:	4620      	mov	r0, r4
 800cb84:	4798      	blx	r3
 800cb86:	4631      	mov	r1, r6
 800cb88:	4603      	mov	r3, r0
 800cb8a:	9700      	str	r7, [sp, #0]
 800cb8c:	a804      	add	r0, sp, #16
 800cb8e:	4642      	mov	r2, r8
 800cb90:	f7ff ff96 	bl	800cac0 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800cb94:	a904      	add	r1, sp, #16
 800cb96:	a802      	add	r0, sp, #8
 800cb98:	f7ff fd38 	bl	800c60c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800cb9c:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 800cba0:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 800cba4:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 800cba8:	18ca      	adds	r2, r1, r3
 800cbaa:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800cbae:	f8ad 1012 	strh.w	r1, [sp, #18]
 800cbb2:	1a9b      	subs	r3, r3, r2
 800cbb4:	f8ad 0014 	strh.w	r0, [sp, #20]
 800cbb8:	2200      	movs	r2, #0
 800cbba:	a904      	add	r1, sp, #16
 800cbbc:	a802      	add	r0, sp, #8
 800cbbe:	f8ad 2010 	strh.w	r2, [sp, #16]
 800cbc2:	f8ad 3016 	strh.w	r3, [sp, #22]
 800cbc6:	f7fd ffb9 	bl	800ab3c <_ZN8touchgfx4RectaNERKS0_>
 800cbca:	6833      	ldr	r3, [r6, #0]
 800cbcc:	a902      	add	r1, sp, #8
 800cbce:	691b      	ldr	r3, [r3, #16]
 800cbd0:	4630      	mov	r0, r6
 800cbd2:	4798      	blx	r3
 800cbd4:	b007      	add	sp, #28
 800cbd6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cbda:	681b      	ldr	r3, [r3, #0]
 800cbdc:	deff      	udf	#255	; 0xff

0800cbde <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>:
 800cbde:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800cbe2:	2b00      	cmp	r3, #0
 800cbe4:	da05      	bge.n	800cbf2 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x14>
 800cbe6:	880a      	ldrh	r2, [r1, #0]
 800cbe8:	b29b      	uxth	r3, r3
 800cbea:	441a      	add	r2, r3
 800cbec:	425b      	negs	r3, r3
 800cbee:	800a      	strh	r2, [r1, #0]
 800cbf0:	808b      	strh	r3, [r1, #4]
 800cbf2:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800cbf6:	2b00      	cmp	r3, #0
 800cbf8:	da05      	bge.n	800cc06 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x28>
 800cbfa:	884a      	ldrh	r2, [r1, #2]
 800cbfc:	b29b      	uxth	r3, r3
 800cbfe:	441a      	add	r2, r3
 800cc00:	425b      	negs	r3, r3
 800cc02:	804a      	strh	r2, [r1, #2]
 800cc04:	80cb      	strh	r3, [r1, #6]
 800cc06:	4770      	bx	lr

0800cc08 <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh>:
 800cc08:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800cc0a:	4604      	mov	r4, r0
 800cc0c:	460d      	mov	r5, r1
 800cc0e:	6801      	ldr	r1, [r0, #0]
 800cc10:	f9bd 0024 	ldrsh.w	r0, [sp, #36]	; 0x24
 800cc14:	9001      	str	r0, [sp, #4]
 800cc16:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 800cc1a:	9000      	str	r0, [sp, #0]
 800cc1c:	f8d1 6090 	ldr.w	r6, [r1, #144]	; 0x90
 800cc20:	a802      	add	r0, sp, #8
 800cc22:	4621      	mov	r1, r4
 800cc24:	47b0      	blx	r6
 800cc26:	a902      	add	r1, sp, #8
 800cc28:	4620      	mov	r0, r4
 800cc2a:	f7ff ffd8 	bl	800cbde <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>
 800cc2e:	a802      	add	r0, sp, #8
 800cc30:	4629      	mov	r1, r5
 800cc32:	f7fd ff83 	bl	800ab3c <_ZN8touchgfx4RectaNERKS0_>
 800cc36:	a802      	add	r0, sp, #8
 800cc38:	f7fd ffc3 	bl	800abc2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cc3c:	b968      	cbnz	r0, 800cc5a <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh+0x52>
 800cc3e:	6823      	ldr	r3, [r4, #0]
 800cc40:	a902      	add	r1, sp, #8
 800cc42:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800cc44:	4620      	mov	r0, r4
 800cc46:	4798      	blx	r3
 800cc48:	f7f5 fc66 	bl	8002518 <_ZN8touchgfx3HAL3lcdEv>
 800cc4c:	6803      	ldr	r3, [r0, #0]
 800cc4e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800cc50:	6a1d      	ldr	r5, [r3, #32]
 800cc52:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 800cc56:	a902      	add	r1, sp, #8
 800cc58:	47a8      	blx	r5
 800cc5a:	b004      	add	sp, #16
 800cc5c:	bd70      	pop	{r4, r5, r6, pc}

0800cc5e <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>:
 800cc5e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cc62:	b08b      	sub	sp, #44	; 0x2c
 800cc64:	461e      	mov	r6, r3
 800cc66:	f9bd 3050 	ldrsh.w	r3, [sp, #80]	; 0x50
 800cc6a:	9304      	str	r3, [sp, #16]
 800cc6c:	429e      	cmp	r6, r3
 800cc6e:	4689      	mov	r9, r1
 800cc70:	4615      	mov	r5, r2
 800cc72:	d072      	beq.n	800cd5a <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xfc>
 800cc74:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800cc78:	015b      	lsls	r3, r3, #5
 800cc7a:	9303      	str	r3, [sp, #12]
 800cc7c:	6813      	ldr	r3, [r2, #0]
 800cc7e:	4610      	mov	r0, r2
 800cc80:	4631      	mov	r1, r6
 800cc82:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800cc86:	4798      	blx	r3
 800cc88:	ab0a      	add	r3, sp, #40	; 0x28
 800cc8a:	4634      	mov	r4, r6
 800cc8c:	f843 0d10 	str.w	r0, [r3, #-16]!
 800cc90:	4618      	mov	r0, r3
 800cc92:	f7ff fa27 	bl	800c0e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cc96:	682b      	ldr	r3, [r5, #0]
 800cc98:	4631      	mov	r1, r6
 800cc9a:	0147      	lsls	r7, r0, #5
 800cc9c:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800cca0:	4628      	mov	r0, r5
 800cca2:	4798      	blx	r3
 800cca4:	ab0a      	add	r3, sp, #40	; 0x28
 800cca6:	f843 0d0c 	str.w	r0, [r3, #-12]!
 800ccaa:	4618      	mov	r0, r3
 800ccac:	f7ff fa1a 	bl	800c0e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800ccb0:	ea4f 1840 	mov.w	r8, r0, lsl #5
 800ccb4:	4642      	mov	r2, r8
 800ccb6:	4639      	mov	r1, r7
 800ccb8:	4648      	mov	r0, r9
 800ccba:	f013 fba9 	bl	8020410 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800ccbe:	2301      	movs	r3, #1
 800ccc0:	9300      	str	r3, [sp, #0]
 800ccc2:	9b00      	ldr	r3, [sp, #0]
 800ccc4:	441c      	add	r4, r3
 800ccc6:	682b      	ldr	r3, [r5, #0]
 800ccc8:	b224      	sxth	r4, r4
 800ccca:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800ccce:	4621      	mov	r1, r4
 800ccd0:	4628      	mov	r0, r5
 800ccd2:	4798      	blx	r3
 800ccd4:	9008      	str	r0, [sp, #32]
 800ccd6:	a808      	add	r0, sp, #32
 800ccd8:	f7ff fa04 	bl	800c0e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800ccdc:	0143      	lsls	r3, r0, #5
 800ccde:	9301      	str	r3, [sp, #4]
 800cce0:	682b      	ldr	r3, [r5, #0]
 800cce2:	4621      	mov	r1, r4
 800cce4:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800cce8:	4628      	mov	r0, r5
 800ccea:	4798      	blx	r3
 800ccec:	9009      	str	r0, [sp, #36]	; 0x24
 800ccee:	a809      	add	r0, sp, #36	; 0x24
 800ccf0:	f7ff f9f8 	bl	800c0e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800ccf4:	0143      	lsls	r3, r0, #5
 800ccf6:	9302      	str	r3, [sp, #8]
 800ccf8:	9b01      	ldr	r3, [sp, #4]
 800ccfa:	eba3 0b07 	sub.w	fp, r3, r7
 800ccfe:	9b02      	ldr	r3, [sp, #8]
 800cd00:	eba3 0a08 	sub.w	sl, r3, r8
 800cd04:	4651      	mov	r1, sl
 800cd06:	4658      	mov	r0, fp
 800cd08:	f7ff fe8a 	bl	800ca20 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800cd0c:	b318      	cbz	r0, 800cd56 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xf8>
 800cd0e:	4602      	mov	r2, r0
 800cd10:	4651      	mov	r1, sl
 800cd12:	9005      	str	r0, [sp, #20]
 800cd14:	9803      	ldr	r0, [sp, #12]
 800cd16:	f005 fa09 	bl	801212c <_ZN8touchgfx6muldivElll>
 800cd1a:	2302      	movs	r3, #2
 800cd1c:	fb90 faf3 	sdiv	sl, r0, r3
 800cd20:	9b05      	ldr	r3, [sp, #20]
 800cd22:	9803      	ldr	r0, [sp, #12]
 800cd24:	461a      	mov	r2, r3
 800cd26:	4659      	mov	r1, fp
 800cd28:	f005 fa00 	bl	801212c <_ZN8touchgfx6muldivElll>
 800cd2c:	2302      	movs	r3, #2
 800cd2e:	eba7 010a 	sub.w	r1, r7, sl
 800cd32:	fb90 fbf3 	sdiv	fp, r0, r3
 800cd36:	4648      	mov	r0, r9
 800cd38:	eb0b 0208 	add.w	r2, fp, r8
 800cd3c:	f013 fa3e 	bl	80201bc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800cd40:	9b02      	ldr	r3, [sp, #8]
 800cd42:	eb03 020b 	add.w	r2, r3, fp
 800cd46:	9b01      	ldr	r3, [sp, #4]
 800cd48:	4648      	mov	r0, r9
 800cd4a:	eba3 010a 	sub.w	r1, r3, sl
 800cd4e:	f013 fa35 	bl	80201bc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800cd52:	e9dd 7801 	ldrd	r7, r8, [sp, #4]
 800cd56:	42a6      	cmp	r6, r4
 800cd58:	db02      	blt.n	800cd60 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x102>
 800cd5a:	b00b      	add	sp, #44	; 0x2c
 800cd5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cd60:	9b00      	ldr	r3, [sp, #0]
 800cd62:	9a04      	ldr	r2, [sp, #16]
 800cd64:	42a2      	cmp	r2, r4
 800cd66:	bf08      	it	eq
 800cd68:	f04f 33ff 	moveq.w	r3, #4294967295
 800cd6c:	e7a8      	b.n	800ccc0 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x62>
	...

0800cd70 <_ZN8touchgfx6CanvasD1Ev>:
 800cd70:	b510      	push	{r4, lr}
 800cd72:	4b04      	ldr	r3, [pc, #16]	; (800cd84 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 800cd74:	4604      	mov	r4, r0
 800cd76:	f840 3b20 	str.w	r3, [r0], #32
 800cd7a:	f001 fd31 	bl	800e7e0 <_ZN8touchgfx7OutlineD1Ev>
 800cd7e:	4620      	mov	r0, r4
 800cd80:	bd10      	pop	{r4, pc}
 800cd82:	bf00      	nop
 800cd84:	0802399c 	.word	0x0802399c

0800cd88 <_ZN8touchgfx6CanvasD0Ev>:
 800cd88:	b510      	push	{r4, lr}
 800cd8a:	4604      	mov	r4, r0
 800cd8c:	f7ff fff0 	bl	800cd70 <_ZN8touchgfx6CanvasD1Ev>
 800cd90:	4620      	mov	r0, r4
 800cd92:	2170      	movs	r1, #112	; 0x70
 800cd94:	f013 fb8e 	bl	80204b4 <_ZdlPvj>
 800cd98:	4620      	mov	r0, r4
 800cd9a:	bd10      	pop	{r4, pc}

0800cd9c <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE>:
 800cd9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cda0:	6943      	ldr	r3, [r0, #20]
 800cda2:	b0a2      	sub	sp, #136	; 0x88
 800cda4:	4606      	mov	r6, r0
 800cda6:	460f      	mov	r7, r1
 800cda8:	2b00      	cmp	r3, #0
 800cdaa:	d06a      	beq.n	800ce82 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xe6>
 800cdac:	695c      	ldr	r4, [r3, #20]
 800cdae:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800cdb2:	2b01      	cmp	r3, #1
 800cdb4:	dc04      	bgt.n	800cdc0 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x24>
 800cdb6:	2401      	movs	r4, #1
 800cdb8:	4620      	mov	r0, r4
 800cdba:	b022      	add	sp, #136	; 0x88
 800cdbc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cdc0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800cdc4:	ad22      	add	r5, sp, #136	; 0x88
 800cdc6:	011b      	lsls	r3, r3, #4
 800cdc8:	f845 3d70 	str.w	r3, [r5, #-112]!
 800cdcc:	4628      	mov	r0, r5
 800cdce:	f7ff fc62 	bl	800c696 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800cdd2:	8839      	ldrh	r1, [r7, #0]
 800cdd4:	88ba      	ldrh	r2, [r7, #4]
 800cdd6:	6823      	ldr	r3, [r4, #0]
 800cdd8:	b280      	uxth	r0, r0
 800cdda:	440a      	add	r2, r1
 800cddc:	4402      	add	r2, r0
 800cdde:	1a09      	subs	r1, r1, r0
 800cde0:	f10d 000e 	add.w	r0, sp, #14
 800cde4:	9000      	str	r0, [sp, #0]
 800cde6:	f8d3 8124 	ldr.w	r8, [r3, #292]	; 0x124
 800cdea:	b212      	sxth	r2, r2
 800cdec:	ab03      	add	r3, sp, #12
 800cdee:	b209      	sxth	r1, r1
 800cdf0:	4620      	mov	r0, r4
 800cdf2:	47c0      	blx	r8
 800cdf4:	2800      	cmp	r0, #0
 800cdf6:	d0de      	beq.n	800cdb6 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1a>
 800cdf8:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 800cdfc:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 800ce00:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 800ce04:	f8ad 1012 	strh.w	r1, [sp, #18]
 800ce08:	18ca      	adds	r2, r1, r3
 800ce0a:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800ce0e:	f8ad 0014 	strh.w	r0, [sp, #20]
 800ce12:	1a9b      	subs	r3, r3, r2
 800ce14:	4639      	mov	r1, r7
 800ce16:	2200      	movs	r2, #0
 800ce18:	a804      	add	r0, sp, #16
 800ce1a:	f8ad 3016 	strh.w	r3, [sp, #22]
 800ce1e:	f8ad 2010 	strh.w	r2, [sp, #16]
 800ce22:	f7fd fe8b 	bl	800ab3c <_ZN8touchgfx4RectaNERKS0_>
 800ce26:	aa04      	add	r2, sp, #16
 800ce28:	4631      	mov	r1, r6
 800ce2a:	4628      	mov	r0, r5
 800ce2c:	f013 f918 	bl	8020060 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 800ce30:	f9b4 7120 	ldrsh.w	r7, [r4, #288]	; 0x120
 800ce34:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800ce38:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 800ce3c:	2f00      	cmp	r7, #0
 800ce3e:	dd03      	ble.n	800ce48 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xac>
 800ce40:	42bb      	cmp	r3, r7
 800ce42:	da01      	bge.n	800ce48 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xac>
 800ce44:	42ba      	cmp	r2, r7
 800ce46:	da0f      	bge.n	800ce68 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xcc>
 800ce48:	9200      	str	r2, [sp, #0]
 800ce4a:	4622      	mov	r2, r4
 800ce4c:	4629      	mov	r1, r5
 800ce4e:	4630      	mov	r0, r6
 800ce50:	f7ff ff05 	bl	800cc5e <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 800ce54:	f894 102c 	ldrb.w	r1, [r4, #44]	; 0x2c
 800ce58:	4628      	mov	r0, r5
 800ce5a:	f013 fa2b 	bl	80202b4 <_ZN8touchgfx6Canvas6renderEh>
 800ce5e:	4604      	mov	r4, r0
 800ce60:	4628      	mov	r0, r5
 800ce62:	f7ff ff85 	bl	800cd70 <_ZN8touchgfx6CanvasD1Ev>
 800ce66:	e7a7      	b.n	800cdb8 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1c>
 800ce68:	1e7a      	subs	r2, r7, #1
 800ce6a:	b212      	sxth	r2, r2
 800ce6c:	9200      	str	r2, [sp, #0]
 800ce6e:	4629      	mov	r1, r5
 800ce70:	4622      	mov	r2, r4
 800ce72:	4630      	mov	r0, r6
 800ce74:	f7ff fef3 	bl	800cc5e <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 800ce78:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800ce7c:	9300      	str	r3, [sp, #0]
 800ce7e:	463b      	mov	r3, r7
 800ce80:	e7e3      	b.n	800ce4a <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xae>
 800ce82:	f8b3 311e 	ldrh.w	r3, [r3, #286]	; 0x11e
 800ce86:	deff      	udf	#255	; 0xff

0800ce88 <_ZN8touchgfx15GraphLabelsBase22invalidateGraphPointAtEs>:
 800ce88:	4770      	bx	lr

0800ce8a <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
 800ce8a:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800ce8c:	b118      	cbz	r0, 800ce96 <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 800ce8e:	6803      	ldr	r3, [r0, #0]
 800ce90:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800ce94:	4718      	bx	r3
 800ce96:	4770      	bx	lr

0800ce98 <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 800ce98:	680b      	ldr	r3, [r1, #0]
 800ce9a:	4608      	mov	r0, r1
 800ce9c:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 800cea0:	4718      	bx	r3

0800cea2 <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 800cea2:	680b      	ldr	r3, [r1, #0]
 800cea4:	4608      	mov	r0, r1
 800cea6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800ceaa:	4718      	bx	r3

0800ceac <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 800ceac:	680b      	ldr	r3, [r1, #0]
 800ceae:	4608      	mov	r0, r1
 800ceb0:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 800ceb4:	4718      	bx	r3

0800ceb6 <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 800ceb6:	680b      	ldr	r3, [r1, #0]
 800ceb8:	4608      	mov	r0, r1
 800ceba:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 800cebe:	4718      	bx	r3

0800cec0 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE>:
 800cec0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cec4:	4a37      	ldr	r2, [pc, #220]	; (800cfa4 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe4>)
 800cec6:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800cec8:	8812      	ldrh	r2, [r2, #0]
 800ceca:	429a      	cmp	r2, r3
 800cecc:	b087      	sub	sp, #28
 800cece:	4604      	mov	r4, r0
 800ced0:	4689      	mov	r9, r1
 800ced2:	d937      	bls.n	800cf44 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800ced4:	4a34      	ldr	r2, [pc, #208]	; (800cfa8 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe8>)
 800ced6:	6812      	ldr	r2, [r2, #0]
 800ced8:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800cedc:	4b33      	ldr	r3, [pc, #204]	; (800cfac <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xec>)
 800cede:	681b      	ldr	r3, [r3, #0]
 800cee0:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 800cee4:	f1b8 0f00 	cmp.w	r8, #0
 800cee8:	d02c      	beq.n	800cf44 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800ceea:	6803      	ldr	r3, [r0, #0]
 800ceec:	6945      	ldr	r5, [r0, #20]
 800ceee:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800cef0:	2d00      	cmp	r5, #0
 800cef2:	d052      	beq.n	800cf9a <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xda>
 800cef4:	696f      	ldr	r7, [r5, #20]
 800cef6:	4798      	blx	r3
 800cef8:	f897 502c 	ldrb.w	r5, [r7, #44]	; 0x2c
 800cefc:	fb15 f000 	smulbb	r0, r5, r0
 800cf00:	b280      	uxth	r0, r0
 800cf02:	1c45      	adds	r5, r0, #1
 800cf04:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800cf08:	122d      	asrs	r5, r5, #8
 800cf0a:	d01b      	beq.n	800cf44 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800cf0c:	6823      	ldr	r3, [r4, #0]
 800cf0e:	4639      	mov	r1, r7
 800cf10:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800cf14:	4620      	mov	r0, r4
 800cf16:	4798      	blx	r3
 800cf18:	6823      	ldr	r3, [r4, #0]
 800cf1a:	4606      	mov	r6, r0
 800cf1c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800cf20:	4639      	mov	r1, r7
 800cf22:	4620      	mov	r0, r4
 800cf24:	4798      	blx	r3
 800cf26:	b2ed      	uxtb	r5, r5
 800cf28:	4683      	mov	fp, r0
 800cf2a:	b970      	cbnz	r0, 800cf4a <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 800cf2c:	b96e      	cbnz	r6, 800cf4a <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 800cf2e:	e9cd 6501 	strd	r6, r5, [sp, #4]
 800cf32:	6823      	ldr	r3, [r4, #0]
 800cf34:	9600      	str	r6, [sp, #0]
 800cf36:	f8d3 508c 	ldr.w	r5, [r3, #140]	; 0x8c
 800cf3a:	4642      	mov	r2, r8
 800cf3c:	463b      	mov	r3, r7
 800cf3e:	4649      	mov	r1, r9
 800cf40:	4620      	mov	r0, r4
 800cf42:	47a8      	blx	r5
 800cf44:	b007      	add	sp, #28
 800cf46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cf4a:	2e00      	cmp	r6, #0
 800cf4c:	ddfa      	ble.n	800cf44 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800cf4e:	6823      	ldr	r3, [r4, #0]
 800cf50:	4639      	mov	r1, r7
 800cf52:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800cf56:	4620      	mov	r0, r4
 800cf58:	4798      	blx	r3
 800cf5a:	6823      	ldr	r3, [r4, #0]
 800cf5c:	4682      	mov	sl, r0
 800cf5e:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800cf62:	4639      	mov	r1, r7
 800cf64:	4620      	mov	r0, r4
 800cf66:	4798      	blx	r3
 800cf68:	4582      	cmp	sl, r0
 800cf6a:	bfde      	ittt	le
 800cf6c:	4603      	movle	r3, r0
 800cf6e:	4650      	movle	r0, sl
 800cf70:	469a      	movle	sl, r3
 800cf72:	ebaa 0300 	sub.w	r3, sl, r0
 800cf76:	fb93 f3f6 	sdiv	r3, r3, r6
 800cf7a:	2b64      	cmp	r3, #100	; 0x64
 800cf7c:	dce2      	bgt.n	800cf44 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800cf7e:	e9cd b503 	strd	fp, r5, [sp, #12]
 800cf82:	e9cd a601 	strd	sl, r6, [sp, #4]
 800cf86:	6823      	ldr	r3, [r4, #0]
 800cf88:	9000      	str	r0, [sp, #0]
 800cf8a:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800cf8e:	4642      	mov	r2, r8
 800cf90:	463b      	mov	r3, r7
 800cf92:	4649      	mov	r1, r9
 800cf94:	4620      	mov	r0, r4
 800cf96:	47a8      	blx	r5
 800cf98:	e7d4      	b.n	800cf44 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800cf9a:	4798      	blx	r3
 800cf9c:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800cfa0:	deff      	udf	#255	; 0xff
 800cfa2:	bf00      	nop
 800cfa4:	200154e4 	.word	0x200154e4
 800cfa8:	200154e0 	.word	0x200154e0
 800cfac:	200154e8 	.word	0x200154e8

0800cfb0 <_ZN8touchgfx12GraphLabelsYD1Ev>:
 800cfb0:	4770      	bx	lr

0800cfb2 <_ZN8touchgfx12GraphLabelsXD1Ev>:
 800cfb2:	4770      	bx	lr

0800cfb4 <_ZNK8touchgfx12GraphLabelsX31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 800cfb4:	b538      	push	{r3, r4, r5, lr}
 800cfb6:	680a      	ldr	r2, [r1, #0]
 800cfb8:	e9d0 540c 	ldrd	r5, r4, [r0, #48]	; 0x30
 800cfbc:	f8d2 208c 	ldr.w	r2, [r2, #140]	; 0x8c
 800cfc0:	4608      	mov	r0, r1
 800cfc2:	4790      	blx	r2
 800cfc4:	4629      	mov	r1, r5
 800cfc6:	4602      	mov	r2, r0
 800cfc8:	4620      	mov	r0, r4
 800cfca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800cfce:	f7ff baa7 	b.w	800c520 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0800cfd2 <_ZNK8touchgfx12GraphLabelsY31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 800cfd2:	b538      	push	{r3, r4, r5, lr}
 800cfd4:	680a      	ldr	r2, [r1, #0]
 800cfd6:	e9d0 540c 	ldrd	r5, r4, [r0, #48]	; 0x30
 800cfda:	f8d2 2094 	ldr.w	r2, [r2, #148]	; 0x94
 800cfde:	4608      	mov	r0, r1
 800cfe0:	4790      	blx	r2
 800cfe2:	4629      	mov	r1, r5
 800cfe4:	4602      	mov	r2, r0
 800cfe6:	4620      	mov	r0, r4
 800cfe8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800cfec:	f7ff ba98 	b.w	800c520 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0800cff0 <_ZN8touchgfx12GraphLabelsYD0Ev>:
 800cff0:	b510      	push	{r4, lr}
 800cff2:	214c      	movs	r1, #76	; 0x4c
 800cff4:	4604      	mov	r4, r0
 800cff6:	f013 fa5d 	bl	80204b4 <_ZdlPvj>
 800cffa:	4620      	mov	r0, r4
 800cffc:	bd10      	pop	{r4, pc}

0800cffe <_ZN8touchgfx12GraphLabelsXD0Ev>:
 800cffe:	b510      	push	{r4, lr}
 800d000:	214c      	movs	r1, #76	; 0x4c
 800d002:	4604      	mov	r4, r0
 800d004:	f013 fa56 	bl	80204b4 <_ZdlPvj>
 800d008:	4620      	mov	r0, r4
 800d00a:	bd10      	pop	{r4, pc}

0800d00c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 800d00c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d010:	b08d      	sub	sp, #52	; 0x34
 800d012:	e9dd 9a18 	ldrd	r9, sl, [sp, #96]	; 0x60
 800d016:	9309      	str	r3, [sp, #36]	; 0x24
 800d018:	f89d 3068 	ldrb.w	r3, [sp, #104]	; 0x68
 800d01c:	930a      	str	r3, [sp, #40]	; 0x28
 800d01e:	4606      	mov	r6, r0
 800d020:	e9cd 1207 	strd	r1, r2, [sp, #28]
 800d024:	e9dd 7816 	ldrd	r7, r8, [sp, #88]	; 0x58
 800d028:	f1b9 0f00 	cmp.w	r9, #0
 800d02c:	d117      	bne.n	800d05e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x52>
 800d02e:	2f00      	cmp	r7, #0
 800d030:	dc7c      	bgt.n	800d12c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x120>
 800d032:	f1b8 0f00 	cmp.w	r8, #0
 800d036:	da01      	bge.n	800d03c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 800d038:	2f00      	cmp	r7, #0
 800d03a:	d17a      	bne.n	800d132 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800d03c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d03e:	9318      	str	r3, [sp, #96]	; 0x60
 800d040:	2300      	movs	r3, #0
 800d042:	e9cd 3316 	strd	r3, r3, [sp, #88]	; 0x58
 800d046:	6832      	ldr	r2, [r6, #0]
 800d048:	9907      	ldr	r1, [sp, #28]
 800d04a:	f8d2 408c 	ldr.w	r4, [r2, #140]	; 0x8c
 800d04e:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800d052:	4630      	mov	r0, r6
 800d054:	46a4      	mov	ip, r4
 800d056:	b00d      	add	sp, #52	; 0x34
 800d058:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d05c:	4760      	bx	ip
 800d05e:	fb97 f4f9 	sdiv	r4, r7, r9
 800d062:	1e63      	subs	r3, r4, #1
 800d064:	9305      	str	r3, [sp, #20]
 800d066:	f1ba 0f00 	cmp.w	sl, #0
 800d06a:	d122      	bne.n	800d0b2 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xa6>
 800d06c:	fb98 faf9 	sdiv	sl, r8, r9
 800d070:	fb03 f509 	mul.w	r5, r3, r9
 800d074:	f10a 0a02 	add.w	sl, sl, #2
 800d078:	9b05      	ldr	r3, [sp, #20]
 800d07a:	459a      	cmp	sl, r3
 800d07c:	d059      	beq.n	800d132 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800d07e:	42af      	cmp	r7, r5
 800d080:	dc5a      	bgt.n	800d138 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x12c>
 800d082:	45a8      	cmp	r8, r5
 800d084:	da01      	bge.n	800d08a <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>
 800d086:	42af      	cmp	r7, r5
 800d088:	db0e      	blt.n	800d0a8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 800d08a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d08c:	9302      	str	r3, [sp, #8]
 800d08e:	9905      	ldr	r1, [sp, #20]
 800d090:	6b73      	ldr	r3, [r6, #52]	; 0x34
 800d092:	6832      	ldr	r2, [r6, #0]
 800d094:	434b      	muls	r3, r1
 800d096:	e9cd 5300 	strd	r5, r3, [sp]
 800d09a:	9907      	ldr	r1, [sp, #28]
 800d09c:	f8d2 b08c 	ldr.w	fp, [r2, #140]	; 0x8c
 800d0a0:	4630      	mov	r0, r6
 800d0a2:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800d0a6:	47d8      	blx	fp
 800d0a8:	9b05      	ldr	r3, [sp, #20]
 800d0aa:	3301      	adds	r3, #1
 800d0ac:	9305      	str	r3, [sp, #20]
 800d0ae:	444d      	add	r5, r9
 800d0b0:	e7e2      	b.n	800d078 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x6c>
 800d0b2:	fb97 f3fa 	sdiv	r3, r7, sl
 800d0b6:	3b01      	subs	r3, #1
 800d0b8:	9306      	str	r3, [sp, #24]
 800d0ba:	9a06      	ldr	r2, [sp, #24]
 800d0bc:	fb98 f3fa 	sdiv	r3, r8, sl
 800d0c0:	fb02 fb0a 	mul.w	fp, r2, sl
 800d0c4:	9a05      	ldr	r2, [sp, #20]
 800d0c6:	3302      	adds	r3, #2
 800d0c8:	fb02 f509 	mul.w	r5, r2, r9
 800d0cc:	930b      	str	r3, [sp, #44]	; 0x2c
 800d0ce:	45ab      	cmp	fp, r5
 800d0d0:	dd1d      	ble.n	800d10e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 800d0d2:	42af      	cmp	r7, r5
 800d0d4:	dc08      	bgt.n	800d0e8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xdc>
 800d0d6:	45a8      	cmp	r8, r5
 800d0d8:	da08      	bge.n	800d0ec <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 800d0da:	42af      	cmp	r7, r5
 800d0dc:	da06      	bge.n	800d0ec <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 800d0de:	9b05      	ldr	r3, [sp, #20]
 800d0e0:	3301      	adds	r3, #1
 800d0e2:	9305      	str	r3, [sp, #20]
 800d0e4:	444d      	add	r5, r9
 800d0e6:	e7f2      	b.n	800d0ce <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 800d0e8:	45a8      	cmp	r8, r5
 800d0ea:	dcf8      	bgt.n	800d0de <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 800d0ec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d0ee:	9302      	str	r3, [sp, #8]
 800d0f0:	9905      	ldr	r1, [sp, #20]
 800d0f2:	6b73      	ldr	r3, [r6, #52]	; 0x34
 800d0f4:	6832      	ldr	r2, [r6, #0]
 800d0f6:	434b      	muls	r3, r1
 800d0f8:	e9cd 5300 	strd	r5, r3, [sp]
 800d0fc:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800d100:	9907      	ldr	r1, [sp, #28]
 800d102:	461c      	mov	r4, r3
 800d104:	4630      	mov	r0, r6
 800d106:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800d10a:	47a0      	blx	r4
 800d10c:	e7e7      	b.n	800d0de <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 800d10e:	45ab      	cmp	fp, r5
 800d110:	db04      	blt.n	800d11c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x110>
 800d112:	9b05      	ldr	r3, [sp, #20]
 800d114:	3301      	adds	r3, #1
 800d116:	9305      	str	r3, [sp, #20]
 800d118:	444d      	add	r5, r9
 800d11a:	e7f8      	b.n	800d10e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 800d11c:	9b06      	ldr	r3, [sp, #24]
 800d11e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d120:	3301      	adds	r3, #1
 800d122:	4293      	cmp	r3, r2
 800d124:	9306      	str	r3, [sp, #24]
 800d126:	d004      	beq.n	800d132 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800d128:	44d3      	add	fp, sl
 800d12a:	e7d0      	b.n	800d0ce <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 800d12c:	f1b8 0f00 	cmp.w	r8, #0
 800d130:	dd84      	ble.n	800d03c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 800d132:	b00d      	add	sp, #52	; 0x34
 800d134:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d138:	45a8      	cmp	r8, r5
 800d13a:	dcb5      	bgt.n	800d0a8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 800d13c:	e7a5      	b.n	800d08a <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>

0800d13e <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 800d13e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d142:	f9b3 4120 	ldrsh.w	r4, [r3, #288]	; 0x120
 800d146:	b089      	sub	sp, #36	; 0x24
 800d148:	2c00      	cmp	r4, #0
 800d14a:	9007      	str	r0, [sp, #28]
 800d14c:	468a      	mov	sl, r1
 800d14e:	4693      	mov	fp, r2
 800d150:	461d      	mov	r5, r3
 800d152:	e9dd c612 	ldrd	ip, r6, [sp, #72]	; 0x48
 800d156:	e9dd 7814 	ldrd	r7, r8, [sp, #80]	; 0x50
 800d15a:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800d15e:	dd03      	ble.n	800d168 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 800d160:	4564      	cmp	r4, ip
 800d162:	dd01      	ble.n	800d168 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 800d164:	42b4      	cmp	r4, r6
 800d166:	dd0e      	ble.n	800d186 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x48>
 800d168:	e9cd 8915 	strd	r8, r9, [sp, #84]	; 0x54
 800d16c:	e9cd 6713 	strd	r6, r7, [sp, #76]	; 0x4c
 800d170:	f8cd c048 	str.w	ip, [sp, #72]	; 0x48
 800d174:	9807      	ldr	r0, [sp, #28]
 800d176:	462b      	mov	r3, r5
 800d178:	465a      	mov	r2, fp
 800d17a:	4651      	mov	r1, sl
 800d17c:	b009      	add	sp, #36	; 0x24
 800d17e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d182:	f7ff bf43 	b.w	800d00c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 800d186:	f104 3eff 	add.w	lr, r4, #4294967295
 800d18a:	e9cd 8903 	strd	r8, r9, [sp, #12]
 800d18e:	9702      	str	r7, [sp, #8]
 800d190:	e9cd ce00 	strd	ip, lr, [sp]
 800d194:	f7ff ff3a 	bl	800d00c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 800d198:	e9cd 8915 	strd	r8, r9, [sp, #84]	; 0x54
 800d19c:	e9cd 6713 	strd	r6, r7, [sp, #76]	; 0x4c
 800d1a0:	9412      	str	r4, [sp, #72]	; 0x48
 800d1a2:	e7e7      	b.n	800d174 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x36>

0800d1a4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>:
 800d1a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d1a8:	f1b3 0900 	subs.w	r9, r3, #0
 800d1ac:	460d      	mov	r5, r1
 800d1ae:	4690      	mov	r8, r2
 800d1b0:	9f08      	ldr	r7, [sp, #32]
 800d1b2:	f8bd a024 	ldrh.w	sl, [sp, #36]	; 0x24
 800d1b6:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 800d1b8:	da18      	bge.n	800d1ec <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 800d1ba:	2a01      	cmp	r2, #1
 800d1bc:	dd16      	ble.n	800d1ec <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 800d1be:	232d      	movs	r3, #45	; 0x2d
 800d1c0:	800b      	strh	r3, [r1, #0]
 800d1c2:	f1c9 0900 	rsb	r9, r9, #0
 800d1c6:	2001      	movs	r0, #1
 800d1c8:	2f00      	cmp	r7, #0
 800d1ca:	d111      	bne.n	800d1f0 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x4c>
 800d1cc:	eba8 0100 	sub.w	r1, r8, r0
 800d1d0:	2302      	movs	r3, #2
 800d1d2:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800d1d6:	fb96 f3f3 	sdiv	r3, r6, r3
 800d1da:	4a24      	ldr	r2, [pc, #144]	; (800d26c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 800d1dc:	444b      	add	r3, r9
 800d1de:	b289      	uxth	r1, r1
 800d1e0:	fb93 f3f6 	sdiv	r3, r3, r6
 800d1e4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d1e8:	f006 be06 	b.w	8013df8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800d1ec:	2000      	movs	r0, #0
 800d1ee:	e7eb      	b.n	800d1c8 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x24>
 800d1f0:	dd39      	ble.n	800d266 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 800d1f2:	fb99 f4f6 	sdiv	r4, r9, r6
 800d1f6:	eba8 0100 	sub.w	r1, r8, r0
 800d1fa:	4623      	mov	r3, r4
 800d1fc:	4a1b      	ldr	r2, [pc, #108]	; (800d26c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 800d1fe:	b289      	uxth	r1, r1
 800d200:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800d204:	f006 fdf8 	bl	8013df8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800d208:	4628      	mov	r0, r5
 800d20a:	f006 fa81 	bl	8013710 <_ZN8touchgfx7Unicode6strlenEPKt>
 800d20e:	f108 38ff 	add.w	r8, r8, #4294967295
 800d212:	4580      	cmp	r8, r0
 800d214:	dd27      	ble.n	800d266 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 800d216:	f825 a010 	strh.w	sl, [r5, r0, lsl #1]
 800d21a:	fb06 9314 	mls	r3, r6, r4, r9
 800d21e:	3001      	adds	r0, #1
 800d220:	2200      	movs	r2, #0
 800d222:	f04f 090a 	mov.w	r9, #10
 800d226:	f107 3aff 	add.w	sl, r7, #4294967295
 800d22a:	f04f 0e02 	mov.w	lr, #2
 800d22e:	fb96 fefe 	sdiv	lr, r6, lr
 800d232:	4580      	cmp	r8, r0
 800d234:	4684      	mov	ip, r0
 800d236:	dd13      	ble.n	800d260 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xbc>
 800d238:	fb09 f303 	mul.w	r3, r9, r3
 800d23c:	4592      	cmp	sl, r2
 800d23e:	f102 0201 	add.w	r2, r2, #1
 800d242:	bf08      	it	eq
 800d244:	4473      	addeq	r3, lr
 800d246:	f100 0c01 	add.w	ip, r0, #1
 800d24a:	fb93 f4f6 	sdiv	r4, r3, r6
 800d24e:	4297      	cmp	r7, r2
 800d250:	f104 0130 	add.w	r1, r4, #48	; 0x30
 800d254:	f825 1010 	strh.w	r1, [r5, r0, lsl #1]
 800d258:	fb06 3314 	mls	r3, r6, r4, r3
 800d25c:	4660      	mov	r0, ip
 800d25e:	d1e8      	bne.n	800d232 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x8e>
 800d260:	2300      	movs	r3, #0
 800d262:	f825 301c 	strh.w	r3, [r5, ip, lsl #1]
 800d266:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d26a:	bf00      	nop
 800d26c:	080233ec 	.word	0x080233ec

0800d270 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs>:
 800d270:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d274:	4a6b      	ldr	r2, [pc, #428]	; (800d424 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1b4>)
 800d276:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800d278:	8812      	ldrh	r2, [r2, #0]
 800d27a:	429a      	cmp	r2, r3
 800d27c:	b092      	sub	sp, #72	; 0x48
 800d27e:	4604      	mov	r4, r0
 800d280:	460e      	mov	r6, r1
 800d282:	d93a      	bls.n	800d2fa <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d284:	4a68      	ldr	r2, [pc, #416]	; (800d428 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1b8>)
 800d286:	6812      	ldr	r2, [r2, #0]
 800d288:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800d28c:	4b67      	ldr	r3, [pc, #412]	; (800d42c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1bc>)
 800d28e:	681b      	ldr	r3, [r3, #0]
 800d290:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 800d294:	f1b8 0f00 	cmp.w	r8, #0
 800d298:	d02f      	beq.n	800d2fa <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d29a:	6803      	ldr	r3, [r0, #0]
 800d29c:	6945      	ldr	r5, [r0, #20]
 800d29e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800d2a0:	2d00      	cmp	r5, #0
 800d2a2:	f000 80ba 	beq.w	800d41a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1aa>
 800d2a6:	696f      	ldr	r7, [r5, #20]
 800d2a8:	4798      	blx	r3
 800d2aa:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 800d2ae:	fb13 f000 	smulbb	r0, r3, r0
 800d2b2:	b280      	uxth	r0, r0
 800d2b4:	1c43      	adds	r3, r0, #1
 800d2b6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 800d2ba:	0a03      	lsrs	r3, r0, #8
 800d2bc:	d01d      	beq.n	800d2fa <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d2be:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800d2c0:	6823      	ldr	r3, [r4, #0]
 800d2c2:	434e      	muls	r6, r1
 800d2c4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d2c8:	4639      	mov	r1, r7
 800d2ca:	4620      	mov	r0, r4
 800d2cc:	4798      	blx	r3
 800d2ce:	6823      	ldr	r3, [r4, #0]
 800d2d0:	4605      	mov	r5, r0
 800d2d2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800d2d6:	4639      	mov	r1, r7
 800d2d8:	4620      	mov	r0, r4
 800d2da:	4798      	blx	r3
 800d2dc:	2d00      	cmp	r5, #0
 800d2de:	dd0f      	ble.n	800d300 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x90>
 800d2e0:	fb96 f3f5 	sdiv	r3, r6, r5
 800d2e4:	436b      	muls	r3, r5
 800d2e6:	1b9a      	subs	r2, r3, r6
 800d2e8:	4253      	negs	r3, r2
 800d2ea:	4153      	adcs	r3, r2
 800d2ec:	2800      	cmp	r0, #0
 800d2ee:	dd09      	ble.n	800d304 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x94>
 800d2f0:	fb96 f2f0 	sdiv	r2, r6, r0
 800d2f4:	4350      	muls	r0, r2
 800d2f6:	42b0      	cmp	r0, r6
 800d2f8:	d10e      	bne.n	800d318 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa8>
 800d2fa:	b012      	add	sp, #72	; 0x48
 800d2fc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d300:	2300      	movs	r3, #0
 800d302:	e7f3      	b.n	800d2ec <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x7c>
 800d304:	d108      	bne.n	800d318 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa8>
 800d306:	2d00      	cmp	r5, #0
 800d308:	f040 8084 	bne.w	800d414 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1a4>
 800d30c:	2e00      	cmp	r6, #0
 800d30e:	d055      	beq.n	800d3bc <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x14c>
 800d310:	2b00      	cmp	r3, #0
 800d312:	d0f2      	beq.n	800d2fa <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d314:	462a      	mov	r2, r5
 800d316:	e007      	b.n	800d328 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb8>
 800d318:	2b00      	cmp	r3, #0
 800d31a:	d0ee      	beq.n	800d2fa <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d31c:	2d00      	cmp	r5, #0
 800d31e:	d0f9      	beq.n	800d314 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa4>
 800d320:	fb96 f2f5 	sdiv	r2, r6, r5
 800d324:	6b65      	ldr	r5, [r4, #52]	; 0x34
 800d326:	436a      	muls	r2, r5
 800d328:	683b      	ldr	r3, [r7, #0]
 800d32a:	f8df 9104 	ldr.w	r9, [pc, #260]	; 800d430 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1c0>
 800d32e:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 800d332:	4631      	mov	r1, r6
 800d334:	4638      	mov	r0, r7
 800d336:	4798      	blx	r3
 800d338:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800d33a:	9302      	str	r3, [sp, #8]
 800d33c:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 800d340:	9301      	str	r3, [sp, #4]
 800d342:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800d346:	9300      	str	r3, [sp, #0]
 800d348:	a908      	add	r1, sp, #32
 800d34a:	4603      	mov	r3, r0
 800d34c:	2214      	movs	r2, #20
 800d34e:	4620      	mov	r0, r4
 800d350:	f7ff ff28 	bl	800d1a4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800d354:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800d358:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d35a:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d35e:	f8d8 3000 	ldr.w	r3, [r8]
 800d362:	d12d      	bne.n	800d3c0 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x150>
 800d364:	f8d9 0000 	ldr.w	r0, [r9]
 800d368:	699d      	ldr	r5, [r3, #24]
 800d36a:	f7f7 fd57 	bl	8004e1c <_ZNK8touchgfx5Texts7getTextEt>
 800d36e:	aa08      	add	r2, sp, #32
 800d370:	4601      	mov	r1, r0
 800d372:	4640      	mov	r0, r8
 800d374:	47a8      	blx	r5
 800d376:	4605      	mov	r5, r0
 800d378:	683b      	ldr	r3, [r7, #0]
 800d37a:	f8b7 806c 	ldrh.w	r8, [r7, #108]	; 0x6c
 800d37e:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800d382:	4631      	mov	r1, r6
 800d384:	4638      	mov	r0, r7
 800d386:	4798      	blx	r3
 800d388:	ab12      	add	r3, sp, #72	; 0x48
 800d38a:	f843 0d34 	str.w	r0, [r3, #-52]!
 800d38e:	4618      	mov	r0, r3
 800d390:	f7fe fea8 	bl	800c0e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d394:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800d398:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d39c:	4440      	add	r0, r8
 800d39e:	6823      	ldr	r3, [r4, #0]
 800d3a0:	f8ad 501c 	strh.w	r5, [sp, #28]
 800d3a4:	eba0 0055 	sub.w	r0, r0, r5, lsr #1
 800d3a8:	2200      	movs	r2, #0
 800d3aa:	f8ad 0018 	strh.w	r0, [sp, #24]
 800d3ae:	f8ad 201a 	strh.w	r2, [sp, #26]
 800d3b2:	691b      	ldr	r3, [r3, #16]
 800d3b4:	a906      	add	r1, sp, #24
 800d3b6:	4620      	mov	r0, r4
 800d3b8:	4798      	blx	r3
 800d3ba:	e79e      	b.n	800d2fa <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d3bc:	4632      	mov	r2, r6
 800d3be:	e7b3      	b.n	800d328 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb8>
 800d3c0:	f8d9 0000 	ldr.w	r0, [r9]
 800d3c4:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800d3c6:	f7f7 fd29 	bl	8004e1c <_ZNK8touchgfx5Texts7getTextEt>
 800d3ca:	aa08      	add	r2, sp, #32
 800d3cc:	4601      	mov	r1, r0
 800d3ce:	4640      	mov	r0, r8
 800d3d0:	47a8      	blx	r5
 800d3d2:	f8d8 3000 	ldr.w	r3, [r8]
 800d3d6:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d3d8:	f8d3 a040 	ldr.w	sl, [r3, #64]	; 0x40
 800d3dc:	4605      	mov	r5, r0
 800d3de:	f8d9 0000 	ldr.w	r0, [r9]
 800d3e2:	f7f7 fd1b 	bl	8004e1c <_ZNK8touchgfx5Texts7getTextEt>
 800d3e6:	aa08      	add	r2, sp, #32
 800d3e8:	4601      	mov	r1, r0
 800d3ea:	4640      	mov	r0, r8
 800d3ec:	47d0      	blx	sl
 800d3ee:	f8d8 3000 	ldr.w	r3, [r8]
 800d3f2:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d3f4:	f8d3 a024 	ldr.w	sl, [r3, #36]	; 0x24
 800d3f8:	fb15 f500 	smulbb	r5, r5, r0
 800d3fc:	f8d9 0000 	ldr.w	r0, [r9]
 800d400:	f7f7 fd0c 	bl	8004e1c <_ZNK8touchgfx5Texts7getTextEt>
 800d404:	aa08      	add	r2, sp, #32
 800d406:	4601      	mov	r1, r0
 800d408:	4640      	mov	r0, r8
 800d40a:	47d0      	blx	sl
 800d40c:	b2ad      	uxth	r5, r5
 800d40e:	4405      	add	r5, r0
 800d410:	b2ad      	uxth	r5, r5
 800d412:	e7b1      	b.n	800d378 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x108>
 800d414:	2b00      	cmp	r3, #0
 800d416:	d183      	bne.n	800d320 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb0>
 800d418:	e76f      	b.n	800d2fa <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d41a:	4798      	blx	r3
 800d41c:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800d420:	deff      	udf	#255	; 0xff
 800d422:	bf00      	nop
 800d424:	200154e4 	.word	0x200154e4
 800d428:	200154e0 	.word	0x200154e0
 800d42c:	200154e8 	.word	0x200154e8
 800d430:	200154ec 	.word	0x200154ec

0800d434 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 800d434:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d438:	461d      	mov	r5, r3
 800d43a:	b099      	sub	sp, #100	; 0x64
 800d43c:	681b      	ldr	r3, [r3, #0]
 800d43e:	4604      	mov	r4, r0
 800d440:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800d444:	4689      	mov	r9, r1
 800d446:	4628      	mov	r0, r5
 800d448:	9922      	ldr	r1, [sp, #136]	; 0x88
 800d44a:	4690      	mov	r8, r2
 800d44c:	4798      	blx	r3
 800d44e:	af18      	add	r7, sp, #96	; 0x60
 800d450:	f847 0d28 	str.w	r0, [r7, #-40]!
 800d454:	4638      	mov	r0, r7
 800d456:	f7fe fe45 	bl	800c0e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d45a:	f8b5 3116 	ldrh.w	r3, [r5, #278]	; 0x116
 800d45e:	1ac0      	subs	r0, r0, r3
 800d460:	b200      	sxth	r0, r0
 800d462:	2800      	cmp	r0, #0
 800d464:	f2c0 80b0 	blt.w	800d5c8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800d468:	f8b5 2118 	ldrh.w	r2, [r5, #280]	; 0x118
 800d46c:	441a      	add	r2, r3
 800d46e:	f8b5 3040 	ldrh.w	r3, [r5, #64]	; 0x40
 800d472:	1a9b      	subs	r3, r3, r2
 800d474:	b21b      	sxth	r3, r3
 800d476:	4298      	cmp	r0, r3
 800d478:	f280 80a6 	bge.w	800d5c8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800d47c:	682b      	ldr	r3, [r5, #0]
 800d47e:	e9dd 1222 	ldrd	r1, r2, [sp, #136]	; 0x88
 800d482:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 800d486:	4628      	mov	r0, r5
 800d488:	4798      	blx	r3
 800d48a:	682b      	ldr	r3, [r5, #0]
 800d48c:	f8b4 a042 	ldrh.w	sl, [r4, #66]	; 0x42
 800d490:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800d494:	f8b4 b044 	ldrh.w	fp, [r4, #68]	; 0x44
 800d498:	4606      	mov	r6, r0
 800d49a:	4628      	mov	r0, r5
 800d49c:	4798      	blx	r3
 800d49e:	f8cd a000 	str.w	sl, [sp]
 800d4a2:	e9cd b001 	strd	fp, r0, [sp, #4]
 800d4a6:	4633      	mov	r3, r6
 800d4a8:	4639      	mov	r1, r7
 800d4aa:	2214      	movs	r2, #20
 800d4ac:	4620      	mov	r0, r4
 800d4ae:	f7ff fe79 	bl	800d1a4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800d4b2:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800d4b6:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d4b8:	f8df a16c 	ldr.w	sl, [pc, #364]	; 800d628 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f4>
 800d4bc:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d4c0:	f8d8 3000 	ldr.w	r3, [r8]
 800d4c4:	f040 8083 	bne.w	800d5ce <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x19a>
 800d4c8:	f8da 0000 	ldr.w	r0, [sl]
 800d4cc:	699e      	ldr	r6, [r3, #24]
 800d4ce:	f7f7 fca5 	bl	8004e1c <_ZNK8touchgfx5Texts7getTextEt>
 800d4d2:	463a      	mov	r2, r7
 800d4d4:	4601      	mov	r1, r0
 800d4d6:	4640      	mov	r0, r8
 800d4d8:	47b0      	blx	r6
 800d4da:	4606      	mov	r6, r0
 800d4dc:	682b      	ldr	r3, [r5, #0]
 800d4de:	9922      	ldr	r1, [sp, #136]	; 0x88
 800d4e0:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800d4e4:	f8b5 a06c 	ldrh.w	sl, [r5, #108]	; 0x6c
 800d4e8:	4628      	mov	r0, r5
 800d4ea:	4798      	blx	r3
 800d4ec:	f10d 0b60 	add.w	fp, sp, #96	; 0x60
 800d4f0:	ad05      	add	r5, sp, #20
 800d4f2:	f84b 0d3c 	str.w	r0, [fp, #-60]!
 800d4f6:	4658      	mov	r0, fp
 800d4f8:	f7fe fdf4 	bl	800c0e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d4fc:	4450      	add	r0, sl
 800d4fe:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800d502:	f8ad 6018 	strh.w	r6, [sp, #24]
 800d506:	eba0 0056 	sub.w	r0, r0, r6, lsr #1
 800d50a:	f04f 0a00 	mov.w	sl, #0
 800d50e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800d512:	f8ad 0014 	strh.w	r0, [sp, #20]
 800d516:	f8ad a016 	strh.w	sl, [sp, #22]
 800d51a:	e895 0003 	ldmia.w	r5, {r0, r1}
 800d51e:	ae07      	add	r6, sp, #28
 800d520:	e886 0003 	stmia.w	r6, {r0, r1}
 800d524:	4649      	mov	r1, r9
 800d526:	4630      	mov	r0, r6
 800d528:	f7fd fb08 	bl	800ab3c <_ZN8touchgfx4RectaNERKS0_>
 800d52c:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800d530:	4553      	cmp	r3, sl
 800d532:	dd49      	ble.n	800d5c8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800d534:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800d538:	4553      	cmp	r3, sl
 800d53a:	dd45      	ble.n	800d5c8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800d53c:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800d540:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800d544:	1a9b      	subs	r3, r3, r2
 800d546:	f8ad 301c 	strh.w	r3, [sp, #28]
 800d54a:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800d54e:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 800d552:	1a9b      	subs	r3, r3, r2
 800d554:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d558:	6823      	ldr	r3, [r4, #0]
 800d55a:	4620      	mov	r0, r4
 800d55c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d55e:	4629      	mov	r1, r5
 800d560:	4798      	blx	r3
 800d562:	4b30      	ldr	r3, [pc, #192]	; (800d624 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f0>)
 800d564:	f8b4 903c 	ldrh.w	r9, [r4, #60]	; 0x3c
 800d568:	681b      	ldr	r3, [r3, #0]
 800d56a:	f894 1040 	ldrb.w	r1, [r4, #64]	; 0x40
 800d56e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d570:	eb03 0349 	add.w	r3, r3, r9, lsl #1
 800d574:	785b      	ldrb	r3, [r3, #1]
 800d576:	920b      	str	r2, [sp, #44]	; 0x2c
 800d578:	f3c3 0001 	ubfx	r0, r3, #0, #2
 800d57c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800d580:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800d584:	f89d 3090 	ldrb.w	r3, [sp, #144]	; 0x90
 800d588:	f88d 102a 	strb.w	r1, [sp, #42]	; 0x2a
 800d58c:	f88d 3032 	strb.w	r3, [sp, #50]	; 0x32
 800d590:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 800d594:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800d598:	f8ad a030 	strh.w	sl, [sp, #48]	; 0x30
 800d59c:	f88d a033 	strb.w	sl, [sp, #51]	; 0x33
 800d5a0:	f88d a034 	strb.w	sl, [sp, #52]	; 0x34
 800d5a4:	f7f4 ffb8 	bl	8002518 <_ZN8touchgfx3HAL3lcdEv>
 800d5a8:	4b1f      	ldr	r3, [pc, #124]	; (800d628 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f4>)
 800d5aa:	4604      	mov	r4, r0
 800d5ac:	4649      	mov	r1, r9
 800d5ae:	6818      	ldr	r0, [r3, #0]
 800d5b0:	f7f7 fc34 	bl	8004e1c <_ZNK8touchgfx5Texts7getTextEt>
 800d5b4:	e9cd 7a02 	strd	r7, sl, [sp, #8]
 800d5b8:	e9cd b000 	strd	fp, r0, [sp]
 800d5bc:	4633      	mov	r3, r6
 800d5be:	e895 0006 	ldmia.w	r5, {r1, r2}
 800d5c2:	4620      	mov	r0, r4
 800d5c4:	f7f7 fbdc 	bl	8004d80 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800d5c8:	b019      	add	sp, #100	; 0x64
 800d5ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d5ce:	f8da 0000 	ldr.w	r0, [sl]
 800d5d2:	6a9e      	ldr	r6, [r3, #40]	; 0x28
 800d5d4:	f7f7 fc22 	bl	8004e1c <_ZNK8touchgfx5Texts7getTextEt>
 800d5d8:	463a      	mov	r2, r7
 800d5da:	4601      	mov	r1, r0
 800d5dc:	4640      	mov	r0, r8
 800d5de:	47b0      	blx	r6
 800d5e0:	f8d8 3000 	ldr.w	r3, [r8]
 800d5e4:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d5e6:	f8d3 b040 	ldr.w	fp, [r3, #64]	; 0x40
 800d5ea:	4606      	mov	r6, r0
 800d5ec:	f8da 0000 	ldr.w	r0, [sl]
 800d5f0:	f7f7 fc14 	bl	8004e1c <_ZNK8touchgfx5Texts7getTextEt>
 800d5f4:	463a      	mov	r2, r7
 800d5f6:	4601      	mov	r1, r0
 800d5f8:	4640      	mov	r0, r8
 800d5fa:	47d8      	blx	fp
 800d5fc:	f8d8 3000 	ldr.w	r3, [r8]
 800d600:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d602:	f8d3 b024 	ldr.w	fp, [r3, #36]	; 0x24
 800d606:	fb16 f600 	smulbb	r6, r6, r0
 800d60a:	f8da 0000 	ldr.w	r0, [sl]
 800d60e:	f7f7 fc05 	bl	8004e1c <_ZNK8touchgfx5Texts7getTextEt>
 800d612:	463a      	mov	r2, r7
 800d614:	4601      	mov	r1, r0
 800d616:	4640      	mov	r0, r8
 800d618:	47d8      	blx	fp
 800d61a:	b2b6      	uxth	r6, r6
 800d61c:	4406      	add	r6, r0
 800d61e:	b2b6      	uxth	r6, r6
 800d620:	e75c      	b.n	800d4dc <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa8>
 800d622:	bf00      	nop
 800d624:	200154e0 	.word	0x200154e0
 800d628:	200154ec 	.word	0x200154ec

0800d62c <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 800d62c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d630:	4698      	mov	r8, r3
 800d632:	b099      	sub	sp, #100	; 0x64
 800d634:	681b      	ldr	r3, [r3, #0]
 800d636:	4604      	mov	r4, r0
 800d638:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 800d63c:	4689      	mov	r9, r1
 800d63e:	4640      	mov	r0, r8
 800d640:	9922      	ldr	r1, [sp, #136]	; 0x88
 800d642:	4617      	mov	r7, r2
 800d644:	4798      	blx	r3
 800d646:	ae18      	add	r6, sp, #96	; 0x60
 800d648:	f846 0d28 	str.w	r0, [r6, #-40]!
 800d64c:	4630      	mov	r0, r6
 800d64e:	f7fe fd49 	bl	800c0e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d652:	f8b8 3114 	ldrh.w	r3, [r8, #276]	; 0x114
 800d656:	1ac0      	subs	r0, r0, r3
 800d658:	b200      	sxth	r0, r0
 800d65a:	2800      	cmp	r0, #0
 800d65c:	f2c0 80c0 	blt.w	800d7e0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800d660:	f8b8 211a 	ldrh.w	r2, [r8, #282]	; 0x11a
 800d664:	441a      	add	r2, r3
 800d666:	f8b8 3042 	ldrh.w	r3, [r8, #66]	; 0x42
 800d66a:	1a9b      	subs	r3, r3, r2
 800d66c:	b21b      	sxth	r3, r3
 800d66e:	4298      	cmp	r0, r3
 800d670:	f280 80b6 	bge.w	800d7e0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800d674:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800d676:	9302      	str	r3, [sp, #8]
 800d678:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 800d67c:	9301      	str	r3, [sp, #4]
 800d67e:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800d682:	9300      	str	r3, [sp, #0]
 800d684:	4631      	mov	r1, r6
 800d686:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800d688:	f8df a174 	ldr.w	sl, [pc, #372]	; 800d800 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d4>
 800d68c:	2214      	movs	r2, #20
 800d68e:	4620      	mov	r0, r4
 800d690:	f7ff fd88 	bl	800d1a4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800d694:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800d698:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d69a:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d69e:	683b      	ldr	r3, [r7, #0]
 800d6a0:	f040 80a1 	bne.w	800d7e6 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1ba>
 800d6a4:	f8da 0000 	ldr.w	r0, [sl]
 800d6a8:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800d6aa:	f7f7 fbb7 	bl	8004e1c <_ZNK8touchgfx5Texts7getTextEt>
 800d6ae:	4632      	mov	r2, r6
 800d6b0:	4601      	mov	r1, r0
 800d6b2:	4638      	mov	r0, r7
 800d6b4:	47a8      	blx	r5
 800d6b6:	683b      	ldr	r3, [r7, #0]
 800d6b8:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d6ba:	f8d3 b040 	ldr.w	fp, [r3, #64]	; 0x40
 800d6be:	4605      	mov	r5, r0
 800d6c0:	f8da 0000 	ldr.w	r0, [sl]
 800d6c4:	f7f7 fbaa 	bl	8004e1c <_ZNK8touchgfx5Texts7getTextEt>
 800d6c8:	4632      	mov	r2, r6
 800d6ca:	4601      	mov	r1, r0
 800d6cc:	4638      	mov	r0, r7
 800d6ce:	47d8      	blx	fp
 800d6d0:	683b      	ldr	r3, [r7, #0]
 800d6d2:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d6d4:	f8d3 b024 	ldr.w	fp, [r3, #36]	; 0x24
 800d6d8:	fb15 f500 	smulbb	r5, r5, r0
 800d6dc:	f8da 0000 	ldr.w	r0, [sl]
 800d6e0:	f7f7 fb9c 	bl	8004e1c <_ZNK8touchgfx5Texts7getTextEt>
 800d6e4:	4632      	mov	r2, r6
 800d6e6:	4601      	mov	r1, r0
 800d6e8:	4638      	mov	r0, r7
 800d6ea:	47d8      	blx	fp
 800d6ec:	b2ad      	uxth	r5, r5
 800d6ee:	4405      	add	r5, r0
 800d6f0:	b2ad      	uxth	r5, r5
 800d6f2:	f8d8 3000 	ldr.w	r3, [r8]
 800d6f6:	9922      	ldr	r1, [sp, #136]	; 0x88
 800d6f8:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 800d6fc:	f8b8 a0c6 	ldrh.w	sl, [r8, #198]	; 0xc6
 800d700:	4640      	mov	r0, r8
 800d702:	4798      	blx	r3
 800d704:	f10d 0b60 	add.w	fp, sp, #96	; 0x60
 800d708:	f04f 0800 	mov.w	r8, #0
 800d70c:	f84b 0d3c 	str.w	r0, [fp, #-60]!
 800d710:	4658      	mov	r0, fp
 800d712:	f7fe fce7 	bl	800c0e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d716:	4450      	add	r0, sl
 800d718:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800d71c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d720:	eba0 0055 	sub.w	r0, r0, r5, lsr #1
 800d724:	f8ad 501a 	strh.w	r5, [sp, #26]
 800d728:	f8ad 8014 	strh.w	r8, [sp, #20]
 800d72c:	f8ad 0016 	strh.w	r0, [sp, #22]
 800d730:	ad05      	add	r5, sp, #20
 800d732:	e895 0003 	ldmia.w	r5, {r0, r1}
 800d736:	f10d 0a1c 	add.w	sl, sp, #28
 800d73a:	e88a 0003 	stmia.w	sl, {r0, r1}
 800d73e:	4649      	mov	r1, r9
 800d740:	4650      	mov	r0, sl
 800d742:	f7fd f9fb 	bl	800ab3c <_ZN8touchgfx4RectaNERKS0_>
 800d746:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800d74a:	4543      	cmp	r3, r8
 800d74c:	dd48      	ble.n	800d7e0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800d74e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800d752:	4543      	cmp	r3, r8
 800d754:	dd44      	ble.n	800d7e0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800d756:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800d75a:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800d75e:	1a9b      	subs	r3, r3, r2
 800d760:	f8ad 301c 	strh.w	r3, [sp, #28]
 800d764:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800d768:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 800d76c:	1a9b      	subs	r3, r3, r2
 800d76e:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d772:	6823      	ldr	r3, [r4, #0]
 800d774:	4620      	mov	r0, r4
 800d776:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d778:	4629      	mov	r1, r5
 800d77a:	4798      	blx	r3
 800d77c:	4b1f      	ldr	r3, [pc, #124]	; (800d7fc <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d0>)
 800d77e:	f8b4 903c 	ldrh.w	r9, [r4, #60]	; 0x3c
 800d782:	681b      	ldr	r3, [r3, #0]
 800d784:	f894 1040 	ldrb.w	r1, [r4, #64]	; 0x40
 800d788:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d78a:	eb03 0349 	add.w	r3, r3, r9, lsl #1
 800d78e:	785b      	ldrb	r3, [r3, #1]
 800d790:	920b      	str	r2, [sp, #44]	; 0x2c
 800d792:	f3c3 0001 	ubfx	r0, r3, #0, #2
 800d796:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800d79a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800d79e:	f89d 3090 	ldrb.w	r3, [sp, #144]	; 0x90
 800d7a2:	f88d 102a 	strb.w	r1, [sp, #42]	; 0x2a
 800d7a6:	f88d 3032 	strb.w	r3, [sp, #50]	; 0x32
 800d7aa:	9709      	str	r7, [sp, #36]	; 0x24
 800d7ac:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800d7b0:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 800d7b4:	f88d 8033 	strb.w	r8, [sp, #51]	; 0x33
 800d7b8:	f88d 8034 	strb.w	r8, [sp, #52]	; 0x34
 800d7bc:	f7f4 feac 	bl	8002518 <_ZN8touchgfx3HAL3lcdEv>
 800d7c0:	4b0f      	ldr	r3, [pc, #60]	; (800d800 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d4>)
 800d7c2:	4604      	mov	r4, r0
 800d7c4:	4649      	mov	r1, r9
 800d7c6:	6818      	ldr	r0, [r3, #0]
 800d7c8:	f7f7 fb28 	bl	8004e1c <_ZNK8touchgfx5Texts7getTextEt>
 800d7cc:	e9cd 6802 	strd	r6, r8, [sp, #8]
 800d7d0:	e9cd b000 	strd	fp, r0, [sp]
 800d7d4:	4653      	mov	r3, sl
 800d7d6:	e895 0006 	ldmia.w	r5, {r1, r2}
 800d7da:	4620      	mov	r0, r4
 800d7dc:	f7f7 fad0 	bl	8004d80 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800d7e0:	b019      	add	sp, #100	; 0x64
 800d7e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d7e6:	f8da 0000 	ldr.w	r0, [sl]
 800d7ea:	699d      	ldr	r5, [r3, #24]
 800d7ec:	f7f7 fb16 	bl	8004e1c <_ZNK8touchgfx5Texts7getTextEt>
 800d7f0:	4632      	mov	r2, r6
 800d7f2:	4601      	mov	r1, r0
 800d7f4:	4638      	mov	r0, r7
 800d7f6:	47a8      	blx	r5
 800d7f8:	4605      	mov	r5, r0
 800d7fa:	e77a      	b.n	800d6f2 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xc6>
 800d7fc:	200154e0 	.word	0x200154e0
 800d800:	200154ec 	.word	0x200154ec

0800d804 <_ZN8touchgfx15GraphScrollData5clearEv>:
 800d804:	b510      	push	{r4, lr}
 800d806:	4604      	mov	r4, r0
 800d808:	f7fe fb05 	bl	800be16 <_ZN8touchgfx17AbstractDataGraph5clearEv>
 800d80c:	2300      	movs	r3, #0
 800d80e:	f8a4 314c 	strh.w	r3, [r4, #332]	; 0x14c
 800d812:	bd10      	pop	{r4, pc}

0800d814 <_ZN8touchgfx15GraphScrollData14beforeAddValueEv>:
 800d814:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
 800d818:	f9b0 311c 	ldrsh.w	r3, [r0, #284]	; 0x11c
 800d81c:	429a      	cmp	r2, r3
 800d81e:	d101      	bne.n	800d824 <_ZN8touchgfx15GraphScrollData14beforeAddValueEv+0x10>
 800d820:	f7fe bd38 	b.w	800c294 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 800d824:	4770      	bx	lr

0800d826 <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs>:
 800d826:	b538      	push	{r3, r4, r5, lr}
 800d828:	f9b0 411c 	ldrsh.w	r4, [r0, #284]	; 0x11c
 800d82c:	f9b0 511e 	ldrsh.w	r5, [r0, #286]	; 0x11e
 800d830:	42a5      	cmp	r5, r4
 800d832:	da04      	bge.n	800d83e <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs+0x18>
 800d834:	6803      	ldr	r3, [r0, #0]
 800d836:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 800d83a:	4798      	blx	r3
 800d83c:	bd38      	pop	{r3, r4, r5, pc}
 800d83e:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 800d842:	4408      	add	r0, r1
 800d844:	1b00      	subs	r0, r0, r4
 800d846:	e7f9      	b.n	800d83c <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs+0x16>

0800d848 <_ZN8touchgfx15GraphScrollData8addValueEi>:
 800d848:	b570      	push	{r4, r5, r6, lr}
 800d84a:	f9b0 514c 	ldrsh.w	r5, [r0, #332]	; 0x14c
 800d84e:	f9b0 611e 	ldrsh.w	r6, [r0, #286]	; 0x11e
 800d852:	f9b0 211c 	ldrsh.w	r2, [r0, #284]	; 0x11c
 800d856:	4604      	mov	r4, r0
 800d858:	1c6b      	adds	r3, r5, #1
 800d85a:	b21b      	sxth	r3, r3
 800d85c:	42ae      	cmp	r6, r5
 800d85e:	bf08      	it	eq
 800d860:	f8a4 311e 	strheq.w	r3, [r4, #286]	; 0x11e
 800d864:	fb93 f0f2 	sdiv	r0, r3, r2
 800d868:	fb02 3010 	mls	r0, r2, r0, r3
 800d86c:	f8d4 3144 	ldr.w	r3, [r4, #324]	; 0x144
 800d870:	f8a4 014c 	strh.w	r0, [r4, #332]	; 0x14c
 800d874:	4296      	cmp	r6, r2
 800d876:	f843 1025 	str.w	r1, [r3, r5, lsl #2]
 800d87a:	d108      	bne.n	800d88e <_ZN8touchgfx15GraphScrollData8addValueEi+0x46>
 800d87c:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800d880:	f004 fa93 	bl	8011daa <_ZNK8touchgfx8Drawable10invalidateEv>
 800d884:	4620      	mov	r0, r4
 800d886:	f7fe fd05 	bl	800c294 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 800d88a:	4628      	mov	r0, r5
 800d88c:	bd70      	pop	{r4, r5, r6, pc}
 800d88e:	4629      	mov	r1, r5
 800d890:	4620      	mov	r0, r4
 800d892:	f7fe fcd7 	bl	800c244 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>
 800d896:	e7f8      	b.n	800d88a <_ZN8touchgfx15GraphScrollData8addValueEi+0x42>

0800d898 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800d898:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800d89c:	4770      	bx	lr

0800d89e <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800d89e:	b510      	push	{r4, lr}
 800d8a0:	4604      	mov	r4, r0
 800d8a2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800d8a4:	b150      	cbz	r0, 800d8bc <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800d8a6:	6803      	ldr	r3, [r0, #0]
 800d8a8:	68db      	ldr	r3, [r3, #12]
 800d8aa:	4798      	blx	r3
 800d8ac:	b130      	cbz	r0, 800d8bc <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800d8ae:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800d8b0:	6803      	ldr	r3, [r0, #0]
 800d8b2:	4621      	mov	r1, r4
 800d8b4:	689b      	ldr	r3, [r3, #8]
 800d8b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d8ba:	4718      	bx	r3
 800d8bc:	bd10      	pop	{r4, pc}

0800d8be <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 800d8be:	b570      	push	{r4, r5, r6, lr}
 800d8c0:	790b      	ldrb	r3, [r1, #4]
 800d8c2:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 800d8c6:	2b00      	cmp	r3, #0
 800d8c8:	bf0c      	ite	eq
 800d8ca:	2301      	moveq	r3, #1
 800d8cc:	2300      	movne	r3, #0
 800d8ce:	4604      	mov	r4, r0
 800d8d0:	460e      	mov	r6, r1
 800d8d2:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 800d8d6:	d109      	bne.n	800d8ec <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 800d8d8:	b14d      	cbz	r5, 800d8ee <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 800d8da:	7933      	ldrb	r3, [r6, #4]
 800d8dc:	2b01      	cmp	r3, #1
 800d8de:	d10c      	bne.n	800d8fa <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800d8e0:	6823      	ldr	r3, [r4, #0]
 800d8e2:	4620      	mov	r0, r4
 800d8e4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800d8e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d8ea:	4718      	bx	r3
 800d8ec:	b12d      	cbz	r5, 800d8fa <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800d8ee:	6823      	ldr	r3, [r4, #0]
 800d8f0:	4620      	mov	r0, r4
 800d8f2:	695b      	ldr	r3, [r3, #20]
 800d8f4:	4798      	blx	r3
 800d8f6:	2d00      	cmp	r5, #0
 800d8f8:	d1ef      	bne.n	800d8da <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 800d8fa:	bd70      	pop	{r4, r5, r6, pc}

0800d8fc <_ZN8touchgfx12ToggleButtonD1Ev>:
 800d8fc:	4770      	bx	lr

0800d8fe <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 800d8fe:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800d902:	b133      	cbz	r3, 800d912 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 800d904:	790b      	ldrb	r3, [r1, #4]
 800d906:	2b01      	cmp	r3, #1
 800d908:	bf01      	itttt	eq
 800d90a:	8dc3      	ldrheq	r3, [r0, #46]	; 0x2e
 800d90c:	8e02      	ldrheq	r2, [r0, #48]	; 0x30
 800d90e:	85c2      	strheq	r2, [r0, #46]	; 0x2e
 800d910:	8603      	strheq	r3, [r0, #48]	; 0x30
 800d912:	f7ff bfd4 	b.w	800d8be <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>

0800d916 <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
 800d916:	8813      	ldrh	r3, [r2, #0]
 800d918:	8683      	strh	r3, [r0, #52]	; 0x34
 800d91a:	f000 bbde 	b.w	800e0da <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>

0800d91e <_ZN8touchgfx12ToggleButtonD0Ev>:
 800d91e:	b510      	push	{r4, lr}
 800d920:	2138      	movs	r1, #56	; 0x38
 800d922:	4604      	mov	r4, r0
 800d924:	f012 fdc6 	bl	80204b4 <_ZdlPvj>
 800d928:	4620      	mov	r0, r4
 800d92a:	bd10      	pop	{r4, pc}

0800d92c <_ZNK8touchgfx6Button17invalidateContentEv>:
 800d92c:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 800d930:	b12a      	cbz	r2, 800d93e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800d932:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800d936:	b112      	cbz	r2, 800d93e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800d938:	6803      	ldr	r3, [r0, #0]
 800d93a:	695b      	ldr	r3, [r3, #20]
 800d93c:	4718      	bx	r3
 800d93e:	4770      	bx	lr

0800d940 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800d940:	2000      	movs	r0, #0
 800d942:	4770      	bx	lr

0800d944 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800d944:	4b07      	ldr	r3, [pc, #28]	; (800d964 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800d946:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800d948:	881b      	ldrh	r3, [r3, #0]
 800d94a:	4293      	cmp	r3, r2
 800d94c:	bf81      	itttt	hi
 800d94e:	4b06      	ldrhi	r3, [pc, #24]	; (800d968 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800d950:	681b      	ldrhi	r3, [r3, #0]
 800d952:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800d956:	7858      	ldrbhi	r0, [r3, #1]
 800d958:	bf8c      	ite	hi
 800d95a:	f000 0003 	andhi.w	r0, r0, #3
 800d95e:	2000      	movls	r0, #0
 800d960:	4770      	bx	lr
 800d962:	bf00      	nop
 800d964:	200154e4 	.word	0x200154e4
 800d968:	200154e0 	.word	0x200154e0

0800d96c <_ZN8touchgfx8TextAreaD1Ev>:
 800d96c:	4770      	bx	lr
	...

0800d970 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800d970:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d974:	4b10      	ldr	r3, [pc, #64]	; (800d9b8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800d976:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800d978:	881b      	ldrh	r3, [r3, #0]
 800d97a:	428b      	cmp	r3, r1
 800d97c:	4604      	mov	r4, r0
 800d97e:	d918      	bls.n	800d9b2 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800d980:	6803      	ldr	r3, [r0, #0]
 800d982:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 800d984:	4b0d      	ldr	r3, [pc, #52]	; (800d9bc <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800d986:	6818      	ldr	r0, [r3, #0]
 800d988:	f7f7 fa48 	bl	8004e1c <_ZNK8touchgfx5Texts7getTextEt>
 800d98c:	6823      	ldr	r3, [r4, #0]
 800d98e:	4606      	mov	r6, r0
 800d990:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d992:	4620      	mov	r0, r4
 800d994:	4798      	blx	r3
 800d996:	6823      	ldr	r3, [r4, #0]
 800d998:	4607      	mov	r7, r0
 800d99a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d99e:	4620      	mov	r0, r4
 800d9a0:	4798      	blx	r3
 800d9a2:	463a      	mov	r2, r7
 800d9a4:	4603      	mov	r3, r0
 800d9a6:	4631      	mov	r1, r6
 800d9a8:	4620      	mov	r0, r4
 800d9aa:	46ac      	mov	ip, r5
 800d9ac:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800d9b0:	4760      	bx	ip
 800d9b2:	2000      	movs	r0, #0
 800d9b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d9b8:	200154e4 	.word	0x200154e4
 800d9bc:	200154ec 	.word	0x200154ec

0800d9c0 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800d9c0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800d9c4:	4b17      	ldr	r3, [pc, #92]	; (800da24 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800d9c6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800d9c8:	881b      	ldrh	r3, [r3, #0]
 800d9ca:	428b      	cmp	r3, r1
 800d9cc:	4604      	mov	r4, r0
 800d9ce:	d926      	bls.n	800da1e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800d9d0:	4b15      	ldr	r3, [pc, #84]	; (800da28 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800d9d2:	681b      	ldr	r3, [r3, #0]
 800d9d4:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800d9d8:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800d9dc:	4b13      	ldr	r3, [pc, #76]	; (800da2c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800d9de:	7855      	ldrb	r5, [r2, #1]
 800d9e0:	681b      	ldr	r3, [r3, #0]
 800d9e2:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800d9e6:	6833      	ldr	r3, [r6, #0]
 800d9e8:	69df      	ldr	r7, [r3, #28]
 800d9ea:	4b11      	ldr	r3, [pc, #68]	; (800da30 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800d9ec:	6818      	ldr	r0, [r3, #0]
 800d9ee:	f7f7 fa15 	bl	8004e1c <_ZNK8touchgfx5Texts7getTextEt>
 800d9f2:	6823      	ldr	r3, [r4, #0]
 800d9f4:	4680      	mov	r8, r0
 800d9f6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d9f8:	4620      	mov	r0, r4
 800d9fa:	4798      	blx	r3
 800d9fc:	6823      	ldr	r3, [r4, #0]
 800d9fe:	4681      	mov	r9, r0
 800da00:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800da04:	4620      	mov	r0, r4
 800da06:	4798      	blx	r3
 800da08:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800da0c:	9000      	str	r0, [sp, #0]
 800da0e:	464b      	mov	r3, r9
 800da10:	4642      	mov	r2, r8
 800da12:	4629      	mov	r1, r5
 800da14:	4630      	mov	r0, r6
 800da16:	47b8      	blx	r7
 800da18:	b003      	add	sp, #12
 800da1a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800da1e:	2000      	movs	r0, #0
 800da20:	e7fa      	b.n	800da18 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800da22:	bf00      	nop
 800da24:	200154e4 	.word	0x200154e4
 800da28:	200154e0 	.word	0x200154e0
 800da2c:	200154e8 	.word	0x200154e8
 800da30:	200154ec 	.word	0x200154ec

0800da34 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800da34:	b40e      	push	{r1, r2, r3}
 800da36:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800da3a:	4b2f      	ldr	r3, [pc, #188]	; (800daf8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800da3c:	881a      	ldrh	r2, [r3, #0]
 800da3e:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800da40:	429a      	cmp	r2, r3
 800da42:	b09d      	sub	sp, #116	; 0x74
 800da44:	4604      	mov	r4, r0
 800da46:	d954      	bls.n	800daf2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800da48:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 800dafc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800da4c:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800db00 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800da50:	aa26      	add	r2, sp, #152	; 0x98
 800da52:	9202      	str	r2, [sp, #8]
 800da54:	f8d9 2000 	ldr.w	r2, [r9]
 800da58:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800da5c:	f8d8 3000 	ldr.w	r3, [r8]
 800da60:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800da64:	682b      	ldr	r3, [r5, #0]
 800da66:	4628      	mov	r0, r5
 800da68:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800da6a:	4798      	blx	r3
 800da6c:	b207      	sxth	r7, r0
 800da6e:	4606      	mov	r6, r0
 800da70:	a803      	add	r0, sp, #12
 800da72:	f004 feea 	bl	801284a <_ZN8touchgfx12TextProviderC1Ev>
 800da76:	682b      	ldr	r3, [r5, #0]
 800da78:	4628      	mov	r0, r5
 800da7a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800da7c:	4798      	blx	r3
 800da7e:	682b      	ldr	r3, [r5, #0]
 800da80:	4682      	mov	sl, r0
 800da82:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800da84:	4628      	mov	r0, r5
 800da86:	4798      	blx	r3
 800da88:	4653      	mov	r3, sl
 800da8a:	9000      	str	r0, [sp, #0]
 800da8c:	9a02      	ldr	r2, [sp, #8]
 800da8e:	9925      	ldr	r1, [sp, #148]	; 0x94
 800da90:	a803      	add	r0, sp, #12
 800da92:	f004 ff35 	bl	8012900 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800da96:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800da98:	f8d9 3000 	ldr.w	r3, [r9]
 800da9c:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 800daa0:	8925      	ldrh	r5, [r4, #8]
 800daa2:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800daa6:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800daaa:	eba5 050c 	sub.w	r5, r5, ip
 800daae:	784a      	ldrb	r2, [r1, #1]
 800dab0:	f8d8 3000 	ldr.w	r3, [r8]
 800dab4:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800dab8:	b22d      	sxth	r5, r5
 800daba:	9500      	str	r5, [sp, #0]
 800dabc:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800dac0:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800dac4:	a803      	add	r0, sp, #12
 800dac6:	f002 fd2f 	bl	8010528 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800daca:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800dace:	18b9      	adds	r1, r7, r2
 800dad0:	2900      	cmp	r1, #0
 800dad2:	b203      	sxth	r3, r0
 800dad4:	dd0b      	ble.n	800daee <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800dad6:	3b01      	subs	r3, #1
 800dad8:	fb13 f302 	smulbb	r3, r3, r2
 800dadc:	fb16 3300 	smlabb	r3, r6, r0, r3
 800dae0:	b21f      	sxth	r7, r3
 800dae2:	4638      	mov	r0, r7
 800dae4:	b01d      	add	sp, #116	; 0x74
 800dae6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800daea:	b003      	add	sp, #12
 800daec:	4770      	bx	lr
 800daee:	2b00      	cmp	r3, #0
 800daf0:	dcf7      	bgt.n	800dae2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800daf2:	2700      	movs	r7, #0
 800daf4:	e7f5      	b.n	800dae2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800daf6:	bf00      	nop
 800daf8:	200154e4 	.word	0x200154e4
 800dafc:	200154e0 	.word	0x200154e0
 800db00:	200154e8 	.word	0x200154e8

0800db04 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800db04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800db08:	4bbb      	ldr	r3, [pc, #748]	; (800ddf8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f4>)
 800db0a:	460c      	mov	r4, r1
 800db0c:	881b      	ldrh	r3, [r3, #0]
 800db0e:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 800db10:	428b      	cmp	r3, r1
 800db12:	b0a9      	sub	sp, #164	; 0xa4
 800db14:	4681      	mov	r9, r0
 800db16:	d809      	bhi.n	800db2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 800db18:	2300      	movs	r3, #0
 800db1a:	f04f 32ff 	mov.w	r2, #4294967295
 800db1e:	e9c0 3200 	strd	r3, r2, [r0]
 800db22:	6083      	str	r3, [r0, #8]
 800db24:	4648      	mov	r0, r9
 800db26:	b029      	add	sp, #164	; 0xa4
 800db28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800db2c:	f8df b2d0 	ldr.w	fp, [pc, #720]	; 800de00 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 800db30:	f8df 82d0 	ldr.w	r8, [pc, #720]	; 800de04 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>
 800db34:	f8db 3000 	ldr.w	r3, [fp]
 800db38:	f8d8 0000 	ldr.w	r0, [r8]
 800db3c:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800db40:	4bae      	ldr	r3, [pc, #696]	; (800ddfc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 800db42:	681b      	ldr	r3, [r3, #0]
 800db44:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800db48:	f7f7 f968 	bl	8004e1c <_ZNK8touchgfx5Texts7getTextEt>
 800db4c:	682b      	ldr	r3, [r5, #0]
 800db4e:	4607      	mov	r7, r0
 800db50:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800db52:	4628      	mov	r0, r5
 800db54:	4798      	blx	r3
 800db56:	8ea6      	ldrh	r6, [r4, #52]	; 0x34
 800db58:	f8cd 800c 	str.w	r8, [sp, #12]
 800db5c:	4430      	add	r0, r6
 800db5e:	f894 6039 	ldrb.w	r6, [r4, #57]	; 0x39
 800db62:	b283      	uxth	r3, r0
 800db64:	f10d 0a3c 	add.w	sl, sp, #60	; 0x3c
 800db68:	9302      	str	r3, [sp, #8]
 800db6a:	4650      	mov	r0, sl
 800db6c:	2e00      	cmp	r6, #0
 800db6e:	f040 8091 	bne.w	800dc94 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 800db72:	f004 fe6a 	bl	801284a <_ZN8touchgfx12TextProviderC1Ev>
 800db76:	682b      	ldr	r3, [r5, #0]
 800db78:	4628      	mov	r0, r5
 800db7a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800db7c:	4798      	blx	r3
 800db7e:	682b      	ldr	r3, [r5, #0]
 800db80:	9005      	str	r0, [sp, #20]
 800db82:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800db84:	4628      	mov	r0, r5
 800db86:	4798      	blx	r3
 800db88:	6823      	ldr	r3, [r4, #0]
 800db8a:	4680      	mov	r8, r0
 800db8c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800db8e:	4620      	mov	r0, r4
 800db90:	4798      	blx	r3
 800db92:	6822      	ldr	r2, [r4, #0]
 800db94:	9004      	str	r0, [sp, #16]
 800db96:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800db9a:	4620      	mov	r0, r4
 800db9c:	4790      	blx	r2
 800db9e:	9905      	ldr	r1, [sp, #20]
 800dba0:	9b04      	ldr	r3, [sp, #16]
 800dba2:	9001      	str	r0, [sp, #4]
 800dba4:	9300      	str	r3, [sp, #0]
 800dba6:	460a      	mov	r2, r1
 800dba8:	4643      	mov	r3, r8
 800dbaa:	4639      	mov	r1, r7
 800dbac:	4650      	mov	r0, sl
 800dbae:	f004 febc 	bl	801292a <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800dbb2:	4637      	mov	r7, r6
 800dbb4:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800dbb6:	f8db 3000 	ldr.w	r3, [fp]
 800dbba:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800dbbe:	4629      	mov	r1, r5
 800dbc0:	785b      	ldrb	r3, [r3, #1]
 800dbc2:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800dbc6:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800dbca:	4650      	mov	r0, sl
 800dbcc:	f002 f9fe 	bl	800ffcc <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800dbd0:	4287      	cmp	r7, r0
 800dbd2:	bfb8      	it	lt
 800dbd4:	b207      	sxthlt	r7, r0
 800dbd6:	3601      	adds	r6, #1
 800dbd8:	4650      	mov	r0, sl
 800dbda:	b2b6      	uxth	r6, r6
 800dbdc:	f004 fe5c 	bl	8012898 <_ZN8touchgfx12TextProvider11endOfStringEv>
 800dbe0:	2800      	cmp	r0, #0
 800dbe2:	d0e7      	beq.n	800dbb4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xb0>
 800dbe4:	9b02      	ldr	r3, [sp, #8]
 800dbe6:	f8b4 8034 	ldrh.w	r8, [r4, #52]	; 0x34
 800dbea:	fb13 f606 	smulbb	r6, r3, r6
 800dbee:	eba6 0608 	sub.w	r6, r6, r8
 800dbf2:	b2b6      	uxth	r6, r6
 800dbf4:	fa0f f886 	sxth.w	r8, r6
 800dbf8:	f1b8 0f00 	cmp.w	r8, #0
 800dbfc:	dd06      	ble.n	800dc0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x108>
 800dbfe:	682b      	ldr	r3, [r5, #0]
 800dc00:	4628      	mov	r0, r5
 800dc02:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800dc04:	4798      	blx	r3
 800dc06:	4430      	add	r0, r6
 800dc08:	fa0f f880 	sxth.w	r8, r0
 800dc0c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800dc10:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800dc14:	6823      	ldr	r3, [r4, #0]
 800dc16:	bf08      	it	eq
 800dc18:	f9b4 6008 	ldrsheq.w	r6, [r4, #8]
 800dc1c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800dc1e:	bf18      	it	ne
 800dc20:	f9b4 600a 	ldrshne.w	r6, [r4, #10]
 800dc24:	4620      	mov	r0, r4
 800dc26:	4798      	blx	r3
 800dc28:	2801      	cmp	r0, #1
 800dc2a:	b2ba      	uxth	r2, r7
 800dc2c:	f000 80d1 	beq.w	800ddd2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ce>
 800dc30:	2802      	cmp	r0, #2
 800dc32:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800dc36:	f000 80d2 	beq.w	800ddde <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2da>
 800dc3a:	b21e      	sxth	r6, r3
 800dc3c:	7a29      	ldrb	r1, [r5, #8]
 800dc3e:	7a6d      	ldrb	r5, [r5, #9]
 800dc40:	1a76      	subs	r6, r6, r1
 800dc42:	4429      	add	r1, r5
 800dc44:	440a      	add	r2, r1
 800dc46:	f894 1038 	ldrb.w	r1, [r4, #56]	; 0x38
 800dc4a:	b2b3      	uxth	r3, r6
 800dc4c:	b292      	uxth	r2, r2
 800dc4e:	2902      	cmp	r1, #2
 800dc50:	b21f      	sxth	r7, r3
 800dc52:	b216      	sxth	r6, r2
 800dc54:	f000 80c6 	beq.w	800dde4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2e0>
 800dc58:	2903      	cmp	r1, #3
 800dc5a:	f000 80d5 	beq.w	800de08 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>
 800dc5e:	2901      	cmp	r1, #1
 800dc60:	f040 80db 	bne.w	800de1a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x316>
 800dc64:	8923      	ldrh	r3, [r4, #8]
 800dc66:	4632      	mov	r2, r6
 800dc68:	eba3 0308 	sub.w	r3, r3, r8
 800dc6c:	4646      	mov	r6, r8
 800dc6e:	463d      	mov	r5, r7
 800dc70:	4690      	mov	r8, r2
 800dc72:	b21f      	sxth	r7, r3
 800dc74:	9b03      	ldr	r3, [sp, #12]
 800dc76:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800dc78:	6818      	ldr	r0, [r3, #0]
 800dc7a:	f7f7 f8cf 	bl	8004e1c <_ZNK8touchgfx5Texts7getTextEt>
 800dc7e:	f8a9 7000 	strh.w	r7, [r9]
 800dc82:	f8a9 5002 	strh.w	r5, [r9, #2]
 800dc86:	f8a9 6004 	strh.w	r6, [r9, #4]
 800dc8a:	f8a9 8006 	strh.w	r8, [r9, #6]
 800dc8e:	f8c9 0008 	str.w	r0, [r9, #8]
 800dc92:	e747      	b.n	800db24 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 800dc94:	f004 fdd9 	bl	801284a <_ZN8touchgfx12TextProviderC1Ev>
 800dc98:	682b      	ldr	r3, [r5, #0]
 800dc9a:	4628      	mov	r0, r5
 800dc9c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800dc9e:	4798      	blx	r3
 800dca0:	682b      	ldr	r3, [r5, #0]
 800dca2:	4606      	mov	r6, r0
 800dca4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800dca6:	4628      	mov	r0, r5
 800dca8:	4798      	blx	r3
 800dcaa:	6823      	ldr	r3, [r4, #0]
 800dcac:	4680      	mov	r8, r0
 800dcae:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800dcb0:	4620      	mov	r0, r4
 800dcb2:	4798      	blx	r3
 800dcb4:	6822      	ldr	r2, [r4, #0]
 800dcb6:	9004      	str	r0, [sp, #16]
 800dcb8:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800dcbc:	4620      	mov	r0, r4
 800dcbe:	4790      	blx	r2
 800dcc0:	9b04      	ldr	r3, [sp, #16]
 800dcc2:	9001      	str	r0, [sp, #4]
 800dcc4:	4632      	mov	r2, r6
 800dcc6:	9300      	str	r3, [sp, #0]
 800dcc8:	4639      	mov	r1, r7
 800dcca:	4643      	mov	r3, r8
 800dccc:	4650      	mov	r0, sl
 800dcce:	f004 fe2c 	bl	801292a <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800dcd2:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800dcd6:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 800dcda:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800dcdc:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 800dce0:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800dce4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800dce8:	bf0a      	itet	eq
 800dcea:	4642      	moveq	r2, r8
 800dcec:	461a      	movne	r2, r3
 800dcee:	4698      	moveq	r8, r3
 800dcf0:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800dcf4:	1ad2      	subs	r2, r2, r3
 800dcf6:	f8db 3000 	ldr.w	r3, [fp]
 800dcfa:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800dcfe:	7859      	ldrb	r1, [r3, #1]
 800dd00:	f8cd a020 	str.w	sl, [sp, #32]
 800dd04:	2300      	movs	r3, #0
 800dd06:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800dd0a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800dd0e:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 800dd12:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800dd16:	950a      	str	r5, [sp, #40]	; 0x28
 800dd18:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800dd1c:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800dd20:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800dd24:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800dd28:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800dd2c:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800dd30:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800dd34:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 800dd38:	b350      	cbz	r0, 800dd90 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800dd3a:	682b      	ldr	r3, [r5, #0]
 800dd3c:	4628      	mov	r0, r5
 800dd3e:	695b      	ldr	r3, [r3, #20]
 800dd40:	4798      	blx	r3
 800dd42:	4607      	mov	r7, r0
 800dd44:	b320      	cbz	r0, 800dd90 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800dd46:	980a      	ldr	r0, [sp, #40]	; 0x28
 800dd48:	6803      	ldr	r3, [r0, #0]
 800dd4a:	4639      	mov	r1, r7
 800dd4c:	68db      	ldr	r3, [r3, #12]
 800dd4e:	4798      	blx	r3
 800dd50:	4606      	mov	r6, r0
 800dd52:	b1e8      	cbz	r0, 800dd90 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800dd54:	7b43      	ldrb	r3, [r0, #13]
 800dd56:	7a82      	ldrb	r2, [r0, #10]
 800dd58:	005b      	lsls	r3, r3, #1
 800dd5a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800dd5e:	4313      	orrs	r3, r2
 800dd60:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800dd64:	f89d 3025 	ldrb.w	r3, [sp, #37]	; 0x25
 800dd68:	2b04      	cmp	r3, #4
 800dd6a:	d111      	bne.n	800dd90 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800dd6c:	980a      	ldr	r0, [sp, #40]	; 0x28
 800dd6e:	6803      	ldr	r3, [r0, #0]
 800dd70:	4632      	mov	r2, r6
 800dd72:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dd74:	4639      	mov	r1, r7
 800dd76:	4798      	blx	r3
 800dd78:	7b73      	ldrb	r3, [r6, #13]
 800dd7a:	005b      	lsls	r3, r3, #1
 800dd7c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800dd80:	7ab3      	ldrb	r3, [r6, #10]
 800dd82:	4313      	orrs	r3, r2
 800dd84:	4418      	add	r0, r3
 800dd86:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800dd8a:	4418      	add	r0, r3
 800dd8c:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 800dd90:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 800dd94:	2600      	movs	r6, #0
 800dd96:	ea4f 0b4a 	mov.w	fp, sl, lsl #1
 800dd9a:	4637      	mov	r7, r6
 800dd9c:	45c3      	cmp	fp, r8
 800dd9e:	bfd4      	ite	le
 800dda0:	2100      	movle	r1, #0
 800dda2:	2101      	movgt	r1, #1
 800dda4:	a807      	add	r0, sp, #28
 800dda6:	f002 faf0 	bl	801038a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800ddaa:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 800ddae:	429f      	cmp	r7, r3
 800ddb0:	bfb8      	it	lt
 800ddb2:	b21f      	sxthlt	r7, r3
 800ddb4:	9b02      	ldr	r3, [sp, #8]
 800ddb6:	eba8 0803 	sub.w	r8, r8, r3
 800ddba:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800ddbe:	3601      	adds	r6, #1
 800ddc0:	b2b6      	uxth	r6, r6
 800ddc2:	fa0f f888 	sxth.w	r8, r8
 800ddc6:	2b00      	cmp	r3, #0
 800ddc8:	f43f af0c 	beq.w	800dbe4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xe0>
 800ddcc:	45c2      	cmp	sl, r8
 800ddce:	dbe5      	blt.n	800dd9c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x298>
 800ddd0:	e708      	b.n	800dbe4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xe0>
 800ddd2:	1bf6      	subs	r6, r6, r7
 800ddd4:	2702      	movs	r7, #2
 800ddd6:	fb96 f6f7 	sdiv	r6, r6, r7
 800ddda:	b236      	sxth	r6, r6
 800dddc:	e72e      	b.n	800dc3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x138>
 800ddde:	4413      	add	r3, r2
 800dde0:	1af6      	subs	r6, r6, r3
 800dde2:	e7fa      	b.n	800ddda <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2d6>
 800dde4:	8925      	ldrh	r5, [r4, #8]
 800dde6:	1aad      	subs	r5, r5, r2
 800dde8:	1aed      	subs	r5, r5, r3
 800ddea:	b22f      	sxth	r7, r5
 800ddec:	8965      	ldrh	r5, [r4, #10]
 800ddee:	eba5 0508 	sub.w	r5, r5, r8
 800ddf2:	b22d      	sxth	r5, r5
 800ddf4:	e73e      	b.n	800dc74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800ddf6:	bf00      	nop
 800ddf8:	200154e4 	.word	0x200154e4
 800ddfc:	200154e8 	.word	0x200154e8
 800de00:	200154e0 	.word	0x200154e0
 800de04:	200154ec 	.word	0x200154ec
 800de08:	8965      	ldrh	r5, [r4, #10]
 800de0a:	1aad      	subs	r5, r5, r2
 800de0c:	1aed      	subs	r5, r5, r3
 800de0e:	4633      	mov	r3, r6
 800de10:	b22d      	sxth	r5, r5
 800de12:	4646      	mov	r6, r8
 800de14:	2700      	movs	r7, #0
 800de16:	4698      	mov	r8, r3
 800de18:	e72c      	b.n	800dc74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800de1a:	2500      	movs	r5, #0
 800de1c:	e72a      	b.n	800dc74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800de1e:	bf00      	nop

0800de20 <_ZN8touchgfx8TextAreaD0Ev>:
 800de20:	b510      	push	{r4, lr}
 800de22:	2148      	movs	r1, #72	; 0x48
 800de24:	4604      	mov	r4, r0
 800de26:	f012 fb45 	bl	80204b4 <_ZdlPvj>
 800de2a:	4620      	mov	r0, r4
 800de2c:	bd10      	pop	{r4, pc}
	...

0800de30 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 800de30:	b513      	push	{r0, r1, r4, lr}
 800de32:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800de36:	4604      	mov	r4, r0
 800de38:	b1fb      	cbz	r3, 800de7a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800de3a:	4b16      	ldr	r3, [pc, #88]	; (800de94 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 800de3c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800de3e:	881b      	ldrh	r3, [r3, #0]
 800de40:	428b      	cmp	r3, r1
 800de42:	d91a      	bls.n	800de7a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800de44:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800de48:	2b00      	cmp	r3, #0
 800de4a:	dd16      	ble.n	800de7a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800de4c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800de50:	2b00      	cmp	r3, #0
 800de52:	dd12      	ble.n	800de7a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800de54:	4b10      	ldr	r3, [pc, #64]	; (800de98 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 800de56:	6818      	ldr	r0, [r3, #0]
 800de58:	f7f6 ffe0 	bl	8004e1c <_ZNK8touchgfx5Texts7getTextEt>
 800de5c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800de60:	6822      	ldr	r2, [r4, #0]
 800de62:	2b00      	cmp	r3, #0
 800de64:	db06      	blt.n	800de74 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800de66:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800de6a:	2b00      	cmp	r3, #0
 800de6c:	db02      	blt.n	800de74 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800de6e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800de70:	4298      	cmp	r0, r3
 800de72:	d004      	beq.n	800de7e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 800de74:	6953      	ldr	r3, [r2, #20]
 800de76:	4620      	mov	r0, r4
 800de78:	4798      	blx	r3
 800de7a:	b002      	add	sp, #8
 800de7c:	bd10      	pop	{r4, pc}
 800de7e:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 800de82:	c903      	ldmia	r1, {r0, r1}
 800de84:	466b      	mov	r3, sp
 800de86:	e883 0003 	stmia.w	r3, {r0, r1}
 800de8a:	6912      	ldr	r2, [r2, #16]
 800de8c:	4619      	mov	r1, r3
 800de8e:	4620      	mov	r0, r4
 800de90:	4790      	blx	r2
 800de92:	e7f2      	b.n	800de7a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800de94:	200154e4 	.word	0x200154e4
 800de98:	200154ec 	.word	0x200154ec

0800de9c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800de9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dea0:	4b44      	ldr	r3, [pc, #272]	; (800dfb4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 800dea2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800dea4:	881b      	ldrh	r3, [r3, #0]
 800dea6:	4293      	cmp	r3, r2
 800dea8:	b08e      	sub	sp, #56	; 0x38
 800deaa:	4604      	mov	r4, r0
 800deac:	d97e      	bls.n	800dfac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800deae:	6808      	ldr	r0, [r1, #0]
 800deb0:	4d41      	ldr	r5, [pc, #260]	; (800dfb8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 800deb2:	6849      	ldr	r1, [r1, #4]
 800deb4:	ab05      	add	r3, sp, #20
 800deb6:	c303      	stmia	r3!, {r0, r1}
 800deb8:	4611      	mov	r1, r2
 800deba:	6828      	ldr	r0, [r5, #0]
 800debc:	f7f6 ffae 	bl	8004e1c <_ZNK8touchgfx5Texts7getTextEt>
 800dec0:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800dec4:	2b00      	cmp	r3, #0
 800dec6:	db11      	blt.n	800deec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800dec8:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800decc:	2b00      	cmp	r3, #0
 800dece:	db0d      	blt.n	800deec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800ded0:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800ded2:	4298      	cmp	r0, r3
 800ded4:	d10a      	bne.n	800deec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800ded6:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800deda:	e892 0003 	ldmia.w	r2, {r0, r1}
 800dede:	ab09      	add	r3, sp, #36	; 0x24
 800dee0:	e883 0003 	stmia.w	r3, {r0, r1}
 800dee4:	4619      	mov	r1, r3
 800dee6:	a805      	add	r0, sp, #20
 800dee8:	f7fc fe28 	bl	800ab3c <_ZN8touchgfx4RectaNERKS0_>
 800deec:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800def0:	2b00      	cmp	r3, #0
 800def2:	dd5b      	ble.n	800dfac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800def4:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800def8:	2b00      	cmp	r3, #0
 800defa:	dd57      	ble.n	800dfac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800defc:	4f2f      	ldr	r7, [pc, #188]	; (800dfbc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 800defe:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800df00:	683b      	ldr	r3, [r7, #0]
 800df02:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800df06:	4b2e      	ldr	r3, [pc, #184]	; (800dfc0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 800df08:	681b      	ldr	r3, [r3, #0]
 800df0a:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800df0e:	2e00      	cmp	r6, #0
 800df10:	d04c      	beq.n	800dfac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800df12:	6823      	ldr	r3, [r4, #0]
 800df14:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 800df18:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800df1a:	4620      	mov	r0, r4
 800df1c:	4798      	blx	r3
 800df1e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800df20:	683b      	ldr	r3, [r7, #0]
 800df22:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 800df26:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 800df2a:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 800df2e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800df30:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800df34:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 800df38:	785b      	ldrb	r3, [r3, #1]
 800df3a:	9609      	str	r6, [sp, #36]	; 0x24
 800df3c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800df40:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800df44:	4b1f      	ldr	r3, [pc, #124]	; (800dfc4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 800df46:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800df4a:	681b      	ldr	r3, [r3, #0]
 800df4c:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 800df50:	910b      	str	r1, [sp, #44]	; 0x2c
 800df52:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 800df56:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 800df5a:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 800df5e:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 800df62:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800df66:	b10a      	cbz	r2, 800df6c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 800df68:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 800df6a:	b906      	cbnz	r6, 800df6e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 800df6c:	689e      	ldr	r6, [r3, #8]
 800df6e:	af07      	add	r7, sp, #28
 800df70:	4621      	mov	r1, r4
 800df72:	4638      	mov	r0, r7
 800df74:	f003 ffb4 	bl	8011ee0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800df78:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800df7a:	6828      	ldr	r0, [r5, #0]
 800df7c:	f7f6 ff4e 	bl	8004e1c <_ZNK8touchgfx5Texts7getTextEt>
 800df80:	6823      	ldr	r3, [r4, #0]
 800df82:	4605      	mov	r5, r0
 800df84:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800df86:	4620      	mov	r0, r4
 800df88:	4798      	blx	r3
 800df8a:	6823      	ldr	r3, [r4, #0]
 800df8c:	4680      	mov	r8, r0
 800df8e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800df92:	4620      	mov	r0, r4
 800df94:	4798      	blx	r3
 800df96:	e9cd 8002 	strd	r8, r0, [sp, #8]
 800df9a:	ab09      	add	r3, sp, #36	; 0x24
 800df9c:	9300      	str	r3, [sp, #0]
 800df9e:	9501      	str	r5, [sp, #4]
 800dfa0:	ab05      	add	r3, sp, #20
 800dfa2:	e897 0006 	ldmia.w	r7, {r1, r2}
 800dfa6:	4630      	mov	r0, r6
 800dfa8:	f7f6 feea 	bl	8004d80 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800dfac:	b00e      	add	sp, #56	; 0x38
 800dfae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dfb2:	bf00      	nop
 800dfb4:	200154e4 	.word	0x200154e4
 800dfb8:	200154ec 	.word	0x200154ec
 800dfbc:	200154e0 	.word	0x200154e0
 800dfc0:	200154e8 	.word	0x200154e8
 800dfc4:	20015488 	.word	0x20015488

0800dfc8 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800dfc8:	b570      	push	{r4, r5, r6, lr}
 800dfca:	6803      	ldr	r3, [r0, #0]
 800dfcc:	4604      	mov	r4, r0
 800dfce:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800dfd0:	4615      	mov	r5, r2
 800dfd2:	4798      	blx	r3
 800dfd4:	6823      	ldr	r3, [r4, #0]
 800dfd6:	4629      	mov	r1, r5
 800dfd8:	4620      	mov	r0, r4
 800dfda:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dfdc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dfe0:	4718      	bx	r3
	...

0800dfe4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800dfe4:	b538      	push	{r3, r4, r5, lr}
 800dfe6:	4b0e      	ldr	r3, [pc, #56]	; (800e020 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800dfe8:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800dfea:	881b      	ldrh	r3, [r3, #0]
 800dfec:	429a      	cmp	r2, r3
 800dfee:	4604      	mov	r4, r0
 800dff0:	d214      	bcs.n	800e01c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800dff2:	6803      	ldr	r3, [r0, #0]
 800dff4:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800dff6:	4798      	blx	r3
 800dff8:	6823      	ldr	r3, [r4, #0]
 800dffa:	4605      	mov	r5, r0
 800dffc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800dffe:	4620      	mov	r0, r4
 800e000:	4798      	blx	r3
 800e002:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e006:	b22d      	sxth	r5, r5
 800e008:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800e00c:	4601      	mov	r1, r0
 800e00e:	bf06      	itte	eq
 800e010:	4602      	moveq	r2, r0
 800e012:	4629      	moveq	r1, r5
 800e014:	462a      	movne	r2, r5
 800e016:	4620      	mov	r0, r4
 800e018:	f7ff ffd6 	bl	800dfc8 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800e01c:	bd38      	pop	{r3, r4, r5, pc}
 800e01e:	bf00      	nop
 800e020:	200154e4 	.word	0x200154e4

0800e024 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800e024:	b530      	push	{r4, r5, lr}
 800e026:	888b      	ldrh	r3, [r1, #4]
 800e028:	8583      	strh	r3, [r0, #44]	; 0x2c
 800e02a:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e02e:	b085      	sub	sp, #20
 800e030:	4604      	mov	r4, r0
 800e032:	b923      	cbnz	r3, 800e03e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800e034:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e038:	b90b      	cbnz	r3, 800e03e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800e03a:	f7ff ffd3 	bl	800dfe4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800e03e:	6823      	ldr	r3, [r4, #0]
 800e040:	466d      	mov	r5, sp
 800e042:	4621      	mov	r1, r4
 800e044:	4628      	mov	r0, r5
 800e046:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800e04a:	4798      	blx	r3
 800e04c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800e050:	343c      	adds	r4, #60	; 0x3c
 800e052:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800e056:	b005      	add	sp, #20
 800e058:	bd30      	pop	{r4, r5, pc}

0800e05a <_ZNK8touchgfx3Box12getSolidRectEv>:
 800e05a:	2300      	movs	r3, #0
 800e05c:	8083      	strh	r3, [r0, #4]
 800e05e:	80c3      	strh	r3, [r0, #6]
 800e060:	8003      	strh	r3, [r0, #0]
 800e062:	8043      	strh	r3, [r0, #2]
 800e064:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800e068:	2bff      	cmp	r3, #255	; 0xff
 800e06a:	bf01      	itttt	eq
 800e06c:	890b      	ldrheq	r3, [r1, #8]
 800e06e:	8083      	strheq	r3, [r0, #4]
 800e070:	894b      	ldrheq	r3, [r1, #10]
 800e072:	80c3      	strheq	r3, [r0, #6]
 800e074:	4770      	bx	lr
	...

0800e078 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800e078:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e07a:	4604      	mov	r4, r0
 800e07c:	6808      	ldr	r0, [r1, #0]
 800e07e:	6849      	ldr	r1, [r1, #4]
 800e080:	466b      	mov	r3, sp
 800e082:	c303      	stmia	r3!, {r0, r1}
 800e084:	6823      	ldr	r3, [r4, #0]
 800e086:	4669      	mov	r1, sp
 800e088:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e08a:	4620      	mov	r0, r4
 800e08c:	4798      	blx	r3
 800e08e:	4b08      	ldr	r3, [pc, #32]	; (800e0b0 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800e090:	681b      	ldr	r3, [r3, #0]
 800e092:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e096:	b10a      	cbz	r2, 800e09c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800e098:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800e09a:	b900      	cbnz	r0, 800e09e <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800e09c:	6898      	ldr	r0, [r3, #8]
 800e09e:	6803      	ldr	r3, [r0, #0]
 800e0a0:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800e0a2:	6a1d      	ldr	r5, [r3, #32]
 800e0a4:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800e0a8:	4669      	mov	r1, sp
 800e0aa:	47a8      	blx	r5
 800e0ac:	b003      	add	sp, #12
 800e0ae:	bd30      	pop	{r4, r5, pc}
 800e0b0:	20015488 	.word	0x20015488

0800e0b4 <_ZN8touchgfx3BoxD1Ev>:
 800e0b4:	4770      	bx	lr

0800e0b6 <_ZN8touchgfx3BoxD0Ev>:
 800e0b6:	b510      	push	{r4, lr}
 800e0b8:	212c      	movs	r1, #44	; 0x2c
 800e0ba:	4604      	mov	r4, r0
 800e0bc:	f012 f9fa 	bl	80204b4 <_ZdlPvj>
 800e0c0:	4620      	mov	r0, r4
 800e0c2:	bd10      	pop	{r4, pc}

0800e0c4 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800e0c4:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 800e0c8:	b12a      	cbz	r2, 800e0d6 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800e0ca:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800e0ce:	b112      	cbz	r2, 800e0d6 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800e0d0:	6803      	ldr	r3, [r0, #0]
 800e0d2:	695b      	ldr	r3, [r3, #20]
 800e0d4:	4718      	bx	r3
 800e0d6:	4770      	bx	lr

0800e0d8 <_ZN8touchgfx6ButtonD1Ev>:
 800e0d8:	4770      	bx	lr

0800e0da <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800e0da:	b570      	push	{r4, r5, r6, lr}
 800e0dc:	880b      	ldrh	r3, [r1, #0]
 800e0de:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800e0e0:	4605      	mov	r5, r0
 800e0e2:	8813      	ldrh	r3, [r2, #0]
 800e0e4:	f825 3f30 	strh.w	r3, [r5, #48]!
 800e0e8:	4604      	mov	r4, r0
 800e0ea:	4628      	mov	r0, r5
 800e0ec:	f006 f8f6 	bl	80142dc <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e0f0:	4606      	mov	r6, r0
 800e0f2:	4628      	mov	r0, r5
 800e0f4:	f006 f926 	bl	8014344 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e0f8:	6823      	ldr	r3, [r4, #0]
 800e0fa:	4605      	mov	r5, r0
 800e0fc:	4631      	mov	r1, r6
 800e0fe:	4620      	mov	r0, r4
 800e100:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e102:	4798      	blx	r3
 800e104:	6823      	ldr	r3, [r4, #0]
 800e106:	4629      	mov	r1, r5
 800e108:	4620      	mov	r0, r4
 800e10a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e10c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e110:	4718      	bx	r3

0800e112 <_ZN8touchgfx6ButtonD0Ev>:
 800e112:	b510      	push	{r4, lr}
 800e114:	2134      	movs	r1, #52	; 0x34
 800e116:	4604      	mov	r4, r0
 800e118:	f012 f9cc 	bl	80204b4 <_ZdlPvj>
 800e11c:	4620      	mov	r0, r4
 800e11e:	bd10      	pop	{r4, pc}

0800e120 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800e120:	b510      	push	{r4, lr}
 800e122:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800e126:	2bff      	cmp	r3, #255	; 0xff
 800e128:	4604      	mov	r4, r0
 800e12a:	d006      	beq.n	800e13a <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800e12c:	2300      	movs	r3, #0
 800e12e:	8003      	strh	r3, [r0, #0]
 800e130:	8043      	strh	r3, [r0, #2]
 800e132:	8083      	strh	r3, [r0, #4]
 800e134:	80c3      	strh	r3, [r0, #6]
 800e136:	4620      	mov	r0, r4
 800e138:	bd10      	pop	{r4, pc}
 800e13a:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800e13e:	b11b      	cbz	r3, 800e148 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800e140:	3130      	adds	r1, #48	; 0x30
 800e142:	f006 f933 	bl	80143ac <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800e146:	e7f6      	b.n	800e136 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800e148:	312e      	adds	r1, #46	; 0x2e
 800e14a:	e7fa      	b.n	800e142 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

0800e14c <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800e14c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e150:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800e154:	b08a      	sub	sp, #40	; 0x28
 800e156:	4604      	mov	r4, r0
 800e158:	4688      	mov	r8, r1
 800e15a:	2b00      	cmp	r3, #0
 800e15c:	d066      	beq.n	800e22c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800e15e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800e160:	f8ad 3014 	strh.w	r3, [sp, #20]
 800e164:	a805      	add	r0, sp, #20
 800e166:	f006 f8b9 	bl	80142dc <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e16a:	4607      	mov	r7, r0
 800e16c:	a805      	add	r0, sp, #20
 800e16e:	f006 f8e9 	bl	8014344 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e172:	f9b8 6000 	ldrsh.w	r6, [r8]
 800e176:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 800e17a:	4432      	add	r2, r6
 800e17c:	b292      	uxth	r2, r2
 800e17e:	2300      	movs	r3, #0
 800e180:	fa0f fc82 	sxth.w	ip, r2
 800e184:	459c      	cmp	ip, r3
 800e186:	9306      	str	r3, [sp, #24]
 800e188:	dd52      	ble.n	800e230 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e18a:	42b7      	cmp	r7, r6
 800e18c:	dd50      	ble.n	800e230 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e18e:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 800e192:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800e196:	442b      	add	r3, r5
 800e198:	b29b      	uxth	r3, r3
 800e19a:	b219      	sxth	r1, r3
 800e19c:	2900      	cmp	r1, #0
 800e19e:	dd47      	ble.n	800e230 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e1a0:	42a8      	cmp	r0, r5
 800e1a2:	dd45      	ble.n	800e230 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e1a4:	4567      	cmp	r7, ip
 800e1a6:	bfb8      	it	lt
 800e1a8:	b2ba      	uxthlt	r2, r7
 800e1aa:	4288      	cmp	r0, r1
 800e1ac:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800e1b0:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800e1b4:	bfb8      	it	lt
 800e1b6:	b283      	uxthlt	r3, r0
 800e1b8:	1b92      	subs	r2, r2, r6
 800e1ba:	1b5b      	subs	r3, r3, r5
 800e1bc:	f8ad 201c 	strh.w	r2, [sp, #28]
 800e1c0:	f8ad 301e 	strh.w	r3, [sp, #30]
 800e1c4:	f8ad 6018 	strh.w	r6, [sp, #24]
 800e1c8:	f8ad 501a 	strh.w	r5, [sp, #26]
 800e1cc:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800e1d0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800e1d4:	429a      	cmp	r2, r3
 800e1d6:	d026      	beq.n	800e226 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800e1d8:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800e1dc:	2b00      	cmp	r3, #0
 800e1de:	dd22      	ble.n	800e226 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800e1e0:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800e1e4:	2b00      	cmp	r3, #0
 800e1e6:	dd1e      	ble.n	800e226 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800e1e8:	2300      	movs	r3, #0
 800e1ea:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800e1ee:	6823      	ldr	r3, [r4, #0]
 800e1f0:	a908      	add	r1, sp, #32
 800e1f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e1f4:	4620      	mov	r0, r4
 800e1f6:	4798      	blx	r3
 800e1f8:	4b0f      	ldr	r3, [pc, #60]	; (800e238 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 800e1fa:	681b      	ldr	r3, [r3, #0]
 800e1fc:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e200:	b10a      	cbz	r2, 800e206 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 800e202:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800e204:	b900      	cbnz	r0, 800e208 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 800e206:	6898      	ldr	r0, [r3, #8]
 800e208:	6801      	ldr	r1, [r0, #0]
 800e20a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800e20e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800e212:	2501      	movs	r5, #1
 800e214:	9502      	str	r5, [sp, #8]
 800e216:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800e21a:	9401      	str	r4, [sp, #4]
 800e21c:	ac06      	add	r4, sp, #24
 800e21e:	9400      	str	r4, [sp, #0]
 800e220:	688c      	ldr	r4, [r1, #8]
 800e222:	a905      	add	r1, sp, #20
 800e224:	47a0      	blx	r4
 800e226:	b00a      	add	sp, #40	; 0x28
 800e228:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e22c:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800e22e:	e797      	b.n	800e160 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800e230:	2300      	movs	r3, #0
 800e232:	9307      	str	r3, [sp, #28]
 800e234:	e7ca      	b.n	800e1cc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 800e236:	bf00      	nop
 800e238:	20015488 	.word	0x20015488

0800e23c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800e23c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e240:	4b2f      	ldr	r3, [pc, #188]	; (800e300 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 800e242:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800e244:	881b      	ldrh	r3, [r3, #0]
 800e246:	4293      	cmp	r3, r2
 800e248:	b08d      	sub	sp, #52	; 0x34
 800e24a:	4604      	mov	r4, r0
 800e24c:	460f      	mov	r7, r1
 800e24e:	d954      	bls.n	800e2fa <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800e250:	4b2c      	ldr	r3, [pc, #176]	; (800e304 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 800e252:	6819      	ldr	r1, [r3, #0]
 800e254:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 800e258:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 800e25c:	4a2a      	ldr	r2, [pc, #168]	; (800e308 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 800e25e:	6812      	ldr	r2, [r2, #0]
 800e260:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800e264:	2900      	cmp	r1, #0
 800e266:	d048      	beq.n	800e2fa <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800e268:	785a      	ldrb	r2, [r3, #1]
 800e26a:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 800e26e:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800e272:	4b26      	ldr	r3, [pc, #152]	; (800e30c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 800e274:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 800e278:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 800e27c:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 800e280:	6b26      	ldr	r6, [r4, #48]	; 0x30
 800e282:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 800e286:	9107      	str	r1, [sp, #28]
 800e288:	f3c2 0801 	ubfx	r8, r2, #0, #2
 800e28c:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800e290:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 800e294:	681a      	ldr	r2, [r3, #0]
 800e296:	f88d 8020 	strb.w	r8, [sp, #32]
 800e29a:	f892 3076 	ldrb.w	r3, [r2, #118]	; 0x76
 800e29e:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 800e2a2:	9609      	str	r6, [sp, #36]	; 0x24
 800e2a4:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 800e2a8:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 800e2ac:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 800e2b0:	b10b      	cbz	r3, 800e2b6 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 800e2b2:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 800e2b4:	b905      	cbnz	r5, 800e2b8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 800e2b6:	6895      	ldr	r5, [r2, #8]
 800e2b8:	ae05      	add	r6, sp, #20
 800e2ba:	4621      	mov	r1, r4
 800e2bc:	4630      	mov	r0, r6
 800e2be:	f003 fe0f 	bl	8011ee0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e2c2:	4b13      	ldr	r3, [pc, #76]	; (800e310 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 800e2c4:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800e2c6:	6818      	ldr	r0, [r3, #0]
 800e2c8:	f7f6 fda8 	bl	8004e1c <_ZNK8touchgfx5Texts7getTextEt>
 800e2cc:	6823      	ldr	r3, [r4, #0]
 800e2ce:	4680      	mov	r8, r0
 800e2d0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e2d2:	4620      	mov	r0, r4
 800e2d4:	4798      	blx	r3
 800e2d6:	6823      	ldr	r3, [r4, #0]
 800e2d8:	4681      	mov	r9, r0
 800e2da:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e2de:	4620      	mov	r0, r4
 800e2e0:	4798      	blx	r3
 800e2e2:	e9cd 9002 	strd	r9, r0, [sp, #8]
 800e2e6:	ab07      	add	r3, sp, #28
 800e2e8:	9300      	str	r3, [sp, #0]
 800e2ea:	f8cd 8004 	str.w	r8, [sp, #4]
 800e2ee:	463b      	mov	r3, r7
 800e2f0:	e896 0006 	ldmia.w	r6, {r1, r2}
 800e2f4:	4628      	mov	r0, r5
 800e2f6:	f7f6 fd43 	bl	8004d80 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800e2fa:	b00d      	add	sp, #52	; 0x34
 800e2fc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e300:	200154e4 	.word	0x200154e4
 800e304:	200154e0 	.word	0x200154e0
 800e308:	200154e8 	.word	0x200154e8
 800e30c:	20015488 	.word	0x20015488
 800e310:	200154ec 	.word	0x200154ec

0800e314 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
 800e314:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e318:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800e31c:	b0a0      	sub	sp, #128	; 0x80
 800e31e:	4604      	mov	r4, r0
 800e320:	b193      	cbz	r3, 800e348 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e322:	4b30      	ldr	r3, [pc, #192]	; (800e3e4 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd0>)
 800e324:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800e326:	881b      	ldrh	r3, [r3, #0]
 800e328:	428b      	cmp	r3, r1
 800e32a:	d90d      	bls.n	800e348 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e32c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e330:	2b00      	cmp	r3, #0
 800e332:	dd09      	ble.n	800e348 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e334:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e338:	2b00      	cmp	r3, #0
 800e33a:	dd05      	ble.n	800e348 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e33c:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800e340:	b12b      	cbz	r3, 800e34e <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x3a>
 800e342:	6803      	ldr	r3, [r0, #0]
 800e344:	695b      	ldr	r3, [r3, #20]
 800e346:	4798      	blx	r3
 800e348:	b020      	add	sp, #128	; 0x80
 800e34a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e34e:	4b26      	ldr	r3, [pc, #152]	; (800e3e8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd4>)
 800e350:	681b      	ldr	r3, [r3, #0]
 800e352:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800e356:	4b25      	ldr	r3, [pc, #148]	; (800e3ec <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd8>)
 800e358:	681b      	ldr	r3, [r3, #0]
 800e35a:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800e35e:	4b24      	ldr	r3, [pc, #144]	; (800e3f0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xdc>)
 800e360:	6818      	ldr	r0, [r3, #0]
 800e362:	f7f6 fd5b 	bl	8004e1c <_ZNK8touchgfx5Texts7getTextEt>
 800e366:	4606      	mov	r6, r0
 800e368:	a807      	add	r0, sp, #28
 800e36a:	f004 fa6e 	bl	801284a <_ZN8touchgfx12TextProviderC1Ev>
 800e36e:	682b      	ldr	r3, [r5, #0]
 800e370:	4628      	mov	r0, r5
 800e372:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e374:	4798      	blx	r3
 800e376:	682b      	ldr	r3, [r5, #0]
 800e378:	4607      	mov	r7, r0
 800e37a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800e37c:	4628      	mov	r0, r5
 800e37e:	4798      	blx	r3
 800e380:	6823      	ldr	r3, [r4, #0]
 800e382:	4605      	mov	r5, r0
 800e384:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e386:	4620      	mov	r0, r4
 800e388:	4798      	blx	r3
 800e38a:	6823      	ldr	r3, [r4, #0]
 800e38c:	4680      	mov	r8, r0
 800e38e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e392:	4620      	mov	r0, r4
 800e394:	4798      	blx	r3
 800e396:	462b      	mov	r3, r5
 800e398:	e9cd 8000 	strd	r8, r0, [sp]
 800e39c:	463a      	mov	r2, r7
 800e39e:	a807      	add	r0, sp, #28
 800e3a0:	4631      	mov	r1, r6
 800e3a2:	f004 fac2 	bl	801292a <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800e3a6:	a807      	add	r0, sp, #28
 800e3a8:	f004 fe7a 	bl	80130a0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e3ac:	280a      	cmp	r0, #10
 800e3ae:	d103      	bne.n	800e3b8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xa4>
 800e3b0:	6823      	ldr	r3, [r4, #0]
 800e3b2:	4620      	mov	r0, r4
 800e3b4:	695b      	ldr	r3, [r3, #20]
 800e3b6:	e7c6      	b.n	800e346 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x32>
 800e3b8:	a807      	add	r0, sp, #28
 800e3ba:	f004 fe71 	bl	80130a0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e3be:	2800      	cmp	r0, #0
 800e3c0:	d1f4      	bne.n	800e3ac <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x98>
 800e3c2:	ad04      	add	r5, sp, #16
 800e3c4:	4621      	mov	r1, r4
 800e3c6:	4628      	mov	r0, r5
 800e3c8:	f7ff fb9c 	bl	800db04 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800e3cc:	e895 0003 	ldmia.w	r5, {r0, r1}
 800e3d0:	6822      	ldr	r2, [r4, #0]
 800e3d2:	ab02      	add	r3, sp, #8
 800e3d4:	e883 0003 	stmia.w	r3, {r0, r1}
 800e3d8:	6912      	ldr	r2, [r2, #16]
 800e3da:	4619      	mov	r1, r3
 800e3dc:	4620      	mov	r0, r4
 800e3de:	4790      	blx	r2
 800e3e0:	e7b2      	b.n	800e348 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e3e2:	bf00      	nop
 800e3e4:	200154e4 	.word	0x200154e4
 800e3e8:	200154e0 	.word	0x200154e0
 800e3ec:	200154e8 	.word	0x200154e8
 800e3f0:	200154ec 	.word	0x200154ec

0800e3f4 <_ZN8touchgfx13BoxWithBorderD1Ev>:
 800e3f4:	4770      	bx	lr

0800e3f6 <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800e3f6:	b510      	push	{r4, lr}
 800e3f8:	2134      	movs	r1, #52	; 0x34
 800e3fa:	4604      	mov	r4, r0
 800e3fc:	f012 f85a 	bl	80204b4 <_ZdlPvj>
 800e400:	4620      	mov	r0, r4
 800e402:	bd10      	pop	{r4, pc}

0800e404 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 800e404:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e408:	4604      	mov	r4, r0
 800e40a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800e40c:	8962      	ldrh	r2, [r4, #10]
 800e40e:	b218      	sxth	r0, r3
 800e410:	460e      	mov	r6, r1
 800e412:	005b      	lsls	r3, r3, #1
 800e414:	8921      	ldrh	r1, [r4, #8]
 800e416:	b29b      	uxth	r3, r3
 800e418:	1ac9      	subs	r1, r1, r3
 800e41a:	b08e      	sub	sp, #56	; 0x38
 800e41c:	b209      	sxth	r1, r1
 800e41e:	1ad3      	subs	r3, r2, r3
 800e420:	b21b      	sxth	r3, r3
 800e422:	2900      	cmp	r1, #0
 800e424:	f8ad 0000 	strh.w	r0, [sp]
 800e428:	f8ad 0002 	strh.w	r0, [sp, #2]
 800e42c:	f8ad 1004 	strh.w	r1, [sp, #4]
 800e430:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e434:	dd5e      	ble.n	800e4f4 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800e436:	2b00      	cmp	r3, #0
 800e438:	dd5c      	ble.n	800e4f4 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800e43a:	6830      	ldr	r0, [r6, #0]
 800e43c:	6871      	ldr	r1, [r6, #4]
 800e43e:	ab02      	add	r3, sp, #8
 800e440:	c303      	stmia	r3!, {r0, r1}
 800e442:	4669      	mov	r1, sp
 800e444:	a802      	add	r0, sp, #8
 800e446:	f7fc fb79 	bl	800ab3c <_ZN8touchgfx4RectaNERKS0_>
 800e44a:	4620      	mov	r0, r4
 800e44c:	a902      	add	r1, sp, #8
 800e44e:	f7ff fe13 	bl	800e078 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 800e452:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 800e454:	2800      	cmp	r0, #0
 800e456:	d05f      	beq.n	800e518 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800e458:	8963      	ldrh	r3, [r4, #10]
 800e45a:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800e45e:	f8ad 101c 	strh.w	r1, [sp, #28]
 800e462:	1a1f      	subs	r7, r3, r0
 800e464:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 800e468:	b202      	sxth	r2, r0
 800e46a:	2500      	movs	r5, #0
 800e46c:	b21b      	sxth	r3, r3
 800e46e:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800e472:	1a09      	subs	r1, r1, r0
 800e474:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800e478:	9506      	str	r5, [sp, #24]
 800e47a:	f8ad 201e 	strh.w	r2, [sp, #30]
 800e47e:	f8ad 5020 	strh.w	r5, [sp, #32]
 800e482:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800e486:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 800e48a:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 800e48e:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800e492:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800e496:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 800e49a:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 800e49e:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800e4a2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800e4a6:	af04      	add	r7, sp, #16
 800e4a8:	ab06      	add	r3, sp, #24
 800e4aa:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800e4ae:	e893 0003 	ldmia.w	r3, {r0, r1}
 800e4b2:	e887 0003 	stmia.w	r7, {r0, r1}
 800e4b6:	4631      	mov	r1, r6
 800e4b8:	4638      	mov	r0, r7
 800e4ba:	f7fc fb3f 	bl	800ab3c <_ZN8touchgfx4RectaNERKS0_>
 800e4be:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800e4c2:	2b00      	cmp	r3, #0
 800e4c4:	dd12      	ble.n	800e4ec <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800e4c6:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800e4ca:	2b00      	cmp	r3, #0
 800e4cc:	dd0e      	ble.n	800e4ec <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800e4ce:	6823      	ldr	r3, [r4, #0]
 800e4d0:	4639      	mov	r1, r7
 800e4d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e4d4:	4620      	mov	r0, r4
 800e4d6:	4798      	blx	r3
 800e4d8:	f7f4 f81e 	bl	8002518 <_ZN8touchgfx3HAL3lcdEv>
 800e4dc:	6803      	ldr	r3, [r0, #0]
 800e4de:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800e4e0:	f8d3 8020 	ldr.w	r8, [r3, #32]
 800e4e4:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800e4e8:	4639      	mov	r1, r7
 800e4ea:	47c0      	blx	r8
 800e4ec:	3501      	adds	r5, #1
 800e4ee:	2d04      	cmp	r5, #4
 800e4f0:	d1da      	bne.n	800e4a8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 800e4f2:	e011      	b.n	800e518 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800e4f4:	6830      	ldr	r0, [r6, #0]
 800e4f6:	6871      	ldr	r1, [r6, #4]
 800e4f8:	ab06      	add	r3, sp, #24
 800e4fa:	c303      	stmia	r3!, {r0, r1}
 800e4fc:	6823      	ldr	r3, [r4, #0]
 800e4fe:	a906      	add	r1, sp, #24
 800e500:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e502:	4620      	mov	r0, r4
 800e504:	4798      	blx	r3
 800e506:	f7f4 f807 	bl	8002518 <_ZN8touchgfx3HAL3lcdEv>
 800e50a:	6803      	ldr	r3, [r0, #0]
 800e50c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800e50e:	6a1d      	ldr	r5, [r3, #32]
 800e510:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800e514:	a906      	add	r1, sp, #24
 800e516:	47a8      	blx	r5
 800e518:	b00e      	add	sp, #56	; 0x38
 800e51a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e51e <_ZN8touchgfx5ImageD1Ev>:
 800e51e:	4770      	bx	lr

0800e520 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800e520:	b570      	push	{r4, r5, r6, lr}
 800e522:	880b      	ldrh	r3, [r1, #0]
 800e524:	84c3      	strh	r3, [r0, #38]	; 0x26
 800e526:	4604      	mov	r4, r0
 800e528:	4608      	mov	r0, r1
 800e52a:	460d      	mov	r5, r1
 800e52c:	f005 fed6 	bl	80142dc <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e530:	4606      	mov	r6, r0
 800e532:	4628      	mov	r0, r5
 800e534:	f005 ff06 	bl	8014344 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e538:	6823      	ldr	r3, [r4, #0]
 800e53a:	4605      	mov	r5, r0
 800e53c:	4631      	mov	r1, r6
 800e53e:	4620      	mov	r0, r4
 800e540:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e542:	4798      	blx	r3
 800e544:	6823      	ldr	r3, [r4, #0]
 800e546:	4629      	mov	r1, r5
 800e548:	4620      	mov	r0, r4
 800e54a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e54c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e550:	4718      	bx	r3

0800e552 <_ZN8touchgfx5ImageD0Ev>:
 800e552:	b510      	push	{r4, lr}
 800e554:	212c      	movs	r1, #44	; 0x2c
 800e556:	4604      	mov	r4, r0
 800e558:	f011 ffac 	bl	80204b4 <_ZdlPvj>
 800e55c:	4620      	mov	r0, r4
 800e55e:	bd10      	pop	{r4, pc}

0800e560 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800e560:	b510      	push	{r4, lr}
 800e562:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800e566:	2bff      	cmp	r3, #255	; 0xff
 800e568:	4604      	mov	r4, r0
 800e56a:	d006      	beq.n	800e57a <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800e56c:	2300      	movs	r3, #0
 800e56e:	8003      	strh	r3, [r0, #0]
 800e570:	8043      	strh	r3, [r0, #2]
 800e572:	8083      	strh	r3, [r0, #4]
 800e574:	80c3      	strh	r3, [r0, #6]
 800e576:	4620      	mov	r0, r4
 800e578:	bd10      	pop	{r4, pc}
 800e57a:	3126      	adds	r1, #38	; 0x26
 800e57c:	f005 ff16 	bl	80143ac <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800e580:	e7f9      	b.n	800e576 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800e582 <_ZNK8touchgfx5Image17invalidateContentEv>:
 800e582:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 800e586:	b12a      	cbz	r2, 800e594 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800e588:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800e58c:	b112      	cbz	r2, 800e594 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800e58e:	6803      	ldr	r3, [r0, #0]
 800e590:	695b      	ldr	r3, [r3, #20]
 800e592:	4718      	bx	r3
 800e594:	4770      	bx	lr
	...

0800e598 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800e598:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e59c:	4604      	mov	r4, r0
 800e59e:	b088      	sub	sp, #32
 800e5a0:	f854 3b26 	ldr.w	r3, [r4], #38
 800e5a4:	2500      	movs	r5, #0
 800e5a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e5a8:	460f      	mov	r7, r1
 800e5aa:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800e5ae:	a904      	add	r1, sp, #16
 800e5b0:	4606      	mov	r6, r0
 800e5b2:	4798      	blx	r3
 800e5b4:	4620      	mov	r0, r4
 800e5b6:	f005 fe91 	bl	80142dc <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e5ba:	4680      	mov	r8, r0
 800e5bc:	4620      	mov	r0, r4
 800e5be:	f005 fec1 	bl	8014344 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e5c2:	9506      	str	r5, [sp, #24]
 800e5c4:	ad06      	add	r5, sp, #24
 800e5c6:	f8ad 001e 	strh.w	r0, [sp, #30]
 800e5ca:	4639      	mov	r1, r7
 800e5cc:	4628      	mov	r0, r5
 800e5ce:	f8ad 801c 	strh.w	r8, [sp, #28]
 800e5d2:	f7fc fab3 	bl	800ab3c <_ZN8touchgfx4RectaNERKS0_>
 800e5d6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800e5da:	2b00      	cmp	r3, #0
 800e5dc:	dd19      	ble.n	800e612 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800e5de:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800e5e2:	2b00      	cmp	r3, #0
 800e5e4:	dd15      	ble.n	800e612 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800e5e6:	4b0c      	ldr	r3, [pc, #48]	; (800e618 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800e5e8:	681b      	ldr	r3, [r3, #0]
 800e5ea:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e5ee:	b10a      	cbz	r2, 800e5f4 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800e5f0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800e5f2:	b900      	cbnz	r0, 800e5f6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800e5f4:	6898      	ldr	r0, [r3, #8]
 800e5f6:	6801      	ldr	r1, [r0, #0]
 800e5f8:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800e5fc:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800e600:	2701      	movs	r7, #1
 800e602:	9702      	str	r7, [sp, #8]
 800e604:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800e608:	e9cd 5600 	strd	r5, r6, [sp]
 800e60c:	688d      	ldr	r5, [r1, #8]
 800e60e:	4621      	mov	r1, r4
 800e610:	47a8      	blx	r5
 800e612:	b008      	add	sp, #32
 800e614:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e618:	20015488 	.word	0x20015488

0800e61c <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 800e61c:	4770      	bx	lr

0800e61e <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 800e61e:	b510      	push	{r4, lr}
 800e620:	2148      	movs	r1, #72	; 0x48
 800e622:	4604      	mov	r4, r0
 800e624:	f011 ff46 	bl	80204b4 <_ZdlPvj>
 800e628:	4620      	mov	r0, r4
 800e62a:	bd10      	pop	{r4, pc}

0800e62c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 800e62c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e630:	b08d      	sub	sp, #52	; 0x34
 800e632:	4604      	mov	r4, r0
 800e634:	4688      	mov	r8, r1
 800e636:	f7ff fd89 	bl	800e14c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800e63a:	4a4d      	ldr	r2, [pc, #308]	; (800e770 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x144>)
 800e63c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800e63e:	8812      	ldrh	r2, [r2, #0]
 800e640:	429a      	cmp	r2, r3
 800e642:	f240 8081 	bls.w	800e748 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800e646:	4e4b      	ldr	r6, [pc, #300]	; (800e774 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x148>)
 800e648:	6832      	ldr	r2, [r6, #0]
 800e64a:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800e64e:	4b4a      	ldr	r3, [pc, #296]	; (800e778 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x14c>)
 800e650:	681b      	ldr	r3, [r3, #0]
 800e652:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 800e656:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800e65a:	2300      	movs	r3, #0
 800e65c:	e9cd 3303 	strd	r3, r3, [sp, #12]
 800e660:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e664:	2b03      	cmp	r3, #3
 800e666:	d811      	bhi.n	800e68c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800e668:	e8df f003 	tbb	[pc, r3]
 800e66c:	71027102 	.word	0x71027102
 800e670:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800e674:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800e678:	f8ad 1010 	strh.w	r1, [sp, #16]
 800e67c:	1a9b      	subs	r3, r3, r2
 800e67e:	2002      	movs	r0, #2
 800e680:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e684:	fb93 f3f0 	sdiv	r3, r3, r0
 800e688:	f8ad 300e 	strh.w	r3, [sp, #14]
 800e68c:	ad03      	add	r5, sp, #12
 800e68e:	e895 0003 	ldmia.w	r5, {r0, r1}
 800e692:	f10d 0914 	add.w	r9, sp, #20
 800e696:	e889 0003 	stmia.w	r9, {r0, r1}
 800e69a:	4641      	mov	r1, r8
 800e69c:	4648      	mov	r0, r9
 800e69e:	f7fc fa4d 	bl	800ab3c <_ZN8touchgfx4RectaNERKS0_>
 800e6a2:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800e6a6:	2b00      	cmp	r3, #0
 800e6a8:	dd4e      	ble.n	800e748 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800e6aa:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800e6ae:	2b00      	cmp	r3, #0
 800e6b0:	dd4a      	ble.n	800e748 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800e6b2:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800e6b6:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800e6ba:	1a9b      	subs	r3, r3, r2
 800e6bc:	f8ad 3014 	strh.w	r3, [sp, #20]
 800e6c0:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800e6c4:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800e6c8:	1a9b      	subs	r3, r3, r2
 800e6ca:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e6ce:	6823      	ldr	r3, [r4, #0]
 800e6d0:	4629      	mov	r1, r5
 800e6d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e6d4:	4620      	mov	r0, r4
 800e6d6:	4798      	blx	r3
 800e6d8:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800e6dc:	2b00      	cmp	r3, #0
 800e6de:	d045      	beq.n	800e76c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x140>
 800e6e0:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e6e2:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800e6e4:	6833      	ldr	r3, [r6, #0]
 800e6e6:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 800e6ea:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 800e6ee:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800e6f2:	785b      	ldrb	r3, [r3, #1]
 800e6f4:	9209      	str	r2, [sp, #36]	; 0x24
 800e6f6:	f3c3 0601 	ubfx	r6, r3, #0, #2
 800e6fa:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800e6fe:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800e702:	2300      	movs	r3, #0
 800e704:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800e708:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800e70c:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800e710:	4b1a      	ldr	r3, [pc, #104]	; (800e77c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x150>)
 800e712:	9707      	str	r7, [sp, #28]
 800e714:	681b      	ldr	r3, [r3, #0]
 800e716:	f88d 6020 	strb.w	r6, [sp, #32]
 800e71a:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e71e:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800e722:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800e726:	b10a      	cbz	r2, 800e72c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x100>
 800e728:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 800e72a:	b904      	cbnz	r4, 800e72e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 800e72c:	689c      	ldr	r4, [r3, #8]
 800e72e:	4b14      	ldr	r3, [pc, #80]	; (800e780 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x154>)
 800e730:	6818      	ldr	r0, [r3, #0]
 800e732:	f7f6 fb73 	bl	8004e1c <_ZNK8touchgfx5Texts7getTextEt>
 800e736:	ab07      	add	r3, sp, #28
 800e738:	9001      	str	r0, [sp, #4]
 800e73a:	9300      	str	r3, [sp, #0]
 800e73c:	e895 0006 	ldmia.w	r5, {r1, r2}
 800e740:	464b      	mov	r3, r9
 800e742:	4620      	mov	r0, r4
 800e744:	f7f6 fb1c 	bl	8004d80 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800e748:	b00d      	add	sp, #52	; 0x34
 800e74a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e74e:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800e752:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800e756:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e75a:	1a9b      	subs	r3, r3, r2
 800e75c:	2002      	movs	r0, #2
 800e75e:	f8ad 1012 	strh.w	r1, [sp, #18]
 800e762:	fb93 f3f0 	sdiv	r3, r3, r0
 800e766:	f8ad 300c 	strh.w	r3, [sp, #12]
 800e76a:	e78f      	b.n	800e68c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800e76c:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800e76e:	e7b8      	b.n	800e6e2 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb6>
 800e770:	200154e4 	.word	0x200154e4
 800e774:	200154e0 	.word	0x200154e0
 800e778:	200154e8 	.word	0x200154e8
 800e77c:	20015488 	.word	0x20015488
 800e780:	200154ec 	.word	0x200154ec

0800e784 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 800e784:	b510      	push	{r4, lr}
 800e786:	2101      	movs	r1, #1
 800e788:	4c13      	ldr	r4, [pc, #76]	; (800e7d8 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 800e78a:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800e78e:	2200      	movs	r2, #0
 800e790:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 800e794:	6004      	str	r4, [r0, #0]
 800e796:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800e79a:	4c10      	ldr	r4, [pc, #64]	; (800e7dc <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 800e79c:	8082      	strh	r2, [r0, #4]
 800e79e:	80c2      	strh	r2, [r0, #6]
 800e7a0:	8102      	strh	r2, [r0, #8]
 800e7a2:	8142      	strh	r2, [r0, #10]
 800e7a4:	8182      	strh	r2, [r0, #12]
 800e7a6:	81c2      	strh	r2, [r0, #14]
 800e7a8:	8202      	strh	r2, [r0, #16]
 800e7aa:	8242      	strh	r2, [r0, #18]
 800e7ac:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800e7b0:	61c2      	str	r2, [r0, #28]
 800e7b2:	8402      	strh	r2, [r0, #32]
 800e7b4:	8442      	strh	r2, [r0, #34]	; 0x22
 800e7b6:	6282      	str	r2, [r0, #40]	; 0x28
 800e7b8:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800e7bc:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800e7be:	8601      	strh	r1, [r0, #48]	; 0x30
 800e7c0:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 800e7c4:	6344      	str	r4, [r0, #52]	; 0x34
 800e7c6:	8701      	strh	r1, [r0, #56]	; 0x38
 800e7c8:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 800e7cc:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 800e7d0:	f880 2045 	strb.w	r2, [r0, #69]	; 0x45
 800e7d4:	bd10      	pop	{r4, pc}
 800e7d6:	bf00      	nop
 800e7d8:	08023fe4 	.word	0x08023fe4
 800e7dc:	08021f98 	.word	0x08021f98

0800e7e0 <_ZN8touchgfx7OutlineD1Ev>:
 800e7e0:	4770      	bx	lr

0800e7e2 <_ZN8touchgfx7OutlineD0Ev>:
 800e7e2:	b510      	push	{r4, lr}
 800e7e4:	2130      	movs	r1, #48	; 0x30
 800e7e6:	4604      	mov	r4, r0
 800e7e8:	f011 fe64 	bl	80204b4 <_ZdlPvj>
 800e7ec:	4620      	mov	r0, r4
 800e7ee:	bd10      	pop	{r4, pc}

0800e7f0 <_ZN8touchgfx7Outline5resetEv>:
 800e7f0:	b510      	push	{r4, lr}
 800e7f2:	4604      	mov	r4, r0
 800e7f4:	f000 fe8c 	bl	800f510 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 800e7f8:	60e0      	str	r0, [r4, #12]
 800e7fa:	f000 fe8f 	bl	800f51c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 800e7fe:	68e3      	ldr	r3, [r4, #12]
 800e800:	6123      	str	r3, [r4, #16]
 800e802:	08c0      	lsrs	r0, r0, #3
 800e804:	2200      	movs	r2, #0
 800e806:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800e80a:	3801      	subs	r0, #1
 800e80c:	6060      	str	r0, [r4, #4]
 800e80e:	60a2      	str	r2, [r4, #8]
 800e810:	8019      	strh	r1, [r3, #0]
 800e812:	8059      	strh	r1, [r3, #2]
 800e814:	809a      	strh	r2, [r3, #4]
 800e816:	80da      	strh	r2, [r3, #6]
 800e818:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e81a:	f023 0301 	bic.w	r3, r3, #1
 800e81e:	f043 0302 	orr.w	r3, r3, #2
 800e822:	6263      	str	r3, [r4, #36]	; 0x24
 800e824:	bd10      	pop	{r4, pc}
	...

0800e828 <_ZN8touchgfx7OutlineC1Ev>:
 800e828:	b510      	push	{r4, lr}
 800e82a:	4b0a      	ldr	r3, [pc, #40]	; (800e854 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 800e82c:	6003      	str	r3, [r0, #0]
 800e82e:	2300      	movs	r3, #0
 800e830:	e9c0 3301 	strd	r3, r3, [r0, #4]
 800e834:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800e838:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800e83c:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800e840:	6243      	str	r3, [r0, #36]	; 0x24
 800e842:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 800e846:	4604      	mov	r4, r0
 800e848:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 800e84c:	f7ff ffd0 	bl	800e7f0 <_ZN8touchgfx7Outline5resetEv>
 800e850:	4620      	mov	r0, r4
 800e852:	bd10      	pop	{r4, pc}
 800e854:	08024058 	.word	0x08024058

0800e858 <_ZN8touchgfx7Outline10renderLineEiiii>:
 800e858:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e85c:	b093      	sub	sp, #76	; 0x4c
 800e85e:	1156      	asrs	r6, r2, #5
 800e860:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 800e862:	9305      	str	r3, [sp, #20]
 800e864:	f004 051f 	and.w	r5, r4, #31
 800e868:	1153      	asrs	r3, r2, #5
 800e86a:	9504      	str	r5, [sp, #16]
 800e86c:	1165      	asrs	r5, r4, #5
 800e86e:	9303      	str	r3, [sp, #12]
 800e870:	42ae      	cmp	r6, r5
 800e872:	ea4f 1364 	mov.w	r3, r4, asr #5
 800e876:	9306      	str	r3, [sp, #24]
 800e878:	f002 031f 	and.w	r3, r2, #31
 800e87c:	f040 80f8 	bne.w	800ea70 <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 800e880:	9c04      	ldr	r4, [sp, #16]
 800e882:	9a05      	ldr	r2, [sp, #20]
 800e884:	42a3      	cmp	r3, r4
 800e886:	ea4f 1e62 	mov.w	lr, r2, asr #5
 800e88a:	6902      	ldr	r2, [r0, #16]
 800e88c:	d125      	bne.n	800e8da <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 800e88e:	f9b2 3000 	ldrsh.w	r3, [r2]
 800e892:	459e      	cmp	lr, r3
 800e894:	d103      	bne.n	800e89e <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 800e896:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800e89a:	429e      	cmp	r6, r3
 800e89c:	d035      	beq.n	800e90a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800e89e:	88d1      	ldrh	r1, [r2, #6]
 800e8a0:	8893      	ldrh	r3, [r2, #4]
 800e8a2:	430b      	orrs	r3, r1
 800e8a4:	d010      	beq.n	800e8c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800e8a6:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800e8aa:	2b00      	cmp	r3, #0
 800e8ac:	db0c      	blt.n	800e8c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800e8ae:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800e8b0:	428b      	cmp	r3, r1
 800e8b2:	da09      	bge.n	800e8c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800e8b4:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800e8b8:	428b      	cmp	r3, r1
 800e8ba:	bf38      	it	cc
 800e8bc:	3208      	addcc	r2, #8
 800e8be:	f103 0301 	add.w	r3, r3, #1
 800e8c2:	bf38      	it	cc
 800e8c4:	6102      	strcc	r2, [r0, #16]
 800e8c6:	6083      	str	r3, [r0, #8]
 800e8c8:	6903      	ldr	r3, [r0, #16]
 800e8ca:	9a03      	ldr	r2, [sp, #12]
 800e8cc:	f8a3 e000 	strh.w	lr, [r3]
 800e8d0:	805a      	strh	r2, [r3, #2]
 800e8d2:	2200      	movs	r2, #0
 800e8d4:	809a      	strh	r2, [r3, #4]
 800e8d6:	80da      	strh	r2, [r3, #6]
 800e8d8:	e017      	b.n	800e90a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800e8da:	9c05      	ldr	r4, [sp, #20]
 800e8dc:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 800e8e0:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 800e8e4:	f004 041f 	and.w	r4, r4, #31
 800e8e8:	114e      	asrs	r6, r1, #5
 800e8ea:	9402      	str	r4, [sp, #8]
 800e8ec:	9c04      	ldr	r4, [sp, #16]
 800e8ee:	4576      	cmp	r6, lr
 800e8f0:	f001 0c1f 	and.w	ip, r1, #31
 800e8f4:	eba4 0403 	sub.w	r4, r4, r3
 800e8f8:	d10a      	bne.n	800e910 <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 800e8fa:	9b02      	ldr	r3, [sp, #8]
 800e8fc:	449c      	add	ip, r3
 800e8fe:	44a0      	add	r8, r4
 800e900:	fb04 a40c 	mla	r4, r4, ip, sl
 800e904:	f8a2 8004 	strh.w	r8, [r2, #4]
 800e908:	80d4      	strh	r4, [r2, #6]
 800e90a:	b013      	add	sp, #76	; 0x4c
 800e90c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e910:	9d05      	ldr	r5, [sp, #20]
 800e912:	1a69      	subs	r1, r5, r1
 800e914:	bf5b      	ittet	pl
 800e916:	f1cc 0520 	rsbpl	r5, ip, #32
 800e91a:	436c      	mulpl	r4, r5
 800e91c:	2500      	movmi	r5, #0
 800e91e:	2520      	movpl	r5, #32
 800e920:	bf44      	itt	mi
 800e922:	fb04 f40c 	mulmi.w	r4, r4, ip
 800e926:	4249      	negmi	r1, r1
 800e928:	9501      	str	r5, [sp, #4]
 800e92a:	9f01      	ldr	r7, [sp, #4]
 800e92c:	fb94 f5f1 	sdiv	r5, r4, r1
 800e930:	fb01 4415 	mls	r4, r1, r5, r4
 800e934:	bf54      	ite	pl
 800e936:	f04f 0901 	movpl.w	r9, #1
 800e93a:	f04f 39ff 	movmi.w	r9, #4294967295
 800e93e:	2c00      	cmp	r4, #0
 800e940:	bfb8      	it	lt
 800e942:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800e946:	44bc      	add	ip, r7
 800e948:	44a8      	add	r8, r5
 800e94a:	fb05 ac0c 	mla	ip, r5, ip, sl
 800e94e:	f8a2 8004 	strh.w	r8, [r2, #4]
 800e952:	f8a2 c006 	strh.w	ip, [r2, #6]
 800e956:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e95a:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800e95e:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 800e962:	bfb8      	it	lt
 800e964:	1864      	addlt	r4, r4, r1
 800e966:	ea58 0202 	orrs.w	r2, r8, r2
 800e96a:	444e      	add	r6, r9
 800e96c:	d011      	beq.n	800e992 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800e96e:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800e972:	f1b8 0f00 	cmp.w	r8, #0
 800e976:	db0c      	blt.n	800e992 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800e978:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800e97a:	4590      	cmp	r8, r2
 800e97c:	da09      	bge.n	800e992 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800e97e:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 800e982:	4590      	cmp	r8, r2
 800e984:	bf3c      	itt	cc
 800e986:	f10c 0208 	addcc.w	r2, ip, #8
 800e98a:	6102      	strcc	r2, [r0, #16]
 800e98c:	f108 0201 	add.w	r2, r8, #1
 800e990:	6082      	str	r2, [r0, #8]
 800e992:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e996:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800e99a:	f8ac 6000 	strh.w	r6, [ip]
 800e99e:	2700      	movs	r7, #0
 800e9a0:	45b6      	cmp	lr, r6
 800e9a2:	f8ac 2002 	strh.w	r2, [ip, #2]
 800e9a6:	f8ac 7004 	strh.w	r7, [ip, #4]
 800e9aa:	f8ac 7006 	strh.w	r7, [ip, #6]
 800e9ae:	442b      	add	r3, r5
 800e9b0:	d04d      	beq.n	800ea4e <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 800e9b2:	9f04      	ldr	r7, [sp, #16]
 800e9b4:	1aff      	subs	r7, r7, r3
 800e9b6:	443d      	add	r5, r7
 800e9b8:	016d      	lsls	r5, r5, #5
 800e9ba:	fb95 f8f1 	sdiv	r8, r5, r1
 800e9be:	fb01 5518 	mls	r5, r1, r8, r5
 800e9c2:	2d00      	cmp	r5, #0
 800e9c4:	bfb8      	it	lt
 800e9c6:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800e9ca:	f108 0701 	add.w	r7, r8, #1
 800e9ce:	bfb8      	it	lt
 800e9d0:	186d      	addlt	r5, r5, r1
 800e9d2:	1a64      	subs	r4, r4, r1
 800e9d4:	9703      	str	r7, [sp, #12]
 800e9d6:	f04f 0a00 	mov.w	sl, #0
 800e9da:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e9de:	1964      	adds	r4, r4, r5
 800e9e0:	bf58      	it	pl
 800e9e2:	9f03      	ldrpl	r7, [sp, #12]
 800e9e4:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800e9e8:	bf48      	it	mi
 800e9ea:	4647      	movmi	r7, r8
 800e9ec:	44bb      	add	fp, r7
 800e9ee:	f8ac b004 	strh.w	fp, [ip, #4]
 800e9f2:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e9f6:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800e9fa:	f8ac b006 	strh.w	fp, [ip, #6]
 800e9fe:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ea02:	443b      	add	r3, r7
 800ea04:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800ea08:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800ea0c:	bf58      	it	pl
 800ea0e:	1a64      	subpl	r4, r4, r1
 800ea10:	ea5b 0707 	orrs.w	r7, fp, r7
 800ea14:	444e      	add	r6, r9
 800ea16:	d011      	beq.n	800ea3c <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800ea18:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800ea1c:	f1bb 0f00 	cmp.w	fp, #0
 800ea20:	db0c      	blt.n	800ea3c <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800ea22:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800ea24:	45bb      	cmp	fp, r7
 800ea26:	da09      	bge.n	800ea3c <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800ea28:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800ea2c:	45bb      	cmp	fp, r7
 800ea2e:	bf3c      	itt	cc
 800ea30:	f10c 0708 	addcc.w	r7, ip, #8
 800ea34:	6107      	strcc	r7, [r0, #16]
 800ea36:	f10b 0701 	add.w	r7, fp, #1
 800ea3a:	6087      	str	r7, [r0, #8]
 800ea3c:	6907      	ldr	r7, [r0, #16]
 800ea3e:	45b6      	cmp	lr, r6
 800ea40:	803e      	strh	r6, [r7, #0]
 800ea42:	807a      	strh	r2, [r7, #2]
 800ea44:	f8a7 a004 	strh.w	sl, [r7, #4]
 800ea48:	f8a7 a006 	strh.w	sl, [r7, #6]
 800ea4c:	d1c5      	bne.n	800e9da <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 800ea4e:	9a04      	ldr	r2, [sp, #16]
 800ea50:	1ad3      	subs	r3, r2, r3
 800ea52:	6902      	ldr	r2, [r0, #16]
 800ea54:	8891      	ldrh	r1, [r2, #4]
 800ea56:	88d6      	ldrh	r6, [r2, #6]
 800ea58:	4419      	add	r1, r3
 800ea5a:	8091      	strh	r1, [r2, #4]
 800ea5c:	9902      	ldr	r1, [sp, #8]
 800ea5e:	f101 0c20 	add.w	ip, r1, #32
 800ea62:	9901      	ldr	r1, [sp, #4]
 800ea64:	ebac 0c01 	sub.w	ip, ip, r1
 800ea68:	fb03 630c 	mla	r3, r3, ip, r6
 800ea6c:	80d3      	strh	r3, [r2, #6]
 800ea6e:	e74c      	b.n	800e90a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800ea70:	9d05      	ldr	r5, [sp, #20]
 800ea72:	1aa2      	subs	r2, r4, r2
 800ea74:	eba5 0501 	sub.w	r5, r5, r1
 800ea78:	9508      	str	r5, [sp, #32]
 800ea7a:	9202      	str	r2, [sp, #8]
 800ea7c:	f140 8128 	bpl.w	800ecd0 <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 800ea80:	9a03      	ldr	r2, [sp, #12]
 800ea82:	2a00      	cmp	r2, #0
 800ea84:	f6ff af41 	blt.w	800e90a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800ea88:	9a02      	ldr	r2, [sp, #8]
 800ea8a:	4252      	negs	r2, r2
 800ea8c:	9202      	str	r2, [sp, #8]
 800ea8e:	9a06      	ldr	r2, [sp, #24]
 800ea90:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 800ea94:	f04f 34ff 	mov.w	r4, #4294967295
 800ea98:	9206      	str	r2, [sp, #24]
 800ea9a:	462a      	mov	r2, r5
 800ea9c:	940b      	str	r4, [sp, #44]	; 0x2c
 800ea9e:	435a      	muls	r2, r3
 800eaa0:	2400      	movs	r4, #0
 800eaa2:	9d02      	ldr	r5, [sp, #8]
 800eaa4:	9401      	str	r4, [sp, #4]
 800eaa6:	9c02      	ldr	r4, [sp, #8]
 800eaa8:	fb92 f4f4 	sdiv	r4, r2, r4
 800eaac:	fb05 2214 	mls	r2, r5, r4, r2
 800eab0:	2a00      	cmp	r2, #0
 800eab2:	9207      	str	r2, [sp, #28]
 800eab4:	bfbc      	itt	lt
 800eab6:	1952      	addlt	r2, r2, r5
 800eab8:	9207      	strlt	r2, [sp, #28]
 800eaba:	9a01      	ldr	r2, [sp, #4]
 800eabc:	6905      	ldr	r5, [r0, #16]
 800eabe:	bfb8      	it	lt
 800eac0:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800eac4:	eb04 0901 	add.w	r9, r4, r1
 800eac8:	429a      	cmp	r2, r3
 800eaca:	ea4f 1669 	mov.w	r6, r9, asr #5
 800eace:	f040 8112 	bne.w	800ecf6 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 800ead2:	f9b5 3000 	ldrsh.w	r3, [r5]
 800ead6:	429e      	cmp	r6, r3
 800ead8:	d104      	bne.n	800eae4 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 800eada:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800eade:	9a03      	ldr	r2, [sp, #12]
 800eae0:	429a      	cmp	r2, r3
 800eae2:	d01b      	beq.n	800eb1c <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800eae4:	88ea      	ldrh	r2, [r5, #6]
 800eae6:	88ab      	ldrh	r3, [r5, #4]
 800eae8:	4313      	orrs	r3, r2
 800eaea:	d010      	beq.n	800eb0e <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800eaec:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800eaf0:	2a00      	cmp	r2, #0
 800eaf2:	db0c      	blt.n	800eb0e <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800eaf4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800eaf6:	429a      	cmp	r2, r3
 800eaf8:	da09      	bge.n	800eb0e <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800eafa:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 800eafe:	429a      	cmp	r2, r3
 800eb00:	bf38      	it	cc
 800eb02:	3508      	addcc	r5, #8
 800eb04:	f102 0201 	add.w	r2, r2, #1
 800eb08:	bf38      	it	cc
 800eb0a:	6105      	strcc	r5, [r0, #16]
 800eb0c:	6082      	str	r2, [r0, #8]
 800eb0e:	6903      	ldr	r3, [r0, #16]
 800eb10:	9a03      	ldr	r2, [sp, #12]
 800eb12:	805a      	strh	r2, [r3, #2]
 800eb14:	2200      	movs	r2, #0
 800eb16:	801e      	strh	r6, [r3, #0]
 800eb18:	809a      	strh	r2, [r3, #4]
 800eb1a:	80da      	strh	r2, [r3, #6]
 800eb1c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800eb1e:	9a03      	ldr	r2, [sp, #12]
 800eb20:	6901      	ldr	r1, [r0, #16]
 800eb22:	441a      	add	r2, r3
 800eb24:	f9b1 3000 	ldrsh.w	r3, [r1]
 800eb28:	42b3      	cmp	r3, r6
 800eb2a:	d103      	bne.n	800eb34 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 800eb2c:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800eb30:	429a      	cmp	r2, r3
 800eb32:	d01a      	beq.n	800eb6a <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 800eb34:	88cc      	ldrh	r4, [r1, #6]
 800eb36:	888b      	ldrh	r3, [r1, #4]
 800eb38:	4323      	orrs	r3, r4
 800eb3a:	d010      	beq.n	800eb5e <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800eb3c:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800eb40:	2c00      	cmp	r4, #0
 800eb42:	db0c      	blt.n	800eb5e <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800eb44:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800eb46:	429c      	cmp	r4, r3
 800eb48:	da09      	bge.n	800eb5e <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800eb4a:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800eb4e:	429c      	cmp	r4, r3
 800eb50:	bf38      	it	cc
 800eb52:	3108      	addcc	r1, #8
 800eb54:	f104 0401 	add.w	r4, r4, #1
 800eb58:	bf38      	it	cc
 800eb5a:	6101      	strcc	r1, [r0, #16]
 800eb5c:	6084      	str	r4, [r0, #8]
 800eb5e:	6903      	ldr	r3, [r0, #16]
 800eb60:	2100      	movs	r1, #0
 800eb62:	801e      	strh	r6, [r3, #0]
 800eb64:	805a      	strh	r2, [r3, #2]
 800eb66:	8099      	strh	r1, [r3, #4]
 800eb68:	80d9      	strh	r1, [r3, #6]
 800eb6a:	9b06      	ldr	r3, [sp, #24]
 800eb6c:	4293      	cmp	r3, r2
 800eb6e:	f000 8082 	beq.w	800ec76 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 800eb72:	9b08      	ldr	r3, [sp, #32]
 800eb74:	9c02      	ldr	r4, [sp, #8]
 800eb76:	9902      	ldr	r1, [sp, #8]
 800eb78:	015b      	lsls	r3, r3, #5
 800eb7a:	fb93 f1f1 	sdiv	r1, r3, r1
 800eb7e:	fb04 3311 	mls	r3, r4, r1, r3
 800eb82:	2b00      	cmp	r3, #0
 800eb84:	9103      	str	r1, [sp, #12]
 800eb86:	9308      	str	r3, [sp, #32]
 800eb88:	da04      	bge.n	800eb94 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 800eb8a:	1e4b      	subs	r3, r1, #1
 800eb8c:	9303      	str	r3, [sp, #12]
 800eb8e:	9b08      	ldr	r3, [sp, #32]
 800eb90:	4423      	add	r3, r4
 800eb92:	9308      	str	r3, [sp, #32]
 800eb94:	9b07      	ldr	r3, [sp, #28]
 800eb96:	9902      	ldr	r1, [sp, #8]
 800eb98:	1a5b      	subs	r3, r3, r1
 800eb9a:	9307      	str	r3, [sp, #28]
 800eb9c:	9b01      	ldr	r3, [sp, #4]
 800eb9e:	f1c3 0320 	rsb	r3, r3, #32
 800eba2:	930e      	str	r3, [sp, #56]	; 0x38
 800eba4:	990e      	ldr	r1, [sp, #56]	; 0x38
 800eba6:	9b01      	ldr	r3, [sp, #4]
 800eba8:	1a5b      	subs	r3, r3, r1
 800ebaa:	464f      	mov	r7, r9
 800ebac:	930a      	str	r3, [sp, #40]	; 0x28
 800ebae:	2600      	movs	r6, #0
 800ebb0:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 800ebb4:	185b      	adds	r3, r3, r1
 800ebb6:	bf58      	it	pl
 800ebb8:	9902      	ldrpl	r1, [sp, #8]
 800ebba:	9307      	str	r3, [sp, #28]
 800ebbc:	bf5d      	ittte	pl
 800ebbe:	1a5b      	subpl	r3, r3, r1
 800ebc0:	9307      	strpl	r3, [sp, #28]
 800ebc2:	9b03      	ldrpl	r3, [sp, #12]
 800ebc4:	9903      	ldrmi	r1, [sp, #12]
 800ebc6:	bf58      	it	pl
 800ebc8:	1c59      	addpl	r1, r3, #1
 800ebca:	4489      	add	r9, r1
 800ebcc:	2a00      	cmp	r2, #0
 800ebce:	ea4f 1a69 	mov.w	sl, r9, asr #5
 800ebd2:	db2e      	blt.n	800ec32 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800ebd4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800ebd6:	4293      	cmp	r3, r2
 800ebd8:	dd2b      	ble.n	800ec32 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800ebda:	9c01      	ldr	r4, [sp, #4]
 800ebdc:	6905      	ldr	r5, [r0, #16]
 800ebde:	46a0      	mov	r8, r4
 800ebe0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 800ebe2:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 800ebe6:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 800ebea:	45a0      	cmp	r8, r4
 800ebec:	f040 814f 	bne.w	800ee8e <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 800ebf0:	f9b5 1000 	ldrsh.w	r1, [r5]
 800ebf4:	4551      	cmp	r1, sl
 800ebf6:	d103      	bne.n	800ec00 <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 800ebf8:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800ebfc:	4291      	cmp	r1, r2
 800ebfe:	d018      	beq.n	800ec32 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800ec00:	ea5c 010e 	orrs.w	r1, ip, lr
 800ec04:	d00f      	beq.n	800ec26 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800ec06:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800ec0a:	2900      	cmp	r1, #0
 800ec0c:	db0b      	blt.n	800ec26 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800ec0e:	428b      	cmp	r3, r1
 800ec10:	dd09      	ble.n	800ec26 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800ec12:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 800ec16:	4299      	cmp	r1, r3
 800ec18:	bf38      	it	cc
 800ec1a:	3508      	addcc	r5, #8
 800ec1c:	f101 0101 	add.w	r1, r1, #1
 800ec20:	bf38      	it	cc
 800ec22:	6105      	strcc	r5, [r0, #16]
 800ec24:	6081      	str	r1, [r0, #8]
 800ec26:	6903      	ldr	r3, [r0, #16]
 800ec28:	f8a3 a000 	strh.w	sl, [r3]
 800ec2c:	805a      	strh	r2, [r3, #2]
 800ec2e:	809e      	strh	r6, [r3, #4]
 800ec30:	80de      	strh	r6, [r3, #6]
 800ec32:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ec34:	6901      	ldr	r1, [r0, #16]
 800ec36:	441a      	add	r2, r3
 800ec38:	88cc      	ldrh	r4, [r1, #6]
 800ec3a:	888b      	ldrh	r3, [r1, #4]
 800ec3c:	4323      	orrs	r3, r4
 800ec3e:	d010      	beq.n	800ec62 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800ec40:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800ec44:	2c00      	cmp	r4, #0
 800ec46:	db0c      	blt.n	800ec62 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800ec48:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800ec4a:	429c      	cmp	r4, r3
 800ec4c:	da09      	bge.n	800ec62 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800ec4e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800ec52:	429c      	cmp	r4, r3
 800ec54:	bf38      	it	cc
 800ec56:	3108      	addcc	r1, #8
 800ec58:	f104 0401 	add.w	r4, r4, #1
 800ec5c:	bf38      	it	cc
 800ec5e:	6101      	strcc	r1, [r0, #16]
 800ec60:	6084      	str	r4, [r0, #8]
 800ec62:	6903      	ldr	r3, [r0, #16]
 800ec64:	f8a3 a000 	strh.w	sl, [r3]
 800ec68:	805a      	strh	r2, [r3, #2]
 800ec6a:	809e      	strh	r6, [r3, #4]
 800ec6c:	80de      	strh	r6, [r3, #6]
 800ec6e:	9b06      	ldr	r3, [sp, #24]
 800ec70:	4293      	cmp	r3, r2
 800ec72:	464f      	mov	r7, r9
 800ec74:	d19c      	bne.n	800ebb0 <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 800ec76:	9b01      	ldr	r3, [sp, #4]
 800ec78:	6907      	ldr	r7, [r0, #16]
 800ec7a:	f1c3 0620 	rsb	r6, r3, #32
 800ec7e:	9b05      	ldr	r3, [sp, #20]
 800ec80:	ea4f 1e63 	mov.w	lr, r3, asr #5
 800ec84:	9b04      	ldr	r3, [sp, #16]
 800ec86:	429e      	cmp	r6, r3
 800ec88:	f040 81cc 	bne.w	800f024 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 800ec8c:	f9b7 3000 	ldrsh.w	r3, [r7]
 800ec90:	459e      	cmp	lr, r3
 800ec92:	d104      	bne.n	800ec9e <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 800ec94:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800ec98:	429a      	cmp	r2, r3
 800ec9a:	f43f ae36 	beq.w	800e90a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800ec9e:	88f9      	ldrh	r1, [r7, #6]
 800eca0:	88bb      	ldrh	r3, [r7, #4]
 800eca2:	430b      	orrs	r3, r1
 800eca4:	d010      	beq.n	800ecc8 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800eca6:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800ecaa:	2b00      	cmp	r3, #0
 800ecac:	db0c      	blt.n	800ecc8 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800ecae:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800ecb0:	428b      	cmp	r3, r1
 800ecb2:	da09      	bge.n	800ecc8 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800ecb4:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800ecb8:	428b      	cmp	r3, r1
 800ecba:	bf38      	it	cc
 800ecbc:	3708      	addcc	r7, #8
 800ecbe:	f103 0301 	add.w	r3, r3, #1
 800ecc2:	bf38      	it	cc
 800ecc4:	6107      	strcc	r7, [r0, #16]
 800ecc6:	6083      	str	r3, [r0, #8]
 800ecc8:	6903      	ldr	r3, [r0, #16]
 800ecca:	f8a3 e000 	strh.w	lr, [r3]
 800ecce:	e5ff      	b.n	800e8d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 800ecd0:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800ecd2:	9c03      	ldr	r4, [sp, #12]
 800ecd4:	42a2      	cmp	r2, r4
 800ecd6:	f6ff ae18 	blt.w	800e90a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800ecda:	9c06      	ldr	r4, [sp, #24]
 800ecdc:	42a2      	cmp	r2, r4
 800ecde:	bfb8      	it	lt
 800ece0:	3201      	addlt	r2, #1
 800ece2:	9c08      	ldr	r4, [sp, #32]
 800ece4:	bfb8      	it	lt
 800ece6:	9206      	strlt	r2, [sp, #24]
 800ece8:	f1c3 0220 	rsb	r2, r3, #32
 800ecec:	4362      	muls	r2, r4
 800ecee:	2401      	movs	r4, #1
 800ecf0:	940b      	str	r4, [sp, #44]	; 0x2c
 800ecf2:	2420      	movs	r4, #32
 800ecf4:	e6d5      	b.n	800eaa2 <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 800ecf6:	f009 021f 	and.w	r2, r9, #31
 800ecfa:	ea4f 1861 	mov.w	r8, r1, asr #5
 800ecfe:	920c      	str	r2, [sp, #48]	; 0x30
 800ed00:	9a01      	ldr	r2, [sp, #4]
 800ed02:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 800ed06:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 800ed0a:	45b0      	cmp	r8, r6
 800ed0c:	f001 011f 	and.w	r1, r1, #31
 800ed10:	eba2 0203 	sub.w	r2, r2, r3
 800ed14:	d108      	bne.n	800ed28 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 800ed16:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ed18:	4419      	add	r1, r3
 800ed1a:	4496      	add	lr, r2
 800ed1c:	fb02 a101 	mla	r1, r2, r1, sl
 800ed20:	f8a5 e004 	strh.w	lr, [r5, #4]
 800ed24:	80e9      	strh	r1, [r5, #6]
 800ed26:	e6f9      	b.n	800eb1c <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800ed28:	2c00      	cmp	r4, #0
 800ed2a:	f2c0 80a9 	blt.w	800ee80 <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 800ed2e:	2701      	movs	r7, #1
 800ed30:	f1c1 0c20 	rsb	ip, r1, #32
 800ed34:	970a      	str	r7, [sp, #40]	; 0x28
 800ed36:	fb02 f20c 	mul.w	r2, r2, ip
 800ed3a:	2720      	movs	r7, #32
 800ed3c:	9709      	str	r7, [sp, #36]	; 0x24
 800ed3e:	fb92 fcf4 	sdiv	ip, r2, r4
 800ed42:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800ed44:	fb04 221c 	mls	r2, r4, ip, r2
 800ed48:	2a00      	cmp	r2, #0
 800ed4a:	bfb8      	it	lt
 800ed4c:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 800ed50:	4439      	add	r1, r7
 800ed52:	fb0c a101 	mla	r1, ip, r1, sl
 800ed56:	80e9      	strh	r1, [r5, #6]
 800ed58:	44e6      	add	lr, ip
 800ed5a:	990a      	ldr	r1, [sp, #40]	; 0x28
 800ed5c:	f8a5 e004 	strh.w	lr, [r5, #4]
 800ed60:	eb08 0501 	add.w	r5, r8, r1
 800ed64:	6901      	ldr	r1, [r0, #16]
 800ed66:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 800ed6a:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 800ed6e:	bfb8      	it	lt
 800ed70:	1912      	addlt	r2, r2, r4
 800ed72:	ea58 070e 	orrs.w	r7, r8, lr
 800ed76:	d010      	beq.n	800ed9a <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800ed78:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 800ed7c:	f1be 0f00 	cmp.w	lr, #0
 800ed80:	db0b      	blt.n	800ed9a <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800ed82:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800ed84:	45be      	cmp	lr, r7
 800ed86:	da08      	bge.n	800ed9a <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800ed88:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800ed8c:	45be      	cmp	lr, r7
 800ed8e:	bf3c      	itt	cc
 800ed90:	3108      	addcc	r1, #8
 800ed92:	6101      	strcc	r1, [r0, #16]
 800ed94:	f10e 0101 	add.w	r1, lr, #1
 800ed98:	6081      	str	r1, [r0, #8]
 800ed9a:	6901      	ldr	r1, [r0, #16]
 800ed9c:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 800eda0:	800d      	strh	r5, [r1, #0]
 800eda2:	f04f 0e00 	mov.w	lr, #0
 800eda6:	42ae      	cmp	r6, r5
 800eda8:	f8a1 8002 	strh.w	r8, [r1, #2]
 800edac:	f8a1 e004 	strh.w	lr, [r1, #4]
 800edb0:	f8a1 e006 	strh.w	lr, [r1, #6]
 800edb4:	4463      	add	r3, ip
 800edb6:	d054      	beq.n	800ee62 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 800edb8:	9901      	ldr	r1, [sp, #4]
 800edba:	1ac9      	subs	r1, r1, r3
 800edbc:	4461      	add	r1, ip
 800edbe:	0149      	lsls	r1, r1, #5
 800edc0:	fb91 fef4 	sdiv	lr, r1, r4
 800edc4:	fb04 111e 	mls	r1, r4, lr, r1
 800edc8:	2900      	cmp	r1, #0
 800edca:	bfb8      	it	lt
 800edcc:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 800edd0:	f10e 0701 	add.w	r7, lr, #1
 800edd4:	bfb8      	it	lt
 800edd6:	1909      	addlt	r1, r1, r4
 800edd8:	1b12      	subs	r2, r2, r4
 800edda:	970d      	str	r7, [sp, #52]	; 0x34
 800eddc:	f8d0 a010 	ldr.w	sl, [r0, #16]
 800ede0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800ede2:	f8ba b004 	ldrh.w	fp, [sl, #4]
 800ede6:	1852      	adds	r2, r2, r1
 800ede8:	bf54      	ite	pl
 800edea:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 800edee:	46f4      	movmi	ip, lr
 800edf0:	44e3      	add	fp, ip
 800edf2:	f8aa b004 	strh.w	fp, [sl, #4]
 800edf6:	f8ba b006 	ldrh.w	fp, [sl, #6]
 800edfa:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 800edfe:	f8aa b006 	strh.w	fp, [sl, #6]
 800ee02:	4463      	add	r3, ip
 800ee04:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ee08:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800ee0c:	f8bc a004 	ldrh.w	sl, [ip, #4]
 800ee10:	bf58      	it	pl
 800ee12:	1b12      	subpl	r2, r2, r4
 800ee14:	443d      	add	r5, r7
 800ee16:	ea5b 070a 	orrs.w	r7, fp, sl
 800ee1a:	d014      	beq.n	800ee46 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800ee1c:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 800ee20:	f1ba 0f00 	cmp.w	sl, #0
 800ee24:	db0f      	blt.n	800ee46 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800ee26:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800ee28:	45ba      	cmp	sl, r7
 800ee2a:	da0c      	bge.n	800ee46 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800ee2c:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 800ee30:	45ba      	cmp	sl, r7
 800ee32:	bf38      	it	cc
 800ee34:	f10c 0c08 	addcc.w	ip, ip, #8
 800ee38:	f10a 0a01 	add.w	sl, sl, #1
 800ee3c:	bf38      	it	cc
 800ee3e:	f8c0 c010 	strcc.w	ip, [r0, #16]
 800ee42:	f8c0 a008 	str.w	sl, [r0, #8]
 800ee46:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ee4a:	f04f 0700 	mov.w	r7, #0
 800ee4e:	42ae      	cmp	r6, r5
 800ee50:	f8ac 5000 	strh.w	r5, [ip]
 800ee54:	f8ac 8002 	strh.w	r8, [ip, #2]
 800ee58:	f8ac 7004 	strh.w	r7, [ip, #4]
 800ee5c:	f8ac 7006 	strh.w	r7, [ip, #6]
 800ee60:	d1bc      	bne.n	800eddc <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 800ee62:	6904      	ldr	r4, [r0, #16]
 800ee64:	9a01      	ldr	r2, [sp, #4]
 800ee66:	990c      	ldr	r1, [sp, #48]	; 0x30
 800ee68:	1ad3      	subs	r3, r2, r3
 800ee6a:	88a2      	ldrh	r2, [r4, #4]
 800ee6c:	441a      	add	r2, r3
 800ee6e:	80a2      	strh	r2, [r4, #4]
 800ee70:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800ee72:	3120      	adds	r1, #32
 800ee74:	1a89      	subs	r1, r1, r2
 800ee76:	88e2      	ldrh	r2, [r4, #6]
 800ee78:	fb03 2301 	mla	r3, r3, r1, r2
 800ee7c:	80e3      	strh	r3, [r4, #6]
 800ee7e:	e64d      	b.n	800eb1c <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800ee80:	f04f 37ff 	mov.w	r7, #4294967295
 800ee84:	970a      	str	r7, [sp, #40]	; 0x28
 800ee86:	434a      	muls	r2, r1
 800ee88:	4264      	negs	r4, r4
 800ee8a:	2700      	movs	r7, #0
 800ee8c:	e756      	b.n	800ed3c <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 800ee8e:	ea4f 1867 	mov.w	r8, r7, asr #5
 800ee92:	f009 031f 	and.w	r3, r9, #31
 800ee96:	45d0      	cmp	r8, sl
 800ee98:	f007 071f 	and.w	r7, r7, #31
 800ee9c:	930f      	str	r3, [sp, #60]	; 0x3c
 800ee9e:	fa1f fc8c 	uxth.w	ip, ip
 800eea2:	fa1f fe8e 	uxth.w	lr, lr
 800eea6:	d10a      	bne.n	800eebe <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 800eea8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800eeaa:	449c      	add	ip, r3
 800eeac:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800eeae:	f8a5 c004 	strh.w	ip, [r5, #4]
 800eeb2:	441f      	add	r7, r3
 800eeb4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800eeb6:	fb03 e707 	mla	r7, r3, r7, lr
 800eeba:	80ef      	strh	r7, [r5, #6]
 800eebc:	e6b9      	b.n	800ec32 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800eebe:	2900      	cmp	r1, #0
 800eec0:	f2c0 80a8 	blt.w	800f014 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 800eec4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800eec6:	f1c7 0320 	rsb	r3, r7, #32
 800eeca:	4363      	muls	r3, r4
 800eecc:	2401      	movs	r4, #1
 800eece:	940d      	str	r4, [sp, #52]	; 0x34
 800eed0:	2420      	movs	r4, #32
 800eed2:	940c      	str	r4, [sp, #48]	; 0x30
 800eed4:	fb93 f4f1 	sdiv	r4, r3, r1
 800eed8:	fb01 3b14 	mls	fp, r1, r4, r3
 800eedc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800eede:	f1bb 0f00 	cmp.w	fp, #0
 800eee2:	bfb8      	it	lt
 800eee4:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800eee8:	441f      	add	r7, r3
 800eeea:	fb04 e707 	mla	r7, r4, r7, lr
 800eeee:	44a4      	add	ip, r4
 800eef0:	f8a5 c004 	strh.w	ip, [r5, #4]
 800eef4:	80ef      	strh	r7, [r5, #6]
 800eef6:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800eefa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800eefc:	f8bc e006 	ldrh.w	lr, [ip, #6]
 800ef00:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800ef04:	bfb8      	it	lt
 800ef06:	448b      	addlt	fp, r1
 800ef08:	eb08 0503 	add.w	r5, r8, r3
 800ef0c:	ea5e 0307 	orrs.w	r3, lr, r7
 800ef10:	d011      	beq.n	800ef36 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800ef12:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 800ef16:	f1be 0f00 	cmp.w	lr, #0
 800ef1a:	db0c      	blt.n	800ef36 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800ef1c:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800ef1e:	45be      	cmp	lr, r7
 800ef20:	da09      	bge.n	800ef36 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800ef22:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800ef26:	45be      	cmp	lr, r7
 800ef28:	bf3c      	itt	cc
 800ef2a:	f10c 0708 	addcc.w	r7, ip, #8
 800ef2e:	6107      	strcc	r7, [r0, #16]
 800ef30:	f10e 0701 	add.w	r7, lr, #1
 800ef34:	6087      	str	r7, [r0, #8]
 800ef36:	6907      	ldr	r7, [r0, #16]
 800ef38:	b213      	sxth	r3, r2
 800ef3a:	9310      	str	r3, [sp, #64]	; 0x40
 800ef3c:	807b      	strh	r3, [r7, #2]
 800ef3e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ef40:	803d      	strh	r5, [r7, #0]
 800ef42:	4555      	cmp	r5, sl
 800ef44:	80be      	strh	r6, [r7, #4]
 800ef46:	80fe      	strh	r6, [r7, #6]
 800ef48:	eb04 0c03 	add.w	ip, r4, r3
 800ef4c:	d051      	beq.n	800eff2 <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 800ef4e:	9b01      	ldr	r3, [sp, #4]
 800ef50:	eba3 070c 	sub.w	r7, r3, ip
 800ef54:	443c      	add	r4, r7
 800ef56:	0164      	lsls	r4, r4, #5
 800ef58:	fb94 f8f1 	sdiv	r8, r4, r1
 800ef5c:	fb01 4418 	mls	r4, r1, r8, r4
 800ef60:	2c00      	cmp	r4, #0
 800ef62:	bfb8      	it	lt
 800ef64:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800ef68:	ebab 0301 	sub.w	r3, fp, r1
 800ef6c:	f108 0701 	add.w	r7, r8, #1
 800ef70:	bfb8      	it	lt
 800ef72:	1864      	addlt	r4, r4, r1
 800ef74:	9309      	str	r3, [sp, #36]	; 0x24
 800ef76:	9711      	str	r7, [sp, #68]	; 0x44
 800ef78:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ef7a:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800ef7e:	191b      	adds	r3, r3, r4
 800ef80:	bf58      	it	pl
 800ef82:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 800ef84:	f8be b004 	ldrh.w	fp, [lr, #4]
 800ef88:	9309      	str	r3, [sp, #36]	; 0x24
 800ef8a:	bf48      	it	mi
 800ef8c:	4647      	movmi	r7, r8
 800ef8e:	44bb      	add	fp, r7
 800ef90:	f8ae b004 	strh.w	fp, [lr, #4]
 800ef94:	f8be b006 	ldrh.w	fp, [lr, #6]
 800ef98:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800ef9c:	f8ae b006 	strh.w	fp, [lr, #6]
 800efa0:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800efa4:	44bc      	add	ip, r7
 800efa6:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 800efa8:	f8be b006 	ldrh.w	fp, [lr, #6]
 800efac:	443d      	add	r5, r7
 800efae:	f8be 7004 	ldrh.w	r7, [lr, #4]
 800efb2:	bf5c      	itt	pl
 800efb4:	1a5b      	subpl	r3, r3, r1
 800efb6:	9309      	strpl	r3, [sp, #36]	; 0x24
 800efb8:	ea5b 0307 	orrs.w	r3, fp, r7
 800efbc:	d011      	beq.n	800efe2 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800efbe:	f9be b002 	ldrsh.w	fp, [lr, #2]
 800efc2:	f1bb 0f00 	cmp.w	fp, #0
 800efc6:	db0c      	blt.n	800efe2 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800efc8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800efca:	45bb      	cmp	fp, r7
 800efcc:	da09      	bge.n	800efe2 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800efce:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800efd2:	45bb      	cmp	fp, r7
 800efd4:	bf3c      	itt	cc
 800efd6:	f10e 0708 	addcc.w	r7, lr, #8
 800efda:	6107      	strcc	r7, [r0, #16]
 800efdc:	f10b 0701 	add.w	r7, fp, #1
 800efe0:	6087      	str	r7, [r0, #8]
 800efe2:	6907      	ldr	r7, [r0, #16]
 800efe4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800efe6:	803d      	strh	r5, [r7, #0]
 800efe8:	4555      	cmp	r5, sl
 800efea:	807b      	strh	r3, [r7, #2]
 800efec:	80be      	strh	r6, [r7, #4]
 800efee:	80fe      	strh	r6, [r7, #6]
 800eff0:	d1c2      	bne.n	800ef78 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 800eff2:	9b01      	ldr	r3, [sp, #4]
 800eff4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800eff6:	eba3 0c0c 	sub.w	ip, r3, ip
 800effa:	6903      	ldr	r3, [r0, #16]
 800effc:	8899      	ldrh	r1, [r3, #4]
 800effe:	4461      	add	r1, ip
 800f000:	8099      	strh	r1, [r3, #4]
 800f002:	990c      	ldr	r1, [sp, #48]	; 0x30
 800f004:	3720      	adds	r7, #32
 800f006:	1a7f      	subs	r7, r7, r1
 800f008:	88d9      	ldrh	r1, [r3, #6]
 800f00a:	fb0c 1c07 	mla	ip, ip, r7, r1
 800f00e:	f8a3 c006 	strh.w	ip, [r3, #6]
 800f012:	e60e      	b.n	800ec32 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800f014:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f016:	f04f 34ff 	mov.w	r4, #4294967295
 800f01a:	940d      	str	r4, [sp, #52]	; 0x34
 800f01c:	437b      	muls	r3, r7
 800f01e:	4249      	negs	r1, r1
 800f020:	2400      	movs	r4, #0
 800f022:	e756      	b.n	800eed2 <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 800f024:	9905      	ldr	r1, [sp, #20]
 800f026:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 800f02a:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 800f02e:	f001 011f 	and.w	r1, r1, #31
 800f032:	ea4f 1b69 	mov.w	fp, r9, asr #5
 800f036:	9102      	str	r1, [sp, #8]
 800f038:	9904      	ldr	r1, [sp, #16]
 800f03a:	45f3      	cmp	fp, lr
 800f03c:	f009 0c1f 	and.w	ip, r9, #31
 800f040:	eba1 0406 	sub.w	r4, r1, r6
 800f044:	d108      	bne.n	800f058 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 800f046:	9b02      	ldr	r3, [sp, #8]
 800f048:	449c      	add	ip, r3
 800f04a:	44a0      	add	r8, r4
 800f04c:	fb04 a40c 	mla	r4, r4, ip, sl
 800f050:	f8a7 8004 	strh.w	r8, [r7, #4]
 800f054:	80fc      	strh	r4, [r7, #6]
 800f056:	e458      	b.n	800e90a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800f058:	9905      	ldr	r1, [sp, #20]
 800f05a:	ebb1 0109 	subs.w	r1, r1, r9
 800f05e:	bf5b      	ittet	pl
 800f060:	f1cc 0520 	rsbpl	r5, ip, #32
 800f064:	436c      	mulpl	r4, r5
 800f066:	2500      	movmi	r5, #0
 800f068:	2520      	movpl	r5, #32
 800f06a:	bf44      	itt	mi
 800f06c:	fb04 f40c 	mulmi.w	r4, r4, ip
 800f070:	4249      	negmi	r1, r1
 800f072:	9501      	str	r5, [sp, #4]
 800f074:	9b01      	ldr	r3, [sp, #4]
 800f076:	fb94 f5f1 	sdiv	r5, r4, r1
 800f07a:	fb01 4415 	mls	r4, r1, r5, r4
 800f07e:	bf54      	ite	pl
 800f080:	f04f 0901 	movpl.w	r9, #1
 800f084:	f04f 39ff 	movmi.w	r9, #4294967295
 800f088:	2c00      	cmp	r4, #0
 800f08a:	bfb8      	it	lt
 800f08c:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800f090:	449c      	add	ip, r3
 800f092:	44a8      	add	r8, r5
 800f094:	fb05 ac0c 	mla	ip, r5, ip, sl
 800f098:	f8a7 8004 	strh.w	r8, [r7, #4]
 800f09c:	f8a7 c006 	strh.w	ip, [r7, #6]
 800f0a0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f0a4:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800f0a8:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800f0ac:	bfb8      	it	lt
 800f0ae:	1864      	addlt	r4, r4, r1
 800f0b0:	ea58 0707 	orrs.w	r7, r8, r7
 800f0b4:	eb0b 0309 	add.w	r3, fp, r9
 800f0b8:	d011      	beq.n	800f0de <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800f0ba:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800f0be:	f1b8 0f00 	cmp.w	r8, #0
 800f0c2:	db0c      	blt.n	800f0de <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800f0c4:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f0c6:	45b8      	cmp	r8, r7
 800f0c8:	da09      	bge.n	800f0de <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800f0ca:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 800f0ce:	45b8      	cmp	r8, r7
 800f0d0:	bf3c      	itt	cc
 800f0d2:	f10c 0708 	addcc.w	r7, ip, #8
 800f0d6:	6107      	strcc	r7, [r0, #16]
 800f0d8:	f108 0701 	add.w	r7, r8, #1
 800f0dc:	6087      	str	r7, [r0, #8]
 800f0de:	6907      	ldr	r7, [r0, #16]
 800f0e0:	f04f 0c00 	mov.w	ip, #0
 800f0e4:	b212      	sxth	r2, r2
 800f0e6:	459e      	cmp	lr, r3
 800f0e8:	803b      	strh	r3, [r7, #0]
 800f0ea:	807a      	strh	r2, [r7, #2]
 800f0ec:	f8a7 c004 	strh.w	ip, [r7, #4]
 800f0f0:	f8a7 c006 	strh.w	ip, [r7, #6]
 800f0f4:	442e      	add	r6, r5
 800f0f6:	d04d      	beq.n	800f194 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 800f0f8:	9f04      	ldr	r7, [sp, #16]
 800f0fa:	1bbf      	subs	r7, r7, r6
 800f0fc:	443d      	add	r5, r7
 800f0fe:	016d      	lsls	r5, r5, #5
 800f100:	fb95 f8f1 	sdiv	r8, r5, r1
 800f104:	fb01 5518 	mls	r5, r1, r8, r5
 800f108:	4565      	cmp	r5, ip
 800f10a:	bfb8      	it	lt
 800f10c:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800f110:	f108 0701 	add.w	r7, r8, #1
 800f114:	bfb8      	it	lt
 800f116:	186d      	addlt	r5, r5, r1
 800f118:	1a64      	subs	r4, r4, r1
 800f11a:	9703      	str	r7, [sp, #12]
 800f11c:	f04f 0a00 	mov.w	sl, #0
 800f120:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f124:	1964      	adds	r4, r4, r5
 800f126:	bf58      	it	pl
 800f128:	9f03      	ldrpl	r7, [sp, #12]
 800f12a:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800f12e:	bf48      	it	mi
 800f130:	4647      	movmi	r7, r8
 800f132:	44bb      	add	fp, r7
 800f134:	f8ac b004 	strh.w	fp, [ip, #4]
 800f138:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f13c:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800f140:	f8ac b006 	strh.w	fp, [ip, #6]
 800f144:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f148:	443e      	add	r6, r7
 800f14a:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f14e:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800f152:	bf58      	it	pl
 800f154:	1a64      	subpl	r4, r4, r1
 800f156:	ea5b 0707 	orrs.w	r7, fp, r7
 800f15a:	444b      	add	r3, r9
 800f15c:	d011      	beq.n	800f182 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800f15e:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800f162:	f1bb 0f00 	cmp.w	fp, #0
 800f166:	db0c      	blt.n	800f182 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800f168:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f16a:	45bb      	cmp	fp, r7
 800f16c:	da09      	bge.n	800f182 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800f16e:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800f172:	45bb      	cmp	fp, r7
 800f174:	bf3c      	itt	cc
 800f176:	f10c 0708 	addcc.w	r7, ip, #8
 800f17a:	6107      	strcc	r7, [r0, #16]
 800f17c:	f10b 0701 	add.w	r7, fp, #1
 800f180:	6087      	str	r7, [r0, #8]
 800f182:	6907      	ldr	r7, [r0, #16]
 800f184:	459e      	cmp	lr, r3
 800f186:	803b      	strh	r3, [r7, #0]
 800f188:	807a      	strh	r2, [r7, #2]
 800f18a:	f8a7 a004 	strh.w	sl, [r7, #4]
 800f18e:	f8a7 a006 	strh.w	sl, [r7, #6]
 800f192:	d1c5      	bne.n	800f120 <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 800f194:	9b04      	ldr	r3, [sp, #16]
 800f196:	1b9e      	subs	r6, r3, r6
 800f198:	6903      	ldr	r3, [r0, #16]
 800f19a:	889a      	ldrh	r2, [r3, #4]
 800f19c:	4432      	add	r2, r6
 800f19e:	809a      	strh	r2, [r3, #4]
 800f1a0:	9a02      	ldr	r2, [sp, #8]
 800f1a2:	f102 0c20 	add.w	ip, r2, #32
 800f1a6:	9a01      	ldr	r2, [sp, #4]
 800f1a8:	ebac 0c02 	sub.w	ip, ip, r2
 800f1ac:	88da      	ldrh	r2, [r3, #6]
 800f1ae:	fb06 260c 	mla	r6, r6, ip, r2
 800f1b2:	80de      	strh	r6, [r3, #6]
 800f1b4:	f7ff bba9 	b.w	800e90a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

0800f1b8 <_ZN8touchgfx7Outline6lineToEii>:
 800f1b8:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f1ba:	079b      	lsls	r3, r3, #30
 800f1bc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f1be:	460e      	mov	r6, r1
 800f1c0:	4615      	mov	r5, r2
 800f1c2:	d511      	bpl.n	800f1e8 <_ZN8touchgfx7Outline6lineToEii+0x30>
 800f1c4:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 800f1c8:	ea86 0701 	eor.w	r7, r6, r1
 800f1cc:	ea85 0302 	eor.w	r3, r5, r2
 800f1d0:	433b      	orrs	r3, r7
 800f1d2:	d009      	beq.n	800f1e8 <_ZN8touchgfx7Outline6lineToEii+0x30>
 800f1d4:	4633      	mov	r3, r6
 800f1d6:	9500      	str	r5, [sp, #0]
 800f1d8:	f7ff fb3e 	bl	800e858 <_ZN8touchgfx7Outline10renderLineEiiii>
 800f1dc:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f1de:	e9c0 6505 	strd	r6, r5, [r0, #20]
 800f1e2:	f043 0301 	orr.w	r3, r3, #1
 800f1e6:	6243      	str	r3, [r0, #36]	; 0x24
 800f1e8:	b003      	add	sp, #12
 800f1ea:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f1ec <_ZN8touchgfx7Outline6moveToEii>:
 800f1ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f1ee:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f1f0:	4615      	mov	r5, r2
 800f1f2:	079a      	lsls	r2, r3, #30
 800f1f4:	4604      	mov	r4, r0
 800f1f6:	460e      	mov	r6, r1
 800f1f8:	d401      	bmi.n	800f1fe <_ZN8touchgfx7Outline6moveToEii+0x12>
 800f1fa:	f7ff faf9 	bl	800e7f0 <_ZN8touchgfx7Outline5resetEv>
 800f1fe:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800f200:	07db      	lsls	r3, r3, #31
 800f202:	d504      	bpl.n	800f20e <_ZN8touchgfx7Outline6moveToEii+0x22>
 800f204:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 800f208:	4620      	mov	r0, r4
 800f20a:	f7ff ffd5 	bl	800f1b8 <_ZN8touchgfx7Outline6lineToEii>
 800f20e:	6923      	ldr	r3, [r4, #16]
 800f210:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f214:	1170      	asrs	r0, r6, #5
 800f216:	4290      	cmp	r0, r2
 800f218:	ea4f 1165 	mov.w	r1, r5, asr #5
 800f21c:	d103      	bne.n	800f226 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 800f21e:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800f222:	4291      	cmp	r1, r2
 800f224:	d01a      	beq.n	800f25c <_ZN8touchgfx7Outline6moveToEii+0x70>
 800f226:	88df      	ldrh	r7, [r3, #6]
 800f228:	889a      	ldrh	r2, [r3, #4]
 800f22a:	433a      	orrs	r2, r7
 800f22c:	d010      	beq.n	800f250 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800f22e:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800f232:	2a00      	cmp	r2, #0
 800f234:	db0c      	blt.n	800f250 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800f236:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800f238:	42ba      	cmp	r2, r7
 800f23a:	da09      	bge.n	800f250 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800f23c:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 800f240:	42ba      	cmp	r2, r7
 800f242:	bf38      	it	cc
 800f244:	3308      	addcc	r3, #8
 800f246:	f102 0201 	add.w	r2, r2, #1
 800f24a:	bf38      	it	cc
 800f24c:	6123      	strcc	r3, [r4, #16]
 800f24e:	60a2      	str	r2, [r4, #8]
 800f250:	6923      	ldr	r3, [r4, #16]
 800f252:	2200      	movs	r2, #0
 800f254:	8018      	strh	r0, [r3, #0]
 800f256:	8059      	strh	r1, [r3, #2]
 800f258:	809a      	strh	r2, [r3, #4]
 800f25a:	80da      	strh	r2, [r3, #6]
 800f25c:	6166      	str	r6, [r4, #20]
 800f25e:	e9c4 5606 	strd	r5, r6, [r4, #24]
 800f262:	6225      	str	r5, [r4, #32]
 800f264:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800f266 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 800f266:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f26a:	b0d0      	sub	sp, #320	; 0x140
 800f26c:	466c      	mov	r4, sp
 800f26e:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 800f272:	4627      	mov	r7, r4
 800f274:	1a0d      	subs	r5, r1, r0
 800f276:	2d48      	cmp	r5, #72	; 0x48
 800f278:	f100 0308 	add.w	r3, r0, #8
 800f27c:	f340 80d5 	ble.w	800f42a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800f280:	112d      	asrs	r5, r5, #4
 800f282:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 800f286:	f9b0 9000 	ldrsh.w	r9, [r0]
 800f28a:	6816      	ldr	r6, [r2, #0]
 800f28c:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 800f290:	6006      	str	r6, [r0, #0]
 800f292:	6856      	ldr	r6, [r2, #4]
 800f294:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800f298:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800f29c:	6046      	str	r6, [r0, #4]
 800f29e:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800f2a2:	f8a2 8002 	strh.w	r8, [r2, #2]
 800f2a6:	f8a2 e004 	strh.w	lr, [r2, #4]
 800f2aa:	f8a2 c006 	strh.w	ip, [r2, #6]
 800f2ae:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800f2b2:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 800f2b6:	4565      	cmp	r5, ip
 800f2b8:	f1a1 0208 	sub.w	r2, r1, #8
 800f2bc:	db06      	blt.n	800f2cc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 800f2be:	d119      	bne.n	800f2f4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800f2c0:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 800f2c4:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 800f2c8:	42ae      	cmp	r6, r5
 800f2ca:	dd13      	ble.n	800f2f4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800f2cc:	460e      	mov	r6, r1
 800f2ce:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 800f2d2:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800f2d6:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 800f2da:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 800f2de:	601d      	str	r5, [r3, #0]
 800f2e0:	6875      	ldr	r5, [r6, #4]
 800f2e2:	605d      	str	r5, [r3, #4]
 800f2e4:	f821 9c08 	strh.w	r9, [r1, #-8]
 800f2e8:	f821 cc06 	strh.w	ip, [r1, #-6]
 800f2ec:	f821 8c04 	strh.w	r8, [r1, #-4]
 800f2f0:	f821 ec02 	strh.w	lr, [r1, #-2]
 800f2f4:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800f2f8:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 800f2fc:	42ae      	cmp	r6, r5
 800f2fe:	db06      	blt.n	800f30e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 800f300:	d116      	bne.n	800f330 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800f302:	f9b0 c000 	ldrsh.w	ip, [r0]
 800f306:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 800f30a:	45ac      	cmp	ip, r5
 800f30c:	da10      	bge.n	800f330 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800f30e:	681d      	ldr	r5, [r3, #0]
 800f310:	f9b0 8000 	ldrsh.w	r8, [r0]
 800f314:	6005      	str	r5, [r0, #0]
 800f316:	685d      	ldr	r5, [r3, #4]
 800f318:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800f31c:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800f320:	f8a0 8008 	strh.w	r8, [r0, #8]
 800f324:	6045      	str	r5, [r0, #4]
 800f326:	8146      	strh	r6, [r0, #10]
 800f328:	f8a0 e00c 	strh.w	lr, [r0, #12]
 800f32c:	f8a0 c00e 	strh.w	ip, [r0, #14]
 800f330:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800f334:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800f338:	4565      	cmp	r5, ip
 800f33a:	db06      	blt.n	800f34a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 800f33c:	d119      	bne.n	800f372 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f33e:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 800f342:	f9b0 5000 	ldrsh.w	r5, [r0]
 800f346:	42ae      	cmp	r6, r5
 800f348:	da13      	bge.n	800f372 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f34a:	460e      	mov	r6, r1
 800f34c:	f9b0 9000 	ldrsh.w	r9, [r0]
 800f350:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800f354:	6005      	str	r5, [r0, #0]
 800f356:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 800f35a:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 800f35e:	6875      	ldr	r5, [r6, #4]
 800f360:	6045      	str	r5, [r0, #4]
 800f362:	f821 9c08 	strh.w	r9, [r1, #-8]
 800f366:	f821 cc06 	strh.w	ip, [r1, #-6]
 800f36a:	f821 8c04 	strh.w	r8, [r1, #-4]
 800f36e:	f821 ec02 	strh.w	lr, [r1, #-2]
 800f372:	3308      	adds	r3, #8
 800f374:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800f378:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 800f37c:	45e6      	cmp	lr, ip
 800f37e:	dbf8      	blt.n	800f372 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f380:	d105      	bne.n	800f38e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800f382:	f9b3 6000 	ldrsh.w	r6, [r3]
 800f386:	f9b0 5000 	ldrsh.w	r5, [r0]
 800f38a:	42ae      	cmp	r6, r5
 800f38c:	dbf1      	blt.n	800f372 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f38e:	4615      	mov	r5, r2
 800f390:	3a08      	subs	r2, #8
 800f392:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 800f396:	45b4      	cmp	ip, r6
 800f398:	dbf9      	blt.n	800f38e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800f39a:	d105      	bne.n	800f3a8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 800f39c:	f9b0 8000 	ldrsh.w	r8, [r0]
 800f3a0:	f9b2 6000 	ldrsh.w	r6, [r2]
 800f3a4:	45b0      	cmp	r8, r6
 800f3a6:	dbf2      	blt.n	800f38e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800f3a8:	4293      	cmp	r3, r2
 800f3aa:	f1a5 0608 	sub.w	r6, r5, #8
 800f3ae:	d816      	bhi.n	800f3de <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 800f3b0:	f8d6 c000 	ldr.w	ip, [r6]
 800f3b4:	f9b3 a000 	ldrsh.w	sl, [r3]
 800f3b8:	f8c3 c000 	str.w	ip, [r3]
 800f3bc:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 800f3c0:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 800f3c4:	f8d6 c004 	ldr.w	ip, [r6, #4]
 800f3c8:	f8c3 c004 	str.w	ip, [r3, #4]
 800f3cc:	f825 ac08 	strh.w	sl, [r5, #-8]
 800f3d0:	f825 ec06 	strh.w	lr, [r5, #-6]
 800f3d4:	f825 9c04 	strh.w	r9, [r5, #-4]
 800f3d8:	f825 8c02 	strh.w	r8, [r5, #-2]
 800f3dc:	e7c9      	b.n	800f372 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f3de:	f8d6 e000 	ldr.w	lr, [r6]
 800f3e2:	f9b0 a000 	ldrsh.w	sl, [r0]
 800f3e6:	f8c0 e000 	str.w	lr, [r0]
 800f3ea:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 800f3ee:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 800f3f2:	f8d6 e004 	ldr.w	lr, [r6, #4]
 800f3f6:	f8c0 e004 	str.w	lr, [r0, #4]
 800f3fa:	f825 ac08 	strh.w	sl, [r5, #-8]
 800f3fe:	f825 cc06 	strh.w	ip, [r5, #-6]
 800f402:	f825 9c04 	strh.w	r9, [r5, #-4]
 800f406:	f825 8c02 	strh.w	r8, [r5, #-2]
 800f40a:	1acd      	subs	r5, r1, r3
 800f40c:	1a16      	subs	r6, r2, r0
 800f40e:	10ed      	asrs	r5, r5, #3
 800f410:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 800f414:	bfb5      	itete	lt
 800f416:	e9c4 0200 	strdlt	r0, r2, [r4]
 800f41a:	e9c4 3100 	strdge	r3, r1, [r4]
 800f41e:	460a      	movlt	r2, r1
 800f420:	4603      	movge	r3, r0
 800f422:	3408      	adds	r4, #8
 800f424:	4618      	mov	r0, r3
 800f426:	4611      	mov	r1, r2
 800f428:	e724      	b.n	800f274 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800f42a:	4299      	cmp	r1, r3
 800f42c:	d928      	bls.n	800f480 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 800f42e:	f1a3 0210 	sub.w	r2, r3, #16
 800f432:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 800f436:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 800f43a:	45ac      	cmp	ip, r5
 800f43c:	db06      	blt.n	800f44c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 800f43e:	d11d      	bne.n	800f47c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800f440:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 800f444:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 800f448:	42ae      	cmp	r6, r5
 800f44a:	da17      	bge.n	800f47c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800f44c:	4615      	mov	r5, r2
 800f44e:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 800f452:	f855 6f08 	ldr.w	r6, [r5, #8]!
 800f456:	6116      	str	r6, [r2, #16]
 800f458:	686e      	ldr	r6, [r5, #4]
 800f45a:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 800f45e:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 800f462:	f8a2 9008 	strh.w	r9, [r2, #8]
 800f466:	42a8      	cmp	r0, r5
 800f468:	6156      	str	r6, [r2, #20]
 800f46a:	f8a2 c00a 	strh.w	ip, [r2, #10]
 800f46e:	f8a2 800c 	strh.w	r8, [r2, #12]
 800f472:	f8a2 e00e 	strh.w	lr, [r2, #14]
 800f476:	f1a2 0208 	sub.w	r2, r2, #8
 800f47a:	d1da      	bne.n	800f432 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 800f47c:	3308      	adds	r3, #8
 800f47e:	e7d4      	b.n	800f42a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800f480:	42bc      	cmp	r4, r7
 800f482:	d903      	bls.n	800f48c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 800f484:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 800f488:	3c08      	subs	r4, #8
 800f48a:	e6f3      	b.n	800f274 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800f48c:	b050      	add	sp, #320	; 0x140
 800f48e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800f492 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 800f492:	b510      	push	{r4, lr}
 800f494:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f496:	07da      	lsls	r2, r3, #31
 800f498:	4604      	mov	r4, r0
 800f49a:	d507      	bpl.n	800f4ac <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 800f49c:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 800f4a0:	f7ff fe8a 	bl	800f1b8 <_ZN8touchgfx7Outline6lineToEii>
 800f4a4:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f4a6:	f023 0301 	bic.w	r3, r3, #1
 800f4aa:	6243      	str	r3, [r0, #36]	; 0x24
 800f4ac:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800f4ae:	079b      	lsls	r3, r3, #30
 800f4b0:	d521      	bpl.n	800f4f6 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 800f4b2:	6923      	ldr	r3, [r4, #16]
 800f4b4:	88d9      	ldrh	r1, [r3, #6]
 800f4b6:	889a      	ldrh	r2, [r3, #4]
 800f4b8:	430a      	orrs	r2, r1
 800f4ba:	d010      	beq.n	800f4de <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800f4bc:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800f4c0:	2a00      	cmp	r2, #0
 800f4c2:	db0c      	blt.n	800f4de <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800f4c4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800f4c6:	428a      	cmp	r2, r1
 800f4c8:	da09      	bge.n	800f4de <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800f4ca:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800f4ce:	4291      	cmp	r1, r2
 800f4d0:	bf88      	it	hi
 800f4d2:	3308      	addhi	r3, #8
 800f4d4:	f102 0201 	add.w	r2, r2, #1
 800f4d8:	bf88      	it	hi
 800f4da:	6123      	strhi	r3, [r4, #16]
 800f4dc:	60a2      	str	r2, [r4, #8]
 800f4de:	68a1      	ldr	r1, [r4, #8]
 800f4e0:	b129      	cbz	r1, 800f4ee <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800f4e2:	6863      	ldr	r3, [r4, #4]
 800f4e4:	4299      	cmp	r1, r3
 800f4e6:	d802      	bhi.n	800f4ee <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800f4e8:	68e0      	ldr	r0, [r4, #12]
 800f4ea:	f7ff febc 	bl	800f266 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 800f4ee:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800f4f0:	f023 0302 	bic.w	r3, r3, #2
 800f4f4:	6263      	str	r3, [r4, #36]	; 0x24
 800f4f6:	68e0      	ldr	r0, [r4, #12]
 800f4f8:	bd10      	pop	{r4, pc}
	...

0800f4fc <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 800f4fc:	4b02      	ldr	r3, [pc, #8]	; (800f508 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 800f4fe:	6018      	str	r0, [r3, #0]
 800f500:	4b02      	ldr	r3, [pc, #8]	; (800f50c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 800f502:	6019      	str	r1, [r3, #0]
 800f504:	4770      	bx	lr
 800f506:	bf00      	nop
 800f508:	20015490 	.word	0x20015490
 800f50c:	20015494 	.word	0x20015494

0800f510 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 800f510:	4b01      	ldr	r3, [pc, #4]	; (800f518 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 800f512:	6818      	ldr	r0, [r3, #0]
 800f514:	4770      	bx	lr
 800f516:	bf00      	nop
 800f518:	20015490 	.word	0x20015490

0800f51c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 800f51c:	4b01      	ldr	r3, [pc, #4]	; (800f524 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 800f51e:	6818      	ldr	r0, [r3, #0]
 800f520:	4770      	bx	lr
 800f522:	bf00      	nop
 800f524:	20015494 	.word	0x20015494

0800f528 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800f528:	b510      	push	{r4, lr}
 800f52a:	6803      	ldr	r3, [r0, #0]
 800f52c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f52e:	460c      	mov	r4, r1
 800f530:	4798      	blx	r3
 800f532:	1b03      	subs	r3, r0, r4
 800f534:	4258      	negs	r0, r3
 800f536:	4158      	adcs	r0, r3
 800f538:	bd10      	pop	{r4, pc}
	...

0800f53c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800f53c:	4b01      	ldr	r3, [pc, #4]	; (800f544 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800f53e:	6019      	str	r1, [r3, #0]
 800f540:	4770      	bx	lr
 800f542:	bf00      	nop
 800f544:	20015498 	.word	0x20015498

0800f548 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800f548:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f54c:	4696      	mov	lr, r2
 800f54e:	4605      	mov	r5, r0
 800f550:	4614      	mov	r4, r2
 800f552:	460e      	mov	r6, r1
 800f554:	461f      	mov	r7, r3
 800f556:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f55a:	b097      	sub	sp, #92	; 0x5c
 800f55c:	f10d 0c1c 	add.w	ip, sp, #28
 800f560:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f564:	f8de 3000 	ldr.w	r3, [lr]
 800f568:	f8cc 3000 	str.w	r3, [ip]
 800f56c:	f104 0e14 	add.w	lr, r4, #20
 800f570:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f574:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800f578:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f57c:	f8de 3000 	ldr.w	r3, [lr]
 800f580:	f8cc 3000 	str.w	r3, [ip]
 800f584:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800f588:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f58c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800f590:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f594:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800f598:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800f59c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800f5a0:	f8de 3000 	ldr.w	r3, [lr]
 800f5a4:	f8cc 3000 	str.w	r3, [ip]
 800f5a8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800f5aa:	682b      	ldr	r3, [r5, #0]
 800f5ac:	9201      	str	r2, [sp, #4]
 800f5ae:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800f5b2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800f5b4:	9200      	str	r2, [sp, #0]
 800f5b6:	f8cd 8008 	str.w	r8, [sp, #8]
 800f5ba:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 800f5be:	aa07      	add	r2, sp, #28
 800f5c0:	463b      	mov	r3, r7
 800f5c2:	4631      	mov	r1, r6
 800f5c4:	4628      	mov	r0, r5
 800f5c6:	47d8      	blx	fp
 800f5c8:	46a6      	mov	lr, r4
 800f5ca:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f5ce:	f10d 0c1c 	add.w	ip, sp, #28
 800f5d2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f5d6:	f8de 3000 	ldr.w	r3, [lr]
 800f5da:	f8cc 3000 	str.w	r3, [ip]
 800f5de:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800f5e2:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f5e6:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800f5ea:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f5ee:	343c      	adds	r4, #60	; 0x3c
 800f5f0:	f8de 3000 	ldr.w	r3, [lr]
 800f5f4:	f8cc 3000 	str.w	r3, [ip]
 800f5f8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800f5fa:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800f5fe:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f602:	6823      	ldr	r3, [r4, #0]
 800f604:	f8cc 3000 	str.w	r3, [ip]
 800f608:	682b      	ldr	r3, [r5, #0]
 800f60a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800f60e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800f610:	9201      	str	r2, [sp, #4]
 800f612:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800f614:	9200      	str	r2, [sp, #0]
 800f616:	f8cd 8008 	str.w	r8, [sp, #8]
 800f61a:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 800f61c:	aa07      	add	r2, sp, #28
 800f61e:	463b      	mov	r3, r7
 800f620:	4631      	mov	r1, r6
 800f622:	4628      	mov	r0, r5
 800f624:	47a0      	blx	r4
 800f626:	b017      	add	sp, #92	; 0x5c
 800f628:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f62c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800f62c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f630:	b08d      	sub	sp, #52	; 0x34
 800f632:	4688      	mov	r8, r1
 800f634:	9916      	ldr	r1, [sp, #88]	; 0x58
 800f636:	f8d3 c000 	ldr.w	ip, [r3]
 800f63a:	680f      	ldr	r7, [r1, #0]
 800f63c:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800f640:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800f644:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800f648:	edd3 6a07 	vldr	s13, [r3, #28]
 800f64c:	9918      	ldr	r1, [sp, #96]	; 0x60
 800f64e:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800f652:	f9b1 9000 	ldrsh.w	r9, [r1]
 800f656:	f9ba 1000 	ldrsh.w	r1, [sl]
 800f65a:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800f65e:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800f662:	eba7 070c 	sub.w	r7, r7, ip
 800f666:	42bc      	cmp	r4, r7
 800f668:	bfa8      	it	ge
 800f66a:	463c      	movge	r4, r7
 800f66c:	ee07 4a90 	vmov	s15, r4
 800f670:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800f674:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800f678:	ee25 4a04 	vmul.f32	s8, s10, s8
 800f67c:	ee65 4a24 	vmul.f32	s9, s10, s9
 800f680:	ee25 5a27 	vmul.f32	s10, s10, s15
 800f684:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800f688:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800f68c:	eb09 0e0c 	add.w	lr, r9, ip
 800f690:	4571      	cmp	r1, lr
 800f692:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800f696:	ee32 1a05 	vadd.f32	s2, s4, s10
 800f69a:	ee36 0a84 	vadd.f32	s0, s13, s8
 800f69e:	ee61 1a87 	vmul.f32	s3, s3, s14
 800f6a2:	ee22 2a07 	vmul.f32	s4, s4, s14
 800f6a6:	f340 808d 	ble.w	800f7c4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800f6aa:	eba1 060e 	sub.w	r6, r1, lr
 800f6ae:	fb96 f5f4 	sdiv	r5, r6, r4
 800f6b2:	ee07 5a10 	vmov	s14, r5
 800f6b6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f6ba:	2d00      	cmp	r5, #0
 800f6bc:	fb04 6615 	mls	r6, r4, r5, r6
 800f6c0:	eea7 0a04 	vfma.f32	s0, s14, s8
 800f6c4:	eee7 0a24 	vfma.f32	s1, s14, s9
 800f6c8:	eea7 1a05 	vfma.f32	s2, s14, s10
 800f6cc:	dd13      	ble.n	800f6f6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800f6ce:	ee70 6a44 	vsub.f32	s13, s0, s8
 800f6d2:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800f6d6:	eef5 6a40 	vcmp.f32	s13, #0.0
 800f6da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f6de:	bf18      	it	ne
 800f6e0:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800f6e4:	ee31 2a45 	vsub.f32	s4, s2, s10
 800f6e8:	bf08      	it	eq
 800f6ea:	eeb0 7a67 	vmoveq.f32	s14, s15
 800f6ee:	ee61 1a87 	vmul.f32	s3, s3, s14
 800f6f2:	ee22 2a07 	vmul.f32	s4, s4, s14
 800f6f6:	fb05 f204 	mul.w	r2, r5, r4
 800f6fa:	1abf      	subs	r7, r7, r2
 800f6fc:	4494      	add	ip, r2
 800f6fe:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800f702:	4411      	add	r1, r2
 800f704:	eb09 020c 	add.w	r2, r9, ip
 800f708:	443a      	add	r2, r7
 800f70a:	b209      	sxth	r1, r1
 800f70c:	428a      	cmp	r2, r1
 800f70e:	bfc4      	itt	gt
 800f710:	eba1 0209 	subgt.w	r2, r1, r9
 800f714:	eba2 070c 	subgt.w	r7, r2, ip
 800f718:	2f00      	cmp	r7, #0
 800f71a:	dd50      	ble.n	800f7be <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800f71c:	fb97 f1f4 	sdiv	r1, r7, r4
 800f720:	fb04 7211 	mls	r2, r4, r1, r7
 800f724:	b90a      	cbnz	r2, 800f72a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800f726:	3901      	subs	r1, #1
 800f728:	4622      	mov	r2, r4
 800f72a:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800f72e:	6840      	ldr	r0, [r0, #4]
 800f730:	900b      	str	r0, [sp, #44]	; 0x2c
 800f732:	f8d0 a000 	ldr.w	sl, [r0]
 800f736:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800f738:	9008      	str	r0, [sp, #32]
 800f73a:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800f73e:	9818      	ldr	r0, [sp, #96]	; 0x60
 800f740:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800f744:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800f748:	695b      	ldr	r3, [r3, #20]
 800f74a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800f74c:	445b      	add	r3, fp
 800f74e:	eef0 6a42 	vmov.f32	s13, s4
 800f752:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800f756:	ee21 3a23 	vmul.f32	s6, s2, s7
 800f75a:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800f75e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f762:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800f766:	9307      	str	r3, [sp, #28]
 800f768:	ee17 7a90 	vmov	r7, s15
 800f76c:	ee73 7a42 	vsub.f32	s15, s6, s4
 800f770:	eeb0 7a61 	vmov.f32	s14, s3
 800f774:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800f778:	ee16 3a90 	vmov	r3, s13
 800f77c:	fb97 f7f4 	sdiv	r7, r7, r4
 800f780:	ee17 ca90 	vmov	ip, s15
 800f784:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800f788:	fb9c fcf4 	sdiv	ip, ip, r4
 800f78c:	fb0c 3306 	mla	r3, ip, r6, r3
 800f790:	9302      	str	r3, [sp, #8]
 800f792:	ee17 3a10 	vmov	r3, s14
 800f796:	44b6      	add	lr, r6
 800f798:	fb04 e505 	mla	r5, r4, r5, lr
 800f79c:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800f7a0:	fb07 3706 	mla	r7, r7, r6, r3
 800f7a4:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800f7a8:	e9cd 4700 	strd	r4, r7, [sp]
 800f7ac:	2900      	cmp	r1, #0
 800f7ae:	bfcc      	ite	gt
 800f7b0:	46a1      	movgt	r9, r4
 800f7b2:	4691      	movle	r9, r2
 800f7b4:	eba9 0306 	sub.w	r3, r9, r6
 800f7b8:	f8da 4008 	ldr.w	r4, [sl, #8]
 800f7bc:	47a0      	blx	r4
 800f7be:	b00d      	add	sp, #52	; 0x34
 800f7c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f7c4:	2500      	movs	r5, #0
 800f7c6:	462e      	mov	r6, r5
 800f7c8:	e799      	b.n	800f6fe <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800f7cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800f7cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f7d0:	b0db      	sub	sp, #364	; 0x16c
 800f7d2:	461d      	mov	r5, r3
 800f7d4:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800f7d8:	930a      	str	r3, [sp, #40]	; 0x28
 800f7da:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800f7de:	930b      	str	r3, [sp, #44]	; 0x2c
 800f7e0:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800f7e4:	9310      	str	r3, [sp, #64]	; 0x40
 800f7e6:	6803      	ldr	r3, [r0, #0]
 800f7e8:	910f      	str	r1, [sp, #60]	; 0x3c
 800f7ea:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 800f7ec:	9009      	str	r0, [sp, #36]	; 0x24
 800f7ee:	4614      	mov	r4, r2
 800f7f0:	4629      	mov	r1, r5
 800f7f2:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800f7f6:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800f7fa:	47b8      	blx	r7
 800f7fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f7fe:	6058      	str	r0, [r3, #4]
 800f800:	2800      	cmp	r0, #0
 800f802:	f000 83a1 	beq.w	800ff48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f806:	682b      	ldr	r3, [r5, #0]
 800f808:	9314      	str	r3, [sp, #80]	; 0x50
 800f80a:	686b      	ldr	r3, [r5, #4]
 800f80c:	9315      	str	r3, [sp, #84]	; 0x54
 800f80e:	4bc4      	ldr	r3, [pc, #784]	; (800fb20 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800f810:	ed94 7a02 	vldr	s14, [r4, #8]
 800f814:	7819      	ldrb	r1, [r3, #0]
 800f816:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800f81a:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800f81e:	2900      	cmp	r1, #0
 800f820:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800f824:	bf16      	itet	ne
 800f826:	4619      	movne	r1, r3
 800f828:	4611      	moveq	r1, r2
 800f82a:	4613      	movne	r3, r2
 800f82c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f830:	9116      	str	r1, [sp, #88]	; 0x58
 800f832:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800f836:	f240 8387 	bls.w	800ff48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f83a:	ed94 7a07 	vldr	s14, [r4, #28]
 800f83e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800f842:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f846:	f240 837f 	bls.w	800ff48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f84a:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800f84e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800f852:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f856:	f240 8377 	bls.w	800ff48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f85a:	6822      	ldr	r2, [r4, #0]
 800f85c:	4bb1      	ldr	r3, [pc, #708]	; (800fb24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800f85e:	429a      	cmp	r2, r3
 800f860:	f2c0 8372 	blt.w	800ff48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f864:	49b0      	ldr	r1, [pc, #704]	; (800fb28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800f866:	6963      	ldr	r3, [r4, #20]
 800f868:	428a      	cmp	r2, r1
 800f86a:	f300 836d 	bgt.w	800ff48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f86e:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800f872:	48ae      	ldr	r0, [pc, #696]	; (800fb2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800f874:	33ff      	adds	r3, #255	; 0xff
 800f876:	4283      	cmp	r3, r0
 800f878:	f200 8366 	bhi.w	800ff48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f87c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800f87e:	4dac      	ldr	r5, [pc, #688]	; (800fb30 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800f880:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800f884:	33ff      	adds	r3, #255	; 0xff
 800f886:	42ab      	cmp	r3, r5
 800f888:	f200 835e 	bhi.w	800ff48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f88c:	6862      	ldr	r2, [r4, #4]
 800f88e:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800f892:	33ff      	adds	r3, #255	; 0xff
 800f894:	4283      	cmp	r3, r0
 800f896:	f200 8357 	bhi.w	800ff48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f89a:	69a1      	ldr	r1, [r4, #24]
 800f89c:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800f8a0:	33ff      	adds	r3, #255	; 0xff
 800f8a2:	4283      	cmp	r3, r0
 800f8a4:	f200 8350 	bhi.w	800ff48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f8a8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f8aa:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800f8ae:	30ff      	adds	r0, #255	; 0xff
 800f8b0:	42a8      	cmp	r0, r5
 800f8b2:	f200 8349 	bhi.w	800ff48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f8b6:	428a      	cmp	r2, r1
 800f8b8:	f280 8110 	bge.w	800fadc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800f8bc:	429a      	cmp	r2, r3
 800f8be:	f300 8119 	bgt.w	800faf4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800f8c2:	4299      	cmp	r1, r3
 800f8c4:	f280 811d 	bge.w	800fb02 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800f8c8:	2502      	movs	r5, #2
 800f8ca:	2701      	movs	r7, #1
 800f8cc:	46a9      	mov	r9, r5
 800f8ce:	46b8      	mov	r8, r7
 800f8d0:	f04f 0a00 	mov.w	sl, #0
 800f8d4:	4621      	mov	r1, r4
 800f8d6:	a849      	add	r0, sp, #292	; 0x124
 800f8d8:	f003 fcfe 	bl	80132d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800f8dc:	4622      	mov	r2, r4
 800f8de:	4653      	mov	r3, sl
 800f8e0:	a949      	add	r1, sp, #292	; 0x124
 800f8e2:	f8cd 9000 	str.w	r9, [sp]
 800f8e6:	a819      	add	r0, sp, #100	; 0x64
 800f8e8:	f003 fe26 	bl	8013538 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800f8ec:	4622      	mov	r2, r4
 800f8ee:	4653      	mov	r3, sl
 800f8f0:	a949      	add	r1, sp, #292	; 0x124
 800f8f2:	f8cd 8000 	str.w	r8, [sp]
 800f8f6:	a829      	add	r0, sp, #164	; 0xa4
 800f8f8:	f003 fe1e 	bl	8013538 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800f8fc:	4643      	mov	r3, r8
 800f8fe:	4622      	mov	r2, r4
 800f900:	a949      	add	r1, sp, #292	; 0x124
 800f902:	f8cd 9000 	str.w	r9, [sp]
 800f906:	a839      	add	r0, sp, #228	; 0xe4
 800f908:	f003 fe16 	bl	8013538 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800f90c:	42af      	cmp	r7, r5
 800f90e:	bfb5      	itete	lt
 800f910:	2300      	movlt	r3, #0
 800f912:	2301      	movge	r3, #1
 800f914:	930e      	strlt	r3, [sp, #56]	; 0x38
 800f916:	930e      	strge	r3, [sp, #56]	; 0x38
 800f918:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800f91a:	e893 0003 	ldmia.w	r3, {r0, r1}
 800f91e:	af12      	add	r7, sp, #72	; 0x48
 800f920:	bfb9      	ittee	lt
 800f922:	ad29      	addlt	r5, sp, #164	; 0xa4
 800f924:	ac19      	addlt	r4, sp, #100	; 0x64
 800f926:	ad19      	addge	r5, sp, #100	; 0x64
 800f928:	ac29      	addge	r4, sp, #164	; 0xa4
 800f92a:	e887 0003 	stmia.w	r7, {r0, r1}
 800f92e:	b928      	cbnz	r0, 800f93c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800f930:	4b80      	ldr	r3, [pc, #512]	; (800fb34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800f932:	6818      	ldr	r0, [r3, #0]
 800f934:	6803      	ldr	r3, [r0, #0]
 800f936:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f938:	4798      	blx	r3
 800f93a:	6038      	str	r0, [r7, #0]
 800f93c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800f93e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800f942:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800f946:	930c      	str	r3, [sp, #48]	; 0x30
 800f948:	990c      	ldr	r1, [sp, #48]	; 0x30
 800f94a:	6963      	ldr	r3, [r4, #20]
 800f94c:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800f94e:	440b      	add	r3, r1
 800f950:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800f954:	4408      	add	r0, r1
 800f956:	b200      	sxth	r0, r0
 800f958:	4283      	cmp	r3, r0
 800f95a:	900d      	str	r0, [sp, #52]	; 0x34
 800f95c:	f280 80dd 	bge.w	800fb1a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800f960:	428b      	cmp	r3, r1
 800f962:	da08      	bge.n	800f976 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800f964:	2a00      	cmp	r2, #0
 800f966:	dd06      	ble.n	800f976 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800f968:	1acb      	subs	r3, r1, r3
 800f96a:	429a      	cmp	r2, r3
 800f96c:	f2c0 80e4 	blt.w	800fb38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800f970:	2b00      	cmp	r3, #0
 800f972:	f300 80e2 	bgt.w	800fb3a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800f976:	6967      	ldr	r7, [r4, #20]
 800f978:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f97a:	443b      	add	r3, r7
 800f97c:	461f      	mov	r7, r3
 800f97e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f980:	1bdf      	subs	r7, r3, r7
 800f982:	4297      	cmp	r7, r2
 800f984:	bfa8      	it	ge
 800f986:	4617      	movge	r7, r2
 800f988:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800f98c:	2f00      	cmp	r7, #0
 800f98e:	f340 8166 	ble.w	800fc5e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800f992:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800f994:	6829      	ldr	r1, [r5, #0]
 800f996:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f99a:	f9bb 3000 	ldrsh.w	r3, [fp]
 800f99e:	6820      	ldr	r0, [r4, #0]
 800f9a0:	4411      	add	r1, r2
 800f9a2:	4299      	cmp	r1, r3
 800f9a4:	dd1a      	ble.n	800f9dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800f9a6:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800f9aa:	440b      	add	r3, r1
 800f9ac:	4402      	add	r2, r0
 800f9ae:	b21b      	sxth	r3, r3
 800f9b0:	429a      	cmp	r2, r3
 800f9b2:	dc13      	bgt.n	800f9dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800f9b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f9b6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800f9b8:	681b      	ldr	r3, [r3, #0]
 800f9ba:	9206      	str	r2, [sp, #24]
 800f9bc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800f9be:	9205      	str	r2, [sp, #20]
 800f9c0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800f9c2:	9500      	str	r5, [sp, #0]
 800f9c4:	e9cd b203 	strd	fp, r2, [sp, #12]
 800f9c8:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800f9ca:	9809      	ldr	r0, [sp, #36]	; 0x24
 800f9cc:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800f9d0:	a912      	add	r1, sp, #72	; 0x48
 800f9d2:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800f9d6:	aa49      	add	r2, sp, #292	; 0x124
 800f9d8:	4623      	mov	r3, r4
 800f9da:	47c8      	blx	r9
 800f9dc:	e9d4 2300 	ldrd	r2, r3, [r4]
 800f9e0:	441a      	add	r2, r3
 800f9e2:	6963      	ldr	r3, [r4, #20]
 800f9e4:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800f9e8:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800f9ec:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800f9f0:	68a1      	ldr	r1, [r4, #8]
 800f9f2:	ed94 6a08 	vldr	s12, [r4, #32]
 800f9f6:	6022      	str	r2, [r4, #0]
 800f9f8:	3301      	adds	r3, #1
 800f9fa:	6163      	str	r3, [r4, #20]
 800f9fc:	69a3      	ldr	r3, [r4, #24]
 800f9fe:	ee37 7a27 	vadd.f32	s14, s14, s15
 800fa02:	3b01      	subs	r3, #1
 800fa04:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800fa08:	61a3      	str	r3, [r4, #24]
 800fa0a:	6923      	ldr	r3, [r4, #16]
 800fa0c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800fa10:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fa14:	edd4 6a07 	vldr	s13, [r4, #28]
 800fa18:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800fa1c:	440b      	add	r3, r1
 800fa1e:	68e1      	ldr	r1, [r4, #12]
 800fa20:	6123      	str	r3, [r4, #16]
 800fa22:	ee76 6a86 	vadd.f32	s13, s13, s12
 800fa26:	428b      	cmp	r3, r1
 800fa28:	edc4 6a07 	vstr	s13, [r4, #28]
 800fa2c:	db15      	blt.n	800fa5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800fa2e:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800fa32:	ee76 6a26 	vadd.f32	s13, s12, s13
 800fa36:	3201      	adds	r2, #1
 800fa38:	edc4 6a07 	vstr	s13, [r4, #28]
 800fa3c:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800fa40:	6022      	str	r2, [r4, #0]
 800fa42:	ee36 7a87 	vadd.f32	s14, s13, s14
 800fa46:	1a5b      	subs	r3, r3, r1
 800fa48:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800fa4c:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800fa50:	6123      	str	r3, [r4, #16]
 800fa52:	ee77 7a27 	vadd.f32	s15, s14, s15
 800fa56:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800fa5a:	e9d5 2300 	ldrd	r2, r3, [r5]
 800fa5e:	441a      	add	r2, r3
 800fa60:	696b      	ldr	r3, [r5, #20]
 800fa62:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800fa66:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800fa6a:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800fa6e:	68a9      	ldr	r1, [r5, #8]
 800fa70:	ed95 6a08 	vldr	s12, [r5, #32]
 800fa74:	602a      	str	r2, [r5, #0]
 800fa76:	3301      	adds	r3, #1
 800fa78:	616b      	str	r3, [r5, #20]
 800fa7a:	69ab      	ldr	r3, [r5, #24]
 800fa7c:	ee37 7a27 	vadd.f32	s14, s14, s15
 800fa80:	3b01      	subs	r3, #1
 800fa82:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800fa86:	61ab      	str	r3, [r5, #24]
 800fa88:	692b      	ldr	r3, [r5, #16]
 800fa8a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800fa8e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fa92:	edd5 6a07 	vldr	s13, [r5, #28]
 800fa96:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800fa9a:	440b      	add	r3, r1
 800fa9c:	68e9      	ldr	r1, [r5, #12]
 800fa9e:	612b      	str	r3, [r5, #16]
 800faa0:	ee76 6a86 	vadd.f32	s13, s13, s12
 800faa4:	428b      	cmp	r3, r1
 800faa6:	edc5 6a07 	vstr	s13, [r5, #28]
 800faaa:	db15      	blt.n	800fad8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800faac:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800fab0:	ee76 6a26 	vadd.f32	s13, s12, s13
 800fab4:	3201      	adds	r2, #1
 800fab6:	edc5 6a07 	vstr	s13, [r5, #28]
 800faba:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800fabe:	602a      	str	r2, [r5, #0]
 800fac0:	ee36 7a87 	vadd.f32	s14, s13, s14
 800fac4:	1a5b      	subs	r3, r3, r1
 800fac6:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800faca:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800face:	612b      	str	r3, [r5, #16]
 800fad0:	ee77 7a27 	vadd.f32	s15, s14, s15
 800fad4:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800fad8:	3f01      	subs	r7, #1
 800fada:	e757      	b.n	800f98c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800fadc:	4299      	cmp	r1, r3
 800fade:	dc13      	bgt.n	800fb08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800fae0:	429a      	cmp	r2, r3
 800fae2:	da14      	bge.n	800fb0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800fae4:	2502      	movs	r5, #2
 800fae6:	2703      	movs	r7, #3
 800fae8:	46a9      	mov	r9, r5
 800faea:	f04f 0800 	mov.w	r8, #0
 800faee:	f04f 0a01 	mov.w	sl, #1
 800faf2:	e6ef      	b.n	800f8d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800faf4:	2501      	movs	r5, #1
 800faf6:	2700      	movs	r7, #0
 800faf8:	46a9      	mov	r9, r5
 800fafa:	46b8      	mov	r8, r7
 800fafc:	f04f 0a02 	mov.w	sl, #2
 800fb00:	e6e8      	b.n	800f8d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800fb02:	2501      	movs	r5, #1
 800fb04:	2702      	movs	r7, #2
 800fb06:	e6e1      	b.n	800f8cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800fb08:	2500      	movs	r5, #0
 800fb0a:	2701      	movs	r7, #1
 800fb0c:	e7f4      	b.n	800faf8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800fb0e:	2702      	movs	r7, #2
 800fb10:	2503      	movs	r5, #3
 800fb12:	f04f 0900 	mov.w	r9, #0
 800fb16:	46b8      	mov	r8, r7
 800fb18:	e7e9      	b.n	800faee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800fb1a:	4613      	mov	r3, r2
 800fb1c:	e728      	b.n	800f970 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800fb1e:	bf00      	nop
 800fb20:	20015480 	.word	0x20015480
 800fb24:	fffd8f01 	.word	0xfffd8f01
 800fb28:	00027100 	.word	0x00027100
 800fb2c:	0004e1ff 	.word	0x0004e1ff
 800fb30:	0004e1fe 	.word	0x0004e1fe
 800fb34:	20015488 	.word	0x20015488
 800fb38:	4613      	mov	r3, r2
 800fb3a:	992b      	ldr	r1, [sp, #172]	; 0xac
 800fb3c:	9111      	str	r1, [sp, #68]	; 0x44
 800fb3e:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800fb42:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800fb46:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800fb48:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800fb4c:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800fb50:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800fb54:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800fb58:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800fb5c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800fb60:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800fb64:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800fb68:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800fb6c:	469e      	mov	lr, r3
 800fb6e:	469c      	mov	ip, r3
 800fb70:	f04f 0900 	mov.w	r9, #0
 800fb74:	f1bc 0f00 	cmp.w	ip, #0
 800fb78:	d147      	bne.n	800fc0a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800fb7a:	eb03 0c07 	add.w	ip, r3, r7
 800fb7e:	1ad7      	subs	r7, r2, r3
 800fb80:	f1b9 0f00 	cmp.w	r9, #0
 800fb84:	d009      	beq.n	800fb9a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800fb86:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800fb8a:	9029      	str	r0, [sp, #164]	; 0xa4
 800fb8c:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800fb90:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800fb94:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800fb98:	912d      	str	r1, [sp, #180]	; 0xb4
 800fb9a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800fb9c:	9111      	str	r1, [sp, #68]	; 0x44
 800fb9e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800fba2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800fba6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800fbaa:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800fbae:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800fbb2:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800fbb6:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800fbba:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800fbbe:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800fbc2:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800fbc6:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800fbca:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800fbce:	f04f 0800 	mov.w	r8, #0
 800fbd2:	f1be 0f00 	cmp.w	lr, #0
 800fbd6:	d031      	beq.n	800fc3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800fbd8:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800fbda:	4431      	add	r1, r6
 800fbdc:	4549      	cmp	r1, r9
 800fbde:	4450      	add	r0, sl
 800fbe0:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800fbe4:	ee37 7a04 	vadd.f32	s14, s14, s8
 800fbe8:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800fbec:	db08      	blt.n	800fc00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800fbee:	ee77 7a85 	vadd.f32	s15, s15, s10
 800fbf2:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800fbf6:	ee37 7a06 	vadd.f32	s14, s14, s12
 800fbfa:	3001      	adds	r0, #1
 800fbfc:	eba1 0109 	sub.w	r1, r1, r9
 800fc00:	f10e 3eff 	add.w	lr, lr, #4294967295
 800fc04:	f04f 0801 	mov.w	r8, #1
 800fc08:	e7e3      	b.n	800fbd2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800fc0a:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800fc0c:	4431      	add	r1, r6
 800fc0e:	4541      	cmp	r1, r8
 800fc10:	4450      	add	r0, sl
 800fc12:	ee37 7a24 	vadd.f32	s14, s14, s9
 800fc16:	ee77 7a84 	vadd.f32	s15, s15, s8
 800fc1a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800fc1e:	db08      	blt.n	800fc32 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800fc20:	ee76 6a85 	vadd.f32	s13, s13, s10
 800fc24:	ee37 7a25 	vadd.f32	s14, s14, s11
 800fc28:	ee77 7a86 	vadd.f32	s15, s15, s12
 800fc2c:	3001      	adds	r0, #1
 800fc2e:	eba1 0108 	sub.w	r1, r1, r8
 800fc32:	f10c 3cff 	add.w	ip, ip, #4294967295
 800fc36:	f04f 0901 	mov.w	r9, #1
 800fc3a:	e79b      	b.n	800fb74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800fc3c:	449c      	add	ip, r3
 800fc3e:	1aff      	subs	r7, r7, r3
 800fc40:	f1b8 0f00 	cmp.w	r8, #0
 800fc44:	d009      	beq.n	800fc5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800fc46:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800fc4a:	9019      	str	r0, [sp, #100]	; 0x64
 800fc4c:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800fc50:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800fc54:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800fc58:	911d      	str	r1, [sp, #116]	; 0x74
 800fc5a:	1ad2      	subs	r2, r2, r3
 800fc5c:	e68b      	b.n	800f976 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800fc5e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fc60:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800fc62:	2b00      	cmp	r3, #0
 800fc64:	f000 80d1 	beq.w	800fe0a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800fc68:	ad19      	add	r5, sp, #100	; 0x64
 800fc6a:	ac39      	add	r4, sp, #228	; 0xe4
 800fc6c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800fc6e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800fc72:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800fc76:	930c      	str	r3, [sp, #48]	; 0x30
 800fc78:	990c      	ldr	r1, [sp, #48]	; 0x30
 800fc7a:	6963      	ldr	r3, [r4, #20]
 800fc7c:	440b      	add	r3, r1
 800fc7e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800fc82:	4408      	add	r0, r1
 800fc84:	b200      	sxth	r0, r0
 800fc86:	4283      	cmp	r3, r0
 800fc88:	900d      	str	r0, [sp, #52]	; 0x34
 800fc8a:	f280 80c1 	bge.w	800fe10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800fc8e:	428b      	cmp	r3, r1
 800fc90:	da08      	bge.n	800fca4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800fc92:	2a00      	cmp	r2, #0
 800fc94:	dd06      	ble.n	800fca4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800fc96:	1acb      	subs	r3, r1, r3
 800fc98:	429a      	cmp	r2, r3
 800fc9a:	f2c0 80bb 	blt.w	800fe14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800fc9e:	2b00      	cmp	r3, #0
 800fca0:	f300 80b9 	bgt.w	800fe16 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800fca4:	6967      	ldr	r7, [r4, #20]
 800fca6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800fca8:	443b      	add	r3, r7
 800fcaa:	461f      	mov	r7, r3
 800fcac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800fcae:	1bdf      	subs	r7, r3, r7
 800fcb0:	4297      	cmp	r7, r2
 800fcb2:	bfa8      	it	ge
 800fcb4:	4617      	movge	r7, r2
 800fcb6:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800fcba:	2f00      	cmp	r7, #0
 800fcbc:	f340 813c 	ble.w	800ff38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800fcc0:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800fcc2:	6829      	ldr	r1, [r5, #0]
 800fcc4:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fcc8:	f9bb 3000 	ldrsh.w	r3, [fp]
 800fccc:	6820      	ldr	r0, [r4, #0]
 800fcce:	4411      	add	r1, r2
 800fcd0:	4299      	cmp	r1, r3
 800fcd2:	dd1a      	ble.n	800fd0a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800fcd4:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800fcd8:	440b      	add	r3, r1
 800fcda:	4402      	add	r2, r0
 800fcdc:	b21b      	sxth	r3, r3
 800fcde:	429a      	cmp	r2, r3
 800fce0:	dc13      	bgt.n	800fd0a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800fce2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fce4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800fce6:	681b      	ldr	r3, [r3, #0]
 800fce8:	9206      	str	r2, [sp, #24]
 800fcea:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800fcec:	9205      	str	r2, [sp, #20]
 800fcee:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800fcf0:	9500      	str	r5, [sp, #0]
 800fcf2:	e9cd b203 	strd	fp, r2, [sp, #12]
 800fcf6:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800fcf8:	9809      	ldr	r0, [sp, #36]	; 0x24
 800fcfa:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800fcfe:	a912      	add	r1, sp, #72	; 0x48
 800fd00:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800fd04:	aa49      	add	r2, sp, #292	; 0x124
 800fd06:	4623      	mov	r3, r4
 800fd08:	47c8      	blx	r9
 800fd0a:	e9d4 2300 	ldrd	r2, r3, [r4]
 800fd0e:	441a      	add	r2, r3
 800fd10:	6963      	ldr	r3, [r4, #20]
 800fd12:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800fd16:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800fd1a:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800fd1e:	68a1      	ldr	r1, [r4, #8]
 800fd20:	ed94 6a08 	vldr	s12, [r4, #32]
 800fd24:	6022      	str	r2, [r4, #0]
 800fd26:	3301      	adds	r3, #1
 800fd28:	6163      	str	r3, [r4, #20]
 800fd2a:	69a3      	ldr	r3, [r4, #24]
 800fd2c:	ee37 7a27 	vadd.f32	s14, s14, s15
 800fd30:	3b01      	subs	r3, #1
 800fd32:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800fd36:	61a3      	str	r3, [r4, #24]
 800fd38:	6923      	ldr	r3, [r4, #16]
 800fd3a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800fd3e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fd42:	edd4 6a07 	vldr	s13, [r4, #28]
 800fd46:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800fd4a:	440b      	add	r3, r1
 800fd4c:	68e1      	ldr	r1, [r4, #12]
 800fd4e:	6123      	str	r3, [r4, #16]
 800fd50:	ee76 6a86 	vadd.f32	s13, s13, s12
 800fd54:	428b      	cmp	r3, r1
 800fd56:	edc4 6a07 	vstr	s13, [r4, #28]
 800fd5a:	db15      	blt.n	800fd88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800fd5c:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800fd60:	ee76 6a26 	vadd.f32	s13, s12, s13
 800fd64:	3201      	adds	r2, #1
 800fd66:	edc4 6a07 	vstr	s13, [r4, #28]
 800fd6a:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800fd6e:	6022      	str	r2, [r4, #0]
 800fd70:	ee36 7a87 	vadd.f32	s14, s13, s14
 800fd74:	1a5b      	subs	r3, r3, r1
 800fd76:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800fd7a:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800fd7e:	6123      	str	r3, [r4, #16]
 800fd80:	ee77 7a27 	vadd.f32	s15, s14, s15
 800fd84:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800fd88:	e9d5 2300 	ldrd	r2, r3, [r5]
 800fd8c:	441a      	add	r2, r3
 800fd8e:	696b      	ldr	r3, [r5, #20]
 800fd90:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800fd94:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800fd98:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800fd9c:	68a9      	ldr	r1, [r5, #8]
 800fd9e:	ed95 6a08 	vldr	s12, [r5, #32]
 800fda2:	602a      	str	r2, [r5, #0]
 800fda4:	3301      	adds	r3, #1
 800fda6:	616b      	str	r3, [r5, #20]
 800fda8:	69ab      	ldr	r3, [r5, #24]
 800fdaa:	ee37 7a27 	vadd.f32	s14, s14, s15
 800fdae:	3b01      	subs	r3, #1
 800fdb0:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800fdb4:	61ab      	str	r3, [r5, #24]
 800fdb6:	692b      	ldr	r3, [r5, #16]
 800fdb8:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800fdbc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fdc0:	edd5 6a07 	vldr	s13, [r5, #28]
 800fdc4:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800fdc8:	440b      	add	r3, r1
 800fdca:	68e9      	ldr	r1, [r5, #12]
 800fdcc:	612b      	str	r3, [r5, #16]
 800fdce:	ee76 6a86 	vadd.f32	s13, s13, s12
 800fdd2:	428b      	cmp	r3, r1
 800fdd4:	edc5 6a07 	vstr	s13, [r5, #28]
 800fdd8:	db15      	blt.n	800fe06 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800fdda:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800fdde:	ee76 6a26 	vadd.f32	s13, s12, s13
 800fde2:	3201      	adds	r2, #1
 800fde4:	edc5 6a07 	vstr	s13, [r5, #28]
 800fde8:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800fdec:	602a      	str	r2, [r5, #0]
 800fdee:	ee36 7a87 	vadd.f32	s14, s13, s14
 800fdf2:	1a5b      	subs	r3, r3, r1
 800fdf4:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800fdf8:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800fdfc:	612b      	str	r3, [r5, #16]
 800fdfe:	ee77 7a27 	vadd.f32	s15, s14, s15
 800fe02:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800fe06:	3f01      	subs	r7, #1
 800fe08:	e757      	b.n	800fcba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800fe0a:	ad39      	add	r5, sp, #228	; 0xe4
 800fe0c:	ac19      	add	r4, sp, #100	; 0x64
 800fe0e:	e72d      	b.n	800fc6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800fe10:	4613      	mov	r3, r2
 800fe12:	e744      	b.n	800fc9e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800fe14:	4613      	mov	r3, r2
 800fe16:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 800fe1a:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 800fe1c:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 800fe20:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 800fe24:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 800fe28:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 800fe2c:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 800fe30:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 800fe34:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 800fe38:	993d      	ldr	r1, [sp, #244]	; 0xf4
 800fe3a:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 800fe3e:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 800fe42:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 800fe46:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 800fe4a:	960e      	str	r6, [sp, #56]	; 0x38
 800fe4c:	469e      	mov	lr, r3
 800fe4e:	461f      	mov	r7, r3
 800fe50:	f04f 0900 	mov.w	r9, #0
 800fe54:	2f00      	cmp	r7, #0
 800fe56:	d146      	bne.n	800fee6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800fe58:	449c      	add	ip, r3
 800fe5a:	1ad7      	subs	r7, r2, r3
 800fe5c:	f1b9 0f00 	cmp.w	r9, #0
 800fe60:	d009      	beq.n	800fe76 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800fe62:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 800fe66:	9039      	str	r0, [sp, #228]	; 0xe4
 800fe68:	913d      	str	r1, [sp, #244]	; 0xf4
 800fe6a:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 800fe6e:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 800fe72:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 800fe76:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800fe78:	910e      	str	r1, [sp, #56]	; 0x38
 800fe7a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800fe7e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800fe82:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800fe86:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800fe8a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800fe8e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800fe92:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800fe96:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800fe9a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800fe9e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800fea2:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800fea6:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800feaa:	f04f 0800 	mov.w	r8, #0
 800feae:	f1be 0f00 	cmp.w	lr, #0
 800feb2:	d030      	beq.n	800ff16 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800feb4:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800feb6:	4431      	add	r1, r6
 800feb8:	4549      	cmp	r1, r9
 800feba:	4450      	add	r0, sl
 800febc:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800fec0:	ee37 7a04 	vadd.f32	s14, s14, s8
 800fec4:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800fec8:	db08      	blt.n	800fedc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800feca:	ee77 7a85 	vadd.f32	s15, s15, s10
 800fece:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800fed2:	ee37 7a06 	vadd.f32	s14, s14, s12
 800fed6:	3001      	adds	r0, #1
 800fed8:	eba1 0109 	sub.w	r1, r1, r9
 800fedc:	f10e 3eff 	add.w	lr, lr, #4294967295
 800fee0:	f04f 0801 	mov.w	r8, #1
 800fee4:	e7e3      	b.n	800feae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800fee6:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800fee8:	4431      	add	r1, r6
 800feea:	4541      	cmp	r1, r8
 800feec:	4450      	add	r0, sl
 800feee:	ee37 7a24 	vadd.f32	s14, s14, s9
 800fef2:	ee77 7a84 	vadd.f32	s15, s15, s8
 800fef6:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800fefa:	db08      	blt.n	800ff0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800fefc:	ee76 6a85 	vadd.f32	s13, s13, s10
 800ff00:	ee37 7a25 	vadd.f32	s14, s14, s11
 800ff04:	ee77 7a86 	vadd.f32	s15, s15, s12
 800ff08:	3001      	adds	r0, #1
 800ff0a:	eba1 0108 	sub.w	r1, r1, r8
 800ff0e:	3f01      	subs	r7, #1
 800ff10:	f04f 0901 	mov.w	r9, #1
 800ff14:	e79e      	b.n	800fe54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800ff16:	449c      	add	ip, r3
 800ff18:	1aff      	subs	r7, r7, r3
 800ff1a:	f1b8 0f00 	cmp.w	r8, #0
 800ff1e:	d009      	beq.n	800ff34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800ff20:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800ff24:	9019      	str	r0, [sp, #100]	; 0x64
 800ff26:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800ff2a:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800ff2e:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800ff32:	911d      	str	r1, [sp, #116]	; 0x74
 800ff34:	1ad2      	subs	r2, r2, r3
 800ff36:	e6b5      	b.n	800fca4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800ff38:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800ff3a:	681b      	ldr	r3, [r3, #0]
 800ff3c:	b923      	cbnz	r3, 800ff48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ff3e:	4b04      	ldr	r3, [pc, #16]	; (800ff50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800ff40:	6818      	ldr	r0, [r3, #0]
 800ff42:	6803      	ldr	r3, [r0, #0]
 800ff44:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ff46:	4798      	blx	r3
 800ff48:	b05b      	add	sp, #364	; 0x16c
 800ff4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ff4e:	bf00      	nop
 800ff50:	20015488 	.word	0x20015488

0800ff54 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 800ff54:	b570      	push	{r4, r5, r6, lr}
 800ff56:	4604      	mov	r4, r0
 800ff58:	f89d 6014 	ldrb.w	r6, [sp, #20]
 800ff5c:	9804      	ldr	r0, [sp, #16]
 800ff5e:	6061      	str	r1, [r4, #4]
 800ff60:	2500      	movs	r5, #0
 800ff62:	8025      	strh	r5, [r4, #0]
 800ff64:	7223      	strb	r3, [r4, #8]
 800ff66:	7266      	strb	r6, [r4, #9]
 800ff68:	60e0      	str	r0, [r4, #12]
 800ff6a:	8222      	strh	r2, [r4, #16]
 800ff6c:	8265      	strh	r5, [r4, #18]
 800ff6e:	82a5      	strh	r5, [r4, #20]
 800ff70:	82e5      	strh	r5, [r4, #22]
 800ff72:	8325      	strh	r5, [r4, #24]
 800ff74:	8365      	strh	r5, [r4, #26]
 800ff76:	83a5      	strh	r5, [r4, #28]
 800ff78:	77a5      	strb	r5, [r4, #30]
 800ff7a:	b32e      	cbz	r6, 800ffc8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800ff7c:	6803      	ldr	r3, [r0, #0]
 800ff7e:	695b      	ldr	r3, [r3, #20]
 800ff80:	4798      	blx	r3
 800ff82:	4606      	mov	r6, r0
 800ff84:	b300      	cbz	r0, 800ffc8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800ff86:	68e0      	ldr	r0, [r4, #12]
 800ff88:	6803      	ldr	r3, [r0, #0]
 800ff8a:	4631      	mov	r1, r6
 800ff8c:	68db      	ldr	r3, [r3, #12]
 800ff8e:	4798      	blx	r3
 800ff90:	4605      	mov	r5, r0
 800ff92:	b1c8      	cbz	r0, 800ffc8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800ff94:	7b43      	ldrb	r3, [r0, #13]
 800ff96:	7a82      	ldrb	r2, [r0, #10]
 800ff98:	005b      	lsls	r3, r3, #1
 800ff9a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ff9e:	4313      	orrs	r3, r2
 800ffa0:	83a3      	strh	r3, [r4, #28]
 800ffa2:	7a63      	ldrb	r3, [r4, #9]
 800ffa4:	2b04      	cmp	r3, #4
 800ffa6:	d10f      	bne.n	800ffc8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800ffa8:	68e0      	ldr	r0, [r4, #12]
 800ffaa:	6803      	ldr	r3, [r0, #0]
 800ffac:	462a      	mov	r2, r5
 800ffae:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ffb0:	4631      	mov	r1, r6
 800ffb2:	4798      	blx	r3
 800ffb4:	7b6b      	ldrb	r3, [r5, #13]
 800ffb6:	005b      	lsls	r3, r3, #1
 800ffb8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800ffbc:	7aab      	ldrb	r3, [r5, #10]
 800ffbe:	4313      	orrs	r3, r2
 800ffc0:	4418      	add	r0, r3
 800ffc2:	8ba3      	ldrh	r3, [r4, #28]
 800ffc4:	4418      	add	r0, r3
 800ffc6:	83a0      	strh	r0, [r4, #28]
 800ffc8:	4620      	mov	r0, r4
 800ffca:	bd70      	pop	{r4, r5, r6, pc}

0800ffcc <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800ffcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ffd0:	2400      	movs	r4, #0
 800ffd2:	b085      	sub	sp, #20
 800ffd4:	4681      	mov	r9, r0
 800ffd6:	4688      	mov	r8, r1
 800ffd8:	4692      	mov	sl, r2
 800ffda:	469b      	mov	fp, r3
 800ffdc:	4627      	mov	r7, r4
 800ffde:	4625      	mov	r5, r4
 800ffe0:	4626      	mov	r6, r4
 800ffe2:	4554      	cmp	r4, sl
 800ffe4:	da2a      	bge.n	801003c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800ffe6:	2300      	movs	r3, #0
 800ffe8:	9303      	str	r3, [sp, #12]
 800ffea:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800ffee:	429d      	cmp	r5, r3
 800fff0:	d004      	beq.n	800fffc <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800fff2:	f242 030b 	movw	r3, #8203	; 0x200b
 800fff6:	429d      	cmp	r5, r3
 800fff8:	bf18      	it	ne
 800fffa:	462f      	movne	r7, r5
 800fffc:	ab03      	add	r3, sp, #12
 800fffe:	4642      	mov	r2, r8
 8010000:	4659      	mov	r1, fp
 8010002:	4648      	mov	r0, r9
 8010004:	f002 ff7e 	bl	8012f04 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010008:	4605      	mov	r5, r0
 801000a:	b1b8      	cbz	r0, 801003c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801000c:	280a      	cmp	r0, #10
 801000e:	d015      	beq.n	801003c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8010010:	9a03      	ldr	r2, [sp, #12]
 8010012:	b18a      	cbz	r2, 8010038 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8010014:	7b50      	ldrb	r0, [r2, #13]
 8010016:	7a93      	ldrb	r3, [r2, #10]
 8010018:	8895      	ldrh	r5, [r2, #4]
 801001a:	0040      	lsls	r0, r0, #1
 801001c:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8010020:	4303      	orrs	r3, r0
 8010022:	9301      	str	r3, [sp, #4]
 8010024:	f8d8 3000 	ldr.w	r3, [r8]
 8010028:	4639      	mov	r1, r7
 801002a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801002c:	4640      	mov	r0, r8
 801002e:	4798      	blx	r3
 8010030:	9b01      	ldr	r3, [sp, #4]
 8010032:	4418      	add	r0, r3
 8010034:	4406      	add	r6, r0
 8010036:	b2b6      	uxth	r6, r6
 8010038:	3401      	adds	r4, #1
 801003a:	e7d2      	b.n	800ffe2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 801003c:	4630      	mov	r0, r6
 801003e:	b005      	add	sp, #20
 8010040:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010044 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8010044:	2a02      	cmp	r2, #2
 8010046:	b530      	push	{r4, r5, lr}
 8010048:	d011      	beq.n	801006e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 801004a:	2a03      	cmp	r2, #3
 801004c:	d01c      	beq.n	8010088 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 801004e:	2a01      	cmp	r2, #1
 8010050:	d10c      	bne.n	801006c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8010052:	888b      	ldrh	r3, [r1, #4]
 8010054:	8801      	ldrh	r1, [r0, #0]
 8010056:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 801005a:	8844      	ldrh	r4, [r0, #2]
 801005c:	8004      	strh	r4, [r0, #0]
 801005e:	1a5b      	subs	r3, r3, r1
 8010060:	1a9b      	subs	r3, r3, r2
 8010062:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8010066:	8043      	strh	r3, [r0, #2]
 8010068:	8081      	strh	r1, [r0, #4]
 801006a:	80c2      	strh	r2, [r0, #6]
 801006c:	bd30      	pop	{r4, r5, pc}
 801006e:	88cb      	ldrh	r3, [r1, #6]
 8010070:	8842      	ldrh	r2, [r0, #2]
 8010072:	1a9b      	subs	r3, r3, r2
 8010074:	88c2      	ldrh	r2, [r0, #6]
 8010076:	1a9b      	subs	r3, r3, r2
 8010078:	888a      	ldrh	r2, [r1, #4]
 801007a:	8801      	ldrh	r1, [r0, #0]
 801007c:	8043      	strh	r3, [r0, #2]
 801007e:	1a52      	subs	r2, r2, r1
 8010080:	8881      	ldrh	r1, [r0, #4]
 8010082:	1a52      	subs	r2, r2, r1
 8010084:	8002      	strh	r2, [r0, #0]
 8010086:	e7f1      	b.n	801006c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8010088:	88cb      	ldrh	r3, [r1, #6]
 801008a:	8841      	ldrh	r1, [r0, #2]
 801008c:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8010090:	f9b0 5000 	ldrsh.w	r5, [r0]
 8010094:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8010098:	8045      	strh	r5, [r0, #2]
 801009a:	1a5b      	subs	r3, r3, r1
 801009c:	1a9b      	subs	r3, r3, r2
 801009e:	8003      	strh	r3, [r0, #0]
 80100a0:	8082      	strh	r2, [r0, #4]
 80100a2:	80c4      	strh	r4, [r0, #6]
 80100a4:	e7e2      	b.n	801006c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

080100a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 80100a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80100aa:	b09f      	sub	sp, #124	; 0x7c
 80100ac:	9116      	str	r1, [sp, #88]	; 0x58
 80100ae:	9317      	str	r3, [sp, #92]	; 0x5c
 80100b0:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80100b2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80100b4:	8809      	ldrh	r1, [r1, #0]
 80100b6:	889b      	ldrh	r3, [r3, #4]
 80100b8:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 80100bc:	9212      	str	r2, [sp, #72]	; 0x48
 80100be:	440b      	add	r3, r1
 80100c0:	b21b      	sxth	r3, r3
 80100c2:	9310      	str	r3, [sp, #64]	; 0x40
 80100c4:	f8d8 3000 	ldr.w	r3, [r8]
 80100c8:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 80100cc:	7a59      	ldrb	r1, [r3, #9]
 80100ce:	7a1b      	ldrb	r3, [r3, #8]
 80100d0:	9011      	str	r0, [sp, #68]	; 0x44
 80100d2:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 80100d6:	9114      	str	r1, [sp, #80]	; 0x50
 80100d8:	9315      	str	r3, [sp, #84]	; 0x54
 80100da:	f9bd 50a0 	ldrsh.w	r5, [sp, #160]	; 0xa0
 80100de:	2a00      	cmp	r2, #0
 80100e0:	d06a      	beq.n	80101b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 80100e2:	f898 3010 	ldrb.w	r3, [r8, #16]
 80100e6:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80100e8:	2b04      	cmp	r3, #4
 80100ea:	bf14      	ite	ne
 80100ec:	2301      	movne	r3, #1
 80100ee:	2302      	moveq	r3, #2
 80100f0:	4413      	add	r3, r2
 80100f2:	f04f 0900 	mov.w	r9, #0
 80100f6:	930f      	str	r3, [sp, #60]	; 0x3c
 80100f8:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 80100fc:	464c      	mov	r4, r9
 80100fe:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8010102:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8010106:	4293      	cmp	r3, r2
 8010108:	f280 808f 	bge.w	801022a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 801010c:	2300      	movs	r3, #0
 801010e:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8010112:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8010116:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801011a:	429c      	cmp	r4, r3
 801011c:	d006      	beq.n	801012c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 801011e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010120:	f242 020b 	movw	r2, #8203	; 0x200b
 8010124:	4294      	cmp	r4, r2
 8010126:	bf18      	it	ne
 8010128:	4623      	movne	r3, r4
 801012a:	930d      	str	r3, [sp, #52]	; 0x34
 801012c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801012e:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8010130:	f8d8 2000 	ldr.w	r2, [r8]
 8010134:	428b      	cmp	r3, r1
 8010136:	db41      	blt.n	80101bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8010138:	6813      	ldr	r3, [r2, #0]
 801013a:	4610      	mov	r0, r2
 801013c:	695b      	ldr	r3, [r3, #20]
 801013e:	4798      	blx	r3
 8010140:	4604      	mov	r4, r0
 8010142:	f8d8 0000 	ldr.w	r0, [r8]
 8010146:	6803      	ldr	r3, [r0, #0]
 8010148:	aa1d      	add	r2, sp, #116	; 0x74
 801014a:	689e      	ldr	r6, [r3, #8]
 801014c:	4621      	mov	r1, r4
 801014e:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8010152:	47b0      	blx	r6
 8010154:	901c      	str	r0, [sp, #112]	; 0x70
 8010156:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801015a:	429c      	cmp	r4, r3
 801015c:	f000 80e9 	beq.w	8010332 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8010160:	f242 030b 	movw	r3, #8203	; 0x200b
 8010164:	429c      	cmp	r4, r3
 8010166:	f000 80e4 	beq.w	8010332 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 801016a:	2c00      	cmp	r4, #0
 801016c:	f000 80f6 	beq.w	801035c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 8010170:	2c0a      	cmp	r4, #10
 8010172:	d060      	beq.n	8010236 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8010174:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8010176:	b36a      	cbz	r2, 80101d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8010178:	8894      	ldrh	r4, [r2, #4]
 801017a:	f1bb 0f00 	cmp.w	fp, #0
 801017e:	d03b      	beq.n	80101f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8010180:	f892 900d 	ldrb.w	r9, [r2, #13]
 8010184:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8010188:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801018c:	f892 900a 	ldrb.w	r9, [r2, #10]
 8010190:	f1bb 0f01 	cmp.w	fp, #1
 8010194:	ea49 0903 	orr.w	r9, r9, r3
 8010198:	d134      	bne.n	8010204 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 801019a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801019c:	eba5 0509 	sub.w	r5, r5, r9
 80101a0:	2b00      	cmp	r3, #0
 80101a2:	d14f      	bne.n	8010244 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 80101a4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80101a6:	eb09 0305 	add.w	r3, r9, r5
 80101aa:	4413      	add	r3, r2
 80101ac:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80101ae:	f9b2 2000 	ldrsh.w	r2, [r2]
 80101b2:	4293      	cmp	r3, r2
 80101b4:	da51      	bge.n	801025a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 80101b6:	e038      	b.n	801022a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 80101b8:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80101ba:	e79a      	b.n	80100f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 80101bc:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 80101c0:	9301      	str	r3, [sp, #4]
 80101c2:	ab1d      	add	r3, sp, #116	; 0x74
 80101c4:	9300      	str	r3, [sp, #0]
 80101c6:	4659      	mov	r1, fp
 80101c8:	ab1c      	add	r3, sp, #112	; 0x70
 80101ca:	982c      	ldr	r0, [sp, #176]	; 0xb0
 80101cc:	f002 fee3 	bl	8012f96 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 80101d0:	4604      	mov	r4, r0
 80101d2:	e7c0      	b.n	8010156 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 80101d4:	f8d8 0000 	ldr.w	r0, [r8]
 80101d8:	6803      	ldr	r3, [r0, #0]
 80101da:	691b      	ldr	r3, [r3, #16]
 80101dc:	4798      	blx	r3
 80101de:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80101e2:	4298      	cmp	r0, r3
 80101e4:	f000 80a5 	beq.w	8010332 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 80101e8:	f242 030b 	movw	r3, #8203	; 0x200b
 80101ec:	4298      	cmp	r0, r3
 80101ee:	f000 80a0 	beq.w	8010332 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 80101f2:	f1bb 0f00 	cmp.w	fp, #0
 80101f6:	d100      	bne.n	80101fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 80101f8:	444d      	add	r5, r9
 80101fa:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80101fc:	2a00      	cmp	r2, #0
 80101fe:	d1bf      	bne.n	8010180 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8010200:	4691      	mov	r9, r2
 8010202:	e096      	b.n	8010332 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8010204:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010206:	2b00      	cmp	r3, #0
 8010208:	f000 80aa 	beq.w	8010360 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 801020c:	f1bb 0f00 	cmp.w	fp, #0
 8010210:	d118      	bne.n	8010244 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8010212:	f8d8 0000 	ldr.w	r0, [r8]
 8010216:	990d      	ldr	r1, [sp, #52]	; 0x34
 8010218:	6803      	ldr	r3, [r0, #0]
 801021a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801021c:	4798      	blx	r3
 801021e:	4405      	add	r5, r0
 8010220:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8010222:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010224:	1aeb      	subs	r3, r5, r3
 8010226:	4293      	cmp	r3, r2
 8010228:	dd17      	ble.n	801025a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 801022a:	2c00      	cmp	r4, #0
 801022c:	f000 8096 	beq.w	801035c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 8010230:	2c0a      	cmp	r4, #10
 8010232:	f040 8084 	bne.w	801033e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 8010236:	240a      	movs	r4, #10
 8010238:	fab4 f084 	clz	r0, r4
 801023c:	0940      	lsrs	r0, r0, #5
 801023e:	b01f      	add	sp, #124	; 0x7c
 8010240:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010244:	f8d8 0000 	ldr.w	r0, [r8]
 8010248:	990d      	ldr	r1, [sp, #52]	; 0x34
 801024a:	6803      	ldr	r3, [r0, #0]
 801024c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801024e:	4798      	blx	r3
 8010250:	f1bb 0f01 	cmp.w	fp, #1
 8010254:	eba5 0500 	sub.w	r5, r5, r0
 8010258:	d0a4      	beq.n	80101a4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 801025a:	981c      	ldr	r0, [sp, #112]	; 0x70
 801025c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801025e:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8010262:	f9b3 6000 	ldrsh.w	r6, [r3]
 8010266:	7b43      	ldrb	r3, [r0, #13]
 8010268:	015b      	lsls	r3, r3, #5
 801026a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801026e:	7983      	ldrb	r3, [r0, #6]
 8010270:	4429      	add	r1, r5
 8010272:	4313      	orrs	r3, r2
 8010274:	440b      	add	r3, r1
 8010276:	42b3      	cmp	r3, r6
 8010278:	db5b      	blt.n	8010332 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 801027a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801027c:	4299      	cmp	r1, r3
 801027e:	da58      	bge.n	8010332 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8010280:	f8d8 0000 	ldr.w	r0, [r8]
 8010284:	6803      	ldr	r3, [r0, #0]
 8010286:	42ae      	cmp	r6, r5
 8010288:	bfc8      	it	gt
 801028a:	1b76      	subgt	r6, r6, r5
 801028c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801028e:	bfcc      	ite	gt
 8010290:	b2b6      	uxthgt	r6, r6
 8010292:	2600      	movle	r6, #0
 8010294:	4798      	blx	r3
 8010296:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8010298:	7b5a      	ldrb	r2, [r3, #13]
 801029a:	00d1      	lsls	r1, r2, #3
 801029c:	f401 7780 	and.w	r7, r1, #256	; 0x100
 80102a0:	7a19      	ldrb	r1, [r3, #8]
 80102a2:	4339      	orrs	r1, r7
 80102a4:	0657      	lsls	r7, r2, #25
 80102a6:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 80102a8:	bf44      	itt	mi
 80102aa:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 80102ae:	b209      	sxthmi	r1, r1
 80102b0:	19c7      	adds	r7, r0, r7
 80102b2:	1a7f      	subs	r7, r7, r1
 80102b4:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80102b6:	b2bf      	uxth	r7, r7
 80102b8:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 80102bc:	fa0f fa87 	sxth.w	sl, r7
 80102c0:	4551      	cmp	r1, sl
 80102c2:	dd3a      	ble.n	801033a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 80102c4:	0112      	lsls	r2, r2, #4
 80102c6:	79d8      	ldrb	r0, [r3, #7]
 80102c8:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80102cc:	4302      	orrs	r2, r0
 80102ce:	4492      	add	sl, r2
 80102d0:	4551      	cmp	r1, sl
 80102d2:	dc2e      	bgt.n	8010332 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 80102d4:	1bcf      	subs	r7, r1, r7
 80102d6:	b2bf      	uxth	r7, r7
 80102d8:	468a      	mov	sl, r1
 80102da:	9319      	str	r3, [sp, #100]	; 0x64
 80102dc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80102de:	f8d8 0000 	ldr.w	r0, [r8]
 80102e2:	681a      	ldr	r2, [r3, #0]
 80102e4:	6801      	ldr	r1, [r0, #0]
 80102e6:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 80102e8:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 80102ea:	9313      	str	r3, [sp, #76]	; 0x4c
 80102ec:	9218      	str	r2, [sp, #96]	; 0x60
 80102ee:	6b89      	ldr	r1, [r1, #56]	; 0x38
 80102f0:	4788      	blx	r1
 80102f2:	f898 1006 	ldrb.w	r1, [r8, #6]
 80102f6:	910b      	str	r1, [sp, #44]	; 0x2c
 80102f8:	f898 100e 	ldrb.w	r1, [r8, #14]
 80102fc:	910a      	str	r1, [sp, #40]	; 0x28
 80102fe:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8010302:	9109      	str	r1, [sp, #36]	; 0x24
 8010304:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8010306:	f8d8 1008 	ldr.w	r1, [r8, #8]
 801030a:	9305      	str	r3, [sp, #20]
 801030c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801030e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8010310:	9206      	str	r2, [sp, #24]
 8010312:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8010316:	e9cd 7303 	strd	r7, r3, [sp, #12]
 801031a:	e9cd a601 	strd	sl, r6, [sp, #4]
 801031e:	442e      	add	r6, r5
 8010320:	b236      	sxth	r6, r6
 8010322:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8010324:	9600      	str	r6, [sp, #0]
 8010326:	681a      	ldr	r2, [r3, #0]
 8010328:	9916      	ldr	r1, [sp, #88]	; 0x58
 801032a:	685b      	ldr	r3, [r3, #4]
 801032c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801032e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010330:	47b0      	blx	r6
 8010332:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010334:	3301      	adds	r3, #1
 8010336:	930e      	str	r3, [sp, #56]	; 0x38
 8010338:	e6e3      	b.n	8010102 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 801033a:	2700      	movs	r7, #0
 801033c:	e7cd      	b.n	80102da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 801033e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8010340:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8010342:	3501      	adds	r5, #1
 8010344:	429d      	cmp	r5, r3
 8010346:	f6bf af77 	bge.w	8010238 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 801034a:	4659      	mov	r1, fp
 801034c:	982c      	ldr	r0, [sp, #176]	; 0xb0
 801034e:	f7f4 fcd3 	bl	8004cf8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8010352:	4604      	mov	r4, r0
 8010354:	b110      	cbz	r0, 801035c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 8010356:	280a      	cmp	r0, #10
 8010358:	d1f2      	bne.n	8010340 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 801035a:	e76c      	b.n	8010236 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 801035c:	2400      	movs	r4, #0
 801035e:	e76b      	b.n	8010238 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8010360:	f1bb 0f00 	cmp.w	fp, #0
 8010364:	f43f af5c 	beq.w	8010220 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 8010368:	e777      	b.n	801025a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

0801036a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 801036a:	b530      	push	{r4, r5, lr}
 801036c:	8a44      	ldrh	r4, [r0, #18]
 801036e:	8ac5      	ldrh	r5, [r0, #22]
 8010370:	82c3      	strh	r3, [r0, #22]
 8010372:	442c      	add	r4, r5
 8010374:	1ae4      	subs	r4, r4, r3
 8010376:	8244      	strh	r4, [r0, #18]
 8010378:	8b03      	ldrh	r3, [r0, #24]
 801037a:	8a84      	ldrh	r4, [r0, #20]
 801037c:	4422      	add	r2, r4
 801037e:	440c      	add	r4, r1
 8010380:	1a59      	subs	r1, r3, r1
 8010382:	8342      	strh	r2, [r0, #26]
 8010384:	8284      	strh	r4, [r0, #20]
 8010386:	8301      	strh	r1, [r0, #24]
 8010388:	bd30      	pop	{r4, r5, pc}

0801038a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 801038a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801038e:	7a43      	ldrb	r3, [r0, #9]
 8010390:	1eda      	subs	r2, r3, #3
 8010392:	b087      	sub	sp, #28
 8010394:	4604      	mov	r4, r0
 8010396:	b2d2      	uxtb	r2, r2
 8010398:	460f      	mov	r7, r1
 801039a:	2900      	cmp	r1, #0
 801039c:	d036      	beq.n	801040c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 801039e:	2a01      	cmp	r2, #1
 80103a0:	d932      	bls.n	8010408 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 80103a2:	1e58      	subs	r0, r3, #1
 80103a4:	f1d0 0b00 	rsbs	fp, r0, #0
 80103a8:	eb4b 0b00 	adc.w	fp, fp, r0
 80103ac:	1e99      	subs	r1, r3, #2
 80103ae:	424b      	negs	r3, r1
 80103b0:	414b      	adcs	r3, r1
 80103b2:	9303      	str	r3, [sp, #12]
 80103b4:	2300      	movs	r3, #0
 80103b6:	e9cd 3301 	strd	r3, r3, [sp, #4]
 80103ba:	2500      	movs	r5, #0
 80103bc:	8265      	strh	r5, [r4, #18]
 80103be:	82a5      	strh	r5, [r4, #20]
 80103c0:	46a9      	mov	r9, r5
 80103c2:	f242 0a0b 	movw	sl, #8203	; 0x200b
 80103c6:	2300      	movs	r3, #0
 80103c8:	9305      	str	r3, [sp, #20]
 80103ca:	8823      	ldrh	r3, [r4, #0]
 80103cc:	2b20      	cmp	r3, #32
 80103ce:	d02b      	beq.n	8010428 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 80103d0:	eba3 020a 	sub.w	r2, r3, sl
 80103d4:	4256      	negs	r6, r2
 80103d6:	4156      	adcs	r6, r2
 80103d8:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80103dc:	4293      	cmp	r3, r2
 80103de:	d004      	beq.n	80103ea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 80103e0:	4553      	cmp	r3, sl
 80103e2:	bf16      	itet	ne
 80103e4:	4699      	movne	r9, r3
 80103e6:	2601      	moveq	r6, #1
 80103e8:	2600      	movne	r6, #0
 80103ea:	ab05      	add	r3, sp, #20
 80103ec:	68e2      	ldr	r2, [r4, #12]
 80103ee:	7a21      	ldrb	r1, [r4, #8]
 80103f0:	6860      	ldr	r0, [r4, #4]
 80103f2:	f002 fd87 	bl	8012f04 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80103f6:	8020      	strh	r0, [r4, #0]
 80103f8:	b9c8      	cbnz	r0, 801042e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 80103fa:	8b22      	ldrh	r2, [r4, #24]
 80103fc:	2300      	movs	r3, #0
 80103fe:	4611      	mov	r1, r2
 8010400:	4620      	mov	r0, r4
 8010402:	f7ff ffb2 	bl	801036a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8010406:	e066      	b.n	80104d6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 8010408:	468b      	mov	fp, r1
 801040a:	e7cf      	b.n	80103ac <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 801040c:	3b01      	subs	r3, #1
 801040e:	2a01      	cmp	r2, #1
 8010410:	bf8c      	ite	hi
 8010412:	2200      	movhi	r2, #0
 8010414:	2201      	movls	r2, #1
 8010416:	2b01      	cmp	r3, #1
 8010418:	bf8c      	ite	hi
 801041a:	2300      	movhi	r3, #0
 801041c:	2301      	movls	r3, #1
 801041e:	9202      	str	r2, [sp, #8]
 8010420:	9301      	str	r3, [sp, #4]
 8010422:	9103      	str	r1, [sp, #12]
 8010424:	468b      	mov	fp, r1
 8010426:	e7c8      	b.n	80103ba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 8010428:	4699      	mov	r9, r3
 801042a:	2601      	movs	r6, #1
 801042c:	e7dd      	b.n	80103ea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 801042e:	8ae3      	ldrh	r3, [r4, #22]
 8010430:	280a      	cmp	r0, #10
 8010432:	f103 0301 	add.w	r3, r3, #1
 8010436:	82e3      	strh	r3, [r4, #22]
 8010438:	d0df      	beq.n	80103fa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 801043a:	9a05      	ldr	r2, [sp, #20]
 801043c:	bb42      	cbnz	r2, 8010490 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 801043e:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010442:	4298      	cmp	r0, r3
 8010444:	d001      	beq.n	801044a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 8010446:	4550      	cmp	r0, sl
 8010448:	d1bd      	bne.n	80103c6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801044a:	8823      	ldrh	r3, [r4, #0]
 801044c:	8b21      	ldrh	r1, [r4, #24]
 801044e:	2b20      	cmp	r3, #32
 8010450:	d001      	beq.n	8010456 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 8010452:	4553      	cmp	r3, sl
 8010454:	d131      	bne.n	80104ba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 8010456:	2e00      	cmp	r6, #0
 8010458:	bf0a      	itet	eq
 801045a:	460d      	moveq	r5, r1
 801045c:	4630      	movne	r0, r6
 801045e:	2001      	moveq	r0, #1
 8010460:	440a      	add	r2, r1
 8010462:	8aa3      	ldrh	r3, [r4, #20]
 8010464:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8010468:	b292      	uxth	r2, r2
 801046a:	8322      	strh	r2, [r4, #24]
 801046c:	4413      	add	r3, r2
 801046e:	2f00      	cmp	r7, #0
 8010470:	d03a      	beq.n	80104e8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 8010472:	f1bb 0f00 	cmp.w	fp, #0
 8010476:	d102      	bne.n	801047e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 8010478:	9903      	ldr	r1, [sp, #12]
 801047a:	b301      	cbz	r1, 80104be <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 801047c:	b1f8      	cbz	r0, 80104be <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 801047e:	8ba1      	ldrh	r1, [r4, #28]
 8010480:	4419      	add	r1, r3
 8010482:	458c      	cmp	ip, r1
 8010484:	da2a      	bge.n	80104dc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 8010486:	8a61      	ldrh	r1, [r4, #18]
 8010488:	b341      	cbz	r1, 80104dc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 801048a:	4563      	cmp	r3, ip
 801048c:	dd9b      	ble.n	80103c6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801048e:	e01c      	b.n	80104ca <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 8010490:	8893      	ldrh	r3, [r2, #4]
 8010492:	8023      	strh	r3, [r4, #0]
 8010494:	f892 800d 	ldrb.w	r8, [r2, #13]
 8010498:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801049c:	f408 7080 	and.w	r0, r8, #256	; 0x100
 80104a0:	f892 800a 	ldrb.w	r8, [r2, #10]
 80104a4:	ea48 0800 	orr.w	r8, r8, r0
 80104a8:	68e0      	ldr	r0, [r4, #12]
 80104aa:	6803      	ldr	r3, [r0, #0]
 80104ac:	4649      	mov	r1, r9
 80104ae:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80104b0:	4798      	blx	r3
 80104b2:	eb08 0200 	add.w	r2, r8, r0
 80104b6:	b292      	uxth	r2, r2
 80104b8:	e7c7      	b.n	801044a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 80104ba:	2000      	movs	r0, #0
 80104bc:	e7d0      	b.n	8010460 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 80104be:	4563      	cmp	r3, ip
 80104c0:	dd81      	ble.n	80103c6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80104c2:	8a63      	ldrh	r3, [r4, #18]
 80104c4:	2b00      	cmp	r3, #0
 80104c6:	f43f af7e 	beq.w	80103c6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80104ca:	2301      	movs	r3, #1
 80104cc:	77a3      	strb	r3, [r4, #30]
 80104ce:	8ba2      	ldrh	r2, [r4, #28]
 80104d0:	8b63      	ldrh	r3, [r4, #26]
 80104d2:	4413      	add	r3, r2
 80104d4:	8363      	strh	r3, [r4, #26]
 80104d6:	b007      	add	sp, #28
 80104d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80104dc:	2300      	movs	r3, #0
 80104de:	4611      	mov	r1, r2
 80104e0:	4620      	mov	r0, r4
 80104e2:	f7ff ff42 	bl	801036a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80104e6:	e76e      	b.n	80103c6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80104e8:	4563      	cmp	r3, ip
 80104ea:	dd14      	ble.n	8010516 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 80104ec:	9b02      	ldr	r3, [sp, #8]
 80104ee:	b113      	cbz	r3, 80104f6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 80104f0:	2301      	movs	r3, #1
 80104f2:	460a      	mov	r2, r1
 80104f4:	e783      	b.n	80103fe <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 80104f6:	9b01      	ldr	r3, [sp, #4]
 80104f8:	2b00      	cmp	r3, #0
 80104fa:	f43f af64 	beq.w	80103c6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80104fe:	2800      	cmp	r0, #0
 8010500:	f47f af61 	bne.w	80103c6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010504:	b116      	cbz	r6, 801050c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 8010506:	2301      	movs	r3, #1
 8010508:	462a      	mov	r2, r5
 801050a:	e779      	b.n	8010400 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 801050c:	8a63      	ldrh	r3, [r4, #18]
 801050e:	2b00      	cmp	r3, #0
 8010510:	f43f af59 	beq.w	80103c6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010514:	e7df      	b.n	80104d6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 8010516:	2800      	cmp	r0, #0
 8010518:	f47f af55 	bne.w	80103c6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801051c:	2e00      	cmp	r6, #0
 801051e:	f43f af52 	beq.w	80103c6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010522:	2301      	movs	r3, #1
 8010524:	462a      	mov	r2, r5
 8010526:	e7db      	b.n	80104e0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

08010528 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8010528:	b530      	push	{r4, r5, lr}
 801052a:	4605      	mov	r5, r0
 801052c:	b08b      	sub	sp, #44	; 0x2c
 801052e:	b191      	cbz	r1, 8010556 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 8010530:	e9cd 3100 	strd	r3, r1, [sp]
 8010534:	4613      	mov	r3, r2
 8010536:	4601      	mov	r1, r0
 8010538:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 801053c:	a802      	add	r0, sp, #8
 801053e:	f7ff fd09 	bl	800ff54 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8010542:	2401      	movs	r4, #1
 8010544:	2100      	movs	r1, #0
 8010546:	a802      	add	r0, sp, #8
 8010548:	f7ff ff1f 	bl	801038a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 801054c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8010550:	b163      	cbz	r3, 801056c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8010552:	3401      	adds	r4, #1
 8010554:	e7f6      	b.n	8010544 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 8010556:	f002 fda3 	bl	80130a0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801055a:	2401      	movs	r4, #1
 801055c:	280a      	cmp	r0, #10
 801055e:	4628      	mov	r0, r5
 8010560:	bf08      	it	eq
 8010562:	3401      	addeq	r4, #1
 8010564:	f002 fd9c 	bl	80130a0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010568:	2800      	cmp	r0, #0
 801056a:	d1f7      	bne.n	801055c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 801056c:	b2a0      	uxth	r0, r4
 801056e:	b00b      	add	sp, #44	; 0x2c
 8010570:	bd30      	pop	{r4, r5, pc}

08010572 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8010572:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010576:	b0e5      	sub	sp, #404	; 0x194
 8010578:	4689      	mov	r9, r1
 801057a:	f8dd a1b8 	ldr.w	sl, [sp, #440]	; 0x1b8
 801057e:	900a      	str	r0, [sp, #40]	; 0x28
 8010580:	461c      	mov	r4, r3
 8010582:	f1ba 0f00 	cmp.w	sl, #0
 8010586:	f000 80b4 	beq.w	80106f2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 801058a:	681b      	ldr	r3, [r3, #0]
 801058c:	2b00      	cmp	r3, #0
 801058e:	f000 80b0 	beq.w	80106f2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010592:	7ba3      	ldrb	r3, [r4, #14]
 8010594:	2b00      	cmp	r3, #0
 8010596:	f000 80ac 	beq.w	80106f2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 801059a:	6810      	ldr	r0, [r2, #0]
 801059c:	6851      	ldr	r1, [r2, #4]
 801059e:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 80105a2:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 80105a6:	f10d 0834 	add.w	r8, sp, #52	; 0x34
 80105aa:	4643      	mov	r3, r8
 80105ac:	c303      	stmia	r3!, {r0, r1}
 80105ae:	2500      	movs	r5, #0
 80105b0:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 80105b4:	79a2      	ldrb	r2, [r4, #6]
 80105b6:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 80105ba:	a90f      	add	r1, sp, #60	; 0x3c
 80105bc:	4640      	mov	r0, r8
 80105be:	950f      	str	r5, [sp, #60]	; 0x3c
 80105c0:	f7ff fd40 	bl	8010044 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80105c4:	a90f      	add	r1, sp, #60	; 0x3c
 80105c6:	4608      	mov	r0, r1
 80105c8:	79a2      	ldrb	r2, [r4, #6]
 80105ca:	af19      	add	r7, sp, #100	; 0x64
 80105cc:	f7ff fd3a 	bl	8010044 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80105d0:	4638      	mov	r0, r7
 80105d2:	f002 f93a 	bl	801284a <_ZN8touchgfx12TextProviderC1Ev>
 80105d6:	6820      	ldr	r0, [r4, #0]
 80105d8:	6803      	ldr	r3, [r0, #0]
 80105da:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80105dc:	4798      	blx	r3
 80105de:	4606      	mov	r6, r0
 80105e0:	6820      	ldr	r0, [r4, #0]
 80105e2:	6803      	ldr	r3, [r0, #0]
 80105e4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80105e6:	4798      	blx	r3
 80105e8:	4633      	mov	r3, r6
 80105ea:	9000      	str	r0, [sp, #0]
 80105ec:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 80105ee:	4651      	mov	r1, sl
 80105f0:	4638      	mov	r0, r7
 80105f2:	f002 f985 	bl	8012900 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80105f6:	6820      	ldr	r0, [r4, #0]
 80105f8:	7923      	ldrb	r3, [r4, #4]
 80105fa:	9308      	str	r3, [sp, #32]
 80105fc:	6803      	ldr	r3, [r0, #0]
 80105fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010600:	4798      	blx	r3
 8010602:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8010606:	181e      	adds	r6, r3, r0
 8010608:	42ae      	cmp	r6, r5
 801060a:	dd06      	ble.n	801061a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xa8>
 801060c:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 8010610:	4282      	cmp	r2, r0
 8010612:	bfa4      	itt	ge
 8010614:	189d      	addge	r5, r3, r2
 8010616:	fb95 f5f6 	sdivge	r5, r5, r6
 801061a:	a832      	add	r0, sp, #200	; 0xc8
 801061c:	f002 f915 	bl	801284a <_ZN8touchgfx12TextProviderC1Ev>
 8010620:	7c23      	ldrb	r3, [r4, #16]
 8010622:	b17b      	cbz	r3, 8010644 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd2>
 8010624:	6820      	ldr	r0, [r4, #0]
 8010626:	6803      	ldr	r3, [r0, #0]
 8010628:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801062a:	4798      	blx	r3
 801062c:	4683      	mov	fp, r0
 801062e:	6820      	ldr	r0, [r4, #0]
 8010630:	6803      	ldr	r3, [r0, #0]
 8010632:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8010634:	4798      	blx	r3
 8010636:	465b      	mov	r3, fp
 8010638:	9000      	str	r0, [sp, #0]
 801063a:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 801063c:	4651      	mov	r1, sl
 801063e:	a832      	add	r0, sp, #200	; 0xc8
 8010640:	f002 f95e 	bl	8012900 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010644:	7be1      	ldrb	r1, [r4, #15]
 8010646:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 801064a:	7963      	ldrb	r3, [r4, #5]
 801064c:	1a52      	subs	r2, r2, r1
 801064e:	7c21      	ldrb	r1, [r4, #16]
 8010650:	9101      	str	r1, [sp, #4]
 8010652:	6821      	ldr	r1, [r4, #0]
 8010654:	9100      	str	r1, [sp, #0]
 8010656:	b292      	uxth	r2, r2
 8010658:	a932      	add	r1, sp, #200	; 0xc8
 801065a:	a811      	add	r0, sp, #68	; 0x44
 801065c:	f7ff fc7a 	bl	800ff54 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8010660:	7c23      	ldrb	r3, [r4, #16]
 8010662:	b9bb      	cbnz	r3, 8010694 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>
 8010664:	fa1f fa86 	uxth.w	sl, r6
 8010668:	2d00      	cmp	r5, #0
 801066a:	dd45      	ble.n	80106f8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 801066c:	4638      	mov	r0, r7
 801066e:	f002 fd17 	bl	80130a0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010672:	2800      	cmp	r0, #0
 8010674:	d03d      	beq.n	80106f2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010676:	280a      	cmp	r0, #10
 8010678:	d1f6      	bne.n	8010668 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 801067a:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 801067e:	4453      	add	r3, sl
 8010680:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8010684:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 8010688:	eba3 030a 	sub.w	r3, r3, sl
 801068c:	3d01      	subs	r5, #1
 801068e:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8010692:	e7e9      	b.n	8010668 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 8010694:	0073      	lsls	r3, r6, #1
 8010696:	9309      	str	r3, [sp, #36]	; 0x24
 8010698:	f64f 7bff 	movw	fp, #65535	; 0xffff
 801069c:	fa1f fa86 	uxth.w	sl, r6
 80106a0:	2d00      	cmp	r5, #0
 80106a2:	dd29      	ble.n	80106f8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 80106a4:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 80106a8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80106aa:	428b      	cmp	r3, r1
 80106ac:	bfd4      	ite	le
 80106ae:	2100      	movle	r1, #0
 80106b0:	2101      	movgt	r1, #1
 80106b2:	a811      	add	r0, sp, #68	; 0x44
 80106b4:	f7ff fe69 	bl	801038a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 80106b8:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 80106bc:	3b01      	subs	r3, #1
 80106be:	b29b      	uxth	r3, r3
 80106c0:	455b      	cmp	r3, fp
 80106c2:	930b      	str	r3, [sp, #44]	; 0x2c
 80106c4:	d005      	beq.n	80106d2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x160>
 80106c6:	7961      	ldrb	r1, [r4, #5]
 80106c8:	4638      	mov	r0, r7
 80106ca:	f7f4 fb15 	bl	8004cf8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80106ce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80106d0:	e7f4      	b.n	80106bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x14a>
 80106d2:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 80106d6:	4453      	add	r3, sl
 80106d8:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 80106dc:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 80106e0:	eba3 030a 	sub.w	r3, r3, sl
 80106e4:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 80106e8:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80106ec:	3d01      	subs	r5, #1
 80106ee:	2b00      	cmp	r3, #0
 80106f0:	d1d6      	bne.n	80106a0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12e>
 80106f2:	b065      	add	sp, #404	; 0x194
 80106f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80106f8:	0075      	lsls	r5, r6, #1
 80106fa:	f04f 0a00 	mov.w	sl, #0
 80106fe:	7c23      	ldrb	r3, [r4, #16]
 8010700:	2b00      	cmp	r3, #0
 8010702:	d066      	beq.n	80107d2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x260>
 8010704:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8010708:	428d      	cmp	r5, r1
 801070a:	bfd4      	ite	le
 801070c:	2100      	movle	r1, #0
 801070e:	2101      	movgt	r1, #1
 8010710:	a811      	add	r0, sp, #68	; 0x44
 8010712:	f7ff fe3a 	bl	801038a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8010716:	9b08      	ldr	r3, [sp, #32]
 8010718:	2b00      	cmp	r3, #0
 801071a:	d055      	beq.n	80107c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 801071c:	f894 b010 	ldrb.w	fp, [r4, #16]
 8010720:	2264      	movs	r2, #100	; 0x64
 8010722:	4639      	mov	r1, r7
 8010724:	a84b      	add	r0, sp, #300	; 0x12c
 8010726:	f010 f8f1 	bl	802090c <memcpy>
 801072a:	f1bb 0f00 	cmp.w	fp, #0
 801072e:	d058      	beq.n	80107e2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x270>
 8010730:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8010734:	7922      	ldrb	r2, [r4, #4]
 8010736:	2a01      	cmp	r2, #1
 8010738:	d13c      	bne.n	80107b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 801073a:	f9bd 0040 	ldrsh.w	r0, [sp, #64]	; 0x40
 801073e:	1ac0      	subs	r0, r0, r3
 8010740:	2302      	movs	r3, #2
 8010742:	fb90 f0f3 	sdiv	r0, r0, r3
 8010746:	b200      	sxth	r0, r0
 8010748:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 801074c:	4418      	add	r0, r3
 801074e:	7c23      	ldrb	r3, [r4, #16]
 8010750:	b200      	sxth	r0, r0
 8010752:	2b00      	cmp	r3, #0
 8010754:	d03a      	beq.n	80107cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25a>
 8010756:	f8bd 2056 	ldrh.w	r2, [sp, #86]	; 0x56
 801075a:	f89d 1062 	ldrb.w	r1, [sp, #98]	; 0x62
 801075e:	9000      	str	r0, [sp, #0]
 8010760:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8010764:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 8010768:	980a      	ldr	r0, [sp, #40]	; 0x28
 801076a:	e9cd a703 	strd	sl, r7, [sp, #12]
 801076e:	e9cd 8401 	strd	r8, r4, [sp, #4]
 8010772:	464a      	mov	r2, r9
 8010774:	2100      	movs	r1, #0
 8010776:	f7ff fc96 	bl	80100a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 801077a:	2800      	cmp	r0, #0
 801077c:	d1b9      	bne.n	80106f2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 801077e:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8010782:	b2b2      	uxth	r2, r6
 8010784:	4611      	mov	r1, r2
 8010786:	4413      	add	r3, r2
 8010788:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801078c:	1a52      	subs	r2, r2, r1
 801078e:	7c21      	ldrb	r1, [r4, #16]
 8010790:	b21b      	sxth	r3, r3
 8010792:	b212      	sxth	r2, r2
 8010794:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8010798:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801079c:	b109      	cbz	r1, 80107a2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x230>
 801079e:	42b2      	cmp	r2, r6
 80107a0:	dba7      	blt.n	80106f2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 80107a2:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 80107a6:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 80107aa:	440a      	add	r2, r1
 80107ac:	b212      	sxth	r2, r2
 80107ae:	4293      	cmp	r3, r2
 80107b0:	dda5      	ble.n	80106fe <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x18c>
 80107b2:	e79e      	b.n	80106f2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 80107b4:	2a02      	cmp	r2, #2
 80107b6:	d105      	bne.n	80107c4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80107b8:	7be2      	ldrb	r2, [r4, #15]
 80107ba:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 80107be:	1a80      	subs	r0, r0, r2
 80107c0:	1ac0      	subs	r0, r0, r3
 80107c2:	e7c0      	b.n	8010746 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d4>
 80107c4:	2000      	movs	r0, #0
 80107c6:	e7bf      	b.n	8010748 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 80107c8:	7be0      	ldrb	r0, [r4, #15]
 80107ca:	e7bd      	b.n	8010748 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 80107cc:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80107d0:	e7c3      	b.n	801075a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e8>
 80107d2:	9b08      	ldr	r3, [sp, #32]
 80107d4:	2b00      	cmp	r3, #0
 80107d6:	d0f7      	beq.n	80107c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 80107d8:	2264      	movs	r2, #100	; 0x64
 80107da:	4639      	mov	r1, r7
 80107dc:	a84b      	add	r0, sp, #300	; 0x12c
 80107de:	f010 f895 	bl	802090c <memcpy>
 80107e2:	2300      	movs	r3, #0
 80107e4:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80107e8:	6821      	ldr	r1, [r4, #0]
 80107ea:	a84b      	add	r0, sp, #300	; 0x12c
 80107ec:	f7ff fbee 	bl	800ffcc <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80107f0:	b203      	sxth	r3, r0
 80107f2:	e79f      	b.n	8010734 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c2>

080107f4 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 80107f4:	2b03      	cmp	r3, #3
 80107f6:	d818      	bhi.n	801082a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 80107f8:	e8df f003 	tbb	[pc, r3]
 80107fc:	130d0602 	.word	0x130d0602
 8010800:	f9b0 2000 	ldrsh.w	r2, [r0]
 8010804:	1850      	adds	r0, r2, r1
 8010806:	4770      	bx	lr
 8010808:	8803      	ldrh	r3, [r0, #0]
 801080a:	8880      	ldrh	r0, [r0, #4]
 801080c:	4418      	add	r0, r3
 801080e:	b200      	sxth	r0, r0
 8010810:	1a80      	subs	r0, r0, r2
 8010812:	3801      	subs	r0, #1
 8010814:	4770      	bx	lr
 8010816:	8803      	ldrh	r3, [r0, #0]
 8010818:	8880      	ldrh	r0, [r0, #4]
 801081a:	4418      	add	r0, r3
 801081c:	b200      	sxth	r0, r0
 801081e:	1a40      	subs	r0, r0, r1
 8010820:	e7f7      	b.n	8010812 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8010822:	f9b0 0000 	ldrsh.w	r0, [r0]
 8010826:	4410      	add	r0, r2
 8010828:	4770      	bx	lr
 801082a:	2000      	movs	r0, #0
 801082c:	4770      	bx	lr

0801082e <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 801082e:	2b03      	cmp	r3, #3
 8010830:	d817      	bhi.n	8010862 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8010832:	e8df f003 	tbb	[pc, r3]
 8010836:	0602      	.short	0x0602
 8010838:	1009      	.short	0x1009
 801083a:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801083e:	1850      	adds	r0, r2, r1
 8010840:	4770      	bx	lr
 8010842:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8010846:	e7fa      	b.n	801083e <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8010848:	8843      	ldrh	r3, [r0, #2]
 801084a:	88c0      	ldrh	r0, [r0, #6]
 801084c:	4418      	add	r0, r3
 801084e:	b200      	sxth	r0, r0
 8010850:	1a80      	subs	r0, r0, r2
 8010852:	3801      	subs	r0, #1
 8010854:	4770      	bx	lr
 8010856:	8843      	ldrh	r3, [r0, #2]
 8010858:	88c0      	ldrh	r0, [r0, #6]
 801085a:	4418      	add	r0, r3
 801085c:	b200      	sxth	r0, r0
 801085e:	1a40      	subs	r0, r0, r1
 8010860:	e7f7      	b.n	8010852 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8010862:	2000      	movs	r0, #0
 8010864:	4770      	bx	lr
	...

08010868 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8010868:	4b01      	ldr	r3, [pc, #4]	; (8010870 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 801086a:	2200      	movs	r2, #0
 801086c:	601a      	str	r2, [r3, #0]
 801086e:	4770      	bx	lr
 8010870:	20015498 	.word	0x20015498

08010874 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8010874:	4603      	mov	r3, r0
 8010876:	b1c8      	cbz	r0, 80108ac <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8010878:	0c02      	lsrs	r2, r0, #16
 801087a:	0412      	lsls	r2, r2, #16
 801087c:	b9a2      	cbnz	r2, 80108a8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 801087e:	0403      	lsls	r3, r0, #16
 8010880:	2010      	movs	r0, #16
 8010882:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8010886:	bf04      	itt	eq
 8010888:	021b      	lsleq	r3, r3, #8
 801088a:	3008      	addeq	r0, #8
 801088c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8010890:	bf04      	itt	eq
 8010892:	011b      	lsleq	r3, r3, #4
 8010894:	3004      	addeq	r0, #4
 8010896:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801089a:	bf04      	itt	eq
 801089c:	009b      	lsleq	r3, r3, #2
 801089e:	3002      	addeq	r0, #2
 80108a0:	2b00      	cmp	r3, #0
 80108a2:	db04      	blt.n	80108ae <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 80108a4:	3001      	adds	r0, #1
 80108a6:	4770      	bx	lr
 80108a8:	2000      	movs	r0, #0
 80108aa:	e7ea      	b.n	8010882 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 80108ac:	2020      	movs	r0, #32
 80108ae:	4770      	bx	lr

080108b0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 80108b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80108b4:	b087      	sub	sp, #28
 80108b6:	4681      	mov	r9, r0
 80108b8:	4698      	mov	r8, r3
 80108ba:	4610      	mov	r0, r2
 80108bc:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 80108c0:	460d      	mov	r5, r1
 80108c2:	b981      	cbnz	r1, 80108e6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 80108c4:	b14b      	cbz	r3, 80108da <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 80108c6:	460b      	mov	r3, r1
 80108c8:	e9cd 4700 	strd	r4, r7, [sp]
 80108cc:	464a      	mov	r2, r9
 80108ce:	4641      	mov	r1, r8
 80108d0:	f7ff ffee 	bl	80108b0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80108d4:	b007      	add	sp, #28
 80108d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80108da:	f04f 33ff 	mov.w	r3, #4294967295
 80108de:	603b      	str	r3, [r7, #0]
 80108e0:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80108e4:	e7f6      	b.n	80108d4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 80108e6:	fa32 fa01 	lsrs.w	sl, r2, r1
 80108ea:	d107      	bne.n	80108fc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 80108ec:	fb09 f602 	mul.w	r6, r9, r2
 80108f0:	fbb6 f0f4 	udiv	r0, r6, r4
 80108f4:	fb04 6610 	mls	r6, r4, r0, r6
 80108f8:	603e      	str	r6, [r7, #0]
 80108fa:	e7eb      	b.n	80108d4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 80108fc:	2601      	movs	r6, #1
 80108fe:	408e      	lsls	r6, r1
 8010900:	3e01      	subs	r6, #1
 8010902:	4016      	ands	r6, r2
 8010904:	fa09 fb01 	lsl.w	fp, r9, r1
 8010908:	4630      	mov	r0, r6
 801090a:	fbbb f3f4 	udiv	r3, fp, r4
 801090e:	9302      	str	r3, [sp, #8]
 8010910:	fb0a f303 	mul.w	r3, sl, r3
 8010914:	9303      	str	r3, [sp, #12]
 8010916:	f7ff ffad 	bl	8010874 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801091a:	464a      	mov	r2, r9
 801091c:	460b      	mov	r3, r1
 801091e:	e9cd 4700 	strd	r4, r7, [sp]
 8010922:	4601      	mov	r1, r0
 8010924:	4630      	mov	r0, r6
 8010926:	f7ff ffc3 	bl	80108b0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801092a:	9b02      	ldr	r3, [sp, #8]
 801092c:	fb04 bb13 	mls	fp, r4, r3, fp
 8010930:	4606      	mov	r6, r0
 8010932:	4658      	mov	r0, fp
 8010934:	eb05 0108 	add.w	r1, r5, r8
 8010938:	f7ff ff9c 	bl	8010874 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801093c:	ab05      	add	r3, sp, #20
 801093e:	e9cd 4300 	strd	r4, r3, [sp]
 8010942:	465a      	mov	r2, fp
 8010944:	4603      	mov	r3, r0
 8010946:	4650      	mov	r0, sl
 8010948:	f7ff ffb2 	bl	80108b0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801094c:	6839      	ldr	r1, [r7, #0]
 801094e:	9a05      	ldr	r2, [sp, #20]
 8010950:	9b03      	ldr	r3, [sp, #12]
 8010952:	4411      	add	r1, r2
 8010954:	fbb1 f2f4 	udiv	r2, r1, r4
 8010958:	18d3      	adds	r3, r2, r3
 801095a:	441e      	add	r6, r3
 801095c:	fb04 1412 	mls	r4, r4, r2, r1
 8010960:	4430      	add	r0, r6
 8010962:	603c      	str	r4, [r7, #0]
 8010964:	e7b6      	b.n	80108d4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

08010966 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8010966:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801096a:	b085      	sub	sp, #20
 801096c:	f1b0 0900 	subs.w	r9, r0, #0
 8010970:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8010972:	461d      	mov	r5, r3
 8010974:	bfbf      	itttt	lt
 8010976:	6823      	ldrlt	r3, [r4, #0]
 8010978:	425b      	neglt	r3, r3
 801097a:	f1c9 0900 	rsblt	r9, r9, #0
 801097e:	6023      	strlt	r3, [r4, #0]
 8010980:	bfb4      	ite	lt
 8010982:	f04f 36ff 	movlt.w	r6, #4294967295
 8010986:	2601      	movge	r6, #1
 8010988:	2a00      	cmp	r2, #0
 801098a:	4617      	mov	r7, r2
 801098c:	da04      	bge.n	8010998 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 801098e:	6823      	ldr	r3, [r4, #0]
 8010990:	425b      	negs	r3, r3
 8010992:	4257      	negs	r7, r2
 8010994:	4276      	negs	r6, r6
 8010996:	6023      	str	r3, [r4, #0]
 8010998:	2d00      	cmp	r5, #0
 801099a:	4638      	mov	r0, r7
 801099c:	bfba      	itte	lt
 801099e:	426d      	neglt	r5, r5
 80109a0:	f04f 38ff 	movlt.w	r8, #4294967295
 80109a4:	f04f 0801 	movge.w	r8, #1
 80109a8:	f7ff ff64 	bl	8010874 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80109ac:	ab03      	add	r3, sp, #12
 80109ae:	e9cd 5300 	strd	r5, r3, [sp]
 80109b2:	463a      	mov	r2, r7
 80109b4:	4603      	mov	r3, r0
 80109b6:	4648      	mov	r0, r9
 80109b8:	f7ff ff7a 	bl	80108b0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80109bc:	6823      	ldr	r3, [r4, #0]
 80109be:	9a03      	ldr	r2, [sp, #12]
 80109c0:	4546      	cmp	r6, r8
 80109c2:	441a      	add	r2, r3
 80109c4:	fb92 f3f5 	sdiv	r3, r2, r5
 80109c8:	4418      	add	r0, r3
 80109ca:	bf18      	it	ne
 80109cc:	4240      	negne	r0, r0
 80109ce:	fb05 2313 	mls	r3, r5, r3, r2
 80109d2:	1c72      	adds	r2, r6, #1
 80109d4:	6023      	str	r3, [r4, #0]
 80109d6:	d105      	bne.n	80109e4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 80109d8:	2b00      	cmp	r3, #0
 80109da:	f1c3 0200 	rsb	r2, r3, #0
 80109de:	db0b      	blt.n	80109f8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 80109e0:	6022      	str	r2, [r4, #0]
 80109e2:	e006      	b.n	80109f2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80109e4:	2e01      	cmp	r6, #1
 80109e6:	d104      	bne.n	80109f2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80109e8:	2b00      	cmp	r3, #0
 80109ea:	da02      	bge.n	80109f2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80109ec:	442b      	add	r3, r5
 80109ee:	3801      	subs	r0, #1
 80109f0:	6023      	str	r3, [r4, #0]
 80109f2:	b005      	add	sp, #20
 80109f4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80109f8:	3801      	subs	r0, #1
 80109fa:	1b52      	subs	r2, r2, r5
 80109fc:	e7f0      	b.n	80109e0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

08010a00 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8010a00:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8010a04:	4c1c      	ldr	r4, [pc, #112]	; (8010a78 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8010a06:	6807      	ldr	r7, [r0, #0]
 8010a08:	69a3      	ldr	r3, [r4, #24]
 8010a0a:	4605      	mov	r5, r0
 8010a0c:	b92b      	cbnz	r3, 8010a1a <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8010a0e:	6840      	ldr	r0, [r0, #4]
 8010a10:	e9c5 7000 	strd	r7, r0, [r5]
 8010a14:	b004      	add	sp, #16
 8010a16:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010a1a:	68a2      	ldr	r2, [r4, #8]
 8010a1c:	6820      	ldr	r0, [r4, #0]
 8010a1e:	ae04      	add	r6, sp, #16
 8010a20:	f04f 0802 	mov.w	r8, #2
 8010a24:	fb93 f1f8 	sdiv	r1, r3, r8
 8010a28:	440a      	add	r2, r1
 8010a2a:	f846 2d04 	str.w	r2, [r6, #-4]!
 8010a2e:	69e1      	ldr	r1, [r4, #28]
 8010a30:	9600      	str	r6, [sp, #0]
 8010a32:	463a      	mov	r2, r7
 8010a34:	f7ff ff97 	bl	8010966 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010a38:	69a3      	ldr	r3, [r4, #24]
 8010a3a:	686a      	ldr	r2, [r5, #4]
 8010a3c:	6a21      	ldr	r1, [r4, #32]
 8010a3e:	9600      	str	r6, [sp, #0]
 8010a40:	4607      	mov	r7, r0
 8010a42:	6860      	ldr	r0, [r4, #4]
 8010a44:	f7ff ff8f 	bl	8010966 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010a48:	6962      	ldr	r2, [r4, #20]
 8010a4a:	69a3      	ldr	r3, [r4, #24]
 8010a4c:	fb93 f8f8 	sdiv	r8, r3, r8
 8010a50:	4442      	add	r2, r8
 8010a52:	9203      	str	r2, [sp, #12]
 8010a54:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8010a56:	682a      	ldr	r2, [r5, #0]
 8010a58:	9600      	str	r6, [sp, #0]
 8010a5a:	4407      	add	r7, r0
 8010a5c:	68e0      	ldr	r0, [r4, #12]
 8010a5e:	f7ff ff82 	bl	8010966 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010a62:	9600      	str	r6, [sp, #0]
 8010a64:	4680      	mov	r8, r0
 8010a66:	69a3      	ldr	r3, [r4, #24]
 8010a68:	686a      	ldr	r2, [r5, #4]
 8010a6a:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8010a6c:	6920      	ldr	r0, [r4, #16]
 8010a6e:	f7ff ff7a 	bl	8010966 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010a72:	4440      	add	r0, r8
 8010a74:	e7cc      	b.n	8010a10 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8010a76:	bf00      	nop
 8010a78:	2001549c 	.word	0x2001549c

08010a7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8010a7c:	4b07      	ldr	r3, [pc, #28]	; (8010a9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8010a7e:	781b      	ldrb	r3, [r3, #0]
 8010a80:	2b01      	cmp	r3, #1
 8010a82:	d109      	bne.n	8010a98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8010a84:	f9b1 3000 	ldrsh.w	r3, [r1]
 8010a88:	f9b0 2000 	ldrsh.w	r2, [r0]
 8010a8c:	8003      	strh	r3, [r0, #0]
 8010a8e:	4b04      	ldr	r3, [pc, #16]	; (8010aa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8010a90:	881b      	ldrh	r3, [r3, #0]
 8010a92:	3b01      	subs	r3, #1
 8010a94:	1a9b      	subs	r3, r3, r2
 8010a96:	800b      	strh	r3, [r1, #0]
 8010a98:	4770      	bx	lr
 8010a9a:	bf00      	nop
 8010a9c:	20015480 	.word	0x20015480
 8010aa0:	2001547c 	.word	0x2001547c

08010aa4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8010aa4:	b510      	push	{r4, lr}
 8010aa6:	4b07      	ldr	r3, [pc, #28]	; (8010ac4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8010aa8:	781b      	ldrb	r3, [r3, #0]
 8010aaa:	2b01      	cmp	r3, #1
 8010aac:	d108      	bne.n	8010ac0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8010aae:	4b06      	ldr	r3, [pc, #24]	; (8010ac8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8010ab0:	880c      	ldrh	r4, [r1, #0]
 8010ab2:	881b      	ldrh	r3, [r3, #0]
 8010ab4:	f9b0 2000 	ldrsh.w	r2, [r0]
 8010ab8:	3b01      	subs	r3, #1
 8010aba:	1b1b      	subs	r3, r3, r4
 8010abc:	8003      	strh	r3, [r0, #0]
 8010abe:	800a      	strh	r2, [r1, #0]
 8010ac0:	bd10      	pop	{r4, pc}
 8010ac2:	bf00      	nop
 8010ac4:	20015480 	.word	0x20015480
 8010ac8:	2001547c 	.word	0x2001547c

08010acc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8010acc:	b510      	push	{r4, lr}
 8010ace:	4b0a      	ldr	r3, [pc, #40]	; (8010af8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8010ad0:	781b      	ldrb	r3, [r3, #0]
 8010ad2:	2b01      	cmp	r3, #1
 8010ad4:	d10e      	bne.n	8010af4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8010ad6:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8010ada:	8843      	ldrh	r3, [r0, #2]
 8010adc:	f9b0 4000 	ldrsh.w	r4, [r0]
 8010ae0:	8044      	strh	r4, [r0, #2]
 8010ae2:	18ca      	adds	r2, r1, r3
 8010ae4:	4b05      	ldr	r3, [pc, #20]	; (8010afc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8010ae6:	881b      	ldrh	r3, [r3, #0]
 8010ae8:	1a9b      	subs	r3, r3, r2
 8010aea:	8003      	strh	r3, [r0, #0]
 8010aec:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010af0:	80c3      	strh	r3, [r0, #6]
 8010af2:	8081      	strh	r1, [r0, #4]
 8010af4:	bd10      	pop	{r4, pc}
 8010af6:	bf00      	nop
 8010af8:	20015480 	.word	0x20015480
 8010afc:	2001547c 	.word	0x2001547c

08010b00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8010b00:	4b08      	ldr	r3, [pc, #32]	; (8010b24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8010b02:	781b      	ldrb	r3, [r3, #0]
 8010b04:	2b01      	cmp	r3, #1
 8010b06:	d10c      	bne.n	8010b22 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8010b08:	8803      	ldrh	r3, [r0, #0]
 8010b0a:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8010b0e:	8842      	ldrh	r2, [r0, #2]
 8010b10:	8002      	strh	r2, [r0, #0]
 8010b12:	185a      	adds	r2, r3, r1
 8010b14:	4b04      	ldr	r3, [pc, #16]	; (8010b28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8010b16:	881b      	ldrh	r3, [r3, #0]
 8010b18:	1a9b      	subs	r3, r3, r2
 8010b1a:	8043      	strh	r3, [r0, #2]
 8010b1c:	88c3      	ldrh	r3, [r0, #6]
 8010b1e:	8083      	strh	r3, [r0, #4]
 8010b20:	80c1      	strh	r1, [r0, #6]
 8010b22:	4770      	bx	lr
 8010b24:	20015480 	.word	0x20015480
 8010b28:	2001547c 	.word	0x2001547c

08010b2c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8010b2c:	b510      	push	{r4, lr}
 8010b2e:	4b07      	ldr	r3, [pc, #28]	; (8010b4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8010b30:	781b      	ldrb	r3, [r3, #0]
 8010b32:	2b01      	cmp	r3, #1
 8010b34:	d108      	bne.n	8010b48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8010b36:	f9b1 3000 	ldrsh.w	r3, [r1]
 8010b3a:	f9b0 4000 	ldrsh.w	r4, [r0]
 8010b3e:	8003      	strh	r3, [r0, #0]
 8010b40:	8893      	ldrh	r3, [r2, #4]
 8010b42:	3b01      	subs	r3, #1
 8010b44:	1b1b      	subs	r3, r3, r4
 8010b46:	800b      	strh	r3, [r1, #0]
 8010b48:	bd10      	pop	{r4, pc}
 8010b4a:	bf00      	nop
 8010b4c:	20015480 	.word	0x20015480

08010b50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8010b50:	b510      	push	{r4, lr}
 8010b52:	4b0a      	ldr	r3, [pc, #40]	; (8010b7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8010b54:	781b      	ldrb	r3, [r3, #0]
 8010b56:	2b01      	cmp	r3, #1
 8010b58:	460a      	mov	r2, r1
 8010b5a:	d10d      	bne.n	8010b78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8010b5c:	8881      	ldrh	r1, [r0, #4]
 8010b5e:	8803      	ldrh	r3, [r0, #0]
 8010b60:	440b      	add	r3, r1
 8010b62:	4601      	mov	r1, r0
 8010b64:	3b01      	subs	r3, #1
 8010b66:	f821 3b02 	strh.w	r3, [r1], #2
 8010b6a:	f7ff ffdf 	bl	8010b2c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8010b6e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010b72:	88c2      	ldrh	r2, [r0, #6]
 8010b74:	8082      	strh	r2, [r0, #4]
 8010b76:	80c3      	strh	r3, [r0, #6]
 8010b78:	bd10      	pop	{r4, pc}
 8010b7a:	bf00      	nop
 8010b7c:	20015480 	.word	0x20015480

08010b80 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8010b80:	b570      	push	{r4, r5, r6, lr}
 8010b82:	4c0b      	ldr	r4, [pc, #44]	; (8010bb0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8010b84:	2300      	movs	r3, #0
 8010b86:	4605      	mov	r5, r0
 8010b88:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 8010b8c:	6820      	ldr	r0, [r4, #0]
 8010b8e:	460e      	mov	r6, r1
 8010b90:	b110      	cbz	r0, 8010b98 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x18>
 8010b92:	6803      	ldr	r3, [r0, #0]
 8010b94:	695b      	ldr	r3, [r3, #20]
 8010b96:	4798      	blx	r3
 8010b98:	6026      	str	r6, [r4, #0]
 8010b9a:	6833      	ldr	r3, [r6, #0]
 8010b9c:	4630      	mov	r0, r6
 8010b9e:	68db      	ldr	r3, [r3, #12]
 8010ba0:	4798      	blx	r3
 8010ba2:	682b      	ldr	r3, [r5, #0]
 8010ba4:	4628      	mov	r0, r5
 8010ba6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010ba8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010bac:	4718      	bx	r3
 8010bae:	bf00      	nop
 8010bb0:	200154cc 	.word	0x200154cc

08010bb4 <_ZN8touchgfx11Application13requestRedrawEv>:
 8010bb4:	4b06      	ldr	r3, [pc, #24]	; (8010bd0 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8010bb6:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010bba:	4b06      	ldr	r3, [pc, #24]	; (8010bd4 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8010bbc:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 8010bc0:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010bc4:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 8010bc8:	2100      	movs	r1, #0
 8010bca:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 8010bce:	4770      	bx	lr
 8010bd0:	2001547c 	.word	0x2001547c
 8010bd4:	2001547e 	.word	0x2001547e

08010bd8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8010bd8:	4b03      	ldr	r3, [pc, #12]	; (8010be8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8010bda:	6818      	ldr	r0, [r3, #0]
 8010bdc:	b110      	cbz	r0, 8010be4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8010bde:	6803      	ldr	r3, [r0, #0]
 8010be0:	699b      	ldr	r3, [r3, #24]
 8010be2:	4718      	bx	r3
 8010be4:	4770      	bx	lr
 8010be6:	bf00      	nop
 8010be8:	200154cc 	.word	0x200154cc

08010bec <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8010bec:	4770      	bx	lr
	...

08010bf0 <_ZN8touchgfx11Application4drawEv>:
 8010bf0:	b507      	push	{r0, r1, r2, lr}
 8010bf2:	4b09      	ldr	r3, [pc, #36]	; (8010c18 <_ZN8touchgfx11Application4drawEv+0x28>)
 8010bf4:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010bf8:	4b08      	ldr	r3, [pc, #32]	; (8010c1c <_ZN8touchgfx11Application4drawEv+0x2c>)
 8010bfa:	f8ad 2004 	strh.w	r2, [sp, #4]
 8010bfe:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010c02:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010c06:	6803      	ldr	r3, [r0, #0]
 8010c08:	2100      	movs	r1, #0
 8010c0a:	9100      	str	r1, [sp, #0]
 8010c0c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010c0e:	4669      	mov	r1, sp
 8010c10:	4798      	blx	r3
 8010c12:	b003      	add	sp, #12
 8010c14:	f85d fb04 	ldr.w	pc, [sp], #4
 8010c18:	2001547c 	.word	0x2001547c
 8010c1c:	2001547e 	.word	0x2001547e

08010c20 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8010c20:	4b03      	ldr	r3, [pc, #12]	; (8010c30 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8010c22:	6818      	ldr	r0, [r3, #0]
 8010c24:	b110      	cbz	r0, 8010c2c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8010c26:	6803      	ldr	r3, [r0, #0]
 8010c28:	69db      	ldr	r3, [r3, #28]
 8010c2a:	4718      	bx	r3
 8010c2c:	4770      	bx	lr
 8010c2e:	bf00      	nop
 8010c30:	200154cc 	.word	0x200154cc

08010c34 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8010c34:	4b03      	ldr	r3, [pc, #12]	; (8010c44 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8010c36:	6818      	ldr	r0, [r3, #0]
 8010c38:	b110      	cbz	r0, 8010c40 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8010c3a:	6803      	ldr	r3, [r0, #0]
 8010c3c:	6a1b      	ldr	r3, [r3, #32]
 8010c3e:	4718      	bx	r3
 8010c40:	4770      	bx	lr
 8010c42:	bf00      	nop
 8010c44:	200154cc 	.word	0x200154cc

08010c48 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8010c48:	2300      	movs	r3, #0
 8010c4a:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 8010c4e:	4770      	bx	lr

08010c50 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8010c50:	4b03      	ldr	r3, [pc, #12]	; (8010c60 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8010c52:	6818      	ldr	r0, [r3, #0]
 8010c54:	b110      	cbz	r0, 8010c5c <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8010c56:	6803      	ldr	r3, [r0, #0]
 8010c58:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010c5a:	4718      	bx	r3
 8010c5c:	4770      	bx	lr
 8010c5e:	bf00      	nop
 8010c60:	200154cc 	.word	0x200154cc

08010c64 <_ZN8touchgfx11Application15handleTickEventEv>:
 8010c64:	b570      	push	{r4, r5, r6, lr}
 8010c66:	4d32      	ldr	r5, [pc, #200]	; (8010d30 <_ZN8touchgfx11Application15handleTickEventEv+0xcc>)
 8010c68:	4604      	mov	r4, r0
 8010c6a:	6828      	ldr	r0, [r5, #0]
 8010c6c:	b140      	cbz	r0, 8010c80 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8010c6e:	7a03      	ldrb	r3, [r0, #8]
 8010c70:	b933      	cbnz	r3, 8010c80 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8010c72:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 8010c76:	6803      	ldr	r3, [r0, #0]
 8010c78:	689b      	ldr	r3, [r3, #8]
 8010c7a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010c7e:	4718      	bx	r3
 8010c80:	f894 3134 	ldrb.w	r3, [r4, #308]	; 0x134
 8010c84:	b97b      	cbnz	r3, 8010ca6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010c86:	b170      	cbz	r0, 8010ca6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010c88:	7a03      	ldrb	r3, [r0, #8]
 8010c8a:	b163      	cbz	r3, 8010ca6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010c8c:	4b29      	ldr	r3, [pc, #164]	; (8010d34 <_ZN8touchgfx11Application15handleTickEventEv+0xd0>)
 8010c8e:	6818      	ldr	r0, [r3, #0]
 8010c90:	b110      	cbz	r0, 8010c98 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8010c92:	6803      	ldr	r3, [r0, #0]
 8010c94:	691b      	ldr	r3, [r3, #16]
 8010c96:	4798      	blx	r3
 8010c98:	6828      	ldr	r0, [r5, #0]
 8010c9a:	6803      	ldr	r3, [r0, #0]
 8010c9c:	68db      	ldr	r3, [r3, #12]
 8010c9e:	4798      	blx	r3
 8010ca0:	2301      	movs	r3, #1
 8010ca2:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 8010ca6:	2500      	movs	r5, #0
 8010ca8:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 8010cac:	42a8      	cmp	r0, r5
 8010cae:	dd0c      	ble.n	8010cca <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 8010cb0:	1963      	adds	r3, r4, r5
 8010cb2:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 8010cb6:	b132      	cbz	r2, 8010cc6 <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 8010cb8:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 8010cbc:	4413      	add	r3, r2
 8010cbe:	6858      	ldr	r0, [r3, #4]
 8010cc0:	6803      	ldr	r3, [r0, #0]
 8010cc2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8010cc4:	4798      	blx	r3
 8010cc6:	3501      	adds	r5, #1
 8010cc8:	e7ee      	b.n	8010ca8 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 8010cca:	2300      	movs	r3, #0
 8010ccc:	461a      	mov	r2, r3
 8010cce:	4298      	cmp	r0, r3
 8010cd0:	d015      	beq.n	8010cfe <_ZN8touchgfx11Application15handleTickEventEv+0x9a>
 8010cd2:	18e1      	adds	r1, r4, r3
 8010cd4:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 8010cd8:	b16d      	cbz	r5, 8010cf6 <_ZN8touchgfx11Application15handleTickEventEv+0x92>
 8010cda:	429a      	cmp	r2, r3
 8010cdc:	d00a      	beq.n	8010cf4 <_ZN8touchgfx11Application15handleTickEventEv+0x90>
 8010cde:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 8010ce2:	4431      	add	r1, r6
 8010ce4:	684e      	ldr	r6, [r1, #4]
 8010ce6:	b291      	uxth	r1, r2
 8010ce8:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8010cec:	604e      	str	r6, [r1, #4]
 8010cee:	18a1      	adds	r1, r4, r2
 8010cf0:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 8010cf4:	3201      	adds	r2, #1
 8010cf6:	3301      	adds	r3, #1
 8010cf8:	e7e9      	b.n	8010cce <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 8010cfa:	f8a4 3084 	strh.w	r3, [r4, #132]	; 0x84
 8010cfe:	f8b4 5084 	ldrh.w	r5, [r4, #132]	; 0x84
 8010d02:	4295      	cmp	r5, r2
 8010d04:	dd0d      	ble.n	8010d22 <_ZN8touchgfx11Application15handleTickEventEv+0xbe>
 8010d06:	1e6b      	subs	r3, r5, #1
 8010d08:	b29b      	uxth	r3, r3
 8010d0a:	eb04 0183 	add.w	r1, r4, r3, lsl #2
 8010d0e:	4618      	mov	r0, r3
 8010d10:	3104      	adds	r1, #4
 8010d12:	4285      	cmp	r5, r0
 8010d14:	ddf1      	ble.n	8010cfa <_ZN8touchgfx11Application15handleTickEventEv+0x96>
 8010d16:	f851 6f04 	ldr.w	r6, [r1, #4]!
 8010d1a:	f841 6c04 	str.w	r6, [r1, #-4]
 8010d1e:	3001      	adds	r0, #1
 8010d20:	e7f7      	b.n	8010d12 <_ZN8touchgfx11Application15handleTickEventEv+0xae>
 8010d22:	4b04      	ldr	r3, [pc, #16]	; (8010d34 <_ZN8touchgfx11Application15handleTickEventEv+0xd0>)
 8010d24:	6818      	ldr	r0, [r3, #0]
 8010d26:	b110      	cbz	r0, 8010d2e <_ZN8touchgfx11Application15handleTickEventEv+0xca>
 8010d28:	6803      	ldr	r3, [r0, #0]
 8010d2a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010d2c:	e7a5      	b.n	8010c7a <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8010d2e:	bd70      	pop	{r4, r5, r6, pc}
 8010d30:	200154d0 	.word	0x200154d0
 8010d34:	200154cc 	.word	0x200154cc

08010d38 <_ZN8touchgfx11ApplicationD1Ev>:
 8010d38:	4770      	bx	lr

08010d3a <_ZN8touchgfx11ApplicationD0Ev>:
 8010d3a:	b510      	push	{r4, lr}
 8010d3c:	f44f 719c 	mov.w	r1, #312	; 0x138
 8010d40:	4604      	mov	r4, r0
 8010d42:	f00f fbb7 	bl	80204b4 <_ZdlPvj>
 8010d46:	4620      	mov	r0, r4
 8010d48:	bd10      	pop	{r4, pc}

08010d4a <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8010d4a:	b510      	push	{r4, lr}
 8010d4c:	f9b1 4000 	ldrsh.w	r4, [r1]
 8010d50:	888a      	ldrh	r2, [r1, #4]
 8010d52:	f9b0 3000 	ldrsh.w	r3, [r0]
 8010d56:	4422      	add	r2, r4
 8010d58:	b212      	sxth	r2, r2
 8010d5a:	4293      	cmp	r3, r2
 8010d5c:	da15      	bge.n	8010d8a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8010d5e:	8882      	ldrh	r2, [r0, #4]
 8010d60:	4413      	add	r3, r2
 8010d62:	b21b      	sxth	r3, r3
 8010d64:	429c      	cmp	r4, r3
 8010d66:	da10      	bge.n	8010d8a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8010d68:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8010d6c:	88c9      	ldrh	r1, [r1, #6]
 8010d6e:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8010d72:	4419      	add	r1, r3
 8010d74:	b209      	sxth	r1, r1
 8010d76:	428a      	cmp	r2, r1
 8010d78:	da07      	bge.n	8010d8a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8010d7a:	88c0      	ldrh	r0, [r0, #6]
 8010d7c:	4410      	add	r0, r2
 8010d7e:	b200      	sxth	r0, r0
 8010d80:	4283      	cmp	r3, r0
 8010d82:	bfac      	ite	ge
 8010d84:	2000      	movge	r0, #0
 8010d86:	2001      	movlt	r0, #1
 8010d88:	bd10      	pop	{r4, pc}
 8010d8a:	2000      	movs	r0, #0
 8010d8c:	e7fc      	b.n	8010d88 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08010d8e <_ZN8touchgfx4Rect10restrictToEss>:
 8010d8e:	f9b0 3000 	ldrsh.w	r3, [r0]
 8010d92:	2b00      	cmp	r3, #0
 8010d94:	b510      	push	{r4, lr}
 8010d96:	da04      	bge.n	8010da2 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8010d98:	8884      	ldrh	r4, [r0, #4]
 8010d9a:	4423      	add	r3, r4
 8010d9c:	8083      	strh	r3, [r0, #4]
 8010d9e:	2300      	movs	r3, #0
 8010da0:	8003      	strh	r3, [r0, #0]
 8010da2:	f9b0 4000 	ldrsh.w	r4, [r0]
 8010da6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010daa:	1b09      	subs	r1, r1, r4
 8010dac:	428b      	cmp	r3, r1
 8010dae:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8010db2:	bfc8      	it	gt
 8010db4:	8081      	strhgt	r1, [r0, #4]
 8010db6:	2b00      	cmp	r3, #0
 8010db8:	da04      	bge.n	8010dc4 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8010dba:	88c1      	ldrh	r1, [r0, #6]
 8010dbc:	440b      	add	r3, r1
 8010dbe:	80c3      	strh	r3, [r0, #6]
 8010dc0:	2300      	movs	r3, #0
 8010dc2:	8043      	strh	r3, [r0, #2]
 8010dc4:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8010dc8:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8010dcc:	1a52      	subs	r2, r2, r1
 8010dce:	4293      	cmp	r3, r2
 8010dd0:	bfc8      	it	gt
 8010dd2:	80c2      	strhgt	r2, [r0, #6]
 8010dd4:	bd10      	pop	{r4, pc}
	...

08010dd8 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8010dd8:	b510      	push	{r4, lr}
 8010dda:	4b10      	ldr	r3, [pc, #64]	; (8010e1c <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8010ddc:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010de0:	4b0f      	ldr	r3, [pc, #60]	; (8010e20 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8010de2:	460c      	mov	r4, r1
 8010de4:	4620      	mov	r0, r4
 8010de6:	f9b3 1000 	ldrsh.w	r1, [r3]
 8010dea:	f7ff ffd0 	bl	8010d8e <_ZN8touchgfx4Rect10restrictToEss>
 8010dee:	4b0d      	ldr	r3, [pc, #52]	; (8010e24 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8010df0:	6818      	ldr	r0, [r3, #0]
 8010df2:	b190      	cbz	r0, 8010e1a <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8010df4:	6803      	ldr	r3, [r0, #0]
 8010df6:	4621      	mov	r1, r4
 8010df8:	689b      	ldr	r3, [r3, #8]
 8010dfa:	4798      	blx	r3
 8010dfc:	4b0a      	ldr	r3, [pc, #40]	; (8010e28 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8010dfe:	6818      	ldr	r0, [r3, #0]
 8010e00:	b118      	cbz	r0, 8010e0a <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8010e02:	6803      	ldr	r3, [r0, #0]
 8010e04:	4621      	mov	r1, r4
 8010e06:	689b      	ldr	r3, [r3, #8]
 8010e08:	4798      	blx	r3
 8010e0a:	4b08      	ldr	r3, [pc, #32]	; (8010e2c <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8010e0c:	6818      	ldr	r0, [r3, #0]
 8010e0e:	6803      	ldr	r3, [r0, #0]
 8010e10:	4621      	mov	r1, r4
 8010e12:	69db      	ldr	r3, [r3, #28]
 8010e14:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010e18:	4718      	bx	r3
 8010e1a:	bd10      	pop	{r4, pc}
 8010e1c:	2001547e 	.word	0x2001547e
 8010e20:	2001547c 	.word	0x2001547c
 8010e24:	200154cc 	.word	0x200154cc
 8010e28:	200154c8 	.word	0x200154c8
 8010e2c:	20015488 	.word	0x20015488

08010e30 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8010e30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010e32:	4606      	mov	r6, r0
 8010e34:	4608      	mov	r0, r1
 8010e36:	460f      	mov	r7, r1
 8010e38:	f7f9 fec3 	bl	800abc2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010e3c:	b9e8      	cbnz	r0, 8010e7a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8010e3e:	f9b7 5000 	ldrsh.w	r5, [r7]
 8010e42:	f9b6 4000 	ldrsh.w	r4, [r6]
 8010e46:	42a5      	cmp	r5, r4
 8010e48:	db17      	blt.n	8010e7a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8010e4a:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8010e4e:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8010e52:	429a      	cmp	r2, r3
 8010e54:	db11      	blt.n	8010e7a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8010e56:	88b9      	ldrh	r1, [r7, #4]
 8010e58:	440d      	add	r5, r1
 8010e5a:	88b1      	ldrh	r1, [r6, #4]
 8010e5c:	440c      	add	r4, r1
 8010e5e:	b22d      	sxth	r5, r5
 8010e60:	b224      	sxth	r4, r4
 8010e62:	42a5      	cmp	r5, r4
 8010e64:	dc09      	bgt.n	8010e7a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8010e66:	88f8      	ldrh	r0, [r7, #6]
 8010e68:	4410      	add	r0, r2
 8010e6a:	88f2      	ldrh	r2, [r6, #6]
 8010e6c:	4413      	add	r3, r2
 8010e6e:	b200      	sxth	r0, r0
 8010e70:	b21b      	sxth	r3, r3
 8010e72:	4298      	cmp	r0, r3
 8010e74:	bfcc      	ite	gt
 8010e76:	2000      	movgt	r0, #0
 8010e78:	2001      	movle	r0, #1
 8010e7a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08010e7c <_ZN8touchgfx11Application11getInstanceEv>:
 8010e7c:	4b01      	ldr	r3, [pc, #4]	; (8010e84 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8010e7e:	6818      	ldr	r0, [r3, #0]
 8010e80:	4770      	bx	lr
 8010e82:	bf00      	nop
 8010e84:	200154dc 	.word	0x200154dc

08010e88 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 8010e88:	2300      	movs	r3, #0
 8010e8a:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 8010e8e:	f100 0288 	add.w	r2, r0, #136	; 0x88
 8010e92:	30a8      	adds	r0, #168	; 0xa8
 8010e94:	f802 3b01 	strb.w	r3, [r2], #1
 8010e98:	4282      	cmp	r2, r0
 8010e9a:	d1fb      	bne.n	8010e94 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 8010e9c:	4770      	bx	lr

08010e9e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8010e9e:	4603      	mov	r3, r0
 8010ea0:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8010ea4:	2200      	movs	r2, #0
 8010ea6:	801a      	strh	r2, [r3, #0]
 8010ea8:	805a      	strh	r2, [r3, #2]
 8010eaa:	809a      	strh	r2, [r3, #4]
 8010eac:	80da      	strh	r2, [r3, #6]
 8010eae:	3308      	adds	r3, #8
 8010eb0:	428b      	cmp	r3, r1
 8010eb2:	d1f8      	bne.n	8010ea6 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8010eb4:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8010eb8:	4770      	bx	lr
	...

08010ebc <_ZN8touchgfx11ApplicationC1Ev>:
 8010ebc:	b570      	push	{r4, r5, r6, lr}
 8010ebe:	4b19      	ldr	r3, [pc, #100]	; (8010f24 <_ZN8touchgfx11ApplicationC1Ev+0x68>)
 8010ec0:	6003      	str	r3, [r0, #0]
 8010ec2:	2500      	movs	r5, #0
 8010ec4:	4604      	mov	r4, r0
 8010ec6:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 8010eca:	30a8      	adds	r0, #168	; 0xa8
 8010ecc:	f7ff ffe7 	bl	8010e9e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8010ed0:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 8010ed4:	f7ff ffe3 	bl	8010e9e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8010ed8:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 8010edc:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 8010ee0:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8010ee4:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8010ee8:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 8010eec:	490e      	ldr	r1, [pc, #56]	; (8010f28 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 8010eee:	480f      	ldr	r0, [pc, #60]	; (8010f2c <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 8010ef0:	4e0f      	ldr	r6, [pc, #60]	; (8010f30 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 8010ef2:	f00e fec3 	bl	801fc7c <CRC_Lock>
 8010ef6:	4b0f      	ldr	r3, [pc, #60]	; (8010f34 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8010ef8:	b158      	cbz	r0, 8010f12 <_ZN8touchgfx11ApplicationC1Ev+0x56>
 8010efa:	801d      	strh	r5, [r3, #0]
 8010efc:	4a0e      	ldr	r2, [pc, #56]	; (8010f38 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8010efe:	2300      	movs	r3, #0
 8010f00:	6013      	str	r3, [r2, #0]
 8010f02:	4a0e      	ldr	r2, [pc, #56]	; (8010f3c <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8010f04:	6033      	str	r3, [r6, #0]
 8010f06:	4620      	mov	r0, r4
 8010f08:	6013      	str	r3, [r2, #0]
 8010f0a:	f7ff ffbd 	bl	8010e88 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 8010f0e:	4620      	mov	r0, r4
 8010f10:	bd70      	pop	{r4, r5, r6, pc}
 8010f12:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8010f16:	2002      	movs	r0, #2
 8010f18:	801a      	strh	r2, [r3, #0]
 8010f1a:	6030      	str	r0, [r6, #0]
 8010f1c:	f001 fae8 	bl	80124f0 <_ZN8touchgfx6Screen4drawEv>
 8010f20:	e7ec      	b.n	8010efc <_ZN8touchgfx11ApplicationC1Ev+0x40>
 8010f22:	bf00      	nop
 8010f24:	08024068 	.word	0x08024068
 8010f28:	b5e8b5cd 	.word	0xb5e8b5cd
 8010f2c:	f407a5c2 	.word	0xf407a5c2
 8010f30:	200154cc 	.word	0x200154cc
 8010f34:	2000008c 	.word	0x2000008c
 8010f38:	200154dc 	.word	0x200154dc
 8010f3c:	200154d0 	.word	0x200154d0

08010f40 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8010f40:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8010f44:	3b01      	subs	r3, #1
 8010f46:	b29b      	uxth	r3, r3
 8010f48:	428b      	cmp	r3, r1
 8010f4a:	b510      	push	{r4, lr}
 8010f4c:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8010f50:	d908      	bls.n	8010f64 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8010f52:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8010f56:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8010f5a:	681a      	ldr	r2, [r3, #0]
 8010f5c:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8010f60:	685a      	ldr	r2, [r3, #4]
 8010f62:	6062      	str	r2, [r4, #4]
 8010f64:	bd10      	pop	{r4, pc}
	...

08010f68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8010f68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010f6c:	4b94      	ldr	r3, [pc, #592]	; (80111c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 8010f6e:	b08f      	sub	sp, #60	; 0x3c
 8010f70:	ac0a      	add	r4, sp, #40	; 0x28
 8010f72:	e884 0006 	stmia.w	r4, {r1, r2}
 8010f76:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010f7a:	4b92      	ldr	r3, [pc, #584]	; (80111c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>)
 8010f7c:	4683      	mov	fp, r0
 8010f7e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8010f82:	4620      	mov	r0, r4
 8010f84:	f7ff ff03 	bl	8010d8e <_ZN8touchgfx4Rect10restrictToEss>
 8010f88:	4620      	mov	r0, r4
 8010f8a:	f7f9 fe1a 	bl	800abc2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010f8e:	2800      	cmp	r0, #0
 8010f90:	d16a      	bne.n	8011068 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8010f92:	9403      	str	r4, [sp, #12]
 8010f94:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 8010f98:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 8010f9c:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 8010fa0:	2400      	movs	r4, #0
 8010fa2:	9301      	str	r3, [sp, #4]
 8010fa4:	36a0      	adds	r6, #160	; 0xa0
 8010fa6:	42a5      	cmp	r5, r4
 8010fa8:	d00d      	beq.n	8010fc6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 8010faa:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 8010fae:	9803      	ldr	r0, [sp, #12]
 8010fb0:	f7ff ff3e 	bl	8010e30 <_ZNK8touchgfx4Rect8includesERKS0_>
 8010fb4:	b128      	cbz	r0, 8010fc2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 8010fb6:	1e69      	subs	r1, r5, #1
 8010fb8:	1b09      	subs	r1, r1, r4
 8010fba:	b289      	uxth	r1, r1
 8010fbc:	9801      	ldr	r0, [sp, #4]
 8010fbe:	f7ff ffbf 	bl	8010f40 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010fc2:	3401      	adds	r4, #1
 8010fc4:	e7ef      	b.n	8010fa6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e>
 8010fc6:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 8010fca:	9704      	str	r7, [sp, #16]
 8010fcc:	1e7b      	subs	r3, r7, #1
 8010fce:	9302      	str	r3, [sp, #8]
 8010fd0:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 8010fd4:	2400      	movs	r4, #0
 8010fd6:	4655      	mov	r5, sl
 8010fd8:	9705      	str	r7, [sp, #20]
 8010fda:	4626      	mov	r6, r4
 8010fdc:	9b05      	ldr	r3, [sp, #20]
 8010fde:	2b00      	cmp	r3, #0
 8010fe0:	d078      	beq.n	80110d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x16c>
 8010fe2:	9903      	ldr	r1, [sp, #12]
 8010fe4:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 8010fe8:	f7ff feaf 	bl	8010d4a <_ZNK8touchgfx4Rect9intersectERKS0_>
 8010fec:	b360      	cbz	r0, 8011048 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8010fee:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8010ff2:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 8010ff6:	f9bd 902a 	ldrsh.w	r9, [sp, #42]	; 0x2a
 8010ffa:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 8010ffe:	45e6      	cmp	lr, ip
 8011000:	db35      	blt.n	801106e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8011002:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8011006:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 801100a:	4472      	add	r2, lr
 801100c:	4463      	add	r3, ip
 801100e:	b212      	sxth	r2, r2
 8011010:	b21b      	sxth	r3, r3
 8011012:	429a      	cmp	r2, r3
 8011014:	dc2b      	bgt.n	801106e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8011016:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 801101a:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801101e:	fa1f f288 	uxth.w	r2, r8
 8011022:	4413      	add	r3, r2
 8011024:	b29b      	uxth	r3, r3
 8011026:	45c1      	cmp	r9, r8
 8011028:	fa0f fe83 	sxth.w	lr, r3
 801102c:	fa1f fc89 	uxth.w	ip, r9
 8011030:	db0f      	blt.n	8011052 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8011032:	eba3 030c 	sub.w	r3, r3, ip
 8011036:	1ac9      	subs	r1, r1, r3
 8011038:	b209      	sxth	r1, r1
 801103a:	2900      	cmp	r1, #0
 801103c:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8011040:	dd12      	ble.n	8011068 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8011042:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8011046:	4604      	mov	r4, r0
 8011048:	9b05      	ldr	r3, [sp, #20]
 801104a:	3b01      	subs	r3, #1
 801104c:	9305      	str	r3, [sp, #20]
 801104e:	3d08      	subs	r5, #8
 8011050:	e7c4      	b.n	8010fdc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x74>
 8011052:	4461      	add	r1, ip
 8011054:	b209      	sxth	r1, r1
 8011056:	4571      	cmp	r1, lr
 8011058:	dc3a      	bgt.n	80110d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 801105a:	eba2 020c 	sub.w	r2, r2, ip
 801105e:	b212      	sxth	r2, r2
 8011060:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8011064:	2a00      	cmp	r2, #0
 8011066:	dcee      	bgt.n	8011046 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8011068:	b00f      	add	sp, #60	; 0x3c
 801106a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801106e:	45c1      	cmp	r9, r8
 8011070:	db2e      	blt.n	80110d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8011072:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8011076:	4499      	add	r9, r3
 8011078:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 801107c:	4498      	add	r8, r3
 801107e:	fa0f f989 	sxth.w	r9, r9
 8011082:	fa0f f888 	sxth.w	r8, r8
 8011086:	45c1      	cmp	r9, r8
 8011088:	dc22      	bgt.n	80110d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 801108a:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 801108e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8011092:	fa1f f28c 	uxth.w	r2, ip
 8011096:	4413      	add	r3, r2
 8011098:	b29b      	uxth	r3, r3
 801109a:	45e6      	cmp	lr, ip
 801109c:	fa1f f88e 	uxth.w	r8, lr
 80110a0:	fa0f f983 	sxth.w	r9, r3
 80110a4:	db0a      	blt.n	80110bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x154>
 80110a6:	eba3 0308 	sub.w	r3, r3, r8
 80110aa:	1ac9      	subs	r1, r1, r3
 80110ac:	b209      	sxth	r1, r1
 80110ae:	2900      	cmp	r1, #0
 80110b0:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 80110b4:	ddd8      	ble.n	8011068 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80110b6:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80110ba:	e7c4      	b.n	8011046 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80110bc:	4441      	add	r1, r8
 80110be:	b209      	sxth	r1, r1
 80110c0:	4549      	cmp	r1, r9
 80110c2:	dc05      	bgt.n	80110d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80110c4:	eba2 0208 	sub.w	r2, r2, r8
 80110c8:	b212      	sxth	r2, r2
 80110ca:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80110ce:	e7c9      	b.n	8011064 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 80110d0:	4606      	mov	r6, r0
 80110d2:	e7b9      	b.n	8011048 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80110d4:	2c00      	cmp	r4, #0
 80110d6:	f47f af7d 	bne.w	8010fd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c>
 80110da:	2e00      	cmp	r6, #0
 80110dc:	f000 81e1 	beq.w	80114a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 80110e0:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 80110e4:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 80110e8:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80110ec:	b2b9      	uxth	r1, r7
 80110ee:	9105      	str	r1, [sp, #20]
 80110f0:	9805      	ldr	r0, [sp, #20]
 80110f2:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80110f6:	4401      	add	r1, r0
 80110f8:	b2b3      	uxth	r3, r6
 80110fa:	b289      	uxth	r1, r1
 80110fc:	441a      	add	r2, r3
 80110fe:	9106      	str	r1, [sp, #24]
 8011100:	b292      	uxth	r2, r2
 8011102:	f9bd 9018 	ldrsh.w	r9, [sp, #24]
 8011106:	fa0f f882 	sxth.w	r8, r2
 801110a:	4655      	mov	r5, sl
 801110c:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8011110:	9b04      	ldr	r3, [sp, #16]
 8011112:	2b00      	cmp	r3, #0
 8011114:	d058      	beq.n	80111c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x260>
 8011116:	9903      	ldr	r1, [sp, #12]
 8011118:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 801111c:	f7ff fe15 	bl	8010d4a <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011120:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8011124:	b1d8      	cbz	r0, 801115e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8011126:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 801112a:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 801112e:	4576      	cmp	r6, lr
 8011130:	dc26      	bgt.n	8011180 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 8011132:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 8011136:	44f4      	add	ip, lr
 8011138:	fa0f fc8c 	sxth.w	ip, ip
 801113c:	45e0      	cmp	r8, ip
 801113e:	db1f      	blt.n	8011180 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 8011140:	428f      	cmp	r7, r1
 8011142:	fa1f fc81 	uxth.w	ip, r1
 8011146:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 801114a:	dc0f      	bgt.n	801116c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x204>
 801114c:	9806      	ldr	r0, [sp, #24]
 801114e:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 8011152:	eba0 0c0c 	sub.w	ip, r0, ip
 8011156:	eba1 010c 	sub.w	r1, r1, ip
 801115a:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 801115e:	4620      	mov	r0, r4
 8011160:	9904      	ldr	r1, [sp, #16]
 8011162:	3901      	subs	r1, #1
 8011164:	9104      	str	r1, [sp, #16]
 8011166:	3d08      	subs	r5, #8
 8011168:	4604      	mov	r4, r0
 801116a:	e7cf      	b.n	801110c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a4>
 801116c:	4461      	add	r1, ip
 801116e:	b209      	sxth	r1, r1
 8011170:	4549      	cmp	r1, r9
 8011172:	dcf5      	bgt.n	8011160 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8011174:	9905      	ldr	r1, [sp, #20]
 8011176:	eba1 0c0c 	sub.w	ip, r1, ip
 801117a:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 801117e:	e7ee      	b.n	801115e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8011180:	428f      	cmp	r7, r1
 8011182:	dced      	bgt.n	8011160 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8011184:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 8011188:	4461      	add	r1, ip
 801118a:	b209      	sxth	r1, r1
 801118c:	4589      	cmp	r9, r1
 801118e:	dbe7      	blt.n	8011160 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8011190:	4576      	cmp	r6, lr
 8011192:	fa1f fc8e 	uxth.w	ip, lr
 8011196:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 801119a:	dc08      	bgt.n	80111ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 801119c:	eba2 0c0c 	sub.w	ip, r2, ip
 80111a0:	eba1 010c 	sub.w	r1, r1, ip
 80111a4:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 80111a8:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 80111ac:	e7d7      	b.n	801115e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 80111ae:	4461      	add	r1, ip
 80111b0:	b209      	sxth	r1, r1
 80111b2:	4588      	cmp	r8, r1
 80111b4:	dbd4      	blt.n	8011160 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 80111b6:	eba3 0c0c 	sub.w	ip, r3, ip
 80111ba:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 80111be:	e7ce      	b.n	801115e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 80111c0:	2001547e 	.word	0x2001547e
 80111c4:	2001547c 	.word	0x2001547c
 80111c8:	2c00      	cmp	r4, #0
 80111ca:	f000 816a 	beq.w	80114a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 80111ce:	9b02      	ldr	r3, [sp, #8]
 80111d0:	3301      	adds	r3, #1
 80111d2:	f000 8166 	beq.w	80114a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 80111d6:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 80111da:	4621      	mov	r1, r4
 80111dc:	9803      	ldr	r0, [sp, #12]
 80111de:	f7ff fe27 	bl	8010e30 <_ZNK8touchgfx4Rect8includesERKS0_>
 80111e2:	b120      	cbz	r0, 80111ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x286>
 80111e4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80111e8:	9801      	ldr	r0, [sp, #4]
 80111ea:	f7ff fea9 	bl	8010f40 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80111ee:	9903      	ldr	r1, [sp, #12]
 80111f0:	4620      	mov	r0, r4
 80111f2:	f7ff fdaa 	bl	8010d4a <_ZNK8touchgfx4Rect9intersectERKS0_>
 80111f6:	2800      	cmp	r0, #0
 80111f8:	f000 809b 	beq.w	8011332 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 80111fc:	f9ba 00a0 	ldrsh.w	r0, [sl, #160]	; 0xa0
 8011200:	f9ba 30a4 	ldrsh.w	r3, [sl, #164]	; 0xa4
 8011204:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 8011208:	9309      	str	r3, [sp, #36]	; 0x24
 801120a:	b281      	uxth	r1, r0
 801120c:	eb01 0c03 	add.w	ip, r1, r3
 8011210:	fa1f f98c 	uxth.w	r9, ip
 8011214:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8011218:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 801121c:	f9ba 20a2 	ldrsh.w	r2, [sl, #162]	; 0xa2
 8011220:	b2ab      	uxth	r3, r5
 8011222:	eb03 040c 	add.w	r4, r3, ip
 8011226:	b2a4      	uxth	r4, r4
 8011228:	9405      	str	r4, [sp, #20]
 801122a:	f9bd 4014 	ldrsh.w	r4, [sp, #20]
 801122e:	9404      	str	r4, [sp, #16]
 8011230:	4285      	cmp	r5, r0
 8011232:	f8bb 40e8 	ldrh.w	r4, [fp, #232]	; 0xe8
 8011236:	f340 809a 	ble.w	801136e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x406>
 801123a:	1a5b      	subs	r3, r3, r1
 801123c:	b29b      	uxth	r3, r3
 801123e:	4596      	cmp	lr, r2
 8011240:	fa0f f589 	sxth.w	r5, r9
 8011244:	b21e      	sxth	r6, r3
 8011246:	dd2e      	ble.n	80112a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x33e>
 8011248:	9f02      	ldr	r7, [sp, #8]
 801124a:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 801124e:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8011252:	9f04      	ldr	r7, [sp, #16]
 8011254:	1b7f      	subs	r7, r7, r5
 8011256:	f8b8 50ae 	ldrh.w	r5, [r8, #174]	; 0xae
 801125a:	fa1f fe8e 	uxth.w	lr, lr
 801125e:	b292      	uxth	r2, r2
 8011260:	ebae 0102 	sub.w	r1, lr, r2
 8011264:	4486      	add	lr, r0
 8011266:	442a      	add	r2, r5
 8011268:	b289      	uxth	r1, r1
 801126a:	fa0f fe8e 	sxth.w	lr, lr
 801126e:	b212      	sxth	r2, r2
 8011270:	b20c      	sxth	r4, r1
 8011272:	ebae 0202 	sub.w	r2, lr, r2
 8011276:	4367      	muls	r7, r4
 8011278:	4372      	muls	r2, r6
 801127a:	4297      	cmp	r7, r2
 801127c:	db09      	blt.n	8011292 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32a>
 801127e:	f8b8 20a8 	ldrh.w	r2, [r8, #168]	; 0xa8
 8011282:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 8011286:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801128a:	449c      	add	ip, r3
 801128c:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8011290:	e680      	b.n	8010f94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011292:	4401      	add	r1, r0
 8011294:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 8011298:	f8a8 60ac 	strh.w	r6, [r8, #172]	; 0xac
 801129c:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80112a0:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80112a4:	e676      	b.n	8010f94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80112a6:	9f04      	ldr	r7, [sp, #16]
 80112a8:	42bd      	cmp	r5, r7
 80112aa:	da27      	bge.n	80112fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x394>
 80112ac:	9902      	ldr	r1, [sp, #8]
 80112ae:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 80112b2:	eb0b 00c1 	add.w	r0, fp, r1, lsl #3
 80112b6:	eb04 010e 	add.w	r1, r4, lr
 80112ba:	fa1f f881 	uxth.w	r8, r1
 80112be:	f8b0 10ae 	ldrh.w	r1, [r0, #174]	; 0xae
 80112c2:	4411      	add	r1, r2
 80112c4:	eba1 0108 	sub.w	r1, r1, r8
 80112c8:	b289      	uxth	r1, r1
 80112ca:	fa0f f988 	sxth.w	r9, r8
 80112ce:	eba2 020e 	sub.w	r2, r2, lr
 80112d2:	fa0f f881 	sxth.w	r8, r1
 80112d6:	1b7f      	subs	r7, r7, r5
 80112d8:	4372      	muls	r2, r6
 80112da:	fb08 f707 	mul.w	r7, r8, r7
 80112de:	42ba      	cmp	r2, r7
 80112e0:	dc06      	bgt.n	80112f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 80112e2:	f8a0 90aa 	strh.w	r9, [r0, #170]	; 0xaa
 80112e6:	f8a0 80ae 	strh.w	r8, [r0, #174]	; 0xae
 80112ea:	f8b0 20a8 	ldrh.w	r2, [r0, #168]	; 0xa8
 80112ee:	e7ca      	b.n	8011286 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 80112f0:	f8a0 60ac 	strh.w	r6, [r0, #172]	; 0xac
 80112f4:	4421      	add	r1, r4
 80112f6:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80112fa:	e64b      	b.n	8010f94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80112fc:	9d05      	ldr	r5, [sp, #20]
 80112fe:	eba9 0505 	sub.w	r5, r9, r5
 8011302:	b2ad      	uxth	r5, r5
 8011304:	2c06      	cmp	r4, #6
 8011306:	fa0f fe85 	sxth.w	lr, r5
 801130a:	d818      	bhi.n	801133e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d6>
 801130c:	9b04      	ldr	r3, [sp, #16]
 801130e:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 8011312:	1c63      	adds	r3, r4, #1
 8011314:	f9ba 10a6 	ldrsh.w	r1, [sl, #166]	; 0xa6
 8011318:	f8aa e0a4 	strh.w	lr, [sl, #164]	; 0xa4
 801131c:	f8ab 30e8 	strh.w	r3, [fp, #232]	; 0xe8
 8011320:	9b01      	ldr	r3, [sp, #4]
 8011322:	9d01      	ldr	r5, [sp, #4]
 8011324:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8011328:	f825 0034 	strh.w	r0, [r5, r4, lsl #3]
 801132c:	805a      	strh	r2, [r3, #2]
 801132e:	809e      	strh	r6, [r3, #4]
 8011330:	80d9      	strh	r1, [r3, #6]
 8011332:	9b02      	ldr	r3, [sp, #8]
 8011334:	3b01      	subs	r3, #1
 8011336:	9302      	str	r3, [sp, #8]
 8011338:	f1aa 0a08 	sub.w	sl, sl, #8
 801133c:	e747      	b.n	80111ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x266>
 801133e:	9a02      	ldr	r2, [sp, #8]
 8011340:	45b6      	cmp	lr, r6
 8011342:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8011346:	db0d      	blt.n	8011364 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fc>
 8011348:	449c      	add	ip, r3
 801134a:	fa1f fc8c 	uxth.w	ip, ip
 801134e:	445a      	add	r2, fp
 8011350:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8011354:	448c      	add	ip, r1
 8011356:	f8ad 0028 	strh.w	r0, [sp, #40]	; 0x28
 801135a:	f8a2 c0a8 	strh.w	ip, [r2, #168]	; 0xa8
 801135e:	f8a2 e0ac 	strh.w	lr, [r2, #172]	; 0xac
 8011362:	e617      	b.n	8010f94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011364:	445a      	add	r2, fp
 8011366:	44ac      	add	ip, r5
 8011368:	f8a2 60ac 	strh.w	r6, [r2, #172]	; 0xac
 801136c:	e78e      	b.n	801128c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 801136e:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8011372:	fa1f f18e 	uxth.w	r1, lr
 8011376:	eb01 0806 	add.w	r8, r1, r6
 801137a:	b293      	uxth	r3, r2
 801137c:	fa1f f888 	uxth.w	r8, r8
 8011380:	9306      	str	r3, [sp, #24]
 8011382:	fa0f f388 	sxth.w	r3, r8
 8011386:	9307      	str	r3, [sp, #28]
 8011388:	9f06      	ldr	r7, [sp, #24]
 801138a:	f8ba 30a6 	ldrh.w	r3, [sl, #166]	; 0xa6
 801138e:	443b      	add	r3, r7
 8011390:	b29b      	uxth	r3, r3
 8011392:	4596      	cmp	lr, r2
 8011394:	9308      	str	r3, [sp, #32]
 8011396:	da25      	bge.n	80113e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
 8011398:	9905      	ldr	r1, [sp, #20]
 801139a:	eba3 0308 	sub.w	r3, r3, r8
 801139e:	eba9 0401 	sub.w	r4, r9, r1
 80113a2:	b2a4      	uxth	r4, r4
 80113a4:	b29b      	uxth	r3, r3
 80113a6:	fa0f f984 	sxth.w	r9, r4
 80113aa:	b219      	sxth	r1, r3
 80113ac:	eba2 020e 	sub.w	r2, r2, lr
 80113b0:	1b40      	subs	r0, r0, r5
 80113b2:	fb09 f202 	mul.w	r2, r9, r2
 80113b6:	4348      	muls	r0, r1
 80113b8:	4282      	cmp	r2, r0
 80113ba:	9a02      	ldr	r2, [sp, #8]
 80113bc:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80113c0:	445a      	add	r2, fp
 80113c2:	dc06      	bgt.n	80113d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 80113c4:	9b07      	ldr	r3, [sp, #28]
 80113c6:	f8a2 10ae 	strh.w	r1, [r2, #174]	; 0xae
 80113ca:	f8a2 30aa 	strh.w	r3, [r2, #170]	; 0xaa
 80113ce:	44a4      	add	ip, r4
 80113d0:	e75c      	b.n	801128c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 80113d2:	9904      	ldr	r1, [sp, #16]
 80113d4:	f8a2 90ac 	strh.w	r9, [r2, #172]	; 0xac
 80113d8:	f8a2 10a8 	strh.w	r1, [r2, #168]	; 0xa8
 80113dc:	4433      	add	r3, r6
 80113de:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80113e2:	e5d7      	b.n	8010f94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80113e4:	9f06      	ldr	r7, [sp, #24]
 80113e6:	9b04      	ldr	r3, [sp, #16]
 80113e8:	1bc9      	subs	r1, r1, r7
 80113ea:	fa0f f789 	sxth.w	r7, r9
 80113ee:	b289      	uxth	r1, r1
 80113f0:	429f      	cmp	r7, r3
 80113f2:	fa0f fe81 	sxth.w	lr, r1
 80113f6:	dd22      	ble.n	801143e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d6>
 80113f8:	9a05      	ldr	r2, [sp, #20]
 80113fa:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80113fe:	1b40      	subs	r0, r0, r5
 8011400:	eba9 0202 	sub.w	r2, r9, r2
 8011404:	9d07      	ldr	r5, [sp, #28]
 8011406:	b292      	uxth	r2, r2
 8011408:	eba5 0a03 	sub.w	sl, r5, r3
 801140c:	b214      	sxth	r4, r2
 801140e:	9b02      	ldr	r3, [sp, #8]
 8011410:	fb0e f000 	mul.w	r0, lr, r0
 8011414:	fb04 fa0a 	mul.w	sl, r4, sl
 8011418:	00db      	lsls	r3, r3, #3
 801141a:	4550      	cmp	r0, sl
 801141c:	445b      	add	r3, fp
 801141e:	db03      	blt.n	8011428 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c0>
 8011420:	f8a3 e0ae 	strh.w	lr, [r3, #174]	; 0xae
 8011424:	4494      	add	ip, r2
 8011426:	e731      	b.n	801128c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 8011428:	9a04      	ldr	r2, [sp, #16]
 801142a:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 801142e:	f8a3 40ac 	strh.w	r4, [r3, #172]	; 0xac
 8011432:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 8011436:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801143a:	4431      	add	r1, r6
 801143c:	e75b      	b.n	80112f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38e>
 801143e:	9b08      	ldr	r3, [sp, #32]
 8011440:	eba3 0308 	sub.w	r3, r3, r8
 8011444:	b29b      	uxth	r3, r3
 8011446:	2c06      	cmp	r4, #6
 8011448:	b21d      	sxth	r5, r3
 801144a:	d813      	bhi.n	8011474 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50c>
 801144c:	9b07      	ldr	r3, [sp, #28]
 801144e:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 8011452:	1c63      	adds	r3, r4, #1
 8011454:	f8aa 50a6 	strh.w	r5, [sl, #166]	; 0xa6
 8011458:	f8ab 30e8 	strh.w	r3, [fp, #232]	; 0xe8
 801145c:	9b01      	ldr	r3, [sp, #4]
 801145e:	9901      	ldr	r1, [sp, #4]
 8011460:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8011464:	f821 0034 	strh.w	r0, [r1, r4, lsl #3]
 8011468:	805a      	strh	r2, [r3, #2]
 801146a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801146c:	809a      	strh	r2, [r3, #4]
 801146e:	f8a3 e006 	strh.w	lr, [r3, #6]
 8011472:	e75e      	b.n	8011332 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 8011474:	9802      	ldr	r0, [sp, #8]
 8011476:	4575      	cmp	r5, lr
 8011478:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 801147c:	db0d      	blt.n	801149a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x532>
 801147e:	4431      	add	r1, r6
 8011480:	9b06      	ldr	r3, [sp, #24]
 8011482:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8011486:	b289      	uxth	r1, r1
 8011488:	4458      	add	r0, fp
 801148a:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801148e:	4419      	add	r1, r3
 8011490:	f8a0 10aa 	strh.w	r1, [r0, #170]	; 0xaa
 8011494:	f8a0 50ae 	strh.w	r5, [r0, #174]	; 0xae
 8011498:	e57c      	b.n	8010f94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801149a:	4458      	add	r0, fp
 801149c:	f8a0 e0ae 	strh.w	lr, [r0, #174]	; 0xae
 80114a0:	e79c      	b.n	80113dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
 80114a2:	f8bb 60e8 	ldrh.w	r6, [fp, #232]	; 0xe8
 80114a6:	2e07      	cmp	r6, #7
 80114a8:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 80114ac:	d812      	bhi.n	80114d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56c>
 80114ae:	1c75      	adds	r5, r6, #1
 80114b0:	f8ab 50e8 	strh.w	r5, [fp, #232]	; 0xe8
 80114b4:	9d01      	ldr	r5, [sp, #4]
 80114b6:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 80114ba:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80114be:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80114c2:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 80114c6:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 80114ca:	442c      	add	r4, r5
 80114cc:	8061      	strh	r1, [r4, #2]
 80114ce:	80a2      	strh	r2, [r4, #4]
 80114d0:	80e3      	strh	r3, [r4, #6]
 80114d2:	e5c9      	b.n	8011068 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80114d4:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 80114d8:	3e01      	subs	r6, #1
 80114da:	445c      	add	r4, fp
 80114dc:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 80114e0:	f04f 37ff 	mov.w	r7, #4294967295
 80114e4:	2500      	movs	r5, #0
 80114e6:	9305      	str	r3, [sp, #20]
 80114e8:	f9b4 30a4 	ldrsh.w	r3, [r4, #164]	; 0xa4
 80114ec:	9302      	str	r3, [sp, #8]
 80114ee:	1e72      	subs	r2, r6, #1
 80114f0:	f9b4 30a6 	ldrsh.w	r3, [r4, #166]	; 0xa6
 80114f4:	9304      	str	r3, [sp, #16]
 80114f6:	4691      	mov	r9, r2
 80114f8:	f104 03a0 	add.w	r3, r4, #160	; 0xa0
 80114fc:	f1b9 3fff 	cmp.w	r9, #4294967295
 8011500:	bf14      	ite	ne
 8011502:	9905      	ldrne	r1, [sp, #20]
 8011504:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8011508:	6818      	ldr	r0, [r3, #0]
 801150a:	9207      	str	r2, [sp, #28]
 801150c:	bf18      	it	ne
 801150e:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8011512:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8011516:	f8be 1006 	ldrh.w	r1, [lr, #6]
 801151a:	f8be 8004 	ldrh.w	r8, [lr, #4]
 801151e:	9306      	str	r3, [sp, #24]
 8011520:	fb18 f801 	smulbb	r8, r8, r1
 8011524:	6859      	ldr	r1, [r3, #4]
 8011526:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801152a:	4671      	mov	r1, lr
 801152c:	a80c      	add	r0, sp, #48	; 0x30
 801152e:	f7fb f86d 	bl	800c60c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8011532:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8011536:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 801153a:	9b04      	ldr	r3, [sp, #16]
 801153c:	9a02      	ldr	r2, [sp, #8]
 801153e:	fb10 f001 	smulbb	r0, r0, r1
 8011542:	fb02 8803 	mla	r8, r2, r3, r8
 8011546:	eba0 0108 	sub.w	r1, r0, r8
 801154a:	f04f 0c08 	mov.w	ip, #8
 801154e:	fb90 f0fc 	sdiv	r0, r0, ip
 8011552:	4288      	cmp	r0, r1
 8011554:	dc20      	bgt.n	8011598 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x630>
 8011556:	4551      	cmp	r1, sl
 8011558:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 801155c:	da03      	bge.n	8011566 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 801155e:	b1d9      	cbz	r1, 8011598 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x630>
 8011560:	468a      	mov	sl, r1
 8011562:	464f      	mov	r7, r9
 8011564:	4635      	mov	r5, r6
 8011566:	f109 39ff 	add.w	r9, r9, #4294967295
 801156a:	f119 0f02 	cmn.w	r9, #2
 801156e:	d1c5      	bne.n	80114fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8011570:	4616      	mov	r6, r2
 8011572:	3201      	adds	r2, #1
 8011574:	f1a4 0408 	sub.w	r4, r4, #8
 8011578:	d1b6      	bne.n	80114e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x580>
 801157a:	9b01      	ldr	r3, [sp, #4]
 801157c:	b2ac      	uxth	r4, r5
 801157e:	00ed      	lsls	r5, r5, #3
 8011580:	1958      	adds	r0, r3, r5
 8011582:	1c7b      	adds	r3, r7, #1
 8011584:	d10b      	bne.n	801159e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x636>
 8011586:	4601      	mov	r1, r0
 8011588:	9803      	ldr	r0, [sp, #12]
 801158a:	f7fb f83f 	bl	800c60c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801158e:	4621      	mov	r1, r4
 8011590:	9801      	ldr	r0, [sp, #4]
 8011592:	f7ff fcd5 	bl	8010f40 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011596:	e4fd      	b.n	8010f94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011598:	464f      	mov	r7, r9
 801159a:	4635      	mov	r5, r6
 801159c:	e7ed      	b.n	801157a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x612>
 801159e:	9b01      	ldr	r3, [sp, #4]
 80115a0:	00ff      	lsls	r7, r7, #3
 80115a2:	19d9      	adds	r1, r3, r7
 80115a4:	f7fb f832 	bl	800c60c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80115a8:	9b03      	ldr	r3, [sp, #12]
 80115aa:	cb03      	ldmia	r3!, {r0, r1}
 80115ac:	445f      	add	r7, fp
 80115ae:	445d      	add	r5, fp
 80115b0:	f8c7 00a8 	str.w	r0, [r7, #168]	; 0xa8
 80115b4:	f8c7 10ac 	str.w	r1, [r7, #172]	; 0xac
 80115b8:	f855 0fa8 	ldr.w	r0, [r5, #168]!
 80115bc:	9b03      	ldr	r3, [sp, #12]
 80115be:	6869      	ldr	r1, [r5, #4]
 80115c0:	c303      	stmia	r3!, {r0, r1}
 80115c2:	e7e4      	b.n	801158e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x626>

080115c4 <_ZN8touchgfx11Application10invalidateEv>:
 80115c4:	4b09      	ldr	r3, [pc, #36]	; (80115ec <_ZN8touchgfx11Application10invalidateEv+0x28>)
 80115c6:	f9b3 2000 	ldrsh.w	r2, [r3]
 80115ca:	4b09      	ldr	r3, [pc, #36]	; (80115f0 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 80115cc:	b082      	sub	sp, #8
 80115ce:	f9b3 3000 	ldrsh.w	r3, [r3]
 80115d2:	f8ad 3006 	strh.w	r3, [sp, #6]
 80115d6:	2100      	movs	r1, #0
 80115d8:	9100      	str	r1, [sp, #0]
 80115da:	f8ad 2004 	strh.w	r2, [sp, #4]
 80115de:	ab02      	add	r3, sp, #8
 80115e0:	e913 0006 	ldmdb	r3, {r1, r2}
 80115e4:	b002      	add	sp, #8
 80115e6:	f7ff bcbf 	b.w	8010f68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 80115ea:	bf00      	nop
 80115ec:	2001547c 	.word	0x2001547c
 80115f0:	2001547e 	.word	0x2001547e

080115f4 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 80115f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80115f8:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 80115fc:	b09b      	sub	sp, #108	; 0x6c
 80115fe:	4604      	mov	r4, r0
 8011600:	4630      	mov	r0, r6
 8011602:	f7f9 fade 	bl	800abc2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011606:	4605      	mov	r5, r0
 8011608:	b940      	cbnz	r0, 801161c <_ZN8touchgfx11Application15drawCachedAreasEv+0x28>
 801160a:	e896 0006 	ldmia.w	r6, {r1, r2}
 801160e:	4620      	mov	r0, r4
 8011610:	f7ff fcaa 	bl	8010f68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8011614:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 8011618:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 801161c:	4bc9      	ldr	r3, [pc, #804]	; (8011944 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 801161e:	681b      	ldr	r3, [r3, #0]
 8011620:	2b00      	cmp	r3, #0
 8011622:	d03e      	beq.n	80116a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 8011624:	4dc8      	ldr	r5, [pc, #800]	; (8011948 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8011626:	4628      	mov	r0, r5
 8011628:	f7f9 facb 	bl	800abc2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801162c:	4606      	mov	r6, r0
 801162e:	2800      	cmp	r0, #0
 8011630:	d137      	bne.n	80116a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 8011632:	4628      	mov	r0, r5
 8011634:	f7ff fa4a 	bl	8010acc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8011638:	6829      	ldr	r1, [r5, #0]
 801163a:	686a      	ldr	r2, [r5, #4]
 801163c:	4620      	mov	r0, r4
 801163e:	f7ff fc93 	bl	8010f68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8011642:	802e      	strh	r6, [r5, #0]
 8011644:	806e      	strh	r6, [r5, #2]
 8011646:	80ae      	strh	r6, [r5, #4]
 8011648:	80ee      	strh	r6, [r5, #6]
 801164a:	ae09      	add	r6, sp, #36	; 0x24
 801164c:	4630      	mov	r0, r6
 801164e:	f7ff fc26 	bl	8010e9e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8011652:	4abe      	ldr	r2, [pc, #760]	; (801194c <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8011654:	f8b4 70e8 	ldrh.w	r7, [r4, #232]	; 0xe8
 8011658:	8815      	ldrh	r5, [r2, #0]
 801165a:	9202      	str	r2, [sp, #8]
 801165c:	462b      	mov	r3, r5
 801165e:	f104 00a8 	add.w	r0, r4, #168	; 0xa8
 8011662:	429f      	cmp	r7, r3
 8011664:	d924      	bls.n	80116b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbc>
 8011666:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 801166a:	2907      	cmp	r1, #7
 801166c:	d816      	bhi.n	801169c <_ZN8touchgfx11Application15drawCachedAreasEv+0xa8>
 801166e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8011672:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 8011676:	f9b2 9002 	ldrsh.w	r9, [r2, #2]
 801167a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 801167e:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8011682:	1c4a      	adds	r2, r1, #1
 8011684:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8011688:	eb06 02c1 	add.w	r2, r6, r1, lsl #3
 801168c:	f826 8031 	strh.w	r8, [r6, r1, lsl #3]
 8011690:	f8a2 9002 	strh.w	r9, [r2, #2]
 8011694:	f8a2 e004 	strh.w	lr, [r2, #4]
 8011698:	f8a2 c006 	strh.w	ip, [r2, #6]
 801169c:	3301      	adds	r3, #1
 801169e:	b29b      	uxth	r3, r3
 80116a0:	e7df      	b.n	8011662 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6e>
 80116a2:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 80116a6:	2b00      	cmp	r3, #0
 80116a8:	d1cf      	bne.n	801164a <_ZN8touchgfx11Application15drawCachedAreasEv+0x56>
 80116aa:	b01b      	add	sp, #108	; 0x6c
 80116ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80116b0:	462f      	mov	r7, r5
 80116b2:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 80116b6:	42bb      	cmp	r3, r7
 80116b8:	d90b      	bls.n	80116d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xde>
 80116ba:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
 80116be:	4620      	mov	r0, r4
 80116c0:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 80116c4:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 80116c8:	3701      	adds	r7, #1
 80116ca:	f7ff fc4d 	bl	8010f68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 80116ce:	b2bf      	uxth	r7, r7
 80116d0:	e7ef      	b.n	80116b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbe>
 80116d2:	4a9f      	ldr	r2, [pc, #636]	; (8011950 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 80116d4:	6813      	ldr	r3, [r2, #0]
 80116d6:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 80116da:	2b01      	cmp	r3, #1
 80116dc:	4690      	mov	r8, r2
 80116de:	f040 80e6 	bne.w	80118ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ba>
 80116e2:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 80116e6:	f8b4 70e8 	ldrh.w	r7, [r4, #232]	; 0xe8
 80116ea:	4629      	mov	r1, r5
 80116ec:	33aa      	adds	r3, #170	; 0xaa
 80116ee:	2500      	movs	r5, #0
 80116f0:	428f      	cmp	r7, r1
 80116f2:	f103 0308 	add.w	r3, r3, #8
 80116f6:	dd0a      	ble.n	801170e <_ZN8touchgfx11Application15drawCachedAreasEv+0x11a>
 80116f8:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 80116fc:	f833 0c04 	ldrh.w	r0, [r3, #-4]
 8011700:	4402      	add	r2, r0
 8011702:	b212      	sxth	r2, r2
 8011704:	4295      	cmp	r5, r2
 8011706:	bfb8      	it	lt
 8011708:	4615      	movlt	r5, r2
 801170a:	3101      	adds	r1, #1
 801170c:	e7f0      	b.n	80116f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xfc>
 801170e:	4b91      	ldr	r3, [pc, #580]	; (8011954 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8011710:	f8df b23c 	ldr.w	fp, [pc, #572]	; 8011950 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>
 8011714:	881b      	ldrh	r3, [r3, #0]
 8011716:	2b0f      	cmp	r3, #15
 8011718:	bf88      	it	hi
 801171a:	ea4f 0ad3 	movhi.w	sl, r3, lsr #3
 801171e:	f04f 0300 	mov.w	r3, #0
 8011722:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8011726:	bf98      	it	ls
 8011728:	f04f 0a01 	movls.w	sl, #1
 801172c:	46d8      	mov	r8, fp
 801172e:	f8bd 701a 	ldrh.w	r7, [sp, #26]
 8011732:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 8011736:	4438      	add	r0, r7
 8011738:	b207      	sxth	r7, r0
 801173a:	f8db 0000 	ldr.w	r0, [fp]
 801173e:	42bd      	cmp	r5, r7
 8011740:	6803      	ldr	r3, [r0, #0]
 8011742:	f340 8084 	ble.w	801184e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8011746:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 801174a:	4798      	blx	r3
 801174c:	eb07 030a 	add.w	r3, r7, sl
 8011750:	4298      	cmp	r0, r3
 8011752:	da07      	bge.n	8011764 <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 8011754:	4285      	cmp	r5, r0
 8011756:	dd05      	ble.n	8011764 <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 8011758:	4287      	cmp	r7, r0
 801175a:	dd6d      	ble.n	8011838 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801175c:	2f00      	cmp	r7, #0
 801175e:	dd6b      	ble.n	8011838 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8011760:	4628      	mov	r0, r5
 8011762:	e004      	b.n	801176e <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 8011764:	4287      	cmp	r7, r0
 8011766:	dcfb      	bgt.n	8011760 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16c>
 8011768:	42a8      	cmp	r0, r5
 801176a:	bfa8      	it	ge
 801176c:	4628      	movge	r0, r5
 801176e:	4b7a      	ldr	r3, [pc, #488]	; (8011958 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>)
 8011770:	f8ad 7016 	strh.w	r7, [sp, #22]
 8011774:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011778:	f8ad 3018 	strh.w	r3, [sp, #24]
 801177c:	9b02      	ldr	r3, [sp, #8]
 801177e:	1bc0      	subs	r0, r0, r7
 8011780:	2200      	movs	r2, #0
 8011782:	881f      	ldrh	r7, [r3, #0]
 8011784:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011788:	f8ad 001a 	strh.w	r0, [sp, #26]
 801178c:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8011790:	42bb      	cmp	r3, r7
 8011792:	d9cc      	bls.n	801172e <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 8011794:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8011798:	ab07      	add	r3, sp, #28
 801179a:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 801179e:	6851      	ldr	r1, [r2, #4]
 80117a0:	c303      	stmia	r3!, {r0, r1}
 80117a2:	a905      	add	r1, sp, #20
 80117a4:	a807      	add	r0, sp, #28
 80117a6:	f7ff fad0 	bl	8010d4a <_ZNK8touchgfx4Rect9intersectERKS0_>
 80117aa:	2800      	cmp	r0, #0
 80117ac:	d04c      	beq.n	8011848 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 80117ae:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 80117b2:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 80117b6:	f8bd 9020 	ldrh.w	r9, [sp, #32]
 80117ba:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 80117be:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80117c2:	9303      	str	r3, [sp, #12]
 80117c4:	4686      	mov	lr, r0
 80117c6:	4290      	cmp	r0, r2
 80117c8:	4448      	add	r0, r9
 80117ca:	f8bd 9018 	ldrh.w	r9, [sp, #24]
 80117ce:	bfb8      	it	lt
 80117d0:	4696      	movlt	lr, r2
 80117d2:	444a      	add	r2, r9
 80117d4:	4299      	cmp	r1, r3
 80117d6:	b280      	uxth	r0, r0
 80117d8:	b292      	uxth	r2, r2
 80117da:	468c      	mov	ip, r1
 80117dc:	fa0f f982 	sxth.w	r9, r2
 80117e0:	bfb8      	it	lt
 80117e2:	469c      	movlt	ip, r3
 80117e4:	b203      	sxth	r3, r0
 80117e6:	454b      	cmp	r3, r9
 80117e8:	bfb8      	it	lt
 80117ea:	4602      	movlt	r2, r0
 80117ec:	eba2 020e 	sub.w	r2, r2, lr
 80117f0:	f8ad 2020 	strh.w	r2, [sp, #32]
 80117f4:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 80117f8:	9b03      	ldr	r3, [sp, #12]
 80117fa:	f8ad e01c 	strh.w	lr, [sp, #28]
 80117fe:	4411      	add	r1, r2
 8011800:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8011804:	f8ad c01e 	strh.w	ip, [sp, #30]
 8011808:	4413      	add	r3, r2
 801180a:	b289      	uxth	r1, r1
 801180c:	b29b      	uxth	r3, r3
 801180e:	b208      	sxth	r0, r1
 8011810:	b21a      	sxth	r2, r3
 8011812:	4290      	cmp	r0, r2
 8011814:	bfb8      	it	lt
 8011816:	460b      	movlt	r3, r1
 8011818:	eba3 030c 	sub.w	r3, r3, ip
 801181c:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8011820:	a807      	add	r0, sp, #28
 8011822:	f7f9 f9ce 	bl	800abc2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011826:	b920      	cbnz	r0, 8011832 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8011828:	6823      	ldr	r3, [r4, #0]
 801182a:	a907      	add	r1, sp, #28
 801182c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801182e:	4620      	mov	r0, r4
 8011830:	4798      	blx	r3
 8011832:	3701      	adds	r7, #1
 8011834:	b2bf      	uxth	r7, r7
 8011836:	e7a9      	b.n	801178c <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8011838:	f8d8 0000 	ldr.w	r0, [r8]
 801183c:	6803      	ldr	r3, [r0, #0]
 801183e:	2101      	movs	r1, #1
 8011840:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8011844:	4798      	blx	r3
 8011846:	e772      	b.n	801172e <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 8011848:	e9cd 0007 	strd	r0, r0, [sp, #28]
 801184c:	e7e8      	b.n	8011820 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 801184e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011850:	4798      	blx	r3
 8011852:	4b42      	ldr	r3, [pc, #264]	; (801195c <_ZN8touchgfx11Application15drawCachedAreasEv+0x368>)
 8011854:	781b      	ldrb	r3, [r3, #0]
 8011856:	2b00      	cmp	r3, #0
 8011858:	f43f af27 	beq.w	80116aa <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 801185c:	2300      	movs	r3, #0
 801185e:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 8011862:	9b02      	ldr	r3, [sp, #8]
 8011864:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8011868:	881b      	ldrh	r3, [r3, #0]
 801186a:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 801186e:	429d      	cmp	r5, r3
 8011870:	f67f af1b 	bls.w	80116aa <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 8011874:	f8b4 112a 	ldrh.w	r1, [r4, #298]	; 0x12a
 8011878:	2907      	cmp	r1, #7
 801187a:	d815      	bhi.n	80118a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b4>
 801187c:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 8011880:	f936 8033 	ldrsh.w	r8, [r6, r3, lsl #3]
 8011884:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 8011888:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 801188c:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 8011890:	1c4a      	adds	r2, r1, #1
 8011892:	f8a4 212a 	strh.w	r2, [r4, #298]	; 0x12a
 8011896:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 801189a:	f820 8031 	strh.w	r8, [r0, r1, lsl #3]
 801189e:	f8a2 e002 	strh.w	lr, [r2, #2]
 80118a2:	f8a2 c004 	strh.w	ip, [r2, #4]
 80118a6:	80d7      	strh	r7, [r2, #6]
 80118a8:	3301      	adds	r3, #1
 80118aa:	b29b      	uxth	r3, r3
 80118ac:	e7df      	b.n	801186e <_ZN8touchgfx11Application15drawCachedAreasEv+0x27a>
 80118ae:	2b02      	cmp	r3, #2
 80118b0:	f040 8136 	bne.w	8011b20 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 80118b4:	4b2a      	ldr	r3, [pc, #168]	; (8011960 <_ZN8touchgfx11Application15drawCachedAreasEv+0x36c>)
 80118b6:	781b      	ldrb	r3, [r3, #0]
 80118b8:	2b01      	cmp	r3, #1
 80118ba:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 80118be:	f000 809c 	beq.w	80119fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 80118c2:	9b02      	ldr	r3, [sp, #8]
 80118c4:	f8b4 20e8 	ldrh.w	r2, [r4, #232]	; 0xe8
 80118c8:	f8b3 b000 	ldrh.w	fp, [r3]
 80118cc:	f10b 0b01 	add.w	fp, fp, #1
 80118d0:	fa1f fb8b 	uxth.w	fp, fp
 80118d4:	2a00      	cmp	r2, #0
 80118d6:	d0bc      	beq.n	8011852 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80118d8:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 80118dc:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 80118e0:	441d      	add	r5, r3
 80118e2:	b22d      	sxth	r5, r5
 80118e4:	4659      	mov	r1, fp
 80118e6:	f04f 0800 	mov.w	r8, #0
 80118ea:	b28b      	uxth	r3, r1
 80118ec:	429a      	cmp	r2, r3
 80118ee:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 80118f2:	f240 80c1 	bls.w	8011a78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x484>
 80118f6:	4427      	add	r7, r4
 80118f8:	eb04 0ec1 	add.w	lr, r4, r1, lsl #3
 80118fc:	f9b7 30aa 	ldrsh.w	r3, [r7, #170]	; 0xaa
 8011900:	f9be c0aa 	ldrsh.w	ip, [lr, #170]	; 0xaa
 8011904:	4563      	cmp	r3, ip
 8011906:	4608      	mov	r0, r1
 8011908:	f340 80a3 	ble.w	8011a52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
 801190c:	f8be 50ae 	ldrh.w	r5, [lr, #174]	; 0xae
 8011910:	4465      	add	r5, ip
 8011912:	b22d      	sxth	r5, r5
 8011914:	429d      	cmp	r5, r3
 8011916:	bfa8      	it	ge
 8011918:	461d      	movge	r5, r3
 801191a:	3101      	adds	r1, #1
 801191c:	4680      	mov	r8, r0
 801191e:	e7e4      	b.n	80118ea <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
 8011920:	d10b      	bne.n	801193a <_ZN8touchgfx11Application15drawCachedAreasEv+0x346>
 8011922:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 8011926:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 801192a:	458c      	cmp	ip, r1
 801192c:	bfb4      	ite	lt
 801192e:	469c      	movlt	ip, r3
 8011930:	46bc      	movge	ip, r7
 8011932:	4572      	cmp	r2, lr
 8011934:	bfb8      	it	lt
 8011936:	4672      	movlt	r2, lr
 8011938:	e088      	b.n	8011a4c <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 801193a:	428a      	cmp	r2, r1
 801193c:	bfb8      	it	lt
 801193e:	460a      	movlt	r2, r1
 8011940:	46bc      	mov	ip, r7
 8011942:	e083      	b.n	8011a4c <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 8011944:	200154c8 	.word	0x200154c8
 8011948:	200154d4 	.word	0x200154d4
 801194c:	2000008c 	.word	0x2000008c
 8011950:	20015488 	.word	0x20015488
 8011954:	2001547e 	.word	0x2001547e
 8011958:	2001547c 	.word	0x2001547c
 801195c:	20015486 	.word	0x20015486
 8011960:	20015480 	.word	0x20015480
 8011964:	1961      	adds	r1, r4, r5
 8011966:	ab07      	add	r3, sp, #28
 8011968:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 801196c:	6849      	ldr	r1, [r1, #4]
 801196e:	c303      	stmia	r3!, {r0, r1}
 8011970:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8011974:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8011978:	2b13      	cmp	r3, #19
 801197a:	bfd8      	it	le
 801197c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8011980:	f8ad 201c 	strh.w	r2, [sp, #28]
 8011984:	440b      	add	r3, r1
 8011986:	1a9b      	subs	r3, r3, r2
 8011988:	a807      	add	r0, sp, #28
 801198a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801198e:	f7ff f8b7 	bl	8010b00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011992:	a807      	add	r0, sp, #28
 8011994:	f7f9 f915 	bl	800abc2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011998:	bb78      	cbnz	r0, 80119fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 801199a:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 801199e:	f8d8 0000 	ldr.w	r0, [r8]
 80119a2:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80119a6:	f8d0 e000 	ldr.w	lr, [r0]
 80119aa:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 80119ae:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80119b2:	f1bc 0f14 	cmp.w	ip, #20
 80119b6:	bfa8      	it	ge
 80119b8:	f04f 0c14 	movge.w	ip, #20
 80119bc:	fa1f fc8c 	uxth.w	ip, ip
 80119c0:	f8cd c000 	str.w	ip, [sp]
 80119c4:	f8de a090 	ldr.w	sl, [lr, #144]	; 0x90
 80119c8:	47d0      	blx	sl
 80119ca:	4682      	mov	sl, r0
 80119cc:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80119d0:	a807      	add	r0, sp, #28
 80119d2:	f7ff f87b 	bl	8010acc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80119d6:	6823      	ldr	r3, [r4, #0]
 80119d8:	4425      	add	r5, r4
 80119da:	4620      	mov	r0, r4
 80119dc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80119de:	a907      	add	r1, sp, #28
 80119e0:	4798      	blx	r3
 80119e2:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 80119e6:	eba0 000a 	sub.w	r0, r0, sl
 80119ea:	b200      	sxth	r0, r0
 80119ec:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 80119f0:	b918      	cbnz	r0, 80119fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 80119f2:	b2b9      	uxth	r1, r7
 80119f4:	4648      	mov	r0, r9
 80119f6:	f7ff faa3 	bl	8010f40 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80119fa:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 80119fe:	f1bb 0f00 	cmp.w	fp, #0
 8011a02:	f43f af26 	beq.w	8011852 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8011a06:	9b02      	ldr	r3, [sp, #8]
 8011a08:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 8011a0c:	881b      	ldrh	r3, [r3, #0]
 8011a0e:	3301      	adds	r3, #1
 8011a10:	b29b      	uxth	r3, r3
 8011a12:	2700      	movs	r7, #0
 8011a14:	b299      	uxth	r1, r3
 8011a16:	458b      	cmp	fp, r1
 8011a18:	ea4f 05c7 	mov.w	r5, r7, lsl #3
 8011a1c:	d9a2      	bls.n	8011964 <_ZN8touchgfx11Application15drawCachedAreasEv+0x370>
 8011a1e:	4425      	add	r5, r4
 8011a20:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 8011a24:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 8011a28:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 8011a2c:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 8011a30:	4408      	add	r0, r1
 8011a32:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 8011a36:	4471      	add	r1, lr
 8011a38:	b200      	sxth	r0, r0
 8011a3a:	b209      	sxth	r1, r1
 8011a3c:	4288      	cmp	r0, r1
 8011a3e:	469c      	mov	ip, r3
 8011a40:	f6bf af6e 	bge.w	8011920 <_ZN8touchgfx11Application15drawCachedAreasEv+0x32c>
 8011a44:	4586      	cmp	lr, r0
 8011a46:	4672      	mov	r2, lr
 8011a48:	bfb8      	it	lt
 8011a4a:	4602      	movlt	r2, r0
 8011a4c:	3301      	adds	r3, #1
 8011a4e:	4667      	mov	r7, ip
 8011a50:	e7e0      	b.n	8011a14 <_ZN8touchgfx11Application15drawCachedAreasEv+0x420>
 8011a52:	d10c      	bne.n	8011a6e <_ZN8touchgfx11Application15drawCachedAreasEv+0x47a>
 8011a54:	f9b7 70ac 	ldrsh.w	r7, [r7, #172]	; 0xac
 8011a58:	f9be 00ac 	ldrsh.w	r0, [lr, #172]	; 0xac
 8011a5c:	4287      	cmp	r7, r0
 8011a5e:	bfb4      	ite	lt
 8011a60:	4608      	movlt	r0, r1
 8011a62:	4640      	movge	r0, r8
 8011a64:	f8be 70ae 	ldrh.w	r7, [lr, #174]	; 0xae
 8011a68:	443b      	add	r3, r7
 8011a6a:	b21b      	sxth	r3, r3
 8011a6c:	e752      	b.n	8011914 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 8011a6e:	4565      	cmp	r5, ip
 8011a70:	bfa8      	it	ge
 8011a72:	4665      	movge	r5, ip
 8011a74:	4640      	mov	r0, r8
 8011a76:	e750      	b.n	801191a <_ZN8touchgfx11Application15drawCachedAreasEv+0x326>
 8011a78:	eb09 0007 	add.w	r0, r9, r7
 8011a7c:	4427      	add	r7, r4
 8011a7e:	9203      	str	r2, [sp, #12]
 8011a80:	f9b7 a0ae 	ldrsh.w	sl, [r7, #174]	; 0xae
 8011a84:	f1ba 0f13 	cmp.w	sl, #19
 8011a88:	bfde      	ittt	le
 8011a8a:	f8b7 50aa 	ldrhle.w	r5, [r7, #170]	; 0xaa
 8011a8e:	4455      	addle	r5, sl
 8011a90:	b22d      	sxthle	r5, r5
 8011a92:	f7f9 f896 	bl	800abc2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011a96:	9a03      	ldr	r2, [sp, #12]
 8011a98:	2800      	cmp	r0, #0
 8011a9a:	f47f af1b 	bne.w	80118d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e0>
 8011a9e:	f9b7 20aa 	ldrsh.w	r2, [r7, #170]	; 0xaa
 8011aa2:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8011aa6:	482a      	ldr	r0, [pc, #168]	; (8011b50 <_ZN8touchgfx11Application15drawCachedAreasEv+0x55c>)
 8011aa8:	f9b7 10a8 	ldrsh.w	r1, [r7, #168]	; 0xa8
 8011aac:	f9b7 30ac 	ldrsh.w	r3, [r7, #172]	; 0xac
 8011ab0:	6800      	ldr	r0, [r0, #0]
 8011ab2:	f8ad 101c 	strh.w	r1, [sp, #28]
 8011ab6:	1aad      	subs	r5, r5, r2
 8011ab8:	2d14      	cmp	r5, #20
 8011aba:	f8ad 201e 	strh.w	r2, [sp, #30]
 8011abe:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011ac2:	bfa8      	it	ge
 8011ac4:	2514      	movge	r5, #20
 8011ac6:	f8d0 c000 	ldr.w	ip, [r0]
 8011aca:	b2ad      	uxth	r5, r5
 8011acc:	fa1f fa8a 	uxth.w	sl, sl
 8011ad0:	4555      	cmp	r5, sl
 8011ad2:	bf94      	ite	ls
 8011ad4:	9500      	strls	r5, [sp, #0]
 8011ad6:	f8cd a000 	strhi.w	sl, [sp]
 8011ada:	b292      	uxth	r2, r2
 8011adc:	f8dc 5090 	ldr.w	r5, [ip, #144]	; 0x90
 8011ae0:	b29b      	uxth	r3, r3
 8011ae2:	b289      	uxth	r1, r1
 8011ae4:	47a8      	blx	r5
 8011ae6:	6823      	ldr	r3, [r4, #0]
 8011ae8:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8011aec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011aee:	a907      	add	r1, sp, #28
 8011af0:	4620      	mov	r0, r4
 8011af2:	4798      	blx	r3
 8011af4:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8011af8:	f8b7 30ae 	ldrh.w	r3, [r7, #174]	; 0xae
 8011afc:	f8b7 20aa 	ldrh.w	r2, [r7, #170]	; 0xaa
 8011b00:	1a5b      	subs	r3, r3, r1
 8011b02:	440a      	add	r2, r1
 8011b04:	b21b      	sxth	r3, r3
 8011b06:	f8a7 20aa 	strh.w	r2, [r7, #170]	; 0xaa
 8011b0a:	f8a7 30ae 	strh.w	r3, [r7, #174]	; 0xae
 8011b0e:	2b00      	cmp	r3, #0
 8011b10:	f47f aed7 	bne.w	80118c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 8011b14:	fa1f f188 	uxth.w	r1, r8
 8011b18:	4648      	mov	r0, r9
 8011b1a:	f7ff fa11 	bl	8010f40 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011b1e:	e6d0      	b.n	80118c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 8011b20:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8011b24:	42ab      	cmp	r3, r5
 8011b26:	f67f ae94 	bls.w	8011852 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8011b2a:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 8011b2e:	ab07      	add	r3, sp, #28
 8011b30:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 8011b34:	6851      	ldr	r1, [r2, #4]
 8011b36:	c303      	stmia	r3!, {r0, r1}
 8011b38:	a807      	add	r0, sp, #28
 8011b3a:	f7f9 f842 	bl	800abc2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011b3e:	b920      	cbnz	r0, 8011b4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x556>
 8011b40:	6823      	ldr	r3, [r4, #0]
 8011b42:	a907      	add	r1, sp, #28
 8011b44:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011b46:	4620      	mov	r0, r4
 8011b48:	4798      	blx	r3
 8011b4a:	3501      	adds	r5, #1
 8011b4c:	b2ad      	uxth	r5, r5
 8011b4e:	e7e7      	b.n	8011b20 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 8011b50:	20015488 	.word	0x20015488

08011b54 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8011b54:	4b03      	ldr	r3, [pc, #12]	; (8011b64 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8011b56:	2200      	movs	r2, #0
 8011b58:	801a      	strh	r2, [r3, #0]
 8011b5a:	805a      	strh	r2, [r3, #2]
 8011b5c:	809a      	strh	r2, [r3, #4]
 8011b5e:	80da      	strh	r2, [r3, #6]
 8011b60:	4770      	bx	lr
 8011b62:	bf00      	nop
 8011b64:	200154d4 	.word	0x200154d4

08011b68 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8011b68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011b6c:	4606      	mov	r6, r0
 8011b6e:	b09d      	sub	sp, #116	; 0x74
 8011b70:	a803      	add	r0, sp, #12
 8011b72:	4614      	mov	r4, r2
 8011b74:	468a      	mov	sl, r1
 8011b76:	461d      	mov	r5, r3
 8011b78:	f000 fe67 	bl	801284a <_ZN8touchgfx12TextProviderC1Ev>
 8011b7c:	6833      	ldr	r3, [r6, #0]
 8011b7e:	4630      	mov	r0, r6
 8011b80:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011b82:	4798      	blx	r3
 8011b84:	6833      	ldr	r3, [r6, #0]
 8011b86:	4607      	mov	r7, r0
 8011b88:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011b8a:	4630      	mov	r0, r6
 8011b8c:	4798      	blx	r3
 8011b8e:	462a      	mov	r2, r5
 8011b90:	9000      	str	r0, [sp, #0]
 8011b92:	4621      	mov	r1, r4
 8011b94:	463b      	mov	r3, r7
 8011b96:	a803      	add	r0, sp, #12
 8011b98:	f000 feb2 	bl	8012900 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011b9c:	2500      	movs	r5, #0
 8011b9e:	462c      	mov	r4, r5
 8011ba0:	46a9      	mov	r9, r5
 8011ba2:	46a8      	mov	r8, r5
 8011ba4:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8011ba8:	2300      	movs	r3, #0
 8011baa:	9302      	str	r3, [sp, #8]
 8011bac:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8011bb0:	429c      	cmp	r4, r3
 8011bb2:	d002      	beq.n	8011bba <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8011bb4:	455c      	cmp	r4, fp
 8011bb6:	bf18      	it	ne
 8011bb8:	4625      	movne	r5, r4
 8011bba:	ab02      	add	r3, sp, #8
 8011bbc:	4632      	mov	r2, r6
 8011bbe:	4651      	mov	r1, sl
 8011bc0:	a803      	add	r0, sp, #12
 8011bc2:	f001 f99f 	bl	8012f04 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011bc6:	4604      	mov	r4, r0
 8011bc8:	b108      	cbz	r0, 8011bce <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8011bca:	280a      	cmp	r0, #10
 8011bcc:	d10a      	bne.n	8011be4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8011bce:	45c1      	cmp	r9, r8
 8011bd0:	bf38      	it	cc
 8011bd2:	46c1      	movcc	r9, r8
 8011bd4:	f04f 0800 	mov.w	r8, #0
 8011bd8:	2c00      	cmp	r4, #0
 8011bda:	d1e5      	bne.n	8011ba8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8011bdc:	4648      	mov	r0, r9
 8011bde:	b01d      	add	sp, #116	; 0x74
 8011be0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011be4:	9a02      	ldr	r2, [sp, #8]
 8011be6:	2a00      	cmp	r2, #0
 8011be8:	d0de      	beq.n	8011ba8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8011bea:	7b57      	ldrb	r7, [r2, #13]
 8011bec:	6833      	ldr	r3, [r6, #0]
 8011bee:	8894      	ldrh	r4, [r2, #4]
 8011bf0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011bf2:	007f      	lsls	r7, r7, #1
 8011bf4:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8011bf8:	7a97      	ldrb	r7, [r2, #10]
 8011bfa:	4629      	mov	r1, r5
 8011bfc:	4307      	orrs	r7, r0
 8011bfe:	4630      	mov	r0, r6
 8011c00:	4798      	blx	r3
 8011c02:	4438      	add	r0, r7
 8011c04:	4480      	add	r8, r0
 8011c06:	fa1f f888 	uxth.w	r8, r8
 8011c0a:	e7e5      	b.n	8011bd8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08011c0c <_ZNK8touchgfx4Font12getCharWidthEt>:
 8011c0c:	b508      	push	{r3, lr}
 8011c0e:	6803      	ldr	r3, [r0, #0]
 8011c10:	68db      	ldr	r3, [r3, #12]
 8011c12:	4798      	blx	r3
 8011c14:	b128      	cbz	r0, 8011c22 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8011c16:	7b43      	ldrb	r3, [r0, #13]
 8011c18:	7a80      	ldrb	r0, [r0, #10]
 8011c1a:	005b      	lsls	r3, r3, #1
 8011c1c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011c20:	4318      	orrs	r0, r3
 8011c22:	bd08      	pop	{r3, pc}

08011c24 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8011c24:	b40e      	push	{r1, r2, r3}
 8011c26:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011c28:	b09e      	sub	sp, #120	; 0x78
 8011c2a:	ab23      	add	r3, sp, #140	; 0x8c
 8011c2c:	4605      	mov	r5, r0
 8011c2e:	f853 4b04 	ldr.w	r4, [r3], #4
 8011c32:	9303      	str	r3, [sp, #12]
 8011c34:	a805      	add	r0, sp, #20
 8011c36:	f000 fe08 	bl	801284a <_ZN8touchgfx12TextProviderC1Ev>
 8011c3a:	682b      	ldr	r3, [r5, #0]
 8011c3c:	4628      	mov	r0, r5
 8011c3e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011c40:	4798      	blx	r3
 8011c42:	682b      	ldr	r3, [r5, #0]
 8011c44:	4606      	mov	r6, r0
 8011c46:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011c48:	4628      	mov	r0, r5
 8011c4a:	4798      	blx	r3
 8011c4c:	4633      	mov	r3, r6
 8011c4e:	ae1e      	add	r6, sp, #120	; 0x78
 8011c50:	4621      	mov	r1, r4
 8011c52:	9000      	str	r0, [sp, #0]
 8011c54:	9a03      	ldr	r2, [sp, #12]
 8011c56:	2400      	movs	r4, #0
 8011c58:	a805      	add	r0, sp, #20
 8011c5a:	f000 fe51 	bl	8012900 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011c5e:	f846 4d68 	str.w	r4, [r6, #-104]!
 8011c62:	462a      	mov	r2, r5
 8011c64:	4633      	mov	r3, r6
 8011c66:	4621      	mov	r1, r4
 8011c68:	a805      	add	r0, sp, #20
 8011c6a:	f001 f94b 	bl	8012f04 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011c6e:	b1f0      	cbz	r0, 8011cae <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8011c70:	280a      	cmp	r0, #10
 8011c72:	d018      	beq.n	8011ca6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8011c74:	9f04      	ldr	r7, [sp, #16]
 8011c76:	b1b7      	cbz	r7, 8011ca6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8011c78:	7b78      	ldrb	r0, [r7, #13]
 8011c7a:	7a3b      	ldrb	r3, [r7, #8]
 8011c7c:	88aa      	ldrh	r2, [r5, #4]
 8011c7e:	00c1      	lsls	r1, r0, #3
 8011c80:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8011c84:	4319      	orrs	r1, r3
 8011c86:	0643      	lsls	r3, r0, #25
 8011c88:	bf44      	itt	mi
 8011c8a:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8011c8e:	b219      	sxthmi	r1, r3
 8011c90:	0100      	lsls	r0, r0, #4
 8011c92:	79fb      	ldrb	r3, [r7, #7]
 8011c94:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8011c98:	4303      	orrs	r3, r0
 8011c9a:	4413      	add	r3, r2
 8011c9c:	1a5b      	subs	r3, r3, r1
 8011c9e:	b29b      	uxth	r3, r3
 8011ca0:	42a3      	cmp	r3, r4
 8011ca2:	bfc8      	it	gt
 8011ca4:	b21c      	sxthgt	r4, r3
 8011ca6:	4633      	mov	r3, r6
 8011ca8:	462a      	mov	r2, r5
 8011caa:	2100      	movs	r1, #0
 8011cac:	e7dc      	b.n	8011c68 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8011cae:	b2a0      	uxth	r0, r4
 8011cb0:	b01e      	add	sp, #120	; 0x78
 8011cb2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8011cb6:	b003      	add	sp, #12
 8011cb8:	4770      	bx	lr

08011cba <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8011cba:	b40e      	push	{r1, r2, r3}
 8011cbc:	b570      	push	{r4, r5, r6, lr}
 8011cbe:	b09d      	sub	sp, #116	; 0x74
 8011cc0:	ab21      	add	r3, sp, #132	; 0x84
 8011cc2:	4604      	mov	r4, r0
 8011cc4:	f853 5b04 	ldr.w	r5, [r3], #4
 8011cc8:	9302      	str	r3, [sp, #8]
 8011cca:	a803      	add	r0, sp, #12
 8011ccc:	f000 fdbd 	bl	801284a <_ZN8touchgfx12TextProviderC1Ev>
 8011cd0:	6823      	ldr	r3, [r4, #0]
 8011cd2:	4620      	mov	r0, r4
 8011cd4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011cd6:	4798      	blx	r3
 8011cd8:	6823      	ldr	r3, [r4, #0]
 8011cda:	4606      	mov	r6, r0
 8011cdc:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011cde:	4620      	mov	r0, r4
 8011ce0:	4798      	blx	r3
 8011ce2:	4633      	mov	r3, r6
 8011ce4:	9000      	str	r0, [sp, #0]
 8011ce6:	9a02      	ldr	r2, [sp, #8]
 8011ce8:	4629      	mov	r1, r5
 8011cea:	a803      	add	r0, sp, #12
 8011cec:	f000 fe08 	bl	8012900 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011cf0:	a803      	add	r0, sp, #12
 8011cf2:	f001 f9d5 	bl	80130a0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8011cf6:	2401      	movs	r4, #1
 8011cf8:	b2a3      	uxth	r3, r4
 8011cfa:	b140      	cbz	r0, 8011d0e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8011cfc:	280a      	cmp	r0, #10
 8011cfe:	bf08      	it	eq
 8011d00:	3301      	addeq	r3, #1
 8011d02:	a803      	add	r0, sp, #12
 8011d04:	bf08      	it	eq
 8011d06:	b21c      	sxtheq	r4, r3
 8011d08:	f001 f9ca 	bl	80130a0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8011d0c:	e7f4      	b.n	8011cf8 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8011d0e:	4618      	mov	r0, r3
 8011d10:	b01d      	add	sp, #116	; 0x74
 8011d12:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011d16:	b003      	add	sp, #12
 8011d18:	4770      	bx	lr

08011d1a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8011d1a:	b40e      	push	{r1, r2, r3}
 8011d1c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011d1e:	b09e      	sub	sp, #120	; 0x78
 8011d20:	ab23      	add	r3, sp, #140	; 0x8c
 8011d22:	4604      	mov	r4, r0
 8011d24:	f853 5b04 	ldr.w	r5, [r3], #4
 8011d28:	9303      	str	r3, [sp, #12]
 8011d2a:	a805      	add	r0, sp, #20
 8011d2c:	f000 fd8d 	bl	801284a <_ZN8touchgfx12TextProviderC1Ev>
 8011d30:	6823      	ldr	r3, [r4, #0]
 8011d32:	4620      	mov	r0, r4
 8011d34:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011d36:	4798      	blx	r3
 8011d38:	6823      	ldr	r3, [r4, #0]
 8011d3a:	4606      	mov	r6, r0
 8011d3c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011d3e:	4620      	mov	r0, r4
 8011d40:	4798      	blx	r3
 8011d42:	4633      	mov	r3, r6
 8011d44:	4629      	mov	r1, r5
 8011d46:	9000      	str	r0, [sp, #0]
 8011d48:	9a03      	ldr	r2, [sp, #12]
 8011d4a:	a805      	add	r0, sp, #20
 8011d4c:	ad1e      	add	r5, sp, #120	; 0x78
 8011d4e:	f000 fdd7 	bl	8012900 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011d52:	2100      	movs	r1, #0
 8011d54:	f845 1d68 	str.w	r1, [r5, #-104]!
 8011d58:	4622      	mov	r2, r4
 8011d5a:	462b      	mov	r3, r5
 8011d5c:	a805      	add	r0, sp, #20
 8011d5e:	f001 f8d1 	bl	8012f04 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011d62:	26ff      	movs	r6, #255	; 0xff
 8011d64:	b1d8      	cbz	r0, 8011d9e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 8011d66:	280a      	cmp	r0, #10
 8011d68:	d012      	beq.n	8011d90 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 8011d6a:	9804      	ldr	r0, [sp, #16]
 8011d6c:	b180      	cbz	r0, 8011d90 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 8011d6e:	7b47      	ldrb	r7, [r0, #13]
 8011d70:	7922      	ldrb	r2, [r4, #4]
 8011d72:	00fb      	lsls	r3, r7, #3
 8011d74:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8011d78:	7a03      	ldrb	r3, [r0, #8]
 8011d7a:	430b      	orrs	r3, r1
 8011d7c:	0679      	lsls	r1, r7, #25
 8011d7e:	bf44      	itt	mi
 8011d80:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011d84:	b21b      	sxthmi	r3, r3
 8011d86:	1ad3      	subs	r3, r2, r3
 8011d88:	b2db      	uxtb	r3, r3
 8011d8a:	429e      	cmp	r6, r3
 8011d8c:	bf28      	it	cs
 8011d8e:	461e      	movcs	r6, r3
 8011d90:	462b      	mov	r3, r5
 8011d92:	4622      	mov	r2, r4
 8011d94:	2100      	movs	r1, #0
 8011d96:	a805      	add	r0, sp, #20
 8011d98:	f001 f8b4 	bl	8012f04 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011d9c:	e7e2      	b.n	8011d64 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 8011d9e:	4630      	mov	r0, r6
 8011da0:	b01e      	add	sp, #120	; 0x78
 8011da2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8011da6:	b003      	add	sp, #12
 8011da8:	4770      	bx	lr

08011daa <_ZNK8touchgfx8Drawable10invalidateEv>:
 8011daa:	b513      	push	{r0, r1, r4, lr}
 8011dac:	6803      	ldr	r3, [r0, #0]
 8011dae:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8011db2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011db6:	f8ad 1004 	strh.w	r1, [sp, #4]
 8011dba:	2400      	movs	r4, #0
 8011dbc:	9400      	str	r4, [sp, #0]
 8011dbe:	f8ad 2006 	strh.w	r2, [sp, #6]
 8011dc2:	691b      	ldr	r3, [r3, #16]
 8011dc4:	4669      	mov	r1, sp
 8011dc6:	4798      	blx	r3
 8011dc8:	b002      	add	sp, #8
 8011dca:	bd10      	pop	{r4, pc}

08011dcc <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8011dcc:	b538      	push	{r3, r4, r5, lr}
 8011dce:	680b      	ldr	r3, [r1, #0]
 8011dd0:	460c      	mov	r4, r1
 8011dd2:	68db      	ldr	r3, [r3, #12]
 8011dd4:	4605      	mov	r5, r0
 8011dd6:	4798      	blx	r3
 8011dd8:	6823      	ldr	r3, [r4, #0]
 8011dda:	4620      	mov	r0, r4
 8011ddc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011dde:	4629      	mov	r1, r5
 8011de0:	4798      	blx	r3
 8011de2:	4628      	mov	r0, r5
 8011de4:	bd38      	pop	{r3, r4, r5, pc}

08011de6 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8011de6:	b410      	push	{r4}
 8011de8:	880a      	ldrh	r2, [r1, #0]
 8011dea:	8884      	ldrh	r4, [r0, #4]
 8011dec:	4422      	add	r2, r4
 8011dee:	800a      	strh	r2, [r1, #0]
 8011df0:	88c4      	ldrh	r4, [r0, #6]
 8011df2:	884a      	ldrh	r2, [r1, #2]
 8011df4:	4422      	add	r2, r4
 8011df6:	804a      	strh	r2, [r1, #2]
 8011df8:	6940      	ldr	r0, [r0, #20]
 8011dfa:	b120      	cbz	r0, 8011e06 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8011dfc:	6803      	ldr	r3, [r0, #0]
 8011dfe:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011e02:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011e04:	4718      	bx	r3
 8011e06:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011e0a:	4770      	bx	lr

08011e0c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8011e0c:	b570      	push	{r4, r5, r6, lr}
 8011e0e:	8882      	ldrh	r2, [r0, #4]
 8011e10:	880b      	ldrh	r3, [r1, #0]
 8011e12:	4413      	add	r3, r2
 8011e14:	800b      	strh	r3, [r1, #0]
 8011e16:	88c2      	ldrh	r2, [r0, #6]
 8011e18:	884b      	ldrh	r3, [r1, #2]
 8011e1a:	460c      	mov	r4, r1
 8011e1c:	4413      	add	r3, r2
 8011e1e:	804b      	strh	r3, [r1, #2]
 8011e20:	4605      	mov	r5, r0
 8011e22:	1d01      	adds	r1, r0, #4
 8011e24:	4620      	mov	r0, r4
 8011e26:	f7f8 fe89 	bl	800ab3c <_ZN8touchgfx4RectaNERKS0_>
 8011e2a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8011e2e:	2b00      	cmp	r3, #0
 8011e30:	dd0b      	ble.n	8011e4a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8011e32:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8011e36:	2b00      	cmp	r3, #0
 8011e38:	dd07      	ble.n	8011e4a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8011e3a:	6968      	ldr	r0, [r5, #20]
 8011e3c:	b128      	cbz	r0, 8011e4a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8011e3e:	6803      	ldr	r3, [r0, #0]
 8011e40:	4621      	mov	r1, r4
 8011e42:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011e44:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011e48:	4718      	bx	r3
 8011e4a:	bd70      	pop	{r4, r5, r6, pc}

08011e4c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8011e4c:	b570      	push	{r4, r5, r6, lr}
 8011e4e:	8882      	ldrh	r2, [r0, #4]
 8011e50:	880b      	ldrh	r3, [r1, #0]
 8011e52:	4413      	add	r3, r2
 8011e54:	800b      	strh	r3, [r1, #0]
 8011e56:	88c2      	ldrh	r2, [r0, #6]
 8011e58:	884b      	ldrh	r3, [r1, #2]
 8011e5a:	460c      	mov	r4, r1
 8011e5c:	4413      	add	r3, r2
 8011e5e:	804b      	strh	r3, [r1, #2]
 8011e60:	4605      	mov	r5, r0
 8011e62:	1d01      	adds	r1, r0, #4
 8011e64:	4620      	mov	r0, r4
 8011e66:	f7f8 fe69 	bl	800ab3c <_ZN8touchgfx4RectaNERKS0_>
 8011e6a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8011e6e:	2b00      	cmp	r3, #0
 8011e70:	dd18      	ble.n	8011ea4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8011e72:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8011e76:	2b00      	cmp	r3, #0
 8011e78:	dd14      	ble.n	8011ea4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8011e7a:	6968      	ldr	r0, [r5, #20]
 8011e7c:	b128      	cbz	r0, 8011e8a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8011e7e:	6803      	ldr	r3, [r0, #0]
 8011e80:	4621      	mov	r1, r4
 8011e82:	691b      	ldr	r3, [r3, #16]
 8011e84:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011e88:	4718      	bx	r3
 8011e8a:	4b07      	ldr	r3, [pc, #28]	; (8011ea8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8011e8c:	681b      	ldr	r3, [r3, #0]
 8011e8e:	3304      	adds	r3, #4
 8011e90:	429d      	cmp	r5, r3
 8011e92:	d107      	bne.n	8011ea4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8011e94:	f7fe fff2 	bl	8010e7c <_ZN8touchgfx11Application11getInstanceEv>
 8011e98:	6821      	ldr	r1, [r4, #0]
 8011e9a:	6862      	ldr	r2, [r4, #4]
 8011e9c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011ea0:	f7ff b862 	b.w	8010f68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8011ea4:	bd70      	pop	{r4, r5, r6, pc}
 8011ea6:	bf00      	nop
 8011ea8:	200154cc 	.word	0x200154cc

08011eac <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8011eac:	b570      	push	{r4, r5, r6, lr}
 8011eae:	4604      	mov	r4, r0
 8011eb0:	4616      	mov	r6, r2
 8011eb2:	460d      	mov	r5, r1
 8011eb4:	b901      	cbnz	r1, 8011eb8 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8011eb6:	b192      	cbz	r2, 8011ede <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8011eb8:	6823      	ldr	r3, [r4, #0]
 8011eba:	4620      	mov	r0, r4
 8011ebc:	699b      	ldr	r3, [r3, #24]
 8011ebe:	4798      	blx	r3
 8011ec0:	88e2      	ldrh	r2, [r4, #6]
 8011ec2:	88a1      	ldrh	r1, [r4, #4]
 8011ec4:	4432      	add	r2, r6
 8011ec6:	4429      	add	r1, r5
 8011ec8:	4620      	mov	r0, r4
 8011eca:	b212      	sxth	r2, r2
 8011ecc:	b209      	sxth	r1, r1
 8011ece:	f7f0 ff47 	bl	8002d60 <_ZN8touchgfx8Drawable5setXYEss>
 8011ed2:	6823      	ldr	r3, [r4, #0]
 8011ed4:	4620      	mov	r0, r4
 8011ed6:	699b      	ldr	r3, [r3, #24]
 8011ed8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011edc:	4718      	bx	r3
 8011ede:	bd70      	pop	{r4, r5, r6, pc}

08011ee0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8011ee0:	b510      	push	{r4, lr}
 8011ee2:	4604      	mov	r4, r0
 8011ee4:	4608      	mov	r0, r1
 8011ee6:	2300      	movs	r3, #0
 8011ee8:	8023      	strh	r3, [r4, #0]
 8011eea:	8063      	strh	r3, [r4, #2]
 8011eec:	6803      	ldr	r3, [r0, #0]
 8011eee:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011ef2:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8011ef6:	80a1      	strh	r1, [r4, #4]
 8011ef8:	80e2      	strh	r2, [r4, #6]
 8011efa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011efc:	4621      	mov	r1, r4
 8011efe:	4798      	blx	r3
 8011f00:	4620      	mov	r0, r4
 8011f02:	bd10      	pop	{r4, pc}

08011f04 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 8011f04:	b530      	push	{r4, r5, lr}
 8011f06:	8083      	strh	r3, [r0, #4]
 8011f08:	f89d 300c 	ldrb.w	r3, [sp, #12]
 8011f0c:	f89d 5010 	ldrb.w	r5, [sp, #16]
 8011f10:	7183      	strb	r3, [r0, #6]
 8011f12:	79c3      	ldrb	r3, [r0, #7]
 8011f14:	6101      	str	r1, [r0, #16]
 8011f16:	f365 0306 	bfi	r3, r5, #0, #7
 8011f1a:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8011f1e:	8282      	strh	r2, [r0, #20]
 8011f20:	f365 13c7 	bfi	r3, r5, #7, #1
 8011f24:	71c3      	strb	r3, [r0, #7]
 8011f26:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8011f2a:	7203      	strb	r3, [r0, #8]
 8011f2c:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8011f30:	7243      	strb	r3, [r0, #9]
 8011f32:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8011f36:	8143      	strh	r3, [r0, #10]
 8011f38:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 8011f3c:	8183      	strh	r3, [r0, #12]
 8011f3e:	4b01      	ldr	r3, [pc, #4]	; (8011f44 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 8011f40:	6003      	str	r3, [r0, #0]
 8011f42:	bd30      	pop	{r4, r5, pc}
 8011f44:	080240b4 	.word	0x080240b4

08011f48 <_ZNK8touchgfx9ConstFont4findEt>:
 8011f48:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011f4a:	6904      	ldr	r4, [r0, #16]
 8011f4c:	b3bc      	cbz	r4, 8011fbe <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011f4e:	88a3      	ldrh	r3, [r4, #4]
 8011f50:	8a82      	ldrh	r2, [r0, #20]
 8011f52:	1acb      	subs	r3, r1, r3
 8011f54:	f102 32ff 	add.w	r2, r2, #4294967295
 8011f58:	d431      	bmi.n	8011fbe <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011f5a:	4293      	cmp	r3, r2
 8011f5c:	dd0c      	ble.n	8011f78 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8011f5e:	230e      	movs	r3, #14
 8011f60:	fb03 4302 	mla	r3, r3, r2, r4
 8011f64:	889b      	ldrh	r3, [r3, #4]
 8011f66:	1a5b      	subs	r3, r3, r1
 8011f68:	1ad3      	subs	r3, r2, r3
 8011f6a:	429a      	cmp	r2, r3
 8011f6c:	db27      	blt.n	8011fbe <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011f6e:	2b00      	cmp	r3, #0
 8011f70:	bfbc      	itt	lt
 8011f72:	2302      	movlt	r3, #2
 8011f74:	fb92 f3f3 	sdivlt	r3, r2, r3
 8011f78:	2500      	movs	r5, #0
 8011f7a:	260e      	movs	r6, #14
 8011f7c:	4295      	cmp	r5, r2
 8011f7e:	dc1e      	bgt.n	8011fbe <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011f80:	fb06 4003 	mla	r0, r6, r3, r4
 8011f84:	8887      	ldrh	r7, [r0, #4]
 8011f86:	42b9      	cmp	r1, r7
 8011f88:	d01a      	beq.n	8011fc0 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8011f8a:	d20d      	bcs.n	8011fa8 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8011f8c:	1e5a      	subs	r2, r3, #1
 8011f8e:	4295      	cmp	r5, r2
 8011f90:	dc15      	bgt.n	8011fbe <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011f92:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8011f96:	1a5b      	subs	r3, r3, r1
 8011f98:	1ad3      	subs	r3, r2, r3
 8011f9a:	429a      	cmp	r2, r3
 8011f9c:	db0f      	blt.n	8011fbe <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011f9e:	429d      	cmp	r5, r3
 8011fa0:	ddec      	ble.n	8011f7c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8011fa2:	1953      	adds	r3, r2, r5
 8011fa4:	105b      	asrs	r3, r3, #1
 8011fa6:	e7e9      	b.n	8011f7c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8011fa8:	1c5d      	adds	r5, r3, #1
 8011faa:	42aa      	cmp	r2, r5
 8011fac:	db07      	blt.n	8011fbe <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011fae:	8a43      	ldrh	r3, [r0, #18]
 8011fb0:	1acb      	subs	r3, r1, r3
 8011fb2:	442b      	add	r3, r5
 8011fb4:	429d      	cmp	r5, r3
 8011fb6:	dc02      	bgt.n	8011fbe <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011fb8:	429a      	cmp	r2, r3
 8011fba:	dadf      	bge.n	8011f7c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8011fbc:	e7f1      	b.n	8011fa2 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8011fbe:	2000      	movs	r0, #0
 8011fc0:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011fc2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8011fc2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011fc4:	4604      	mov	r4, r0
 8011fc6:	4617      	mov	r7, r2
 8011fc8:	461e      	mov	r6, r3
 8011fca:	b911      	cbnz	r1, 8011fd2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8011fcc:	2500      	movs	r5, #0
 8011fce:	4628      	mov	r0, r5
 8011fd0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011fd2:	290a      	cmp	r1, #10
 8011fd4:	d0fa      	beq.n	8011fcc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011fd6:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8011fda:	4291      	cmp	r1, r2
 8011fdc:	d0f6      	beq.n	8011fcc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011fde:	f242 020b 	movw	r2, #8203	; 0x200b
 8011fe2:	4291      	cmp	r1, r2
 8011fe4:	d0f2      	beq.n	8011fcc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011fe6:	f7ff ffaf 	bl	8011f48 <_ZNK8touchgfx9ConstFont4findEt>
 8011fea:	4605      	mov	r5, r0
 8011fec:	b950      	cbnz	r0, 8012004 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8011fee:	6823      	ldr	r3, [r4, #0]
 8011ff0:	4620      	mov	r0, r4
 8011ff2:	691b      	ldr	r3, [r3, #16]
 8011ff4:	4798      	blx	r3
 8011ff6:	4601      	mov	r1, r0
 8011ff8:	4620      	mov	r0, r4
 8011ffa:	f7ff ffa5 	bl	8011f48 <_ZNK8touchgfx9ConstFont4findEt>
 8011ffe:	4605      	mov	r5, r0
 8012000:	2800      	cmp	r0, #0
 8012002:	d0e3      	beq.n	8011fcc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8012004:	6823      	ldr	r3, [r4, #0]
 8012006:	4629      	mov	r1, r5
 8012008:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801200a:	4620      	mov	r0, r4
 801200c:	4798      	blx	r3
 801200e:	6038      	str	r0, [r7, #0]
 8012010:	6823      	ldr	r3, [r4, #0]
 8012012:	4620      	mov	r0, r4
 8012014:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012016:	4798      	blx	r3
 8012018:	7030      	strb	r0, [r6, #0]
 801201a:	e7d8      	b.n	8011fce <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0801201c <_ZN8touchgfx4clzuEm>:
 801201c:	4603      	mov	r3, r0
 801201e:	b1c8      	cbz	r0, 8012054 <_ZN8touchgfx4clzuEm+0x38>
 8012020:	0c02      	lsrs	r2, r0, #16
 8012022:	0412      	lsls	r2, r2, #16
 8012024:	b9a2      	cbnz	r2, 8012050 <_ZN8touchgfx4clzuEm+0x34>
 8012026:	0403      	lsls	r3, r0, #16
 8012028:	2010      	movs	r0, #16
 801202a:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 801202e:	bf04      	itt	eq
 8012030:	021b      	lsleq	r3, r3, #8
 8012032:	3008      	addeq	r0, #8
 8012034:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8012038:	bf04      	itt	eq
 801203a:	011b      	lsleq	r3, r3, #4
 801203c:	3004      	addeq	r0, #4
 801203e:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8012042:	bf04      	itt	eq
 8012044:	009b      	lsleq	r3, r3, #2
 8012046:	3002      	addeq	r0, #2
 8012048:	2b00      	cmp	r3, #0
 801204a:	db04      	blt.n	8012056 <_ZN8touchgfx4clzuEm+0x3a>
 801204c:	3001      	adds	r0, #1
 801204e:	4770      	bx	lr
 8012050:	2000      	movs	r0, #0
 8012052:	e7ea      	b.n	801202a <_ZN8touchgfx4clzuEm+0xe>
 8012054:	2020      	movs	r0, #32
 8012056:	4770      	bx	lr

08012058 <_ZN8touchgfx7muldivuEmmmRm>:
 8012058:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801205c:	4680      	mov	r8, r0
 801205e:	460f      	mov	r7, r1
 8012060:	4615      	mov	r5, r2
 8012062:	461e      	mov	r6, r3
 8012064:	f7ff ffda 	bl	801201c <_ZN8touchgfx4clzuEm>
 8012068:	b998      	cbnz	r0, 8012092 <_ZN8touchgfx7muldivuEmmmRm+0x3a>
 801206a:	4608      	mov	r0, r1
 801206c:	f7ff ffd6 	bl	801201c <_ZN8touchgfx4clzuEm>
 8012070:	2800      	cmp	r0, #0
 8012072:	dd08      	ble.n	8012086 <_ZN8touchgfx7muldivuEmmmRm+0x2e>
 8012074:	4633      	mov	r3, r6
 8012076:	462a      	mov	r2, r5
 8012078:	4641      	mov	r1, r8
 801207a:	4638      	mov	r0, r7
 801207c:	f7ff ffec 	bl	8012058 <_ZN8touchgfx7muldivuEmmmRm>
 8012080:	b003      	add	sp, #12
 8012082:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012086:	f04f 33ff 	mov.w	r3, #4294967295
 801208a:	6033      	str	r3, [r6, #0]
 801208c:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8012090:	e7f6      	b.n	8012080 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 8012092:	fa31 f900 	lsrs.w	r9, r1, r0
 8012096:	fb01 f308 	mul.w	r3, r1, r8
 801209a:	d105      	bne.n	80120a8 <_ZN8touchgfx7muldivuEmmmRm+0x50>
 801209c:	fbb3 f0f5 	udiv	r0, r3, r5
 80120a0:	fb05 3510 	mls	r5, r5, r0, r3
 80120a4:	6035      	str	r5, [r6, #0]
 80120a6:	e7eb      	b.n	8012080 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 80120a8:	2301      	movs	r3, #1
 80120aa:	fa08 fb00 	lsl.w	fp, r8, r0
 80120ae:	fa03 f000 	lsl.w	r0, r3, r0
 80120b2:	3801      	subs	r0, #1
 80120b4:	462a      	mov	r2, r5
 80120b6:	4633      	mov	r3, r6
 80120b8:	4641      	mov	r1, r8
 80120ba:	4038      	ands	r0, r7
 80120bc:	f7ff ffcc 	bl	8012058 <_ZN8touchgfx7muldivuEmmmRm>
 80120c0:	fbbb faf5 	udiv	sl, fp, r5
 80120c4:	462a      	mov	r2, r5
 80120c6:	4607      	mov	r7, r0
 80120c8:	ab01      	add	r3, sp, #4
 80120ca:	fb05 b11a 	mls	r1, r5, sl, fp
 80120ce:	4648      	mov	r0, r9
 80120d0:	f7ff ffc2 	bl	8012058 <_ZN8touchgfx7muldivuEmmmRm>
 80120d4:	9b01      	ldr	r3, [sp, #4]
 80120d6:	6832      	ldr	r2, [r6, #0]
 80120d8:	fb09 f40a 	mul.w	r4, r9, sl
 80120dc:	441a      	add	r2, r3
 80120de:	fbb2 f3f5 	udiv	r3, r2, r5
 80120e2:	441c      	add	r4, r3
 80120e4:	443c      	add	r4, r7
 80120e6:	4420      	add	r0, r4
 80120e8:	fb05 2513 	mls	r5, r5, r3, r2
 80120ec:	e7da      	b.n	80120a4 <_ZN8touchgfx7muldivuEmmmRm+0x4c>

080120ee <_ZN8touchgfx6muldivElllRl>:
 80120ee:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80120f0:	2800      	cmp	r0, #0
 80120f2:	bfba      	itte	lt
 80120f4:	4240      	neglt	r0, r0
 80120f6:	f04f 34ff 	movlt.w	r4, #4294967295
 80120fa:	2401      	movge	r4, #1
 80120fc:	2900      	cmp	r1, #0
 80120fe:	bfbc      	itt	lt
 8012100:	4249      	neglt	r1, r1
 8012102:	4264      	neglt	r4, r4
 8012104:	2a00      	cmp	r2, #0
 8012106:	bfb6      	itet	lt
 8012108:	4265      	neglt	r5, r4
 801210a:	4625      	movge	r5, r4
 801210c:	4252      	neglt	r2, r2
 801210e:	4288      	cmp	r0, r1
 8012110:	461e      	mov	r6, r3
 8012112:	bfc2      	ittt	gt
 8012114:	4603      	movgt	r3, r0
 8012116:	4608      	movgt	r0, r1
 8012118:	4619      	movgt	r1, r3
 801211a:	ab01      	add	r3, sp, #4
 801211c:	f7ff ff9c 	bl	8012058 <_ZN8touchgfx7muldivuEmmmRm>
 8012120:	9b01      	ldr	r3, [sp, #4]
 8012122:	4368      	muls	r0, r5
 8012124:	435c      	muls	r4, r3
 8012126:	6034      	str	r4, [r6, #0]
 8012128:	b002      	add	sp, #8
 801212a:	bd70      	pop	{r4, r5, r6, pc}

0801212c <_ZN8touchgfx6muldivElll>:
 801212c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801212e:	4606      	mov	r6, r0
 8012130:	ab01      	add	r3, sp, #4
 8012132:	460d      	mov	r5, r1
 8012134:	4614      	mov	r4, r2
 8012136:	f7ff ffda 	bl	80120ee <_ZN8touchgfx6muldivElllRl>
 801213a:	2e00      	cmp	r6, #0
 801213c:	db20      	blt.n	8012180 <_ZN8touchgfx6muldivElll+0x54>
 801213e:	bf14      	ite	ne
 8012140:	2301      	movne	r3, #1
 8012142:	2300      	moveq	r3, #0
 8012144:	2d00      	cmp	r5, #0
 8012146:	db1e      	blt.n	8012186 <_ZN8touchgfx6muldivElll+0x5a>
 8012148:	bf14      	ite	ne
 801214a:	2201      	movne	r2, #1
 801214c:	2200      	moveq	r2, #0
 801214e:	2c00      	cmp	r4, #0
 8012150:	fb03 f202 	mul.w	r2, r3, r2
 8012154:	db1a      	blt.n	801218c <_ZN8touchgfx6muldivElll+0x60>
 8012156:	bf14      	ite	ne
 8012158:	2301      	movne	r3, #1
 801215a:	2300      	moveq	r3, #0
 801215c:	4353      	muls	r3, r2
 801215e:	2b01      	cmp	r3, #1
 8012160:	d117      	bne.n	8012192 <_ZN8touchgfx6muldivElll+0x66>
 8012162:	9b01      	ldr	r3, [sp, #4]
 8012164:	2c00      	cmp	r4, #0
 8012166:	bfb8      	it	lt
 8012168:	4264      	neglt	r4, r4
 801216a:	2b00      	cmp	r3, #0
 801216c:	f104 0401 	add.w	r4, r4, #1
 8012170:	bfb8      	it	lt
 8012172:	425b      	neglt	r3, r3
 8012174:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8012178:	db00      	blt.n	801217c <_ZN8touchgfx6muldivElll+0x50>
 801217a:	3001      	adds	r0, #1
 801217c:	b002      	add	sp, #8
 801217e:	bd70      	pop	{r4, r5, r6, pc}
 8012180:	f04f 33ff 	mov.w	r3, #4294967295
 8012184:	e7de      	b.n	8012144 <_ZN8touchgfx6muldivElll+0x18>
 8012186:	f04f 32ff 	mov.w	r2, #4294967295
 801218a:	e7e0      	b.n	801214e <_ZN8touchgfx6muldivElll+0x22>
 801218c:	f04f 33ff 	mov.w	r3, #4294967295
 8012190:	e7e4      	b.n	801215c <_ZN8touchgfx6muldivElll+0x30>
 8012192:	3301      	adds	r3, #1
 8012194:	d1f2      	bne.n	801217c <_ZN8touchgfx6muldivElll+0x50>
 8012196:	9b01      	ldr	r3, [sp, #4]
 8012198:	2c00      	cmp	r4, #0
 801219a:	bfb8      	it	lt
 801219c:	4264      	neglt	r4, r4
 801219e:	2b00      	cmp	r3, #0
 80121a0:	bfb8      	it	lt
 80121a2:	425b      	neglt	r3, r3
 80121a4:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 80121a8:	bfc8      	it	gt
 80121aa:	f100 30ff 	addgt.w	r0, r0, #4294967295
 80121ae:	e7e5      	b.n	801217c <_ZN8touchgfx6muldivElll+0x50>

080121b0 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 80121b0:	2000      	movs	r0, #0
 80121b2:	4770      	bx	lr

080121b4 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 80121b4:	2001      	movs	r0, #1
 80121b6:	4770      	bx	lr

080121b8 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 80121b8:	2002      	movs	r0, #2
 80121ba:	4770      	bx	lr

080121bc <_ZN8touchgfx6ScreenD1Ev>:
 80121bc:	4770      	bx	lr

080121be <_ZN8touchgfx12GestureEventD1Ev>:
 80121be:	4770      	bx	lr

080121c0 <_ZN8touchgfx9DragEventD1Ev>:
 80121c0:	4770      	bx	lr

080121c2 <_ZN8touchgfx10ClickEventD1Ev>:
 80121c2:	4770      	bx	lr

080121c4 <_ZN8touchgfx10ClickEventD0Ev>:
 80121c4:	b510      	push	{r4, lr}
 80121c6:	210c      	movs	r1, #12
 80121c8:	4604      	mov	r4, r0
 80121ca:	f00e f973 	bl	80204b4 <_ZdlPvj>
 80121ce:	4620      	mov	r0, r4
 80121d0:	bd10      	pop	{r4, pc}

080121d2 <_ZN8touchgfx9DragEventD0Ev>:
 80121d2:	b510      	push	{r4, lr}
 80121d4:	2110      	movs	r1, #16
 80121d6:	4604      	mov	r4, r0
 80121d8:	f00e f96c 	bl	80204b4 <_ZdlPvj>
 80121dc:	4620      	mov	r0, r4
 80121de:	bd10      	pop	{r4, pc}

080121e0 <_ZN8touchgfx12GestureEventD0Ev>:
 80121e0:	b510      	push	{r4, lr}
 80121e2:	210c      	movs	r1, #12
 80121e4:	4604      	mov	r4, r0
 80121e6:	f00e f965 	bl	80204b4 <_ZdlPvj>
 80121ea:	4620      	mov	r0, r4
 80121ec:	bd10      	pop	{r4, pc}

080121ee <_ZN8touchgfx6ScreenD0Ev>:
 80121ee:	b510      	push	{r4, lr}
 80121f0:	213c      	movs	r1, #60	; 0x3c
 80121f2:	4604      	mov	r4, r0
 80121f4:	f00e f95e 	bl	80204b4 <_ZdlPvj>
 80121f8:	4620      	mov	r0, r4
 80121fa:	bd10      	pop	{r4, pc}

080121fc <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 80121fc:	b530      	push	{r4, r5, lr}
 80121fe:	460d      	mov	r5, r1
 8012200:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8012202:	b087      	sub	sp, #28
 8012204:	4604      	mov	r4, r0
 8012206:	b301      	cbz	r1, 801224a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8012208:	a801      	add	r0, sp, #4
 801220a:	f7ff fe69 	bl	8011ee0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801220e:	892a      	ldrh	r2, [r5, #8]
 8012210:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8012214:	7928      	ldrb	r0, [r5, #4]
 8012216:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801221a:	f88d 0010 	strb.w	r0, [sp, #16]
 801221e:	1ad2      	subs	r2, r2, r3
 8012220:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8012222:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8012224:	f8ad 1012 	strh.w	r1, [sp, #18]
 8012228:	441a      	add	r2, r3
 801222a:	896b      	ldrh	r3, [r5, #10]
 801222c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8012230:	f8ad 2014 	strh.w	r2, [sp, #20]
 8012234:	1b5b      	subs	r3, r3, r5
 8012236:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8012238:	442b      	add	r3, r5
 801223a:	4d05      	ldr	r5, [pc, #20]	; (8012250 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 801223c:	9503      	str	r5, [sp, #12]
 801223e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012242:	6803      	ldr	r3, [r0, #0]
 8012244:	a903      	add	r1, sp, #12
 8012246:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8012248:	4798      	blx	r3
 801224a:	b007      	add	sp, #28
 801224c:	bd30      	pop	{r4, r5, pc}
 801224e:	bf00      	nop
 8012250:	08024134 	.word	0x08024134

08012254 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8012254:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012258:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801225a:	b08a      	sub	sp, #40	; 0x28
 801225c:	4604      	mov	r4, r0
 801225e:	460d      	mov	r5, r1
 8012260:	b113      	cbz	r3, 8012268 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8012262:	790b      	ldrb	r3, [r1, #4]
 8012264:	2b00      	cmp	r3, #0
 8012266:	d044      	beq.n	80122f2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8012268:	f104 0804 	add.w	r8, r4, #4
 801226c:	4641      	mov	r1, r8
 801226e:	a803      	add	r0, sp, #12
 8012270:	f7ff fe36 	bl	8011ee0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012274:	792b      	ldrb	r3, [r5, #4]
 8012276:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801227a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801227e:	b983      	cbnz	r3, 80122a2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8012280:	892a      	ldrh	r2, [r5, #8]
 8012282:	88e9      	ldrh	r1, [r5, #6]
 8012284:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8012288:	1b92      	subs	r2, r2, r6
 801228a:	1bc9      	subs	r1, r1, r7
 801228c:	9301      	str	r3, [sp, #4]
 801228e:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8012292:	9300      	str	r3, [sp, #0]
 8012294:	b212      	sxth	r2, r2
 8012296:	f104 0330 	add.w	r3, r4, #48	; 0x30
 801229a:	b209      	sxth	r1, r1
 801229c:	4640      	mov	r0, r8
 801229e:	f7f8 fb69 	bl	800a974 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 80122a2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80122a4:	b329      	cbz	r1, 80122f2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80122a6:	a805      	add	r0, sp, #20
 80122a8:	f7ff fe1a 	bl	8011ee0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80122ac:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80122b0:	792b      	ldrb	r3, [r5, #4]
 80122b2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80122b4:	f88d 3020 	strb.w	r3, [sp, #32]
 80122b8:	1abf      	subs	r7, r7, r2
 80122ba:	88ea      	ldrh	r2, [r5, #6]
 80122bc:	4417      	add	r7, r2
 80122be:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 80122c0:	4417      	add	r7, r2
 80122c2:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 80122c6:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 80122ca:	1ab6      	subs	r6, r6, r2
 80122cc:	892a      	ldrh	r2, [r5, #8]
 80122ce:	4416      	add	r6, r2
 80122d0:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80122d2:	4416      	add	r6, r2
 80122d4:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 80122d8:	4a07      	ldr	r2, [pc, #28]	; (80122f8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 80122da:	9207      	str	r2, [sp, #28]
 80122dc:	2600      	movs	r6, #0
 80122de:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 80122e2:	6803      	ldr	r3, [r0, #0]
 80122e4:	a907      	add	r1, sp, #28
 80122e6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80122e8:	4798      	blx	r3
 80122ea:	792b      	ldrb	r3, [r5, #4]
 80122ec:	b10b      	cbz	r3, 80122f2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80122ee:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 80122f2:	b00a      	add	sp, #40	; 0x28
 80122f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80122f8:	0802410c 	.word	0x0802410c

080122fc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 80122fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012300:	460c      	mov	r4, r1
 8012302:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8012304:	b088      	sub	sp, #32
 8012306:	4605      	mov	r5, r0
 8012308:	2900      	cmp	r1, #0
 801230a:	d06d      	beq.n	80123e8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 801230c:	4668      	mov	r0, sp
 801230e:	f7ff fde7 	bl	8011ee0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012312:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8012314:	88e3      	ldrh	r3, [r4, #6]
 8012316:	f9bd 8000 	ldrsh.w	r8, [sp]
 801231a:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801231e:	440b      	add	r3, r1
 8012320:	b21b      	sxth	r3, r3
 8012322:	4543      	cmp	r3, r8
 8012324:	db31      	blt.n	801238a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012326:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801232a:	44c4      	add	ip, r8
 801232c:	fa0f fc8c 	sxth.w	ip, ip
 8012330:	4563      	cmp	r3, ip
 8012332:	da2a      	bge.n	801238a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012334:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8012336:	8926      	ldrh	r6, [r4, #8]
 8012338:	4416      	add	r6, r2
 801233a:	b236      	sxth	r6, r6
 801233c:	42be      	cmp	r6, r7
 801233e:	db24      	blt.n	801238a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012340:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8012344:	4438      	add	r0, r7
 8012346:	b200      	sxth	r0, r0
 8012348:	4286      	cmp	r6, r0
 801234a:	da1e      	bge.n	801238a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801234c:	8963      	ldrh	r3, [r4, #10]
 801234e:	4419      	add	r1, r3
 8012350:	b209      	sxth	r1, r1
 8012352:	4541      	cmp	r1, r8
 8012354:	db08      	blt.n	8012368 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8012356:	4561      	cmp	r1, ip
 8012358:	da06      	bge.n	8012368 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801235a:	89a3      	ldrh	r3, [r4, #12]
 801235c:	441a      	add	r2, r3
 801235e:	b212      	sxth	r2, r2
 8012360:	42ba      	cmp	r2, r7
 8012362:	db01      	blt.n	8012368 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8012364:	4282      	cmp	r2, r0
 8012366:	db10      	blt.n	801238a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012368:	4b21      	ldr	r3, [pc, #132]	; (80123f0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801236a:	9304      	str	r3, [sp, #16]
 801236c:	2302      	movs	r3, #2
 801236e:	f88d 3014 	strb.w	r3, [sp, #20]
 8012372:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8012374:	2300      	movs	r3, #0
 8012376:	f8ad 3016 	strh.w	r3, [sp, #22]
 801237a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801237e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012382:	6803      	ldr	r3, [r0, #0]
 8012384:	a904      	add	r1, sp, #16
 8012386:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012388:	4798      	blx	r3
 801238a:	1d29      	adds	r1, r5, #4
 801238c:	a802      	add	r0, sp, #8
 801238e:	f7ff fda7 	bl	8011ee0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012392:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8012396:	88e0      	ldrh	r0, [r4, #6]
 8012398:	7921      	ldrb	r1, [r4, #4]
 801239a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 801239e:	8922      	ldrh	r2, [r4, #8]
 80123a0:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 80123a2:	f88d 1014 	strb.w	r1, [sp, #20]
 80123a6:	eba3 0808 	sub.w	r8, r3, r8
 80123aa:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80123ae:	1bdf      	subs	r7, r3, r7
 80123b0:	b2bb      	uxth	r3, r7
 80123b2:	fa1f f888 	uxth.w	r8, r8
 80123b6:	8967      	ldrh	r7, [r4, #10]
 80123b8:	89a4      	ldrh	r4, [r4, #12]
 80123ba:	4440      	add	r0, r8
 80123bc:	4460      	add	r0, ip
 80123be:	441a      	add	r2, r3
 80123c0:	44b8      	add	r8, r7
 80123c2:	4423      	add	r3, r4
 80123c4:	f8ad 0016 	strh.w	r0, [sp, #22]
 80123c8:	4433      	add	r3, r6
 80123ca:	4432      	add	r2, r6
 80123cc:	44e0      	add	r8, ip
 80123ce:	4c09      	ldr	r4, [pc, #36]	; (80123f4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 80123d0:	6b28      	ldr	r0, [r5, #48]	; 0x30
 80123d2:	9404      	str	r4, [sp, #16]
 80123d4:	f8ad 2018 	strh.w	r2, [sp, #24]
 80123d8:	f8ad 801a 	strh.w	r8, [sp, #26]
 80123dc:	f8ad 301c 	strh.w	r3, [sp, #28]
 80123e0:	6803      	ldr	r3, [r0, #0]
 80123e2:	a904      	add	r1, sp, #16
 80123e4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80123e6:	4798      	blx	r3
 80123e8:	b008      	add	sp, #32
 80123ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80123ee:	bf00      	nop
 80123f0:	0802410c 	.word	0x0802410c
 80123f4:	08024120 	.word	0x08024120

080123f8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 80123f8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80123fa:	4604      	mov	r4, r0
 80123fc:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8012400:	3201      	adds	r2, #1
 8012402:	d112      	bne.n	801242a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8012404:	6803      	ldr	r3, [r0, #0]
 8012406:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801240a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801240e:	f8ad 1004 	strh.w	r1, [sp, #4]
 8012412:	2500      	movs	r5, #0
 8012414:	9500      	str	r5, [sp, #0]
 8012416:	466d      	mov	r5, sp
 8012418:	4629      	mov	r1, r5
 801241a:	f8ad 2006 	strh.w	r2, [sp, #6]
 801241e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012420:	4798      	blx	r3
 8012422:	e895 0003 	ldmia.w	r5, {r0, r1}
 8012426:	e884 0003 	stmia.w	r4, {r0, r1}
 801242a:	4620      	mov	r0, r4
 801242c:	b003      	add	sp, #12
 801242e:	bd30      	pop	{r4, r5, pc}

08012430 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8012430:	b513      	push	{r0, r1, r4, lr}
 8012432:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8012436:	3301      	adds	r3, #1
 8012438:	4604      	mov	r4, r0
 801243a:	d109      	bne.n	8012450 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 801243c:	4601      	mov	r1, r0
 801243e:	4668      	mov	r0, sp
 8012440:	f7ff fd4e 	bl	8011ee0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012444:	f8bd 3000 	ldrh.w	r3, [sp]
 8012448:	8423      	strh	r3, [r4, #32]
 801244a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801244e:	8463      	strh	r3, [r4, #34]	; 0x22
 8012450:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8012454:	b002      	add	sp, #8
 8012456:	bd10      	pop	{r4, pc}

08012458 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8012458:	b513      	push	{r0, r1, r4, lr}
 801245a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 801245e:	3301      	adds	r3, #1
 8012460:	4604      	mov	r4, r0
 8012462:	d109      	bne.n	8012478 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8012464:	4601      	mov	r1, r0
 8012466:	4668      	mov	r0, sp
 8012468:	f7ff fd3a 	bl	8011ee0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801246c:	f8bd 3000 	ldrh.w	r3, [sp]
 8012470:	8423      	strh	r3, [r4, #32]
 8012472:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012476:	8463      	strh	r3, [r4, #34]	; 0x22
 8012478:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 801247c:	b002      	add	sp, #8
 801247e:	bd10      	pop	{r4, pc}

08012480 <_ZN8touchgfx6ScreenC1Ev>:
 8012480:	b570      	push	{r4, r5, r6, lr}
 8012482:	4605      	mov	r5, r0
 8012484:	4b16      	ldr	r3, [pc, #88]	; (80124e0 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8012486:	f845 3b04 	str.w	r3, [r5], #4
 801248a:	2300      	movs	r3, #0
 801248c:	8103      	strh	r3, [r0, #8]
 801248e:	8143      	strh	r3, [r0, #10]
 8012490:	8183      	strh	r3, [r0, #12]
 8012492:	81c3      	strh	r3, [r0, #14]
 8012494:	8203      	strh	r3, [r0, #16]
 8012496:	8243      	strh	r3, [r0, #18]
 8012498:	8283      	strh	r3, [r0, #20]
 801249a:	82c3      	strh	r3, [r0, #22]
 801249c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 80124a0:	6203      	str	r3, [r0, #32]
 80124a2:	8483      	strh	r3, [r0, #36]	; 0x24
 80124a4:	84c3      	strh	r3, [r0, #38]	; 0x26
 80124a6:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 80124aa:	4a0e      	ldr	r2, [pc, #56]	; (80124e4 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 80124ac:	6343      	str	r3, [r0, #52]	; 0x34
 80124ae:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 80124b2:	4b0d      	ldr	r3, [pc, #52]	; (80124e8 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 80124b4:	6042      	str	r2, [r0, #4]
 80124b6:	f9b3 6000 	ldrsh.w	r6, [r3]
 80124ba:	6b93      	ldr	r3, [r2, #56]	; 0x38
 80124bc:	4a0b      	ldr	r2, [pc, #44]	; (80124ec <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 80124be:	4604      	mov	r4, r0
 80124c0:	2101      	movs	r1, #1
 80124c2:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 80124c6:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 80124ca:	f9b2 1000 	ldrsh.w	r1, [r2]
 80124ce:	4628      	mov	r0, r5
 80124d0:	4798      	blx	r3
 80124d2:	6863      	ldr	r3, [r4, #4]
 80124d4:	4628      	mov	r0, r5
 80124d6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80124d8:	4631      	mov	r1, r6
 80124da:	4798      	blx	r3
 80124dc:	4620      	mov	r0, r4
 80124de:	bd70      	pop	{r4, r5, r6, pc}
 80124e0:	08024148 	.word	0x08024148
 80124e4:	08023564 	.word	0x08023564
 80124e8:	2001547e 	.word	0x2001547e
 80124ec:	2001547c 	.word	0x2001547c

080124f0 <_ZN8touchgfx6Screen4drawEv>:
 80124f0:	b507      	push	{r0, r1, r2, lr}
 80124f2:	4b09      	ldr	r3, [pc, #36]	; (8012518 <_ZN8touchgfx6Screen4drawEv+0x28>)
 80124f4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80124f8:	4b08      	ldr	r3, [pc, #32]	; (801251c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 80124fa:	f8ad 2004 	strh.w	r2, [sp, #4]
 80124fe:	f9b3 3000 	ldrsh.w	r3, [r3]
 8012502:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012506:	6803      	ldr	r3, [r0, #0]
 8012508:	2100      	movs	r1, #0
 801250a:	9100      	str	r1, [sp, #0]
 801250c:	689b      	ldr	r3, [r3, #8]
 801250e:	4669      	mov	r1, sp
 8012510:	4798      	blx	r3
 8012512:	b003      	add	sp, #12
 8012514:	f85d fb04 	ldr.w	pc, [sp], #4
 8012518:	2001547c 	.word	0x2001547c
 801251c:	2001547e 	.word	0x2001547e

08012520 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8012520:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012524:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8012528:	2b00      	cmp	r3, #0
 801252a:	b089      	sub	sp, #36	; 0x24
 801252c:	4680      	mov	r8, r0
 801252e:	460c      	mov	r4, r1
 8012530:	4615      	mov	r5, r2
 8012532:	dd0e      	ble.n	8012552 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012534:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8012538:	2b00      	cmp	r3, #0
 801253a:	dd0a      	ble.n	8012552 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801253c:	4628      	mov	r0, r5
 801253e:	f7ff ff5b 	bl	80123f8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8012542:	4621      	mov	r1, r4
 8012544:	f7fe fc01 	bl	8010d4a <_ZNK8touchgfx4Rect9intersectERKS0_>
 8012548:	69eb      	ldr	r3, [r5, #28]
 801254a:	b928      	cbnz	r0, 8012558 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801254c:	461d      	mov	r5, r3
 801254e:	2b00      	cmp	r3, #0
 8012550:	d1f4      	bne.n	801253c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8012552:	b009      	add	sp, #36	; 0x24
 8012554:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012558:	ae04      	add	r6, sp, #16
 801255a:	2b00      	cmp	r3, #0
 801255c:	f000 80b5 	beq.w	80126ca <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8012560:	682b      	ldr	r3, [r5, #0]
 8012562:	4629      	mov	r1, r5
 8012564:	68db      	ldr	r3, [r3, #12]
 8012566:	a802      	add	r0, sp, #8
 8012568:	4798      	blx	r3
 801256a:	4628      	mov	r0, r5
 801256c:	f7ff ff60 	bl	8012430 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8012570:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8012574:	4407      	add	r7, r0
 8012576:	4628      	mov	r0, r5
 8012578:	f7ff ff6e 	bl	8012458 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801257c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8012580:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8012584:	f8ad 2014 	strh.w	r2, [sp, #20]
 8012588:	4418      	add	r0, r3
 801258a:	4621      	mov	r1, r4
 801258c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8012590:	f8ad 0012 	strh.w	r0, [sp, #18]
 8012594:	b23f      	sxth	r7, r7
 8012596:	4630      	mov	r0, r6
 8012598:	f8ad 3016 	strh.w	r3, [sp, #22]
 801259c:	f8ad 7010 	strh.w	r7, [sp, #16]
 80125a0:	f7f8 facc 	bl	800ab3c <_ZN8touchgfx4RectaNERKS0_>
 80125a4:	4628      	mov	r0, r5
 80125a6:	f7ff ff27 	bl	80123f8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80125aa:	4602      	mov	r2, r0
 80125ac:	e896 0003 	ldmia.w	r6, {r0, r1}
 80125b0:	ab06      	add	r3, sp, #24
 80125b2:	e883 0003 	stmia.w	r3, {r0, r1}
 80125b6:	4611      	mov	r1, r2
 80125b8:	4618      	mov	r0, r3
 80125ba:	f7f8 fabf 	bl	800ab3c <_ZN8touchgfx4RectaNERKS0_>
 80125be:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80125c2:	f9b4 1000 	ldrsh.w	r1, [r4]
 80125c6:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 80125ca:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 80125ce:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 80125d2:	4299      	cmp	r1, r3
 80125d4:	d10b      	bne.n	80125ee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80125d6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80125da:	4552      	cmp	r2, sl
 80125dc:	d107      	bne.n	80125ee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80125de:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80125e2:	455a      	cmp	r2, fp
 80125e4:	d103      	bne.n	80125ee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80125e6:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80125ea:	454a      	cmp	r2, r9
 80125ec:	d06d      	beq.n	80126ca <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80125ee:	f1bb 0f00 	cmp.w	fp, #0
 80125f2:	dd65      	ble.n	80126c0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80125f4:	f1b9 0f00 	cmp.w	r9, #0
 80125f8:	dd62      	ble.n	80126c0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80125fa:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80125fe:	fa1f f08a 	uxth.w	r0, sl
 8012602:	4552      	cmp	r2, sl
 8012604:	9000      	str	r0, [sp, #0]
 8012606:	da12      	bge.n	801262e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8012608:	9301      	str	r3, [sp, #4]
 801260a:	9b00      	ldr	r3, [sp, #0]
 801260c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8012610:	f8ad 2012 	strh.w	r2, [sp, #18]
 8012614:	1a9a      	subs	r2, r3, r2
 8012616:	f8ad 1010 	strh.w	r1, [sp, #16]
 801261a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801261e:	f8ad 2016 	strh.w	r2, [sp, #22]
 8012622:	69ea      	ldr	r2, [r5, #28]
 8012624:	4631      	mov	r1, r6
 8012626:	4640      	mov	r0, r8
 8012628:	f7ff ff7a 	bl	8012520 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801262c:	9b01      	ldr	r3, [sp, #4]
 801262e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8012632:	429a      	cmp	r2, r3
 8012634:	b29f      	uxth	r7, r3
 8012636:	da0d      	bge.n	8012654 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8012638:	f8ad 2010 	strh.w	r2, [sp, #16]
 801263c:	1aba      	subs	r2, r7, r2
 801263e:	f8ad a012 	strh.w	sl, [sp, #18]
 8012642:	f8ad 2014 	strh.w	r2, [sp, #20]
 8012646:	f8ad 9016 	strh.w	r9, [sp, #22]
 801264a:	69ea      	ldr	r2, [r5, #28]
 801264c:	4631      	mov	r1, r6
 801264e:	4640      	mov	r0, r8
 8012650:	f7ff ff66 	bl	8012520 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012654:	8822      	ldrh	r2, [r4, #0]
 8012656:	88a3      	ldrh	r3, [r4, #4]
 8012658:	445f      	add	r7, fp
 801265a:	4413      	add	r3, r2
 801265c:	b29b      	uxth	r3, r3
 801265e:	b2bf      	uxth	r7, r7
 8012660:	b23a      	sxth	r2, r7
 8012662:	b219      	sxth	r1, r3
 8012664:	4291      	cmp	r1, r2
 8012666:	dd0d      	ble.n	8012684 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8012668:	1bdb      	subs	r3, r3, r7
 801266a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801266e:	f8ad a012 	strh.w	sl, [sp, #18]
 8012672:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012676:	f8ad 9016 	strh.w	r9, [sp, #22]
 801267a:	69ea      	ldr	r2, [r5, #28]
 801267c:	4631      	mov	r1, r6
 801267e:	4640      	mov	r0, r8
 8012680:	f7ff ff4e 	bl	8012520 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012684:	88e2      	ldrh	r2, [r4, #6]
 8012686:	8863      	ldrh	r3, [r4, #2]
 8012688:	4413      	add	r3, r2
 801268a:	9a00      	ldr	r2, [sp, #0]
 801268c:	444a      	add	r2, r9
 801268e:	b29b      	uxth	r3, r3
 8012690:	fa1f f982 	uxth.w	r9, r2
 8012694:	fa0f f289 	sxth.w	r2, r9
 8012698:	b219      	sxth	r1, r3
 801269a:	428a      	cmp	r2, r1
 801269c:	da15      	bge.n	80126ca <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801269e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80126a2:	f9b4 0000 	ldrsh.w	r0, [r4]
 80126a6:	f8ad 1014 	strh.w	r1, [sp, #20]
 80126aa:	eba3 0309 	sub.w	r3, r3, r9
 80126ae:	f8ad 0010 	strh.w	r0, [sp, #16]
 80126b2:	f8ad 2012 	strh.w	r2, [sp, #18]
 80126b6:	f8ad 3016 	strh.w	r3, [sp, #22]
 80126ba:	69ea      	ldr	r2, [r5, #28]
 80126bc:	4631      	mov	r1, r6
 80126be:	e001      	b.n	80126c4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 80126c0:	69ea      	ldr	r2, [r5, #28]
 80126c2:	4621      	mov	r1, r4
 80126c4:	4640      	mov	r0, r8
 80126c6:	f7ff ff2b 	bl	8012520 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80126ca:	4628      	mov	r0, r5
 80126cc:	f7ff fe94 	bl	80123f8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80126d0:	6861      	ldr	r1, [r4, #4]
 80126d2:	4602      	mov	r2, r0
 80126d4:	6820      	ldr	r0, [r4, #0]
 80126d6:	4633      	mov	r3, r6
 80126d8:	c303      	stmia	r3!, {r0, r1}
 80126da:	4611      	mov	r1, r2
 80126dc:	4630      	mov	r0, r6
 80126de:	f7f8 fa2d 	bl	800ab3c <_ZN8touchgfx4RectaNERKS0_>
 80126e2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80126e6:	2b00      	cmp	r3, #0
 80126e8:	f77f af33 	ble.w	8012552 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80126ec:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80126f0:	2b00      	cmp	r3, #0
 80126f2:	f77f af2e 	ble.w	8012552 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80126f6:	4628      	mov	r0, r5
 80126f8:	f7ff fe9a 	bl	8012430 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80126fc:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8012700:	1a18      	subs	r0, r3, r0
 8012702:	f8ad 0010 	strh.w	r0, [sp, #16]
 8012706:	4628      	mov	r0, r5
 8012708:	f7ff fea6 	bl	8012458 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801270c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8012710:	1a18      	subs	r0, r3, r0
 8012712:	f8ad 0012 	strh.w	r0, [sp, #18]
 8012716:	682b      	ldr	r3, [r5, #0]
 8012718:	4631      	mov	r1, r6
 801271a:	689b      	ldr	r3, [r3, #8]
 801271c:	4628      	mov	r0, r5
 801271e:	4798      	blx	r3
 8012720:	e717      	b.n	8012552 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08012722 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8012722:	b570      	push	{r4, r5, r6, lr}
 8012724:	460c      	mov	r4, r1
 8012726:	b086      	sub	sp, #24
 8012728:	1d06      	adds	r6, r0, #4
 801272a:	2300      	movs	r3, #0
 801272c:	4631      	mov	r1, r6
 801272e:	4605      	mov	r5, r0
 8012730:	a802      	add	r0, sp, #8
 8012732:	9301      	str	r3, [sp, #4]
 8012734:	f7ff fbd4 	bl	8011ee0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012738:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801273c:	8822      	ldrh	r2, [r4, #0]
 801273e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8012742:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8012746:	f8ad 0014 	strh.w	r0, [sp, #20]
 801274a:	1ad2      	subs	r2, r2, r3
 801274c:	8863      	ldrh	r3, [r4, #2]
 801274e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012752:	1a5b      	subs	r3, r3, r1
 8012754:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8012758:	f8ad 1016 	strh.w	r1, [sp, #22]
 801275c:	aa01      	add	r2, sp, #4
 801275e:	a904      	add	r1, sp, #16
 8012760:	4630      	mov	r0, r6
 8012762:	f8ad 3012 	strh.w	r3, [sp, #18]
 8012766:	f7f8 fac1 	bl	800acec <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801276a:	9a01      	ldr	r2, [sp, #4]
 801276c:	b11a      	cbz	r2, 8012776 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801276e:	4621      	mov	r1, r4
 8012770:	4628      	mov	r0, r5
 8012772:	f7ff fed5 	bl	8012520 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012776:	b006      	add	sp, #24
 8012778:	bd70      	pop	{r4, r5, r6, pc}

0801277a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801277a:	b530      	push	{r4, r5, lr}
 801277c:	4602      	mov	r2, r0
 801277e:	4604      	mov	r4, r0
 8012780:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8012784:	b085      	sub	sp, #20
 8012786:	460d      	mov	r5, r1
 8012788:	6851      	ldr	r1, [r2, #4]
 801278a:	466b      	mov	r3, sp
 801278c:	c303      	stmia	r3!, {r0, r1}
 801278e:	4629      	mov	r1, r5
 8012790:	4668      	mov	r0, sp
 8012792:	f7f8 f9d3 	bl	800ab3c <_ZN8touchgfx4RectaNERKS0_>
 8012796:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801279a:	b12b      	cbz	r3, 80127a8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 801279c:	4669      	mov	r1, sp
 801279e:	4620      	mov	r0, r4
 80127a0:	f7ff ffbf 	bl	8012722 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 80127a4:	b005      	add	sp, #20
 80127a6:	bd30      	pop	{r4, r5, pc}
 80127a8:	3404      	adds	r4, #4
 80127aa:	4621      	mov	r1, r4
 80127ac:	a802      	add	r0, sp, #8
 80127ae:	f7ff fb97 	bl	8011ee0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80127b2:	f8bd 3000 	ldrh.w	r3, [sp]
 80127b6:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 80127ba:	1a9b      	subs	r3, r3, r2
 80127bc:	f8ad 3000 	strh.w	r3, [sp]
 80127c0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80127c4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80127c8:	4669      	mov	r1, sp
 80127ca:	1a9b      	subs	r3, r3, r2
 80127cc:	4620      	mov	r0, r4
 80127ce:	f8ad 3002 	strh.w	r3, [sp, #2]
 80127d2:	f7f8 fa52 	bl	800ac7a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 80127d6:	e7e5      	b.n	80127a4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

080127d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 80127d8:	680a      	ldr	r2, [r1, #0]
 80127da:	460b      	mov	r3, r1
 80127dc:	6992      	ldr	r2, [r2, #24]
 80127de:	1d01      	adds	r1, r0, #4
 80127e0:	4618      	mov	r0, r3
 80127e2:	4710      	bx	r2

080127e4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 80127e4:	4298      	cmp	r0, r3
 80127e6:	d200      	bcs.n	80127ea <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 80127e8:	b913      	cbnz	r3, 80127f0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 80127ea:	440a      	add	r2, r1
 80127ec:	b210      	sxth	r0, r2
 80127ee:	4770      	bx	lr
 80127f0:	ee07 0a90 	vmov	s15, r0
 80127f4:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80127f8:	ee07 3a90 	vmov	s15, r3
 80127fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012800:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8012804:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8012808:	ee37 7a66 	vsub.f32	s14, s14, s13
 801280c:	ee07 2a90 	vmov	s15, r2
 8012810:	ee67 5a07 	vmul.f32	s11, s14, s14
 8012814:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8012818:	eee5 6a87 	vfma.f32	s13, s11, s14
 801281c:	ee07 1a90 	vmov	s15, r1
 8012820:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012824:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8012828:	eee6 7a26 	vfma.f32	s15, s12, s13
 801282c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012830:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012834:	bfcc      	ite	gt
 8012836:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801283a:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801283e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012842:	ee17 3a90 	vmov	r3, s15
 8012846:	b218      	sxth	r0, r3
 8012848:	4770      	bx	lr

0801284a <_ZN8touchgfx12TextProviderC1Ev>:
 801284a:	b538      	push	{r3, r4, r5, lr}
 801284c:	2500      	movs	r5, #0
 801284e:	2302      	movs	r3, #2
 8012850:	4604      	mov	r4, r0
 8012852:	e9c0 5500 	strd	r5, r5, [r0]
 8012856:	7403      	strb	r3, [r0, #16]
 8012858:	6145      	str	r5, [r0, #20]
 801285a:	7605      	strb	r5, [r0, #24]
 801285c:	83c5      	strh	r5, [r0, #30]
 801285e:	8405      	strh	r5, [r0, #32]
 8012860:	86c5      	strh	r5, [r0, #54]	; 0x36
 8012862:	8705      	strh	r5, [r0, #56]	; 0x38
 8012864:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8012866:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 801286a:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 801286e:	220e      	movs	r2, #14
 8012870:	4629      	mov	r1, r5
 8012872:	304c      	adds	r0, #76	; 0x4c
 8012874:	f00e f858 	bl	8020928 <memset>
 8012878:	2301      	movs	r3, #1
 801287a:	4620      	mov	r0, r4
 801287c:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8012880:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8012884:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8012888:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 801288c:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8012890:	f7f2 fa74 	bl	8004d7c <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8012894:	4620      	mov	r0, r4
 8012896:	bd38      	pop	{r3, r4, r5, pc}

08012898 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8012898:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801289a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801289e:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 80128a0:	fab0 f080 	clz	r0, r0
 80128a4:	0940      	lsrs	r0, r0, #5
 80128a6:	4770      	bx	lr

080128a8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 80128a8:	b530      	push	{r4, r5, lr}
 80128aa:	2500      	movs	r5, #0
 80128ac:	2401      	movs	r4, #1
 80128ae:	6843      	ldr	r3, [r0, #4]
 80128b0:	b913      	cbnz	r3, 80128b8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 80128b2:	6803      	ldr	r3, [r0, #0]
 80128b4:	b313      	cbz	r3, 80128fc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80128b6:	6043      	str	r3, [r0, #4]
 80128b8:	7e03      	ldrb	r3, [r0, #24]
 80128ba:	b143      	cbz	r3, 80128ce <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 80128bc:	6943      	ldr	r3, [r0, #20]
 80128be:	b12b      	cbz	r3, 80128cc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80128c0:	881a      	ldrh	r2, [r3, #0]
 80128c2:	b11a      	cbz	r2, 80128cc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80128c4:	1c9a      	adds	r2, r3, #2
 80128c6:	6142      	str	r2, [r0, #20]
 80128c8:	8818      	ldrh	r0, [r3, #0]
 80128ca:	bd30      	pop	{r4, r5, pc}
 80128cc:	7605      	strb	r5, [r0, #24]
 80128ce:	6843      	ldr	r3, [r0, #4]
 80128d0:	8819      	ldrh	r1, [r3, #0]
 80128d2:	b199      	cbz	r1, 80128fc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80128d4:	1c9a      	adds	r2, r3, #2
 80128d6:	2902      	cmp	r1, #2
 80128d8:	6042      	str	r2, [r0, #4]
 80128da:	d1f5      	bne.n	80128c8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 80128dc:	7c03      	ldrb	r3, [r0, #16]
 80128de:	2b01      	cmp	r3, #1
 80128e0:	d8e5      	bhi.n	80128ae <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80128e2:	1c5a      	adds	r2, r3, #1
 80128e4:	3302      	adds	r3, #2
 80128e6:	7402      	strb	r2, [r0, #16]
 80128e8:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80128ec:	6143      	str	r3, [r0, #20]
 80128ee:	2b00      	cmp	r3, #0
 80128f0:	d0dd      	beq.n	80128ae <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80128f2:	881b      	ldrh	r3, [r3, #0]
 80128f4:	2b00      	cmp	r3, #0
 80128f6:	d0da      	beq.n	80128ae <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80128f8:	7604      	strb	r4, [r0, #24]
 80128fa:	e7d8      	b.n	80128ae <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80128fc:	2000      	movs	r0, #0
 80128fe:	e7e4      	b.n	80128ca <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08012900 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8012900:	b430      	push	{r4, r5}
 8012902:	6001      	str	r1, [r0, #0]
 8012904:	2100      	movs	r1, #0
 8012906:	6041      	str	r1, [r0, #4]
 8012908:	6815      	ldr	r5, [r2, #0]
 801290a:	6085      	str	r5, [r0, #8]
 801290c:	6852      	ldr	r2, [r2, #4]
 801290e:	6443      	str	r3, [r0, #68]	; 0x44
 8012910:	9b02      	ldr	r3, [sp, #8]
 8012912:	60c2      	str	r2, [r0, #12]
 8012914:	7401      	strb	r1, [r0, #16]
 8012916:	6141      	str	r1, [r0, #20]
 8012918:	7601      	strb	r1, [r0, #24]
 801291a:	8701      	strh	r1, [r0, #56]	; 0x38
 801291c:	8401      	strh	r1, [r0, #32]
 801291e:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8012922:	6483      	str	r3, [r0, #72]	; 0x48
 8012924:	bc30      	pop	{r4, r5}
 8012926:	f7f2 ba29 	b.w	8004d7c <_ZN8touchgfx12TextProvider18initializeInternalEv>

0801292a <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 801292a:	b408      	push	{r3}
 801292c:	b510      	push	{r4, lr}
 801292e:	b085      	sub	sp, #20
 8012930:	ac07      	add	r4, sp, #28
 8012932:	f854 3b04 	ldr.w	r3, [r4], #4
 8012936:	9300      	str	r3, [sp, #0]
 8012938:	4613      	mov	r3, r2
 801293a:	4622      	mov	r2, r4
 801293c:	9403      	str	r4, [sp, #12]
 801293e:	f7ff ffdf 	bl	8012900 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012942:	b005      	add	sp, #20
 8012944:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012948:	b001      	add	sp, #4
 801294a:	4770      	bx	lr

0801294c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 801294c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801294e:	4605      	mov	r5, r0
 8012950:	4608      	mov	r0, r1
 8012952:	b1e9      	cbz	r1, 8012990 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8012954:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8012958:	460b      	mov	r3, r1
 801295a:	f101 0708 	add.w	r7, r1, #8
 801295e:	4622      	mov	r2, r4
 8012960:	6818      	ldr	r0, [r3, #0]
 8012962:	6859      	ldr	r1, [r3, #4]
 8012964:	4626      	mov	r6, r4
 8012966:	c603      	stmia	r6!, {r0, r1}
 8012968:	3308      	adds	r3, #8
 801296a:	42bb      	cmp	r3, r7
 801296c:	4634      	mov	r4, r6
 801296e:	d1f7      	bne.n	8012960 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8012970:	6818      	ldr	r0, [r3, #0]
 8012972:	6030      	str	r0, [r6, #0]
 8012974:	889b      	ldrh	r3, [r3, #4]
 8012976:	80b3      	strh	r3, [r6, #4]
 8012978:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 801297c:	015b      	lsls	r3, r3, #5
 801297e:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8012982:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8012986:	430b      	orrs	r3, r1
 8012988:	425b      	negs	r3, r3
 801298a:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 801298e:	4610      	mov	r0, r2
 8012990:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012992 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8012992:	b538      	push	{r3, r4, r5, lr}
 8012994:	460c      	mov	r4, r1
 8012996:	6811      	ldr	r1, [r2, #0]
 8012998:	4610      	mov	r0, r2
 801299a:	68cd      	ldr	r5, [r1, #12]
 801299c:	4619      	mov	r1, r3
 801299e:	47a8      	blx	r5
 80129a0:	2800      	cmp	r0, #0
 80129a2:	bf08      	it	eq
 80129a4:	4620      	moveq	r0, r4
 80129a6:	bd38      	pop	{r3, r4, r5, pc}

080129a8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 80129a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80129aa:	4604      	mov	r4, r0
 80129ac:	4615      	mov	r5, r2
 80129ae:	4608      	mov	r0, r1
 80129b0:	b93a      	cbnz	r2, 80129c2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 80129b2:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 80129b6:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 80129ba:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 80129be:	4628      	mov	r0, r5
 80129c0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80129c2:	f892 c00d 	ldrb.w	ip, [r2, #13]
 80129c6:	8893      	ldrh	r3, [r2, #4]
 80129c8:	ea4f 160c 	mov.w	r6, ip, lsl #4
 80129cc:	f406 7280 	and.w	r2, r6, #256	; 0x100
 80129d0:	79ee      	ldrb	r6, [r5, #7]
 80129d2:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 80129d6:	4316      	orrs	r6, r2
 80129d8:	19da      	adds	r2, r3, r7
 80129da:	b291      	uxth	r1, r2
 80129dc:	291d      	cmp	r1, #29
 80129de:	b2b7      	uxth	r7, r6
 80129e0:	d87a      	bhi.n	8012ad8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 80129e2:	2201      	movs	r2, #1
 80129e4:	408a      	lsls	r2, r1
 80129e6:	4975      	ldr	r1, [pc, #468]	; (8012bbc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 80129e8:	420a      	tst	r2, r1
 80129ea:	ea4f 06e6 	mov.w	r6, r6, asr #3
 80129ee:	d12d      	bne.n	8012a4c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 80129f0:	f412 7f60 	tst.w	r2, #896	; 0x380
 80129f4:	d070      	beq.n	8012ad8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 80129f6:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 80129fa:	462b      	mov	r3, r5
 80129fc:	f105 0e08 	add.w	lr, r5, #8
 8012a00:	4615      	mov	r5, r2
 8012a02:	6818      	ldr	r0, [r3, #0]
 8012a04:	6859      	ldr	r1, [r3, #4]
 8012a06:	4694      	mov	ip, r2
 8012a08:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8012a0c:	3308      	adds	r3, #8
 8012a0e:	4573      	cmp	r3, lr
 8012a10:	4662      	mov	r2, ip
 8012a12:	d1f6      	bne.n	8012a02 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8012a14:	6818      	ldr	r0, [r3, #0]
 8012a16:	f8cc 0000 	str.w	r0, [ip]
 8012a1a:	889b      	ldrh	r3, [r3, #4]
 8012a1c:	f8ac 3004 	strh.w	r3, [ip, #4]
 8012a20:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8012a24:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8012a28:	b2b3      	uxth	r3, r6
 8012a2a:	1aca      	subs	r2, r1, r3
 8012a2c:	b292      	uxth	r2, r2
 8012a2e:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8012a32:	10d2      	asrs	r2, r2, #3
 8012a34:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8012a38:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8012a3c:	4302      	orrs	r2, r0
 8012a3e:	1bcf      	subs	r7, r1, r7
 8012a40:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8012a44:	1afb      	subs	r3, r7, r3
 8012a46:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8012a4a:	e7b8      	b.n	80129be <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8012a4c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8012a4e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012a52:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8012a54:	f640 6333 	movw	r3, #3635	; 0xe33
 8012a58:	4299      	cmp	r1, r3
 8012a5a:	d110      	bne.n	8012a7e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8012a5c:	6803      	ldr	r3, [r0, #0]
 8012a5e:	68db      	ldr	r3, [r3, #12]
 8012a60:	4798      	blx	r3
 8012a62:	7b41      	ldrb	r1, [r0, #13]
 8012a64:	00cb      	lsls	r3, r1, #3
 8012a66:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012a6a:	7a03      	ldrb	r3, [r0, #8]
 8012a6c:	0648      	lsls	r0, r1, #25
 8012a6e:	ea43 0302 	orr.w	r3, r3, r2
 8012a72:	bf44      	itt	mi
 8012a74:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012a78:	b21b      	sxthmi	r3, r3
 8012a7a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012a7e:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8012a82:	443b      	add	r3, r7
 8012a84:	4433      	add	r3, r6
 8012a86:	b29b      	uxth	r3, r3
 8012a88:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8012a8c:	462a      	mov	r2, r5
 8012a8e:	f105 0c08 	add.w	ip, r5, #8
 8012a92:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012a96:	4635      	mov	r5, r6
 8012a98:	6810      	ldr	r0, [r2, #0]
 8012a9a:	6851      	ldr	r1, [r2, #4]
 8012a9c:	4637      	mov	r7, r6
 8012a9e:	c703      	stmia	r7!, {r0, r1}
 8012aa0:	3208      	adds	r2, #8
 8012aa2:	4562      	cmp	r2, ip
 8012aa4:	463e      	mov	r6, r7
 8012aa6:	d1f7      	bne.n	8012a98 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8012aa8:	6810      	ldr	r0, [r2, #0]
 8012aaa:	6038      	str	r0, [r7, #0]
 8012aac:	8892      	ldrh	r2, [r2, #4]
 8012aae:	80ba      	strh	r2, [r7, #4]
 8012ab0:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8012ab4:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8012ab8:	10db      	asrs	r3, r3, #3
 8012aba:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8012abe:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8012ac2:	4313      	orrs	r3, r2
 8012ac4:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8012ac8:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8012acc:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8012ad0:	1a9b      	subs	r3, r3, r2
 8012ad2:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8012ad6:	e772      	b.n	80129be <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8012ad8:	f023 0204 	bic.w	r2, r3, #4
 8012adc:	f640 611b 	movw	r1, #3611	; 0xe1b
 8012ae0:	428a      	cmp	r2, r1
 8012ae2:	d003      	beq.n	8012aec <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8012ae4:	f640 621d 	movw	r2, #3613	; 0xe1d
 8012ae8:	4293      	cmp	r3, r2
 8012aea:	d120      	bne.n	8012b2e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8012aec:	3b01      	subs	r3, #1
 8012aee:	4602      	mov	r2, r0
 8012af0:	b29b      	uxth	r3, r3
 8012af2:	4629      	mov	r1, r5
 8012af4:	4620      	mov	r0, r4
 8012af6:	f7ff ff4c 	bl	8012992 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8012afa:	7b41      	ldrb	r1, [r0, #13]
 8012afc:	00cb      	lsls	r3, r1, #3
 8012afe:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012b02:	7a03      	ldrb	r3, [r0, #8]
 8012b04:	0649      	lsls	r1, r1, #25
 8012b06:	ea43 0302 	orr.w	r3, r3, r2
 8012b0a:	bf44      	itt	mi
 8012b0c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012b10:	b21b      	sxthmi	r3, r3
 8012b12:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012b16:	7b6b      	ldrb	r3, [r5, #13]
 8012b18:	7aaa      	ldrb	r2, [r5, #10]
 8012b1a:	005b      	lsls	r3, r3, #1
 8012b1c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012b20:	4313      	orrs	r3, r2
 8012b22:	115a      	asrs	r2, r3, #5
 8012b24:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8012b28:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8012b2c:	e036      	b.n	8012b9c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8012b2e:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8012b32:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8012b36:	7a2a      	ldrb	r2, [r5, #8]
 8012b38:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8012b3c:	ea42 0201 	orr.w	r2, r2, r1
 8012b40:	bf1c      	itt	ne
 8012b42:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8012b46:	b212      	sxthne	r2, r2
 8012b48:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8012b4c:	f640 6109 	movw	r1, #3593	; 0xe09
 8012b50:	f023 0210 	bic.w	r2, r3, #16
 8012b54:	428a      	cmp	r2, r1
 8012b56:	d003      	beq.n	8012b60 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8012b58:	f640 6213 	movw	r2, #3603	; 0xe13
 8012b5c:	4293      	cmp	r3, r2
 8012b5e:	d12a      	bne.n	8012bb6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8012b60:	7b6e      	ldrb	r6, [r5, #13]
 8012b62:	0076      	lsls	r6, r6, #1
 8012b64:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8012b68:	7aae      	ldrb	r6, [r5, #10]
 8012b6a:	4316      	orrs	r6, r2
 8012b6c:	f640 6213 	movw	r2, #3603	; 0xe13
 8012b70:	4293      	cmp	r3, r2
 8012b72:	bf18      	it	ne
 8012b74:	f103 33ff 	addne.w	r3, r3, #4294967295
 8012b78:	4602      	mov	r2, r0
 8012b7a:	bf14      	ite	ne
 8012b7c:	b29b      	uxthne	r3, r3
 8012b7e:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8012b82:	4629      	mov	r1, r5
 8012b84:	4620      	mov	r0, r4
 8012b86:	f7ff ff04 	bl	8012992 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8012b8a:	7b43      	ldrb	r3, [r0, #13]
 8012b8c:	7a82      	ldrb	r2, [r0, #10]
 8012b8e:	005b      	lsls	r3, r3, #1
 8012b90:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012b94:	4313      	orrs	r3, r2
 8012b96:	1af6      	subs	r6, r6, r3
 8012b98:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8012b9c:	7b69      	ldrb	r1, [r5, #13]
 8012b9e:	00cb      	lsls	r3, r1, #3
 8012ba0:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012ba4:	7a2b      	ldrb	r3, [r5, #8]
 8012ba6:	4313      	orrs	r3, r2
 8012ba8:	064a      	lsls	r2, r1, #25
 8012baa:	bf44      	itt	mi
 8012bac:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012bb0:	b21b      	sxthmi	r3, r3
 8012bb2:	1bdb      	subs	r3, r3, r7
 8012bb4:	e747      	b.n	8012a46 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8012bb6:	2300      	movs	r3, #0
 8012bb8:	e7b6      	b.n	8012b28 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8012bba:	bf00      	nop
 8012bbc:	3fc00079 	.word	0x3fc00079

08012bc0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8012bc0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012bc4:	4604      	mov	r4, r0
 8012bc6:	b942      	cbnz	r2, 8012bda <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8012bc8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8012bcc:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8012bd0:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8012bd4:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8012bd8:	e047      	b.n	8012c6a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8012bda:	7b51      	ldrb	r1, [r2, #13]
 8012bdc:	8893      	ldrh	r3, [r2, #4]
 8012bde:	010d      	lsls	r5, r1, #4
 8012be0:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8012be4:	79d5      	ldrb	r5, [r2, #7]
 8012be6:	4305      	orrs	r5, r0
 8012be8:	2d04      	cmp	r5, #4
 8012bea:	bfcc      	ite	gt
 8012bec:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8012bf0:	f04f 0e01 	movle.w	lr, #1
 8012bf4:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8012bf8:	f200 80ab 	bhi.w	8012d52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8012bfc:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8012c00:	4283      	cmp	r3, r0
 8012c02:	d216      	bcs.n	8012c32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012c04:	f240 605b 	movw	r0, #1627	; 0x65b
 8012c08:	4283      	cmp	r3, r0
 8012c0a:	d859      	bhi.n	8012cc0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8012c0c:	f240 6057 	movw	r0, #1623	; 0x657
 8012c10:	4283      	cmp	r3, r0
 8012c12:	d20e      	bcs.n	8012c32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012c14:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8012c18:	d24a      	bcs.n	8012cb0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8012c1a:	f240 604e 	movw	r0, #1614	; 0x64e
 8012c1e:	4283      	cmp	r3, r0
 8012c20:	d207      	bcs.n	8012c32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012c22:	f240 601a 	movw	r0, #1562	; 0x61a
 8012c26:	4283      	cmp	r3, r0
 8012c28:	d02a      	beq.n	8012c80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012c2a:	d821      	bhi.n	8012c70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8012c2c:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8012c30:	d35b      	bcc.n	8012cea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012c32:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8012c36:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8012c3a:	f040 80d0 	bne.w	8012dde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8012c3e:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8012c42:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8012c46:	f040 80ca 	bne.w	8012dde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8012c4a:	00cb      	lsls	r3, r1, #3
 8012c4c:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8012c50:	7a13      	ldrb	r3, [r2, #8]
 8012c52:	0649      	lsls	r1, r1, #25
 8012c54:	ea43 0300 	orr.w	r3, r3, r0
 8012c58:	bf44      	itt	mi
 8012c5a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012c5e:	b21b      	sxthmi	r3, r3
 8012c60:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012c64:	1b5d      	subs	r5, r3, r5
 8012c66:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8012c6a:	4610      	mov	r0, r2
 8012c6c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012c70:	f240 604b 	movw	r0, #1611	; 0x64b
 8012c74:	4283      	cmp	r3, r0
 8012c76:	d338      	bcc.n	8012cea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012c78:	f240 604c 	movw	r0, #1612	; 0x64c
 8012c7c:	4283      	cmp	r3, r0
 8012c7e:	d9d8      	bls.n	8012c32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012c80:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8012c84:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8012c88:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8012c8c:	f040 80f2 	bne.w	8012e74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8012c90:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8012c94:	f040 80ee 	bne.w	8012e74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8012c98:	00cb      	lsls	r3, r1, #3
 8012c9a:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8012c9e:	7a13      	ldrb	r3, [r2, #8]
 8012ca0:	064e      	lsls	r6, r1, #25
 8012ca2:	ea43 0300 	orr.w	r3, r3, r0
 8012ca6:	bf44      	itt	mi
 8012ca8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012cac:	b21b      	sxthmi	r3, r3
 8012cae:	e7d9      	b.n	8012c64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8012cb0:	f240 6054 	movw	r0, #1620	; 0x654
 8012cb4:	4283      	cmp	r3, r0
 8012cb6:	d8e3      	bhi.n	8012c80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012cb8:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8012cbc:	d9e0      	bls.n	8012c80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012cbe:	e7b8      	b.n	8012c32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012cc0:	f240 6074 	movw	r0, #1652	; 0x674
 8012cc4:	4283      	cmp	r3, r0
 8012cc6:	d0b4      	beq.n	8012c32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012cc8:	d82d      	bhi.n	8012d26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8012cca:	f240 605e 	movw	r0, #1630	; 0x65e
 8012cce:	4283      	cmp	r3, r0
 8012cd0:	d804      	bhi.n	8012cdc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8012cd2:	f240 605d 	movw	r0, #1629	; 0x65d
 8012cd6:	4283      	cmp	r3, r0
 8012cd8:	d3d2      	bcc.n	8012c80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012cda:	e7aa      	b.n	8012c32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012cdc:	f240 605f 	movw	r0, #1631	; 0x65f
 8012ce0:	4283      	cmp	r3, r0
 8012ce2:	d0cd      	beq.n	8012c80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012ce4:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8012ce8:	d0a3      	beq.n	8012c32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012cea:	00cb      	lsls	r3, r1, #3
 8012cec:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8012cf0:	7a13      	ldrb	r3, [r2, #8]
 8012cf2:	0649      	lsls	r1, r1, #25
 8012cf4:	ea43 0300 	orr.w	r3, r3, r0
 8012cf8:	bf44      	itt	mi
 8012cfa:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012cfe:	b21b      	sxthmi	r3, r3
 8012d00:	1b5d      	subs	r5, r3, r5
 8012d02:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012d06:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8012d0a:	7b53      	ldrb	r3, [r2, #13]
 8012d0c:	015b      	lsls	r3, r3, #5
 8012d0e:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8012d12:	7993      	ldrb	r3, [r2, #6]
 8012d14:	430b      	orrs	r3, r1
 8012d16:	005b      	lsls	r3, r3, #1
 8012d18:	2105      	movs	r1, #5
 8012d1a:	fb93 f3f1 	sdiv	r3, r3, r1
 8012d1e:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8012d22:	440b      	add	r3, r1
 8012d24:	e756      	b.n	8012bd4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8012d26:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8012d2a:	4283      	cmp	r3, r0
 8012d2c:	d809      	bhi.n	8012d42 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8012d2e:	f240 60df 	movw	r0, #1759	; 0x6df
 8012d32:	4283      	cmp	r3, r0
 8012d34:	f4bf af7d 	bcs.w	8012c32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012d38:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8012d3c:	2b05      	cmp	r3, #5
 8012d3e:	d8d4      	bhi.n	8012cea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012d40:	e777      	b.n	8012c32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012d42:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8012d46:	4283      	cmp	r3, r0
 8012d48:	d09a      	beq.n	8012c80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012d4a:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8012d4e:	4283      	cmp	r3, r0
 8012d50:	e7ca      	b.n	8012ce8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8012d52:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8012d56:	d22b      	bcs.n	8012db0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8012d58:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8012d5c:	4283      	cmp	r3, r0
 8012d5e:	d28f      	bcs.n	8012c80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012d60:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8012d64:	4283      	cmp	r3, r0
 8012d66:	d816      	bhi.n	8012d96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8012d68:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8012d6c:	4283      	cmp	r3, r0
 8012d6e:	f4bf af60 	bcs.w	8012c32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012d72:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8012d76:	4283      	cmp	r3, r0
 8012d78:	d80a      	bhi.n	8012d90 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8012d7a:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8012d7e:	4283      	cmp	r3, r0
 8012d80:	f4bf af57 	bcs.w	8012c32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012d84:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8012d88:	4283      	cmp	r3, r0
 8012d8a:	f43f af79 	beq.w	8012c80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012d8e:	e7ac      	b.n	8012cea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012d90:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8012d94:	e7f8      	b.n	8012d88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8012d96:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8012d9a:	4283      	cmp	r3, r0
 8012d9c:	d802      	bhi.n	8012da4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8012d9e:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8012da2:	e798      	b.n	8012cd6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8012da4:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8012da8:	4283      	cmp	r3, r0
 8012daa:	f47f af42 	bne.w	8012c32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012dae:	e767      	b.n	8012c80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012db0:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8012db4:	4283      	cmp	r3, r0
 8012db6:	f43f af63 	beq.w	8012c80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012dba:	d802      	bhi.n	8012dc2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8012dbc:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8012dc0:	e7f2      	b.n	8012da8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8012dc2:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8012dc6:	4283      	cmp	r3, r0
 8012dc8:	d805      	bhi.n	8012dd6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8012dca:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8012dce:	4283      	cmp	r3, r0
 8012dd0:	f4ff af2f 	bcc.w	8012c32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012dd4:	e754      	b.n	8012c80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012dd6:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8012dda:	4283      	cmp	r3, r0
 8012ddc:	e7af      	b.n	8012d3e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8012dde:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8012de2:	4617      	mov	r7, r2
 8012de4:	f102 0808 	add.w	r8, r2, #8
 8012de8:	4666      	mov	r6, ip
 8012dea:	6838      	ldr	r0, [r7, #0]
 8012dec:	6879      	ldr	r1, [r7, #4]
 8012dee:	46e6      	mov	lr, ip
 8012df0:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8012df4:	3708      	adds	r7, #8
 8012df6:	4547      	cmp	r7, r8
 8012df8:	46f4      	mov	ip, lr
 8012dfa:	d1f6      	bne.n	8012dea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8012dfc:	6838      	ldr	r0, [r7, #0]
 8012dfe:	f8ce 0000 	str.w	r0, [lr]
 8012e02:	88b9      	ldrh	r1, [r7, #4]
 8012e04:	f8ae 1004 	strh.w	r1, [lr, #4]
 8012e08:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8012e0c:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8012e10:	d009      	beq.n	8012e26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8012e12:	7b51      	ldrb	r1, [r2, #13]
 8012e14:	7992      	ldrb	r2, [r2, #6]
 8012e16:	0149      	lsls	r1, r1, #5
 8012e18:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8012e1c:	4311      	orrs	r1, r2
 8012e1e:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8012e22:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8012e26:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8012e2a:	b2ad      	uxth	r5, r5
 8012e2c:	d00d      	beq.n	8012e4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8012e2e:	442b      	add	r3, r5
 8012e30:	b29b      	uxth	r3, r3
 8012e32:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8012e36:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8012e3a:	10db      	asrs	r3, r3, #3
 8012e3c:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8012e40:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8012e44:	4313      	orrs	r3, r2
 8012e46:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8012e4a:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8012e4e:	00cb      	lsls	r3, r1, #3
 8012e50:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012e54:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8012e58:	064f      	lsls	r7, r1, #25
 8012e5a:	ea43 0302 	orr.w	r3, r3, r2
 8012e5e:	bf44      	itt	mi
 8012e60:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012e64:	b21b      	sxthmi	r3, r3
 8012e66:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012e6a:	1b5b      	subs	r3, r3, r5
 8012e6c:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8012e70:	4632      	mov	r2, r6
 8012e72:	e6fa      	b.n	8012c6a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8012e74:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8012e78:	4617      	mov	r7, r2
 8012e7a:	f102 0908 	add.w	r9, r2, #8
 8012e7e:	4666      	mov	r6, ip
 8012e80:	6838      	ldr	r0, [r7, #0]
 8012e82:	6879      	ldr	r1, [r7, #4]
 8012e84:	46e0      	mov	r8, ip
 8012e86:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8012e8a:	3708      	adds	r7, #8
 8012e8c:	454f      	cmp	r7, r9
 8012e8e:	46c4      	mov	ip, r8
 8012e90:	d1f6      	bne.n	8012e80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8012e92:	6838      	ldr	r0, [r7, #0]
 8012e94:	f8c8 0000 	str.w	r0, [r8]
 8012e98:	88b9      	ldrh	r1, [r7, #4]
 8012e9a:	f8a8 1004 	strh.w	r1, [r8, #4]
 8012e9e:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8012ea2:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8012ea6:	d009      	beq.n	8012ebc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8012ea8:	7b51      	ldrb	r1, [r2, #13]
 8012eaa:	7992      	ldrb	r2, [r2, #6]
 8012eac:	0149      	lsls	r1, r1, #5
 8012eae:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8012eb2:	4311      	orrs	r1, r2
 8012eb4:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8012eb8:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8012ebc:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8012ec0:	d00e      	beq.n	8012ee0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 8012ec2:	eba3 030e 	sub.w	r3, r3, lr
 8012ec6:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8012eca:	b29b      	uxth	r3, r3
 8012ecc:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8012ed0:	10db      	asrs	r3, r3, #3
 8012ed2:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8012ed6:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8012eda:	4313      	orrs	r3, r2
 8012edc:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8012ee0:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8012ee4:	00cb      	lsls	r3, r1, #3
 8012ee6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012eea:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8012eee:	0648      	lsls	r0, r1, #25
 8012ef0:	ea43 0302 	orr.w	r3, r3, r2
 8012ef4:	bf44      	itt	mi
 8012ef6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012efa:	b21b      	sxthmi	r3, r3
 8012efc:	1b5d      	subs	r5, r3, r5
 8012efe:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8012f02:	e7b5      	b.n	8012e70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08012f04 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8012f04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012f08:	461e      	mov	r6, r3
 8012f0a:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8012f0c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012f10:	4604      	mov	r4, r0
 8012f12:	4617      	mov	r7, r2
 8012f14:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8012f18:	f7f1 feee 	bl	8004cf8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8012f1c:	4605      	mov	r5, r0
 8012f1e:	b918      	cbnz	r0, 8012f28 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8012f20:	6030      	str	r0, [r6, #0]
 8012f22:	4628      	mov	r0, r5
 8012f24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012f28:	683b      	ldr	r3, [r7, #0]
 8012f2a:	4601      	mov	r1, r0
 8012f2c:	68db      	ldr	r3, [r3, #12]
 8012f2e:	4638      	mov	r0, r7
 8012f30:	4798      	blx	r3
 8012f32:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8012f36:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8012f3a:	4602      	mov	r2, r0
 8012f3c:	6030      	str	r0, [r6, #0]
 8012f3e:	d213      	bcs.n	8012f68 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8012f40:	4643      	mov	r3, r8
 8012f42:	4639      	mov	r1, r7
 8012f44:	4620      	mov	r0, r4
 8012f46:	f7ff fe3b 	bl	8012bc0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8012f4a:	6030      	str	r0, [r6, #0]
 8012f4c:	6833      	ldr	r3, [r6, #0]
 8012f4e:	b143      	cbz	r3, 8012f62 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8012f50:	7b5a      	ldrb	r2, [r3, #13]
 8012f52:	7a9b      	ldrb	r3, [r3, #10]
 8012f54:	0052      	lsls	r2, r2, #1
 8012f56:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8012f5a:	4313      	orrs	r3, r2
 8012f5c:	bf0c      	ite	eq
 8012f5e:	2301      	moveq	r3, #1
 8012f60:	2300      	movne	r3, #0
 8012f62:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8012f66:	e7dc      	b.n	8012f22 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8012f68:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8012f6c:	b29b      	uxth	r3, r3
 8012f6e:	2b7f      	cmp	r3, #127	; 0x7f
 8012f70:	d804      	bhi.n	8012f7c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8012f72:	4639      	mov	r1, r7
 8012f74:	4620      	mov	r0, r4
 8012f76:	f7ff fd17 	bl	80129a8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8012f7a:	e7e6      	b.n	8012f4a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8012f7c:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8012f80:	2b00      	cmp	r3, #0
 8012f82:	d0e3      	beq.n	8012f4c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8012f84:	f640 1302 	movw	r3, #2306	; 0x902
 8012f88:	429d      	cmp	r5, r3
 8012f8a:	d1df      	bne.n	8012f4c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8012f8c:	4601      	mov	r1, r0
 8012f8e:	4620      	mov	r0, r4
 8012f90:	f7ff fcdc 	bl	801294c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8012f94:	e7d9      	b.n	8012f4a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08012f96 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8012f96:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012f9a:	461e      	mov	r6, r3
 8012f9c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8012f9e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012fa2:	4604      	mov	r4, r0
 8012fa4:	4617      	mov	r7, r2
 8012fa6:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8012faa:	f7f1 fea5 	bl	8004cf8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8012fae:	4605      	mov	r5, r0
 8012fb0:	b918      	cbnz	r0, 8012fba <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 8012fb2:	6030      	str	r0, [r6, #0]
 8012fb4:	4628      	mov	r0, r5
 8012fb6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8012fba:	683b      	ldr	r3, [r7, #0]
 8012fbc:	4601      	mov	r1, r0
 8012fbe:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8012fc2:	4638      	mov	r0, r7
 8012fc4:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8012fc8:	47c8      	blx	r9
 8012fca:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8012fce:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8012fd2:	4602      	mov	r2, r0
 8012fd4:	6030      	str	r0, [r6, #0]
 8012fd6:	d213      	bcs.n	8013000 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8012fd8:	4643      	mov	r3, r8
 8012fda:	4639      	mov	r1, r7
 8012fdc:	4620      	mov	r0, r4
 8012fde:	f7ff fdef 	bl	8012bc0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8012fe2:	6030      	str	r0, [r6, #0]
 8012fe4:	6833      	ldr	r3, [r6, #0]
 8012fe6:	b143      	cbz	r3, 8012ffa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8012fe8:	7b5a      	ldrb	r2, [r3, #13]
 8012fea:	7a9b      	ldrb	r3, [r3, #10]
 8012fec:	0052      	lsls	r2, r2, #1
 8012fee:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8012ff2:	4313      	orrs	r3, r2
 8012ff4:	bf0c      	ite	eq
 8012ff6:	2301      	moveq	r3, #1
 8012ff8:	2300      	movne	r3, #0
 8012ffa:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8012ffe:	e7d9      	b.n	8012fb4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8013000:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8013004:	b29b      	uxth	r3, r3
 8013006:	2b7f      	cmp	r3, #127	; 0x7f
 8013008:	d804      	bhi.n	8013014 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 801300a:	4639      	mov	r1, r7
 801300c:	4620      	mov	r0, r4
 801300e:	f7ff fccb 	bl	80129a8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8013012:	e7e6      	b.n	8012fe2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8013014:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8013018:	2b00      	cmp	r3, #0
 801301a:	d0e3      	beq.n	8012fe4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 801301c:	f640 1302 	movw	r3, #2306	; 0x902
 8013020:	429d      	cmp	r5, r3
 8013022:	d1df      	bne.n	8012fe4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8013024:	4601      	mov	r1, r0
 8013026:	4620      	mov	r0, r4
 8013028:	f7ff fc90 	bl	801294c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801302c:	e7d9      	b.n	8012fe2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801302e <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801302e:	b510      	push	{r4, lr}
 8013030:	4604      	mov	r4, r0
 8013032:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8013036:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8013038:	b1f1      	cbz	r1, 8013078 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801303a:	2b0a      	cmp	r3, #10
 801303c:	d02f      	beq.n	801309e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801303e:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8013040:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8013044:	3901      	subs	r1, #1
 8013046:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8013048:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 801304c:	1c51      	adds	r1, r2, #1
 801304e:	b289      	uxth	r1, r1
 8013050:	2901      	cmp	r1, #1
 8013052:	bf84      	itt	hi
 8013054:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8013058:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 801305a:	f103 0201 	add.w	r2, r3, #1
 801305e:	8722      	strh	r2, [r4, #56]	; 0x38
 8013060:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8013062:	bf98      	it	ls
 8013064:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 8013066:	4413      	add	r3, r2
 8013068:	b29b      	uxth	r3, r3
 801306a:	2b09      	cmp	r3, #9
 801306c:	bf88      	it	hi
 801306e:	3b0a      	subhi	r3, #10
 8013070:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8013074:	8458      	strh	r0, [r3, #34]	; 0x22
 8013076:	e7dc      	b.n	8013032 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8013078:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801307a:	2b0a      	cmp	r3, #10
 801307c:	d00f      	beq.n	801309e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801307e:	4620      	mov	r0, r4
 8013080:	f7ff fc12 	bl	80128a8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8013084:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8013086:	1c5a      	adds	r2, r3, #1
 8013088:	8722      	strh	r2, [r4, #56]	; 0x38
 801308a:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801308c:	4413      	add	r3, r2
 801308e:	b29b      	uxth	r3, r3
 8013090:	2b09      	cmp	r3, #9
 8013092:	bf88      	it	hi
 8013094:	3b0a      	subhi	r3, #10
 8013096:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801309a:	8458      	strh	r0, [r3, #34]	; 0x22
 801309c:	e7ec      	b.n	8013078 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801309e:	bd10      	pop	{r4, pc}

080130a0 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 80130a0:	b538      	push	{r3, r4, r5, lr}
 80130a2:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80130a4:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 80130a8:	4604      	mov	r4, r0
 80130aa:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 80130ac:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 80130ae:	3a01      	subs	r2, #1
 80130b0:	8702      	strh	r2, [r0, #56]	; 0x38
 80130b2:	1c5a      	adds	r2, r3, #1
 80130b4:	b292      	uxth	r2, r2
 80130b6:	2a09      	cmp	r2, #9
 80130b8:	bf86      	itte	hi
 80130ba:	3b09      	subhi	r3, #9
 80130bc:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 80130be:	86c2      	strhls	r2, [r0, #54]	; 0x36
 80130c0:	f7ff ffb5 	bl	801302e <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 80130c4:	8c23      	ldrh	r3, [r4, #32]
 80130c6:	2b01      	cmp	r3, #1
 80130c8:	bf9c      	itt	ls
 80130ca:	3301      	addls	r3, #1
 80130cc:	8423      	strhls	r3, [r4, #32]
 80130ce:	8be3      	ldrh	r3, [r4, #30]
 80130d0:	b90b      	cbnz	r3, 80130d6 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 80130d2:	2302      	movs	r3, #2
 80130d4:	83e3      	strh	r3, [r4, #30]
 80130d6:	8be3      	ldrh	r3, [r4, #30]
 80130d8:	3b01      	subs	r3, #1
 80130da:	b29b      	uxth	r3, r3
 80130dc:	83e3      	strh	r3, [r4, #30]
 80130de:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80130e2:	4628      	mov	r0, r5
 80130e4:	8365      	strh	r5, [r4, #26]
 80130e6:	bd38      	pop	{r3, r4, r5, pc}

080130e8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 80130e8:	428a      	cmp	r2, r1
 80130ea:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80130ee:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 80130f0:	d931      	bls.n	8013156 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 80130f2:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 80130f4:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 80130f8:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 80130fc:	19ee      	adds	r6, r5, r7
 80130fe:	1a54      	subs	r4, r2, r1
 8013100:	3e01      	subs	r6, #1
 8013102:	fa1f fe84 	uxth.w	lr, r4
 8013106:	b2b4      	uxth	r4, r6
 8013108:	eba4 090e 	sub.w	r9, r4, lr
 801310c:	fa1f f989 	uxth.w	r9, r9
 8013110:	2c09      	cmp	r4, #9
 8013112:	4626      	mov	r6, r4
 8013114:	bf88      	it	hi
 8013116:	f1a4 060a 	subhi.w	r6, r4, #10
 801311a:	f1bc 0f00 	cmp.w	ip, #0
 801311e:	bf08      	it	eq
 8013120:	f04f 0c02 	moveq.w	ip, #2
 8013124:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8013128:	f10c 3cff 	add.w	ip, ip, #4294967295
 801312c:	fa1f fc8c 	uxth.w	ip, ip
 8013130:	3c01      	subs	r4, #1
 8013132:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 8013136:	b2a4      	uxth	r4, r4
 8013138:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 801313c:	454c      	cmp	r4, r9
 801313e:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 8013142:	d1e5      	bne.n	8013110 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8013144:	eba5 050e 	sub.w	r5, r5, lr
 8013148:	eb0e 0408 	add.w	r4, lr, r8
 801314c:	8705      	strh	r5, [r0, #56]	; 0x38
 801314e:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 8013152:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 8013156:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8013158:	1a64      	subs	r4, r4, r1
 801315a:	4439      	add	r1, r7
 801315c:	b289      	uxth	r1, r1
 801315e:	2909      	cmp	r1, #9
 8013160:	bf88      	it	hi
 8013162:	390a      	subhi	r1, #10
 8013164:	8704      	strh	r4, [r0, #56]	; 0x38
 8013166:	86c1      	strh	r1, [r0, #54]	; 0x36
 8013168:	250a      	movs	r5, #10
 801316a:	b18a      	cbz	r2, 8013190 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 801316c:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 801316e:	3a01      	subs	r2, #1
 8013170:	b292      	uxth	r2, r2
 8013172:	3101      	adds	r1, #1
 8013174:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8013178:	8701      	strh	r1, [r0, #56]	; 0x38
 801317a:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801317c:	b901      	cbnz	r1, 8013180 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 801317e:	86c5      	strh	r5, [r0, #54]	; 0x36
 8013180:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8013182:	3901      	subs	r1, #1
 8013184:	b289      	uxth	r1, r1
 8013186:	86c1      	strh	r1, [r0, #54]	; 0x36
 8013188:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801318c:	844c      	strh	r4, [r1, #34]	; 0x22
 801318e:	e7ec      	b.n	801316a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8013190:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013194:	f7ff bf4b 	b.w	801302e <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08013198 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8013198:	b570      	push	{r4, r5, r6, lr}
 801319a:	2500      	movs	r5, #0
 801319c:	4295      	cmp	r5, r2
 801319e:	d011      	beq.n	80131c4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 80131a0:	8bc4      	ldrh	r4, [r0, #30]
 80131a2:	f831 6b02 	ldrh.w	r6, [r1], #2
 80131a6:	4414      	add	r4, r2
 80131a8:	3c01      	subs	r4, #1
 80131aa:	1b64      	subs	r4, r4, r5
 80131ac:	b2a4      	uxth	r4, r4
 80131ae:	2c01      	cmp	r4, #1
 80131b0:	bf88      	it	hi
 80131b2:	3c02      	subhi	r4, #2
 80131b4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80131b8:	8b64      	ldrh	r4, [r4, #26]
 80131ba:	42b4      	cmp	r4, r6
 80131bc:	d117      	bne.n	80131ee <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 80131be:	3501      	adds	r5, #1
 80131c0:	b2ad      	uxth	r5, r5
 80131c2:	e7eb      	b.n	801319c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 80131c4:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80131c8:	2400      	movs	r4, #0
 80131ca:	4413      	add	r3, r2
 80131cc:	b2a2      	uxth	r2, r4
 80131ce:	429a      	cmp	r2, r3
 80131d0:	da0f      	bge.n	80131f2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 80131d2:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 80131d4:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 80131d8:	4432      	add	r2, r6
 80131da:	b292      	uxth	r2, r2
 80131dc:	2a09      	cmp	r2, #9
 80131de:	bf88      	it	hi
 80131e0:	3a0a      	subhi	r2, #10
 80131e2:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80131e6:	3401      	adds	r4, #1
 80131e8:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 80131ea:	42aa      	cmp	r2, r5
 80131ec:	d0ee      	beq.n	80131cc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 80131ee:	2000      	movs	r0, #0
 80131f0:	bd70      	pop	{r4, r5, r6, pc}
 80131f2:	2001      	movs	r0, #1
 80131f4:	e7fc      	b.n	80131f0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

080131f6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 80131f6:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80131fa:	4605      	mov	r5, r0
 80131fc:	4616      	mov	r6, r2
 80131fe:	1c8c      	adds	r4, r1, #2
 8013200:	8809      	ldrh	r1, [r1, #0]
 8013202:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8013206:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 801320a:	42b3      	cmp	r3, r6
 801320c:	d124      	bne.n	8013258 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801320e:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8013212:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8013216:	f001 070f 	and.w	r7, r1, #15
 801321a:	f8cd 8000 	str.w	r8, [sp]
 801321e:	464b      	mov	r3, r9
 8013220:	4652      	mov	r2, sl
 8013222:	4621      	mov	r1, r4
 8013224:	4628      	mov	r0, r5
 8013226:	f7ff ffb7 	bl	8013198 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 801322a:	4683      	mov	fp, r0
 801322c:	b168      	cbz	r0, 801324a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801322e:	eb0a 0109 	add.w	r1, sl, r9
 8013232:	4441      	add	r1, r8
 8013234:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8013238:	463a      	mov	r2, r7
 801323a:	4649      	mov	r1, r9
 801323c:	4628      	mov	r0, r5
 801323e:	f7ff ff53 	bl	80130e8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8013242:	4658      	mov	r0, fp
 8013244:	b003      	add	sp, #12
 8013246:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801324a:	eb07 010a 	add.w	r1, r7, sl
 801324e:	4449      	add	r1, r9
 8013250:	4441      	add	r1, r8
 8013252:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8013256:	e7d2      	b.n	80131fe <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8013258:	f04f 0b00 	mov.w	fp, #0
 801325c:	e7f1      	b.n	8013242 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801325e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801325e:	b570      	push	{r4, r5, r6, lr}
 8013260:	8810      	ldrh	r0, [r2, #0]
 8013262:	4298      	cmp	r0, r3
 8013264:	d817      	bhi.n	8013296 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8013266:	1e48      	subs	r0, r1, #1
 8013268:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 801326c:	4298      	cmp	r0, r3
 801326e:	d312      	bcc.n	8013296 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8013270:	2400      	movs	r4, #0
 8013272:	428c      	cmp	r4, r1
 8013274:	d20f      	bcs.n	8013296 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8013276:	1860      	adds	r0, r4, r1
 8013278:	1040      	asrs	r0, r0, #1
 801327a:	0085      	lsls	r5, r0, #2
 801327c:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8013280:	42b3      	cmp	r3, r6
 8013282:	d902      	bls.n	801328a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8013284:	3001      	adds	r0, #1
 8013286:	b284      	uxth	r4, r0
 8013288:	e7f3      	b.n	8013272 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801328a:	d201      	bcs.n	8013290 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 801328c:	b281      	uxth	r1, r0
 801328e:	e7f0      	b.n	8013272 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8013290:	442a      	add	r2, r5
 8013292:	8850      	ldrh	r0, [r2, #2]
 8013294:	bd70      	pop	{r4, r5, r6, pc}
 8013296:	2000      	movs	r0, #0
 8013298:	e7fc      	b.n	8013294 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0801329a <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 801329a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801329e:	6c45      	ldr	r5, [r0, #68]	; 0x44
 80132a0:	886f      	ldrh	r7, [r5, #2]
 80132a2:	4604      	mov	r4, r0
 80132a4:	087f      	lsrs	r7, r7, #1
 80132a6:	260b      	movs	r6, #11
 80132a8:	3e01      	subs	r6, #1
 80132aa:	d013      	beq.n	80132d4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80132ac:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80132ae:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80132b2:	462a      	mov	r2, r5
 80132b4:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80132b8:	4639      	mov	r1, r7
 80132ba:	4643      	mov	r3, r8
 80132bc:	4620      	mov	r0, r4
 80132be:	f7ff ffce 	bl	801325e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 80132c2:	b138      	cbz	r0, 80132d4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80132c4:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 80132c8:	4642      	mov	r2, r8
 80132ca:	4620      	mov	r0, r4
 80132cc:	f7ff ff93 	bl	80131f6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 80132d0:	2800      	cmp	r0, #0
 80132d2:	d1e9      	bne.n	80132a8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 80132d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080132d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 80132d8:	b570      	push	{r4, r5, r6, lr}
 80132da:	694a      	ldr	r2, [r1, #20]
 80132dc:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80132de:	684b      	ldr	r3, [r1, #4]
 80132e0:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 80132e2:	1b54      	subs	r4, r2, r5
 80132e4:	f000 8106 	beq.w	80134f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 80132e8:	1b9b      	subs	r3, r3, r6
 80132ea:	d003      	beq.n	80132f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80132ec:	4363      	muls	r3, r4
 80132ee:	2210      	movs	r2, #16
 80132f0:	fb93 f3f2 	sdiv	r3, r3, r2
 80132f4:	680c      	ldr	r4, [r1, #0]
 80132f6:	698a      	ldr	r2, [r1, #24]
 80132f8:	1b65      	subs	r5, r4, r5
 80132fa:	f000 80fd 	beq.w	80134f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 80132fe:	1b92      	subs	r2, r2, r6
 8013300:	d003      	beq.n	801330a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8013302:	436a      	muls	r2, r5
 8013304:	2410      	movs	r4, #16
 8013306:	fb92 f2f4 	sdiv	r2, r2, r4
 801330a:	1a9b      	subs	r3, r3, r2
 801330c:	ee07 3a90 	vmov	s15, r3
 8013310:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8013534 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8013314:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013318:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801331c:	ee67 7a84 	vmul.f32	s15, s15, s8
 8013320:	460a      	mov	r2, r1
 8013322:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8013326:	4603      	mov	r3, r0
 8013328:	f100 040c 	add.w	r4, r0, #12
 801332c:	eeb1 6a43 	vneg.f32	s12, s6
 8013330:	edd2 7a02 	vldr	s15, [r2, #8]
 8013334:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8013338:	3214      	adds	r2, #20
 801333a:	ece3 6a01 	vstmia	r3!, {s13}
 801333e:	ed52 7a02 	vldr	s15, [r2, #-8]
 8013342:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8013346:	429c      	cmp	r4, r3
 8013348:	edc3 7a02 	vstr	s15, [r3, #8]
 801334c:	ed52 7a01 	vldr	s15, [r2, #-4]
 8013350:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8013354:	edc3 7a05 	vstr	s15, [r3, #20]
 8013358:	d1ea      	bne.n	8013330 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801335a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801335c:	698b      	ldr	r3, [r1, #24]
 801335e:	edd0 4a02 	vldr	s9, [r0, #8]
 8013362:	edd0 3a00 	vldr	s7, [r0]
 8013366:	edd0 6a01 	vldr	s13, [r0, #4]
 801336a:	ed90 5a05 	vldr	s10, [r0, #20]
 801336e:	ed90 2a03 	vldr	s4, [r0, #12]
 8013372:	edd0 5a04 	vldr	s11, [r0, #16]
 8013376:	ed90 1a07 	vldr	s2, [r0, #28]
 801337a:	edd0 2a06 	vldr	s5, [r0, #24]
 801337e:	1a9b      	subs	r3, r3, r2
 8013380:	ee07 3a90 	vmov	s15, r3
 8013384:	684b      	ldr	r3, [r1, #4]
 8013386:	1a9b      	subs	r3, r3, r2
 8013388:	ee07 3a10 	vmov	s14, r3
 801338c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013390:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8013394:	ee67 7a84 	vmul.f32	s15, s15, s8
 8013398:	ee73 4ae4 	vsub.f32	s9, s7, s9
 801339c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80133a0:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 80133a4:	ee27 7a04 	vmul.f32	s14, s14, s8
 80133a8:	ee75 5ac5 	vsub.f32	s11, s11, s10
 80133ac:	eee6 7a87 	vfma.f32	s15, s13, s14
 80133b0:	ee32 5a45 	vsub.f32	s10, s4, s10
 80133b4:	ee67 7a83 	vmul.f32	s15, s15, s6
 80133b8:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 80133bc:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80133be:	694a      	ldr	r2, [r1, #20]
 80133c0:	1b13      	subs	r3, r2, r4
 80133c2:	ee07 3a10 	vmov	s14, r3
 80133c6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80133ca:	680b      	ldr	r3, [r1, #0]
 80133cc:	ee27 7a04 	vmul.f32	s14, s14, s8
 80133d0:	1b1b      	subs	r3, r3, r4
 80133d2:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80133d6:	ee07 3a10 	vmov	s14, r3
 80133da:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80133de:	ee27 7a04 	vmul.f32	s14, s14, s8
 80133e2:	eee6 4a87 	vfma.f32	s9, s13, s14
 80133e6:	ee64 4a86 	vmul.f32	s9, s9, s12
 80133ea:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 80133ee:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80133f0:	698b      	ldr	r3, [r1, #24]
 80133f2:	1a9b      	subs	r3, r3, r2
 80133f4:	ee06 3a90 	vmov	s13, r3
 80133f8:	684b      	ldr	r3, [r1, #4]
 80133fa:	1a9b      	subs	r3, r3, r2
 80133fc:	ee07 3a10 	vmov	s14, r3
 8013400:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8013404:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013408:	ee66 6a84 	vmul.f32	s13, s13, s8
 801340c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013410:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8013414:	eee5 6a87 	vfma.f32	s13, s11, s14
 8013418:	ee66 6a83 	vmul.f32	s13, s13, s6
 801341c:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8013420:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8013422:	694a      	ldr	r2, [r1, #20]
 8013424:	1b13      	subs	r3, r2, r4
 8013426:	ee07 3a10 	vmov	s14, r3
 801342a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801342e:	680b      	ldr	r3, [r1, #0]
 8013430:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013434:	1b1b      	subs	r3, r3, r4
 8013436:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801343a:	ee07 3a10 	vmov	s14, r3
 801343e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013442:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013446:	eea5 5a87 	vfma.f32	s10, s11, s14
 801344a:	edd0 5a08 	vldr	s11, [r0, #32]
 801344e:	ee25 5a06 	vmul.f32	s10, s10, s12
 8013452:	ee31 1a65 	vsub.f32	s2, s2, s11
 8013456:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 801345a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801345c:	698b      	ldr	r3, [r1, #24]
 801345e:	1a9b      	subs	r3, r3, r2
 8013460:	ee07 3a10 	vmov	s14, r3
 8013464:	684b      	ldr	r3, [r1, #4]
 8013466:	1a9b      	subs	r3, r3, r2
 8013468:	ee01 3a90 	vmov	s3, r3
 801346c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013470:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8013474:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013478:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 801347c:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8013480:	ee61 1a84 	vmul.f32	s3, s3, s8
 8013484:	eea1 7a21 	vfma.f32	s14, s2, s3
 8013488:	ee27 7a03 	vmul.f32	s14, s14, s6
 801348c:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8013490:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8013492:	694a      	ldr	r2, [r1, #20]
 8013494:	1b13      	subs	r3, r2, r4
 8013496:	ee03 3a10 	vmov	s6, r3
 801349a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801349e:	680b      	ldr	r3, [r1, #0]
 80134a0:	ee23 3a04 	vmul.f32	s6, s6, s8
 80134a4:	1b1b      	subs	r3, r3, r4
 80134a6:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 80134aa:	ee03 3a10 	vmov	s6, r3
 80134ae:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80134b2:	ee23 4a04 	vmul.f32	s8, s6, s8
 80134b6:	eee1 5a04 	vfma.f32	s11, s2, s8
 80134ba:	ee25 6a86 	vmul.f32	s12, s11, s12
 80134be:	ee62 5a67 	vnmul.f32	s11, s4, s15
 80134c2:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 80134c6:	eee3 5aa6 	vfma.f32	s11, s7, s13
 80134ca:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80134ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80134d2:	dd13      	ble.n	80134fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 80134d4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80134d8:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 80134dc:	63c3      	str	r3, [r0, #60]	; 0x3c
 80134de:	eee3 7a87 	vfma.f32	s15, s7, s14
 80134e2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80134e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80134ea:	dd15      	ble.n	8013518 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 80134ec:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80134f0:	6403      	str	r3, [r0, #64]	; 0x40
 80134f2:	bd70      	pop	{r4, r5, r6, pc}
 80134f4:	4623      	mov	r3, r4
 80134f6:	e6fd      	b.n	80132f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80134f8:	462a      	mov	r2, r5
 80134fa:	e706      	b.n	801330a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80134fc:	d502      	bpl.n	8013504 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 80134fe:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8013502:	e7e9      	b.n	80134d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8013504:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8013508:	eea3 2a85 	vfma.f32	s4, s7, s10
 801350c:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8013510:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013514:	dade      	bge.n	80134d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8013516:	e7f2      	b.n	80134fe <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8013518:	d502      	bpl.n	8013520 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801351a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801351e:	e7e7      	b.n	80134f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8013520:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8013524:	eee3 4a86 	vfma.f32	s9, s7, s12
 8013528:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 801352c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013530:	dadc      	bge.n	80134ec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8013532:	e7f2      	b.n	801351a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8013534:	3d800000 	.word	0x3d800000

08013538 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8013538:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801353c:	2714      	movs	r7, #20
 801353e:	435f      	muls	r7, r3
 8013540:	eb02 0c07 	add.w	ip, r2, r7
 8013544:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8013548:	f115 0e0f 	adds.w	lr, r5, #15
 801354c:	f100 80a2 	bmi.w	8013694 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8013550:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8013554:	9c08      	ldr	r4, [sp, #32]
 8013556:	f8c0 e014 	str.w	lr, [r0, #20]
 801355a:	2614      	movs	r6, #20
 801355c:	4366      	muls	r6, r4
 801355e:	eb02 0806 	add.w	r8, r2, r6
 8013562:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8013566:	f115 040f 	adds.w	r4, r5, #15
 801356a:	f100 809f 	bmi.w	80136ac <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801356e:	1124      	asrs	r4, r4, #4
 8013570:	eba4 040e 	sub.w	r4, r4, lr
 8013574:	6184      	str	r4, [r0, #24]
 8013576:	2c00      	cmp	r4, #0
 8013578:	f000 808a 	beq.w	8013690 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 801357c:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8013580:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8013584:	5995      	ldr	r5, [r2, r6]
 8013586:	eba4 0809 	sub.w	r8, r4, r9
 801358a:	59d4      	ldr	r4, [r2, r7]
 801358c:	eba5 0a04 	sub.w	sl, r5, r4
 8013590:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8013594:	fb0e fe05 	mul.w	lr, lr, r5
 8013598:	fb0a ee19 	mls	lr, sl, r9, lr
 801359c:	fb08 e404 	mla	r4, r8, r4, lr
 80135a0:	ea4f 1608 	mov.w	r6, r8, lsl #4
 80135a4:	3c01      	subs	r4, #1
 80135a6:	19a4      	adds	r4, r4, r6
 80135a8:	f100 808c 	bmi.w	80136c4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 80135ac:	fb94 fef6 	sdiv	lr, r4, r6
 80135b0:	f8c0 e000 	str.w	lr, [r0]
 80135b4:	fb06 441e 	mls	r4, r6, lr, r4
 80135b8:	6104      	str	r4, [r0, #16]
 80135ba:	2d00      	cmp	r5, #0
 80135bc:	f2c0 8095 	blt.w	80136ea <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 80135c0:	fb95 f4f6 	sdiv	r4, r5, r6
 80135c4:	6044      	str	r4, [r0, #4]
 80135c6:	fb06 5514 	mls	r5, r6, r4, r5
 80135ca:	6085      	str	r5, [r0, #8]
 80135cc:	60c6      	str	r6, [r0, #12]
 80135ce:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80135d2:	6945      	ldr	r5, [r0, #20]
 80135d4:	59d2      	ldr	r2, [r2, r7]
 80135d6:	eddf 6a4d 	vldr	s13, [pc, #308]	; 801370c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 80135da:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 80135de:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 80135e2:	ee07 4a10 	vmov	s14, r4
 80135e6:	6804      	ldr	r4, [r0, #0]
 80135e8:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 80135ec:	ee07 2a90 	vmov	s15, r2
 80135f0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80135f4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80135f8:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80135fc:	ee27 7a26 	vmul.f32	s14, s14, s13
 8013600:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8013604:	edd3 6a00 	vldr	s13, [r3]
 8013608:	eee6 6a07 	vfma.f32	s13, s12, s14
 801360c:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8013610:	eee6 6a27 	vfma.f32	s13, s12, s15
 8013614:	edc0 6a07 	vstr	s13, [r0, #28]
 8013618:	edd0 6a01 	vldr	s13, [r0, #4]
 801361c:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8013620:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8013624:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8013628:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801362c:	ed80 6a08 	vstr	s12, [r0, #32]
 8013630:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8013632:	6242      	str	r2, [r0, #36]	; 0x24
 8013634:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8013638:	ed93 6a03 	vldr	s12, [r3, #12]
 801363c:	eea5 6a87 	vfma.f32	s12, s11, s14
 8013640:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8013644:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8013648:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 801364c:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8013650:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8013654:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8013658:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 801365c:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801365e:	6302      	str	r2, [r0, #48]	; 0x30
 8013660:	ed93 6a06 	vldr	s12, [r3, #24]
 8013664:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8013668:	eea5 6a87 	vfma.f32	s12, s11, s14
 801366c:	eeb0 7a46 	vmov.f32	s14, s12
 8013670:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8013674:	eea6 7a27 	vfma.f32	s14, s12, s15
 8013678:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801367c:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8013680:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8013684:	eee6 7a87 	vfma.f32	s15, s13, s14
 8013688:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 801368c:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 801368e:	63c3      	str	r3, [r0, #60]	; 0x3c
 8013690:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8013694:	f1c5 0501 	rsb	r5, r5, #1
 8013698:	f015 050f 	ands.w	r5, r5, #15
 801369c:	bf18      	it	ne
 801369e:	2501      	movne	r5, #1
 80136a0:	2410      	movs	r4, #16
 80136a2:	fb9e fef4 	sdiv	lr, lr, r4
 80136a6:	ebae 0e05 	sub.w	lr, lr, r5
 80136aa:	e753      	b.n	8013554 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 80136ac:	f1c5 0501 	rsb	r5, r5, #1
 80136b0:	f015 050f 	ands.w	r5, r5, #15
 80136b4:	bf18      	it	ne
 80136b6:	2501      	movne	r5, #1
 80136b8:	f04f 0910 	mov.w	r9, #16
 80136bc:	fb94 f4f9 	sdiv	r4, r4, r9
 80136c0:	1b64      	subs	r4, r4, r5
 80136c2:	e755      	b.n	8013570 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 80136c4:	4264      	negs	r4, r4
 80136c6:	fb94 fef6 	sdiv	lr, r4, r6
 80136ca:	f1ce 0800 	rsb	r8, lr, #0
 80136ce:	fb06 441e 	mls	r4, r6, lr, r4
 80136d2:	f8c0 8000 	str.w	r8, [r0]
 80136d6:	6104      	str	r4, [r0, #16]
 80136d8:	2c00      	cmp	r4, #0
 80136da:	f43f af6e 	beq.w	80135ba <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 80136de:	ea6f 0e0e 	mvn.w	lr, lr
 80136e2:	f8c0 e000 	str.w	lr, [r0]
 80136e6:	1b34      	subs	r4, r6, r4
 80136e8:	e766      	b.n	80135b8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 80136ea:	426d      	negs	r5, r5
 80136ec:	fb95 f4f6 	sdiv	r4, r5, r6
 80136f0:	f1c4 0e00 	rsb	lr, r4, #0
 80136f4:	fb06 5514 	mls	r5, r6, r4, r5
 80136f8:	f8c0 e004 	str.w	lr, [r0, #4]
 80136fc:	6085      	str	r5, [r0, #8]
 80136fe:	2d00      	cmp	r5, #0
 8013700:	f43f af64 	beq.w	80135cc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8013704:	43e4      	mvns	r4, r4
 8013706:	6044      	str	r4, [r0, #4]
 8013708:	1b75      	subs	r5, r6, r5
 801370a:	e75e      	b.n	80135ca <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 801370c:	3d800000 	.word	0x3d800000

08013710 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8013710:	4602      	mov	r2, r0
 8013712:	b148      	cbz	r0, 8013728 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8013714:	2300      	movs	r3, #0
 8013716:	b298      	uxth	r0, r3
 8013718:	3301      	adds	r3, #1
 801371a:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 801371e:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8013722:	2900      	cmp	r1, #0
 8013724:	d1f7      	bne.n	8013716 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8013726:	4770      	bx	lr
 8013728:	4770      	bx	lr

0801372a <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 801372a:	b530      	push	{r4, r5, lr}
 801372c:	4604      	mov	r4, r0
 801372e:	b159      	cbz	r1, 8013748 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8013730:	b148      	cbz	r0, 8013746 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8013732:	2300      	movs	r3, #0
 8013734:	b298      	uxth	r0, r3
 8013736:	4282      	cmp	r2, r0
 8013738:	d905      	bls.n	8013746 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801373a:	5ccd      	ldrb	r5, [r1, r3]
 801373c:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8013740:	3301      	adds	r3, #1
 8013742:	2d00      	cmp	r5, #0
 8013744:	d1f6      	bne.n	8013734 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8013746:	bd30      	pop	{r4, r5, pc}
 8013748:	4608      	mov	r0, r1
 801374a:	e7fc      	b.n	8013746 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

0801374c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 801374c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801374e:	b08b      	sub	sp, #44	; 0x2c
 8013750:	468c      	mov	ip, r1
 8013752:	2100      	movs	r1, #0
 8013754:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8013758:	ae01      	add	r6, sp, #4
 801375a:	211f      	movs	r1, #31
 801375c:	fbb0 f7f3 	udiv	r7, r0, r3
 8013760:	fb03 0517 	mls	r5, r3, r7, r0
 8013764:	b2ec      	uxtb	r4, r5
 8013766:	2d09      	cmp	r5, #9
 8013768:	bfd4      	ite	le
 801376a:	3430      	addle	r4, #48	; 0x30
 801376c:	3457      	addgt	r4, #87	; 0x57
 801376e:	b2e4      	uxtb	r4, r4
 8013770:	558c      	strb	r4, [r1, r6]
 8013772:	4638      	mov	r0, r7
 8013774:	1e4c      	subs	r4, r1, #1
 8013776:	b92f      	cbnz	r7, 8013784 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 8013778:	4431      	add	r1, r6
 801377a:	4660      	mov	r0, ip
 801377c:	f7ff ffd5 	bl	801372a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8013780:	b00b      	add	sp, #44	; 0x2c
 8013782:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013784:	4621      	mov	r1, r4
 8013786:	e7e9      	b.n	801375c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

08013788 <_ZN8touchgfx7Unicode4itoaElPtti>:
 8013788:	b5f0      	push	{r4, r5, r6, r7, lr}
 801378a:	4607      	mov	r7, r0
 801378c:	b08b      	sub	sp, #44	; 0x2c
 801378e:	4608      	mov	r0, r1
 8013790:	b341      	cbz	r1, 80137e4 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8013792:	1e99      	subs	r1, r3, #2
 8013794:	2922      	cmp	r1, #34	; 0x22
 8013796:	d825      	bhi.n	80137e4 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8013798:	2100      	movs	r1, #0
 801379a:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801379e:	463c      	mov	r4, r7
 80137a0:	261f      	movs	r6, #31
 80137a2:	f10d 0c04 	add.w	ip, sp, #4
 80137a6:	fb94 fef3 	sdiv	lr, r4, r3
 80137aa:	fb03 441e 	mls	r4, r3, lr, r4
 80137ae:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 80137b2:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 80137b6:	b2ec      	uxtb	r4, r5
 80137b8:	2d09      	cmp	r5, #9
 80137ba:	bfd4      	ite	le
 80137bc:	3430      	addle	r4, #48	; 0x30
 80137be:	3457      	addgt	r4, #87	; 0x57
 80137c0:	b2e4      	uxtb	r4, r4
 80137c2:	f80c 4006 	strb.w	r4, [ip, r6]
 80137c6:	4674      	mov	r4, lr
 80137c8:	1e71      	subs	r1, r6, #1
 80137ca:	b96c      	cbnz	r4, 80137e8 <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 80137cc:	2f00      	cmp	r7, #0
 80137ce:	da05      	bge.n	80137dc <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 80137d0:	ab0a      	add	r3, sp, #40	; 0x28
 80137d2:	4419      	add	r1, r3
 80137d4:	232d      	movs	r3, #45	; 0x2d
 80137d6:	f801 3c24 	strb.w	r3, [r1, #-36]
 80137da:	1eb1      	subs	r1, r6, #2
 80137dc:	3101      	adds	r1, #1
 80137de:	4461      	add	r1, ip
 80137e0:	f7ff ffa3 	bl	801372a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80137e4:	b00b      	add	sp, #44	; 0x2c
 80137e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80137e8:	460e      	mov	r6, r1
 80137ea:	e7dc      	b.n	80137a6 <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

080137ec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 80137ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80137f0:	4691      	mov	r9, r2
 80137f2:	b085      	sub	sp, #20
 80137f4:	6802      	ldr	r2, [r0, #0]
 80137f6:	9201      	str	r2, [sp, #4]
 80137f8:	4688      	mov	r8, r1
 80137fa:	4683      	mov	fp, r0
 80137fc:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8013800:	9103      	str	r1, [sp, #12]
 8013802:	4610      	mov	r0, r2
 8013804:	461c      	mov	r4, r3
 8013806:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 801380a:	9302      	str	r3, [sp, #8]
 801380c:	f7ff ff80 	bl	8013710 <_ZN8touchgfx7Unicode6strlenEPKt>
 8013810:	f1b8 0f00 	cmp.w	r8, #0
 8013814:	bf0c      	ite	eq
 8013816:	4684      	moveq	ip, r0
 8013818:	f100 0c01 	addne.w	ip, r0, #1
 801381c:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8013820:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8013824:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8013826:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8013828:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 801382c:	9903      	ldr	r1, [sp, #12]
 801382e:	fa1f fc8c 	uxth.w	ip, ip
 8013832:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8013836:	d041      	beq.n	80138bc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8013838:	d834      	bhi.n	80138a4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 801383a:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 801383e:	d059      	beq.n	80138f4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8013840:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8013844:	d03a      	beq.n	80138bc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8013846:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 801384a:	d034      	beq.n	80138b6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801384c:	2400      	movs	r4, #0
 801384e:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8013852:	3a01      	subs	r2, #1
 8013854:	b169      	cbz	r1, 8013872 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013856:	9911      	ldr	r1, [sp, #68]	; 0x44
 8013858:	458c      	cmp	ip, r1
 801385a:	da09      	bge.n	8013870 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801385c:	eba1 010c 	sub.w	r1, r1, ip
 8013860:	b289      	uxth	r1, r1
 8013862:	b933      	cbnz	r3, 8013872 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013864:	2e00      	cmp	r6, #0
 8013866:	d051      	beq.n	801390c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8013868:	2800      	cmp	r0, #0
 801386a:	d04f      	beq.n	801390c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801386c:	440c      	add	r4, r1
 801386e:	b2a4      	uxth	r4, r4
 8013870:	2100      	movs	r1, #0
 8013872:	682b      	ldr	r3, [r5, #0]
 8013874:	4293      	cmp	r3, r2
 8013876:	da07      	bge.n	8013888 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8013878:	f1b8 0f00 	cmp.w	r8, #0
 801387c:	d004      	beq.n	8013888 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801387e:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8013882:	682b      	ldr	r3, [r5, #0]
 8013884:	3301      	adds	r3, #1
 8013886:	602b      	str	r3, [r5, #0]
 8013888:	2730      	movs	r7, #48	; 0x30
 801388a:	2c00      	cmp	r4, #0
 801388c:	d04e      	beq.n	801392c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801388e:	682e      	ldr	r6, [r5, #0]
 8013890:	3c01      	subs	r4, #1
 8013892:	42b2      	cmp	r2, r6
 8013894:	b2a4      	uxth	r4, r4
 8013896:	dd49      	ble.n	801392c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8013898:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801389c:	682b      	ldr	r3, [r5, #0]
 801389e:	3301      	adds	r3, #1
 80138a0:	602b      	str	r3, [r5, #0]
 80138a2:	e7f2      	b.n	801388a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 80138a4:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 80138a8:	d01d      	beq.n	80138e6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 80138aa:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 80138ae:	d002      	beq.n	80138b6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 80138b0:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 80138b4:	e7c9      	b.n	801384a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 80138b6:	4684      	mov	ip, r0
 80138b8:	f04f 0800 	mov.w	r8, #0
 80138bc:	2c00      	cmp	r4, #0
 80138be:	d0c6      	beq.n	801384e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80138c0:	b947      	cbnz	r7, 80138d4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80138c2:	2801      	cmp	r0, #1
 80138c4:	d106      	bne.n	80138d4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80138c6:	8814      	ldrh	r4, [r2, #0]
 80138c8:	2c30      	cmp	r4, #48	; 0x30
 80138ca:	bf02      	ittt	eq
 80138cc:	3202      	addeq	r2, #2
 80138ce:	f8cb 2000 	streq.w	r2, [fp]
 80138d2:	4638      	moveq	r0, r7
 80138d4:	45bc      	cmp	ip, r7
 80138d6:	da14      	bge.n	8013902 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 80138d8:	b2bf      	uxth	r7, r7
 80138da:	eba7 040c 	sub.w	r4, r7, ip
 80138de:	b2a4      	uxth	r4, r4
 80138e0:	46bc      	mov	ip, r7
 80138e2:	2600      	movs	r6, #0
 80138e4:	e7b3      	b.n	801384e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80138e6:	4684      	mov	ip, r0
 80138e8:	b16c      	cbz	r4, 8013906 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 80138ea:	42b8      	cmp	r0, r7
 80138ec:	dd00      	ble.n	80138f0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 80138ee:	b2b8      	uxth	r0, r7
 80138f0:	2400      	movs	r4, #0
 80138f2:	e003      	b.n	80138fc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 80138f4:	f04f 0c01 	mov.w	ip, #1
 80138f8:	2400      	movs	r4, #0
 80138fa:	4660      	mov	r0, ip
 80138fc:	4626      	mov	r6, r4
 80138fe:	46a0      	mov	r8, r4
 8013900:	e7a5      	b.n	801384e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013902:	2400      	movs	r4, #0
 8013904:	e7ed      	b.n	80138e2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8013906:	4626      	mov	r6, r4
 8013908:	46a0      	mov	r8, r4
 801390a:	e7a0      	b.n	801384e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801390c:	2900      	cmp	r1, #0
 801390e:	d0b0      	beq.n	8013872 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013910:	2720      	movs	r7, #32
 8013912:	682e      	ldr	r6, [r5, #0]
 8013914:	2900      	cmp	r1, #0
 8013916:	d0ac      	beq.n	8013872 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013918:	3901      	subs	r1, #1
 801391a:	4296      	cmp	r6, r2
 801391c:	b289      	uxth	r1, r1
 801391e:	daa7      	bge.n	8013870 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8013920:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8013924:	682b      	ldr	r3, [r5, #0]
 8013926:	3301      	adds	r3, #1
 8013928:	602b      	str	r3, [r5, #0]
 801392a:	e7f2      	b.n	8013912 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 801392c:	b188      	cbz	r0, 8013952 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801392e:	682b      	ldr	r3, [r5, #0]
 8013930:	3801      	subs	r0, #1
 8013932:	429a      	cmp	r2, r3
 8013934:	b280      	uxth	r0, r0
 8013936:	dd0c      	ble.n	8013952 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8013938:	f8db 3000 	ldr.w	r3, [fp]
 801393c:	1c9c      	adds	r4, r3, #2
 801393e:	f8cb 4000 	str.w	r4, [fp]
 8013942:	881c      	ldrh	r4, [r3, #0]
 8013944:	682b      	ldr	r3, [r5, #0]
 8013946:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 801394a:	682b      	ldr	r3, [r5, #0]
 801394c:	3301      	adds	r3, #1
 801394e:	602b      	str	r3, [r5, #0]
 8013950:	e7ec      	b.n	801392c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8013952:	2620      	movs	r6, #32
 8013954:	b151      	cbz	r1, 801396c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8013956:	6828      	ldr	r0, [r5, #0]
 8013958:	3901      	subs	r1, #1
 801395a:	4282      	cmp	r2, r0
 801395c:	b289      	uxth	r1, r1
 801395e:	dd05      	ble.n	801396c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8013960:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8013964:	682b      	ldr	r3, [r5, #0]
 8013966:	3301      	adds	r3, #1
 8013968:	602b      	str	r3, [r5, #0]
 801396a:	e7f3      	b.n	8013954 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 801396c:	b005      	add	sp, #20
 801396e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013972 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8013972:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013976:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 801397a:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 801397e:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8013982:	2400      	movs	r4, #0
 8013984:	8014      	strh	r4, [r2, #0]
 8013986:	701c      	strb	r4, [r3, #0]
 8013988:	f888 4000 	strb.w	r4, [r8]
 801398c:	f88c 4000 	strb.w	r4, [ip]
 8013990:	f88e 4000 	strb.w	r4, [lr]
 8013994:	703c      	strb	r4, [r7, #0]
 8013996:	6804      	ldr	r4, [r0, #0]
 8013998:	b1a4      	cbz	r4, 80139c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 801399a:	8824      	ldrh	r4, [r4, #0]
 801399c:	f04f 0901 	mov.w	r9, #1
 80139a0:	b314      	cbz	r4, 80139e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80139a2:	2c2b      	cmp	r4, #43	; 0x2b
 80139a4:	d001      	beq.n	80139aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 80139a6:	2c20      	cmp	r4, #32
 80139a8:	d110      	bne.n	80139cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 80139aa:	8014      	strh	r4, [r2, #0]
 80139ac:	6804      	ldr	r4, [r0, #0]
 80139ae:	b10c      	cbz	r4, 80139b4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 80139b0:	3402      	adds	r4, #2
 80139b2:	6004      	str	r4, [r0, #0]
 80139b4:	680c      	ldr	r4, [r1, #0]
 80139b6:	b10c      	cbz	r4, 80139bc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 80139b8:	3401      	adds	r4, #1
 80139ba:	600c      	str	r4, [r1, #0]
 80139bc:	6804      	ldr	r4, [r0, #0]
 80139be:	b17c      	cbz	r4, 80139e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 80139c0:	8824      	ldrh	r4, [r4, #0]
 80139c2:	e7ed      	b.n	80139a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80139c4:	680c      	ldr	r4, [r1, #0]
 80139c6:	b17c      	cbz	r4, 80139e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80139c8:	7824      	ldrb	r4, [r4, #0]
 80139ca:	e7e7      	b.n	801399c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 80139cc:	2c2d      	cmp	r4, #45	; 0x2d
 80139ce:	d102      	bne.n	80139d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 80139d0:	f883 9000 	strb.w	r9, [r3]
 80139d4:	e7ea      	b.n	80139ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80139d6:	2c23      	cmp	r4, #35	; 0x23
 80139d8:	d107      	bne.n	80139ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 80139da:	f888 9000 	strb.w	r9, [r8]
 80139de:	e7e5      	b.n	80139ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80139e0:	680c      	ldr	r4, [r1, #0]
 80139e2:	b10c      	cbz	r4, 80139e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80139e4:	7824      	ldrb	r4, [r4, #0]
 80139e6:	e7db      	b.n	80139a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80139e8:	2400      	movs	r4, #0
 80139ea:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 80139ee:	2b09      	cmp	r3, #9
 80139f0:	d901      	bls.n	80139f6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 80139f2:	2c2a      	cmp	r4, #42	; 0x2a
 80139f4:	d122      	bne.n	8013a3c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80139f6:	2301      	movs	r3, #1
 80139f8:	2c30      	cmp	r4, #48	; 0x30
 80139fa:	f88e 3000 	strb.w	r3, [lr]
 80139fe:	d10d      	bne.n	8013a1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8013a00:	f88c 3000 	strb.w	r3, [ip]
 8013a04:	6803      	ldr	r3, [r0, #0]
 8013a06:	b10b      	cbz	r3, 8013a0c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8013a08:	3302      	adds	r3, #2
 8013a0a:	6003      	str	r3, [r0, #0]
 8013a0c:	680b      	ldr	r3, [r1, #0]
 8013a0e:	b10b      	cbz	r3, 8013a14 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8013a10:	3301      	adds	r3, #1
 8013a12:	600b      	str	r3, [r1, #0]
 8013a14:	6803      	ldr	r3, [r0, #0]
 8013a16:	2b00      	cmp	r3, #0
 8013a18:	d02f      	beq.n	8013a7a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8013a1a:	881c      	ldrh	r4, [r3, #0]
 8013a1c:	2c2a      	cmp	r4, #42	; 0x2a
 8013a1e:	d135      	bne.n	8013a8c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8013a20:	f04f 33ff 	mov.w	r3, #4294967295
 8013a24:	6033      	str	r3, [r6, #0]
 8013a26:	6803      	ldr	r3, [r0, #0]
 8013a28:	b10b      	cbz	r3, 8013a2e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8013a2a:	3302      	adds	r3, #2
 8013a2c:	6003      	str	r3, [r0, #0]
 8013a2e:	680b      	ldr	r3, [r1, #0]
 8013a30:	b10b      	cbz	r3, 8013a36 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8013a32:	3301      	adds	r3, #1
 8013a34:	600b      	str	r3, [r1, #0]
 8013a36:	6803      	ldr	r3, [r0, #0]
 8013a38:	b31b      	cbz	r3, 8013a82 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8013a3a:	881c      	ldrh	r4, [r3, #0]
 8013a3c:	2c2e      	cmp	r4, #46	; 0x2e
 8013a3e:	d11a      	bne.n	8013a76 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8013a40:	2301      	movs	r3, #1
 8013a42:	703b      	strb	r3, [r7, #0]
 8013a44:	6803      	ldr	r3, [r0, #0]
 8013a46:	b10b      	cbz	r3, 8013a4c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8013a48:	3302      	adds	r3, #2
 8013a4a:	6003      	str	r3, [r0, #0]
 8013a4c:	680b      	ldr	r3, [r1, #0]
 8013a4e:	b10b      	cbz	r3, 8013a54 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8013a50:	3301      	adds	r3, #1
 8013a52:	600b      	str	r3, [r1, #0]
 8013a54:	6803      	ldr	r3, [r0, #0]
 8013a56:	2b00      	cmp	r3, #0
 8013a58:	d036      	beq.n	8013ac8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8013a5a:	881b      	ldrh	r3, [r3, #0]
 8013a5c:	2b2a      	cmp	r3, #42	; 0x2a
 8013a5e:	d137      	bne.n	8013ad0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8013a60:	f04f 33ff 	mov.w	r3, #4294967295
 8013a64:	602b      	str	r3, [r5, #0]
 8013a66:	6803      	ldr	r3, [r0, #0]
 8013a68:	b10b      	cbz	r3, 8013a6e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8013a6a:	3302      	adds	r3, #2
 8013a6c:	6003      	str	r3, [r0, #0]
 8013a6e:	680b      	ldr	r3, [r1, #0]
 8013a70:	b10b      	cbz	r3, 8013a76 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8013a72:	3301      	adds	r3, #1
 8013a74:	600b      	str	r3, [r1, #0]
 8013a76:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013a7a:	680c      	ldr	r4, [r1, #0]
 8013a7c:	b134      	cbz	r4, 8013a8c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8013a7e:	7824      	ldrb	r4, [r4, #0]
 8013a80:	e7cc      	b.n	8013a1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8013a82:	680b      	ldr	r3, [r1, #0]
 8013a84:	2b00      	cmp	r3, #0
 8013a86:	d0f6      	beq.n	8013a76 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8013a88:	781c      	ldrb	r4, [r3, #0]
 8013a8a:	e7d7      	b.n	8013a3c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8013a8c:	2300      	movs	r3, #0
 8013a8e:	6033      	str	r3, [r6, #0]
 8013a90:	220a      	movs	r2, #10
 8013a92:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8013a96:	fa1f f38c 	uxth.w	r3, ip
 8013a9a:	2b09      	cmp	r3, #9
 8013a9c:	d8ce      	bhi.n	8013a3c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8013a9e:	6833      	ldr	r3, [r6, #0]
 8013aa0:	fb02 c303 	mla	r3, r2, r3, ip
 8013aa4:	6033      	str	r3, [r6, #0]
 8013aa6:	6803      	ldr	r3, [r0, #0]
 8013aa8:	b10b      	cbz	r3, 8013aae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8013aaa:	3302      	adds	r3, #2
 8013aac:	6003      	str	r3, [r0, #0]
 8013aae:	680b      	ldr	r3, [r1, #0]
 8013ab0:	b10b      	cbz	r3, 8013ab6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8013ab2:	3301      	adds	r3, #1
 8013ab4:	600b      	str	r3, [r1, #0]
 8013ab6:	6803      	ldr	r3, [r0, #0]
 8013ab8:	b10b      	cbz	r3, 8013abe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8013aba:	881c      	ldrh	r4, [r3, #0]
 8013abc:	e7e9      	b.n	8013a92 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8013abe:	680c      	ldr	r4, [r1, #0]
 8013ac0:	2c00      	cmp	r4, #0
 8013ac2:	d0e6      	beq.n	8013a92 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8013ac4:	7824      	ldrb	r4, [r4, #0]
 8013ac6:	e7e4      	b.n	8013a92 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8013ac8:	680b      	ldr	r3, [r1, #0]
 8013aca:	b10b      	cbz	r3, 8013ad0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8013acc:	781b      	ldrb	r3, [r3, #0]
 8013ace:	e7c5      	b.n	8013a5c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8013ad0:	2200      	movs	r2, #0
 8013ad2:	602a      	str	r2, [r5, #0]
 8013ad4:	240a      	movs	r4, #10
 8013ad6:	3b30      	subs	r3, #48	; 0x30
 8013ad8:	b29e      	uxth	r6, r3
 8013ada:	2e09      	cmp	r6, #9
 8013adc:	682a      	ldr	r2, [r5, #0]
 8013ade:	d813      	bhi.n	8013b08 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8013ae0:	fb04 3302 	mla	r3, r4, r2, r3
 8013ae4:	602b      	str	r3, [r5, #0]
 8013ae6:	6803      	ldr	r3, [r0, #0]
 8013ae8:	b10b      	cbz	r3, 8013aee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8013aea:	3302      	adds	r3, #2
 8013aec:	6003      	str	r3, [r0, #0]
 8013aee:	680b      	ldr	r3, [r1, #0]
 8013af0:	b10b      	cbz	r3, 8013af6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8013af2:	3301      	adds	r3, #1
 8013af4:	600b      	str	r3, [r1, #0]
 8013af6:	6803      	ldr	r3, [r0, #0]
 8013af8:	b10b      	cbz	r3, 8013afe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8013afa:	881b      	ldrh	r3, [r3, #0]
 8013afc:	e7eb      	b.n	8013ad6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8013afe:	680b      	ldr	r3, [r1, #0]
 8013b00:	2b00      	cmp	r3, #0
 8013b02:	d0e8      	beq.n	8013ad6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8013b04:	781b      	ldrb	r3, [r3, #0]
 8013b06:	e7e6      	b.n	8013ad6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8013b08:	2a06      	cmp	r2, #6
 8013b0a:	bfa8      	it	ge
 8013b0c:	2206      	movge	r2, #6
 8013b0e:	602a      	str	r2, [r5, #0]
 8013b10:	e7b1      	b.n	8013a76 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08013b12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8013b12:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013b16:	b0a3      	sub	sp, #140	; 0x8c
 8013b18:	2600      	movs	r6, #0
 8013b1a:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8013b1e:	4607      	mov	r7, r0
 8013b20:	4688      	mov	r8, r1
 8013b22:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8013b26:	4631      	mov	r1, r6
 8013b28:	2242      	movs	r2, #66	; 0x42
 8013b2a:	4648      	mov	r0, r9
 8013b2c:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8013b2e:	960d      	str	r6, [sp, #52]	; 0x34
 8013b30:	f00c fefa 	bl	8020928 <memset>
 8013b34:	b15f      	cbz	r7, 8013b4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8013b36:	f108 3aff 	add.w	sl, r8, #4294967295
 8013b3a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013b3c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013b3e:	b152      	cbz	r2, 8013b56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8013b40:	8812      	ldrh	r2, [r2, #0]
 8013b42:	b10a      	cbz	r2, 8013b48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8013b44:	459a      	cmp	sl, r3
 8013b46:	dc2e      	bgt.n	8013ba6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8013b48:	2200      	movs	r2, #0
 8013b4a:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8013b4e:	4638      	mov	r0, r7
 8013b50:	b023      	add	sp, #140	; 0x8c
 8013b52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013b56:	9a08      	ldr	r2, [sp, #32]
 8013b58:	2a00      	cmp	r2, #0
 8013b5a:	d0f5      	beq.n	8013b48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8013b5c:	7812      	ldrb	r2, [r2, #0]
 8013b5e:	e7f0      	b.n	8013b42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8013b60:	2d00      	cmp	r5, #0
 8013b62:	d0ea      	beq.n	8013b3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013b64:	782a      	ldrb	r2, [r5, #0]
 8013b66:	b142      	cbz	r2, 8013b7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8013b68:	2a25      	cmp	r2, #37	; 0x25
 8013b6a:	d001      	beq.n	8013b70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8013b6c:	459a      	cmp	sl, r3
 8013b6e:	dc08      	bgt.n	8013b82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8013b70:	f1bb 0f00 	cmp.w	fp, #0
 8013b74:	d121      	bne.n	8013bba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8013b76:	2d00      	cmp	r5, #0
 8013b78:	d0df      	beq.n	8013b3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013b7a:	782a      	ldrb	r2, [r5, #0]
 8013b7c:	f04f 0b00 	mov.w	fp, #0
 8013b80:	e01d      	b.n	8013bbe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8013b82:	f1bb 0f00 	cmp.w	fp, #0
 8013b86:	d078      	beq.n	8013c7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8013b88:	f8bb 2000 	ldrh.w	r2, [fp]
 8013b8c:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8013b90:	f1bb 0f00 	cmp.w	fp, #0
 8013b94:	d002      	beq.n	8013b9c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8013b96:	f10b 0202 	add.w	r2, fp, #2
 8013b9a:	9209      	str	r2, [sp, #36]	; 0x24
 8013b9c:	b10d      	cbz	r5, 8013ba2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8013b9e:	3501      	adds	r5, #1
 8013ba0:	9508      	str	r5, [sp, #32]
 8013ba2:	3301      	adds	r3, #1
 8013ba4:	930d      	str	r3, [sp, #52]	; 0x34
 8013ba6:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8013baa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013bac:	f1bb 0f00 	cmp.w	fp, #0
 8013bb0:	d0d6      	beq.n	8013b60 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8013bb2:	f8bb 2000 	ldrh.w	r2, [fp]
 8013bb6:	2a00      	cmp	r2, #0
 8013bb8:	d1d6      	bne.n	8013b68 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8013bba:	f8bb 2000 	ldrh.w	r2, [fp]
 8013bbe:	2a00      	cmp	r2, #0
 8013bc0:	d0bb      	beq.n	8013b3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013bc2:	459a      	cmp	sl, r3
 8013bc4:	ddb9      	ble.n	8013b3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013bc6:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8013bca:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8013bce:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8013bd2:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8013bd6:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8013bda:	960e      	str	r6, [sp, #56]	; 0x38
 8013bdc:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8013be0:	960f      	str	r6, [sp, #60]	; 0x3c
 8013be2:	f1bb 0f00 	cmp.w	fp, #0
 8013be6:	d002      	beq.n	8013bee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8013be8:	f10b 0302 	add.w	r3, fp, #2
 8013bec:	9309      	str	r3, [sp, #36]	; 0x24
 8013bee:	b10d      	cbz	r5, 8013bf4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8013bf0:	1c6b      	adds	r3, r5, #1
 8013bf2:	9308      	str	r3, [sp, #32]
 8013bf4:	ab0f      	add	r3, sp, #60	; 0x3c
 8013bf6:	9305      	str	r3, [sp, #20]
 8013bf8:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8013bfc:	9304      	str	r3, [sp, #16]
 8013bfe:	ab0e      	add	r3, sp, #56	; 0x38
 8013c00:	9303      	str	r3, [sp, #12]
 8013c02:	ab0c      	add	r3, sp, #48	; 0x30
 8013c04:	9302      	str	r3, [sp, #8]
 8013c06:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8013c0a:	9301      	str	r3, [sp, #4]
 8013c0c:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8013c10:	9300      	str	r3, [sp, #0]
 8013c12:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8013c16:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8013c1a:	a908      	add	r1, sp, #32
 8013c1c:	a809      	add	r0, sp, #36	; 0x24
 8013c1e:	f7ff fea8 	bl	8013972 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8013c22:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013c24:	2b00      	cmp	r3, #0
 8013c26:	bfbe      	ittt	lt
 8013c28:	6823      	ldrlt	r3, [r4, #0]
 8013c2a:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8013c2e:	930e      	strlt	r3, [sp, #56]	; 0x38
 8013c30:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013c32:	bfb8      	it	lt
 8013c34:	3404      	addlt	r4, #4
 8013c36:	2b00      	cmp	r3, #0
 8013c38:	bfb8      	it	lt
 8013c3a:	6823      	ldrlt	r3, [r4, #0]
 8013c3c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8013c40:	bfbe      	ittt	lt
 8013c42:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8013c46:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8013c48:	3404      	addlt	r4, #4
 8013c4a:	b1d9      	cbz	r1, 8013c84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8013c4c:	880b      	ldrh	r3, [r1, #0]
 8013c4e:	2b69      	cmp	r3, #105	; 0x69
 8013c50:	d01f      	beq.n	8013c92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013c52:	d82f      	bhi.n	8013cb4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8013c54:	2b58      	cmp	r3, #88	; 0x58
 8013c56:	d01c      	beq.n	8013c92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013c58:	d818      	bhi.n	8013c8c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8013c5a:	2b25      	cmp	r3, #37	; 0x25
 8013c5c:	d034      	beq.n	8013cc8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8013c5e:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8013c62:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013c64:	f1bb 0f00 	cmp.w	fp, #0
 8013c68:	f000 80b8 	beq.w	8013ddc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8013c6c:	f8bb 5000 	ldrh.w	r5, [fp]
 8013c70:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8013c74:	3301      	adds	r3, #1
 8013c76:	930d      	str	r3, [sp, #52]	; 0x34
 8013c78:	e029      	b.n	8013cce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8013c7a:	b10d      	cbz	r5, 8013c80 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8013c7c:	782a      	ldrb	r2, [r5, #0]
 8013c7e:	e785      	b.n	8013b8c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8013c80:	462a      	mov	r2, r5
 8013c82:	e783      	b.n	8013b8c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8013c84:	2a00      	cmp	r2, #0
 8013c86:	d0ea      	beq.n	8013c5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8013c88:	7813      	ldrb	r3, [r2, #0]
 8013c8a:	e7e0      	b.n	8013c4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8013c8c:	3b63      	subs	r3, #99	; 0x63
 8013c8e:	2b01      	cmp	r3, #1
 8013c90:	d8e5      	bhi.n	8013c5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8013c92:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8013c96:	b329      	cbz	r1, 8013ce4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8013c98:	880b      	ldrh	r3, [r1, #0]
 8013c9a:	2b69      	cmp	r3, #105	; 0x69
 8013c9c:	d063      	beq.n	8013d66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8013c9e:	d825      	bhi.n	8013cec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8013ca0:	2b63      	cmp	r3, #99	; 0x63
 8013ca2:	d038      	beq.n	8013d16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8013ca4:	2b64      	cmp	r3, #100	; 0x64
 8013ca6:	d05e      	beq.n	8013d66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8013ca8:	2b58      	cmp	r3, #88	; 0x58
 8013caa:	d07b      	beq.n	8013da4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8013cac:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8013cb0:	4625      	mov	r5, r4
 8013cb2:	e036      	b.n	8013d22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013cb4:	2b73      	cmp	r3, #115	; 0x73
 8013cb6:	d0ec      	beq.n	8013c92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013cb8:	d802      	bhi.n	8013cc0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8013cba:	2b6f      	cmp	r3, #111	; 0x6f
 8013cbc:	d1cf      	bne.n	8013c5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8013cbe:	e7e8      	b.n	8013c92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013cc0:	2b75      	cmp	r3, #117	; 0x75
 8013cc2:	d0e6      	beq.n	8013c92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013cc4:	2b78      	cmp	r3, #120	; 0x78
 8013cc6:	e7f9      	b.n	8013cbc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8013cc8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013cca:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8013cce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013cd0:	b10b      	cbz	r3, 8013cd6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8013cd2:	3302      	adds	r3, #2
 8013cd4:	9309      	str	r3, [sp, #36]	; 0x24
 8013cd6:	9b08      	ldr	r3, [sp, #32]
 8013cd8:	2b00      	cmp	r3, #0
 8013cda:	f43f af2e 	beq.w	8013b3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013cde:	3301      	adds	r3, #1
 8013ce0:	9308      	str	r3, [sp, #32]
 8013ce2:	e72a      	b.n	8013b3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013ce4:	2a00      	cmp	r2, #0
 8013ce6:	d0e1      	beq.n	8013cac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8013ce8:	7813      	ldrb	r3, [r2, #0]
 8013cea:	e7d6      	b.n	8013c9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8013cec:	2b73      	cmp	r3, #115	; 0x73
 8013cee:	d036      	beq.n	8013d5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8013cf0:	d807      	bhi.n	8013d02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8013cf2:	2b6f      	cmp	r3, #111	; 0x6f
 8013cf4:	d1da      	bne.n	8013cac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8013cf6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013cf8:	1d25      	adds	r5, r4, #4
 8013cfa:	eba8 0202 	sub.w	r2, r8, r2
 8013cfe:	2308      	movs	r3, #8
 8013d00:	e04a      	b.n	8013d98 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8013d02:	2b75      	cmp	r3, #117	; 0x75
 8013d04:	d043      	beq.n	8013d8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8013d06:	2b78      	cmp	r3, #120	; 0x78
 8013d08:	d1d0      	bne.n	8013cac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8013d0a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013d0c:	1d25      	adds	r5, r4, #4
 8013d0e:	eba8 0202 	sub.w	r2, r8, r2
 8013d12:	2310      	movs	r3, #16
 8013d14:	e040      	b.n	8013d98 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8013d16:	6823      	ldr	r3, [r4, #0]
 8013d18:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8013d1c:	1d25      	adds	r5, r4, #4
 8013d1e:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8013d22:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013d24:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8013d28:	2b00      	cmp	r3, #0
 8013d2a:	d052      	beq.n	8013dd2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8013d2c:	881a      	ldrh	r2, [r3, #0]
 8013d2e:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8013d32:	a80d      	add	r0, sp, #52	; 0x34
 8013d34:	9005      	str	r0, [sp, #20]
 8013d36:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8013d3a:	9004      	str	r0, [sp, #16]
 8013d3c:	980e      	ldr	r0, [sp, #56]	; 0x38
 8013d3e:	9003      	str	r0, [sp, #12]
 8013d40:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8013d44:	9002      	str	r0, [sp, #8]
 8013d46:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8013d48:	9001      	str	r0, [sp, #4]
 8013d4a:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8013d4e:	9000      	str	r0, [sp, #0]
 8013d50:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8013d54:	a810      	add	r0, sp, #64	; 0x40
 8013d56:	f7ff fd49 	bl	80137ec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8013d5a:	462c      	mov	r4, r5
 8013d5c:	e7b7      	b.n	8013cce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8013d5e:	6823      	ldr	r3, [r4, #0]
 8013d60:	1d25      	adds	r5, r4, #4
 8013d62:	9310      	str	r3, [sp, #64]	; 0x40
 8013d64:	e7dd      	b.n	8013d22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013d66:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013d68:	6820      	ldr	r0, [r4, #0]
 8013d6a:	eba8 0202 	sub.w	r2, r8, r2
 8013d6e:	230a      	movs	r3, #10
 8013d70:	b292      	uxth	r2, r2
 8013d72:	4649      	mov	r1, r9
 8013d74:	f7ff fd08 	bl	8013788 <_ZN8touchgfx7Unicode4itoaElPtti>
 8013d78:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013d7c:	2b2d      	cmp	r3, #45	; 0x2d
 8013d7e:	f104 0504 	add.w	r5, r4, #4
 8013d82:	d1ce      	bne.n	8013d22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013d84:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8013d88:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013d8a:	3302      	adds	r3, #2
 8013d8c:	e7e9      	b.n	8013d62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8013d8e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013d90:	1d25      	adds	r5, r4, #4
 8013d92:	eba8 0202 	sub.w	r2, r8, r2
 8013d96:	230a      	movs	r3, #10
 8013d98:	b292      	uxth	r2, r2
 8013d9a:	4649      	mov	r1, r9
 8013d9c:	6820      	ldr	r0, [r4, #0]
 8013d9e:	f7ff fcd5 	bl	801374c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 8013da2:	e7be      	b.n	8013d22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013da4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013da6:	6820      	ldr	r0, [r4, #0]
 8013da8:	eba8 0202 	sub.w	r2, r8, r2
 8013dac:	b292      	uxth	r2, r2
 8013dae:	2310      	movs	r3, #16
 8013db0:	4649      	mov	r1, r9
 8013db2:	f7ff fccb 	bl	801374c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 8013db6:	1d25      	adds	r5, r4, #4
 8013db8:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8013dbc:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8013dc0:	2b00      	cmp	r3, #0
 8013dc2:	d0ae      	beq.n	8013d22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013dc4:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8013dc8:	2919      	cmp	r1, #25
 8013dca:	d8f7      	bhi.n	8013dbc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8013dcc:	3b20      	subs	r3, #32
 8013dce:	8013      	strh	r3, [r2, #0]
 8013dd0:	e7f4      	b.n	8013dbc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8013dd2:	9a08      	ldr	r2, [sp, #32]
 8013dd4:	2a00      	cmp	r2, #0
 8013dd6:	d0aa      	beq.n	8013d2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8013dd8:	7812      	ldrb	r2, [r2, #0]
 8013dda:	e7a8      	b.n	8013d2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8013ddc:	2d00      	cmp	r5, #0
 8013dde:	f43f af47 	beq.w	8013c70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8013de2:	782d      	ldrb	r5, [r5, #0]
 8013de4:	e744      	b.n	8013c70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08013de6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8013de6:	b507      	push	{r0, r1, r2, lr}
 8013de8:	9300      	str	r3, [sp, #0]
 8013dea:	4613      	mov	r3, r2
 8013dec:	2200      	movs	r2, #0
 8013dee:	f7ff fe90 	bl	8013b12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8013df2:	b003      	add	sp, #12
 8013df4:	f85d fb04 	ldr.w	pc, [sp], #4

08013df8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8013df8:	b40c      	push	{r2, r3}
 8013dfa:	b507      	push	{r0, r1, r2, lr}
 8013dfc:	ab04      	add	r3, sp, #16
 8013dfe:	f853 2b04 	ldr.w	r2, [r3], #4
 8013e02:	9301      	str	r3, [sp, #4]
 8013e04:	f7ff ffef 	bl	8013de6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8013e08:	b003      	add	sp, #12
 8013e0a:	f85d eb04 	ldr.w	lr, [sp], #4
 8013e0e:	b002      	add	sp, #8
 8013e10:	4770      	bx	lr
	...

08013e14 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 8013e14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013e18:	b0c3      	sub	sp, #268	; 0x10c
 8013e1a:	2600      	movs	r6, #0
 8013e1c:	f10d 0840 	add.w	r8, sp, #64	; 0x40
 8013e20:	4607      	mov	r7, r0
 8013e22:	4689      	mov	r9, r1
 8013e24:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8013e28:	4631      	mov	r1, r6
 8013e2a:	22c8      	movs	r2, #200	; 0xc8
 8013e2c:	4640      	mov	r0, r8
 8013e2e:	f8dd a130 	ldr.w	sl, [sp, #304]	; 0x130
 8013e32:	960c      	str	r6, [sp, #48]	; 0x30
 8013e34:	f00c fd78 	bl	8020928 <memset>
 8013e38:	b17f      	cbz	r7, 8013e5a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x46>
 8013e3a:	eddf 5aa4 	vldr	s11, [pc, #656]	; 80140cc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b8>
 8013e3e:	f8df b298 	ldr.w	fp, [pc, #664]	; 80140d8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c4>
 8013e42:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013e44:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013e46:	b162      	cbz	r2, 8013e62 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x4e>
 8013e48:	8812      	ldrh	r2, [r2, #0]
 8013e4a:	b11a      	cbz	r2, 8013e54 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 8013e4c:	f109 31ff 	add.w	r1, r9, #4294967295
 8013e50:	4299      	cmp	r1, r3
 8013e52:	dc26      	bgt.n	8013ea2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 8013e54:	2200      	movs	r2, #0
 8013e56:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8013e5a:	4638      	mov	r0, r7
 8013e5c:	b043      	add	sp, #268	; 0x10c
 8013e5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013e62:	9a08      	ldr	r2, [sp, #32]
 8013e64:	2a00      	cmp	r2, #0
 8013e66:	d0f5      	beq.n	8013e54 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 8013e68:	7812      	ldrb	r2, [r2, #0]
 8013e6a:	e7ee      	b.n	8013e4a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36>
 8013e6c:	2c00      	cmp	r4, #0
 8013e6e:	d0e8      	beq.n	8013e42 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8013e70:	7822      	ldrb	r2, [r4, #0]
 8013e72:	b132      	cbz	r2, 8013e82 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6e>
 8013e74:	2a25      	cmp	r2, #37	; 0x25
 8013e76:	d001      	beq.n	8013e7c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x68>
 8013e78:	4299      	cmp	r1, r3
 8013e7a:	dc05      	bgt.n	8013e88 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 8013e7c:	b9cd      	cbnz	r5, 8013eb2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x9e>
 8013e7e:	2c00      	cmp	r4, #0
 8013e80:	d0df      	beq.n	8013e42 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8013e82:	7822      	ldrb	r2, [r4, #0]
 8013e84:	2500      	movs	r5, #0
 8013e86:	e015      	b.n	8013eb4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xa0>
 8013e88:	2d00      	cmp	r5, #0
 8013e8a:	d073      	beq.n	8013f74 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 8013e8c:	882a      	ldrh	r2, [r5, #0]
 8013e8e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8013e92:	b10d      	cbz	r5, 8013e98 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x84>
 8013e94:	3502      	adds	r5, #2
 8013e96:	9509      	str	r5, [sp, #36]	; 0x24
 8013e98:	b10c      	cbz	r4, 8013e9e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8a>
 8013e9a:	3401      	adds	r4, #1
 8013e9c:	9408      	str	r4, [sp, #32]
 8013e9e:	3301      	adds	r3, #1
 8013ea0:	930c      	str	r3, [sp, #48]	; 0x30
 8013ea2:	e9dd 4508 	ldrd	r4, r5, [sp, #32]
 8013ea6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013ea8:	2d00      	cmp	r5, #0
 8013eaa:	d0df      	beq.n	8013e6c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x58>
 8013eac:	882a      	ldrh	r2, [r5, #0]
 8013eae:	2a00      	cmp	r2, #0
 8013eb0:	d1e0      	bne.n	8013e74 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x60>
 8013eb2:	882a      	ldrh	r2, [r5, #0]
 8013eb4:	2a00      	cmp	r2, #0
 8013eb6:	d0c4      	beq.n	8013e42 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8013eb8:	4299      	cmp	r1, r3
 8013eba:	ddc2      	ble.n	8013e42 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8013ebc:	2300      	movs	r3, #0
 8013ebe:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8013ec2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8013ec6:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8013eca:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8013ece:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8013ed2:	930d      	str	r3, [sp, #52]	; 0x34
 8013ed4:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 8013ed8:	930e      	str	r3, [sp, #56]	; 0x38
 8013eda:	b10d      	cbz	r5, 8013ee0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xcc>
 8013edc:	1cab      	adds	r3, r5, #2
 8013ede:	9309      	str	r3, [sp, #36]	; 0x24
 8013ee0:	b10c      	cbz	r4, 8013ee6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xd2>
 8013ee2:	1c63      	adds	r3, r4, #1
 8013ee4:	9308      	str	r3, [sp, #32]
 8013ee6:	ab0e      	add	r3, sp, #56	; 0x38
 8013ee8:	9305      	str	r3, [sp, #20]
 8013eea:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8013eee:	9304      	str	r3, [sp, #16]
 8013ef0:	ab0d      	add	r3, sp, #52	; 0x34
 8013ef2:	9303      	str	r3, [sp, #12]
 8013ef4:	ab0b      	add	r3, sp, #44	; 0x2c
 8013ef6:	9302      	str	r3, [sp, #8]
 8013ef8:	f10d 032b 	add.w	r3, sp, #43	; 0x2b
 8013efc:	9301      	str	r3, [sp, #4]
 8013efe:	f10d 032a 	add.w	r3, sp, #42	; 0x2a
 8013f02:	9300      	str	r3, [sp, #0]
 8013f04:	f10d 022e 	add.w	r2, sp, #46	; 0x2e
 8013f08:	f10d 0329 	add.w	r3, sp, #41	; 0x29
 8013f0c:	a908      	add	r1, sp, #32
 8013f0e:	a809      	add	r0, sp, #36	; 0x24
 8013f10:	f7ff fd2f 	bl	8013972 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8013f14:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013f16:	2b00      	cmp	r3, #0
 8013f18:	da0b      	bge.n	8013f32 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x11e>
 8013f1a:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 8013f1e:	edd3 7a00 	vldr	s15, [r3]
 8013f22:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8013f26:	3601      	adds	r6, #1
 8013f28:	ee17 3a90 	vmov	r3, s15
 8013f2c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013f30:	930d      	str	r3, [sp, #52]	; 0x34
 8013f32:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013f34:	2b00      	cmp	r3, #0
 8013f36:	da0b      	bge.n	8013f50 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x13c>
 8013f38:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 8013f3c:	edd3 7a00 	vldr	s15, [r3]
 8013f40:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8013f44:	3601      	adds	r6, #1
 8013f46:	ee17 3a90 	vmov	r3, s15
 8013f4a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013f4e:	930e      	str	r3, [sp, #56]	; 0x38
 8013f50:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013f52:	b1a3      	cbz	r3, 8013f7e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x16a>
 8013f54:	881a      	ldrh	r2, [r3, #0]
 8013f56:	2a25      	cmp	r2, #37	; 0x25
 8013f58:	d016      	beq.n	8013f88 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x174>
 8013f5a:	2a66      	cmp	r2, #102	; 0x66
 8013f5c:	d01a      	beq.n	8013f94 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 8013f5e:	e9cd 4508 	strd	r4, r5, [sp, #32]
 8013f62:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013f64:	2d00      	cmp	r5, #0
 8013f66:	f000 80fe 	beq.w	8014166 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x352>
 8013f6a:	882c      	ldrh	r4, [r5, #0]
 8013f6c:	f827 4013 	strh.w	r4, [r7, r3, lsl #1]
 8013f70:	3301      	adds	r3, #1
 8013f72:	e00d      	b.n	8013f90 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17c>
 8013f74:	b10c      	cbz	r4, 8013f7a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x166>
 8013f76:	7822      	ldrb	r2, [r4, #0]
 8013f78:	e789      	b.n	8013e8e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7a>
 8013f7a:	4622      	mov	r2, r4
 8013f7c:	e787      	b.n	8013e8e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7a>
 8013f7e:	9b08      	ldr	r3, [sp, #32]
 8013f80:	2b00      	cmp	r3, #0
 8013f82:	d0ec      	beq.n	8013f5e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x14a>
 8013f84:	781a      	ldrb	r2, [r3, #0]
 8013f86:	e7e6      	b.n	8013f56 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x142>
 8013f88:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013f8a:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8013f8e:	3302      	adds	r3, #2
 8013f90:	930c      	str	r3, [sp, #48]	; 0x30
 8013f92:	e042      	b.n	801401a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x206>
 8013f94:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 8013f98:	edd3 7a00 	vldr	s15, [r3]
 8013f9c:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 8013fa0:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
 8013fa4:	3601      	adds	r6, #1
 8013fa6:	b923      	cbnz	r3, 8013fb2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19e>
 8013fa8:	2301      	movs	r3, #1
 8013faa:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 8013fae:	2306      	movs	r3, #6
 8013fb0:	930e      	str	r3, [sp, #56]	; 0x38
 8013fb2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8013fb6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013fba:	bf48      	it	mi
 8013fbc:	eef1 7a67 	vnegmi.f32	s15, s15
 8013fc0:	eeb0 7ae7 	vabs.f32	s14, s15
 8013fc4:	bf48      	it	mi
 8013fc6:	232d      	movmi	r3, #45	; 0x2d
 8013fc8:	eeb4 7a65 	vcmp.f32	s14, s11
 8013fcc:	bf48      	it	mi
 8013fce:	f8ad 302e 	strhmi.w	r3, [sp, #46]	; 0x2e
 8013fd2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013fd6:	dd2b      	ble.n	8014030 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21c>
 8013fd8:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 8013fdc:	2366      	movs	r3, #102	; 0x66
 8013fde:	9311      	str	r3, [sp, #68]	; 0x44
 8013fe0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013fe2:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8013fe6:	2b00      	cmp	r3, #0
 8013fe8:	f000 80b7 	beq.w	801415a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x346>
 8013fec:	881a      	ldrh	r2, [r3, #0]
 8013fee:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 8013ff2:	a80c      	add	r0, sp, #48	; 0x30
 8013ff4:	9005      	str	r0, [sp, #20]
 8013ff6:	f89d 0029 	ldrb.w	r0, [sp, #41]	; 0x29
 8013ffa:	9004      	str	r0, [sp, #16]
 8013ffc:	980d      	ldr	r0, [sp, #52]	; 0x34
 8013ffe:	9003      	str	r0, [sp, #12]
 8014000:	f89d 002c 	ldrb.w	r0, [sp, #44]	; 0x2c
 8014004:	9002      	str	r0, [sp, #8]
 8014006:	980e      	ldr	r0, [sp, #56]	; 0x38
 8014008:	9001      	str	r0, [sp, #4]
 801400a:	f89d 002b 	ldrb.w	r0, [sp, #43]	; 0x2b
 801400e:	9000      	str	r0, [sp, #0]
 8014010:	e9cd 9706 	strd	r9, r7, [sp, #24]
 8014014:	a80f      	add	r0, sp, #60	; 0x3c
 8014016:	f7ff fbe9 	bl	80137ec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801401a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801401c:	b10b      	cbz	r3, 8014022 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x20e>
 801401e:	3302      	adds	r3, #2
 8014020:	9309      	str	r3, [sp, #36]	; 0x24
 8014022:	9b08      	ldr	r3, [sp, #32]
 8014024:	2b00      	cmp	r3, #0
 8014026:	f43f af0c 	beq.w	8013e42 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 801402a:	3301      	adds	r3, #1
 801402c:	9308      	str	r3, [sp, #32]
 801402e:	e708      	b.n	8013e42 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8014030:	eef4 7a67 	vcmp.f32	s15, s15
 8014034:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014038:	d60b      	bvs.n	8014052 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x23e>
 801403a:	980e      	ldr	r0, [sp, #56]	; 0x38
 801403c:	ed9f 7a24 	vldr	s14, [pc, #144]	; 80140d0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 8014040:	2300      	movs	r3, #0
 8014042:	eeb2 6a04 	vmov.f32	s12, #36	; 0x41200000  10.0
 8014046:	4283      	cmp	r3, r0
 8014048:	da07      	bge.n	801405a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x246>
 801404a:	ee87 7a06 	vdiv.f32	s14, s14, s12
 801404e:	3301      	adds	r3, #1
 8014050:	e7f9      	b.n	8014046 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x232>
 8014052:	4b20      	ldr	r3, [pc, #128]	; (80140d4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c0>)
 8014054:	9310      	str	r3, [sp, #64]	; 0x40
 8014056:	236e      	movs	r3, #110	; 0x6e
 8014058:	e7c1      	b.n	8013fde <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1ca>
 801405a:	ee77 7a87 	vadd.f32	s15, s15, s14
 801405e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014062:	eeb0 7a67 	vmov.f32	s14, s15
 8014066:	eeb4 7ac6 	vcmpe.f32	s14, s12
 801406a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801406e:	da27      	bge.n	80140c0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ac>
 8014070:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8014072:	2100      	movs	r1, #0
 8014074:	eeb6 5a00 	vmov.f32	s10, #96	; 0x3f000000  0.5
 8014078:	eba9 0202 	sub.w	r2, r9, r2
 801407c:	eef4 6ac5 	vcmpe.f32	s13, s10
 8014080:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014084:	b28c      	uxth	r4, r1
 8014086:	db2a      	blt.n	80140de <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ca>
 8014088:	1a53      	subs	r3, r2, r1
 801408a:	2b00      	cmp	r3, #0
 801408c:	dd27      	ble.n	80140de <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ca>
 801408e:	2963      	cmp	r1, #99	; 0x63
 8014090:	d024      	beq.n	80140dc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 8014092:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8014096:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 801409a:	ee17 3a10 	vmov	r3, s14
 801409e:	2b09      	cmp	r3, #9
 80140a0:	bfa8      	it	ge
 80140a2:	2309      	movge	r3, #9
 80140a4:	ee07 3a10 	vmov	s14, r3
 80140a8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80140ac:	f103 0430 	add.w	r4, r3, #48	; 0x30
 80140b0:	f828 4011 	strh.w	r4, [r8, r1, lsl #1]
 80140b4:	eee7 7a66 	vfms.f32	s15, s14, s13
 80140b8:	3101      	adds	r1, #1
 80140ba:	eec6 6a86 	vdiv.f32	s13, s13, s12
 80140be:	e7dd      	b.n	801407c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x268>
 80140c0:	ee66 6a86 	vmul.f32	s13, s13, s12
 80140c4:	ee87 7a06 	vdiv.f32	s14, s14, s12
 80140c8:	e7cd      	b.n	8014066 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x252>
 80140ca:	bf00      	nop
 80140cc:	7f7fffff 	.word	0x7f7fffff
 80140d0:	3f000002 	.word	0x3f000002
 80140d4:	0061006e 	.word	0x0061006e
 80140d8:	006e0069 	.word	0x006e0069
 80140dc:	460c      	mov	r4, r1
 80140de:	2a63      	cmp	r2, #99	; 0x63
 80140e0:	bfd4      	ite	le
 80140e2:	ebc4 0202 	rsble	r2, r4, r2
 80140e6:	f1c4 0263 	rsbgt	r2, r4, #99	; 0x63
 80140ea:	2a00      	cmp	r2, #0
 80140ec:	dd30      	ble.n	8014150 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 80140ee:	4603      	mov	r3, r0
 80140f0:	2501      	movs	r5, #1
 80140f2:	210a      	movs	r1, #10
 80140f4:	2b00      	cmp	r3, #0
 80140f6:	dd0d      	ble.n	8014114 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x300>
 80140f8:	ee67 7a86 	vmul.f32	s15, s15, s12
 80140fc:	3b01      	subs	r3, #1
 80140fe:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8014102:	ee17 ca10 	vmov	ip, s14
 8014106:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801410a:	fb01 c505 	mla	r5, r1, r5, ip
 801410e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8014112:	e7ef      	b.n	80140f4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e0>
 8014114:	2800      	cmp	r0, #0
 8014116:	f100 33ff 	add.w	r3, r0, #4294967295
 801411a:	bfac      	ite	ge
 801411c:	1a18      	subge	r0, r3, r0
 801411e:	4618      	movlt	r0, r3
 8014120:	0064      	lsls	r4, r4, #1
 8014122:	900e      	str	r0, [sp, #56]	; 0x38
 8014124:	230a      	movs	r3, #10
 8014126:	b292      	uxth	r2, r2
 8014128:	eb08 0104 	add.w	r1, r8, r4
 801412c:	4628      	mov	r0, r5
 801412e:	f7ff fb2b 	bl	8013788 <_ZN8touchgfx7Unicode4itoaElPtti>
 8014132:	2d01      	cmp	r5, #1
 8014134:	dc0a      	bgt.n	801414c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x338>
 8014136:	f89d 302a 	ldrb.w	r3, [sp, #42]	; 0x2a
 801413a:	2b00      	cmp	r3, #0
 801413c:	bf0c      	ite	eq
 801413e:	2300      	moveq	r3, #0
 8014140:	232e      	movne	r3, #46	; 0x2e
 8014142:	aa42      	add	r2, sp, #264	; 0x108
 8014144:	4414      	add	r4, r2
 8014146:	f824 3cc8 	strh.w	r3, [r4, #-200]
 801414a:	e749      	b.n	8013fe0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1cc>
 801414c:	232e      	movs	r3, #46	; 0x2e
 801414e:	e7f8      	b.n	8014142 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x32e>
 8014150:	ab42      	add	r3, sp, #264	; 0x108
 8014152:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8014156:	2300      	movs	r3, #0
 8014158:	e7f5      	b.n	8014146 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x332>
 801415a:	9a08      	ldr	r2, [sp, #32]
 801415c:	2a00      	cmp	r2, #0
 801415e:	f43f af46 	beq.w	8013fee <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1da>
 8014162:	7812      	ldrb	r2, [r2, #0]
 8014164:	e743      	b.n	8013fee <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1da>
 8014166:	2c00      	cmp	r4, #0
 8014168:	f43f af00 	beq.w	8013f6c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 801416c:	7824      	ldrb	r4, [r4, #0]
 801416e:	e6fd      	b.n	8013f6c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>

08014170 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 8014170:	b507      	push	{r0, r1, r2, lr}
 8014172:	9300      	str	r3, [sp, #0]
 8014174:	4613      	mov	r3, r2
 8014176:	2200      	movs	r2, #0
 8014178:	f7ff fe4c 	bl	8013e14 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 801417c:	b003      	add	sp, #12
 801417e:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08014184 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8014184:	4b01      	ldr	r3, [pc, #4]	; (801418c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8014186:	6018      	str	r0, [r3, #0]
 8014188:	4770      	bx	lr
 801418a:	bf00      	nop
 801418c:	200154f0 	.word	0x200154f0

08014190 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8014190:	4b06      	ldr	r3, [pc, #24]	; (80141ac <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8014192:	881a      	ldrh	r2, [r3, #0]
 8014194:	4282      	cmp	r2, r0
 8014196:	d807      	bhi.n	80141a8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8014198:	4b05      	ldr	r3, [pc, #20]	; (80141b0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801419a:	881b      	ldrh	r3, [r3, #0]
 801419c:	4413      	add	r3, r2
 801419e:	4298      	cmp	r0, r3
 80141a0:	bfac      	ite	ge
 80141a2:	2000      	movge	r0, #0
 80141a4:	2001      	movlt	r0, #1
 80141a6:	4770      	bx	lr
 80141a8:	2000      	movs	r0, #0
 80141aa:	4770      	bx	lr
 80141ac:	20015510 	.word	0x20015510
 80141b0:	20015514 	.word	0x20015514

080141b4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 80141b4:	b508      	push	{r3, lr}
 80141b6:	4601      	mov	r1, r0
 80141b8:	f7ff ffea 	bl	8014190 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 80141bc:	b118      	cbz	r0, 80141c6 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 80141be:	4b02      	ldr	r3, [pc, #8]	; (80141c8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 80141c0:	681b      	ldr	r3, [r3, #0]
 80141c2:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80141c6:	bd08      	pop	{r3, pc}
 80141c8:	200154f4 	.word	0x200154f4

080141cc <_ZN8touchgfx6Bitmap10clearCacheEv>:
 80141cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80141ce:	4c24      	ldr	r4, [pc, #144]	; (8014260 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 80141d0:	6823      	ldr	r3, [r4, #0]
 80141d2:	2b00      	cmp	r3, #0
 80141d4:	d042      	beq.n	801425c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80141d6:	4a23      	ldr	r2, [pc, #140]	; (8014264 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 80141d8:	4d23      	ldr	r5, [pc, #140]	; (8014268 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 80141da:	8811      	ldrh	r1, [r2, #0]
 80141dc:	f8b5 c000 	ldrh.w	ip, [r5]
 80141e0:	4822      	ldr	r0, [pc, #136]	; (801426c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 80141e2:	4461      	add	r1, ip
 80141e4:	1c4a      	adds	r2, r1, #1
 80141e6:	f022 0201 	bic.w	r2, r2, #1
 80141ea:	008f      	lsls	r7, r1, #2
 80141ec:	0412      	lsls	r2, r2, #16
 80141ee:	19de      	adds	r6, r3, r7
 80141f0:	0c12      	lsrs	r2, r2, #16
 80141f2:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 80141f6:	6006      	str	r6, [r0, #0]
 80141f8:	4e1d      	ldr	r6, [pc, #116]	; (8014270 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 80141fa:	19da      	adds	r2, r3, r7
 80141fc:	6032      	str	r2, [r6, #0]
 80141fe:	220e      	movs	r2, #14
 8014200:	fb02 f20c 	mul.w	r2, r2, ip
 8014204:	3203      	adds	r2, #3
 8014206:	f022 0203 	bic.w	r2, r2, #3
 801420a:	443a      	add	r2, r7
 801420c:	4f19      	ldr	r7, [pc, #100]	; (8014274 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801420e:	4413      	add	r3, r2
 8014210:	603b      	str	r3, [r7, #0]
 8014212:	4f19      	ldr	r7, [pc, #100]	; (8014278 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8014214:	2300      	movs	r3, #0
 8014216:	803b      	strh	r3, [r7, #0]
 8014218:	4f18      	ldr	r7, [pc, #96]	; (801427c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801421a:	683f      	ldr	r7, [r7, #0]
 801421c:	1aba      	subs	r2, r7, r2
 801421e:	4f18      	ldr	r7, [pc, #96]	; (8014280 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8014220:	603a      	str	r2, [r7, #0]
 8014222:	4a18      	ldr	r2, [pc, #96]	; (8014284 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8014224:	469c      	mov	ip, r3
 8014226:	8013      	strh	r3, [r2, #0]
 8014228:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801422c:	428b      	cmp	r3, r1
 801422e:	d10d      	bne.n	801424c <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8014230:	882d      	ldrh	r5, [r5, #0]
 8014232:	6830      	ldr	r0, [r6, #0]
 8014234:	2300      	movs	r3, #0
 8014236:	240e      	movs	r4, #14
 8014238:	429d      	cmp	r5, r3
 801423a:	d90f      	bls.n	801425c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801423c:	fb04 0203 	mla	r2, r4, r3, r0
 8014240:	3301      	adds	r3, #1
 8014242:	7b11      	ldrb	r1, [r2, #12]
 8014244:	f36f 1145 	bfc	r1, #5, #1
 8014248:	7311      	strb	r1, [r2, #12]
 801424a:	e7f5      	b.n	8014238 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 801424c:	6822      	ldr	r2, [r4, #0]
 801424e:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8014252:	6802      	ldr	r2, [r0, #0]
 8014254:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8014258:	3301      	adds	r3, #1
 801425a:	e7e7      	b.n	801422c <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 801425c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801425e:	bf00      	nop
 8014260:	200154f4 	.word	0x200154f4
 8014264:	20015510 	.word	0x20015510
 8014268:	20015514 	.word	0x20015514
 801426c:	20015508 	.word	0x20015508
 8014270:	200154f8 	.word	0x200154f8
 8014274:	20015500 	.word	0x20015500
 8014278:	20015512 	.word	0x20015512
 801427c:	200154fc 	.word	0x200154fc
 8014280:	2001550c 	.word	0x2001550c
 8014284:	20015504 	.word	0x20015504

08014288 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8014288:	4b06      	ldr	r3, [pc, #24]	; (80142a4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801428a:	681b      	ldr	r3, [r3, #0]
 801428c:	b943      	cbnz	r3, 80142a0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801428e:	b139      	cbz	r1, 80142a0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8014290:	4b05      	ldr	r3, [pc, #20]	; (80142a8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8014292:	801a      	strh	r2, [r3, #0]
 8014294:	4b05      	ldr	r3, [pc, #20]	; (80142ac <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8014296:	6019      	str	r1, [r3, #0]
 8014298:	4b05      	ldr	r3, [pc, #20]	; (80142b0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801429a:	6018      	str	r0, [r3, #0]
 801429c:	f7ff bf96 	b.w	80141cc <_ZN8touchgfx6Bitmap10clearCacheEv>
 80142a0:	4770      	bx	lr
 80142a2:	bf00      	nop
 80142a4:	20015500 	.word	0x20015500
 80142a8:	20015514 	.word	0x20015514
 80142ac:	200154fc 	.word	0x200154fc
 80142b0:	200154f4 	.word	0x200154f4

080142b4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 80142b4:	b470      	push	{r4, r5, r6}
 80142b6:	4c07      	ldr	r4, [pc, #28]	; (80142d4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 80142b8:	6826      	ldr	r6, [r4, #0]
 80142ba:	4605      	mov	r5, r0
 80142bc:	4610      	mov	r0, r2
 80142be:	9a03      	ldr	r2, [sp, #12]
 80142c0:	b936      	cbnz	r6, 80142d0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 80142c2:	6025      	str	r5, [r4, #0]
 80142c4:	4c04      	ldr	r4, [pc, #16]	; (80142d8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 80142c6:	8021      	strh	r1, [r4, #0]
 80142c8:	bc70      	pop	{r4, r5, r6}
 80142ca:	4619      	mov	r1, r3
 80142cc:	f7ff bfdc 	b.w	8014288 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 80142d0:	bc70      	pop	{r4, r5, r6}
 80142d2:	4770      	bx	lr
 80142d4:	20015518 	.word	0x20015518
 80142d8:	20015510 	.word	0x20015510

080142dc <_ZNK8touchgfx6Bitmap8getWidthEv>:
 80142dc:	4a12      	ldr	r2, [pc, #72]	; (8014328 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 80142de:	8803      	ldrh	r3, [r0, #0]
 80142e0:	8812      	ldrh	r2, [r2, #0]
 80142e2:	4293      	cmp	r3, r2
 80142e4:	d207      	bcs.n	80142f6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 80142e6:	4a11      	ldr	r2, [pc, #68]	; (801432c <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 80142e8:	6812      	ldr	r2, [r2, #0]
 80142ea:	2114      	movs	r1, #20
 80142ec:	fb01 2303 	mla	r3, r1, r3, r2
 80142f0:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80142f4:	4770      	bx	lr
 80142f6:	490e      	ldr	r1, [pc, #56]	; (8014330 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 80142f8:	8809      	ldrh	r1, [r1, #0]
 80142fa:	4411      	add	r1, r2
 80142fc:	428b      	cmp	r3, r1
 80142fe:	da04      	bge.n	801430a <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8014300:	1a9b      	subs	r3, r3, r2
 8014302:	4a0c      	ldr	r2, [pc, #48]	; (8014334 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8014304:	210e      	movs	r1, #14
 8014306:	6812      	ldr	r2, [r2, #0]
 8014308:	e7f0      	b.n	80142ec <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801430a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801430e:	4293      	cmp	r3, r2
 8014310:	d108      	bne.n	8014324 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8014312:	4b09      	ldr	r3, [pc, #36]	; (8014338 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8014314:	781b      	ldrb	r3, [r3, #0]
 8014316:	b91b      	cbnz	r3, 8014320 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8014318:	4b08      	ldr	r3, [pc, #32]	; (801433c <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801431a:	f9b3 0000 	ldrsh.w	r0, [r3]
 801431e:	4770      	bx	lr
 8014320:	4b07      	ldr	r3, [pc, #28]	; (8014340 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8014322:	e7fa      	b.n	801431a <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8014324:	2000      	movs	r0, #0
 8014326:	4770      	bx	lr
 8014328:	20015510 	.word	0x20015510
 801432c:	20015518 	.word	0x20015518
 8014330:	20015514 	.word	0x20015514
 8014334:	200154f8 	.word	0x200154f8
 8014338:	20015480 	.word	0x20015480
 801433c:	20015482 	.word	0x20015482
 8014340:	20015484 	.word	0x20015484

08014344 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8014344:	4a12      	ldr	r2, [pc, #72]	; (8014390 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8014346:	8803      	ldrh	r3, [r0, #0]
 8014348:	8812      	ldrh	r2, [r2, #0]
 801434a:	4293      	cmp	r3, r2
 801434c:	d207      	bcs.n	801435e <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 801434e:	4a11      	ldr	r2, [pc, #68]	; (8014394 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8014350:	6812      	ldr	r2, [r2, #0]
 8014352:	2114      	movs	r1, #20
 8014354:	fb01 2303 	mla	r3, r1, r3, r2
 8014358:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 801435c:	4770      	bx	lr
 801435e:	490e      	ldr	r1, [pc, #56]	; (8014398 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8014360:	8809      	ldrh	r1, [r1, #0]
 8014362:	4411      	add	r1, r2
 8014364:	428b      	cmp	r3, r1
 8014366:	da04      	bge.n	8014372 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8014368:	1a9b      	subs	r3, r3, r2
 801436a:	4a0c      	ldr	r2, [pc, #48]	; (801439c <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801436c:	210e      	movs	r1, #14
 801436e:	6812      	ldr	r2, [r2, #0]
 8014370:	e7f0      	b.n	8014354 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8014372:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8014376:	4293      	cmp	r3, r2
 8014378:	d108      	bne.n	801438c <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801437a:	4b09      	ldr	r3, [pc, #36]	; (80143a0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801437c:	781b      	ldrb	r3, [r3, #0]
 801437e:	b91b      	cbnz	r3, 8014388 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8014380:	4b08      	ldr	r3, [pc, #32]	; (80143a4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8014382:	f9b3 0000 	ldrsh.w	r0, [r3]
 8014386:	4770      	bx	lr
 8014388:	4b07      	ldr	r3, [pc, #28]	; (80143a8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801438a:	e7fa      	b.n	8014382 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 801438c:	2000      	movs	r0, #0
 801438e:	4770      	bx	lr
 8014390:	20015510 	.word	0x20015510
 8014394:	20015518 	.word	0x20015518
 8014398:	20015514 	.word	0x20015514
 801439c:	200154f8 	.word	0x200154f8
 80143a0:	20015480 	.word	0x20015480
 80143a4:	20015484 	.word	0x20015484
 80143a8:	20015482 	.word	0x20015482

080143ac <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 80143ac:	b510      	push	{r4, lr}
 80143ae:	4a1f      	ldr	r2, [pc, #124]	; (801442c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 80143b0:	880b      	ldrh	r3, [r1, #0]
 80143b2:	8812      	ldrh	r2, [r2, #0]
 80143b4:	4293      	cmp	r3, r2
 80143b6:	d213      	bcs.n	80143e0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 80143b8:	4a1d      	ldr	r2, [pc, #116]	; (8014430 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 80143ba:	6812      	ldr	r2, [r2, #0]
 80143bc:	2114      	movs	r1, #20
 80143be:	fb01 2303 	mla	r3, r1, r3, r2
 80143c2:	8a1a      	ldrh	r2, [r3, #16]
 80143c4:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 80143c8:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 80143cc:	8a5b      	ldrh	r3, [r3, #18]
 80143ce:	8004      	strh	r4, [r0, #0]
 80143d0:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80143d4:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80143d8:	8041      	strh	r1, [r0, #2]
 80143da:	8082      	strh	r2, [r0, #4]
 80143dc:	80c3      	strh	r3, [r0, #6]
 80143de:	e00e      	b.n	80143fe <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 80143e0:	4914      	ldr	r1, [pc, #80]	; (8014434 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 80143e2:	8809      	ldrh	r1, [r1, #0]
 80143e4:	4411      	add	r1, r2
 80143e6:	428b      	cmp	r3, r1
 80143e8:	da0a      	bge.n	8014400 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 80143ea:	1a9b      	subs	r3, r3, r2
 80143ec:	4a12      	ldr	r2, [pc, #72]	; (8014438 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 80143ee:	6812      	ldr	r2, [r2, #0]
 80143f0:	210e      	movs	r1, #14
 80143f2:	fb01 2303 	mla	r3, r1, r3, r2
 80143f6:	681a      	ldr	r2, [r3, #0]
 80143f8:	6002      	str	r2, [r0, #0]
 80143fa:	685a      	ldr	r2, [r3, #4]
 80143fc:	6042      	str	r2, [r0, #4]
 80143fe:	bd10      	pop	{r4, pc}
 8014400:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8014404:	4293      	cmp	r3, r2
 8014406:	d10b      	bne.n	8014420 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 8014408:	4b0c      	ldr	r3, [pc, #48]	; (801443c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801440a:	f9b3 1000 	ldrsh.w	r1, [r3]
 801440e:	4b0c      	ldr	r3, [pc, #48]	; (8014440 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8014410:	8081      	strh	r1, [r0, #4]
 8014412:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014416:	80c2      	strh	r2, [r0, #6]
 8014418:	2300      	movs	r3, #0
 801441a:	8003      	strh	r3, [r0, #0]
 801441c:	8043      	strh	r3, [r0, #2]
 801441e:	e7ee      	b.n	80143fe <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8014420:	2300      	movs	r3, #0
 8014422:	8003      	strh	r3, [r0, #0]
 8014424:	8043      	strh	r3, [r0, #2]
 8014426:	8083      	strh	r3, [r0, #4]
 8014428:	e7d8      	b.n	80143dc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801442a:	bf00      	nop
 801442c:	20015510 	.word	0x20015510
 8014430:	20015518 	.word	0x20015518
 8014434:	20015514 	.word	0x20015514
 8014438:	200154f8 	.word	0x200154f8
 801443c:	2001547c 	.word	0x2001547c
 8014440:	2001547e 	.word	0x2001547e

08014444 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8014444:	4a17      	ldr	r2, [pc, #92]	; (80144a4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8014446:	8803      	ldrh	r3, [r0, #0]
 8014448:	8812      	ldrh	r2, [r2, #0]
 801444a:	4293      	cmp	r3, r2
 801444c:	d213      	bcs.n	8014476 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801444e:	4a16      	ldr	r2, [pc, #88]	; (80144a8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8014450:	6812      	ldr	r2, [r2, #0]
 8014452:	2114      	movs	r1, #20
 8014454:	fb01 2303 	mla	r3, r1, r3, r2
 8014458:	8a1a      	ldrh	r2, [r3, #16]
 801445a:	8919      	ldrh	r1, [r3, #8]
 801445c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8014460:	428a      	cmp	r2, r1
 8014462:	db1d      	blt.n	80144a0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8014464:	8a58      	ldrh	r0, [r3, #18]
 8014466:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801446a:	895b      	ldrh	r3, [r3, #10]
 801446c:	4298      	cmp	r0, r3
 801446e:	bfac      	ite	ge
 8014470:	2000      	movge	r0, #0
 8014472:	2001      	movlt	r0, #1
 8014474:	4770      	bx	lr
 8014476:	490d      	ldr	r1, [pc, #52]	; (80144ac <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8014478:	8809      	ldrh	r1, [r1, #0]
 801447a:	4411      	add	r1, r2
 801447c:	428b      	cmp	r3, r1
 801447e:	da0d      	bge.n	801449c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8014480:	1a9b      	subs	r3, r3, r2
 8014482:	4a0b      	ldr	r2, [pc, #44]	; (80144b0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8014484:	6812      	ldr	r2, [r2, #0]
 8014486:	210e      	movs	r1, #14
 8014488:	fb01 2303 	mla	r3, r1, r3, r2
 801448c:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8014490:	891a      	ldrh	r2, [r3, #8]
 8014492:	4291      	cmp	r1, r2
 8014494:	db04      	blt.n	80144a0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8014496:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801449a:	e7e6      	b.n	801446a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 801449c:	2000      	movs	r0, #0
 801449e:	4770      	bx	lr
 80144a0:	2001      	movs	r0, #1
 80144a2:	4770      	bx	lr
 80144a4:	20015510 	.word	0x20015510
 80144a8:	20015518 	.word	0x20015518
 80144ac:	20015514 	.word	0x20015514
 80144b0:	200154f8 	.word	0x200154f8

080144b4 <_ZNK8touchgfx6Bitmap7getDataEv>:
 80144b4:	4a12      	ldr	r2, [pc, #72]	; (8014500 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 80144b6:	8803      	ldrh	r3, [r0, #0]
 80144b8:	8811      	ldrh	r1, [r2, #0]
 80144ba:	428b      	cmp	r3, r1
 80144bc:	d20b      	bcs.n	80144d6 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 80144be:	4a11      	ldr	r2, [pc, #68]	; (8014504 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80144c0:	6812      	ldr	r2, [r2, #0]
 80144c2:	b112      	cbz	r2, 80144ca <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 80144c4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80144c8:	b9c0      	cbnz	r0, 80144fc <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 80144ca:	4a0f      	ldr	r2, [pc, #60]	; (8014508 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 80144cc:	6811      	ldr	r1, [r2, #0]
 80144ce:	2214      	movs	r2, #20
 80144d0:	4353      	muls	r3, r2
 80144d2:	58c8      	ldr	r0, [r1, r3]
 80144d4:	4770      	bx	lr
 80144d6:	4a0d      	ldr	r2, [pc, #52]	; (801450c <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 80144d8:	8812      	ldrh	r2, [r2, #0]
 80144da:	440a      	add	r2, r1
 80144dc:	4293      	cmp	r3, r2
 80144de:	da04      	bge.n	80144ea <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 80144e0:	4a08      	ldr	r2, [pc, #32]	; (8014504 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80144e2:	6812      	ldr	r2, [r2, #0]
 80144e4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80144e8:	4770      	bx	lr
 80144ea:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80144ee:	4293      	cmp	r3, r2
 80144f0:	d103      	bne.n	80144fa <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 80144f2:	4b07      	ldr	r3, [pc, #28]	; (8014510 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 80144f4:	681b      	ldr	r3, [r3, #0]
 80144f6:	6c58      	ldr	r0, [r3, #68]	; 0x44
 80144f8:	4770      	bx	lr
 80144fa:	2000      	movs	r0, #0
 80144fc:	4770      	bx	lr
 80144fe:	bf00      	nop
 8014500:	20015510 	.word	0x20015510
 8014504:	200154f4 	.word	0x200154f4
 8014508:	20015518 	.word	0x20015518
 801450c:	20015514 	.word	0x20015514
 8014510:	20015488 	.word	0x20015488

08014514 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8014514:	4b24      	ldr	r3, [pc, #144]	; (80145a8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8014516:	8802      	ldrh	r2, [r0, #0]
 8014518:	8818      	ldrh	r0, [r3, #0]
 801451a:	4282      	cmp	r2, r0
 801451c:	d221      	bcs.n	8014562 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801451e:	4b23      	ldr	r3, [pc, #140]	; (80145ac <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8014520:	6819      	ldr	r1, [r3, #0]
 8014522:	2314      	movs	r3, #20
 8014524:	fb03 1302 	mla	r3, r3, r2, r1
 8014528:	6858      	ldr	r0, [r3, #4]
 801452a:	2800      	cmp	r0, #0
 801452c:	d03a      	beq.n	80145a4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801452e:	4920      	ldr	r1, [pc, #128]	; (80145b0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8014530:	6809      	ldr	r1, [r1, #0]
 8014532:	2900      	cmp	r1, #0
 8014534:	d036      	beq.n	80145a4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8014536:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801453a:	2900      	cmp	r1, #0
 801453c:	d032      	beq.n	80145a4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801453e:	891a      	ldrh	r2, [r3, #8]
 8014540:	8958      	ldrh	r0, [r3, #10]
 8014542:	4350      	muls	r0, r2
 8014544:	7c5a      	ldrb	r2, [r3, #17]
 8014546:	7cdb      	ldrb	r3, [r3, #19]
 8014548:	0952      	lsrs	r2, r2, #5
 801454a:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801454e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8014552:	2b0b      	cmp	r3, #11
 8014554:	bf18      	it	ne
 8014556:	0040      	lslne	r0, r0, #1
 8014558:	3003      	adds	r0, #3
 801455a:	f020 0003 	bic.w	r0, r0, #3
 801455e:	4408      	add	r0, r1
 8014560:	4770      	bx	lr
 8014562:	4b14      	ldr	r3, [pc, #80]	; (80145b4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8014564:	881b      	ldrh	r3, [r3, #0]
 8014566:	4403      	add	r3, r0
 8014568:	429a      	cmp	r2, r3
 801456a:	da1a      	bge.n	80145a2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801456c:	4b12      	ldr	r3, [pc, #72]	; (80145b8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801456e:	681b      	ldr	r3, [r3, #0]
 8014570:	1a10      	subs	r0, r2, r0
 8014572:	210e      	movs	r1, #14
 8014574:	fb01 3000 	mla	r0, r1, r0, r3
 8014578:	7b03      	ldrb	r3, [r0, #12]
 801457a:	f003 031f 	and.w	r3, r3, #31
 801457e:	2b0b      	cmp	r3, #11
 8014580:	d10b      	bne.n	801459a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8014582:	8903      	ldrh	r3, [r0, #8]
 8014584:	8940      	ldrh	r0, [r0, #10]
 8014586:	4358      	muls	r0, r3
 8014588:	4b09      	ldr	r3, [pc, #36]	; (80145b0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801458a:	6819      	ldr	r1, [r3, #0]
 801458c:	3003      	adds	r0, #3
 801458e:	f020 0303 	bic.w	r3, r0, #3
 8014592:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8014596:	4418      	add	r0, r3
 8014598:	4770      	bx	lr
 801459a:	2b0d      	cmp	r3, #13
 801459c:	d101      	bne.n	80145a2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801459e:	300d      	adds	r0, #13
 80145a0:	4770      	bx	lr
 80145a2:	2000      	movs	r0, #0
 80145a4:	4770      	bx	lr
 80145a6:	bf00      	nop
 80145a8:	20015510 	.word	0x20015510
 80145ac:	20015518 	.word	0x20015518
 80145b0:	200154f4 	.word	0x200154f4
 80145b4:	20015514 	.word	0x20015514
 80145b8:	200154f8 	.word	0x200154f8

080145bc <_ZNK8touchgfx6Bitmap9getFormatEv>:
 80145bc:	b510      	push	{r4, lr}
 80145be:	4a17      	ldr	r2, [pc, #92]	; (801461c <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 80145c0:	8803      	ldrh	r3, [r0, #0]
 80145c2:	8812      	ldrh	r2, [r2, #0]
 80145c4:	4293      	cmp	r3, r2
 80145c6:	d20c      	bcs.n	80145e2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 80145c8:	4a15      	ldr	r2, [pc, #84]	; (8014620 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 80145ca:	6812      	ldr	r2, [r2, #0]
 80145cc:	2114      	movs	r1, #20
 80145ce:	fb01 2303 	mla	r3, r1, r3, r2
 80145d2:	7c58      	ldrb	r0, [r3, #17]
 80145d4:	0942      	lsrs	r2, r0, #5
 80145d6:	7cd8      	ldrb	r0, [r3, #19]
 80145d8:	f3c0 1042 	ubfx	r0, r0, #5, #3
 80145dc:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 80145e0:	bd10      	pop	{r4, pc}
 80145e2:	4910      	ldr	r1, [pc, #64]	; (8014624 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 80145e4:	8809      	ldrh	r1, [r1, #0]
 80145e6:	4411      	add	r1, r2
 80145e8:	428b      	cmp	r3, r1
 80145ea:	da09      	bge.n	8014600 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 80145ec:	1a9b      	subs	r3, r3, r2
 80145ee:	4a0e      	ldr	r2, [pc, #56]	; (8014628 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 80145f0:	6812      	ldr	r2, [r2, #0]
 80145f2:	210e      	movs	r1, #14
 80145f4:	fb01 2303 	mla	r3, r1, r3, r2
 80145f8:	7b18      	ldrb	r0, [r3, #12]
 80145fa:	f000 001f 	and.w	r0, r0, #31
 80145fe:	e7ef      	b.n	80145e0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8014600:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8014604:	4293      	cmp	r3, r2
 8014606:	d106      	bne.n	8014616 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8014608:	f7ed ff86 	bl	8002518 <_ZN8touchgfx3HAL3lcdEv>
 801460c:	6803      	ldr	r3, [r0, #0]
 801460e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014612:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014614:	4718      	bx	r3
 8014616:	2000      	movs	r0, #0
 8014618:	e7e2      	b.n	80145e0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801461a:	bf00      	nop
 801461c:	20015510 	.word	0x20015510
 8014620:	20015518 	.word	0x20015518
 8014624:	20015514 	.word	0x20015514
 8014628:	200154f8 	.word	0x200154f8

0801462c <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801462c:	2010      	movs	r0, #16
 801462e:	4770      	bx	lr

08014630 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8014630:	2000      	movs	r0, #0
 8014632:	4770      	bx	lr

08014634 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8014634:	4b02      	ldr	r3, [pc, #8]	; (8014640 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8014636:	8818      	ldrh	r0, [r3, #0]
 8014638:	0040      	lsls	r0, r0, #1
 801463a:	b280      	uxth	r0, r0
 801463c:	4770      	bx	lr
 801463e:	bf00      	nop
 8014640:	20015482 	.word	0x20015482

08014644 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8014644:	2bff      	cmp	r3, #255	; 0xff
 8014646:	d050      	beq.n	80146ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8014648:	2a0b      	cmp	r2, #11
 801464a:	d04a      	beq.n	80146e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801464c:	d80e      	bhi.n	801466c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801464e:	2a03      	cmp	r2, #3
 8014650:	d03f      	beq.n	80146d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8014652:	d804      	bhi.n	801465e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8014654:	2a01      	cmp	r2, #1
 8014656:	d03e      	beq.n	80146d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8014658:	d93f      	bls.n	80146da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801465a:	6b80      	ldr	r0, [r0, #56]	; 0x38
 801465c:	4770      	bx	lr
 801465e:	2a09      	cmp	r2, #9
 8014660:	d03f      	beq.n	80146e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8014662:	d83c      	bhi.n	80146de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8014664:	2a08      	cmp	r2, #8
 8014666:	d03a      	beq.n	80146de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8014668:	2000      	movs	r0, #0
 801466a:	4770      	bx	lr
 801466c:	2a2f      	cmp	r2, #47	; 0x2f
 801466e:	d024      	beq.n	80146ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8014670:	d80d      	bhi.n	801468e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8014672:	2a2d      	cmp	r2, #45	; 0x2d
 8014674:	d014      	beq.n	80146a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8014676:	d826      	bhi.n	80146c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8014678:	2a2c      	cmp	r2, #44	; 0x2c
 801467a:	d1f5      	bne.n	8014668 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801467c:	684b      	ldr	r3, [r1, #4]
 801467e:	781b      	ldrb	r3, [r3, #0]
 8014680:	2b01      	cmp	r3, #1
 8014682:	d018      	beq.n	80146b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8014684:	d323      	bcc.n	80146ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8014686:	2b02      	cmp	r3, #2
 8014688:	d1ee      	bne.n	8014668 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801468a:	6880      	ldr	r0, [r0, #8]
 801468c:	4770      	bx	lr
 801468e:	2a31      	cmp	r2, #49	; 0x31
 8014690:	d004      	beq.n	801469c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8014692:	d328      	bcc.n	80146e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8014694:	2a32      	cmp	r2, #50	; 0x32
 8014696:	d026      	beq.n	80146e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8014698:	2a33      	cmp	r2, #51	; 0x33
 801469a:	d1e5      	bne.n	8014668 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801469c:	6f00      	ldr	r0, [r0, #112]	; 0x70
 801469e:	4770      	bx	lr
 80146a0:	684b      	ldr	r3, [r1, #4]
 80146a2:	781b      	ldrb	r3, [r3, #0]
 80146a4:	2b01      	cmp	r3, #1
 80146a6:	d004      	beq.n	80146b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 80146a8:	d30b      	bcc.n	80146c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80146aa:	2b02      	cmp	r3, #2
 80146ac:	d1dc      	bne.n	8014668 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80146ae:	6900      	ldr	r0, [r0, #16]
 80146b0:	4770      	bx	lr
 80146b2:	6a00      	ldr	r0, [r0, #32]
 80146b4:	4770      	bx	lr
 80146b6:	6980      	ldr	r0, [r0, #24]
 80146b8:	4770      	bx	lr
 80146ba:	684b      	ldr	r3, [r1, #4]
 80146bc:	781b      	ldrb	r3, [r3, #0]
 80146be:	2b00      	cmp	r3, #0
 80146c0:	d1d2      	bne.n	8014668 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80146c2:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80146c4:	4770      	bx	lr
 80146c6:	684b      	ldr	r3, [r1, #4]
 80146c8:	781b      	ldrb	r3, [r3, #0]
 80146ca:	2b00      	cmp	r3, #0
 80146cc:	d1cc      	bne.n	8014668 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80146ce:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80146d0:	4770      	bx	lr
 80146d2:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80146d4:	4770      	bx	lr
 80146d6:	6d00      	ldr	r0, [r0, #80]	; 0x50
 80146d8:	4770      	bx	lr
 80146da:	6c00      	ldr	r0, [r0, #64]	; 0x40
 80146dc:	4770      	bx	lr
 80146de:	6d80      	ldr	r0, [r0, #88]	; 0x58
 80146e0:	4770      	bx	lr
 80146e2:	6e00      	ldr	r0, [r0, #96]	; 0x60
 80146e4:	4770      	bx	lr
 80146e6:	6e80      	ldr	r0, [r0, #104]	; 0x68
 80146e8:	4770      	bx	lr
 80146ea:	2a0b      	cmp	r2, #11
 80146ec:	d049      	beq.n	8014782 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80146ee:	d80e      	bhi.n	801470e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 80146f0:	2a03      	cmp	r2, #3
 80146f2:	d040      	beq.n	8014776 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 80146f4:	d804      	bhi.n	8014700 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 80146f6:	2a01      	cmp	r2, #1
 80146f8:	d03f      	beq.n	801477a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 80146fa:	d940      	bls.n	801477e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 80146fc:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80146fe:	4770      	bx	lr
 8014700:	2a09      	cmp	r2, #9
 8014702:	d03e      	beq.n	8014782 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8014704:	d801      	bhi.n	801470a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8014706:	2a08      	cmp	r2, #8
 8014708:	d1ae      	bne.n	8014668 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801470a:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 801470c:	4770      	bx	lr
 801470e:	2a2f      	cmp	r2, #47	; 0x2f
 8014710:	d024      	beq.n	801475c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8014712:	d80d      	bhi.n	8014730 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8014714:	2a2d      	cmp	r2, #45	; 0x2d
 8014716:	d014      	beq.n	8014742 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8014718:	d826      	bhi.n	8014768 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 801471a:	2a2c      	cmp	r2, #44	; 0x2c
 801471c:	d1a4      	bne.n	8014668 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801471e:	684b      	ldr	r3, [r1, #4]
 8014720:	781b      	ldrb	r3, [r3, #0]
 8014722:	2b01      	cmp	r3, #1
 8014724:	d018      	beq.n	8014758 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8014726:	d324      	bcc.n	8014772 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8014728:	2b02      	cmp	r3, #2
 801472a:	d19d      	bne.n	8014668 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801472c:	68c0      	ldr	r0, [r0, #12]
 801472e:	4770      	bx	lr
 8014730:	2a31      	cmp	r2, #49	; 0x31
 8014732:	d004      	beq.n	801473e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8014734:	d327      	bcc.n	8014786 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8014736:	2a32      	cmp	r2, #50	; 0x32
 8014738:	d025      	beq.n	8014786 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801473a:	2a33      	cmp	r2, #51	; 0x33
 801473c:	d194      	bne.n	8014668 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801473e:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8014740:	4770      	bx	lr
 8014742:	684b      	ldr	r3, [r1, #4]
 8014744:	781b      	ldrb	r3, [r3, #0]
 8014746:	2b01      	cmp	r3, #1
 8014748:	d004      	beq.n	8014754 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801474a:	d30b      	bcc.n	8014764 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 801474c:	2b02      	cmp	r3, #2
 801474e:	d18b      	bne.n	8014668 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014750:	6940      	ldr	r0, [r0, #20]
 8014752:	4770      	bx	lr
 8014754:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8014756:	4770      	bx	lr
 8014758:	69c0      	ldr	r0, [r0, #28]
 801475a:	4770      	bx	lr
 801475c:	684b      	ldr	r3, [r1, #4]
 801475e:	781b      	ldrb	r3, [r3, #0]
 8014760:	2b00      	cmp	r3, #0
 8014762:	d181      	bne.n	8014668 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014764:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8014766:	4770      	bx	lr
 8014768:	684b      	ldr	r3, [r1, #4]
 801476a:	781b      	ldrb	r3, [r3, #0]
 801476c:	2b00      	cmp	r3, #0
 801476e:	f47f af7b 	bne.w	8014668 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014772:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8014774:	4770      	bx	lr
 8014776:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8014778:	4770      	bx	lr
 801477a:	6d40      	ldr	r0, [r0, #84]	; 0x54
 801477c:	4770      	bx	lr
 801477e:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8014780:	4770      	bx	lr
 8014782:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8014784:	4770      	bx	lr
 8014786:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8014788:	4770      	bx	lr

0801478a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801478a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801478e:	b087      	sub	sp, #28
 8014790:	9815      	ldr	r0, [sp, #84]	; 0x54
 8014792:	9205      	str	r2, [sp, #20]
 8014794:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8014798:	9202      	str	r2, [sp, #8]
 801479a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801479e:	9101      	str	r1, [sp, #4]
 80147a0:	6841      	ldr	r1, [r0, #4]
 80147a2:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 80147a6:	fb01 2404 	mla	r4, r1, r4, r2
 80147aa:	6802      	ldr	r2, [r0, #0]
 80147ac:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80147b0:	f8de 2000 	ldr.w	r2, [lr]
 80147b4:	9203      	str	r2, [sp, #12]
 80147b6:	f8de 2004 	ldr.w	r2, [lr, #4]
 80147ba:	3204      	adds	r2, #4
 80147bc:	9204      	str	r2, [sp, #16]
 80147be:	9a02      	ldr	r2, [sp, #8]
 80147c0:	43d6      	mvns	r6, r2
 80147c2:	b2f6      	uxtb	r6, r6
 80147c4:	9a01      	ldr	r2, [sp, #4]
 80147c6:	2a00      	cmp	r2, #0
 80147c8:	dc03      	bgt.n	80147d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80147ca:	9a05      	ldr	r2, [sp, #20]
 80147cc:	2a00      	cmp	r2, #0
 80147ce:	f340 8129 	ble.w	8014a24 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80147d2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80147d4:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80147d8:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80147dc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80147e0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80147e2:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80147e6:	2b00      	cmp	r3, #0
 80147e8:	dd0e      	ble.n	8014808 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80147ea:	1408      	asrs	r0, r1, #16
 80147ec:	d405      	bmi.n	80147fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80147ee:	4560      	cmp	r0, ip
 80147f0:	da03      	bge.n	80147fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80147f2:	1410      	asrs	r0, r2, #16
 80147f4:	d401      	bmi.n	80147fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80147f6:	42b8      	cmp	r0, r7
 80147f8:	db07      	blt.n	801480a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80147fa:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80147fc:	4401      	add	r1, r0
 80147fe:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014800:	3b01      	subs	r3, #1
 8014802:	4402      	add	r2, r0
 8014804:	3402      	adds	r4, #2
 8014806:	e7ee      	b.n	80147e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8014808:	d071      	beq.n	80148ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801480a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801480c:	1e58      	subs	r0, r3, #1
 801480e:	fb05 1500 	mla	r5, r5, r0, r1
 8014812:	142d      	asrs	r5, r5, #16
 8014814:	d45f      	bmi.n	80148d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014816:	4565      	cmp	r5, ip
 8014818:	da5d      	bge.n	80148d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801481a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801481c:	fb05 2000 	mla	r0, r5, r0, r2
 8014820:	1400      	asrs	r0, r0, #16
 8014822:	d458      	bmi.n	80148d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014824:	42b8      	cmp	r0, r7
 8014826:	da56      	bge.n	80148d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014828:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801482c:	4699      	mov	r9, r3
 801482e:	46a2      	mov	sl, r4
 8014830:	f1b9 0f00 	cmp.w	r9, #0
 8014834:	dd57      	ble.n	80148e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8014836:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801483a:	9803      	ldr	r0, [sp, #12]
 801483c:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8014840:	140d      	asrs	r5, r1, #16
 8014842:	fb07 000c 	mla	r0, r7, ip, r0
 8014846:	f109 39ff 	add.w	r9, r9, #4294967295
 801484a:	5d40      	ldrb	r0, [r0, r5]
 801484c:	9d04      	ldr	r5, [sp, #16]
 801484e:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8014852:	f8ba 5000 	ldrh.w	r5, [sl]
 8014856:	122f      	asrs	r7, r5, #8
 8014858:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801485c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014860:	fb17 f706 	smulbb	r7, r7, r6
 8014864:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8014868:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801486c:	00ed      	lsls	r5, r5, #3
 801486e:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8014872:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8014876:	10c7      	asrs	r7, r0, #3
 8014878:	b2ed      	uxtb	r5, r5
 801487a:	00c0      	lsls	r0, r0, #3
 801487c:	fb18 f806 	smulbb	r8, r8, r6
 8014880:	fb15 f506 	smulbb	r5, r5, r6
 8014884:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014888:	b2c0      	uxtb	r0, r0
 801488a:	fa1f fc8c 	uxth.w	ip, ip
 801488e:	fb07 870b 	mla	r7, r7, fp, r8
 8014892:	fb00 500b 	mla	r0, r0, fp, r5
 8014896:	b280      	uxth	r0, r0
 8014898:	b2bf      	uxth	r7, r7
 801489a:	f10c 0501 	add.w	r5, ip, #1
 801489e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80148a2:	f107 0801 	add.w	r8, r7, #1
 80148a6:	1c45      	adds	r5, r0, #1
 80148a8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80148ac:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80148b0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80148b2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80148b6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80148ba:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80148be:	ea45 0c0c 	orr.w	ip, r5, ip
 80148c2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80148c6:	4401      	add	r1, r0
 80148c8:	9814      	ldr	r0, [sp, #80]	; 0x50
 80148ca:	ea4c 0c08 	orr.w	ip, ip, r8
 80148ce:	f82a cb02 	strh.w	ip, [sl], #2
 80148d2:	4402      	add	r2, r0
 80148d4:	e7ac      	b.n	8014830 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80148d6:	f8bd a008 	ldrh.w	sl, [sp, #8]
 80148da:	f04f 0800 	mov.w	r8, #0
 80148de:	eb03 0008 	add.w	r0, r3, r8
 80148e2:	2800      	cmp	r0, #0
 80148e4:	dc41      	bgt.n	801496a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80148e6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80148ea:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80148ee:	9b01      	ldr	r3, [sp, #4]
 80148f0:	2b00      	cmp	r3, #0
 80148f2:	f340 8097 	ble.w	8014a24 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80148f6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80148fa:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80148fe:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8014902:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014904:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014908:	ee31 1a05 	vadd.f32	s2, s2, s10
 801490c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014910:	eef0 6a62 	vmov.f32	s13, s5
 8014914:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014918:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801491c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014920:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8014924:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014928:	eef0 6a43 	vmov.f32	s13, s6
 801492c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014930:	ee12 2a90 	vmov	r2, s5
 8014934:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014938:	fb92 f3f3 	sdiv	r3, r2, r3
 801493c:	ee13 2a10 	vmov	r2, s6
 8014940:	9313      	str	r3, [sp, #76]	; 0x4c
 8014942:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014944:	fb92 f3f3 	sdiv	r3, r2, r3
 8014948:	9314      	str	r3, [sp, #80]	; 0x50
 801494a:	9b01      	ldr	r3, [sp, #4]
 801494c:	9a05      	ldr	r2, [sp, #20]
 801494e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014952:	3b01      	subs	r3, #1
 8014954:	9301      	str	r3, [sp, #4]
 8014956:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801495a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801495c:	eeb0 3a67 	vmov.f32	s6, s15
 8014960:	bf08      	it	eq
 8014962:	4613      	moveq	r3, r2
 8014964:	eef0 2a47 	vmov.f32	s5, s14
 8014968:	e72c      	b.n	80147c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801496a:	140f      	asrs	r7, r1, #16
 801496c:	d453      	bmi.n	8014a16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801496e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014972:	42bd      	cmp	r5, r7
 8014974:	dd4f      	ble.n	8014a16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014976:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801497a:	d44c      	bmi.n	8014a16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801497c:	f8de 000c 	ldr.w	r0, [lr, #12]
 8014980:	4560      	cmp	r0, ip
 8014982:	dd48      	ble.n	8014a16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014984:	9803      	ldr	r0, [sp, #12]
 8014986:	b22d      	sxth	r5, r5
 8014988:	fb0c 0505 	mla	r5, ip, r5, r0
 801498c:	5de8      	ldrb	r0, [r5, r7]
 801498e:	9d04      	ldr	r5, [sp, #16]
 8014990:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8014994:	f06f 0501 	mvn.w	r5, #1
 8014998:	fb05 fb08 	mul.w	fp, r5, r8
 801499c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80149a0:	f834 500b 	ldrh.w	r5, [r4, fp]
 80149a4:	122f      	asrs	r7, r5, #8
 80149a6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80149aa:	fb17 f706 	smulbb	r7, r7, r6
 80149ae:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80149b2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80149b6:	00ed      	lsls	r5, r5, #3
 80149b8:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80149bc:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80149c0:	10c7      	asrs	r7, r0, #3
 80149c2:	b2ed      	uxtb	r5, r5
 80149c4:	00c0      	lsls	r0, r0, #3
 80149c6:	fb19 f906 	smulbb	r9, r9, r6
 80149ca:	fb15 f506 	smulbb	r5, r5, r6
 80149ce:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80149d2:	b2c0      	uxtb	r0, r0
 80149d4:	fa1f fc8c 	uxth.w	ip, ip
 80149d8:	fb07 970a 	mla	r7, r7, sl, r9
 80149dc:	fb00 500a 	mla	r0, r0, sl, r5
 80149e0:	b2bf      	uxth	r7, r7
 80149e2:	b280      	uxth	r0, r0
 80149e4:	f10c 0501 	add.w	r5, ip, #1
 80149e8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80149ec:	f107 0901 	add.w	r9, r7, #1
 80149f0:	1c45      	adds	r5, r0, #1
 80149f2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80149f6:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80149fa:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80149fe:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014a02:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8014a06:	ea45 0c0c 	orr.w	ip, r5, ip
 8014a0a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8014a0e:	ea4c 0c09 	orr.w	ip, ip, r9
 8014a12:	f824 c00b 	strh.w	ip, [r4, fp]
 8014a16:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014a18:	4401      	add	r1, r0
 8014a1a:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014a1c:	f108 38ff 	add.w	r8, r8, #4294967295
 8014a20:	4402      	add	r2, r0
 8014a22:	e75c      	b.n	80148de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8014a24:	b007      	add	sp, #28
 8014a26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014a2a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014a2a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014a2e:	b085      	sub	sp, #20
 8014a30:	4693      	mov	fp, r2
 8014a32:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8014a34:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8014a36:	6870      	ldr	r0, [r6, #4]
 8014a38:	9100      	str	r1, [sp, #0]
 8014a3a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8014a3e:	fb00 2404 	mla	r4, r0, r4, r2
 8014a42:	6832      	ldr	r2, [r6, #0]
 8014a44:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014a48:	682a      	ldr	r2, [r5, #0]
 8014a4a:	9201      	str	r2, [sp, #4]
 8014a4c:	686a      	ldr	r2, [r5, #4]
 8014a4e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8014a52:	3204      	adds	r2, #4
 8014a54:	9202      	str	r2, [sp, #8]
 8014a56:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014a5a:	9a00      	ldr	r2, [sp, #0]
 8014a5c:	2a00      	cmp	r2, #0
 8014a5e:	dc03      	bgt.n	8014a68 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8014a60:	f1bb 0f00 	cmp.w	fp, #0
 8014a64:	f340 80a0 	ble.w	8014ba8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8014a68:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014a6a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8014a6e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8014a72:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8014a76:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014a78:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014a7c:	2b00      	cmp	r3, #0
 8014a7e:	dd0c      	ble.n	8014a9a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014a80:	1406      	asrs	r6, r0, #16
 8014a82:	d405      	bmi.n	8014a90 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014a84:	454e      	cmp	r6, r9
 8014a86:	da03      	bge.n	8014a90 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014a88:	1416      	asrs	r6, r2, #16
 8014a8a:	d401      	bmi.n	8014a90 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014a8c:	4546      	cmp	r6, r8
 8014a8e:	db05      	blt.n	8014a9c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014a90:	4470      	add	r0, lr
 8014a92:	4462      	add	r2, ip
 8014a94:	3b01      	subs	r3, #1
 8014a96:	3402      	adds	r4, #2
 8014a98:	e7f0      	b.n	8014a7c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8014a9a:	d00f      	beq.n	8014abc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014a9c:	1e5e      	subs	r6, r3, #1
 8014a9e:	fb0e 0706 	mla	r7, lr, r6, r0
 8014aa2:	143f      	asrs	r7, r7, #16
 8014aa4:	d541      	bpl.n	8014b2a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8014aa6:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8014aaa:	4698      	mov	r8, r3
 8014aac:	9603      	str	r6, [sp, #12]
 8014aae:	f1b8 0f00 	cmp.w	r8, #0
 8014ab2:	dc59      	bgt.n	8014b68 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014ab4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014ab8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014abc:	9b00      	ldr	r3, [sp, #0]
 8014abe:	2b00      	cmp	r3, #0
 8014ac0:	dd72      	ble.n	8014ba8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8014ac2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014ac6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014aca:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014ace:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014ad0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014ad4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014ad8:	eeb0 6a62 	vmov.f32	s12, s5
 8014adc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014ae0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014ae4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014ae8:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8014aec:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014af0:	eeb0 6a43 	vmov.f32	s12, s6
 8014af4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014af8:	ee12 2a90 	vmov	r2, s5
 8014afc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014b00:	fb92 fef3 	sdiv	lr, r2, r3
 8014b04:	ee13 2a10 	vmov	r2, s6
 8014b08:	fb92 fcf3 	sdiv	ip, r2, r3
 8014b0c:	9b00      	ldr	r3, [sp, #0]
 8014b0e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014b12:	3b01      	subs	r3, #1
 8014b14:	9300      	str	r3, [sp, #0]
 8014b16:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8014b1a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014b1c:	eeb0 3a67 	vmov.f32	s6, s15
 8014b20:	bf08      	it	eq
 8014b22:	465b      	moveq	r3, fp
 8014b24:	eef0 2a47 	vmov.f32	s5, s14
 8014b28:	e797      	b.n	8014a5a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8014b2a:	454f      	cmp	r7, r9
 8014b2c:	dabb      	bge.n	8014aa6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014b2e:	fb0c 2606 	mla	r6, ip, r6, r2
 8014b32:	1436      	asrs	r6, r6, #16
 8014b34:	d4b7      	bmi.n	8014aa6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014b36:	4546      	cmp	r6, r8
 8014b38:	dab5      	bge.n	8014aa6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014b3a:	461e      	mov	r6, r3
 8014b3c:	46a0      	mov	r8, r4
 8014b3e:	2e00      	cmp	r6, #0
 8014b40:	ddb8      	ble.n	8014ab4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8014b42:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8014b46:	9901      	ldr	r1, [sp, #4]
 8014b48:	1417      	asrs	r7, r2, #16
 8014b4a:	ea4f 4920 	mov.w	r9, r0, asr #16
 8014b4e:	fb0a 1707 	mla	r7, sl, r7, r1
 8014b52:	9902      	ldr	r1, [sp, #8]
 8014b54:	f817 7009 	ldrb.w	r7, [r7, r9]
 8014b58:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8014b5c:	f828 7b02 	strh.w	r7, [r8], #2
 8014b60:	4470      	add	r0, lr
 8014b62:	4462      	add	r2, ip
 8014b64:	3e01      	subs	r6, #1
 8014b66:	e7ea      	b.n	8014b3e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8014b68:	ea5f 4920 	movs.w	r9, r0, asr #16
 8014b6c:	d417      	bmi.n	8014b9e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014b6e:	68ae      	ldr	r6, [r5, #8]
 8014b70:	454e      	cmp	r6, r9
 8014b72:	dd14      	ble.n	8014b9e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014b74:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8014b78:	d411      	bmi.n	8014b9e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014b7a:	68ef      	ldr	r7, [r5, #12]
 8014b7c:	4557      	cmp	r7, sl
 8014b7e:	dd0e      	ble.n	8014b9e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014b80:	9f01      	ldr	r7, [sp, #4]
 8014b82:	b236      	sxth	r6, r6
 8014b84:	fb0a 7606 	mla	r6, sl, r6, r7
 8014b88:	9f02      	ldr	r7, [sp, #8]
 8014b8a:	f816 6009 	ldrb.w	r6, [r6, r9]
 8014b8e:	f06f 0101 	mvn.w	r1, #1
 8014b92:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8014b96:	fb01 f608 	mul.w	r6, r1, r8
 8014b9a:	9903      	ldr	r1, [sp, #12]
 8014b9c:	538f      	strh	r7, [r1, r6]
 8014b9e:	4470      	add	r0, lr
 8014ba0:	4462      	add	r2, ip
 8014ba2:	f108 38ff 	add.w	r8, r8, #4294967295
 8014ba6:	e782      	b.n	8014aae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014ba8:	b005      	add	sp, #20
 8014baa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014bae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014bae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014bb2:	b087      	sub	sp, #28
 8014bb4:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8014bb6:	9205      	str	r2, [sp, #20]
 8014bb8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8014bbc:	9203      	str	r2, [sp, #12]
 8014bbe:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8014bc2:	9102      	str	r1, [sp, #8]
 8014bc4:	6861      	ldr	r1, [r4, #4]
 8014bc6:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8014bca:	fb01 2000 	mla	r0, r1, r0, r2
 8014bce:	6822      	ldr	r2, [r4, #0]
 8014bd0:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8014bd4:	9200      	str	r2, [sp, #0]
 8014bd6:	f8dc 2000 	ldr.w	r2, [ip]
 8014bda:	9204      	str	r2, [sp, #16]
 8014bdc:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8014be0:	3204      	adds	r2, #4
 8014be2:	9201      	str	r2, [sp, #4]
 8014be4:	9a03      	ldr	r2, [sp, #12]
 8014be6:	43d5      	mvns	r5, r2
 8014be8:	b2ed      	uxtb	r5, r5
 8014bea:	9a02      	ldr	r2, [sp, #8]
 8014bec:	2a00      	cmp	r2, #0
 8014bee:	dc03      	bgt.n	8014bf8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8014bf0:	9a05      	ldr	r2, [sp, #20]
 8014bf2:	2a00      	cmp	r2, #0
 8014bf4:	f340 812c 	ble.w	8014e50 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8014bf8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014bfa:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8014bfe:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8014c02:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014c06:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014c08:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014c0c:	2b00      	cmp	r3, #0
 8014c0e:	dd10      	ble.n	8014c32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014c10:	140c      	asrs	r4, r1, #16
 8014c12:	d405      	bmi.n	8014c20 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014c14:	4574      	cmp	r4, lr
 8014c16:	da03      	bge.n	8014c20 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014c18:	1414      	asrs	r4, r2, #16
 8014c1a:	d401      	bmi.n	8014c20 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014c1c:	42bc      	cmp	r4, r7
 8014c1e:	db09      	blt.n	8014c34 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8014c20:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014c22:	9800      	ldr	r0, [sp, #0]
 8014c24:	4421      	add	r1, r4
 8014c26:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014c28:	3002      	adds	r0, #2
 8014c2a:	4422      	add	r2, r4
 8014c2c:	3b01      	subs	r3, #1
 8014c2e:	9000      	str	r0, [sp, #0]
 8014c30:	e7ec      	b.n	8014c0c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8014c32:	d071      	beq.n	8014d18 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8014c34:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8014c36:	1e5c      	subs	r4, r3, #1
 8014c38:	fb06 1604 	mla	r6, r6, r4, r1
 8014c3c:	1436      	asrs	r6, r6, #16
 8014c3e:	d45d      	bmi.n	8014cfc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014c40:	4576      	cmp	r6, lr
 8014c42:	da5b      	bge.n	8014cfc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014c44:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8014c46:	fb06 2404 	mla	r4, r6, r4, r2
 8014c4a:	1424      	asrs	r4, r4, #16
 8014c4c:	d456      	bmi.n	8014cfc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014c4e:	42bc      	cmp	r4, r7
 8014c50:	da54      	bge.n	8014cfc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014c52:	f8dd 9000 	ldr.w	r9, [sp]
 8014c56:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8014c5a:	4698      	mov	r8, r3
 8014c5c:	f1b8 0f00 	cmp.w	r8, #0
 8014c60:	dd54      	ble.n	8014d0c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8014c62:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8014c66:	9804      	ldr	r0, [sp, #16]
 8014c68:	1414      	asrs	r4, r2, #16
 8014c6a:	fb07 0404 	mla	r4, r7, r4, r0
 8014c6e:	140e      	asrs	r6, r1, #16
 8014c70:	9801      	ldr	r0, [sp, #4]
 8014c72:	f814 e006 	ldrb.w	lr, [r4, r6]
 8014c76:	f8b9 4000 	ldrh.w	r4, [r9]
 8014c7a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8014c7e:	eb00 0b0e 	add.w	fp, r0, lr
 8014c82:	1227      	asrs	r7, r4, #8
 8014c84:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8014c88:	f89b b001 	ldrb.w	fp, [fp, #1]
 8014c8c:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8014c90:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014c92:	fb16 f60a 	smulbb	r6, r6, sl
 8014c96:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014c9a:	fb07 6705 	mla	r7, r7, r5, r6
 8014c9e:	10e6      	asrs	r6, r4, #3
 8014ca0:	00e4      	lsls	r4, r4, #3
 8014ca2:	b2e4      	uxtb	r4, r4
 8014ca4:	fb1b fb0a 	smulbb	fp, fp, sl
 8014ca8:	fb14 f405 	smulbb	r4, r4, r5
 8014cac:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014cb0:	b2bf      	uxth	r7, r7
 8014cb2:	fb06 b605 	mla	r6, r6, r5, fp
 8014cb6:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8014cba:	b2b6      	uxth	r6, r6
 8014cbc:	fa1f fe8e 	uxth.w	lr, lr
 8014cc0:	1c7c      	adds	r4, r7, #1
 8014cc2:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8014cc6:	f106 0b01 	add.w	fp, r6, #1
 8014cca:	f10e 0401 	add.w	r4, lr, #1
 8014cce:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8014cd2:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8014cd6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8014cda:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8014cde:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8014ce2:	4327      	orrs	r7, r4
 8014ce4:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8014ce8:	4401      	add	r1, r0
 8014cea:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014cec:	ea47 070b 	orr.w	r7, r7, fp
 8014cf0:	f829 7b02 	strh.w	r7, [r9], #2
 8014cf4:	4402      	add	r2, r0
 8014cf6:	f108 38ff 	add.w	r8, r8, #4294967295
 8014cfa:	e7af      	b.n	8014c5c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8014cfc:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8014d00:	f04f 0e00 	mov.w	lr, #0
 8014d04:	eb03 040e 	add.w	r4, r3, lr
 8014d08:	2c00      	cmp	r4, #0
 8014d0a:	dc43      	bgt.n	8014d94 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8014d0c:	9a00      	ldr	r2, [sp, #0]
 8014d0e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014d12:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8014d16:	9300      	str	r3, [sp, #0]
 8014d18:	9b02      	ldr	r3, [sp, #8]
 8014d1a:	2b00      	cmp	r3, #0
 8014d1c:	f340 8098 	ble.w	8014e50 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8014d20:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014d24:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014d28:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8014d2c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014d2e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014d32:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014d36:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014d3a:	eef0 6a62 	vmov.f32	s13, s5
 8014d3e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014d42:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014d46:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014d4a:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8014d4e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014d52:	eef0 6a43 	vmov.f32	s13, s6
 8014d56:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014d5a:	ee12 2a90 	vmov	r2, s5
 8014d5e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014d62:	fb92 f3f3 	sdiv	r3, r2, r3
 8014d66:	ee13 2a10 	vmov	r2, s6
 8014d6a:	9313      	str	r3, [sp, #76]	; 0x4c
 8014d6c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014d6e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014d72:	9314      	str	r3, [sp, #80]	; 0x50
 8014d74:	9b02      	ldr	r3, [sp, #8]
 8014d76:	9a05      	ldr	r2, [sp, #20]
 8014d78:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014d7c:	3b01      	subs	r3, #1
 8014d7e:	9302      	str	r3, [sp, #8]
 8014d80:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8014d84:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014d86:	eeb0 3a67 	vmov.f32	s6, s15
 8014d8a:	bf08      	it	eq
 8014d8c:	4613      	moveq	r3, r2
 8014d8e:	eef0 2a47 	vmov.f32	s5, s14
 8014d92:	e72a      	b.n	8014bea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8014d94:	140f      	asrs	r7, r1, #16
 8014d96:	d454      	bmi.n	8014e42 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014d98:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8014d9c:	42be      	cmp	r6, r7
 8014d9e:	dd50      	ble.n	8014e42 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014da0:	ea5f 4822 	movs.w	r8, r2, asr #16
 8014da4:	d44d      	bmi.n	8014e42 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014da6:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8014daa:	4544      	cmp	r4, r8
 8014dac:	dd49      	ble.n	8014e42 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014dae:	9c04      	ldr	r4, [sp, #16]
 8014db0:	b236      	sxth	r6, r6
 8014db2:	fb08 4606 	mla	r6, r8, r6, r4
 8014db6:	f06f 0001 	mvn.w	r0, #1
 8014dba:	f816 8007 	ldrb.w	r8, [r6, r7]
 8014dbe:	9c01      	ldr	r4, [sp, #4]
 8014dc0:	fb00 fa0e 	mul.w	sl, r0, lr
 8014dc4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8014dc8:	9800      	ldr	r0, [sp, #0]
 8014dca:	eb04 0b08 	add.w	fp, r4, r8
 8014dce:	f830 400a 	ldrh.w	r4, [r0, sl]
 8014dd2:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8014dd6:	9801      	ldr	r0, [sp, #4]
 8014dd8:	f89b b001 	ldrb.w	fp, [fp, #1]
 8014ddc:	f810 8008 	ldrb.w	r8, [r0, r8]
 8014de0:	9800      	ldr	r0, [sp, #0]
 8014de2:	1227      	asrs	r7, r4, #8
 8014de4:	fb16 f609 	smulbb	r6, r6, r9
 8014de8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014dec:	fb07 6705 	mla	r7, r7, r5, r6
 8014df0:	10e6      	asrs	r6, r4, #3
 8014df2:	00e4      	lsls	r4, r4, #3
 8014df4:	b2e4      	uxtb	r4, r4
 8014df6:	fb1b fb09 	smulbb	fp, fp, r9
 8014dfa:	fb14 f405 	smulbb	r4, r4, r5
 8014dfe:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014e02:	b2bf      	uxth	r7, r7
 8014e04:	fb06 b605 	mla	r6, r6, r5, fp
 8014e08:	fb08 4809 	mla	r8, r8, r9, r4
 8014e0c:	b2b6      	uxth	r6, r6
 8014e0e:	fa1f f888 	uxth.w	r8, r8
 8014e12:	1c7c      	adds	r4, r7, #1
 8014e14:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8014e18:	f106 0b01 	add.w	fp, r6, #1
 8014e1c:	f108 0401 	add.w	r4, r8, #1
 8014e20:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8014e24:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8014e28:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8014e2c:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8014e30:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8014e34:	4327      	orrs	r7, r4
 8014e36:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8014e3a:	ea47 070b 	orr.w	r7, r7, fp
 8014e3e:	f820 700a 	strh.w	r7, [r0, sl]
 8014e42:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014e44:	4401      	add	r1, r0
 8014e46:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014e48:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014e4c:	4402      	add	r2, r0
 8014e4e:	e759      	b.n	8014d04 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8014e50:	b007      	add	sp, #28
 8014e52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08014e58 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014e58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014e5c:	b085      	sub	sp, #20
 8014e5e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014e62:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8014e64:	9203      	str	r2, [sp, #12]
 8014e66:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8014e6a:	6870      	ldr	r0, [r6, #4]
 8014e6c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8014e6e:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8014e72:	686f      	ldr	r7, [r5, #4]
 8014e74:	9101      	str	r1, [sp, #4]
 8014e76:	fb00 2404 	mla	r4, r0, r4, r2
 8014e7a:	6832      	ldr	r2, [r6, #0]
 8014e7c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014e80:	682a      	ldr	r2, [r5, #0]
 8014e82:	9202      	str	r2, [sp, #8]
 8014e84:	3704      	adds	r7, #4
 8014e86:	9a01      	ldr	r2, [sp, #4]
 8014e88:	2a00      	cmp	r2, #0
 8014e8a:	dc03      	bgt.n	8014e94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8014e8c:	9a03      	ldr	r2, [sp, #12]
 8014e8e:	2a00      	cmp	r2, #0
 8014e90:	f340 80cc 	ble.w	801502c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8014e94:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014e96:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8014e9a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8014e9e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8014ea2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014ea4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014ea8:	2b00      	cmp	r3, #0
 8014eaa:	dd0d      	ble.n	8014ec8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014eac:	1406      	asrs	r6, r0, #16
 8014eae:	d405      	bmi.n	8014ebc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8014eb0:	454e      	cmp	r6, r9
 8014eb2:	da03      	bge.n	8014ebc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8014eb4:	1416      	asrs	r6, r2, #16
 8014eb6:	d401      	bmi.n	8014ebc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8014eb8:	4546      	cmp	r6, r8
 8014eba:	db06      	blt.n	8014eca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014ebc:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8014ebe:	4460      	add	r0, ip
 8014ec0:	4432      	add	r2, r6
 8014ec2:	3b01      	subs	r3, #1
 8014ec4:	3402      	adds	r4, #2
 8014ec6:	e7ef      	b.n	8014ea8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8014ec8:	d00f      	beq.n	8014eea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014eca:	1e5e      	subs	r6, r3, #1
 8014ecc:	fb0c 0e06 	mla	lr, ip, r6, r0
 8014ed0:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8014ed4:	d543      	bpl.n	8014f5e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8014ed6:	4698      	mov	r8, r3
 8014ed8:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8014edc:	f1b8 0f00 	cmp.w	r8, #0
 8014ee0:	dc71      	bgt.n	8014fc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8014ee2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014ee6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014eea:	9b01      	ldr	r3, [sp, #4]
 8014eec:	2b00      	cmp	r3, #0
 8014eee:	f340 809d 	ble.w	801502c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8014ef2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014ef6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014efa:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014efe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014f00:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014f04:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014f08:	eeb0 6a62 	vmov.f32	s12, s5
 8014f0c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014f10:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014f14:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014f18:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8014f1c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014f20:	eeb0 6a43 	vmov.f32	s12, s6
 8014f24:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014f28:	ee12 2a90 	vmov	r2, s5
 8014f2c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014f30:	fb92 fcf3 	sdiv	ip, r2, r3
 8014f34:	ee13 2a10 	vmov	r2, s6
 8014f38:	fb92 f3f3 	sdiv	r3, r2, r3
 8014f3c:	9312      	str	r3, [sp, #72]	; 0x48
 8014f3e:	9b01      	ldr	r3, [sp, #4]
 8014f40:	9a03      	ldr	r2, [sp, #12]
 8014f42:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014f46:	3b01      	subs	r3, #1
 8014f48:	9301      	str	r3, [sp, #4]
 8014f4a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8014f4e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014f50:	eeb0 3a67 	vmov.f32	s6, s15
 8014f54:	bf08      	it	eq
 8014f56:	4613      	moveq	r3, r2
 8014f58:	eef0 2a47 	vmov.f32	s5, s14
 8014f5c:	e793      	b.n	8014e86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8014f5e:	45ce      	cmp	lr, r9
 8014f60:	dab9      	bge.n	8014ed6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014f62:	9912      	ldr	r1, [sp, #72]	; 0x48
 8014f64:	fb01 2606 	mla	r6, r1, r6, r2
 8014f68:	1436      	asrs	r6, r6, #16
 8014f6a:	d4b4      	bmi.n	8014ed6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014f6c:	4546      	cmp	r6, r8
 8014f6e:	dab2      	bge.n	8014ed6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014f70:	4698      	mov	r8, r3
 8014f72:	46a2      	mov	sl, r4
 8014f74:	f1b8 0f00 	cmp.w	r8, #0
 8014f78:	ddb3      	ble.n	8014ee2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8014f7a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8014f7e:	9902      	ldr	r1, [sp, #8]
 8014f80:	1416      	asrs	r6, r2, #16
 8014f82:	fb09 1606 	mla	r6, r9, r6, r1
 8014f86:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8014f8a:	492a      	ldr	r1, [pc, #168]	; (8015034 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8014f8c:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8014f90:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8014f94:	eb07 0b0e 	add.w	fp, r7, lr
 8014f98:	4460      	add	r0, ip
 8014f9a:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8014f9e:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8014fa2:	00f6      	lsls	r6, r6, #3
 8014fa4:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8014fa8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8014fac:	ea49 0606 	orr.w	r6, r9, r6
 8014fb0:	f817 900e 	ldrb.w	r9, [r7, lr]
 8014fb4:	9912      	ldr	r1, [sp, #72]	; 0x48
 8014fb6:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8014fba:	f82a 6b02 	strh.w	r6, [sl], #2
 8014fbe:	440a      	add	r2, r1
 8014fc0:	f108 38ff 	add.w	r8, r8, #4294967295
 8014fc4:	e7d6      	b.n	8014f74 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8014fc6:	ea5f 4920 	movs.w	r9, r0, asr #16
 8014fca:	d429      	bmi.n	8015020 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8014fcc:	68ae      	ldr	r6, [r5, #8]
 8014fce:	454e      	cmp	r6, r9
 8014fd0:	dd26      	ble.n	8015020 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8014fd2:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8014fd6:	d423      	bmi.n	8015020 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8014fd8:	68e9      	ldr	r1, [r5, #12]
 8014fda:	4559      	cmp	r1, fp
 8014fdc:	dd20      	ble.n	8015020 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8014fde:	9902      	ldr	r1, [sp, #8]
 8014fe0:	fa0f fe86 	sxth.w	lr, r6
 8014fe4:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8014fe8:	f06f 0101 	mvn.w	r1, #1
 8014fec:	f81e e009 	ldrb.w	lr, [lr, r9]
 8014ff0:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8014ff4:	eb07 060e 	add.w	r6, r7, lr
 8014ff8:	fb01 f908 	mul.w	r9, r1, r8
 8014ffc:	f896 b002 	ldrb.w	fp, [r6, #2]
 8015000:	7876      	ldrb	r6, [r6, #1]
 8015002:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 8015006:	00f6      	lsls	r6, r6, #3
 8015008:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801500c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8015010:	ea4b 0606 	orr.w	r6, fp, r6
 8015014:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8015018:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801501c:	f82a 6009 	strh.w	r6, [sl, r9]
 8015020:	9912      	ldr	r1, [sp, #72]	; 0x48
 8015022:	4460      	add	r0, ip
 8015024:	440a      	add	r2, r1
 8015026:	f108 38ff 	add.w	r8, r8, #4294967295
 801502a:	e757      	b.n	8014edc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801502c:	b005      	add	sp, #20
 801502e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015032:	bf00      	nop
 8015034:	fffff800 	.word	0xfffff800

08015038 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015038:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801503c:	b087      	sub	sp, #28
 801503e:	468b      	mov	fp, r1
 8015040:	9815      	ldr	r0, [sp, #84]	; 0x54
 8015042:	9204      	str	r2, [sp, #16]
 8015044:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8015048:	9205      	str	r2, [sp, #20]
 801504a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801504e:	6841      	ldr	r1, [r0, #4]
 8015050:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8015054:	fb01 2404 	mla	r4, r1, r4, r2
 8015058:	6802      	ldr	r2, [r0, #0]
 801505a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801505e:	f8dc 2000 	ldr.w	r2, [ip]
 8015062:	9201      	str	r2, [sp, #4]
 8015064:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8015068:	3204      	adds	r2, #4
 801506a:	9202      	str	r2, [sp, #8]
 801506c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015070:	f1bb 0f00 	cmp.w	fp, #0
 8015074:	dc03      	bgt.n	801507e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8015076:	9a04      	ldr	r2, [sp, #16]
 8015078:	2a00      	cmp	r2, #0
 801507a:	f340 8138 	ble.w	80152ee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801507e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015080:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8015084:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8015088:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801508c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801508e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015092:	2b00      	cmp	r3, #0
 8015094:	dd0e      	ble.n	80150b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015096:	1402      	asrs	r2, r0, #16
 8015098:	d405      	bmi.n	80150a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801509a:	42ba      	cmp	r2, r7
 801509c:	da03      	bge.n	80150a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801509e:	140a      	asrs	r2, r1, #16
 80150a0:	d401      	bmi.n	80150a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80150a2:	42b2      	cmp	r2, r6
 80150a4:	db07      	blt.n	80150b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80150a6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80150a8:	4410      	add	r0, r2
 80150aa:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80150ac:	3b01      	subs	r3, #1
 80150ae:	4411      	add	r1, r2
 80150b0:	3402      	adds	r4, #2
 80150b2:	e7ee      	b.n	8015092 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80150b4:	d019      	beq.n	80150ea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80150b6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80150b8:	1e5a      	subs	r2, r3, #1
 80150ba:	fb05 0502 	mla	r5, r5, r2, r0
 80150be:	142d      	asrs	r5, r5, #16
 80150c0:	d409      	bmi.n	80150d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80150c2:	42bd      	cmp	r5, r7
 80150c4:	da07      	bge.n	80150d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80150c6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80150c8:	fb05 1202 	mla	r2, r5, r2, r1
 80150cc:	1412      	asrs	r2, r2, #16
 80150ce:	d402      	bmi.n	80150d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80150d0:	42b2      	cmp	r2, r6
 80150d2:	f2c0 80ac 	blt.w	801522e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 80150d6:	f04f 0e00 	mov.w	lr, #0
 80150da:	eb03 020e 	add.w	r2, r3, lr
 80150de:	2a00      	cmp	r2, #0
 80150e0:	dc3e      	bgt.n	8015160 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80150e2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80150e6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80150ea:	f1bb 0f00 	cmp.w	fp, #0
 80150ee:	f340 80fe 	ble.w	80152ee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80150f2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80150f6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80150fa:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80150fe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015100:	f1bb 0b01 	subs.w	fp, fp, #1
 8015104:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015108:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801510c:	eeb0 6a62 	vmov.f32	s12, s5
 8015110:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015114:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015118:	ee77 2a62 	vsub.f32	s5, s14, s5
 801511c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8015120:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015124:	eeb0 6a43 	vmov.f32	s12, s6
 8015128:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801512c:	ee12 2a90 	vmov	r2, s5
 8015130:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015134:	fb92 f3f3 	sdiv	r3, r2, r3
 8015138:	ee13 2a10 	vmov	r2, s6
 801513c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015140:	9313      	str	r3, [sp, #76]	; 0x4c
 8015142:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015144:	fb92 f3f3 	sdiv	r3, r2, r3
 8015148:	9a04      	ldr	r2, [sp, #16]
 801514a:	9314      	str	r3, [sp, #80]	; 0x50
 801514c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8015150:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015152:	eeb0 3a67 	vmov.f32	s6, s15
 8015156:	bf08      	it	eq
 8015158:	4613      	moveq	r3, r2
 801515a:	eef0 2a47 	vmov.f32	s5, s14
 801515e:	e787      	b.n	8015070 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8015160:	1406      	asrs	r6, r0, #16
 8015162:	d45d      	bmi.n	8015220 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015164:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8015168:	42b5      	cmp	r5, r6
 801516a:	dd59      	ble.n	8015220 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801516c:	140f      	asrs	r7, r1, #16
 801516e:	d457      	bmi.n	8015220 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015170:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8015174:	42ba      	cmp	r2, r7
 8015176:	dd53      	ble.n	8015220 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015178:	9a01      	ldr	r2, [sp, #4]
 801517a:	b22d      	sxth	r5, r5
 801517c:	fb07 2505 	mla	r5, r7, r5, r2
 8015180:	5daa      	ldrb	r2, [r5, r6]
 8015182:	9d02      	ldr	r5, [sp, #8]
 8015184:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8015188:	0e2e      	lsrs	r6, r5, #24
 801518a:	d049      	beq.n	8015220 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801518c:	f06f 0201 	mvn.w	r2, #1
 8015190:	fb02 f20e 	mul.w	r2, r2, lr
 8015194:	9203      	str	r2, [sp, #12]
 8015196:	f834 8002 	ldrh.w	r8, [r4, r2]
 801519a:	9a05      	ldr	r2, [sp, #20]
 801519c:	4356      	muls	r6, r2
 801519e:	1c72      	adds	r2, r6, #1
 80151a0:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80151a4:	1212      	asrs	r2, r2, #8
 80151a6:	fa1f f982 	uxth.w	r9, r2
 80151aa:	ea4f 2728 	mov.w	r7, r8, asr #8
 80151ae:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80151b2:	43d2      	mvns	r2, r2
 80151b4:	b2d2      	uxtb	r2, r2
 80151b6:	fb16 f609 	smulbb	r6, r6, r9
 80151ba:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80151be:	fb07 6702 	mla	r7, r7, r2, r6
 80151c2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80151c6:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80151ca:	b2ed      	uxtb	r5, r5
 80151cc:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80151d0:	fa5f f888 	uxtb.w	r8, r8
 80151d4:	fb15 f509 	smulbb	r5, r5, r9
 80151d8:	fb08 5502 	mla	r5, r8, r2, r5
 80151dc:	b2bf      	uxth	r7, r7
 80151de:	fb1a fa09 	smulbb	sl, sl, r9
 80151e2:	b2ad      	uxth	r5, r5
 80151e4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80151e8:	fb06 a602 	mla	r6, r6, r2, sl
 80151ec:	1c7a      	adds	r2, r7, #1
 80151ee:	f105 0a01 	add.w	sl, r5, #1
 80151f2:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80151f6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80151fa:	b2b6      	uxth	r6, r6
 80151fc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015200:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015204:	ea4a 0707 	orr.w	r7, sl, r7
 8015208:	f106 0a01 	add.w	sl, r6, #1
 801520c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015210:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015214:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015218:	9a03      	ldr	r2, [sp, #12]
 801521a:	ea47 070a 	orr.w	r7, r7, sl
 801521e:	52a7      	strh	r7, [r4, r2]
 8015220:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015222:	4410      	add	r0, r2
 8015224:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015226:	f10e 3eff 	add.w	lr, lr, #4294967295
 801522a:	4411      	add	r1, r2
 801522c:	e755      	b.n	80150da <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801522e:	f04f 0800 	mov.w	r8, #0
 8015232:	eba3 0208 	sub.w	r2, r3, r8
 8015236:	2a00      	cmp	r2, #0
 8015238:	f77f af53 	ble.w	80150e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801523c:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8015240:	9f01      	ldr	r7, [sp, #4]
 8015242:	140a      	asrs	r2, r1, #16
 8015244:	1405      	asrs	r5, r0, #16
 8015246:	fb06 7202 	mla	r2, r6, r2, r7
 801524a:	5d52      	ldrb	r2, [r2, r5]
 801524c:	9d02      	ldr	r5, [sp, #8]
 801524e:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8015252:	0e2e      	lsrs	r6, r5, #24
 8015254:	d044      	beq.n	80152e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8015256:	9a05      	ldr	r2, [sp, #20]
 8015258:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801525c:	4356      	muls	r6, r2
 801525e:	1c72      	adds	r2, r6, #1
 8015260:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8015264:	1212      	asrs	r2, r2, #8
 8015266:	fa1f f982 	uxth.w	r9, r2
 801526a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801526e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015272:	43d2      	mvns	r2, r2
 8015274:	b2d2      	uxtb	r2, r2
 8015276:	fb16 f609 	smulbb	r6, r6, r9
 801527a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801527e:	fb07 6702 	mla	r7, r7, r2, r6
 8015282:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8015286:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801528a:	b2ed      	uxtb	r5, r5
 801528c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015290:	fa5f fe8e 	uxtb.w	lr, lr
 8015294:	fb15 f509 	smulbb	r5, r5, r9
 8015298:	fb0e 5502 	mla	r5, lr, r2, r5
 801529c:	b2bf      	uxth	r7, r7
 801529e:	fb1a fa09 	smulbb	sl, sl, r9
 80152a2:	b2ad      	uxth	r5, r5
 80152a4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80152a8:	fb06 a602 	mla	r6, r6, r2, sl
 80152ac:	1c7a      	adds	r2, r7, #1
 80152ae:	f105 0a01 	add.w	sl, r5, #1
 80152b2:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80152b6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80152ba:	b2b6      	uxth	r6, r6
 80152bc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80152c0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80152c4:	ea4a 0707 	orr.w	r7, sl, r7
 80152c8:	f106 0a01 	add.w	sl, r6, #1
 80152cc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80152d0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80152d4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80152d8:	ea47 070a 	orr.w	r7, r7, sl
 80152dc:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80152e0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80152e2:	4410      	add	r0, r2
 80152e4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80152e6:	f108 0801 	add.w	r8, r8, #1
 80152ea:	4411      	add	r1, r2
 80152ec:	e7a1      	b.n	8015232 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 80152ee:	b007      	add	sp, #28
 80152f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080152f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80152f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80152f8:	b085      	sub	sp, #20
 80152fa:	468b      	mov	fp, r1
 80152fc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80152fe:	9203      	str	r2, [sp, #12]
 8015300:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8015304:	6841      	ldr	r1, [r0, #4]
 8015306:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801530a:	fb01 2404 	mla	r4, r1, r4, r2
 801530e:	6802      	ldr	r2, [r0, #0]
 8015310:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015314:	f8de 2000 	ldr.w	r2, [lr]
 8015318:	9200      	str	r2, [sp, #0]
 801531a:	f8de 2004 	ldr.w	r2, [lr, #4]
 801531e:	3204      	adds	r2, #4
 8015320:	9201      	str	r2, [sp, #4]
 8015322:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015326:	f1bb 0f00 	cmp.w	fp, #0
 801532a:	dc03      	bgt.n	8015334 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801532c:	9a03      	ldr	r2, [sp, #12]
 801532e:	2a00      	cmp	r2, #0
 8015330:	f340 8153 	ble.w	80155da <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8015334:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015336:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801533a:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801533e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015342:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015344:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015348:	2b00      	cmp	r3, #0
 801534a:	dd0e      	ble.n	801536a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801534c:	1408      	asrs	r0, r1, #16
 801534e:	d405      	bmi.n	801535c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015350:	42b8      	cmp	r0, r7
 8015352:	da03      	bge.n	801535c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015354:	1410      	asrs	r0, r2, #16
 8015356:	d401      	bmi.n	801535c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015358:	42b0      	cmp	r0, r6
 801535a:	db07      	blt.n	801536c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801535c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801535e:	4401      	add	r1, r0
 8015360:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015362:	3b01      	subs	r3, #1
 8015364:	4402      	add	r2, r0
 8015366:	3402      	adds	r4, #2
 8015368:	e7ee      	b.n	8015348 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801536a:	d017      	beq.n	801539c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801536c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801536e:	1e58      	subs	r0, r3, #1
 8015370:	fb05 1500 	mla	r5, r5, r0, r1
 8015374:	142d      	asrs	r5, r5, #16
 8015376:	d409      	bmi.n	801538c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015378:	42bd      	cmp	r5, r7
 801537a:	da07      	bge.n	801538c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801537c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801537e:	fb05 2000 	mla	r0, r5, r0, r2
 8015382:	1400      	asrs	r0, r0, #16
 8015384:	d402      	bmi.n	801538c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015386:	42b0      	cmp	r0, r6
 8015388:	f2c0 80bc 	blt.w	8015504 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801538c:	2600      	movs	r6, #0
 801538e:	1998      	adds	r0, r3, r6
 8015390:	2800      	cmp	r0, #0
 8015392:	dc3e      	bgt.n	8015412 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8015394:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015398:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801539c:	f1bb 0f00 	cmp.w	fp, #0
 80153a0:	f340 811b 	ble.w	80155da <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80153a4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80153a8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80153ac:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80153b0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80153b2:	f1bb 0b01 	subs.w	fp, fp, #1
 80153b6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80153ba:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80153be:	eeb0 6a62 	vmov.f32	s12, s5
 80153c2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80153c6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80153ca:	ee77 2a62 	vsub.f32	s5, s14, s5
 80153ce:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80153d2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80153d6:	eeb0 6a43 	vmov.f32	s12, s6
 80153da:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80153de:	ee12 2a90 	vmov	r2, s5
 80153e2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80153e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80153ea:	ee13 2a10 	vmov	r2, s6
 80153ee:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80153f2:	9311      	str	r3, [sp, #68]	; 0x44
 80153f4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80153f6:	fb92 f3f3 	sdiv	r3, r2, r3
 80153fa:	9a03      	ldr	r2, [sp, #12]
 80153fc:	9312      	str	r3, [sp, #72]	; 0x48
 80153fe:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015402:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015404:	eeb0 3a67 	vmov.f32	s6, s15
 8015408:	bf08      	it	eq
 801540a:	4613      	moveq	r3, r2
 801540c:	eef0 2a47 	vmov.f32	s5, s14
 8015410:	e789      	b.n	8015326 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8015412:	140f      	asrs	r7, r1, #16
 8015414:	d426      	bmi.n	8015464 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015416:	f8de 5008 	ldr.w	r5, [lr, #8]
 801541a:	42bd      	cmp	r5, r7
 801541c:	dd22      	ble.n	8015464 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801541e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015422:	d41f      	bmi.n	8015464 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015424:	f8de 000c 	ldr.w	r0, [lr, #12]
 8015428:	4560      	cmp	r0, ip
 801542a:	dd1b      	ble.n	8015464 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801542c:	9800      	ldr	r0, [sp, #0]
 801542e:	b22d      	sxth	r5, r5
 8015430:	fb0c 0505 	mla	r5, ip, r5, r0
 8015434:	5de8      	ldrb	r0, [r5, r7]
 8015436:	9d01      	ldr	r5, [sp, #4]
 8015438:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801543c:	0e07      	lsrs	r7, r0, #24
 801543e:	2fff      	cmp	r7, #255	; 0xff
 8015440:	d116      	bne.n	8015470 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015442:	f06f 0501 	mvn.w	r5, #1
 8015446:	fb05 f706 	mul.w	r7, r5, r6
 801544a:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801544e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8015452:	0945      	lsrs	r5, r0, #5
 8015454:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8015458:	ea4c 0505 	orr.w	r5, ip, r5
 801545c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8015460:	4305      	orrs	r5, r0
 8015462:	53e5      	strh	r5, [r4, r7]
 8015464:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015466:	4401      	add	r1, r0
 8015468:	9812      	ldr	r0, [sp, #72]	; 0x48
 801546a:	3e01      	subs	r6, #1
 801546c:	4402      	add	r2, r0
 801546e:	e78e      	b.n	801538e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8015470:	b2fd      	uxtb	r5, r7
 8015472:	2f00      	cmp	r7, #0
 8015474:	d0f6      	beq.n	8015464 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015476:	f06f 0701 	mvn.w	r7, #1
 801547a:	4377      	muls	r7, r6
 801547c:	fa1f f985 	uxth.w	r9, r5
 8015480:	f834 8007 	ldrh.w	r8, [r4, r7]
 8015484:	9702      	str	r7, [sp, #8]
 8015486:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801548a:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801548e:	43ed      	mvns	r5, r5
 8015490:	b2ed      	uxtb	r5, r5
 8015492:	fb17 f709 	smulbb	r7, r7, r9
 8015496:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801549a:	fb0c 7c05 	mla	ip, ip, r5, r7
 801549e:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80154a2:	ea4f 07e8 	mov.w	r7, r8, asr #3
 80154a6:	b2c0      	uxtb	r0, r0
 80154a8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80154ac:	fa5f f888 	uxtb.w	r8, r8
 80154b0:	fb10 f009 	smulbb	r0, r0, r9
 80154b4:	fb08 0005 	mla	r0, r8, r5, r0
 80154b8:	b280      	uxth	r0, r0
 80154ba:	fa1f fc8c 	uxth.w	ip, ip
 80154be:	fb1a fa09 	smulbb	sl, sl, r9
 80154c2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80154c6:	fb07 a705 	mla	r7, r7, r5, sl
 80154ca:	f100 0a01 	add.w	sl, r0, #1
 80154ce:	f10c 0501 	add.w	r5, ip, #1
 80154d2:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80154d6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80154da:	b2bf      	uxth	r7, r7
 80154dc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80154e0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80154e4:	ea4a 0c0c 	orr.w	ip, sl, ip
 80154e8:	f107 0a01 	add.w	sl, r7, #1
 80154ec:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80154f0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80154f4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80154f8:	9802      	ldr	r0, [sp, #8]
 80154fa:	ea4c 0c0a 	orr.w	ip, ip, sl
 80154fe:	f824 c000 	strh.w	ip, [r4, r0]
 8015502:	e7af      	b.n	8015464 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015504:	f04f 0800 	mov.w	r8, #0
 8015508:	eba3 0008 	sub.w	r0, r3, r8
 801550c:	2800      	cmp	r0, #0
 801550e:	f77f af41 	ble.w	8015394 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015512:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8015516:	9f00      	ldr	r7, [sp, #0]
 8015518:	1410      	asrs	r0, r2, #16
 801551a:	140d      	asrs	r5, r1, #16
 801551c:	fb06 7000 	mla	r0, r6, r0, r7
 8015520:	5d40      	ldrb	r0, [r0, r5]
 8015522:	9d01      	ldr	r5, [sp, #4]
 8015524:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8015528:	0e2e      	lsrs	r6, r5, #24
 801552a:	2eff      	cmp	r6, #255	; 0xff
 801552c:	d112      	bne.n	8015554 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801552e:	482c      	ldr	r0, [pc, #176]	; (80155e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8015530:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8015534:	0968      	lsrs	r0, r5, #5
 8015536:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801553a:	4330      	orrs	r0, r6
 801553c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8015540:	4328      	orrs	r0, r5
 8015542:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8015546:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015548:	4401      	add	r1, r0
 801554a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801554c:	f108 0801 	add.w	r8, r8, #1
 8015550:	4402      	add	r2, r0
 8015552:	e7d9      	b.n	8015508 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8015554:	b2f0      	uxtb	r0, r6
 8015556:	2e00      	cmp	r6, #0
 8015558:	d0f5      	beq.n	8015546 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801555a:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801555e:	fa1f f980 	uxth.w	r9, r0
 8015562:	ea4f 272c 	mov.w	r7, ip, asr #8
 8015566:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801556a:	43c0      	mvns	r0, r0
 801556c:	b2c0      	uxtb	r0, r0
 801556e:	fb16 f609 	smulbb	r6, r6, r9
 8015572:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015576:	fb07 6700 	mla	r7, r7, r0, r6
 801557a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801557e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8015582:	b2ed      	uxtb	r5, r5
 8015584:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015588:	fa5f fc8c 	uxtb.w	ip, ip
 801558c:	fb15 f509 	smulbb	r5, r5, r9
 8015590:	fb0c 5500 	mla	r5, ip, r0, r5
 8015594:	b2bf      	uxth	r7, r7
 8015596:	fb1a fa09 	smulbb	sl, sl, r9
 801559a:	b2ad      	uxth	r5, r5
 801559c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80155a0:	fb06 a600 	mla	r6, r6, r0, sl
 80155a4:	1c78      	adds	r0, r7, #1
 80155a6:	f105 0a01 	add.w	sl, r5, #1
 80155aa:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80155ae:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80155b2:	b2b6      	uxth	r6, r6
 80155b4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80155b8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80155bc:	ea4a 0707 	orr.w	r7, sl, r7
 80155c0:	f106 0a01 	add.w	sl, r6, #1
 80155c4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80155c8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80155cc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80155d0:	ea47 070a 	orr.w	r7, r7, sl
 80155d4:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80155d8:	e7b5      	b.n	8015546 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80155da:	b005      	add	sp, #20
 80155dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80155e0:	fffff800 	.word	0xfffff800

080155e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80155e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80155e8:	b087      	sub	sp, #28
 80155ea:	468b      	mov	fp, r1
 80155ec:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80155ee:	9204      	str	r2, [sp, #16]
 80155f0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80155f4:	9205      	str	r2, [sp, #20]
 80155f6:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80155fa:	6861      	ldr	r1, [r4, #4]
 80155fc:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8015600:	fb01 2000 	mla	r0, r1, r0, r2
 8015604:	6822      	ldr	r2, [r4, #0]
 8015606:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801560a:	f8de 2000 	ldr.w	r2, [lr]
 801560e:	9201      	str	r2, [sp, #4]
 8015610:	f8de 2004 	ldr.w	r2, [lr, #4]
 8015614:	9202      	str	r2, [sp, #8]
 8015616:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801561a:	f1bb 0f00 	cmp.w	fp, #0
 801561e:	dc03      	bgt.n	8015628 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8015620:	9a04      	ldr	r2, [sp, #16]
 8015622:	2a00      	cmp	r2, #0
 8015624:	f340 8142 	ble.w	80158ac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8015628:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801562a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801562e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8015632:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015636:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015638:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801563c:	2b00      	cmp	r3, #0
 801563e:	dd0e      	ble.n	801565e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8015640:	140c      	asrs	r4, r1, #16
 8015642:	d405      	bmi.n	8015650 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015644:	42bc      	cmp	r4, r7
 8015646:	da03      	bge.n	8015650 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015648:	1414      	asrs	r4, r2, #16
 801564a:	d401      	bmi.n	8015650 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801564c:	42b4      	cmp	r4, r6
 801564e:	db07      	blt.n	8015660 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015650:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015652:	4421      	add	r1, r4
 8015654:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015656:	3b01      	subs	r3, #1
 8015658:	4422      	add	r2, r4
 801565a:	3002      	adds	r0, #2
 801565c:	e7ee      	b.n	801563c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801565e:	d019      	beq.n	8015694 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8015660:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8015662:	1e5c      	subs	r4, r3, #1
 8015664:	fb05 1504 	mla	r5, r5, r4, r1
 8015668:	142d      	asrs	r5, r5, #16
 801566a:	d409      	bmi.n	8015680 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801566c:	42bd      	cmp	r5, r7
 801566e:	da07      	bge.n	8015680 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015670:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8015672:	fb05 2404 	mla	r4, r5, r4, r2
 8015676:	1424      	asrs	r4, r4, #16
 8015678:	d402      	bmi.n	8015680 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801567a:	42b4      	cmp	r4, r6
 801567c:	f2c0 80b1 	blt.w	80157e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8015680:	f04f 0800 	mov.w	r8, #0
 8015684:	eb03 0408 	add.w	r4, r3, r8
 8015688:	2c00      	cmp	r4, #0
 801568a:	dc3e      	bgt.n	801570a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801568c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015690:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015694:	f1bb 0f00 	cmp.w	fp, #0
 8015698:	f340 8108 	ble.w	80158ac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801569c:	ee30 0a04 	vadd.f32	s0, s0, s8
 80156a0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80156a4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80156a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80156aa:	f1bb 0b01 	subs.w	fp, fp, #1
 80156ae:	ee31 1a05 	vadd.f32	s2, s2, s10
 80156b2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80156b6:	eeb0 6a62 	vmov.f32	s12, s5
 80156ba:	ee61 7a27 	vmul.f32	s15, s2, s15
 80156be:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80156c2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80156c6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80156ca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80156ce:	eeb0 6a43 	vmov.f32	s12, s6
 80156d2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80156d6:	ee12 2a90 	vmov	r2, s5
 80156da:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80156de:	fb92 f3f3 	sdiv	r3, r2, r3
 80156e2:	ee13 2a10 	vmov	r2, s6
 80156e6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80156ea:	9313      	str	r3, [sp, #76]	; 0x4c
 80156ec:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80156ee:	fb92 f3f3 	sdiv	r3, r2, r3
 80156f2:	9a04      	ldr	r2, [sp, #16]
 80156f4:	9314      	str	r3, [sp, #80]	; 0x50
 80156f6:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80156fa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80156fc:	eeb0 3a67 	vmov.f32	s6, s15
 8015700:	bf08      	it	eq
 8015702:	4613      	moveq	r3, r2
 8015704:	eef0 2a47 	vmov.f32	s5, s14
 8015708:	e787      	b.n	801561a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801570a:	140e      	asrs	r6, r1, #16
 801570c:	d462      	bmi.n	80157d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801570e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8015712:	42b5      	cmp	r5, r6
 8015714:	dd5e      	ble.n	80157d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015716:	1417      	asrs	r7, r2, #16
 8015718:	d45c      	bmi.n	80157d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801571a:	f8de 400c 	ldr.w	r4, [lr, #12]
 801571e:	42bc      	cmp	r4, r7
 8015720:	dd58      	ble.n	80157d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015722:	b22d      	sxth	r5, r5
 8015724:	fb07 6505 	mla	r5, r7, r5, r6
 8015728:	9c02      	ldr	r4, [sp, #8]
 801572a:	5d66      	ldrb	r6, [r4, r5]
 801572c:	2e00      	cmp	r6, #0
 801572e:	d051      	beq.n	80157d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015730:	9c01      	ldr	r4, [sp, #4]
 8015732:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8015736:	f06f 0401 	mvn.w	r4, #1
 801573a:	fb04 f408 	mul.w	r4, r4, r8
 801573e:	9403      	str	r4, [sp, #12]
 8015740:	5b05      	ldrh	r5, [r0, r4]
 8015742:	9c05      	ldr	r4, [sp, #20]
 8015744:	4366      	muls	r6, r4
 8015746:	1c74      	adds	r4, r6, #1
 8015748:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801574c:	1224      	asrs	r4, r4, #8
 801574e:	b2a7      	uxth	r7, r4
 8015750:	122e      	asrs	r6, r5, #8
 8015752:	43e4      	mvns	r4, r4
 8015754:	b2e4      	uxtb	r4, r4
 8015756:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801575a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801575e:	fb16 f604 	smulbb	r6, r6, r4
 8015762:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015766:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801576a:	00ed      	lsls	r5, r5, #3
 801576c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015770:	b2ed      	uxtb	r5, r5
 8015772:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8015776:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801577a:	fb15 f504 	smulbb	r5, r5, r4
 801577e:	fa5f f989 	uxtb.w	r9, r9
 8015782:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015786:	fb09 5507 	mla	r5, r9, r7, r5
 801578a:	fb1a fa04 	smulbb	sl, sl, r4
 801578e:	fa1f fc8c 	uxth.w	ip, ip
 8015792:	b2ad      	uxth	r5, r5
 8015794:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015798:	fb06 a607 	mla	r6, r6, r7, sl
 801579c:	f10c 0401 	add.w	r4, ip, #1
 80157a0:	f105 0a01 	add.w	sl, r5, #1
 80157a4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80157a8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80157ac:	b2b6      	uxth	r6, r6
 80157ae:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80157b2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80157b6:	ea4a 0c0c 	orr.w	ip, sl, ip
 80157ba:	f106 0a01 	add.w	sl, r6, #1
 80157be:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80157c2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80157c6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80157ca:	9c03      	ldr	r4, [sp, #12]
 80157cc:	ea4c 0c0a 	orr.w	ip, ip, sl
 80157d0:	f820 c004 	strh.w	ip, [r0, r4]
 80157d4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80157d6:	4421      	add	r1, r4
 80157d8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80157da:	f108 38ff 	add.w	r8, r8, #4294967295
 80157de:	4422      	add	r2, r4
 80157e0:	e750      	b.n	8015684 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80157e2:	f04f 0900 	mov.w	r9, #0
 80157e6:	eba3 0409 	sub.w	r4, r3, r9
 80157ea:	2c00      	cmp	r4, #0
 80157ec:	f77f af4e 	ble.w	801568c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80157f0:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80157f4:	140d      	asrs	r5, r1, #16
 80157f6:	1414      	asrs	r4, r2, #16
 80157f8:	fb06 5404 	mla	r4, r6, r4, r5
 80157fc:	9d02      	ldr	r5, [sp, #8]
 80157fe:	5d2e      	ldrb	r6, [r5, r4]
 8015800:	2e00      	cmp	r6, #0
 8015802:	d04c      	beq.n	801589e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8015804:	9d01      	ldr	r5, [sp, #4]
 8015806:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801580a:	9c05      	ldr	r4, [sp, #20]
 801580c:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8015810:	4366      	muls	r6, r4
 8015812:	1c74      	adds	r4, r6, #1
 8015814:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8015818:	1224      	asrs	r4, r4, #8
 801581a:	b2a7      	uxth	r7, r4
 801581c:	122e      	asrs	r6, r5, #8
 801581e:	43e4      	mvns	r4, r4
 8015820:	b2e4      	uxtb	r4, r4
 8015822:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8015826:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801582a:	fb16 f604 	smulbb	r6, r6, r4
 801582e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015832:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015836:	00ed      	lsls	r5, r5, #3
 8015838:	fb0c 6c07 	mla	ip, ip, r7, r6
 801583c:	b2ed      	uxtb	r5, r5
 801583e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8015842:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015846:	fb15 f504 	smulbb	r5, r5, r4
 801584a:	fa5f f888 	uxtb.w	r8, r8
 801584e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015852:	fb08 5507 	mla	r5, r8, r7, r5
 8015856:	fb1a fa04 	smulbb	sl, sl, r4
 801585a:	fa1f fc8c 	uxth.w	ip, ip
 801585e:	b2ad      	uxth	r5, r5
 8015860:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015864:	fb06 a607 	mla	r6, r6, r7, sl
 8015868:	f10c 0401 	add.w	r4, ip, #1
 801586c:	f105 0a01 	add.w	sl, r5, #1
 8015870:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015874:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015878:	b2b6      	uxth	r6, r6
 801587a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801587e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015882:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015886:	f106 0a01 	add.w	sl, r6, #1
 801588a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801588e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015892:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015896:	ea4c 0c0a 	orr.w	ip, ip, sl
 801589a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801589e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80158a0:	4421      	add	r1, r4
 80158a2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80158a4:	f109 0901 	add.w	r9, r9, #1
 80158a8:	4422      	add	r2, r4
 80158aa:	e79c      	b.n	80157e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 80158ac:	b007      	add	sp, #28
 80158ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080158b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80158b2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80158b6:	b085      	sub	sp, #20
 80158b8:	468b      	mov	fp, r1
 80158ba:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80158bc:	9203      	str	r2, [sp, #12]
 80158be:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 80158c2:	6861      	ldr	r1, [r4, #4]
 80158c4:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 80158c8:	fb01 2000 	mla	r0, r1, r0, r2
 80158cc:	6822      	ldr	r2, [r4, #0]
 80158ce:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80158d2:	f8d8 2000 	ldr.w	r2, [r8]
 80158d6:	9200      	str	r2, [sp, #0]
 80158d8:	f8d8 2004 	ldr.w	r2, [r8, #4]
 80158dc:	9201      	str	r2, [sp, #4]
 80158de:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80158e2:	f1bb 0f00 	cmp.w	fp, #0
 80158e6:	dc03      	bgt.n	80158f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80158e8:	9a03      	ldr	r2, [sp, #12]
 80158ea:	2a00      	cmp	r2, #0
 80158ec:	f340 8146 	ble.w	8015b7c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80158f0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80158f2:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80158f6:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80158fa:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80158fe:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015900:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015904:	2b00      	cmp	r3, #0
 8015906:	dd0e      	ble.n	8015926 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8015908:	140c      	asrs	r4, r1, #16
 801590a:	d405      	bmi.n	8015918 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801590c:	42bc      	cmp	r4, r7
 801590e:	da03      	bge.n	8015918 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015910:	1414      	asrs	r4, r2, #16
 8015912:	d401      	bmi.n	8015918 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015914:	42b4      	cmp	r4, r6
 8015916:	db07      	blt.n	8015928 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015918:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801591a:	4421      	add	r1, r4
 801591c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801591e:	3b01      	subs	r3, #1
 8015920:	4422      	add	r2, r4
 8015922:	3002      	adds	r0, #2
 8015924:	e7ee      	b.n	8015904 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8015926:	d017      	beq.n	8015958 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8015928:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801592a:	1e5c      	subs	r4, r3, #1
 801592c:	fb05 1504 	mla	r5, r5, r4, r1
 8015930:	142d      	asrs	r5, r5, #16
 8015932:	d409      	bmi.n	8015948 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015934:	42bd      	cmp	r5, r7
 8015936:	da07      	bge.n	8015948 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015938:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801593a:	fb05 2404 	mla	r4, r5, r4, r2
 801593e:	1424      	asrs	r4, r4, #16
 8015940:	d402      	bmi.n	8015948 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015942:	42b4      	cmp	r4, r6
 8015944:	f2c0 80b3 	blt.w	8015aae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8015948:	2600      	movs	r6, #0
 801594a:	199c      	adds	r4, r3, r6
 801594c:	2c00      	cmp	r4, #0
 801594e:	dc3e      	bgt.n	80159ce <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8015950:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015954:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015958:	f1bb 0f00 	cmp.w	fp, #0
 801595c:	f340 810e 	ble.w	8015b7c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8015960:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015964:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015968:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801596c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801596e:	f1bb 0b01 	subs.w	fp, fp, #1
 8015972:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015976:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801597a:	eeb0 6a62 	vmov.f32	s12, s5
 801597e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015982:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015986:	ee77 2a62 	vsub.f32	s5, s14, s5
 801598a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801598e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015992:	eeb0 6a43 	vmov.f32	s12, s6
 8015996:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801599a:	ee12 2a90 	vmov	r2, s5
 801599e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80159a2:	fb92 f3f3 	sdiv	r3, r2, r3
 80159a6:	ee13 2a10 	vmov	r2, s6
 80159aa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80159ae:	9311      	str	r3, [sp, #68]	; 0x44
 80159b0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80159b2:	fb92 f3f3 	sdiv	r3, r2, r3
 80159b6:	9a03      	ldr	r2, [sp, #12]
 80159b8:	9312      	str	r3, [sp, #72]	; 0x48
 80159ba:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80159be:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80159c0:	eeb0 3a67 	vmov.f32	s6, s15
 80159c4:	bf08      	it	eq
 80159c6:	4613      	moveq	r3, r2
 80159c8:	eef0 2a47 	vmov.f32	s5, s14
 80159cc:	e789      	b.n	80158e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80159ce:	140f      	asrs	r7, r1, #16
 80159d0:	d418      	bmi.n	8015a04 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80159d2:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80159d6:	42bd      	cmp	r5, r7
 80159d8:	dd14      	ble.n	8015a04 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80159da:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80159de:	d411      	bmi.n	8015a04 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80159e0:	f8d8 400c 	ldr.w	r4, [r8, #12]
 80159e4:	4564      	cmp	r4, ip
 80159e6:	dd0d      	ble.n	8015a04 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80159e8:	b22d      	sxth	r5, r5
 80159ea:	fb0c 7505 	mla	r5, ip, r5, r7
 80159ee:	9c01      	ldr	r4, [sp, #4]
 80159f0:	5d64      	ldrb	r4, [r4, r5]
 80159f2:	2cff      	cmp	r4, #255	; 0xff
 80159f4:	d10c      	bne.n	8015a10 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80159f6:	9c00      	ldr	r4, [sp, #0]
 80159f8:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 80159fc:	f06f 0401 	mvn.w	r4, #1
 8015a00:	4374      	muls	r4, r6
 8015a02:	5305      	strh	r5, [r0, r4]
 8015a04:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015a06:	4421      	add	r1, r4
 8015a08:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015a0a:	3e01      	subs	r6, #1
 8015a0c:	4422      	add	r2, r4
 8015a0e:	e79c      	b.n	801594a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015a10:	2c00      	cmp	r4, #0
 8015a12:	d0f7      	beq.n	8015a04 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015a14:	9f00      	ldr	r7, [sp, #0]
 8015a16:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8015a1a:	f06f 0501 	mvn.w	r5, #1
 8015a1e:	4375      	muls	r5, r6
 8015a20:	9502      	str	r5, [sp, #8]
 8015a22:	5b45      	ldrh	r5, [r0, r5]
 8015a24:	fa1f fc84 	uxth.w	ip, r4
 8015a28:	122f      	asrs	r7, r5, #8
 8015a2a:	43e4      	mvns	r4, r4
 8015a2c:	b2e4      	uxtb	r4, r4
 8015a2e:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8015a32:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015a36:	fb17 f704 	smulbb	r7, r7, r4
 8015a3a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015a3e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8015a42:	00ed      	lsls	r5, r5, #3
 8015a44:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8015a48:	b2ed      	uxtb	r5, r5
 8015a4a:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8015a4e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8015a52:	fb15 f504 	smulbb	r5, r5, r4
 8015a56:	fa5f f989 	uxtb.w	r9, r9
 8015a5a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015a5e:	fb09 550c 	mla	r5, r9, ip, r5
 8015a62:	fb1a fa04 	smulbb	sl, sl, r4
 8015a66:	fa1f fe8e 	uxth.w	lr, lr
 8015a6a:	b2ad      	uxth	r5, r5
 8015a6c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015a70:	fb07 a70c 	mla	r7, r7, ip, sl
 8015a74:	f10e 0401 	add.w	r4, lr, #1
 8015a78:	f105 0a01 	add.w	sl, r5, #1
 8015a7c:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8015a80:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015a84:	b2bf      	uxth	r7, r7
 8015a86:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015a8a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8015a8e:	ea4a 0e0e 	orr.w	lr, sl, lr
 8015a92:	f107 0a01 	add.w	sl, r7, #1
 8015a96:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8015a9a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015a9e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015aa2:	9c02      	ldr	r4, [sp, #8]
 8015aa4:	ea4e 0e0a 	orr.w	lr, lr, sl
 8015aa8:	f820 e004 	strh.w	lr, [r0, r4]
 8015aac:	e7aa      	b.n	8015a04 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015aae:	f04f 0900 	mov.w	r9, #0
 8015ab2:	eba3 0409 	sub.w	r4, r3, r9
 8015ab6:	2c00      	cmp	r4, #0
 8015ab8:	f77f af4a 	ble.w	8015950 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015abc:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8015ac0:	1414      	asrs	r4, r2, #16
 8015ac2:	140d      	asrs	r5, r1, #16
 8015ac4:	fb06 5504 	mla	r5, r6, r4, r5
 8015ac8:	9c01      	ldr	r4, [sp, #4]
 8015aca:	5d64      	ldrb	r4, [r4, r5]
 8015acc:	2cff      	cmp	r4, #255	; 0xff
 8015ace:	d10b      	bne.n	8015ae8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8015ad0:	9c00      	ldr	r4, [sp, #0]
 8015ad2:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8015ad6:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8015ada:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015adc:	4421      	add	r1, r4
 8015ade:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015ae0:	f109 0901 	add.w	r9, r9, #1
 8015ae4:	4422      	add	r2, r4
 8015ae6:	e7e4      	b.n	8015ab2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8015ae8:	2c00      	cmp	r4, #0
 8015aea:	d0f6      	beq.n	8015ada <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8015aec:	9e00      	ldr	r6, [sp, #0]
 8015aee:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8015af2:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8015af6:	b2a7      	uxth	r7, r4
 8015af8:	122e      	asrs	r6, r5, #8
 8015afa:	43e4      	mvns	r4, r4
 8015afc:	b2e4      	uxtb	r4, r4
 8015afe:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8015b02:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015b06:	fb16 f604 	smulbb	r6, r6, r4
 8015b0a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015b0e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015b12:	00ed      	lsls	r5, r5, #3
 8015b14:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015b18:	b2ed      	uxtb	r5, r5
 8015b1a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8015b1e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015b22:	fb15 f504 	smulbb	r5, r5, r4
 8015b26:	fa5f fe8e 	uxtb.w	lr, lr
 8015b2a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015b2e:	fb0e 5507 	mla	r5, lr, r7, r5
 8015b32:	fb1a fa04 	smulbb	sl, sl, r4
 8015b36:	fa1f fc8c 	uxth.w	ip, ip
 8015b3a:	b2ad      	uxth	r5, r5
 8015b3c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015b40:	fb06 a607 	mla	r6, r6, r7, sl
 8015b44:	f10c 0401 	add.w	r4, ip, #1
 8015b48:	f105 0a01 	add.w	sl, r5, #1
 8015b4c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015b50:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015b54:	b2b6      	uxth	r6, r6
 8015b56:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015b5a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015b5e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015b62:	f106 0a01 	add.w	sl, r6, #1
 8015b66:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015b6a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015b6e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015b72:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015b76:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8015b7a:	e7ae      	b.n	8015ada <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8015b7c:	b005      	add	sp, #20
 8015b7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015b82 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015b82:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015b86:	b085      	sub	sp, #20
 8015b88:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015b8a:	9203      	str	r2, [sp, #12]
 8015b8c:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8015b90:	9201      	str	r2, [sp, #4]
 8015b92:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8015b96:	9100      	str	r1, [sp, #0]
 8015b98:	6841      	ldr	r1, [r0, #4]
 8015b9a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8015b9e:	fb01 2404 	mla	r4, r1, r4, r2
 8015ba2:	6802      	ldr	r2, [r0, #0]
 8015ba4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015ba8:	f8de 2000 	ldr.w	r2, [lr]
 8015bac:	9202      	str	r2, [sp, #8]
 8015bae:	9a01      	ldr	r2, [sp, #4]
 8015bb0:	43d6      	mvns	r6, r2
 8015bb2:	b2f6      	uxtb	r6, r6
 8015bb4:	9a00      	ldr	r2, [sp, #0]
 8015bb6:	2a00      	cmp	r2, #0
 8015bb8:	dc03      	bgt.n	8015bc2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8015bba:	9a03      	ldr	r2, [sp, #12]
 8015bbc:	2a00      	cmp	r2, #0
 8015bbe:	f340 8124 	ble.w	8015e0a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8015bc2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015bc4:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8015bc8:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8015bcc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015bd0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015bd2:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015bd6:	2b00      	cmp	r3, #0
 8015bd8:	dd0e      	ble.n	8015bf8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015bda:	1408      	asrs	r0, r1, #16
 8015bdc:	d405      	bmi.n	8015bea <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015bde:	4560      	cmp	r0, ip
 8015be0:	da03      	bge.n	8015bea <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015be2:	1410      	asrs	r0, r2, #16
 8015be4:	d401      	bmi.n	8015bea <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015be6:	42b8      	cmp	r0, r7
 8015be8:	db07      	blt.n	8015bfa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8015bea:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015bec:	4401      	add	r1, r0
 8015bee:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015bf0:	3b01      	subs	r3, #1
 8015bf2:	4402      	add	r2, r0
 8015bf4:	3402      	adds	r4, #2
 8015bf6:	e7ee      	b.n	8015bd6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8015bf8:	d06e      	beq.n	8015cd8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8015bfa:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8015bfc:	1e58      	subs	r0, r3, #1
 8015bfe:	fb05 1500 	mla	r5, r5, r0, r1
 8015c02:	142d      	asrs	r5, r5, #16
 8015c04:	d45c      	bmi.n	8015cc0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015c06:	4565      	cmp	r5, ip
 8015c08:	da5a      	bge.n	8015cc0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015c0a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8015c0c:	fb05 2000 	mla	r0, r5, r0, r2
 8015c10:	1400      	asrs	r0, r0, #16
 8015c12:	d455      	bmi.n	8015cc0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015c14:	42b8      	cmp	r0, r7
 8015c16:	da53      	bge.n	8015cc0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015c18:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8015c1c:	4699      	mov	r9, r3
 8015c1e:	46a2      	mov	sl, r4
 8015c20:	f1b9 0f00 	cmp.w	r9, #0
 8015c24:	dd54      	ble.n	8015cd0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8015c26:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8015c2a:	140d      	asrs	r5, r1, #16
 8015c2c:	1410      	asrs	r0, r2, #16
 8015c2e:	fb07 5000 	mla	r0, r7, r0, r5
 8015c32:	9d02      	ldr	r5, [sp, #8]
 8015c34:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8015c38:	f8ba 5000 	ldrh.w	r5, [sl]
 8015c3c:	122f      	asrs	r7, r5, #8
 8015c3e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8015c42:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015c46:	fb17 f706 	smulbb	r7, r7, r6
 8015c4a:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8015c4e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015c52:	00ed      	lsls	r5, r5, #3
 8015c54:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8015c58:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8015c5c:	10c7      	asrs	r7, r0, #3
 8015c5e:	b2ed      	uxtb	r5, r5
 8015c60:	00c0      	lsls	r0, r0, #3
 8015c62:	fb18 f806 	smulbb	r8, r8, r6
 8015c66:	fb15 f506 	smulbb	r5, r5, r6
 8015c6a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015c6e:	b2c0      	uxtb	r0, r0
 8015c70:	fa1f fc8c 	uxth.w	ip, ip
 8015c74:	fb07 870b 	mla	r7, r7, fp, r8
 8015c78:	fb00 500b 	mla	r0, r0, fp, r5
 8015c7c:	b280      	uxth	r0, r0
 8015c7e:	b2bf      	uxth	r7, r7
 8015c80:	f10c 0501 	add.w	r5, ip, #1
 8015c84:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8015c88:	f107 0801 	add.w	r8, r7, #1
 8015c8c:	1c45      	adds	r5, r0, #1
 8015c8e:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8015c92:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8015c96:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015c98:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015c9c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015ca0:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8015ca4:	ea45 0c0c 	orr.w	ip, r5, ip
 8015ca8:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8015cac:	4401      	add	r1, r0
 8015cae:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015cb0:	ea4c 0c08 	orr.w	ip, ip, r8
 8015cb4:	f82a cb02 	strh.w	ip, [sl], #2
 8015cb8:	4402      	add	r2, r0
 8015cba:	f109 39ff 	add.w	r9, r9, #4294967295
 8015cbe:	e7af      	b.n	8015c20 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015cc0:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8015cc4:	f04f 0800 	mov.w	r8, #0
 8015cc8:	eb03 0008 	add.w	r0, r3, r8
 8015ccc:	2800      	cmp	r0, #0
 8015cce:	dc41      	bgt.n	8015d54 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8015cd0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015cd4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015cd8:	9b00      	ldr	r3, [sp, #0]
 8015cda:	2b00      	cmp	r3, #0
 8015cdc:	f340 8095 	ble.w	8015e0a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8015ce0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015ce4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015ce8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8015cec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015cee:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015cf2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015cf6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015cfa:	eef0 6a62 	vmov.f32	s13, s5
 8015cfe:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015d02:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015d06:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015d0a:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8015d0e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015d12:	eef0 6a43 	vmov.f32	s13, s6
 8015d16:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015d1a:	ee12 2a90 	vmov	r2, s5
 8015d1e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015d22:	fb92 f3f3 	sdiv	r3, r2, r3
 8015d26:	ee13 2a10 	vmov	r2, s6
 8015d2a:	9311      	str	r3, [sp, #68]	; 0x44
 8015d2c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015d2e:	fb92 f3f3 	sdiv	r3, r2, r3
 8015d32:	9312      	str	r3, [sp, #72]	; 0x48
 8015d34:	9b00      	ldr	r3, [sp, #0]
 8015d36:	9a03      	ldr	r2, [sp, #12]
 8015d38:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015d3c:	3b01      	subs	r3, #1
 8015d3e:	9300      	str	r3, [sp, #0]
 8015d40:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8015d44:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015d46:	eeb0 3a67 	vmov.f32	s6, s15
 8015d4a:	bf08      	it	eq
 8015d4c:	4613      	moveq	r3, r2
 8015d4e:	eef0 2a47 	vmov.f32	s5, s14
 8015d52:	e72f      	b.n	8015bb4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8015d54:	140f      	asrs	r7, r1, #16
 8015d56:	d451      	bmi.n	8015dfc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015d58:	f8de 5008 	ldr.w	r5, [lr, #8]
 8015d5c:	42bd      	cmp	r5, r7
 8015d5e:	dd4d      	ble.n	8015dfc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015d60:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015d64:	d44a      	bmi.n	8015dfc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015d66:	f8de 000c 	ldr.w	r0, [lr, #12]
 8015d6a:	4560      	cmp	r0, ip
 8015d6c:	dd46      	ble.n	8015dfc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015d6e:	b22d      	sxth	r5, r5
 8015d70:	fb0c 7505 	mla	r5, ip, r5, r7
 8015d74:	9802      	ldr	r0, [sp, #8]
 8015d76:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8015d7a:	f06f 0501 	mvn.w	r5, #1
 8015d7e:	fb05 fb08 	mul.w	fp, r5, r8
 8015d82:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8015d86:	f834 500b 	ldrh.w	r5, [r4, fp]
 8015d8a:	122f      	asrs	r7, r5, #8
 8015d8c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015d90:	fb17 f706 	smulbb	r7, r7, r6
 8015d94:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8015d98:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015d9c:	00ed      	lsls	r5, r5, #3
 8015d9e:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8015da2:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8015da6:	10c7      	asrs	r7, r0, #3
 8015da8:	b2ed      	uxtb	r5, r5
 8015daa:	00c0      	lsls	r0, r0, #3
 8015dac:	fb19 f906 	smulbb	r9, r9, r6
 8015db0:	fb15 f506 	smulbb	r5, r5, r6
 8015db4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015db8:	b2c0      	uxtb	r0, r0
 8015dba:	fa1f fc8c 	uxth.w	ip, ip
 8015dbe:	fb07 970a 	mla	r7, r7, sl, r9
 8015dc2:	fb00 500a 	mla	r0, r0, sl, r5
 8015dc6:	b2bf      	uxth	r7, r7
 8015dc8:	b280      	uxth	r0, r0
 8015dca:	f10c 0501 	add.w	r5, ip, #1
 8015dce:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8015dd2:	f107 0901 	add.w	r9, r7, #1
 8015dd6:	1c45      	adds	r5, r0, #1
 8015dd8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8015ddc:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8015de0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015de4:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015de8:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8015dec:	ea45 0c0c 	orr.w	ip, r5, ip
 8015df0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8015df4:	ea4c 0c09 	orr.w	ip, ip, r9
 8015df8:	f824 c00b 	strh.w	ip, [r4, fp]
 8015dfc:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015dfe:	4401      	add	r1, r0
 8015e00:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015e02:	f108 38ff 	add.w	r8, r8, #4294967295
 8015e06:	4402      	add	r2, r0
 8015e08:	e75e      	b.n	8015cc8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8015e0a:	b005      	add	sp, #20
 8015e0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015e10 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015e10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015e14:	b085      	sub	sp, #20
 8015e16:	4693      	mov	fp, r2
 8015e18:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8015e1a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8015e1c:	6870      	ldr	r0, [r6, #4]
 8015e1e:	9101      	str	r1, [sp, #4]
 8015e20:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8015e24:	fb00 2404 	mla	r4, r0, r4, r2
 8015e28:	6832      	ldr	r2, [r6, #0]
 8015e2a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8015e2e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015e32:	682a      	ldr	r2, [r5, #0]
 8015e34:	9202      	str	r2, [sp, #8]
 8015e36:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015e3a:	9a01      	ldr	r2, [sp, #4]
 8015e3c:	2a00      	cmp	r2, #0
 8015e3e:	dc03      	bgt.n	8015e48 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8015e40:	f1bb 0f00 	cmp.w	fp, #0
 8015e44:	f340 809a 	ble.w	8015f7c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8015e48:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015e4a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8015e4e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8015e52:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015e56:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015e58:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015e5c:	2b00      	cmp	r3, #0
 8015e5e:	dd0c      	ble.n	8015e7a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8015e60:	1406      	asrs	r6, r0, #16
 8015e62:	d405      	bmi.n	8015e70 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015e64:	454e      	cmp	r6, r9
 8015e66:	da03      	bge.n	8015e70 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015e68:	1416      	asrs	r6, r2, #16
 8015e6a:	d401      	bmi.n	8015e70 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015e6c:	4546      	cmp	r6, r8
 8015e6e:	db05      	blt.n	8015e7c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015e70:	4470      	add	r0, lr
 8015e72:	4462      	add	r2, ip
 8015e74:	3b01      	subs	r3, #1
 8015e76:	3402      	adds	r4, #2
 8015e78:	e7f0      	b.n	8015e5c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8015e7a:	d00f      	beq.n	8015e9c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8015e7c:	1e5e      	subs	r6, r3, #1
 8015e7e:	fb0e 0706 	mla	r7, lr, r6, r0
 8015e82:	143f      	asrs	r7, r7, #16
 8015e84:	d541      	bpl.n	8015f0a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8015e86:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8015e8a:	4698      	mov	r8, r3
 8015e8c:	9603      	str	r6, [sp, #12]
 8015e8e:	f1b8 0f00 	cmp.w	r8, #0
 8015e92:	dc56      	bgt.n	8015f42 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8015e94:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015e98:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015e9c:	9b01      	ldr	r3, [sp, #4]
 8015e9e:	2b00      	cmp	r3, #0
 8015ea0:	dd6c      	ble.n	8015f7c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8015ea2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015ea6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015eaa:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015eae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015eb0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015eb4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015eb8:	eeb0 6a62 	vmov.f32	s12, s5
 8015ebc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015ec0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015ec4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015ec8:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015ecc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015ed0:	eeb0 6a43 	vmov.f32	s12, s6
 8015ed4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015ed8:	ee12 2a90 	vmov	r2, s5
 8015edc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015ee0:	fb92 fef3 	sdiv	lr, r2, r3
 8015ee4:	ee13 2a10 	vmov	r2, s6
 8015ee8:	fb92 fcf3 	sdiv	ip, r2, r3
 8015eec:	9b01      	ldr	r3, [sp, #4]
 8015eee:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015ef2:	3b01      	subs	r3, #1
 8015ef4:	9301      	str	r3, [sp, #4]
 8015ef6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015efa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015efc:	eeb0 3a67 	vmov.f32	s6, s15
 8015f00:	bf08      	it	eq
 8015f02:	465b      	moveq	r3, fp
 8015f04:	eef0 2a47 	vmov.f32	s5, s14
 8015f08:	e797      	b.n	8015e3a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8015f0a:	454f      	cmp	r7, r9
 8015f0c:	dabb      	bge.n	8015e86 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015f0e:	fb0c 2606 	mla	r6, ip, r6, r2
 8015f12:	1436      	asrs	r6, r6, #16
 8015f14:	d4b7      	bmi.n	8015e86 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015f16:	4546      	cmp	r6, r8
 8015f18:	dab5      	bge.n	8015e86 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015f1a:	461e      	mov	r6, r3
 8015f1c:	46a0      	mov	r8, r4
 8015f1e:	2e00      	cmp	r6, #0
 8015f20:	ddb8      	ble.n	8015e94 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8015f22:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8015f26:	9902      	ldr	r1, [sp, #8]
 8015f28:	1417      	asrs	r7, r2, #16
 8015f2a:	ea4f 4920 	mov.w	r9, r0, asr #16
 8015f2e:	fb0a 9707 	mla	r7, sl, r7, r9
 8015f32:	4470      	add	r0, lr
 8015f34:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8015f38:	f828 7b02 	strh.w	r7, [r8], #2
 8015f3c:	4462      	add	r2, ip
 8015f3e:	3e01      	subs	r6, #1
 8015f40:	e7ed      	b.n	8015f1e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8015f42:	ea5f 4920 	movs.w	r9, r0, asr #16
 8015f46:	d414      	bmi.n	8015f72 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8015f48:	68ae      	ldr	r6, [r5, #8]
 8015f4a:	454e      	cmp	r6, r9
 8015f4c:	dd11      	ble.n	8015f72 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8015f4e:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8015f52:	d40e      	bmi.n	8015f72 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8015f54:	68ef      	ldr	r7, [r5, #12]
 8015f56:	4557      	cmp	r7, sl
 8015f58:	dd0b      	ble.n	8015f72 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8015f5a:	b236      	sxth	r6, r6
 8015f5c:	fb0a 9606 	mla	r6, sl, r6, r9
 8015f60:	9f02      	ldr	r7, [sp, #8]
 8015f62:	f06f 0101 	mvn.w	r1, #1
 8015f66:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8015f6a:	fb01 f608 	mul.w	r6, r1, r8
 8015f6e:	9903      	ldr	r1, [sp, #12]
 8015f70:	538f      	strh	r7, [r1, r6]
 8015f72:	4470      	add	r0, lr
 8015f74:	4462      	add	r2, ip
 8015f76:	f108 38ff 	add.w	r8, r8, #4294967295
 8015f7a:	e788      	b.n	8015e8e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015f7c:	b005      	add	sp, #20
 8015f7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015f82 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015f82:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015f86:	b087      	sub	sp, #28
 8015f88:	468b      	mov	fp, r1
 8015f8a:	9815      	ldr	r0, [sp, #84]	; 0x54
 8015f8c:	9203      	str	r2, [sp, #12]
 8015f8e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8015f92:	9204      	str	r2, [sp, #16]
 8015f94:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8015f98:	6841      	ldr	r1, [r0, #4]
 8015f9a:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8015f9e:	fb01 2505 	mla	r5, r1, r5, r2
 8015fa2:	6802      	ldr	r2, [r0, #0]
 8015fa4:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8015fa8:	f8d9 2000 	ldr.w	r2, [r9]
 8015fac:	9201      	str	r2, [sp, #4]
 8015fae:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015fb2:	f1bb 0f00 	cmp.w	fp, #0
 8015fb6:	dc03      	bgt.n	8015fc0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8015fb8:	9a03      	ldr	r2, [sp, #12]
 8015fba:	2a00      	cmp	r2, #0
 8015fbc:	f340 8159 	ble.w	8016272 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8015fc0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015fc2:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8015fc6:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8015fca:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015fce:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015fd0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015fd4:	2b00      	cmp	r3, #0
 8015fd6:	dd0e      	ble.n	8015ff6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8015fd8:	1402      	asrs	r2, r0, #16
 8015fda:	d405      	bmi.n	8015fe8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015fdc:	42ba      	cmp	r2, r7
 8015fde:	da03      	bge.n	8015fe8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015fe0:	140a      	asrs	r2, r1, #16
 8015fe2:	d401      	bmi.n	8015fe8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015fe4:	42b2      	cmp	r2, r6
 8015fe6:	db07      	blt.n	8015ff8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015fe8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015fea:	4410      	add	r0, r2
 8015fec:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015fee:	3b01      	subs	r3, #1
 8015ff0:	4411      	add	r1, r2
 8015ff2:	3502      	adds	r5, #2
 8015ff4:	e7ee      	b.n	8015fd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8015ff6:	d017      	beq.n	8016028 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8015ff8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015ffa:	1e5a      	subs	r2, r3, #1
 8015ffc:	fb04 0402 	mla	r4, r4, r2, r0
 8016000:	1424      	asrs	r4, r4, #16
 8016002:	d409      	bmi.n	8016018 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016004:	42bc      	cmp	r4, r7
 8016006:	da07      	bge.n	8016018 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016008:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801600a:	fb04 1202 	mla	r2, r4, r2, r1
 801600e:	1412      	asrs	r2, r2, #16
 8016010:	d402      	bmi.n	8016018 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016012:	42b2      	cmp	r2, r6
 8016014:	f2c0 80bf 	blt.w	8016196 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8016018:	2700      	movs	r7, #0
 801601a:	19da      	adds	r2, r3, r7
 801601c:	2a00      	cmp	r2, #0
 801601e:	dc3e      	bgt.n	801609e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8016020:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016024:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8016028:	f1bb 0f00 	cmp.w	fp, #0
 801602c:	f340 8121 	ble.w	8016272 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8016030:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016034:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016038:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801603c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801603e:	f1bb 0b01 	subs.w	fp, fp, #1
 8016042:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016046:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801604a:	eeb0 6a62 	vmov.f32	s12, s5
 801604e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016052:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016056:	ee77 2a62 	vsub.f32	s5, s14, s5
 801605a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801605e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016062:	eeb0 6a43 	vmov.f32	s12, s6
 8016066:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801606a:	ee12 2a90 	vmov	r2, s5
 801606e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016072:	fb92 f3f3 	sdiv	r3, r2, r3
 8016076:	ee13 2a10 	vmov	r2, s6
 801607a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801607e:	9313      	str	r3, [sp, #76]	; 0x4c
 8016080:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016082:	fb92 f3f3 	sdiv	r3, r2, r3
 8016086:	9a03      	ldr	r2, [sp, #12]
 8016088:	9314      	str	r3, [sp, #80]	; 0x50
 801608a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801608e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016090:	eeb0 3a67 	vmov.f32	s6, s15
 8016094:	bf08      	it	eq
 8016096:	4613      	moveq	r3, r2
 8016098:	eef0 2a47 	vmov.f32	s5, s14
 801609c:	e789      	b.n	8015fb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801609e:	1406      	asrs	r6, r0, #16
 80160a0:	d42d      	bmi.n	80160fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80160a2:	f8d9 4008 	ldr.w	r4, [r9, #8]
 80160a6:	42b4      	cmp	r4, r6
 80160a8:	dd29      	ble.n	80160fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80160aa:	ea5f 4c21 	movs.w	ip, r1, asr #16
 80160ae:	d426      	bmi.n	80160fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80160b0:	f8d9 200c 	ldr.w	r2, [r9, #12]
 80160b4:	4562      	cmp	r2, ip
 80160b6:	dd22      	ble.n	80160fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80160b8:	b224      	sxth	r4, r4
 80160ba:	9a01      	ldr	r2, [sp, #4]
 80160bc:	fb0c 6404 	mla	r4, ip, r4, r6
 80160c0:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 80160c4:	0e22      	lsrs	r2, r4, #24
 80160c6:	d01a      	beq.n	80160fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80160c8:	9e04      	ldr	r6, [sp, #16]
 80160ca:	4372      	muls	r2, r6
 80160cc:	1c56      	adds	r6, r2, #1
 80160ce:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80160d2:	1212      	asrs	r2, r2, #8
 80160d4:	0a26      	lsrs	r6, r4, #8
 80160d6:	2aff      	cmp	r2, #255	; 0xff
 80160d8:	9605      	str	r6, [sp, #20]
 80160da:	d116      	bne.n	801610a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 80160dc:	f06f 0201 	mvn.w	r2, #1
 80160e0:	fb02 fc07 	mul.w	ip, r2, r7
 80160e4:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 80160e8:	0962      	lsrs	r2, r4, #5
 80160ea:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80160ee:	f026 0607 	bic.w	r6, r6, #7
 80160f2:	4316      	orrs	r6, r2
 80160f4:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80160f8:	4326      	orrs	r6, r4
 80160fa:	f825 600c 	strh.w	r6, [r5, ip]
 80160fe:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016100:	4410      	add	r0, r2
 8016102:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016104:	3f01      	subs	r7, #1
 8016106:	4411      	add	r1, r2
 8016108:	e787      	b.n	801601a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801610a:	f06f 0601 	mvn.w	r6, #1
 801610e:	437e      	muls	r6, r7
 8016110:	fa1f fa82 	uxth.w	sl, r2
 8016114:	f835 8006 	ldrh.w	r8, [r5, r6]
 8016118:	9602      	str	r6, [sp, #8]
 801611a:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801611e:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8016122:	43d2      	mvns	r2, r2
 8016124:	b2d2      	uxtb	r2, r2
 8016126:	fb1c fc0a 	smulbb	ip, ip, sl
 801612a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801612e:	fb0e ce02 	mla	lr, lr, r2, ip
 8016132:	b2e4      	uxtb	r4, r4
 8016134:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8016138:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801613c:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8016140:	fa5f f888 	uxtb.w	r8, r8
 8016144:	fb14 f40a 	smulbb	r4, r4, sl
 8016148:	fb08 4402 	mla	r4, r8, r2, r4
 801614c:	fa1f fe8e 	uxth.w	lr, lr
 8016150:	fb16 f60a 	smulbb	r6, r6, sl
 8016154:	b2a4      	uxth	r4, r4
 8016156:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801615a:	fb0c 6c02 	mla	ip, ip, r2, r6
 801615e:	f10e 0201 	add.w	r2, lr, #1
 8016162:	1c66      	adds	r6, r4, #1
 8016164:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8016168:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801616c:	fa1f fc8c 	uxth.w	ip, ip
 8016170:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016174:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8016178:	ea46 0e0e 	orr.w	lr, r6, lr
 801617c:	f10c 0601 	add.w	r6, ip, #1
 8016180:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8016184:	0976      	lsrs	r6, r6, #5
 8016186:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801618a:	9a02      	ldr	r2, [sp, #8]
 801618c:	ea4e 0e06 	orr.w	lr, lr, r6
 8016190:	f825 e002 	strh.w	lr, [r5, r2]
 8016194:	e7b3      	b.n	80160fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8016196:	f04f 0800 	mov.w	r8, #0
 801619a:	eba3 0208 	sub.w	r2, r3, r8
 801619e:	2a00      	cmp	r2, #0
 80161a0:	f77f af3e 	ble.w	8016020 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80161a4:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 80161a8:	1404      	asrs	r4, r0, #16
 80161aa:	140a      	asrs	r2, r1, #16
 80161ac:	fb06 4202 	mla	r2, r6, r2, r4
 80161b0:	9c01      	ldr	r4, [sp, #4]
 80161b2:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 80161b6:	0e22      	lsrs	r2, r4, #24
 80161b8:	d016      	beq.n	80161e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 80161ba:	9e04      	ldr	r6, [sp, #16]
 80161bc:	4372      	muls	r2, r6
 80161be:	1c56      	adds	r6, r2, #1
 80161c0:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80161c4:	1212      	asrs	r2, r2, #8
 80161c6:	2aff      	cmp	r2, #255	; 0xff
 80161c8:	ea4f 2614 	mov.w	r6, r4, lsr #8
 80161cc:	d113      	bne.n	80161f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 80161ce:	0962      	lsrs	r2, r4, #5
 80161d0:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 80161d4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80161d8:	f026 0607 	bic.w	r6, r6, #7
 80161dc:	4316      	orrs	r6, r2
 80161de:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80161e2:	4326      	orrs	r6, r4
 80161e4:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 80161e8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80161ea:	4410      	add	r0, r2
 80161ec:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80161ee:	f108 0801 	add.w	r8, r8, #1
 80161f2:	4411      	add	r1, r2
 80161f4:	e7d1      	b.n	801619a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 80161f6:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 80161fa:	fa1f fa82 	uxth.w	sl, r2
 80161fe:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8016202:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8016206:	43d2      	mvns	r2, r2
 8016208:	b2d2      	uxtb	r2, r2
 801620a:	fb17 f70a 	smulbb	r7, r7, sl
 801620e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016212:	fb0c 7c02 	mla	ip, ip, r2, r7
 8016216:	b2e4      	uxtb	r4, r4
 8016218:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801621c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016220:	fa5f fe8e 	uxtb.w	lr, lr
 8016224:	fb14 f40a 	smulbb	r4, r4, sl
 8016228:	fb0e 4402 	mla	r4, lr, r2, r4
 801622c:	b2f6      	uxtb	r6, r6
 801622e:	fa1f fc8c 	uxth.w	ip, ip
 8016232:	fb16 f60a 	smulbb	r6, r6, sl
 8016236:	b2a4      	uxth	r4, r4
 8016238:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801623c:	fb07 6702 	mla	r7, r7, r2, r6
 8016240:	f10c 0201 	add.w	r2, ip, #1
 8016244:	1c66      	adds	r6, r4, #1
 8016246:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801624a:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801624e:	b2bf      	uxth	r7, r7
 8016250:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016254:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016258:	ea46 0c0c 	orr.w	ip, r6, ip
 801625c:	1c7e      	adds	r6, r7, #1
 801625e:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8016262:	0976      	lsrs	r6, r6, #5
 8016264:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016268:	ea4c 0c06 	orr.w	ip, ip, r6
 801626c:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8016270:	e7ba      	b.n	80161e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8016272:	b007      	add	sp, #28
 8016274:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016278 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016278:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801627c:	b085      	sub	sp, #20
 801627e:	468b      	mov	fp, r1
 8016280:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8016282:	9203      	str	r2, [sp, #12]
 8016284:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8016288:	6841      	ldr	r1, [r0, #4]
 801628a:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801628e:	fb01 2404 	mla	r4, r1, r4, r2
 8016292:	6802      	ldr	r2, [r0, #0]
 8016294:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016298:	f8d8 2000 	ldr.w	r2, [r8]
 801629c:	9201      	str	r2, [sp, #4]
 801629e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80162a2:	f1bb 0f00 	cmp.w	fp, #0
 80162a6:	dc03      	bgt.n	80162b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80162a8:	9a03      	ldr	r2, [sp, #12]
 80162aa:	2a00      	cmp	r2, #0
 80162ac:	f340 814f 	ble.w	801654e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80162b0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80162b2:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80162b6:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80162ba:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80162be:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80162c0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80162c4:	2b00      	cmp	r3, #0
 80162c6:	dd0e      	ble.n	80162e6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80162c8:	1408      	asrs	r0, r1, #16
 80162ca:	d405      	bmi.n	80162d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80162cc:	42b8      	cmp	r0, r7
 80162ce:	da03      	bge.n	80162d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80162d0:	1410      	asrs	r0, r2, #16
 80162d2:	d401      	bmi.n	80162d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80162d4:	42b0      	cmp	r0, r6
 80162d6:	db07      	blt.n	80162e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80162d8:	9811      	ldr	r0, [sp, #68]	; 0x44
 80162da:	4401      	add	r1, r0
 80162dc:	9812      	ldr	r0, [sp, #72]	; 0x48
 80162de:	3b01      	subs	r3, #1
 80162e0:	4402      	add	r2, r0
 80162e2:	3402      	adds	r4, #2
 80162e4:	e7ee      	b.n	80162c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80162e6:	d017      	beq.n	8016318 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80162e8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80162ea:	1e58      	subs	r0, r3, #1
 80162ec:	fb05 1500 	mla	r5, r5, r0, r1
 80162f0:	142d      	asrs	r5, r5, #16
 80162f2:	d409      	bmi.n	8016308 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80162f4:	42bd      	cmp	r5, r7
 80162f6:	da07      	bge.n	8016308 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80162f8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80162fa:	fb05 2000 	mla	r0, r5, r0, r2
 80162fe:	1400      	asrs	r0, r0, #16
 8016300:	d402      	bmi.n	8016308 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8016302:	42b0      	cmp	r0, r6
 8016304:	f2c0 80ba 	blt.w	801647c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8016308:	2600      	movs	r6, #0
 801630a:	1998      	adds	r0, r3, r6
 801630c:	2800      	cmp	r0, #0
 801630e:	dc3e      	bgt.n	801638e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8016310:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016314:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016318:	f1bb 0f00 	cmp.w	fp, #0
 801631c:	f340 8117 	ble.w	801654e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8016320:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016324:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016328:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801632c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801632e:	f1bb 0b01 	subs.w	fp, fp, #1
 8016332:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016336:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801633a:	eeb0 6a62 	vmov.f32	s12, s5
 801633e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016342:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016346:	ee77 2a62 	vsub.f32	s5, s14, s5
 801634a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801634e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016352:	eeb0 6a43 	vmov.f32	s12, s6
 8016356:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801635a:	ee12 2a90 	vmov	r2, s5
 801635e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016362:	fb92 f3f3 	sdiv	r3, r2, r3
 8016366:	ee13 2a10 	vmov	r2, s6
 801636a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801636e:	9311      	str	r3, [sp, #68]	; 0x44
 8016370:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016372:	fb92 f3f3 	sdiv	r3, r2, r3
 8016376:	9a03      	ldr	r2, [sp, #12]
 8016378:	9312      	str	r3, [sp, #72]	; 0x48
 801637a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801637e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016380:	eeb0 3a67 	vmov.f32	s6, s15
 8016384:	bf08      	it	eq
 8016386:	4613      	moveq	r3, r2
 8016388:	eef0 2a47 	vmov.f32	s5, s14
 801638c:	e789      	b.n	80162a2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801638e:	140f      	asrs	r7, r1, #16
 8016390:	d424      	bmi.n	80163dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016392:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8016396:	42bd      	cmp	r5, r7
 8016398:	dd20      	ble.n	80163dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801639a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801639e:	d41d      	bmi.n	80163dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80163a0:	f8d8 000c 	ldr.w	r0, [r8, #12]
 80163a4:	4560      	cmp	r0, ip
 80163a6:	dd19      	ble.n	80163dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80163a8:	b22d      	sxth	r5, r5
 80163aa:	fb0c 7505 	mla	r5, ip, r5, r7
 80163ae:	9801      	ldr	r0, [sp, #4]
 80163b0:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 80163b4:	0e07      	lsrs	r7, r0, #24
 80163b6:	2fff      	cmp	r7, #255	; 0xff
 80163b8:	d116      	bne.n	80163e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80163ba:	f06f 0501 	mvn.w	r5, #1
 80163be:	fb05 f706 	mul.w	r7, r5, r6
 80163c2:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 80163c6:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80163ca:	0945      	lsrs	r5, r0, #5
 80163cc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80163d0:	ea4c 0505 	orr.w	r5, ip, r5
 80163d4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80163d8:	4305      	orrs	r5, r0
 80163da:	53e5      	strh	r5, [r4, r7]
 80163dc:	9811      	ldr	r0, [sp, #68]	; 0x44
 80163de:	4401      	add	r1, r0
 80163e0:	9812      	ldr	r0, [sp, #72]	; 0x48
 80163e2:	3e01      	subs	r6, #1
 80163e4:	4402      	add	r2, r0
 80163e6:	e790      	b.n	801630a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80163e8:	b2fd      	uxtb	r5, r7
 80163ea:	2f00      	cmp	r7, #0
 80163ec:	d0f6      	beq.n	80163dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80163ee:	f06f 0701 	mvn.w	r7, #1
 80163f2:	4377      	muls	r7, r6
 80163f4:	fa1f f985 	uxth.w	r9, r5
 80163f8:	f834 e007 	ldrh.w	lr, [r4, r7]
 80163fc:	9702      	str	r7, [sp, #8]
 80163fe:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8016402:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8016406:	43ed      	mvns	r5, r5
 8016408:	b2ed      	uxtb	r5, r5
 801640a:	fb17 f709 	smulbb	r7, r7, r9
 801640e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016412:	fb0c 7c05 	mla	ip, ip, r5, r7
 8016416:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801641a:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801641e:	b2c0      	uxtb	r0, r0
 8016420:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016424:	fa5f fe8e 	uxtb.w	lr, lr
 8016428:	fb10 f009 	smulbb	r0, r0, r9
 801642c:	fb0e 0005 	mla	r0, lr, r5, r0
 8016430:	b280      	uxth	r0, r0
 8016432:	fa1f fc8c 	uxth.w	ip, ip
 8016436:	fb1a fa09 	smulbb	sl, sl, r9
 801643a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801643e:	fb07 a705 	mla	r7, r7, r5, sl
 8016442:	f100 0a01 	add.w	sl, r0, #1
 8016446:	f10c 0501 	add.w	r5, ip, #1
 801644a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801644e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8016452:	b2bf      	uxth	r7, r7
 8016454:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016458:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801645c:	ea4a 0c0c 	orr.w	ip, sl, ip
 8016460:	f107 0a01 	add.w	sl, r7, #1
 8016464:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8016468:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801646c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016470:	9802      	ldr	r0, [sp, #8]
 8016472:	ea4c 0c0a 	orr.w	ip, ip, sl
 8016476:	f824 c000 	strh.w	ip, [r4, r0]
 801647a:	e7af      	b.n	80163dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801647c:	f04f 0e00 	mov.w	lr, #0
 8016480:	eba3 000e 	sub.w	r0, r3, lr
 8016484:	2800      	cmp	r0, #0
 8016486:	f77f af43 	ble.w	8016310 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801648a:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801648e:	140d      	asrs	r5, r1, #16
 8016490:	1410      	asrs	r0, r2, #16
 8016492:	fb06 5000 	mla	r0, r6, r0, r5
 8016496:	9d01      	ldr	r5, [sp, #4]
 8016498:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801649c:	0e2e      	lsrs	r6, r5, #24
 801649e:	2eff      	cmp	r6, #255	; 0xff
 80164a0:	d112      	bne.n	80164c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 80164a2:	482c      	ldr	r0, [pc, #176]	; (8016554 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 80164a4:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 80164a8:	0968      	lsrs	r0, r5, #5
 80164aa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80164ae:	4330      	orrs	r0, r6
 80164b0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80164b4:	4328      	orrs	r0, r5
 80164b6:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 80164ba:	9811      	ldr	r0, [sp, #68]	; 0x44
 80164bc:	4401      	add	r1, r0
 80164be:	9812      	ldr	r0, [sp, #72]	; 0x48
 80164c0:	f10e 0e01 	add.w	lr, lr, #1
 80164c4:	4402      	add	r2, r0
 80164c6:	e7db      	b.n	8016480 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 80164c8:	b2f0      	uxtb	r0, r6
 80164ca:	2e00      	cmp	r6, #0
 80164cc:	d0f5      	beq.n	80164ba <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80164ce:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80164d2:	fa1f f980 	uxth.w	r9, r0
 80164d6:	ea4f 272c 	mov.w	r7, ip, asr #8
 80164da:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80164de:	43c0      	mvns	r0, r0
 80164e0:	b2c0      	uxtb	r0, r0
 80164e2:	fb16 f609 	smulbb	r6, r6, r9
 80164e6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80164ea:	fb07 6700 	mla	r7, r7, r0, r6
 80164ee:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80164f2:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80164f6:	b2ed      	uxtb	r5, r5
 80164f8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80164fc:	fa5f fc8c 	uxtb.w	ip, ip
 8016500:	fb15 f509 	smulbb	r5, r5, r9
 8016504:	fb0c 5500 	mla	r5, ip, r0, r5
 8016508:	b2bf      	uxth	r7, r7
 801650a:	fb1a fa09 	smulbb	sl, sl, r9
 801650e:	b2ad      	uxth	r5, r5
 8016510:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016514:	fb06 a600 	mla	r6, r6, r0, sl
 8016518:	1c78      	adds	r0, r7, #1
 801651a:	f105 0a01 	add.w	sl, r5, #1
 801651e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8016522:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016526:	b2b6      	uxth	r6, r6
 8016528:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801652c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016530:	ea4a 0707 	orr.w	r7, sl, r7
 8016534:	f106 0a01 	add.w	sl, r6, #1
 8016538:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801653c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016540:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016544:	ea47 070a 	orr.w	r7, r7, sl
 8016548:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801654c:	e7b5      	b.n	80164ba <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801654e:	b005      	add	sp, #20
 8016550:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016554:	fffff800 	.word	0xfffff800

08016558 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016558:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801655c:	b087      	sub	sp, #28
 801655e:	468b      	mov	fp, r1
 8016560:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016562:	9203      	str	r2, [sp, #12]
 8016564:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8016568:	9204      	str	r2, [sp, #16]
 801656a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801656e:	6841      	ldr	r1, [r0, #4]
 8016570:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8016574:	fb01 2404 	mla	r4, r1, r4, r2
 8016578:	6802      	ldr	r2, [r0, #0]
 801657a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801657e:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8016582:	3201      	adds	r2, #1
 8016584:	f022 0201 	bic.w	r2, r2, #1
 8016588:	9200      	str	r2, [sp, #0]
 801658a:	f8d9 2000 	ldr.w	r2, [r9]
 801658e:	9201      	str	r2, [sp, #4]
 8016590:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016594:	f1bb 0f00 	cmp.w	fp, #0
 8016598:	dc03      	bgt.n	80165a2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801659a:	9a03      	ldr	r2, [sp, #12]
 801659c:	2a00      	cmp	r2, #0
 801659e:	f340 8169 	ble.w	8016874 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 80165a2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80165a4:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80165a8:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80165ac:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80165b0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80165b2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80165b6:	2b00      	cmp	r3, #0
 80165b8:	dd0e      	ble.n	80165d8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80165ba:	1402      	asrs	r2, r0, #16
 80165bc:	d405      	bmi.n	80165ca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80165be:	42ba      	cmp	r2, r7
 80165c0:	da03      	bge.n	80165ca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80165c2:	140a      	asrs	r2, r1, #16
 80165c4:	d401      	bmi.n	80165ca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80165c6:	42b2      	cmp	r2, r6
 80165c8:	db07      	blt.n	80165da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80165ca:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80165cc:	4410      	add	r0, r2
 80165ce:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80165d0:	3b01      	subs	r3, #1
 80165d2:	4411      	add	r1, r2
 80165d4:	3402      	adds	r4, #2
 80165d6:	e7ee      	b.n	80165b6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80165d8:	d017      	beq.n	801660a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80165da:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80165dc:	1e5a      	subs	r2, r3, #1
 80165de:	fb05 0502 	mla	r5, r5, r2, r0
 80165e2:	142d      	asrs	r5, r5, #16
 80165e4:	d409      	bmi.n	80165fa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80165e6:	42bd      	cmp	r5, r7
 80165e8:	da07      	bge.n	80165fa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80165ea:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80165ec:	fb05 1202 	mla	r2, r5, r2, r1
 80165f0:	1412      	asrs	r2, r2, #16
 80165f2:	d402      	bmi.n	80165fa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80165f4:	42b2      	cmp	r2, r6
 80165f6:	f2c0 80c7 	blt.w	8016788 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 80165fa:	2700      	movs	r7, #0
 80165fc:	19da      	adds	r2, r3, r7
 80165fe:	2a00      	cmp	r2, #0
 8016600:	dc3e      	bgt.n	8016680 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8016602:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016606:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801660a:	f1bb 0f00 	cmp.w	fp, #0
 801660e:	f340 8131 	ble.w	8016874 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8016612:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016616:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801661a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801661e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016620:	f1bb 0b01 	subs.w	fp, fp, #1
 8016624:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016628:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801662c:	eeb0 6a62 	vmov.f32	s12, s5
 8016630:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016634:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016638:	ee77 2a62 	vsub.f32	s5, s14, s5
 801663c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016640:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016644:	eeb0 6a43 	vmov.f32	s12, s6
 8016648:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801664c:	ee12 2a90 	vmov	r2, s5
 8016650:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016654:	fb92 f3f3 	sdiv	r3, r2, r3
 8016658:	ee13 2a10 	vmov	r2, s6
 801665c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016660:	9313      	str	r3, [sp, #76]	; 0x4c
 8016662:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016664:	fb92 f3f3 	sdiv	r3, r2, r3
 8016668:	9a03      	ldr	r2, [sp, #12]
 801666a:	9314      	str	r3, [sp, #80]	; 0x50
 801666c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8016670:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016672:	eeb0 3a67 	vmov.f32	s6, s15
 8016676:	bf08      	it	eq
 8016678:	4613      	moveq	r3, r2
 801667a:	eef0 2a47 	vmov.f32	s5, s14
 801667e:	e789      	b.n	8016594 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8016680:	1405      	asrs	r5, r0, #16
 8016682:	d435      	bmi.n	80166f0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016684:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8016688:	42aa      	cmp	r2, r5
 801668a:	dd31      	ble.n	80166f0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801668c:	140e      	asrs	r6, r1, #16
 801668e:	d42f      	bmi.n	80166f0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016690:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8016694:	42b2      	cmp	r2, r6
 8016696:	dd2b      	ble.n	80166f0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016698:	9a00      	ldr	r2, [sp, #0]
 801669a:	fb06 5502 	mla	r5, r6, r2, r5
 801669e:	086a      	lsrs	r2, r5, #1
 80166a0:	9e01      	ldr	r6, [sp, #4]
 80166a2:	5cb2      	ldrb	r2, [r6, r2]
 80166a4:	07ee      	lsls	r6, r5, #31
 80166a6:	bf54      	ite	pl
 80166a8:	f002 020f 	andpl.w	r2, r2, #15
 80166ac:	1112      	asrmi	r2, r2, #4
 80166ae:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80166b2:	b2d2      	uxtb	r2, r2
 80166b4:	b1e2      	cbz	r2, 80166f0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80166b6:	9d04      	ldr	r5, [sp, #16]
 80166b8:	436a      	muls	r2, r5
 80166ba:	1c55      	adds	r5, r2, #1
 80166bc:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80166c0:	4d6e      	ldr	r5, [pc, #440]	; (801687c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80166c2:	682d      	ldr	r5, [r5, #0]
 80166c4:	1212      	asrs	r2, r2, #8
 80166c6:	0a2e      	lsrs	r6, r5, #8
 80166c8:	2aff      	cmp	r2, #255	; 0xff
 80166ca:	9605      	str	r6, [sp, #20]
 80166cc:	d116      	bne.n	80166fc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80166ce:	f06f 0201 	mvn.w	r2, #1
 80166d2:	fb02 fc07 	mul.w	ip, r2, r7
 80166d6:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 80166da:	096a      	lsrs	r2, r5, #5
 80166dc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80166e0:	f026 0607 	bic.w	r6, r6, #7
 80166e4:	4316      	orrs	r6, r2
 80166e6:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80166ea:	432e      	orrs	r6, r5
 80166ec:	f824 600c 	strh.w	r6, [r4, ip]
 80166f0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80166f2:	4410      	add	r0, r2
 80166f4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80166f6:	3f01      	subs	r7, #1
 80166f8:	4411      	add	r1, r2
 80166fa:	e77f      	b.n	80165fc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 80166fc:	f06f 0601 	mvn.w	r6, #1
 8016700:	437e      	muls	r6, r7
 8016702:	fa1f fa82 	uxth.w	sl, r2
 8016706:	f834 8006 	ldrh.w	r8, [r4, r6]
 801670a:	9602      	str	r6, [sp, #8]
 801670c:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8016710:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8016714:	43d2      	mvns	r2, r2
 8016716:	b2d2      	uxtb	r2, r2
 8016718:	fb1c fc0a 	smulbb	ip, ip, sl
 801671c:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8016720:	fb0e ce02 	mla	lr, lr, r2, ip
 8016724:	b2ed      	uxtb	r5, r5
 8016726:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801672a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801672e:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8016732:	fa5f f888 	uxtb.w	r8, r8
 8016736:	fb15 f50a 	smulbb	r5, r5, sl
 801673a:	fb08 5502 	mla	r5, r8, r2, r5
 801673e:	fa1f fe8e 	uxth.w	lr, lr
 8016742:	fb16 f60a 	smulbb	r6, r6, sl
 8016746:	b2ad      	uxth	r5, r5
 8016748:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801674c:	fb0c 6c02 	mla	ip, ip, r2, r6
 8016750:	f10e 0201 	add.w	r2, lr, #1
 8016754:	1c6e      	adds	r6, r5, #1
 8016756:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801675a:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801675e:	fa1f fc8c 	uxth.w	ip, ip
 8016762:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016766:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801676a:	ea46 0e0e 	orr.w	lr, r6, lr
 801676e:	f10c 0601 	add.w	r6, ip, #1
 8016772:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8016776:	0976      	lsrs	r6, r6, #5
 8016778:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801677c:	9a02      	ldr	r2, [sp, #8]
 801677e:	ea4e 0e06 	orr.w	lr, lr, r6
 8016782:	f824 e002 	strh.w	lr, [r4, r2]
 8016786:	e7b3      	b.n	80166f0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016788:	f04f 0800 	mov.w	r8, #0
 801678c:	eba3 0208 	sub.w	r2, r3, r8
 8016790:	2a00      	cmp	r2, #0
 8016792:	f77f af36 	ble.w	8016602 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8016796:	9e00      	ldr	r6, [sp, #0]
 8016798:	1402      	asrs	r2, r0, #16
 801679a:	140d      	asrs	r5, r1, #16
 801679c:	fb06 2505 	mla	r5, r6, r5, r2
 80167a0:	086a      	lsrs	r2, r5, #1
 80167a2:	9e01      	ldr	r6, [sp, #4]
 80167a4:	5cb2      	ldrb	r2, [r6, r2]
 80167a6:	07ed      	lsls	r5, r5, #31
 80167a8:	bf54      	ite	pl
 80167aa:	f002 020f 	andpl.w	r2, r2, #15
 80167ae:	1112      	asrmi	r2, r2, #4
 80167b0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80167b4:	b2d2      	uxtb	r2, r2
 80167b6:	b1c2      	cbz	r2, 80167ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 80167b8:	9d04      	ldr	r5, [sp, #16]
 80167ba:	436a      	muls	r2, r5
 80167bc:	1c55      	adds	r5, r2, #1
 80167be:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80167c2:	4d2e      	ldr	r5, [pc, #184]	; (801687c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80167c4:	1212      	asrs	r2, r2, #8
 80167c6:	682e      	ldr	r6, [r5, #0]
 80167c8:	2aff      	cmp	r2, #255	; 0xff
 80167ca:	ea4f 2516 	mov.w	r5, r6, lsr #8
 80167ce:	d113      	bne.n	80167f8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 80167d0:	0972      	lsrs	r2, r6, #5
 80167d2:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 80167d6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80167da:	f025 0507 	bic.w	r5, r5, #7
 80167de:	4315      	orrs	r5, r2
 80167e0:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80167e4:	4335      	orrs	r5, r6
 80167e6:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 80167ea:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80167ec:	4410      	add	r0, r2
 80167ee:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80167f0:	f108 0801 	add.w	r8, r8, #1
 80167f4:	4411      	add	r1, r2
 80167f6:	e7c9      	b.n	801678c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80167f8:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80167fc:	fa1f fa82 	uxth.w	sl, r2
 8016800:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8016804:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8016808:	43d2      	mvns	r2, r2
 801680a:	b2d2      	uxtb	r2, r2
 801680c:	fb17 f70a 	smulbb	r7, r7, sl
 8016810:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016814:	fb0c 7c02 	mla	ip, ip, r2, r7
 8016818:	b2f6      	uxtb	r6, r6
 801681a:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801681e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016822:	fa5f fe8e 	uxtb.w	lr, lr
 8016826:	fb16 f60a 	smulbb	r6, r6, sl
 801682a:	fb0e 6602 	mla	r6, lr, r2, r6
 801682e:	b2ed      	uxtb	r5, r5
 8016830:	fa1f fc8c 	uxth.w	ip, ip
 8016834:	fb15 f50a 	smulbb	r5, r5, sl
 8016838:	b2b6      	uxth	r6, r6
 801683a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801683e:	fb07 5702 	mla	r7, r7, r2, r5
 8016842:	f10c 0201 	add.w	r2, ip, #1
 8016846:	1c75      	adds	r5, r6, #1
 8016848:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801684c:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8016850:	b2bf      	uxth	r7, r7
 8016852:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8016856:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801685a:	ea45 0c0c 	orr.w	ip, r5, ip
 801685e:	1c7d      	adds	r5, r7, #1
 8016860:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8016864:	096d      	lsrs	r5, r5, #5
 8016866:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801686a:	ea4c 0c05 	orr.w	ip, ip, r5
 801686e:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8016872:	e7ba      	b.n	80167ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8016874:	b007      	add	sp, #28
 8016876:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801687a:	bf00      	nop
 801687c:	20015498 	.word	0x20015498

08016880 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016880:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016884:	b087      	sub	sp, #28
 8016886:	f8df 830c 	ldr.w	r8, [pc, #780]	; 8016b94 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801688a:	9815      	ldr	r0, [sp, #84]	; 0x54
 801688c:	9205      	str	r2, [sp, #20]
 801688e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8016892:	9101      	str	r1, [sp, #4]
 8016894:	6841      	ldr	r1, [r0, #4]
 8016896:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801689a:	fb01 2404 	mla	r4, r1, r4, r2
 801689e:	6802      	ldr	r2, [r0, #0]
 80168a0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80168a4:	f8db 2008 	ldr.w	r2, [fp, #8]
 80168a8:	3201      	adds	r2, #1
 80168aa:	f022 0201 	bic.w	r2, r2, #1
 80168ae:	9202      	str	r2, [sp, #8]
 80168b0:	f8db 2000 	ldr.w	r2, [fp]
 80168b4:	9203      	str	r2, [sp, #12]
 80168b6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80168ba:	9a01      	ldr	r2, [sp, #4]
 80168bc:	2a00      	cmp	r2, #0
 80168be:	dc03      	bgt.n	80168c8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80168c0:	9a05      	ldr	r2, [sp, #20]
 80168c2:	2a00      	cmp	r2, #0
 80168c4:	f340 8162 	ble.w	8016b8c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80168c8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80168ca:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 80168ce:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 80168d2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80168d6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80168d8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80168dc:	2b00      	cmp	r3, #0
 80168de:	dd0e      	ble.n	80168fe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80168e0:	1402      	asrs	r2, r0, #16
 80168e2:	d405      	bmi.n	80168f0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80168e4:	42ba      	cmp	r2, r7
 80168e6:	da03      	bge.n	80168f0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80168e8:	140a      	asrs	r2, r1, #16
 80168ea:	d401      	bmi.n	80168f0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80168ec:	42b2      	cmp	r2, r6
 80168ee:	db07      	blt.n	8016900 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80168f0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80168f2:	4410      	add	r0, r2
 80168f4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80168f6:	3b01      	subs	r3, #1
 80168f8:	4411      	add	r1, r2
 80168fa:	3402      	adds	r4, #2
 80168fc:	e7ee      	b.n	80168dc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80168fe:	d017      	beq.n	8016930 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8016900:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8016902:	1e5a      	subs	r2, r3, #1
 8016904:	fb05 0502 	mla	r5, r5, r2, r0
 8016908:	142d      	asrs	r5, r5, #16
 801690a:	d409      	bmi.n	8016920 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801690c:	42bd      	cmp	r5, r7
 801690e:	da07      	bge.n	8016920 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016910:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8016912:	fb05 1202 	mla	r2, r5, r2, r1
 8016916:	1412      	asrs	r2, r2, #16
 8016918:	d402      	bmi.n	8016920 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801691a:	42b2      	cmp	r2, r6
 801691c:	f2c0 80c3 	blt.w	8016aa6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8016920:	2500      	movs	r5, #0
 8016922:	195a      	adds	r2, r3, r5
 8016924:	2a00      	cmp	r2, #0
 8016926:	dc3f      	bgt.n	80169a8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8016928:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801692c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016930:	9b01      	ldr	r3, [sp, #4]
 8016932:	2b00      	cmp	r3, #0
 8016934:	f340 812a 	ble.w	8016b8c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8016938:	ee30 0a04 	vadd.f32	s0, s0, s8
 801693c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016940:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016944:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016946:	ee31 1a05 	vadd.f32	s2, s2, s10
 801694a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801694e:	eeb0 6a62 	vmov.f32	s12, s5
 8016952:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016956:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801695a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801695e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016962:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016966:	eeb0 6a43 	vmov.f32	s12, s6
 801696a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801696e:	ee12 2a90 	vmov	r2, s5
 8016972:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016976:	fb92 f3f3 	sdiv	r3, r2, r3
 801697a:	ee13 2a10 	vmov	r2, s6
 801697e:	9313      	str	r3, [sp, #76]	; 0x4c
 8016980:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016982:	fb92 f3f3 	sdiv	r3, r2, r3
 8016986:	9314      	str	r3, [sp, #80]	; 0x50
 8016988:	9b01      	ldr	r3, [sp, #4]
 801698a:	9a05      	ldr	r2, [sp, #20]
 801698c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016990:	3b01      	subs	r3, #1
 8016992:	9301      	str	r3, [sp, #4]
 8016994:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8016998:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801699a:	eeb0 3a67 	vmov.f32	s6, s15
 801699e:	bf08      	it	eq
 80169a0:	4613      	moveq	r3, r2
 80169a2:	eef0 2a47 	vmov.f32	s5, s14
 80169a6:	e788      	b.n	80168ba <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80169a8:	1406      	asrs	r6, r0, #16
 80169aa:	d42c      	bmi.n	8016a06 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80169ac:	f8db 2008 	ldr.w	r2, [fp, #8]
 80169b0:	42b2      	cmp	r2, r6
 80169b2:	dd28      	ble.n	8016a06 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80169b4:	140f      	asrs	r7, r1, #16
 80169b6:	d426      	bmi.n	8016a06 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80169b8:	f8db 200c 	ldr.w	r2, [fp, #12]
 80169bc:	42ba      	cmp	r2, r7
 80169be:	dd22      	ble.n	8016a06 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80169c0:	9a02      	ldr	r2, [sp, #8]
 80169c2:	fb07 6602 	mla	r6, r7, r2, r6
 80169c6:	0872      	lsrs	r2, r6, #1
 80169c8:	9f03      	ldr	r7, [sp, #12]
 80169ca:	5cba      	ldrb	r2, [r7, r2]
 80169cc:	07f6      	lsls	r6, r6, #31
 80169ce:	bf54      	ite	pl
 80169d0:	f002 020f 	andpl.w	r2, r2, #15
 80169d4:	1112      	asrmi	r2, r2, #4
 80169d6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80169da:	b2d2      	uxtb	r2, r2
 80169dc:	2aff      	cmp	r2, #255	; 0xff
 80169de:	d118      	bne.n	8016a12 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 80169e0:	f8d8 2000 	ldr.w	r2, [r8]
 80169e4:	f06f 0601 	mvn.w	r6, #1
 80169e8:	fb06 f705 	mul.w	r7, r6, r5
 80169ec:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 80169f0:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 80169f4:	0956      	lsrs	r6, r2, #5
 80169f6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80169fa:	ea4c 0606 	orr.w	r6, ip, r6
 80169fe:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8016a02:	4316      	orrs	r6, r2
 8016a04:	53e6      	strh	r6, [r4, r7]
 8016a06:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016a08:	4410      	add	r0, r2
 8016a0a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016a0c:	3d01      	subs	r5, #1
 8016a0e:	4411      	add	r1, r2
 8016a10:	e787      	b.n	8016922 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8016a12:	2a00      	cmp	r2, #0
 8016a14:	d0f7      	beq.n	8016a06 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016a16:	f06f 0601 	mvn.w	r6, #1
 8016a1a:	436e      	muls	r6, r5
 8016a1c:	f8d8 c000 	ldr.w	ip, [r8]
 8016a20:	f834 e006 	ldrh.w	lr, [r4, r6]
 8016a24:	9604      	str	r6, [sp, #16]
 8016a26:	fa1f f982 	uxth.w	r9, r2
 8016a2a:	ea4f 272e 	mov.w	r7, lr, asr #8
 8016a2e:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8016a32:	43d2      	mvns	r2, r2
 8016a34:	b2d2      	uxtb	r2, r2
 8016a36:	fb16 f609 	smulbb	r6, r6, r9
 8016a3a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016a3e:	fb07 6702 	mla	r7, r7, r2, r6
 8016a42:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8016a46:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8016a4a:	fa5f fc8c 	uxtb.w	ip, ip
 8016a4e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016a52:	fa5f fe8e 	uxtb.w	lr, lr
 8016a56:	fb1c fc09 	smulbb	ip, ip, r9
 8016a5a:	fb0e cc02 	mla	ip, lr, r2, ip
 8016a5e:	b2bf      	uxth	r7, r7
 8016a60:	fb1a fa09 	smulbb	sl, sl, r9
 8016a64:	fa1f fc8c 	uxth.w	ip, ip
 8016a68:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016a6c:	fb06 a602 	mla	r6, r6, r2, sl
 8016a70:	1c7a      	adds	r2, r7, #1
 8016a72:	f10c 0a01 	add.w	sl, ip, #1
 8016a76:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8016a7a:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8016a7e:	b2b6      	uxth	r6, r6
 8016a80:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016a84:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016a88:	ea4a 0707 	orr.w	r7, sl, r7
 8016a8c:	f106 0a01 	add.w	sl, r6, #1
 8016a90:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016a94:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016a98:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016a9c:	9a04      	ldr	r2, [sp, #16]
 8016a9e:	ea47 070a 	orr.w	r7, r7, sl
 8016aa2:	52a7      	strh	r7, [r4, r2]
 8016aa4:	e7af      	b.n	8016a06 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016aa6:	f04f 0e00 	mov.w	lr, #0
 8016aaa:	eba3 020e 	sub.w	r2, r3, lr
 8016aae:	2a00      	cmp	r2, #0
 8016ab0:	f77f af3a 	ble.w	8016928 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8016ab4:	9e02      	ldr	r6, [sp, #8]
 8016ab6:	1402      	asrs	r2, r0, #16
 8016ab8:	140d      	asrs	r5, r1, #16
 8016aba:	fb06 2505 	mla	r5, r6, r5, r2
 8016abe:	086a      	lsrs	r2, r5, #1
 8016ac0:	9e03      	ldr	r6, [sp, #12]
 8016ac2:	5cb2      	ldrb	r2, [r6, r2]
 8016ac4:	07ed      	lsls	r5, r5, #31
 8016ac6:	bf54      	ite	pl
 8016ac8:	f002 020f 	andpl.w	r2, r2, #15
 8016acc:	1112      	asrmi	r2, r2, #4
 8016ace:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016ad2:	b2d2      	uxtb	r2, r2
 8016ad4:	2aff      	cmp	r2, #255	; 0xff
 8016ad6:	d115      	bne.n	8016b04 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8016ad8:	f8d8 5000 	ldr.w	r5, [r8]
 8016adc:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 8016ae0:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8016ae4:	096a      	lsrs	r2, r5, #5
 8016ae6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016aea:	4332      	orrs	r2, r6
 8016aec:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8016af0:	432a      	orrs	r2, r5
 8016af2:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8016af6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016af8:	4410      	add	r0, r2
 8016afa:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016afc:	f10e 0e01 	add.w	lr, lr, #1
 8016b00:	4411      	add	r1, r2
 8016b02:	e7d2      	b.n	8016aaa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8016b04:	2a00      	cmp	r2, #0
 8016b06:	d0f6      	beq.n	8016af6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8016b08:	f8d8 7000 	ldr.w	r7, [r8]
 8016b0c:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8016b10:	fa1f f982 	uxth.w	r9, r2
 8016b14:	ea4f 262c 	mov.w	r6, ip, asr #8
 8016b18:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8016b1c:	43d2      	mvns	r2, r2
 8016b1e:	b2d2      	uxtb	r2, r2
 8016b20:	fb15 f509 	smulbb	r5, r5, r9
 8016b24:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8016b28:	fb06 5602 	mla	r6, r6, r2, r5
 8016b2c:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8016b30:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8016b34:	b2ff      	uxtb	r7, r7
 8016b36:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016b3a:	fa5f fc8c 	uxtb.w	ip, ip
 8016b3e:	fb17 f709 	smulbb	r7, r7, r9
 8016b42:	fb0c 7702 	mla	r7, ip, r2, r7
 8016b46:	b2b6      	uxth	r6, r6
 8016b48:	fb1a fa09 	smulbb	sl, sl, r9
 8016b4c:	b2bf      	uxth	r7, r7
 8016b4e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8016b52:	fb05 a502 	mla	r5, r5, r2, sl
 8016b56:	1c72      	adds	r2, r6, #1
 8016b58:	f107 0a01 	add.w	sl, r7, #1
 8016b5c:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8016b60:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8016b64:	b2ad      	uxth	r5, r5
 8016b66:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016b6a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8016b6e:	ea4a 0606 	orr.w	r6, sl, r6
 8016b72:	f105 0a01 	add.w	sl, r5, #1
 8016b76:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016b7a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016b7e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016b82:	ea46 060a 	orr.w	r6, r6, sl
 8016b86:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8016b8a:	e7b4      	b.n	8016af6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8016b8c:	b007      	add	sp, #28
 8016b8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016b92:	bf00      	nop
 8016b94:	20015498 	.word	0x20015498

08016b98 <_ZN8touchgfx8LCD16bppD1Ev>:
 8016b98:	4770      	bx	lr

08016b9a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8016b9a:	4770      	bx	lr

08016b9c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8016b9c:	4770      	bx	lr

08016b9e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8016b9e:	4770      	bx	lr

08016ba0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8016ba0:	4770      	bx	lr

08016ba2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016ba2:	4770      	bx	lr

08016ba4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016ba4:	4770      	bx	lr

08016ba6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016ba6:	4770      	bx	lr

08016ba8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016ba8:	4770      	bx	lr

08016baa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016baa:	4770      	bx	lr

08016bac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8016bac:	4770      	bx	lr

08016bae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016bae:	4770      	bx	lr

08016bb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016bb0:	4770      	bx	lr

08016bb2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016bb2:	4770      	bx	lr

08016bb4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8016bb4:	4770      	bx	lr

08016bb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016bb6:	4770      	bx	lr

08016bb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016bb8:	4770      	bx	lr

08016bba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016bba:	4770      	bx	lr

08016bbc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016bbc:	4770      	bx	lr

08016bbe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016bbe:	4770      	bx	lr

08016bc0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016bc0:	4770      	bx	lr

08016bc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016bc2:	4770      	bx	lr

08016bc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8016bc4:	4770      	bx	lr

08016bc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016bc6:	4770      	bx	lr

08016bc8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8016bc8:	4770      	bx	lr

08016bca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016bca:	4770      	bx	lr

08016bcc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8016bcc:	4770      	bx	lr

08016bce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016bce:	4770      	bx	lr

08016bd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8016bd0:	4770      	bx	lr

08016bd2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8016bd2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016bd6:	b088      	sub	sp, #32
 8016bd8:	ac08      	add	r4, sp, #32
 8016bda:	4606      	mov	r6, r0
 8016bdc:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8016be0:	4620      	mov	r0, r4
 8016be2:	4688      	mov	r8, r1
 8016be4:	4691      	mov	r9, r2
 8016be6:	f7fd fc65 	bl	80144b4 <_ZNK8touchgfx6Bitmap7getDataEv>
 8016bea:	6833      	ldr	r3, [r6, #0]
 8016bec:	4605      	mov	r5, r0
 8016bee:	4620      	mov	r0, r4
 8016bf0:	699f      	ldr	r7, [r3, #24]
 8016bf2:	f7fd fb73 	bl	80142dc <_ZNK8touchgfx6Bitmap8getWidthEv>
 8016bf6:	4682      	mov	sl, r0
 8016bf8:	4620      	mov	r0, r4
 8016bfa:	f7fd fba3 	bl	8014344 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8016bfe:	9500      	str	r5, [sp, #0]
 8016c00:	e9cd a001 	strd	sl, r0, [sp, #4]
 8016c04:	464b      	mov	r3, r9
 8016c06:	a806      	add	r0, sp, #24
 8016c08:	4642      	mov	r2, r8
 8016c0a:	4631      	mov	r1, r6
 8016c0c:	47b8      	blx	r7
 8016c0e:	4628      	mov	r0, r5
 8016c10:	b008      	add	sp, #32
 8016c12:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

08016c18 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8016c18:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8016c1c:	2300      	movs	r3, #0
 8016c1e:	9300      	str	r3, [sp, #0]
 8016c20:	4b3d      	ldr	r3, [pc, #244]	; (8016d18 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8016c22:	781b      	ldrb	r3, [r3, #0]
 8016c24:	2b00      	cmp	r3, #0
 8016c26:	d137      	bne.n	8016c98 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8016c28:	4a3c      	ldr	r2, [pc, #240]	; (8016d1c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8016c2a:	f9b2 2000 	ldrsh.w	r2, [r2]
 8016c2e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8016c32:	2b00      	cmp	r3, #0
 8016c34:	d132      	bne.n	8016c9c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8016c36:	4b3a      	ldr	r3, [pc, #232]	; (8016d20 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8016c38:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016c3c:	6808      	ldr	r0, [r1, #0]
 8016c3e:	6849      	ldr	r1, [r1, #4]
 8016c40:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016c44:	ac02      	add	r4, sp, #8
 8016c46:	ab02      	add	r3, sp, #8
 8016c48:	c303      	stmia	r3!, {r0, r1}
 8016c4a:	4669      	mov	r1, sp
 8016c4c:	4620      	mov	r0, r4
 8016c4e:	f7f9 ff7f 	bl	8010b50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016c52:	4668      	mov	r0, sp
 8016c54:	f7f9 ff54 	bl	8010b00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016c58:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8016c5c:	f8bd 2000 	ldrh.w	r2, [sp]
 8016c60:	4d30      	ldr	r5, [pc, #192]	; (8016d24 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8016c62:	4413      	add	r3, r2
 8016c64:	f8ad 3008 	strh.w	r3, [sp, #8]
 8016c68:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8016c6c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8016c70:	6828      	ldr	r0, [r5, #0]
 8016c72:	4413      	add	r3, r2
 8016c74:	f8ad 300a 	strh.w	r3, [sp, #10]
 8016c78:	6803      	ldr	r3, [r0, #0]
 8016c7a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016c7c:	4798      	blx	r3
 8016c7e:	f010 0f01 	tst.w	r0, #1
 8016c82:	462f      	mov	r7, r5
 8016c84:	d00c      	beq.n	8016ca0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8016c86:	6828      	ldr	r0, [r5, #0]
 8016c88:	6803      	ldr	r3, [r0, #0]
 8016c8a:	e894 0006 	ldmia.w	r4, {r1, r2}
 8016c8e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8016c90:	4798      	blx	r3
 8016c92:	b004      	add	sp, #16
 8016c94:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016c98:	4a21      	ldr	r2, [pc, #132]	; (8016d20 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8016c9a:	e7c6      	b.n	8016c2a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8016c9c:	4b1f      	ldr	r3, [pc, #124]	; (8016d1c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8016c9e:	e7cb      	b.n	8016c38 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8016ca0:	6838      	ldr	r0, [r7, #0]
 8016ca2:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8016ca6:	6803      	ldr	r3, [r0, #0]
 8016ca8:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8016cac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8016cae:	4798      	blx	r3
 8016cb0:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8016cb4:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8016cb8:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8016cbc:	fb16 3602 	smlabb	r6, r6, r2, r3
 8016cc0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8016cc4:	6838      	ldr	r0, [r7, #0]
 8016cc6:	6803      	ldr	r3, [r0, #0]
 8016cc8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016cca:	4798      	blx	r3
 8016ccc:	4a13      	ldr	r2, [pc, #76]	; (8016d1c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8016cce:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8016cd2:	8813      	ldrh	r3, [r2, #0]
 8016cd4:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8016cd8:	fb03 1404 	mla	r4, r3, r4, r1
 8016cdc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8016ce0:	435d      	muls	r5, r3
 8016ce2:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8016ce6:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8016cea:	4691      	mov	r9, r2
 8016cec:	6838      	ldr	r0, [r7, #0]
 8016cee:	42ac      	cmp	r4, r5
 8016cf0:	6803      	ldr	r3, [r0, #0]
 8016cf2:	d20e      	bcs.n	8016d12 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8016cf4:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 8016cf8:	4632      	mov	r2, r6
 8016cfa:	4643      	mov	r3, r8
 8016cfc:	4621      	mov	r1, r4
 8016cfe:	47d0      	blx	sl
 8016d00:	f8b9 3000 	ldrh.w	r3, [r9]
 8016d04:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016d08:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8016d0c:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8016d10:	e7ec      	b.n	8016cec <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8016d12:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016d14:	4798      	blx	r3
 8016d16:	e7bc      	b.n	8016c92 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8016d18:	20015480 	.word	0x20015480
 8016d1c:	20015482 	.word	0x20015482
 8016d20:	20015484 	.word	0x20015484
 8016d24:	20015488 	.word	0x20015488

08016d28 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8016d28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016d2c:	b08b      	sub	sp, #44	; 0x2c
 8016d2e:	460f      	mov	r7, r1
 8016d30:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 8016d34:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 8016d38:	4616      	mov	r6, r2
 8016d3a:	f1bb 0f00 	cmp.w	fp, #0
 8016d3e:	d049      	beq.n	8016dd4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8016d40:	6810      	ldr	r0, [r2, #0]
 8016d42:	6851      	ldr	r1, [r2, #4]
 8016d44:	ad06      	add	r5, sp, #24
 8016d46:	c503      	stmia	r5!, {r0, r1}
 8016d48:	6818      	ldr	r0, [r3, #0]
 8016d4a:	6859      	ldr	r1, [r3, #4]
 8016d4c:	ad08      	add	r5, sp, #32
 8016d4e:	c503      	stmia	r5!, {r0, r1}
 8016d50:	a806      	add	r0, sp, #24
 8016d52:	f7f9 fed5 	bl	8010b00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016d56:	4631      	mov	r1, r6
 8016d58:	a808      	add	r0, sp, #32
 8016d5a:	f7f9 fef9 	bl	8010b50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016d5e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8016d62:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8016d66:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8016d6a:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8016d6e:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8016d72:	fb16 2103 	smlabb	r1, r6, r3, r2
 8016d76:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8016d7a:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8016d7e:	4f5f      	ldr	r7, [pc, #380]	; (8016efc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8016d80:	440a      	add	r2, r1
 8016d82:	f8ad 2020 	strh.w	r2, [sp, #32]
 8016d86:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8016d8a:	6838      	ldr	r0, [r7, #0]
 8016d8c:	4413      	add	r3, r2
 8016d8e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8016d92:	6803      	ldr	r3, [r0, #0]
 8016d94:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016d96:	4798      	blx	r3
 8016d98:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8016d9c:	46b9      	mov	r9, r7
 8016d9e:	d01c      	beq.n	8016dda <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
 8016da0:	f010 0f04 	tst.w	r0, #4
 8016da4:	d01d      	beq.n	8016de2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8016da6:	f8d9 0000 	ldr.w	r0, [r9]
 8016daa:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8016dae:	6801      	ldr	r1, [r0, #0]
 8016db0:	f8cd b00c 	str.w	fp, [sp, #12]
 8016db4:	2700      	movs	r7, #0
 8016db6:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8016dba:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8016dbe:	9402      	str	r4, [sp, #8]
 8016dc0:	b2ad      	uxth	r5, r5
 8016dc2:	fa1f f488 	uxth.w	r4, r8
 8016dc6:	9501      	str	r5, [sp, #4]
 8016dc8:	9400      	str	r4, [sp, #0]
 8016dca:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 8016dcc:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8016dd0:	4631      	mov	r1, r6
 8016dd2:	47a0      	blx	r4
 8016dd4:	b00b      	add	sp, #44	; 0x2c
 8016dd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016dda:	b914      	cbnz	r4, 8016de2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8016ddc:	f010 0f01 	tst.w	r0, #1
 8016de0:	e7e0      	b.n	8016da4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 8016de2:	f8d9 0000 	ldr.w	r0, [r9]
 8016de6:	6803      	ldr	r3, [r0, #0]
 8016de8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016dea:	4798      	blx	r3
 8016dec:	4b44      	ldr	r3, [pc, #272]	; (8016f00 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8016dee:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 8016df2:	881a      	ldrh	r2, [r3, #0]
 8016df4:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8016df8:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8016dfc:	fb02 1404 	mla	r4, r2, r4, r1
 8016e00:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8016e04:	469a      	mov	sl, r3
 8016e06:	fb05 f502 	mul.w	r5, r5, r2
 8016e0a:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8016e0e:	d059      	beq.n	8016ec4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8016e10:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 8016e14:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8016e18:	fa1f f28b 	uxth.w	r2, fp
 8016e1c:	fa1f f989 	uxth.w	r9, r9
 8016e20:	469e      	mov	lr, r3
 8016e22:	42ac      	cmp	r4, r5
 8016e24:	d264      	bcs.n	8016ef0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8016e26:	eb04 0a07 	add.w	sl, r4, r7
 8016e2a:	4554      	cmp	r4, sl
 8016e2c:	d23d      	bcs.n	8016eaa <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8016e2e:	8821      	ldrh	r1, [r4, #0]
 8016e30:	f836 3b02 	ldrh.w	r3, [r6], #2
 8016e34:	1208      	asrs	r0, r1, #8
 8016e36:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8016e3a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016e3e:	fb10 f009 	smulbb	r0, r0, r9
 8016e42:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8016e46:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016e4a:	00c9      	lsls	r1, r1, #3
 8016e4c:	fb0c 0c02 	mla	ip, ip, r2, r0
 8016e50:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8016e54:	10d8      	asrs	r0, r3, #3
 8016e56:	b2c9      	uxtb	r1, r1
 8016e58:	00db      	lsls	r3, r3, #3
 8016e5a:	fa1f fc8c 	uxth.w	ip, ip
 8016e5e:	fb1b fb09 	smulbb	fp, fp, r9
 8016e62:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8016e66:	b2db      	uxtb	r3, r3
 8016e68:	fb11 f109 	smulbb	r1, r1, r9
 8016e6c:	fb00 b002 	mla	r0, r0, r2, fp
 8016e70:	fb03 1302 	mla	r3, r3, r2, r1
 8016e74:	f10c 0b01 	add.w	fp, ip, #1
 8016e78:	b29b      	uxth	r3, r3
 8016e7a:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8016e7e:	b280      	uxth	r0, r0
 8016e80:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8016e84:	f103 0c01 	add.w	ip, r3, #1
 8016e88:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8016e8c:	1c43      	adds	r3, r0, #1
 8016e8e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8016e92:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8016e96:	0940      	lsrs	r0, r0, #5
 8016e98:	ea4c 0c0b 	orr.w	ip, ip, fp
 8016e9c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016ea0:	ea4c 0c00 	orr.w	ip, ip, r0
 8016ea4:	f824 cb02 	strh.w	ip, [r4], #2
 8016ea8:	e7bf      	b.n	8016e2a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 8016eaa:	f8be 3000 	ldrh.w	r3, [lr]
 8016eae:	eba3 0308 	sub.w	r3, r3, r8
 8016eb2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016eb6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8016eba:	eba3 0308 	sub.w	r3, r3, r8
 8016ebe:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8016ec2:	e7ae      	b.n	8016e22 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8016ec4:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8016ec8:	f8d9 0000 	ldr.w	r0, [r9]
 8016ecc:	42ac      	cmp	r4, r5
 8016ece:	6803      	ldr	r3, [r0, #0]
 8016ed0:	d20e      	bcs.n	8016ef0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8016ed2:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 8016ed6:	4632      	mov	r2, r6
 8016ed8:	463b      	mov	r3, r7
 8016eda:	4621      	mov	r1, r4
 8016edc:	47c0      	blx	r8
 8016ede:	f8ba 3000 	ldrh.w	r3, [sl]
 8016ee2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016ee6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8016eea:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8016eee:	e7eb      	b.n	8016ec8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8016ef0:	4b02      	ldr	r3, [pc, #8]	; (8016efc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8016ef2:	6818      	ldr	r0, [r3, #0]
 8016ef4:	6803      	ldr	r3, [r0, #0]
 8016ef6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016ef8:	4798      	blx	r3
 8016efa:	e76b      	b.n	8016dd4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8016efc:	20015488 	.word	0x20015488
 8016f00:	20015482 	.word	0x20015482

08016f04 <_ZN8touchgfx8LCD16bppD0Ev>:
 8016f04:	b510      	push	{r4, lr}
 8016f06:	2178      	movs	r1, #120	; 0x78
 8016f08:	4604      	mov	r4, r0
 8016f0a:	f009 fad3 	bl	80204b4 <_ZdlPvj>
 8016f0e:	4620      	mov	r0, r4
 8016f10:	bd10      	pop	{r4, pc}

08016f12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8016f12:	b510      	push	{r4, lr}
 8016f14:	2104      	movs	r1, #4
 8016f16:	4604      	mov	r4, r0
 8016f18:	f009 facc 	bl	80204b4 <_ZdlPvj>
 8016f1c:	4620      	mov	r0, r4
 8016f1e:	bd10      	pop	{r4, pc}

08016f20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8016f20:	b510      	push	{r4, lr}
 8016f22:	2104      	movs	r1, #4
 8016f24:	4604      	mov	r4, r0
 8016f26:	f009 fac5 	bl	80204b4 <_ZdlPvj>
 8016f2a:	4620      	mov	r0, r4
 8016f2c:	bd10      	pop	{r4, pc}

08016f2e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8016f2e:	b510      	push	{r4, lr}
 8016f30:	2104      	movs	r1, #4
 8016f32:	4604      	mov	r4, r0
 8016f34:	f009 fabe 	bl	80204b4 <_ZdlPvj>
 8016f38:	4620      	mov	r0, r4
 8016f3a:	bd10      	pop	{r4, pc}

08016f3c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8016f3c:	b510      	push	{r4, lr}
 8016f3e:	2104      	movs	r1, #4
 8016f40:	4604      	mov	r4, r0
 8016f42:	f009 fab7 	bl	80204b4 <_ZdlPvj>
 8016f46:	4620      	mov	r0, r4
 8016f48:	bd10      	pop	{r4, pc}

08016f4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8016f4a:	b510      	push	{r4, lr}
 8016f4c:	2104      	movs	r1, #4
 8016f4e:	4604      	mov	r4, r0
 8016f50:	f009 fab0 	bl	80204b4 <_ZdlPvj>
 8016f54:	4620      	mov	r0, r4
 8016f56:	bd10      	pop	{r4, pc}

08016f58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8016f58:	b510      	push	{r4, lr}
 8016f5a:	2104      	movs	r1, #4
 8016f5c:	4604      	mov	r4, r0
 8016f5e:	f009 faa9 	bl	80204b4 <_ZdlPvj>
 8016f62:	4620      	mov	r0, r4
 8016f64:	bd10      	pop	{r4, pc}

08016f66 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8016f66:	b510      	push	{r4, lr}
 8016f68:	2104      	movs	r1, #4
 8016f6a:	4604      	mov	r4, r0
 8016f6c:	f009 faa2 	bl	80204b4 <_ZdlPvj>
 8016f70:	4620      	mov	r0, r4
 8016f72:	bd10      	pop	{r4, pc}

08016f74 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8016f74:	b510      	push	{r4, lr}
 8016f76:	2104      	movs	r1, #4
 8016f78:	4604      	mov	r4, r0
 8016f7a:	f009 fa9b 	bl	80204b4 <_ZdlPvj>
 8016f7e:	4620      	mov	r0, r4
 8016f80:	bd10      	pop	{r4, pc}

08016f82 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8016f82:	b510      	push	{r4, lr}
 8016f84:	2104      	movs	r1, #4
 8016f86:	4604      	mov	r4, r0
 8016f88:	f009 fa94 	bl	80204b4 <_ZdlPvj>
 8016f8c:	4620      	mov	r0, r4
 8016f8e:	bd10      	pop	{r4, pc}

08016f90 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8016f90:	b510      	push	{r4, lr}
 8016f92:	2104      	movs	r1, #4
 8016f94:	4604      	mov	r4, r0
 8016f96:	f009 fa8d 	bl	80204b4 <_ZdlPvj>
 8016f9a:	4620      	mov	r0, r4
 8016f9c:	bd10      	pop	{r4, pc}

08016f9e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8016f9e:	b510      	push	{r4, lr}
 8016fa0:	2104      	movs	r1, #4
 8016fa2:	4604      	mov	r4, r0
 8016fa4:	f009 fa86 	bl	80204b4 <_ZdlPvj>
 8016fa8:	4620      	mov	r0, r4
 8016faa:	bd10      	pop	{r4, pc}

08016fac <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8016fac:	b510      	push	{r4, lr}
 8016fae:	2104      	movs	r1, #4
 8016fb0:	4604      	mov	r4, r0
 8016fb2:	f009 fa7f 	bl	80204b4 <_ZdlPvj>
 8016fb6:	4620      	mov	r0, r4
 8016fb8:	bd10      	pop	{r4, pc}

08016fba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8016fba:	b510      	push	{r4, lr}
 8016fbc:	2104      	movs	r1, #4
 8016fbe:	4604      	mov	r4, r0
 8016fc0:	f009 fa78 	bl	80204b4 <_ZdlPvj>
 8016fc4:	4620      	mov	r0, r4
 8016fc6:	bd10      	pop	{r4, pc}

08016fc8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8016fc8:	b510      	push	{r4, lr}
 8016fca:	2104      	movs	r1, #4
 8016fcc:	4604      	mov	r4, r0
 8016fce:	f009 fa71 	bl	80204b4 <_ZdlPvj>
 8016fd2:	4620      	mov	r0, r4
 8016fd4:	bd10      	pop	{r4, pc}

08016fd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8016fd6:	b510      	push	{r4, lr}
 8016fd8:	2104      	movs	r1, #4
 8016fda:	4604      	mov	r4, r0
 8016fdc:	f009 fa6a 	bl	80204b4 <_ZdlPvj>
 8016fe0:	4620      	mov	r0, r4
 8016fe2:	bd10      	pop	{r4, pc}

08016fe4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8016fe4:	b510      	push	{r4, lr}
 8016fe6:	2104      	movs	r1, #4
 8016fe8:	4604      	mov	r4, r0
 8016fea:	f009 fa63 	bl	80204b4 <_ZdlPvj>
 8016fee:	4620      	mov	r0, r4
 8016ff0:	bd10      	pop	{r4, pc}

08016ff2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8016ff2:	b510      	push	{r4, lr}
 8016ff4:	2104      	movs	r1, #4
 8016ff6:	4604      	mov	r4, r0
 8016ff8:	f009 fa5c 	bl	80204b4 <_ZdlPvj>
 8016ffc:	4620      	mov	r0, r4
 8016ffe:	bd10      	pop	{r4, pc}

08017000 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8017000:	b510      	push	{r4, lr}
 8017002:	2104      	movs	r1, #4
 8017004:	4604      	mov	r4, r0
 8017006:	f009 fa55 	bl	80204b4 <_ZdlPvj>
 801700a:	4620      	mov	r0, r4
 801700c:	bd10      	pop	{r4, pc}

0801700e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801700e:	b510      	push	{r4, lr}
 8017010:	2104      	movs	r1, #4
 8017012:	4604      	mov	r4, r0
 8017014:	f009 fa4e 	bl	80204b4 <_ZdlPvj>
 8017018:	4620      	mov	r0, r4
 801701a:	bd10      	pop	{r4, pc}

0801701c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801701c:	b510      	push	{r4, lr}
 801701e:	2104      	movs	r1, #4
 8017020:	4604      	mov	r4, r0
 8017022:	f009 fa47 	bl	80204b4 <_ZdlPvj>
 8017026:	4620      	mov	r0, r4
 8017028:	bd10      	pop	{r4, pc}

0801702a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801702a:	b510      	push	{r4, lr}
 801702c:	2104      	movs	r1, #4
 801702e:	4604      	mov	r4, r0
 8017030:	f009 fa40 	bl	80204b4 <_ZdlPvj>
 8017034:	4620      	mov	r0, r4
 8017036:	bd10      	pop	{r4, pc}

08017038 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8017038:	b510      	push	{r4, lr}
 801703a:	2104      	movs	r1, #4
 801703c:	4604      	mov	r4, r0
 801703e:	f009 fa39 	bl	80204b4 <_ZdlPvj>
 8017042:	4620      	mov	r0, r4
 8017044:	bd10      	pop	{r4, pc}

08017046 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8017046:	b510      	push	{r4, lr}
 8017048:	2104      	movs	r1, #4
 801704a:	4604      	mov	r4, r0
 801704c:	f009 fa32 	bl	80204b4 <_ZdlPvj>
 8017050:	4620      	mov	r0, r4
 8017052:	bd10      	pop	{r4, pc}

08017054 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8017054:	b510      	push	{r4, lr}
 8017056:	2104      	movs	r1, #4
 8017058:	4604      	mov	r4, r0
 801705a:	f009 fa2b 	bl	80204b4 <_ZdlPvj>
 801705e:	4620      	mov	r0, r4
 8017060:	bd10      	pop	{r4, pc}

08017062 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8017062:	b510      	push	{r4, lr}
 8017064:	2104      	movs	r1, #4
 8017066:	4604      	mov	r4, r0
 8017068:	f009 fa24 	bl	80204b4 <_ZdlPvj>
 801706c:	4620      	mov	r0, r4
 801706e:	bd10      	pop	{r4, pc}

08017070 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8017070:	b510      	push	{r4, lr}
 8017072:	2104      	movs	r1, #4
 8017074:	4604      	mov	r4, r0
 8017076:	f009 fa1d 	bl	80204b4 <_ZdlPvj>
 801707a:	4620      	mov	r0, r4
 801707c:	bd10      	pop	{r4, pc}

0801707e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801707e:	b510      	push	{r4, lr}
 8017080:	2104      	movs	r1, #4
 8017082:	4604      	mov	r4, r0
 8017084:	f009 fa16 	bl	80204b4 <_ZdlPvj>
 8017088:	4620      	mov	r0, r4
 801708a:	bd10      	pop	{r4, pc}

0801708c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801708c:	b510      	push	{r4, lr}
 801708e:	2104      	movs	r1, #4
 8017090:	4604      	mov	r4, r0
 8017092:	f009 fa0f 	bl	80204b4 <_ZdlPvj>
 8017096:	4620      	mov	r0, r4
 8017098:	bd10      	pop	{r4, pc}
	...

0801709c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801709c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80170a0:	b091      	sub	sp, #68	; 0x44
 80170a2:	469b      	mov	fp, r3
 80170a4:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 80170a8:	4616      	mov	r6, r2
 80170aa:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 80170ae:	f9b3 2000 	ldrsh.w	r2, [r3]
 80170b2:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 80170b6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80170ba:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80170be:	4604      	mov	r4, r0
 80170c0:	460d      	mov	r5, r1
 80170c2:	4640      	mov	r0, r8
 80170c4:	4659      	mov	r1, fp
 80170c6:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80170ca:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 80170ce:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 80170d2:	f7f3 fd33 	bl	800ab3c <_ZN8touchgfx4RectaNERKS0_>
 80170d6:	4631      	mov	r1, r6
 80170d8:	4640      	mov	r0, r8
 80170da:	f7f3 fd2f 	bl	800ab3c <_ZN8touchgfx4RectaNERKS0_>
 80170de:	4b74      	ldr	r3, [pc, #464]	; (80172b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 80170e0:	8818      	ldrh	r0, [r3, #0]
 80170e2:	4b74      	ldr	r3, [pc, #464]	; (80172b4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 80170e4:	8819      	ldrh	r1, [r3, #0]
 80170e6:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80170ea:	2b00      	cmp	r3, #0
 80170ec:	b202      	sxth	r2, r0
 80170ee:	b20e      	sxth	r6, r1
 80170f0:	da07      	bge.n	8017102 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 80170f2:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 80170f6:	4463      	add	r3, ip
 80170f8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80170fc:	2300      	movs	r3, #0
 80170fe:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8017102:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8017106:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801710a:	1ad2      	subs	r2, r2, r3
 801710c:	4594      	cmp	ip, r2
 801710e:	bfc4      	itt	gt
 8017110:	1ac2      	subgt	r2, r0, r3
 8017112:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 8017116:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801711a:	2a00      	cmp	r2, #0
 801711c:	da07      	bge.n	801712e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801711e:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 8017122:	4462      	add	r2, ip
 8017124:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8017128:	2200      	movs	r2, #0
 801712a:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801712e:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 8017132:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 8017136:	eba6 060a 	sub.w	r6, r6, sl
 801713a:	42b2      	cmp	r2, r6
 801713c:	bfc4      	itt	gt
 801713e:	eba1 020a 	subgt.w	r2, r1, sl
 8017142:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 8017146:	4a5c      	ldr	r2, [pc, #368]	; (80172b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 8017148:	7812      	ldrb	r2, [r2, #0]
 801714a:	b9a2      	cbnz	r2, 8017176 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801714c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8017150:	4286      	cmp	r6, r0
 8017152:	4640      	mov	r0, r8
 8017154:	9303      	str	r3, [sp, #12]
 8017156:	bf14      	ite	ne
 8017158:	2600      	movne	r6, #0
 801715a:	2601      	moveq	r6, #1
 801715c:	f7f3 fd31 	bl	800abc2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017160:	9b03      	ldr	r3, [sp, #12]
 8017162:	b160      	cbz	r0, 801717e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 8017164:	2300      	movs	r3, #0
 8017166:	8023      	strh	r3, [r4, #0]
 8017168:	8063      	strh	r3, [r4, #2]
 801716a:	80a3      	strh	r3, [r4, #4]
 801716c:	4620      	mov	r0, r4
 801716e:	80e3      	strh	r3, [r4, #6]
 8017170:	b011      	add	sp, #68	; 0x44
 8017172:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017176:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801717a:	428e      	cmp	r6, r1
 801717c:	e7e9      	b.n	8017152 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801717e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8017182:	9205      	str	r2, [sp, #20]
 8017184:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 8017188:	9206      	str	r2, [sp, #24]
 801718a:	f8bb 2000 	ldrh.w	r2, [fp]
 801718e:	900e      	str	r0, [sp, #56]	; 0x38
 8017190:	1a9b      	subs	r3, r3, r2
 8017192:	b21b      	sxth	r3, r3
 8017194:	9303      	str	r3, [sp, #12]
 8017196:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801719a:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801719e:	ebaa 0a03 	sub.w	sl, sl, r3
 80171a2:	fa0f f38a 	sxth.w	r3, sl
 80171a6:	9304      	str	r3, [sp, #16]
 80171a8:	9b03      	ldr	r3, [sp, #12]
 80171aa:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80171ae:	9b04      	ldr	r3, [sp, #16]
 80171b0:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80171b4:	9b05      	ldr	r3, [sp, #20]
 80171b6:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80171ba:	a90e      	add	r1, sp, #56	; 0x38
 80171bc:	9b06      	ldr	r3, [sp, #24]
 80171be:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80171c2:	a80c      	add	r0, sp, #48	; 0x30
 80171c4:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 80171c8:	f7f9 fcc2 	bl	8010b50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80171cc:	4640      	mov	r0, r8
 80171ce:	f7f9 fc97 	bl	8010b00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80171d2:	a80e      	add	r0, sp, #56	; 0x38
 80171d4:	f7f9 fc94 	bl	8010b00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80171d8:	4b38      	ldr	r3, [pc, #224]	; (80172bc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 80171da:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 80171de:	881b      	ldrh	r3, [r3, #0]
 80171e0:	9307      	str	r3, [sp, #28]
 80171e2:	682b      	ldr	r3, [r5, #0]
 80171e4:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 80172c0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 80171e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80171ea:	4628      	mov	r0, r5
 80171ec:	4798      	blx	r3
 80171ee:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 80171f2:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 80171f6:	4681      	mov	r9, r0
 80171f8:	fb1a 3305 	smlabb	r3, sl, r5, r3
 80171fc:	f8db 0000 	ldr.w	r0, [fp]
 8017200:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8017202:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8017206:	6803      	ldr	r3, [r0, #0]
 8017208:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801720a:	4798      	blx	r3
 801720c:	4607      	mov	r7, r0
 801720e:	f8db 0000 	ldr.w	r0, [fp]
 8017212:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8017216:	6803      	ldr	r3, [r0, #0]
 8017218:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801721c:	9109      	str	r1, [sp, #36]	; 0x24
 801721e:	9208      	str	r2, [sp, #32]
 8017220:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017222:	4798      	blx	r3
 8017224:	f010 0f01 	tst.w	r0, #1
 8017228:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801722c:	d012      	beq.n	8017254 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801722e:	f8db 0000 	ldr.w	r0, [fp]
 8017232:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 8017236:	6803      	ldr	r3, [r0, #0]
 8017238:	9200      	str	r2, [sp, #0]
 801723a:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801723c:	e898 0006 	ldmia.w	r8, {r1, r2}
 8017240:	462b      	mov	r3, r5
 8017242:	47b0      	blx	r6
 8017244:	9b03      	ldr	r3, [sp, #12]
 8017246:	8023      	strh	r3, [r4, #0]
 8017248:	9b04      	ldr	r3, [sp, #16]
 801724a:	8063      	strh	r3, [r4, #2]
 801724c:	9b05      	ldr	r3, [sp, #20]
 801724e:	80a3      	strh	r3, [r4, #4]
 8017250:	9b06      	ldr	r3, [sp, #24]
 8017252:	e78b      	b.n	801716c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8017254:	fb09 f202 	mul.w	r2, r9, r2
 8017258:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801725c:	440f      	add	r7, r1
 801725e:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 8017262:	b166      	cbz	r6, 801727e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8017264:	9a07      	ldr	r2, [sp, #28]
 8017266:	4592      	cmp	sl, r2
 8017268:	d109      	bne.n	801727e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801726a:	f8db 0000 	ldr.w	r0, [fp]
 801726e:	6802      	ldr	r2, [r0, #0]
 8017270:	fb09 f303 	mul.w	r3, r9, r3
 8017274:	6b56      	ldr	r6, [r2, #52]	; 0x34
 8017276:	4629      	mov	r1, r5
 8017278:	463a      	mov	r2, r7
 801727a:	47b0      	blx	r6
 801727c:	e7e2      	b.n	8017244 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801727e:	fb0a f303 	mul.w	r3, sl, r3
 8017282:	f8df b03c 	ldr.w	fp, [pc, #60]	; 80172c0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8017286:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801728a:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801728e:	4545      	cmp	r5, r8
 8017290:	d2d8      	bcs.n	8017244 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8017292:	f8db 0000 	ldr.w	r0, [fp]
 8017296:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801729a:	6802      	ldr	r2, [r0, #0]
 801729c:	4629      	mov	r1, r5
 801729e:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 80172a2:	005b      	lsls	r3, r3, #1
 80172a4:	463a      	mov	r2, r7
 80172a6:	47d0      	blx	sl
 80172a8:	444f      	add	r7, r9
 80172aa:	4435      	add	r5, r6
 80172ac:	e7ef      	b.n	801728e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 80172ae:	bf00      	nop
 80172b0:	2001547c 	.word	0x2001547c
 80172b4:	2001547e 	.word	0x2001547e
 80172b8:	20015480 	.word	0x20015480
 80172bc:	20015482 	.word	0x20015482
 80172c0:	20015488 	.word	0x20015488

080172c4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 80172c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80172c6:	4606      	mov	r6, r0
 80172c8:	b087      	sub	sp, #28
 80172ca:	460c      	mov	r4, r1
 80172cc:	4617      	mov	r7, r2
 80172ce:	461d      	mov	r5, r3
 80172d0:	b333      	cbz	r3, 8017320 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80172d2:	4608      	mov	r0, r1
 80172d4:	f7f3 fc75 	bl	800abc2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80172d8:	bb10      	cbnz	r0, 8017320 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80172da:	6820      	ldr	r0, [r4, #0]
 80172dc:	6861      	ldr	r1, [r4, #4]
 80172de:	4c1c      	ldr	r4, [pc, #112]	; (8017350 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 80172e0:	ab04      	add	r3, sp, #16
 80172e2:	c303      	stmia	r3!, {r0, r1}
 80172e4:	a804      	add	r0, sp, #16
 80172e6:	f7f9 fc0b 	bl	8010b00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80172ea:	6820      	ldr	r0, [r4, #0]
 80172ec:	6803      	ldr	r3, [r0, #0]
 80172ee:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80172f0:	4798      	blx	r3
 80172f2:	2dff      	cmp	r5, #255	; 0xff
 80172f4:	d016      	beq.n	8017324 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 80172f6:	f010 0f08 	tst.w	r0, #8
 80172fa:	6820      	ldr	r0, [r4, #0]
 80172fc:	d015      	beq.n	801732a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 80172fe:	2400      	movs	r4, #0
 8017300:	6801      	ldr	r1, [r0, #0]
 8017302:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8017306:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801730a:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801730e:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8017312:	9401      	str	r4, [sp, #4]
 8017314:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8017318:	9400      	str	r4, [sp, #0]
 801731a:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801731c:	4639      	mov	r1, r7
 801731e:	47a0      	blx	r4
 8017320:	b007      	add	sp, #28
 8017322:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017324:	f010 0f02 	tst.w	r0, #2
 8017328:	e7e7      	b.n	80172fa <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801732a:	6803      	ldr	r3, [r0, #0]
 801732c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801732e:	4798      	blx	r3
 8017330:	4b08      	ldr	r3, [pc, #32]	; (8017354 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8017332:	881a      	ldrh	r2, [r3, #0]
 8017334:	6833      	ldr	r3, [r6, #0]
 8017336:	e9cd 7500 	strd	r7, r5, [sp]
 801733a:	4601      	mov	r1, r0
 801733c:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801733e:	4630      	mov	r0, r6
 8017340:	ab04      	add	r3, sp, #16
 8017342:	47a8      	blx	r5
 8017344:	6820      	ldr	r0, [r4, #0]
 8017346:	6803      	ldr	r3, [r0, #0]
 8017348:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801734a:	4798      	blx	r3
 801734c:	e7e8      	b.n	8017320 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801734e:	bf00      	nop
 8017350:	20015488 	.word	0x20015488
 8017354:	20015482 	.word	0x20015482

08017358 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8017358:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801735c:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 8017360:	9e08      	ldr	r6, [sp, #32]
 8017362:	4688      	mov	r8, r1
 8017364:	4614      	mov	r4, r2
 8017366:	461d      	mov	r5, r3
 8017368:	2f00      	cmp	r7, #0
 801736a:	f000 80a9 	beq.w	80174c0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801736e:	4618      	mov	r0, r3
 8017370:	f7f3 fc27 	bl	800abc2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017374:	2800      	cmp	r0, #0
 8017376:	f040 80a3 	bne.w	80174c0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801737a:	f9b5 1000 	ldrsh.w	r1, [r5]
 801737e:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8017382:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8017386:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801738a:	fb04 1303 	mla	r3, r4, r3, r1
 801738e:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8017392:	4365      	muls	r5, r4
 8017394:	2fff      	cmp	r7, #255	; 0xff
 8017396:	eba4 0200 	sub.w	r2, r4, r0
 801739a:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801739e:	ea4f 2816 	mov.w	r8, r6, lsr #8
 80173a2:	d04a      	beq.n	801743a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 80173a4:	b2bc      	uxth	r4, r7
 80173a6:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 80173aa:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 80173ae:	fa5f f788 	uxtb.w	r7, r8
 80173b2:	b2f3      	uxtb	r3, r6
 80173b4:	0040      	lsls	r0, r0, #1
 80173b6:	fb0e fe04 	mul.w	lr, lr, r4
 80173ba:	4367      	muls	r7, r4
 80173bc:	4363      	muls	r3, r4
 80173be:	ea4f 0842 	mov.w	r8, r2, lsl #1
 80173c2:	fa1f fc8c 	uxth.w	ip, ip
 80173c6:	42a9      	cmp	r1, r5
 80173c8:	d27a      	bcs.n	80174c0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80173ca:	eb01 0900 	add.w	r9, r1, r0
 80173ce:	4549      	cmp	r1, r9
 80173d0:	d231      	bcs.n	8017436 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 80173d2:	880a      	ldrh	r2, [r1, #0]
 80173d4:	1214      	asrs	r4, r2, #8
 80173d6:	10d6      	asrs	r6, r2, #3
 80173d8:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80173dc:	00d2      	lsls	r2, r2, #3
 80173de:	b2d2      	uxtb	r2, r2
 80173e0:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80173e4:	fb14 f40c 	smulbb	r4, r4, ip
 80173e8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80173ec:	4474      	add	r4, lr
 80173ee:	fb12 f20c 	smulbb	r2, r2, ip
 80173f2:	b2a4      	uxth	r4, r4
 80173f4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80173f8:	441a      	add	r2, r3
 80173fa:	b292      	uxth	r2, r2
 80173fc:	f104 0a01 	add.w	sl, r4, #1
 8017400:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8017404:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8017408:	fb16 f60c 	smulbb	r6, r6, ip
 801740c:	f102 0a01 	add.w	sl, r2, #1
 8017410:	443e      	add	r6, r7
 8017412:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8017416:	b2b6      	uxth	r6, r6
 8017418:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801741c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017420:	4322      	orrs	r2, r4
 8017422:	1c74      	adds	r4, r6, #1
 8017424:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8017428:	0976      	lsrs	r6, r6, #5
 801742a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801742e:	4332      	orrs	r2, r6
 8017430:	f821 2b02 	strh.w	r2, [r1], #2
 8017434:	e7cb      	b.n	80173ce <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 8017436:	4441      	add	r1, r8
 8017438:	e7c5      	b.n	80173c6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801743a:	4f22      	ldr	r7, [pc, #136]	; (80174c4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801743c:	0973      	lsrs	r3, r6, #5
 801743e:	ea08 0707 	and.w	r7, r8, r7
 8017442:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017446:	433b      	orrs	r3, r7
 8017448:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801744c:	4333      	orrs	r3, r6
 801744e:	07e7      	lsls	r7, r4, #31
 8017450:	b29b      	uxth	r3, r3
 8017452:	d50b      	bpl.n	801746c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8017454:	0040      	lsls	r0, r0, #1
 8017456:	0052      	lsls	r2, r2, #1
 8017458:	42a9      	cmp	r1, r5
 801745a:	d231      	bcs.n	80174c0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801745c:	180c      	adds	r4, r1, r0
 801745e:	42a1      	cmp	r1, r4
 8017460:	d202      	bcs.n	8017468 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 8017462:	f821 3b02 	strh.w	r3, [r1], #2
 8017466:	e7fa      	b.n	801745e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 8017468:	4411      	add	r1, r2
 801746a:	e7f5      	b.n	8017458 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801746c:	078e      	lsls	r6, r1, #30
 801746e:	d008      	beq.n	8017482 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8017470:	0066      	lsls	r6, r4, #1
 8017472:	460a      	mov	r2, r1
 8017474:	42aa      	cmp	r2, r5
 8017476:	d202      	bcs.n	801747e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 8017478:	8013      	strh	r3, [r2, #0]
 801747a:	4432      	add	r2, r6
 801747c:	e7fa      	b.n	8017474 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801747e:	3102      	adds	r1, #2
 8017480:	3801      	subs	r0, #1
 8017482:	07c2      	lsls	r2, r0, #31
 8017484:	d50b      	bpl.n	801749e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 8017486:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801748a:	3a01      	subs	r2, #1
 801748c:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8017490:	0066      	lsls	r6, r4, #1
 8017492:	42aa      	cmp	r2, r5
 8017494:	d202      	bcs.n	801749c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 8017496:	8013      	strh	r3, [r2, #0]
 8017498:	4432      	add	r2, r6
 801749a:	e7fa      	b.n	8017492 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801749c:	3801      	subs	r0, #1
 801749e:	b178      	cbz	r0, 80174c0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80174a0:	1040      	asrs	r0, r0, #1
 80174a2:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 80174a6:	0080      	lsls	r0, r0, #2
 80174a8:	0064      	lsls	r4, r4, #1
 80174aa:	42a9      	cmp	r1, r5
 80174ac:	d208      	bcs.n	80174c0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80174ae:	180e      	adds	r6, r1, r0
 80174b0:	460a      	mov	r2, r1
 80174b2:	42b2      	cmp	r2, r6
 80174b4:	d202      	bcs.n	80174bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 80174b6:	f842 3b04 	str.w	r3, [r2], #4
 80174ba:	e7fa      	b.n	80174b2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 80174bc:	4421      	add	r1, r4
 80174be:	e7f4      	b.n	80174aa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 80174c0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80174c4:	00fff800 	.word	0x00fff800

080174c8 <_ZN8touchgfx8LCD16bppC1Ev>:
 80174c8:	2200      	movs	r2, #0
 80174ca:	4910      	ldr	r1, [pc, #64]	; (801750c <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 80174cc:	6042      	str	r2, [r0, #4]
 80174ce:	6001      	str	r1, [r0, #0]
 80174d0:	e9c0 2202 	strd	r2, r2, [r0, #8]
 80174d4:	e9c0 2204 	strd	r2, r2, [r0, #16]
 80174d8:	e9c0 2206 	strd	r2, r2, [r0, #24]
 80174dc:	e9c0 2208 	strd	r2, r2, [r0, #32]
 80174e0:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 80174e4:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 80174e8:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 80174ec:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 80174f0:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 80174f4:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 80174f8:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 80174fc:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8017500:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8017504:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8017508:	4770      	bx	lr
 801750a:	bf00      	nop
 801750c:	080243ac 	.word	0x080243ac

08017510 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8017510:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017514:	460d      	mov	r5, r1
 8017516:	b08d      	sub	sp, #52	; 0x34
 8017518:	4604      	mov	r4, r0
 801751a:	6808      	ldr	r0, [r1, #0]
 801751c:	6849      	ldr	r1, [r1, #4]
 801751e:	4699      	mov	r9, r3
 8017520:	ab08      	add	r3, sp, #32
 8017522:	c303      	stmia	r3!, {r0, r1}
 8017524:	6810      	ldr	r0, [r2, #0]
 8017526:	6851      	ldr	r1, [r2, #4]
 8017528:	ab0a      	add	r3, sp, #40	; 0x28
 801752a:	c303      	stmia	r3!, {r0, r1}
 801752c:	a808      	add	r0, sp, #32
 801752e:	f7f9 fae7 	bl	8010b00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017532:	4629      	mov	r1, r5
 8017534:	a80a      	add	r0, sp, #40	; 0x28
 8017536:	f7f9 fb0b 	bl	8010b50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801753a:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801753e:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8017542:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8017546:	4d63      	ldr	r5, [pc, #396]	; (80176d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8017548:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801754c:	6828      	ldr	r0, [r5, #0]
 801754e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8017552:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017556:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801755a:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801755e:	440a      	add	r2, r1
 8017560:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8017564:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8017568:	4413      	add	r3, r2
 801756a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801756e:	6803      	ldr	r3, [r0, #0]
 8017570:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017572:	4798      	blx	r3
 8017574:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017578:	d119      	bne.n	80175ae <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801757a:	f010 0f20 	tst.w	r0, #32
 801757e:	6828      	ldr	r0, [r5, #0]
 8017580:	d018      	beq.n	80175b4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8017582:	2500      	movs	r5, #0
 8017584:	6801      	ldr	r1, [r0, #0]
 8017586:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801758a:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801758e:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8017592:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 8017596:	9502      	str	r5, [sp, #8]
 8017598:	b2b6      	uxth	r6, r6
 801759a:	fa1f f588 	uxth.w	r5, r8
 801759e:	9601      	str	r6, [sp, #4]
 80175a0:	9500      	str	r5, [sp, #0]
 80175a2:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 80175a4:	4621      	mov	r1, r4
 80175a6:	47a8      	blx	r5
 80175a8:	b00d      	add	sp, #52	; 0x34
 80175aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80175ae:	f010 0f40 	tst.w	r0, #64	; 0x40
 80175b2:	e7e4      	b.n	801757e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 80175b4:	6803      	ldr	r3, [r0, #0]
 80175b6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80175b8:	4798      	blx	r3
 80175ba:	4947      	ldr	r1, [pc, #284]	; (80176d8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 80175bc:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80175c0:	880b      	ldrh	r3, [r1, #0]
 80175c2:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 80175c6:	fb03 5202 	mla	r2, r3, r2, r5
 80175ca:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80175ce:	4373      	muls	r3, r6
 80175d0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80175d4:	9307      	str	r3, [sp, #28]
 80175d6:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80175da:	9306      	str	r3, [sp, #24]
 80175dc:	468a      	mov	sl, r1
 80175de:	9b07      	ldr	r3, [sp, #28]
 80175e0:	4298      	cmp	r0, r3
 80175e2:	d270      	bcs.n	80176c6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 80175e4:	9b06      	ldr	r3, [sp, #24]
 80175e6:	4621      	mov	r1, r4
 80175e8:	eb00 0b03 	add.w	fp, r0, r3
 80175ec:	4558      	cmp	r0, fp
 80175ee:	d25d      	bcs.n	80176ac <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 80175f0:	f851 4b04 	ldr.w	r4, [r1], #4
 80175f4:	0e23      	lsrs	r3, r4, #24
 80175f6:	d014      	beq.n	8017622 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 80175f8:	2bff      	cmp	r3, #255	; 0xff
 80175fa:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 80175fe:	d112      	bne.n	8017626 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8017600:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017604:	d10f      	bne.n	8017626 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8017606:	0963      	lsrs	r3, r4, #5
 8017608:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801760c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017610:	f02c 0c07 	bic.w	ip, ip, #7
 8017614:	ea43 0c0c 	orr.w	ip, r3, ip
 8017618:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801761c:	ea4c 0404 	orr.w	r4, ip, r4
 8017620:	8004      	strh	r4, [r0, #0]
 8017622:	3002      	adds	r0, #2
 8017624:	e7e2      	b.n	80175ec <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8017626:	fb09 f303 	mul.w	r3, r9, r3
 801762a:	8807      	ldrh	r7, [r0, #0]
 801762c:	1c5a      	adds	r2, r3, #1
 801762e:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8017632:	1212      	asrs	r2, r2, #8
 8017634:	123e      	asrs	r6, r7, #8
 8017636:	b293      	uxth	r3, r2
 8017638:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801763c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8017640:	43d2      	mvns	r2, r2
 8017642:	b2d2      	uxtb	r2, r2
 8017644:	10fd      	asrs	r5, r7, #3
 8017646:	fb1e fe03 	smulbb	lr, lr, r3
 801764a:	00ff      	lsls	r7, r7, #3
 801764c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017650:	fb06 e602 	mla	r6, r6, r2, lr
 8017654:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8017658:	b2ff      	uxtb	r7, r7
 801765a:	fa5f fc8c 	uxtb.w	ip, ip
 801765e:	b2e4      	uxtb	r4, r4
 8017660:	b2b6      	uxth	r6, r6
 8017662:	fb1c fc03 	smulbb	ip, ip, r3
 8017666:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801766a:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801766e:	fb14 f403 	smulbb	r4, r4, r3
 8017672:	fb05 c502 	mla	r5, r5, r2, ip
 8017676:	f106 0e01 	add.w	lr, r6, #1
 801767a:	fb07 4702 	mla	r7, r7, r2, r4
 801767e:	b2ad      	uxth	r5, r5
 8017680:	b2bf      	uxth	r7, r7
 8017682:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8017686:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801768a:	f105 0c01 	add.w	ip, r5, #1
 801768e:	1c7e      	adds	r6, r7, #1
 8017690:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8017694:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8017698:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801769c:	096d      	lsrs	r5, r5, #5
 801769e:	ea46 060e 	orr.w	r6, r6, lr
 80176a2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80176a6:	432e      	orrs	r6, r5
 80176a8:	8006      	strh	r6, [r0, #0]
 80176aa:	e7ba      	b.n	8017622 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 80176ac:	f8ba 3000 	ldrh.w	r3, [sl]
 80176b0:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 80176b4:	eba3 0308 	sub.w	r3, r3, r8
 80176b8:	eba4 0408 	sub.w	r4, r4, r8
 80176bc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80176c0:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 80176c4:	e78b      	b.n	80175de <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 80176c6:	4b03      	ldr	r3, [pc, #12]	; (80176d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 80176c8:	6818      	ldr	r0, [r3, #0]
 80176ca:	6803      	ldr	r3, [r0, #0]
 80176cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80176ce:	4798      	blx	r3
 80176d0:	e76a      	b.n	80175a8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 80176d2:	bf00      	nop
 80176d4:	20015488 	.word	0x20015488
 80176d8:	20015482 	.word	0x20015482

080176dc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 80176dc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80176e0:	460c      	mov	r4, r1
 80176e2:	b085      	sub	sp, #20
 80176e4:	6810      	ldr	r0, [r2, #0]
 80176e6:	6851      	ldr	r1, [r2, #4]
 80176e8:	466d      	mov	r5, sp
 80176ea:	c503      	stmia	r5!, {r0, r1}
 80176ec:	6818      	ldr	r0, [r3, #0]
 80176ee:	6859      	ldr	r1, [r3, #4]
 80176f0:	4616      	mov	r6, r2
 80176f2:	c503      	stmia	r5!, {r0, r1}
 80176f4:	4668      	mov	r0, sp
 80176f6:	f7f9 fa03 	bl	8010b00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80176fa:	4631      	mov	r1, r6
 80176fc:	a802      	add	r0, sp, #8
 80176fe:	f7f9 fa27 	bl	8010b50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017702:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8017706:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801770a:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801770e:	4d28      	ldr	r5, [pc, #160]	; (80177b0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8017710:	4e28      	ldr	r6, [pc, #160]	; (80177b4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8017712:	6828      	ldr	r0, [r5, #0]
 8017714:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8017718:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801771c:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017720:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8017724:	f8bd 1000 	ldrh.w	r1, [sp]
 8017728:	440a      	add	r2, r1
 801772a:	f8ad 2008 	strh.w	r2, [sp, #8]
 801772e:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8017732:	4413      	add	r3, r2
 8017734:	f8ad 300a 	strh.w	r3, [sp, #10]
 8017738:	6803      	ldr	r3, [r0, #0]
 801773a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801773c:	4798      	blx	r3
 801773e:	8833      	ldrh	r3, [r6, #0]
 8017740:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8017744:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8017748:	f8df e06c 	ldr.w	lr, [pc, #108]	; 80177b8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801774c:	fb03 1202 	mla	r2, r3, r2, r1
 8017750:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017754:	fb08 f303 	mul.w	r3, r8, r3
 8017758:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801775c:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8017760:	4298      	cmp	r0, r3
 8017762:	d21d      	bcs.n	80177a0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8017764:	eb00 080c 	add.w	r8, r0, ip
 8017768:	4540      	cmp	r0, r8
 801776a:	d20f      	bcs.n	801778c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801776c:	f854 1b04 	ldr.w	r1, [r4], #4
 8017770:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8017774:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8017778:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801777c:	ea42 0209 	orr.w	r2, r2, r9
 8017780:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8017784:	430a      	orrs	r2, r1
 8017786:	f820 2b02 	strh.w	r2, [r0], #2
 801778a:	e7ed      	b.n	8017768 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801778c:	8832      	ldrh	r2, [r6, #0]
 801778e:	1bd2      	subs	r2, r2, r7
 8017790:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017794:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8017798:	1bd2      	subs	r2, r2, r7
 801779a:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801779e:	e7df      	b.n	8017760 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 80177a0:	6828      	ldr	r0, [r5, #0]
 80177a2:	6803      	ldr	r3, [r0, #0]
 80177a4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80177a6:	4798      	blx	r3
 80177a8:	b005      	add	sp, #20
 80177aa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80177ae:	bf00      	nop
 80177b0:	20015488 	.word	0x20015488
 80177b4:	20015482 	.word	0x20015482
 80177b8:	fffff800 	.word	0xfffff800

080177bc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 80177bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80177c0:	460e      	mov	r6, r1
 80177c2:	b08e      	sub	sp, #56	; 0x38
 80177c4:	4604      	mov	r4, r0
 80177c6:	6808      	ldr	r0, [r1, #0]
 80177c8:	6849      	ldr	r1, [r1, #4]
 80177ca:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 80179a4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 80177ce:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 80179a8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 80177d2:	461d      	mov	r5, r3
 80177d4:	ab0a      	add	r3, sp, #40	; 0x28
 80177d6:	c303      	stmia	r3!, {r0, r1}
 80177d8:	6810      	ldr	r0, [r2, #0]
 80177da:	6851      	ldr	r1, [r2, #4]
 80177dc:	ab0c      	add	r3, sp, #48	; 0x30
 80177de:	c303      	stmia	r3!, {r0, r1}
 80177e0:	a80a      	add	r0, sp, #40	; 0x28
 80177e2:	f7f9 f98d 	bl	8010b00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80177e6:	4631      	mov	r1, r6
 80177e8:	a80c      	add	r0, sp, #48	; 0x30
 80177ea:	f7f9 f9b1 	bl	8010b50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80177ee:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80177f2:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80177f6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80177fa:	f8d8 0000 	ldr.w	r0, [r8]
 80177fe:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 8017802:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8017806:	fb11 2103 	smlabb	r1, r1, r3, r2
 801780a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801780e:	440c      	add	r4, r1
 8017810:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8017814:	440a      	add	r2, r1
 8017816:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801781a:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801781e:	4413      	add	r3, r2
 8017820:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8017824:	6803      	ldr	r3, [r0, #0]
 8017826:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017828:	4798      	blx	r3
 801782a:	2dff      	cmp	r5, #255	; 0xff
 801782c:	d124      	bne.n	8017878 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801782e:	f010 0f01 	tst.w	r0, #1
 8017832:	f8d8 0000 	ldr.w	r0, [r8]
 8017836:	d022      	beq.n	801787e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8017838:	2100      	movs	r1, #0
 801783a:	f8d0 c000 	ldr.w	ip, [r0]
 801783e:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8017842:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8017846:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801784a:	f04f 0e01 	mov.w	lr, #1
 801784e:	f8cd e018 	str.w	lr, [sp, #24]
 8017852:	f8b9 e000 	ldrh.w	lr, [r9]
 8017856:	9503      	str	r5, [sp, #12]
 8017858:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801785c:	b2b6      	uxth	r6, r6
 801785e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8017862:	9102      	str	r1, [sp, #8]
 8017864:	b2bf      	uxth	r7, r7
 8017866:	9601      	str	r6, [sp, #4]
 8017868:	9700      	str	r7, [sp, #0]
 801786a:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801786e:	4621      	mov	r1, r4
 8017870:	47a8      	blx	r5
 8017872:	b00e      	add	sp, #56	; 0x38
 8017874:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017878:	f010 0f04 	tst.w	r0, #4
 801787c:	e7d9      	b.n	8017832 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801787e:	6803      	ldr	r3, [r0, #0]
 8017880:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017882:	4798      	blx	r3
 8017884:	f8b9 3000 	ldrh.w	r3, [r9]
 8017888:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801788c:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8017890:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8017894:	fb03 1202 	mla	r2, r3, r2, r1
 8017898:	ebac 0c07 	sub.w	ip, ip, r7
 801789c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80178a0:	435e      	muls	r6, r3
 80178a2:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 80178a6:	2dff      	cmp	r5, #255	; 0xff
 80178a8:	eba3 0707 	sub.w	r7, r3, r7
 80178ac:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80178b0:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80178b4:	ea4f 0747 	mov.w	r7, r7, lsl #1
 80178b8:	d049      	beq.n	801794e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 80178ba:	43eb      	mvns	r3, r5
 80178bc:	fa1f f985 	uxth.w	r9, r5
 80178c0:	b2db      	uxtb	r3, r3
 80178c2:	42b0      	cmp	r0, r6
 80178c4:	d266      	bcs.n	8017994 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 80178c6:	eb00 0a0e 	add.w	sl, r0, lr
 80178ca:	4550      	cmp	r0, sl
 80178cc:	4621      	mov	r1, r4
 80178ce:	f104 0403 	add.w	r4, r4, #3
 80178d2:	d25b      	bcs.n	801798c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 80178d4:	8802      	ldrh	r2, [r0, #0]
 80178d6:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 80178da:	ea4f 2822 	mov.w	r8, r2, asr #8
 80178de:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 80178e2:	fb11 f109 	smulbb	r1, r1, r9
 80178e6:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 80178ea:	10d5      	asrs	r5, r2, #3
 80178ec:	fb08 1803 	mla	r8, r8, r3, r1
 80178f0:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 80178f4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80178f8:	fb11 f109 	smulbb	r1, r1, r9
 80178fc:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8017900:	fb05 1503 	mla	r5, r5, r3, r1
 8017904:	00d2      	lsls	r2, r2, #3
 8017906:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801790a:	b2d2      	uxtb	r2, r2
 801790c:	fb11 f109 	smulbb	r1, r1, r9
 8017910:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017914:	fa1f f888 	uxth.w	r8, r8
 8017918:	fb02 1203 	mla	r2, r2, r3, r1
 801791c:	b292      	uxth	r2, r2
 801791e:	f108 0101 	add.w	r1, r8, #1
 8017922:	b2ad      	uxth	r5, r5
 8017924:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8017928:	1c51      	adds	r1, r2, #1
 801792a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801792e:	1c69      	adds	r1, r5, #1
 8017930:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8017934:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8017938:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801793c:	096d      	lsrs	r5, r5, #5
 801793e:	ea42 0208 	orr.w	r2, r2, r8
 8017942:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017946:	432a      	orrs	r2, r5
 8017948:	f820 2b02 	strh.w	r2, [r0], #2
 801794c:	e7bd      	b.n	80178ca <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801794e:	4a14      	ldr	r2, [pc, #80]	; (80179a0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8017950:	42b0      	cmp	r0, r6
 8017952:	d21f      	bcs.n	8017994 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8017954:	eb00 050e 	add.w	r5, r0, lr
 8017958:	42a8      	cmp	r0, r5
 801795a:	4621      	mov	r1, r4
 801795c:	f104 0403 	add.w	r4, r4, #3
 8017960:	d210      	bcs.n	8017984 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8017962:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8017966:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801796a:	00db      	lsls	r3, r3, #3
 801796c:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8017970:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017974:	430b      	orrs	r3, r1
 8017976:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801797a:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801797e:	f820 3b02 	strh.w	r3, [r0], #2
 8017982:	e7e9      	b.n	8017958 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8017984:	4438      	add	r0, r7
 8017986:	eb01 040c 	add.w	r4, r1, ip
 801798a:	e7e1      	b.n	8017950 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801798c:	4438      	add	r0, r7
 801798e:	eb01 040c 	add.w	r4, r1, ip
 8017992:	e796      	b.n	80178c2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8017994:	4b03      	ldr	r3, [pc, #12]	; (80179a4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8017996:	6818      	ldr	r0, [r3, #0]
 8017998:	6803      	ldr	r3, [r0, #0]
 801799a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801799c:	4798      	blx	r3
 801799e:	e768      	b.n	8017872 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 80179a0:	fffff800 	.word	0xfffff800
 80179a4:	20015488 	.word	0x20015488
 80179a8:	20015482 	.word	0x20015482

080179ac <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 80179ac:	b4f0      	push	{r4, r5, r6, r7}
 80179ae:	4616      	mov	r6, r2
 80179b0:	2e01      	cmp	r6, #1
 80179b2:	461c      	mov	r4, r3
 80179b4:	460d      	mov	r5, r1
 80179b6:	9a04      	ldr	r2, [sp, #16]
 80179b8:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80179bc:	f89d 7018 	ldrb.w	r7, [sp, #24]
 80179c0:	d012      	beq.n	80179e8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 80179c2:	d303      	bcc.n	80179cc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 80179c4:	2e02      	cmp	r6, #2
 80179c6:	d00a      	beq.n	80179de <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 80179c8:	bcf0      	pop	{r4, r5, r6, r7}
 80179ca:	4770      	bx	lr
 80179cc:	6805      	ldr	r5, [r0, #0]
 80179ce:	e9cd 3704 	strd	r3, r7, [sp, #16]
 80179d2:	68ed      	ldr	r5, [r5, #12]
 80179d4:	4613      	mov	r3, r2
 80179d6:	46ac      	mov	ip, r5
 80179d8:	4622      	mov	r2, r4
 80179da:	bcf0      	pop	{r4, r5, r6, r7}
 80179dc:	4760      	bx	ip
 80179de:	4621      	mov	r1, r4
 80179e0:	4628      	mov	r0, r5
 80179e2:	bcf0      	pop	{r4, r5, r6, r7}
 80179e4:	f7ff bd94 	b.w	8017510 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80179e8:	4621      	mov	r1, r4
 80179ea:	4628      	mov	r0, r5
 80179ec:	bcf0      	pop	{r4, r5, r6, r7}
 80179ee:	f7ff bee5 	b.w	80177bc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

080179f4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 80179f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80179f8:	4681      	mov	r9, r0
 80179fa:	b093      	sub	sp, #76	; 0x4c
 80179fc:	6810      	ldr	r0, [r2, #0]
 80179fe:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8017a02:	4f6d      	ldr	r7, [pc, #436]	; (8017bb8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8017a04:	4688      	mov	r8, r1
 8017a06:	6851      	ldr	r1, [r2, #4]
 8017a08:	ac0e      	add	r4, sp, #56	; 0x38
 8017a0a:	c403      	stmia	r4!, {r0, r1}
 8017a0c:	6818      	ldr	r0, [r3, #0]
 8017a0e:	6859      	ldr	r1, [r3, #4]
 8017a10:	ac10      	add	r4, sp, #64	; 0x40
 8017a12:	4616      	mov	r6, r2
 8017a14:	c403      	stmia	r4!, {r0, r1}
 8017a16:	a80e      	add	r0, sp, #56	; 0x38
 8017a18:	f7f9 f872 	bl	8010b00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017a1c:	4631      	mov	r1, r6
 8017a1e:	a810      	add	r0, sp, #64	; 0x40
 8017a20:	f7f9 f896 	bl	8010b50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017a24:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8017a28:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8017a2c:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8017a30:	4e62      	ldr	r6, [pc, #392]	; (8017bbc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8017a32:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 8017a36:	6830      	ldr	r0, [r6, #0]
 8017a38:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8017a3c:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017a40:	4489      	add	r9, r1
 8017a42:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8017a46:	440a      	add	r2, r1
 8017a48:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8017a4c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8017a50:	4413      	add	r3, r2
 8017a52:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8017a56:	6803      	ldr	r3, [r0, #0]
 8017a58:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017a5a:	4798      	blx	r3
 8017a5c:	f010 0f80 	tst.w	r0, #128	; 0x80
 8017a60:	6830      	ldr	r0, [r6, #0]
 8017a62:	d01d      	beq.n	8017aa0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8017a64:	2200      	movs	r2, #0
 8017a66:	6801      	ldr	r1, [r0, #0]
 8017a68:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8017a6c:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8017a70:	220b      	movs	r2, #11
 8017a72:	9207      	str	r2, [sp, #28]
 8017a74:	883a      	ldrh	r2, [r7, #0]
 8017a76:	9206      	str	r2, [sp, #24]
 8017a78:	2201      	movs	r2, #1
 8017a7a:	e9cd a204 	strd	sl, r2, [sp, #16]
 8017a7e:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8017a82:	9203      	str	r2, [sp, #12]
 8017a84:	b2a4      	uxth	r4, r4
 8017a86:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8017a8a:	9200      	str	r2, [sp, #0]
 8017a8c:	b2ad      	uxth	r5, r5
 8017a8e:	9502      	str	r5, [sp, #8]
 8017a90:	9401      	str	r4, [sp, #4]
 8017a92:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8017a94:	4642      	mov	r2, r8
 8017a96:	4649      	mov	r1, r9
 8017a98:	47a0      	blx	r4
 8017a9a:	b013      	add	sp, #76	; 0x4c
 8017a9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017aa0:	6803      	ldr	r3, [r0, #0]
 8017aa2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017aa4:	4798      	blx	r3
 8017aa6:	883b      	ldrh	r3, [r7, #0]
 8017aa8:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8017aac:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8017ab0:	fb03 1202 	mla	r2, r3, r2, r1
 8017ab4:	435d      	muls	r5, r3
 8017ab6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017aba:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8017abe:	920c      	str	r2, [sp, #48]	; 0x30
 8017ac0:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8017ac4:	1b12      	subs	r2, r2, r4
 8017ac6:	920d      	str	r2, [sp, #52]	; 0x34
 8017ac8:	0062      	lsls	r2, r4, #1
 8017aca:	1b1c      	subs	r4, r3, r4
 8017acc:	0063      	lsls	r3, r4, #1
 8017ace:	920a      	str	r2, [sp, #40]	; 0x28
 8017ad0:	930b      	str	r3, [sp, #44]	; 0x2c
 8017ad2:	f04f 0e04 	mov.w	lr, #4
 8017ad6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017ad8:	4298      	cmp	r0, r3
 8017ada:	d266      	bcs.n	8017baa <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8017adc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017ade:	eb00 0b03 	add.w	fp, r0, r3
 8017ae2:	4558      	cmp	r0, fp
 8017ae4:	d25c      	bcs.n	8017ba0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8017ae6:	f819 3b01 	ldrb.w	r3, [r9], #1
 8017aea:	fb1e e303 	smlabb	r3, lr, r3, lr
 8017aee:	f858 2003 	ldr.w	r2, [r8, r3]
 8017af2:	0e11      	lsrs	r1, r2, #24
 8017af4:	d012      	beq.n	8017b1c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8017af6:	29ff      	cmp	r1, #255	; 0xff
 8017af8:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8017afc:	d110      	bne.n	8017b20 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8017afe:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8017b02:	d10d      	bne.n	8017b20 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8017b04:	0953      	lsrs	r3, r2, #5
 8017b06:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8017b0a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017b0e:	f027 0707 	bic.w	r7, r7, #7
 8017b12:	431f      	orrs	r7, r3
 8017b14:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8017b18:	433a      	orrs	r2, r7
 8017b1a:	8002      	strh	r2, [r0, #0]
 8017b1c:	3002      	adds	r0, #2
 8017b1e:	e7e0      	b.n	8017ae2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8017b20:	fb0a f101 	mul.w	r1, sl, r1
 8017b24:	8806      	ldrh	r6, [r0, #0]
 8017b26:	1c4b      	adds	r3, r1, #1
 8017b28:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8017b2c:	1235      	asrs	r5, r6, #8
 8017b2e:	10f4      	asrs	r4, r6, #3
 8017b30:	121b      	asrs	r3, r3, #8
 8017b32:	00f6      	lsls	r6, r6, #3
 8017b34:	b299      	uxth	r1, r3
 8017b36:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8017b3a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017b3e:	b2f6      	uxtb	r6, r6
 8017b40:	43db      	mvns	r3, r3
 8017b42:	b2d2      	uxtb	r2, r2
 8017b44:	b2db      	uxtb	r3, r3
 8017b46:	fb1c fc01 	smulbb	ip, ip, r1
 8017b4a:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8017b4e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017b52:	fb12 f201 	smulbb	r2, r2, r1
 8017b56:	fb05 c503 	mla	r5, r5, r3, ip
 8017b5a:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8017b5e:	b2ff      	uxtb	r7, r7
 8017b60:	fb06 2203 	mla	r2, r6, r3, r2
 8017b64:	b2ad      	uxth	r5, r5
 8017b66:	fb17 f701 	smulbb	r7, r7, r1
 8017b6a:	b292      	uxth	r2, r2
 8017b6c:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8017b70:	fb04 7403 	mla	r4, r4, r3, r7
 8017b74:	f105 0c01 	add.w	ip, r5, #1
 8017b78:	1c57      	adds	r7, r2, #1
 8017b7a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8017b7e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8017b82:	b2a4      	uxth	r4, r4
 8017b84:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8017b88:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8017b8c:	433d      	orrs	r5, r7
 8017b8e:	1c67      	adds	r7, r4, #1
 8017b90:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8017b94:	0964      	lsrs	r4, r4, #5
 8017b96:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8017b9a:	4325      	orrs	r5, r4
 8017b9c:	8005      	strh	r5, [r0, #0]
 8017b9e:	e7bd      	b.n	8017b1c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8017ba0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017ba2:	4418      	add	r0, r3
 8017ba4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017ba6:	4499      	add	r9, r3
 8017ba8:	e795      	b.n	8017ad6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8017baa:	4b04      	ldr	r3, [pc, #16]	; (8017bbc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8017bac:	6818      	ldr	r0, [r3, #0]
 8017bae:	6803      	ldr	r3, [r0, #0]
 8017bb0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017bb2:	4798      	blx	r3
 8017bb4:	e771      	b.n	8017a9a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8017bb6:	bf00      	nop
 8017bb8:	20015482 	.word	0x20015482
 8017bbc:	20015488 	.word	0x20015488

08017bc0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8017bc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017bc4:	b087      	sub	sp, #28
 8017bc6:	4680      	mov	r8, r0
 8017bc8:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8017bcc:	460d      	mov	r5, r1
 8017bce:	4614      	mov	r4, r2
 8017bd0:	2e00      	cmp	r6, #0
 8017bd2:	f000 80b9 	beq.w	8017d48 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8017bd6:	6810      	ldr	r0, [r2, #0]
 8017bd8:	6851      	ldr	r1, [r2, #4]
 8017bda:	af02      	add	r7, sp, #8
 8017bdc:	c703      	stmia	r7!, {r0, r1}
 8017bde:	6818      	ldr	r0, [r3, #0]
 8017be0:	6859      	ldr	r1, [r3, #4]
 8017be2:	af04      	add	r7, sp, #16
 8017be4:	c703      	stmia	r7!, {r0, r1}
 8017be6:	a802      	add	r0, sp, #8
 8017be8:	f7f8 ff8a 	bl	8010b00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017bec:	4621      	mov	r1, r4
 8017bee:	a804      	add	r0, sp, #16
 8017bf0:	f7f8 ffae 	bl	8010b50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017bf4:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8017bf8:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8017bfc:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8017c00:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8017c04:	fb14 2103 	smlabb	r1, r4, r3, r2
 8017c08:	eb08 0401 	add.w	r4, r8, r1
 8017c0c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8017c10:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8017c14:	440a      	add	r2, r1
 8017c16:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017c1a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8017c1e:	4413      	add	r3, r2
 8017c20:	f8ad 3012 	strh.w	r3, [sp, #18]
 8017c24:	4b4a      	ldr	r3, [pc, #296]	; (8017d50 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8017c26:	6818      	ldr	r0, [r3, #0]
 8017c28:	6803      	ldr	r3, [r0, #0]
 8017c2a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017c2c:	4798      	blx	r3
 8017c2e:	4b49      	ldr	r3, [pc, #292]	; (8017d54 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8017c30:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8017c34:	881a      	ldrh	r2, [r3, #0]
 8017c36:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8017c3a:	2eff      	cmp	r6, #255	; 0xff
 8017c3c:	fb02 c101 	mla	r1, r2, r1, ip
 8017c40:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8017c44:	fb02 f207 	mul.w	r2, r2, r7
 8017c48:	f105 0104 	add.w	r1, r5, #4
 8017c4c:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8017c50:	461d      	mov	r5, r3
 8017c52:	d05a      	beq.n	8017d0a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8017c54:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 8017c58:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017c5c:	b2b6      	uxth	r6, r6
 8017c5e:	fa1f fe8e 	uxth.w	lr, lr
 8017c62:	9301      	str	r3, [sp, #4]
 8017c64:	4282      	cmp	r2, r0
 8017c66:	d96a      	bls.n	8017d3e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8017c68:	eb00 0b0a 	add.w	fp, r0, sl
 8017c6c:	4583      	cmp	fp, r0
 8017c6e:	d940      	bls.n	8017cf2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8017c70:	f814 3b01 	ldrb.w	r3, [r4], #1
 8017c74:	8805      	ldrh	r5, [r0, #0]
 8017c76:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8017c7a:	122f      	asrs	r7, r5, #8
 8017c7c:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8017c80:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017c84:	fb17 f70e 	smulbb	r7, r7, lr
 8017c88:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8017c8c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017c90:	00ed      	lsls	r5, r5, #3
 8017c92:	fb0c 7c06 	mla	ip, ip, r6, r7
 8017c96:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8017c9a:	10df      	asrs	r7, r3, #3
 8017c9c:	b2ed      	uxtb	r5, r5
 8017c9e:	00db      	lsls	r3, r3, #3
 8017ca0:	fa1f fc8c 	uxth.w	ip, ip
 8017ca4:	fb19 f90e 	smulbb	r9, r9, lr
 8017ca8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017cac:	b2db      	uxtb	r3, r3
 8017cae:	fb15 f50e 	smulbb	r5, r5, lr
 8017cb2:	fb07 9706 	mla	r7, r7, r6, r9
 8017cb6:	fb03 5306 	mla	r3, r3, r6, r5
 8017cba:	f10c 0901 	add.w	r9, ip, #1
 8017cbe:	b29b      	uxth	r3, r3
 8017cc0:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8017cc4:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8017cc8:	f103 0c01 	add.w	ip, r3, #1
 8017ccc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8017cd0:	b2bf      	uxth	r7, r7
 8017cd2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8017cd6:	ea4c 0c09 	orr.w	ip, ip, r9
 8017cda:	f107 0901 	add.w	r9, r7, #1
 8017cde:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8017ce2:	097f      	lsrs	r7, r7, #5
 8017ce4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017ce8:	ea4c 0c07 	orr.w	ip, ip, r7
 8017cec:	f820 cb02 	strh.w	ip, [r0], #2
 8017cf0:	e7bc      	b.n	8017c6c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8017cf2:	9b01      	ldr	r3, [sp, #4]
 8017cf4:	881b      	ldrh	r3, [r3, #0]
 8017cf6:	eba3 0308 	sub.w	r3, r3, r8
 8017cfa:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017cfe:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8017d02:	eba3 0308 	sub.w	r3, r3, r8
 8017d06:	441c      	add	r4, r3
 8017d08:	e7ac      	b.n	8017c64 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8017d0a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017d0e:	4282      	cmp	r2, r0
 8017d10:	d915      	bls.n	8017d3e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8017d12:	eb00 060a 	add.w	r6, r0, sl
 8017d16:	4286      	cmp	r6, r0
 8017d18:	d906      	bls.n	8017d28 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 8017d1a:	f814 3b01 	ldrb.w	r3, [r4], #1
 8017d1e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8017d22:	f820 3b02 	strh.w	r3, [r0], #2
 8017d26:	e7f6      	b.n	8017d16 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8017d28:	882b      	ldrh	r3, [r5, #0]
 8017d2a:	eba3 0308 	sub.w	r3, r3, r8
 8017d2e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017d32:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8017d36:	eba3 0308 	sub.w	r3, r3, r8
 8017d3a:	441c      	add	r4, r3
 8017d3c:	e7e7      	b.n	8017d0e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8017d3e:	4b04      	ldr	r3, [pc, #16]	; (8017d50 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8017d40:	6818      	ldr	r0, [r3, #0]
 8017d42:	6803      	ldr	r3, [r0, #0]
 8017d44:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017d46:	4798      	blx	r3
 8017d48:	b007      	add	sp, #28
 8017d4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017d4e:	bf00      	nop
 8017d50:	20015488 	.word	0x20015488
 8017d54:	20015482 	.word	0x20015482

08017d58 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8017d58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017d5c:	b091      	sub	sp, #68	; 0x44
 8017d5e:	4680      	mov	r8, r0
 8017d60:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 8017d64:	460f      	mov	r7, r1
 8017d66:	4614      	mov	r4, r2
 8017d68:	2d00      	cmp	r5, #0
 8017d6a:	d051      	beq.n	8017e10 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8017d6c:	6810      	ldr	r0, [r2, #0]
 8017d6e:	6851      	ldr	r1, [r2, #4]
 8017d70:	f8df 9200 	ldr.w	r9, [pc, #512]	; 8017f74 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8017d74:	ae0c      	add	r6, sp, #48	; 0x30
 8017d76:	c603      	stmia	r6!, {r0, r1}
 8017d78:	6818      	ldr	r0, [r3, #0]
 8017d7a:	6859      	ldr	r1, [r3, #4]
 8017d7c:	ae0e      	add	r6, sp, #56	; 0x38
 8017d7e:	c603      	stmia	r6!, {r0, r1}
 8017d80:	a80c      	add	r0, sp, #48	; 0x30
 8017d82:	f7f8 febd 	bl	8010b00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017d86:	4621      	mov	r1, r4
 8017d88:	a80e      	add	r0, sp, #56	; 0x38
 8017d8a:	f7f8 fee1 	bl	8010b50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017d8e:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8017d92:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8017d96:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8017d9a:	f8d9 0000 	ldr.w	r0, [r9]
 8017d9e:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 8017da2:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 8017da6:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017daa:	eb08 0401 	add.w	r4, r8, r1
 8017dae:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8017db2:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8017f78 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8017db6:	440a      	add	r2, r1
 8017db8:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8017dbc:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8017dc0:	4413      	add	r3, r2
 8017dc2:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8017dc6:	6803      	ldr	r3, [r0, #0]
 8017dc8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017dca:	4798      	blx	r3
 8017dcc:	f010 0f80 	tst.w	r0, #128	; 0x80
 8017dd0:	f8d9 0000 	ldr.w	r0, [r9]
 8017dd4:	d01f      	beq.n	8017e16 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 8017dd6:	2200      	movs	r2, #0
 8017dd8:	6801      	ldr	r1, [r0, #0]
 8017dda:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8017dde:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8017de2:	220b      	movs	r2, #11
 8017de4:	9207      	str	r2, [sp, #28]
 8017de6:	f8b8 2000 	ldrh.w	r2, [r8]
 8017dea:	9206      	str	r2, [sp, #24]
 8017dec:	2201      	movs	r2, #1
 8017dee:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8017df2:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 8017df6:	9203      	str	r2, [sp, #12]
 8017df8:	fa1f f28a 	uxth.w	r2, sl
 8017dfc:	9202      	str	r2, [sp, #8]
 8017dfe:	b2b6      	uxth	r6, r6
 8017e00:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8017e04:	9200      	str	r2, [sp, #0]
 8017e06:	9601      	str	r6, [sp, #4]
 8017e08:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 8017e0a:	463a      	mov	r2, r7
 8017e0c:	4621      	mov	r1, r4
 8017e0e:	47a8      	blx	r5
 8017e10:	b011      	add	sp, #68	; 0x44
 8017e12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017e16:	6803      	ldr	r3, [r0, #0]
 8017e18:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017e1a:	4798      	blx	r3
 8017e1c:	f8b8 2000 	ldrh.w	r2, [r8]
 8017e20:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8017e24:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 8017e28:	2dff      	cmp	r5, #255	; 0xff
 8017e2a:	fb02 1303 	mla	r3, r2, r3, r1
 8017e2e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017e32:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8017e36:	fb0a fa02 	mul.w	sl, sl, r2
 8017e3a:	d062      	beq.n	8017f02 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8017e3c:	ea6f 0c05 	mvn.w	ip, r5
 8017e40:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8017e44:	930a      	str	r3, [sp, #40]	; 0x28
 8017e46:	b2ad      	uxth	r5, r5
 8017e48:	fa5f fc8c 	uxtb.w	ip, ip
 8017e4c:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8017e50:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017e52:	4298      	cmp	r0, r3
 8017e54:	f080 8085 	bcs.w	8017f62 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8017e58:	eb00 0b09 	add.w	fp, r0, r9
 8017e5c:	4558      	cmp	r0, fp
 8017e5e:	d246      	bcs.n	8017eee <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8017e60:	f814 eb01 	ldrb.w	lr, [r4], #1
 8017e64:	2303      	movs	r3, #3
 8017e66:	2204      	movs	r2, #4
 8017e68:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8017e6c:	eb07 0a0e 	add.w	sl, r7, lr
 8017e70:	8803      	ldrh	r3, [r0, #0]
 8017e72:	f89a 8002 	ldrb.w	r8, [sl, #2]
 8017e76:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8017e7a:	1219      	asrs	r1, r3, #8
 8017e7c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8017e80:	fb18 f805 	smulbb	r8, r8, r5
 8017e84:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8017e88:	10da      	asrs	r2, r3, #3
 8017e8a:	fb01 810c 	mla	r1, r1, ip, r8
 8017e8e:	00db      	lsls	r3, r3, #3
 8017e90:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8017e94:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8017e98:	b2db      	uxtb	r3, r3
 8017e9a:	fb18 f805 	smulbb	r8, r8, r5
 8017e9e:	fb1e fe05 	smulbb	lr, lr, r5
 8017ea2:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8017ea6:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 8017eaa:	b289      	uxth	r1, r1
 8017eac:	fb02 820c 	mla	r2, r2, ip, r8
 8017eb0:	fb03 e30c 	mla	r3, r3, ip, lr
 8017eb4:	b292      	uxth	r2, r2
 8017eb6:	b29b      	uxth	r3, r3
 8017eb8:	f101 0801 	add.w	r8, r1, #1
 8017ebc:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8017ec0:	f103 0e01 	add.w	lr, r3, #1
 8017ec4:	f102 0801 	add.w	r8, r2, #1
 8017ec8:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8017ecc:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8017ed0:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8017ed4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8017ed8:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8017edc:	ea4e 0101 	orr.w	r1, lr, r1
 8017ee0:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8017ee4:	ea41 0108 	orr.w	r1, r1, r8
 8017ee8:	f820 1b02 	strh.w	r1, [r0], #2
 8017eec:	e7b6      	b.n	8017e5c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 8017eee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017ef0:	881b      	ldrh	r3, [r3, #0]
 8017ef2:	1b9b      	subs	r3, r3, r6
 8017ef4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017ef8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8017efc:	1b9b      	subs	r3, r3, r6
 8017efe:	441c      	add	r4, r3
 8017f00:	e7a6      	b.n	8017e50 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 8017f02:	491b      	ldr	r1, [pc, #108]	; (8017f70 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8017f04:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8017f08:	2203      	movs	r2, #3
 8017f0a:	2504      	movs	r5, #4
 8017f0c:	4550      	cmp	r0, sl
 8017f0e:	d228      	bcs.n	8017f62 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8017f10:	eb00 0c09 	add.w	ip, r0, r9
 8017f14:	4560      	cmp	r0, ip
 8017f16:	4623      	mov	r3, r4
 8017f18:	d219      	bcs.n	8017f4e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 8017f1a:	f893 e000 	ldrb.w	lr, [r3]
 8017f1e:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8017f22:	eb07 0b0e 	add.w	fp, r7, lr
 8017f26:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8017f2a:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8017f2e:	f89b b001 	ldrb.w	fp, [fp, #1]
 8017f32:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8017f36:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8017f3a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8017f3e:	ea43 030b 	orr.w	r3, r3, fp
 8017f42:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 8017f46:	3401      	adds	r4, #1
 8017f48:	f820 3b02 	strh.w	r3, [r0], #2
 8017f4c:	e7e2      	b.n	8017f14 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8017f4e:	f8b8 3000 	ldrh.w	r3, [r8]
 8017f52:	1b9b      	subs	r3, r3, r6
 8017f54:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017f58:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8017f5c:	1b9b      	subs	r3, r3, r6
 8017f5e:	441c      	add	r4, r3
 8017f60:	e7d4      	b.n	8017f0c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8017f62:	4b04      	ldr	r3, [pc, #16]	; (8017f74 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8017f64:	6818      	ldr	r0, [r3, #0]
 8017f66:	6803      	ldr	r3, [r0, #0]
 8017f68:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017f6a:	4798      	blx	r3
 8017f6c:	e750      	b.n	8017e10 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8017f6e:	bf00      	nop
 8017f70:	fffff800 	.word	0xfffff800
 8017f74:	20015488 	.word	0x20015488
 8017f78:	20015482 	.word	0x20015482

08017f7c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8017f7c:	b430      	push	{r4, r5}
 8017f7e:	780d      	ldrb	r5, [r1, #0]
 8017f80:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8017f84:	2d01      	cmp	r5, #1
 8017f86:	d00a      	beq.n	8017f9e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 8017f88:	d305      	bcc.n	8017f96 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 8017f8a:	2d02      	cmp	r5, #2
 8017f8c:	d10b      	bne.n	8017fa6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 8017f8e:	9402      	str	r4, [sp, #8]
 8017f90:	bc30      	pop	{r4, r5}
 8017f92:	f7ff be15 	b.w	8017bc0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8017f96:	9402      	str	r4, [sp, #8]
 8017f98:	bc30      	pop	{r4, r5}
 8017f9a:	f7ff bd2b 	b.w	80179f4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8017f9e:	9402      	str	r4, [sp, #8]
 8017fa0:	bc30      	pop	{r4, r5}
 8017fa2:	f7ff bed9 	b.w	8017d58 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8017fa6:	bc30      	pop	{r4, r5}
 8017fa8:	4770      	bx	lr
	...

08017fac <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8017fac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017fb0:	4604      	mov	r4, r0
 8017fb2:	b087      	sub	sp, #28
 8017fb4:	6810      	ldr	r0, [r2, #0]
 8017fb6:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 8017fba:	f8df 9238 	ldr.w	r9, [pc, #568]	; 80181f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8017fbe:	460e      	mov	r6, r1
 8017fc0:	6851      	ldr	r1, [r2, #4]
 8017fc2:	ad02      	add	r5, sp, #8
 8017fc4:	c503      	stmia	r5!, {r0, r1}
 8017fc6:	6818      	ldr	r0, [r3, #0]
 8017fc8:	6859      	ldr	r1, [r3, #4]
 8017fca:	ad04      	add	r5, sp, #16
 8017fcc:	4617      	mov	r7, r2
 8017fce:	c503      	stmia	r5!, {r0, r1}
 8017fd0:	a802      	add	r0, sp, #8
 8017fd2:	f7f8 fd95 	bl	8010b00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017fd6:	4639      	mov	r1, r7
 8017fd8:	a804      	add	r0, sp, #16
 8017fda:	f7f8 fdb9 	bl	8010b50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017fde:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8017fe2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8017fe6:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8017fea:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8017fee:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8017ff2:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017ff6:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8017ffa:	440e      	add	r6, r1
 8017ffc:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8018000:	440a      	add	r2, r1
 8018002:	f8ad 2010 	strh.w	r2, [sp, #16]
 8018006:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801800a:	4413      	add	r3, r2
 801800c:	f8ad 3012 	strh.w	r3, [sp, #18]
 8018010:	4b77      	ldr	r3, [pc, #476]	; (80181f0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8018012:	6818      	ldr	r0, [r3, #0]
 8018014:	6803      	ldr	r3, [r0, #0]
 8018016:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018018:	4798      	blx	r3
 801801a:	f8b9 b000 	ldrh.w	fp, [r9]
 801801e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018022:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8018026:	fb0b 2303 	mla	r3, fp, r3, r2
 801802a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801802e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8018032:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8018036:	fb05 f50b 	mul.w	r5, r5, fp
 801803a:	9300      	str	r3, [sp, #0]
 801803c:	d069      	beq.n	8018112 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801803e:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8018042:	4558      	cmp	r0, fp
 8018044:	f080 80cc 	bcs.w	80181e0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8018048:	9b00      	ldr	r3, [sp, #0]
 801804a:	18c3      	adds	r3, r0, r3
 801804c:	9301      	str	r3, [sp, #4]
 801804e:	4631      	mov	r1, r6
 8018050:	9b01      	ldr	r3, [sp, #4]
 8018052:	4298      	cmp	r0, r3
 8018054:	d24f      	bcs.n	80180f6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 8018056:	f811 2b01 	ldrb.w	r2, [r1], #1
 801805a:	2a00      	cmp	r2, #0
 801805c:	d048      	beq.n	80180f0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801805e:	fb0a f202 	mul.w	r2, sl, r2
 8018062:	1c53      	adds	r3, r2, #1
 8018064:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018068:	121b      	asrs	r3, r3, #8
 801806a:	d041      	beq.n	80180f0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801806c:	8802      	ldrh	r2, [r0, #0]
 801806e:	f8b4 c000 	ldrh.w	ip, [r4]
 8018072:	b29e      	uxth	r6, r3
 8018074:	1215      	asrs	r5, r2, #8
 8018076:	43db      	mvns	r3, r3
 8018078:	b2db      	uxtb	r3, r3
 801807a:	ea4f 272c 	mov.w	r7, ip, asr #8
 801807e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8018082:	fb15 f503 	smulbb	r5, r5, r3
 8018086:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801808a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801808e:	00d2      	lsls	r2, r2, #3
 8018090:	fb07 5706 	mla	r7, r7, r6, r5
 8018094:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8018098:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801809c:	b2d2      	uxtb	r2, r2
 801809e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80180a2:	b2bf      	uxth	r7, r7
 80180a4:	fb1e fe03 	smulbb	lr, lr, r3
 80180a8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80180ac:	fa5f fc8c 	uxtb.w	ip, ip
 80180b0:	fb12 f203 	smulbb	r2, r2, r3
 80180b4:	fb05 e506 	mla	r5, r5, r6, lr
 80180b8:	fb0c 2c06 	mla	ip, ip, r6, r2
 80180bc:	f107 0e01 	add.w	lr, r7, #1
 80180c0:	fa1f fc8c 	uxth.w	ip, ip
 80180c4:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 80180c8:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 80180cc:	f10c 0701 	add.w	r7, ip, #1
 80180d0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80180d4:	b2ad      	uxth	r5, r5
 80180d6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80180da:	ea47 070e 	orr.w	r7, r7, lr
 80180de:	f105 0e01 	add.w	lr, r5, #1
 80180e2:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 80180e6:	096d      	lsrs	r5, r5, #5
 80180e8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80180ec:	432f      	orrs	r7, r5
 80180ee:	8007      	strh	r7, [r0, #0]
 80180f0:	3002      	adds	r0, #2
 80180f2:	3402      	adds	r4, #2
 80180f4:	e7ac      	b.n	8018050 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 80180f6:	f8b9 3000 	ldrh.w	r3, [r9]
 80180fa:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80180fe:	eba3 0308 	sub.w	r3, r3, r8
 8018102:	eba6 0608 	sub.w	r6, r6, r8
 8018106:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801810a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801810e:	440e      	add	r6, r1
 8018110:	e797      	b.n	8018042 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8018112:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8018116:	42a8      	cmp	r0, r5
 8018118:	d262      	bcs.n	80181e0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801811a:	9b00      	ldr	r3, [sp, #0]
 801811c:	4631      	mov	r1, r6
 801811e:	eb00 0b03 	add.w	fp, r0, r3
 8018122:	4558      	cmp	r0, fp
 8018124:	d24e      	bcs.n	80181c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 8018126:	f811 3b01 	ldrb.w	r3, [r1], #1
 801812a:	b12b      	cbz	r3, 8018138 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801812c:	2bff      	cmp	r3, #255	; 0xff
 801812e:	f8b4 e000 	ldrh.w	lr, [r4]
 8018132:	d104      	bne.n	801813e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8018134:	f8a0 e000 	strh.w	lr, [r0]
 8018138:	3002      	adds	r0, #2
 801813a:	3402      	adds	r4, #2
 801813c:	e7f1      	b.n	8018122 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801813e:	8802      	ldrh	r2, [r0, #0]
 8018140:	b29f      	uxth	r7, r3
 8018142:	1216      	asrs	r6, r2, #8
 8018144:	43db      	mvns	r3, r3
 8018146:	b2db      	uxtb	r3, r3
 8018148:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801814c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8018150:	fb16 f603 	smulbb	r6, r6, r3
 8018154:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8018158:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801815c:	00d2      	lsls	r2, r2, #3
 801815e:	fb0c 6c07 	mla	ip, ip, r7, r6
 8018162:	b2d2      	uxtb	r2, r2
 8018164:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8018168:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801816c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018170:	fb1a fa03 	smulbb	sl, sl, r3
 8018174:	fa1f fc8c 	uxth.w	ip, ip
 8018178:	fb12 f303 	smulbb	r3, r2, r3
 801817c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018180:	fa5f fe8e 	uxtb.w	lr, lr
 8018184:	fb06 a607 	mla	r6, r6, r7, sl
 8018188:	f10c 0201 	add.w	r2, ip, #1
 801818c:	fb0e 3307 	mla	r3, lr, r7, r3
 8018190:	b2b6      	uxth	r6, r6
 8018192:	b29b      	uxth	r3, r3
 8018194:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8018198:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801819c:	f106 0a01 	add.w	sl, r6, #1
 80181a0:	f103 0c01 	add.w	ip, r3, #1
 80181a4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80181a8:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 80181ac:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80181b0:	0976      	lsrs	r6, r6, #5
 80181b2:	ea4c 0c02 	orr.w	ip, ip, r2
 80181b6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80181ba:	ea4c 0c06 	orr.w	ip, ip, r6
 80181be:	f8a0 c000 	strh.w	ip, [r0]
 80181c2:	e7b9      	b.n	8018138 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80181c4:	f8b9 3000 	ldrh.w	r3, [r9]
 80181c8:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80181cc:	eba3 0308 	sub.w	r3, r3, r8
 80181d0:	eba6 0608 	sub.w	r6, r6, r8
 80181d4:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80181d8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80181dc:	440e      	add	r6, r1
 80181de:	e79a      	b.n	8018116 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 80181e0:	4b03      	ldr	r3, [pc, #12]	; (80181f0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80181e2:	6818      	ldr	r0, [r3, #0]
 80181e4:	6803      	ldr	r3, [r0, #0]
 80181e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80181e8:	4798      	blx	r3
 80181ea:	b007      	add	sp, #28
 80181ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80181f0:	20015488 	.word	0x20015488
 80181f4:	20015482 	.word	0x20015482

080181f8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 80181f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80181fc:	b089      	sub	sp, #36	; 0x24
 80181fe:	4682      	mov	sl, r0
 8018200:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8018204:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8018206:	460f      	mov	r7, r1
 8018208:	4691      	mov	r9, r2
 801820a:	4698      	mov	r8, r3
 801820c:	2e00      	cmp	r6, #0
 801820e:	d036      	beq.n	801827e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8018210:	4608      	mov	r0, r1
 8018212:	f7fc f863 	bl	80142dc <_ZNK8touchgfx6Bitmap8getWidthEv>
 8018216:	4605      	mov	r5, r0
 8018218:	4638      	mov	r0, r7
 801821a:	f7fc f893 	bl	8014344 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801821e:	f8ad 000e 	strh.w	r0, [sp, #14]
 8018222:	4638      	mov	r0, r7
 8018224:	f8ad 9008 	strh.w	r9, [sp, #8]
 8018228:	f8ad 500c 	strh.w	r5, [sp, #12]
 801822c:	f8ad 800a 	strh.w	r8, [sp, #10]
 8018230:	f7fc f940 	bl	80144b4 <_ZNK8touchgfx6Bitmap7getDataEv>
 8018234:	4605      	mov	r5, r0
 8018236:	4638      	mov	r0, r7
 8018238:	f7fc f96c 	bl	8014514 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801823c:	4681      	mov	r9, r0
 801823e:	4638      	mov	r0, r7
 8018240:	f7fc f9bc 	bl	80145bc <_ZNK8touchgfx6Bitmap9getFormatEv>
 8018244:	280b      	cmp	r0, #11
 8018246:	d81a      	bhi.n	801827e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8018248:	e8df f000 	tbb	[pc, r0]
 801824c:	1906aebd 	.word	0x1906aebd
 8018250:	19191919 	.word	0x19191919
 8018254:	b5191919 	.word	0xb5191919
 8018258:	4bb0      	ldr	r3, [pc, #704]	; (801851c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801825a:	6818      	ldr	r0, [r3, #0]
 801825c:	6803      	ldr	r3, [r0, #0]
 801825e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018260:	4798      	blx	r3
 8018262:	2eff      	cmp	r6, #255	; 0xff
 8018264:	d121      	bne.n	80182aa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 8018266:	0683      	lsls	r3, r0, #26
 8018268:	d41f      	bmi.n	80182aa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 801826a:	4638      	mov	r0, r7
 801826c:	f7fc f8ea 	bl	8014444 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8018270:	b940      	cbnz	r0, 8018284 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 8018272:	4623      	mov	r3, r4
 8018274:	aa02      	add	r2, sp, #8
 8018276:	4629      	mov	r1, r5
 8018278:	4650      	mov	r0, sl
 801827a:	f7ff fa2f 	bl	80176dc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801827e:	b009      	add	sp, #36	; 0x24
 8018280:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018284:	f10d 0818 	add.w	r8, sp, #24
 8018288:	4639      	mov	r1, r7
 801828a:	4640      	mov	r0, r8
 801828c:	f7fc f88e 	bl	80143ac <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8018290:	e898 0003 	ldmia.w	r8, {r0, r1}
 8018294:	af04      	add	r7, sp, #16
 8018296:	e887 0003 	stmia.w	r7, {r0, r1}
 801829a:	4638      	mov	r0, r7
 801829c:	4621      	mov	r1, r4
 801829e:	f7f2 fc4d 	bl	800ab3c <_ZN8touchgfx4RectaNERKS0_>
 80182a2:	4638      	mov	r0, r7
 80182a4:	f7f2 fc8d 	bl	800abc2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80182a8:	b130      	cbz	r0, 80182b8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 80182aa:	4633      	mov	r3, r6
 80182ac:	4622      	mov	r2, r4
 80182ae:	a902      	add	r1, sp, #8
 80182b0:	4628      	mov	r0, r5
 80182b2:	f7ff f92d 	bl	8017510 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80182b6:	e7e2      	b.n	801827e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80182b8:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80182bc:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80182c0:	4293      	cmp	r3, r2
 80182c2:	dd12      	ble.n	80182ea <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf2>
 80182c4:	1a9b      	subs	r3, r3, r2
 80182c6:	f9b4 0000 	ldrsh.w	r0, [r4]
 80182ca:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80182ce:	f8ad 0018 	strh.w	r0, [sp, #24]
 80182d2:	f8ad 201a 	strh.w	r2, [sp, #26]
 80182d6:	f8ad 101c 	strh.w	r1, [sp, #28]
 80182da:	f8ad 301e 	strh.w	r3, [sp, #30]
 80182de:	4642      	mov	r2, r8
 80182e0:	4633      	mov	r3, r6
 80182e2:	a902      	add	r1, sp, #8
 80182e4:	4628      	mov	r0, r5
 80182e6:	f7ff f913 	bl	8017510 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80182ea:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80182ee:	f9b4 2000 	ldrsh.w	r2, [r4]
 80182f2:	4293      	cmp	r3, r2
 80182f4:	dd12      	ble.n	801831c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x124>
 80182f6:	1a9b      	subs	r3, r3, r2
 80182f8:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80182fc:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8018300:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018304:	f8ad 001a 	strh.w	r0, [sp, #26]
 8018308:	f8ad 301c 	strh.w	r3, [sp, #28]
 801830c:	f8ad 101e 	strh.w	r1, [sp, #30]
 8018310:	23ff      	movs	r3, #255	; 0xff
 8018312:	4642      	mov	r2, r8
 8018314:	a902      	add	r1, sp, #8
 8018316:	4628      	mov	r0, r5
 8018318:	f7ff f8fa 	bl	8017510 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801831c:	463b      	mov	r3, r7
 801831e:	aa02      	add	r2, sp, #8
 8018320:	4629      	mov	r1, r5
 8018322:	4650      	mov	r0, sl
 8018324:	f7ff f9da 	bl	80176dc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8018328:	88a2      	ldrh	r2, [r4, #4]
 801832a:	8823      	ldrh	r3, [r4, #0]
 801832c:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8018330:	4413      	add	r3, r2
 8018332:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018336:	440a      	add	r2, r1
 8018338:	b29b      	uxth	r3, r3
 801833a:	b292      	uxth	r2, r2
 801833c:	b211      	sxth	r1, r2
 801833e:	b218      	sxth	r0, r3
 8018340:	4288      	cmp	r0, r1
 8018342:	dd12      	ble.n	801836a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x172>
 8018344:	1a9b      	subs	r3, r3, r2
 8018346:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801834a:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801834e:	f8ad 1018 	strh.w	r1, [sp, #24]
 8018352:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018356:	f8ad 001e 	strh.w	r0, [sp, #30]
 801835a:	23ff      	movs	r3, #255	; 0xff
 801835c:	4642      	mov	r2, r8
 801835e:	a902      	add	r1, sp, #8
 8018360:	4628      	mov	r0, r5
 8018362:	f8ad 601a 	strh.w	r6, [sp, #26]
 8018366:	f7ff f8d3 	bl	8017510 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801836a:	88e2      	ldrh	r2, [r4, #6]
 801836c:	8863      	ldrh	r3, [r4, #2]
 801836e:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8018372:	4413      	add	r3, r2
 8018374:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8018378:	440a      	add	r2, r1
 801837a:	b29b      	uxth	r3, r3
 801837c:	b292      	uxth	r2, r2
 801837e:	b211      	sxth	r1, r2
 8018380:	b218      	sxth	r0, r3
 8018382:	4288      	cmp	r0, r1
 8018384:	f77f af7b 	ble.w	801827e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8018388:	1a9b      	subs	r3, r3, r2
 801838a:	f9b4 6000 	ldrsh.w	r6, [r4]
 801838e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018392:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018396:	f8ad 6018 	strh.w	r6, [sp, #24]
 801839a:	f8ad 101a 	strh.w	r1, [sp, #26]
 801839e:	f8ad 001c 	strh.w	r0, [sp, #28]
 80183a2:	23ff      	movs	r3, #255	; 0xff
 80183a4:	4642      	mov	r2, r8
 80183a6:	e782      	b.n	80182ae <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb6>
 80183a8:	4633      	mov	r3, r6
 80183aa:	4622      	mov	r2, r4
 80183ac:	a902      	add	r1, sp, #8
 80183ae:	4628      	mov	r0, r5
 80183b0:	f7ff fa04 	bl	80177bc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 80183b4:	e763      	b.n	801827e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80183b6:	9600      	str	r6, [sp, #0]
 80183b8:	4623      	mov	r3, r4
 80183ba:	aa02      	add	r2, sp, #8
 80183bc:	4649      	mov	r1, r9
 80183be:	4628      	mov	r0, r5
 80183c0:	f7ff fddc 	bl	8017f7c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 80183c4:	e75b      	b.n	801827e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80183c6:	4638      	mov	r0, r7
 80183c8:	f7fc f83c 	bl	8014444 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80183cc:	b950      	cbnz	r0, 80183e4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ec>
 80183ce:	e9cd 6000 	strd	r6, r0, [sp]
 80183d2:	f8da 3000 	ldr.w	r3, [sl]
 80183d6:	aa02      	add	r2, sp, #8
 80183d8:	68de      	ldr	r6, [r3, #12]
 80183da:	4629      	mov	r1, r5
 80183dc:	4623      	mov	r3, r4
 80183de:	4650      	mov	r0, sl
 80183e0:	47b0      	blx	r6
 80183e2:	e74c      	b.n	801827e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80183e4:	f10d 0818 	add.w	r8, sp, #24
 80183e8:	4639      	mov	r1, r7
 80183ea:	4640      	mov	r0, r8
 80183ec:	f7fb ffde 	bl	80143ac <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80183f0:	e898 0003 	ldmia.w	r8, {r0, r1}
 80183f4:	af04      	add	r7, sp, #16
 80183f6:	e887 0003 	stmia.w	r7, {r0, r1}
 80183fa:	4638      	mov	r0, r7
 80183fc:	4621      	mov	r1, r4
 80183fe:	f7f2 fb9d 	bl	800ab3c <_ZN8touchgfx4RectaNERKS0_>
 8018402:	4638      	mov	r0, r7
 8018404:	f7f2 fbdd 	bl	800abc2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018408:	b138      	cbz	r0, 801841a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x222>
 801840a:	9600      	str	r6, [sp, #0]
 801840c:	4623      	mov	r3, r4
 801840e:	aa02      	add	r2, sp, #8
 8018410:	4649      	mov	r1, r9
 8018412:	4628      	mov	r0, r5
 8018414:	f7ff fdca 	bl	8017fac <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018418:	e731      	b.n	801827e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801841a:	e9cd 6000 	strd	r6, r0, [sp]
 801841e:	f8da 3000 	ldr.w	r3, [sl]
 8018422:	aa02      	add	r2, sp, #8
 8018424:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8018428:	4629      	mov	r1, r5
 801842a:	463b      	mov	r3, r7
 801842c:	4650      	mov	r0, sl
 801842e:	47d8      	blx	fp
 8018430:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018434:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8018438:	4293      	cmp	r3, r2
 801843a:	dd13      	ble.n	8018464 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26c>
 801843c:	f9b4 0000 	ldrsh.w	r0, [r4]
 8018440:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8018444:	f8ad 0018 	strh.w	r0, [sp, #24]
 8018448:	1a9b      	subs	r3, r3, r2
 801844a:	f8ad 201a 	strh.w	r2, [sp, #26]
 801844e:	f8ad 101c 	strh.w	r1, [sp, #28]
 8018452:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018456:	9600      	str	r6, [sp, #0]
 8018458:	4643      	mov	r3, r8
 801845a:	aa02      	add	r2, sp, #8
 801845c:	4649      	mov	r1, r9
 801845e:	4628      	mov	r0, r5
 8018460:	f7ff fda4 	bl	8017fac <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018464:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8018468:	f9b4 2000 	ldrsh.w	r2, [r4]
 801846c:	4293      	cmp	r3, r2
 801846e:	dd13      	ble.n	8018498 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a0>
 8018470:	1a9b      	subs	r3, r3, r2
 8018472:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8018476:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801847a:	f8ad 2018 	strh.w	r2, [sp, #24]
 801847e:	f8ad 001a 	strh.w	r0, [sp, #26]
 8018482:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018486:	f8ad 101e 	strh.w	r1, [sp, #30]
 801848a:	9600      	str	r6, [sp, #0]
 801848c:	4643      	mov	r3, r8
 801848e:	aa02      	add	r2, sp, #8
 8018490:	4649      	mov	r1, r9
 8018492:	4628      	mov	r0, r5
 8018494:	f7ff fd8a 	bl	8017fac <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018498:	88a2      	ldrh	r2, [r4, #4]
 801849a:	8823      	ldrh	r3, [r4, #0]
 801849c:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80184a0:	4413      	add	r3, r2
 80184a2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80184a6:	440a      	add	r2, r1
 80184a8:	b29b      	uxth	r3, r3
 80184aa:	b292      	uxth	r2, r2
 80184ac:	b211      	sxth	r1, r2
 80184ae:	b218      	sxth	r0, r3
 80184b0:	4288      	cmp	r0, r1
 80184b2:	dd13      	ble.n	80184dc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e4>
 80184b4:	1a9b      	subs	r3, r3, r2
 80184b6:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80184ba:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 80184be:	f8ad 1018 	strh.w	r1, [sp, #24]
 80184c2:	f8ad 301c 	strh.w	r3, [sp, #28]
 80184c6:	f8ad 001e 	strh.w	r0, [sp, #30]
 80184ca:	9600      	str	r6, [sp, #0]
 80184cc:	4643      	mov	r3, r8
 80184ce:	aa02      	add	r2, sp, #8
 80184d0:	4649      	mov	r1, r9
 80184d2:	4628      	mov	r0, r5
 80184d4:	f8ad 701a 	strh.w	r7, [sp, #26]
 80184d8:	f7ff fd68 	bl	8017fac <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80184dc:	88e2      	ldrh	r2, [r4, #6]
 80184de:	8863      	ldrh	r3, [r4, #2]
 80184e0:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80184e4:	4413      	add	r3, r2
 80184e6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80184ea:	440a      	add	r2, r1
 80184ec:	b29b      	uxth	r3, r3
 80184ee:	b292      	uxth	r2, r2
 80184f0:	b211      	sxth	r1, r2
 80184f2:	b218      	sxth	r0, r3
 80184f4:	4288      	cmp	r0, r1
 80184f6:	f77f aec2 	ble.w	801827e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80184fa:	f9b4 7000 	ldrsh.w	r7, [r4]
 80184fe:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018502:	f8ad 7018 	strh.w	r7, [sp, #24]
 8018506:	1a9b      	subs	r3, r3, r2
 8018508:	f8ad 301e 	strh.w	r3, [sp, #30]
 801850c:	f8ad 101a 	strh.w	r1, [sp, #26]
 8018510:	f8ad 001c 	strh.w	r0, [sp, #28]
 8018514:	9600      	str	r6, [sp, #0]
 8018516:	4643      	mov	r3, r8
 8018518:	e779      	b.n	801840e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x216>
 801851a:	bf00      	nop
 801851c:	20015488 	.word	0x20015488

08018520 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8018520:	b180      	cbz	r0, 8018544 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 8018522:	2903      	cmp	r1, #3
 8018524:	d81c      	bhi.n	8018560 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8018526:	e8df f001 	tbb	[pc, r1]
 801852a:	1d02      	.short	0x1d02
 801852c:	1f08      	.short	0x1f08
 801852e:	4b10      	ldr	r3, [pc, #64]	; (8018570 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8018530:	8818      	ldrh	r0, [r3, #0]
 8018532:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018536:	4240      	negs	r0, r0
 8018538:	4770      	bx	lr
 801853a:	4b0d      	ldr	r3, [pc, #52]	; (8018570 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801853c:	8818      	ldrh	r0, [r3, #0]
 801853e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018542:	4770      	bx	lr
 8018544:	2903      	cmp	r1, #3
 8018546:	d80b      	bhi.n	8018560 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8018548:	a301      	add	r3, pc, #4	; (adr r3, 8018550 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801854a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801854e:	bf00      	nop
 8018550:	08018565 	.word	0x08018565
 8018554:	0801853b 	.word	0x0801853b
 8018558:	08018569 	.word	0x08018569
 801855c:	0801852f 	.word	0x0801852f
 8018560:	2000      	movs	r0, #0
 8018562:	4770      	bx	lr
 8018564:	2001      	movs	r0, #1
 8018566:	4770      	bx	lr
 8018568:	f04f 30ff 	mov.w	r0, #4294967295
 801856c:	4770      	bx	lr
 801856e:	bf00      	nop
 8018570:	20015482 	.word	0x20015482

08018574 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8018574:	b180      	cbz	r0, 8018598 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 8018576:	2903      	cmp	r1, #3
 8018578:	d81c      	bhi.n	80185b4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801857a:	e8df f001 	tbb	[pc, r1]
 801857e:	021d      	.short	0x021d
 8018580:	071f      	.short	0x071f
 8018582:	4b10      	ldr	r3, [pc, #64]	; (80185c4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8018584:	8818      	ldrh	r0, [r3, #0]
 8018586:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801858a:	4770      	bx	lr
 801858c:	4b0d      	ldr	r3, [pc, #52]	; (80185c4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801858e:	8818      	ldrh	r0, [r3, #0]
 8018590:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018594:	4240      	negs	r0, r0
 8018596:	4770      	bx	lr
 8018598:	2903      	cmp	r1, #3
 801859a:	d80b      	bhi.n	80185b4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801859c:	a301      	add	r3, pc, #4	; (adr r3, 80185a4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801859e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 80185a2:	bf00      	nop
 80185a4:	08018583 	.word	0x08018583
 80185a8:	080185bd 	.word	0x080185bd
 80185ac:	0801858d 	.word	0x0801858d
 80185b0:	080185b9 	.word	0x080185b9
 80185b4:	2000      	movs	r0, #0
 80185b6:	4770      	bx	lr
 80185b8:	2001      	movs	r0, #1
 80185ba:	4770      	bx	lr
 80185bc:	f04f 30ff 	mov.w	r0, #4294967295
 80185c0:	4770      	bx	lr
 80185c2:	bf00      	nop
 80185c4:	20015482 	.word	0x20015482

080185c8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 80185c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80185cc:	b099      	sub	sp, #100	; 0x64
 80185ce:	910b      	str	r1, [sp, #44]	; 0x2c
 80185d0:	a914      	add	r1, sp, #80	; 0x50
 80185d2:	e881 000c 	stmia.w	r1, {r2, r3}
 80185d6:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 80185da:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 80185de:	f891 900d 	ldrb.w	r9, [r1, #13]
 80185e2:	9309      	str	r3, [sp, #36]	; 0x24
 80185e4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80185e8:	9310      	str	r3, [sp, #64]	; 0x40
 80185ea:	ea4f 1749 	mov.w	r7, r9, lsl #5
 80185ee:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 80185f2:	930c      	str	r3, [sp, #48]	; 0x30
 80185f4:	f407 7380 	and.w	r3, r7, #256	; 0x100
 80185f8:	798f      	ldrb	r7, [r1, #6]
 80185fa:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 80185fe:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 8018602:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 8018606:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801860a:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801860e:	431f      	orrs	r7, r3
 8018610:	f000 8195 	beq.w	801893e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018614:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8018618:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801861c:	f891 9007 	ldrb.w	r9, [r1, #7]
 8018620:	ea59 0903 	orrs.w	r9, r9, r3
 8018624:	f000 818b 	beq.w	801893e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018628:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801862c:	b29b      	uxth	r3, r3
 801862e:	2d00      	cmp	r5, #0
 8018630:	f000 812e 	beq.w	8018890 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 8018634:	1aed      	subs	r5, r5, r3
 8018636:	b2ad      	uxth	r5, r5
 8018638:	042b      	lsls	r3, r5, #16
 801863a:	d502      	bpl.n	8018642 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801863c:	1b64      	subs	r4, r4, r5
 801863e:	b224      	sxth	r4, r4
 8018640:	2500      	movs	r5, #0
 8018642:	f9b2 1000 	ldrsh.w	r1, [r2]
 8018646:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801864a:	428c      	cmp	r4, r1
 801864c:	b28b      	uxth	r3, r1
 801864e:	bfbf      	itttt	lt
 8018650:	18ed      	addlt	r5, r5, r3
 8018652:	1b2c      	sublt	r4, r5, r4
 8018654:	b2a5      	uxthlt	r5, r4
 8018656:	460c      	movlt	r4, r1
 8018658:	8891      	ldrh	r1, [r2, #4]
 801865a:	440b      	add	r3, r1
 801865c:	b21b      	sxth	r3, r3
 801865e:	930f      	str	r3, [sp, #60]	; 0x3c
 8018660:	88d3      	ldrh	r3, [r2, #6]
 8018662:	8852      	ldrh	r2, [r2, #2]
 8018664:	4413      	add	r3, r2
 8018666:	b21b      	sxth	r3, r3
 8018668:	930d      	str	r3, [sp, #52]	; 0x34
 801866a:	4bbe      	ldr	r3, [pc, #760]	; (8018964 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801866c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801866e:	f893 b000 	ldrb.w	fp, [r3]
 8018672:	f10b 3cff 	add.w	ip, fp, #4294967295
 8018676:	f1dc 0300 	rsbs	r3, ip, #0
 801867a:	eb43 030c 	adc.w	r3, r3, ip
 801867e:	930e      	str	r3, [sp, #56]	; 0x38
 8018680:	4621      	mov	r1, r4
 8018682:	4653      	mov	r3, sl
 8018684:	a814      	add	r0, sp, #80	; 0x50
 8018686:	f7f8 f8b5 	bl	80107f4 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801868a:	4621      	mov	r1, r4
 801868c:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8018690:	4653      	mov	r3, sl
 8018692:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018694:	a814      	add	r0, sp, #80	; 0x50
 8018696:	f7f8 f8ca 	bl	801082e <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801869a:	a918      	add	r1, sp, #96	; 0x60
 801869c:	f821 0d02 	strh.w	r0, [r1, #-2]!
 80186a0:	a817      	add	r0, sp, #92	; 0x5c
 80186a2:	f7f8 f9eb 	bl	8010a7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 80186a6:	f1ba 0f00 	cmp.w	sl, #0
 80186aa:	f040 80f4 	bne.w	8018896 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 80186ae:	f1bb 0f01 	cmp.w	fp, #1
 80186b2:	f040 80f8 	bne.w	80188a6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 80186b6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80186b8:	2b00      	cmp	r3, #0
 80186ba:	f040 8145 	bne.w	8018948 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 80186be:	b2ba      	uxth	r2, r7
 80186c0:	b905      	cbnz	r5, 80186c4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 80186c2:	b16e      	cbz	r6, 80186e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 80186c4:	fb06 5302 	mla	r3, r6, r2, r5
 80186c8:	9828      	ldr	r0, [sp, #160]	; 0xa0
 80186ca:	fb08 f303 	mul.w	r3, r8, r3
 80186ce:	4631      	mov	r1, r6
 80186d0:	f003 0607 	and.w	r6, r3, #7
 80186d4:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 80186d8:	9328      	str	r3, [sp, #160]	; 0xa0
 80186da:	eba9 0301 	sub.w	r3, r9, r1
 80186de:	930a      	str	r3, [sp, #40]	; 0x28
 80186e0:	4651      	mov	r1, sl
 80186e2:	980e      	ldr	r0, [sp, #56]	; 0x38
 80186e4:	f7ff ff1c 	bl	8018520 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 80186e8:	4681      	mov	r9, r0
 80186ea:	980e      	ldr	r0, [sp, #56]	; 0x38
 80186ec:	f7ff ff42 	bl	8018574 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 80186f0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80186f2:	9909      	ldr	r1, [sp, #36]	; 0x24
 80186f4:	eba3 0a01 	sub.w	sl, r3, r1
 80186f8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80186fa:	459a      	cmp	sl, r3
 80186fc:	bfa8      	it	ge
 80186fe:	469a      	movge	sl, r3
 8018700:	f1ba 0f00 	cmp.w	sl, #0
 8018704:	4683      	mov	fp, r0
 8018706:	f340 811a 	ble.w	801893e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801870a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801870c:	1b64      	subs	r4, r4, r5
 801870e:	1b1c      	subs	r4, r3, r4
 8018710:	42bc      	cmp	r4, r7
 8018712:	bfd4      	ite	le
 8018714:	ebc5 0504 	rsble	r5, r5, r4
 8018718:	ebc5 0507 	rsbgt	r5, r5, r7
 801871c:	2d00      	cmp	r5, #0
 801871e:	f340 810e 	ble.w	801893e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018722:	1b52      	subs	r2, r2, r5
 8018724:	fb08 f302 	mul.w	r3, r8, r2
 8018728:	930f      	str	r3, [sp, #60]	; 0x3c
 801872a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801872c:	2b00      	cmp	r3, #0
 801872e:	f040 8116 	bne.w	801895e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8018732:	4b8d      	ldr	r3, [pc, #564]	; (8018968 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8018734:	6818      	ldr	r0, [r3, #0]
 8018736:	6803      	ldr	r3, [r0, #0]
 8018738:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801873a:	4798      	blx	r3
 801873c:	2301      	movs	r3, #1
 801873e:	fa03 f308 	lsl.w	r3, r3, r8
 8018742:	4a8a      	ldr	r2, [pc, #552]	; (801896c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8018744:	3b01      	subs	r3, #1
 8018746:	b2db      	uxtb	r3, r3
 8018748:	8811      	ldrh	r1, [r2, #0]
 801874a:	930e      	str	r3, [sp, #56]	; 0x38
 801874c:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8018750:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8018754:	fb01 2303 	mla	r3, r1, r3, r2
 8018758:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801875c:	930a      	str	r3, [sp, #40]	; 0x28
 801875e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018760:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8018764:	9313      	str	r3, [sp, #76]	; 0x4c
 8018766:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018768:	0a19      	lsrs	r1, r3, #8
 801876a:	b2cb      	uxtb	r3, r1
 801876c:	9312      	str	r3, [sp, #72]	; 0x48
 801876e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018770:	b2db      	uxtb	r3, r3
 8018772:	9311      	str	r3, [sp, #68]	; 0x44
 8018774:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018776:	095a      	lsrs	r2, r3, #5
 8018778:	4b7d      	ldr	r3, [pc, #500]	; (8018970 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801877a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801877e:	400b      	ands	r3, r1
 8018780:	4313      	orrs	r3, r2
 8018782:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8018784:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8018788:	4313      	orrs	r3, r2
 801878a:	b29b      	uxth	r3, r3
 801878c:	9310      	str	r3, [sp, #64]	; 0x40
 801878e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018790:	781a      	ldrb	r2, [r3, #0]
 8018792:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8018796:	4132      	asrs	r2, r6
 8018798:	fb05 b919 	mls	r9, r5, r9, fp
 801879c:	fb03 fb05 	mul.w	fp, r3, r5
 80187a0:	b2d2      	uxtb	r2, r2
 80187a2:	930d      	str	r3, [sp, #52]	; 0x34
 80187a4:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 80187a8:	f11a 3aff 	adds.w	sl, sl, #4294967295
 80187ac:	f0c0 80f5 	bcc.w	801899a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 80187b0:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 80187b4:	46ae      	mov	lr, r5
 80187b6:	f11e 3eff 	adds.w	lr, lr, #4294967295
 80187ba:	f0c0 80dd 	bcc.w	8018978 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 80187be:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80187c0:	4013      	ands	r3, r2
 80187c2:	d055      	beq.n	8018870 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 80187c4:	20ff      	movs	r0, #255	; 0xff
 80187c6:	990e      	ldr	r1, [sp, #56]	; 0x38
 80187c8:	fb90 f1f1 	sdiv	r1, r0, r1
 80187cc:	434b      	muls	r3, r1
 80187ce:	2bfe      	cmp	r3, #254	; 0xfe
 80187d0:	dd03      	ble.n	80187da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 80187d2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80187d4:	4281      	cmp	r1, r0
 80187d6:	f000 80cd 	beq.w	8018974 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 80187da:	990c      	ldr	r1, [sp, #48]	; 0x30
 80187dc:	f8bc 4000 	ldrh.w	r4, [ip]
 80187e0:	fb11 f303 	smulbb	r3, r1, r3
 80187e4:	b29b      	uxth	r3, r3
 80187e6:	1c59      	adds	r1, r3, #1
 80187e8:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80187ec:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80187f0:	b29f      	uxth	r7, r3
 80187f2:	43db      	mvns	r3, r3
 80187f4:	b2db      	uxtb	r3, r3
 80187f6:	9309      	str	r3, [sp, #36]	; 0x24
 80187f8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80187fa:	1220      	asrs	r0, r4, #8
 80187fc:	fb13 f907 	smulbb	r9, r3, r7
 8018800:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018804:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018806:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801880a:	fb00 9003 	mla	r0, r0, r3, r9
 801880e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8018810:	10e1      	asrs	r1, r4, #3
 8018812:	fb13 f907 	smulbb	r9, r3, r7
 8018816:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801881a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801881c:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8018820:	fb01 9103 	mla	r1, r1, r3, r9
 8018824:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018826:	00e4      	lsls	r4, r4, #3
 8018828:	fb13 f707 	smulbb	r7, r3, r7
 801882c:	b2e4      	uxtb	r4, r4
 801882e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018830:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8018834:	fb04 7403 	mla	r4, r4, r3, r7
 8018838:	b280      	uxth	r0, r0
 801883a:	b2a4      	uxth	r4, r4
 801883c:	1c43      	adds	r3, r0, #1
 801883e:	f104 0901 	add.w	r9, r4, #1
 8018842:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8018846:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801884a:	b289      	uxth	r1, r1
 801884c:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8018850:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8018854:	ea49 0000 	orr.w	r0, r9, r0
 8018858:	f101 0901 	add.w	r9, r1, #1
 801885c:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8018860:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018864:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018868:	ea40 0009 	orr.w	r0, r0, r9
 801886c:	f8ac 0000 	strh.w	r0, [ip]
 8018870:	4446      	add	r6, r8
 8018872:	b2b6      	uxth	r6, r6
 8018874:	2e07      	cmp	r6, #7
 8018876:	bf81      	itttt	hi
 8018878:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801887a:	785a      	ldrbhi	r2, [r3, #1]
 801887c:	3301      	addhi	r3, #1
 801887e:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8018880:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018882:	bf9a      	itte	ls
 8018884:	fa42 f208 	asrls.w	r2, r2, r8
 8018888:	b2d2      	uxtbls	r2, r2
 801888a:	2600      	movhi	r6, #0
 801888c:	449c      	add	ip, r3
 801888e:	e792      	b.n	80187b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 8018890:	441c      	add	r4, r3
 8018892:	b224      	sxth	r4, r4
 8018894:	e6d5      	b.n	8018642 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8018896:	f1ba 0f01 	cmp.w	sl, #1
 801889a:	f47f af0c 	bne.w	80186b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801889e:	f1bb 0f01 	cmp.w	fp, #1
 80188a2:	f47f af08 	bne.w	80186b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80188a6:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 8018968 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 80188aa:	f8db 0000 	ldr.w	r0, [fp]
 80188ae:	6803      	ldr	r3, [r0, #0]
 80188b0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80188b2:	4798      	blx	r3
 80188b4:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 80188b8:	465a      	mov	r2, fp
 80188ba:	d006      	beq.n	80188ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 80188bc:	f1b8 0f04 	cmp.w	r8, #4
 80188c0:	d140      	bne.n	8018944 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 80188c2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80188c4:	3300      	adds	r3, #0
 80188c6:	bf18      	it	ne
 80188c8:	2301      	movne	r3, #1
 80188ca:	0580      	lsls	r0, r0, #22
 80188cc:	d56e      	bpl.n	80189ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 80188ce:	f1b8 0f08 	cmp.w	r8, #8
 80188d2:	d16b      	bne.n	80189ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 80188d4:	2b00      	cmp	r3, #0
 80188d6:	bf0c      	ite	eq
 80188d8:	f44f 7100 	moveq.w	r1, #512	; 0x200
 80188dc:	f44f 7180 	movne.w	r1, #256	; 0x100
 80188e0:	2d00      	cmp	r5, #0
 80188e2:	f47f aee8 	bne.w	80186b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80188e6:	2e00      	cmp	r6, #0
 80188e8:	f47f aee5 	bne.w	80186b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80188ec:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80188ee:	19e3      	adds	r3, r4, r7
 80188f0:	4283      	cmp	r3, r0
 80188f2:	f73f aee0 	bgt.w	80186b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80188f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80188f8:	980d      	ldr	r0, [sp, #52]	; 0x34
 80188fa:	444b      	add	r3, r9
 80188fc:	4283      	cmp	r3, r0
 80188fe:	f73f aeda 	bgt.w	80186b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018902:	6810      	ldr	r0, [r2, #0]
 8018904:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8018908:	6804      	ldr	r4, [r0, #0]
 801890a:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801890e:	b2bf      	uxth	r7, r7
 8018910:	f1b8 0f08 	cmp.w	r8, #8
 8018914:	f04f 0500 	mov.w	r5, #0
 8018918:	bf18      	it	ne
 801891a:	3701      	addne	r7, #1
 801891c:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8018920:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018922:	9104      	str	r1, [sp, #16]
 8018924:	bf18      	it	ne
 8018926:	f027 0701 	bicne.w	r7, r7, #1
 801892a:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801892c:	bf18      	it	ne
 801892e:	b2bf      	uxthne	r7, r7
 8018930:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8018934:	e9cd 7900 	strd	r7, r9, [sp]
 8018938:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801893a:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801893c:	47a0      	blx	r4
 801893e:	b019      	add	sp, #100	; 0x64
 8018940:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018944:	2300      	movs	r3, #0
 8018946:	e7c0      	b.n	80188ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8018948:	2208      	movs	r2, #8
 801894a:	fb92 f3f8 	sdiv	r3, r2, r8
 801894e:	1e5a      	subs	r2, r3, #1
 8018950:	443a      	add	r2, r7
 8018952:	fb92 f2f3 	sdiv	r2, r2, r3
 8018956:	fb12 f203 	smulbb	r2, r2, r3
 801895a:	b292      	uxth	r2, r2
 801895c:	e6b0      	b.n	80186c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801895e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8018960:	e6ec      	b.n	801873c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 8018962:	bf00      	nop
 8018964:	20015480 	.word	0x20015480
 8018968:	20015488 	.word	0x20015488
 801896c:	20015482 	.word	0x20015482
 8018970:	00fff800 	.word	0x00fff800
 8018974:	9810      	ldr	r0, [sp, #64]	; 0x40
 8018976:	e779      	b.n	801886c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 8018978:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801897a:	b153      	cbz	r3, 8018992 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801897c:	441e      	add	r6, r3
 801897e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018980:	b2b6      	uxth	r6, r6
 8018982:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 8018986:	f006 0607 	and.w	r6, r6, #7
 801898a:	781a      	ldrb	r2, [r3, #0]
 801898c:	9328      	str	r3, [sp, #160]	; 0xa0
 801898e:	4132      	asrs	r2, r6
 8018990:	b2d2      	uxtb	r2, r2
 8018992:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018994:	445b      	add	r3, fp
 8018996:	930a      	str	r3, [sp, #40]	; 0x28
 8018998:	e706      	b.n	80187a8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801899a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801899c:	2b00      	cmp	r3, #0
 801899e:	d1ce      	bne.n	801893e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80189a0:	4b05      	ldr	r3, [pc, #20]	; (80189b8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 80189a2:	6818      	ldr	r0, [r3, #0]
 80189a4:	6803      	ldr	r3, [r0, #0]
 80189a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80189a8:	4798      	blx	r3
 80189aa:	e7c8      	b.n	801893e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80189ac:	2b00      	cmp	r3, #0
 80189ae:	f43f ae82 	beq.w	80186b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80189b2:	f44f 7180 	mov.w	r1, #256	; 0x100
 80189b6:	e793      	b.n	80188e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 80189b8:	20015488 	.word	0x20015488

080189bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 80189bc:	b538      	push	{r3, r4, r5, lr}
 80189be:	4c15      	ldr	r4, [pc, #84]	; (8018a14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 80189c0:	7823      	ldrb	r3, [r4, #0]
 80189c2:	f3bf 8f5b 	dmb	ish
 80189c6:	07da      	lsls	r2, r3, #31
 80189c8:	4605      	mov	r5, r0
 80189ca:	d40b      	bmi.n	80189e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80189cc:	4620      	mov	r0, r4
 80189ce:	f007 fd73 	bl	80204b8 <__cxa_guard_acquire>
 80189d2:	b138      	cbz	r0, 80189e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80189d4:	4620      	mov	r0, r4
 80189d6:	f007 fd7b 	bl	80204d0 <__cxa_guard_release>
 80189da:	4a0f      	ldr	r2, [pc, #60]	; (8018a18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80189dc:	490f      	ldr	r1, [pc, #60]	; (8018a1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 80189de:	4810      	ldr	r0, [pc, #64]	; (8018a20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80189e0:	f007 fd63 	bl	80204aa <__aeabi_atexit>
 80189e4:	4c0f      	ldr	r4, [pc, #60]	; (8018a24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 80189e6:	7823      	ldrb	r3, [r4, #0]
 80189e8:	f3bf 8f5b 	dmb	ish
 80189ec:	07db      	lsls	r3, r3, #31
 80189ee:	d40b      	bmi.n	8018a08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80189f0:	4620      	mov	r0, r4
 80189f2:	f007 fd61 	bl	80204b8 <__cxa_guard_acquire>
 80189f6:	b138      	cbz	r0, 8018a08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80189f8:	4620      	mov	r0, r4
 80189fa:	f007 fd69 	bl	80204d0 <__cxa_guard_release>
 80189fe:	4a06      	ldr	r2, [pc, #24]	; (8018a18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8018a00:	4909      	ldr	r1, [pc, #36]	; (8018a28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8018a02:	480a      	ldr	r0, [pc, #40]	; (8018a2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8018a04:	f007 fd51 	bl	80204aa <__aeabi_atexit>
 8018a08:	4b05      	ldr	r3, [pc, #20]	; (8018a20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8018a0a:	612b      	str	r3, [r5, #16]
 8018a0c:	4b07      	ldr	r3, [pc, #28]	; (8018a2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8018a0e:	616b      	str	r3, [r5, #20]
 8018a10:	bd38      	pop	{r3, r4, r5, pc}
 8018a12:	bf00      	nop
 8018a14:	2001555c 	.word	0x2001555c
 8018a18:	20000000 	.word	0x20000000
 8018a1c:	08016bcd 	.word	0x08016bcd
 8018a20:	200000d0 	.word	0x200000d0
 8018a24:	20015560 	.word	0x20015560
 8018a28:	08016bcb 	.word	0x08016bcb
 8018a2c:	200000d4 	.word	0x200000d4

08018a30 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8018a30:	b538      	push	{r3, r4, r5, lr}
 8018a32:	4c15      	ldr	r4, [pc, #84]	; (8018a88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8018a34:	7823      	ldrb	r3, [r4, #0]
 8018a36:	f3bf 8f5b 	dmb	ish
 8018a3a:	07da      	lsls	r2, r3, #31
 8018a3c:	4605      	mov	r5, r0
 8018a3e:	d40b      	bmi.n	8018a58 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8018a40:	4620      	mov	r0, r4
 8018a42:	f007 fd39 	bl	80204b8 <__cxa_guard_acquire>
 8018a46:	b138      	cbz	r0, 8018a58 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8018a48:	4620      	mov	r0, r4
 8018a4a:	f007 fd41 	bl	80204d0 <__cxa_guard_release>
 8018a4e:	4a0f      	ldr	r2, [pc, #60]	; (8018a8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8018a50:	490f      	ldr	r1, [pc, #60]	; (8018a90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8018a52:	4810      	ldr	r0, [pc, #64]	; (8018a94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8018a54:	f007 fd29 	bl	80204aa <__aeabi_atexit>
 8018a58:	4c0f      	ldr	r4, [pc, #60]	; (8018a98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8018a5a:	7823      	ldrb	r3, [r4, #0]
 8018a5c:	f3bf 8f5b 	dmb	ish
 8018a60:	07db      	lsls	r3, r3, #31
 8018a62:	d40b      	bmi.n	8018a7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8018a64:	4620      	mov	r0, r4
 8018a66:	f007 fd27 	bl	80204b8 <__cxa_guard_acquire>
 8018a6a:	b138      	cbz	r0, 8018a7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8018a6c:	4620      	mov	r0, r4
 8018a6e:	f007 fd2f 	bl	80204d0 <__cxa_guard_release>
 8018a72:	4a06      	ldr	r2, [pc, #24]	; (8018a8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8018a74:	4909      	ldr	r1, [pc, #36]	; (8018a9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8018a76:	480a      	ldr	r0, [pc, #40]	; (8018aa0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8018a78:	f007 fd17 	bl	80204aa <__aeabi_atexit>
 8018a7c:	4b05      	ldr	r3, [pc, #20]	; (8018a94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8018a7e:	60ab      	str	r3, [r5, #8]
 8018a80:	4b07      	ldr	r3, [pc, #28]	; (8018aa0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8018a82:	60eb      	str	r3, [r5, #12]
 8018a84:	bd38      	pop	{r3, r4, r5, pc}
 8018a86:	bf00      	nop
 8018a88:	20015534 	.word	0x20015534
 8018a8c:	20000000 	.word	0x20000000
 8018a90:	08016bd1 	.word	0x08016bd1
 8018a94:	200000a8 	.word	0x200000a8
 8018a98:	20015538 	.word	0x20015538
 8018a9c:	08016bcf 	.word	0x08016bcf
 8018aa0:	200000ac 	.word	0x200000ac

08018aa4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8018aa4:	b510      	push	{r4, lr}
 8018aa6:	4604      	mov	r4, r0
 8018aa8:	f7ff ff88 	bl	80189bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8018aac:	4620      	mov	r0, r4
 8018aae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018ab2:	f7ff bfbd 	b.w	8018a30 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08018ab8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8018ab8:	b538      	push	{r3, r4, r5, lr}
 8018aba:	4c15      	ldr	r4, [pc, #84]	; (8018b10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8018abc:	7823      	ldrb	r3, [r4, #0]
 8018abe:	f3bf 8f5b 	dmb	ish
 8018ac2:	07da      	lsls	r2, r3, #31
 8018ac4:	4605      	mov	r5, r0
 8018ac6:	d40b      	bmi.n	8018ae0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8018ac8:	4620      	mov	r0, r4
 8018aca:	f007 fcf5 	bl	80204b8 <__cxa_guard_acquire>
 8018ace:	b138      	cbz	r0, 8018ae0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8018ad0:	4620      	mov	r0, r4
 8018ad2:	f007 fcfd 	bl	80204d0 <__cxa_guard_release>
 8018ad6:	4a0f      	ldr	r2, [pc, #60]	; (8018b14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8018ad8:	490f      	ldr	r1, [pc, #60]	; (8018b18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8018ada:	4810      	ldr	r0, [pc, #64]	; (8018b1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8018adc:	f007 fce5 	bl	80204aa <__aeabi_atexit>
 8018ae0:	4c0f      	ldr	r4, [pc, #60]	; (8018b20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8018ae2:	7823      	ldrb	r3, [r4, #0]
 8018ae4:	f3bf 8f5b 	dmb	ish
 8018ae8:	07db      	lsls	r3, r3, #31
 8018aea:	d40b      	bmi.n	8018b04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8018aec:	4620      	mov	r0, r4
 8018aee:	f007 fce3 	bl	80204b8 <__cxa_guard_acquire>
 8018af2:	b138      	cbz	r0, 8018b04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8018af4:	4620      	mov	r0, r4
 8018af6:	f007 fceb 	bl	80204d0 <__cxa_guard_release>
 8018afa:	4a06      	ldr	r2, [pc, #24]	; (8018b14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8018afc:	4909      	ldr	r1, [pc, #36]	; (8018b24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8018afe:	480a      	ldr	r0, [pc, #40]	; (8018b28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8018b00:	f007 fcd3 	bl	80204aa <__aeabi_atexit>
 8018b04:	4b05      	ldr	r3, [pc, #20]	; (8018b1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8018b06:	622b      	str	r3, [r5, #32]
 8018b08:	4b07      	ldr	r3, [pc, #28]	; (8018b28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8018b0a:	626b      	str	r3, [r5, #36]	; 0x24
 8018b0c:	bd38      	pop	{r3, r4, r5, pc}
 8018b0e:	bf00      	nop
 8018b10:	20015564 	.word	0x20015564
 8018b14:	20000000 	.word	0x20000000
 8018b18:	08016bc5 	.word	0x08016bc5
 8018b1c:	200000d8 	.word	0x200000d8
 8018b20:	20015568 	.word	0x20015568
 8018b24:	08016bc3 	.word	0x08016bc3
 8018b28:	200000dc 	.word	0x200000dc

08018b2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8018b2c:	b538      	push	{r3, r4, r5, lr}
 8018b2e:	4c15      	ldr	r4, [pc, #84]	; (8018b84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8018b30:	7823      	ldrb	r3, [r4, #0]
 8018b32:	f3bf 8f5b 	dmb	ish
 8018b36:	07da      	lsls	r2, r3, #31
 8018b38:	4605      	mov	r5, r0
 8018b3a:	d40b      	bmi.n	8018b54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8018b3c:	4620      	mov	r0, r4
 8018b3e:	f007 fcbb 	bl	80204b8 <__cxa_guard_acquire>
 8018b42:	b138      	cbz	r0, 8018b54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8018b44:	4620      	mov	r0, r4
 8018b46:	f007 fcc3 	bl	80204d0 <__cxa_guard_release>
 8018b4a:	4a0f      	ldr	r2, [pc, #60]	; (8018b88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8018b4c:	490f      	ldr	r1, [pc, #60]	; (8018b8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8018b4e:	4810      	ldr	r0, [pc, #64]	; (8018b90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8018b50:	f007 fcab 	bl	80204aa <__aeabi_atexit>
 8018b54:	4c0f      	ldr	r4, [pc, #60]	; (8018b94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8018b56:	7823      	ldrb	r3, [r4, #0]
 8018b58:	f3bf 8f5b 	dmb	ish
 8018b5c:	07db      	lsls	r3, r3, #31
 8018b5e:	d40b      	bmi.n	8018b78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8018b60:	4620      	mov	r0, r4
 8018b62:	f007 fca9 	bl	80204b8 <__cxa_guard_acquire>
 8018b66:	b138      	cbz	r0, 8018b78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8018b68:	4620      	mov	r0, r4
 8018b6a:	f007 fcb1 	bl	80204d0 <__cxa_guard_release>
 8018b6e:	4a06      	ldr	r2, [pc, #24]	; (8018b88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8018b70:	4909      	ldr	r1, [pc, #36]	; (8018b98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8018b72:	480a      	ldr	r0, [pc, #40]	; (8018b9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8018b74:	f007 fc99 	bl	80204aa <__aeabi_atexit>
 8018b78:	4b05      	ldr	r3, [pc, #20]	; (8018b90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8018b7a:	61ab      	str	r3, [r5, #24]
 8018b7c:	4b07      	ldr	r3, [pc, #28]	; (8018b9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8018b7e:	61eb      	str	r3, [r5, #28]
 8018b80:	bd38      	pop	{r3, r4, r5, pc}
 8018b82:	bf00      	nop
 8018b84:	2001553c 	.word	0x2001553c
 8018b88:	20000000 	.word	0x20000000
 8018b8c:	08016bc9 	.word	0x08016bc9
 8018b90:	200000b0 	.word	0x200000b0
 8018b94:	20015540 	.word	0x20015540
 8018b98:	08016bc7 	.word	0x08016bc7
 8018b9c:	200000b4 	.word	0x200000b4

08018ba0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8018ba0:	b510      	push	{r4, lr}
 8018ba2:	4604      	mov	r4, r0
 8018ba4:	f7ff ff88 	bl	8018ab8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8018ba8:	4620      	mov	r0, r4
 8018baa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018bae:	f7ff bfbd 	b.w	8018b2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08018bb4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8018bb4:	b538      	push	{r3, r4, r5, lr}
 8018bb6:	4c15      	ldr	r4, [pc, #84]	; (8018c0c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8018bb8:	7823      	ldrb	r3, [r4, #0]
 8018bba:	f3bf 8f5b 	dmb	ish
 8018bbe:	07da      	lsls	r2, r3, #31
 8018bc0:	4605      	mov	r5, r0
 8018bc2:	d40b      	bmi.n	8018bdc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8018bc4:	4620      	mov	r0, r4
 8018bc6:	f007 fc77 	bl	80204b8 <__cxa_guard_acquire>
 8018bca:	b138      	cbz	r0, 8018bdc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8018bcc:	4620      	mov	r0, r4
 8018bce:	f007 fc7f 	bl	80204d0 <__cxa_guard_release>
 8018bd2:	4a0f      	ldr	r2, [pc, #60]	; (8018c10 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8018bd4:	490f      	ldr	r1, [pc, #60]	; (8018c14 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8018bd6:	4810      	ldr	r0, [pc, #64]	; (8018c18 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8018bd8:	f007 fc67 	bl	80204aa <__aeabi_atexit>
 8018bdc:	4c0f      	ldr	r4, [pc, #60]	; (8018c1c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8018bde:	7823      	ldrb	r3, [r4, #0]
 8018be0:	f3bf 8f5b 	dmb	ish
 8018be4:	07db      	lsls	r3, r3, #31
 8018be6:	d40b      	bmi.n	8018c00 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8018be8:	4620      	mov	r0, r4
 8018bea:	f007 fc65 	bl	80204b8 <__cxa_guard_acquire>
 8018bee:	b138      	cbz	r0, 8018c00 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8018bf0:	4620      	mov	r0, r4
 8018bf2:	f007 fc6d 	bl	80204d0 <__cxa_guard_release>
 8018bf6:	4a06      	ldr	r2, [pc, #24]	; (8018c10 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8018bf8:	4909      	ldr	r1, [pc, #36]	; (8018c20 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8018bfa:	480a      	ldr	r0, [pc, #40]	; (8018c24 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8018bfc:	f007 fc55 	bl	80204aa <__aeabi_atexit>
 8018c00:	4b05      	ldr	r3, [pc, #20]	; (8018c18 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8018c02:	632b      	str	r3, [r5, #48]	; 0x30
 8018c04:	4b07      	ldr	r3, [pc, #28]	; (8018c24 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8018c06:	636b      	str	r3, [r5, #52]	; 0x34
 8018c08:	bd38      	pop	{r3, r4, r5, pc}
 8018c0a:	bf00      	nop
 8018c0c:	20015574 	.word	0x20015574
 8018c10:	20000000 	.word	0x20000000
 8018c14:	08016bbd 	.word	0x08016bbd
 8018c18:	200000e8 	.word	0x200000e8
 8018c1c:	20015578 	.word	0x20015578
 8018c20:	08016bbb 	.word	0x08016bbb
 8018c24:	200000ec 	.word	0x200000ec

08018c28 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8018c28:	b538      	push	{r3, r4, r5, lr}
 8018c2a:	4c15      	ldr	r4, [pc, #84]	; (8018c80 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8018c2c:	7823      	ldrb	r3, [r4, #0]
 8018c2e:	f3bf 8f5b 	dmb	ish
 8018c32:	07da      	lsls	r2, r3, #31
 8018c34:	4605      	mov	r5, r0
 8018c36:	d40b      	bmi.n	8018c50 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8018c38:	4620      	mov	r0, r4
 8018c3a:	f007 fc3d 	bl	80204b8 <__cxa_guard_acquire>
 8018c3e:	b138      	cbz	r0, 8018c50 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8018c40:	4620      	mov	r0, r4
 8018c42:	f007 fc45 	bl	80204d0 <__cxa_guard_release>
 8018c46:	4a0f      	ldr	r2, [pc, #60]	; (8018c84 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8018c48:	490f      	ldr	r1, [pc, #60]	; (8018c88 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8018c4a:	4810      	ldr	r0, [pc, #64]	; (8018c8c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8018c4c:	f007 fc2d 	bl	80204aa <__aeabi_atexit>
 8018c50:	4c0f      	ldr	r4, [pc, #60]	; (8018c90 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8018c52:	7823      	ldrb	r3, [r4, #0]
 8018c54:	f3bf 8f5b 	dmb	ish
 8018c58:	07db      	lsls	r3, r3, #31
 8018c5a:	d40b      	bmi.n	8018c74 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8018c5c:	4620      	mov	r0, r4
 8018c5e:	f007 fc2b 	bl	80204b8 <__cxa_guard_acquire>
 8018c62:	b138      	cbz	r0, 8018c74 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8018c64:	4620      	mov	r0, r4
 8018c66:	f007 fc33 	bl	80204d0 <__cxa_guard_release>
 8018c6a:	4a06      	ldr	r2, [pc, #24]	; (8018c84 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8018c6c:	4909      	ldr	r1, [pc, #36]	; (8018c94 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8018c6e:	480a      	ldr	r0, [pc, #40]	; (8018c98 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8018c70:	f007 fc1b 	bl	80204aa <__aeabi_atexit>
 8018c74:	4b05      	ldr	r3, [pc, #20]	; (8018c8c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8018c76:	62ab      	str	r3, [r5, #40]	; 0x28
 8018c78:	4b07      	ldr	r3, [pc, #28]	; (8018c98 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8018c7a:	62eb      	str	r3, [r5, #44]	; 0x2c
 8018c7c:	bd38      	pop	{r3, r4, r5, pc}
 8018c7e:	bf00      	nop
 8018c80:	20015544 	.word	0x20015544
 8018c84:	20000000 	.word	0x20000000
 8018c88:	08016bc1 	.word	0x08016bc1
 8018c8c:	200000b8 	.word	0x200000b8
 8018c90:	20015548 	.word	0x20015548
 8018c94:	08016bbf 	.word	0x08016bbf
 8018c98:	200000bc 	.word	0x200000bc

08018c9c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8018c9c:	b510      	push	{r4, lr}
 8018c9e:	4604      	mov	r4, r0
 8018ca0:	f7ff ff88 	bl	8018bb4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8018ca4:	4620      	mov	r0, r4
 8018ca6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018caa:	f7ff bfbd 	b.w	8018c28 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08018cb0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8018cb0:	b538      	push	{r3, r4, r5, lr}
 8018cb2:	4c15      	ldr	r4, [pc, #84]	; (8018d08 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8018cb4:	7823      	ldrb	r3, [r4, #0]
 8018cb6:	f3bf 8f5b 	dmb	ish
 8018cba:	07da      	lsls	r2, r3, #31
 8018cbc:	4605      	mov	r5, r0
 8018cbe:	d40b      	bmi.n	8018cd8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8018cc0:	4620      	mov	r0, r4
 8018cc2:	f007 fbf9 	bl	80204b8 <__cxa_guard_acquire>
 8018cc6:	b138      	cbz	r0, 8018cd8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8018cc8:	4620      	mov	r0, r4
 8018cca:	f007 fc01 	bl	80204d0 <__cxa_guard_release>
 8018cce:	4a0f      	ldr	r2, [pc, #60]	; (8018d0c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8018cd0:	490f      	ldr	r1, [pc, #60]	; (8018d10 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8018cd2:	4810      	ldr	r0, [pc, #64]	; (8018d14 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8018cd4:	f007 fbe9 	bl	80204aa <__aeabi_atexit>
 8018cd8:	4c0f      	ldr	r4, [pc, #60]	; (8018d18 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8018cda:	7823      	ldrb	r3, [r4, #0]
 8018cdc:	f3bf 8f5b 	dmb	ish
 8018ce0:	07db      	lsls	r3, r3, #31
 8018ce2:	d40b      	bmi.n	8018cfc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8018ce4:	4620      	mov	r0, r4
 8018ce6:	f007 fbe7 	bl	80204b8 <__cxa_guard_acquire>
 8018cea:	b138      	cbz	r0, 8018cfc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8018cec:	4620      	mov	r0, r4
 8018cee:	f007 fbef 	bl	80204d0 <__cxa_guard_release>
 8018cf2:	4a06      	ldr	r2, [pc, #24]	; (8018d0c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8018cf4:	4909      	ldr	r1, [pc, #36]	; (8018d1c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8018cf6:	480a      	ldr	r0, [pc, #40]	; (8018d20 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8018cf8:	f007 fbd7 	bl	80204aa <__aeabi_atexit>
 8018cfc:	4b05      	ldr	r3, [pc, #20]	; (8018d14 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8018cfe:	652b      	str	r3, [r5, #80]	; 0x50
 8018d00:	4b07      	ldr	r3, [pc, #28]	; (8018d20 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8018d02:	656b      	str	r3, [r5, #84]	; 0x54
 8018d04:	bd38      	pop	{r3, r4, r5, pc}
 8018d06:	bf00      	nop
 8018d08:	2001557c 	.word	0x2001557c
 8018d0c:	20000000 	.word	0x20000000
 8018d10:	08016bad 	.word	0x08016bad
 8018d14:	200000f0 	.word	0x200000f0
 8018d18:	20015580 	.word	0x20015580
 8018d1c:	08016bab 	.word	0x08016bab
 8018d20:	200000f4 	.word	0x200000f4

08018d24 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8018d24:	b538      	push	{r3, r4, r5, lr}
 8018d26:	4c15      	ldr	r4, [pc, #84]	; (8018d7c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8018d28:	7823      	ldrb	r3, [r4, #0]
 8018d2a:	f3bf 8f5b 	dmb	ish
 8018d2e:	07da      	lsls	r2, r3, #31
 8018d30:	4605      	mov	r5, r0
 8018d32:	d40b      	bmi.n	8018d4c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8018d34:	4620      	mov	r0, r4
 8018d36:	f007 fbbf 	bl	80204b8 <__cxa_guard_acquire>
 8018d3a:	b138      	cbz	r0, 8018d4c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8018d3c:	4620      	mov	r0, r4
 8018d3e:	f007 fbc7 	bl	80204d0 <__cxa_guard_release>
 8018d42:	4a0f      	ldr	r2, [pc, #60]	; (8018d80 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8018d44:	490f      	ldr	r1, [pc, #60]	; (8018d84 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8018d46:	4810      	ldr	r0, [pc, #64]	; (8018d88 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8018d48:	f007 fbaf 	bl	80204aa <__aeabi_atexit>
 8018d4c:	4c0f      	ldr	r4, [pc, #60]	; (8018d8c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8018d4e:	7823      	ldrb	r3, [r4, #0]
 8018d50:	f3bf 8f5b 	dmb	ish
 8018d54:	07db      	lsls	r3, r3, #31
 8018d56:	d40b      	bmi.n	8018d70 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8018d58:	4620      	mov	r0, r4
 8018d5a:	f007 fbad 	bl	80204b8 <__cxa_guard_acquire>
 8018d5e:	b138      	cbz	r0, 8018d70 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8018d60:	4620      	mov	r0, r4
 8018d62:	f007 fbb5 	bl	80204d0 <__cxa_guard_release>
 8018d66:	4a06      	ldr	r2, [pc, #24]	; (8018d80 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8018d68:	4909      	ldr	r1, [pc, #36]	; (8018d90 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8018d6a:	480a      	ldr	r0, [pc, #40]	; (8018d94 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8018d6c:	f007 fb9d 	bl	80204aa <__aeabi_atexit>
 8018d70:	4b05      	ldr	r3, [pc, #20]	; (8018d88 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8018d72:	64ab      	str	r3, [r5, #72]	; 0x48
 8018d74:	4b07      	ldr	r3, [pc, #28]	; (8018d94 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8018d76:	64eb      	str	r3, [r5, #76]	; 0x4c
 8018d78:	bd38      	pop	{r3, r4, r5, pc}
 8018d7a:	bf00      	nop
 8018d7c:	20015584 	.word	0x20015584
 8018d80:	20000000 	.word	0x20000000
 8018d84:	08016bb1 	.word	0x08016bb1
 8018d88:	200000f8 	.word	0x200000f8
 8018d8c:	20015588 	.word	0x20015588
 8018d90:	08016baf 	.word	0x08016baf
 8018d94:	200000fc 	.word	0x200000fc

08018d98 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8018d98:	b538      	push	{r3, r4, r5, lr}
 8018d9a:	4c15      	ldr	r4, [pc, #84]	; (8018df0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8018d9c:	7823      	ldrb	r3, [r4, #0]
 8018d9e:	f3bf 8f5b 	dmb	ish
 8018da2:	07da      	lsls	r2, r3, #31
 8018da4:	4605      	mov	r5, r0
 8018da6:	d40b      	bmi.n	8018dc0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8018da8:	4620      	mov	r0, r4
 8018daa:	f007 fb85 	bl	80204b8 <__cxa_guard_acquire>
 8018dae:	b138      	cbz	r0, 8018dc0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8018db0:	4620      	mov	r0, r4
 8018db2:	f007 fb8d 	bl	80204d0 <__cxa_guard_release>
 8018db6:	4a0f      	ldr	r2, [pc, #60]	; (8018df4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8018db8:	490f      	ldr	r1, [pc, #60]	; (8018df8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8018dba:	4810      	ldr	r0, [pc, #64]	; (8018dfc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8018dbc:	f007 fb75 	bl	80204aa <__aeabi_atexit>
 8018dc0:	4c0f      	ldr	r4, [pc, #60]	; (8018e00 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8018dc2:	7823      	ldrb	r3, [r4, #0]
 8018dc4:	f3bf 8f5b 	dmb	ish
 8018dc8:	07db      	lsls	r3, r3, #31
 8018dca:	d40b      	bmi.n	8018de4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8018dcc:	4620      	mov	r0, r4
 8018dce:	f007 fb73 	bl	80204b8 <__cxa_guard_acquire>
 8018dd2:	b138      	cbz	r0, 8018de4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8018dd4:	4620      	mov	r0, r4
 8018dd6:	f007 fb7b 	bl	80204d0 <__cxa_guard_release>
 8018dda:	4a06      	ldr	r2, [pc, #24]	; (8018df4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8018ddc:	4909      	ldr	r1, [pc, #36]	; (8018e04 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8018dde:	480a      	ldr	r0, [pc, #40]	; (8018e08 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8018de0:	f007 fb63 	bl	80204aa <__aeabi_atexit>
 8018de4:	4b05      	ldr	r3, [pc, #20]	; (8018dfc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8018de6:	642b      	str	r3, [r5, #64]	; 0x40
 8018de8:	4b07      	ldr	r3, [pc, #28]	; (8018e08 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8018dea:	646b      	str	r3, [r5, #68]	; 0x44
 8018dec:	bd38      	pop	{r3, r4, r5, pc}
 8018dee:	bf00      	nop
 8018df0:	2001554c 	.word	0x2001554c
 8018df4:	20000000 	.word	0x20000000
 8018df8:	08016bb5 	.word	0x08016bb5
 8018dfc:	200000c0 	.word	0x200000c0
 8018e00:	20015550 	.word	0x20015550
 8018e04:	08016bb3 	.word	0x08016bb3
 8018e08:	200000c4 	.word	0x200000c4

08018e0c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8018e0c:	b538      	push	{r3, r4, r5, lr}
 8018e0e:	4c15      	ldr	r4, [pc, #84]	; (8018e64 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8018e10:	7823      	ldrb	r3, [r4, #0]
 8018e12:	f3bf 8f5b 	dmb	ish
 8018e16:	07da      	lsls	r2, r3, #31
 8018e18:	4605      	mov	r5, r0
 8018e1a:	d40b      	bmi.n	8018e34 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8018e1c:	4620      	mov	r0, r4
 8018e1e:	f007 fb4b 	bl	80204b8 <__cxa_guard_acquire>
 8018e22:	b138      	cbz	r0, 8018e34 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8018e24:	4620      	mov	r0, r4
 8018e26:	f007 fb53 	bl	80204d0 <__cxa_guard_release>
 8018e2a:	4a0f      	ldr	r2, [pc, #60]	; (8018e68 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8018e2c:	490f      	ldr	r1, [pc, #60]	; (8018e6c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8018e2e:	4810      	ldr	r0, [pc, #64]	; (8018e70 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8018e30:	f007 fb3b 	bl	80204aa <__aeabi_atexit>
 8018e34:	4c0f      	ldr	r4, [pc, #60]	; (8018e74 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8018e36:	7823      	ldrb	r3, [r4, #0]
 8018e38:	f3bf 8f5b 	dmb	ish
 8018e3c:	07db      	lsls	r3, r3, #31
 8018e3e:	d40b      	bmi.n	8018e58 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8018e40:	4620      	mov	r0, r4
 8018e42:	f007 fb39 	bl	80204b8 <__cxa_guard_acquire>
 8018e46:	b138      	cbz	r0, 8018e58 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8018e48:	4620      	mov	r0, r4
 8018e4a:	f007 fb41 	bl	80204d0 <__cxa_guard_release>
 8018e4e:	4a06      	ldr	r2, [pc, #24]	; (8018e68 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8018e50:	4909      	ldr	r1, [pc, #36]	; (8018e78 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8018e52:	480a      	ldr	r0, [pc, #40]	; (8018e7c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8018e54:	f007 fb29 	bl	80204aa <__aeabi_atexit>
 8018e58:	4b05      	ldr	r3, [pc, #20]	; (8018e70 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8018e5a:	63ab      	str	r3, [r5, #56]	; 0x38
 8018e5c:	4b07      	ldr	r3, [pc, #28]	; (8018e7c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8018e5e:	63eb      	str	r3, [r5, #60]	; 0x3c
 8018e60:	bd38      	pop	{r3, r4, r5, pc}
 8018e62:	bf00      	nop
 8018e64:	2001556c 	.word	0x2001556c
 8018e68:	20000000 	.word	0x20000000
 8018e6c:	08016bb9 	.word	0x08016bb9
 8018e70:	200000e0 	.word	0x200000e0
 8018e74:	20015570 	.word	0x20015570
 8018e78:	08016bb7 	.word	0x08016bb7
 8018e7c:	200000e4 	.word	0x200000e4

08018e80 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8018e80:	b510      	push	{r4, lr}
 8018e82:	4604      	mov	r4, r0
 8018e84:	f7ff ff14 	bl	8018cb0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8018e88:	4620      	mov	r0, r4
 8018e8a:	f7ff ff85 	bl	8018d98 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8018e8e:	4620      	mov	r0, r4
 8018e90:	f7ff ff48 	bl	8018d24 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8018e94:	4620      	mov	r0, r4
 8018e96:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018e9a:	f7ff bfb7 	b.w	8018e0c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08018ea0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8018ea0:	b538      	push	{r3, r4, r5, lr}
 8018ea2:	4c15      	ldr	r4, [pc, #84]	; (8018ef8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8018ea4:	7823      	ldrb	r3, [r4, #0]
 8018ea6:	f3bf 8f5b 	dmb	ish
 8018eaa:	07da      	lsls	r2, r3, #31
 8018eac:	4605      	mov	r5, r0
 8018eae:	d40b      	bmi.n	8018ec8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8018eb0:	4620      	mov	r0, r4
 8018eb2:	f007 fb01 	bl	80204b8 <__cxa_guard_acquire>
 8018eb6:	b138      	cbz	r0, 8018ec8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8018eb8:	4620      	mov	r0, r4
 8018eba:	f007 fb09 	bl	80204d0 <__cxa_guard_release>
 8018ebe:	4a0f      	ldr	r2, [pc, #60]	; (8018efc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8018ec0:	490f      	ldr	r1, [pc, #60]	; (8018f00 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8018ec2:	4810      	ldr	r0, [pc, #64]	; (8018f04 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8018ec4:	f007 faf1 	bl	80204aa <__aeabi_atexit>
 8018ec8:	4c0f      	ldr	r4, [pc, #60]	; (8018f08 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8018eca:	7823      	ldrb	r3, [r4, #0]
 8018ecc:	f3bf 8f5b 	dmb	ish
 8018ed0:	07db      	lsls	r3, r3, #31
 8018ed2:	d40b      	bmi.n	8018eec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8018ed4:	4620      	mov	r0, r4
 8018ed6:	f007 faef 	bl	80204b8 <__cxa_guard_acquire>
 8018eda:	b138      	cbz	r0, 8018eec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8018edc:	4620      	mov	r0, r4
 8018ede:	f007 faf7 	bl	80204d0 <__cxa_guard_release>
 8018ee2:	4a06      	ldr	r2, [pc, #24]	; (8018efc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8018ee4:	4909      	ldr	r1, [pc, #36]	; (8018f0c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8018ee6:	480a      	ldr	r0, [pc, #40]	; (8018f10 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8018ee8:	f007 fadf 	bl	80204aa <__aeabi_atexit>
 8018eec:	4b05      	ldr	r3, [pc, #20]	; (8018f04 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8018eee:	662b      	str	r3, [r5, #96]	; 0x60
 8018ef0:	4b07      	ldr	r3, [pc, #28]	; (8018f10 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8018ef2:	666b      	str	r3, [r5, #100]	; 0x64
 8018ef4:	bd38      	pop	{r3, r4, r5, pc}
 8018ef6:	bf00      	nop
 8018ef8:	20015554 	.word	0x20015554
 8018efc:	20000000 	.word	0x20000000
 8018f00:	08016ba5 	.word	0x08016ba5
 8018f04:	200000c8 	.word	0x200000c8
 8018f08:	20015558 	.word	0x20015558
 8018f0c:	08016ba3 	.word	0x08016ba3
 8018f10:	200000cc 	.word	0x200000cc

08018f14 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8018f14:	b538      	push	{r3, r4, r5, lr}
 8018f16:	4c15      	ldr	r4, [pc, #84]	; (8018f6c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8018f18:	7823      	ldrb	r3, [r4, #0]
 8018f1a:	f3bf 8f5b 	dmb	ish
 8018f1e:	07da      	lsls	r2, r3, #31
 8018f20:	4605      	mov	r5, r0
 8018f22:	d40b      	bmi.n	8018f3c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8018f24:	4620      	mov	r0, r4
 8018f26:	f007 fac7 	bl	80204b8 <__cxa_guard_acquire>
 8018f2a:	b138      	cbz	r0, 8018f3c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8018f2c:	4620      	mov	r0, r4
 8018f2e:	f007 facf 	bl	80204d0 <__cxa_guard_release>
 8018f32:	4a0f      	ldr	r2, [pc, #60]	; (8018f70 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8018f34:	490f      	ldr	r1, [pc, #60]	; (8018f74 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8018f36:	4810      	ldr	r0, [pc, #64]	; (8018f78 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8018f38:	f007 fab7 	bl	80204aa <__aeabi_atexit>
 8018f3c:	4c0f      	ldr	r4, [pc, #60]	; (8018f7c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8018f3e:	7823      	ldrb	r3, [r4, #0]
 8018f40:	f3bf 8f5b 	dmb	ish
 8018f44:	07db      	lsls	r3, r3, #31
 8018f46:	d40b      	bmi.n	8018f60 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8018f48:	4620      	mov	r0, r4
 8018f4a:	f007 fab5 	bl	80204b8 <__cxa_guard_acquire>
 8018f4e:	b138      	cbz	r0, 8018f60 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8018f50:	4620      	mov	r0, r4
 8018f52:	f007 fabd 	bl	80204d0 <__cxa_guard_release>
 8018f56:	4a06      	ldr	r2, [pc, #24]	; (8018f70 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8018f58:	4909      	ldr	r1, [pc, #36]	; (8018f80 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8018f5a:	480a      	ldr	r0, [pc, #40]	; (8018f84 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8018f5c:	f007 faa5 	bl	80204aa <__aeabi_atexit>
 8018f60:	4b05      	ldr	r3, [pc, #20]	; (8018f78 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8018f62:	65ab      	str	r3, [r5, #88]	; 0x58
 8018f64:	4b07      	ldr	r3, [pc, #28]	; (8018f84 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8018f66:	65eb      	str	r3, [r5, #92]	; 0x5c
 8018f68:	bd38      	pop	{r3, r4, r5, pc}
 8018f6a:	bf00      	nop
 8018f6c:	2001552c 	.word	0x2001552c
 8018f70:	20000000 	.word	0x20000000
 8018f74:	08016ba9 	.word	0x08016ba9
 8018f78:	200000a0 	.word	0x200000a0
 8018f7c:	20015530 	.word	0x20015530
 8018f80:	08016ba7 	.word	0x08016ba7
 8018f84:	200000a4 	.word	0x200000a4

08018f88 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8018f88:	b510      	push	{r4, lr}
 8018f8a:	4604      	mov	r4, r0
 8018f8c:	f7ff ff88 	bl	8018ea0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8018f90:	4620      	mov	r0, r4
 8018f92:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018f96:	f7ff bfbd 	b.w	8018f14 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08018f9c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8018f9c:	b538      	push	{r3, r4, r5, lr}
 8018f9e:	4c15      	ldr	r4, [pc, #84]	; (8018ff4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8018fa0:	7823      	ldrb	r3, [r4, #0]
 8018fa2:	f3bf 8f5b 	dmb	ish
 8018fa6:	07da      	lsls	r2, r3, #31
 8018fa8:	4605      	mov	r5, r0
 8018faa:	d40b      	bmi.n	8018fc4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8018fac:	4620      	mov	r0, r4
 8018fae:	f007 fa83 	bl	80204b8 <__cxa_guard_acquire>
 8018fb2:	b138      	cbz	r0, 8018fc4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8018fb4:	4620      	mov	r0, r4
 8018fb6:	f007 fa8b 	bl	80204d0 <__cxa_guard_release>
 8018fba:	4a0f      	ldr	r2, [pc, #60]	; (8018ff8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8018fbc:	490f      	ldr	r1, [pc, #60]	; (8018ffc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8018fbe:	4810      	ldr	r0, [pc, #64]	; (8019000 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8018fc0:	f007 fa73 	bl	80204aa <__aeabi_atexit>
 8018fc4:	4c0f      	ldr	r4, [pc, #60]	; (8019004 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8018fc6:	7823      	ldrb	r3, [r4, #0]
 8018fc8:	f3bf 8f5b 	dmb	ish
 8018fcc:	07db      	lsls	r3, r3, #31
 8018fce:	d40b      	bmi.n	8018fe8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8018fd0:	4620      	mov	r0, r4
 8018fd2:	f007 fa71 	bl	80204b8 <__cxa_guard_acquire>
 8018fd6:	b138      	cbz	r0, 8018fe8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8018fd8:	4620      	mov	r0, r4
 8018fda:	f007 fa79 	bl	80204d0 <__cxa_guard_release>
 8018fde:	4a06      	ldr	r2, [pc, #24]	; (8018ff8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8018fe0:	4909      	ldr	r1, [pc, #36]	; (8019008 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8018fe2:	480a      	ldr	r0, [pc, #40]	; (801900c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8018fe4:	f007 fa61 	bl	80204aa <__aeabi_atexit>
 8018fe8:	4b05      	ldr	r3, [pc, #20]	; (8019000 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8018fea:	672b      	str	r3, [r5, #112]	; 0x70
 8018fec:	4b07      	ldr	r3, [pc, #28]	; (801900c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8018fee:	676b      	str	r3, [r5, #116]	; 0x74
 8018ff0:	bd38      	pop	{r3, r4, r5, pc}
 8018ff2:	bf00      	nop
 8018ff4:	20015524 	.word	0x20015524
 8018ff8:	20000000 	.word	0x20000000
 8018ffc:	08016b9d 	.word	0x08016b9d
 8019000:	20000098 	.word	0x20000098
 8019004:	20015528 	.word	0x20015528
 8019008:	08016b9b 	.word	0x08016b9b
 801900c:	2000009c 	.word	0x2000009c

08019010 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8019010:	b538      	push	{r3, r4, r5, lr}
 8019012:	4c15      	ldr	r4, [pc, #84]	; (8019068 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8019014:	7823      	ldrb	r3, [r4, #0]
 8019016:	f3bf 8f5b 	dmb	ish
 801901a:	07da      	lsls	r2, r3, #31
 801901c:	4605      	mov	r5, r0
 801901e:	d40b      	bmi.n	8019038 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8019020:	4620      	mov	r0, r4
 8019022:	f007 fa49 	bl	80204b8 <__cxa_guard_acquire>
 8019026:	b138      	cbz	r0, 8019038 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8019028:	4620      	mov	r0, r4
 801902a:	f007 fa51 	bl	80204d0 <__cxa_guard_release>
 801902e:	4a0f      	ldr	r2, [pc, #60]	; (801906c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8019030:	490f      	ldr	r1, [pc, #60]	; (8019070 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8019032:	4810      	ldr	r0, [pc, #64]	; (8019074 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8019034:	f007 fa39 	bl	80204aa <__aeabi_atexit>
 8019038:	4c0f      	ldr	r4, [pc, #60]	; (8019078 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801903a:	7823      	ldrb	r3, [r4, #0]
 801903c:	f3bf 8f5b 	dmb	ish
 8019040:	07db      	lsls	r3, r3, #31
 8019042:	d40b      	bmi.n	801905c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8019044:	4620      	mov	r0, r4
 8019046:	f007 fa37 	bl	80204b8 <__cxa_guard_acquire>
 801904a:	b138      	cbz	r0, 801905c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801904c:	4620      	mov	r0, r4
 801904e:	f007 fa3f 	bl	80204d0 <__cxa_guard_release>
 8019052:	4a06      	ldr	r2, [pc, #24]	; (801906c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8019054:	4909      	ldr	r1, [pc, #36]	; (801907c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8019056:	480a      	ldr	r0, [pc, #40]	; (8019080 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8019058:	f007 fa27 	bl	80204aa <__aeabi_atexit>
 801905c:	4b05      	ldr	r3, [pc, #20]	; (8019074 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801905e:	66ab      	str	r3, [r5, #104]	; 0x68
 8019060:	4b07      	ldr	r3, [pc, #28]	; (8019080 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8019062:	66eb      	str	r3, [r5, #108]	; 0x6c
 8019064:	bd38      	pop	{r3, r4, r5, pc}
 8019066:	bf00      	nop
 8019068:	2001551c 	.word	0x2001551c
 801906c:	20000000 	.word	0x20000000
 8019070:	08016ba1 	.word	0x08016ba1
 8019074:	20000090 	.word	0x20000090
 8019078:	20015520 	.word	0x20015520
 801907c:	08016b9f 	.word	0x08016b9f
 8019080:	20000094 	.word	0x20000094

08019084 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8019084:	b510      	push	{r4, lr}
 8019086:	4604      	mov	r4, r0
 8019088:	f7ff ff88 	bl	8018f9c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801908c:	4620      	mov	r0, r4
 801908e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019092:	f7ff bfbd 	b.w	8019010 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08019096 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8019096:	b510      	push	{r4, lr}
 8019098:	4604      	mov	r4, r0
 801909a:	f7ff fff3 	bl	8019084 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801909e:	4620      	mov	r0, r4
 80190a0:	f7ff ff72 	bl	8018f88 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 80190a4:	4620      	mov	r0, r4
 80190a6:	f7ff fdf9 	bl	8018c9c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 80190aa:	4620      	mov	r0, r4
 80190ac:	f7ff fcfa 	bl	8018aa4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 80190b0:	4620      	mov	r0, r4
 80190b2:	f7ff fd75 	bl	8018ba0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 80190b6:	4620      	mov	r0, r4
 80190b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80190bc:	f7ff bee0 	b.w	8018e80 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

080190c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 80190c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80190c4:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 80190c8:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 80190cc:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 80190d0:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 80190d4:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 80190d8:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 80190dc:	8808      	ldrh	r0, [r1, #0]
 80190de:	fb05 4c0e 	mla	ip, r5, lr, r4
 80190e2:	2d00      	cmp	r5, #0
 80190e4:	eb02 0a0c 	add.w	sl, r2, ip
 80190e8:	f2c0 80b0 	blt.w	801924c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 80190ec:	45ab      	cmp	fp, r5
 80190ee:	f340 80ad 	ble.w	801924c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 80190f2:	2c00      	cmp	r4, #0
 80190f4:	f2c0 80a8 	blt.w	8019248 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 80190f8:	45a6      	cmp	lr, r4
 80190fa:	f340 80a5 	ble.w	8019248 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 80190fe:	f812 200c 	ldrb.w	r2, [r2, ip]
 8019102:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 8019106:	1c62      	adds	r2, r4, #1
 8019108:	f100 80a3 	bmi.w	8019252 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801910c:	4596      	cmp	lr, r2
 801910e:	f340 80a0 	ble.w	8019252 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8019112:	f1b9 0f00 	cmp.w	r9, #0
 8019116:	f000 809c 	beq.w	8019252 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801911a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801911e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8019122:	3501      	adds	r5, #1
 8019124:	f100 8099 	bmi.w	801925a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019128:	45ab      	cmp	fp, r5
 801912a:	f340 8096 	ble.w	801925a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801912e:	2f00      	cmp	r7, #0
 8019130:	f000 8093 	beq.w	801925a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019134:	2c00      	cmp	r4, #0
 8019136:	f2c0 808e 	blt.w	8019256 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801913a:	45a6      	cmp	lr, r4
 801913c:	f340 808b 	ble.w	8019256 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8019140:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8019144:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 8019148:	3401      	adds	r4, #1
 801914a:	f100 8089 	bmi.w	8019260 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801914e:	45a6      	cmp	lr, r4
 8019150:	f340 8086 	ble.w	8019260 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019154:	f1b9 0f00 	cmp.w	r9, #0
 8019158:	f000 8082 	beq.w	8019260 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801915c:	44d6      	add	lr, sl
 801915e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8019162:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8019166:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801916a:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801916e:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8019172:	fb19 fe07 	smulbb	lr, r9, r7
 8019176:	ea44 0808 	orr.w	r8, r4, r8
 801917a:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801917e:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8019182:	f1c7 0210 	rsb	r2, r7, #16
 8019186:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801918a:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801918e:	ea44 0c0c 	orr.w	ip, r4, ip
 8019192:	eba2 0209 	sub.w	r2, r2, r9
 8019196:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801919a:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801919e:	fb04 f40c 	mul.w	r4, r4, ip
 80191a2:	fb02 4808 	mla	r8, r2, r8, r4
 80191a6:	041a      	lsls	r2, r3, #16
 80191a8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80191ac:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80191b0:	4313      	orrs	r3, r2
 80191b2:	042a      	lsls	r2, r5, #16
 80191b4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80191b8:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80191bc:	fb0e 8303 	mla	r3, lr, r3, r8
 80191c0:	432a      	orrs	r2, r5
 80191c2:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 80191c6:	fb07 3202 	mla	r2, r7, r2, r3
 80191ca:	0d53      	lsrs	r3, r2, #21
 80191cc:	0952      	lsrs	r2, r2, #5
 80191ce:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80191d2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80191d6:	431a      	orrs	r2, r3
 80191d8:	b293      	uxth	r3, r2
 80191da:	b2b4      	uxth	r4, r6
 80191dc:	1202      	asrs	r2, r0, #8
 80191de:	43f6      	mvns	r6, r6
 80191e0:	b2f6      	uxtb	r6, r6
 80191e2:	121d      	asrs	r5, r3, #8
 80191e4:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80191e8:	fb12 f206 	smulbb	r2, r2, r6
 80191ec:	10c7      	asrs	r7, r0, #3
 80191ee:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80191f2:	00c0      	lsls	r0, r0, #3
 80191f4:	fb05 2504 	mla	r5, r5, r4, r2
 80191f8:	b2c0      	uxtb	r0, r0
 80191fa:	10da      	asrs	r2, r3, #3
 80191fc:	00db      	lsls	r3, r3, #3
 80191fe:	b2db      	uxtb	r3, r3
 8019200:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019204:	fb10 f006 	smulbb	r0, r0, r6
 8019208:	b2ad      	uxth	r5, r5
 801920a:	fb03 0004 	mla	r0, r3, r4, r0
 801920e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8019212:	fb17 f706 	smulbb	r7, r7, r6
 8019216:	b280      	uxth	r0, r0
 8019218:	1c6b      	adds	r3, r5, #1
 801921a:	fb02 7204 	mla	r2, r2, r4, r7
 801921e:	b292      	uxth	r2, r2
 8019220:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8019224:	1c43      	adds	r3, r0, #1
 8019226:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801922a:	1c50      	adds	r0, r2, #1
 801922c:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8019230:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8019234:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019238:	0952      	lsrs	r2, r2, #5
 801923a:	432b      	orrs	r3, r5
 801923c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019240:	4313      	orrs	r3, r2
 8019242:	800b      	strh	r3, [r1, #0]
 8019244:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019248:	4680      	mov	r8, r0
 801924a:	e75c      	b.n	8019106 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801924c:	4684      	mov	ip, r0
 801924e:	4680      	mov	r8, r0
 8019250:	e767      	b.n	8019122 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8019252:	4684      	mov	ip, r0
 8019254:	e765      	b.n	8019122 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8019256:	4605      	mov	r5, r0
 8019258:	e776      	b.n	8019148 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801925a:	4603      	mov	r3, r0
 801925c:	4605      	mov	r5, r0
 801925e:	e782      	b.n	8019166 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8019260:	4603      	mov	r3, r0
 8019262:	e780      	b.n	8019166 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08019264 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019264:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019268:	b099      	sub	sp, #100	; 0x64
 801926a:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801926e:	9215      	str	r2, [sp, #84]	; 0x54
 8019270:	9309      	str	r3, [sp, #36]	; 0x24
 8019272:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8019274:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 8019278:	930d      	str	r3, [sp, #52]	; 0x34
 801927a:	910c      	str	r1, [sp, #48]	; 0x30
 801927c:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 8019280:	9016      	str	r0, [sp, #88]	; 0x58
 8019282:	6850      	ldr	r0, [r2, #4]
 8019284:	6812      	ldr	r2, [r2, #0]
 8019286:	fb00 1303 	mla	r3, r0, r3, r1
 801928a:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801928e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019290:	681b      	ldr	r3, [r3, #0]
 8019292:	930b      	str	r3, [sp, #44]	; 0x2c
 8019294:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019296:	685e      	ldr	r6, [r3, #4]
 8019298:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801929a:	43db      	mvns	r3, r3
 801929c:	b2db      	uxtb	r3, r3
 801929e:	3604      	adds	r6, #4
 80192a0:	930a      	str	r3, [sp, #40]	; 0x28
 80192a2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80192a4:	2b00      	cmp	r3, #0
 80192a6:	dc03      	bgt.n	80192b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80192a8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80192aa:	2b00      	cmp	r3, #0
 80192ac:	f340 8225 	ble.w	80196fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 80192b0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80192b2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80192b6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80192ba:	1e48      	subs	r0, r1, #1
 80192bc:	1e57      	subs	r7, r2, #1
 80192be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80192c0:	2b00      	cmp	r3, #0
 80192c2:	f340 80e3 	ble.w	801948c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80192c6:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 80192ca:	ea4f 4325 	mov.w	r3, r5, asr #16
 80192ce:	d406      	bmi.n	80192de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80192d0:	4584      	cmp	ip, r0
 80192d2:	da04      	bge.n	80192de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80192d4:	2b00      	cmp	r3, #0
 80192d6:	db02      	blt.n	80192de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80192d8:	42bb      	cmp	r3, r7
 80192da:	f2c0 80d8 	blt.w	801948e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80192de:	f11c 0c01 	adds.w	ip, ip, #1
 80192e2:	f100 80c9 	bmi.w	8019478 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80192e6:	4561      	cmp	r1, ip
 80192e8:	f2c0 80c6 	blt.w	8019478 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80192ec:	3301      	adds	r3, #1
 80192ee:	f100 80c3 	bmi.w	8019478 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80192f2:	429a      	cmp	r2, r3
 80192f4:	f2c0 80c0 	blt.w	8019478 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80192f8:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80192fc:	4647      	mov	r7, r8
 80192fe:	f1bb 0f00 	cmp.w	fp, #0
 8019302:	f340 80e3 	ble.w	80194cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8019306:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8019308:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801930a:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801930e:	689b      	ldr	r3, [r3, #8]
 8019310:	ea5f 422a 	movs.w	r2, sl, asr #16
 8019314:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8019318:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801931c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8019320:	f100 8121 	bmi.w	8019566 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019324:	f103 39ff 	add.w	r9, r3, #4294967295
 8019328:	454a      	cmp	r2, r9
 801932a:	f280 811c 	bge.w	8019566 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801932e:	f1bc 0f00 	cmp.w	ip, #0
 8019332:	f2c0 8118 	blt.w	8019566 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019336:	f10e 39ff 	add.w	r9, lr, #4294967295
 801933a:	45cc      	cmp	ip, r9
 801933c:	f280 8113 	bge.w	8019566 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019340:	b21b      	sxth	r3, r3
 8019342:	fb0c 2203 	mla	r2, ip, r3, r2
 8019346:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019348:	eb04 0902 	add.w	r9, r4, r2
 801934c:	5ca2      	ldrb	r2, [r4, r2]
 801934e:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8019352:	2800      	cmp	r0, #0
 8019354:	f000 80fe 	beq.w	8019554 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8019358:	f899 2001 	ldrb.w	r2, [r9, #1]
 801935c:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8019360:	9211      	str	r2, [sp, #68]	; 0x44
 8019362:	b151      	cbz	r1, 801937a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019364:	eb09 0203 	add.w	r2, r9, r3
 8019368:	f819 3003 	ldrb.w	r3, [r9, r3]
 801936c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019370:	930f      	str	r3, [sp, #60]	; 0x3c
 8019372:	7853      	ldrb	r3, [r2, #1]
 8019374:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019378:	9312      	str	r3, [sp, #72]	; 0x48
 801937a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801937c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801937e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019382:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019386:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801938a:	ea4c 0c03 	orr.w	ip, ip, r3
 801938e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8019390:	041b      	lsls	r3, r3, #16
 8019392:	fb10 f201 	smulbb	r2, r0, r1
 8019396:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801939a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801939e:	10d2      	asrs	r2, r2, #3
 80193a0:	4323      	orrs	r3, r4
 80193a2:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 80193a6:	4353      	muls	r3, r2
 80193a8:	fb09 330c 	mla	r3, r9, ip, r3
 80193ac:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80193b0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80193b4:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80193b8:	ea4c 0e0e 	orr.w	lr, ip, lr
 80193bc:	f1c1 0c10 	rsb	ip, r1, #16
 80193c0:	ebac 0c00 	sub.w	ip, ip, r0
 80193c4:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80193c8:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80193cc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80193ce:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80193d0:	0418      	lsls	r0, r3, #16
 80193d2:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80193d6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80193da:	4318      	orrs	r0, r3
 80193dc:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80193e0:	fb02 c200 	mla	r2, r2, r0, ip
 80193e4:	0d53      	lsrs	r3, r2, #21
 80193e6:	0952      	lsrs	r2, r2, #5
 80193e8:	8838      	ldrh	r0, [r7, #0]
 80193ea:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80193ee:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80193f2:	431a      	orrs	r2, r3
 80193f4:	b292      	uxth	r2, r2
 80193f6:	1201      	asrs	r1, r0, #8
 80193f8:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 80193fc:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8019400:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8019404:	fb11 f104 	smulbb	r1, r1, r4
 8019408:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801940c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019410:	00c0      	lsls	r0, r0, #3
 8019412:	fb0c 1c03 	mla	ip, ip, r3, r1
 8019416:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801941a:	10d1      	asrs	r1, r2, #3
 801941c:	b2c0      	uxtb	r0, r0
 801941e:	00d2      	lsls	r2, r2, #3
 8019420:	b2d2      	uxtb	r2, r2
 8019422:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8019426:	fb1e fe04 	smulbb	lr, lr, r4
 801942a:	fb10 f004 	smulbb	r0, r0, r4
 801942e:	fa1f fc8c 	uxth.w	ip, ip
 8019432:	fb01 e103 	mla	r1, r1, r3, lr
 8019436:	fb02 0303 	mla	r3, r2, r3, r0
 801943a:	b29a      	uxth	r2, r3
 801943c:	f10c 0301 	add.w	r3, ip, #1
 8019440:	b289      	uxth	r1, r1
 8019442:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8019446:	1c53      	adds	r3, r2, #1
 8019448:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801944c:	1c4a      	adds	r2, r1, #1
 801944e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8019452:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019456:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801945a:	0949      	lsrs	r1, r1, #5
 801945c:	ea43 030c 	orr.w	r3, r3, ip
 8019460:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019464:	430b      	orrs	r3, r1
 8019466:	803b      	strh	r3, [r7, #0]
 8019468:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801946a:	449a      	add	sl, r3
 801946c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801946e:	3702      	adds	r7, #2
 8019470:	441d      	add	r5, r3
 8019472:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019476:	e742      	b.n	80192fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8019478:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801947a:	449a      	add	sl, r3
 801947c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801947e:	441d      	add	r5, r3
 8019480:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019482:	3b01      	subs	r3, #1
 8019484:	9309      	str	r3, [sp, #36]	; 0x24
 8019486:	f108 0802 	add.w	r8, r8, #2
 801948a:	e718      	b.n	80192be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801948c:	d023      	beq.n	80194d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801948e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019490:	9825      	ldr	r0, [sp, #148]	; 0x94
 8019492:	3b01      	subs	r3, #1
 8019494:	fb00 a003 	mla	r0, r0, r3, sl
 8019498:	1400      	asrs	r0, r0, #16
 801949a:	f53f af2d 	bmi.w	80192f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801949e:	3901      	subs	r1, #1
 80194a0:	4288      	cmp	r0, r1
 80194a2:	f6bf af29 	bge.w	80192f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80194a6:	9926      	ldr	r1, [sp, #152]	; 0x98
 80194a8:	fb01 5303 	mla	r3, r1, r3, r5
 80194ac:	141b      	asrs	r3, r3, #16
 80194ae:	f53f af23 	bmi.w	80192f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80194b2:	3a01      	subs	r2, #1
 80194b4:	4293      	cmp	r3, r2
 80194b6:	f6bf af1f 	bge.w	80192f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80194ba:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80194be:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 80194c2:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 80194c6:	f1be 0f00 	cmp.w	lr, #0
 80194ca:	dc6c      	bgt.n	80195a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 80194cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80194ce:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80194d2:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 80194d6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80194d8:	2b00      	cmp	r3, #0
 80194da:	f340 810e 	ble.w	80196fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 80194de:	ee30 0a04 	vadd.f32	s0, s0, s8
 80194e2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80194e6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80194ea:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80194ec:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80194f0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80194f4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80194f8:	eef0 6a62 	vmov.f32	s13, s5
 80194fc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019500:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019504:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019508:	ee16 aa90 	vmov	sl, s13
 801950c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019510:	eef0 6a43 	vmov.f32	s13, s6
 8019514:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019518:	ee12 2a90 	vmov	r2, s5
 801951c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019520:	fb92 f3f3 	sdiv	r3, r2, r3
 8019524:	ee13 2a10 	vmov	r2, s6
 8019528:	9325      	str	r3, [sp, #148]	; 0x94
 801952a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801952c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019530:	9326      	str	r3, [sp, #152]	; 0x98
 8019532:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019534:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8019536:	3b01      	subs	r3, #1
 8019538:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801953c:	930c      	str	r3, [sp, #48]	; 0x30
 801953e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8019540:	bf08      	it	eq
 8019542:	4613      	moveq	r3, r2
 8019544:	ee16 5a90 	vmov	r5, s13
 8019548:	9309      	str	r3, [sp, #36]	; 0x24
 801954a:	eeb0 3a67 	vmov.f32	s6, s15
 801954e:	eef0 2a47 	vmov.f32	s5, s14
 8019552:	e6a6      	b.n	80192a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019554:	2900      	cmp	r1, #0
 8019556:	f43f af10 	beq.w	801937a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801955a:	f819 3003 	ldrb.w	r3, [r9, r3]
 801955e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019562:	930f      	str	r3, [sp, #60]	; 0x3c
 8019564:	e709      	b.n	801937a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019566:	f112 0901 	adds.w	r9, r2, #1
 801956a:	f53f af7d 	bmi.w	8019468 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801956e:	454b      	cmp	r3, r9
 8019570:	f6ff af7a 	blt.w	8019468 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019574:	f11c 0901 	adds.w	r9, ip, #1
 8019578:	f53f af76 	bmi.w	8019468 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801957c:	45ce      	cmp	lr, r9
 801957e:	f6ff af73 	blt.w	8019468 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019582:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8019584:	9202      	str	r2, [sp, #8]
 8019586:	b21b      	sxth	r3, r3
 8019588:	fa0f f28e 	sxth.w	r2, lr
 801958c:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8019590:	e9cd c003 	strd	ip, r0, [sp, #12]
 8019594:	9201      	str	r2, [sp, #4]
 8019596:	9300      	str	r3, [sp, #0]
 8019598:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801959a:	9816      	ldr	r0, [sp, #88]	; 0x58
 801959c:	4633      	mov	r3, r6
 801959e:	4639      	mov	r1, r7
 80195a0:	f7ff fd8e 	bl	80190c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 80195a4:	e760      	b.n	8019468 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80195a6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80195a8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80195aa:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80195ae:	ea4f 422a 	mov.w	r2, sl, asr #16
 80195b2:	1429      	asrs	r1, r5, #16
 80195b4:	fb03 2101 	mla	r1, r3, r1, r2
 80195b8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80195ba:	440a      	add	r2, r1
 80195bc:	5c61      	ldrb	r1, [r4, r1]
 80195be:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 80195c2:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80195c6:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 80195ca:	f1bc 0f00 	cmp.w	ip, #0
 80195ce:	f000 808c 	beq.w	80196ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 80195d2:	7857      	ldrb	r7, [r2, #1]
 80195d4:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 80195d8:	9413      	str	r4, [sp, #76]	; 0x4c
 80195da:	b140      	cbz	r0, 80195ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80195dc:	18d7      	adds	r7, r2, r3
 80195de:	5cd3      	ldrb	r3, [r2, r3]
 80195e0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80195e4:	9310      	str	r3, [sp, #64]	; 0x40
 80195e6:	787b      	ldrb	r3, [r7, #1]
 80195e8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80195ec:	9314      	str	r3, [sp, #80]	; 0x50
 80195ee:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80195f0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80195f2:	fb1c f200 	smulbb	r2, ip, r0
 80195f6:	041f      	lsls	r7, r3, #16
 80195f8:	10d2      	asrs	r2, r2, #3
 80195fa:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80195fe:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8019602:	431f      	orrs	r7, r3
 8019604:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8019608:	9317      	str	r3, [sp, #92]	; 0x5c
 801960a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801960c:	041b      	lsls	r3, r3, #16
 801960e:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 8019612:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019616:	ea43 030b 	orr.w	r3, r3, fp
 801961a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801961c:	4353      	muls	r3, r2
 801961e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8019622:	fb04 3707 	mla	r7, r4, r7, r3
 8019626:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801962a:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801962e:	ea43 0b01 	orr.w	fp, r3, r1
 8019632:	f1c0 0110 	rsb	r1, r0, #16
 8019636:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019638:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801963a:	eba1 0c0c 	sub.w	ip, r1, ip
 801963e:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019642:	fb0c 770b 	mla	r7, ip, fp, r7
 8019646:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801964a:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801964e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019652:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8019656:	ea4c 0c0b 	orr.w	ip, ip, fp
 801965a:	fb02 770c 	mla	r7, r2, ip, r7
 801965e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8019660:	0d79      	lsrs	r1, r7, #21
 8019662:	097f      	lsrs	r7, r7, #5
 8019664:	8812      	ldrh	r2, [r2, #0]
 8019666:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801966a:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801966e:	430f      	orrs	r7, r1
 8019670:	b2bb      	uxth	r3, r7
 8019672:	1211      	asrs	r1, r2, #8
 8019674:	1218      	asrs	r0, r3, #8
 8019676:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801967a:	fb11 f104 	smulbb	r1, r1, r4
 801967e:	10d7      	asrs	r7, r2, #3
 8019680:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019684:	00d2      	lsls	r2, r2, #3
 8019686:	fb00 1009 	mla	r0, r0, r9, r1
 801968a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801968e:	10d9      	asrs	r1, r3, #3
 8019690:	b2d2      	uxtb	r2, r2
 8019692:	00db      	lsls	r3, r3, #3
 8019694:	fb17 f704 	smulbb	r7, r7, r4
 8019698:	fb12 f204 	smulbb	r2, r2, r4
 801969c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80196a0:	b2db      	uxtb	r3, r3
 80196a2:	b280      	uxth	r0, r0
 80196a4:	fb01 7109 	mla	r1, r1, r9, r7
 80196a8:	fb03 2309 	mla	r3, r3, r9, r2
 80196ac:	b29b      	uxth	r3, r3
 80196ae:	b289      	uxth	r1, r1
 80196b0:	1c42      	adds	r2, r0, #1
 80196b2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80196b6:	1c4f      	adds	r7, r1, #1
 80196b8:	1c5a      	adds	r2, r3, #1
 80196ba:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80196be:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80196c2:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80196c6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80196ca:	0949      	lsrs	r1, r1, #5
 80196cc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80196ce:	4310      	orrs	r0, r2
 80196d0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80196d4:	4308      	orrs	r0, r1
 80196d6:	f823 0b02 	strh.w	r0, [r3], #2
 80196da:	930e      	str	r3, [sp, #56]	; 0x38
 80196dc:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80196de:	449a      	add	sl, r3
 80196e0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80196e2:	f10e 3eff 	add.w	lr, lr, #4294967295
 80196e6:	441d      	add	r5, r3
 80196e8:	e6ed      	b.n	80194c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 80196ea:	2800      	cmp	r0, #0
 80196ec:	f43f af7f 	beq.w	80195ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80196f0:	5cd3      	ldrb	r3, [r2, r3]
 80196f2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80196f6:	9310      	str	r3, [sp, #64]	; 0x40
 80196f8:	e779      	b.n	80195ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80196fa:	b019      	add	sp, #100	; 0x64
 80196fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019700 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8019700:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019704:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 8019708:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801970c:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 8019710:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8019714:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8019718:	8808      	ldrh	r0, [r1, #0]
 801971a:	fb08 470e 	mla	r7, r8, lr, r4
 801971e:	f1b8 0f00 	cmp.w	r8, #0
 8019722:	eb02 0907 	add.w	r9, r2, r7
 8019726:	db67      	blt.n	80197f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8019728:	45c2      	cmp	sl, r8
 801972a:	dd65      	ble.n	80197f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801972c:	2c00      	cmp	r4, #0
 801972e:	db61      	blt.n	80197f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8019730:	45a6      	cmp	lr, r4
 8019732:	dd5f      	ble.n	80197f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8019734:	5dd2      	ldrb	r2, [r2, r7]
 8019736:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801973a:	1c62      	adds	r2, r4, #1
 801973c:	d45f      	bmi.n	80197fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801973e:	4596      	cmp	lr, r2
 8019740:	dd5d      	ble.n	80197fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8019742:	2d00      	cmp	r5, #0
 8019744:	d05b      	beq.n	80197fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8019746:	f899 2001 	ldrb.w	r2, [r9, #1]
 801974a:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801974e:	f118 0801 	adds.w	r8, r8, #1
 8019752:	d458      	bmi.n	8019806 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8019754:	45c2      	cmp	sl, r8
 8019756:	dd56      	ble.n	8019806 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8019758:	2e00      	cmp	r6, #0
 801975a:	d054      	beq.n	8019806 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801975c:	2c00      	cmp	r4, #0
 801975e:	db50      	blt.n	8019802 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8019760:	45a6      	cmp	lr, r4
 8019762:	dd4e      	ble.n	8019802 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8019764:	f819 200e 	ldrb.w	r2, [r9, lr]
 8019768:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801976c:	3401      	adds	r4, #1
 801976e:	d407      	bmi.n	8019780 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8019770:	45a6      	cmp	lr, r4
 8019772:	dd05      	ble.n	8019780 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8019774:	b125      	cbz	r5, 8019780 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8019776:	44ce      	add	lr, r9
 8019778:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801977c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8019780:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8019784:	fb15 f406 	smulbb	r4, r5, r6
 8019788:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801978c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8019790:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019794:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8019798:	ea43 0c0c 	orr.w	ip, r3, ip
 801979c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80197a0:	f1c6 0310 	rsb	r3, r6, #16
 80197a4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80197a8:	1b5b      	subs	r3, r3, r5
 80197aa:	ea4e 0707 	orr.w	r7, lr, r7
 80197ae:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 80197b2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80197b6:	437d      	muls	r5, r7
 80197b8:	fb03 5c0c 	mla	ip, r3, ip, r5
 80197bc:	0403      	lsls	r3, r0, #16
 80197be:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80197c2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80197c6:	4318      	orrs	r0, r3
 80197c8:	0413      	lsls	r3, r2, #16
 80197ca:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80197ce:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80197d2:	4313      	orrs	r3, r2
 80197d4:	fb04 c000 	mla	r0, r4, r0, ip
 80197d8:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 80197dc:	fb06 0003 	mla	r0, r6, r3, r0
 80197e0:	0d43      	lsrs	r3, r0, #21
 80197e2:	0940      	lsrs	r0, r0, #5
 80197e4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80197e8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80197ec:	4318      	orrs	r0, r3
 80197ee:	8008      	strh	r0, [r1, #0]
 80197f0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80197f4:	4684      	mov	ip, r0
 80197f6:	e7a0      	b.n	801973a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 80197f8:	4607      	mov	r7, r0
 80197fa:	4684      	mov	ip, r0
 80197fc:	e7a7      	b.n	801974e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 80197fe:	4607      	mov	r7, r0
 8019800:	e7a5      	b.n	801974e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8019802:	4602      	mov	r2, r0
 8019804:	e7b2      	b.n	801976c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 8019806:	4602      	mov	r2, r0
 8019808:	e7ba      	b.n	8019780 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801980a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801980a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801980e:	b093      	sub	sp, #76	; 0x4c
 8019810:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8019814:	920f      	str	r2, [sp, #60]	; 0x3c
 8019816:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8019818:	9108      	str	r1, [sp, #32]
 801981a:	9306      	str	r3, [sp, #24]
 801981c:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8019820:	9010      	str	r0, [sp, #64]	; 0x40
 8019822:	6850      	ldr	r0, [r2, #4]
 8019824:	6812      	ldr	r2, [r2, #0]
 8019826:	fb00 1303 	mla	r3, r0, r3, r1
 801982a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801982e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019830:	681b      	ldr	r3, [r3, #0]
 8019832:	9307      	str	r3, [sp, #28]
 8019834:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019836:	685f      	ldr	r7, [r3, #4]
 8019838:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801983c:	3704      	adds	r7, #4
 801983e:	9b08      	ldr	r3, [sp, #32]
 8019840:	2b00      	cmp	r3, #0
 8019842:	dc03      	bgt.n	801984c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8019844:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019846:	2b00      	cmp	r3, #0
 8019848:	f340 81b2 	ble.w	8019bb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801984c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801984e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019852:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019856:	1e48      	subs	r0, r1, #1
 8019858:	f102 3cff 	add.w	ip, r2, #4294967295
 801985c:	9b06      	ldr	r3, [sp, #24]
 801985e:	2b00      	cmp	r3, #0
 8019860:	f340 80a9 	ble.w	80199b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8019864:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8019868:	ea4f 4326 	mov.w	r3, r6, asr #16
 801986c:	d406      	bmi.n	801987c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801986e:	4586      	cmp	lr, r0
 8019870:	da04      	bge.n	801987c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019872:	2b00      	cmp	r3, #0
 8019874:	db02      	blt.n	801987c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019876:	4563      	cmp	r3, ip
 8019878:	f2c0 809e 	blt.w	80199b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801987c:	f11e 0e01 	adds.w	lr, lr, #1
 8019880:	f100 808f 	bmi.w	80199a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019884:	4571      	cmp	r1, lr
 8019886:	f2c0 808c 	blt.w	80199a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801988a:	3301      	adds	r3, #1
 801988c:	f100 8089 	bmi.w	80199a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019890:	429a      	cmp	r2, r3
 8019892:	f2c0 8086 	blt.w	80199a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019896:	f8dd b018 	ldr.w	fp, [sp, #24]
 801989a:	46c8      	mov	r8, r9
 801989c:	f1bb 0f00 	cmp.w	fp, #0
 80198a0:	f340 80a6 	ble.w	80199f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80198a4:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80198a6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80198a8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80198ac:	689b      	ldr	r3, [r3, #8]
 80198ae:	1422      	asrs	r2, r4, #16
 80198b0:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80198b4:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80198b8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80198bc:	f100 80e3 	bmi.w	8019a86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80198c0:	f103 3aff 	add.w	sl, r3, #4294967295
 80198c4:	4552      	cmp	r2, sl
 80198c6:	f280 80de 	bge.w	8019a86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80198ca:	f1bc 0f00 	cmp.w	ip, #0
 80198ce:	f2c0 80da 	blt.w	8019a86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80198d2:	f10e 3aff 	add.w	sl, lr, #4294967295
 80198d6:	45d4      	cmp	ip, sl
 80198d8:	f280 80d5 	bge.w	8019a86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80198dc:	b21b      	sxth	r3, r3
 80198de:	fb0c 2203 	mla	r2, ip, r3, r2
 80198e2:	9d07      	ldr	r5, [sp, #28]
 80198e4:	eb05 0a02 	add.w	sl, r5, r2
 80198e8:	5caa      	ldrb	r2, [r5, r2]
 80198ea:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 80198ee:	2800      	cmp	r0, #0
 80198f0:	f000 80c0 	beq.w	8019a74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 80198f4:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80198f8:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 80198fc:	920b      	str	r2, [sp, #44]	; 0x2c
 80198fe:	b151      	cbz	r1, 8019916 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019900:	eb0a 0203 	add.w	r2, sl, r3
 8019904:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8019908:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801990c:	9309      	str	r3, [sp, #36]	; 0x24
 801990e:	7853      	ldrb	r3, [r2, #1]
 8019910:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019914:	930c      	str	r3, [sp, #48]	; 0x30
 8019916:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019918:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801991a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801991e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019922:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019926:	ea4c 0c03 	orr.w	ip, ip, r3
 801992a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801992c:	041b      	lsls	r3, r3, #16
 801992e:	fb10 f201 	smulbb	r2, r0, r1
 8019932:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019936:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801993a:	10d2      	asrs	r2, r2, #3
 801993c:	432b      	orrs	r3, r5
 801993e:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8019942:	4353      	muls	r3, r2
 8019944:	fb0a 330c 	mla	r3, sl, ip, r3
 8019948:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801994c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019950:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8019954:	ea4c 0e0e 	orr.w	lr, ip, lr
 8019958:	f1c1 0c10 	rsb	ip, r1, #16
 801995c:	ebac 0c00 	sub.w	ip, ip, r0
 8019960:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019964:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8019968:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801996a:	0418      	lsls	r0, r3, #16
 801996c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8019970:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019974:	4318      	orrs	r0, r3
 8019976:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801997a:	fb02 c200 	mla	r2, r2, r0, ip
 801997e:	0d53      	lsrs	r3, r2, #21
 8019980:	0952      	lsrs	r2, r2, #5
 8019982:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019986:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801998a:	431a      	orrs	r2, r3
 801998c:	f8a8 2000 	strh.w	r2, [r8]
 8019990:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019992:	441c      	add	r4, r3
 8019994:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019996:	f108 0802 	add.w	r8, r8, #2
 801999a:	441e      	add	r6, r3
 801999c:	f10b 3bff 	add.w	fp, fp, #4294967295
 80199a0:	e77c      	b.n	801989c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80199a2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80199a4:	441c      	add	r4, r3
 80199a6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80199a8:	441e      	add	r6, r3
 80199aa:	9b06      	ldr	r3, [sp, #24]
 80199ac:	3b01      	subs	r3, #1
 80199ae:	9306      	str	r3, [sp, #24]
 80199b0:	f109 0902 	add.w	r9, r9, #2
 80199b4:	e752      	b.n	801985c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80199b6:	d020      	beq.n	80199fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80199b8:	9b06      	ldr	r3, [sp, #24]
 80199ba:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80199bc:	3b01      	subs	r3, #1
 80199be:	fb00 4003 	mla	r0, r0, r3, r4
 80199c2:	1400      	asrs	r0, r0, #16
 80199c4:	f53f af67 	bmi.w	8019896 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80199c8:	3901      	subs	r1, #1
 80199ca:	4288      	cmp	r0, r1
 80199cc:	f6bf af63 	bge.w	8019896 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80199d0:	9920      	ldr	r1, [sp, #128]	; 0x80
 80199d2:	fb01 6303 	mla	r3, r1, r3, r6
 80199d6:	141b      	asrs	r3, r3, #16
 80199d8:	f53f af5d 	bmi.w	8019896 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80199dc:	3a01      	subs	r2, #1
 80199de:	4293      	cmp	r3, r2
 80199e0:	f6bf af59 	bge.w	8019896 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80199e4:	f8dd 8018 	ldr.w	r8, [sp, #24]
 80199e8:	46ca      	mov	sl, r9
 80199ea:	f1b8 0f00 	cmp.w	r8, #0
 80199ee:	dc67      	bgt.n	8019ac0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80199f0:	9b06      	ldr	r3, [sp, #24]
 80199f2:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80199f6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80199fa:	9b08      	ldr	r3, [sp, #32]
 80199fc:	2b00      	cmp	r3, #0
 80199fe:	f340 80d7 	ble.w	8019bb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8019a02:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019a06:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019a0a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019a0e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019a10:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019a14:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019a18:	eeb0 6a62 	vmov.f32	s12, s5
 8019a1c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019a20:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019a24:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019a28:	ee16 4a10 	vmov	r4, s12
 8019a2c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019a30:	eeb0 6a43 	vmov.f32	s12, s6
 8019a34:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019a38:	ee12 2a90 	vmov	r2, s5
 8019a3c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019a40:	fb92 f3f3 	sdiv	r3, r2, r3
 8019a44:	ee13 2a10 	vmov	r2, s6
 8019a48:	931f      	str	r3, [sp, #124]	; 0x7c
 8019a4a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019a4c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019a50:	9320      	str	r3, [sp, #128]	; 0x80
 8019a52:	9b08      	ldr	r3, [sp, #32]
 8019a54:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019a56:	3b01      	subs	r3, #1
 8019a58:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019a5c:	9308      	str	r3, [sp, #32]
 8019a5e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019a60:	bf08      	it	eq
 8019a62:	4613      	moveq	r3, r2
 8019a64:	ee16 6a10 	vmov	r6, s12
 8019a68:	9306      	str	r3, [sp, #24]
 8019a6a:	eeb0 3a67 	vmov.f32	s6, s15
 8019a6e:	eef0 2a47 	vmov.f32	s5, s14
 8019a72:	e6e4      	b.n	801983e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8019a74:	2900      	cmp	r1, #0
 8019a76:	f43f af4e 	beq.w	8019916 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019a7a:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8019a7e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019a82:	9309      	str	r3, [sp, #36]	; 0x24
 8019a84:	e747      	b.n	8019916 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019a86:	f112 0a01 	adds.w	sl, r2, #1
 8019a8a:	d481      	bmi.n	8019990 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019a8c:	4553      	cmp	r3, sl
 8019a8e:	f6ff af7f 	blt.w	8019990 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019a92:	f11c 0a01 	adds.w	sl, ip, #1
 8019a96:	f53f af7b 	bmi.w	8019990 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019a9a:	45d6      	cmp	lr, sl
 8019a9c:	f6ff af78 	blt.w	8019990 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019aa0:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8019aa4:	b21b      	sxth	r3, r3
 8019aa6:	fa0f f28e 	sxth.w	r2, lr
 8019aaa:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8019aae:	9201      	str	r2, [sp, #4]
 8019ab0:	9300      	str	r3, [sp, #0]
 8019ab2:	9a07      	ldr	r2, [sp, #28]
 8019ab4:	9810      	ldr	r0, [sp, #64]	; 0x40
 8019ab6:	463b      	mov	r3, r7
 8019ab8:	4641      	mov	r1, r8
 8019aba:	f7ff fe21 	bl	8019700 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8019abe:	e767      	b.n	8019990 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019ac0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019ac2:	9d07      	ldr	r5, [sp, #28]
 8019ac4:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8019ac8:	1422      	asrs	r2, r4, #16
 8019aca:	1431      	asrs	r1, r6, #16
 8019acc:	fb03 2101 	mla	r1, r3, r1, r2
 8019ad0:	9a07      	ldr	r2, [sp, #28]
 8019ad2:	440a      	add	r2, r1
 8019ad4:	5c69      	ldrb	r1, [r5, r1]
 8019ad6:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8019ada:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8019ade:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8019ae2:	f1be 0f00 	cmp.w	lr, #0
 8019ae6:	d05c      	beq.n	8019ba2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8019ae8:	f892 c001 	ldrb.w	ip, [r2, #1]
 8019aec:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8019af0:	950d      	str	r5, [sp, #52]	; 0x34
 8019af2:	b150      	cbz	r0, 8019b0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019af4:	eb02 0c03 	add.w	ip, r2, r3
 8019af8:	5cd3      	ldrb	r3, [r2, r3]
 8019afa:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019afe:	930a      	str	r3, [sp, #40]	; 0x28
 8019b00:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8019b04:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019b08:	930e      	str	r3, [sp, #56]	; 0x38
 8019b0a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019b0c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019b0e:	fb1e f200 	smulbb	r2, lr, r0
 8019b12:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019b16:	10d2      	asrs	r2, r2, #3
 8019b18:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019b1c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019b20:	ea4c 0c03 	orr.w	ip, ip, r3
 8019b24:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8019b28:	9311      	str	r3, [sp, #68]	; 0x44
 8019b2a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019b2c:	041b      	lsls	r3, r3, #16
 8019b2e:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8019b32:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019b36:	ea43 030b 	orr.w	r3, r3, fp
 8019b3a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019b3c:	4353      	muls	r3, r2
 8019b3e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8019b42:	fb05 3c0c 	mla	ip, r5, ip, r3
 8019b46:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8019b4a:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8019b4e:	ea43 0b01 	orr.w	fp, r3, r1
 8019b52:	f1c0 0110 	rsb	r1, r0, #16
 8019b56:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019b58:	eba1 0e0e 	sub.w	lr, r1, lr
 8019b5c:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8019b60:	fb0e cc0b 	mla	ip, lr, fp, ip
 8019b64:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8019b68:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8019b6c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019b70:	ea4b 0e0e 	orr.w	lr, fp, lr
 8019b74:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8019b78:	fb02 cc0e 	mla	ip, r2, lr, ip
 8019b7c:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8019b80:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8019b84:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019b88:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019b8c:	ea43 0c0c 	orr.w	ip, r3, ip
 8019b90:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019b92:	f82a cb02 	strh.w	ip, [sl], #2
 8019b96:	441c      	add	r4, r3
 8019b98:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019b9a:	f108 38ff 	add.w	r8, r8, #4294967295
 8019b9e:	441e      	add	r6, r3
 8019ba0:	e723      	b.n	80199ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8019ba2:	2800      	cmp	r0, #0
 8019ba4:	d0b1      	beq.n	8019b0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019ba6:	5cd3      	ldrb	r3, [r2, r3]
 8019ba8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019bac:	930a      	str	r3, [sp, #40]	; 0x28
 8019bae:	e7ac      	b.n	8019b0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019bb0:	b013      	add	sp, #76	; 0x4c
 8019bb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019bb6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8019bb6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019bba:	880d      	ldrh	r5, [r1, #0]
 8019bbc:	b087      	sub	sp, #28
 8019bbe:	10ef      	asrs	r7, r5, #3
 8019bc0:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8019bc4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019bc8:	00ed      	lsls	r5, r5, #3
 8019bca:	9701      	str	r7, [sp, #4]
 8019bcc:	b2ed      	uxtb	r5, r5
 8019bce:	9502      	str	r5, [sp, #8]
 8019bd0:	9d01      	ldr	r5, [sp, #4]
 8019bd2:	9103      	str	r1, [sp, #12]
 8019bd4:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 8019bd8:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 8019bdc:	9902      	ldr	r1, [sp, #8]
 8019bde:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8019be2:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 8019be6:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 8019bea:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 8019bee:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 8019bf2:	022d      	lsls	r5, r5, #8
 8019bf4:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8019bf8:	fb06 0709 	mla	r7, r6, r9, r0
 8019bfc:	430d      	orrs	r5, r1
 8019bfe:	2e00      	cmp	r6, #0
 8019c00:	eb02 0c07 	add.w	ip, r2, r7
 8019c04:	9505      	str	r5, [sp, #20]
 8019c06:	f2c0 80b6 	blt.w	8019d76 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8019c0a:	45b3      	cmp	fp, r6
 8019c0c:	f340 80b3 	ble.w	8019d76 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8019c10:	2800      	cmp	r0, #0
 8019c12:	f2c0 80ae 	blt.w	8019d72 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8019c16:	4581      	cmp	r9, r0
 8019c18:	f340 80ab 	ble.w	8019d72 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8019c1c:	5dd7      	ldrb	r7, [r2, r7]
 8019c1e:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8019c22:	441f      	add	r7, r3
 8019c24:	1c42      	adds	r2, r0, #1
 8019c26:	f100 80a9 	bmi.w	8019d7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8019c2a:	4591      	cmp	r9, r2
 8019c2c:	f340 80a6 	ble.w	8019d7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8019c30:	2c00      	cmp	r4, #0
 8019c32:	f000 80a3 	beq.w	8019d7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8019c36:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8019c3a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8019c3e:	441d      	add	r5, r3
 8019c40:	3601      	adds	r6, #1
 8019c42:	f100 809f 	bmi.w	8019d84 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8019c46:	45b3      	cmp	fp, r6
 8019c48:	f340 809c 	ble.w	8019d84 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8019c4c:	f1be 0f00 	cmp.w	lr, #0
 8019c50:	f000 8098 	beq.w	8019d84 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8019c54:	2800      	cmp	r0, #0
 8019c56:	f2c0 8093 	blt.w	8019d80 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8019c5a:	4581      	cmp	r9, r0
 8019c5c:	f340 8090 	ble.w	8019d80 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8019c60:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8019c64:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8019c68:	441e      	add	r6, r3
 8019c6a:	3001      	adds	r0, #1
 8019c6c:	f100 808d 	bmi.w	8019d8a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019c70:	4581      	cmp	r9, r0
 8019c72:	f340 808a 	ble.w	8019d8a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019c76:	2c00      	cmp	r4, #0
 8019c78:	f000 8087 	beq.w	8019d8a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019c7c:	44e1      	add	r9, ip
 8019c7e:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019c82:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019c86:	4413      	add	r3, r2
 8019c88:	b2a4      	uxth	r4, r4
 8019c8a:	fa1f fe8e 	uxth.w	lr, lr
 8019c8e:	fb04 fb0e 	mul.w	fp, r4, lr
 8019c92:	0124      	lsls	r4, r4, #4
 8019c94:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8019c98:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 8019c9c:	eba4 040b 	sub.w	r4, r4, fp
 8019ca0:	fa1f f08e 	uxth.w	r0, lr
 8019ca4:	b2a2      	uxth	r2, r4
 8019ca6:	78ac      	ldrb	r4, [r5, #2]
 8019ca8:	f897 c002 	ldrb.w	ip, [r7, #2]
 8019cac:	9901      	ldr	r1, [sp, #4]
 8019cae:	eba9 0900 	sub.w	r9, r9, r0
 8019cb2:	fa1f f989 	uxth.w	r9, r9
 8019cb6:	4354      	muls	r4, r2
 8019cb8:	fb09 440c 	mla	r4, r9, ip, r4
 8019cbc:	f896 c002 	ldrb.w	ip, [r6, #2]
 8019cc0:	fb00 440c 	mla	r4, r0, ip, r4
 8019cc4:	f893 c002 	ldrb.w	ip, [r3, #2]
 8019cc8:	fa1f fe88 	uxth.w	lr, r8
 8019ccc:	ea6f 0808 	mvn.w	r8, r8
 8019cd0:	fa5f f888 	uxtb.w	r8, r8
 8019cd4:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8019cd8:	fb1a fa08 	smulbb	sl, sl, r8
 8019cdc:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8019ce0:	fb0c ac0e 	mla	ip, ip, lr, sl
 8019ce4:	f895 a001 	ldrb.w	sl, [r5, #1]
 8019ce8:	787c      	ldrb	r4, [r7, #1]
 8019cea:	782d      	ldrb	r5, [r5, #0]
 8019cec:	783f      	ldrb	r7, [r7, #0]
 8019cee:	fb02 fa0a 	mul.w	sl, r2, sl
 8019cf2:	fb09 aa04 	mla	sl, r9, r4, sl
 8019cf6:	7874      	ldrb	r4, [r6, #1]
 8019cf8:	436a      	muls	r2, r5
 8019cfa:	7835      	ldrb	r5, [r6, #0]
 8019cfc:	fb00 aa04 	mla	sl, r0, r4, sl
 8019d00:	fb09 2207 	mla	r2, r9, r7, r2
 8019d04:	785c      	ldrb	r4, [r3, #1]
 8019d06:	781b      	ldrb	r3, [r3, #0]
 8019d08:	fb00 2005 	mla	r0, r0, r5, r2
 8019d0c:	fb0b a404 	mla	r4, fp, r4, sl
 8019d10:	fb0b 0b03 	mla	fp, fp, r3, r0
 8019d14:	9b02      	ldr	r3, [sp, #8]
 8019d16:	fb11 fa08 	smulbb	sl, r1, r8
 8019d1a:	fa1f fc8c 	uxth.w	ip, ip
 8019d1e:	fb13 f808 	smulbb	r8, r3, r8
 8019d22:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8019d26:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8019d2a:	fb04 a40e 	mla	r4, r4, lr, sl
 8019d2e:	f10c 0301 	add.w	r3, ip, #1
 8019d32:	fb0b 8e0e 	mla	lr, fp, lr, r8
 8019d36:	fa1f fe8e 	uxth.w	lr, lr
 8019d3a:	b2a4      	uxth	r4, r4
 8019d3c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8019d40:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 8019d44:	f104 0a01 	add.w	sl, r4, #1
 8019d48:	f10e 0c01 	add.w	ip, lr, #1
 8019d4c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8019d50:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8019d54:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8019d58:	0964      	lsrs	r4, r4, #5
 8019d5a:	ea4c 0c03 	orr.w	ip, ip, r3
 8019d5e:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8019d62:	9b03      	ldr	r3, [sp, #12]
 8019d64:	ea4c 0c04 	orr.w	ip, ip, r4
 8019d68:	f8a3 c000 	strh.w	ip, [r3]
 8019d6c:	b007      	add	sp, #28
 8019d6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019d72:	af05      	add	r7, sp, #20
 8019d74:	e756      	b.n	8019c24 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 8019d76:	ad05      	add	r5, sp, #20
 8019d78:	462f      	mov	r7, r5
 8019d7a:	e761      	b.n	8019c40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8019d7c:	ad05      	add	r5, sp, #20
 8019d7e:	e75f      	b.n	8019c40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8019d80:	ae05      	add	r6, sp, #20
 8019d82:	e772      	b.n	8019c6a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8019d84:	ab05      	add	r3, sp, #20
 8019d86:	461e      	mov	r6, r3
 8019d88:	e77e      	b.n	8019c88 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 8019d8a:	ab05      	add	r3, sp, #20
 8019d8c:	e77c      	b.n	8019c88 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

08019d8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019d8e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019d92:	b095      	sub	sp, #84	; 0x54
 8019d94:	9212      	str	r2, [sp, #72]	; 0x48
 8019d96:	9309      	str	r3, [sp, #36]	; 0x24
 8019d98:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8019d9a:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8019d9e:	930f      	str	r3, [sp, #60]	; 0x3c
 8019da0:	910e      	str	r1, [sp, #56]	; 0x38
 8019da2:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 8019da6:	9013      	str	r0, [sp, #76]	; 0x4c
 8019da8:	6850      	ldr	r0, [r2, #4]
 8019daa:	6812      	ldr	r2, [r2, #0]
 8019dac:	fb00 1303 	mla	r3, r0, r3, r1
 8019db0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019db4:	930a      	str	r3, [sp, #40]	; 0x28
 8019db6:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019db8:	681b      	ldr	r3, [r3, #0]
 8019dba:	930d      	str	r3, [sp, #52]	; 0x34
 8019dbc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019dbe:	685c      	ldr	r4, [r3, #4]
 8019dc0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019dc2:	43db      	mvns	r3, r3
 8019dc4:	b2db      	uxtb	r3, r3
 8019dc6:	3404      	adds	r4, #4
 8019dc8:	930b      	str	r3, [sp, #44]	; 0x2c
 8019dca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019dcc:	2b00      	cmp	r3, #0
 8019dce:	dc03      	bgt.n	8019dd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8019dd0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8019dd2:	2b00      	cmp	r3, #0
 8019dd4:	f340 8255 	ble.w	801a282 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8019dd8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019dda:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019dde:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019de2:	1e48      	subs	r0, r1, #1
 8019de4:	1e55      	subs	r5, r2, #1
 8019de6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019de8:	2b00      	cmp	r3, #0
 8019dea:	f340 80f9 	ble.w	8019fe0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8019dee:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8019df0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019df2:	1436      	asrs	r6, r6, #16
 8019df4:	ea4f 4323 	mov.w	r3, r3, asr #16
 8019df8:	d406      	bmi.n	8019e08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019dfa:	4286      	cmp	r6, r0
 8019dfc:	da04      	bge.n	8019e08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019dfe:	2b00      	cmp	r3, #0
 8019e00:	db02      	blt.n	8019e08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019e02:	42ab      	cmp	r3, r5
 8019e04:	f2c0 80ed 	blt.w	8019fe2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8019e08:	3601      	adds	r6, #1
 8019e0a:	f100 80da 	bmi.w	8019fc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019e0e:	42b1      	cmp	r1, r6
 8019e10:	f2c0 80d7 	blt.w	8019fc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019e14:	3301      	adds	r3, #1
 8019e16:	f100 80d4 	bmi.w	8019fc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019e1a:	429a      	cmp	r2, r3
 8019e1c:	f2c0 80d1 	blt.w	8019fc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019e20:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019e22:	9311      	str	r3, [sp, #68]	; 0x44
 8019e24:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019e26:	930c      	str	r3, [sp, #48]	; 0x30
 8019e28:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019e2a:	2b00      	cmp	r3, #0
 8019e2c:	f340 80fa 	ble.w	801a024 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8019e30:	9826      	ldr	r0, [sp, #152]	; 0x98
 8019e32:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019e34:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8019e36:	68c6      	ldr	r6, [r0, #12]
 8019e38:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8019e3a:	141d      	asrs	r5, r3, #16
 8019e3c:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8019e40:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019e42:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8019e44:	1400      	asrs	r0, r0, #16
 8019e46:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8019e4a:	6892      	ldr	r2, [r2, #8]
 8019e4c:	f100 813e 	bmi.w	801a0cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8019e50:	1e57      	subs	r7, r2, #1
 8019e52:	42b8      	cmp	r0, r7
 8019e54:	f280 813a 	bge.w	801a0cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8019e58:	2d00      	cmp	r5, #0
 8019e5a:	f2c0 8137 	blt.w	801a0cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8019e5e:	1e77      	subs	r7, r6, #1
 8019e60:	42bd      	cmp	r5, r7
 8019e62:	f280 8133 	bge.w	801a0cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8019e66:	b212      	sxth	r2, r2
 8019e68:	fb05 0002 	mla	r0, r5, r2, r0
 8019e6c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019e6e:	f815 a000 	ldrb.w	sl, [r5, r0]
 8019e72:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8019e76:	182e      	adds	r6, r5, r0
 8019e78:	eb04 050a 	add.w	r5, r4, sl
 8019e7c:	2b00      	cmp	r3, #0
 8019e7e:	f000 8117 	beq.w	801a0b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 8019e82:	f896 c001 	ldrb.w	ip, [r6, #1]
 8019e86:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8019e8a:	44a4      	add	ip, r4
 8019e8c:	2900      	cmp	r1, #0
 8019e8e:	f000 8117 	beq.w	801a0c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 8019e92:	18b0      	adds	r0, r6, r2
 8019e94:	5cb2      	ldrb	r2, [r6, r2]
 8019e96:	7840      	ldrb	r0, [r0, #1]
 8019e98:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019e9c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8019ea0:	4422      	add	r2, r4
 8019ea2:	4420      	add	r0, r4
 8019ea4:	b29b      	uxth	r3, r3
 8019ea6:	b289      	uxth	r1, r1
 8019ea8:	fb03 f901 	mul.w	r9, r3, r1
 8019eac:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8019eb0:	011b      	lsls	r3, r3, #4
 8019eb2:	b289      	uxth	r1, r1
 8019eb4:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8019eb8:	f895 b002 	ldrb.w	fp, [r5, #2]
 8019ebc:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8019ebe:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8019ec2:	f8b6 e000 	ldrh.w	lr, [r6]
 8019ec6:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8019eca:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 8019ece:	eba3 0309 	sub.w	r3, r3, r9
 8019ed2:	b29b      	uxth	r3, r3
 8019ed4:	eba8 0801 	sub.w	r8, r8, r1
 8019ed8:	fa1f f888 	uxth.w	r8, r8
 8019edc:	435f      	muls	r7, r3
 8019ede:	fb08 770b 	mla	r7, r8, fp, r7
 8019ee2:	f892 b002 	ldrb.w	fp, [r2, #2]
 8019ee6:	9310      	str	r3, [sp, #64]	; 0x40
 8019ee8:	fb01 770b 	mla	r7, r1, fp, r7
 8019eec:	f890 b002 	ldrb.w	fp, [r0, #2]
 8019ef0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019ef2:	fb09 770b 	mla	r7, r9, fp, r7
 8019ef6:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8019efa:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8019efe:	fb1b fb03 	smulbb	fp, fp, r3
 8019f02:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8019f06:	fb07 b706 	mla	r7, r7, r6, fp
 8019f0a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019f0c:	f895 b001 	ldrb.w	fp, [r5, #1]
 8019f10:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8019f14:	f89c c000 	ldrb.w	ip, [ip]
 8019f18:	435d      	muls	r5, r3
 8019f1a:	fb08 550b 	mla	r5, r8, fp, r5
 8019f1e:	f892 b001 	ldrb.w	fp, [r2, #1]
 8019f22:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019f24:	fb01 550b 	mla	r5, r1, fp, r5
 8019f28:	f890 b001 	ldrb.w	fp, [r0, #1]
 8019f2c:	fb09 550b 	mla	r5, r9, fp, r5
 8019f30:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8019f34:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8019f38:	fb1b fb03 	smulbb	fp, fp, r3
 8019f3c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019f3e:	fb03 f30c 	mul.w	r3, r3, ip
 8019f42:	f892 c000 	ldrb.w	ip, [r2]
 8019f46:	fb08 330a 	mla	r3, r8, sl, r3
 8019f4a:	fb01 330c 	mla	r3, r1, ip, r3
 8019f4e:	f890 c000 	ldrb.w	ip, [r0]
 8019f52:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019f56:	fb09 3c0c 	mla	ip, r9, ip, r3
 8019f5a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019f5c:	fa5f fe8e 	uxtb.w	lr, lr
 8019f60:	b2bf      	uxth	r7, r7
 8019f62:	fb1e fe03 	smulbb	lr, lr, r3
 8019f66:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8019f6a:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8019f6e:	fb05 b506 	mla	r5, r5, r6, fp
 8019f72:	1c7b      	adds	r3, r7, #1
 8019f74:	fb0c e606 	mla	r6, ip, r6, lr
 8019f78:	b2ad      	uxth	r5, r5
 8019f7a:	b2b6      	uxth	r6, r6
 8019f7c:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8019f80:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 8019f84:	f105 0b01 	add.w	fp, r5, #1
 8019f88:	1c77      	adds	r7, r6, #1
 8019f8a:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8019f8e:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8019f92:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8019f96:	096d      	lsrs	r5, r5, #5
 8019f98:	431f      	orrs	r7, r3
 8019f9a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019f9e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019fa0:	433d      	orrs	r5, r7
 8019fa2:	801d      	strh	r5, [r3, #0]
 8019fa4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019fa6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8019fa8:	3302      	adds	r3, #2
 8019faa:	930c      	str	r3, [sp, #48]	; 0x30
 8019fac:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019fae:	4413      	add	r3, r2
 8019fb0:	931f      	str	r3, [sp, #124]	; 0x7c
 8019fb2:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8019fb4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019fb6:	4413      	add	r3, r2
 8019fb8:	9320      	str	r3, [sp, #128]	; 0x80
 8019fba:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019fbc:	3b01      	subs	r3, #1
 8019fbe:	9311      	str	r3, [sp, #68]	; 0x44
 8019fc0:	e732      	b.n	8019e28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8019fc2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019fc4:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8019fc6:	4433      	add	r3, r6
 8019fc8:	931f      	str	r3, [sp, #124]	; 0x7c
 8019fca:	9e22      	ldr	r6, [sp, #136]	; 0x88
 8019fcc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019fce:	4433      	add	r3, r6
 8019fd0:	9320      	str	r3, [sp, #128]	; 0x80
 8019fd2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019fd4:	3b01      	subs	r3, #1
 8019fd6:	9309      	str	r3, [sp, #36]	; 0x24
 8019fd8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019fda:	3302      	adds	r3, #2
 8019fdc:	930a      	str	r3, [sp, #40]	; 0x28
 8019fde:	e702      	b.n	8019de6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8019fe0:	d027      	beq.n	801a032 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 8019fe2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019fe4:	9821      	ldr	r0, [sp, #132]	; 0x84
 8019fe6:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8019fe8:	3b01      	subs	r3, #1
 8019fea:	fb00 5003 	mla	r0, r0, r3, r5
 8019fee:	1400      	asrs	r0, r0, #16
 8019ff0:	f53f af16 	bmi.w	8019e20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019ff4:	3901      	subs	r1, #1
 8019ff6:	4288      	cmp	r0, r1
 8019ff8:	f6bf af12 	bge.w	8019e20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019ffc:	9922      	ldr	r1, [sp, #136]	; 0x88
 8019ffe:	9820      	ldr	r0, [sp, #128]	; 0x80
 801a000:	fb01 0303 	mla	r3, r1, r3, r0
 801a004:	141b      	asrs	r3, r3, #16
 801a006:	f53f af0b 	bmi.w	8019e20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a00a:	3a01      	subs	r2, #1
 801a00c:	4293      	cmp	r3, r2
 801a00e:	f6bf af07 	bge.w	8019e20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a012:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a014:	9311      	str	r3, [sp, #68]	; 0x44
 801a016:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801a01a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a01c:	930c      	str	r3, [sp, #48]	; 0x30
 801a01e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a020:	2b00      	cmp	r3, #0
 801a022:	dc70      	bgt.n	801a106 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801a024:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a026:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801a028:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a02c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a030:	930a      	str	r3, [sp, #40]	; 0x28
 801a032:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a034:	2b00      	cmp	r3, #0
 801a036:	f340 8124 	ble.w	801a282 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801a03a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a03e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a042:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a046:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a048:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a04c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a050:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a054:	eef0 6a62 	vmov.f32	s13, s5
 801a058:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a05c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a060:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a064:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801a068:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a06c:	eef0 6a43 	vmov.f32	s13, s6
 801a070:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a074:	ee12 2a90 	vmov	r2, s5
 801a078:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a07c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a080:	ee13 2a10 	vmov	r2, s6
 801a084:	9321      	str	r3, [sp, #132]	; 0x84
 801a086:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a088:	fb92 f3f3 	sdiv	r3, r2, r3
 801a08c:	9322      	str	r3, [sp, #136]	; 0x88
 801a08e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a090:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a092:	3b01      	subs	r3, #1
 801a094:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a098:	930e      	str	r3, [sp, #56]	; 0x38
 801a09a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a09c:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801a0a0:	bf08      	it	eq
 801a0a2:	4613      	moveq	r3, r2
 801a0a4:	9309      	str	r3, [sp, #36]	; 0x24
 801a0a6:	eeb0 3a67 	vmov.f32	s6, s15
 801a0aa:	eef0 2a47 	vmov.f32	s5, s14
 801a0ae:	e68c      	b.n	8019dca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a0b0:	b149      	cbz	r1, 801a0c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801a0b2:	5cb2      	ldrb	r2, [r6, r2]
 801a0b4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a0b8:	4422      	add	r2, r4
 801a0ba:	4628      	mov	r0, r5
 801a0bc:	46ac      	mov	ip, r5
 801a0be:	e6f1      	b.n	8019ea4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a0c0:	4628      	mov	r0, r5
 801a0c2:	462a      	mov	r2, r5
 801a0c4:	e6ee      	b.n	8019ea4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a0c6:	4628      	mov	r0, r5
 801a0c8:	462a      	mov	r2, r5
 801a0ca:	e7f7      	b.n	801a0bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801a0cc:	1c47      	adds	r7, r0, #1
 801a0ce:	f53f af69 	bmi.w	8019fa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a0d2:	42ba      	cmp	r2, r7
 801a0d4:	f6ff af66 	blt.w	8019fa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a0d8:	1c6f      	adds	r7, r5, #1
 801a0da:	f53f af63 	bmi.w	8019fa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a0de:	42be      	cmp	r6, r7
 801a0e0:	f6ff af60 	blt.w	8019fa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a0e4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801a0e6:	9002      	str	r0, [sp, #8]
 801a0e8:	b236      	sxth	r6, r6
 801a0ea:	b212      	sxth	r2, r2
 801a0ec:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801a0f0:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801a0f4:	9200      	str	r2, [sp, #0]
 801a0f6:	9601      	str	r6, [sp, #4]
 801a0f8:	4623      	mov	r3, r4
 801a0fa:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801a0fe:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a100:	f7ff fd59 	bl	8019bb6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801a104:	e74e      	b.n	8019fa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a106:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a108:	9820      	ldr	r0, [sp, #128]	; 0x80
 801a10a:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801a10c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a10e:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801a112:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801a114:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801a118:	142d      	asrs	r5, r5, #16
 801a11a:	1400      	asrs	r0, r0, #16
 801a11c:	fb02 5000 	mla	r0, r2, r0, r5
 801a120:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a122:	f815 9000 	ldrb.w	r9, [r5, r0]
 801a126:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801a12a:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801a12e:	182e      	adds	r6, r5, r0
 801a130:	eb04 0509 	add.w	r5, r4, r9
 801a134:	2b00      	cmp	r3, #0
 801a136:	f000 8096 	beq.w	801a266 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801a13a:	7877      	ldrb	r7, [r6, #1]
 801a13c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a140:	4427      	add	r7, r4
 801a142:	2900      	cmp	r1, #0
 801a144:	f000 8097 	beq.w	801a276 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801a148:	18b0      	adds	r0, r6, r2
 801a14a:	5cb2      	ldrb	r2, [r6, r2]
 801a14c:	7840      	ldrb	r0, [r0, #1]
 801a14e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a152:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a156:	4422      	add	r2, r4
 801a158:	4420      	add	r0, r4
 801a15a:	b29b      	uxth	r3, r3
 801a15c:	b289      	uxth	r1, r1
 801a15e:	fb03 f801 	mul.w	r8, r3, r1
 801a162:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801a164:	f895 b002 	ldrb.w	fp, [r5, #2]
 801a168:	f8b6 c000 	ldrh.w	ip, [r6]
 801a16c:	78be      	ldrb	r6, [r7, #2]
 801a16e:	f814 9009 	ldrb.w	r9, [r4, r9]
 801a172:	011b      	lsls	r3, r3, #4
 801a174:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801a178:	b289      	uxth	r1, r1
 801a17a:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801a17e:	eba3 0308 	sub.w	r3, r3, r8
 801a182:	b29b      	uxth	r3, r3
 801a184:	ebae 0e01 	sub.w	lr, lr, r1
 801a188:	fa1f fe8e 	uxth.w	lr, lr
 801a18c:	435e      	muls	r6, r3
 801a18e:	fb0e 660b 	mla	r6, lr, fp, r6
 801a192:	f892 b002 	ldrb.w	fp, [r2, #2]
 801a196:	9310      	str	r3, [sp, #64]	; 0x40
 801a198:	fb01 660b 	mla	r6, r1, fp, r6
 801a19c:	f890 b002 	ldrb.w	fp, [r0, #2]
 801a1a0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a1a2:	fb08 660b 	mla	r6, r8, fp, r6
 801a1a6:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801a1aa:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801a1ae:	fb1b fb03 	smulbb	fp, fp, r3
 801a1b2:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801a1b6:	fb06 b60a 	mla	r6, r6, sl, fp
 801a1ba:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a1bc:	f895 b001 	ldrb.w	fp, [r5, #1]
 801a1c0:	787d      	ldrb	r5, [r7, #1]
 801a1c2:	783f      	ldrb	r7, [r7, #0]
 801a1c4:	435d      	muls	r5, r3
 801a1c6:	fb0e 550b 	mla	r5, lr, fp, r5
 801a1ca:	f892 b001 	ldrb.w	fp, [r2, #1]
 801a1ce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a1d0:	fb01 550b 	mla	r5, r1, fp, r5
 801a1d4:	f890 b001 	ldrb.w	fp, [r0, #1]
 801a1d8:	fb08 550b 	mla	r5, r8, fp, r5
 801a1dc:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801a1e0:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801a1e4:	fb1b fb03 	smulbb	fp, fp, r3
 801a1e8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a1ea:	437b      	muls	r3, r7
 801a1ec:	7817      	ldrb	r7, [r2, #0]
 801a1ee:	fb0e 3309 	mla	r3, lr, r9, r3
 801a1f2:	fb01 3307 	mla	r3, r1, r7, r3
 801a1f6:	7807      	ldrb	r7, [r0, #0]
 801a1f8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a1fc:	fb08 3707 	mla	r7, r8, r7, r3
 801a200:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a202:	fa5f fc8c 	uxtb.w	ip, ip
 801a206:	fb1c fc03 	smulbb	ip, ip, r3
 801a20a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801a20e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801a212:	fb05 b50a 	mla	r5, r5, sl, fp
 801a216:	fb07 c70a 	mla	r7, r7, sl, ip
 801a21a:	b2b6      	uxth	r6, r6
 801a21c:	b2ad      	uxth	r5, r5
 801a21e:	b2bf      	uxth	r7, r7
 801a220:	1c73      	adds	r3, r6, #1
 801a222:	1c7a      	adds	r2, r7, #1
 801a224:	f105 0b01 	add.w	fp, r5, #1
 801a228:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801a22c:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801a230:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801a234:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a238:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801a23c:	096d      	lsrs	r5, r5, #5
 801a23e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a240:	4316      	orrs	r6, r2
 801a242:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a246:	432e      	orrs	r6, r5
 801a248:	f823 6b02 	strh.w	r6, [r3], #2
 801a24c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801a24e:	930c      	str	r3, [sp, #48]	; 0x30
 801a250:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a252:	4413      	add	r3, r2
 801a254:	931f      	str	r3, [sp, #124]	; 0x7c
 801a256:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801a258:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a25a:	4413      	add	r3, r2
 801a25c:	9320      	str	r3, [sp, #128]	; 0x80
 801a25e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a260:	3b01      	subs	r3, #1
 801a262:	9311      	str	r3, [sp, #68]	; 0x44
 801a264:	e6db      	b.n	801a01e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801a266:	b149      	cbz	r1, 801a27c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801a268:	5cb2      	ldrb	r2, [r6, r2]
 801a26a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a26e:	4422      	add	r2, r4
 801a270:	4628      	mov	r0, r5
 801a272:	462f      	mov	r7, r5
 801a274:	e771      	b.n	801a15a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801a276:	4628      	mov	r0, r5
 801a278:	462a      	mov	r2, r5
 801a27a:	e76e      	b.n	801a15a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801a27c:	4628      	mov	r0, r5
 801a27e:	462a      	mov	r2, r5
 801a280:	e7f7      	b.n	801a272 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801a282:	b015      	add	sp, #84	; 0x54
 801a284:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a288 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801a288:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a28c:	880f      	ldrh	r7, [r1, #0]
 801a28e:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801a292:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801a296:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801a29a:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801a29e:	023c      	lsls	r4, r7, #8
 801a2a0:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801a2a4:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801a2a8:	017c      	lsls	r4, r7, #5
 801a2aa:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801a2ae:	00ff      	lsls	r7, r7, #3
 801a2b0:	ea4b 0404 	orr.w	r4, fp, r4
 801a2b4:	b2ff      	uxtb	r7, r7
 801a2b6:	fb05 ca0e 	mla	sl, r5, lr, ip
 801a2ba:	4327      	orrs	r7, r4
 801a2bc:	2d00      	cmp	r5, #0
 801a2be:	eb02 080a 	add.w	r8, r2, sl
 801a2c2:	9701      	str	r7, [sp, #4]
 801a2c4:	db7e      	blt.n	801a3c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801a2c6:	45a9      	cmp	r9, r5
 801a2c8:	dd7c      	ble.n	801a3c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801a2ca:	f1bc 0f00 	cmp.w	ip, #0
 801a2ce:	db77      	blt.n	801a3c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801a2d0:	45e6      	cmp	lr, ip
 801a2d2:	dd75      	ble.n	801a3c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801a2d4:	f812 700a 	ldrb.w	r7, [r2, sl]
 801a2d8:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a2dc:	441f      	add	r7, r3
 801a2de:	f11c 0201 	adds.w	r2, ip, #1
 801a2e2:	d472      	bmi.n	801a3ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a2e4:	4596      	cmp	lr, r2
 801a2e6:	dd70      	ble.n	801a3ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a2e8:	2800      	cmp	r0, #0
 801a2ea:	d06e      	beq.n	801a3ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a2ec:	f898 4001 	ldrb.w	r4, [r8, #1]
 801a2f0:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801a2f4:	441c      	add	r4, r3
 801a2f6:	3501      	adds	r5, #1
 801a2f8:	d46b      	bmi.n	801a3d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a2fa:	45a9      	cmp	r9, r5
 801a2fc:	dd69      	ble.n	801a3d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a2fe:	2e00      	cmp	r6, #0
 801a300:	d067      	beq.n	801a3d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a302:	f1bc 0f00 	cmp.w	ip, #0
 801a306:	db62      	blt.n	801a3ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801a308:	45e6      	cmp	lr, ip
 801a30a:	dd60      	ble.n	801a3ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801a30c:	f818 500e 	ldrb.w	r5, [r8, lr]
 801a310:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801a314:	441d      	add	r5, r3
 801a316:	f11c 0201 	adds.w	r2, ip, #1
 801a31a:	d45d      	bmi.n	801a3d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a31c:	4596      	cmp	lr, r2
 801a31e:	dd5b      	ble.n	801a3d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a320:	2800      	cmp	r0, #0
 801a322:	d059      	beq.n	801a3d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a324:	44c6      	add	lr, r8
 801a326:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801a32a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a32e:	4413      	add	r3, r2
 801a330:	b280      	uxth	r0, r0
 801a332:	b2b2      	uxth	r2, r6
 801a334:	fb00 f602 	mul.w	r6, r0, r2
 801a338:	0100      	lsls	r0, r0, #4
 801a33a:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801a33e:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801a342:	1b80      	subs	r0, r0, r6
 801a344:	fa1f fc82 	uxth.w	ip, r2
 801a348:	b282      	uxth	r2, r0
 801a34a:	78a0      	ldrb	r0, [r4, #2]
 801a34c:	f897 e002 	ldrb.w	lr, [r7, #2]
 801a350:	f897 9000 	ldrb.w	r9, [r7]
 801a354:	787f      	ldrb	r7, [r7, #1]
 801a356:	eba8 080c 	sub.w	r8, r8, ip
 801a35a:	fa1f f888 	uxth.w	r8, r8
 801a35e:	4350      	muls	r0, r2
 801a360:	fb08 0e0e 	mla	lr, r8, lr, r0
 801a364:	78a8      	ldrb	r0, [r5, #2]
 801a366:	fb0c e000 	mla	r0, ip, r0, lr
 801a36a:	f893 e002 	ldrb.w	lr, [r3, #2]
 801a36e:	fb06 0e0e 	mla	lr, r6, lr, r0
 801a372:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801a376:	f894 e000 	ldrb.w	lr, [r4]
 801a37a:	fb02 fe0e 	mul.w	lr, r2, lr
 801a37e:	fb08 e909 	mla	r9, r8, r9, lr
 801a382:	f895 e000 	ldrb.w	lr, [r5]
 801a386:	fb0c 990e 	mla	r9, ip, lr, r9
 801a38a:	f893 e000 	ldrb.w	lr, [r3]
 801a38e:	785b      	ldrb	r3, [r3, #1]
 801a390:	fb06 9e0e 	mla	lr, r6, lr, r9
 801a394:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801a398:	ea4e 0e00 	orr.w	lr, lr, r0
 801a39c:	7860      	ldrb	r0, [r4, #1]
 801a39e:	4350      	muls	r0, r2
 801a3a0:	786a      	ldrb	r2, [r5, #1]
 801a3a2:	fb08 0007 	mla	r0, r8, r7, r0
 801a3a6:	fb0c 0202 	mla	r2, ip, r2, r0
 801a3aa:	fb06 2303 	mla	r3, r6, r3, r2
 801a3ae:	095b      	lsrs	r3, r3, #5
 801a3b0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a3b4:	ea4e 0303 	orr.w	r3, lr, r3
 801a3b8:	800b      	strh	r3, [r1, #0]
 801a3ba:	b003      	add	sp, #12
 801a3bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a3c0:	af01      	add	r7, sp, #4
 801a3c2:	e78c      	b.n	801a2de <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801a3c4:	ac01      	add	r4, sp, #4
 801a3c6:	4627      	mov	r7, r4
 801a3c8:	e795      	b.n	801a2f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801a3ca:	ac01      	add	r4, sp, #4
 801a3cc:	e793      	b.n	801a2f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801a3ce:	ad01      	add	r5, sp, #4
 801a3d0:	e7a1      	b.n	801a316 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801a3d2:	ab01      	add	r3, sp, #4
 801a3d4:	461d      	mov	r5, r3
 801a3d6:	e7ab      	b.n	801a330 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801a3d8:	ab01      	add	r3, sp, #4
 801a3da:	e7a9      	b.n	801a330 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801a3dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a3dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a3e0:	b08f      	sub	sp, #60	; 0x3c
 801a3e2:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801a3e6:	920c      	str	r2, [sp, #48]	; 0x30
 801a3e8:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801a3ea:	910a      	str	r1, [sp, #40]	; 0x28
 801a3ec:	9306      	str	r3, [sp, #24]
 801a3ee:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801a3f2:	900d      	str	r0, [sp, #52]	; 0x34
 801a3f4:	6850      	ldr	r0, [r2, #4]
 801a3f6:	6812      	ldr	r2, [r2, #0]
 801a3f8:	fb00 1303 	mla	r3, r0, r3, r1
 801a3fc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a400:	9307      	str	r3, [sp, #28]
 801a402:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a404:	681b      	ldr	r3, [r3, #0]
 801a406:	9308      	str	r3, [sp, #32]
 801a408:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a40a:	685c      	ldr	r4, [r3, #4]
 801a40c:	3404      	adds	r4, #4
 801a40e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a410:	2b00      	cmp	r3, #0
 801a412:	dc03      	bgt.n	801a41c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801a414:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a416:	2b00      	cmp	r3, #0
 801a418:	f340 81d6 	ble.w	801a7c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801a41c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a41e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a422:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a426:	1e48      	subs	r0, r1, #1
 801a428:	1e56      	subs	r6, r2, #1
 801a42a:	9b06      	ldr	r3, [sp, #24]
 801a42c:	2b00      	cmp	r3, #0
 801a42e:	f340 80b7 	ble.w	801a5a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801a432:	ea5f 472b 	movs.w	r7, fp, asr #16
 801a436:	ea4f 4325 	mov.w	r3, r5, asr #16
 801a43a:	d406      	bmi.n	801a44a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a43c:	4287      	cmp	r7, r0
 801a43e:	da04      	bge.n	801a44a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a440:	2b00      	cmp	r3, #0
 801a442:	db02      	blt.n	801a44a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a444:	42b3      	cmp	r3, r6
 801a446:	f2c0 80ac 	blt.w	801a5a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801a44a:	3701      	adds	r7, #1
 801a44c:	f100 809d 	bmi.w	801a58a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a450:	42b9      	cmp	r1, r7
 801a452:	f2c0 809a 	blt.w	801a58a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a456:	3301      	adds	r3, #1
 801a458:	f100 8097 	bmi.w	801a58a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a45c:	429a      	cmp	r2, r3
 801a45e:	f2c0 8094 	blt.w	801a58a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a462:	9b06      	ldr	r3, [sp, #24]
 801a464:	930b      	str	r3, [sp, #44]	; 0x2c
 801a466:	9b07      	ldr	r3, [sp, #28]
 801a468:	9309      	str	r3, [sp, #36]	; 0x24
 801a46a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a46c:	2b00      	cmp	r3, #0
 801a46e:	f340 80b5 	ble.w	801a5dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801a472:	9820      	ldr	r0, [sp, #128]	; 0x80
 801a474:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a476:	68c7      	ldr	r7, [r0, #12]
 801a478:	6892      	ldr	r2, [r2, #8]
 801a47a:	ea5f 402b 	movs.w	r0, fp, asr #16
 801a47e:	ea4f 4625 	mov.w	r6, r5, asr #16
 801a482:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801a486:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801a48a:	f100 80fb 	bmi.w	801a684 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a48e:	f102 3cff 	add.w	ip, r2, #4294967295
 801a492:	4560      	cmp	r0, ip
 801a494:	f280 80f6 	bge.w	801a684 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a498:	2e00      	cmp	r6, #0
 801a49a:	f2c0 80f3 	blt.w	801a684 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a49e:	f107 3cff 	add.w	ip, r7, #4294967295
 801a4a2:	4566      	cmp	r6, ip
 801a4a4:	f280 80ee 	bge.w	801a684 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a4a8:	b212      	sxth	r2, r2
 801a4aa:	fb06 0002 	mla	r0, r6, r2, r0
 801a4ae:	9e08      	ldr	r6, [sp, #32]
 801a4b0:	1837      	adds	r7, r6, r0
 801a4b2:	5c30      	ldrb	r0, [r6, r0]
 801a4b4:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801a4b8:	eb04 0c08 	add.w	ip, r4, r8
 801a4bc:	2b00      	cmp	r3, #0
 801a4be:	f000 80d3 	beq.w	801a668 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a4c2:	787e      	ldrb	r6, [r7, #1]
 801a4c4:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a4c8:	4426      	add	r6, r4
 801a4ca:	2900      	cmp	r1, #0
 801a4cc:	f000 80d4 	beq.w	801a678 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801a4d0:	18b8      	adds	r0, r7, r2
 801a4d2:	5cba      	ldrb	r2, [r7, r2]
 801a4d4:	7840      	ldrb	r0, [r0, #1]
 801a4d6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a4da:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a4de:	4422      	add	r2, r4
 801a4e0:	4420      	add	r0, r4
 801a4e2:	b29b      	uxth	r3, r3
 801a4e4:	b289      	uxth	r1, r1
 801a4e6:	fb03 f901 	mul.w	r9, r3, r1
 801a4ea:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a4ee:	011b      	lsls	r3, r3, #4
 801a4f0:	b289      	uxth	r1, r1
 801a4f2:	78b7      	ldrb	r7, [r6, #2]
 801a4f4:	f89c a002 	ldrb.w	sl, [ip, #2]
 801a4f8:	f89c c001 	ldrb.w	ip, [ip, #1]
 801a4fc:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801a500:	eba3 0309 	sub.w	r3, r3, r9
 801a504:	b29b      	uxth	r3, r3
 801a506:	ebae 0e01 	sub.w	lr, lr, r1
 801a50a:	fa1f fe8e 	uxth.w	lr, lr
 801a50e:	435f      	muls	r7, r3
 801a510:	fb0e 770a 	mla	r7, lr, sl, r7
 801a514:	f892 a002 	ldrb.w	sl, [r2, #2]
 801a518:	fb01 770a 	mla	r7, r1, sl, r7
 801a51c:	f890 a002 	ldrb.w	sl, [r0, #2]
 801a520:	fb09 7a0a 	mla	sl, r9, sl, r7
 801a524:	f814 7008 	ldrb.w	r7, [r4, r8]
 801a528:	f896 8000 	ldrb.w	r8, [r6]
 801a52c:	7876      	ldrb	r6, [r6, #1]
 801a52e:	fb03 f808 	mul.w	r8, r3, r8
 801a532:	fb0e 8807 	mla	r8, lr, r7, r8
 801a536:	7817      	ldrb	r7, [r2, #0]
 801a538:	fb01 8807 	mla	r8, r1, r7, r8
 801a53c:	7807      	ldrb	r7, [r0, #0]
 801a53e:	fb09 8707 	mla	r7, r9, r7, r8
 801a542:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801a546:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a54a:	ea47 070a 	orr.w	r7, r7, sl
 801a54e:	4373      	muls	r3, r6
 801a550:	f892 a001 	ldrb.w	sl, [r2, #1]
 801a554:	fb0e 330c 	mla	r3, lr, ip, r3
 801a558:	fb01 310a 	mla	r1, r1, sl, r3
 801a55c:	f890 a001 	ldrb.w	sl, [r0, #1]
 801a560:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a562:	fb09 1a0a 	mla	sl, r9, sl, r1
 801a566:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a56a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a56e:	ea47 070a 	orr.w	r7, r7, sl
 801a572:	801f      	strh	r7, [r3, #0]
 801a574:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a576:	3302      	adds	r3, #2
 801a578:	9309      	str	r3, [sp, #36]	; 0x24
 801a57a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a57c:	449b      	add	fp, r3
 801a57e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a580:	441d      	add	r5, r3
 801a582:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a584:	3b01      	subs	r3, #1
 801a586:	930b      	str	r3, [sp, #44]	; 0x2c
 801a588:	e76f      	b.n	801a46a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801a58a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a58c:	449b      	add	fp, r3
 801a58e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a590:	441d      	add	r5, r3
 801a592:	9b06      	ldr	r3, [sp, #24]
 801a594:	3b01      	subs	r3, #1
 801a596:	9306      	str	r3, [sp, #24]
 801a598:	9b07      	ldr	r3, [sp, #28]
 801a59a:	3302      	adds	r3, #2
 801a59c:	9307      	str	r3, [sp, #28]
 801a59e:	e744      	b.n	801a42a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801a5a0:	d023      	beq.n	801a5ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801a5a2:	9b06      	ldr	r3, [sp, #24]
 801a5a4:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801a5a6:	3b01      	subs	r3, #1
 801a5a8:	fb00 b003 	mla	r0, r0, r3, fp
 801a5ac:	1400      	asrs	r0, r0, #16
 801a5ae:	f53f af58 	bmi.w	801a462 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a5b2:	3901      	subs	r1, #1
 801a5b4:	4288      	cmp	r0, r1
 801a5b6:	f6bf af54 	bge.w	801a462 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a5ba:	991c      	ldr	r1, [sp, #112]	; 0x70
 801a5bc:	fb01 5303 	mla	r3, r1, r3, r5
 801a5c0:	141b      	asrs	r3, r3, #16
 801a5c2:	f53f af4e 	bmi.w	801a462 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a5c6:	3a01      	subs	r2, #1
 801a5c8:	4293      	cmp	r3, r2
 801a5ca:	f6bf af4a 	bge.w	801a462 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a5ce:	9b06      	ldr	r3, [sp, #24]
 801a5d0:	9309      	str	r3, [sp, #36]	; 0x24
 801a5d2:	9b07      	ldr	r3, [sp, #28]
 801a5d4:	930b      	str	r3, [sp, #44]	; 0x2c
 801a5d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a5d8:	2b00      	cmp	r3, #0
 801a5da:	dc70      	bgt.n	801a6be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801a5dc:	9b06      	ldr	r3, [sp, #24]
 801a5de:	9a07      	ldr	r2, [sp, #28]
 801a5e0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a5e4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a5e8:	9307      	str	r3, [sp, #28]
 801a5ea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a5ec:	2b00      	cmp	r3, #0
 801a5ee:	f340 80eb 	ble.w	801a7c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801a5f2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a5f6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a5fa:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a5fe:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a600:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a604:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a608:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a60c:	eef0 6a62 	vmov.f32	s13, s5
 801a610:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a614:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a618:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a61c:	ee16 ba90 	vmov	fp, s13
 801a620:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a624:	eef0 6a43 	vmov.f32	s13, s6
 801a628:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a62c:	ee12 2a90 	vmov	r2, s5
 801a630:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a634:	fb92 f3f3 	sdiv	r3, r2, r3
 801a638:	ee13 2a10 	vmov	r2, s6
 801a63c:	931b      	str	r3, [sp, #108]	; 0x6c
 801a63e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a640:	fb92 f3f3 	sdiv	r3, r2, r3
 801a644:	931c      	str	r3, [sp, #112]	; 0x70
 801a646:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a648:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801a64a:	3b01      	subs	r3, #1
 801a64c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a650:	930a      	str	r3, [sp, #40]	; 0x28
 801a652:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a654:	bf08      	it	eq
 801a656:	4613      	moveq	r3, r2
 801a658:	ee16 5a90 	vmov	r5, s13
 801a65c:	9306      	str	r3, [sp, #24]
 801a65e:	eeb0 3a67 	vmov.f32	s6, s15
 801a662:	eef0 2a47 	vmov.f32	s5, s14
 801a666:	e6d2      	b.n	801a40e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801a668:	b149      	cbz	r1, 801a67e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801a66a:	5cba      	ldrb	r2, [r7, r2]
 801a66c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a670:	4422      	add	r2, r4
 801a672:	4660      	mov	r0, ip
 801a674:	4666      	mov	r6, ip
 801a676:	e734      	b.n	801a4e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801a678:	4660      	mov	r0, ip
 801a67a:	4662      	mov	r2, ip
 801a67c:	e731      	b.n	801a4e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801a67e:	4660      	mov	r0, ip
 801a680:	4662      	mov	r2, ip
 801a682:	e7f7      	b.n	801a674 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801a684:	f110 0c01 	adds.w	ip, r0, #1
 801a688:	f53f af74 	bmi.w	801a574 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a68c:	4562      	cmp	r2, ip
 801a68e:	f6ff af71 	blt.w	801a574 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a692:	f116 0c01 	adds.w	ip, r6, #1
 801a696:	f53f af6d 	bmi.w	801a574 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a69a:	4567      	cmp	r7, ip
 801a69c:	f6ff af6a 	blt.w	801a574 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a6a0:	b23f      	sxth	r7, r7
 801a6a2:	b212      	sxth	r2, r2
 801a6a4:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801a6a8:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801a6ac:	9200      	str	r2, [sp, #0]
 801a6ae:	9701      	str	r7, [sp, #4]
 801a6b0:	4623      	mov	r3, r4
 801a6b2:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801a6b6:	980d      	ldr	r0, [sp, #52]	; 0x34
 801a6b8:	f7ff fde6 	bl	801a288 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801a6bc:	e75a      	b.n	801a574 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a6be:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a6c0:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801a6c4:	ea4f 462b 	mov.w	r6, fp, asr #16
 801a6c8:	1428      	asrs	r0, r5, #16
 801a6ca:	fb02 6000 	mla	r0, r2, r0, r6
 801a6ce:	9e08      	ldr	r6, [sp, #32]
 801a6d0:	f816 8000 	ldrb.w	r8, [r6, r0]
 801a6d4:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801a6d8:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801a6dc:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801a6e0:	1837      	adds	r7, r6, r0
 801a6e2:	eb04 0c08 	add.w	ip, r4, r8
 801a6e6:	2b00      	cmp	r3, #0
 801a6e8:	d060      	beq.n	801a7ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801a6ea:	787e      	ldrb	r6, [r7, #1]
 801a6ec:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a6f0:	4426      	add	r6, r4
 801a6f2:	2900      	cmp	r1, #0
 801a6f4:	d062      	beq.n	801a7bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801a6f6:	18b8      	adds	r0, r7, r2
 801a6f8:	5cba      	ldrb	r2, [r7, r2]
 801a6fa:	7840      	ldrb	r0, [r0, #1]
 801a6fc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a700:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a704:	4422      	add	r2, r4
 801a706:	4420      	add	r0, r4
 801a708:	b29b      	uxth	r3, r3
 801a70a:	b289      	uxth	r1, r1
 801a70c:	fb03 f901 	mul.w	r9, r3, r1
 801a710:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a714:	011b      	lsls	r3, r3, #4
 801a716:	b289      	uxth	r1, r1
 801a718:	78b7      	ldrb	r7, [r6, #2]
 801a71a:	f89c a002 	ldrb.w	sl, [ip, #2]
 801a71e:	f89c c001 	ldrb.w	ip, [ip, #1]
 801a722:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801a726:	eba3 0309 	sub.w	r3, r3, r9
 801a72a:	b29b      	uxth	r3, r3
 801a72c:	ebae 0e01 	sub.w	lr, lr, r1
 801a730:	fa1f fe8e 	uxth.w	lr, lr
 801a734:	435f      	muls	r7, r3
 801a736:	fb0e 770a 	mla	r7, lr, sl, r7
 801a73a:	f892 a002 	ldrb.w	sl, [r2, #2]
 801a73e:	fb01 770a 	mla	r7, r1, sl, r7
 801a742:	f890 a002 	ldrb.w	sl, [r0, #2]
 801a746:	fb09 7a0a 	mla	sl, r9, sl, r7
 801a74a:	f814 7008 	ldrb.w	r7, [r4, r8]
 801a74e:	f896 8000 	ldrb.w	r8, [r6]
 801a752:	7876      	ldrb	r6, [r6, #1]
 801a754:	fb03 f808 	mul.w	r8, r3, r8
 801a758:	fb0e 8807 	mla	r8, lr, r7, r8
 801a75c:	7817      	ldrb	r7, [r2, #0]
 801a75e:	fb01 8807 	mla	r8, r1, r7, r8
 801a762:	7807      	ldrb	r7, [r0, #0]
 801a764:	fb09 8707 	mla	r7, r9, r7, r8
 801a768:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801a76c:	4373      	muls	r3, r6
 801a76e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a772:	7856      	ldrb	r6, [r2, #1]
 801a774:	ea47 070a 	orr.w	r7, r7, sl
 801a778:	fb0e 330c 	mla	r3, lr, ip, r3
 801a77c:	f890 a001 	ldrb.w	sl, [r0, #1]
 801a780:	fb01 3306 	mla	r3, r1, r6, r3
 801a784:	fb09 3a0a 	mla	sl, r9, sl, r3
 801a788:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a78c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a78e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a792:	ea47 070a 	orr.w	r7, r7, sl
 801a796:	f823 7b02 	strh.w	r7, [r3], #2
 801a79a:	930b      	str	r3, [sp, #44]	; 0x2c
 801a79c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a79e:	449b      	add	fp, r3
 801a7a0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a7a2:	441d      	add	r5, r3
 801a7a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a7a6:	3b01      	subs	r3, #1
 801a7a8:	9309      	str	r3, [sp, #36]	; 0x24
 801a7aa:	e714      	b.n	801a5d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801a7ac:	b149      	cbz	r1, 801a7c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801a7ae:	5cba      	ldrb	r2, [r7, r2]
 801a7b0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a7b4:	4422      	add	r2, r4
 801a7b6:	4660      	mov	r0, ip
 801a7b8:	4666      	mov	r6, ip
 801a7ba:	e7a5      	b.n	801a708 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801a7bc:	4660      	mov	r0, ip
 801a7be:	4662      	mov	r2, ip
 801a7c0:	e7a2      	b.n	801a708 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801a7c2:	4660      	mov	r0, ip
 801a7c4:	4662      	mov	r2, ip
 801a7c6:	e7f7      	b.n	801a7b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801a7c8:	b00f      	add	sp, #60	; 0x3c
 801a7ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a7ce <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801a7ce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a7d2:	b085      	sub	sp, #20
 801a7d4:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 801a7d8:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801a7dc:	9102      	str	r1, [sp, #8]
 801a7de:	2c00      	cmp	r4, #0
 801a7e0:	fb04 710c 	mla	r1, r4, ip, r7
 801a7e4:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801a7e8:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801a7ec:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801a7f0:	eb02 0e01 	add.w	lr, r2, r1
 801a7f4:	f2c0 8122 	blt.w	801aa3c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801a7f8:	45a0      	cmp	r8, r4
 801a7fa:	f340 811f 	ble.w	801aa3c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801a7fe:	2f00      	cmp	r7, #0
 801a800:	f2c0 811a 	blt.w	801aa38 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801a804:	45bc      	cmp	ip, r7
 801a806:	f340 8117 	ble.w	801aa38 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801a80a:	5c52      	ldrb	r2, [r2, r1]
 801a80c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801a810:	1c7a      	adds	r2, r7, #1
 801a812:	f100 8116 	bmi.w	801aa42 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801a816:	4594      	cmp	ip, r2
 801a818:	f340 8113 	ble.w	801aa42 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801a81c:	2e00      	cmp	r6, #0
 801a81e:	f000 8112 	beq.w	801aa46 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801a822:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801a826:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801a82a:	3401      	adds	r4, #1
 801a82c:	f100 810f 	bmi.w	801aa4e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801a830:	45a0      	cmp	r8, r4
 801a832:	f340 810c 	ble.w	801aa4e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801a836:	2800      	cmp	r0, #0
 801a838:	f000 810c 	beq.w	801aa54 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801a83c:	2f00      	cmp	r7, #0
 801a83e:	f2c0 8104 	blt.w	801aa4a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801a842:	45bc      	cmp	ip, r7
 801a844:	f340 8101 	ble.w	801aa4a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801a848:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801a84c:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801a850:	3701      	adds	r7, #1
 801a852:	f100 8102 	bmi.w	801aa5a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801a856:	45bc      	cmp	ip, r7
 801a858:	f340 80ff 	ble.w	801aa5a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801a85c:	2e00      	cmp	r6, #0
 801a85e:	f000 80fe 	beq.w	801aa5e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801a862:	44f4      	add	ip, lr
 801a864:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801a868:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801a86c:	b2b6      	uxth	r6, r6
 801a86e:	b280      	uxth	r0, r0
 801a870:	fb00 fe06 	mul.w	lr, r0, r6
 801a874:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801a878:	0136      	lsls	r6, r6, #4
 801a87a:	eba6 070e 	sub.w	r7, r6, lr
 801a87e:	b280      	uxth	r0, r0
 801a880:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801a884:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801a888:	b2bf      	uxth	r7, r7
 801a88a:	1a1b      	subs	r3, r3, r0
 801a88c:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801a890:	b29b      	uxth	r3, r3
 801a892:	fb0a f607 	mul.w	r6, sl, r7
 801a896:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801a89a:	fb0b 6603 	mla	r6, fp, r3, r6
 801a89e:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801a8a2:	fb00 6609 	mla	r6, r0, r9, r6
 801a8a6:	fb0e 6608 	mla	r6, lr, r8, r6
 801a8aa:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801a8ae:	9600      	str	r6, [sp, #0]
 801a8b0:	2e00      	cmp	r6, #0
 801a8b2:	f000 80be 	beq.w	801aa32 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801a8b6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801a8ba:	fb0b fc0c 	mul.w	ip, fp, ip
 801a8be:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801a8c2:	fb0b f505 	mul.w	r5, fp, r5
 801a8c6:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801a8ca:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801a8ce:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801a8d2:	44dc      	add	ip, fp
 801a8d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a8d8:	9501      	str	r5, [sp, #4]
 801a8da:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801a8de:	9503      	str	r5, [sp, #12]
 801a8e0:	9d01      	ldr	r5, [sp, #4]
 801a8e2:	9e02      	ldr	r6, [sp, #8]
 801a8e4:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801a8e8:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801a8ec:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801a8f0:	fb0a fc0c 	mul.w	ip, sl, ip
 801a8f4:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801a8f8:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801a8fc:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801a900:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801a904:	4465      	add	r5, ip
 801a906:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801a90a:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801a90e:	fb09 fc0c 	mul.w	ip, r9, ip
 801a912:	fb09 f904 	mul.w	r9, r9, r4
 801a916:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801a91a:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801a91e:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801a922:	fb08 f404 	mul.w	r4, r8, r4
 801a926:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801a92a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a92e:	fb08 f802 	mul.w	r8, r8, r2
 801a932:	fb0a fa01 	mul.w	sl, sl, r1
 801a936:	0a22      	lsrs	r2, r4, #8
 801a938:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801a93c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a940:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801a944:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801a948:	4414      	add	r4, r2
 801a94a:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801a94e:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801a952:	0a2d      	lsrs	r5, r5, #8
 801a954:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801a958:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801a95c:	9a03      	ldr	r2, [sp, #12]
 801a95e:	8836      	ldrh	r6, [r6, #0]
 801a960:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801a964:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801a968:	437d      	muls	r5, r7
 801a96a:	4461      	add	r1, ip
 801a96c:	0a24      	lsrs	r4, r4, #8
 801a96e:	fb02 5503 	mla	r5, r2, r3, r5
 801a972:	0a09      	lsrs	r1, r1, #8
 801a974:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801a978:	fb04 540e 	mla	r4, r4, lr, r5
 801a97c:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801a980:	fb01 4100 	mla	r1, r1, r0, r4
 801a984:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a988:	0a09      	lsrs	r1, r1, #8
 801a98a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a98e:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801a992:	fb07 f70a 	mul.w	r7, r7, sl
 801a996:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801a99a:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801a99e:	fb03 7101 	mla	r1, r3, r1, r7
 801a9a2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a9a6:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801a9aa:	fb0e 1e08 	mla	lr, lr, r8, r1
 801a9ae:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801a9b2:	fb00 e101 	mla	r1, r0, r1, lr
 801a9b6:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801a9ba:	9a00      	ldr	r2, [sp, #0]
 801a9bc:	b287      	uxth	r7, r0
 801a9be:	437a      	muls	r2, r7
 801a9c0:	0a09      	lsrs	r1, r1, #8
 801a9c2:	1c53      	adds	r3, r2, #1
 801a9c4:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801a9c8:	4321      	orrs	r1, r4
 801a9ca:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a9ce:	1235      	asrs	r5, r6, #8
 801a9d0:	0c0a      	lsrs	r2, r1, #16
 801a9d2:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801a9d6:	b2db      	uxtb	r3, r3
 801a9d8:	fb12 f207 	smulbb	r2, r2, r7
 801a9dc:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801a9e0:	fb05 2503 	mla	r5, r5, r3, r2
 801a9e4:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801a9e8:	10f2      	asrs	r2, r6, #3
 801a9ea:	b2c8      	uxtb	r0, r1
 801a9ec:	00f6      	lsls	r6, r6, #3
 801a9ee:	fb14 f407 	smulbb	r4, r4, r7
 801a9f2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801a9f6:	b2f6      	uxtb	r6, r6
 801a9f8:	fb10 f007 	smulbb	r0, r0, r7
 801a9fc:	fb02 4203 	mla	r2, r2, r3, r4
 801aa00:	b2ad      	uxth	r5, r5
 801aa02:	fb06 0303 	mla	r3, r6, r3, r0
 801aa06:	b299      	uxth	r1, r3
 801aa08:	b294      	uxth	r4, r2
 801aa0a:	1c6b      	adds	r3, r5, #1
 801aa0c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801aa10:	1c62      	adds	r2, r4, #1
 801aa12:	1c4b      	adds	r3, r1, #1
 801aa14:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801aa18:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801aa1c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801aa20:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801aa24:	0952      	lsrs	r2, r2, #5
 801aa26:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801aa2a:	432b      	orrs	r3, r5
 801aa2c:	4313      	orrs	r3, r2
 801aa2e:	9a02      	ldr	r2, [sp, #8]
 801aa30:	8013      	strh	r3, [r2, #0]
 801aa32:	b005      	add	sp, #20
 801aa34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801aa38:	2500      	movs	r5, #0
 801aa3a:	e6e9      	b.n	801a810 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801aa3c:	2100      	movs	r1, #0
 801aa3e:	460d      	mov	r5, r1
 801aa40:	e6f3      	b.n	801a82a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801aa42:	2100      	movs	r1, #0
 801aa44:	e6f1      	b.n	801a82a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801aa46:	4631      	mov	r1, r6
 801aa48:	e6ef      	b.n	801a82a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801aa4a:	2400      	movs	r4, #0
 801aa4c:	e700      	b.n	801a850 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801aa4e:	2200      	movs	r2, #0
 801aa50:	4614      	mov	r4, r2
 801aa52:	e70b      	b.n	801a86c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801aa54:	4602      	mov	r2, r0
 801aa56:	4604      	mov	r4, r0
 801aa58:	e708      	b.n	801a86c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801aa5a:	2200      	movs	r2, #0
 801aa5c:	e706      	b.n	801a86c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801aa5e:	4632      	mov	r2, r6
 801aa60:	e704      	b.n	801a86c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801aa62 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801aa62:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aa66:	b09f      	sub	sp, #124	; 0x7c
 801aa68:	921b      	str	r2, [sp, #108]	; 0x6c
 801aa6a:	9309      	str	r3, [sp, #36]	; 0x24
 801aa6c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801aa6e:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801aa72:	931c      	str	r3, [sp, #112]	; 0x70
 801aa74:	9119      	str	r1, [sp, #100]	; 0x64
 801aa76:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801aa7a:	901d      	str	r0, [sp, #116]	; 0x74
 801aa7c:	6850      	ldr	r0, [r2, #4]
 801aa7e:	6812      	ldr	r2, [r2, #0]
 801aa80:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801aa82:	fb00 1303 	mla	r3, r0, r3, r1
 801aa86:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801aa8a:	930c      	str	r3, [sp, #48]	; 0x30
 801aa8c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801aa8e:	681b      	ldr	r3, [r3, #0]
 801aa90:	9312      	str	r3, [sp, #72]	; 0x48
 801aa92:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801aa94:	685e      	ldr	r6, [r3, #4]
 801aa96:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 801aa9a:	930d      	str	r3, [sp, #52]	; 0x34
 801aa9c:	3604      	adds	r6, #4
 801aa9e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801aaa0:	2b00      	cmp	r3, #0
 801aaa2:	dc03      	bgt.n	801aaac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801aaa4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801aaa6:	2b00      	cmp	r3, #0
 801aaa8:	f340 8388 	ble.w	801b1bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801aaac:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801aaae:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801aab2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801aab6:	1e48      	subs	r0, r1, #1
 801aab8:	1e57      	subs	r7, r2, #1
 801aaba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801aabc:	2b00      	cmp	r3, #0
 801aabe:	f340 8195 	ble.w	801adec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801aac2:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801aac4:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801aac8:	ea4f 4325 	mov.w	r3, r5, asr #16
 801aacc:	d406      	bmi.n	801aadc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801aace:	4584      	cmp	ip, r0
 801aad0:	da04      	bge.n	801aadc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801aad2:	2b00      	cmp	r3, #0
 801aad4:	db02      	blt.n	801aadc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801aad6:	42bb      	cmp	r3, r7
 801aad8:	f2c0 8189 	blt.w	801adee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801aadc:	f11c 0c01 	adds.w	ip, ip, #1
 801aae0:	f100 8177 	bmi.w	801add2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801aae4:	4561      	cmp	r1, ip
 801aae6:	f2c0 8174 	blt.w	801add2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801aaea:	3301      	adds	r3, #1
 801aaec:	f100 8171 	bmi.w	801add2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801aaf0:	429a      	cmp	r2, r3
 801aaf2:	f2c0 816e 	blt.w	801add2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801aaf6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801aaf8:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801aafa:	931a      	str	r3, [sp, #104]	; 0x68
 801aafc:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801aafe:	2b00      	cmp	r3, #0
 801ab00:	f340 8193 	ble.w	801ae2a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801ab04:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801ab06:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801ab0a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ab0c:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801ab10:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801ab12:	141b      	asrs	r3, r3, #16
 801ab14:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801ab18:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801ab1c:	f100 81d6 	bmi.w	801aecc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ab20:	f100 38ff 	add.w	r8, r0, #4294967295
 801ab24:	4543      	cmp	r3, r8
 801ab26:	f280 81d1 	bge.w	801aecc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ab2a:	f1bc 0f00 	cmp.w	ip, #0
 801ab2e:	f2c0 81cd 	blt.w	801aecc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ab32:	f10e 38ff 	add.w	r8, lr, #4294967295
 801ab36:	45c4      	cmp	ip, r8
 801ab38:	f280 81c8 	bge.w	801aecc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ab3c:	b200      	sxth	r0, r0
 801ab3e:	fb0c 3300 	mla	r3, ip, r0, r3
 801ab42:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ab44:	eb04 0803 	add.w	r8, r4, r3
 801ab48:	5ce3      	ldrb	r3, [r4, r3]
 801ab4a:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801ab4e:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801ab52:	2a00      	cmp	r2, #0
 801ab54:	f000 81af 	beq.w	801aeb6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801ab58:	f898 c001 	ldrb.w	ip, [r8, #1]
 801ab5c:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801ab60:	940e      	str	r4, [sp, #56]	; 0x38
 801ab62:	0e24      	lsrs	r4, r4, #24
 801ab64:	9415      	str	r4, [sp, #84]	; 0x54
 801ab66:	b179      	cbz	r1, 801ab88 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801ab68:	eb08 0c00 	add.w	ip, r8, r0
 801ab6c:	f818 0000 	ldrb.w	r0, [r8, r0]
 801ab70:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801ab74:	900a      	str	r0, [sp, #40]	; 0x28
 801ab76:	0e00      	lsrs	r0, r0, #24
 801ab78:	9013      	str	r0, [sp, #76]	; 0x4c
 801ab7a:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801ab7e:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801ab82:	900f      	str	r0, [sp, #60]	; 0x3c
 801ab84:	0e00      	lsrs	r0, r0, #24
 801ab86:	9016      	str	r0, [sp, #88]	; 0x58
 801ab88:	b292      	uxth	r2, r2
 801ab8a:	b289      	uxth	r1, r1
 801ab8c:	fb02 f901 	mul.w	r9, r2, r1
 801ab90:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801ab94:	0112      	lsls	r2, r2, #4
 801ab96:	eba2 0809 	sub.w	r8, r2, r9
 801ab9a:	b289      	uxth	r1, r1
 801ab9c:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801aba0:	9815      	ldr	r0, [sp, #84]	; 0x54
 801aba2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801aba4:	fa1f f888 	uxth.w	r8, r8
 801aba8:	1a52      	subs	r2, r2, r1
 801abaa:	b292      	uxth	r2, r2
 801abac:	fb08 f000 	mul.w	r0, r8, r0
 801abb0:	fb02 000e 	mla	r0, r2, lr, r0
 801abb4:	fb01 0004 	mla	r0, r1, r4, r0
 801abb8:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801abba:	fb09 0004 	mla	r0, r9, r4, r0
 801abbe:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801abc2:	2800      	cmp	r0, #0
 801abc4:	f000 80fa 	beq.w	801adbc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801abc8:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801abcc:	d01b      	beq.n	801ac06 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801abce:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801abd2:	fb0e fa0a 	mul.w	sl, lr, sl
 801abd6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801abda:	fb0e fe03 	mul.w	lr, lr, r3
 801abde:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801abe2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801abe6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801abea:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801abee:	4453      	add	r3, sl
 801abf0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801abf4:	0a1b      	lsrs	r3, r3, #8
 801abf6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801abfa:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801abfe:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801ac02:	ea43 030c 	orr.w	r3, r3, ip
 801ac06:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ac08:	2cff      	cmp	r4, #255	; 0xff
 801ac0a:	d021      	beq.n	801ac50 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801ac0c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ac0e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801ac12:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ac14:	fb04 fb0b 	mul.w	fp, r4, fp
 801ac18:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ac1a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ac1e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ac20:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ac24:	fb04 fa0a 	mul.w	sl, r4, sl
 801ac28:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ac2c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ac30:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ac34:	44de      	add	lr, fp
 801ac36:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ac3a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ac3e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ac42:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ac46:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ac4a:	ea4e 040a 	orr.w	r4, lr, sl
 801ac4e:	940e      	str	r4, [sp, #56]	; 0x38
 801ac50:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ac52:	2cff      	cmp	r4, #255	; 0xff
 801ac54:	d021      	beq.n	801ac9a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801ac56:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ac58:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801ac5c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ac5e:	fb04 fb0b 	mul.w	fp, r4, fp
 801ac62:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ac64:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ac68:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ac6a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ac6e:	fb04 fa0a 	mul.w	sl, r4, sl
 801ac72:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ac76:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ac7a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ac7e:	44de      	add	lr, fp
 801ac80:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ac84:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ac88:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ac8c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ac90:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ac94:	ea4e 040a 	orr.w	r4, lr, sl
 801ac98:	940a      	str	r4, [sp, #40]	; 0x28
 801ac9a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801ac9c:	2cff      	cmp	r4, #255	; 0xff
 801ac9e:	d021      	beq.n	801ace4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801aca0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801aca2:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801aca6:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801aca8:	fb04 fb0b 	mul.w	fp, r4, fp
 801acac:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801acae:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801acb2:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801acb4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801acb8:	fb04 fa0a 	mul.w	sl, r4, sl
 801acbc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801acc0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801acc4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801acc8:	44de      	add	lr, fp
 801acca:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801acce:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801acd2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801acd6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801acda:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801acde:	ea4e 040a 	orr.w	r4, lr, sl
 801ace2:	940f      	str	r4, [sp, #60]	; 0x3c
 801ace4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ace6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801acea:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801acec:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801acf0:	fb08 fc0c 	mul.w	ip, r8, ip
 801acf4:	fb02 cc0e 	mla	ip, r2, lr, ip
 801acf8:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801acfc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801acfe:	fb01 cc0e 	mla	ip, r1, lr, ip
 801ad02:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801ad06:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ad08:	fb09 cc0e 	mla	ip, r9, lr, ip
 801ad0c:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801ad10:	fb08 f80e 	mul.w	r8, r8, lr
 801ad14:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ad18:	fb02 8303 	mla	r3, r2, r3, r8
 801ad1c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801ad1e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801ad20:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801ad24:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ad26:	fb01 330a 	mla	r3, r1, sl, r3
 801ad2a:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 801ad2e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801ad30:	fb09 3901 	mla	r9, r9, r1, r3
 801ad34:	4342      	muls	r2, r0
 801ad36:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ad3a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ad3e:	883b      	ldrh	r3, [r7, #0]
 801ad40:	1c50      	adds	r0, r2, #1
 801ad42:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ad46:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801ad4a:	ea4c 0c09 	orr.w	ip, ip, r9
 801ad4e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801ad52:	1219      	asrs	r1, r3, #8
 801ad54:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801ad58:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801ad5c:	b2c0      	uxtb	r0, r0
 801ad5e:	fb12 f204 	smulbb	r2, r2, r4
 801ad62:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ad66:	fb01 2100 	mla	r1, r1, r0, r2
 801ad6a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801ad6e:	10da      	asrs	r2, r3, #3
 801ad70:	fa5f fc8c 	uxtb.w	ip, ip
 801ad74:	00db      	lsls	r3, r3, #3
 801ad76:	fb1c fc04 	smulbb	ip, ip, r4
 801ad7a:	b2db      	uxtb	r3, r3
 801ad7c:	b289      	uxth	r1, r1
 801ad7e:	fb03 c300 	mla	r3, r3, r0, ip
 801ad82:	fa1f fc83 	uxth.w	ip, r3
 801ad86:	1c4b      	adds	r3, r1, #1
 801ad88:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801ad8c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ad90:	fb1e fe04 	smulbb	lr, lr, r4
 801ad94:	f10c 0301 	add.w	r3, ip, #1
 801ad98:	fb02 e200 	mla	r2, r2, r0, lr
 801ad9c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801ada0:	b292      	uxth	r2, r2
 801ada2:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801ada6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801adaa:	430b      	orrs	r3, r1
 801adac:	1c51      	adds	r1, r2, #1
 801adae:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801adb2:	0952      	lsrs	r2, r2, #5
 801adb4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801adb8:	4313      	orrs	r3, r2
 801adba:	803b      	strh	r3, [r7, #0]
 801adbc:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801adbe:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801adc0:	441a      	add	r2, r3
 801adc2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801adc4:	9229      	str	r2, [sp, #164]	; 0xa4
 801adc6:	441d      	add	r5, r3
 801adc8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801adca:	3b01      	subs	r3, #1
 801adcc:	3702      	adds	r7, #2
 801adce:	931a      	str	r3, [sp, #104]	; 0x68
 801add0:	e694      	b.n	801aafc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801add2:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801add4:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801add6:	441c      	add	r4, r3
 801add8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801adda:	9429      	str	r4, [sp, #164]	; 0xa4
 801addc:	441d      	add	r5, r3
 801adde:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ade0:	3b01      	subs	r3, #1
 801ade2:	9309      	str	r3, [sp, #36]	; 0x24
 801ade4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ade6:	3302      	adds	r3, #2
 801ade8:	930c      	str	r3, [sp, #48]	; 0x30
 801adea:	e666      	b.n	801aaba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801adec:	d024      	beq.n	801ae38 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801adee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801adf0:	982b      	ldr	r0, [sp, #172]	; 0xac
 801adf2:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801adf4:	3b01      	subs	r3, #1
 801adf6:	fb00 4003 	mla	r0, r0, r3, r4
 801adfa:	1400      	asrs	r0, r0, #16
 801adfc:	f53f ae7b 	bmi.w	801aaf6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ae00:	3901      	subs	r1, #1
 801ae02:	4288      	cmp	r0, r1
 801ae04:	f6bf ae77 	bge.w	801aaf6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ae08:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801ae0a:	fb01 5303 	mla	r3, r1, r3, r5
 801ae0e:	141b      	asrs	r3, r3, #16
 801ae10:	f53f ae71 	bmi.w	801aaf6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ae14:	3a01      	subs	r2, #1
 801ae16:	4293      	cmp	r3, r2
 801ae18:	f6bf ae6d 	bge.w	801aaf6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ae1c:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801ae20:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801ae24:	f1bb 0f00 	cmp.w	fp, #0
 801ae28:	dc70      	bgt.n	801af0c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801ae2a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ae2c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801ae30:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ae32:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801ae36:	930c      	str	r3, [sp, #48]	; 0x30
 801ae38:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801ae3a:	2b00      	cmp	r3, #0
 801ae3c:	f340 81be 	ble.w	801b1bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801ae40:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ae44:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ae48:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ae4c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ae4e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ae52:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ae56:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ae5a:	eef0 6a62 	vmov.f32	s13, s5
 801ae5e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ae62:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ae66:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ae6a:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801ae6e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ae72:	eef0 6a43 	vmov.f32	s13, s6
 801ae76:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ae7a:	ee12 2a90 	vmov	r2, s5
 801ae7e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ae82:	fb92 f3f3 	sdiv	r3, r2, r3
 801ae86:	ee13 2a10 	vmov	r2, s6
 801ae8a:	932b      	str	r3, [sp, #172]	; 0xac
 801ae8c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ae8e:	fb92 f3f3 	sdiv	r3, r2, r3
 801ae92:	932c      	str	r3, [sp, #176]	; 0xb0
 801ae94:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801ae96:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801ae98:	3b01      	subs	r3, #1
 801ae9a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ae9e:	9319      	str	r3, [sp, #100]	; 0x64
 801aea0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801aea2:	bf08      	it	eq
 801aea4:	4613      	moveq	r3, r2
 801aea6:	ee16 5a90 	vmov	r5, s13
 801aeaa:	9309      	str	r3, [sp, #36]	; 0x24
 801aeac:	eeb0 3a67 	vmov.f32	s6, s15
 801aeb0:	eef0 2a47 	vmov.f32	s5, s14
 801aeb4:	e5f3      	b.n	801aa9e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801aeb6:	2900      	cmp	r1, #0
 801aeb8:	f43f ae66 	beq.w	801ab88 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801aebc:	f818 0000 	ldrb.w	r0, [r8, r0]
 801aec0:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801aec4:	900a      	str	r0, [sp, #40]	; 0x28
 801aec6:	0e00      	lsrs	r0, r0, #24
 801aec8:	9013      	str	r0, [sp, #76]	; 0x4c
 801aeca:	e65d      	b.n	801ab88 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801aecc:	f113 0801 	adds.w	r8, r3, #1
 801aed0:	f53f af74 	bmi.w	801adbc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801aed4:	4540      	cmp	r0, r8
 801aed6:	f6ff af71 	blt.w	801adbc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801aeda:	f11c 0801 	adds.w	r8, ip, #1
 801aede:	f53f af6d 	bmi.w	801adbc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801aee2:	45c6      	cmp	lr, r8
 801aee4:	f6ff af6a 	blt.w	801adbc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801aee8:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801aeea:	9302      	str	r3, [sp, #8]
 801aeec:	b200      	sxth	r0, r0
 801aeee:	fa0f f38e 	sxth.w	r3, lr
 801aef2:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801aef6:	e9cd c203 	strd	ip, r2, [sp, #12]
 801aefa:	9301      	str	r3, [sp, #4]
 801aefc:	9000      	str	r0, [sp, #0]
 801aefe:	4633      	mov	r3, r6
 801af00:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801af02:	981d      	ldr	r0, [sp, #116]	; 0x74
 801af04:	4639      	mov	r1, r7
 801af06:	f7ff fc62 	bl	801a7ce <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801af0a:	e757      	b.n	801adbc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801af0c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801af0e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801af10:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801af14:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801af16:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801af1a:	1427      	asrs	r7, r4, #16
 801af1c:	142b      	asrs	r3, r5, #16
 801af1e:	fb01 7303 	mla	r3, r1, r3, r7
 801af22:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801af24:	18e7      	adds	r7, r4, r3
 801af26:	5ce3      	ldrb	r3, [r4, r3]
 801af28:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801af2c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801af30:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801af34:	2a00      	cmp	r2, #0
 801af36:	f000 8137 	beq.w	801b1a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801af3a:	f897 e001 	ldrb.w	lr, [r7, #1]
 801af3e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801af42:	9410      	str	r4, [sp, #64]	; 0x40
 801af44:	0e24      	lsrs	r4, r4, #24
 801af46:	9417      	str	r4, [sp, #92]	; 0x5c
 801af48:	b170      	cbz	r0, 801af68 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801af4a:	eb07 0e01 	add.w	lr, r7, r1
 801af4e:	5c79      	ldrb	r1, [r7, r1]
 801af50:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801af54:	910b      	str	r1, [sp, #44]	; 0x2c
 801af56:	0e09      	lsrs	r1, r1, #24
 801af58:	9114      	str	r1, [sp, #80]	; 0x50
 801af5a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801af5e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801af62:	9111      	str	r1, [sp, #68]	; 0x44
 801af64:	0e09      	lsrs	r1, r1, #24
 801af66:	9118      	str	r1, [sp, #96]	; 0x60
 801af68:	b292      	uxth	r2, r2
 801af6a:	b280      	uxth	r0, r0
 801af6c:	fb02 f800 	mul.w	r8, r2, r0
 801af70:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801af74:	0112      	lsls	r2, r2, #4
 801af76:	eba2 0e08 	sub.w	lr, r2, r8
 801af7a:	b280      	uxth	r0, r0
 801af7c:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801af80:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801af82:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801af84:	fa1f fe8e 	uxth.w	lr, lr
 801af88:	1a12      	subs	r2, r2, r0
 801af8a:	b292      	uxth	r2, r2
 801af8c:	fb0e f101 	mul.w	r1, lr, r1
 801af90:	fb02 110c 	mla	r1, r2, ip, r1
 801af94:	fb00 1104 	mla	r1, r0, r4, r1
 801af98:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801af9a:	fb08 1104 	mla	r1, r8, r4, r1
 801af9e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801afa2:	2900      	cmp	r1, #0
 801afa4:	f000 80f5 	beq.w	801b192 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801afa8:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801afac:	d019      	beq.n	801afe2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801afae:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801afb2:	fb0c fa0a 	mul.w	sl, ip, sl
 801afb6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801afba:	fb0c fc03 	mul.w	ip, ip, r3
 801afbe:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801afc2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801afc6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801afca:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801afce:	4453      	add	r3, sl
 801afd0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801afd4:	0a1b      	lsrs	r3, r3, #8
 801afd6:	0a3f      	lsrs	r7, r7, #8
 801afd8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801afdc:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801afe0:	433b      	orrs	r3, r7
 801afe2:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801afe4:	2cff      	cmp	r4, #255	; 0xff
 801afe6:	d020      	beq.n	801b02a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801afe8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801afea:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801afee:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801aff0:	4367      	muls	r7, r4
 801aff2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801aff4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801aff8:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801affa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801affe:	fb04 fa0a 	mul.w	sl, r4, sl
 801b002:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b006:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b00a:	44bc      	add	ip, r7
 801b00c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b010:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b014:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b018:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b01c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b020:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b024:	ea4c 040a 	orr.w	r4, ip, sl
 801b028:	9410      	str	r4, [sp, #64]	; 0x40
 801b02a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b02c:	2cff      	cmp	r4, #255	; 0xff
 801b02e:	d020      	beq.n	801b072 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801b030:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b032:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b036:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b038:	4367      	muls	r7, r4
 801b03a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b03c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b040:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b042:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b046:	fb04 fa0a 	mul.w	sl, r4, sl
 801b04a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b04e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b052:	44bc      	add	ip, r7
 801b054:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b058:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b05c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b060:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b064:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b068:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b06c:	ea4c 040a 	orr.w	r4, ip, sl
 801b070:	940b      	str	r4, [sp, #44]	; 0x2c
 801b072:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b074:	2cff      	cmp	r4, #255	; 0xff
 801b076:	d020      	beq.n	801b0ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801b078:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b07a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b07e:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b080:	4367      	muls	r7, r4
 801b082:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b084:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b088:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b08a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b08e:	fb04 fa0a 	mul.w	sl, r4, sl
 801b092:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b096:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b09a:	44bc      	add	ip, r7
 801b09c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b0a0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b0a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b0a8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b0ac:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b0b0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b0b4:	ea4c 040a 	orr.w	r4, ip, sl
 801b0b8:	9411      	str	r4, [sp, #68]	; 0x44
 801b0ba:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b0bc:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b0c0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b0c2:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801b0c6:	fb0e f707 	mul.w	r7, lr, r7
 801b0ca:	fb02 770c 	mla	r7, r2, ip, r7
 801b0ce:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b0d2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b0d4:	fb00 770c 	mla	r7, r0, ip, r7
 801b0d8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b0dc:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b0de:	fb08 770c 	mla	r7, r8, ip, r7
 801b0e2:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801b0e6:	fb0e fe0c 	mul.w	lr, lr, ip
 801b0ea:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b0ee:	fb02 e303 	mla	r3, r2, r3, lr
 801b0f2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801b0f4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b0f6:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801b0fa:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b0fc:	fb00 330a 	mla	r3, r0, sl, r3
 801b100:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801b104:	fb08 3c0c 	mla	ip, r8, ip, r3
 801b108:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b10a:	f8b9 0000 	ldrh.w	r0, [r9]
 801b10e:	434b      	muls	r3, r1
 801b110:	0a3f      	lsrs	r7, r7, #8
 801b112:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b116:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b11a:	1c59      	adds	r1, r3, #1
 801b11c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801b120:	ea47 070c 	orr.w	r7, r7, ip
 801b124:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801b128:	1202      	asrs	r2, r0, #8
 801b12a:	0c3b      	lsrs	r3, r7, #16
 801b12c:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801b130:	b2c9      	uxtb	r1, r1
 801b132:	fb13 f304 	smulbb	r3, r3, r4
 801b136:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801b13a:	fb02 3201 	mla	r2, r2, r1, r3
 801b13e:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801b142:	10c3      	asrs	r3, r0, #3
 801b144:	b2ff      	uxtb	r7, r7
 801b146:	00c0      	lsls	r0, r0, #3
 801b148:	b292      	uxth	r2, r2
 801b14a:	fb1c fc04 	smulbb	ip, ip, r4
 801b14e:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801b152:	b2c0      	uxtb	r0, r0
 801b154:	fb17 f704 	smulbb	r7, r7, r4
 801b158:	fb03 c301 	mla	r3, r3, r1, ip
 801b15c:	fb00 7001 	mla	r0, r0, r1, r7
 801b160:	f102 0c01 	add.w	ip, r2, #1
 801b164:	b280      	uxth	r0, r0
 801b166:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801b16a:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 801b16e:	1c42      	adds	r2, r0, #1
 801b170:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801b174:	b29b      	uxth	r3, r3
 801b176:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b17a:	ea42 020c 	orr.w	r2, r2, ip
 801b17e:	f103 0c01 	add.w	ip, r3, #1
 801b182:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801b186:	095b      	lsrs	r3, r3, #5
 801b188:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b18c:	431a      	orrs	r2, r3
 801b18e:	f8a9 2000 	strh.w	r2, [r9]
 801b192:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801b194:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b196:	441a      	add	r2, r3
 801b198:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b19a:	9229      	str	r2, [sp, #164]	; 0xa4
 801b19c:	f109 0902 	add.w	r9, r9, #2
 801b1a0:	441d      	add	r5, r3
 801b1a2:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b1a6:	e63d      	b.n	801ae24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801b1a8:	2800      	cmp	r0, #0
 801b1aa:	f43f aedd 	beq.w	801af68 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b1ae:	5c79      	ldrb	r1, [r7, r1]
 801b1b0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b1b4:	910b      	str	r1, [sp, #44]	; 0x2c
 801b1b6:	0e09      	lsrs	r1, r1, #24
 801b1b8:	9114      	str	r1, [sp, #80]	; 0x50
 801b1ba:	e6d5      	b.n	801af68 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b1bc:	b01f      	add	sp, #124	; 0x7c
 801b1be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b1c2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801b1c2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b1c6:	b089      	sub	sp, #36	; 0x24
 801b1c8:	9101      	str	r1, [sp, #4]
 801b1ca:	9801      	ldr	r0, [sp, #4]
 801b1cc:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 801b1d0:	8800      	ldrh	r0, [r0, #0]
 801b1d2:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 801b1d6:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801b1da:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 801b1de:	1206      	asrs	r6, r0, #8
 801b1e0:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 801b1e4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b1e8:	9602      	str	r6, [sp, #8]
 801b1ea:	10c6      	asrs	r6, r0, #3
 801b1ec:	00c0      	lsls	r0, r0, #3
 801b1ee:	b2c0      	uxtb	r0, r0
 801b1f0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b1f4:	9004      	str	r0, [sp, #16]
 801b1f6:	2f00      	cmp	r7, #0
 801b1f8:	fb07 100c 	mla	r0, r7, ip, r1
 801b1fc:	9603      	str	r6, [sp, #12]
 801b1fe:	eb02 0e00 	add.w	lr, r2, r0
 801b202:	f2c0 810a 	blt.w	801b41a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801b206:	45b8      	cmp	r8, r7
 801b208:	f340 8107 	ble.w	801b41a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801b20c:	2900      	cmp	r1, #0
 801b20e:	f2c0 8102 	blt.w	801b416 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801b212:	458c      	cmp	ip, r1
 801b214:	f340 80ff 	ble.w	801b416 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801b218:	5c12      	ldrb	r2, [r2, r0]
 801b21a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801b21e:	1c4a      	adds	r2, r1, #1
 801b220:	f100 80fe 	bmi.w	801b420 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801b224:	4594      	cmp	ip, r2
 801b226:	f340 80fb 	ble.w	801b420 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801b22a:	2d00      	cmp	r5, #0
 801b22c:	f000 80fa 	beq.w	801b424 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801b230:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801b234:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801b238:	3701      	adds	r7, #1
 801b23a:	f100 80f7 	bmi.w	801b42c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801b23e:	45b8      	cmp	r8, r7
 801b240:	f340 80f4 	ble.w	801b42c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801b244:	2c00      	cmp	r4, #0
 801b246:	f000 80f4 	beq.w	801b432 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801b24a:	2900      	cmp	r1, #0
 801b24c:	eb0e 020c 	add.w	r2, lr, ip
 801b250:	f2c0 80ea 	blt.w	801b428 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801b254:	458c      	cmp	ip, r1
 801b256:	f340 80e7 	ble.w	801b428 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801b25a:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801b25e:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801b262:	3101      	adds	r1, #1
 801b264:	f100 80e8 	bmi.w	801b438 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801b268:	458c      	cmp	ip, r1
 801b26a:	f340 80e5 	ble.w	801b438 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801b26e:	2d00      	cmp	r5, #0
 801b270:	f000 80e4 	beq.w	801b43c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801b274:	7852      	ldrb	r2, [r2, #1]
 801b276:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801b27a:	0e0b      	lsrs	r3, r1, #24
 801b27c:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801b280:	9300      	str	r3, [sp, #0]
 801b282:	b2a4      	uxth	r4, r4
 801b284:	b2ab      	uxth	r3, r5
 801b286:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 801b28a:	fb03 f904 	mul.w	r9, r3, r4
 801b28e:	fb0a f505 	mul.w	r5, sl, r5
 801b292:	011b      	lsls	r3, r3, #4
 801b294:	eba3 0e09 	sub.w	lr, r3, r9
 801b298:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 801b29c:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 801b2a0:	0a28      	lsrs	r0, r5, #8
 801b2a2:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b2a6:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 801b2aa:	4405      	add	r5, r0
 801b2ac:	0a2d      	lsrs	r5, r5, #8
 801b2ae:	fb0a f303 	mul.w	r3, sl, r3
 801b2b2:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 801b2b6:	9005      	str	r0, [sp, #20]
 801b2b8:	f503 7080 	add.w	r0, r3, #256	; 0x100
 801b2bc:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801b2c0:	0a1b      	lsrs	r3, r3, #8
 801b2c2:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801b2c6:	9306      	str	r3, [sp, #24]
 801b2c8:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 801b2cc:	fb0b f303 	mul.w	r3, fp, r3
 801b2d0:	0a1d      	lsrs	r5, r3, #8
 801b2d2:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b2d6:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801b2da:	fb0b f606 	mul.w	r6, fp, r6
 801b2de:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 801b2e2:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 801b2e6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b2ea:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801b2ee:	fb08 f707 	mul.w	r7, r8, r7
 801b2f2:	441d      	add	r5, r3
 801b2f4:	f506 7380 	add.w	r3, r6, #256	; 0x100
 801b2f8:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801b2fc:	f507 7380 	add.w	r3, r7, #256	; 0x100
 801b300:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801b304:	fb08 fc0c 	mul.w	ip, r8, ip
 801b308:	0a1b      	lsrs	r3, r3, #8
 801b30a:	9307      	str	r3, [sp, #28]
 801b30c:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801b310:	0e0b      	lsrs	r3, r1, #24
 801b312:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 801b316:	435f      	muls	r7, r3
 801b318:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801b31c:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b320:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801b324:	4460      	add	r0, ip
 801b326:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b32a:	b2a4      	uxth	r4, r4
 801b32c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b330:	0a2d      	lsrs	r5, r5, #8
 801b332:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801b336:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b33a:	fa1f fe8e 	uxth.w	lr, lr
 801b33e:	4359      	muls	r1, r3
 801b340:	1b12      	subs	r2, r2, r4
 801b342:	9b05      	ldr	r3, [sp, #20]
 801b344:	44bc      	add	ip, r7
 801b346:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b34a:	b292      	uxth	r2, r2
 801b34c:	fb05 f50e 	mul.w	r5, r5, lr
 801b350:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b354:	fb03 5502 	mla	r5, r3, r2, r5
 801b358:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b35c:	9b06      	ldr	r3, [sp, #24]
 801b35e:	f501 7780 	add.w	r7, r1, #256	; 0x100
 801b362:	0a36      	lsrs	r6, r6, #8
 801b364:	0a00      	lsrs	r0, r0, #8
 801b366:	fb0c 5509 	mla	r5, ip, r9, r5
 801b36a:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b36e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801b372:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b376:	fb00 5504 	mla	r5, r0, r4, r5
 801b37a:	fb0e f606 	mul.w	r6, lr, r6
 801b37e:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801b382:	0a09      	lsrs	r1, r1, #8
 801b384:	9b07      	ldr	r3, [sp, #28]
 801b386:	fb02 6000 	mla	r0, r2, r0, r6
 801b38a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801b38e:	fb09 0001 	mla	r0, r9, r1, r0
 801b392:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b396:	fb0e fe0b 	mul.w	lr, lr, fp
 801b39a:	fb04 0003 	mla	r0, r4, r3, r0
 801b39e:	fb02 e20a 	mla	r2, r2, sl, lr
 801b3a2:	9b00      	ldr	r3, [sp, #0]
 801b3a4:	fb04 2408 	mla	r4, r4, r8, r2
 801b3a8:	fb09 4903 	mla	r9, r9, r3, r4
 801b3ac:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801b3b0:	9b02      	ldr	r3, [sp, #8]
 801b3b2:	9a04      	ldr	r2, [sp, #16]
 801b3b4:	fa5f f989 	uxtb.w	r9, r9
 801b3b8:	fb03 f109 	mul.w	r1, r3, r9
 801b3bc:	9b03      	ldr	r3, [sp, #12]
 801b3be:	0a2d      	lsrs	r5, r5, #8
 801b3c0:	0a00      	lsrs	r0, r0, #8
 801b3c2:	fb03 f309 	mul.w	r3, r3, r9
 801b3c6:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801b3ca:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b3ce:	4305      	orrs	r5, r0
 801b3d0:	fb02 f909 	mul.w	r9, r2, r9
 801b3d4:	1c58      	adds	r0, r3, #1
 801b3d6:	1c4a      	adds	r2, r1, #1
 801b3d8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801b3dc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b3e0:	0a2b      	lsrs	r3, r5, #8
 801b3e2:	0c2a      	lsrs	r2, r5, #16
 801b3e4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801b3e8:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801b3ec:	00db      	lsls	r3, r3, #3
 801b3ee:	0212      	lsls	r2, r2, #8
 801b3f0:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801b3f4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b3f8:	4313      	orrs	r3, r2
 801b3fa:	f109 0201 	add.w	r2, r9, #1
 801b3fe:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801b402:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801b406:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b40a:	431d      	orrs	r5, r3
 801b40c:	9b01      	ldr	r3, [sp, #4]
 801b40e:	801d      	strh	r5, [r3, #0]
 801b410:	b009      	add	sp, #36	; 0x24
 801b412:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b416:	2000      	movs	r0, #0
 801b418:	e701      	b.n	801b21e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801b41a:	2600      	movs	r6, #0
 801b41c:	4630      	mov	r0, r6
 801b41e:	e70b      	b.n	801b238 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b420:	2600      	movs	r6, #0
 801b422:	e709      	b.n	801b238 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b424:	462e      	mov	r6, r5
 801b426:	e707      	b.n	801b238 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b428:	2700      	movs	r7, #0
 801b42a:	e71a      	b.n	801b262 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801b42c:	2100      	movs	r1, #0
 801b42e:	460f      	mov	r7, r1
 801b430:	e723      	b.n	801b27a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b432:	4621      	mov	r1, r4
 801b434:	4627      	mov	r7, r4
 801b436:	e720      	b.n	801b27a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b438:	2100      	movs	r1, #0
 801b43a:	e71e      	b.n	801b27a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b43c:	4629      	mov	r1, r5
 801b43e:	e71c      	b.n	801b27a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801b440 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b440:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b444:	b09b      	sub	sp, #108	; 0x6c
 801b446:	9218      	str	r2, [sp, #96]	; 0x60
 801b448:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b44a:	9116      	str	r1, [sp, #88]	; 0x58
 801b44c:	9307      	str	r3, [sp, #28]
 801b44e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801b452:	9019      	str	r0, [sp, #100]	; 0x64
 801b454:	6850      	ldr	r0, [r2, #4]
 801b456:	6812      	ldr	r2, [r2, #0]
 801b458:	9d26      	ldr	r5, [sp, #152]	; 0x98
 801b45a:	fb00 1303 	mla	r3, r0, r3, r1
 801b45e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b462:	930a      	str	r3, [sp, #40]	; 0x28
 801b464:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b466:	681b      	ldr	r3, [r3, #0]
 801b468:	930f      	str	r3, [sp, #60]	; 0x3c
 801b46a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b46c:	685e      	ldr	r6, [r3, #4]
 801b46e:	3604      	adds	r6, #4
 801b470:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b472:	2b00      	cmp	r3, #0
 801b474:	dc03      	bgt.n	801b47e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801b476:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b478:	2b00      	cmp	r3, #0
 801b47a:	f340 8373 	ble.w	801bb64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801b47e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b480:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b484:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b488:	1e48      	subs	r0, r1, #1
 801b48a:	1e57      	subs	r7, r2, #1
 801b48c:	9b07      	ldr	r3, [sp, #28]
 801b48e:	2b00      	cmp	r3, #0
 801b490:	f340 8190 	ble.w	801b7b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801b494:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801b496:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801b49a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801b49e:	d406      	bmi.n	801b4ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b4a0:	4584      	cmp	ip, r0
 801b4a2:	da04      	bge.n	801b4ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b4a4:	2b00      	cmp	r3, #0
 801b4a6:	db02      	blt.n	801b4ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b4a8:	42bb      	cmp	r3, r7
 801b4aa:	f2c0 8184 	blt.w	801b7b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801b4ae:	f11c 0c01 	adds.w	ip, ip, #1
 801b4b2:	f100 8172 	bmi.w	801b79a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b4b6:	4561      	cmp	r1, ip
 801b4b8:	f2c0 816f 	blt.w	801b79a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b4bc:	3301      	adds	r3, #1
 801b4be:	f100 816c 	bmi.w	801b79a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b4c2:	429a      	cmp	r2, r3
 801b4c4:	f2c0 8169 	blt.w	801b79a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b4c8:	9b07      	ldr	r3, [sp, #28]
 801b4ca:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801b4cc:	9317      	str	r3, [sp, #92]	; 0x5c
 801b4ce:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b4d0:	2b00      	cmp	r3, #0
 801b4d2:	f340 818e 	ble.w	801b7f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 801b4d6:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801b4d8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b4dc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b4de:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801b4e2:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801b4e4:	141b      	asrs	r3, r3, #16
 801b4e6:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801b4ea:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b4ee:	f100 81d1 	bmi.w	801b894 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b4f2:	f101 38ff 	add.w	r8, r1, #4294967295
 801b4f6:	4543      	cmp	r3, r8
 801b4f8:	f280 81cc 	bge.w	801b894 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b4fc:	f1bc 0f00 	cmp.w	ip, #0
 801b500:	f2c0 81c8 	blt.w	801b894 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b504:	f10e 38ff 	add.w	r8, lr, #4294967295
 801b508:	45c4      	cmp	ip, r8
 801b50a:	f280 81c3 	bge.w	801b894 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b50e:	b209      	sxth	r1, r1
 801b510:	fb0c 3301 	mla	r3, ip, r1, r3
 801b514:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b516:	eb04 0803 	add.w	r8, r4, r3
 801b51a:	5ce3      	ldrb	r3, [r4, r3]
 801b51c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b520:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801b524:	2a00      	cmp	r2, #0
 801b526:	f000 81aa 	beq.w	801b87e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801b52a:	f898 c001 	ldrb.w	ip, [r8, #1]
 801b52e:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801b532:	940b      	str	r4, [sp, #44]	; 0x2c
 801b534:	0e24      	lsrs	r4, r4, #24
 801b536:	9412      	str	r4, [sp, #72]	; 0x48
 801b538:	b178      	cbz	r0, 801b55a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801b53a:	eb08 0c01 	add.w	ip, r8, r1
 801b53e:	f818 1001 	ldrb.w	r1, [r8, r1]
 801b542:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b546:	9108      	str	r1, [sp, #32]
 801b548:	0e09      	lsrs	r1, r1, #24
 801b54a:	9110      	str	r1, [sp, #64]	; 0x40
 801b54c:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801b550:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b554:	910c      	str	r1, [sp, #48]	; 0x30
 801b556:	0e09      	lsrs	r1, r1, #24
 801b558:	9113      	str	r1, [sp, #76]	; 0x4c
 801b55a:	b292      	uxth	r2, r2
 801b55c:	b280      	uxth	r0, r0
 801b55e:	fb02 f900 	mul.w	r9, r2, r0
 801b562:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801b566:	0112      	lsls	r2, r2, #4
 801b568:	eba2 0809 	sub.w	r8, r2, r9
 801b56c:	b280      	uxth	r0, r0
 801b56e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801b572:	9912      	ldr	r1, [sp, #72]	; 0x48
 801b574:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b576:	fa1f f888 	uxth.w	r8, r8
 801b57a:	1a12      	subs	r2, r2, r0
 801b57c:	b292      	uxth	r2, r2
 801b57e:	fb08 f101 	mul.w	r1, r8, r1
 801b582:	fb02 110e 	mla	r1, r2, lr, r1
 801b586:	fb00 1104 	mla	r1, r0, r4, r1
 801b58a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b58c:	fb09 1104 	mla	r1, r9, r4, r1
 801b590:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801b594:	2900      	cmp	r1, #0
 801b596:	f000 80f5 	beq.w	801b784 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b59a:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801b59e:	d01b      	beq.n	801b5d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b5a0:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801b5a4:	fb0e fa0a 	mul.w	sl, lr, sl
 801b5a8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b5ac:	fb0e fe03 	mul.w	lr, lr, r3
 801b5b0:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b5b4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b5b8:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b5bc:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801b5c0:	4453      	add	r3, sl
 801b5c2:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b5c6:	0a1b      	lsrs	r3, r3, #8
 801b5c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b5cc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b5d0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b5d4:	ea43 030c 	orr.w	r3, r3, ip
 801b5d8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b5da:	2cff      	cmp	r4, #255	; 0xff
 801b5dc:	d021      	beq.n	801b622 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801b5de:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b5e0:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b5e4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b5e6:	fb04 fb0b 	mul.w	fp, r4, fp
 801b5ea:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b5ec:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b5f0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b5f2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b5f6:	fb04 fa0a 	mul.w	sl, r4, sl
 801b5fa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b5fe:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b602:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b606:	44de      	add	lr, fp
 801b608:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b60c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b610:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b614:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b618:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b61c:	ea4e 040a 	orr.w	r4, lr, sl
 801b620:	940b      	str	r4, [sp, #44]	; 0x2c
 801b622:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b624:	2cff      	cmp	r4, #255	; 0xff
 801b626:	d021      	beq.n	801b66c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801b628:	9c08      	ldr	r4, [sp, #32]
 801b62a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b62e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b630:	fb04 fb0b 	mul.w	fp, r4, fp
 801b634:	9c08      	ldr	r4, [sp, #32]
 801b636:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b63a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b63c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b640:	fb04 fa0a 	mul.w	sl, r4, sl
 801b644:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b648:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b64c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b650:	44de      	add	lr, fp
 801b652:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b656:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b65a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b65e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b662:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b666:	ea4e 040a 	orr.w	r4, lr, sl
 801b66a:	9408      	str	r4, [sp, #32]
 801b66c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b66e:	2cff      	cmp	r4, #255	; 0xff
 801b670:	d021      	beq.n	801b6b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801b672:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b674:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b678:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b67a:	fb04 fb0b 	mul.w	fp, r4, fp
 801b67e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b680:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b684:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b686:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b68a:	fb04 fa0a 	mul.w	sl, r4, sl
 801b68e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b692:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b696:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b69a:	44de      	add	lr, fp
 801b69c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b6a0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b6a4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b6a8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b6ac:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b6b0:	ea4e 040a 	orr.w	r4, lr, sl
 801b6b4:	940c      	str	r4, [sp, #48]	; 0x30
 801b6b6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b6b8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b6bc:	9c08      	ldr	r4, [sp, #32]
 801b6be:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801b6c2:	fb08 fc0c 	mul.w	ip, r8, ip
 801b6c6:	fb02 cc0e 	mla	ip, r2, lr, ip
 801b6ca:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801b6ce:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b6d0:	fb00 cc0e 	mla	ip, r0, lr, ip
 801b6d4:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801b6d8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b6da:	fb09 cc0e 	mla	ip, r9, lr, ip
 801b6de:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801b6e2:	fb08 f80e 	mul.w	r8, r8, lr
 801b6e6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b6ea:	fb02 8303 	mla	r3, r2, r3, r8
 801b6ee:	9a08      	ldr	r2, [sp, #32]
 801b6f0:	f8b7 8000 	ldrh.w	r8, [r7]
 801b6f4:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801b6f8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801b6fa:	fb00 330a 	mla	r3, r0, sl, r3
 801b6fe:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801b702:	fb09 3900 	mla	r9, r9, r0, r3
 801b706:	43c9      	mvns	r1, r1
 801b708:	ea4f 2228 	mov.w	r2, r8, asr #8
 801b70c:	fa5f fe81 	uxtb.w	lr, r1
 801b710:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b714:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b718:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801b71c:	fb02 f20e 	mul.w	r2, r2, lr
 801b720:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b724:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801b728:	ea4c 0c09 	orr.w	ip, ip, r9
 801b72c:	1c53      	adds	r3, r2, #1
 801b72e:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801b732:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801b736:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801b73a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b73e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b742:	4a63      	ldr	r2, [pc, #396]	; (801b8d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801b744:	fb00 f00e 	mul.w	r0, r0, lr
 801b748:	b2db      	uxtb	r3, r3
 801b74a:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801b74e:	1c43      	adds	r3, r0, #1
 801b750:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801b754:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801b758:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801b75c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801b760:	b2c9      	uxtb	r1, r1
 801b762:	00db      	lsls	r3, r3, #3
 801b764:	fb01 f10e 	mul.w	r1, r1, lr
 801b768:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b76c:	4313      	orrs	r3, r2
 801b76e:	1c4a      	adds	r2, r1, #1
 801b770:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b774:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801b778:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801b77c:	ea4c 0c03 	orr.w	ip, ip, r3
 801b780:	f8a7 c000 	strh.w	ip, [r7]
 801b784:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b786:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801b788:	441a      	add	r2, r3
 801b78a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b78c:	9225      	str	r2, [sp, #148]	; 0x94
 801b78e:	441d      	add	r5, r3
 801b790:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b792:	3b01      	subs	r3, #1
 801b794:	3702      	adds	r7, #2
 801b796:	9317      	str	r3, [sp, #92]	; 0x5c
 801b798:	e699      	b.n	801b4ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801b79a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b79c:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801b79e:	441c      	add	r4, r3
 801b7a0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b7a2:	9425      	str	r4, [sp, #148]	; 0x94
 801b7a4:	441d      	add	r5, r3
 801b7a6:	9b07      	ldr	r3, [sp, #28]
 801b7a8:	3b01      	subs	r3, #1
 801b7aa:	9307      	str	r3, [sp, #28]
 801b7ac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b7ae:	3302      	adds	r3, #2
 801b7b0:	930a      	str	r3, [sp, #40]	; 0x28
 801b7b2:	e66b      	b.n	801b48c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801b7b4:	d024      	beq.n	801b800 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801b7b6:	9b07      	ldr	r3, [sp, #28]
 801b7b8:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801b7ba:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801b7bc:	3b01      	subs	r3, #1
 801b7be:	fb00 4003 	mla	r0, r0, r3, r4
 801b7c2:	1400      	asrs	r0, r0, #16
 801b7c4:	f53f ae80 	bmi.w	801b4c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801b7c8:	3901      	subs	r1, #1
 801b7ca:	4288      	cmp	r0, r1
 801b7cc:	f6bf ae7c 	bge.w	801b4c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801b7d0:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801b7d2:	fb01 5303 	mla	r3, r1, r3, r5
 801b7d6:	141b      	asrs	r3, r3, #16
 801b7d8:	f53f ae76 	bmi.w	801b4c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801b7dc:	3a01      	subs	r2, #1
 801b7de:	4293      	cmp	r3, r2
 801b7e0:	f6bf ae72 	bge.w	801b4c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801b7e4:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801b7e8:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801b7ec:	f1bb 0f00 	cmp.w	fp, #0
 801b7f0:	dc70      	bgt.n	801b8d4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801b7f2:	9b07      	ldr	r3, [sp, #28]
 801b7f4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801b7f8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b7fa:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801b7fe:	930a      	str	r3, [sp, #40]	; 0x28
 801b800:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b802:	2b00      	cmp	r3, #0
 801b804:	f340 81ae 	ble.w	801bb64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801b808:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b80c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b810:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b814:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b816:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b81a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b81e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b822:	eef0 6a62 	vmov.f32	s13, s5
 801b826:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b82a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b82e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b832:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 801b836:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b83a:	eef0 6a43 	vmov.f32	s13, s6
 801b83e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b842:	ee12 2a90 	vmov	r2, s5
 801b846:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b84a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b84e:	ee13 2a10 	vmov	r2, s6
 801b852:	9327      	str	r3, [sp, #156]	; 0x9c
 801b854:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b856:	fb92 f3f3 	sdiv	r3, r2, r3
 801b85a:	9328      	str	r3, [sp, #160]	; 0xa0
 801b85c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b85e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801b860:	3b01      	subs	r3, #1
 801b862:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b866:	9316      	str	r3, [sp, #88]	; 0x58
 801b868:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b86a:	bf08      	it	eq
 801b86c:	4613      	moveq	r3, r2
 801b86e:	ee16 5a90 	vmov	r5, s13
 801b872:	9307      	str	r3, [sp, #28]
 801b874:	eeb0 3a67 	vmov.f32	s6, s15
 801b878:	eef0 2a47 	vmov.f32	s5, s14
 801b87c:	e5f8      	b.n	801b470 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801b87e:	2800      	cmp	r0, #0
 801b880:	f43f ae6b 	beq.w	801b55a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801b884:	f818 1001 	ldrb.w	r1, [r8, r1]
 801b888:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b88c:	9108      	str	r1, [sp, #32]
 801b88e:	0e09      	lsrs	r1, r1, #24
 801b890:	9110      	str	r1, [sp, #64]	; 0x40
 801b892:	e662      	b.n	801b55a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801b894:	f113 0801 	adds.w	r8, r3, #1
 801b898:	f53f af74 	bmi.w	801b784 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b89c:	4541      	cmp	r1, r8
 801b89e:	f6ff af71 	blt.w	801b784 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b8a2:	f11c 0801 	adds.w	r8, ip, #1
 801b8a6:	f53f af6d 	bmi.w	801b784 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b8aa:	45c6      	cmp	lr, r8
 801b8ac:	f6ff af6a 	blt.w	801b784 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b8b0:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801b8b4:	b209      	sxth	r1, r1
 801b8b6:	fa0f f38e 	sxth.w	r3, lr
 801b8ba:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801b8be:	9301      	str	r3, [sp, #4]
 801b8c0:	9100      	str	r1, [sp, #0]
 801b8c2:	4633      	mov	r3, r6
 801b8c4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b8c6:	9819      	ldr	r0, [sp, #100]	; 0x64
 801b8c8:	4639      	mov	r1, r7
 801b8ca:	f7ff fc7a 	bl	801b1c2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801b8ce:	e759      	b.n	801b784 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b8d0:	fffff800 	.word	0xfffff800
 801b8d4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801b8d6:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801b8d8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b8dc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b8de:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b8e2:	1427      	asrs	r7, r4, #16
 801b8e4:	142b      	asrs	r3, r5, #16
 801b8e6:	fb01 7303 	mla	r3, r1, r3, r7
 801b8ea:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b8ec:	18e7      	adds	r7, r4, r3
 801b8ee:	5ce3      	ldrb	r3, [r4, r3]
 801b8f0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b8f4:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b8f8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801b8fc:	2a00      	cmp	r2, #0
 801b8fe:	f000 8127 	beq.w	801bb50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801b902:	f897 e001 	ldrb.w	lr, [r7, #1]
 801b906:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801b90a:	940d      	str	r4, [sp, #52]	; 0x34
 801b90c:	0e24      	lsrs	r4, r4, #24
 801b90e:	9414      	str	r4, [sp, #80]	; 0x50
 801b910:	b170      	cbz	r0, 801b930 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801b912:	eb07 0e01 	add.w	lr, r7, r1
 801b916:	5c79      	ldrb	r1, [r7, r1]
 801b918:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b91c:	9109      	str	r1, [sp, #36]	; 0x24
 801b91e:	0e09      	lsrs	r1, r1, #24
 801b920:	9111      	str	r1, [sp, #68]	; 0x44
 801b922:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801b926:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b92a:	910e      	str	r1, [sp, #56]	; 0x38
 801b92c:	0e09      	lsrs	r1, r1, #24
 801b92e:	9115      	str	r1, [sp, #84]	; 0x54
 801b930:	b292      	uxth	r2, r2
 801b932:	b280      	uxth	r0, r0
 801b934:	fb02 f800 	mul.w	r8, r2, r0
 801b938:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801b93c:	0112      	lsls	r2, r2, #4
 801b93e:	eba2 0e08 	sub.w	lr, r2, r8
 801b942:	b280      	uxth	r0, r0
 801b944:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801b948:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b94a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b94c:	fa1f fe8e 	uxth.w	lr, lr
 801b950:	1a09      	subs	r1, r1, r0
 801b952:	b289      	uxth	r1, r1
 801b954:	fb0e f202 	mul.w	r2, lr, r2
 801b958:	fb01 220c 	mla	r2, r1, ip, r2
 801b95c:	fb00 2204 	mla	r2, r0, r4, r2
 801b960:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801b962:	fb08 2204 	mla	r2, r8, r4, r2
 801b966:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801b96a:	2a00      	cmp	r2, #0
 801b96c:	f000 80e5 	beq.w	801bb3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801b970:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801b974:	d019      	beq.n	801b9aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801b976:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801b97a:	fb0c fa0a 	mul.w	sl, ip, sl
 801b97e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b982:	fb0c fc03 	mul.w	ip, ip, r3
 801b986:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b98a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b98e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b992:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801b996:	4453      	add	r3, sl
 801b998:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801b99c:	0a1b      	lsrs	r3, r3, #8
 801b99e:	0a3f      	lsrs	r7, r7, #8
 801b9a0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b9a4:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801b9a8:	433b      	orrs	r3, r7
 801b9aa:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b9ac:	2cff      	cmp	r4, #255	; 0xff
 801b9ae:	d020      	beq.n	801b9f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801b9b0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b9b2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b9b6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b9b8:	4367      	muls	r7, r4
 801b9ba:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b9bc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b9c0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b9c2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b9c6:	fb04 fa0a 	mul.w	sl, r4, sl
 801b9ca:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b9ce:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b9d2:	44bc      	add	ip, r7
 801b9d4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b9d8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b9dc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b9e0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b9e4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b9e8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b9ec:	ea4c 040a 	orr.w	r4, ip, sl
 801b9f0:	940d      	str	r4, [sp, #52]	; 0x34
 801b9f2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b9f4:	2cff      	cmp	r4, #255	; 0xff
 801b9f6:	d020      	beq.n	801ba3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801b9f8:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801b9fa:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b9fe:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801ba00:	4367      	muls	r7, r4
 801ba02:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801ba04:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ba08:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801ba0a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ba0e:	fb04 fa0a 	mul.w	sl, r4, sl
 801ba12:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ba16:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ba1a:	44bc      	add	ip, r7
 801ba1c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ba20:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ba24:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ba28:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ba2c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ba30:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ba34:	ea4c 040a 	orr.w	r4, ip, sl
 801ba38:	9409      	str	r4, [sp, #36]	; 0x24
 801ba3a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ba3c:	2cff      	cmp	r4, #255	; 0xff
 801ba3e:	d020      	beq.n	801ba82 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801ba40:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ba42:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801ba46:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ba48:	4367      	muls	r7, r4
 801ba4a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ba4c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ba50:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ba52:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ba56:	fb04 fa0a 	mul.w	sl, r4, sl
 801ba5a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ba5e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ba62:	44bc      	add	ip, r7
 801ba64:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ba68:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ba6c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ba70:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ba74:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ba78:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ba7c:	ea4c 040a 	orr.w	r4, ip, sl
 801ba80:	940e      	str	r4, [sp, #56]	; 0x38
 801ba82:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801ba84:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801ba88:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801ba8a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801ba8e:	fb0e f707 	mul.w	r7, lr, r7
 801ba92:	fb01 770c 	mla	r7, r1, ip, r7
 801ba96:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801ba9a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ba9c:	fb00 770c 	mla	r7, r0, ip, r7
 801baa0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801baa4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801baa6:	fb08 770c 	mla	r7, r8, ip, r7
 801baaa:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801baae:	fb0e fe0c 	mul.w	lr, lr, ip
 801bab2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801bab6:	fb01 e303 	mla	r3, r1, r3, lr
 801baba:	9909      	ldr	r1, [sp, #36]	; 0x24
 801babc:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801bac0:	990e      	ldr	r1, [sp, #56]	; 0x38
 801bac2:	fb00 330a 	mla	r3, r0, sl, r3
 801bac6:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801baca:	fb08 3c0c 	mla	ip, r8, ip, r3
 801bace:	f8b9 3000 	ldrh.w	r3, [r9]
 801bad2:	43d2      	mvns	r2, r2
 801bad4:	1218      	asrs	r0, r3, #8
 801bad6:	b2d2      	uxtb	r2, r2
 801bad8:	10d9      	asrs	r1, r3, #3
 801bada:	0a3f      	lsrs	r7, r7, #8
 801badc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bae0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801bae4:	00db      	lsls	r3, r3, #3
 801bae6:	4350      	muls	r0, r2
 801bae8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801baec:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801baf0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801baf4:	b2db      	uxtb	r3, r3
 801baf6:	ea47 070c 	orr.w	r7, r7, ip
 801bafa:	4351      	muls	r1, r2
 801bafc:	4353      	muls	r3, r2
 801bafe:	1c42      	adds	r2, r0, #1
 801bb00:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801bb04:	0c3a      	lsrs	r2, r7, #16
 801bb06:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801bb0a:	4a18      	ldr	r2, [pc, #96]	; (801bb6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801bb0c:	b2c0      	uxtb	r0, r0
 801bb0e:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801bb12:	1c4a      	adds	r2, r1, #1
 801bb14:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bb18:	0a3a      	lsrs	r2, r7, #8
 801bb1a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bb1e:	00c9      	lsls	r1, r1, #3
 801bb20:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801bb24:	4301      	orrs	r1, r0
 801bb26:	1c58      	adds	r0, r3, #1
 801bb28:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801bb2c:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801bb30:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801bb34:	4308      	orrs	r0, r1
 801bb36:	f8a9 0000 	strh.w	r0, [r9]
 801bb3a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801bb3c:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801bb3e:	441a      	add	r2, r3
 801bb40:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bb42:	9225      	str	r2, [sp, #148]	; 0x94
 801bb44:	f109 0902 	add.w	r9, r9, #2
 801bb48:	441d      	add	r5, r3
 801bb4a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801bb4e:	e64d      	b.n	801b7ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 801bb50:	2800      	cmp	r0, #0
 801bb52:	f43f aeed 	beq.w	801b930 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801bb56:	5c79      	ldrb	r1, [r7, r1]
 801bb58:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bb5c:	9109      	str	r1, [sp, #36]	; 0x24
 801bb5e:	0e09      	lsrs	r1, r1, #24
 801bb60:	9111      	str	r1, [sp, #68]	; 0x44
 801bb62:	e6e5      	b.n	801b930 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801bb64:	b01b      	add	sp, #108	; 0x6c
 801bb66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bb6a:	bf00      	nop
 801bb6c:	fffff800 	.word	0xfffff800

0801bb70 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801bb70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bb74:	b085      	sub	sp, #20
 801bb76:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801bb7a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801bb7e:	9103      	str	r1, [sp, #12]
 801bb80:	fb00 7406 	mla	r4, r0, r6, r7
 801bb84:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801bb88:	2800      	cmp	r0, #0
 801bb8a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801bb8e:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801bb92:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801bb96:	9501      	str	r5, [sp, #4]
 801bb98:	eb03 0904 	add.w	r9, r3, r4
 801bb9c:	f2c0 8150 	blt.w	801be40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801bba0:	4583      	cmp	fp, r0
 801bba2:	f340 814d 	ble.w	801be40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801bba6:	2f00      	cmp	r7, #0
 801bba8:	f2c0 8146 	blt.w	801be38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801bbac:	42be      	cmp	r6, r7
 801bbae:	f340 8143 	ble.w	801be38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801bbb2:	f813 c004 	ldrb.w	ip, [r3, r4]
 801bbb6:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801bbba:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801bbbe:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801bbc2:	4355      	muls	r5, r2
 801bbc4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bbc8:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801bbcc:	fb0c f203 	mul.w	r2, ip, r3
 801bbd0:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801bbd4:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801bbd8:	441d      	add	r5, r3
 801bbda:	f102 0320 	add.w	r3, r2, #32
 801bbde:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801bbe2:	0a1b      	lsrs	r3, r3, #8
 801bbe4:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801bbe8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bbec:	431c      	orrs	r4, r3
 801bbee:	1c7b      	adds	r3, r7, #1
 801bbf0:	f100 812b 	bmi.w	801be4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801bbf4:	429e      	cmp	r6, r3
 801bbf6:	f340 8128 	ble.w	801be4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801bbfa:	2900      	cmp	r1, #0
 801bbfc:	f000 8128 	beq.w	801be50 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801bc00:	9a01      	ldr	r2, [sp, #4]
 801bc02:	f899 3001 	ldrb.w	r3, [r9, #1]
 801bc06:	8855      	ldrh	r5, [r2, #2]
 801bc08:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801bc0c:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801bc10:	fb08 f802 	mul.w	r8, r8, r2
 801bc14:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bc18:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801bc1c:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801bc20:	435d      	muls	r5, r3
 801bc22:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801bc26:	44d0      	add	r8, sl
 801bc28:	f105 0a20 	add.w	sl, r5, #32
 801bc2c:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801bc30:	0a2d      	lsrs	r5, r5, #8
 801bc32:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801bc36:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bc3a:	432a      	orrs	r2, r5
 801bc3c:	3001      	adds	r0, #1
 801bc3e:	f100 810d 	bmi.w	801be5c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801bc42:	4583      	cmp	fp, r0
 801bc44:	f340 810a 	ble.w	801be5c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801bc48:	f1be 0f00 	cmp.w	lr, #0
 801bc4c:	f000 810b 	beq.w	801be66 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801bc50:	2f00      	cmp	r7, #0
 801bc52:	f2c0 8100 	blt.w	801be56 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801bc56:	42be      	cmp	r6, r7
 801bc58:	f340 80fd 	ble.w	801be56 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801bc5c:	9801      	ldr	r0, [sp, #4]
 801bc5e:	f819 5006 	ldrb.w	r5, [r9, r6]
 801bc62:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801bc66:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801bc6a:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801bc6e:	fb0a fa00 	mul.w	sl, sl, r0
 801bc72:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801bc76:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801bc7a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801bc7e:	fb05 f808 	mul.w	r8, r5, r8
 801bc82:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801bc86:	4482      	add	sl, r0
 801bc88:	f108 0020 	add.w	r0, r8, #32
 801bc8c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801bc90:	0a00      	lsrs	r0, r0, #8
 801bc92:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801bc96:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bc9a:	ea4b 0b00 	orr.w	fp, fp, r0
 801bc9e:	3701      	adds	r7, #1
 801bca0:	f100 80e6 	bmi.w	801be70 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801bca4:	42be      	cmp	r6, r7
 801bca6:	f340 80e3 	ble.w	801be70 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801bcaa:	2900      	cmp	r1, #0
 801bcac:	f000 80e3 	beq.w	801be76 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801bcb0:	3601      	adds	r6, #1
 801bcb2:	9801      	ldr	r0, [sp, #4]
 801bcb4:	f819 7006 	ldrb.w	r7, [r9, r6]
 801bcb8:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801bcbc:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801bcc0:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801bcc4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bcc8:	fb09 f906 	mul.w	r9, r9, r6
 801bccc:	fb07 f800 	mul.w	r8, r7, r0
 801bcd0:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801bcd4:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801bcd8:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801bcdc:	44d1      	add	r9, sl
 801bcde:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801bce2:	f108 0020 	add.w	r0, r8, #32
 801bce6:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801bcea:	0a00      	lsrs	r0, r0, #8
 801bcec:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bcf0:	4330      	orrs	r0, r6
 801bcf2:	b28e      	uxth	r6, r1
 801bcf4:	fa1f f98e 	uxth.w	r9, lr
 801bcf8:	fb06 f809 	mul.w	r8, r6, r9
 801bcfc:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801bd00:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801bd04:	0136      	lsls	r6, r6, #4
 801bd06:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bd0a:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801bd0e:	9601      	str	r6, [sp, #4]
 801bd10:	ea4a 0404 	orr.w	r4, sl, r4
 801bd14:	fa1f f689 	uxth.w	r6, r9
 801bd18:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801bd1c:	fb11 f90e 	smulbb	r9, r1, lr
 801bd20:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801bd24:	9602      	str	r6, [sp, #8]
 801bd26:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bd2a:	4626      	mov	r6, r4
 801bd2c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801bd30:	f1ce 0410 	rsb	r4, lr, #16
 801bd34:	1a64      	subs	r4, r4, r1
 801bd36:	ea4a 0202 	orr.w	r2, sl, r2
 801bd3a:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801bd3e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801bd42:	434a      	muls	r2, r1
 801bd44:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801bd48:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bd4c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801bd50:	fb04 2406 	mla	r4, r4, r6, r2
 801bd54:	ea4a 0000 	orr.w	r0, sl, r0
 801bd58:	fb09 4200 	mla	r2, r9, r0, r4
 801bd5c:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801bd60:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801bd64:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801bd68:	ea44 0b0b 	orr.w	fp, r4, fp
 801bd6c:	9c01      	ldr	r4, [sp, #4]
 801bd6e:	9e02      	ldr	r6, [sp, #8]
 801bd70:	9903      	ldr	r1, [sp, #12]
 801bd72:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 801bd76:	1ba4      	subs	r4, r4, r6
 801bd78:	9e01      	ldr	r6, [sp, #4]
 801bd7a:	8808      	ldrh	r0, [r1, #0]
 801bd7c:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 801bd80:	eba6 0608 	sub.w	r6, r6, r8
 801bd84:	b2b6      	uxth	r6, r6
 801bd86:	b2a4      	uxth	r4, r4
 801bd88:	4373      	muls	r3, r6
 801bd8a:	fb0c 3304 	mla	r3, ip, r4, r3
 801bd8e:	9c02      	ldr	r4, [sp, #8]
 801bd90:	fb04 3505 	mla	r5, r4, r5, r3
 801bd94:	fb08 5707 	mla	r7, r8, r7, r5
 801bd98:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801bd9c:	b289      	uxth	r1, r1
 801bd9e:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801bda2:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801bda6:	434f      	muls	r7, r1
 801bda8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801bdac:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801bdb0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bdb4:	1c7b      	adds	r3, r7, #1
 801bdb6:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801bdba:	ea42 0e0e 	orr.w	lr, r2, lr
 801bdbe:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801bdc2:	fa1f f28e 	uxth.w	r2, lr
 801bdc6:	1203      	asrs	r3, r0, #8
 801bdc8:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801bdcc:	b2ff      	uxtb	r7, r7
 801bdce:	1215      	asrs	r5, r2, #8
 801bdd0:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801bdd4:	fb13 f307 	smulbb	r3, r3, r7
 801bdd8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801bddc:	fb05 3501 	mla	r5, r5, r1, r3
 801bde0:	10c3      	asrs	r3, r0, #3
 801bde2:	10d4      	asrs	r4, r2, #3
 801bde4:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801bde8:	fb13 f307 	smulbb	r3, r3, r7
 801bdec:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801bdf0:	fb04 3401 	mla	r4, r4, r1, r3
 801bdf4:	00c3      	lsls	r3, r0, #3
 801bdf6:	00d2      	lsls	r2, r2, #3
 801bdf8:	b2db      	uxtb	r3, r3
 801bdfa:	fb13 f307 	smulbb	r3, r3, r7
 801bdfe:	b2d2      	uxtb	r2, r2
 801be00:	fb02 3101 	mla	r1, r2, r1, r3
 801be04:	b2ad      	uxth	r5, r5
 801be06:	b289      	uxth	r1, r1
 801be08:	b2a4      	uxth	r4, r4
 801be0a:	1c6b      	adds	r3, r5, #1
 801be0c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801be10:	1c62      	adds	r2, r4, #1
 801be12:	1c4b      	adds	r3, r1, #1
 801be14:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801be18:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801be1c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801be20:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801be24:	0964      	lsrs	r4, r4, #5
 801be26:	432b      	orrs	r3, r5
 801be28:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801be2c:	9a03      	ldr	r2, [sp, #12]
 801be2e:	4323      	orrs	r3, r4
 801be30:	8013      	strh	r3, [r2, #0]
 801be32:	b005      	add	sp, #20
 801be34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801be38:	f04f 0c00 	mov.w	ip, #0
 801be3c:	4664      	mov	r4, ip
 801be3e:	e6d6      	b.n	801bbee <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801be40:	2300      	movs	r3, #0
 801be42:	469c      	mov	ip, r3
 801be44:	461a      	mov	r2, r3
 801be46:	461c      	mov	r4, r3
 801be48:	e6f8      	b.n	801bc3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801be4a:	2300      	movs	r3, #0
 801be4c:	461a      	mov	r2, r3
 801be4e:	e6f5      	b.n	801bc3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801be50:	460b      	mov	r3, r1
 801be52:	460a      	mov	r2, r1
 801be54:	e6f2      	b.n	801bc3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801be56:	2500      	movs	r5, #0
 801be58:	46ab      	mov	fp, r5
 801be5a:	e720      	b.n	801bc9e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801be5c:	2700      	movs	r7, #0
 801be5e:	463d      	mov	r5, r7
 801be60:	4638      	mov	r0, r7
 801be62:	46bb      	mov	fp, r7
 801be64:	e745      	b.n	801bcf2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801be66:	4677      	mov	r7, lr
 801be68:	4675      	mov	r5, lr
 801be6a:	4670      	mov	r0, lr
 801be6c:	46f3      	mov	fp, lr
 801be6e:	e740      	b.n	801bcf2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801be70:	2700      	movs	r7, #0
 801be72:	4638      	mov	r0, r7
 801be74:	e73d      	b.n	801bcf2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801be76:	460f      	mov	r7, r1
 801be78:	4608      	mov	r0, r1
 801be7a:	e73a      	b.n	801bcf2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801be7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801be7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801be80:	b097      	sub	sp, #92	; 0x5c
 801be82:	9214      	str	r2, [sp, #80]	; 0x50
 801be84:	9308      	str	r3, [sp, #32]
 801be86:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801be88:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801be8c:	9312      	str	r3, [sp, #72]	; 0x48
 801be8e:	9111      	str	r1, [sp, #68]	; 0x44
 801be90:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801be94:	9015      	str	r0, [sp, #84]	; 0x54
 801be96:	6850      	ldr	r0, [r2, #4]
 801be98:	6812      	ldr	r2, [r2, #0]
 801be9a:	fb00 1303 	mla	r3, r0, r3, r1
 801be9e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801bea2:	9309      	str	r3, [sp, #36]	; 0x24
 801bea4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bea6:	681b      	ldr	r3, [r3, #0]
 801bea8:	930b      	str	r3, [sp, #44]	; 0x2c
 801beaa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801beac:	685b      	ldr	r3, [r3, #4]
 801beae:	930c      	str	r3, [sp, #48]	; 0x30
 801beb0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801beb4:	930a      	str	r3, [sp, #40]	; 0x28
 801beb6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801beb8:	2b00      	cmp	r3, #0
 801beba:	dc03      	bgt.n	801bec4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801bebc:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801bebe:	2b00      	cmp	r3, #0
 801bec0:	f340 83cb 	ble.w	801c65a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801bec4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bec6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801beca:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801bece:	1e48      	subs	r0, r1, #1
 801bed0:	1e55      	subs	r5, r2, #1
 801bed2:	9b08      	ldr	r3, [sp, #32]
 801bed4:	2b00      	cmp	r3, #0
 801bed6:	f340 81a3 	ble.w	801c220 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 801beda:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801bedc:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801bede:	1436      	asrs	r6, r6, #16
 801bee0:	ea4f 4323 	mov.w	r3, r3, asr #16
 801bee4:	d406      	bmi.n	801bef4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801bee6:	4286      	cmp	r6, r0
 801bee8:	da04      	bge.n	801bef4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801beea:	2b00      	cmp	r3, #0
 801beec:	db02      	blt.n	801bef4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801beee:	42ab      	cmp	r3, r5
 801bef0:	f2c0 8197 	blt.w	801c222 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801bef4:	3601      	adds	r6, #1
 801bef6:	f100 8184 	bmi.w	801c202 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801befa:	42b1      	cmp	r1, r6
 801befc:	f2c0 8181 	blt.w	801c202 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801bf00:	3301      	adds	r3, #1
 801bf02:	f100 817e 	bmi.w	801c202 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801bf06:	429a      	cmp	r2, r3
 801bf08:	f2c0 817b 	blt.w	801c202 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801bf0c:	9b08      	ldr	r3, [sp, #32]
 801bf0e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801bf10:	9313      	str	r3, [sp, #76]	; 0x4c
 801bf12:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801bf16:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801bf18:	2b00      	cmp	r3, #0
 801bf1a:	f340 81a4 	ble.w	801c266 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801bf1e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801bf20:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801bf22:	1418      	asrs	r0, r3, #16
 801bf24:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801bf26:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801bf2a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801bf2c:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801bf30:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bf32:	142d      	asrs	r5, r5, #16
 801bf34:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801bf38:	f100 81f8 	bmi.w	801c32c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801bf3c:	f102 3eff 	add.w	lr, r2, #4294967295
 801bf40:	4575      	cmp	r5, lr
 801bf42:	f280 81f3 	bge.w	801c32c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801bf46:	2800      	cmp	r0, #0
 801bf48:	f2c0 81f0 	blt.w	801c32c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801bf4c:	f103 3eff 	add.w	lr, r3, #4294967295
 801bf50:	4570      	cmp	r0, lr
 801bf52:	f280 81eb 	bge.w	801c32c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801bf56:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801bf58:	b212      	sxth	r2, r2
 801bf5a:	fb00 5002 	mla	r0, r0, r2, r5
 801bf5e:	fa1f fe81 	uxth.w	lr, r1
 801bf62:	eb03 0a00 	add.w	sl, r3, r0
 801bf66:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801bf6a:	f813 9000 	ldrb.w	r9, [r3, r0]
 801bf6e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801bf72:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801bf76:	b29b      	uxth	r3, r3
 801bf78:	f1bc 0f00 	cmp.w	ip, #0
 801bf7c:	f000 81b9 	beq.w	801c2f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801bf80:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801bf84:	940d      	str	r4, [sp, #52]	; 0x34
 801bf86:	eb0a 0b02 	add.w	fp, sl, r2
 801bf8a:	fa1f fa8c 	uxth.w	sl, ip
 801bf8e:	fb0a fe0e 	mul.w	lr, sl, lr
 801bf92:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801bf96:	fa1f fa8a 	uxth.w	sl, sl
 801bf9a:	eba5 050e 	sub.w	r5, r5, lr
 801bf9e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801bfa2:	940e      	str	r4, [sp, #56]	; 0x38
 801bfa4:	eba3 030a 	sub.w	r3, r3, sl
 801bfa8:	b2ad      	uxth	r5, r5
 801bfaa:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bfac:	b29b      	uxth	r3, r3
 801bfae:	fb08 f505 	mul.w	r5, r8, r5
 801bfb2:	fb09 5303 	mla	r3, r9, r3, r5
 801bfb6:	fb0a 3304 	mla	r3, sl, r4, r3
 801bfba:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801bfbc:	fb0e 3304 	mla	r3, lr, r4, r3
 801bfc0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801bfc4:	2b00      	cmp	r3, #0
 801bfc6:	f000 810f 	beq.w	801c1e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801bfca:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801bfcc:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801bfd0:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801bfd4:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801bfd8:	f000 8190 	beq.w	801c2fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801bfdc:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801bfe0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801bfe4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bfe8:	fb09 f000 	mul.w	r0, r9, r0
 801bfec:	fb0a fe0e 	mul.w	lr, sl, lr
 801bff0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801bff4:	f100 0b20 	add.w	fp, r0, #32
 801bff8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801bffc:	44ce      	add	lr, r9
 801bffe:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801c002:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c006:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c00a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c00e:	ea4e 0909 	orr.w	r9, lr, r9
 801c012:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801c016:	8868      	ldrh	r0, [r5, #2]
 801c018:	d019      	beq.n	801c04e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801c01a:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801c01e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c022:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c026:	fb08 f800 	mul.w	r8, r8, r0
 801c02a:	fb0a fe0e 	mul.w	lr, sl, lr
 801c02e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801c032:	f108 0b20 	add.w	fp, r8, #32
 801c036:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801c03a:	4486      	add	lr, r0
 801c03c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801c040:	0a00      	lsrs	r0, r0, #8
 801c042:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c046:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c04a:	ea4e 0000 	orr.w	r0, lr, r0
 801c04e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801c052:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c056:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801c05a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c05e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c062:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c066:	ea4e 0909 	orr.w	r9, lr, r9
 801c06a:	ea4a 0000 	orr.w	r0, sl, r0
 801c06e:	f1bc 0f00 	cmp.w	ip, #0
 801c072:	f000 8145 	beq.w	801c300 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801c076:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801c07a:	3a01      	subs	r2, #1
 801c07c:	0052      	lsls	r2, r2, #1
 801c07e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c080:	3202      	adds	r2, #2
 801c082:	2cff      	cmp	r4, #255	; 0xff
 801c084:	eb05 0e02 	add.w	lr, r5, r2
 801c088:	5aaa      	ldrh	r2, [r5, r2]
 801c08a:	d018      	beq.n	801c0be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801c08c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801c090:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c094:	fb04 fa02 	mul.w	sl, r4, r2
 801c098:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c09c:	fb08 f805 	mul.w	r8, r8, r5
 801c0a0:	f10a 0520 	add.w	r5, sl, #32
 801c0a4:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801c0a8:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801c0ac:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c0b0:	4442      	add	r2, r8
 801c0b2:	0a2d      	lsrs	r5, r5, #8
 801c0b4:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801c0b8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c0bc:	432a      	orrs	r2, r5
 801c0be:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c0c0:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801c0c4:	2cff      	cmp	r4, #255	; 0xff
 801c0c6:	d01a      	beq.n	801c0fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801c0c8:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801c0cc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c0d0:	fb04 fa05 	mul.w	sl, r4, r5
 801c0d4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c0d8:	fb08 f80e 	mul.w	r8, r8, lr
 801c0dc:	f10a 0e20 	add.w	lr, sl, #32
 801c0e0:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801c0e4:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801c0e8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c0ec:	4445      	add	r5, r8
 801c0ee:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c0f2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801c0f6:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801c0fa:	ea45 050e 	orr.w	r5, r5, lr
 801c0fe:	fb1c fe01 	smulbb	lr, ip, r1
 801c102:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801c106:	f1cc 0810 	rsb	r8, ip, #16
 801c10a:	eba8 0801 	sub.w	r8, r8, r1
 801c10e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c112:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801c116:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801c11a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801c11e:	4341      	muls	r1, r0
 801c120:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c124:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c128:	ea4a 0202 	orr.w	r2, sl, r2
 801c12c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801c130:	fb09 1108 	mla	r1, r9, r8, r1
 801c134:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c138:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801c13c:	fb0c 1102 	mla	r1, ip, r2, r1
 801c140:	ea4b 0505 	orr.w	r5, fp, r5
 801c144:	fb0e 1e05 	mla	lr, lr, r5, r1
 801c148:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c14c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c150:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c154:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c158:	ea42 0e0e 	orr.w	lr, r2, lr
 801c15c:	fa1f f28e 	uxth.w	r2, lr
 801c160:	2bff      	cmp	r3, #255	; 0xff
 801c162:	d103      	bne.n	801c16c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801c164:	9912      	ldr	r1, [sp, #72]	; 0x48
 801c166:	29ff      	cmp	r1, #255	; 0xff
 801c168:	f000 80de 	beq.w	801c328 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801c16c:	990a      	ldr	r1, [sp, #40]	; 0x28
 801c16e:	8838      	ldrh	r0, [r7, #0]
 801c170:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c172:	434b      	muls	r3, r1
 801c174:	f103 0c01 	add.w	ip, r3, #1
 801c178:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801c17c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801c180:	fa5f fc83 	uxtb.w	ip, r3
 801c184:	1203      	asrs	r3, r0, #8
 801c186:	1215      	asrs	r5, r2, #8
 801c188:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801c18c:	fb13 f30c 	smulbb	r3, r3, ip
 801c190:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c194:	fb05 3501 	mla	r5, r5, r1, r3
 801c198:	10c3      	asrs	r3, r0, #3
 801c19a:	10d1      	asrs	r1, r2, #3
 801c19c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801c1a0:	fb13 f30c 	smulbb	r3, r3, ip
 801c1a4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c1a8:	fb01 3104 	mla	r1, r1, r4, r3
 801c1ac:	00c3      	lsls	r3, r0, #3
 801c1ae:	00d2      	lsls	r2, r2, #3
 801c1b0:	b2db      	uxtb	r3, r3
 801c1b2:	b2d2      	uxtb	r2, r2
 801c1b4:	fb13 f30c 	smulbb	r3, r3, ip
 801c1b8:	b2ad      	uxth	r5, r5
 801c1ba:	fb02 3304 	mla	r3, r2, r4, r3
 801c1be:	b29a      	uxth	r2, r3
 801c1c0:	1c6b      	adds	r3, r5, #1
 801c1c2:	b289      	uxth	r1, r1
 801c1c4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c1c8:	1c53      	adds	r3, r2, #1
 801c1ca:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c1ce:	1c4a      	adds	r2, r1, #1
 801c1d0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c1d4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c1d8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c1dc:	0949      	lsrs	r1, r1, #5
 801c1de:	432b      	orrs	r3, r5
 801c1e0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c1e4:	430b      	orrs	r3, r1
 801c1e6:	803b      	strh	r3, [r7, #0]
 801c1e8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c1ea:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801c1ec:	4413      	add	r3, r2
 801c1ee:	9321      	str	r3, [sp, #132]	; 0x84
 801c1f0:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801c1f2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c1f4:	441a      	add	r2, r3
 801c1f6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c1f8:	9222      	str	r2, [sp, #136]	; 0x88
 801c1fa:	3b01      	subs	r3, #1
 801c1fc:	3702      	adds	r7, #2
 801c1fe:	9313      	str	r3, [sp, #76]	; 0x4c
 801c200:	e689      	b.n	801bf16 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801c202:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c204:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 801c206:	9c22      	ldr	r4, [sp, #136]	; 0x88
 801c208:	4433      	add	r3, r6
 801c20a:	9321      	str	r3, [sp, #132]	; 0x84
 801c20c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c20e:	441c      	add	r4, r3
 801c210:	9b08      	ldr	r3, [sp, #32]
 801c212:	9422      	str	r4, [sp, #136]	; 0x88
 801c214:	3b01      	subs	r3, #1
 801c216:	9308      	str	r3, [sp, #32]
 801c218:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c21a:	3302      	adds	r3, #2
 801c21c:	9309      	str	r3, [sp, #36]	; 0x24
 801c21e:	e658      	b.n	801bed2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801c220:	d028      	beq.n	801c274 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801c222:	9b08      	ldr	r3, [sp, #32]
 801c224:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801c226:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801c228:	3b01      	subs	r3, #1
 801c22a:	fb00 5003 	mla	r0, r0, r3, r5
 801c22e:	1400      	asrs	r0, r0, #16
 801c230:	f53f ae6c 	bmi.w	801bf0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c234:	3901      	subs	r1, #1
 801c236:	4288      	cmp	r0, r1
 801c238:	f6bf ae68 	bge.w	801bf0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c23c:	9924      	ldr	r1, [sp, #144]	; 0x90
 801c23e:	9822      	ldr	r0, [sp, #136]	; 0x88
 801c240:	fb01 0303 	mla	r3, r1, r3, r0
 801c244:	141b      	asrs	r3, r3, #16
 801c246:	f53f ae61 	bmi.w	801bf0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c24a:	3a01      	subs	r2, #1
 801c24c:	4293      	cmp	r3, r2
 801c24e:	f6bf ae5d 	bge.w	801bf0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c252:	9b08      	ldr	r3, [sp, #32]
 801c254:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801c258:	9313      	str	r3, [sp, #76]	; 0x4c
 801c25a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801c25e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c260:	2b00      	cmp	r3, #0
 801c262:	f300 8082 	bgt.w	801c36a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801c266:	9b08      	ldr	r3, [sp, #32]
 801c268:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c26c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c26e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801c272:	9309      	str	r3, [sp, #36]	; 0x24
 801c274:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c276:	2b00      	cmp	r3, #0
 801c278:	f340 81ef 	ble.w	801c65a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801c27c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c280:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c284:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c288:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c28a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c28e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c292:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c296:	eef0 6a62 	vmov.f32	s13, s5
 801c29a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c29e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c2a2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c2a6:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 801c2aa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c2ae:	eef0 6a43 	vmov.f32	s13, s6
 801c2b2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c2b6:	ee12 2a90 	vmov	r2, s5
 801c2ba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c2be:	fb92 f3f3 	sdiv	r3, r2, r3
 801c2c2:	ee13 2a10 	vmov	r2, s6
 801c2c6:	9323      	str	r3, [sp, #140]	; 0x8c
 801c2c8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c2ca:	fb92 f3f3 	sdiv	r3, r2, r3
 801c2ce:	9324      	str	r3, [sp, #144]	; 0x90
 801c2d0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c2d2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c2d4:	3b01      	subs	r3, #1
 801c2d6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c2da:	9311      	str	r3, [sp, #68]	; 0x44
 801c2dc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c2de:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 801c2e2:	bf08      	it	eq
 801c2e4:	4613      	moveq	r3, r2
 801c2e6:	9308      	str	r3, [sp, #32]
 801c2e8:	eeb0 3a67 	vmov.f32	s6, s15
 801c2ec:	eef0 2a47 	vmov.f32	s5, s14
 801c2f0:	e5e1      	b.n	801beb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801c2f2:	fb08 f505 	mul.w	r5, r8, r5
 801c2f6:	fb09 5303 	mla	r3, r9, r3, r5
 801c2fa:	e661      	b.n	801bfc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801c2fc:	4681      	mov	r9, r0
 801c2fe:	e688      	b.n	801c012 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801c300:	f1c1 0210 	rsb	r2, r1, #16
 801c304:	4341      	muls	r1, r0
 801c306:	fb09 1902 	mla	r9, r9, r2, r1
 801c30a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c30e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801c312:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c316:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c31a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c31e:	ea42 0909 	orr.w	r9, r2, r9
 801c322:	fa1f f289 	uxth.w	r2, r9
 801c326:	e71b      	b.n	801c160 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801c328:	803a      	strh	r2, [r7, #0]
 801c32a:	e75d      	b.n	801c1e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c32c:	f115 0e01 	adds.w	lr, r5, #1
 801c330:	f53f af5a 	bmi.w	801c1e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c334:	4572      	cmp	r2, lr
 801c336:	f6ff af57 	blt.w	801c1e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c33a:	f110 0e01 	adds.w	lr, r0, #1
 801c33e:	f53f af53 	bmi.w	801c1e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c342:	4573      	cmp	r3, lr
 801c344:	f6ff af50 	blt.w	801c1e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c348:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801c34a:	9502      	str	r5, [sp, #8]
 801c34c:	b21b      	sxth	r3, r3
 801c34e:	b212      	sxth	r2, r2
 801c350:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801c354:	9301      	str	r3, [sp, #4]
 801c356:	9200      	str	r2, [sp, #0]
 801c358:	e9cd c405 	strd	ip, r4, [sp, #20]
 801c35c:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 801c360:	4639      	mov	r1, r7
 801c362:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c364:	f7ff fc04 	bl	801bb70 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801c368:	e73e      	b.n	801c1e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c36a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c36c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c370:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c372:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801c376:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c378:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c37c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c37e:	141f      	asrs	r7, r3, #16
 801c380:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c382:	141b      	asrs	r3, r3, #16
 801c384:	fb01 3707 	mla	r7, r1, r7, r3
 801c388:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c38a:	fa1f fc82 	uxth.w	ip, r2
 801c38e:	eb03 0a07 	add.w	sl, r3, r7
 801c392:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801c396:	f813 9007 	ldrb.w	r9, [r3, r7]
 801c39a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c39e:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801c3a2:	b29b      	uxth	r3, r3
 801c3a4:	2d00      	cmp	r5, #0
 801c3a6:	f000 813d 	beq.w	801c624 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801c3aa:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801c3ae:	940f      	str	r4, [sp, #60]	; 0x3c
 801c3b0:	eb0a 0b01 	add.w	fp, sl, r1
 801c3b4:	fa1f fa85 	uxth.w	sl, r5
 801c3b8:	fb0a fc0c 	mul.w	ip, sl, ip
 801c3bc:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801c3c0:	fa1f fa8a 	uxth.w	sl, sl
 801c3c4:	eba0 000c 	sub.w	r0, r0, ip
 801c3c8:	eba3 030a 	sub.w	r3, r3, sl
 801c3cc:	b280      	uxth	r0, r0
 801c3ce:	fb08 f000 	mul.w	r0, r8, r0
 801c3d2:	b29b      	uxth	r3, r3
 801c3d4:	fb09 0303 	mla	r3, r9, r3, r0
 801c3d8:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801c3da:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c3de:	9410      	str	r4, [sp, #64]	; 0x40
 801c3e0:	fb0a 3300 	mla	r3, sl, r0, r3
 801c3e4:	fb0c 3304 	mla	r3, ip, r4, r3
 801c3e8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c3ec:	2b00      	cmp	r3, #0
 801c3ee:	f000 810b 	beq.w	801c608 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801c3f2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801c3f4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c3f6:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c3fa:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801c3fe:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801c402:	f000 8114 	beq.w	801c62e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 801c406:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801c40a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c40e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c412:	fb09 f707 	mul.w	r7, r9, r7
 801c416:	fb0a fc0c 	mul.w	ip, sl, ip
 801c41a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801c41e:	f107 0b20 	add.w	fp, r7, #32
 801c422:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801c426:	44cc      	add	ip, r9
 801c428:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801c42c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c430:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801c434:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c438:	ea4c 0909 	orr.w	r9, ip, r9
 801c43c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801c440:	8847      	ldrh	r7, [r0, #2]
 801c442:	d019      	beq.n	801c478 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 801c444:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801c448:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c44c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c450:	fb08 f807 	mul.w	r8, r8, r7
 801c454:	fb0a fc0c 	mul.w	ip, sl, ip
 801c458:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801c45c:	f108 0b20 	add.w	fp, r8, #32
 801c460:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801c464:	44bc      	add	ip, r7
 801c466:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801c46a:	0a3f      	lsrs	r7, r7, #8
 801c46c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801c470:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c474:	ea4c 0707 	orr.w	r7, ip, r7
 801c478:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801c47c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801c480:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801c484:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c488:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c48c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801c490:	ea4c 0909 	orr.w	r9, ip, r9
 801c494:	ea4a 0707 	orr.w	r7, sl, r7
 801c498:	2d00      	cmp	r5, #0
 801c49a:	f000 80ca 	beq.w	801c632 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801c49e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801c4a2:	3901      	subs	r1, #1
 801c4a4:	0049      	lsls	r1, r1, #1
 801c4a6:	3102      	adds	r1, #2
 801c4a8:	eb00 0c01 	add.w	ip, r0, r1
 801c4ac:	5a41      	ldrh	r1, [r0, r1]
 801c4ae:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801c4b0:	28ff      	cmp	r0, #255	; 0xff
 801c4b2:	d019      	beq.n	801c4e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 801c4b4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801c4b6:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801c4ba:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c4be:	fb04 fa01 	mul.w	sl, r4, r1
 801c4c2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c4c6:	fb08 f800 	mul.w	r8, r8, r0
 801c4ca:	f10a 0020 	add.w	r0, sl, #32
 801c4ce:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801c4d2:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801c4d6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c4da:	4441      	add	r1, r8
 801c4dc:	0a00      	lsrs	r0, r0, #8
 801c4de:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801c4e2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c4e6:	4301      	orrs	r1, r0
 801c4e8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c4ea:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801c4ee:	2cff      	cmp	r4, #255	; 0xff
 801c4f0:	d01a      	beq.n	801c528 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801c4f2:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801c4f6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c4fa:	fb04 fa00 	mul.w	sl, r4, r0
 801c4fe:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c502:	fb08 f80c 	mul.w	r8, r8, ip
 801c506:	f10a 0c20 	add.w	ip, sl, #32
 801c50a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801c50e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801c512:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c516:	4440      	add	r0, r8
 801c518:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c51c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801c520:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801c524:	ea40 000c 	orr.w	r0, r0, ip
 801c528:	fb15 fc02 	smulbb	ip, r5, r2
 801c52c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801c530:	f1c5 0810 	rsb	r8, r5, #16
 801c534:	eba8 0802 	sub.w	r8, r8, r2
 801c538:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801c53c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801c540:	437a      	muls	r2, r7
 801c542:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801c546:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801c54a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c54e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801c552:	fb09 2208 	mla	r2, r9, r8, r2
 801c556:	ea4a 0101 	orr.w	r1, sl, r1
 801c55a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801c55e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c562:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c566:	fb05 2201 	mla	r2, r5, r1, r2
 801c56a:	ea4b 0000 	orr.w	r0, fp, r0
 801c56e:	fb0c 2200 	mla	r2, ip, r0, r2
 801c572:	0d57      	lsrs	r7, r2, #21
 801c574:	0952      	lsrs	r2, r2, #5
 801c576:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c57a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c57e:	433a      	orrs	r2, r7
 801c580:	2bff      	cmp	r3, #255	; 0xff
 801c582:	b292      	uxth	r2, r2
 801c584:	d102      	bne.n	801c58c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801c586:	9912      	ldr	r1, [sp, #72]	; 0x48
 801c588:	29ff      	cmp	r1, #255	; 0xff
 801c58a:	d063      	beq.n	801c654 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 801c58c:	980a      	ldr	r0, [sp, #40]	; 0x28
 801c58e:	f8be 1000 	ldrh.w	r1, [lr]
 801c592:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c594:	4343      	muls	r3, r0
 801c596:	1c58      	adds	r0, r3, #1
 801c598:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801c59c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801c5a0:	1208      	asrs	r0, r1, #8
 801c5a2:	b2db      	uxtb	r3, r3
 801c5a4:	1215      	asrs	r5, r2, #8
 801c5a6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c5aa:	fb10 f003 	smulbb	r0, r0, r3
 801c5ae:	10cf      	asrs	r7, r1, #3
 801c5b0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c5b4:	00c9      	lsls	r1, r1, #3
 801c5b6:	fb05 0504 	mla	r5, r5, r4, r0
 801c5ba:	b2c9      	uxtb	r1, r1
 801c5bc:	10d0      	asrs	r0, r2, #3
 801c5be:	00d2      	lsls	r2, r2, #3
 801c5c0:	fb11 f103 	smulbb	r1, r1, r3
 801c5c4:	b2d2      	uxtb	r2, r2
 801c5c6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c5ca:	fb02 1204 	mla	r2, r2, r4, r1
 801c5ce:	fb17 f703 	smulbb	r7, r7, r3
 801c5d2:	b2ad      	uxth	r5, r5
 801c5d4:	b292      	uxth	r2, r2
 801c5d6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c5da:	fb00 7004 	mla	r0, r0, r4, r7
 801c5de:	1c6b      	adds	r3, r5, #1
 801c5e0:	1c57      	adds	r7, r2, #1
 801c5e2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c5e6:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801c5ea:	b280      	uxth	r0, r0
 801c5ec:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801c5f0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c5f4:	433d      	orrs	r5, r7
 801c5f6:	1c47      	adds	r7, r0, #1
 801c5f8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801c5fc:	097f      	lsrs	r7, r7, #5
 801c5fe:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c602:	433d      	orrs	r5, r7
 801c604:	f8ae 5000 	strh.w	r5, [lr]
 801c608:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c60a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801c60c:	4413      	add	r3, r2
 801c60e:	9321      	str	r3, [sp, #132]	; 0x84
 801c610:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801c612:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c614:	441a      	add	r2, r3
 801c616:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c618:	9222      	str	r2, [sp, #136]	; 0x88
 801c61a:	3b01      	subs	r3, #1
 801c61c:	f10e 0e02 	add.w	lr, lr, #2
 801c620:	9313      	str	r3, [sp, #76]	; 0x4c
 801c622:	e61c      	b.n	801c25e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 801c624:	fb08 f000 	mul.w	r0, r8, r0
 801c628:	fb09 0303 	mla	r3, r9, r3, r0
 801c62c:	e6dc      	b.n	801c3e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 801c62e:	46b9      	mov	r9, r7
 801c630:	e704      	b.n	801c43c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 801c632:	f1c2 0110 	rsb	r1, r2, #16
 801c636:	437a      	muls	r2, r7
 801c638:	fb09 2901 	mla	r9, r9, r1, r2
 801c63c:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c640:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801c644:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801c648:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c64c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c650:	4302      	orrs	r2, r0
 801c652:	e795      	b.n	801c580 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 801c654:	f8ae 2000 	strh.w	r2, [lr]
 801c658:	e7d6      	b.n	801c608 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801c65a:	b017      	add	sp, #92	; 0x5c
 801c65c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c660 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801c660:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c664:	b085      	sub	sp, #20
 801c666:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801c66a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801c66e:	9103      	str	r1, [sp, #12]
 801c670:	fb00 7406 	mla	r4, r0, r6, r7
 801c674:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801c678:	2800      	cmp	r0, #0
 801c67a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801c67e:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801c682:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801c686:	9501      	str	r5, [sp, #4]
 801c688:	eb02 0904 	add.w	r9, r2, r4
 801c68c:	f2c0 8141 	blt.w	801c912 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801c690:	4583      	cmp	fp, r0
 801c692:	f340 813e 	ble.w	801c912 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801c696:	2f00      	cmp	r7, #0
 801c698:	f2c0 8137 	blt.w	801c90a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801c69c:	42be      	cmp	r6, r7
 801c69e:	f340 8134 	ble.w	801c90a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801c6a2:	f812 c004 	ldrb.w	ip, [r2, r4]
 801c6a6:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801c6aa:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801c6ae:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801c6b2:	4355      	muls	r5, r2
 801c6b4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c6b8:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801c6bc:	fb0c f203 	mul.w	r2, ip, r3
 801c6c0:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801c6c4:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801c6c8:	441d      	add	r5, r3
 801c6ca:	f102 0320 	add.w	r3, r2, #32
 801c6ce:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c6d2:	0a1b      	lsrs	r3, r3, #8
 801c6d4:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801c6d8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c6dc:	431c      	orrs	r4, r3
 801c6de:	1c7b      	adds	r3, r7, #1
 801c6e0:	f100 811c 	bmi.w	801c91c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801c6e4:	429e      	cmp	r6, r3
 801c6e6:	f340 8119 	ble.w	801c91c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801c6ea:	2900      	cmp	r1, #0
 801c6ec:	f000 8119 	beq.w	801c922 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801c6f0:	9a01      	ldr	r2, [sp, #4]
 801c6f2:	f899 3001 	ldrb.w	r3, [r9, #1]
 801c6f6:	8855      	ldrh	r5, [r2, #2]
 801c6f8:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801c6fc:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801c700:	fb08 f802 	mul.w	r8, r8, r2
 801c704:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c708:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801c70c:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801c710:	435d      	muls	r5, r3
 801c712:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c716:	44d0      	add	r8, sl
 801c718:	f105 0a20 	add.w	sl, r5, #32
 801c71c:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801c720:	0a2d      	lsrs	r5, r5, #8
 801c722:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801c726:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c72a:	432a      	orrs	r2, r5
 801c72c:	3001      	adds	r0, #1
 801c72e:	f100 80fe 	bmi.w	801c92e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801c732:	4583      	cmp	fp, r0
 801c734:	f340 80fb 	ble.w	801c92e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801c738:	f1be 0f00 	cmp.w	lr, #0
 801c73c:	f000 80fc 	beq.w	801c938 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801c740:	2f00      	cmp	r7, #0
 801c742:	f2c0 80f1 	blt.w	801c928 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801c746:	42be      	cmp	r6, r7
 801c748:	f340 80ee 	ble.w	801c928 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801c74c:	9801      	ldr	r0, [sp, #4]
 801c74e:	f819 5006 	ldrb.w	r5, [r9, r6]
 801c752:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801c756:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801c75a:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801c75e:	fb0a fa00 	mul.w	sl, sl, r0
 801c762:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801c766:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801c76a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801c76e:	fb05 f808 	mul.w	r8, r5, r8
 801c772:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801c776:	4482      	add	sl, r0
 801c778:	f108 0020 	add.w	r0, r8, #32
 801c77c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c780:	0a00      	lsrs	r0, r0, #8
 801c782:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801c786:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c78a:	ea4b 0b00 	orr.w	fp, fp, r0
 801c78e:	3701      	adds	r7, #1
 801c790:	f100 80d7 	bmi.w	801c942 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801c794:	42be      	cmp	r6, r7
 801c796:	f340 80d4 	ble.w	801c942 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801c79a:	2900      	cmp	r1, #0
 801c79c:	f000 80d4 	beq.w	801c948 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801c7a0:	3601      	adds	r6, #1
 801c7a2:	9801      	ldr	r0, [sp, #4]
 801c7a4:	f819 7006 	ldrb.w	r7, [r9, r6]
 801c7a8:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801c7ac:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801c7b0:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801c7b4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c7b8:	fb09 f906 	mul.w	r9, r9, r6
 801c7bc:	fb07 f800 	mul.w	r8, r7, r0
 801c7c0:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801c7c4:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801c7c8:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801c7cc:	44d1      	add	r9, sl
 801c7ce:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801c7d2:	f108 0020 	add.w	r0, r8, #32
 801c7d6:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c7da:	0a00      	lsrs	r0, r0, #8
 801c7dc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c7e0:	4330      	orrs	r0, r6
 801c7e2:	b28e      	uxth	r6, r1
 801c7e4:	fa1f f98e 	uxth.w	r9, lr
 801c7e8:	fb06 f809 	mul.w	r8, r6, r9
 801c7ec:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801c7f0:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801c7f4:	0136      	lsls	r6, r6, #4
 801c7f6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c7fa:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801c7fe:	9601      	str	r6, [sp, #4]
 801c800:	ea4a 0404 	orr.w	r4, sl, r4
 801c804:	fa1f f689 	uxth.w	r6, r9
 801c808:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c80c:	fb11 f90e 	smulbb	r9, r1, lr
 801c810:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801c814:	9602      	str	r6, [sp, #8]
 801c816:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c81a:	4626      	mov	r6, r4
 801c81c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c820:	f1ce 0410 	rsb	r4, lr, #16
 801c824:	1a64      	subs	r4, r4, r1
 801c826:	ea4a 0202 	orr.w	r2, sl, r2
 801c82a:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801c82e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c832:	434a      	muls	r2, r1
 801c834:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801c838:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c83c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c840:	fb04 2406 	mla	r4, r4, r6, r2
 801c844:	ea4a 0000 	orr.w	r0, sl, r0
 801c848:	fb09 4200 	mla	r2, r9, r0, r4
 801c84c:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801c850:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801c854:	9801      	ldr	r0, [sp, #4]
 801c856:	9903      	ldr	r1, [sp, #12]
 801c858:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801c85c:	ea44 0b0b 	orr.w	fp, r4, fp
 801c860:	9c02      	ldr	r4, [sp, #8]
 801c862:	8809      	ldrh	r1, [r1, #0]
 801c864:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 801c868:	1b00      	subs	r0, r0, r4
 801c86a:	9c01      	ldr	r4, [sp, #4]
 801c86c:	eba4 0608 	sub.w	r6, r4, r8
 801c870:	b2b6      	uxth	r6, r6
 801c872:	b280      	uxth	r0, r0
 801c874:	4373      	muls	r3, r6
 801c876:	fb0c 3300 	mla	r3, ip, r0, r3
 801c87a:	9802      	ldr	r0, [sp, #8]
 801c87c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801c880:	fb00 3505 	mla	r5, r0, r5, r3
 801c884:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801c888:	fb08 5707 	mla	r7, r8, r7, r5
 801c88c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c890:	120b      	asrs	r3, r1, #8
 801c892:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c896:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801c89a:	b2ff      	uxtb	r7, r7
 801c89c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c8a0:	10c8      	asrs	r0, r1, #3
 801c8a2:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c8a6:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801c8aa:	00c9      	lsls	r1, r1, #3
 801c8ac:	437b      	muls	r3, r7
 801c8ae:	ea42 0e0e 	orr.w	lr, r2, lr
 801c8b2:	b2c9      	uxtb	r1, r1
 801c8b4:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c8b8:	fa1f f28e 	uxth.w	r2, lr
 801c8bc:	4378      	muls	r0, r7
 801c8be:	434f      	muls	r7, r1
 801c8c0:	1c59      	adds	r1, r3, #1
 801c8c2:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801c8c6:	1213      	asrs	r3, r2, #8
 801c8c8:	f023 0307 	bic.w	r3, r3, #7
 801c8cc:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801c8d0:	1c41      	adds	r1, r0, #1
 801c8d2:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801c8d6:	10d1      	asrs	r1, r2, #3
 801c8d8:	f021 0103 	bic.w	r1, r1, #3
 801c8dc:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801c8e0:	021b      	lsls	r3, r3, #8
 801c8e2:	00c9      	lsls	r1, r1, #3
 801c8e4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c8e8:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801c8ec:	430b      	orrs	r3, r1
 801c8ee:	1c79      	adds	r1, r7, #1
 801c8f0:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801c8f4:	00d2      	lsls	r2, r2, #3
 801c8f6:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801c8fa:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c8fe:	431a      	orrs	r2, r3
 801c900:	9b03      	ldr	r3, [sp, #12]
 801c902:	801a      	strh	r2, [r3, #0]
 801c904:	b005      	add	sp, #20
 801c906:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c90a:	f04f 0c00 	mov.w	ip, #0
 801c90e:	4664      	mov	r4, ip
 801c910:	e6e5      	b.n	801c6de <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801c912:	2300      	movs	r3, #0
 801c914:	469c      	mov	ip, r3
 801c916:	461a      	mov	r2, r3
 801c918:	461c      	mov	r4, r3
 801c91a:	e707      	b.n	801c72c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801c91c:	2300      	movs	r3, #0
 801c91e:	461a      	mov	r2, r3
 801c920:	e704      	b.n	801c72c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801c922:	460b      	mov	r3, r1
 801c924:	460a      	mov	r2, r1
 801c926:	e701      	b.n	801c72c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801c928:	2500      	movs	r5, #0
 801c92a:	46ab      	mov	fp, r5
 801c92c:	e72f      	b.n	801c78e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801c92e:	2700      	movs	r7, #0
 801c930:	463d      	mov	r5, r7
 801c932:	4638      	mov	r0, r7
 801c934:	46bb      	mov	fp, r7
 801c936:	e754      	b.n	801c7e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801c938:	4677      	mov	r7, lr
 801c93a:	4675      	mov	r5, lr
 801c93c:	4670      	mov	r0, lr
 801c93e:	46f3      	mov	fp, lr
 801c940:	e74f      	b.n	801c7e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801c942:	2700      	movs	r7, #0
 801c944:	4638      	mov	r0, r7
 801c946:	e74c      	b.n	801c7e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801c948:	460f      	mov	r7, r1
 801c94a:	4608      	mov	r0, r1
 801c94c:	e749      	b.n	801c7e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801c950 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c950:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c954:	b093      	sub	sp, #76	; 0x4c
 801c956:	9210      	str	r2, [sp, #64]	; 0x40
 801c958:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801c95a:	910e      	str	r1, [sp, #56]	; 0x38
 801c95c:	9306      	str	r3, [sp, #24]
 801c95e:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801c962:	9011      	str	r0, [sp, #68]	; 0x44
 801c964:	6850      	ldr	r0, [r2, #4]
 801c966:	6812      	ldr	r2, [r2, #0]
 801c968:	fb00 1303 	mla	r3, r0, r3, r1
 801c96c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c970:	9307      	str	r3, [sp, #28]
 801c972:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c974:	681b      	ldr	r3, [r3, #0]
 801c976:	9308      	str	r3, [sp, #32]
 801c978:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c97a:	685b      	ldr	r3, [r3, #4]
 801c97c:	9309      	str	r3, [sp, #36]	; 0x24
 801c97e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c980:	2b00      	cmp	r3, #0
 801c982:	dc03      	bgt.n	801c98c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801c984:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c986:	2b00      	cmp	r3, #0
 801c988:	f340 83b4 	ble.w	801d0f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801c98c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c98e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c992:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c996:	1e48      	subs	r0, r1, #1
 801c998:	1e55      	subs	r5, r2, #1
 801c99a:	9b06      	ldr	r3, [sp, #24]
 801c99c:	2b00      	cmp	r3, #0
 801c99e:	f340 8163 	ble.w	801cc68 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801c9a2:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 801c9a4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801c9a6:	1436      	asrs	r6, r6, #16
 801c9a8:	ea4f 4323 	mov.w	r3, r3, asr #16
 801c9ac:	d406      	bmi.n	801c9bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c9ae:	4286      	cmp	r6, r0
 801c9b0:	da04      	bge.n	801c9bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c9b2:	2b00      	cmp	r3, #0
 801c9b4:	db02      	blt.n	801c9bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c9b6:	42ab      	cmp	r3, r5
 801c9b8:	f2c0 8157 	blt.w	801cc6a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801c9bc:	3601      	adds	r6, #1
 801c9be:	f100 8144 	bmi.w	801cc4a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801c9c2:	42b1      	cmp	r1, r6
 801c9c4:	f2c0 8141 	blt.w	801cc4a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801c9c8:	3301      	adds	r3, #1
 801c9ca:	f100 813e 	bmi.w	801cc4a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801c9ce:	429a      	cmp	r2, r3
 801c9d0:	f2c0 813b 	blt.w	801cc4a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801c9d4:	9b06      	ldr	r3, [sp, #24]
 801c9d6:	9f07      	ldr	r7, [sp, #28]
 801c9d8:	930f      	str	r3, [sp, #60]	; 0x3c
 801c9da:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801c9de:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801c9e0:	2b00      	cmp	r3, #0
 801c9e2:	f340 8164 	ble.w	801ccae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801c9e6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801c9e8:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801c9ea:	1418      	asrs	r0, r3, #16
 801c9ec:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801c9ee:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801c9f2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801c9f4:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801c9f8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c9fa:	142d      	asrs	r5, r5, #16
 801c9fc:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801ca00:	f100 81ee 	bmi.w	801cde0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801ca04:	f102 3eff 	add.w	lr, r2, #4294967295
 801ca08:	4575      	cmp	r5, lr
 801ca0a:	f280 81e9 	bge.w	801cde0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801ca0e:	2800      	cmp	r0, #0
 801ca10:	f2c0 81e6 	blt.w	801cde0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801ca14:	f103 3eff 	add.w	lr, r3, #4294967295
 801ca18:	4570      	cmp	r0, lr
 801ca1a:	f280 81e1 	bge.w	801cde0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801ca1e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ca20:	b212      	sxth	r2, r2
 801ca22:	fb00 5002 	mla	r0, r0, r2, r5
 801ca26:	fa1f fe81 	uxth.w	lr, r1
 801ca2a:	eb03 0a00 	add.w	sl, r3, r0
 801ca2e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801ca32:	f813 9000 	ldrb.w	r9, [r3, r0]
 801ca36:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801ca3a:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801ca3e:	b29b      	uxth	r3, r3
 801ca40:	f1bc 0f00 	cmp.w	ip, #0
 801ca44:	f000 8179 	beq.w	801cd3a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801ca48:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801ca4c:	940a      	str	r4, [sp, #40]	; 0x28
 801ca4e:	eb0a 0b02 	add.w	fp, sl, r2
 801ca52:	fa1f fa8c 	uxth.w	sl, ip
 801ca56:	fb0a fe0e 	mul.w	lr, sl, lr
 801ca5a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801ca5e:	fa1f fa8a 	uxth.w	sl, sl
 801ca62:	eba5 050e 	sub.w	r5, r5, lr
 801ca66:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801ca6a:	940b      	str	r4, [sp, #44]	; 0x2c
 801ca6c:	eba3 030a 	sub.w	r3, r3, sl
 801ca70:	b2ad      	uxth	r5, r5
 801ca72:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ca74:	b29b      	uxth	r3, r3
 801ca76:	fb08 f505 	mul.w	r5, r8, r5
 801ca7a:	fb09 5303 	mla	r3, r9, r3, r5
 801ca7e:	fb0a 3304 	mla	r3, sl, r4, r3
 801ca82:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801ca84:	fb0e 3304 	mla	r3, lr, r4, r3
 801ca88:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ca8c:	2b00      	cmp	r3, #0
 801ca8e:	f000 80cf 	beq.w	801cc30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801ca92:	9c08      	ldr	r4, [sp, #32]
 801ca94:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801ca98:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801ca9c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801caa0:	f000 8150 	beq.w	801cd44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801caa4:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801caa8:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801caac:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cab0:	fb09 f000 	mul.w	r0, r9, r0
 801cab4:	fb0a fe0e 	mul.w	lr, sl, lr
 801cab8:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801cabc:	f100 0b20 	add.w	fp, r0, #32
 801cac0:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801cac4:	44ce      	add	lr, r9
 801cac6:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801caca:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801cace:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801cad2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801cad6:	ea4e 0909 	orr.w	r9, lr, r9
 801cada:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801cade:	8868      	ldrh	r0, [r5, #2]
 801cae0:	d019      	beq.n	801cb16 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801cae2:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801cae6:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801caea:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801caee:	fb08 f800 	mul.w	r8, r8, r0
 801caf2:	fb0a fe0e 	mul.w	lr, sl, lr
 801caf6:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801cafa:	f108 0b20 	add.w	fp, r8, #32
 801cafe:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801cb02:	4486      	add	lr, r0
 801cb04:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801cb08:	0a00      	lsrs	r0, r0, #8
 801cb0a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801cb0e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cb12:	ea4e 0000 	orr.w	r0, lr, r0
 801cb16:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801cb1a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801cb1e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801cb22:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801cb26:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cb2a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801cb2e:	ea4e 0909 	orr.w	r9, lr, r9
 801cb32:	ea4a 0000 	orr.w	r0, sl, r0
 801cb36:	f1bc 0f00 	cmp.w	ip, #0
 801cb3a:	f000 8105 	beq.w	801cd48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801cb3e:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801cb42:	3a01      	subs	r2, #1
 801cb44:	0052      	lsls	r2, r2, #1
 801cb46:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801cb48:	3202      	adds	r2, #2
 801cb4a:	2cff      	cmp	r4, #255	; 0xff
 801cb4c:	eb05 0e02 	add.w	lr, r5, r2
 801cb50:	5aaa      	ldrh	r2, [r5, r2]
 801cb52:	d018      	beq.n	801cb86 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801cb54:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801cb58:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cb5c:	fb04 fa02 	mul.w	sl, r4, r2
 801cb60:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801cb64:	fb08 f805 	mul.w	r8, r8, r5
 801cb68:	f10a 0520 	add.w	r5, sl, #32
 801cb6c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801cb70:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801cb74:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801cb78:	4442      	add	r2, r8
 801cb7a:	0a2d      	lsrs	r5, r5, #8
 801cb7c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801cb80:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cb84:	432a      	orrs	r2, r5
 801cb86:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801cb88:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801cb8c:	2cff      	cmp	r4, #255	; 0xff
 801cb8e:	d01a      	beq.n	801cbc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801cb90:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801cb94:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cb98:	fb04 fa05 	mul.w	sl, r4, r5
 801cb9c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801cba0:	fb08 f80e 	mul.w	r8, r8, lr
 801cba4:	f10a 0e20 	add.w	lr, sl, #32
 801cba8:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801cbac:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801cbb0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801cbb4:	4445      	add	r5, r8
 801cbb6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801cbba:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801cbbe:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801cbc2:	ea45 050e 	orr.w	r5, r5, lr
 801cbc6:	fb1c fe01 	smulbb	lr, ip, r1
 801cbca:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801cbce:	f1cc 0810 	rsb	r8, ip, #16
 801cbd2:	eba8 0801 	sub.w	r8, r8, r1
 801cbd6:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801cbda:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801cbde:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801cbe2:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801cbe6:	4341      	muls	r1, r0
 801cbe8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cbec:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801cbf0:	ea4a 0202 	orr.w	r2, sl, r2
 801cbf4:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801cbf8:	fb09 1108 	mla	r1, r9, r8, r1
 801cbfc:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801cc00:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801cc04:	fb0c 1102 	mla	r1, ip, r2, r1
 801cc08:	ea4b 0505 	orr.w	r5, fp, r5
 801cc0c:	fb0e 1e05 	mla	lr, lr, r5, r1
 801cc10:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801cc14:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801cc18:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cc1c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801cc20:	ea42 0e0e 	orr.w	lr, r2, lr
 801cc24:	fa1f f28e 	uxth.w	r2, lr
 801cc28:	2bff      	cmp	r3, #255	; 0xff
 801cc2a:	f040 80a1 	bne.w	801cd70 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801cc2e:	803a      	strh	r2, [r7, #0]
 801cc30:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801cc32:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801cc34:	4413      	add	r3, r2
 801cc36:	931d      	str	r3, [sp, #116]	; 0x74
 801cc38:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801cc3a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801cc3c:	441a      	add	r2, r3
 801cc3e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801cc40:	921e      	str	r2, [sp, #120]	; 0x78
 801cc42:	3b01      	subs	r3, #1
 801cc44:	3702      	adds	r7, #2
 801cc46:	930f      	str	r3, [sp, #60]	; 0x3c
 801cc48:	e6c9      	b.n	801c9de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801cc4a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801cc4c:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801cc4e:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 801cc50:	4433      	add	r3, r6
 801cc52:	931d      	str	r3, [sp, #116]	; 0x74
 801cc54:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801cc56:	441c      	add	r4, r3
 801cc58:	9b06      	ldr	r3, [sp, #24]
 801cc5a:	941e      	str	r4, [sp, #120]	; 0x78
 801cc5c:	3b01      	subs	r3, #1
 801cc5e:	9306      	str	r3, [sp, #24]
 801cc60:	9b07      	ldr	r3, [sp, #28]
 801cc62:	3302      	adds	r3, #2
 801cc64:	9307      	str	r3, [sp, #28]
 801cc66:	e698      	b.n	801c99a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801cc68:	d028      	beq.n	801ccbc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cc6a:	9b06      	ldr	r3, [sp, #24]
 801cc6c:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801cc6e:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801cc70:	3b01      	subs	r3, #1
 801cc72:	fb00 5003 	mla	r0, r0, r3, r5
 801cc76:	1400      	asrs	r0, r0, #16
 801cc78:	f53f aeac 	bmi.w	801c9d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cc7c:	3901      	subs	r1, #1
 801cc7e:	4288      	cmp	r0, r1
 801cc80:	f6bf aea8 	bge.w	801c9d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cc84:	9920      	ldr	r1, [sp, #128]	; 0x80
 801cc86:	981e      	ldr	r0, [sp, #120]	; 0x78
 801cc88:	fb01 0303 	mla	r3, r1, r3, r0
 801cc8c:	141b      	asrs	r3, r3, #16
 801cc8e:	f53f aea1 	bmi.w	801c9d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cc92:	3a01      	subs	r2, #1
 801cc94:	4293      	cmp	r3, r2
 801cc96:	f6bf ae9d 	bge.w	801c9d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cc9a:	9b06      	ldr	r3, [sp, #24]
 801cc9c:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801cca0:	930f      	str	r3, [sp, #60]	; 0x3c
 801cca2:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801cca6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801cca8:	2b00      	cmp	r3, #0
 801ccaa:	f300 80b6 	bgt.w	801ce1a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 801ccae:	9b06      	ldr	r3, [sp, #24]
 801ccb0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801ccb4:	9b07      	ldr	r3, [sp, #28]
 801ccb6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801ccba:	9307      	str	r3, [sp, #28]
 801ccbc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ccbe:	2b00      	cmp	r3, #0
 801ccc0:	f340 8218 	ble.w	801d0f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801ccc4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ccc8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801cccc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ccd0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ccd2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ccd6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ccda:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ccde:	eef0 6a62 	vmov.f32	s13, s5
 801cce2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cce6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ccea:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ccee:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 801ccf2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ccf6:	eef0 6a43 	vmov.f32	s13, s6
 801ccfa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ccfe:	ee12 2a90 	vmov	r2, s5
 801cd02:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cd06:	fb92 f3f3 	sdiv	r3, r2, r3
 801cd0a:	ee13 2a10 	vmov	r2, s6
 801cd0e:	931f      	str	r3, [sp, #124]	; 0x7c
 801cd10:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cd12:	fb92 f3f3 	sdiv	r3, r2, r3
 801cd16:	9320      	str	r3, [sp, #128]	; 0x80
 801cd18:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cd1a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801cd1c:	3b01      	subs	r3, #1
 801cd1e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cd22:	930e      	str	r3, [sp, #56]	; 0x38
 801cd24:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cd26:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 801cd2a:	bf08      	it	eq
 801cd2c:	4613      	moveq	r3, r2
 801cd2e:	9306      	str	r3, [sp, #24]
 801cd30:	eeb0 3a67 	vmov.f32	s6, s15
 801cd34:	eef0 2a47 	vmov.f32	s5, s14
 801cd38:	e621      	b.n	801c97e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801cd3a:	fb08 f505 	mul.w	r5, r8, r5
 801cd3e:	fb09 5303 	mla	r3, r9, r3, r5
 801cd42:	e6a1      	b.n	801ca88 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801cd44:	4681      	mov	r9, r0
 801cd46:	e6c8      	b.n	801cada <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801cd48:	f1c1 0210 	rsb	r2, r1, #16
 801cd4c:	4341      	muls	r1, r0
 801cd4e:	fb09 1902 	mla	r9, r9, r2, r1
 801cd52:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801cd56:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801cd5a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801cd5e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cd62:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801cd66:	ea42 0909 	orr.w	r9, r2, r9
 801cd6a:	fa1f f289 	uxth.w	r2, r9
 801cd6e:	e75b      	b.n	801cc28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801cd70:	f8b7 c000 	ldrh.w	ip, [r7]
 801cd74:	43db      	mvns	r3, r3
 801cd76:	ea4f 202c 	mov.w	r0, ip, asr #8
 801cd7a:	fa5f fe83 	uxtb.w	lr, r3
 801cd7e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801cd82:	fb00 f00e 	mul.w	r0, r0, lr
 801cd86:	1c41      	adds	r1, r0, #1
 801cd88:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801cd8c:	1211      	asrs	r1, r2, #8
 801cd8e:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801cd92:	f021 0107 	bic.w	r1, r1, #7
 801cd96:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801cd9a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801cd9e:	48d7      	ldr	r0, [pc, #860]	; (801d0fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801cda0:	fb05 f50e 	mul.w	r5, r5, lr
 801cda4:	b2c9      	uxtb	r1, r1
 801cda6:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801cdaa:	1c69      	adds	r1, r5, #1
 801cdac:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801cdb0:	10d1      	asrs	r1, r2, #3
 801cdb2:	f021 0103 	bic.w	r1, r1, #3
 801cdb6:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801cdba:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801cdbe:	b2db      	uxtb	r3, r3
 801cdc0:	00c9      	lsls	r1, r1, #3
 801cdc2:	fb03 f30e 	mul.w	r3, r3, lr
 801cdc6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801cdca:	4301      	orrs	r1, r0
 801cdcc:	1c58      	adds	r0, r3, #1
 801cdce:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801cdd2:	00d2      	lsls	r2, r2, #3
 801cdd4:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801cdd8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cddc:	430a      	orrs	r2, r1
 801cdde:	e726      	b.n	801cc2e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 801cde0:	f115 0e01 	adds.w	lr, r5, #1
 801cde4:	f53f af24 	bmi.w	801cc30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801cde8:	4572      	cmp	r2, lr
 801cdea:	f6ff af21 	blt.w	801cc30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801cdee:	f110 0e01 	adds.w	lr, r0, #1
 801cdf2:	f53f af1d 	bmi.w	801cc30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801cdf6:	4573      	cmp	r3, lr
 801cdf8:	f6ff af1a 	blt.w	801cc30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801cdfc:	b21b      	sxth	r3, r3
 801cdfe:	b212      	sxth	r2, r2
 801ce00:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801ce04:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801ce08:	9301      	str	r3, [sp, #4]
 801ce0a:	9200      	str	r2, [sp, #0]
 801ce0c:	4639      	mov	r1, r7
 801ce0e:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801ce12:	9811      	ldr	r0, [sp, #68]	; 0x44
 801ce14:	f7ff fc24 	bl	801c660 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801ce18:	e70a      	b.n	801cc30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801ce1a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801ce1c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801ce20:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801ce22:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801ce26:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ce28:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ce2c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801ce2e:	141f      	asrs	r7, r3, #16
 801ce30:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801ce32:	141b      	asrs	r3, r3, #16
 801ce34:	fb01 3707 	mla	r7, r1, r7, r3
 801ce38:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ce3a:	fa1f fc82 	uxth.w	ip, r2
 801ce3e:	eb03 0a07 	add.w	sl, r3, r7
 801ce42:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801ce46:	f813 9007 	ldrb.w	r9, [r3, r7]
 801ce4a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801ce4e:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801ce52:	b29b      	uxth	r3, r3
 801ce54:	2d00      	cmp	r5, #0
 801ce56:	f000 80fe 	beq.w	801d056 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 801ce5a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801ce5e:	940c      	str	r4, [sp, #48]	; 0x30
 801ce60:	eb0a 0b01 	add.w	fp, sl, r1
 801ce64:	fa1f fa85 	uxth.w	sl, r5
 801ce68:	fb0a fc0c 	mul.w	ip, sl, ip
 801ce6c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801ce70:	fa1f fa8a 	uxth.w	sl, sl
 801ce74:	eba0 000c 	sub.w	r0, r0, ip
 801ce78:	eba3 030a 	sub.w	r3, r3, sl
 801ce7c:	b280      	uxth	r0, r0
 801ce7e:	fb08 f000 	mul.w	r0, r8, r0
 801ce82:	b29b      	uxth	r3, r3
 801ce84:	fb09 0303 	mla	r3, r9, r3, r0
 801ce88:	980c      	ldr	r0, [sp, #48]	; 0x30
 801ce8a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801ce8e:	940d      	str	r4, [sp, #52]	; 0x34
 801ce90:	fb0a 3300 	mla	r3, sl, r0, r3
 801ce94:	fb0c 3304 	mla	r3, ip, r4, r3
 801ce98:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ce9c:	2b00      	cmp	r3, #0
 801ce9e:	f000 80cc 	beq.w	801d03a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801cea2:	9808      	ldr	r0, [sp, #32]
 801cea4:	9c08      	ldr	r4, [sp, #32]
 801cea6:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801ceaa:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801ceae:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801ceb2:	f000 80d5 	beq.w	801d060 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801ceb6:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801ceba:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801cebe:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801cec2:	fb09 f707 	mul.w	r7, r9, r7
 801cec6:	fb0a fc0c 	mul.w	ip, sl, ip
 801ceca:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801cece:	f107 0b20 	add.w	fp, r7, #32
 801ced2:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801ced6:	44cc      	add	ip, r9
 801ced8:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801cedc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801cee0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801cee4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801cee8:	ea4c 0909 	orr.w	r9, ip, r9
 801ceec:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801cef0:	8847      	ldrh	r7, [r0, #2]
 801cef2:	d019      	beq.n	801cf28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 801cef4:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801cef8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801cefc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801cf00:	fb08 f807 	mul.w	r8, r8, r7
 801cf04:	fb0a fc0c 	mul.w	ip, sl, ip
 801cf08:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801cf0c:	f108 0b20 	add.w	fp, r8, #32
 801cf10:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801cf14:	44bc      	add	ip, r7
 801cf16:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801cf1a:	0a3f      	lsrs	r7, r7, #8
 801cf1c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801cf20:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801cf24:	ea4c 0707 	orr.w	r7, ip, r7
 801cf28:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801cf2c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801cf30:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801cf34:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801cf38:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cf3c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801cf40:	ea4c 0909 	orr.w	r9, ip, r9
 801cf44:	ea4a 0707 	orr.w	r7, sl, r7
 801cf48:	2d00      	cmp	r5, #0
 801cf4a:	f000 808b 	beq.w	801d064 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801cf4e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801cf52:	3901      	subs	r1, #1
 801cf54:	0049      	lsls	r1, r1, #1
 801cf56:	3102      	adds	r1, #2
 801cf58:	eb00 0c01 	add.w	ip, r0, r1
 801cf5c:	5a41      	ldrh	r1, [r0, r1]
 801cf5e:	980c      	ldr	r0, [sp, #48]	; 0x30
 801cf60:	28ff      	cmp	r0, #255	; 0xff
 801cf62:	d019      	beq.n	801cf98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 801cf64:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801cf66:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801cf6a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801cf6e:	fb04 fa01 	mul.w	sl, r4, r1
 801cf72:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801cf76:	fb08 f800 	mul.w	r8, r8, r0
 801cf7a:	f10a 0020 	add.w	r0, sl, #32
 801cf7e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801cf82:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801cf86:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801cf8a:	4441      	add	r1, r8
 801cf8c:	0a00      	lsrs	r0, r0, #8
 801cf8e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801cf92:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cf96:	4301      	orrs	r1, r0
 801cf98:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801cf9a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801cf9e:	2cff      	cmp	r4, #255	; 0xff
 801cfa0:	d01a      	beq.n	801cfd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 801cfa2:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801cfa6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cfaa:	fb04 fa00 	mul.w	sl, r4, r0
 801cfae:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801cfb2:	fb08 f80c 	mul.w	r8, r8, ip
 801cfb6:	f10a 0c20 	add.w	ip, sl, #32
 801cfba:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801cfbe:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801cfc2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801cfc6:	4440      	add	r0, r8
 801cfc8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801cfcc:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801cfd0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801cfd4:	ea40 000c 	orr.w	r0, r0, ip
 801cfd8:	fb15 fc02 	smulbb	ip, r5, r2
 801cfdc:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801cfe0:	f1c5 0810 	rsb	r8, r5, #16
 801cfe4:	eba8 0802 	sub.w	r8, r8, r2
 801cfe8:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801cfec:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801cff0:	437a      	muls	r2, r7
 801cff2:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801cff6:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801cffa:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cffe:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801d002:	fb09 2208 	mla	r2, r9, r8, r2
 801d006:	ea4a 0101 	orr.w	r1, sl, r1
 801d00a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801d00e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d012:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d016:	fb05 2201 	mla	r2, r5, r1, r2
 801d01a:	ea4b 0000 	orr.w	r0, fp, r0
 801d01e:	fb0c 2200 	mla	r2, ip, r0, r2
 801d022:	0d57      	lsrs	r7, r2, #21
 801d024:	0952      	lsrs	r2, r2, #5
 801d026:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d02a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d02e:	433a      	orrs	r2, r7
 801d030:	2bff      	cmp	r3, #255	; 0xff
 801d032:	b292      	uxth	r2, r2
 801d034:	d127      	bne.n	801d086 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 801d036:	f8ae 2000 	strh.w	r2, [lr]
 801d03a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d03c:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801d03e:	4413      	add	r3, r2
 801d040:	931d      	str	r3, [sp, #116]	; 0x74
 801d042:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801d044:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d046:	441a      	add	r2, r3
 801d048:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d04a:	921e      	str	r2, [sp, #120]	; 0x78
 801d04c:	3b01      	subs	r3, #1
 801d04e:	f10e 0e02 	add.w	lr, lr, #2
 801d052:	930f      	str	r3, [sp, #60]	; 0x3c
 801d054:	e627      	b.n	801cca6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801d056:	fb08 f000 	mul.w	r0, r8, r0
 801d05a:	fb09 0303 	mla	r3, r9, r3, r0
 801d05e:	e71b      	b.n	801ce98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 801d060:	46b9      	mov	r9, r7
 801d062:	e743      	b.n	801ceec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 801d064:	f1c2 0110 	rsb	r1, r2, #16
 801d068:	437a      	muls	r2, r7
 801d06a:	fb09 2901 	mla	r9, r9, r1, r2
 801d06e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d072:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801d076:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801d07a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d07e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d082:	4302      	orrs	r2, r0
 801d084:	e7d4      	b.n	801d030 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 801d086:	f8be 7000 	ldrh.w	r7, [lr]
 801d08a:	4c1c      	ldr	r4, [pc, #112]	; (801d0fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801d08c:	43db      	mvns	r3, r3
 801d08e:	1238      	asrs	r0, r7, #8
 801d090:	fa5f fc83 	uxtb.w	ip, r3
 801d094:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d098:	10fd      	asrs	r5, r7, #3
 801d09a:	fb00 f00c 	mul.w	r0, r0, ip
 801d09e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d0a2:	fb05 f10c 	mul.w	r1, r5, ip
 801d0a6:	1c45      	adds	r5, r0, #1
 801d0a8:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801d0ac:	1215      	asrs	r5, r2, #8
 801d0ae:	f025 0507 	bic.w	r5, r5, #7
 801d0b2:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801d0b6:	1c4d      	adds	r5, r1, #1
 801d0b8:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801d0bc:	10d1      	asrs	r1, r2, #3
 801d0be:	f021 0103 	bic.w	r1, r1, #3
 801d0c2:	00fb      	lsls	r3, r7, #3
 801d0c4:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801d0c8:	b2db      	uxtb	r3, r3
 801d0ca:	b2c0      	uxtb	r0, r0
 801d0cc:	00c9      	lsls	r1, r1, #3
 801d0ce:	fb03 f30c 	mul.w	r3, r3, ip
 801d0d2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d0d6:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801d0da:	4308      	orrs	r0, r1
 801d0dc:	1c59      	adds	r1, r3, #1
 801d0de:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801d0e2:	00d2      	lsls	r2, r2, #3
 801d0e4:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801d0e8:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801d0ec:	4318      	orrs	r0, r3
 801d0ee:	f8ae 0000 	strh.w	r0, [lr]
 801d0f2:	e7a2      	b.n	801d03a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801d0f4:	b013      	add	sp, #76	; 0x4c
 801d0f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d0fa:	bf00      	nop
 801d0fc:	fffff800 	.word	0xfffff800

0801d100 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801d100:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d104:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 801d108:	fb05 4c03 	mla	ip, r5, r3, r4
 801d10c:	2d00      	cmp	r5, #0
 801d10e:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801d112:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 801d116:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801d11a:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801d11e:	8808      	ldrh	r0, [r1, #0]
 801d120:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801d124:	f2c0 80a7 	blt.w	801d276 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801d128:	45aa      	cmp	sl, r5
 801d12a:	f340 80a4 	ble.w	801d276 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801d12e:	2c00      	cmp	r4, #0
 801d130:	f2c0 809f 	blt.w	801d272 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801d134:	42a3      	cmp	r3, r4
 801d136:	f340 809c 	ble.w	801d272 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801d13a:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801d13e:	1c62      	adds	r2, r4, #1
 801d140:	f100 809c 	bmi.w	801d27c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d144:	4293      	cmp	r3, r2
 801d146:	f340 8099 	ble.w	801d27c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d14a:	f1b9 0f00 	cmp.w	r9, #0
 801d14e:	f000 8095 	beq.w	801d27c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d152:	f8be c002 	ldrh.w	ip, [lr, #2]
 801d156:	3501      	adds	r5, #1
 801d158:	f100 8094 	bmi.w	801d284 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d15c:	45aa      	cmp	sl, r5
 801d15e:	f340 8091 	ble.w	801d284 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d162:	2f00      	cmp	r7, #0
 801d164:	f000 808e 	beq.w	801d284 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d168:	2c00      	cmp	r4, #0
 801d16a:	f2c0 8089 	blt.w	801d280 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801d16e:	42a3      	cmp	r3, r4
 801d170:	f340 8086 	ble.w	801d280 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801d174:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801d178:	3401      	adds	r4, #1
 801d17a:	f100 8086 	bmi.w	801d28a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d17e:	42a3      	cmp	r3, r4
 801d180:	f340 8083 	ble.w	801d28a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d184:	f1b9 0f00 	cmp.w	r9, #0
 801d188:	d07f      	beq.n	801d28a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d18a:	3301      	adds	r3, #1
 801d18c:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801d190:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801d194:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d198:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801d19c:	fb19 fe07 	smulbb	lr, r9, r7
 801d1a0:	ea44 0808 	orr.w	r8, r4, r8
 801d1a4:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801d1a8:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801d1ac:	f1c7 0210 	rsb	r2, r7, #16
 801d1b0:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d1b4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d1b8:	ea44 0c0c 	orr.w	ip, r4, ip
 801d1bc:	eba2 0209 	sub.w	r2, r2, r9
 801d1c0:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801d1c4:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801d1c8:	fb04 f40c 	mul.w	r4, r4, ip
 801d1cc:	fb02 4808 	mla	r8, r2, r8, r4
 801d1d0:	041a      	lsls	r2, r3, #16
 801d1d2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d1d6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d1da:	4313      	orrs	r3, r2
 801d1dc:	042a      	lsls	r2, r5, #16
 801d1de:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d1e2:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801d1e6:	fb0e 8303 	mla	r3, lr, r3, r8
 801d1ea:	432a      	orrs	r2, r5
 801d1ec:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801d1f0:	fb07 3202 	mla	r2, r7, r2, r3
 801d1f4:	0d53      	lsrs	r3, r2, #21
 801d1f6:	0952      	lsrs	r2, r2, #5
 801d1f8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d1fc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d200:	431a      	orrs	r2, r3
 801d202:	b293      	uxth	r3, r2
 801d204:	b2b4      	uxth	r4, r6
 801d206:	1202      	asrs	r2, r0, #8
 801d208:	43f6      	mvns	r6, r6
 801d20a:	b2f6      	uxtb	r6, r6
 801d20c:	121d      	asrs	r5, r3, #8
 801d20e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801d212:	fb12 f206 	smulbb	r2, r2, r6
 801d216:	10c7      	asrs	r7, r0, #3
 801d218:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d21c:	00c0      	lsls	r0, r0, #3
 801d21e:	fb05 2504 	mla	r5, r5, r4, r2
 801d222:	b2c0      	uxtb	r0, r0
 801d224:	10da      	asrs	r2, r3, #3
 801d226:	00db      	lsls	r3, r3, #3
 801d228:	b2db      	uxtb	r3, r3
 801d22a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d22e:	fb10 f006 	smulbb	r0, r0, r6
 801d232:	b2ad      	uxth	r5, r5
 801d234:	fb03 0004 	mla	r0, r3, r4, r0
 801d238:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d23c:	fb17 f706 	smulbb	r7, r7, r6
 801d240:	b280      	uxth	r0, r0
 801d242:	1c6b      	adds	r3, r5, #1
 801d244:	fb02 7204 	mla	r2, r2, r4, r7
 801d248:	b292      	uxth	r2, r2
 801d24a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d24e:	1c43      	adds	r3, r0, #1
 801d250:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801d254:	1c50      	adds	r0, r2, #1
 801d256:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801d25a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d25e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d262:	0952      	lsrs	r2, r2, #5
 801d264:	432b      	orrs	r3, r5
 801d266:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d26a:	4313      	orrs	r3, r2
 801d26c:	800b      	strh	r3, [r1, #0]
 801d26e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d272:	4680      	mov	r8, r0
 801d274:	e763      	b.n	801d13e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801d276:	4684      	mov	ip, r0
 801d278:	4680      	mov	r8, r0
 801d27a:	e76c      	b.n	801d156 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801d27c:	4684      	mov	ip, r0
 801d27e:	e76a      	b.n	801d156 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801d280:	4605      	mov	r5, r0
 801d282:	e779      	b.n	801d178 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801d284:	4603      	mov	r3, r0
 801d286:	4605      	mov	r5, r0
 801d288:	e782      	b.n	801d190 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801d28a:	4603      	mov	r3, r0
 801d28c:	e780      	b.n	801d190 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801d28e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d28e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d292:	b093      	sub	sp, #76	; 0x4c
 801d294:	461d      	mov	r5, r3
 801d296:	9210      	str	r2, [sp, #64]	; 0x40
 801d298:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801d29a:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 801d29e:	920b      	str	r2, [sp, #44]	; 0x2c
 801d2a0:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 801d2a4:	910a      	str	r1, [sp, #40]	; 0x28
 801d2a6:	6859      	ldr	r1, [r3, #4]
 801d2a8:	681b      	ldr	r3, [r3, #0]
 801d2aa:	9011      	str	r0, [sp, #68]	; 0x44
 801d2ac:	fb01 2707 	mla	r7, r1, r7, r2
 801d2b0:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801d2b4:	9307      	str	r3, [sp, #28]
 801d2b6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d2b8:	681b      	ldr	r3, [r3, #0]
 801d2ba:	9309      	str	r3, [sp, #36]	; 0x24
 801d2bc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d2be:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801d2c2:	43db      	mvns	r3, r3
 801d2c4:	b2db      	uxtb	r3, r3
 801d2c6:	9308      	str	r3, [sp, #32]
 801d2c8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d2ca:	2b00      	cmp	r3, #0
 801d2cc:	dc03      	bgt.n	801d2d6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801d2ce:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d2d0:	2b00      	cmp	r3, #0
 801d2d2:	f340 8203 	ble.w	801d6dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801d2d6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d2d8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d2dc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d2e0:	1e48      	subs	r0, r1, #1
 801d2e2:	f102 3cff 	add.w	ip, r2, #4294967295
 801d2e6:	2d00      	cmp	r5, #0
 801d2e8:	f340 80da 	ble.w	801d4a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801d2ec:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801d2f0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d2f4:	d406      	bmi.n	801d304 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d2f6:	4586      	cmp	lr, r0
 801d2f8:	da04      	bge.n	801d304 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d2fa:	2b00      	cmp	r3, #0
 801d2fc:	db02      	blt.n	801d304 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d2fe:	4563      	cmp	r3, ip
 801d300:	f2c0 80cf 	blt.w	801d4a2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d304:	f11e 0e01 	adds.w	lr, lr, #1
 801d308:	f100 80c1 	bmi.w	801d48e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d30c:	4571      	cmp	r1, lr
 801d30e:	f2c0 80be 	blt.w	801d48e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d312:	3301      	adds	r3, #1
 801d314:	f100 80bb 	bmi.w	801d48e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d318:	429a      	cmp	r2, r3
 801d31a:	f2c0 80b8 	blt.w	801d48e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d31e:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801d322:	46a9      	mov	r9, r5
 801d324:	f1b9 0f00 	cmp.w	r9, #0
 801d328:	f340 80d8 	ble.w	801d4dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801d32c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d32e:	1421      	asrs	r1, r4, #16
 801d330:	ea4f 4026 	mov.w	r0, r6, asr #16
 801d334:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d338:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801d33c:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801d340:	f100 8111 	bmi.w	801d566 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d344:	f10e 3aff 	add.w	sl, lr, #4294967295
 801d348:	4551      	cmp	r1, sl
 801d34a:	f280 810c 	bge.w	801d566 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d34e:	2800      	cmp	r0, #0
 801d350:	f2c0 8109 	blt.w	801d566 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d354:	f103 3aff 	add.w	sl, r3, #4294967295
 801d358:	4550      	cmp	r0, sl
 801d35a:	f280 8104 	bge.w	801d566 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d35e:	fa0f f38e 	sxth.w	r3, lr
 801d362:	fb00 1103 	mla	r1, r0, r3, r1
 801d366:	9809      	ldr	r0, [sp, #36]	; 0x24
 801d368:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801d36c:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801d370:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801d374:	f1bc 0f00 	cmp.w	ip, #0
 801d378:	d007      	beq.n	801d38a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801d37a:	005b      	lsls	r3, r3, #1
 801d37c:	eb0a 0003 	add.w	r0, sl, r3
 801d380:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801d384:	930c      	str	r3, [sp, #48]	; 0x30
 801d386:	8843      	ldrh	r3, [r0, #2]
 801d388:	930d      	str	r3, [sp, #52]	; 0x34
 801d38a:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801d38e:	fb12 f30c 	smulbb	r3, r2, ip
 801d392:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801d396:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d39a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d39e:	10db      	asrs	r3, r3, #3
 801d3a0:	ea40 000e 	orr.w	r0, r0, lr
 801d3a4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d3a8:	f1cc 0e10 	rsb	lr, ip, #16
 801d3ac:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801d3b0:	ebae 0e02 	sub.w	lr, lr, r2
 801d3b4:	ea4a 0101 	orr.w	r1, sl, r1
 801d3b8:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801d3bc:	4351      	muls	r1, r2
 801d3be:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801d3c0:	9f08      	ldr	r7, [sp, #32]
 801d3c2:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801d3c6:	fb0e 1e00 	mla	lr, lr, r0, r1
 801d3ca:	0410      	lsls	r0, r2, #16
 801d3cc:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d3d0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d3d4:	4310      	orrs	r0, r2
 801d3d6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d3d8:	990c      	ldr	r1, [sp, #48]	; 0x30
 801d3da:	0412      	lsls	r2, r2, #16
 801d3dc:	fb03 e000 	mla	r0, r3, r0, lr
 801d3e0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d3e4:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801d3e8:	ea42 020e 	orr.w	r2, r2, lr
 801d3ec:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801d3f0:	fb03 0302 	mla	r3, r3, r2, r0
 801d3f4:	0d5a      	lsrs	r2, r3, #21
 801d3f6:	095b      	lsrs	r3, r3, #5
 801d3f8:	f8b8 0000 	ldrh.w	r0, [r8]
 801d3fc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d400:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d404:	4313      	orrs	r3, r2
 801d406:	b29b      	uxth	r3, r3
 801d408:	1201      	asrs	r1, r0, #8
 801d40a:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801d40e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801d412:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d416:	fb11 f107 	smulbb	r1, r1, r7
 801d41a:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801d41e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d422:	00c0      	lsls	r0, r0, #3
 801d424:	fb0c 1c02 	mla	ip, ip, r2, r1
 801d428:	b2c0      	uxtb	r0, r0
 801d42a:	10d9      	asrs	r1, r3, #3
 801d42c:	00db      	lsls	r3, r3, #3
 801d42e:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d432:	b2db      	uxtb	r3, r3
 801d434:	fb10 f007 	smulbb	r0, r0, r7
 801d438:	fa1f fc8c 	uxth.w	ip, ip
 801d43c:	fb03 0302 	mla	r3, r3, r2, r0
 801d440:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d444:	fb1e fe07 	smulbb	lr, lr, r7
 801d448:	fb01 e102 	mla	r1, r1, r2, lr
 801d44c:	b29a      	uxth	r2, r3
 801d44e:	f10c 0301 	add.w	r3, ip, #1
 801d452:	b289      	uxth	r1, r1
 801d454:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801d458:	1c53      	adds	r3, r2, #1
 801d45a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d45e:	1c4a      	adds	r2, r1, #1
 801d460:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d464:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d468:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d46c:	0949      	lsrs	r1, r1, #5
 801d46e:	ea43 030c 	orr.w	r3, r3, ip
 801d472:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d476:	430b      	orrs	r3, r1
 801d478:	f8a8 3000 	strh.w	r3, [r8]
 801d47c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d47e:	441c      	add	r4, r3
 801d480:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d482:	f108 0802 	add.w	r8, r8, #2
 801d486:	441e      	add	r6, r3
 801d488:	f109 39ff 	add.w	r9, r9, #4294967295
 801d48c:	e74a      	b.n	801d324 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d48e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d490:	441c      	add	r4, r3
 801d492:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d494:	441e      	add	r6, r3
 801d496:	9b07      	ldr	r3, [sp, #28]
 801d498:	3302      	adds	r3, #2
 801d49a:	3d01      	subs	r5, #1
 801d49c:	9307      	str	r3, [sp, #28]
 801d49e:	e722      	b.n	801d2e6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801d4a0:	d022      	beq.n	801d4e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801d4a2:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801d4a4:	1e6b      	subs	r3, r5, #1
 801d4a6:	fb00 4003 	mla	r0, r0, r3, r4
 801d4aa:	1400      	asrs	r0, r0, #16
 801d4ac:	f53f af37 	bmi.w	801d31e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d4b0:	3901      	subs	r1, #1
 801d4b2:	4288      	cmp	r0, r1
 801d4b4:	f6bf af33 	bge.w	801d31e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d4b8:	9920      	ldr	r1, [sp, #128]	; 0x80
 801d4ba:	fb01 6303 	mla	r3, r1, r3, r6
 801d4be:	141b      	asrs	r3, r3, #16
 801d4c0:	f53f af2d 	bmi.w	801d31e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d4c4:	3a01      	subs	r2, #1
 801d4c6:	4293      	cmp	r3, r2
 801d4c8:	f6bf af29 	bge.w	801d31e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d4cc:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801d4d0:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 801d4d4:	46a8      	mov	r8, r5
 801d4d6:	f1b8 0f00 	cmp.w	r8, #0
 801d4da:	dc5e      	bgt.n	801d59a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801d4dc:	9b07      	ldr	r3, [sp, #28]
 801d4de:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801d4e2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801d4e6:	9307      	str	r3, [sp, #28]
 801d4e8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d4ea:	2b00      	cmp	r3, #0
 801d4ec:	f340 80f6 	ble.w	801d6dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801d4f0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d4f4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d4f8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d4fc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d4fe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d502:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d506:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d50a:	eef0 6a62 	vmov.f32	s13, s5
 801d50e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d512:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d516:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d51a:	ee16 4a90 	vmov	r4, s13
 801d51e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d522:	eef0 6a43 	vmov.f32	s13, s6
 801d526:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d52a:	ee12 2a90 	vmov	r2, s5
 801d52e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d532:	fb92 f3f3 	sdiv	r3, r2, r3
 801d536:	ee13 2a10 	vmov	r2, s6
 801d53a:	931f      	str	r3, [sp, #124]	; 0x7c
 801d53c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d53e:	fb92 f3f3 	sdiv	r3, r2, r3
 801d542:	9320      	str	r3, [sp, #128]	; 0x80
 801d544:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d546:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d548:	3b01      	subs	r3, #1
 801d54a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d54e:	930a      	str	r3, [sp, #40]	; 0x28
 801d550:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d552:	ee16 6a90 	vmov	r6, s13
 801d556:	bf14      	ite	ne
 801d558:	461d      	movne	r5, r3
 801d55a:	4615      	moveq	r5, r2
 801d55c:	eeb0 3a67 	vmov.f32	s6, s15
 801d560:	eef0 2a47 	vmov.f32	s5, s14
 801d564:	e6b0      	b.n	801d2c8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801d566:	f111 0a01 	adds.w	sl, r1, #1
 801d56a:	d487      	bmi.n	801d47c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d56c:	45d6      	cmp	lr, sl
 801d56e:	db85      	blt.n	801d47c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d570:	f110 0a01 	adds.w	sl, r0, #1
 801d574:	d482      	bmi.n	801d47c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d576:	4553      	cmp	r3, sl
 801d578:	db80      	blt.n	801d47c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d57a:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801d57c:	9101      	str	r1, [sp, #4]
 801d57e:	b21b      	sxth	r3, r3
 801d580:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801d584:	9300      	str	r3, [sp, #0]
 801d586:	e9cd c704 	strd	ip, r7, [sp, #16]
 801d58a:	fa0f f38e 	sxth.w	r3, lr
 801d58e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d590:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d592:	4641      	mov	r1, r8
 801d594:	f7ff fdb4 	bl	801d100 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801d598:	e770      	b.n	801d47c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d59a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d59c:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801d59e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d5a2:	1430      	asrs	r0, r6, #16
 801d5a4:	1423      	asrs	r3, r4, #16
 801d5a6:	fb01 3000 	mla	r0, r1, r0, r3
 801d5aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d5ac:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801d5b0:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801d5b4:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801d5b8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d5bc:	8858      	ldrh	r0, [r3, #2]
 801d5be:	f1be 0f00 	cmp.w	lr, #0
 801d5c2:	d00b      	beq.n	801d5dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801d5c4:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801d5c8:	3901      	subs	r1, #1
 801d5ca:	0049      	lsls	r1, r1, #1
 801d5cc:	3102      	adds	r1, #2
 801d5ce:	eb03 0b01 	add.w	fp, r3, r1
 801d5d2:	5a5b      	ldrh	r3, [r3, r1]
 801d5d4:	930e      	str	r3, [sp, #56]	; 0x38
 801d5d6:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801d5da:	930f      	str	r3, [sp, #60]	; 0x3c
 801d5dc:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801d5e0:	fb12 f30e 	smulbb	r3, r2, lr
 801d5e4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d5e8:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801d5ec:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 801d5f0:	10db      	asrs	r3, r3, #3
 801d5f2:	ea41 010c 	orr.w	r1, r1, ip
 801d5f6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d5fa:	f1ce 0c10 	rsb	ip, lr, #16
 801d5fe:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d602:	ebac 0c02 	sub.w	ip, ip, r2
 801d606:	ea4b 0000 	orr.w	r0, fp, r0
 801d60a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801d60e:	4350      	muls	r0, r2
 801d610:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d612:	9f08      	ldr	r7, [sp, #32]
 801d614:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801d618:	fb0c 0c01 	mla	ip, ip, r1, r0
 801d61c:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801d620:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 801d624:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d626:	980e      	ldr	r0, [sp, #56]	; 0x38
 801d628:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d62c:	0412      	lsls	r2, r2, #16
 801d62e:	ea4b 0101 	orr.w	r1, fp, r1
 801d632:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d636:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d63a:	fb03 c101 	mla	r1, r3, r1, ip
 801d63e:	4302      	orrs	r2, r0
 801d640:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801d644:	fb03 1202 	mla	r2, r3, r2, r1
 801d648:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801d64c:	0952      	lsrs	r2, r2, #5
 801d64e:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 801d652:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801d656:	f8b9 2000 	ldrh.w	r2, [r9]
 801d65a:	ea4b 0303 	orr.w	r3, fp, r3
 801d65e:	b29b      	uxth	r3, r3
 801d660:	1211      	asrs	r1, r2, #8
 801d662:	1218      	asrs	r0, r3, #8
 801d664:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d668:	fb11 f107 	smulbb	r1, r1, r7
 801d66c:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801d670:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d674:	00d2      	lsls	r2, r2, #3
 801d676:	fb00 100a 	mla	r0, r0, sl, r1
 801d67a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801d67e:	10d9      	asrs	r1, r3, #3
 801d680:	b2d2      	uxtb	r2, r2
 801d682:	00db      	lsls	r3, r3, #3
 801d684:	fb1c fc07 	smulbb	ip, ip, r7
 801d688:	fb12 f207 	smulbb	r2, r2, r7
 801d68c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d690:	b2db      	uxtb	r3, r3
 801d692:	b280      	uxth	r0, r0
 801d694:	fb01 c10a 	mla	r1, r1, sl, ip
 801d698:	fb03 230a 	mla	r3, r3, sl, r2
 801d69c:	b29b      	uxth	r3, r3
 801d69e:	b289      	uxth	r1, r1
 801d6a0:	1c42      	adds	r2, r0, #1
 801d6a2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801d6a6:	f101 0c01 	add.w	ip, r1, #1
 801d6aa:	1c5a      	adds	r2, r3, #1
 801d6ac:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801d6b0:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801d6b4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d6b6:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801d6ba:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d6be:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801d6c2:	4310      	orrs	r0, r2
 801d6c4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801d6c8:	441c      	add	r4, r3
 801d6ca:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d6cc:	ea40 000c 	orr.w	r0, r0, ip
 801d6d0:	f829 0b02 	strh.w	r0, [r9], #2
 801d6d4:	441e      	add	r6, r3
 801d6d6:	f108 38ff 	add.w	r8, r8, #4294967295
 801d6da:	e6fc      	b.n	801d4d6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801d6dc:	b013      	add	sp, #76	; 0x4c
 801d6de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d6e2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801d6e2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801d6e6:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801d6ea:	fb0e 4703 	mla	r7, lr, r3, r4
 801d6ee:	f1be 0f00 	cmp.w	lr, #0
 801d6f2:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801d6f6:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 801d6fa:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 801d6fe:	8808      	ldrh	r0, [r1, #0]
 801d700:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801d704:	db60      	blt.n	801d7c8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801d706:	45f1      	cmp	r9, lr
 801d708:	dd5e      	ble.n	801d7c8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801d70a:	2c00      	cmp	r4, #0
 801d70c:	db5a      	blt.n	801d7c4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801d70e:	42a3      	cmp	r3, r4
 801d710:	dd58      	ble.n	801d7c4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801d712:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801d716:	1c62      	adds	r2, r4, #1
 801d718:	d459      	bmi.n	801d7ce <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801d71a:	4293      	cmp	r3, r2
 801d71c:	dd57      	ble.n	801d7ce <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801d71e:	2d00      	cmp	r5, #0
 801d720:	d055      	beq.n	801d7ce <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801d722:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801d726:	f11e 0e01 	adds.w	lr, lr, #1
 801d72a:	d454      	bmi.n	801d7d6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801d72c:	45f1      	cmp	r9, lr
 801d72e:	dd52      	ble.n	801d7d6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801d730:	2e00      	cmp	r6, #0
 801d732:	d050      	beq.n	801d7d6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801d734:	2c00      	cmp	r4, #0
 801d736:	db4c      	blt.n	801d7d2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801d738:	42a3      	cmp	r3, r4
 801d73a:	dd4a      	ble.n	801d7d2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801d73c:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801d740:	3401      	adds	r4, #1
 801d742:	d405      	bmi.n	801d750 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801d744:	42a3      	cmp	r3, r4
 801d746:	dd03      	ble.n	801d750 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801d748:	b115      	cbz	r5, 801d750 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801d74a:	3301      	adds	r3, #1
 801d74c:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801d750:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801d754:	fb15 f406 	smulbb	r4, r5, r6
 801d758:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801d75c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801d760:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d764:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801d768:	ea43 0c0c 	orr.w	ip, r3, ip
 801d76c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801d770:	f1c6 0310 	rsb	r3, r6, #16
 801d774:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801d778:	1b5b      	subs	r3, r3, r5
 801d77a:	ea4e 0707 	orr.w	r7, lr, r7
 801d77e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801d782:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801d786:	437d      	muls	r5, r7
 801d788:	fb03 5c0c 	mla	ip, r3, ip, r5
 801d78c:	0403      	lsls	r3, r0, #16
 801d78e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801d792:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d796:	4318      	orrs	r0, r3
 801d798:	0413      	lsls	r3, r2, #16
 801d79a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801d79e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d7a2:	4313      	orrs	r3, r2
 801d7a4:	fb04 c000 	mla	r0, r4, r0, ip
 801d7a8:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801d7ac:	fb06 0003 	mla	r0, r6, r3, r0
 801d7b0:	0d43      	lsrs	r3, r0, #21
 801d7b2:	0940      	lsrs	r0, r0, #5
 801d7b4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d7b8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d7bc:	4318      	orrs	r0, r3
 801d7be:	8008      	strh	r0, [r1, #0]
 801d7c0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801d7c4:	4684      	mov	ip, r0
 801d7c6:	e7a6      	b.n	801d716 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801d7c8:	4607      	mov	r7, r0
 801d7ca:	4684      	mov	ip, r0
 801d7cc:	e7ab      	b.n	801d726 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801d7ce:	4607      	mov	r7, r0
 801d7d0:	e7a9      	b.n	801d726 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801d7d2:	4602      	mov	r2, r0
 801d7d4:	e7b4      	b.n	801d740 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801d7d6:	4602      	mov	r2, r0
 801d7d8:	e7ba      	b.n	801d750 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801d7da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d7da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d7de:	b08f      	sub	sp, #60	; 0x3c
 801d7e0:	461d      	mov	r5, r3
 801d7e2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d7e4:	920c      	str	r2, [sp, #48]	; 0x30
 801d7e6:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 801d7ea:	9107      	str	r1, [sp, #28]
 801d7ec:	6859      	ldr	r1, [r3, #4]
 801d7ee:	681b      	ldr	r3, [r3, #0]
 801d7f0:	900d      	str	r0, [sp, #52]	; 0x34
 801d7f2:	fb01 2707 	mla	r7, r1, r7, r2
 801d7f6:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801d7fa:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d7fc:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 801d800:	f8d3 8000 	ldr.w	r8, [r3]
 801d804:	9b07      	ldr	r3, [sp, #28]
 801d806:	2b00      	cmp	r3, #0
 801d808:	dc03      	bgt.n	801d812 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801d80a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d80c:	2b00      	cmp	r3, #0
 801d80e:	f340 8181 	ble.w	801db14 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801d812:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d814:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d818:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d81c:	1e48      	subs	r0, r1, #1
 801d81e:	f102 3cff 	add.w	ip, r2, #4294967295
 801d822:	2d00      	cmp	r5, #0
 801d824:	f340 809b 	ble.w	801d95e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801d828:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801d82c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d830:	d406      	bmi.n	801d840 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d832:	4586      	cmp	lr, r0
 801d834:	da04      	bge.n	801d840 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d836:	2b00      	cmp	r3, #0
 801d838:	db02      	blt.n	801d840 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d83a:	4563      	cmp	r3, ip
 801d83c:	f2c0 8090 	blt.w	801d960 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801d840:	f11e 0e01 	adds.w	lr, lr, #1
 801d844:	f100 8084 	bmi.w	801d950 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801d848:	4571      	cmp	r1, lr
 801d84a:	f2c0 8081 	blt.w	801d950 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801d84e:	3301      	adds	r3, #1
 801d850:	d47e      	bmi.n	801d950 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801d852:	429a      	cmp	r2, r3
 801d854:	db7c      	blt.n	801d950 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801d856:	46aa      	mov	sl, r5
 801d858:	46b9      	mov	r9, r7
 801d85a:	f1ba 0f00 	cmp.w	sl, #0
 801d85e:	f340 8099 	ble.w	801d994 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801d862:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d864:	1421      	asrs	r1, r4, #16
 801d866:	ea4f 4026 	mov.w	r0, r6, asr #16
 801d86a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d86e:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801d872:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801d876:	f100 80d0 	bmi.w	801da1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801d87a:	f10e 3bff 	add.w	fp, lr, #4294967295
 801d87e:	4559      	cmp	r1, fp
 801d880:	f280 80cb 	bge.w	801da1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801d884:	2800      	cmp	r0, #0
 801d886:	f2c0 80c8 	blt.w	801da1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801d88a:	f103 3bff 	add.w	fp, r3, #4294967295
 801d88e:	4558      	cmp	r0, fp
 801d890:	f280 80c3 	bge.w	801da1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801d894:	fa0f fe8e 	sxth.w	lr, lr
 801d898:	fb00 110e 	mla	r1, r0, lr, r1
 801d89c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801d8a0:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801d8a4:	8841      	ldrh	r1, [r0, #2]
 801d8a6:	f1bc 0f00 	cmp.w	ip, #0
 801d8aa:	d00b      	beq.n	801d8c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801d8ac:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 801d8b0:	3b01      	subs	r3, #1
 801d8b2:	005b      	lsls	r3, r3, #1
 801d8b4:	3302      	adds	r3, #2
 801d8b6:	eb00 0e03 	add.w	lr, r0, r3
 801d8ba:	5ac3      	ldrh	r3, [r0, r3]
 801d8bc:	9308      	str	r3, [sp, #32]
 801d8be:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801d8c2:	9309      	str	r3, [sp, #36]	; 0x24
 801d8c4:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801d8c8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d8cc:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801d8d0:	ea40 000b 	orr.w	r0, r0, fp
 801d8d4:	fb12 f30c 	smulbb	r3, r2, ip
 801d8d8:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801d8dc:	10db      	asrs	r3, r3, #3
 801d8de:	f1cc 0e10 	rsb	lr, ip, #16
 801d8e2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d8e6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801d8ea:	ebae 0e02 	sub.w	lr, lr, r2
 801d8ee:	ea4b 0101 	orr.w	r1, fp, r1
 801d8f2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801d8f6:	4351      	muls	r1, r2
 801d8f8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d8fa:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801d8fe:	fb0e 1e00 	mla	lr, lr, r0, r1
 801d902:	0410      	lsls	r0, r2, #16
 801d904:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d908:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d90c:	4310      	orrs	r0, r2
 801d90e:	9a08      	ldr	r2, [sp, #32]
 801d910:	9908      	ldr	r1, [sp, #32]
 801d912:	0412      	lsls	r2, r2, #16
 801d914:	fb03 e000 	mla	r0, r3, r0, lr
 801d918:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d91c:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801d920:	ea42 020e 	orr.w	r2, r2, lr
 801d924:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801d928:	fb03 0302 	mla	r3, r3, r2, r0
 801d92c:	0d5a      	lsrs	r2, r3, #21
 801d92e:	095b      	lsrs	r3, r3, #5
 801d930:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d934:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d938:	4313      	orrs	r3, r2
 801d93a:	f8a9 3000 	strh.w	r3, [r9]
 801d93e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801d940:	441c      	add	r4, r3
 801d942:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d944:	f109 0902 	add.w	r9, r9, #2
 801d948:	441e      	add	r6, r3
 801d94a:	f10a 3aff 	add.w	sl, sl, #4294967295
 801d94e:	e784      	b.n	801d85a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801d950:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801d952:	441c      	add	r4, r3
 801d954:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d956:	3d01      	subs	r5, #1
 801d958:	441e      	add	r6, r3
 801d95a:	3702      	adds	r7, #2
 801d95c:	e761      	b.n	801d822 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801d95e:	d01d      	beq.n	801d99c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801d960:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801d962:	1e6b      	subs	r3, r5, #1
 801d964:	fb00 4003 	mla	r0, r0, r3, r4
 801d968:	1400      	asrs	r0, r0, #16
 801d96a:	f53f af74 	bmi.w	801d856 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d96e:	3901      	subs	r1, #1
 801d970:	4288      	cmp	r0, r1
 801d972:	f6bf af70 	bge.w	801d856 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d976:	991c      	ldr	r1, [sp, #112]	; 0x70
 801d978:	fb01 6303 	mla	r3, r1, r3, r6
 801d97c:	141b      	asrs	r3, r3, #16
 801d97e:	f53f af6a 	bmi.w	801d856 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d982:	3a01      	subs	r2, #1
 801d984:	4293      	cmp	r3, r2
 801d986:	f6bf af66 	bge.w	801d856 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d98a:	46a9      	mov	r9, r5
 801d98c:	46ba      	mov	sl, r7
 801d98e:	f1b9 0f00 	cmp.w	r9, #0
 801d992:	dc5a      	bgt.n	801da4a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 801d994:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801d998:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801d99c:	9b07      	ldr	r3, [sp, #28]
 801d99e:	2b00      	cmp	r3, #0
 801d9a0:	f340 80b8 	ble.w	801db14 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801d9a4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d9a8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d9ac:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d9b0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d9b2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d9b6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d9ba:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d9be:	eef0 6a62 	vmov.f32	s13, s5
 801d9c2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d9c6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d9ca:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d9ce:	ee16 4a90 	vmov	r4, s13
 801d9d2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d9d6:	eef0 6a43 	vmov.f32	s13, s6
 801d9da:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d9de:	ee12 2a90 	vmov	r2, s5
 801d9e2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d9e6:	fb92 f3f3 	sdiv	r3, r2, r3
 801d9ea:	ee13 2a10 	vmov	r2, s6
 801d9ee:	931b      	str	r3, [sp, #108]	; 0x6c
 801d9f0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d9f2:	fb92 f3f3 	sdiv	r3, r2, r3
 801d9f6:	931c      	str	r3, [sp, #112]	; 0x70
 801d9f8:	9b07      	ldr	r3, [sp, #28]
 801d9fa:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d9fc:	3b01      	subs	r3, #1
 801d9fe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801da02:	9307      	str	r3, [sp, #28]
 801da04:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801da06:	ee16 6a90 	vmov	r6, s13
 801da0a:	bf14      	ite	ne
 801da0c:	461d      	movne	r5, r3
 801da0e:	4615      	moveq	r5, r2
 801da10:	eeb0 3a67 	vmov.f32	s6, s15
 801da14:	eef0 2a47 	vmov.f32	s5, s14
 801da18:	e6f4      	b.n	801d804 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801da1a:	f111 0b01 	adds.w	fp, r1, #1
 801da1e:	d48e      	bmi.n	801d93e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801da20:	45de      	cmp	lr, fp
 801da22:	db8c      	blt.n	801d93e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801da24:	f110 0b01 	adds.w	fp, r0, #1
 801da28:	d489      	bmi.n	801d93e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801da2a:	455b      	cmp	r3, fp
 801da2c:	db87      	blt.n	801d93e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801da2e:	b21b      	sxth	r3, r3
 801da30:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801da34:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801da38:	9300      	str	r3, [sp, #0]
 801da3a:	4642      	mov	r2, r8
 801da3c:	fa0f f38e 	sxth.w	r3, lr
 801da40:	4649      	mov	r1, r9
 801da42:	980d      	ldr	r0, [sp, #52]	; 0x34
 801da44:	f7ff fe4d 	bl	801d6e2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801da48:	e779      	b.n	801d93e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801da4a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801da4c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801da50:	1420      	asrs	r0, r4, #16
 801da52:	1431      	asrs	r1, r6, #16
 801da54:	fb03 0101 	mla	r1, r3, r1, r0
 801da58:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801da5c:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801da60:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801da64:	8841      	ldrh	r1, [r0, #2]
 801da66:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801da6a:	f1be 0f00 	cmp.w	lr, #0
 801da6e:	d00b      	beq.n	801da88 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801da70:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 801da74:	3b01      	subs	r3, #1
 801da76:	005b      	lsls	r3, r3, #1
 801da78:	3302      	adds	r3, #2
 801da7a:	eb00 0b03 	add.w	fp, r0, r3
 801da7e:	5ac3      	ldrh	r3, [r0, r3]
 801da80:	930a      	str	r3, [sp, #40]	; 0x28
 801da82:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801da86:	930b      	str	r3, [sp, #44]	; 0x2c
 801da88:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801da8c:	fb12 f30e 	smulbb	r3, r2, lr
 801da90:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801da94:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801da98:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801da9c:	10db      	asrs	r3, r3, #3
 801da9e:	ea40 000c 	orr.w	r0, r0, ip
 801daa2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801daa6:	f1ce 0c10 	rsb	ip, lr, #16
 801daaa:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801daae:	ebac 0c02 	sub.w	ip, ip, r2
 801dab2:	ea4b 0101 	orr.w	r1, fp, r1
 801dab6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801daba:	4351      	muls	r1, r2
 801dabc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801dabe:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801dac2:	fb0c 1c00 	mla	ip, ip, r0, r1
 801dac6:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801daca:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 801dace:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801dad0:	990a      	ldr	r1, [sp, #40]	; 0x28
 801dad2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801dad6:	0412      	lsls	r2, r2, #16
 801dad8:	ea4b 0000 	orr.w	r0, fp, r0
 801dadc:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801dae0:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 801dae4:	fb03 c000 	mla	r0, r3, r0, ip
 801dae8:	ea42 0b0b 	orr.w	fp, r2, fp
 801daec:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801daf0:	fb03 000b 	mla	r0, r3, fp, r0
 801daf4:	0d43      	lsrs	r3, r0, #21
 801daf6:	0940      	lsrs	r0, r0, #5
 801daf8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801dafc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801db00:	4318      	orrs	r0, r3
 801db02:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801db04:	f82a 0b02 	strh.w	r0, [sl], #2
 801db08:	441c      	add	r4, r3
 801db0a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801db0c:	f109 39ff 	add.w	r9, r9, #4294967295
 801db10:	441e      	add	r6, r3
 801db12:	e73c      	b.n	801d98e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801db14:	b00f      	add	sp, #60	; 0x3c
 801db16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801db1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801db1a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801db1e:	b085      	sub	sp, #20
 801db20:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801db24:	9102      	str	r1, [sp, #8]
 801db26:	2c00      	cmp	r4, #0
 801db28:	fb04 7103 	mla	r1, r4, r3, r7
 801db2c:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801db30:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801db34:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801db38:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801db3c:	f2c0 811b 	blt.w	801dd76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801db40:	45a6      	cmp	lr, r4
 801db42:	f340 8118 	ble.w	801dd76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801db46:	2f00      	cmp	r7, #0
 801db48:	f2c0 8113 	blt.w	801dd72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801db4c:	42bb      	cmp	r3, r7
 801db4e:	f340 8110 	ble.w	801dd72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801db52:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801db56:	1c7a      	adds	r2, r7, #1
 801db58:	f100 8110 	bmi.w	801dd7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801db5c:	4293      	cmp	r3, r2
 801db5e:	f340 810d 	ble.w	801dd7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801db62:	2e00      	cmp	r6, #0
 801db64:	f000 810c 	beq.w	801dd80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801db68:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801db6c:	3401      	adds	r4, #1
 801db6e:	f100 810b 	bmi.w	801dd88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801db72:	45a6      	cmp	lr, r4
 801db74:	f340 8108 	ble.w	801dd88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801db78:	2800      	cmp	r0, #0
 801db7a:	f000 8108 	beq.w	801dd8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801db7e:	2f00      	cmp	r7, #0
 801db80:	f2c0 8100 	blt.w	801dd84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801db84:	42bb      	cmp	r3, r7
 801db86:	f340 80fd 	ble.w	801dd84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801db8a:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801db8e:	3701      	adds	r7, #1
 801db90:	f100 8100 	bmi.w	801dd94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801db94:	42bb      	cmp	r3, r7
 801db96:	f340 80fd 	ble.w	801dd94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801db9a:	2e00      	cmp	r6, #0
 801db9c:	f000 80fc 	beq.w	801dd98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801dba0:	3301      	adds	r3, #1
 801dba2:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801dba6:	b2b6      	uxth	r6, r6
 801dba8:	b280      	uxth	r0, r0
 801dbaa:	fb00 fe06 	mul.w	lr, r0, r6
 801dbae:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801dbb2:	0136      	lsls	r6, r6, #4
 801dbb4:	eba6 070e 	sub.w	r7, r6, lr
 801dbb8:	b280      	uxth	r0, r0
 801dbba:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801dbbe:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801dbc2:	b2bf      	uxth	r7, r7
 801dbc4:	1a1b      	subs	r3, r3, r0
 801dbc6:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801dbca:	b29b      	uxth	r3, r3
 801dbcc:	fb0a f607 	mul.w	r6, sl, r7
 801dbd0:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801dbd4:	fb0b 6603 	mla	r6, fp, r3, r6
 801dbd8:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801dbdc:	fb00 6609 	mla	r6, r0, r9, r6
 801dbe0:	fb0e 6608 	mla	r6, lr, r8, r6
 801dbe4:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801dbe8:	9600      	str	r6, [sp, #0]
 801dbea:	2e00      	cmp	r6, #0
 801dbec:	f000 80be 	beq.w	801dd6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801dbf0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801dbf4:	fb0b fc0c 	mul.w	ip, fp, ip
 801dbf8:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801dbfc:	fb0b f505 	mul.w	r5, fp, r5
 801dc00:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801dc04:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801dc08:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801dc0c:	44dc      	add	ip, fp
 801dc0e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dc12:	9501      	str	r5, [sp, #4]
 801dc14:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801dc18:	9503      	str	r5, [sp, #12]
 801dc1a:	9d01      	ldr	r5, [sp, #4]
 801dc1c:	9e02      	ldr	r6, [sp, #8]
 801dc1e:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801dc22:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801dc26:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801dc2a:	fb0a fc0c 	mul.w	ip, sl, ip
 801dc2e:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801dc32:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801dc36:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801dc3a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801dc3e:	4465      	add	r5, ip
 801dc40:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801dc44:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801dc48:	fb09 fc0c 	mul.w	ip, r9, ip
 801dc4c:	fb09 f904 	mul.w	r9, r9, r4
 801dc50:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801dc54:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801dc58:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801dc5c:	fb08 f404 	mul.w	r4, r8, r4
 801dc60:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801dc64:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801dc68:	fb08 f802 	mul.w	r8, r8, r2
 801dc6c:	fb0a fa01 	mul.w	sl, sl, r1
 801dc70:	0a22      	lsrs	r2, r4, #8
 801dc72:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801dc76:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801dc7a:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801dc7e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801dc82:	4414      	add	r4, r2
 801dc84:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801dc88:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801dc8c:	0a2d      	lsrs	r5, r5, #8
 801dc8e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801dc92:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801dc96:	9a03      	ldr	r2, [sp, #12]
 801dc98:	8836      	ldrh	r6, [r6, #0]
 801dc9a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801dc9e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801dca2:	437d      	muls	r5, r7
 801dca4:	4461      	add	r1, ip
 801dca6:	0a24      	lsrs	r4, r4, #8
 801dca8:	fb02 5503 	mla	r5, r2, r3, r5
 801dcac:	0a09      	lsrs	r1, r1, #8
 801dcae:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801dcb2:	fb04 540e 	mla	r4, r4, lr, r5
 801dcb6:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801dcba:	fb01 4100 	mla	r1, r1, r0, r4
 801dcbe:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801dcc2:	0a09      	lsrs	r1, r1, #8
 801dcc4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801dcc8:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801dccc:	fb07 f70a 	mul.w	r7, r7, sl
 801dcd0:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801dcd4:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801dcd8:	fb03 7101 	mla	r1, r3, r1, r7
 801dcdc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801dce0:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801dce4:	fb0e 1e08 	mla	lr, lr, r8, r1
 801dce8:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801dcec:	fb00 e101 	mla	r1, r0, r1, lr
 801dcf0:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801dcf4:	9a00      	ldr	r2, [sp, #0]
 801dcf6:	b287      	uxth	r7, r0
 801dcf8:	437a      	muls	r2, r7
 801dcfa:	0a09      	lsrs	r1, r1, #8
 801dcfc:	1c53      	adds	r3, r2, #1
 801dcfe:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801dd02:	4321      	orrs	r1, r4
 801dd04:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801dd08:	1235      	asrs	r5, r6, #8
 801dd0a:	0c0a      	lsrs	r2, r1, #16
 801dd0c:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801dd10:	b2db      	uxtb	r3, r3
 801dd12:	fb12 f207 	smulbb	r2, r2, r7
 801dd16:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801dd1a:	fb05 2503 	mla	r5, r5, r3, r2
 801dd1e:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801dd22:	10f2      	asrs	r2, r6, #3
 801dd24:	b2c8      	uxtb	r0, r1
 801dd26:	00f6      	lsls	r6, r6, #3
 801dd28:	fb14 f407 	smulbb	r4, r4, r7
 801dd2c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801dd30:	b2f6      	uxtb	r6, r6
 801dd32:	fb10 f007 	smulbb	r0, r0, r7
 801dd36:	fb02 4203 	mla	r2, r2, r3, r4
 801dd3a:	b2ad      	uxth	r5, r5
 801dd3c:	fb06 0303 	mla	r3, r6, r3, r0
 801dd40:	b299      	uxth	r1, r3
 801dd42:	b294      	uxth	r4, r2
 801dd44:	1c6b      	adds	r3, r5, #1
 801dd46:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801dd4a:	1c62      	adds	r2, r4, #1
 801dd4c:	1c4b      	adds	r3, r1, #1
 801dd4e:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801dd52:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801dd56:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801dd5a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801dd5e:	0952      	lsrs	r2, r2, #5
 801dd60:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801dd64:	432b      	orrs	r3, r5
 801dd66:	4313      	orrs	r3, r2
 801dd68:	9a02      	ldr	r2, [sp, #8]
 801dd6a:	8013      	strh	r3, [r2, #0]
 801dd6c:	b005      	add	sp, #20
 801dd6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dd72:	2500      	movs	r5, #0
 801dd74:	e6ef      	b.n	801db56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801dd76:	2100      	movs	r1, #0
 801dd78:	460d      	mov	r5, r1
 801dd7a:	e6f7      	b.n	801db6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801dd7c:	2100      	movs	r1, #0
 801dd7e:	e6f5      	b.n	801db6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801dd80:	4631      	mov	r1, r6
 801dd82:	e6f3      	b.n	801db6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801dd84:	2400      	movs	r4, #0
 801dd86:	e702      	b.n	801db8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801dd88:	2200      	movs	r2, #0
 801dd8a:	4614      	mov	r4, r2
 801dd8c:	e70b      	b.n	801dba6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801dd8e:	4602      	mov	r2, r0
 801dd90:	4604      	mov	r4, r0
 801dd92:	e708      	b.n	801dba6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801dd94:	2200      	movs	r2, #0
 801dd96:	e706      	b.n	801dba6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801dd98:	4632      	mov	r2, r6
 801dd9a:	e704      	b.n	801dba6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801dd9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dd9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dda0:	b09d      	sub	sp, #116	; 0x74
 801dda2:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801dda6:	9219      	str	r2, [sp, #100]	; 0x64
 801dda8:	9307      	str	r3, [sp, #28]
 801ddaa:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801ddac:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 801ddb0:	931a      	str	r3, [sp, #104]	; 0x68
 801ddb2:	9117      	str	r1, [sp, #92]	; 0x5c
 801ddb4:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801ddb8:	901b      	str	r0, [sp, #108]	; 0x6c
 801ddba:	6850      	ldr	r0, [r2, #4]
 801ddbc:	6812      	ldr	r2, [r2, #0]
 801ddbe:	fb00 1303 	mla	r3, r0, r3, r1
 801ddc2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ddc6:	930a      	str	r3, [sp, #40]	; 0x28
 801ddc8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801ddca:	681b      	ldr	r3, [r3, #0]
 801ddcc:	9310      	str	r3, [sp, #64]	; 0x40
 801ddce:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801ddd2:	930b      	str	r3, [sp, #44]	; 0x2c
 801ddd4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801ddd6:	2b00      	cmp	r3, #0
 801ddd8:	dc03      	bgt.n	801dde2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801ddda:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801dddc:	2b00      	cmp	r3, #0
 801ddde:	f340 8375 	ble.w	801e4cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801dde2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801dde4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801dde8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ddec:	1e48      	subs	r0, r1, #1
 801ddee:	1e57      	subs	r7, r2, #1
 801ddf0:	9b07      	ldr	r3, [sp, #28]
 801ddf2:	2b00      	cmp	r3, #0
 801ddf4:	f340 818e 	ble.w	801e114 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801ddf8:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801ddfc:	ea4f 4326 	mov.w	r3, r6, asr #16
 801de00:	d406      	bmi.n	801de10 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801de02:	4584      	cmp	ip, r0
 801de04:	da04      	bge.n	801de10 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801de06:	2b00      	cmp	r3, #0
 801de08:	db02      	blt.n	801de10 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801de0a:	42bb      	cmp	r3, r7
 801de0c:	f2c0 8183 	blt.w	801e116 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801de10:	f11c 0c01 	adds.w	ip, ip, #1
 801de14:	f100 8173 	bmi.w	801e0fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801de18:	4561      	cmp	r1, ip
 801de1a:	f2c0 8170 	blt.w	801e0fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801de1e:	3301      	adds	r3, #1
 801de20:	f100 816d 	bmi.w	801e0fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801de24:	429a      	cmp	r2, r3
 801de26:	f2c0 816a 	blt.w	801e0fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801de2a:	9b07      	ldr	r3, [sp, #28]
 801de2c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801de2e:	9318      	str	r3, [sp, #96]	; 0x60
 801de30:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801de32:	2b00      	cmp	r3, #0
 801de34:	f340 818c 	ble.w	801e150 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801de38:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801de3a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801de3c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801de40:	689b      	ldr	r3, [r3, #8]
 801de42:	1422      	asrs	r2, r4, #16
 801de44:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801de48:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801de4c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801de50:	f100 81cd 	bmi.w	801e1ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801de54:	f103 38ff 	add.w	r8, r3, #4294967295
 801de58:	4542      	cmp	r2, r8
 801de5a:	f280 81c8 	bge.w	801e1ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801de5e:	f1bc 0f00 	cmp.w	ip, #0
 801de62:	f2c0 81c4 	blt.w	801e1ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801de66:	f10e 38ff 	add.w	r8, lr, #4294967295
 801de6a:	45c4      	cmp	ip, r8
 801de6c:	f280 81bf 	bge.w	801e1ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801de70:	b21b      	sxth	r3, r3
 801de72:	fb0c 2203 	mla	r2, ip, r3, r2
 801de76:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801de78:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801de7c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801de80:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801de84:	2800      	cmp	r0, #0
 801de86:	f000 81a9 	beq.w	801e1dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801de8a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801de8e:	950c      	str	r5, [sp, #48]	; 0x30
 801de90:	0e2d      	lsrs	r5, r5, #24
 801de92:	9513      	str	r5, [sp, #76]	; 0x4c
 801de94:	b181      	cbz	r1, 801deb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801de96:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801de9a:	3b01      	subs	r3, #1
 801de9c:	009b      	lsls	r3, r3, #2
 801de9e:	3304      	adds	r3, #4
 801dea0:	eb08 0c03 	add.w	ip, r8, r3
 801dea4:	f858 3003 	ldr.w	r3, [r8, r3]
 801dea8:	9308      	str	r3, [sp, #32]
 801deaa:	0e1b      	lsrs	r3, r3, #24
 801deac:	9311      	str	r3, [sp, #68]	; 0x44
 801deae:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801deb2:	930d      	str	r3, [sp, #52]	; 0x34
 801deb4:	0e1b      	lsrs	r3, r3, #24
 801deb6:	9314      	str	r3, [sp, #80]	; 0x50
 801deb8:	b280      	uxth	r0, r0
 801deba:	b289      	uxth	r1, r1
 801debc:	fb00 f901 	mul.w	r9, r0, r1
 801dec0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801dec4:	0100      	lsls	r0, r0, #4
 801dec6:	eba0 0809 	sub.w	r8, r0, r9
 801deca:	b289      	uxth	r1, r1
 801decc:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801ded0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ded2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ded4:	fa1f f888 	uxth.w	r8, r8
 801ded8:	1a5b      	subs	r3, r3, r1
 801deda:	b29b      	uxth	r3, r3
 801dedc:	fb08 f000 	mul.w	r0, r8, r0
 801dee0:	fb03 000e 	mla	r0, r3, lr, r0
 801dee4:	fb01 0005 	mla	r0, r1, r5, r0
 801dee8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801deea:	fb09 0005 	mla	r0, r9, r5, r0
 801deee:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801def2:	2800      	cmp	r0, #0
 801def4:	f000 80fa 	beq.w	801e0ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801def8:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801defc:	d01b      	beq.n	801df36 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801defe:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801df02:	fb0e fa0a 	mul.w	sl, lr, sl
 801df06:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801df0a:	fb0e fe02 	mul.w	lr, lr, r2
 801df0e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801df12:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801df16:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801df1a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801df1e:	4452      	add	r2, sl
 801df20:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801df24:	0a12      	lsrs	r2, r2, #8
 801df26:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801df2a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801df2e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801df32:	ea42 020c 	orr.w	r2, r2, ip
 801df36:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801df38:	2dff      	cmp	r5, #255	; 0xff
 801df3a:	d021      	beq.n	801df80 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801df3c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801df3e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801df42:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801df44:	fb05 fb0b 	mul.w	fp, r5, fp
 801df48:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801df4a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801df4e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801df50:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801df54:	fb05 fa0a 	mul.w	sl, r5, sl
 801df58:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801df5c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801df60:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801df64:	44de      	add	lr, fp
 801df66:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801df6a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801df6e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801df72:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801df76:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801df7a:	ea4e 050a 	orr.w	r5, lr, sl
 801df7e:	950c      	str	r5, [sp, #48]	; 0x30
 801df80:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801df82:	2dff      	cmp	r5, #255	; 0xff
 801df84:	d021      	beq.n	801dfca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801df86:	9d08      	ldr	r5, [sp, #32]
 801df88:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801df8c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801df8e:	fb05 fb0b 	mul.w	fp, r5, fp
 801df92:	9d08      	ldr	r5, [sp, #32]
 801df94:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801df98:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801df9a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801df9e:	fb05 fa0a 	mul.w	sl, r5, sl
 801dfa2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801dfa6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801dfaa:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801dfae:	44de      	add	lr, fp
 801dfb0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801dfb4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801dfb8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801dfbc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801dfc0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801dfc4:	ea4e 050a 	orr.w	r5, lr, sl
 801dfc8:	9508      	str	r5, [sp, #32]
 801dfca:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801dfcc:	2dff      	cmp	r5, #255	; 0xff
 801dfce:	d021      	beq.n	801e014 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801dfd0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801dfd2:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801dfd6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801dfd8:	fb05 fb0b 	mul.w	fp, r5, fp
 801dfdc:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801dfde:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801dfe2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801dfe4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801dfe8:	fb05 fa0a 	mul.w	sl, r5, sl
 801dfec:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801dff0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801dff4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801dff8:	44de      	add	lr, fp
 801dffa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801dffe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e002:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e006:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e00a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e00e:	ea4e 050a 	orr.w	r5, lr, sl
 801e012:	950d      	str	r5, [sp, #52]	; 0x34
 801e014:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e016:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e01a:	9d08      	ldr	r5, [sp, #32]
 801e01c:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801e020:	fb08 fc0c 	mul.w	ip, r8, ip
 801e024:	fb03 cc0e 	mla	ip, r3, lr, ip
 801e028:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801e02c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e02e:	fb01 cc0e 	mla	ip, r1, lr, ip
 801e032:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801e036:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e038:	fb09 cc0e 	mla	ip, r9, lr, ip
 801e03c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801e040:	fb08 f80e 	mul.w	r8, r8, lr
 801e044:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e048:	fb03 8202 	mla	r2, r3, r2, r8
 801e04c:	9b08      	ldr	r3, [sp, #32]
 801e04e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e050:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 801e054:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e056:	fb01 220a 	mla	r2, r1, sl, r2
 801e05a:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 801e05e:	fb09 2901 	mla	r9, r9, r1, r2
 801e062:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e064:	883b      	ldrh	r3, [r7, #0]
 801e066:	4342      	muls	r2, r0
 801e068:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e06c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e070:	1c50      	adds	r0, r2, #1
 801e072:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e076:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801e07a:	ea4c 0c09 	orr.w	ip, ip, r9
 801e07e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801e082:	1219      	asrs	r1, r3, #8
 801e084:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801e088:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801e08c:	b2c0      	uxtb	r0, r0
 801e08e:	fb12 f205 	smulbb	r2, r2, r5
 801e092:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e096:	fb01 2100 	mla	r1, r1, r0, r2
 801e09a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801e09e:	10da      	asrs	r2, r3, #3
 801e0a0:	fa5f fc8c 	uxtb.w	ip, ip
 801e0a4:	00db      	lsls	r3, r3, #3
 801e0a6:	fb1c fc05 	smulbb	ip, ip, r5
 801e0aa:	b2db      	uxtb	r3, r3
 801e0ac:	b289      	uxth	r1, r1
 801e0ae:	fb03 c300 	mla	r3, r3, r0, ip
 801e0b2:	fa1f fc83 	uxth.w	ip, r3
 801e0b6:	1c4b      	adds	r3, r1, #1
 801e0b8:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801e0bc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e0c0:	fb1e fe05 	smulbb	lr, lr, r5
 801e0c4:	f10c 0301 	add.w	r3, ip, #1
 801e0c8:	fb02 e200 	mla	r2, r2, r0, lr
 801e0cc:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801e0d0:	b292      	uxth	r2, r2
 801e0d2:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801e0d6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e0da:	430b      	orrs	r3, r1
 801e0dc:	1c51      	adds	r1, r2, #1
 801e0de:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e0e2:	0952      	lsrs	r2, r2, #5
 801e0e4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e0e8:	4313      	orrs	r3, r2
 801e0ea:	803b      	strh	r3, [r7, #0]
 801e0ec:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801e0ee:	441c      	add	r4, r3
 801e0f0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e0f2:	441e      	add	r6, r3
 801e0f4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e0f6:	3b01      	subs	r3, #1
 801e0f8:	3702      	adds	r7, #2
 801e0fa:	9318      	str	r3, [sp, #96]	; 0x60
 801e0fc:	e698      	b.n	801de30 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e0fe:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801e100:	441c      	add	r4, r3
 801e102:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e104:	441e      	add	r6, r3
 801e106:	9b07      	ldr	r3, [sp, #28]
 801e108:	3b01      	subs	r3, #1
 801e10a:	9307      	str	r3, [sp, #28]
 801e10c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e10e:	3302      	adds	r3, #2
 801e110:	930a      	str	r3, [sp, #40]	; 0x28
 801e112:	e66d      	b.n	801ddf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801e114:	d023      	beq.n	801e15e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801e116:	9b07      	ldr	r3, [sp, #28]
 801e118:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801e11a:	3b01      	subs	r3, #1
 801e11c:	fb00 4003 	mla	r0, r0, r3, r4
 801e120:	1400      	asrs	r0, r0, #16
 801e122:	f53f ae82 	bmi.w	801de2a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e126:	3901      	subs	r1, #1
 801e128:	4288      	cmp	r0, r1
 801e12a:	f6bf ae7e 	bge.w	801de2a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e12e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801e130:	fb01 6303 	mla	r3, r1, r3, r6
 801e134:	141b      	asrs	r3, r3, #16
 801e136:	f53f ae78 	bmi.w	801de2a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e13a:	3a01      	subs	r2, #1
 801e13c:	4293      	cmp	r3, r2
 801e13e:	f6bf ae74 	bge.w	801de2a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e142:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801e146:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801e14a:	f1bb 0f00 	cmp.w	fp, #0
 801e14e:	dc6c      	bgt.n	801e22a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801e150:	9b07      	ldr	r3, [sp, #28]
 801e152:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801e156:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e158:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801e15c:	930a      	str	r3, [sp, #40]	; 0x28
 801e15e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e160:	2b00      	cmp	r3, #0
 801e162:	f340 81b3 	ble.w	801e4cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801e166:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e16a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e16e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e172:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e174:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e178:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e17c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e180:	eef0 6a62 	vmov.f32	s13, s5
 801e184:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e188:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e18c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e190:	ee16 4a90 	vmov	r4, s13
 801e194:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e198:	eef0 6a43 	vmov.f32	s13, s6
 801e19c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e1a0:	ee12 2a90 	vmov	r2, s5
 801e1a4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e1a8:	fb92 f3f3 	sdiv	r3, r2, r3
 801e1ac:	ee13 2a10 	vmov	r2, s6
 801e1b0:	9329      	str	r3, [sp, #164]	; 0xa4
 801e1b2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e1b4:	fb92 f3f3 	sdiv	r3, r2, r3
 801e1b8:	932a      	str	r3, [sp, #168]	; 0xa8
 801e1ba:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e1bc:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801e1be:	3b01      	subs	r3, #1
 801e1c0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e1c4:	9317      	str	r3, [sp, #92]	; 0x5c
 801e1c6:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e1c8:	bf08      	it	eq
 801e1ca:	4613      	moveq	r3, r2
 801e1cc:	ee16 6a90 	vmov	r6, s13
 801e1d0:	9307      	str	r3, [sp, #28]
 801e1d2:	eeb0 3a67 	vmov.f32	s6, s15
 801e1d6:	eef0 2a47 	vmov.f32	s5, s14
 801e1da:	e5fb      	b.n	801ddd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e1dc:	2900      	cmp	r1, #0
 801e1de:	f43f ae6b 	beq.w	801deb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e1e2:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801e1e6:	9308      	str	r3, [sp, #32]
 801e1e8:	0e1b      	lsrs	r3, r3, #24
 801e1ea:	9311      	str	r3, [sp, #68]	; 0x44
 801e1ec:	e664      	b.n	801deb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e1ee:	f112 0801 	adds.w	r8, r2, #1
 801e1f2:	f53f af7b 	bmi.w	801e0ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e1f6:	4543      	cmp	r3, r8
 801e1f8:	f6ff af78 	blt.w	801e0ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e1fc:	f11c 0801 	adds.w	r8, ip, #1
 801e200:	f53f af74 	bmi.w	801e0ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e204:	45c6      	cmp	lr, r8
 801e206:	f6ff af71 	blt.w	801e0ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e20a:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801e20c:	9201      	str	r2, [sp, #4]
 801e20e:	fa0f f28e 	sxth.w	r2, lr
 801e212:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801e216:	e9cd c002 	strd	ip, r0, [sp, #8]
 801e21a:	9200      	str	r2, [sp, #0]
 801e21c:	b21b      	sxth	r3, r3
 801e21e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e220:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801e222:	4639      	mov	r1, r7
 801e224:	f7ff fc79 	bl	801db1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801e228:	e760      	b.n	801e0ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e22a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801e22c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e22e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e232:	1427      	asrs	r7, r4, #16
 801e234:	1433      	asrs	r3, r6, #16
 801e236:	fb01 7303 	mla	r3, r1, r3, r7
 801e23a:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801e23e:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801e242:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e246:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801e24a:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801e24e:	2a00      	cmp	r2, #0
 801e250:	f000 8133 	beq.w	801e4ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801e254:	687d      	ldr	r5, [r7, #4]
 801e256:	950e      	str	r5, [sp, #56]	; 0x38
 801e258:	0e2d      	lsrs	r5, r5, #24
 801e25a:	9515      	str	r5, [sp, #84]	; 0x54
 801e25c:	b178      	cbz	r0, 801e27e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e25e:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 801e262:	3901      	subs	r1, #1
 801e264:	0089      	lsls	r1, r1, #2
 801e266:	3104      	adds	r1, #4
 801e268:	eb07 0e01 	add.w	lr, r7, r1
 801e26c:	5879      	ldr	r1, [r7, r1]
 801e26e:	9109      	str	r1, [sp, #36]	; 0x24
 801e270:	0e09      	lsrs	r1, r1, #24
 801e272:	9112      	str	r1, [sp, #72]	; 0x48
 801e274:	f8de 1004 	ldr.w	r1, [lr, #4]
 801e278:	910f      	str	r1, [sp, #60]	; 0x3c
 801e27a:	0e09      	lsrs	r1, r1, #24
 801e27c:	9116      	str	r1, [sp, #88]	; 0x58
 801e27e:	b292      	uxth	r2, r2
 801e280:	b280      	uxth	r0, r0
 801e282:	fb02 f800 	mul.w	r8, r2, r0
 801e286:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801e28a:	0112      	lsls	r2, r2, #4
 801e28c:	eba2 0e08 	sub.w	lr, r2, r8
 801e290:	b280      	uxth	r0, r0
 801e292:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801e296:	9915      	ldr	r1, [sp, #84]	; 0x54
 801e298:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e29a:	fa1f fe8e 	uxth.w	lr, lr
 801e29e:	1a12      	subs	r2, r2, r0
 801e2a0:	b292      	uxth	r2, r2
 801e2a2:	fb0e f101 	mul.w	r1, lr, r1
 801e2a6:	fb02 110c 	mla	r1, r2, ip, r1
 801e2aa:	fb00 1105 	mla	r1, r0, r5, r1
 801e2ae:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e2b0:	fb08 1105 	mla	r1, r8, r5, r1
 801e2b4:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801e2b8:	2900      	cmp	r1, #0
 801e2ba:	f000 80f5 	beq.w	801e4a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801e2be:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801e2c2:	d019      	beq.n	801e2f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801e2c4:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801e2c8:	fb0c fa0a 	mul.w	sl, ip, sl
 801e2cc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e2d0:	fb0c fc03 	mul.w	ip, ip, r3
 801e2d4:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801e2d8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e2dc:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801e2e0:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801e2e4:	4453      	add	r3, sl
 801e2e6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801e2ea:	0a1b      	lsrs	r3, r3, #8
 801e2ec:	0a3f      	lsrs	r7, r7, #8
 801e2ee:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e2f2:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801e2f6:	433b      	orrs	r3, r7
 801e2f8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e2fa:	2dff      	cmp	r5, #255	; 0xff
 801e2fc:	d020      	beq.n	801e340 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801e2fe:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e300:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e304:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e306:	436f      	muls	r7, r5
 801e308:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e30a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e30e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e310:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e314:	fb05 fa0a 	mul.w	sl, r5, sl
 801e318:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e31c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e320:	44bc      	add	ip, r7
 801e322:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e326:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e32a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e32e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e332:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e336:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e33a:	ea4c 050a 	orr.w	r5, ip, sl
 801e33e:	950e      	str	r5, [sp, #56]	; 0x38
 801e340:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e342:	2dff      	cmp	r5, #255	; 0xff
 801e344:	d020      	beq.n	801e388 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801e346:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e348:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e34c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e34e:	436f      	muls	r7, r5
 801e350:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e352:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e356:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e358:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e35c:	fb05 fa0a 	mul.w	sl, r5, sl
 801e360:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e364:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e368:	44bc      	add	ip, r7
 801e36a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e36e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e372:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e376:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e37a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e37e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e382:	ea4c 050a 	orr.w	r5, ip, sl
 801e386:	9509      	str	r5, [sp, #36]	; 0x24
 801e388:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e38a:	2dff      	cmp	r5, #255	; 0xff
 801e38c:	d020      	beq.n	801e3d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801e38e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e390:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e394:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e396:	436f      	muls	r7, r5
 801e398:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e39a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e39e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e3a0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e3a4:	fb05 fa0a 	mul.w	sl, r5, sl
 801e3a8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e3ac:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e3b0:	44bc      	add	ip, r7
 801e3b2:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e3b6:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e3ba:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e3be:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e3c2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e3c6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e3ca:	ea4c 050a 	orr.w	r5, ip, sl
 801e3ce:	950f      	str	r5, [sp, #60]	; 0x3c
 801e3d0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e3d2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e3d6:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e3d8:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801e3dc:	fb0e f707 	mul.w	r7, lr, r7
 801e3e0:	fb02 770c 	mla	r7, r2, ip, r7
 801e3e4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e3e8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e3ea:	fb00 770c 	mla	r7, r0, ip, r7
 801e3ee:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e3f2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e3f4:	fb08 770c 	mla	r7, r8, ip, r7
 801e3f8:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801e3fc:	fb0e fe0c 	mul.w	lr, lr, ip
 801e400:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e404:	fb02 e303 	mla	r3, r2, r3, lr
 801e408:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e40a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e40c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801e410:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e412:	fb00 330a 	mla	r3, r0, sl, r3
 801e416:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801e41a:	fb08 3c0c 	mla	ip, r8, ip, r3
 801e41e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e420:	f8b9 0000 	ldrh.w	r0, [r9]
 801e424:	4359      	muls	r1, r3
 801e426:	0a3f      	lsrs	r7, r7, #8
 801e428:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e42c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801e430:	1c4b      	adds	r3, r1, #1
 801e432:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801e436:	ea47 070c 	orr.w	r7, r7, ip
 801e43a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801e43e:	1202      	asrs	r2, r0, #8
 801e440:	0c3b      	lsrs	r3, r7, #16
 801e442:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801e446:	b2c9      	uxtb	r1, r1
 801e448:	fb13 f305 	smulbb	r3, r3, r5
 801e44c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801e450:	fb02 3201 	mla	r2, r2, r1, r3
 801e454:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801e458:	10c3      	asrs	r3, r0, #3
 801e45a:	b2ff      	uxtb	r7, r7
 801e45c:	00c0      	lsls	r0, r0, #3
 801e45e:	b2c0      	uxtb	r0, r0
 801e460:	fb17 f705 	smulbb	r7, r7, r5
 801e464:	fb00 7001 	mla	r0, r0, r1, r7
 801e468:	b292      	uxth	r2, r2
 801e46a:	fb1c fc05 	smulbb	ip, ip, r5
 801e46e:	b280      	uxth	r0, r0
 801e470:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801e474:	fb03 c301 	mla	r3, r3, r1, ip
 801e478:	1c51      	adds	r1, r2, #1
 801e47a:	f100 0c01 	add.w	ip, r0, #1
 801e47e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e482:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801e486:	b29b      	uxth	r3, r3
 801e488:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e48c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801e490:	ea4c 0202 	orr.w	r2, ip, r2
 801e494:	f103 0c01 	add.w	ip, r3, #1
 801e498:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801e49c:	095b      	lsrs	r3, r3, #5
 801e49e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e4a2:	431a      	orrs	r2, r3
 801e4a4:	f8a9 2000 	strh.w	r2, [r9]
 801e4a8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801e4aa:	441c      	add	r4, r3
 801e4ac:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e4ae:	f109 0902 	add.w	r9, r9, #2
 801e4b2:	441e      	add	r6, r3
 801e4b4:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e4b8:	e647      	b.n	801e14a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801e4ba:	2800      	cmp	r0, #0
 801e4bc:	f43f aedf 	beq.w	801e27e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e4c0:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801e4c4:	9109      	str	r1, [sp, #36]	; 0x24
 801e4c6:	0e09      	lsrs	r1, r1, #24
 801e4c8:	9112      	str	r1, [sp, #72]	; 0x48
 801e4ca:	e6d8      	b.n	801e27e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e4cc:	b01d      	add	sp, #116	; 0x74
 801e4ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e4d2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801e4d2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e4d6:	b085      	sub	sp, #20
 801e4d8:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801e4dc:	9102      	str	r1, [sp, #8]
 801e4de:	2c00      	cmp	r4, #0
 801e4e0:	fb04 7103 	mla	r1, r4, r3, r7
 801e4e4:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801e4e8:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801e4ec:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801e4f0:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801e4f4:	f2c0 810c 	blt.w	801e710 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801e4f8:	45a6      	cmp	lr, r4
 801e4fa:	f340 8109 	ble.w	801e710 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801e4fe:	2f00      	cmp	r7, #0
 801e500:	f2c0 8104 	blt.w	801e70c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801e504:	42bb      	cmp	r3, r7
 801e506:	f340 8101 	ble.w	801e70c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801e50a:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801e50e:	1c7a      	adds	r2, r7, #1
 801e510:	f100 8101 	bmi.w	801e716 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801e514:	4293      	cmp	r3, r2
 801e516:	f340 80fe 	ble.w	801e716 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801e51a:	2e00      	cmp	r6, #0
 801e51c:	f000 80fd 	beq.w	801e71a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801e520:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801e524:	3401      	adds	r4, #1
 801e526:	f100 80fc 	bmi.w	801e722 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801e52a:	45a6      	cmp	lr, r4
 801e52c:	f340 80f9 	ble.w	801e722 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801e530:	2800      	cmp	r0, #0
 801e532:	f000 80f9 	beq.w	801e728 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801e536:	2f00      	cmp	r7, #0
 801e538:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801e53c:	f2c0 80ef 	blt.w	801e71e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801e540:	42bb      	cmp	r3, r7
 801e542:	f340 80ec 	ble.w	801e71e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801e546:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801e54a:	3701      	adds	r7, #1
 801e54c:	f100 80ef 	bmi.w	801e72e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801e550:	42bb      	cmp	r3, r7
 801e552:	f340 80ec 	ble.w	801e72e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801e556:	2e00      	cmp	r6, #0
 801e558:	f000 80eb 	beq.w	801e732 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801e55c:	6852      	ldr	r2, [r2, #4]
 801e55e:	b2b6      	uxth	r6, r6
 801e560:	b280      	uxth	r0, r0
 801e562:	fb00 fe06 	mul.w	lr, r0, r6
 801e566:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801e56a:	0136      	lsls	r6, r6, #4
 801e56c:	eba6 070e 	sub.w	r7, r6, lr
 801e570:	b280      	uxth	r0, r0
 801e572:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801e576:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801e57a:	b2bf      	uxth	r7, r7
 801e57c:	1a1b      	subs	r3, r3, r0
 801e57e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801e582:	b29b      	uxth	r3, r3
 801e584:	fb07 f60a 	mul.w	r6, r7, sl
 801e588:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801e58c:	fb0b 6603 	mla	r6, fp, r3, r6
 801e590:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801e594:	fb00 6609 	mla	r6, r0, r9, r6
 801e598:	fb0e 6608 	mla	r6, lr, r8, r6
 801e59c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801e5a0:	9600      	str	r6, [sp, #0]
 801e5a2:	2e00      	cmp	r6, #0
 801e5a4:	f000 80af 	beq.w	801e706 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801e5a8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e5ac:	fb0b fc0c 	mul.w	ip, fp, ip
 801e5b0:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801e5b4:	fb0b f505 	mul.w	r5, fp, r5
 801e5b8:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801e5bc:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801e5c0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e5c4:	44dc      	add	ip, fp
 801e5c6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e5ca:	9501      	str	r5, [sp, #4]
 801e5cc:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801e5d0:	9503      	str	r5, [sp, #12]
 801e5d2:	9d01      	ldr	r5, [sp, #4]
 801e5d4:	9e02      	ldr	r6, [sp, #8]
 801e5d6:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801e5da:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e5de:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801e5e2:	fb0a fc0c 	mul.w	ip, sl, ip
 801e5e6:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801e5ea:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801e5ee:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801e5f2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e5f6:	4465      	add	r5, ip
 801e5f8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801e5fc:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801e600:	fb09 fc0c 	mul.w	ip, r9, ip
 801e604:	fb09 f904 	mul.w	r9, r9, r4
 801e608:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801e60c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801e610:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801e614:	fb08 f404 	mul.w	r4, r8, r4
 801e618:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801e61c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e620:	fb08 f802 	mul.w	r8, r8, r2
 801e624:	fb0a fa01 	mul.w	sl, sl, r1
 801e628:	0a22      	lsrs	r2, r4, #8
 801e62a:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801e62e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e632:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801e636:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801e63a:	4414      	add	r4, r2
 801e63c:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801e640:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801e644:	0a2d      	lsrs	r5, r5, #8
 801e646:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801e64a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801e64e:	9a03      	ldr	r2, [sp, #12]
 801e650:	8836      	ldrh	r6, [r6, #0]
 801e652:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801e656:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e65a:	437d      	muls	r5, r7
 801e65c:	4461      	add	r1, ip
 801e65e:	0a24      	lsrs	r4, r4, #8
 801e660:	fb02 5503 	mla	r5, r2, r3, r5
 801e664:	0a09      	lsrs	r1, r1, #8
 801e666:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801e66a:	fb04 540e 	mla	r4, r4, lr, r5
 801e66e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801e672:	fb01 4100 	mla	r1, r1, r0, r4
 801e676:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e67a:	0a09      	lsrs	r1, r1, #8
 801e67c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e680:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801e684:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801e688:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801e68c:	fb07 f70a 	mul.w	r7, r7, sl
 801e690:	fb03 7101 	mla	r1, r3, r1, r7
 801e694:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e698:	9b00      	ldr	r3, [sp, #0]
 801e69a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801e69e:	fb0e 1e08 	mla	lr, lr, r8, r1
 801e6a2:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801e6a6:	fb00 e101 	mla	r1, r0, r1, lr
 801e6aa:	43da      	mvns	r2, r3
 801e6ac:	1233      	asrs	r3, r6, #8
 801e6ae:	b2d2      	uxtb	r2, r2
 801e6b0:	10f0      	asrs	r0, r6, #3
 801e6b2:	0a09      	lsrs	r1, r1, #8
 801e6b4:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801e6b8:	00f6      	lsls	r6, r6, #3
 801e6ba:	4353      	muls	r3, r2
 801e6bc:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801e6c0:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801e6c4:	b2f6      	uxtb	r6, r6
 801e6c6:	4321      	orrs	r1, r4
 801e6c8:	4350      	muls	r0, r2
 801e6ca:	4356      	muls	r6, r2
 801e6cc:	1c5a      	adds	r2, r3, #1
 801e6ce:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801e6d2:	0c0b      	lsrs	r3, r1, #16
 801e6d4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e6d8:	1c42      	adds	r2, r0, #1
 801e6da:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e6de:	0a0a      	lsrs	r2, r1, #8
 801e6e0:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801e6e4:	021b      	lsls	r3, r3, #8
 801e6e6:	00d2      	lsls	r2, r2, #3
 801e6e8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e6ec:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801e6f0:	4313      	orrs	r3, r2
 801e6f2:	1c72      	adds	r2, r6, #1
 801e6f4:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801e6f8:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801e6fc:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801e700:	4319      	orrs	r1, r3
 801e702:	9b02      	ldr	r3, [sp, #8]
 801e704:	8019      	strh	r1, [r3, #0]
 801e706:	b005      	add	sp, #20
 801e708:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e70c:	2500      	movs	r5, #0
 801e70e:	e6fe      	b.n	801e50e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801e710:	2100      	movs	r1, #0
 801e712:	460d      	mov	r5, r1
 801e714:	e706      	b.n	801e524 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801e716:	2100      	movs	r1, #0
 801e718:	e704      	b.n	801e524 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801e71a:	4631      	mov	r1, r6
 801e71c:	e702      	b.n	801e524 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801e71e:	2400      	movs	r4, #0
 801e720:	e713      	b.n	801e54a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801e722:	2200      	movs	r2, #0
 801e724:	4614      	mov	r4, r2
 801e726:	e71a      	b.n	801e55e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801e728:	4602      	mov	r2, r0
 801e72a:	4604      	mov	r4, r0
 801e72c:	e717      	b.n	801e55e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801e72e:	2200      	movs	r2, #0
 801e730:	e715      	b.n	801e55e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801e732:	4632      	mov	r2, r6
 801e734:	e713      	b.n	801e55e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0801e738 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e738:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e73c:	b09b      	sub	sp, #108	; 0x6c
 801e73e:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801e742:	9218      	str	r2, [sp, #96]	; 0x60
 801e744:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801e746:	9116      	str	r1, [sp, #88]	; 0x58
 801e748:	9307      	str	r3, [sp, #28]
 801e74a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801e74e:	9019      	str	r0, [sp, #100]	; 0x64
 801e750:	6850      	ldr	r0, [r2, #4]
 801e752:	6812      	ldr	r2, [r2, #0]
 801e754:	fb00 1303 	mla	r3, r0, r3, r1
 801e758:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e75c:	930a      	str	r3, [sp, #40]	; 0x28
 801e75e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e760:	681b      	ldr	r3, [r3, #0]
 801e762:	930f      	str	r3, [sp, #60]	; 0x3c
 801e764:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801e766:	2b00      	cmp	r3, #0
 801e768:	dc03      	bgt.n	801e772 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801e76a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e76c:	2b00      	cmp	r3, #0
 801e76e:	f340 8386 	ble.w	801ee7e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801e772:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e774:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e778:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e77c:	1e48      	subs	r0, r1, #1
 801e77e:	1e57      	subs	r7, r2, #1
 801e780:	9b07      	ldr	r3, [sp, #28]
 801e782:	2b00      	cmp	r3, #0
 801e784:	f340 8166 	ble.w	801ea54 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801e788:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801e78c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e790:	d406      	bmi.n	801e7a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e792:	4584      	cmp	ip, r0
 801e794:	da04      	bge.n	801e7a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e796:	2b00      	cmp	r3, #0
 801e798:	db02      	blt.n	801e7a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e79a:	42bb      	cmp	r3, r7
 801e79c:	f2c0 815b 	blt.w	801ea56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801e7a0:	f11c 0c01 	adds.w	ip, ip, #1
 801e7a4:	f100 814b 	bmi.w	801ea3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e7a8:	4561      	cmp	r1, ip
 801e7aa:	f2c0 8148 	blt.w	801ea3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e7ae:	3301      	adds	r3, #1
 801e7b0:	f100 8145 	bmi.w	801ea3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e7b4:	429a      	cmp	r2, r3
 801e7b6:	f2c0 8142 	blt.w	801ea3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e7ba:	9b07      	ldr	r3, [sp, #28]
 801e7bc:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801e7be:	9317      	str	r3, [sp, #92]	; 0x5c
 801e7c0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e7c2:	2b00      	cmp	r3, #0
 801e7c4:	f340 8165 	ble.w	801ea92 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801e7c8:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801e7ca:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e7cc:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e7d0:	689b      	ldr	r3, [r3, #8]
 801e7d2:	1422      	asrs	r2, r4, #16
 801e7d4:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801e7d8:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801e7dc:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801e7e0:	f100 81d5 	bmi.w	801eb8e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801e7e4:	f103 38ff 	add.w	r8, r3, #4294967295
 801e7e8:	4542      	cmp	r2, r8
 801e7ea:	f280 81d0 	bge.w	801eb8e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801e7ee:	f1bc 0f00 	cmp.w	ip, #0
 801e7f2:	f2c0 81cc 	blt.w	801eb8e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801e7f6:	f10e 38ff 	add.w	r8, lr, #4294967295
 801e7fa:	45c4      	cmp	ip, r8
 801e7fc:	f280 81c7 	bge.w	801eb8e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801e800:	b21b      	sxth	r3, r3
 801e802:	fb0c 2203 	mla	r2, ip, r3, r2
 801e806:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e808:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801e80c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801e810:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801e814:	2900      	cmp	r1, #0
 801e816:	f000 8182 	beq.w	801eb1e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801e81a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801e81e:	950b      	str	r5, [sp, #44]	; 0x2c
 801e820:	0e2d      	lsrs	r5, r5, #24
 801e822:	9512      	str	r5, [sp, #72]	; 0x48
 801e824:	b180      	cbz	r0, 801e848 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801e826:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801e82a:	3b01      	subs	r3, #1
 801e82c:	009b      	lsls	r3, r3, #2
 801e82e:	3304      	adds	r3, #4
 801e830:	eb08 0c03 	add.w	ip, r8, r3
 801e834:	f858 3003 	ldr.w	r3, [r8, r3]
 801e838:	9308      	str	r3, [sp, #32]
 801e83a:	0e1b      	lsrs	r3, r3, #24
 801e83c:	9310      	str	r3, [sp, #64]	; 0x40
 801e83e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801e842:	930c      	str	r3, [sp, #48]	; 0x30
 801e844:	0e1b      	lsrs	r3, r3, #24
 801e846:	9313      	str	r3, [sp, #76]	; 0x4c
 801e848:	b289      	uxth	r1, r1
 801e84a:	b280      	uxth	r0, r0
 801e84c:	fb01 f900 	mul.w	r9, r1, r0
 801e850:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801e854:	0109      	lsls	r1, r1, #4
 801e856:	eba1 0809 	sub.w	r8, r1, r9
 801e85a:	b280      	uxth	r0, r0
 801e85c:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801e860:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801e862:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e864:	fa1f f888 	uxth.w	r8, r8
 801e868:	1a09      	subs	r1, r1, r0
 801e86a:	b289      	uxth	r1, r1
 801e86c:	fb08 f303 	mul.w	r3, r8, r3
 801e870:	fb01 330e 	mla	r3, r1, lr, r3
 801e874:	fb00 3305 	mla	r3, r0, r5, r3
 801e878:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e87a:	fb09 3305 	mla	r3, r9, r5, r3
 801e87e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e882:	2b00      	cmp	r3, #0
 801e884:	f000 80d2 	beq.w	801ea2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801e888:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801e88c:	d01b      	beq.n	801e8c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801e88e:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801e892:	fb0e fa0a 	mul.w	sl, lr, sl
 801e896:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e89a:	fb0e fe02 	mul.w	lr, lr, r2
 801e89e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801e8a2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e8a6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801e8aa:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801e8ae:	4452      	add	r2, sl
 801e8b0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801e8b4:	0a12      	lsrs	r2, r2, #8
 801e8b6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e8ba:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e8be:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801e8c2:	ea42 020c 	orr.w	r2, r2, ip
 801e8c6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e8c8:	2dff      	cmp	r5, #255	; 0xff
 801e8ca:	d021      	beq.n	801e910 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801e8cc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e8ce:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e8d2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e8d4:	fb05 fb0b 	mul.w	fp, r5, fp
 801e8d8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e8da:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e8de:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e8e0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e8e4:	fb05 fa0a 	mul.w	sl, r5, sl
 801e8e8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e8ec:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e8f0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e8f4:	44de      	add	lr, fp
 801e8f6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e8fa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e8fe:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e902:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e906:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e90a:	ea4e 050a 	orr.w	r5, lr, sl
 801e90e:	950b      	str	r5, [sp, #44]	; 0x2c
 801e910:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e912:	2dff      	cmp	r5, #255	; 0xff
 801e914:	d021      	beq.n	801e95a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801e916:	9d08      	ldr	r5, [sp, #32]
 801e918:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e91c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e91e:	fb05 fb0b 	mul.w	fp, r5, fp
 801e922:	9d08      	ldr	r5, [sp, #32]
 801e924:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801e928:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e92a:	fb05 fa0e 	mul.w	sl, r5, lr
 801e92e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e932:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e936:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e93a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e93e:	44de      	add	lr, fp
 801e940:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e944:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e948:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e94c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e950:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e954:	ea4e 050a 	orr.w	r5, lr, sl
 801e958:	9508      	str	r5, [sp, #32]
 801e95a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e95c:	2dff      	cmp	r5, #255	; 0xff
 801e95e:	d021      	beq.n	801e9a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801e960:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e962:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e966:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e968:	fb05 fb0b 	mul.w	fp, r5, fp
 801e96c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e96e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e972:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e974:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e978:	fb05 fa0a 	mul.w	sl, r5, sl
 801e97c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e980:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e984:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e988:	44de      	add	lr, fp
 801e98a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e98e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e992:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e996:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e99a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e99e:	ea4e 050a 	orr.w	r5, lr, sl
 801e9a2:	950c      	str	r5, [sp, #48]	; 0x30
 801e9a4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e9a6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e9aa:	9d08      	ldr	r5, [sp, #32]
 801e9ac:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801e9b0:	fb08 fc0c 	mul.w	ip, r8, ip
 801e9b4:	fb01 cc0e 	mla	ip, r1, lr, ip
 801e9b8:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801e9bc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e9be:	fb00 cc0e 	mla	ip, r0, lr, ip
 801e9c2:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801e9c6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e9c8:	fb09 cc0e 	mla	ip, r9, lr, ip
 801e9cc:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801e9d0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e9d4:	fb08 f80e 	mul.w	r8, r8, lr
 801e9d8:	fb01 8202 	mla	r2, r1, r2, r8
 801e9dc:	9908      	ldr	r1, [sp, #32]
 801e9de:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801e9e2:	990c      	ldr	r1, [sp, #48]	; 0x30
 801e9e4:	fb00 220a 	mla	r2, r0, sl, r2
 801e9e8:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801e9ec:	fb09 2900 	mla	r9, r9, r0, r2
 801e9f0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e9f4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e9f8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e9fc:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801ea00:	ea4c 0c09 	orr.w	ip, ip, r9
 801ea04:	2bff      	cmp	r3, #255	; 0xff
 801ea06:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801ea0a:	f040 8091 	bne.w	801eb30 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801ea0e:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801ea12:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 801ea16:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ea1a:	f022 0207 	bic.w	r2, r2, #7
 801ea1e:	431a      	orrs	r2, r3
 801ea20:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801ea24:	ea4c 0c02 	orr.w	ip, ip, r2
 801ea28:	f8a7 c000 	strh.w	ip, [r7]
 801ea2c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ea2e:	441c      	add	r4, r3
 801ea30:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ea32:	441e      	add	r6, r3
 801ea34:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801ea36:	3b01      	subs	r3, #1
 801ea38:	3702      	adds	r7, #2
 801ea3a:	9317      	str	r3, [sp, #92]	; 0x5c
 801ea3c:	e6c0      	b.n	801e7c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801ea3e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ea40:	441c      	add	r4, r3
 801ea42:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ea44:	441e      	add	r6, r3
 801ea46:	9b07      	ldr	r3, [sp, #28]
 801ea48:	3b01      	subs	r3, #1
 801ea4a:	9307      	str	r3, [sp, #28]
 801ea4c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ea4e:	3302      	adds	r3, #2
 801ea50:	930a      	str	r3, [sp, #40]	; 0x28
 801ea52:	e695      	b.n	801e780 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ea54:	d024      	beq.n	801eaa0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801ea56:	9b07      	ldr	r3, [sp, #28]
 801ea58:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801ea5a:	3b01      	subs	r3, #1
 801ea5c:	fb00 4003 	mla	r0, r0, r3, r4
 801ea60:	1400      	asrs	r0, r0, #16
 801ea62:	f53f aeaa 	bmi.w	801e7ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ea66:	3901      	subs	r1, #1
 801ea68:	4288      	cmp	r0, r1
 801ea6a:	f6bf aea6 	bge.w	801e7ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ea6e:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801ea70:	fb01 6303 	mla	r3, r1, r3, r6
 801ea74:	141b      	asrs	r3, r3, #16
 801ea76:	f53f aea0 	bmi.w	801e7ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ea7a:	3a01      	subs	r2, #1
 801ea7c:	4293      	cmp	r3, r2
 801ea7e:	f6bf ae9c 	bge.w	801e7ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ea82:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801ea86:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801ea8a:	f1bb 0f00 	cmp.w	fp, #0
 801ea8e:	f300 809a 	bgt.w	801ebc6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801ea92:	9b07      	ldr	r3, [sp, #28]
 801ea94:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801ea98:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ea9a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801ea9e:	930a      	str	r3, [sp, #40]	; 0x28
 801eaa0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801eaa2:	2b00      	cmp	r3, #0
 801eaa4:	f340 81eb 	ble.w	801ee7e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801eaa8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801eaac:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801eab0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801eab4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801eab6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801eaba:	ee31 1a05 	vadd.f32	s2, s2, s10
 801eabe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801eac2:	eef0 6a62 	vmov.f32	s13, s5
 801eac6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801eaca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801eace:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ead2:	ee16 4a90 	vmov	r4, s13
 801ead6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801eada:	eef0 6a43 	vmov.f32	s13, s6
 801eade:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801eae2:	ee12 2a90 	vmov	r2, s5
 801eae6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801eaea:	fb92 f3f3 	sdiv	r3, r2, r3
 801eaee:	ee13 2a10 	vmov	r2, s6
 801eaf2:	9327      	str	r3, [sp, #156]	; 0x9c
 801eaf4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801eaf6:	fb92 f3f3 	sdiv	r3, r2, r3
 801eafa:	9328      	str	r3, [sp, #160]	; 0xa0
 801eafc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801eafe:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801eb00:	3b01      	subs	r3, #1
 801eb02:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801eb06:	9316      	str	r3, [sp, #88]	; 0x58
 801eb08:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801eb0a:	bf08      	it	eq
 801eb0c:	4613      	moveq	r3, r2
 801eb0e:	ee16 6a90 	vmov	r6, s13
 801eb12:	9307      	str	r3, [sp, #28]
 801eb14:	eeb0 3a67 	vmov.f32	s6, s15
 801eb18:	eef0 2a47 	vmov.f32	s5, s14
 801eb1c:	e622      	b.n	801e764 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801eb1e:	2800      	cmp	r0, #0
 801eb20:	f43f ae92 	beq.w	801e848 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801eb24:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801eb28:	9308      	str	r3, [sp, #32]
 801eb2a:	0e1b      	lsrs	r3, r3, #24
 801eb2c:	9310      	str	r3, [sp, #64]	; 0x40
 801eb2e:	e68b      	b.n	801e848 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801eb30:	8839      	ldrh	r1, [r7, #0]
 801eb32:	4dd4      	ldr	r5, [pc, #848]	; (801ee84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801eb34:	43db      	mvns	r3, r3
 801eb36:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801eb3a:	fa5f f883 	uxtb.w	r8, r3
 801eb3e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801eb42:	fb0e fe08 	mul.w	lr, lr, r8
 801eb46:	10c8      	asrs	r0, r1, #3
 801eb48:	00cb      	lsls	r3, r1, #3
 801eb4a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801eb4e:	f10e 0101 	add.w	r1, lr, #1
 801eb52:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801eb56:	fb00 f008 	mul.w	r0, r0, r8
 801eb5a:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801eb5e:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801eb62:	f100 0e01 	add.w	lr, r0, #1
 801eb66:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801eb6a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801eb6e:	b2db      	uxtb	r3, r3
 801eb70:	b2c9      	uxtb	r1, r1
 801eb72:	00d2      	lsls	r2, r2, #3
 801eb74:	fb03 f308 	mul.w	r3, r3, r8
 801eb78:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801eb7c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801eb80:	430a      	orrs	r2, r1
 801eb82:	1c59      	adds	r1, r3, #1
 801eb84:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801eb88:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801eb8c:	e748      	b.n	801ea20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801eb8e:	f112 0801 	adds.w	r8, r2, #1
 801eb92:	f53f af4b 	bmi.w	801ea2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801eb96:	4543      	cmp	r3, r8
 801eb98:	f6ff af48 	blt.w	801ea2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801eb9c:	f11c 0801 	adds.w	r8, ip, #1
 801eba0:	f53f af44 	bmi.w	801ea2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801eba4:	45c6      	cmp	lr, r8
 801eba6:	f6ff af41 	blt.w	801ea2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ebaa:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801ebae:	fa0f f28e 	sxth.w	r2, lr
 801ebb2:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801ebb6:	9200      	str	r2, [sp, #0]
 801ebb8:	b21b      	sxth	r3, r3
 801ebba:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ebbc:	9819      	ldr	r0, [sp, #100]	; 0x64
 801ebbe:	4639      	mov	r1, r7
 801ebc0:	f7ff fc87 	bl	801e4d2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801ebc4:	e732      	b.n	801ea2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ebc6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ebc8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801ebca:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801ebce:	1421      	asrs	r1, r4, #16
 801ebd0:	1433      	asrs	r3, r6, #16
 801ebd2:	fb07 1303 	mla	r3, r7, r3, r1
 801ebd6:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801ebd8:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801ebdc:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801ebe0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801ebe4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801ebe8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801ebec:	2a00      	cmp	r2, #0
 801ebee:	f000 8107 	beq.w	801ee00 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 801ebf2:	684d      	ldr	r5, [r1, #4]
 801ebf4:	950d      	str	r5, [sp, #52]	; 0x34
 801ebf6:	0e2d      	lsrs	r5, r5, #24
 801ebf8:	9514      	str	r5, [sp, #80]	; 0x50
 801ebfa:	b178      	cbz	r0, 801ec1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801ebfc:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801ec00:	3f01      	subs	r7, #1
 801ec02:	00bf      	lsls	r7, r7, #2
 801ec04:	3704      	adds	r7, #4
 801ec06:	eb01 0e07 	add.w	lr, r1, r7
 801ec0a:	59c9      	ldr	r1, [r1, r7]
 801ec0c:	9109      	str	r1, [sp, #36]	; 0x24
 801ec0e:	0e09      	lsrs	r1, r1, #24
 801ec10:	9111      	str	r1, [sp, #68]	; 0x44
 801ec12:	f8de 1004 	ldr.w	r1, [lr, #4]
 801ec16:	910e      	str	r1, [sp, #56]	; 0x38
 801ec18:	0e09      	lsrs	r1, r1, #24
 801ec1a:	9115      	str	r1, [sp, #84]	; 0x54
 801ec1c:	b292      	uxth	r2, r2
 801ec1e:	b280      	uxth	r0, r0
 801ec20:	fb02 f900 	mul.w	r9, r2, r0
 801ec24:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801ec28:	0112      	lsls	r2, r2, #4
 801ec2a:	eba2 0e09 	sub.w	lr, r2, r9
 801ec2e:	b280      	uxth	r0, r0
 801ec30:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801ec34:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ec36:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ec38:	fa1f fe8e 	uxth.w	lr, lr
 801ec3c:	1a09      	subs	r1, r1, r0
 801ec3e:	b289      	uxth	r1, r1
 801ec40:	fb0e f202 	mul.w	r2, lr, r2
 801ec44:	fb01 220c 	mla	r2, r1, ip, r2
 801ec48:	fb00 2205 	mla	r2, r0, r5, r2
 801ec4c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ec4e:	fb09 2205 	mla	r2, r9, r5, r2
 801ec52:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801ec56:	2a00      	cmp	r2, #0
 801ec58:	f000 80c9 	beq.w	801edee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801ec5c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801ec60:	d019      	beq.n	801ec96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801ec62:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801ec66:	fb0c fa0a 	mul.w	sl, ip, sl
 801ec6a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ec6e:	fb0c fc03 	mul.w	ip, ip, r3
 801ec72:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ec76:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ec7a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801ec7e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801ec82:	4453      	add	r3, sl
 801ec84:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801ec88:	0a1b      	lsrs	r3, r3, #8
 801ec8a:	0a3f      	lsrs	r7, r7, #8
 801ec8c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ec90:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801ec94:	433b      	orrs	r3, r7
 801ec96:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ec98:	2dff      	cmp	r5, #255	; 0xff
 801ec9a:	d020      	beq.n	801ecde <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801ec9c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ec9e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801eca2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801eca4:	436f      	muls	r7, r5
 801eca6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801eca8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ecac:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ecae:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ecb2:	fb05 fa0a 	mul.w	sl, r5, sl
 801ecb6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ecba:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ecbe:	44bc      	add	ip, r7
 801ecc0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ecc4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ecc8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801eccc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ecd0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ecd4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ecd8:	ea4c 050a 	orr.w	r5, ip, sl
 801ecdc:	950d      	str	r5, [sp, #52]	; 0x34
 801ecde:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ece0:	2dff      	cmp	r5, #255	; 0xff
 801ece2:	d020      	beq.n	801ed26 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801ece4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801ece6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ecea:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ecec:	436f      	muls	r7, r5
 801ecee:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801ecf0:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801ecf4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ecf6:	fb05 fa0c 	mul.w	sl, r5, ip
 801ecfa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ecfe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ed02:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ed06:	44bc      	add	ip, r7
 801ed08:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ed0c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ed10:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ed14:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ed18:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ed1c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ed20:	ea4c 050a 	orr.w	r5, ip, sl
 801ed24:	9509      	str	r5, [sp, #36]	; 0x24
 801ed26:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ed28:	2dff      	cmp	r5, #255	; 0xff
 801ed2a:	d020      	beq.n	801ed6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801ed2c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ed2e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ed32:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ed34:	436f      	muls	r7, r5
 801ed36:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ed38:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ed3c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ed3e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ed42:	fb05 fa0a 	mul.w	sl, r5, sl
 801ed46:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ed4a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ed4e:	44bc      	add	ip, r7
 801ed50:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ed54:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ed58:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ed5c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ed60:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ed64:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ed68:	ea4c 050a 	orr.w	r5, ip, sl
 801ed6c:	950e      	str	r5, [sp, #56]	; 0x38
 801ed6e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ed70:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ed74:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801ed76:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801ed7a:	fb0e f707 	mul.w	r7, lr, r7
 801ed7e:	fb01 770c 	mla	r7, r1, ip, r7
 801ed82:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ed86:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ed88:	fb00 770c 	mla	r7, r0, ip, r7
 801ed8c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ed90:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ed92:	fb09 770c 	mla	r7, r9, ip, r7
 801ed96:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801ed9a:	fb0e fe0c 	mul.w	lr, lr, ip
 801ed9e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801eda2:	fb01 e303 	mla	r3, r1, r3, lr
 801eda6:	9909      	ldr	r1, [sp, #36]	; 0x24
 801eda8:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801edac:	990e      	ldr	r1, [sp, #56]	; 0x38
 801edae:	fb00 330a 	mla	r3, r0, sl, r3
 801edb2:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801edb6:	fb09 3c0c 	mla	ip, r9, ip, r3
 801edba:	0a3f      	lsrs	r7, r7, #8
 801edbc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801edc0:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801edc4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801edc8:	ea47 070c 	orr.w	r7, r7, ip
 801edcc:	2aff      	cmp	r2, #255	; 0xff
 801edce:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801edd2:	d11e      	bne.n	801ee12 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801edd4:	097a      	lsrs	r2, r7, #5
 801edd6:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801edda:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801edde:	f023 0307 	bic.w	r3, r3, #7
 801ede2:	4313      	orrs	r3, r2
 801ede4:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801ede8:	431f      	orrs	r7, r3
 801edea:	f8a8 7000 	strh.w	r7, [r8]
 801edee:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801edf0:	441c      	add	r4, r3
 801edf2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801edf4:	f108 0802 	add.w	r8, r8, #2
 801edf8:	441e      	add	r6, r3
 801edfa:	f10b 3bff 	add.w	fp, fp, #4294967295
 801edfe:	e644      	b.n	801ea8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801ee00:	2800      	cmp	r0, #0
 801ee02:	f43f af0b 	beq.w	801ec1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801ee06:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801ee0a:	9109      	str	r1, [sp, #36]	; 0x24
 801ee0c:	0e09      	lsrs	r1, r1, #24
 801ee0e:	9111      	str	r1, [sp, #68]	; 0x44
 801ee10:	e704      	b.n	801ec1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801ee12:	f8b8 1000 	ldrh.w	r1, [r8]
 801ee16:	43d2      	mvns	r2, r2
 801ee18:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801ee1c:	fa5f fe82 	uxtb.w	lr, r2
 801ee20:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ee24:	fb0c fc0e 	mul.w	ip, ip, lr
 801ee28:	10c8      	asrs	r0, r1, #3
 801ee2a:	00ca      	lsls	r2, r1, #3
 801ee2c:	f10c 0101 	add.w	r1, ip, #1
 801ee30:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801ee34:	0c39      	lsrs	r1, r7, #16
 801ee36:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801ee3a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ee3e:	4911      	ldr	r1, [pc, #68]	; (801ee84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801ee40:	fb00 f00e 	mul.w	r0, r0, lr
 801ee44:	fa5f fc8c 	uxtb.w	ip, ip
 801ee48:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801ee4c:	b2d2      	uxtb	r2, r2
 801ee4e:	1c41      	adds	r1, r0, #1
 801ee50:	fb02 f20e 	mul.w	r2, r2, lr
 801ee54:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801ee58:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ee5c:	1c51      	adds	r1, r2, #1
 801ee5e:	00c0      	lsls	r0, r0, #3
 801ee60:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ee64:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ee68:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801ee6c:	ea4c 0c00 	orr.w	ip, ip, r0
 801ee70:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801ee74:	ea47 0c0c 	orr.w	ip, r7, ip
 801ee78:	f8a8 c000 	strh.w	ip, [r8]
 801ee7c:	e7b7      	b.n	801edee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801ee7e:	b01b      	add	sp, #108	; 0x6c
 801ee80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ee84:	fffff800 	.word	0xfffff800

0801ee88 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801ee88:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ee8c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801ee90:	2d00      	cmp	r5, #0
 801ee92:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801ee96:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801ee9a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801ee9e:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801eea2:	fb05 0e03 	mla	lr, r5, r3, r0
 801eea6:	f2c0 808c 	blt.w	801efc2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801eeaa:	45a9      	cmp	r9, r5
 801eeac:	f340 8089 	ble.w	801efc2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801eeb0:	2800      	cmp	r0, #0
 801eeb2:	f2c0 8084 	blt.w	801efbe <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801eeb6:	4580      	cmp	r8, r0
 801eeb8:	f340 8081 	ble.w	801efbe <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801eebc:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801eec0:	f01e 0f01 	tst.w	lr, #1
 801eec4:	5d16      	ldrb	r6, [r2, r4]
 801eec6:	bf0c      	ite	eq
 801eec8:	f006 060f 	andeq.w	r6, r6, #15
 801eecc:	1136      	asrne	r6, r6, #4
 801eece:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801eed2:	b2f6      	uxtb	r6, r6
 801eed4:	1c44      	adds	r4, r0, #1
 801eed6:	d477      	bmi.n	801efc8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801eed8:	45a0      	cmp	r8, r4
 801eeda:	dd75      	ble.n	801efc8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801eedc:	2f00      	cmp	r7, #0
 801eede:	d075      	beq.n	801efcc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801eee0:	f10e 0a01 	add.w	sl, lr, #1
 801eee4:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801eee8:	f01a 0f01 	tst.w	sl, #1
 801eeec:	5d14      	ldrb	r4, [r2, r4]
 801eeee:	bf0c      	ite	eq
 801eef0:	f004 040f 	andeq.w	r4, r4, #15
 801eef4:	1124      	asrne	r4, r4, #4
 801eef6:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801eefa:	b2e4      	uxtb	r4, r4
 801eefc:	3501      	adds	r5, #1
 801eefe:	d469      	bmi.n	801efd4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801ef00:	45a9      	cmp	r9, r5
 801ef02:	dd67      	ble.n	801efd4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801ef04:	f1bc 0f00 	cmp.w	ip, #0
 801ef08:	d067      	beq.n	801efda <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801ef0a:	2800      	cmp	r0, #0
 801ef0c:	db60      	blt.n	801efd0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801ef0e:	4580      	cmp	r8, r0
 801ef10:	dd5e      	ble.n	801efd0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801ef12:	eb03 090e 	add.w	r9, r3, lr
 801ef16:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801ef1a:	f019 0f01 	tst.w	r9, #1
 801ef1e:	5d55      	ldrb	r5, [r2, r5]
 801ef20:	bf0c      	ite	eq
 801ef22:	f005 050f 	andeq.w	r5, r5, #15
 801ef26:	112d      	asrne	r5, r5, #4
 801ef28:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801ef2c:	b2ed      	uxtb	r5, r5
 801ef2e:	3001      	adds	r0, #1
 801ef30:	d456      	bmi.n	801efe0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801ef32:	4580      	cmp	r8, r0
 801ef34:	dd54      	ble.n	801efe0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801ef36:	2f00      	cmp	r7, #0
 801ef38:	d054      	beq.n	801efe4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801ef3a:	3301      	adds	r3, #1
 801ef3c:	449e      	add	lr, r3
 801ef3e:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801ef42:	f01e 0f01 	tst.w	lr, #1
 801ef46:	5cd0      	ldrb	r0, [r2, r3]
 801ef48:	bf0c      	ite	eq
 801ef4a:	f000 000f 	andeq.w	r0, r0, #15
 801ef4e:	1100      	asrne	r0, r0, #4
 801ef50:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801ef54:	b2c3      	uxtb	r3, r0
 801ef56:	b2ba      	uxth	r2, r7
 801ef58:	fa1f fc8c 	uxth.w	ip, ip
 801ef5c:	fb02 f00c 	mul.w	r0, r2, ip
 801ef60:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801ef64:	0112      	lsls	r2, r2, #4
 801ef66:	fa1f fc8c 	uxth.w	ip, ip
 801ef6a:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801ef6e:	1a12      	subs	r2, r2, r0
 801ef70:	eba7 070c 	sub.w	r7, r7, ip
 801ef74:	b292      	uxth	r2, r2
 801ef76:	b2bf      	uxth	r7, r7
 801ef78:	4362      	muls	r2, r4
 801ef7a:	fb06 2207 	mla	r2, r6, r7, r2
 801ef7e:	fb0c 2505 	mla	r5, ip, r5, r2
 801ef82:	fb00 5303 	mla	r3, r0, r3, r5
 801ef86:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ef8a:	b1b3      	cbz	r3, 801efba <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801ef8c:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 801ef90:	435a      	muls	r2, r3
 801ef92:	1c53      	adds	r3, r2, #1
 801ef94:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ef98:	4a2d      	ldr	r2, [pc, #180]	; (801f050 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801ef9a:	121b      	asrs	r3, r3, #8
 801ef9c:	6812      	ldr	r2, [r2, #0]
 801ef9e:	2bff      	cmp	r3, #255	; 0xff
 801efa0:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801efa4:	d120      	bne.n	801efe8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801efa6:	4b2b      	ldr	r3, [pc, #172]	; (801f054 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801efa8:	0950      	lsrs	r0, r2, #5
 801efaa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801efae:	4033      	ands	r3, r6
 801efb0:	4318      	orrs	r0, r3
 801efb2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801efb6:	4302      	orrs	r2, r0
 801efb8:	800a      	strh	r2, [r1, #0]
 801efba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801efbe:	2600      	movs	r6, #0
 801efc0:	e788      	b.n	801eed4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801efc2:	2400      	movs	r4, #0
 801efc4:	4626      	mov	r6, r4
 801efc6:	e799      	b.n	801eefc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801efc8:	2400      	movs	r4, #0
 801efca:	e797      	b.n	801eefc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801efcc:	463c      	mov	r4, r7
 801efce:	e795      	b.n	801eefc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801efd0:	2500      	movs	r5, #0
 801efd2:	e7ac      	b.n	801ef2e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801efd4:	2300      	movs	r3, #0
 801efd6:	461d      	mov	r5, r3
 801efd8:	e7bd      	b.n	801ef56 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801efda:	4663      	mov	r3, ip
 801efdc:	4665      	mov	r5, ip
 801efde:	e7ba      	b.n	801ef56 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801efe0:	2300      	movs	r3, #0
 801efe2:	e7b8      	b.n	801ef56 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801efe4:	463b      	mov	r3, r7
 801efe6:	e7b6      	b.n	801ef56 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801efe8:	880d      	ldrh	r5, [r1, #0]
 801efea:	b29f      	uxth	r7, r3
 801efec:	122c      	asrs	r4, r5, #8
 801efee:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801eff2:	43db      	mvns	r3, r3
 801eff4:	b2db      	uxtb	r3, r3
 801eff6:	fb10 f007 	smulbb	r0, r0, r7
 801effa:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801effe:	fb04 0403 	mla	r4, r4, r3, r0
 801f002:	b2f6      	uxtb	r6, r6
 801f004:	10e8      	asrs	r0, r5, #3
 801f006:	b2d2      	uxtb	r2, r2
 801f008:	00ed      	lsls	r5, r5, #3
 801f00a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f00e:	fb12 f207 	smulbb	r2, r2, r7
 801f012:	fb16 f607 	smulbb	r6, r6, r7
 801f016:	b2ed      	uxtb	r5, r5
 801f018:	b2a4      	uxth	r4, r4
 801f01a:	fb00 6603 	mla	r6, r0, r3, r6
 801f01e:	fb05 2303 	mla	r3, r5, r3, r2
 801f022:	b29a      	uxth	r2, r3
 801f024:	1c63      	adds	r3, r4, #1
 801f026:	b2b0      	uxth	r0, r6
 801f028:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801f02c:	1c53      	adds	r3, r2, #1
 801f02e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f032:	1c42      	adds	r2, r0, #1
 801f034:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f038:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801f03c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f040:	0940      	lsrs	r0, r0, #5
 801f042:	4323      	orrs	r3, r4
 801f044:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f048:	4303      	orrs	r3, r0
 801f04a:	800b      	strh	r3, [r1, #0]
 801f04c:	e7b5      	b.n	801efba <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801f04e:	bf00      	nop
 801f050:	20015498 	.word	0x20015498
 801f054:	00fff800 	.word	0x00fff800

0801f058 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f058:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f05c:	b097      	sub	sp, #92	; 0x5c
 801f05e:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 801f062:	9214      	str	r2, [sp, #80]	; 0x50
 801f064:	9309      	str	r3, [sp, #36]	; 0x24
 801f066:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801f068:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801f06c:	910d      	str	r1, [sp, #52]	; 0x34
 801f06e:	930f      	str	r3, [sp, #60]	; 0x3c
 801f070:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801f074:	9015      	str	r0, [sp, #84]	; 0x54
 801f076:	6850      	ldr	r0, [r2, #4]
 801f078:	6812      	ldr	r2, [r2, #0]
 801f07a:	fb00 1303 	mla	r3, r0, r3, r1
 801f07e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801f082:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f084:	689b      	ldr	r3, [r3, #8]
 801f086:	3301      	adds	r3, #1
 801f088:	f023 0301 	bic.w	r3, r3, #1
 801f08c:	930a      	str	r3, [sp, #40]	; 0x28
 801f08e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f090:	681f      	ldr	r7, [r3, #0]
 801f092:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f094:	2b00      	cmp	r3, #0
 801f096:	dc03      	bgt.n	801f0a0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801f098:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801f09a:	2b00      	cmp	r3, #0
 801f09c:	f340 8287 	ble.w	801f5ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801f0a0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f0a2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f0a6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f0aa:	1e48      	subs	r0, r1, #1
 801f0ac:	f102 3cff 	add.w	ip, r2, #4294967295
 801f0b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f0b2:	2b00      	cmp	r3, #0
 801f0b4:	f340 80c4 	ble.w	801f240 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801f0b8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f0bc:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f0c0:	d406      	bmi.n	801f0d0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f0c2:	4586      	cmp	lr, r0
 801f0c4:	da04      	bge.n	801f0d0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f0c6:	2b00      	cmp	r3, #0
 801f0c8:	db02      	blt.n	801f0d0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f0ca:	4563      	cmp	r3, ip
 801f0cc:	f2c0 80b9 	blt.w	801f242 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801f0d0:	f11e 0e01 	adds.w	lr, lr, #1
 801f0d4:	f100 80aa 	bmi.w	801f22c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f0d8:	4571      	cmp	r1, lr
 801f0da:	f2c0 80a7 	blt.w	801f22c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f0de:	3301      	adds	r3, #1
 801f0e0:	f100 80a4 	bmi.w	801f22c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f0e4:	429a      	cmp	r2, r3
 801f0e6:	f2c0 80a1 	blt.w	801f22c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f0ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f0ec:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 801f0f0:	930e      	str	r3, [sp, #56]	; 0x38
 801f0f2:	46c8      	mov	r8, r9
 801f0f4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f0f6:	2b00      	cmp	r3, #0
 801f0f8:	f340 80c3 	ble.w	801f282 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801f0fc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f0fe:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801f102:	1423      	asrs	r3, r4, #16
 801f104:	ea4f 4026 	mov.w	r0, r6, asr #16
 801f108:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f10c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f110:	f100 814d 	bmi.w	801f3ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f114:	f10c 3bff 	add.w	fp, ip, #4294967295
 801f118:	455b      	cmp	r3, fp
 801f11a:	f280 8148 	bge.w	801f3ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f11e:	2800      	cmp	r0, #0
 801f120:	f2c0 8145 	blt.w	801f3ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f124:	f10e 3bff 	add.w	fp, lr, #4294967295
 801f128:	4558      	cmp	r0, fp
 801f12a:	f280 8140 	bge.w	801f3ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f12e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801f130:	fb00 3305 	mla	r3, r0, r5, r3
 801f134:	0858      	lsrs	r0, r3, #1
 801f136:	07dd      	lsls	r5, r3, #31
 801f138:	f817 c000 	ldrb.w	ip, [r7, r0]
 801f13c:	bf54      	ite	pl
 801f13e:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f142:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f146:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f14a:	fa5f fc8c 	uxtb.w	ip, ip
 801f14e:	2a00      	cmp	r2, #0
 801f150:	f000 80db 	beq.w	801f30a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 801f154:	1c58      	adds	r0, r3, #1
 801f156:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801f15a:	07c0      	lsls	r0, r0, #31
 801f15c:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f160:	bf54      	ite	pl
 801f162:	f00e 0e0f 	andpl.w	lr, lr, #15
 801f166:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801f16a:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801f16e:	fa5f f08e 	uxtb.w	r0, lr
 801f172:	9010      	str	r0, [sp, #64]	; 0x40
 801f174:	b1c9      	cbz	r1, 801f1aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f176:	4453      	add	r3, sl
 801f178:	0858      	lsrs	r0, r3, #1
 801f17a:	07dd      	lsls	r5, r3, #31
 801f17c:	5c38      	ldrb	r0, [r7, r0]
 801f17e:	bf54      	ite	pl
 801f180:	f000 000f 	andpl.w	r0, r0, #15
 801f184:	1100      	asrmi	r0, r0, #4
 801f186:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f18a:	3301      	adds	r3, #1
 801f18c:	b2c0      	uxtb	r0, r0
 801f18e:	900b      	str	r0, [sp, #44]	; 0x2c
 801f190:	0858      	lsrs	r0, r3, #1
 801f192:	07dd      	lsls	r5, r3, #31
 801f194:	f817 e000 	ldrb.w	lr, [r7, r0]
 801f198:	bf54      	ite	pl
 801f19a:	f00e 030f 	andpl.w	r3, lr, #15
 801f19e:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801f1a2:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f1a6:	b2db      	uxtb	r3, r3
 801f1a8:	9311      	str	r3, [sp, #68]	; 0x44
 801f1aa:	b292      	uxth	r2, r2
 801f1ac:	b289      	uxth	r1, r1
 801f1ae:	fb02 f301 	mul.w	r3, r2, r1
 801f1b2:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801f1b6:	0112      	lsls	r2, r2, #4
 801f1b8:	b289      	uxth	r1, r1
 801f1ba:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801f1be:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f1c0:	1ad2      	subs	r2, r2, r3
 801f1c2:	1a40      	subs	r0, r0, r1
 801f1c4:	b292      	uxth	r2, r2
 801f1c6:	436a      	muls	r2, r5
 801f1c8:	b280      	uxth	r0, r0
 801f1ca:	fb0c 2c00 	mla	ip, ip, r0, r2
 801f1ce:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801f1d0:	fb01 c102 	mla	r1, r1, r2, ip
 801f1d4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801f1d6:	fb03 1302 	mla	r3, r3, r2, r1
 801f1da:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f1de:	b1db      	cbz	r3, 801f218 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f1e0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f1e2:	4353      	muls	r3, r2
 801f1e4:	1c5a      	adds	r2, r3, #1
 801f1e6:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801f1ea:	4ac6      	ldr	r2, [pc, #792]	; (801f504 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801f1ec:	121b      	asrs	r3, r3, #8
 801f1ee:	6812      	ldr	r2, [r2, #0]
 801f1f0:	2bff      	cmp	r3, #255	; 0xff
 801f1f2:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801f1f6:	f040 8099 	bne.w	801f32c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 801f1fa:	0953      	lsrs	r3, r2, #5
 801f1fc:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801f200:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f204:	f02c 0c07 	bic.w	ip, ip, #7
 801f208:	ea43 0c0c 	orr.w	ip, r3, ip
 801f20c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f210:	ea4c 0202 	orr.w	r2, ip, r2
 801f214:	f8a8 2000 	strh.w	r2, [r8]
 801f218:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801f21a:	441c      	add	r4, r3
 801f21c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f21e:	441e      	add	r6, r3
 801f220:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f222:	3b01      	subs	r3, #1
 801f224:	f108 0802 	add.w	r8, r8, #2
 801f228:	930e      	str	r3, [sp, #56]	; 0x38
 801f22a:	e763      	b.n	801f0f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801f22c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801f22e:	441c      	add	r4, r3
 801f230:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f232:	441e      	add	r6, r3
 801f234:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f236:	3b01      	subs	r3, #1
 801f238:	9309      	str	r3, [sp, #36]	; 0x24
 801f23a:	f109 0902 	add.w	r9, r9, #2
 801f23e:	e737      	b.n	801f0b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f240:	d024      	beq.n	801f28c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f242:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f244:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801f246:	3b01      	subs	r3, #1
 801f248:	fb00 4003 	mla	r0, r0, r3, r4
 801f24c:	1400      	asrs	r0, r0, #16
 801f24e:	f53f af4c 	bmi.w	801f0ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f252:	3901      	subs	r1, #1
 801f254:	4288      	cmp	r0, r1
 801f256:	f6bf af48 	bge.w	801f0ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f25a:	9924      	ldr	r1, [sp, #144]	; 0x90
 801f25c:	fb01 6303 	mla	r3, r1, r3, r6
 801f260:	141b      	asrs	r3, r3, #16
 801f262:	f53f af42 	bmi.w	801f0ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f266:	3a01      	subs	r2, #1
 801f268:	4293      	cmp	r3, r2
 801f26a:	f6bf af3e 	bge.w	801f0ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f26e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801f272:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801f276:	930e      	str	r3, [sp, #56]	; 0x38
 801f278:	46c8      	mov	r8, r9
 801f27a:	f1bb 0f00 	cmp.w	fp, #0
 801f27e:	f300 80b7 	bgt.w	801f3f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801f282:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f284:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f288:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801f28c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f28e:	2b00      	cmp	r3, #0
 801f290:	f340 818d 	ble.w	801f5ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801f294:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f298:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f29c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f2a0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f2a2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f2a6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f2aa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f2ae:	eef0 6a62 	vmov.f32	s13, s5
 801f2b2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f2b6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f2ba:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f2be:	ee16 4a90 	vmov	r4, s13
 801f2c2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f2c6:	eef0 6a43 	vmov.f32	s13, s6
 801f2ca:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f2ce:	ee12 2a90 	vmov	r2, s5
 801f2d2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f2d6:	fb92 f3f3 	sdiv	r3, r2, r3
 801f2da:	ee13 2a10 	vmov	r2, s6
 801f2de:	9323      	str	r3, [sp, #140]	; 0x8c
 801f2e0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f2e2:	fb92 f3f3 	sdiv	r3, r2, r3
 801f2e6:	9324      	str	r3, [sp, #144]	; 0x90
 801f2e8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f2ea:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801f2ec:	3b01      	subs	r3, #1
 801f2ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f2f2:	930d      	str	r3, [sp, #52]	; 0x34
 801f2f4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f2f6:	bf08      	it	eq
 801f2f8:	4613      	moveq	r3, r2
 801f2fa:	ee16 6a90 	vmov	r6, s13
 801f2fe:	9309      	str	r3, [sp, #36]	; 0x24
 801f300:	eeb0 3a67 	vmov.f32	s6, s15
 801f304:	eef0 2a47 	vmov.f32	s5, s14
 801f308:	e6c3      	b.n	801f092 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801f30a:	2900      	cmp	r1, #0
 801f30c:	f43f af4d 	beq.w	801f1aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f310:	eb0a 0003 	add.w	r0, sl, r3
 801f314:	0843      	lsrs	r3, r0, #1
 801f316:	07c0      	lsls	r0, r0, #31
 801f318:	5cfb      	ldrb	r3, [r7, r3]
 801f31a:	bf54      	ite	pl
 801f31c:	f003 030f 	andpl.w	r3, r3, #15
 801f320:	111b      	asrmi	r3, r3, #4
 801f322:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f326:	b2db      	uxtb	r3, r3
 801f328:	930b      	str	r3, [sp, #44]	; 0x2c
 801f32a:	e73e      	b.n	801f1aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f32c:	f8b8 e000 	ldrh.w	lr, [r8]
 801f330:	fa1f fb83 	uxth.w	fp, r3
 801f334:	ea4f 202e 	mov.w	r0, lr, asr #8
 801f338:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801f33c:	43db      	mvns	r3, r3
 801f33e:	b2db      	uxtb	r3, r3
 801f340:	fb11 f10b 	smulbb	r1, r1, fp
 801f344:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f348:	fb00 1003 	mla	r0, r0, r3, r1
 801f34c:	fa5f fc8c 	uxtb.w	ip, ip
 801f350:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801f354:	b2d2      	uxtb	r2, r2
 801f356:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f35a:	b280      	uxth	r0, r0
 801f35c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f360:	fb1c fc0b 	smulbb	ip, ip, fp
 801f364:	fa5f fe8e 	uxtb.w	lr, lr
 801f368:	fb12 fb0b 	smulbb	fp, r2, fp
 801f36c:	fb01 cc03 	mla	ip, r1, r3, ip
 801f370:	fb0e bb03 	mla	fp, lr, r3, fp
 801f374:	1c43      	adds	r3, r0, #1
 801f376:	fa1f fc8c 	uxth.w	ip, ip
 801f37a:	fa1f fb8b 	uxth.w	fp, fp
 801f37e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f382:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 801f386:	f10c 0101 	add.w	r1, ip, #1
 801f38a:	f10b 0001 	add.w	r0, fp, #1
 801f38e:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801f392:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f396:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801f39a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f39e:	4318      	orrs	r0, r3
 801f3a0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801f3a4:	ea40 000c 	orr.w	r0, r0, ip
 801f3a8:	f8a8 0000 	strh.w	r0, [r8]
 801f3ac:	e734      	b.n	801f218 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f3ae:	f113 0b01 	adds.w	fp, r3, #1
 801f3b2:	f53f af31 	bmi.w	801f218 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f3b6:	45dc      	cmp	ip, fp
 801f3b8:	f6ff af2e 	blt.w	801f218 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f3bc:	f110 0b01 	adds.w	fp, r0, #1
 801f3c0:	f53f af2a 	bmi.w	801f218 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f3c4:	45de      	cmp	lr, fp
 801f3c6:	f6ff af27 	blt.w	801f218 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f3ca:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801f3cc:	9302      	str	r3, [sp, #8]
 801f3ce:	fa0f f38e 	sxth.w	r3, lr
 801f3d2:	9301      	str	r3, [sp, #4]
 801f3d4:	fa0f f38c 	sxth.w	r3, ip
 801f3d8:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801f3dc:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801f3e0:	9300      	str	r3, [sp, #0]
 801f3e2:	463a      	mov	r2, r7
 801f3e4:	4653      	mov	r3, sl
 801f3e6:	4641      	mov	r1, r8
 801f3e8:	9815      	ldr	r0, [sp, #84]	; 0x54
 801f3ea:	f7ff fd4d 	bl	801ee88 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801f3ee:	e713      	b.n	801f218 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f3f0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801f3f2:	1422      	asrs	r2, r4, #16
 801f3f4:	1433      	asrs	r3, r6, #16
 801f3f6:	fb05 2303 	mla	r3, r5, r3, r2
 801f3fa:	085a      	lsrs	r2, r3, #1
 801f3fc:	07dd      	lsls	r5, r3, #31
 801f3fe:	5cba      	ldrb	r2, [r7, r2]
 801f400:	bf54      	ite	pl
 801f402:	f002 020f 	andpl.w	r2, r2, #15
 801f406:	1112      	asrmi	r2, r2, #4
 801f408:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801f40c:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801f410:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f414:	b2d2      	uxtb	r2, r2
 801f416:	2900      	cmp	r1, #0
 801f418:	d076      	beq.n	801f508 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801f41a:	f103 0e01 	add.w	lr, r3, #1
 801f41e:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801f422:	f01e 0f01 	tst.w	lr, #1
 801f426:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f42a:	bf0c      	ite	eq
 801f42c:	f00c 0c0f 	andeq.w	ip, ip, #15
 801f430:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801f434:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f438:	fa5f f58c 	uxtb.w	r5, ip
 801f43c:	9512      	str	r5, [sp, #72]	; 0x48
 801f43e:	b300      	cbz	r0, 801f482 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801f440:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f442:	442b      	add	r3, r5
 801f444:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f448:	07dd      	lsls	r5, r3, #31
 801f44a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f44e:	bf54      	ite	pl
 801f450:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f454:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f458:	3301      	adds	r3, #1
 801f45a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f45e:	fa5f f58c 	uxtb.w	r5, ip
 801f462:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f466:	950c      	str	r5, [sp, #48]	; 0x30
 801f468:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f46c:	07dd      	lsls	r5, r3, #31
 801f46e:	bf54      	ite	pl
 801f470:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f474:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f478:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f47c:	fa5f f38c 	uxtb.w	r3, ip
 801f480:	9313      	str	r3, [sp, #76]	; 0x4c
 801f482:	b289      	uxth	r1, r1
 801f484:	b280      	uxth	r0, r0
 801f486:	fb01 f300 	mul.w	r3, r1, r0
 801f48a:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801f48e:	0109      	lsls	r1, r1, #4
 801f490:	b280      	uxth	r0, r0
 801f492:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801f496:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801f498:	1ac9      	subs	r1, r1, r3
 801f49a:	ebac 0c00 	sub.w	ip, ip, r0
 801f49e:	b289      	uxth	r1, r1
 801f4a0:	4369      	muls	r1, r5
 801f4a2:	fa1f fc8c 	uxth.w	ip, ip
 801f4a6:	fb02 120c 	mla	r2, r2, ip, r1
 801f4aa:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f4ac:	fb00 2001 	mla	r0, r0, r1, r2
 801f4b0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801f4b2:	fb03 0302 	mla	r3, r3, r2, r0
 801f4b6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f4ba:	b1d3      	cbz	r3, 801f4f2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801f4bc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f4be:	4353      	muls	r3, r2
 801f4c0:	1c5a      	adds	r2, r3, #1
 801f4c2:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801f4c6:	4a0f      	ldr	r2, [pc, #60]	; (801f504 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801f4c8:	121b      	asrs	r3, r3, #8
 801f4ca:	6812      	ldr	r2, [r2, #0]
 801f4cc:	2bff      	cmp	r3, #255	; 0xff
 801f4ce:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801f4d2:	d12d      	bne.n	801f530 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801f4d4:	0953      	lsrs	r3, r2, #5
 801f4d6:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801f4da:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f4de:	f02c 0c07 	bic.w	ip, ip, #7
 801f4e2:	ea43 0c0c 	orr.w	ip, r3, ip
 801f4e6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f4ea:	ea4c 0202 	orr.w	r2, ip, r2
 801f4ee:	f8a8 2000 	strh.w	r2, [r8]
 801f4f2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801f4f4:	441c      	add	r4, r3
 801f4f6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f4f8:	f108 0802 	add.w	r8, r8, #2
 801f4fc:	441e      	add	r6, r3
 801f4fe:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f502:	e6ba      	b.n	801f27a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801f504:	20015498 	.word	0x20015498
 801f508:	2800      	cmp	r0, #0
 801f50a:	d0ba      	beq.n	801f482 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801f50c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f50e:	442b      	add	r3, r5
 801f510:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f514:	07db      	lsls	r3, r3, #31
 801f516:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f51a:	bf54      	ite	pl
 801f51c:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f520:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f524:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f528:	fa5f f38c 	uxtb.w	r3, ip
 801f52c:	930c      	str	r3, [sp, #48]	; 0x30
 801f52e:	e7a8      	b.n	801f482 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801f530:	f8b8 e000 	ldrh.w	lr, [r8]
 801f534:	fa1f fa83 	uxth.w	sl, r3
 801f538:	ea4f 202e 	mov.w	r0, lr, asr #8
 801f53c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801f540:	43db      	mvns	r3, r3
 801f542:	b2db      	uxtb	r3, r3
 801f544:	fb11 f10a 	smulbb	r1, r1, sl
 801f548:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f54c:	fb00 1003 	mla	r0, r0, r3, r1
 801f550:	b2d2      	uxtb	r2, r2
 801f552:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801f556:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f55a:	fa5f fe8e 	uxtb.w	lr, lr
 801f55e:	fb12 f20a 	smulbb	r2, r2, sl
 801f562:	fb0e 2203 	mla	r2, lr, r3, r2
 801f566:	fa5f fc8c 	uxtb.w	ip, ip
 801f56a:	b280      	uxth	r0, r0
 801f56c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f570:	b292      	uxth	r2, r2
 801f572:	fb1c fc0a 	smulbb	ip, ip, sl
 801f576:	fb01 cc03 	mla	ip, r1, r3, ip
 801f57a:	1c43      	adds	r3, r0, #1
 801f57c:	1c51      	adds	r1, r2, #1
 801f57e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f582:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801f586:	fa1f fc8c 	uxth.w	ip, ip
 801f58a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801f58e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801f592:	4308      	orrs	r0, r1
 801f594:	f10c 0101 	add.w	r1, ip, #1
 801f598:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f59c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f5a0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801f5a4:	ea40 000c 	orr.w	r0, r0, ip
 801f5a8:	f8a8 0000 	strh.w	r0, [r8]
 801f5ac:	e7a1      	b.n	801f4f2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801f5ae:	b017      	add	sp, #92	; 0x5c
 801f5b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f5b4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801f5b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f5b8:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801f5bc:	2d00      	cmp	r5, #0
 801f5be:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801f5c2:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801f5c6:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801f5ca:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801f5ce:	fb05 0e03 	mla	lr, r5, r3, r0
 801f5d2:	f2c0 80b0 	blt.w	801f736 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801f5d6:	45a9      	cmp	r9, r5
 801f5d8:	f340 80ad 	ble.w	801f736 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801f5dc:	2800      	cmp	r0, #0
 801f5de:	f2c0 80a8 	blt.w	801f732 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801f5e2:	4580      	cmp	r8, r0
 801f5e4:	f340 80a5 	ble.w	801f732 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801f5e8:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801f5ec:	f01e 0f01 	tst.w	lr, #1
 801f5f0:	5d16      	ldrb	r6, [r2, r4]
 801f5f2:	bf0c      	ite	eq
 801f5f4:	f006 060f 	andeq.w	r6, r6, #15
 801f5f8:	1136      	asrne	r6, r6, #4
 801f5fa:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801f5fe:	b2f6      	uxtb	r6, r6
 801f600:	1c44      	adds	r4, r0, #1
 801f602:	f100 809b 	bmi.w	801f73c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801f606:	45a0      	cmp	r8, r4
 801f608:	f340 8098 	ble.w	801f73c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801f60c:	2f00      	cmp	r7, #0
 801f60e:	f000 8097 	beq.w	801f740 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 801f612:	f10e 0a01 	add.w	sl, lr, #1
 801f616:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801f61a:	f01a 0f01 	tst.w	sl, #1
 801f61e:	5d14      	ldrb	r4, [r2, r4]
 801f620:	bf0c      	ite	eq
 801f622:	f004 040f 	andeq.w	r4, r4, #15
 801f626:	1124      	asrne	r4, r4, #4
 801f628:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801f62c:	b2e4      	uxtb	r4, r4
 801f62e:	3501      	adds	r5, #1
 801f630:	f100 808a 	bmi.w	801f748 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801f634:	45a9      	cmp	r9, r5
 801f636:	f340 8087 	ble.w	801f748 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801f63a:	f1bc 0f00 	cmp.w	ip, #0
 801f63e:	f000 8086 	beq.w	801f74e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 801f642:	2800      	cmp	r0, #0
 801f644:	db7e      	blt.n	801f744 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801f646:	4580      	cmp	r8, r0
 801f648:	dd7c      	ble.n	801f744 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801f64a:	eb03 090e 	add.w	r9, r3, lr
 801f64e:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801f652:	f019 0f01 	tst.w	r9, #1
 801f656:	5d55      	ldrb	r5, [r2, r5]
 801f658:	bf0c      	ite	eq
 801f65a:	f005 050f 	andeq.w	r5, r5, #15
 801f65e:	112d      	asrne	r5, r5, #4
 801f660:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801f664:	b2ed      	uxtb	r5, r5
 801f666:	3001      	adds	r0, #1
 801f668:	d474      	bmi.n	801f754 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801f66a:	4580      	cmp	r8, r0
 801f66c:	dd72      	ble.n	801f754 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801f66e:	2f00      	cmp	r7, #0
 801f670:	d072      	beq.n	801f758 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801f672:	3301      	adds	r3, #1
 801f674:	449e      	add	lr, r3
 801f676:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801f67a:	f01e 0f01 	tst.w	lr, #1
 801f67e:	5cd0      	ldrb	r0, [r2, r3]
 801f680:	bf0c      	ite	eq
 801f682:	f000 000f 	andeq.w	r0, r0, #15
 801f686:	1100      	asrne	r0, r0, #4
 801f688:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f68c:	b2c3      	uxtb	r3, r0
 801f68e:	b2ba      	uxth	r2, r7
 801f690:	fa1f fc8c 	uxth.w	ip, ip
 801f694:	fb02 f00c 	mul.w	r0, r2, ip
 801f698:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801f69c:	0112      	lsls	r2, r2, #4
 801f69e:	fa1f fc8c 	uxth.w	ip, ip
 801f6a2:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801f6a6:	1a12      	subs	r2, r2, r0
 801f6a8:	eba7 070c 	sub.w	r7, r7, ip
 801f6ac:	b292      	uxth	r2, r2
 801f6ae:	b2bf      	uxth	r7, r7
 801f6b0:	4362      	muls	r2, r4
 801f6b2:	fb06 2207 	mla	r2, r6, r7, r2
 801f6b6:	fb0c 2505 	mla	r5, ip, r5, r2
 801f6ba:	fb00 5303 	mla	r3, r0, r3, r5
 801f6be:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f6c2:	b3a3      	cbz	r3, 801f72e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 801f6c4:	4a25      	ldr	r2, [pc, #148]	; (801f75c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 801f6c6:	880e      	ldrh	r6, [r1, #0]
 801f6c8:	6815      	ldr	r5, [r2, #0]
 801f6ca:	1234      	asrs	r4, r6, #8
 801f6cc:	b29a      	uxth	r2, r3
 801f6ce:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801f6d2:	43db      	mvns	r3, r3
 801f6d4:	b2db      	uxtb	r3, r3
 801f6d6:	fb10 f002 	smulbb	r0, r0, r2
 801f6da:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801f6de:	fb04 0403 	mla	r4, r4, r3, r0
 801f6e2:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801f6e6:	10f0      	asrs	r0, r6, #3
 801f6e8:	b2ed      	uxtb	r5, r5
 801f6ea:	00f6      	lsls	r6, r6, #3
 801f6ec:	fb17 f702 	smulbb	r7, r7, r2
 801f6f0:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f6f4:	fb15 f202 	smulbb	r2, r5, r2
 801f6f8:	b2f6      	uxtb	r6, r6
 801f6fa:	b2a4      	uxth	r4, r4
 801f6fc:	fb00 7003 	mla	r0, r0, r3, r7
 801f700:	fb06 2303 	mla	r3, r6, r3, r2
 801f704:	b29a      	uxth	r2, r3
 801f706:	1c63      	adds	r3, r4, #1
 801f708:	b280      	uxth	r0, r0
 801f70a:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801f70e:	1c53      	adds	r3, r2, #1
 801f710:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f714:	1c42      	adds	r2, r0, #1
 801f716:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f71a:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801f71e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f722:	0940      	lsrs	r0, r0, #5
 801f724:	4323      	orrs	r3, r4
 801f726:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f72a:	4303      	orrs	r3, r0
 801f72c:	800b      	strh	r3, [r1, #0]
 801f72e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f732:	2600      	movs	r6, #0
 801f734:	e764      	b.n	801f600 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 801f736:	2400      	movs	r4, #0
 801f738:	4626      	mov	r6, r4
 801f73a:	e778      	b.n	801f62e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801f73c:	2400      	movs	r4, #0
 801f73e:	e776      	b.n	801f62e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801f740:	463c      	mov	r4, r7
 801f742:	e774      	b.n	801f62e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801f744:	2500      	movs	r5, #0
 801f746:	e78e      	b.n	801f666 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 801f748:	2300      	movs	r3, #0
 801f74a:	461d      	mov	r5, r3
 801f74c:	e79f      	b.n	801f68e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f74e:	4663      	mov	r3, ip
 801f750:	4665      	mov	r5, ip
 801f752:	e79c      	b.n	801f68e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f754:	2300      	movs	r3, #0
 801f756:	e79a      	b.n	801f68e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f758:	463b      	mov	r3, r7
 801f75a:	e798      	b.n	801f68e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f75c:	20015498 	.word	0x20015498

0801f760 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f760:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f764:	b093      	sub	sp, #76	; 0x4c
 801f766:	461d      	mov	r5, r3
 801f768:	920c      	str	r2, [sp, #48]	; 0x30
 801f76a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801f76c:	9107      	str	r1, [sp, #28]
 801f76e:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801f772:	9011      	str	r0, [sp, #68]	; 0x44
 801f774:	6850      	ldr	r0, [r2, #4]
 801f776:	6812      	ldr	r2, [r2, #0]
 801f778:	fb00 1303 	mla	r3, r0, r3, r1
 801f77c:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801f780:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f782:	689b      	ldr	r3, [r3, #8]
 801f784:	3301      	adds	r3, #1
 801f786:	f023 0301 	bic.w	r3, r3, #1
 801f78a:	9306      	str	r3, [sp, #24]
 801f78c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f78e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801f792:	681f      	ldr	r7, [r3, #0]
 801f794:	9b07      	ldr	r3, [sp, #28]
 801f796:	2b00      	cmp	r3, #0
 801f798:	dc03      	bgt.n	801f7a2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801f79a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f79c:	2b00      	cmp	r3, #0
 801f79e:	f340 8267 	ble.w	801fc70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801f7a2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f7a4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f7a8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f7ac:	1e48      	subs	r0, r1, #1
 801f7ae:	f102 3cff 	add.w	ip, r2, #4294967295
 801f7b2:	2d00      	cmp	r5, #0
 801f7b4:	f340 80b8 	ble.w	801f928 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801f7b8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f7bc:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f7c0:	d406      	bmi.n	801f7d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801f7c2:	4586      	cmp	lr, r0
 801f7c4:	da04      	bge.n	801f7d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801f7c6:	2b00      	cmp	r3, #0
 801f7c8:	db02      	blt.n	801f7d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801f7ca:	4563      	cmp	r3, ip
 801f7cc:	f2c0 80ad 	blt.w	801f92a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 801f7d0:	f11e 0e01 	adds.w	lr, lr, #1
 801f7d4:	f100 80a0 	bmi.w	801f918 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801f7d8:	4571      	cmp	r1, lr
 801f7da:	f2c0 809d 	blt.w	801f918 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801f7de:	3301      	adds	r3, #1
 801f7e0:	f100 809a 	bmi.w	801f918 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801f7e4:	429a      	cmp	r2, r3
 801f7e6:	f2c0 8097 	blt.w	801f918 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801f7ea:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801f7ee:	9509      	str	r5, [sp, #36]	; 0x24
 801f7f0:	46c8      	mov	r8, r9
 801f7f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f7f4:	2b00      	cmp	r3, #0
 801f7f6:	f340 80b6 	ble.w	801f966 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801f7fa:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801f7fe:	9308      	str	r3, [sp, #32]
 801f800:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f802:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801f806:	1423      	asrs	r3, r4, #16
 801f808:	ea4f 4026 	mov.w	r0, r6, asr #16
 801f80c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f810:	f100 813e 	bmi.w	801fa90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801f814:	f10c 3bff 	add.w	fp, ip, #4294967295
 801f818:	455b      	cmp	r3, fp
 801f81a:	f280 8139 	bge.w	801fa90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801f81e:	2800      	cmp	r0, #0
 801f820:	f2c0 8136 	blt.w	801fa90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801f824:	f10e 3bff 	add.w	fp, lr, #4294967295
 801f828:	4558      	cmp	r0, fp
 801f82a:	f280 8131 	bge.w	801fa90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801f82e:	9a06      	ldr	r2, [sp, #24]
 801f830:	fb00 3302 	mla	r3, r0, r2, r3
 801f834:	0858      	lsrs	r0, r3, #1
 801f836:	07da      	lsls	r2, r3, #31
 801f838:	f817 c000 	ldrb.w	ip, [r7, r0]
 801f83c:	9a08      	ldr	r2, [sp, #32]
 801f83e:	bf54      	ite	pl
 801f840:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f844:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f848:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f84c:	fa5f fc8c 	uxtb.w	ip, ip
 801f850:	2a00      	cmp	r2, #0
 801f852:	f000 80cb 	beq.w	801f9ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801f856:	1c58      	adds	r0, r3, #1
 801f858:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801f85c:	07c0      	lsls	r0, r0, #31
 801f85e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f862:	bf54      	ite	pl
 801f864:	f00e 0e0f 	andpl.w	lr, lr, #15
 801f868:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801f86c:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801f870:	fa5f fe8e 	uxtb.w	lr, lr
 801f874:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801f878:	b1b9      	cbz	r1, 801f8aa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801f87a:	4453      	add	r3, sl
 801f87c:	0858      	lsrs	r0, r3, #1
 801f87e:	07da      	lsls	r2, r3, #31
 801f880:	5c38      	ldrb	r0, [r7, r0]
 801f882:	bf54      	ite	pl
 801f884:	f000 000f 	andpl.w	r0, r0, #15
 801f888:	1100      	asrmi	r0, r0, #4
 801f88a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f88e:	b2c0      	uxtb	r0, r0
 801f890:	900a      	str	r0, [sp, #40]	; 0x28
 801f892:	1c58      	adds	r0, r3, #1
 801f894:	0843      	lsrs	r3, r0, #1
 801f896:	07c2      	lsls	r2, r0, #31
 801f898:	5cfb      	ldrb	r3, [r7, r3]
 801f89a:	bf54      	ite	pl
 801f89c:	f003 030f 	andpl.w	r3, r3, #15
 801f8a0:	111b      	asrmi	r3, r3, #4
 801f8a2:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f8a6:	b2db      	uxtb	r3, r3
 801f8a8:	930e      	str	r3, [sp, #56]	; 0x38
 801f8aa:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801f8ae:	b289      	uxth	r1, r1
 801f8b0:	fb02 f301 	mul.w	r3, r2, r1
 801f8b4:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801f8b8:	0112      	lsls	r2, r2, #4
 801f8ba:	b289      	uxth	r1, r1
 801f8bc:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801f8c0:	1a40      	subs	r0, r0, r1
 801f8c2:	fa1f fe80 	uxth.w	lr, r0
 801f8c6:	1ad2      	subs	r2, r2, r3
 801f8c8:	980d      	ldr	r0, [sp, #52]	; 0x34
 801f8ca:	b292      	uxth	r2, r2
 801f8cc:	4342      	muls	r2, r0
 801f8ce:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801f8d2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801f8d4:	fb01 c102 	mla	r1, r1, r2, ip
 801f8d8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801f8da:	fb03 1302 	mla	r3, r3, r2, r1
 801f8de:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f8e2:	2bff      	cmp	r3, #255	; 0xff
 801f8e4:	f040 8093 	bne.w	801fa0e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801f8e8:	4bbe      	ldr	r3, [pc, #760]	; (801fbe4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801f8ea:	681a      	ldr	r2, [r3, #0]
 801f8ec:	4bbe      	ldr	r3, [pc, #760]	; (801fbe8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801f8ee:	0951      	lsrs	r1, r2, #5
 801f8f0:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801f8f4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f8f8:	430b      	orrs	r3, r1
 801f8fa:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f8fe:	4313      	orrs	r3, r2
 801f900:	f8a8 3000 	strh.w	r3, [r8]
 801f904:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f906:	441c      	add	r4, r3
 801f908:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f90a:	441e      	add	r6, r3
 801f90c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f90e:	3b01      	subs	r3, #1
 801f910:	f108 0802 	add.w	r8, r8, #2
 801f914:	9309      	str	r3, [sp, #36]	; 0x24
 801f916:	e76c      	b.n	801f7f2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f918:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f91a:	441c      	add	r4, r3
 801f91c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f91e:	3d01      	subs	r5, #1
 801f920:	441e      	add	r6, r3
 801f922:	f109 0902 	add.w	r9, r9, #2
 801f926:	e744      	b.n	801f7b2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801f928:	d021      	beq.n	801f96e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801f92a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801f92c:	1e6b      	subs	r3, r5, #1
 801f92e:	fb00 4003 	mla	r0, r0, r3, r4
 801f932:	1400      	asrs	r0, r0, #16
 801f934:	f53f af59 	bmi.w	801f7ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801f938:	3901      	subs	r1, #1
 801f93a:	4288      	cmp	r0, r1
 801f93c:	f6bf af55 	bge.w	801f7ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801f940:	9920      	ldr	r1, [sp, #128]	; 0x80
 801f942:	fb01 6303 	mla	r3, r1, r3, r6
 801f946:	141b      	asrs	r3, r3, #16
 801f948:	f53f af4f 	bmi.w	801f7ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801f94c:	3a01      	subs	r2, #1
 801f94e:	4293      	cmp	r3, r2
 801f950:	f6bf af4b 	bge.w	801f7ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801f954:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801f958:	9308      	str	r3, [sp, #32]
 801f95a:	46a8      	mov	r8, r5
 801f95c:	46ce      	mov	lr, r9
 801f95e:	f1b8 0f00 	cmp.w	r8, #0
 801f962:	f300 80b5 	bgt.w	801fad0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801f966:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801f96a:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801f96e:	9b07      	ldr	r3, [sp, #28]
 801f970:	2b00      	cmp	r3, #0
 801f972:	f340 817d 	ble.w	801fc70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801f976:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f97a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f97e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f982:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f984:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f988:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f98c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f990:	eef0 6a62 	vmov.f32	s13, s5
 801f994:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f998:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f99c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f9a0:	ee16 4a90 	vmov	r4, s13
 801f9a4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f9a8:	eef0 6a43 	vmov.f32	s13, s6
 801f9ac:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f9b0:	ee12 2a90 	vmov	r2, s5
 801f9b4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f9b8:	fb92 f3f3 	sdiv	r3, r2, r3
 801f9bc:	ee13 2a10 	vmov	r2, s6
 801f9c0:	931f      	str	r3, [sp, #124]	; 0x7c
 801f9c2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f9c4:	fb92 f3f3 	sdiv	r3, r2, r3
 801f9c8:	9320      	str	r3, [sp, #128]	; 0x80
 801f9ca:	9b07      	ldr	r3, [sp, #28]
 801f9cc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801f9ce:	3b01      	subs	r3, #1
 801f9d0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f9d4:	9307      	str	r3, [sp, #28]
 801f9d6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f9d8:	ee16 6a90 	vmov	r6, s13
 801f9dc:	bf14      	ite	ne
 801f9de:	461d      	movne	r5, r3
 801f9e0:	4615      	moveq	r5, r2
 801f9e2:	eeb0 3a67 	vmov.f32	s6, s15
 801f9e6:	eef0 2a47 	vmov.f32	s5, s14
 801f9ea:	e6d3      	b.n	801f794 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801f9ec:	2900      	cmp	r1, #0
 801f9ee:	f43f af5c 	beq.w	801f8aa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801f9f2:	eb0a 0003 	add.w	r0, sl, r3
 801f9f6:	0843      	lsrs	r3, r0, #1
 801f9f8:	07c0      	lsls	r0, r0, #31
 801f9fa:	5cfb      	ldrb	r3, [r7, r3]
 801f9fc:	bf54      	ite	pl
 801f9fe:	f003 030f 	andpl.w	r3, r3, #15
 801fa02:	111b      	asrmi	r3, r3, #4
 801fa04:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801fa08:	b2db      	uxtb	r3, r3
 801fa0a:	930a      	str	r3, [sp, #40]	; 0x28
 801fa0c:	e74d      	b.n	801f8aa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801fa0e:	2b00      	cmp	r3, #0
 801fa10:	f43f af78 	beq.w	801f904 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fa14:	4a73      	ldr	r2, [pc, #460]	; (801fbe4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801fa16:	f8b8 c000 	ldrh.w	ip, [r8]
 801fa1a:	6810      	ldr	r0, [r2, #0]
 801fa1c:	fa1f fe83 	uxth.w	lr, r3
 801fa20:	ea4f 212c 	mov.w	r1, ip, asr #8
 801fa24:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801fa28:	43db      	mvns	r3, r3
 801fa2a:	b2db      	uxtb	r3, r3
 801fa2c:	fb12 f20e 	smulbb	r2, r2, lr
 801fa30:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801fa34:	fb01 2103 	mla	r1, r1, r3, r2
 801fa38:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801fa3c:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801fa40:	b2c0      	uxtb	r0, r0
 801fa42:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801fa46:	fb1b fb0e 	smulbb	fp, fp, lr
 801fa4a:	b289      	uxth	r1, r1
 801fa4c:	fb10 fe0e 	smulbb	lr, r0, lr
 801fa50:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801fa54:	fa5f fc8c 	uxtb.w	ip, ip
 801fa58:	fb02 b203 	mla	r2, r2, r3, fp
 801fa5c:	1c48      	adds	r0, r1, #1
 801fa5e:	fb0c e303 	mla	r3, ip, r3, lr
 801fa62:	b292      	uxth	r2, r2
 801fa64:	b29b      	uxth	r3, r3
 801fa66:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801fa6a:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 801fa6e:	f102 0b01 	add.w	fp, r2, #1
 801fa72:	1c59      	adds	r1, r3, #1
 801fa74:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801fa78:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801fa7c:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801fa80:	0952      	lsrs	r2, r2, #5
 801fa82:	4301      	orrs	r1, r0
 801fa84:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fa88:	4311      	orrs	r1, r2
 801fa8a:	f8a8 1000 	strh.w	r1, [r8]
 801fa8e:	e739      	b.n	801f904 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fa90:	f113 0b01 	adds.w	fp, r3, #1
 801fa94:	f53f af36 	bmi.w	801f904 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fa98:	45dc      	cmp	ip, fp
 801fa9a:	f6ff af33 	blt.w	801f904 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fa9e:	f110 0b01 	adds.w	fp, r0, #1
 801faa2:	f53f af2f 	bmi.w	801f904 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801faa6:	45de      	cmp	lr, fp
 801faa8:	f6ff af2c 	blt.w	801f904 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801faac:	9a08      	ldr	r2, [sp, #32]
 801faae:	9302      	str	r3, [sp, #8]
 801fab0:	fa0f f38e 	sxth.w	r3, lr
 801fab4:	9301      	str	r3, [sp, #4]
 801fab6:	fa0f f38c 	sxth.w	r3, ip
 801faba:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801fabe:	9105      	str	r1, [sp, #20]
 801fac0:	9300      	str	r3, [sp, #0]
 801fac2:	463a      	mov	r2, r7
 801fac4:	4653      	mov	r3, sl
 801fac6:	4641      	mov	r1, r8
 801fac8:	9811      	ldr	r0, [sp, #68]	; 0x44
 801faca:	f7ff fd73 	bl	801f5b4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801face:	e719      	b.n	801f904 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fad0:	9906      	ldr	r1, [sp, #24]
 801fad2:	1422      	asrs	r2, r4, #16
 801fad4:	1433      	asrs	r3, r6, #16
 801fad6:	fb01 2303 	mla	r3, r1, r3, r2
 801fada:	085a      	lsrs	r2, r3, #1
 801fadc:	07d9      	lsls	r1, r3, #31
 801fade:	5cba      	ldrb	r2, [r7, r2]
 801fae0:	bf54      	ite	pl
 801fae2:	f002 020f 	andpl.w	r2, r2, #15
 801fae6:	1112      	asrmi	r2, r2, #4
 801fae8:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801faec:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801faf0:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801faf4:	b2d2      	uxtb	r2, r2
 801faf6:	2800      	cmp	r0, #0
 801faf8:	d062      	beq.n	801fbc0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 801fafa:	f103 0a01 	add.w	sl, r3, #1
 801fafe:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801fb02:	f01a 0f01 	tst.w	sl, #1
 801fb06:	5c79      	ldrb	r1, [r7, r1]
 801fb08:	bf0c      	ite	eq
 801fb0a:	f001 010f 	andeq.w	r1, r1, #15
 801fb0e:	1109      	asrne	r1, r1, #4
 801fb10:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fb14:	b2c9      	uxtb	r1, r1
 801fb16:	910f      	str	r1, [sp, #60]	; 0x3c
 801fb18:	f1bc 0f00 	cmp.w	ip, #0
 801fb1c:	d019      	beq.n	801fb52 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801fb1e:	9908      	ldr	r1, [sp, #32]
 801fb20:	440b      	add	r3, r1
 801fb22:	0859      	lsrs	r1, r3, #1
 801fb24:	f013 0f01 	tst.w	r3, #1
 801fb28:	5c79      	ldrb	r1, [r7, r1]
 801fb2a:	bf0c      	ite	eq
 801fb2c:	f001 010f 	andeq.w	r1, r1, #15
 801fb30:	1109      	asrne	r1, r1, #4
 801fb32:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fb36:	b2c9      	uxtb	r1, r1
 801fb38:	3301      	adds	r3, #1
 801fb3a:	910b      	str	r1, [sp, #44]	; 0x2c
 801fb3c:	0859      	lsrs	r1, r3, #1
 801fb3e:	07db      	lsls	r3, r3, #31
 801fb40:	5c79      	ldrb	r1, [r7, r1]
 801fb42:	bf54      	ite	pl
 801fb44:	f001 010f 	andpl.w	r1, r1, #15
 801fb48:	1109      	asrmi	r1, r1, #4
 801fb4a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fb4e:	b2c9      	uxtb	r1, r1
 801fb50:	9110      	str	r1, [sp, #64]	; 0x40
 801fb52:	b280      	uxth	r0, r0
 801fb54:	fa1f fc8c 	uxth.w	ip, ip
 801fb58:	fb00 f30c 	mul.w	r3, r0, ip
 801fb5c:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801fb60:	0100      	lsls	r0, r0, #4
 801fb62:	fa1f fc8c 	uxth.w	ip, ip
 801fb66:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801fb6a:	eba1 010c 	sub.w	r1, r1, ip
 801fb6e:	fa1f fa81 	uxth.w	sl, r1
 801fb72:	1ac0      	subs	r0, r0, r3
 801fb74:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801fb76:	b280      	uxth	r0, r0
 801fb78:	4348      	muls	r0, r1
 801fb7a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801fb7c:	fb02 020a 	mla	r2, r2, sl, r0
 801fb80:	fb0c 2c01 	mla	ip, ip, r1, r2
 801fb84:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801fb86:	fb03 c302 	mla	r3, r3, r2, ip
 801fb8a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fb8e:	2bff      	cmp	r3, #255	; 0xff
 801fb90:	d12c      	bne.n	801fbec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 801fb92:	4b14      	ldr	r3, [pc, #80]	; (801fbe4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801fb94:	681a      	ldr	r2, [r3, #0]
 801fb96:	4b14      	ldr	r3, [pc, #80]	; (801fbe8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801fb98:	0951      	lsrs	r1, r2, #5
 801fb9a:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801fb9e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fba2:	430b      	orrs	r3, r1
 801fba4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fba8:	4313      	orrs	r3, r2
 801fbaa:	f8ae 3000 	strh.w	r3, [lr]
 801fbae:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fbb0:	441c      	add	r4, r3
 801fbb2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fbb4:	f10e 0e02 	add.w	lr, lr, #2
 801fbb8:	441e      	add	r6, r3
 801fbba:	f108 38ff 	add.w	r8, r8, #4294967295
 801fbbe:	e6ce      	b.n	801f95e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801fbc0:	f1bc 0f00 	cmp.w	ip, #0
 801fbc4:	d0c5      	beq.n	801fb52 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801fbc6:	9908      	ldr	r1, [sp, #32]
 801fbc8:	440b      	add	r3, r1
 801fbca:	0859      	lsrs	r1, r3, #1
 801fbcc:	07db      	lsls	r3, r3, #31
 801fbce:	5c79      	ldrb	r1, [r7, r1]
 801fbd0:	bf54      	ite	pl
 801fbd2:	f001 010f 	andpl.w	r1, r1, #15
 801fbd6:	1109      	asrmi	r1, r1, #4
 801fbd8:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fbdc:	b2c9      	uxtb	r1, r1
 801fbde:	910b      	str	r1, [sp, #44]	; 0x2c
 801fbe0:	e7b7      	b.n	801fb52 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801fbe2:	bf00      	nop
 801fbe4:	20015498 	.word	0x20015498
 801fbe8:	fffff800 	.word	0xfffff800
 801fbec:	2b00      	cmp	r3, #0
 801fbee:	d0de      	beq.n	801fbae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801fbf0:	4a21      	ldr	r2, [pc, #132]	; (801fc78 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 801fbf2:	f8be c000 	ldrh.w	ip, [lr]
 801fbf6:	6810      	ldr	r0, [r2, #0]
 801fbf8:	fa1f fa83 	uxth.w	sl, r3
 801fbfc:	ea4f 212c 	mov.w	r1, ip, asr #8
 801fc00:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801fc04:	43db      	mvns	r3, r3
 801fc06:	b2db      	uxtb	r3, r3
 801fc08:	fb12 f20a 	smulbb	r2, r2, sl
 801fc0c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801fc10:	fb01 2103 	mla	r1, r1, r3, r2
 801fc14:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801fc18:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801fc1c:	b2c0      	uxtb	r0, r0
 801fc1e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801fc22:	fa5f fc8c 	uxtb.w	ip, ip
 801fc26:	fb10 f00a 	smulbb	r0, r0, sl
 801fc2a:	fb0c 0003 	mla	r0, ip, r3, r0
 801fc2e:	b289      	uxth	r1, r1
 801fc30:	fb1b fb0a 	smulbb	fp, fp, sl
 801fc34:	b280      	uxth	r0, r0
 801fc36:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801fc3a:	fb02 b203 	mla	r2, r2, r3, fp
 801fc3e:	1c4b      	adds	r3, r1, #1
 801fc40:	f100 0b01 	add.w	fp, r0, #1
 801fc44:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801fc48:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801fc4c:	b292      	uxth	r2, r2
 801fc4e:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801fc52:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801fc56:	ea4b 0101 	orr.w	r1, fp, r1
 801fc5a:	f102 0b01 	add.w	fp, r2, #1
 801fc5e:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801fc62:	0952      	lsrs	r2, r2, #5
 801fc64:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fc68:	4311      	orrs	r1, r2
 801fc6a:	f8ae 1000 	strh.w	r1, [lr]
 801fc6e:	e79e      	b.n	801fbae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801fc70:	b013      	add	sp, #76	; 0x4c
 801fc72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fc76:	bf00      	nop
 801fc78:	20015498 	.word	0x20015498

0801fc7c <CRC_Lock>:
 801fc7c:	b530      	push	{r4, r5, lr}
 801fc7e:	4a20      	ldr	r2, [pc, #128]	; (801fd00 <CRC_Lock+0x84>)
 801fc80:	6813      	ldr	r3, [r2, #0]
 801fc82:	f023 0301 	bic.w	r3, r3, #1
 801fc86:	6013      	str	r3, [r2, #0]
 801fc88:	4b1e      	ldr	r3, [pc, #120]	; (801fd04 <CRC_Lock+0x88>)
 801fc8a:	681a      	ldr	r2, [r3, #0]
 801fc8c:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801fc90:	4022      	ands	r2, r4
 801fc92:	f24c 2540 	movw	r5, #49728	; 0xc240
 801fc96:	42aa      	cmp	r2, r5
 801fc98:	d005      	beq.n	801fca6 <CRC_Lock+0x2a>
 801fc9a:	681b      	ldr	r3, [r3, #0]
 801fc9c:	f24c 2270 	movw	r2, #49776	; 0xc270
 801fca0:	4023      	ands	r3, r4
 801fca2:	4293      	cmp	r3, r2
 801fca4:	d124      	bne.n	801fcf0 <CRC_Lock+0x74>
 801fca6:	4b18      	ldr	r3, [pc, #96]	; (801fd08 <CRC_Lock+0x8c>)
 801fca8:	681b      	ldr	r3, [r3, #0]
 801fcaa:	bb0b      	cbnz	r3, 801fcf0 <CRC_Lock+0x74>
 801fcac:	4b17      	ldr	r3, [pc, #92]	; (801fd0c <CRC_Lock+0x90>)
 801fcae:	681a      	ldr	r2, [r3, #0]
 801fcb0:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801fcb4:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 801fcb8:	d00d      	beq.n	801fcd6 <CRC_Lock+0x5a>
 801fcba:	681a      	ldr	r2, [r3, #0]
 801fcbc:	f240 4483 	movw	r4, #1155	; 0x483
 801fcc0:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801fcc4:	42a2      	cmp	r2, r4
 801fcc6:	d006      	beq.n	801fcd6 <CRC_Lock+0x5a>
 801fcc8:	681b      	ldr	r3, [r3, #0]
 801fcca:	f240 4285 	movw	r2, #1157	; 0x485
 801fcce:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801fcd2:	4293      	cmp	r3, r2
 801fcd4:	d10c      	bne.n	801fcf0 <CRC_Lock+0x74>
 801fcd6:	4b0e      	ldr	r3, [pc, #56]	; (801fd10 <CRC_Lock+0x94>)
 801fcd8:	2201      	movs	r2, #1
 801fcda:	601a      	str	r2, [r3, #0]
 801fcdc:	681a      	ldr	r2, [r3, #0]
 801fcde:	2a00      	cmp	r2, #0
 801fce0:	d1fc      	bne.n	801fcdc <CRC_Lock+0x60>
 801fce2:	4b0c      	ldr	r3, [pc, #48]	; (801fd14 <CRC_Lock+0x98>)
 801fce4:	6018      	str	r0, [r3, #0]
 801fce6:	6818      	ldr	r0, [r3, #0]
 801fce8:	1a43      	subs	r3, r0, r1
 801fcea:	4258      	negs	r0, r3
 801fcec:	4158      	adcs	r0, r3
 801fcee:	bd30      	pop	{r4, r5, pc}
 801fcf0:	4b09      	ldr	r3, [pc, #36]	; (801fd18 <CRC_Lock+0x9c>)
 801fcf2:	2201      	movs	r2, #1
 801fcf4:	601a      	str	r2, [r3, #0]
 801fcf6:	681a      	ldr	r2, [r3, #0]
 801fcf8:	2a00      	cmp	r2, #0
 801fcfa:	d1fc      	bne.n	801fcf6 <CRC_Lock+0x7a>
 801fcfc:	4b07      	ldr	r3, [pc, #28]	; (801fd1c <CRC_Lock+0xa0>)
 801fcfe:	e7f1      	b.n	801fce4 <CRC_Lock+0x68>
 801fd00:	e0002000 	.word	0xe0002000
 801fd04:	e000ed00 	.word	0xe000ed00
 801fd08:	e0042000 	.word	0xe0042000
 801fd0c:	5c001000 	.word	0x5c001000
 801fd10:	58024c08 	.word	0x58024c08
 801fd14:	58024c00 	.word	0x58024c00
 801fd18:	40023008 	.word	0x40023008
 801fd1c:	40023000 	.word	0x40023000

0801fd20 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801fd20:	6101      	str	r1, [r0, #16]
 801fd22:	4770      	bx	lr

0801fd24 <_ZN8touchgfx8Gestures4tickEv>:
 801fd24:	7b83      	ldrb	r3, [r0, #14]
 801fd26:	b14b      	cbz	r3, 801fd3c <_ZN8touchgfx8Gestures4tickEv+0x18>
 801fd28:	8903      	ldrh	r3, [r0, #8]
 801fd2a:	3301      	adds	r3, #1
 801fd2c:	b29b      	uxth	r3, r3
 801fd2e:	2b07      	cmp	r3, #7
 801fd30:	8103      	strh	r3, [r0, #8]
 801fd32:	bf81      	itttt	hi
 801fd34:	2300      	movhi	r3, #0
 801fd36:	8143      	strhhi	r3, [r0, #10]
 801fd38:	8183      	strhhi	r3, [r0, #12]
 801fd3a:	7383      	strbhi	r3, [r0, #14]
 801fd3c:	4770      	bx	lr
	...

0801fd40 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801fd40:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801fd44:	4698      	mov	r8, r3
 801fd46:	8883      	ldrh	r3, [r0, #4]
 801fd48:	f8ad 3006 	strh.w	r3, [sp, #6]
 801fd4c:	eba8 0303 	sub.w	r3, r8, r3
 801fd50:	b21b      	sxth	r3, r3
 801fd52:	4604      	mov	r4, r0
 801fd54:	2b00      	cmp	r3, #0
 801fd56:	4617      	mov	r7, r2
 801fd58:	4a18      	ldr	r2, [pc, #96]	; (801fdbc <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 801fd5a:	9200      	str	r2, [sp, #0]
 801fd5c:	bfb8      	it	lt
 801fd5e:	425b      	neglt	r3, r3
 801fd60:	8aa2      	ldrh	r2, [r4, #20]
 801fd62:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801fd66:	f8ad 800a 	strh.w	r8, [sp, #10]
 801fd6a:	b21b      	sxth	r3, r3
 801fd6c:	460e      	mov	r6, r1
 801fd6e:	4293      	cmp	r3, r2
 801fd70:	88c1      	ldrh	r1, [r0, #6]
 801fd72:	f8ad 1008 	strh.w	r1, [sp, #8]
 801fd76:	f04f 0000 	mov.w	r0, #0
 801fd7a:	f88d 0004 	strb.w	r0, [sp, #4]
 801fd7e:	f8ad 500c 	strh.w	r5, [sp, #12]
 801fd82:	dc07      	bgt.n	801fd94 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 801fd84:	1a69      	subs	r1, r5, r1
 801fd86:	b209      	sxth	r1, r1
 801fd88:	2900      	cmp	r1, #0
 801fd8a:	bfb8      	it	lt
 801fd8c:	4249      	neglt	r1, r1
 801fd8e:	b209      	sxth	r1, r1
 801fd90:	428a      	cmp	r2, r1
 801fd92:	da10      	bge.n	801fdb6 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 801fd94:	6920      	ldr	r0, [r4, #16]
 801fd96:	6803      	ldr	r3, [r0, #0]
 801fd98:	4669      	mov	r1, sp
 801fd9a:	685b      	ldr	r3, [r3, #4]
 801fd9c:	4798      	blx	r3
 801fd9e:	eba8 0606 	sub.w	r6, r8, r6
 801fda2:	2300      	movs	r3, #0
 801fda4:	1bef      	subs	r7, r5, r7
 801fda6:	2001      	movs	r0, #1
 801fda8:	8123      	strh	r3, [r4, #8]
 801fdaa:	8166      	strh	r6, [r4, #10]
 801fdac:	81a7      	strh	r7, [r4, #12]
 801fdae:	f8a4 8004 	strh.w	r8, [r4, #4]
 801fdb2:	80e5      	strh	r5, [r4, #6]
 801fdb4:	73a0      	strb	r0, [r4, #14]
 801fdb6:	b004      	add	sp, #16
 801fdb8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801fdbc:	08024120 	.word	0x08024120

0801fdc0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801fdc0:	b5f0      	push	{r4, r5, r6, r7, lr}
 801fdc2:	461e      	mov	r6, r3
 801fdc4:	1e4b      	subs	r3, r1, #1
 801fdc6:	2b01      	cmp	r3, #1
 801fdc8:	b085      	sub	sp, #20
 801fdca:	4604      	mov	r4, r0
 801fdcc:	460d      	mov	r5, r1
 801fdce:	4617      	mov	r7, r2
 801fdd0:	d84b      	bhi.n	801fe6a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801fdd2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801fdd6:	1cd3      	adds	r3, r2, #3
 801fdd8:	b29b      	uxth	r3, r3
 801fdda:	2b06      	cmp	r3, #6
 801fddc:	d916      	bls.n	801fe0c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801fdde:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 801fe80 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801fde2:	f8cd c004 	str.w	ip, [sp, #4]
 801fde6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801fdea:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801fdee:	6900      	ldr	r0, [r0, #16]
 801fdf0:	f8ad 100c 	strh.w	r1, [sp, #12]
 801fdf4:	f04f 0c00 	mov.w	ip, #0
 801fdf8:	f88d c008 	strb.w	ip, [sp, #8]
 801fdfc:	f8ad 200a 	strh.w	r2, [sp, #10]
 801fe00:	f8ad 300e 	strh.w	r3, [sp, #14]
 801fe04:	6803      	ldr	r3, [r0, #0]
 801fe06:	a901      	add	r1, sp, #4
 801fe08:	689b      	ldr	r3, [r3, #8]
 801fe0a:	4798      	blx	r3
 801fe0c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801fe10:	1cd3      	adds	r3, r2, #3
 801fe12:	b29b      	uxth	r3, r3
 801fe14:	2b06      	cmp	r3, #6
 801fe16:	d916      	bls.n	801fe46 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801fe18:	f8df c064 	ldr.w	ip, [pc, #100]	; 801fe80 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801fe1c:	f8cd c004 	str.w	ip, [sp, #4]
 801fe20:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801fe24:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801fe28:	6920      	ldr	r0, [r4, #16]
 801fe2a:	f8ad 100c 	strh.w	r1, [sp, #12]
 801fe2e:	f04f 0c01 	mov.w	ip, #1
 801fe32:	f88d c008 	strb.w	ip, [sp, #8]
 801fe36:	f8ad 200a 	strh.w	r2, [sp, #10]
 801fe3a:	f8ad 300e 	strh.w	r3, [sp, #14]
 801fe3e:	6803      	ldr	r3, [r0, #0]
 801fe40:	a901      	add	r1, sp, #4
 801fe42:	689b      	ldr	r3, [r3, #8]
 801fe44:	4798      	blx	r3
 801fe46:	4b0d      	ldr	r3, [pc, #52]	; (801fe7c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801fe48:	9301      	str	r3, [sp, #4]
 801fe4a:	6920      	ldr	r0, [r4, #16]
 801fe4c:	f88d 5008 	strb.w	r5, [sp, #8]
 801fe50:	2300      	movs	r3, #0
 801fe52:	f8ad 700a 	strh.w	r7, [sp, #10]
 801fe56:	f8ad 600c 	strh.w	r6, [sp, #12]
 801fe5a:	f8ad 300e 	strh.w	r3, [sp, #14]
 801fe5e:	6803      	ldr	r3, [r0, #0]
 801fe60:	a901      	add	r1, sp, #4
 801fe62:	681b      	ldr	r3, [r3, #0]
 801fe64:	4798      	blx	r3
 801fe66:	b005      	add	sp, #20
 801fe68:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801fe6a:	2900      	cmp	r1, #0
 801fe6c:	d1eb      	bne.n	801fe46 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801fe6e:	80a2      	strh	r2, [r4, #4]
 801fe70:	80c6      	strh	r6, [r0, #6]
 801fe72:	60a1      	str	r1, [r4, #8]
 801fe74:	81a1      	strh	r1, [r4, #12]
 801fe76:	73a1      	strb	r1, [r4, #14]
 801fe78:	e7e5      	b.n	801fe46 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801fe7a:	bf00      	nop
 801fe7c:	0802410c 	.word	0x0802410c
 801fe80:	08024134 	.word	0x08024134

0801fe84 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 801fe84:	10c9      	asrs	r1, r1, #3
 801fe86:	2900      	cmp	r1, #0
 801fe88:	bfb8      	it	lt
 801fe8a:	4249      	neglt	r1, r1
 801fe8c:	2801      	cmp	r0, #1
 801fe8e:	d108      	bne.n	801fea2 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 801fe90:	f3c1 0008 	ubfx	r0, r1, #0, #9
 801fe94:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 801fe98:	4601      	mov	r1, r0
 801fe9a:	dd02      	ble.n	801fea2 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 801fe9c:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 801fea0:	4770      	bx	lr
 801fea2:	29ff      	cmp	r1, #255	; 0xff
 801fea4:	bfa8      	it	ge
 801fea6:	21ff      	movge	r1, #255	; 0xff
 801fea8:	4608      	mov	r0, r1
 801feaa:	4770      	bx	lr

0801feac <_ZN8touchgfx10Rasterizer6lineToEii>:
 801feac:	b410      	push	{r4}
 801feae:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801feb2:	429c      	cmp	r4, r3
 801feb4:	d803      	bhi.n	801febe <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 801feb6:	f85d 4b04 	ldr.w	r4, [sp], #4
 801feba:	f7ef b97d 	b.w	800f1b8 <_ZN8touchgfx7Outline6lineToEii>
 801febe:	f85d 4b04 	ldr.w	r4, [sp], #4
 801fec2:	4770      	bx	lr

0801fec4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 801fec4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fec8:	b08b      	sub	sp, #44	; 0x2c
 801feca:	e9cd 2306 	strd	r2, r3, [sp, #24]
 801fece:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 801fed2:	9308      	str	r3, [sp, #32]
 801fed4:	4606      	mov	r6, r0
 801fed6:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 801feda:	9309      	str	r3, [sp, #36]	; 0x24
 801fedc:	468a      	mov	sl, r1
 801fede:	f7ef fad8 	bl	800f492 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 801fee2:	68b5      	ldr	r5, [r6, #8]
 801fee4:	4604      	mov	r4, r0
 801fee6:	2d00      	cmp	r5, #0
 801fee8:	d044      	beq.n	801ff74 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 801feea:	6873      	ldr	r3, [r6, #4]
 801feec:	42ab      	cmp	r3, r5
 801feee:	d33d      	bcc.n	801ff6c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 801fef0:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801fef4:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 801fef8:	eb02 0b03 	add.w	fp, r2, r3
 801fefc:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 801ff00:	fb02 1203 	mla	r2, r2, r3, r1
 801ff04:	9205      	str	r2, [sp, #20]
 801ff06:	1e6a      	subs	r2, r5, #1
 801ff08:	9204      	str	r2, [sp, #16]
 801ff0a:	f04f 0800 	mov.w	r8, #0
 801ff0e:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 801ff12:	f9b4 7000 	ldrsh.w	r7, [r4]
 801ff16:	454b      	cmp	r3, r9
 801ff18:	463a      	mov	r2, r7
 801ff1a:	d008      	beq.n	801ff2e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 801ff1c:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 801ff20:	eb03 0b09 	add.w	fp, r3, r9
 801ff24:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 801ff28:	fb03 1309 	mla	r3, r3, r9, r1
 801ff2c:	9305      	str	r3, [sp, #20]
 801ff2e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801ff32:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 801ff36:	4498      	add	r8, r3
 801ff38:	9b04      	ldr	r3, [sp, #16]
 801ff3a:	3b01      	subs	r3, #1
 801ff3c:	9304      	str	r3, [sp, #16]
 801ff3e:	9b04      	ldr	r3, [sp, #16]
 801ff40:	3301      	adds	r3, #1
 801ff42:	d015      	beq.n	801ff70 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 801ff44:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 801ff48:	42bb      	cmp	r3, r7
 801ff4a:	d117      	bne.n	801ff7c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 801ff4c:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 801ff50:	9b04      	ldr	r3, [sp, #16]
 801ff52:	4548      	cmp	r0, r9
 801ff54:	f103 33ff 	add.w	r3, r3, #4294967295
 801ff58:	d17f      	bne.n	802005a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 801ff5a:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 801ff5e:	4401      	add	r1, r0
 801ff60:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801ff64:	4480      	add	r8, r0
 801ff66:	e7e9      	b.n	801ff3c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 801ff68:	461f      	mov	r7, r3
 801ff6a:	e044      	b.n	801fff6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 801ff6c:	2000      	movs	r0, #0
 801ff6e:	e002      	b.n	801ff76 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 801ff70:	2900      	cmp	r1, #0
 801ff72:	d16f      	bne.n	8020054 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 801ff74:	2001      	movs	r0, #1
 801ff76:	b00b      	add	sp, #44	; 0x2c
 801ff78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ff7c:	2900      	cmp	r1, #0
 801ff7e:	d030      	beq.n	801ffe2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 801ff80:	2f00      	cmp	r7, #0
 801ff82:	db29      	blt.n	801ffd8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 801ff84:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 801ff88:	42bb      	cmp	r3, r7
 801ff8a:	dd25      	ble.n	801ffd8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 801ff8c:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 801ff90:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 801ff94:	f7ff ff76 	bl	801fe84 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 801ff98:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ff9a:	fb10 f003 	smulbb	r0, r0, r3
 801ff9e:	b280      	uxth	r0, r0
 801ffa0:	1c41      	adds	r1, r0, #1
 801ffa2:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801ffa6:	1209      	asrs	r1, r1, #8
 801ffa8:	f011 0fff 	tst.w	r1, #255	; 0xff
 801ffac:	d014      	beq.n	801ffd8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 801ffae:	9808      	ldr	r0, [sp, #32]
 801ffb0:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 801ffb2:	b2c9      	uxtb	r1, r1
 801ffb4:	b2ba      	uxth	r2, r7
 801ffb6:	9102      	str	r1, [sp, #8]
 801ffb8:	2101      	movs	r1, #1
 801ffba:	4413      	add	r3, r2
 801ffbc:	9101      	str	r1, [sp, #4]
 801ffbe:	4402      	add	r2, r0
 801ffc0:	fa0f f18b 	sxth.w	r1, fp
 801ffc4:	f8da 0000 	ldr.w	r0, [sl]
 801ffc8:	9100      	str	r1, [sp, #0]
 801ffca:	6941      	ldr	r1, [r0, #20]
 801ffcc:	b21b      	sxth	r3, r3
 801ffce:	460d      	mov	r5, r1
 801ffd0:	b212      	sxth	r2, r2
 801ffd2:	9905      	ldr	r1, [sp, #20]
 801ffd4:	4650      	mov	r0, sl
 801ffd6:	47a8      	blx	r5
 801ffd8:	9b04      	ldr	r3, [sp, #16]
 801ffda:	3301      	adds	r3, #1
 801ffdc:	f107 0201 	add.w	r2, r7, #1
 801ffe0:	d0c8      	beq.n	801ff74 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 801ffe2:	f9b4 7000 	ldrsh.w	r7, [r4]
 801ffe6:	1abb      	subs	r3, r7, r2
 801ffe8:	2b00      	cmp	r3, #0
 801ffea:	dd31      	ble.n	8020050 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 801ffec:	2a00      	cmp	r2, #0
 801ffee:	dabb      	bge.n	801ff68 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 801fff0:	2f00      	cmp	r7, #0
 801fff2:	dd2d      	ble.n	8020050 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 801fff4:	2200      	movs	r2, #0
 801fff6:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 801fffa:	19d1      	adds	r1, r2, r7
 801fffc:	4299      	cmp	r1, r3
 801fffe:	db02      	blt.n	8020006 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8020000:	1a9f      	subs	r7, r3, r2
 8020002:	2f00      	cmp	r7, #0
 8020004:	dd24      	ble.n	8020050 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8020006:	ea4f 1188 	mov.w	r1, r8, lsl #6
 802000a:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 802000e:	f7ff ff39 	bl	801fe84 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8020012:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020014:	fb10 f003 	smulbb	r0, r0, r3
 8020018:	b280      	uxth	r0, r0
 802001a:	1c41      	adds	r1, r0, #1
 802001c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8020020:	1209      	asrs	r1, r1, #8
 8020022:	f011 0fff 	tst.w	r1, #255	; 0xff
 8020026:	d013      	beq.n	8020050 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8020028:	9808      	ldr	r0, [sp, #32]
 802002a:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 802002c:	b292      	uxth	r2, r2
 802002e:	b2c9      	uxtb	r1, r1
 8020030:	4413      	add	r3, r2
 8020032:	9102      	str	r1, [sp, #8]
 8020034:	4402      	add	r2, r0
 8020036:	b23f      	sxth	r7, r7
 8020038:	f8da 0000 	ldr.w	r0, [sl]
 802003c:	9701      	str	r7, [sp, #4]
 802003e:	fa0f f18b 	sxth.w	r1, fp
 8020042:	9100      	str	r1, [sp, #0]
 8020044:	6947      	ldr	r7, [r0, #20]
 8020046:	9905      	ldr	r1, [sp, #20]
 8020048:	b21b      	sxth	r3, r3
 802004a:	b212      	sxth	r2, r2
 802004c:	4650      	mov	r0, sl
 802004e:	47b8      	blx	r7
 8020050:	464b      	mov	r3, r9
 8020052:	e75c      	b.n	801ff0e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8020054:	2f00      	cmp	r7, #0
 8020056:	da95      	bge.n	801ff84 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8020058:	e78c      	b.n	801ff74 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802005a:	2900      	cmp	r1, #0
 802005c:	d0f8      	beq.n	8020050 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802005e:	e78f      	b.n	801ff80 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08020060 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8020060:	4b4c      	ldr	r3, [pc, #304]	; (8020194 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x134>)
 8020062:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8020066:	2500      	movs	r5, #0
 8020068:	f100 0620 	add.w	r6, r0, #32
 802006c:	4604      	mov	r4, r0
 802006e:	e9c0 3100 	strd	r3, r1, [r0]
 8020072:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8020076:	e9c0 5504 	strd	r5, r5, [r0, #16]
 802007a:	e9c0 5506 	strd	r5, r5, [r0, #24]
 802007e:	f100 0718 	add.w	r7, r0, #24
 8020082:	4630      	mov	r0, r6
 8020084:	4690      	mov	r8, r2
 8020086:	f7ee fbcf 	bl	800e828 <_ZN8touchgfx7OutlineC1Ev>
 802008a:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 802008e:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8020092:	2301      	movs	r3, #1
 8020094:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 8020098:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 802009c:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 80200a0:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 80200a4:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80200a8:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 80200ac:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 80200b0:	f9b8 2000 	ldrsh.w	r2, [r8]
 80200b4:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 80200b8:	f8d4 c004 	ldr.w	ip, [r4, #4]
 80200bc:	9500      	str	r5, [sp, #0]
 80200be:	4410      	add	r0, r2
 80200c0:	b280      	uxth	r0, r0
 80200c2:	fa0f fa80 	sxth.w	sl, r0
 80200c6:	45aa      	cmp	sl, r5
 80200c8:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 80200cc:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 80200d0:	dd5c      	ble.n	802018c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 80200d2:	4591      	cmp	r9, r2
 80200d4:	dd5a      	ble.n	802018c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 80200d6:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 80200da:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 80200de:	440b      	add	r3, r1
 80200e0:	b29b      	uxth	r3, r3
 80200e2:	b21d      	sxth	r5, r3
 80200e4:	2d00      	cmp	r5, #0
 80200e6:	dd51      	ble.n	802018c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 80200e8:	458e      	cmp	lr, r1
 80200ea:	dd4f      	ble.n	802018c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 80200ec:	45d1      	cmp	r9, sl
 80200ee:	bfb8      	it	lt
 80200f0:	fa1f f089 	uxthlt.w	r0, r9
 80200f4:	45ae      	cmp	lr, r5
 80200f6:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 80200fa:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 80200fe:	bfb8      	it	lt
 8020100:	fa1f f38e 	uxthlt.w	r3, lr
 8020104:	1a80      	subs	r0, r0, r2
 8020106:	1a5b      	subs	r3, r3, r1
 8020108:	f8ad 0004 	strh.w	r0, [sp, #4]
 802010c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8020110:	f8ad 2000 	strh.w	r2, [sp]
 8020114:	f8ad 1002 	strh.w	r1, [sp, #2]
 8020118:	466d      	mov	r5, sp
 802011a:	e895 0003 	ldmia.w	r5, {r0, r1}
 802011e:	e887 0003 	stmia.w	r7, {r0, r1}
 8020122:	f8dc 3000 	ldr.w	r3, [ip]
 8020126:	4660      	mov	r0, ip
 8020128:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802012a:	4639      	mov	r1, r7
 802012c:	4798      	blx	r3
 802012e:	6861      	ldr	r1, [r4, #4]
 8020130:	4628      	mov	r0, r5
 8020132:	3104      	adds	r1, #4
 8020134:	f7f0 fd0c 	bl	8010b50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020138:	4638      	mov	r0, r7
 802013a:	f7f0 fce1 	bl	8010b00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802013e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8020142:	f8bd 2000 	ldrh.w	r2, [sp]
 8020146:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 802014a:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 802014e:	4630      	mov	r0, r6
 8020150:	f7ee fb4e 	bl	800e7f0 <_ZN8touchgfx7Outline5resetEv>
 8020154:	f9bd 3000 	ldrsh.w	r3, [sp]
 8020158:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 802015c:	015b      	lsls	r3, r3, #5
 802015e:	60a3      	str	r3, [r4, #8]
 8020160:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8020164:	015b      	lsls	r3, r3, #5
 8020166:	60e3      	str	r3, [r4, #12]
 8020168:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 802016c:	015b      	lsls	r3, r3, #5
 802016e:	6123      	str	r3, [r4, #16]
 8020170:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8020174:	015b      	lsls	r3, r3, #5
 8020176:	6163      	str	r3, [r4, #20]
 8020178:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 802017c:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8020180:	4620      	mov	r0, r4
 8020182:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 8020186:	b002      	add	sp, #8
 8020188:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802018c:	2300      	movs	r3, #0
 802018e:	9301      	str	r3, [sp, #4]
 8020190:	e7c2      	b.n	8020118 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb8>
 8020192:	bf00      	nop
 8020194:	0802399c 	.word	0x0802399c

08020198 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8020198:	b510      	push	{r4, lr}
 802019a:	4b07      	ldr	r3, [pc, #28]	; (80201b8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 802019c:	781b      	ldrb	r3, [r3, #0]
 802019e:	2b01      	cmp	r3, #1
 80201a0:	d108      	bne.n	80201b4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 80201a2:	6843      	ldr	r3, [r0, #4]
 80201a4:	6814      	ldr	r4, [r2, #0]
 80201a6:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80201aa:	680b      	ldr	r3, [r1, #0]
 80201ac:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 80201b0:	6013      	str	r3, [r2, #0]
 80201b2:	600c      	str	r4, [r1, #0]
 80201b4:	bd10      	pop	{r4, pc}
 80201b6:	bf00      	nop
 80201b8:	20015480 	.word	0x20015480

080201bc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 80201bc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80201be:	ab02      	add	r3, sp, #8
 80201c0:	4604      	mov	r4, r0
 80201c2:	f843 2d08 	str.w	r2, [r3, #-8]!
 80201c6:	9101      	str	r1, [sp, #4]
 80201c8:	461a      	mov	r2, r3
 80201ca:	a901      	add	r1, sp, #4
 80201cc:	f7ff ffe4 	bl	8020198 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80201d0:	68a3      	ldr	r3, [r4, #8]
 80201d2:	9901      	ldr	r1, [sp, #4]
 80201d4:	9a00      	ldr	r2, [sp, #0]
 80201d6:	1ac9      	subs	r1, r1, r3
 80201d8:	68e3      	ldr	r3, [r4, #12]
 80201da:	9101      	str	r1, [sp, #4]
 80201dc:	1ad2      	subs	r2, r2, r3
 80201de:	2a00      	cmp	r2, #0
 80201e0:	9200      	str	r2, [sp, #0]
 80201e2:	db1c      	blt.n	802021e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 80201e4:	6963      	ldr	r3, [r4, #20]
 80201e6:	429a      	cmp	r2, r3
 80201e8:	bfac      	ite	ge
 80201ea:	2002      	movge	r0, #2
 80201ec:	2000      	movlt	r0, #0
 80201ee:	2900      	cmp	r1, #0
 80201f0:	db17      	blt.n	8020222 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 80201f2:	6923      	ldr	r3, [r4, #16]
 80201f4:	4299      	cmp	r1, r3
 80201f6:	bfac      	ite	ge
 80201f8:	2308      	movge	r3, #8
 80201fa:	2300      	movlt	r3, #0
 80201fc:	4303      	orrs	r3, r0
 80201fe:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 8020202:	b2dd      	uxtb	r5, r3
 8020204:	b978      	cbnz	r0, 8020226 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 8020206:	f104 0020 	add.w	r0, r4, #32
 802020a:	f7ff fe4f 	bl	801feac <_ZN8touchgfx10Rasterizer6lineToEii>
 802020e:	9b01      	ldr	r3, [sp, #4]
 8020210:	65e3      	str	r3, [r4, #92]	; 0x5c
 8020212:	9b00      	ldr	r3, [sp, #0]
 8020214:	6623      	str	r3, [r4, #96]	; 0x60
 8020216:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 802021a:	b002      	add	sp, #8
 802021c:	bd70      	pop	{r4, r5, r6, pc}
 802021e:	2001      	movs	r0, #1
 8020220:	e7e5      	b.n	80201ee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8020222:	2304      	movs	r3, #4
 8020224:	e7ea      	b.n	80201fc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 8020226:	b113      	cbz	r3, 802022e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 8020228:	ea10 0305 	ands.w	r3, r0, r5
 802022c:	d11d      	bne.n	802026a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xae>
 802022e:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 8020232:	f104 0620 	add.w	r6, r4, #32
 8020236:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 802023a:	b193      	cbz	r3, 8020262 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa6>
 802023c:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8020240:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8020244:	4298      	cmp	r0, r3
 8020246:	d802      	bhi.n	802024e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 8020248:	4630      	mov	r0, r6
 802024a:	f7ee ffcf 	bl	800f1ec <_ZN8touchgfx7Outline6moveToEii>
 802024e:	2300      	movs	r3, #0
 8020250:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8020254:	2301      	movs	r3, #1
 8020256:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802025a:	e9dd 2100 	ldrd	r2, r1, [sp]
 802025e:	4630      	mov	r0, r6
 8020260:	e7d3      	b.n	802020a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 8020262:	4630      	mov	r0, r6
 8020264:	f7ff fe22 	bl	801feac <_ZN8touchgfx10Rasterizer6lineToEii>
 8020268:	e7f7      	b.n	802025a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9e>
 802026a:	461d      	mov	r5, r3
 802026c:	e7cf      	b.n	802020e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>

0802026e <_ZN8touchgfx6Canvas5closeEv>:
 802026e:	b538      	push	{r3, r4, r5, lr}
 8020270:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8020274:	4604      	mov	r4, r0
 8020276:	b993      	cbnz	r3, 802029e <_ZN8touchgfx6Canvas5closeEv+0x30>
 8020278:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 802027c:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 8020280:	4213      	tst	r3, r2
 8020282:	d10c      	bne.n	802029e <_ZN8touchgfx6Canvas5closeEv+0x30>
 8020284:	f100 0520 	add.w	r5, r0, #32
 8020288:	b123      	cbz	r3, 8020294 <_ZN8touchgfx6Canvas5closeEv+0x26>
 802028a:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 802028e:	4628      	mov	r0, r5
 8020290:	f7ff fe0c 	bl	801feac <_ZN8touchgfx10Rasterizer6lineToEii>
 8020294:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 8020298:	4628      	mov	r0, r5
 802029a:	f7ff fe07 	bl	801feac <_ZN8touchgfx10Rasterizer6lineToEii>
 802029e:	2300      	movs	r3, #0
 80202a0:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80202a4:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 80202a8:	4298      	cmp	r0, r3
 80202aa:	bf34      	ite	cc
 80202ac:	2000      	movcc	r0, #0
 80202ae:	2001      	movcs	r0, #1
 80202b0:	bd38      	pop	{r3, r4, r5, pc}
	...

080202b4 <_ZN8touchgfx6Canvas6renderEh>:
 80202b4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80202b8:	4604      	mov	r4, r0
 80202ba:	6840      	ldr	r0, [r0, #4]
 80202bc:	6803      	ldr	r3, [r0, #0]
 80202be:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80202c0:	460d      	mov	r5, r1
 80202c2:	4798      	blx	r3
 80202c4:	fb10 f105 	smulbb	r1, r0, r5
 80202c8:	b289      	uxth	r1, r1
 80202ca:	1c4d      	adds	r5, r1, #1
 80202cc:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 80202d0:	122d      	asrs	r5, r5, #8
 80202d2:	f000 8098 	beq.w	8020406 <_ZN8touchgfx6Canvas6renderEh+0x152>
 80202d6:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 80202da:	2b00      	cmp	r3, #0
 80202dc:	f000 8093 	beq.w	8020406 <_ZN8touchgfx6Canvas6renderEh+0x152>
 80202e0:	4620      	mov	r0, r4
 80202e2:	f7ff ffc4 	bl	802026e <_ZN8touchgfx6Canvas5closeEv>
 80202e6:	4607      	mov	r7, r0
 80202e8:	2800      	cmp	r0, #0
 80202ea:	d043      	beq.n	8020374 <_ZN8touchgfx6Canvas6renderEh+0xc0>
 80202ec:	6863      	ldr	r3, [r4, #4]
 80202ee:	4e47      	ldr	r6, [pc, #284]	; (802040c <_ZN8touchgfx6Canvas6renderEh+0x158>)
 80202f0:	6a98      	ldr	r0, [r3, #40]	; 0x28
 80202f2:	6837      	ldr	r7, [r6, #0]
 80202f4:	6803      	ldr	r3, [r0, #0]
 80202f6:	689b      	ldr	r3, [r3, #8]
 80202f8:	4798      	blx	r3
 80202fa:	4601      	mov	r1, r0
 80202fc:	4638      	mov	r0, r7
 80202fe:	f7eb fb03 	bl	800b908 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8020302:	4607      	mov	r7, r0
 8020304:	f7e2 f908 	bl	8002518 <_ZN8touchgfx3HAL3lcdEv>
 8020308:	6803      	ldr	r3, [r0, #0]
 802030a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 802030c:	4798      	blx	r3
 802030e:	4680      	mov	r8, r0
 8020310:	f7e2 f902 	bl	8002518 <_ZN8touchgfx3HAL3lcdEv>
 8020314:	6803      	ldr	r3, [r0, #0]
 8020316:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020318:	4798      	blx	r3
 802031a:	280b      	cmp	r0, #11
 802031c:	d858      	bhi.n	80203d0 <_ZN8touchgfx6Canvas6renderEh+0x11c>
 802031e:	e8df f000 	tbb	[pc, r0]
 8020322:	594e      	.short	0x594e
 8020324:	2d570669 	.word	0x2d570669
 8020328:	6262623d 	.word	0x6262623d
 802032c:	6262      	.short	0x6262
 802032e:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020332:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8020336:	2208      	movs	r2, #8
 8020338:	fb91 f2f2 	sdiv	r2, r1, r2
 802033c:	fb08 2303 	mla	r3, r8, r3, r2
 8020340:	441f      	add	r7, r3
 8020342:	424b      	negs	r3, r1
 8020344:	f003 0307 	and.w	r3, r3, #7
 8020348:	f001 0107 	and.w	r1, r1, #7
 802034c:	bf58      	it	pl
 802034e:	4259      	negpl	r1, r3
 8020350:	b2c9      	uxtb	r1, r1
 8020352:	b2ed      	uxtb	r5, r5
 8020354:	e9cd 1500 	strd	r1, r5, [sp]
 8020358:	6860      	ldr	r0, [r4, #4]
 802035a:	fa0f f388 	sxth.w	r3, r8
 802035e:	463a      	mov	r2, r7
 8020360:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8020362:	f104 0020 	add.w	r0, r4, #32
 8020366:	f7ff fdad 	bl	801fec4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 802036a:	4607      	mov	r7, r0
 802036c:	6830      	ldr	r0, [r6, #0]
 802036e:	6803      	ldr	r3, [r0, #0]
 8020370:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020372:	4798      	blx	r3
 8020374:	4638      	mov	r0, r7
 8020376:	b002      	add	sp, #8
 8020378:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802037c:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020380:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8020384:	2204      	movs	r2, #4
 8020386:	fb91 f2f2 	sdiv	r2, r1, r2
 802038a:	fb08 2303 	mla	r3, r8, r3, r2
 802038e:	441f      	add	r7, r3
 8020390:	424b      	negs	r3, r1
 8020392:	f003 0303 	and.w	r3, r3, #3
 8020396:	f001 0103 	and.w	r1, r1, #3
 802039a:	e7d7      	b.n	802034c <_ZN8touchgfx6Canvas6renderEh+0x98>
 802039c:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 80203a0:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80203a4:	2900      	cmp	r1, #0
 80203a6:	f04f 0202 	mov.w	r2, #2
 80203aa:	fb91 f2f2 	sdiv	r2, r1, r2
 80203ae:	f001 0101 	and.w	r1, r1, #1
 80203b2:	fb08 2303 	mla	r3, r8, r3, r2
 80203b6:	441f      	add	r7, r3
 80203b8:	bfb8      	it	lt
 80203ba:	4249      	neglt	r1, r1
 80203bc:	e7c8      	b.n	8020350 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 80203be:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80203c2:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80203c6:	fb08 f303 	mul.w	r3, r8, r3
 80203ca:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80203ce:	441f      	add	r7, r3
 80203d0:	2100      	movs	r1, #0
 80203d2:	e7be      	b.n	8020352 <_ZN8touchgfx6Canvas6renderEh+0x9e>
 80203d4:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80203d8:	fb08 f203 	mul.w	r2, r8, r3
 80203dc:	8b23      	ldrh	r3, [r4, #24]
 80203de:	2103      	movs	r1, #3
 80203e0:	fb13 2301 	smlabb	r3, r3, r1, r2
 80203e4:	e7f3      	b.n	80203ce <_ZN8touchgfx6Canvas6renderEh+0x11a>
 80203e6:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80203ea:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80203ee:	fb08 2303 	mla	r3, r8, r3, r2
 80203f2:	e7ec      	b.n	80203ce <_ZN8touchgfx6Canvas6renderEh+0x11a>
 80203f4:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80203f8:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80203fc:	fb08 f303 	mul.w	r3, r8, r3
 8020400:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8020404:	e7e3      	b.n	80203ce <_ZN8touchgfx6Canvas6renderEh+0x11a>
 8020406:	2701      	movs	r7, #1
 8020408:	e7b4      	b.n	8020374 <_ZN8touchgfx6Canvas6renderEh+0xc0>
 802040a:	bf00      	nop
 802040c:	20015488 	.word	0x20015488

08020410 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8020410:	b513      	push	{r0, r1, r4, lr}
 8020412:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8020416:	4604      	mov	r4, r0
 8020418:	e9cd 2100 	strd	r2, r1, [sp]
 802041c:	b1a3      	cbz	r3, 8020448 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 802041e:	466a      	mov	r2, sp
 8020420:	a901      	add	r1, sp, #4
 8020422:	4620      	mov	r0, r4
 8020424:	f7ff feb8 	bl	8020198 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8020428:	68a3      	ldr	r3, [r4, #8]
 802042a:	9901      	ldr	r1, [sp, #4]
 802042c:	9a00      	ldr	r2, [sp, #0]
 802042e:	1ac9      	subs	r1, r1, r3
 8020430:	68e3      	ldr	r3, [r4, #12]
 8020432:	9101      	str	r1, [sp, #4]
 8020434:	1ad2      	subs	r2, r2, r3
 8020436:	2a00      	cmp	r2, #0
 8020438:	9200      	str	r2, [sp, #0]
 802043a:	da0b      	bge.n	8020454 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 802043c:	2301      	movs	r3, #1
 802043e:	2900      	cmp	r1, #0
 8020440:	da0e      	bge.n	8020460 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8020442:	f043 0304 	orr.w	r3, r3, #4
 8020446:	e013      	b.n	8020470 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8020448:	f7ff ff11 	bl	802026e <_ZN8touchgfx6Canvas5closeEv>
 802044c:	2800      	cmp	r0, #0
 802044e:	d1e6      	bne.n	802041e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8020450:	b002      	add	sp, #8
 8020452:	bd10      	pop	{r4, pc}
 8020454:	6963      	ldr	r3, [r4, #20]
 8020456:	429a      	cmp	r2, r3
 8020458:	bfac      	ite	ge
 802045a:	2302      	movge	r3, #2
 802045c:	2300      	movlt	r3, #0
 802045e:	e7ee      	b.n	802043e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8020460:	6920      	ldr	r0, [r4, #16]
 8020462:	4281      	cmp	r1, r0
 8020464:	bfac      	ite	ge
 8020466:	2008      	movge	r0, #8
 8020468:	2000      	movlt	r0, #0
 802046a:	4318      	orrs	r0, r3
 802046c:	b2c3      	uxtb	r3, r0
 802046e:	b158      	cbz	r0, 8020488 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8020470:	2201      	movs	r2, #1
 8020472:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 8020476:	9901      	ldr	r1, [sp, #4]
 8020478:	9a00      	ldr	r2, [sp, #0]
 802047a:	66a1      	str	r1, [r4, #104]	; 0x68
 802047c:	66e2      	str	r2, [r4, #108]	; 0x6c
 802047e:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 8020482:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8020486:	e7e3      	b.n	8020450 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8020488:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 802048c:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8020490:	4298      	cmp	r0, r3
 8020492:	d803      	bhi.n	802049c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8020494:	f104 0020 	add.w	r0, r4, #32
 8020498:	f7ee fea8 	bl	800f1ec <_ZN8touchgfx7Outline6moveToEii>
 802049c:	2300      	movs	r3, #0
 802049e:	2201      	movs	r2, #1
 80204a0:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80204a4:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 80204a8:	e7e5      	b.n	8020476 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

080204aa <__aeabi_atexit>:
 80204aa:	460b      	mov	r3, r1
 80204ac:	4601      	mov	r1, r0
 80204ae:	4618      	mov	r0, r3
 80204b0:	f000 b8d8 	b.w	8020664 <__cxa_atexit>

080204b4 <_ZdlPvj>:
 80204b4:	f000 b812 	b.w	80204dc <_ZdlPv>

080204b8 <__cxa_guard_acquire>:
 80204b8:	6803      	ldr	r3, [r0, #0]
 80204ba:	07db      	lsls	r3, r3, #31
 80204bc:	d406      	bmi.n	80204cc <__cxa_guard_acquire+0x14>
 80204be:	7843      	ldrb	r3, [r0, #1]
 80204c0:	b103      	cbz	r3, 80204c4 <__cxa_guard_acquire+0xc>
 80204c2:	deff      	udf	#255	; 0xff
 80204c4:	2301      	movs	r3, #1
 80204c6:	7043      	strb	r3, [r0, #1]
 80204c8:	4618      	mov	r0, r3
 80204ca:	4770      	bx	lr
 80204cc:	2000      	movs	r0, #0
 80204ce:	4770      	bx	lr

080204d0 <__cxa_guard_release>:
 80204d0:	2301      	movs	r3, #1
 80204d2:	6003      	str	r3, [r0, #0]
 80204d4:	4770      	bx	lr

080204d6 <__cxa_pure_virtual>:
 80204d6:	b508      	push	{r3, lr}
 80204d8:	f000 f80e 	bl	80204f8 <_ZSt9terminatev>

080204dc <_ZdlPv>:
 80204dc:	f000 ba0e 	b.w	80208fc <free>

080204e0 <_ZN10__cxxabiv111__terminateEPFvvE>:
 80204e0:	b508      	push	{r3, lr}
 80204e2:	4780      	blx	r0
 80204e4:	f000 f892 	bl	802060c <abort>

080204e8 <_ZSt13get_terminatev>:
 80204e8:	4b02      	ldr	r3, [pc, #8]	; (80204f4 <_ZSt13get_terminatev+0xc>)
 80204ea:	6818      	ldr	r0, [r3, #0]
 80204ec:	f3bf 8f5b 	dmb	ish
 80204f0:	4770      	bx	lr
 80204f2:	bf00      	nop
 80204f4:	20000100 	.word	0x20000100

080204f8 <_ZSt9terminatev>:
 80204f8:	b508      	push	{r3, lr}
 80204fa:	f7ff fff5 	bl	80204e8 <_ZSt13get_terminatev>
 80204fe:	f7ff ffef 	bl	80204e0 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

08020504 <ceilf>:
 8020504:	ee10 3a10 	vmov	r3, s0
 8020508:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802050c:	3a7f      	subs	r2, #127	; 0x7f
 802050e:	2a16      	cmp	r2, #22
 8020510:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8020514:	dc2a      	bgt.n	802056c <ceilf+0x68>
 8020516:	2a00      	cmp	r2, #0
 8020518:	da11      	bge.n	802053e <ceilf+0x3a>
 802051a:	eddf 7a19 	vldr	s15, [pc, #100]	; 8020580 <ceilf+0x7c>
 802051e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8020522:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8020526:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802052a:	dd05      	ble.n	8020538 <ceilf+0x34>
 802052c:	2b00      	cmp	r3, #0
 802052e:	db23      	blt.n	8020578 <ceilf+0x74>
 8020530:	2900      	cmp	r1, #0
 8020532:	bf18      	it	ne
 8020534:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 8020538:	ee00 3a10 	vmov	s0, r3
 802053c:	4770      	bx	lr
 802053e:	4911      	ldr	r1, [pc, #68]	; (8020584 <ceilf+0x80>)
 8020540:	4111      	asrs	r1, r2
 8020542:	420b      	tst	r3, r1
 8020544:	d0fa      	beq.n	802053c <ceilf+0x38>
 8020546:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8020580 <ceilf+0x7c>
 802054a:	ee30 0a27 	vadd.f32	s0, s0, s15
 802054e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8020552:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020556:	ddef      	ble.n	8020538 <ceilf+0x34>
 8020558:	2b00      	cmp	r3, #0
 802055a:	bfc2      	ittt	gt
 802055c:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 8020560:	fa40 f202 	asrgt.w	r2, r0, r2
 8020564:	189b      	addgt	r3, r3, r2
 8020566:	ea23 0301 	bic.w	r3, r3, r1
 802056a:	e7e5      	b.n	8020538 <ceilf+0x34>
 802056c:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8020570:	d3e4      	bcc.n	802053c <ceilf+0x38>
 8020572:	ee30 0a00 	vadd.f32	s0, s0, s0
 8020576:	4770      	bx	lr
 8020578:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 802057c:	e7dc      	b.n	8020538 <ceilf+0x34>
 802057e:	bf00      	nop
 8020580:	7149f2ca 	.word	0x7149f2ca
 8020584:	007fffff 	.word	0x007fffff

08020588 <floorf>:
 8020588:	ee10 3a10 	vmov	r3, s0
 802058c:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8020590:	3a7f      	subs	r2, #127	; 0x7f
 8020592:	2a16      	cmp	r2, #22
 8020594:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8020598:	dc2a      	bgt.n	80205f0 <floorf+0x68>
 802059a:	2a00      	cmp	r2, #0
 802059c:	da11      	bge.n	80205c2 <floorf+0x3a>
 802059e:	eddf 7a18 	vldr	s15, [pc, #96]	; 8020600 <floorf+0x78>
 80205a2:	ee30 0a27 	vadd.f32	s0, s0, s15
 80205a6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80205aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80205ae:	dd05      	ble.n	80205bc <floorf+0x34>
 80205b0:	2b00      	cmp	r3, #0
 80205b2:	da23      	bge.n	80205fc <floorf+0x74>
 80205b4:	4a13      	ldr	r2, [pc, #76]	; (8020604 <floorf+0x7c>)
 80205b6:	2900      	cmp	r1, #0
 80205b8:	bf18      	it	ne
 80205ba:	4613      	movne	r3, r2
 80205bc:	ee00 3a10 	vmov	s0, r3
 80205c0:	4770      	bx	lr
 80205c2:	4911      	ldr	r1, [pc, #68]	; (8020608 <floorf+0x80>)
 80205c4:	4111      	asrs	r1, r2
 80205c6:	420b      	tst	r3, r1
 80205c8:	d0fa      	beq.n	80205c0 <floorf+0x38>
 80205ca:	eddf 7a0d 	vldr	s15, [pc, #52]	; 8020600 <floorf+0x78>
 80205ce:	ee30 0a27 	vadd.f32	s0, s0, s15
 80205d2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80205d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80205da:	ddef      	ble.n	80205bc <floorf+0x34>
 80205dc:	2b00      	cmp	r3, #0
 80205de:	bfbe      	ittt	lt
 80205e0:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 80205e4:	fa40 f202 	asrlt.w	r2, r0, r2
 80205e8:	189b      	addlt	r3, r3, r2
 80205ea:	ea23 0301 	bic.w	r3, r3, r1
 80205ee:	e7e5      	b.n	80205bc <floorf+0x34>
 80205f0:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 80205f4:	d3e4      	bcc.n	80205c0 <floorf+0x38>
 80205f6:	ee30 0a00 	vadd.f32	s0, s0, s0
 80205fa:	4770      	bx	lr
 80205fc:	2300      	movs	r3, #0
 80205fe:	e7dd      	b.n	80205bc <floorf+0x34>
 8020600:	7149f2ca 	.word	0x7149f2ca
 8020604:	bf800000 	.word	0xbf800000
 8020608:	007fffff 	.word	0x007fffff

0802060c <abort>:
 802060c:	b508      	push	{r3, lr}
 802060e:	2006      	movs	r0, #6
 8020610:	f000 fe02 	bl	8021218 <raise>
 8020614:	2001      	movs	r0, #1
 8020616:	f7e1 fd79 	bl	800210c <_exit>
	...

0802061c <__assert_func>:
 802061c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802061e:	4614      	mov	r4, r2
 8020620:	461a      	mov	r2, r3
 8020622:	4b09      	ldr	r3, [pc, #36]	; (8020648 <__assert_func+0x2c>)
 8020624:	681b      	ldr	r3, [r3, #0]
 8020626:	4605      	mov	r5, r0
 8020628:	68d8      	ldr	r0, [r3, #12]
 802062a:	b14c      	cbz	r4, 8020640 <__assert_func+0x24>
 802062c:	4b07      	ldr	r3, [pc, #28]	; (802064c <__assert_func+0x30>)
 802062e:	9100      	str	r1, [sp, #0]
 8020630:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8020634:	4906      	ldr	r1, [pc, #24]	; (8020650 <__assert_func+0x34>)
 8020636:	462b      	mov	r3, r5
 8020638:	f000 f8fe 	bl	8020838 <fiprintf>
 802063c:	f7ff ffe6 	bl	802060c <abort>
 8020640:	4b04      	ldr	r3, [pc, #16]	; (8020654 <__assert_func+0x38>)
 8020642:	461c      	mov	r4, r3
 8020644:	e7f3      	b.n	802062e <__assert_func+0x12>
 8020646:	bf00      	nop
 8020648:	20000104 	.word	0x20000104
 802064c:	080243fc 	.word	0x080243fc
 8020650:	08024409 	.word	0x08024409
 8020654:	080234a3 	.word	0x080234a3

08020658 <atexit>:
 8020658:	2300      	movs	r3, #0
 802065a:	4601      	mov	r1, r0
 802065c:	461a      	mov	r2, r3
 802065e:	4618      	mov	r0, r3
 8020660:	f000 bf0c 	b.w	802147c <__register_exitproc>

08020664 <__cxa_atexit>:
 8020664:	b510      	push	{r4, lr}
 8020666:	4c05      	ldr	r4, [pc, #20]	; (802067c <__cxa_atexit+0x18>)
 8020668:	4613      	mov	r3, r2
 802066a:	b12c      	cbz	r4, 8020678 <__cxa_atexit+0x14>
 802066c:	460a      	mov	r2, r1
 802066e:	4601      	mov	r1, r0
 8020670:	2002      	movs	r0, #2
 8020672:	f000 ff03 	bl	802147c <__register_exitproc>
 8020676:	bd10      	pop	{r4, pc}
 8020678:	4620      	mov	r0, r4
 802067a:	e7fc      	b.n	8020676 <__cxa_atexit+0x12>
 802067c:	0802147d 	.word	0x0802147d

08020680 <__errno>:
 8020680:	4b01      	ldr	r3, [pc, #4]	; (8020688 <__errno+0x8>)
 8020682:	6818      	ldr	r0, [r3, #0]
 8020684:	4770      	bx	lr
 8020686:	bf00      	nop
 8020688:	20000104 	.word	0x20000104

0802068c <std>:
 802068c:	2300      	movs	r3, #0
 802068e:	b510      	push	{r4, lr}
 8020690:	4604      	mov	r4, r0
 8020692:	e9c0 3300 	strd	r3, r3, [r0]
 8020696:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802069a:	6083      	str	r3, [r0, #8]
 802069c:	8181      	strh	r1, [r0, #12]
 802069e:	6643      	str	r3, [r0, #100]	; 0x64
 80206a0:	81c2      	strh	r2, [r0, #14]
 80206a2:	6183      	str	r3, [r0, #24]
 80206a4:	4619      	mov	r1, r3
 80206a6:	2208      	movs	r2, #8
 80206a8:	305c      	adds	r0, #92	; 0x5c
 80206aa:	f000 f93d 	bl	8020928 <memset>
 80206ae:	4b05      	ldr	r3, [pc, #20]	; (80206c4 <std+0x38>)
 80206b0:	6263      	str	r3, [r4, #36]	; 0x24
 80206b2:	4b05      	ldr	r3, [pc, #20]	; (80206c8 <std+0x3c>)
 80206b4:	62a3      	str	r3, [r4, #40]	; 0x28
 80206b6:	4b05      	ldr	r3, [pc, #20]	; (80206cc <std+0x40>)
 80206b8:	62e3      	str	r3, [r4, #44]	; 0x2c
 80206ba:	4b05      	ldr	r3, [pc, #20]	; (80206d0 <std+0x44>)
 80206bc:	6224      	str	r4, [r4, #32]
 80206be:	6323      	str	r3, [r4, #48]	; 0x30
 80206c0:	bd10      	pop	{r4, pc}
 80206c2:	bf00      	nop
 80206c4:	08021251 	.word	0x08021251
 80206c8:	08021273 	.word	0x08021273
 80206cc:	080212ab 	.word	0x080212ab
 80206d0:	080212cf 	.word	0x080212cf

080206d4 <_cleanup_r>:
 80206d4:	4901      	ldr	r1, [pc, #4]	; (80206dc <_cleanup_r+0x8>)
 80206d6:	f000 b8c1 	b.w	802085c <_fwalk_reent>
 80206da:	bf00      	nop
 80206dc:	0802166d 	.word	0x0802166d

080206e0 <__sfmoreglue>:
 80206e0:	b570      	push	{r4, r5, r6, lr}
 80206e2:	2268      	movs	r2, #104	; 0x68
 80206e4:	1e4d      	subs	r5, r1, #1
 80206e6:	4355      	muls	r5, r2
 80206e8:	460e      	mov	r6, r1
 80206ea:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80206ee:	f000 f98f 	bl	8020a10 <_malloc_r>
 80206f2:	4604      	mov	r4, r0
 80206f4:	b140      	cbz	r0, 8020708 <__sfmoreglue+0x28>
 80206f6:	2100      	movs	r1, #0
 80206f8:	e9c0 1600 	strd	r1, r6, [r0]
 80206fc:	300c      	adds	r0, #12
 80206fe:	60a0      	str	r0, [r4, #8]
 8020700:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8020704:	f000 f910 	bl	8020928 <memset>
 8020708:	4620      	mov	r0, r4
 802070a:	bd70      	pop	{r4, r5, r6, pc}

0802070c <__sfp_lock_acquire>:
 802070c:	4801      	ldr	r0, [pc, #4]	; (8020714 <__sfp_lock_acquire+0x8>)
 802070e:	f000 b8ea 	b.w	80208e6 <__retarget_lock_acquire_recursive>
 8020712:	bf00      	nop
 8020714:	2001558e 	.word	0x2001558e

08020718 <__sfp_lock_release>:
 8020718:	4801      	ldr	r0, [pc, #4]	; (8020720 <__sfp_lock_release+0x8>)
 802071a:	f000 b8e6 	b.w	80208ea <__retarget_lock_release_recursive>
 802071e:	bf00      	nop
 8020720:	2001558e 	.word	0x2001558e

08020724 <__sinit_lock_acquire>:
 8020724:	4801      	ldr	r0, [pc, #4]	; (802072c <__sinit_lock_acquire+0x8>)
 8020726:	f000 b8de 	b.w	80208e6 <__retarget_lock_acquire_recursive>
 802072a:	bf00      	nop
 802072c:	2001558f 	.word	0x2001558f

08020730 <__sinit_lock_release>:
 8020730:	4801      	ldr	r0, [pc, #4]	; (8020738 <__sinit_lock_release+0x8>)
 8020732:	f000 b8da 	b.w	80208ea <__retarget_lock_release_recursive>
 8020736:	bf00      	nop
 8020738:	2001558f 	.word	0x2001558f

0802073c <__sinit>:
 802073c:	b510      	push	{r4, lr}
 802073e:	4604      	mov	r4, r0
 8020740:	f7ff fff0 	bl	8020724 <__sinit_lock_acquire>
 8020744:	69a3      	ldr	r3, [r4, #24]
 8020746:	b11b      	cbz	r3, 8020750 <__sinit+0x14>
 8020748:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802074c:	f7ff bff0 	b.w	8020730 <__sinit_lock_release>
 8020750:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8020754:	6523      	str	r3, [r4, #80]	; 0x50
 8020756:	4b13      	ldr	r3, [pc, #76]	; (80207a4 <__sinit+0x68>)
 8020758:	4a13      	ldr	r2, [pc, #76]	; (80207a8 <__sinit+0x6c>)
 802075a:	681b      	ldr	r3, [r3, #0]
 802075c:	62a2      	str	r2, [r4, #40]	; 0x28
 802075e:	42a3      	cmp	r3, r4
 8020760:	bf04      	itt	eq
 8020762:	2301      	moveq	r3, #1
 8020764:	61a3      	streq	r3, [r4, #24]
 8020766:	4620      	mov	r0, r4
 8020768:	f000 f820 	bl	80207ac <__sfp>
 802076c:	6060      	str	r0, [r4, #4]
 802076e:	4620      	mov	r0, r4
 8020770:	f000 f81c 	bl	80207ac <__sfp>
 8020774:	60a0      	str	r0, [r4, #8]
 8020776:	4620      	mov	r0, r4
 8020778:	f000 f818 	bl	80207ac <__sfp>
 802077c:	2200      	movs	r2, #0
 802077e:	60e0      	str	r0, [r4, #12]
 8020780:	2104      	movs	r1, #4
 8020782:	6860      	ldr	r0, [r4, #4]
 8020784:	f7ff ff82 	bl	802068c <std>
 8020788:	68a0      	ldr	r0, [r4, #8]
 802078a:	2201      	movs	r2, #1
 802078c:	2109      	movs	r1, #9
 802078e:	f7ff ff7d 	bl	802068c <std>
 8020792:	68e0      	ldr	r0, [r4, #12]
 8020794:	2202      	movs	r2, #2
 8020796:	2112      	movs	r1, #18
 8020798:	f7ff ff78 	bl	802068c <std>
 802079c:	2301      	movs	r3, #1
 802079e:	61a3      	str	r3, [r4, #24]
 80207a0:	e7d2      	b.n	8020748 <__sinit+0xc>
 80207a2:	bf00      	nop
 80207a4:	08024498 	.word	0x08024498
 80207a8:	080206d5 	.word	0x080206d5

080207ac <__sfp>:
 80207ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80207ae:	4607      	mov	r7, r0
 80207b0:	f7ff ffac 	bl	802070c <__sfp_lock_acquire>
 80207b4:	4b1e      	ldr	r3, [pc, #120]	; (8020830 <__sfp+0x84>)
 80207b6:	681e      	ldr	r6, [r3, #0]
 80207b8:	69b3      	ldr	r3, [r6, #24]
 80207ba:	b913      	cbnz	r3, 80207c2 <__sfp+0x16>
 80207bc:	4630      	mov	r0, r6
 80207be:	f7ff ffbd 	bl	802073c <__sinit>
 80207c2:	3648      	adds	r6, #72	; 0x48
 80207c4:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80207c8:	3b01      	subs	r3, #1
 80207ca:	d503      	bpl.n	80207d4 <__sfp+0x28>
 80207cc:	6833      	ldr	r3, [r6, #0]
 80207ce:	b30b      	cbz	r3, 8020814 <__sfp+0x68>
 80207d0:	6836      	ldr	r6, [r6, #0]
 80207d2:	e7f7      	b.n	80207c4 <__sfp+0x18>
 80207d4:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80207d8:	b9d5      	cbnz	r5, 8020810 <__sfp+0x64>
 80207da:	4b16      	ldr	r3, [pc, #88]	; (8020834 <__sfp+0x88>)
 80207dc:	60e3      	str	r3, [r4, #12]
 80207de:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80207e2:	6665      	str	r5, [r4, #100]	; 0x64
 80207e4:	f000 f87e 	bl	80208e4 <__retarget_lock_init_recursive>
 80207e8:	f7ff ff96 	bl	8020718 <__sfp_lock_release>
 80207ec:	e9c4 5501 	strd	r5, r5, [r4, #4]
 80207f0:	e9c4 5504 	strd	r5, r5, [r4, #16]
 80207f4:	6025      	str	r5, [r4, #0]
 80207f6:	61a5      	str	r5, [r4, #24]
 80207f8:	2208      	movs	r2, #8
 80207fa:	4629      	mov	r1, r5
 80207fc:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8020800:	f000 f892 	bl	8020928 <memset>
 8020804:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8020808:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 802080c:	4620      	mov	r0, r4
 802080e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8020810:	3468      	adds	r4, #104	; 0x68
 8020812:	e7d9      	b.n	80207c8 <__sfp+0x1c>
 8020814:	2104      	movs	r1, #4
 8020816:	4638      	mov	r0, r7
 8020818:	f7ff ff62 	bl	80206e0 <__sfmoreglue>
 802081c:	4604      	mov	r4, r0
 802081e:	6030      	str	r0, [r6, #0]
 8020820:	2800      	cmp	r0, #0
 8020822:	d1d5      	bne.n	80207d0 <__sfp+0x24>
 8020824:	f7ff ff78 	bl	8020718 <__sfp_lock_release>
 8020828:	230c      	movs	r3, #12
 802082a:	603b      	str	r3, [r7, #0]
 802082c:	e7ee      	b.n	802080c <__sfp+0x60>
 802082e:	bf00      	nop
 8020830:	08024498 	.word	0x08024498
 8020834:	ffff0001 	.word	0xffff0001

08020838 <fiprintf>:
 8020838:	b40e      	push	{r1, r2, r3}
 802083a:	b503      	push	{r0, r1, lr}
 802083c:	4601      	mov	r1, r0
 802083e:	ab03      	add	r3, sp, #12
 8020840:	4805      	ldr	r0, [pc, #20]	; (8020858 <fiprintf+0x20>)
 8020842:	f853 2b04 	ldr.w	r2, [r3], #4
 8020846:	6800      	ldr	r0, [r0, #0]
 8020848:	9301      	str	r3, [sp, #4]
 802084a:	f000 f97f 	bl	8020b4c <_vfiprintf_r>
 802084e:	b002      	add	sp, #8
 8020850:	f85d eb04 	ldr.w	lr, [sp], #4
 8020854:	b003      	add	sp, #12
 8020856:	4770      	bx	lr
 8020858:	20000104 	.word	0x20000104

0802085c <_fwalk_reent>:
 802085c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8020860:	4606      	mov	r6, r0
 8020862:	4688      	mov	r8, r1
 8020864:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8020868:	2700      	movs	r7, #0
 802086a:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802086e:	f1b9 0901 	subs.w	r9, r9, #1
 8020872:	d505      	bpl.n	8020880 <_fwalk_reent+0x24>
 8020874:	6824      	ldr	r4, [r4, #0]
 8020876:	2c00      	cmp	r4, #0
 8020878:	d1f7      	bne.n	802086a <_fwalk_reent+0xe>
 802087a:	4638      	mov	r0, r7
 802087c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8020880:	89ab      	ldrh	r3, [r5, #12]
 8020882:	2b01      	cmp	r3, #1
 8020884:	d907      	bls.n	8020896 <_fwalk_reent+0x3a>
 8020886:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802088a:	3301      	adds	r3, #1
 802088c:	d003      	beq.n	8020896 <_fwalk_reent+0x3a>
 802088e:	4629      	mov	r1, r5
 8020890:	4630      	mov	r0, r6
 8020892:	47c0      	blx	r8
 8020894:	4307      	orrs	r7, r0
 8020896:	3568      	adds	r5, #104	; 0x68
 8020898:	e7e9      	b.n	802086e <_fwalk_reent+0x12>
	...

0802089c <__libc_init_array>:
 802089c:	b570      	push	{r4, r5, r6, lr}
 802089e:	4d0d      	ldr	r5, [pc, #52]	; (80208d4 <__libc_init_array+0x38>)
 80208a0:	4c0d      	ldr	r4, [pc, #52]	; (80208d8 <__libc_init_array+0x3c>)
 80208a2:	1b64      	subs	r4, r4, r5
 80208a4:	10a4      	asrs	r4, r4, #2
 80208a6:	2600      	movs	r6, #0
 80208a8:	42a6      	cmp	r6, r4
 80208aa:	d109      	bne.n	80208c0 <__libc_init_array+0x24>
 80208ac:	4d0b      	ldr	r5, [pc, #44]	; (80208dc <__libc_init_array+0x40>)
 80208ae:	4c0c      	ldr	r4, [pc, #48]	; (80208e0 <__libc_init_array+0x44>)
 80208b0:	f000 ffd0 	bl	8021854 <_init>
 80208b4:	1b64      	subs	r4, r4, r5
 80208b6:	10a4      	asrs	r4, r4, #2
 80208b8:	2600      	movs	r6, #0
 80208ba:	42a6      	cmp	r6, r4
 80208bc:	d105      	bne.n	80208ca <__libc_init_array+0x2e>
 80208be:	bd70      	pop	{r4, r5, r6, pc}
 80208c0:	f855 3b04 	ldr.w	r3, [r5], #4
 80208c4:	4798      	blx	r3
 80208c6:	3601      	adds	r6, #1
 80208c8:	e7ee      	b.n	80208a8 <__libc_init_array+0xc>
 80208ca:	f855 3b04 	ldr.w	r3, [r5], #4
 80208ce:	4798      	blx	r3
 80208d0:	3601      	adds	r6, #1
 80208d2:	e7f2      	b.n	80208ba <__libc_init_array+0x1e>
 80208d4:	080a90c0 	.word	0x080a90c0
 80208d8:	080a90c0 	.word	0x080a90c0
 80208dc:	080a90c0 	.word	0x080a90c0
 80208e0:	080a90d4 	.word	0x080a90d4

080208e4 <__retarget_lock_init_recursive>:
 80208e4:	4770      	bx	lr

080208e6 <__retarget_lock_acquire_recursive>:
 80208e6:	4770      	bx	lr

080208e8 <__retarget_lock_release>:
 80208e8:	4770      	bx	lr

080208ea <__retarget_lock_release_recursive>:
 80208ea:	4770      	bx	lr

080208ec <malloc>:
 80208ec:	4b02      	ldr	r3, [pc, #8]	; (80208f8 <malloc+0xc>)
 80208ee:	4601      	mov	r1, r0
 80208f0:	6818      	ldr	r0, [r3, #0]
 80208f2:	f000 b88d 	b.w	8020a10 <_malloc_r>
 80208f6:	bf00      	nop
 80208f8:	20000104 	.word	0x20000104

080208fc <free>:
 80208fc:	4b02      	ldr	r3, [pc, #8]	; (8020908 <free+0xc>)
 80208fe:	4601      	mov	r1, r0
 8020900:	6818      	ldr	r0, [r3, #0]
 8020902:	f000 b819 	b.w	8020938 <_free_r>
 8020906:	bf00      	nop
 8020908:	20000104 	.word	0x20000104

0802090c <memcpy>:
 802090c:	440a      	add	r2, r1
 802090e:	4291      	cmp	r1, r2
 8020910:	f100 33ff 	add.w	r3, r0, #4294967295
 8020914:	d100      	bne.n	8020918 <memcpy+0xc>
 8020916:	4770      	bx	lr
 8020918:	b510      	push	{r4, lr}
 802091a:	f811 4b01 	ldrb.w	r4, [r1], #1
 802091e:	f803 4f01 	strb.w	r4, [r3, #1]!
 8020922:	4291      	cmp	r1, r2
 8020924:	d1f9      	bne.n	802091a <memcpy+0xe>
 8020926:	bd10      	pop	{r4, pc}

08020928 <memset>:
 8020928:	4402      	add	r2, r0
 802092a:	4603      	mov	r3, r0
 802092c:	4293      	cmp	r3, r2
 802092e:	d100      	bne.n	8020932 <memset+0xa>
 8020930:	4770      	bx	lr
 8020932:	f803 1b01 	strb.w	r1, [r3], #1
 8020936:	e7f9      	b.n	802092c <memset+0x4>

08020938 <_free_r>:
 8020938:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802093a:	2900      	cmp	r1, #0
 802093c:	d044      	beq.n	80209c8 <_free_r+0x90>
 802093e:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8020942:	9001      	str	r0, [sp, #4]
 8020944:	2b00      	cmp	r3, #0
 8020946:	f1a1 0404 	sub.w	r4, r1, #4
 802094a:	bfb8      	it	lt
 802094c:	18e4      	addlt	r4, r4, r3
 802094e:	f000 ff41 	bl	80217d4 <__malloc_lock>
 8020952:	4a1e      	ldr	r2, [pc, #120]	; (80209cc <_free_r+0x94>)
 8020954:	9801      	ldr	r0, [sp, #4]
 8020956:	6813      	ldr	r3, [r2, #0]
 8020958:	b933      	cbnz	r3, 8020968 <_free_r+0x30>
 802095a:	6063      	str	r3, [r4, #4]
 802095c:	6014      	str	r4, [r2, #0]
 802095e:	b003      	add	sp, #12
 8020960:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8020964:	f000 bf3c 	b.w	80217e0 <__malloc_unlock>
 8020968:	42a3      	cmp	r3, r4
 802096a:	d908      	bls.n	802097e <_free_r+0x46>
 802096c:	6825      	ldr	r5, [r4, #0]
 802096e:	1961      	adds	r1, r4, r5
 8020970:	428b      	cmp	r3, r1
 8020972:	bf01      	itttt	eq
 8020974:	6819      	ldreq	r1, [r3, #0]
 8020976:	685b      	ldreq	r3, [r3, #4]
 8020978:	1949      	addeq	r1, r1, r5
 802097a:	6021      	streq	r1, [r4, #0]
 802097c:	e7ed      	b.n	802095a <_free_r+0x22>
 802097e:	461a      	mov	r2, r3
 8020980:	685b      	ldr	r3, [r3, #4]
 8020982:	b10b      	cbz	r3, 8020988 <_free_r+0x50>
 8020984:	42a3      	cmp	r3, r4
 8020986:	d9fa      	bls.n	802097e <_free_r+0x46>
 8020988:	6811      	ldr	r1, [r2, #0]
 802098a:	1855      	adds	r5, r2, r1
 802098c:	42a5      	cmp	r5, r4
 802098e:	d10b      	bne.n	80209a8 <_free_r+0x70>
 8020990:	6824      	ldr	r4, [r4, #0]
 8020992:	4421      	add	r1, r4
 8020994:	1854      	adds	r4, r2, r1
 8020996:	42a3      	cmp	r3, r4
 8020998:	6011      	str	r1, [r2, #0]
 802099a:	d1e0      	bne.n	802095e <_free_r+0x26>
 802099c:	681c      	ldr	r4, [r3, #0]
 802099e:	685b      	ldr	r3, [r3, #4]
 80209a0:	6053      	str	r3, [r2, #4]
 80209a2:	4421      	add	r1, r4
 80209a4:	6011      	str	r1, [r2, #0]
 80209a6:	e7da      	b.n	802095e <_free_r+0x26>
 80209a8:	d902      	bls.n	80209b0 <_free_r+0x78>
 80209aa:	230c      	movs	r3, #12
 80209ac:	6003      	str	r3, [r0, #0]
 80209ae:	e7d6      	b.n	802095e <_free_r+0x26>
 80209b0:	6825      	ldr	r5, [r4, #0]
 80209b2:	1961      	adds	r1, r4, r5
 80209b4:	428b      	cmp	r3, r1
 80209b6:	bf04      	itt	eq
 80209b8:	6819      	ldreq	r1, [r3, #0]
 80209ba:	685b      	ldreq	r3, [r3, #4]
 80209bc:	6063      	str	r3, [r4, #4]
 80209be:	bf04      	itt	eq
 80209c0:	1949      	addeq	r1, r1, r5
 80209c2:	6021      	streq	r1, [r4, #0]
 80209c4:	6054      	str	r4, [r2, #4]
 80209c6:	e7ca      	b.n	802095e <_free_r+0x26>
 80209c8:	b003      	add	sp, #12
 80209ca:	bd30      	pop	{r4, r5, pc}
 80209cc:	20015590 	.word	0x20015590

080209d0 <sbrk_aligned>:
 80209d0:	b570      	push	{r4, r5, r6, lr}
 80209d2:	4e0e      	ldr	r6, [pc, #56]	; (8020a0c <sbrk_aligned+0x3c>)
 80209d4:	460c      	mov	r4, r1
 80209d6:	6831      	ldr	r1, [r6, #0]
 80209d8:	4605      	mov	r5, r0
 80209da:	b911      	cbnz	r1, 80209e2 <sbrk_aligned+0x12>
 80209dc:	f000 fbe4 	bl	80211a8 <_sbrk_r>
 80209e0:	6030      	str	r0, [r6, #0]
 80209e2:	4621      	mov	r1, r4
 80209e4:	4628      	mov	r0, r5
 80209e6:	f000 fbdf 	bl	80211a8 <_sbrk_r>
 80209ea:	1c43      	adds	r3, r0, #1
 80209ec:	d00a      	beq.n	8020a04 <sbrk_aligned+0x34>
 80209ee:	1cc4      	adds	r4, r0, #3
 80209f0:	f024 0403 	bic.w	r4, r4, #3
 80209f4:	42a0      	cmp	r0, r4
 80209f6:	d007      	beq.n	8020a08 <sbrk_aligned+0x38>
 80209f8:	1a21      	subs	r1, r4, r0
 80209fa:	4628      	mov	r0, r5
 80209fc:	f000 fbd4 	bl	80211a8 <_sbrk_r>
 8020a00:	3001      	adds	r0, #1
 8020a02:	d101      	bne.n	8020a08 <sbrk_aligned+0x38>
 8020a04:	f04f 34ff 	mov.w	r4, #4294967295
 8020a08:	4620      	mov	r0, r4
 8020a0a:	bd70      	pop	{r4, r5, r6, pc}
 8020a0c:	20015594 	.word	0x20015594

08020a10 <_malloc_r>:
 8020a10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8020a14:	1ccd      	adds	r5, r1, #3
 8020a16:	f025 0503 	bic.w	r5, r5, #3
 8020a1a:	3508      	adds	r5, #8
 8020a1c:	2d0c      	cmp	r5, #12
 8020a1e:	bf38      	it	cc
 8020a20:	250c      	movcc	r5, #12
 8020a22:	2d00      	cmp	r5, #0
 8020a24:	4607      	mov	r7, r0
 8020a26:	db01      	blt.n	8020a2c <_malloc_r+0x1c>
 8020a28:	42a9      	cmp	r1, r5
 8020a2a:	d905      	bls.n	8020a38 <_malloc_r+0x28>
 8020a2c:	230c      	movs	r3, #12
 8020a2e:	603b      	str	r3, [r7, #0]
 8020a30:	2600      	movs	r6, #0
 8020a32:	4630      	mov	r0, r6
 8020a34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8020a38:	4e2e      	ldr	r6, [pc, #184]	; (8020af4 <_malloc_r+0xe4>)
 8020a3a:	f000 fecb 	bl	80217d4 <__malloc_lock>
 8020a3e:	6833      	ldr	r3, [r6, #0]
 8020a40:	461c      	mov	r4, r3
 8020a42:	bb34      	cbnz	r4, 8020a92 <_malloc_r+0x82>
 8020a44:	4629      	mov	r1, r5
 8020a46:	4638      	mov	r0, r7
 8020a48:	f7ff ffc2 	bl	80209d0 <sbrk_aligned>
 8020a4c:	1c43      	adds	r3, r0, #1
 8020a4e:	4604      	mov	r4, r0
 8020a50:	d14d      	bne.n	8020aee <_malloc_r+0xde>
 8020a52:	6834      	ldr	r4, [r6, #0]
 8020a54:	4626      	mov	r6, r4
 8020a56:	2e00      	cmp	r6, #0
 8020a58:	d140      	bne.n	8020adc <_malloc_r+0xcc>
 8020a5a:	6823      	ldr	r3, [r4, #0]
 8020a5c:	4631      	mov	r1, r6
 8020a5e:	4638      	mov	r0, r7
 8020a60:	eb04 0803 	add.w	r8, r4, r3
 8020a64:	f000 fba0 	bl	80211a8 <_sbrk_r>
 8020a68:	4580      	cmp	r8, r0
 8020a6a:	d13a      	bne.n	8020ae2 <_malloc_r+0xd2>
 8020a6c:	6821      	ldr	r1, [r4, #0]
 8020a6e:	3503      	adds	r5, #3
 8020a70:	1a6d      	subs	r5, r5, r1
 8020a72:	f025 0503 	bic.w	r5, r5, #3
 8020a76:	3508      	adds	r5, #8
 8020a78:	2d0c      	cmp	r5, #12
 8020a7a:	bf38      	it	cc
 8020a7c:	250c      	movcc	r5, #12
 8020a7e:	4629      	mov	r1, r5
 8020a80:	4638      	mov	r0, r7
 8020a82:	f7ff ffa5 	bl	80209d0 <sbrk_aligned>
 8020a86:	3001      	adds	r0, #1
 8020a88:	d02b      	beq.n	8020ae2 <_malloc_r+0xd2>
 8020a8a:	6823      	ldr	r3, [r4, #0]
 8020a8c:	442b      	add	r3, r5
 8020a8e:	6023      	str	r3, [r4, #0]
 8020a90:	e00e      	b.n	8020ab0 <_malloc_r+0xa0>
 8020a92:	6822      	ldr	r2, [r4, #0]
 8020a94:	1b52      	subs	r2, r2, r5
 8020a96:	d41e      	bmi.n	8020ad6 <_malloc_r+0xc6>
 8020a98:	2a0b      	cmp	r2, #11
 8020a9a:	d916      	bls.n	8020aca <_malloc_r+0xba>
 8020a9c:	1961      	adds	r1, r4, r5
 8020a9e:	42a3      	cmp	r3, r4
 8020aa0:	6025      	str	r5, [r4, #0]
 8020aa2:	bf18      	it	ne
 8020aa4:	6059      	strne	r1, [r3, #4]
 8020aa6:	6863      	ldr	r3, [r4, #4]
 8020aa8:	bf08      	it	eq
 8020aaa:	6031      	streq	r1, [r6, #0]
 8020aac:	5162      	str	r2, [r4, r5]
 8020aae:	604b      	str	r3, [r1, #4]
 8020ab0:	4638      	mov	r0, r7
 8020ab2:	f104 060b 	add.w	r6, r4, #11
 8020ab6:	f000 fe93 	bl	80217e0 <__malloc_unlock>
 8020aba:	f026 0607 	bic.w	r6, r6, #7
 8020abe:	1d23      	adds	r3, r4, #4
 8020ac0:	1af2      	subs	r2, r6, r3
 8020ac2:	d0b6      	beq.n	8020a32 <_malloc_r+0x22>
 8020ac4:	1b9b      	subs	r3, r3, r6
 8020ac6:	50a3      	str	r3, [r4, r2]
 8020ac8:	e7b3      	b.n	8020a32 <_malloc_r+0x22>
 8020aca:	6862      	ldr	r2, [r4, #4]
 8020acc:	42a3      	cmp	r3, r4
 8020ace:	bf0c      	ite	eq
 8020ad0:	6032      	streq	r2, [r6, #0]
 8020ad2:	605a      	strne	r2, [r3, #4]
 8020ad4:	e7ec      	b.n	8020ab0 <_malloc_r+0xa0>
 8020ad6:	4623      	mov	r3, r4
 8020ad8:	6864      	ldr	r4, [r4, #4]
 8020ada:	e7b2      	b.n	8020a42 <_malloc_r+0x32>
 8020adc:	4634      	mov	r4, r6
 8020ade:	6876      	ldr	r6, [r6, #4]
 8020ae0:	e7b9      	b.n	8020a56 <_malloc_r+0x46>
 8020ae2:	230c      	movs	r3, #12
 8020ae4:	603b      	str	r3, [r7, #0]
 8020ae6:	4638      	mov	r0, r7
 8020ae8:	f000 fe7a 	bl	80217e0 <__malloc_unlock>
 8020aec:	e7a1      	b.n	8020a32 <_malloc_r+0x22>
 8020aee:	6025      	str	r5, [r4, #0]
 8020af0:	e7de      	b.n	8020ab0 <_malloc_r+0xa0>
 8020af2:	bf00      	nop
 8020af4:	20015590 	.word	0x20015590

08020af8 <__sfputc_r>:
 8020af8:	6893      	ldr	r3, [r2, #8]
 8020afa:	3b01      	subs	r3, #1
 8020afc:	2b00      	cmp	r3, #0
 8020afe:	b410      	push	{r4}
 8020b00:	6093      	str	r3, [r2, #8]
 8020b02:	da08      	bge.n	8020b16 <__sfputc_r+0x1e>
 8020b04:	6994      	ldr	r4, [r2, #24]
 8020b06:	42a3      	cmp	r3, r4
 8020b08:	db01      	blt.n	8020b0e <__sfputc_r+0x16>
 8020b0a:	290a      	cmp	r1, #10
 8020b0c:	d103      	bne.n	8020b16 <__sfputc_r+0x1e>
 8020b0e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8020b12:	f000 bbe1 	b.w	80212d8 <__swbuf_r>
 8020b16:	6813      	ldr	r3, [r2, #0]
 8020b18:	1c58      	adds	r0, r3, #1
 8020b1a:	6010      	str	r0, [r2, #0]
 8020b1c:	7019      	strb	r1, [r3, #0]
 8020b1e:	4608      	mov	r0, r1
 8020b20:	f85d 4b04 	ldr.w	r4, [sp], #4
 8020b24:	4770      	bx	lr

08020b26 <__sfputs_r>:
 8020b26:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8020b28:	4606      	mov	r6, r0
 8020b2a:	460f      	mov	r7, r1
 8020b2c:	4614      	mov	r4, r2
 8020b2e:	18d5      	adds	r5, r2, r3
 8020b30:	42ac      	cmp	r4, r5
 8020b32:	d101      	bne.n	8020b38 <__sfputs_r+0x12>
 8020b34:	2000      	movs	r0, #0
 8020b36:	e007      	b.n	8020b48 <__sfputs_r+0x22>
 8020b38:	f814 1b01 	ldrb.w	r1, [r4], #1
 8020b3c:	463a      	mov	r2, r7
 8020b3e:	4630      	mov	r0, r6
 8020b40:	f7ff ffda 	bl	8020af8 <__sfputc_r>
 8020b44:	1c43      	adds	r3, r0, #1
 8020b46:	d1f3      	bne.n	8020b30 <__sfputs_r+0xa>
 8020b48:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08020b4c <_vfiprintf_r>:
 8020b4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020b50:	460d      	mov	r5, r1
 8020b52:	b09d      	sub	sp, #116	; 0x74
 8020b54:	4614      	mov	r4, r2
 8020b56:	4698      	mov	r8, r3
 8020b58:	4606      	mov	r6, r0
 8020b5a:	b118      	cbz	r0, 8020b64 <_vfiprintf_r+0x18>
 8020b5c:	6983      	ldr	r3, [r0, #24]
 8020b5e:	b90b      	cbnz	r3, 8020b64 <_vfiprintf_r+0x18>
 8020b60:	f7ff fdec 	bl	802073c <__sinit>
 8020b64:	4b89      	ldr	r3, [pc, #548]	; (8020d8c <_vfiprintf_r+0x240>)
 8020b66:	429d      	cmp	r5, r3
 8020b68:	d11b      	bne.n	8020ba2 <_vfiprintf_r+0x56>
 8020b6a:	6875      	ldr	r5, [r6, #4]
 8020b6c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8020b6e:	07d9      	lsls	r1, r3, #31
 8020b70:	d405      	bmi.n	8020b7e <_vfiprintf_r+0x32>
 8020b72:	89ab      	ldrh	r3, [r5, #12]
 8020b74:	059a      	lsls	r2, r3, #22
 8020b76:	d402      	bmi.n	8020b7e <_vfiprintf_r+0x32>
 8020b78:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8020b7a:	f7ff feb4 	bl	80208e6 <__retarget_lock_acquire_recursive>
 8020b7e:	89ab      	ldrh	r3, [r5, #12]
 8020b80:	071b      	lsls	r3, r3, #28
 8020b82:	d501      	bpl.n	8020b88 <_vfiprintf_r+0x3c>
 8020b84:	692b      	ldr	r3, [r5, #16]
 8020b86:	b9eb      	cbnz	r3, 8020bc4 <_vfiprintf_r+0x78>
 8020b88:	4629      	mov	r1, r5
 8020b8a:	4630      	mov	r0, r6
 8020b8c:	f000 fc08 	bl	80213a0 <__swsetup_r>
 8020b90:	b1c0      	cbz	r0, 8020bc4 <_vfiprintf_r+0x78>
 8020b92:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8020b94:	07dc      	lsls	r4, r3, #31
 8020b96:	d50e      	bpl.n	8020bb6 <_vfiprintf_r+0x6a>
 8020b98:	f04f 30ff 	mov.w	r0, #4294967295
 8020b9c:	b01d      	add	sp, #116	; 0x74
 8020b9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020ba2:	4b7b      	ldr	r3, [pc, #492]	; (8020d90 <_vfiprintf_r+0x244>)
 8020ba4:	429d      	cmp	r5, r3
 8020ba6:	d101      	bne.n	8020bac <_vfiprintf_r+0x60>
 8020ba8:	68b5      	ldr	r5, [r6, #8]
 8020baa:	e7df      	b.n	8020b6c <_vfiprintf_r+0x20>
 8020bac:	4b79      	ldr	r3, [pc, #484]	; (8020d94 <_vfiprintf_r+0x248>)
 8020bae:	429d      	cmp	r5, r3
 8020bb0:	bf08      	it	eq
 8020bb2:	68f5      	ldreq	r5, [r6, #12]
 8020bb4:	e7da      	b.n	8020b6c <_vfiprintf_r+0x20>
 8020bb6:	89ab      	ldrh	r3, [r5, #12]
 8020bb8:	0598      	lsls	r0, r3, #22
 8020bba:	d4ed      	bmi.n	8020b98 <_vfiprintf_r+0x4c>
 8020bbc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8020bbe:	f7ff fe94 	bl	80208ea <__retarget_lock_release_recursive>
 8020bc2:	e7e9      	b.n	8020b98 <_vfiprintf_r+0x4c>
 8020bc4:	2300      	movs	r3, #0
 8020bc6:	9309      	str	r3, [sp, #36]	; 0x24
 8020bc8:	2320      	movs	r3, #32
 8020bca:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8020bce:	f8cd 800c 	str.w	r8, [sp, #12]
 8020bd2:	2330      	movs	r3, #48	; 0x30
 8020bd4:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8020d98 <_vfiprintf_r+0x24c>
 8020bd8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8020bdc:	f04f 0901 	mov.w	r9, #1
 8020be0:	4623      	mov	r3, r4
 8020be2:	469a      	mov	sl, r3
 8020be4:	f813 2b01 	ldrb.w	r2, [r3], #1
 8020be8:	b10a      	cbz	r2, 8020bee <_vfiprintf_r+0xa2>
 8020bea:	2a25      	cmp	r2, #37	; 0x25
 8020bec:	d1f9      	bne.n	8020be2 <_vfiprintf_r+0x96>
 8020bee:	ebba 0b04 	subs.w	fp, sl, r4
 8020bf2:	d00b      	beq.n	8020c0c <_vfiprintf_r+0xc0>
 8020bf4:	465b      	mov	r3, fp
 8020bf6:	4622      	mov	r2, r4
 8020bf8:	4629      	mov	r1, r5
 8020bfa:	4630      	mov	r0, r6
 8020bfc:	f7ff ff93 	bl	8020b26 <__sfputs_r>
 8020c00:	3001      	adds	r0, #1
 8020c02:	f000 80aa 	beq.w	8020d5a <_vfiprintf_r+0x20e>
 8020c06:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8020c08:	445a      	add	r2, fp
 8020c0a:	9209      	str	r2, [sp, #36]	; 0x24
 8020c0c:	f89a 3000 	ldrb.w	r3, [sl]
 8020c10:	2b00      	cmp	r3, #0
 8020c12:	f000 80a2 	beq.w	8020d5a <_vfiprintf_r+0x20e>
 8020c16:	2300      	movs	r3, #0
 8020c18:	f04f 32ff 	mov.w	r2, #4294967295
 8020c1c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8020c20:	f10a 0a01 	add.w	sl, sl, #1
 8020c24:	9304      	str	r3, [sp, #16]
 8020c26:	9307      	str	r3, [sp, #28]
 8020c28:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8020c2c:	931a      	str	r3, [sp, #104]	; 0x68
 8020c2e:	4654      	mov	r4, sl
 8020c30:	2205      	movs	r2, #5
 8020c32:	f814 1b01 	ldrb.w	r1, [r4], #1
 8020c36:	4858      	ldr	r0, [pc, #352]	; (8020d98 <_vfiprintf_r+0x24c>)
 8020c38:	f7df fada 	bl	80001f0 <memchr>
 8020c3c:	9a04      	ldr	r2, [sp, #16]
 8020c3e:	b9d8      	cbnz	r0, 8020c78 <_vfiprintf_r+0x12c>
 8020c40:	06d1      	lsls	r1, r2, #27
 8020c42:	bf44      	itt	mi
 8020c44:	2320      	movmi	r3, #32
 8020c46:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8020c4a:	0713      	lsls	r3, r2, #28
 8020c4c:	bf44      	itt	mi
 8020c4e:	232b      	movmi	r3, #43	; 0x2b
 8020c50:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8020c54:	f89a 3000 	ldrb.w	r3, [sl]
 8020c58:	2b2a      	cmp	r3, #42	; 0x2a
 8020c5a:	d015      	beq.n	8020c88 <_vfiprintf_r+0x13c>
 8020c5c:	9a07      	ldr	r2, [sp, #28]
 8020c5e:	4654      	mov	r4, sl
 8020c60:	2000      	movs	r0, #0
 8020c62:	f04f 0c0a 	mov.w	ip, #10
 8020c66:	4621      	mov	r1, r4
 8020c68:	f811 3b01 	ldrb.w	r3, [r1], #1
 8020c6c:	3b30      	subs	r3, #48	; 0x30
 8020c6e:	2b09      	cmp	r3, #9
 8020c70:	d94e      	bls.n	8020d10 <_vfiprintf_r+0x1c4>
 8020c72:	b1b0      	cbz	r0, 8020ca2 <_vfiprintf_r+0x156>
 8020c74:	9207      	str	r2, [sp, #28]
 8020c76:	e014      	b.n	8020ca2 <_vfiprintf_r+0x156>
 8020c78:	eba0 0308 	sub.w	r3, r0, r8
 8020c7c:	fa09 f303 	lsl.w	r3, r9, r3
 8020c80:	4313      	orrs	r3, r2
 8020c82:	9304      	str	r3, [sp, #16]
 8020c84:	46a2      	mov	sl, r4
 8020c86:	e7d2      	b.n	8020c2e <_vfiprintf_r+0xe2>
 8020c88:	9b03      	ldr	r3, [sp, #12]
 8020c8a:	1d19      	adds	r1, r3, #4
 8020c8c:	681b      	ldr	r3, [r3, #0]
 8020c8e:	9103      	str	r1, [sp, #12]
 8020c90:	2b00      	cmp	r3, #0
 8020c92:	bfbb      	ittet	lt
 8020c94:	425b      	neglt	r3, r3
 8020c96:	f042 0202 	orrlt.w	r2, r2, #2
 8020c9a:	9307      	strge	r3, [sp, #28]
 8020c9c:	9307      	strlt	r3, [sp, #28]
 8020c9e:	bfb8      	it	lt
 8020ca0:	9204      	strlt	r2, [sp, #16]
 8020ca2:	7823      	ldrb	r3, [r4, #0]
 8020ca4:	2b2e      	cmp	r3, #46	; 0x2e
 8020ca6:	d10c      	bne.n	8020cc2 <_vfiprintf_r+0x176>
 8020ca8:	7863      	ldrb	r3, [r4, #1]
 8020caa:	2b2a      	cmp	r3, #42	; 0x2a
 8020cac:	d135      	bne.n	8020d1a <_vfiprintf_r+0x1ce>
 8020cae:	9b03      	ldr	r3, [sp, #12]
 8020cb0:	1d1a      	adds	r2, r3, #4
 8020cb2:	681b      	ldr	r3, [r3, #0]
 8020cb4:	9203      	str	r2, [sp, #12]
 8020cb6:	2b00      	cmp	r3, #0
 8020cb8:	bfb8      	it	lt
 8020cba:	f04f 33ff 	movlt.w	r3, #4294967295
 8020cbe:	3402      	adds	r4, #2
 8020cc0:	9305      	str	r3, [sp, #20]
 8020cc2:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8020da8 <_vfiprintf_r+0x25c>
 8020cc6:	7821      	ldrb	r1, [r4, #0]
 8020cc8:	2203      	movs	r2, #3
 8020cca:	4650      	mov	r0, sl
 8020ccc:	f7df fa90 	bl	80001f0 <memchr>
 8020cd0:	b140      	cbz	r0, 8020ce4 <_vfiprintf_r+0x198>
 8020cd2:	2340      	movs	r3, #64	; 0x40
 8020cd4:	eba0 000a 	sub.w	r0, r0, sl
 8020cd8:	fa03 f000 	lsl.w	r0, r3, r0
 8020cdc:	9b04      	ldr	r3, [sp, #16]
 8020cde:	4303      	orrs	r3, r0
 8020ce0:	3401      	adds	r4, #1
 8020ce2:	9304      	str	r3, [sp, #16]
 8020ce4:	f814 1b01 	ldrb.w	r1, [r4], #1
 8020ce8:	482c      	ldr	r0, [pc, #176]	; (8020d9c <_vfiprintf_r+0x250>)
 8020cea:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8020cee:	2206      	movs	r2, #6
 8020cf0:	f7df fa7e 	bl	80001f0 <memchr>
 8020cf4:	2800      	cmp	r0, #0
 8020cf6:	d03f      	beq.n	8020d78 <_vfiprintf_r+0x22c>
 8020cf8:	4b29      	ldr	r3, [pc, #164]	; (8020da0 <_vfiprintf_r+0x254>)
 8020cfa:	bb1b      	cbnz	r3, 8020d44 <_vfiprintf_r+0x1f8>
 8020cfc:	9b03      	ldr	r3, [sp, #12]
 8020cfe:	3307      	adds	r3, #7
 8020d00:	f023 0307 	bic.w	r3, r3, #7
 8020d04:	3308      	adds	r3, #8
 8020d06:	9303      	str	r3, [sp, #12]
 8020d08:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020d0a:	443b      	add	r3, r7
 8020d0c:	9309      	str	r3, [sp, #36]	; 0x24
 8020d0e:	e767      	b.n	8020be0 <_vfiprintf_r+0x94>
 8020d10:	fb0c 3202 	mla	r2, ip, r2, r3
 8020d14:	460c      	mov	r4, r1
 8020d16:	2001      	movs	r0, #1
 8020d18:	e7a5      	b.n	8020c66 <_vfiprintf_r+0x11a>
 8020d1a:	2300      	movs	r3, #0
 8020d1c:	3401      	adds	r4, #1
 8020d1e:	9305      	str	r3, [sp, #20]
 8020d20:	4619      	mov	r1, r3
 8020d22:	f04f 0c0a 	mov.w	ip, #10
 8020d26:	4620      	mov	r0, r4
 8020d28:	f810 2b01 	ldrb.w	r2, [r0], #1
 8020d2c:	3a30      	subs	r2, #48	; 0x30
 8020d2e:	2a09      	cmp	r2, #9
 8020d30:	d903      	bls.n	8020d3a <_vfiprintf_r+0x1ee>
 8020d32:	2b00      	cmp	r3, #0
 8020d34:	d0c5      	beq.n	8020cc2 <_vfiprintf_r+0x176>
 8020d36:	9105      	str	r1, [sp, #20]
 8020d38:	e7c3      	b.n	8020cc2 <_vfiprintf_r+0x176>
 8020d3a:	fb0c 2101 	mla	r1, ip, r1, r2
 8020d3e:	4604      	mov	r4, r0
 8020d40:	2301      	movs	r3, #1
 8020d42:	e7f0      	b.n	8020d26 <_vfiprintf_r+0x1da>
 8020d44:	ab03      	add	r3, sp, #12
 8020d46:	9300      	str	r3, [sp, #0]
 8020d48:	462a      	mov	r2, r5
 8020d4a:	4b16      	ldr	r3, [pc, #88]	; (8020da4 <_vfiprintf_r+0x258>)
 8020d4c:	a904      	add	r1, sp, #16
 8020d4e:	4630      	mov	r0, r6
 8020d50:	f3af 8000 	nop.w
 8020d54:	4607      	mov	r7, r0
 8020d56:	1c78      	adds	r0, r7, #1
 8020d58:	d1d6      	bne.n	8020d08 <_vfiprintf_r+0x1bc>
 8020d5a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8020d5c:	07d9      	lsls	r1, r3, #31
 8020d5e:	d405      	bmi.n	8020d6c <_vfiprintf_r+0x220>
 8020d60:	89ab      	ldrh	r3, [r5, #12]
 8020d62:	059a      	lsls	r2, r3, #22
 8020d64:	d402      	bmi.n	8020d6c <_vfiprintf_r+0x220>
 8020d66:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8020d68:	f7ff fdbf 	bl	80208ea <__retarget_lock_release_recursive>
 8020d6c:	89ab      	ldrh	r3, [r5, #12]
 8020d6e:	065b      	lsls	r3, r3, #25
 8020d70:	f53f af12 	bmi.w	8020b98 <_vfiprintf_r+0x4c>
 8020d74:	9809      	ldr	r0, [sp, #36]	; 0x24
 8020d76:	e711      	b.n	8020b9c <_vfiprintf_r+0x50>
 8020d78:	ab03      	add	r3, sp, #12
 8020d7a:	9300      	str	r3, [sp, #0]
 8020d7c:	462a      	mov	r2, r5
 8020d7e:	4b09      	ldr	r3, [pc, #36]	; (8020da4 <_vfiprintf_r+0x258>)
 8020d80:	a904      	add	r1, sp, #16
 8020d82:	4630      	mov	r0, r6
 8020d84:	f000 f880 	bl	8020e88 <_printf_i>
 8020d88:	e7e4      	b.n	8020d54 <_vfiprintf_r+0x208>
 8020d8a:	bf00      	nop
 8020d8c:	08024458 	.word	0x08024458
 8020d90:	08024478 	.word	0x08024478
 8020d94:	08024438 	.word	0x08024438
 8020d98:	0802449c 	.word	0x0802449c
 8020d9c:	080244a6 	.word	0x080244a6
 8020da0:	00000000 	.word	0x00000000
 8020da4:	08020b27 	.word	0x08020b27
 8020da8:	080244a2 	.word	0x080244a2

08020dac <_printf_common>:
 8020dac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020db0:	4616      	mov	r6, r2
 8020db2:	4699      	mov	r9, r3
 8020db4:	688a      	ldr	r2, [r1, #8]
 8020db6:	690b      	ldr	r3, [r1, #16]
 8020db8:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8020dbc:	4293      	cmp	r3, r2
 8020dbe:	bfb8      	it	lt
 8020dc0:	4613      	movlt	r3, r2
 8020dc2:	6033      	str	r3, [r6, #0]
 8020dc4:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8020dc8:	4607      	mov	r7, r0
 8020dca:	460c      	mov	r4, r1
 8020dcc:	b10a      	cbz	r2, 8020dd2 <_printf_common+0x26>
 8020dce:	3301      	adds	r3, #1
 8020dd0:	6033      	str	r3, [r6, #0]
 8020dd2:	6823      	ldr	r3, [r4, #0]
 8020dd4:	0699      	lsls	r1, r3, #26
 8020dd6:	bf42      	ittt	mi
 8020dd8:	6833      	ldrmi	r3, [r6, #0]
 8020dda:	3302      	addmi	r3, #2
 8020ddc:	6033      	strmi	r3, [r6, #0]
 8020dde:	6825      	ldr	r5, [r4, #0]
 8020de0:	f015 0506 	ands.w	r5, r5, #6
 8020de4:	d106      	bne.n	8020df4 <_printf_common+0x48>
 8020de6:	f104 0a19 	add.w	sl, r4, #25
 8020dea:	68e3      	ldr	r3, [r4, #12]
 8020dec:	6832      	ldr	r2, [r6, #0]
 8020dee:	1a9b      	subs	r3, r3, r2
 8020df0:	42ab      	cmp	r3, r5
 8020df2:	dc26      	bgt.n	8020e42 <_printf_common+0x96>
 8020df4:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8020df8:	1e13      	subs	r3, r2, #0
 8020dfa:	6822      	ldr	r2, [r4, #0]
 8020dfc:	bf18      	it	ne
 8020dfe:	2301      	movne	r3, #1
 8020e00:	0692      	lsls	r2, r2, #26
 8020e02:	d42b      	bmi.n	8020e5c <_printf_common+0xb0>
 8020e04:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8020e08:	4649      	mov	r1, r9
 8020e0a:	4638      	mov	r0, r7
 8020e0c:	47c0      	blx	r8
 8020e0e:	3001      	adds	r0, #1
 8020e10:	d01e      	beq.n	8020e50 <_printf_common+0xa4>
 8020e12:	6823      	ldr	r3, [r4, #0]
 8020e14:	68e5      	ldr	r5, [r4, #12]
 8020e16:	6832      	ldr	r2, [r6, #0]
 8020e18:	f003 0306 	and.w	r3, r3, #6
 8020e1c:	2b04      	cmp	r3, #4
 8020e1e:	bf08      	it	eq
 8020e20:	1aad      	subeq	r5, r5, r2
 8020e22:	68a3      	ldr	r3, [r4, #8]
 8020e24:	6922      	ldr	r2, [r4, #16]
 8020e26:	bf0c      	ite	eq
 8020e28:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8020e2c:	2500      	movne	r5, #0
 8020e2e:	4293      	cmp	r3, r2
 8020e30:	bfc4      	itt	gt
 8020e32:	1a9b      	subgt	r3, r3, r2
 8020e34:	18ed      	addgt	r5, r5, r3
 8020e36:	2600      	movs	r6, #0
 8020e38:	341a      	adds	r4, #26
 8020e3a:	42b5      	cmp	r5, r6
 8020e3c:	d11a      	bne.n	8020e74 <_printf_common+0xc8>
 8020e3e:	2000      	movs	r0, #0
 8020e40:	e008      	b.n	8020e54 <_printf_common+0xa8>
 8020e42:	2301      	movs	r3, #1
 8020e44:	4652      	mov	r2, sl
 8020e46:	4649      	mov	r1, r9
 8020e48:	4638      	mov	r0, r7
 8020e4a:	47c0      	blx	r8
 8020e4c:	3001      	adds	r0, #1
 8020e4e:	d103      	bne.n	8020e58 <_printf_common+0xac>
 8020e50:	f04f 30ff 	mov.w	r0, #4294967295
 8020e54:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020e58:	3501      	adds	r5, #1
 8020e5a:	e7c6      	b.n	8020dea <_printf_common+0x3e>
 8020e5c:	18e1      	adds	r1, r4, r3
 8020e5e:	1c5a      	adds	r2, r3, #1
 8020e60:	2030      	movs	r0, #48	; 0x30
 8020e62:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8020e66:	4422      	add	r2, r4
 8020e68:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8020e6c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8020e70:	3302      	adds	r3, #2
 8020e72:	e7c7      	b.n	8020e04 <_printf_common+0x58>
 8020e74:	2301      	movs	r3, #1
 8020e76:	4622      	mov	r2, r4
 8020e78:	4649      	mov	r1, r9
 8020e7a:	4638      	mov	r0, r7
 8020e7c:	47c0      	blx	r8
 8020e7e:	3001      	adds	r0, #1
 8020e80:	d0e6      	beq.n	8020e50 <_printf_common+0xa4>
 8020e82:	3601      	adds	r6, #1
 8020e84:	e7d9      	b.n	8020e3a <_printf_common+0x8e>
	...

08020e88 <_printf_i>:
 8020e88:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8020e8c:	7e0f      	ldrb	r7, [r1, #24]
 8020e8e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8020e90:	2f78      	cmp	r7, #120	; 0x78
 8020e92:	4691      	mov	r9, r2
 8020e94:	4680      	mov	r8, r0
 8020e96:	460c      	mov	r4, r1
 8020e98:	469a      	mov	sl, r3
 8020e9a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8020e9e:	d807      	bhi.n	8020eb0 <_printf_i+0x28>
 8020ea0:	2f62      	cmp	r7, #98	; 0x62
 8020ea2:	d80a      	bhi.n	8020eba <_printf_i+0x32>
 8020ea4:	2f00      	cmp	r7, #0
 8020ea6:	f000 80d8 	beq.w	802105a <_printf_i+0x1d2>
 8020eaa:	2f58      	cmp	r7, #88	; 0x58
 8020eac:	f000 80a3 	beq.w	8020ff6 <_printf_i+0x16e>
 8020eb0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8020eb4:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8020eb8:	e03a      	b.n	8020f30 <_printf_i+0xa8>
 8020eba:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8020ebe:	2b15      	cmp	r3, #21
 8020ec0:	d8f6      	bhi.n	8020eb0 <_printf_i+0x28>
 8020ec2:	a101      	add	r1, pc, #4	; (adr r1, 8020ec8 <_printf_i+0x40>)
 8020ec4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8020ec8:	08020f21 	.word	0x08020f21
 8020ecc:	08020f35 	.word	0x08020f35
 8020ed0:	08020eb1 	.word	0x08020eb1
 8020ed4:	08020eb1 	.word	0x08020eb1
 8020ed8:	08020eb1 	.word	0x08020eb1
 8020edc:	08020eb1 	.word	0x08020eb1
 8020ee0:	08020f35 	.word	0x08020f35
 8020ee4:	08020eb1 	.word	0x08020eb1
 8020ee8:	08020eb1 	.word	0x08020eb1
 8020eec:	08020eb1 	.word	0x08020eb1
 8020ef0:	08020eb1 	.word	0x08020eb1
 8020ef4:	08021041 	.word	0x08021041
 8020ef8:	08020f65 	.word	0x08020f65
 8020efc:	08021023 	.word	0x08021023
 8020f00:	08020eb1 	.word	0x08020eb1
 8020f04:	08020eb1 	.word	0x08020eb1
 8020f08:	08021063 	.word	0x08021063
 8020f0c:	08020eb1 	.word	0x08020eb1
 8020f10:	08020f65 	.word	0x08020f65
 8020f14:	08020eb1 	.word	0x08020eb1
 8020f18:	08020eb1 	.word	0x08020eb1
 8020f1c:	0802102b 	.word	0x0802102b
 8020f20:	682b      	ldr	r3, [r5, #0]
 8020f22:	1d1a      	adds	r2, r3, #4
 8020f24:	681b      	ldr	r3, [r3, #0]
 8020f26:	602a      	str	r2, [r5, #0]
 8020f28:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8020f2c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8020f30:	2301      	movs	r3, #1
 8020f32:	e0a3      	b.n	802107c <_printf_i+0x1f4>
 8020f34:	6820      	ldr	r0, [r4, #0]
 8020f36:	6829      	ldr	r1, [r5, #0]
 8020f38:	0606      	lsls	r6, r0, #24
 8020f3a:	f101 0304 	add.w	r3, r1, #4
 8020f3e:	d50a      	bpl.n	8020f56 <_printf_i+0xce>
 8020f40:	680e      	ldr	r6, [r1, #0]
 8020f42:	602b      	str	r3, [r5, #0]
 8020f44:	2e00      	cmp	r6, #0
 8020f46:	da03      	bge.n	8020f50 <_printf_i+0xc8>
 8020f48:	232d      	movs	r3, #45	; 0x2d
 8020f4a:	4276      	negs	r6, r6
 8020f4c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8020f50:	485e      	ldr	r0, [pc, #376]	; (80210cc <_printf_i+0x244>)
 8020f52:	230a      	movs	r3, #10
 8020f54:	e019      	b.n	8020f8a <_printf_i+0x102>
 8020f56:	680e      	ldr	r6, [r1, #0]
 8020f58:	602b      	str	r3, [r5, #0]
 8020f5a:	f010 0f40 	tst.w	r0, #64	; 0x40
 8020f5e:	bf18      	it	ne
 8020f60:	b236      	sxthne	r6, r6
 8020f62:	e7ef      	b.n	8020f44 <_printf_i+0xbc>
 8020f64:	682b      	ldr	r3, [r5, #0]
 8020f66:	6820      	ldr	r0, [r4, #0]
 8020f68:	1d19      	adds	r1, r3, #4
 8020f6a:	6029      	str	r1, [r5, #0]
 8020f6c:	0601      	lsls	r1, r0, #24
 8020f6e:	d501      	bpl.n	8020f74 <_printf_i+0xec>
 8020f70:	681e      	ldr	r6, [r3, #0]
 8020f72:	e002      	b.n	8020f7a <_printf_i+0xf2>
 8020f74:	0646      	lsls	r6, r0, #25
 8020f76:	d5fb      	bpl.n	8020f70 <_printf_i+0xe8>
 8020f78:	881e      	ldrh	r6, [r3, #0]
 8020f7a:	4854      	ldr	r0, [pc, #336]	; (80210cc <_printf_i+0x244>)
 8020f7c:	2f6f      	cmp	r7, #111	; 0x6f
 8020f7e:	bf0c      	ite	eq
 8020f80:	2308      	moveq	r3, #8
 8020f82:	230a      	movne	r3, #10
 8020f84:	2100      	movs	r1, #0
 8020f86:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8020f8a:	6865      	ldr	r5, [r4, #4]
 8020f8c:	60a5      	str	r5, [r4, #8]
 8020f8e:	2d00      	cmp	r5, #0
 8020f90:	bfa2      	ittt	ge
 8020f92:	6821      	ldrge	r1, [r4, #0]
 8020f94:	f021 0104 	bicge.w	r1, r1, #4
 8020f98:	6021      	strge	r1, [r4, #0]
 8020f9a:	b90e      	cbnz	r6, 8020fa0 <_printf_i+0x118>
 8020f9c:	2d00      	cmp	r5, #0
 8020f9e:	d04d      	beq.n	802103c <_printf_i+0x1b4>
 8020fa0:	4615      	mov	r5, r2
 8020fa2:	fbb6 f1f3 	udiv	r1, r6, r3
 8020fa6:	fb03 6711 	mls	r7, r3, r1, r6
 8020faa:	5dc7      	ldrb	r7, [r0, r7]
 8020fac:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8020fb0:	4637      	mov	r7, r6
 8020fb2:	42bb      	cmp	r3, r7
 8020fb4:	460e      	mov	r6, r1
 8020fb6:	d9f4      	bls.n	8020fa2 <_printf_i+0x11a>
 8020fb8:	2b08      	cmp	r3, #8
 8020fba:	d10b      	bne.n	8020fd4 <_printf_i+0x14c>
 8020fbc:	6823      	ldr	r3, [r4, #0]
 8020fbe:	07de      	lsls	r6, r3, #31
 8020fc0:	d508      	bpl.n	8020fd4 <_printf_i+0x14c>
 8020fc2:	6923      	ldr	r3, [r4, #16]
 8020fc4:	6861      	ldr	r1, [r4, #4]
 8020fc6:	4299      	cmp	r1, r3
 8020fc8:	bfde      	ittt	le
 8020fca:	2330      	movle	r3, #48	; 0x30
 8020fcc:	f805 3c01 	strble.w	r3, [r5, #-1]
 8020fd0:	f105 35ff 	addle.w	r5, r5, #4294967295
 8020fd4:	1b52      	subs	r2, r2, r5
 8020fd6:	6122      	str	r2, [r4, #16]
 8020fd8:	f8cd a000 	str.w	sl, [sp]
 8020fdc:	464b      	mov	r3, r9
 8020fde:	aa03      	add	r2, sp, #12
 8020fe0:	4621      	mov	r1, r4
 8020fe2:	4640      	mov	r0, r8
 8020fe4:	f7ff fee2 	bl	8020dac <_printf_common>
 8020fe8:	3001      	adds	r0, #1
 8020fea:	d14c      	bne.n	8021086 <_printf_i+0x1fe>
 8020fec:	f04f 30ff 	mov.w	r0, #4294967295
 8020ff0:	b004      	add	sp, #16
 8020ff2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020ff6:	4835      	ldr	r0, [pc, #212]	; (80210cc <_printf_i+0x244>)
 8020ff8:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8020ffc:	6829      	ldr	r1, [r5, #0]
 8020ffe:	6823      	ldr	r3, [r4, #0]
 8021000:	f851 6b04 	ldr.w	r6, [r1], #4
 8021004:	6029      	str	r1, [r5, #0]
 8021006:	061d      	lsls	r5, r3, #24
 8021008:	d514      	bpl.n	8021034 <_printf_i+0x1ac>
 802100a:	07df      	lsls	r7, r3, #31
 802100c:	bf44      	itt	mi
 802100e:	f043 0320 	orrmi.w	r3, r3, #32
 8021012:	6023      	strmi	r3, [r4, #0]
 8021014:	b91e      	cbnz	r6, 802101e <_printf_i+0x196>
 8021016:	6823      	ldr	r3, [r4, #0]
 8021018:	f023 0320 	bic.w	r3, r3, #32
 802101c:	6023      	str	r3, [r4, #0]
 802101e:	2310      	movs	r3, #16
 8021020:	e7b0      	b.n	8020f84 <_printf_i+0xfc>
 8021022:	6823      	ldr	r3, [r4, #0]
 8021024:	f043 0320 	orr.w	r3, r3, #32
 8021028:	6023      	str	r3, [r4, #0]
 802102a:	2378      	movs	r3, #120	; 0x78
 802102c:	4828      	ldr	r0, [pc, #160]	; (80210d0 <_printf_i+0x248>)
 802102e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8021032:	e7e3      	b.n	8020ffc <_printf_i+0x174>
 8021034:	0659      	lsls	r1, r3, #25
 8021036:	bf48      	it	mi
 8021038:	b2b6      	uxthmi	r6, r6
 802103a:	e7e6      	b.n	802100a <_printf_i+0x182>
 802103c:	4615      	mov	r5, r2
 802103e:	e7bb      	b.n	8020fb8 <_printf_i+0x130>
 8021040:	682b      	ldr	r3, [r5, #0]
 8021042:	6826      	ldr	r6, [r4, #0]
 8021044:	6961      	ldr	r1, [r4, #20]
 8021046:	1d18      	adds	r0, r3, #4
 8021048:	6028      	str	r0, [r5, #0]
 802104a:	0635      	lsls	r5, r6, #24
 802104c:	681b      	ldr	r3, [r3, #0]
 802104e:	d501      	bpl.n	8021054 <_printf_i+0x1cc>
 8021050:	6019      	str	r1, [r3, #0]
 8021052:	e002      	b.n	802105a <_printf_i+0x1d2>
 8021054:	0670      	lsls	r0, r6, #25
 8021056:	d5fb      	bpl.n	8021050 <_printf_i+0x1c8>
 8021058:	8019      	strh	r1, [r3, #0]
 802105a:	2300      	movs	r3, #0
 802105c:	6123      	str	r3, [r4, #16]
 802105e:	4615      	mov	r5, r2
 8021060:	e7ba      	b.n	8020fd8 <_printf_i+0x150>
 8021062:	682b      	ldr	r3, [r5, #0]
 8021064:	1d1a      	adds	r2, r3, #4
 8021066:	602a      	str	r2, [r5, #0]
 8021068:	681d      	ldr	r5, [r3, #0]
 802106a:	6862      	ldr	r2, [r4, #4]
 802106c:	2100      	movs	r1, #0
 802106e:	4628      	mov	r0, r5
 8021070:	f7df f8be 	bl	80001f0 <memchr>
 8021074:	b108      	cbz	r0, 802107a <_printf_i+0x1f2>
 8021076:	1b40      	subs	r0, r0, r5
 8021078:	6060      	str	r0, [r4, #4]
 802107a:	6863      	ldr	r3, [r4, #4]
 802107c:	6123      	str	r3, [r4, #16]
 802107e:	2300      	movs	r3, #0
 8021080:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8021084:	e7a8      	b.n	8020fd8 <_printf_i+0x150>
 8021086:	6923      	ldr	r3, [r4, #16]
 8021088:	462a      	mov	r2, r5
 802108a:	4649      	mov	r1, r9
 802108c:	4640      	mov	r0, r8
 802108e:	47d0      	blx	sl
 8021090:	3001      	adds	r0, #1
 8021092:	d0ab      	beq.n	8020fec <_printf_i+0x164>
 8021094:	6823      	ldr	r3, [r4, #0]
 8021096:	079b      	lsls	r3, r3, #30
 8021098:	d413      	bmi.n	80210c2 <_printf_i+0x23a>
 802109a:	68e0      	ldr	r0, [r4, #12]
 802109c:	9b03      	ldr	r3, [sp, #12]
 802109e:	4298      	cmp	r0, r3
 80210a0:	bfb8      	it	lt
 80210a2:	4618      	movlt	r0, r3
 80210a4:	e7a4      	b.n	8020ff0 <_printf_i+0x168>
 80210a6:	2301      	movs	r3, #1
 80210a8:	4632      	mov	r2, r6
 80210aa:	4649      	mov	r1, r9
 80210ac:	4640      	mov	r0, r8
 80210ae:	47d0      	blx	sl
 80210b0:	3001      	adds	r0, #1
 80210b2:	d09b      	beq.n	8020fec <_printf_i+0x164>
 80210b4:	3501      	adds	r5, #1
 80210b6:	68e3      	ldr	r3, [r4, #12]
 80210b8:	9903      	ldr	r1, [sp, #12]
 80210ba:	1a5b      	subs	r3, r3, r1
 80210bc:	42ab      	cmp	r3, r5
 80210be:	dcf2      	bgt.n	80210a6 <_printf_i+0x21e>
 80210c0:	e7eb      	b.n	802109a <_printf_i+0x212>
 80210c2:	2500      	movs	r5, #0
 80210c4:	f104 0619 	add.w	r6, r4, #25
 80210c8:	e7f5      	b.n	80210b6 <_printf_i+0x22e>
 80210ca:	bf00      	nop
 80210cc:	080244ad 	.word	0x080244ad
 80210d0:	080244be 	.word	0x080244be

080210d4 <cleanup_glue>:
 80210d4:	b538      	push	{r3, r4, r5, lr}
 80210d6:	460c      	mov	r4, r1
 80210d8:	6809      	ldr	r1, [r1, #0]
 80210da:	4605      	mov	r5, r0
 80210dc:	b109      	cbz	r1, 80210e2 <cleanup_glue+0xe>
 80210de:	f7ff fff9 	bl	80210d4 <cleanup_glue>
 80210e2:	4621      	mov	r1, r4
 80210e4:	4628      	mov	r0, r5
 80210e6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80210ea:	f7ff bc25 	b.w	8020938 <_free_r>
	...

080210f0 <_reclaim_reent>:
 80210f0:	4b2c      	ldr	r3, [pc, #176]	; (80211a4 <_reclaim_reent+0xb4>)
 80210f2:	681b      	ldr	r3, [r3, #0]
 80210f4:	4283      	cmp	r3, r0
 80210f6:	b570      	push	{r4, r5, r6, lr}
 80210f8:	4604      	mov	r4, r0
 80210fa:	d051      	beq.n	80211a0 <_reclaim_reent+0xb0>
 80210fc:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80210fe:	b143      	cbz	r3, 8021112 <_reclaim_reent+0x22>
 8021100:	68db      	ldr	r3, [r3, #12]
 8021102:	2b00      	cmp	r3, #0
 8021104:	d14a      	bne.n	802119c <_reclaim_reent+0xac>
 8021106:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8021108:	6819      	ldr	r1, [r3, #0]
 802110a:	b111      	cbz	r1, 8021112 <_reclaim_reent+0x22>
 802110c:	4620      	mov	r0, r4
 802110e:	f7ff fc13 	bl	8020938 <_free_r>
 8021112:	6961      	ldr	r1, [r4, #20]
 8021114:	b111      	cbz	r1, 802111c <_reclaim_reent+0x2c>
 8021116:	4620      	mov	r0, r4
 8021118:	f7ff fc0e 	bl	8020938 <_free_r>
 802111c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 802111e:	b111      	cbz	r1, 8021126 <_reclaim_reent+0x36>
 8021120:	4620      	mov	r0, r4
 8021122:	f7ff fc09 	bl	8020938 <_free_r>
 8021126:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8021128:	b111      	cbz	r1, 8021130 <_reclaim_reent+0x40>
 802112a:	4620      	mov	r0, r4
 802112c:	f7ff fc04 	bl	8020938 <_free_r>
 8021130:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 8021132:	b111      	cbz	r1, 802113a <_reclaim_reent+0x4a>
 8021134:	4620      	mov	r0, r4
 8021136:	f7ff fbff 	bl	8020938 <_free_r>
 802113a:	6c21      	ldr	r1, [r4, #64]	; 0x40
 802113c:	b111      	cbz	r1, 8021144 <_reclaim_reent+0x54>
 802113e:	4620      	mov	r0, r4
 8021140:	f7ff fbfa 	bl	8020938 <_free_r>
 8021144:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 8021146:	b111      	cbz	r1, 802114e <_reclaim_reent+0x5e>
 8021148:	4620      	mov	r0, r4
 802114a:	f7ff fbf5 	bl	8020938 <_free_r>
 802114e:	6da1      	ldr	r1, [r4, #88]	; 0x58
 8021150:	b111      	cbz	r1, 8021158 <_reclaim_reent+0x68>
 8021152:	4620      	mov	r0, r4
 8021154:	f7ff fbf0 	bl	8020938 <_free_r>
 8021158:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802115a:	b111      	cbz	r1, 8021162 <_reclaim_reent+0x72>
 802115c:	4620      	mov	r0, r4
 802115e:	f7ff fbeb 	bl	8020938 <_free_r>
 8021162:	69a3      	ldr	r3, [r4, #24]
 8021164:	b1e3      	cbz	r3, 80211a0 <_reclaim_reent+0xb0>
 8021166:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8021168:	4620      	mov	r0, r4
 802116a:	4798      	blx	r3
 802116c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 802116e:	b1b9      	cbz	r1, 80211a0 <_reclaim_reent+0xb0>
 8021170:	4620      	mov	r0, r4
 8021172:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8021176:	f7ff bfad 	b.w	80210d4 <cleanup_glue>
 802117a:	5949      	ldr	r1, [r1, r5]
 802117c:	b941      	cbnz	r1, 8021190 <_reclaim_reent+0xa0>
 802117e:	3504      	adds	r5, #4
 8021180:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8021182:	2d80      	cmp	r5, #128	; 0x80
 8021184:	68d9      	ldr	r1, [r3, #12]
 8021186:	d1f8      	bne.n	802117a <_reclaim_reent+0x8a>
 8021188:	4620      	mov	r0, r4
 802118a:	f7ff fbd5 	bl	8020938 <_free_r>
 802118e:	e7ba      	b.n	8021106 <_reclaim_reent+0x16>
 8021190:	680e      	ldr	r6, [r1, #0]
 8021192:	4620      	mov	r0, r4
 8021194:	f7ff fbd0 	bl	8020938 <_free_r>
 8021198:	4631      	mov	r1, r6
 802119a:	e7ef      	b.n	802117c <_reclaim_reent+0x8c>
 802119c:	2500      	movs	r5, #0
 802119e:	e7ef      	b.n	8021180 <_reclaim_reent+0x90>
 80211a0:	bd70      	pop	{r4, r5, r6, pc}
 80211a2:	bf00      	nop
 80211a4:	20000104 	.word	0x20000104

080211a8 <_sbrk_r>:
 80211a8:	b538      	push	{r3, r4, r5, lr}
 80211aa:	4d06      	ldr	r5, [pc, #24]	; (80211c4 <_sbrk_r+0x1c>)
 80211ac:	2300      	movs	r3, #0
 80211ae:	4604      	mov	r4, r0
 80211b0:	4608      	mov	r0, r1
 80211b2:	602b      	str	r3, [r5, #0]
 80211b4:	f7e0 ffd8 	bl	8002168 <_sbrk>
 80211b8:	1c43      	adds	r3, r0, #1
 80211ba:	d102      	bne.n	80211c2 <_sbrk_r+0x1a>
 80211bc:	682b      	ldr	r3, [r5, #0]
 80211be:	b103      	cbz	r3, 80211c2 <_sbrk_r+0x1a>
 80211c0:	6023      	str	r3, [r4, #0]
 80211c2:	bd38      	pop	{r3, r4, r5, pc}
 80211c4:	200156a0 	.word	0x200156a0

080211c8 <_raise_r>:
 80211c8:	291f      	cmp	r1, #31
 80211ca:	b538      	push	{r3, r4, r5, lr}
 80211cc:	4604      	mov	r4, r0
 80211ce:	460d      	mov	r5, r1
 80211d0:	d904      	bls.n	80211dc <_raise_r+0x14>
 80211d2:	2316      	movs	r3, #22
 80211d4:	6003      	str	r3, [r0, #0]
 80211d6:	f04f 30ff 	mov.w	r0, #4294967295
 80211da:	bd38      	pop	{r3, r4, r5, pc}
 80211dc:	6c42      	ldr	r2, [r0, #68]	; 0x44
 80211de:	b112      	cbz	r2, 80211e6 <_raise_r+0x1e>
 80211e0:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80211e4:	b94b      	cbnz	r3, 80211fa <_raise_r+0x32>
 80211e6:	4620      	mov	r0, r4
 80211e8:	f000 f830 	bl	802124c <_getpid_r>
 80211ec:	462a      	mov	r2, r5
 80211ee:	4601      	mov	r1, r0
 80211f0:	4620      	mov	r0, r4
 80211f2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80211f6:	f000 b817 	b.w	8021228 <_kill_r>
 80211fa:	2b01      	cmp	r3, #1
 80211fc:	d00a      	beq.n	8021214 <_raise_r+0x4c>
 80211fe:	1c59      	adds	r1, r3, #1
 8021200:	d103      	bne.n	802120a <_raise_r+0x42>
 8021202:	2316      	movs	r3, #22
 8021204:	6003      	str	r3, [r0, #0]
 8021206:	2001      	movs	r0, #1
 8021208:	e7e7      	b.n	80211da <_raise_r+0x12>
 802120a:	2400      	movs	r4, #0
 802120c:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8021210:	4628      	mov	r0, r5
 8021212:	4798      	blx	r3
 8021214:	2000      	movs	r0, #0
 8021216:	e7e0      	b.n	80211da <_raise_r+0x12>

08021218 <raise>:
 8021218:	4b02      	ldr	r3, [pc, #8]	; (8021224 <raise+0xc>)
 802121a:	4601      	mov	r1, r0
 802121c:	6818      	ldr	r0, [r3, #0]
 802121e:	f7ff bfd3 	b.w	80211c8 <_raise_r>
 8021222:	bf00      	nop
 8021224:	20000104 	.word	0x20000104

08021228 <_kill_r>:
 8021228:	b538      	push	{r3, r4, r5, lr}
 802122a:	4d07      	ldr	r5, [pc, #28]	; (8021248 <_kill_r+0x20>)
 802122c:	2300      	movs	r3, #0
 802122e:	4604      	mov	r4, r0
 8021230:	4608      	mov	r0, r1
 8021232:	4611      	mov	r1, r2
 8021234:	602b      	str	r3, [r5, #0]
 8021236:	f7e0 ff61 	bl	80020fc <_kill>
 802123a:	1c43      	adds	r3, r0, #1
 802123c:	d102      	bne.n	8021244 <_kill_r+0x1c>
 802123e:	682b      	ldr	r3, [r5, #0]
 8021240:	b103      	cbz	r3, 8021244 <_kill_r+0x1c>
 8021242:	6023      	str	r3, [r4, #0]
 8021244:	bd38      	pop	{r3, r4, r5, pc}
 8021246:	bf00      	nop
 8021248:	200156a0 	.word	0x200156a0

0802124c <_getpid_r>:
 802124c:	f7e0 bf54 	b.w	80020f8 <_getpid>

08021250 <__sread>:
 8021250:	b510      	push	{r4, lr}
 8021252:	460c      	mov	r4, r1
 8021254:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021258:	f000 fac8 	bl	80217ec <_read_r>
 802125c:	2800      	cmp	r0, #0
 802125e:	bfab      	itete	ge
 8021260:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8021262:	89a3      	ldrhlt	r3, [r4, #12]
 8021264:	181b      	addge	r3, r3, r0
 8021266:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802126a:	bfac      	ite	ge
 802126c:	6563      	strge	r3, [r4, #84]	; 0x54
 802126e:	81a3      	strhlt	r3, [r4, #12]
 8021270:	bd10      	pop	{r4, pc}

08021272 <__swrite>:
 8021272:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8021276:	461f      	mov	r7, r3
 8021278:	898b      	ldrh	r3, [r1, #12]
 802127a:	05db      	lsls	r3, r3, #23
 802127c:	4605      	mov	r5, r0
 802127e:	460c      	mov	r4, r1
 8021280:	4616      	mov	r6, r2
 8021282:	d505      	bpl.n	8021290 <__swrite+0x1e>
 8021284:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021288:	2302      	movs	r3, #2
 802128a:	2200      	movs	r2, #0
 802128c:	f000 fa2a 	bl	80216e4 <_lseek_r>
 8021290:	89a3      	ldrh	r3, [r4, #12]
 8021292:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8021296:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802129a:	81a3      	strh	r3, [r4, #12]
 802129c:	4632      	mov	r2, r6
 802129e:	463b      	mov	r3, r7
 80212a0:	4628      	mov	r0, r5
 80212a2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80212a6:	f000 b869 	b.w	802137c <_write_r>

080212aa <__sseek>:
 80212aa:	b510      	push	{r4, lr}
 80212ac:	460c      	mov	r4, r1
 80212ae:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80212b2:	f000 fa17 	bl	80216e4 <_lseek_r>
 80212b6:	1c43      	adds	r3, r0, #1
 80212b8:	89a3      	ldrh	r3, [r4, #12]
 80212ba:	bf15      	itete	ne
 80212bc:	6560      	strne	r0, [r4, #84]	; 0x54
 80212be:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80212c2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80212c6:	81a3      	strheq	r3, [r4, #12]
 80212c8:	bf18      	it	ne
 80212ca:	81a3      	strhne	r3, [r4, #12]
 80212cc:	bd10      	pop	{r4, pc}

080212ce <__sclose>:
 80212ce:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80212d2:	f000 b935 	b.w	8021540 <_close_r>
	...

080212d8 <__swbuf_r>:
 80212d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80212da:	460e      	mov	r6, r1
 80212dc:	4614      	mov	r4, r2
 80212de:	4605      	mov	r5, r0
 80212e0:	b118      	cbz	r0, 80212ea <__swbuf_r+0x12>
 80212e2:	6983      	ldr	r3, [r0, #24]
 80212e4:	b90b      	cbnz	r3, 80212ea <__swbuf_r+0x12>
 80212e6:	f7ff fa29 	bl	802073c <__sinit>
 80212ea:	4b21      	ldr	r3, [pc, #132]	; (8021370 <__swbuf_r+0x98>)
 80212ec:	429c      	cmp	r4, r3
 80212ee:	d12b      	bne.n	8021348 <__swbuf_r+0x70>
 80212f0:	686c      	ldr	r4, [r5, #4]
 80212f2:	69a3      	ldr	r3, [r4, #24]
 80212f4:	60a3      	str	r3, [r4, #8]
 80212f6:	89a3      	ldrh	r3, [r4, #12]
 80212f8:	071a      	lsls	r2, r3, #28
 80212fa:	d52f      	bpl.n	802135c <__swbuf_r+0x84>
 80212fc:	6923      	ldr	r3, [r4, #16]
 80212fe:	b36b      	cbz	r3, 802135c <__swbuf_r+0x84>
 8021300:	6923      	ldr	r3, [r4, #16]
 8021302:	6820      	ldr	r0, [r4, #0]
 8021304:	1ac0      	subs	r0, r0, r3
 8021306:	6963      	ldr	r3, [r4, #20]
 8021308:	b2f6      	uxtb	r6, r6
 802130a:	4283      	cmp	r3, r0
 802130c:	4637      	mov	r7, r6
 802130e:	dc04      	bgt.n	802131a <__swbuf_r+0x42>
 8021310:	4621      	mov	r1, r4
 8021312:	4628      	mov	r0, r5
 8021314:	f000 f9aa 	bl	802166c <_fflush_r>
 8021318:	bb30      	cbnz	r0, 8021368 <__swbuf_r+0x90>
 802131a:	68a3      	ldr	r3, [r4, #8]
 802131c:	3b01      	subs	r3, #1
 802131e:	60a3      	str	r3, [r4, #8]
 8021320:	6823      	ldr	r3, [r4, #0]
 8021322:	1c5a      	adds	r2, r3, #1
 8021324:	6022      	str	r2, [r4, #0]
 8021326:	701e      	strb	r6, [r3, #0]
 8021328:	6963      	ldr	r3, [r4, #20]
 802132a:	3001      	adds	r0, #1
 802132c:	4283      	cmp	r3, r0
 802132e:	d004      	beq.n	802133a <__swbuf_r+0x62>
 8021330:	89a3      	ldrh	r3, [r4, #12]
 8021332:	07db      	lsls	r3, r3, #31
 8021334:	d506      	bpl.n	8021344 <__swbuf_r+0x6c>
 8021336:	2e0a      	cmp	r6, #10
 8021338:	d104      	bne.n	8021344 <__swbuf_r+0x6c>
 802133a:	4621      	mov	r1, r4
 802133c:	4628      	mov	r0, r5
 802133e:	f000 f995 	bl	802166c <_fflush_r>
 8021342:	b988      	cbnz	r0, 8021368 <__swbuf_r+0x90>
 8021344:	4638      	mov	r0, r7
 8021346:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8021348:	4b0a      	ldr	r3, [pc, #40]	; (8021374 <__swbuf_r+0x9c>)
 802134a:	429c      	cmp	r4, r3
 802134c:	d101      	bne.n	8021352 <__swbuf_r+0x7a>
 802134e:	68ac      	ldr	r4, [r5, #8]
 8021350:	e7cf      	b.n	80212f2 <__swbuf_r+0x1a>
 8021352:	4b09      	ldr	r3, [pc, #36]	; (8021378 <__swbuf_r+0xa0>)
 8021354:	429c      	cmp	r4, r3
 8021356:	bf08      	it	eq
 8021358:	68ec      	ldreq	r4, [r5, #12]
 802135a:	e7ca      	b.n	80212f2 <__swbuf_r+0x1a>
 802135c:	4621      	mov	r1, r4
 802135e:	4628      	mov	r0, r5
 8021360:	f000 f81e 	bl	80213a0 <__swsetup_r>
 8021364:	2800      	cmp	r0, #0
 8021366:	d0cb      	beq.n	8021300 <__swbuf_r+0x28>
 8021368:	f04f 37ff 	mov.w	r7, #4294967295
 802136c:	e7ea      	b.n	8021344 <__swbuf_r+0x6c>
 802136e:	bf00      	nop
 8021370:	08024458 	.word	0x08024458
 8021374:	08024478 	.word	0x08024478
 8021378:	08024438 	.word	0x08024438

0802137c <_write_r>:
 802137c:	b538      	push	{r3, r4, r5, lr}
 802137e:	4d07      	ldr	r5, [pc, #28]	; (802139c <_write_r+0x20>)
 8021380:	4604      	mov	r4, r0
 8021382:	4608      	mov	r0, r1
 8021384:	4611      	mov	r1, r2
 8021386:	2200      	movs	r2, #0
 8021388:	602a      	str	r2, [r5, #0]
 802138a:	461a      	mov	r2, r3
 802138c:	f7e0 fed2 	bl	8002134 <_write>
 8021390:	1c43      	adds	r3, r0, #1
 8021392:	d102      	bne.n	802139a <_write_r+0x1e>
 8021394:	682b      	ldr	r3, [r5, #0]
 8021396:	b103      	cbz	r3, 802139a <_write_r+0x1e>
 8021398:	6023      	str	r3, [r4, #0]
 802139a:	bd38      	pop	{r3, r4, r5, pc}
 802139c:	200156a0 	.word	0x200156a0

080213a0 <__swsetup_r>:
 80213a0:	4b32      	ldr	r3, [pc, #200]	; (802146c <__swsetup_r+0xcc>)
 80213a2:	b570      	push	{r4, r5, r6, lr}
 80213a4:	681d      	ldr	r5, [r3, #0]
 80213a6:	4606      	mov	r6, r0
 80213a8:	460c      	mov	r4, r1
 80213aa:	b125      	cbz	r5, 80213b6 <__swsetup_r+0x16>
 80213ac:	69ab      	ldr	r3, [r5, #24]
 80213ae:	b913      	cbnz	r3, 80213b6 <__swsetup_r+0x16>
 80213b0:	4628      	mov	r0, r5
 80213b2:	f7ff f9c3 	bl	802073c <__sinit>
 80213b6:	4b2e      	ldr	r3, [pc, #184]	; (8021470 <__swsetup_r+0xd0>)
 80213b8:	429c      	cmp	r4, r3
 80213ba:	d10f      	bne.n	80213dc <__swsetup_r+0x3c>
 80213bc:	686c      	ldr	r4, [r5, #4]
 80213be:	89a3      	ldrh	r3, [r4, #12]
 80213c0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80213c4:	0719      	lsls	r1, r3, #28
 80213c6:	d42c      	bmi.n	8021422 <__swsetup_r+0x82>
 80213c8:	06dd      	lsls	r5, r3, #27
 80213ca:	d411      	bmi.n	80213f0 <__swsetup_r+0x50>
 80213cc:	2309      	movs	r3, #9
 80213ce:	6033      	str	r3, [r6, #0]
 80213d0:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80213d4:	81a3      	strh	r3, [r4, #12]
 80213d6:	f04f 30ff 	mov.w	r0, #4294967295
 80213da:	e03e      	b.n	802145a <__swsetup_r+0xba>
 80213dc:	4b25      	ldr	r3, [pc, #148]	; (8021474 <__swsetup_r+0xd4>)
 80213de:	429c      	cmp	r4, r3
 80213e0:	d101      	bne.n	80213e6 <__swsetup_r+0x46>
 80213e2:	68ac      	ldr	r4, [r5, #8]
 80213e4:	e7eb      	b.n	80213be <__swsetup_r+0x1e>
 80213e6:	4b24      	ldr	r3, [pc, #144]	; (8021478 <__swsetup_r+0xd8>)
 80213e8:	429c      	cmp	r4, r3
 80213ea:	bf08      	it	eq
 80213ec:	68ec      	ldreq	r4, [r5, #12]
 80213ee:	e7e6      	b.n	80213be <__swsetup_r+0x1e>
 80213f0:	0758      	lsls	r0, r3, #29
 80213f2:	d512      	bpl.n	802141a <__swsetup_r+0x7a>
 80213f4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80213f6:	b141      	cbz	r1, 802140a <__swsetup_r+0x6a>
 80213f8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80213fc:	4299      	cmp	r1, r3
 80213fe:	d002      	beq.n	8021406 <__swsetup_r+0x66>
 8021400:	4630      	mov	r0, r6
 8021402:	f7ff fa99 	bl	8020938 <_free_r>
 8021406:	2300      	movs	r3, #0
 8021408:	6363      	str	r3, [r4, #52]	; 0x34
 802140a:	89a3      	ldrh	r3, [r4, #12]
 802140c:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8021410:	81a3      	strh	r3, [r4, #12]
 8021412:	2300      	movs	r3, #0
 8021414:	6063      	str	r3, [r4, #4]
 8021416:	6923      	ldr	r3, [r4, #16]
 8021418:	6023      	str	r3, [r4, #0]
 802141a:	89a3      	ldrh	r3, [r4, #12]
 802141c:	f043 0308 	orr.w	r3, r3, #8
 8021420:	81a3      	strh	r3, [r4, #12]
 8021422:	6923      	ldr	r3, [r4, #16]
 8021424:	b94b      	cbnz	r3, 802143a <__swsetup_r+0x9a>
 8021426:	89a3      	ldrh	r3, [r4, #12]
 8021428:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802142c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8021430:	d003      	beq.n	802143a <__swsetup_r+0x9a>
 8021432:	4621      	mov	r1, r4
 8021434:	4630      	mov	r0, r6
 8021436:	f000 f98d 	bl	8021754 <__smakebuf_r>
 802143a:	89a0      	ldrh	r0, [r4, #12]
 802143c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8021440:	f010 0301 	ands.w	r3, r0, #1
 8021444:	d00a      	beq.n	802145c <__swsetup_r+0xbc>
 8021446:	2300      	movs	r3, #0
 8021448:	60a3      	str	r3, [r4, #8]
 802144a:	6963      	ldr	r3, [r4, #20]
 802144c:	425b      	negs	r3, r3
 802144e:	61a3      	str	r3, [r4, #24]
 8021450:	6923      	ldr	r3, [r4, #16]
 8021452:	b943      	cbnz	r3, 8021466 <__swsetup_r+0xc6>
 8021454:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8021458:	d1ba      	bne.n	80213d0 <__swsetup_r+0x30>
 802145a:	bd70      	pop	{r4, r5, r6, pc}
 802145c:	0781      	lsls	r1, r0, #30
 802145e:	bf58      	it	pl
 8021460:	6963      	ldrpl	r3, [r4, #20]
 8021462:	60a3      	str	r3, [r4, #8]
 8021464:	e7f4      	b.n	8021450 <__swsetup_r+0xb0>
 8021466:	2000      	movs	r0, #0
 8021468:	e7f7      	b.n	802145a <__swsetup_r+0xba>
 802146a:	bf00      	nop
 802146c:	20000104 	.word	0x20000104
 8021470:	08024458 	.word	0x08024458
 8021474:	08024478 	.word	0x08024478
 8021478:	08024438 	.word	0x08024438

0802147c <__register_exitproc>:
 802147c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8021480:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 802153c <__register_exitproc+0xc0>
 8021484:	4606      	mov	r6, r0
 8021486:	f8d8 0000 	ldr.w	r0, [r8]
 802148a:	461f      	mov	r7, r3
 802148c:	460d      	mov	r5, r1
 802148e:	4691      	mov	r9, r2
 8021490:	f7ff fa29 	bl	80208e6 <__retarget_lock_acquire_recursive>
 8021494:	4b25      	ldr	r3, [pc, #148]	; (802152c <__register_exitproc+0xb0>)
 8021496:	681c      	ldr	r4, [r3, #0]
 8021498:	b934      	cbnz	r4, 80214a8 <__register_exitproc+0x2c>
 802149a:	4c25      	ldr	r4, [pc, #148]	; (8021530 <__register_exitproc+0xb4>)
 802149c:	601c      	str	r4, [r3, #0]
 802149e:	4b25      	ldr	r3, [pc, #148]	; (8021534 <__register_exitproc+0xb8>)
 80214a0:	b113      	cbz	r3, 80214a8 <__register_exitproc+0x2c>
 80214a2:	681b      	ldr	r3, [r3, #0]
 80214a4:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 80214a8:	6863      	ldr	r3, [r4, #4]
 80214aa:	2b1f      	cmp	r3, #31
 80214ac:	dd07      	ble.n	80214be <__register_exitproc+0x42>
 80214ae:	f8d8 0000 	ldr.w	r0, [r8]
 80214b2:	f7ff fa1a 	bl	80208ea <__retarget_lock_release_recursive>
 80214b6:	f04f 30ff 	mov.w	r0, #4294967295
 80214ba:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80214be:	b34e      	cbz	r6, 8021514 <__register_exitproc+0x98>
 80214c0:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 80214c4:	b988      	cbnz	r0, 80214ea <__register_exitproc+0x6e>
 80214c6:	4b1c      	ldr	r3, [pc, #112]	; (8021538 <__register_exitproc+0xbc>)
 80214c8:	b923      	cbnz	r3, 80214d4 <__register_exitproc+0x58>
 80214ca:	f8d8 0000 	ldr.w	r0, [r8]
 80214ce:	f7ff fa0b 	bl	80208e8 <__retarget_lock_release>
 80214d2:	e7f0      	b.n	80214b6 <__register_exitproc+0x3a>
 80214d4:	f44f 7084 	mov.w	r0, #264	; 0x108
 80214d8:	f7ff fa08 	bl	80208ec <malloc>
 80214dc:	2800      	cmp	r0, #0
 80214de:	d0f4      	beq.n	80214ca <__register_exitproc+0x4e>
 80214e0:	2300      	movs	r3, #0
 80214e2:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 80214e6:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 80214ea:	6863      	ldr	r3, [r4, #4]
 80214ec:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 80214f0:	2201      	movs	r2, #1
 80214f2:	409a      	lsls	r2, r3
 80214f4:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 80214f8:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 80214fc:	4313      	orrs	r3, r2
 80214fe:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 8021502:	2e02      	cmp	r6, #2
 8021504:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 8021508:	bf02      	ittt	eq
 802150a:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802150e:	4313      	orreq	r3, r2
 8021510:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 8021514:	6863      	ldr	r3, [r4, #4]
 8021516:	f8d8 0000 	ldr.w	r0, [r8]
 802151a:	1c5a      	adds	r2, r3, #1
 802151c:	3302      	adds	r3, #2
 802151e:	6062      	str	r2, [r4, #4]
 8021520:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8021524:	f7ff f9e1 	bl	80208ea <__retarget_lock_release_recursive>
 8021528:	2000      	movs	r0, #0
 802152a:	e7c6      	b.n	80214ba <__register_exitproc+0x3e>
 802152c:	20015730 	.word	0x20015730
 8021530:	200156a4 	.word	0x200156a4
 8021534:	080244d0 	.word	0x080244d0
 8021538:	080208ed 	.word	0x080208ed
 802153c:	20000168 	.word	0x20000168

08021540 <_close_r>:
 8021540:	b538      	push	{r3, r4, r5, lr}
 8021542:	4d06      	ldr	r5, [pc, #24]	; (802155c <_close_r+0x1c>)
 8021544:	2300      	movs	r3, #0
 8021546:	4604      	mov	r4, r0
 8021548:	4608      	mov	r0, r1
 802154a:	602b      	str	r3, [r5, #0]
 802154c:	f7e0 fe00 	bl	8002150 <_close>
 8021550:	1c43      	adds	r3, r0, #1
 8021552:	d102      	bne.n	802155a <_close_r+0x1a>
 8021554:	682b      	ldr	r3, [r5, #0]
 8021556:	b103      	cbz	r3, 802155a <_close_r+0x1a>
 8021558:	6023      	str	r3, [r4, #0]
 802155a:	bd38      	pop	{r3, r4, r5, pc}
 802155c:	200156a0 	.word	0x200156a0

08021560 <__sflush_r>:
 8021560:	898a      	ldrh	r2, [r1, #12]
 8021562:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8021566:	4605      	mov	r5, r0
 8021568:	0710      	lsls	r0, r2, #28
 802156a:	460c      	mov	r4, r1
 802156c:	d458      	bmi.n	8021620 <__sflush_r+0xc0>
 802156e:	684b      	ldr	r3, [r1, #4]
 8021570:	2b00      	cmp	r3, #0
 8021572:	dc05      	bgt.n	8021580 <__sflush_r+0x20>
 8021574:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8021576:	2b00      	cmp	r3, #0
 8021578:	dc02      	bgt.n	8021580 <__sflush_r+0x20>
 802157a:	2000      	movs	r0, #0
 802157c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8021580:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8021582:	2e00      	cmp	r6, #0
 8021584:	d0f9      	beq.n	802157a <__sflush_r+0x1a>
 8021586:	2300      	movs	r3, #0
 8021588:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802158c:	682f      	ldr	r7, [r5, #0]
 802158e:	602b      	str	r3, [r5, #0]
 8021590:	d032      	beq.n	80215f8 <__sflush_r+0x98>
 8021592:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8021594:	89a3      	ldrh	r3, [r4, #12]
 8021596:	075a      	lsls	r2, r3, #29
 8021598:	d505      	bpl.n	80215a6 <__sflush_r+0x46>
 802159a:	6863      	ldr	r3, [r4, #4]
 802159c:	1ac0      	subs	r0, r0, r3
 802159e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80215a0:	b10b      	cbz	r3, 80215a6 <__sflush_r+0x46>
 80215a2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80215a4:	1ac0      	subs	r0, r0, r3
 80215a6:	2300      	movs	r3, #0
 80215a8:	4602      	mov	r2, r0
 80215aa:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80215ac:	6a21      	ldr	r1, [r4, #32]
 80215ae:	4628      	mov	r0, r5
 80215b0:	47b0      	blx	r6
 80215b2:	1c43      	adds	r3, r0, #1
 80215b4:	89a3      	ldrh	r3, [r4, #12]
 80215b6:	d106      	bne.n	80215c6 <__sflush_r+0x66>
 80215b8:	6829      	ldr	r1, [r5, #0]
 80215ba:	291d      	cmp	r1, #29
 80215bc:	d82c      	bhi.n	8021618 <__sflush_r+0xb8>
 80215be:	4a2a      	ldr	r2, [pc, #168]	; (8021668 <__sflush_r+0x108>)
 80215c0:	40ca      	lsrs	r2, r1
 80215c2:	07d6      	lsls	r6, r2, #31
 80215c4:	d528      	bpl.n	8021618 <__sflush_r+0xb8>
 80215c6:	2200      	movs	r2, #0
 80215c8:	6062      	str	r2, [r4, #4]
 80215ca:	04d9      	lsls	r1, r3, #19
 80215cc:	6922      	ldr	r2, [r4, #16]
 80215ce:	6022      	str	r2, [r4, #0]
 80215d0:	d504      	bpl.n	80215dc <__sflush_r+0x7c>
 80215d2:	1c42      	adds	r2, r0, #1
 80215d4:	d101      	bne.n	80215da <__sflush_r+0x7a>
 80215d6:	682b      	ldr	r3, [r5, #0]
 80215d8:	b903      	cbnz	r3, 80215dc <__sflush_r+0x7c>
 80215da:	6560      	str	r0, [r4, #84]	; 0x54
 80215dc:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80215de:	602f      	str	r7, [r5, #0]
 80215e0:	2900      	cmp	r1, #0
 80215e2:	d0ca      	beq.n	802157a <__sflush_r+0x1a>
 80215e4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80215e8:	4299      	cmp	r1, r3
 80215ea:	d002      	beq.n	80215f2 <__sflush_r+0x92>
 80215ec:	4628      	mov	r0, r5
 80215ee:	f7ff f9a3 	bl	8020938 <_free_r>
 80215f2:	2000      	movs	r0, #0
 80215f4:	6360      	str	r0, [r4, #52]	; 0x34
 80215f6:	e7c1      	b.n	802157c <__sflush_r+0x1c>
 80215f8:	6a21      	ldr	r1, [r4, #32]
 80215fa:	2301      	movs	r3, #1
 80215fc:	4628      	mov	r0, r5
 80215fe:	47b0      	blx	r6
 8021600:	1c41      	adds	r1, r0, #1
 8021602:	d1c7      	bne.n	8021594 <__sflush_r+0x34>
 8021604:	682b      	ldr	r3, [r5, #0]
 8021606:	2b00      	cmp	r3, #0
 8021608:	d0c4      	beq.n	8021594 <__sflush_r+0x34>
 802160a:	2b1d      	cmp	r3, #29
 802160c:	d001      	beq.n	8021612 <__sflush_r+0xb2>
 802160e:	2b16      	cmp	r3, #22
 8021610:	d101      	bne.n	8021616 <__sflush_r+0xb6>
 8021612:	602f      	str	r7, [r5, #0]
 8021614:	e7b1      	b.n	802157a <__sflush_r+0x1a>
 8021616:	89a3      	ldrh	r3, [r4, #12]
 8021618:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802161c:	81a3      	strh	r3, [r4, #12]
 802161e:	e7ad      	b.n	802157c <__sflush_r+0x1c>
 8021620:	690f      	ldr	r7, [r1, #16]
 8021622:	2f00      	cmp	r7, #0
 8021624:	d0a9      	beq.n	802157a <__sflush_r+0x1a>
 8021626:	0793      	lsls	r3, r2, #30
 8021628:	680e      	ldr	r6, [r1, #0]
 802162a:	bf08      	it	eq
 802162c:	694b      	ldreq	r3, [r1, #20]
 802162e:	600f      	str	r7, [r1, #0]
 8021630:	bf18      	it	ne
 8021632:	2300      	movne	r3, #0
 8021634:	eba6 0807 	sub.w	r8, r6, r7
 8021638:	608b      	str	r3, [r1, #8]
 802163a:	f1b8 0f00 	cmp.w	r8, #0
 802163e:	dd9c      	ble.n	802157a <__sflush_r+0x1a>
 8021640:	6a21      	ldr	r1, [r4, #32]
 8021642:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8021644:	4643      	mov	r3, r8
 8021646:	463a      	mov	r2, r7
 8021648:	4628      	mov	r0, r5
 802164a:	47b0      	blx	r6
 802164c:	2800      	cmp	r0, #0
 802164e:	dc06      	bgt.n	802165e <__sflush_r+0xfe>
 8021650:	89a3      	ldrh	r3, [r4, #12]
 8021652:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8021656:	81a3      	strh	r3, [r4, #12]
 8021658:	f04f 30ff 	mov.w	r0, #4294967295
 802165c:	e78e      	b.n	802157c <__sflush_r+0x1c>
 802165e:	4407      	add	r7, r0
 8021660:	eba8 0800 	sub.w	r8, r8, r0
 8021664:	e7e9      	b.n	802163a <__sflush_r+0xda>
 8021666:	bf00      	nop
 8021668:	20400001 	.word	0x20400001

0802166c <_fflush_r>:
 802166c:	b538      	push	{r3, r4, r5, lr}
 802166e:	690b      	ldr	r3, [r1, #16]
 8021670:	4605      	mov	r5, r0
 8021672:	460c      	mov	r4, r1
 8021674:	b913      	cbnz	r3, 802167c <_fflush_r+0x10>
 8021676:	2500      	movs	r5, #0
 8021678:	4628      	mov	r0, r5
 802167a:	bd38      	pop	{r3, r4, r5, pc}
 802167c:	b118      	cbz	r0, 8021686 <_fflush_r+0x1a>
 802167e:	6983      	ldr	r3, [r0, #24]
 8021680:	b90b      	cbnz	r3, 8021686 <_fflush_r+0x1a>
 8021682:	f7ff f85b 	bl	802073c <__sinit>
 8021686:	4b14      	ldr	r3, [pc, #80]	; (80216d8 <_fflush_r+0x6c>)
 8021688:	429c      	cmp	r4, r3
 802168a:	d11b      	bne.n	80216c4 <_fflush_r+0x58>
 802168c:	686c      	ldr	r4, [r5, #4]
 802168e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021692:	2b00      	cmp	r3, #0
 8021694:	d0ef      	beq.n	8021676 <_fflush_r+0xa>
 8021696:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8021698:	07d0      	lsls	r0, r2, #31
 802169a:	d404      	bmi.n	80216a6 <_fflush_r+0x3a>
 802169c:	0599      	lsls	r1, r3, #22
 802169e:	d402      	bmi.n	80216a6 <_fflush_r+0x3a>
 80216a0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80216a2:	f7ff f920 	bl	80208e6 <__retarget_lock_acquire_recursive>
 80216a6:	4628      	mov	r0, r5
 80216a8:	4621      	mov	r1, r4
 80216aa:	f7ff ff59 	bl	8021560 <__sflush_r>
 80216ae:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80216b0:	07da      	lsls	r2, r3, #31
 80216b2:	4605      	mov	r5, r0
 80216b4:	d4e0      	bmi.n	8021678 <_fflush_r+0xc>
 80216b6:	89a3      	ldrh	r3, [r4, #12]
 80216b8:	059b      	lsls	r3, r3, #22
 80216ba:	d4dd      	bmi.n	8021678 <_fflush_r+0xc>
 80216bc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80216be:	f7ff f914 	bl	80208ea <__retarget_lock_release_recursive>
 80216c2:	e7d9      	b.n	8021678 <_fflush_r+0xc>
 80216c4:	4b05      	ldr	r3, [pc, #20]	; (80216dc <_fflush_r+0x70>)
 80216c6:	429c      	cmp	r4, r3
 80216c8:	d101      	bne.n	80216ce <_fflush_r+0x62>
 80216ca:	68ac      	ldr	r4, [r5, #8]
 80216cc:	e7df      	b.n	802168e <_fflush_r+0x22>
 80216ce:	4b04      	ldr	r3, [pc, #16]	; (80216e0 <_fflush_r+0x74>)
 80216d0:	429c      	cmp	r4, r3
 80216d2:	bf08      	it	eq
 80216d4:	68ec      	ldreq	r4, [r5, #12]
 80216d6:	e7da      	b.n	802168e <_fflush_r+0x22>
 80216d8:	08024458 	.word	0x08024458
 80216dc:	08024478 	.word	0x08024478
 80216e0:	08024438 	.word	0x08024438

080216e4 <_lseek_r>:
 80216e4:	b538      	push	{r3, r4, r5, lr}
 80216e6:	4d07      	ldr	r5, [pc, #28]	; (8021704 <_lseek_r+0x20>)
 80216e8:	4604      	mov	r4, r0
 80216ea:	4608      	mov	r0, r1
 80216ec:	4611      	mov	r1, r2
 80216ee:	2200      	movs	r2, #0
 80216f0:	602a      	str	r2, [r5, #0]
 80216f2:	461a      	mov	r2, r3
 80216f4:	f7e0 fd36 	bl	8002164 <_lseek>
 80216f8:	1c43      	adds	r3, r0, #1
 80216fa:	d102      	bne.n	8021702 <_lseek_r+0x1e>
 80216fc:	682b      	ldr	r3, [r5, #0]
 80216fe:	b103      	cbz	r3, 8021702 <_lseek_r+0x1e>
 8021700:	6023      	str	r3, [r4, #0]
 8021702:	bd38      	pop	{r3, r4, r5, pc}
 8021704:	200156a0 	.word	0x200156a0

08021708 <__swhatbuf_r>:
 8021708:	b570      	push	{r4, r5, r6, lr}
 802170a:	460e      	mov	r6, r1
 802170c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021710:	2900      	cmp	r1, #0
 8021712:	b096      	sub	sp, #88	; 0x58
 8021714:	4614      	mov	r4, r2
 8021716:	461d      	mov	r5, r3
 8021718:	da08      	bge.n	802172c <__swhatbuf_r+0x24>
 802171a:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 802171e:	2200      	movs	r2, #0
 8021720:	602a      	str	r2, [r5, #0]
 8021722:	061a      	lsls	r2, r3, #24
 8021724:	d410      	bmi.n	8021748 <__swhatbuf_r+0x40>
 8021726:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802172a:	e00e      	b.n	802174a <__swhatbuf_r+0x42>
 802172c:	466a      	mov	r2, sp
 802172e:	f000 f86f 	bl	8021810 <_fstat_r>
 8021732:	2800      	cmp	r0, #0
 8021734:	dbf1      	blt.n	802171a <__swhatbuf_r+0x12>
 8021736:	9a01      	ldr	r2, [sp, #4]
 8021738:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 802173c:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8021740:	425a      	negs	r2, r3
 8021742:	415a      	adcs	r2, r3
 8021744:	602a      	str	r2, [r5, #0]
 8021746:	e7ee      	b.n	8021726 <__swhatbuf_r+0x1e>
 8021748:	2340      	movs	r3, #64	; 0x40
 802174a:	2000      	movs	r0, #0
 802174c:	6023      	str	r3, [r4, #0]
 802174e:	b016      	add	sp, #88	; 0x58
 8021750:	bd70      	pop	{r4, r5, r6, pc}
	...

08021754 <__smakebuf_r>:
 8021754:	898b      	ldrh	r3, [r1, #12]
 8021756:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8021758:	079d      	lsls	r5, r3, #30
 802175a:	4606      	mov	r6, r0
 802175c:	460c      	mov	r4, r1
 802175e:	d507      	bpl.n	8021770 <__smakebuf_r+0x1c>
 8021760:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8021764:	6023      	str	r3, [r4, #0]
 8021766:	6123      	str	r3, [r4, #16]
 8021768:	2301      	movs	r3, #1
 802176a:	6163      	str	r3, [r4, #20]
 802176c:	b002      	add	sp, #8
 802176e:	bd70      	pop	{r4, r5, r6, pc}
 8021770:	ab01      	add	r3, sp, #4
 8021772:	466a      	mov	r2, sp
 8021774:	f7ff ffc8 	bl	8021708 <__swhatbuf_r>
 8021778:	9900      	ldr	r1, [sp, #0]
 802177a:	4605      	mov	r5, r0
 802177c:	4630      	mov	r0, r6
 802177e:	f7ff f947 	bl	8020a10 <_malloc_r>
 8021782:	b948      	cbnz	r0, 8021798 <__smakebuf_r+0x44>
 8021784:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021788:	059a      	lsls	r2, r3, #22
 802178a:	d4ef      	bmi.n	802176c <__smakebuf_r+0x18>
 802178c:	f023 0303 	bic.w	r3, r3, #3
 8021790:	f043 0302 	orr.w	r3, r3, #2
 8021794:	81a3      	strh	r3, [r4, #12]
 8021796:	e7e3      	b.n	8021760 <__smakebuf_r+0xc>
 8021798:	4b0d      	ldr	r3, [pc, #52]	; (80217d0 <__smakebuf_r+0x7c>)
 802179a:	62b3      	str	r3, [r6, #40]	; 0x28
 802179c:	89a3      	ldrh	r3, [r4, #12]
 802179e:	6020      	str	r0, [r4, #0]
 80217a0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80217a4:	81a3      	strh	r3, [r4, #12]
 80217a6:	9b00      	ldr	r3, [sp, #0]
 80217a8:	6163      	str	r3, [r4, #20]
 80217aa:	9b01      	ldr	r3, [sp, #4]
 80217ac:	6120      	str	r0, [r4, #16]
 80217ae:	b15b      	cbz	r3, 80217c8 <__smakebuf_r+0x74>
 80217b0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80217b4:	4630      	mov	r0, r6
 80217b6:	f000 f83d 	bl	8021834 <_isatty_r>
 80217ba:	b128      	cbz	r0, 80217c8 <__smakebuf_r+0x74>
 80217bc:	89a3      	ldrh	r3, [r4, #12]
 80217be:	f023 0303 	bic.w	r3, r3, #3
 80217c2:	f043 0301 	orr.w	r3, r3, #1
 80217c6:	81a3      	strh	r3, [r4, #12]
 80217c8:	89a0      	ldrh	r0, [r4, #12]
 80217ca:	4305      	orrs	r5, r0
 80217cc:	81a5      	strh	r5, [r4, #12]
 80217ce:	e7cd      	b.n	802176c <__smakebuf_r+0x18>
 80217d0:	080206d5 	.word	0x080206d5

080217d4 <__malloc_lock>:
 80217d4:	4801      	ldr	r0, [pc, #4]	; (80217dc <__malloc_lock+0x8>)
 80217d6:	f7ff b886 	b.w	80208e6 <__retarget_lock_acquire_recursive>
 80217da:	bf00      	nop
 80217dc:	2001558d 	.word	0x2001558d

080217e0 <__malloc_unlock>:
 80217e0:	4801      	ldr	r0, [pc, #4]	; (80217e8 <__malloc_unlock+0x8>)
 80217e2:	f7ff b882 	b.w	80208ea <__retarget_lock_release_recursive>
 80217e6:	bf00      	nop
 80217e8:	2001558d 	.word	0x2001558d

080217ec <_read_r>:
 80217ec:	b538      	push	{r3, r4, r5, lr}
 80217ee:	4d07      	ldr	r5, [pc, #28]	; (802180c <_read_r+0x20>)
 80217f0:	4604      	mov	r4, r0
 80217f2:	4608      	mov	r0, r1
 80217f4:	4611      	mov	r1, r2
 80217f6:	2200      	movs	r2, #0
 80217f8:	602a      	str	r2, [r5, #0]
 80217fa:	461a      	mov	r2, r3
 80217fc:	f7e0 fc8c 	bl	8002118 <_read>
 8021800:	1c43      	adds	r3, r0, #1
 8021802:	d102      	bne.n	802180a <_read_r+0x1e>
 8021804:	682b      	ldr	r3, [r5, #0]
 8021806:	b103      	cbz	r3, 802180a <_read_r+0x1e>
 8021808:	6023      	str	r3, [r4, #0]
 802180a:	bd38      	pop	{r3, r4, r5, pc}
 802180c:	200156a0 	.word	0x200156a0

08021810 <_fstat_r>:
 8021810:	b538      	push	{r3, r4, r5, lr}
 8021812:	4d07      	ldr	r5, [pc, #28]	; (8021830 <_fstat_r+0x20>)
 8021814:	2300      	movs	r3, #0
 8021816:	4604      	mov	r4, r0
 8021818:	4608      	mov	r0, r1
 802181a:	4611      	mov	r1, r2
 802181c:	602b      	str	r3, [r5, #0]
 802181e:	f7e0 fc9a 	bl	8002156 <_fstat>
 8021822:	1c43      	adds	r3, r0, #1
 8021824:	d102      	bne.n	802182c <_fstat_r+0x1c>
 8021826:	682b      	ldr	r3, [r5, #0]
 8021828:	b103      	cbz	r3, 802182c <_fstat_r+0x1c>
 802182a:	6023      	str	r3, [r4, #0]
 802182c:	bd38      	pop	{r3, r4, r5, pc}
 802182e:	bf00      	nop
 8021830:	200156a0 	.word	0x200156a0

08021834 <_isatty_r>:
 8021834:	b538      	push	{r3, r4, r5, lr}
 8021836:	4d06      	ldr	r5, [pc, #24]	; (8021850 <_isatty_r+0x1c>)
 8021838:	2300      	movs	r3, #0
 802183a:	4604      	mov	r4, r0
 802183c:	4608      	mov	r0, r1
 802183e:	602b      	str	r3, [r5, #0]
 8021840:	f7e0 fc8e 	bl	8002160 <_isatty>
 8021844:	1c43      	adds	r3, r0, #1
 8021846:	d102      	bne.n	802184e <_isatty_r+0x1a>
 8021848:	682b      	ldr	r3, [r5, #0]
 802184a:	b103      	cbz	r3, 802184e <_isatty_r+0x1a>
 802184c:	6023      	str	r3, [r4, #0]
 802184e:	bd38      	pop	{r3, r4, r5, pc}
 8021850:	200156a0 	.word	0x200156a0

08021854 <_init>:
 8021854:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021856:	bf00      	nop
 8021858:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802185a:	bc08      	pop	{r3}
 802185c:	469e      	mov	lr, r3
 802185e:	4770      	bx	lr

08021860 <_fini>:
 8021860:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021862:	bf00      	nop
 8021864:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8021866:	bc08      	pop	{r3}
 8021868:	469e      	mov	lr, r3
 802186a:	4770      	bx	lr
