
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00021890  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002cd4  08021a40  08021a40  00031a40  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 0000162e  08024714  08024714  00034714  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000094  08025d44  08025d44  00035d44  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000224  08025dd8  08025dd8  00035dd8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 0009d2a8  08025ffc  08025ffc  00035ffc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  080c32a4  080c32a4  000e016c  2**0
                  CONTENTS
  8 .ARM          00000008  080c32a4  080c32a4  000d32a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  080c32ac  080c32ac  000e016c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  080c32ac  080c32ac  000d32ac  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  080c32c0  080c32c0  000d32c0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         0000016c  20000000  080c32c8  000e0000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          000156ec  2000016c  080c3434  000e016c  2**2
                  ALLOC
 14 ._user_heap_stack 00001400  20015858  080c3434  000e5858  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000e016c  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 0004b000  d0000000  d0000000  000f0000  2**2
                  ALLOC
 17 .debug_line   00050f45  00000000  00000000  000e019c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_info   000ef3f4  00000000  00000000  001310e1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 0001509b  00000000  00000000  002204d5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_aranges 000030c0  00000000  00000000  00235570  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_str    0011a0c9  00000000  00000000  00238630  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 000070d0  00000000  00000000  00352700  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_loc    00035d5c  00000000  00000000  003597d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_macro  00030c03  00000000  00000000  0038f52c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .comment      000000cf  00000000  00000000  003c012f  2**0
                  CONTENTS, READONLY
 26 .debug_frame  00008e68  00000000  00000000  003c0200  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	2000016c 	.word	0x2000016c
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08021a28 	.word	0x08021a28

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000170 	.word	0x20000170
 80001ec:	08021a28 	.word	0x08021a28

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b974 	b.w	8000590 <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9d08      	ldr	r5, [sp, #32]
 80002c6:	4604      	mov	r4, r0
 80002c8:	468e      	mov	lr, r1
 80002ca:	2b00      	cmp	r3, #0
 80002cc:	d14d      	bne.n	800036a <__udivmoddi4+0xaa>
 80002ce:	428a      	cmp	r2, r1
 80002d0:	4694      	mov	ip, r2
 80002d2:	d969      	bls.n	80003a8 <__udivmoddi4+0xe8>
 80002d4:	fab2 f282 	clz	r2, r2
 80002d8:	b152      	cbz	r2, 80002f0 <__udivmoddi4+0x30>
 80002da:	fa01 f302 	lsl.w	r3, r1, r2
 80002de:	f1c2 0120 	rsb	r1, r2, #32
 80002e2:	fa20 f101 	lsr.w	r1, r0, r1
 80002e6:	fa0c fc02 	lsl.w	ip, ip, r2
 80002ea:	ea41 0e03 	orr.w	lr, r1, r3
 80002ee:	4094      	lsls	r4, r2
 80002f0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80002f4:	0c21      	lsrs	r1, r4, #16
 80002f6:	fbbe f6f8 	udiv	r6, lr, r8
 80002fa:	fa1f f78c 	uxth.w	r7, ip
 80002fe:	fb08 e316 	mls	r3, r8, r6, lr
 8000302:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000306:	fb06 f107 	mul.w	r1, r6, r7
 800030a:	4299      	cmp	r1, r3
 800030c:	d90a      	bls.n	8000324 <__udivmoddi4+0x64>
 800030e:	eb1c 0303 	adds.w	r3, ip, r3
 8000312:	f106 30ff 	add.w	r0, r6, #4294967295
 8000316:	f080 811f 	bcs.w	8000558 <__udivmoddi4+0x298>
 800031a:	4299      	cmp	r1, r3
 800031c:	f240 811c 	bls.w	8000558 <__udivmoddi4+0x298>
 8000320:	3e02      	subs	r6, #2
 8000322:	4463      	add	r3, ip
 8000324:	1a5b      	subs	r3, r3, r1
 8000326:	b2a4      	uxth	r4, r4
 8000328:	fbb3 f0f8 	udiv	r0, r3, r8
 800032c:	fb08 3310 	mls	r3, r8, r0, r3
 8000330:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000334:	fb00 f707 	mul.w	r7, r0, r7
 8000338:	42a7      	cmp	r7, r4
 800033a:	d90a      	bls.n	8000352 <__udivmoddi4+0x92>
 800033c:	eb1c 0404 	adds.w	r4, ip, r4
 8000340:	f100 33ff 	add.w	r3, r0, #4294967295
 8000344:	f080 810a 	bcs.w	800055c <__udivmoddi4+0x29c>
 8000348:	42a7      	cmp	r7, r4
 800034a:	f240 8107 	bls.w	800055c <__udivmoddi4+0x29c>
 800034e:	4464      	add	r4, ip
 8000350:	3802      	subs	r0, #2
 8000352:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000356:	1be4      	subs	r4, r4, r7
 8000358:	2600      	movs	r6, #0
 800035a:	b11d      	cbz	r5, 8000364 <__udivmoddi4+0xa4>
 800035c:	40d4      	lsrs	r4, r2
 800035e:	2300      	movs	r3, #0
 8000360:	e9c5 4300 	strd	r4, r3, [r5]
 8000364:	4631      	mov	r1, r6
 8000366:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800036a:	428b      	cmp	r3, r1
 800036c:	d909      	bls.n	8000382 <__udivmoddi4+0xc2>
 800036e:	2d00      	cmp	r5, #0
 8000370:	f000 80ef 	beq.w	8000552 <__udivmoddi4+0x292>
 8000374:	2600      	movs	r6, #0
 8000376:	e9c5 0100 	strd	r0, r1, [r5]
 800037a:	4630      	mov	r0, r6
 800037c:	4631      	mov	r1, r6
 800037e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000382:	fab3 f683 	clz	r6, r3
 8000386:	2e00      	cmp	r6, #0
 8000388:	d14a      	bne.n	8000420 <__udivmoddi4+0x160>
 800038a:	428b      	cmp	r3, r1
 800038c:	d302      	bcc.n	8000394 <__udivmoddi4+0xd4>
 800038e:	4282      	cmp	r2, r0
 8000390:	f200 80f9 	bhi.w	8000586 <__udivmoddi4+0x2c6>
 8000394:	1a84      	subs	r4, r0, r2
 8000396:	eb61 0303 	sbc.w	r3, r1, r3
 800039a:	2001      	movs	r0, #1
 800039c:	469e      	mov	lr, r3
 800039e:	2d00      	cmp	r5, #0
 80003a0:	d0e0      	beq.n	8000364 <__udivmoddi4+0xa4>
 80003a2:	e9c5 4e00 	strd	r4, lr, [r5]
 80003a6:	e7dd      	b.n	8000364 <__udivmoddi4+0xa4>
 80003a8:	b902      	cbnz	r2, 80003ac <__udivmoddi4+0xec>
 80003aa:	deff      	udf	#255	; 0xff
 80003ac:	fab2 f282 	clz	r2, r2
 80003b0:	2a00      	cmp	r2, #0
 80003b2:	f040 8092 	bne.w	80004da <__udivmoddi4+0x21a>
 80003b6:	eba1 010c 	sub.w	r1, r1, ip
 80003ba:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003be:	fa1f fe8c 	uxth.w	lr, ip
 80003c2:	2601      	movs	r6, #1
 80003c4:	0c20      	lsrs	r0, r4, #16
 80003c6:	fbb1 f3f7 	udiv	r3, r1, r7
 80003ca:	fb07 1113 	mls	r1, r7, r3, r1
 80003ce:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80003d2:	fb0e f003 	mul.w	r0, lr, r3
 80003d6:	4288      	cmp	r0, r1
 80003d8:	d908      	bls.n	80003ec <__udivmoddi4+0x12c>
 80003da:	eb1c 0101 	adds.w	r1, ip, r1
 80003de:	f103 38ff 	add.w	r8, r3, #4294967295
 80003e2:	d202      	bcs.n	80003ea <__udivmoddi4+0x12a>
 80003e4:	4288      	cmp	r0, r1
 80003e6:	f200 80cb 	bhi.w	8000580 <__udivmoddi4+0x2c0>
 80003ea:	4643      	mov	r3, r8
 80003ec:	1a09      	subs	r1, r1, r0
 80003ee:	b2a4      	uxth	r4, r4
 80003f0:	fbb1 f0f7 	udiv	r0, r1, r7
 80003f4:	fb07 1110 	mls	r1, r7, r0, r1
 80003f8:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 80003fc:	fb0e fe00 	mul.w	lr, lr, r0
 8000400:	45a6      	cmp	lr, r4
 8000402:	d908      	bls.n	8000416 <__udivmoddi4+0x156>
 8000404:	eb1c 0404 	adds.w	r4, ip, r4
 8000408:	f100 31ff 	add.w	r1, r0, #4294967295
 800040c:	d202      	bcs.n	8000414 <__udivmoddi4+0x154>
 800040e:	45a6      	cmp	lr, r4
 8000410:	f200 80bb 	bhi.w	800058a <__udivmoddi4+0x2ca>
 8000414:	4608      	mov	r0, r1
 8000416:	eba4 040e 	sub.w	r4, r4, lr
 800041a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800041e:	e79c      	b.n	800035a <__udivmoddi4+0x9a>
 8000420:	f1c6 0720 	rsb	r7, r6, #32
 8000424:	40b3      	lsls	r3, r6
 8000426:	fa22 fc07 	lsr.w	ip, r2, r7
 800042a:	ea4c 0c03 	orr.w	ip, ip, r3
 800042e:	fa20 f407 	lsr.w	r4, r0, r7
 8000432:	fa01 f306 	lsl.w	r3, r1, r6
 8000436:	431c      	orrs	r4, r3
 8000438:	40f9      	lsrs	r1, r7
 800043a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800043e:	fa00 f306 	lsl.w	r3, r0, r6
 8000442:	fbb1 f8f9 	udiv	r8, r1, r9
 8000446:	0c20      	lsrs	r0, r4, #16
 8000448:	fa1f fe8c 	uxth.w	lr, ip
 800044c:	fb09 1118 	mls	r1, r9, r8, r1
 8000450:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000454:	fb08 f00e 	mul.w	r0, r8, lr
 8000458:	4288      	cmp	r0, r1
 800045a:	fa02 f206 	lsl.w	r2, r2, r6
 800045e:	d90b      	bls.n	8000478 <__udivmoddi4+0x1b8>
 8000460:	eb1c 0101 	adds.w	r1, ip, r1
 8000464:	f108 3aff 	add.w	sl, r8, #4294967295
 8000468:	f080 8088 	bcs.w	800057c <__udivmoddi4+0x2bc>
 800046c:	4288      	cmp	r0, r1
 800046e:	f240 8085 	bls.w	800057c <__udivmoddi4+0x2bc>
 8000472:	f1a8 0802 	sub.w	r8, r8, #2
 8000476:	4461      	add	r1, ip
 8000478:	1a09      	subs	r1, r1, r0
 800047a:	b2a4      	uxth	r4, r4
 800047c:	fbb1 f0f9 	udiv	r0, r1, r9
 8000480:	fb09 1110 	mls	r1, r9, r0, r1
 8000484:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000488:	fb00 fe0e 	mul.w	lr, r0, lr
 800048c:	458e      	cmp	lr, r1
 800048e:	d908      	bls.n	80004a2 <__udivmoddi4+0x1e2>
 8000490:	eb1c 0101 	adds.w	r1, ip, r1
 8000494:	f100 34ff 	add.w	r4, r0, #4294967295
 8000498:	d26c      	bcs.n	8000574 <__udivmoddi4+0x2b4>
 800049a:	458e      	cmp	lr, r1
 800049c:	d96a      	bls.n	8000574 <__udivmoddi4+0x2b4>
 800049e:	3802      	subs	r0, #2
 80004a0:	4461      	add	r1, ip
 80004a2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80004a6:	fba0 9402 	umull	r9, r4, r0, r2
 80004aa:	eba1 010e 	sub.w	r1, r1, lr
 80004ae:	42a1      	cmp	r1, r4
 80004b0:	46c8      	mov	r8, r9
 80004b2:	46a6      	mov	lr, r4
 80004b4:	d356      	bcc.n	8000564 <__udivmoddi4+0x2a4>
 80004b6:	d053      	beq.n	8000560 <__udivmoddi4+0x2a0>
 80004b8:	b15d      	cbz	r5, 80004d2 <__udivmoddi4+0x212>
 80004ba:	ebb3 0208 	subs.w	r2, r3, r8
 80004be:	eb61 010e 	sbc.w	r1, r1, lr
 80004c2:	fa01 f707 	lsl.w	r7, r1, r7
 80004c6:	fa22 f306 	lsr.w	r3, r2, r6
 80004ca:	40f1      	lsrs	r1, r6
 80004cc:	431f      	orrs	r7, r3
 80004ce:	e9c5 7100 	strd	r7, r1, [r5]
 80004d2:	2600      	movs	r6, #0
 80004d4:	4631      	mov	r1, r6
 80004d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004da:	f1c2 0320 	rsb	r3, r2, #32
 80004de:	40d8      	lsrs	r0, r3
 80004e0:	fa0c fc02 	lsl.w	ip, ip, r2
 80004e4:	fa21 f303 	lsr.w	r3, r1, r3
 80004e8:	4091      	lsls	r1, r2
 80004ea:	4301      	orrs	r1, r0
 80004ec:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80004f0:	fa1f fe8c 	uxth.w	lr, ip
 80004f4:	fbb3 f0f7 	udiv	r0, r3, r7
 80004f8:	fb07 3610 	mls	r6, r7, r0, r3
 80004fc:	0c0b      	lsrs	r3, r1, #16
 80004fe:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000502:	fb00 f60e 	mul.w	r6, r0, lr
 8000506:	429e      	cmp	r6, r3
 8000508:	fa04 f402 	lsl.w	r4, r4, r2
 800050c:	d908      	bls.n	8000520 <__udivmoddi4+0x260>
 800050e:	eb1c 0303 	adds.w	r3, ip, r3
 8000512:	f100 38ff 	add.w	r8, r0, #4294967295
 8000516:	d22f      	bcs.n	8000578 <__udivmoddi4+0x2b8>
 8000518:	429e      	cmp	r6, r3
 800051a:	d92d      	bls.n	8000578 <__udivmoddi4+0x2b8>
 800051c:	3802      	subs	r0, #2
 800051e:	4463      	add	r3, ip
 8000520:	1b9b      	subs	r3, r3, r6
 8000522:	b289      	uxth	r1, r1
 8000524:	fbb3 f6f7 	udiv	r6, r3, r7
 8000528:	fb07 3316 	mls	r3, r7, r6, r3
 800052c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000530:	fb06 f30e 	mul.w	r3, r6, lr
 8000534:	428b      	cmp	r3, r1
 8000536:	d908      	bls.n	800054a <__udivmoddi4+0x28a>
 8000538:	eb1c 0101 	adds.w	r1, ip, r1
 800053c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000540:	d216      	bcs.n	8000570 <__udivmoddi4+0x2b0>
 8000542:	428b      	cmp	r3, r1
 8000544:	d914      	bls.n	8000570 <__udivmoddi4+0x2b0>
 8000546:	3e02      	subs	r6, #2
 8000548:	4461      	add	r1, ip
 800054a:	1ac9      	subs	r1, r1, r3
 800054c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000550:	e738      	b.n	80003c4 <__udivmoddi4+0x104>
 8000552:	462e      	mov	r6, r5
 8000554:	4628      	mov	r0, r5
 8000556:	e705      	b.n	8000364 <__udivmoddi4+0xa4>
 8000558:	4606      	mov	r6, r0
 800055a:	e6e3      	b.n	8000324 <__udivmoddi4+0x64>
 800055c:	4618      	mov	r0, r3
 800055e:	e6f8      	b.n	8000352 <__udivmoddi4+0x92>
 8000560:	454b      	cmp	r3, r9
 8000562:	d2a9      	bcs.n	80004b8 <__udivmoddi4+0x1f8>
 8000564:	ebb9 0802 	subs.w	r8, r9, r2
 8000568:	eb64 0e0c 	sbc.w	lr, r4, ip
 800056c:	3801      	subs	r0, #1
 800056e:	e7a3      	b.n	80004b8 <__udivmoddi4+0x1f8>
 8000570:	4646      	mov	r6, r8
 8000572:	e7ea      	b.n	800054a <__udivmoddi4+0x28a>
 8000574:	4620      	mov	r0, r4
 8000576:	e794      	b.n	80004a2 <__udivmoddi4+0x1e2>
 8000578:	4640      	mov	r0, r8
 800057a:	e7d1      	b.n	8000520 <__udivmoddi4+0x260>
 800057c:	46d0      	mov	r8, sl
 800057e:	e77b      	b.n	8000478 <__udivmoddi4+0x1b8>
 8000580:	3b02      	subs	r3, #2
 8000582:	4461      	add	r1, ip
 8000584:	e732      	b.n	80003ec <__udivmoddi4+0x12c>
 8000586:	4630      	mov	r0, r6
 8000588:	e709      	b.n	800039e <__udivmoddi4+0xde>
 800058a:	4464      	add	r4, ip
 800058c:	3802      	subs	r0, #2
 800058e:	e742      	b.n	8000416 <__udivmoddi4+0x156>

08000590 <__aeabi_idiv0>:
 8000590:	4770      	bx	lr
 8000592:	bf00      	nop

08000594 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000594:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005cc <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000598:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800059a:	e003      	b.n	80005a4 <LoopCopyDataInit>

0800059c <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 800059c:	4b0c      	ldr	r3, [pc, #48]	; (80005d0 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 800059e:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005a0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005a2:	3104      	adds	r1, #4

080005a4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005a4:	480b      	ldr	r0, [pc, #44]	; (80005d4 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005a6:	4b0c      	ldr	r3, [pc, #48]	; (80005d8 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005a8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005aa:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005ac:	d3f6      	bcc.n	800059c <CopyDataInit>
  ldr  r2, =_sbss
 80005ae:	4a0b      	ldr	r2, [pc, #44]	; (80005dc <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005b0:	e002      	b.n	80005b8 <LoopFillZerobss>

080005b2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005b2:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005b4:	f842 3b04 	str.w	r3, [r2], #4

080005b8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005b8:	4b09      	ldr	r3, [pc, #36]	; (80005e0 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005ba:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005bc:	d3f9      	bcc.n	80005b2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005be:	f005 fb51 	bl	8005c64 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005c2:	f020 fa55 	bl	8020a70 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005c6:	f000 ff53 	bl	8001470 <main>
  bx  lr    
 80005ca:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80005cc:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80005d0:	080c32c8 	.word	0x080c32c8
  ldr  r0, =_sdata
 80005d4:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005d8:	2000016c 	.word	0x2000016c
  ldr  r2, =_sbss
 80005dc:	2000016c 	.word	0x2000016c
  ldr  r3, = _ebss
 80005e0:	20015858 	.word	0x20015858

080005e4 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005e4:	e7fe      	b.n	80005e4 <ADC_IRQHandler>

080005e6 <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_init();
 80005e6:	f000 bc39 	b.w	8000e5c <touchgfx_init>

080005ea <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005ea:	f000 bcab 	b.w	8000f44 <touchgfx_taskEntry>

080005ee <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80005ee:	4770      	bx	lr

080005f0 <_ZN20STM32TouchControllerD0Ev>:
 80005f0:	b510      	push	{r4, lr}
 80005f2:	2104      	movs	r1, #4
 80005f4:	4604      	mov	r4, r0
 80005f6:	f020 f847 	bl	8020688 <_ZdlPvj>
 80005fa:	4620      	mov	r0, r4
 80005fc:	bd10      	pop	{r4, pc}
	...

08000600 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8000600:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8000602:	4b0c      	ldr	r3, [pc, #48]	; (8000634 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000604:	4c0c      	ldr	r4, [pc, #48]	; (8000638 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8000606:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000608:	4b0c      	ldr	r3, [pc, #48]	; (800063c <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060a:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 800060c:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060e:	6863      	ldr	r3, [r4, #4]
 8000610:	4798      	blx	r3
 8000612:	f640 0311 	movw	r3, #2065	; 0x811
 8000616:	4298      	cmp	r0, r3
 8000618:	d10a      	bne.n	8000630 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 800061a:	4d09      	ldr	r5, [pc, #36]	; (8000640 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 800061c:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 800061e:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000620:	2082      	movs	r0, #130	; 0x82
 8000622:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000624:	682b      	ldr	r3, [r5, #0]
 8000626:	2082      	movs	r0, #130	; 0x82
 8000628:	68db      	ldr	r3, [r3, #12]
 800062a:	4798      	blx	r3
 800062c:	2000      	movs	r0, #0
    }

    return ret;
}
 800062e:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000630:	2001      	movs	r0, #1
 8000632:	e7fc      	b.n	800062e <_Z11BSP_TS_Inittt+0x2e>
 8000634:	20000188 	.word	0x20000188
 8000638:	20000054 	.word	0x20000054
 800063c:	2000018a 	.word	0x2000018a
 8000640:	2000018c 	.word	0x2000018c

08000644 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000644:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000648:	20f0      	movs	r0, #240	; 0xf0
 800064a:	f7ff bfd9 	b.w	8000600 <_Z11BSP_TS_Inittt>
	...

08000650 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000650:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000652:	4d2d      	ldr	r5, [pc, #180]	; (8000708 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb8>)
 8000654:	682b      	ldr	r3, [r5, #0]
{
 8000656:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000658:	691b      	ldr	r3, [r3, #16]
 800065a:	2082      	movs	r0, #130	; 0x82
 800065c:	4798      	blx	r3
 800065e:	b280      	uxth	r0, r0
 8000660:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000662:	2800      	cmp	r0, #0
 8000664:	d043      	beq.n	80006ee <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x9e>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000666:	682b      	ldr	r3, [r5, #0]
 8000668:	f10d 0206 	add.w	r2, sp, #6
 800066c:	695b      	ldr	r3, [r3, #20]
 800066e:	a901      	add	r1, sp, #4
 8000670:	2082      	movs	r0, #130	; 0x82
 8000672:	4798      	blx	r3

        /* Y value first correction */
        y -= 360;
 8000674:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8000678:	f5a2 72b4 	sub.w	r2, r2, #360	; 0x168
 800067c:	b292      	uxth	r2, r2

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 800067e:	2a0a      	cmp	r2, #10
 8000680:	d937      	bls.n	80006f2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa2>
        yr = y / 11;
 8000682:	230b      	movs	r3, #11
 8000684:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8000688:	4b20      	ldr	r3, [pc, #128]	; (800070c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>)
 800068a:	881b      	ldrh	r3, [r3, #0]
 800068c:	429a      	cmp	r2, r3
 800068e:	d901      	bls.n	8000694 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
        {
            yr = TsYBoundary - 1;
 8000690:	3b01      	subs	r3, #1
 8000692:	b29a      	uxth	r2, r3
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8000694:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000698:	f640 31b8 	movw	r1, #3000	; 0xbb8
 800069c:	428b      	cmp	r3, r1
 800069e:	d82a      	bhi.n	80006f6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa6>
        {
            x = 3870 - x;
 80006a0:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 80006a4:	330e      	adds	r3, #14
 80006a6:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 80006a8:	210f      	movs	r1, #15
 80006aa:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 80006ae:	4918      	ldr	r1, [pc, #96]	; (8000710 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>)
 80006b0:	8809      	ldrh	r1, [r1, #0]
 80006b2:	428b      	cmp	r3, r1
 80006b4:	d901      	bls.n	80006ba <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
        {
            xr = TsXBoundary - 1;
 80006b6:	1e4b      	subs	r3, r1, #1
 80006b8:	b29b      	uxth	r3, r3
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006ba:	4e16      	ldr	r6, [pc, #88]	; (8000714 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc4>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006bc:	4d16      	ldr	r5, [pc, #88]	; (8000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc8>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006be:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006c0:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006c2:	4283      	cmp	r3, r0
 80006c4:	b281      	uxth	r1, r0
 80006c6:	bf8c      	ite	hi
 80006c8:	1a59      	subhi	r1, r3, r1
 80006ca:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006cc:	b2b8      	uxth	r0, r7
 80006ce:	42ba      	cmp	r2, r7
 80006d0:	bf8c      	ite	hi
 80006d2:	1a10      	subhi	r0, r2, r0
 80006d4:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d6:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006d8:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80006da:	4401      	add	r1, r0
 80006dc:	2905      	cmp	r1, #5
        {
            _x = x;
 80006de:	bfc8      	it	gt
 80006e0:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80006e2:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80006e4:	bfc8      	it	gt
 80006e6:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80006e8:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80006ea:	682b      	ldr	r3, [r5, #0]
 80006ec:	80a3      	strh	r3, [r4, #4]
    }
}
 80006ee:	b003      	add	sp, #12
 80006f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
            yr = 0;
 80006f2:	2200      	movs	r2, #0
 80006f4:	e7ce      	b.n	8000694 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
            x = 3800 - x;
 80006f6:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 80006fa:	3308      	adds	r3, #8
 80006fc:	b29b      	uxth	r3, r3
        if (xr <= 0)
 80006fe:	2b0e      	cmp	r3, #14
 8000700:	d8d2      	bhi.n	80006a8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
            xr = 0;
 8000702:	2300      	movs	r3, #0
 8000704:	e7d9      	b.n	80006ba <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
 8000706:	bf00      	nop
 8000708:	2000018c 	.word	0x2000018c
 800070c:	2000018a 	.word	0x2000018a
 8000710:	20000188 	.word	0x20000188
 8000714:	20000190 	.word	0x20000190
 8000718:	20000194 	.word	0x20000194

0800071c <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 800071c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 800071e:	4668      	mov	r0, sp
{
 8000720:	460d      	mov	r5, r1
 8000722:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000724:	f7ff ff94 	bl	8000650 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000728:	f8bd 0000 	ldrh.w	r0, [sp]
 800072c:	b130      	cbz	r0, 800073c <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 800072e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000732:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000734:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000738:	6023      	str	r3, [r4, #0]
        return true;
 800073a:	2001      	movs	r0, #1
}
 800073c:	b003      	add	sp, #12
 800073e:	bd30      	pop	{r4, r5, pc}

08000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{

}
 8000740:	4770      	bx	lr

08000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
 8000742:	4770      	bx	lr

08000744 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
 8000744:	4770      	bx	lr

08000746 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000746:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000748:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 800074c:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000750:	4770      	bx	lr

08000752 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8000752:	2000      	movs	r0, #0
 8000754:	4770      	bx	lr
	...

08000758 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000758:	4b03      	ldr	r3, [pc, #12]	; (8000768 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800075a:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800075c:	3900      	subs	r1, #0
 800075e:	bf18      	it	ne
 8000760:	2101      	movne	r1, #1
 8000762:	7019      	strb	r1, [r3, #0]
    }
 8000764:	4770      	bx	lr
 8000766:	bf00      	nop
 8000768:	200155ab 	.word	0x200155ab

0800076c <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 800076c:	2000      	movs	r0, #0
 800076e:	4770      	bx	lr

08000770 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000770:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8000772:	b10b      	cbz	r3, 8000778 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000774:	4608      	mov	r0, r1
 8000776:	4718      	bx	r3
        }
    }
 8000778:	4770      	bx	lr

0800077a <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 800077a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800077e:	4770      	bx	lr

08000780 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000780:	6840      	ldr	r0, [r0, #4]
 8000782:	6803      	ldr	r3, [r0, #0]
 8000784:	699b      	ldr	r3, [r3, #24]
 8000786:	4718      	bx	r3

08000788 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000788:	4770      	bx	lr

0800078a <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 800078a:	4770      	bx	lr

0800078c <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800078c:	4770      	bx	lr

0800078e <_ZN11TouchGFXHAL10initializeEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800078e:	f000 bc79 	b.w	8001084 <_ZN20TouchGFXGeneratedHAL10initializeEv>

08000792 <_ZN11TouchGFXHAL9taskEntryEv>:
}

void TouchGFXHAL::taskEntry()
{
 8000792:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000794:	6803      	ldr	r3, [r0, #0]
{
 8000796:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8000798:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800079c:	4798      	blx	r3
    enableInterrupts();
 800079e:	6823      	ldr	r3, [r4, #0]
 80007a0:	4620      	mov	r0, r4
 80007a2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80007a4:	4798      	blx	r3

    OSWrappers::waitForVSync();
 80007a6:	f000 f8eb 	bl	8000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80007aa:	6823      	ldr	r3, [r4, #0]
 80007ac:	4620      	mov	r0, r4
 80007ae:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80007b0:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 80007b2:	2029      	movs	r0, #41	; 0x29
 80007b4:	f001 f928 	bl	8001a08 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 80007b8:	f000 f8e2 	bl	8000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80007bc:	6823      	ldr	r3, [r4, #0]
 80007be:	4620      	mov	r0, r4
 80007c0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80007c2:	4798      	blx	r3
    for (;;)
 80007c4:	e7f8      	b.n	80007b8 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

080007c6 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80007c6:	b510      	push	{r4, lr}
 80007c8:	4604      	mov	r4, r0
        swapFrameBuffers();
 80007ca:	f00b f94b 	bl	800ba64 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80007ce:	6823      	ldr	r3, [r4, #0]
 80007d0:	4620      	mov	r0, r4
 80007d2:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 80007d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80007da:	4718      	bx	r3

080007dc <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80007dc:	f000 bc44 	b.w	8001068 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080007e0 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80007e0:	f000 bc48 	b.w	8001074 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080007e4 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80007e4:	f000 bc74 	b.w	80010d0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080007e8 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80007e8:	f000 bc1a 	b.w	8001020 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080007ec <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80007ec:	f000 bc74 	b.w	80010d8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080007f0 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80007f0:	f000 bc7c 	b.w	80010ec <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080007f4 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80007f4:	f000 bc1e 	b.w	8001034 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080007f8 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80007f8:	f00a bba8 	b.w	800af4c <_ZN8touchgfx3HAL16flushFrameBufferEv>

080007fc <_ZN11TouchGFXHALD0Ev>:
 80007fc:	b510      	push	{r4, lr}
 80007fe:	217c      	movs	r1, #124	; 0x7c
 8000800:	4604      	mov	r4, r0
 8000802:	f01f ff41 	bl	8020688 <_ZdlPvj>
 8000806:	4620      	mov	r0, r4
 8000808:	bd10      	pop	{r4, pc}

0800080a <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 800080a:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 800080e:	b11b      	cbz	r3, 8000818 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8000810:	6840      	ldr	r0, [r0, #4]
 8000812:	6803      	ldr	r3, [r0, #0]
 8000814:	681b      	ldr	r3, [r3, #0]
 8000816:	4718      	bx	r3
    }
 8000818:	4618      	mov	r0, r3
 800081a:	4770      	bx	lr

0800081c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 800081c:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 800081e:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8000822:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
            if (DISPLAY_ROTATION == rotate0)
 8000826:	4b0c      	ldr	r3, [pc, #48]	; (8000858 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8000828:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 800082a:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 800082c:	d009      	beq.n	8000842 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 800082e:	b93a      	cbnz	r2, 8000840 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000830:	4a0a      	ldr	r2, [pc, #40]	; (800085c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000832:	490b      	ldr	r1, [pc, #44]	; (8000860 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000834:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000836:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8000838:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800083a:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 800083c:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 800083e:	701a      	strb	r2, [r3, #0]
    }
 8000840:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000842:	2a00      	cmp	r2, #0
 8000844:	d0fc      	beq.n	8000840 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000846:	4a05      	ldr	r2, [pc, #20]	; (800085c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000848:	4905      	ldr	r1, [pc, #20]	; (8000860 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800084a:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 800084c:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 800084e:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000850:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000852:	2200      	movs	r2, #0
 8000854:	e7f3      	b.n	800083e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8000856:	bf00      	nop
 8000858:	200155a4 	.word	0x200155a4
 800085c:	200155a0 	.word	0x200155a0
 8000860:	200155a2 	.word	0x200155a2

08000864 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000864:	b570      	push	{r4, r5, r6, lr}
 8000866:	460d      	mov	r5, r1
 8000868:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800086a:	b935      	cbnz	r5, 800087a <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 800086c:	4b09      	ldr	r3, [pc, #36]	; (8000894 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 800086e:	4a0a      	ldr	r2, [pc, #40]	; (8000898 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000870:	480a      	ldr	r0, [pc, #40]	; (800089c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000872:	f240 21d2 	movw	r1, #722	; 0x2d2
 8000876:	f01f ffbb 	bl	80207f0 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800087a:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800087e:	4b08      	ldr	r3, [pc, #32]	; (80008a0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000880:	3a00      	subs	r2, #0
 8000882:	bf18      	it	ne
 8000884:	2201      	movne	r2, #1
 8000886:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000888:	6803      	ldr	r3, [r0, #0]
    }
 800088a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 800088e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000892:	4718      	bx	r3
 8000894:	08021a98 	.word	0x08021a98
 8000898:	08021ad0 	.word	0x08021ad0
 800089c:	08021b1e 	.word	0x08021b1e
 80008a0:	200155aa 	.word	0x200155aa

080008a4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80008a4:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80008a6:	4b09      	ldr	r3, [pc, #36]	; (80008cc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 80008a8:	881b      	ldrh	r3, [r3, #0]
 80008aa:	428b      	cmp	r3, r1
 80008ac:	d803      	bhi.n	80008b6 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 80008ae:	4b08      	ldr	r3, [pc, #32]	; (80008d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 80008b0:	881b      	ldrh	r3, [r3, #0]
 80008b2:	4293      	cmp	r3, r2
 80008b4:	d905      	bls.n	80008c2 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80008b6:	4b07      	ldr	r3, [pc, #28]	; (80008d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80008b8:	4a07      	ldr	r2, [pc, #28]	; (80008d8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80008ba:	4808      	ldr	r0, [pc, #32]	; (80008dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80008bc:	219e      	movs	r1, #158	; 0x9e
 80008be:	f01f ff97 	bl	80207f0 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80008c2:	4b07      	ldr	r3, [pc, #28]	; (80008e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80008c4:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80008c6:	4b07      	ldr	r3, [pc, #28]	; (80008e4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80008c8:	801a      	strh	r2, [r3, #0]
    }
 80008ca:	bd08      	pop	{r3, pc}
 80008cc:	200155a0 	.word	0x200155a0
 80008d0:	200155a2 	.word	0x200155a2
 80008d4:	08021b63 	.word	0x08021b63
 80008d8:	08021bc6 	.word	0x08021bc6
 80008dc:	08021b1e 	.word	0x08021b1e
 80008e0:	200155a6 	.word	0x200155a6
 80008e4:	200155a8 	.word	0x200155a8

080008e8 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80008e8:	2101      	movs	r1, #1
{
 80008ea:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80008ec:	2200      	movs	r2, #0
 80008ee:	4608      	mov	r0, r1
 80008f0:	f007 fe6a 	bl	80085c8 <osSemaphoreNew>
 80008f4:	4b0a      	ldr	r3, [pc, #40]	; (8000920 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 80008f6:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80008f8:	b928      	cbnz	r0, 8000906 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80008fa:	4b0a      	ldr	r3, [pc, #40]	; (8000924 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 80008fc:	4a0a      	ldr	r2, [pc, #40]	; (8000928 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80008fe:	2129      	movs	r1, #41	; 0x29

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000900:	480a      	ldr	r0, [pc, #40]	; (800092c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000902:	f01f ff75 	bl	80207f0 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000906:	2200      	movs	r2, #0
 8000908:	2104      	movs	r1, #4
 800090a:	2001      	movs	r0, #1
 800090c:	f007 ff22 	bl	8008754 <osMessageQueueNew>
 8000910:	4b07      	ldr	r3, [pc, #28]	; (8000930 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000912:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000914:	b918      	cbnz	r0, 800091e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000916:	4b07      	ldr	r3, [pc, #28]	; (8000934 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000918:	4a03      	ldr	r2, [pc, #12]	; (8000928 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800091a:	212d      	movs	r1, #45	; 0x2d
 800091c:	e7f0      	b.n	8000900 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 800091e:	bd08      	pop	{r3, pc}
 8000920:	2000019c 	.word	0x2000019c
 8000924:	08021ce4 	.word	0x08021ce4
 8000928:	08021d2d 	.word	0x08021d2d
 800092c:	08021d5c 	.word	0x08021d5c
 8000930:	20000198 	.word	0x20000198
 8000934:	08021daa 	.word	0x08021daa

08000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000938:	4b02      	ldr	r3, [pc, #8]	; (8000944 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 800093a:	f04f 31ff 	mov.w	r1, #4294967295
 800093e:	6818      	ldr	r0, [r3, #0]
 8000940:	f007 be98 	b.w	8008674 <osSemaphoreAcquire>
 8000944:	2000019c 	.word	0x2000019c

08000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000948:	4b01      	ldr	r3, [pc, #4]	; (8000950 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 800094a:	6818      	ldr	r0, [r3, #0]
 800094c:	f007 becc 	b.w	80086e8 <osSemaphoreRelease>
 8000950:	2000019c 	.word	0x2000019c

08000954 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000954:	4b02      	ldr	r3, [pc, #8]	; (8000960 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000956:	2100      	movs	r1, #0
 8000958:	6818      	ldr	r0, [r3, #0]
 800095a:	f007 be8b 	b.w	8008674 <osSemaphoreAcquire>
 800095e:	bf00      	nop
 8000960:	2000019c 	.word	0x2000019c

08000964 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000964:	f7ff bff0 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000968 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000968:	4803      	ldr	r0, [pc, #12]	; (8000978 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 800096a:	4904      	ldr	r1, [pc, #16]	; (800097c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800096c:	6800      	ldr	r0, [r0, #0]
 800096e:	2300      	movs	r3, #0
 8000970:	461a      	mov	r2, r3
 8000972:	f007 bf35 	b.w	80087e0 <osMessageQueuePut>
 8000976:	bf00      	nop
 8000978:	20000198 	.word	0x20000198
 800097c:	20000004 	.word	0x20000004

08000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000980:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000982:	4c08      	ldr	r4, [pc, #32]	; (80009a4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000984:	2300      	movs	r3, #0
 8000986:	461a      	mov	r2, r3
 8000988:	a901      	add	r1, sp, #4
 800098a:	6820      	ldr	r0, [r4, #0]
 800098c:	f007 ff6a 	bl	8008864 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000990:	6820      	ldr	r0, [r4, #0]
 8000992:	f04f 33ff 	mov.w	r3, #4294967295
 8000996:	2200      	movs	r2, #0
 8000998:	a901      	add	r1, sp, #4
 800099a:	f007 ff63 	bl	8008864 <osMessageQueueGet>
}
 800099e:	b002      	add	sp, #8
 80009a0:	bd10      	pop	{r4, pc}
 80009a2:	bf00      	nop
 80009a4:	20000198 	.word	0x20000198

080009a8 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 80009a8:	6803      	ldr	r3, [r0, #0]
 80009aa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80009ac:	4718      	bx	r3

080009ae <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 80009ae:	2001      	movs	r0, #1
 80009b0:	4770      	bx	lr

080009b2 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 80009b2:	6803      	ldr	r3, [r0, #0]
 80009b4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80009b6:	4718      	bx	r3

080009b8 <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 80009b8:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80009ba:	2300      	movs	r3, #0
 80009bc:	9301      	str	r3, [sp, #4]
 80009be:	4b0d      	ldr	r3, [pc, #52]	; (80009f4 <_ZN8STM32DMA10initializeEv+0x3c>)
 80009c0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009c2:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80009c6:	631a      	str	r2, [r3, #48]	; 0x30
 80009c8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009ca:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 80009ce:	9201      	str	r2, [sp, #4]
 80009d0:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 80009d2:	691a      	ldr	r2, [r3, #16]
 80009d4:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80009d8:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 80009da:	691a      	ldr	r2, [r3, #16]
 80009dc:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 80009e0:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 80009e2:	4b05      	ldr	r3, [pc, #20]	; (80009f8 <_ZN8STM32DMA10initializeEv+0x40>)
 80009e4:	4a05      	ldr	r2, [pc, #20]	; (80009fc <_ZN8STM32DMA10initializeEv+0x44>)
 80009e6:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80009e8:	4b05      	ldr	r3, [pc, #20]	; (8000a00 <_ZN8STM32DMA10initializeEv+0x48>)
 80009ea:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80009ee:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 80009f0:	b002      	add	sp, #8
 80009f2:	4770      	bx	lr
 80009f4:	40023800 	.word	0x40023800
 80009f8:	20003a0c 	.word	0x20003a0c
 80009fc:	08000a45 	.word	0x08000a45
 8000a00:	e000e100 	.word	0xe000e100

08000a04 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000a04:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000a08:	4770      	bx	lr
	...

08000a0c <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000a0c:	4b05      	ldr	r3, [pc, #20]	; (8000a24 <_ZN8STM32DMAD1Ev+0x18>)
 8000a0e:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000a10:	4b05      	ldr	r3, [pc, #20]	; (8000a28 <_ZN8STM32DMAD1Ev+0x1c>)
 8000a12:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000a16:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000a1a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000a1e:	f3bf 8f6f 	isb	sy
}
 8000a22:	4770      	bx	lr
 8000a24:	08021f48 	.word	0x08021f48
 8000a28:	e000e100 	.word	0xe000e100

08000a2c <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000a2c:	b510      	push	{r4, lr}
 8000a2e:	4604      	mov	r4, r0
}
 8000a30:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8000a34:	f7ff ffea 	bl	8000a0c <_ZN8STM32DMAD1Ev>
 8000a38:	4620      	mov	r0, r4
 8000a3a:	f01f fe25 	bl	8020688 <_ZdlPvj>
 8000a3e:	4620      	mov	r0, r4
 8000a40:	bd10      	pop	{r4, pc}
	...

08000a44 <DMA2D_XferCpltCallback>:
        return instance;
 8000a44:	4b02      	ldr	r3, [pc, #8]	; (8000a50 <DMA2D_XferCpltCallback+0xc>)
 8000a46:	681b      	ldr	r3, [r3, #0]
 8000a48:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000a4a:	6803      	ldr	r3, [r0, #0]
 8000a4c:	695b      	ldr	r3, [r3, #20]
 8000a4e:	4718      	bx	r3
 8000a50:	200155ac 	.word	0x200155ac

08000a54 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000a54:	b570      	push	{r4, r5, r6, lr}
 8000a56:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000a58:	4625      	mov	r5, r4
 8000a5a:	4b0a      	ldr	r3, [pc, #40]	; (8000a84 <_ZN8STM32DMAC1Ev+0x30>)
 8000a5c:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000a5e:	2600      	movs	r6, #0
 8000a60:	6060      	str	r0, [r4, #4]
 8000a62:	7226      	strb	r6, [r4, #8]
 8000a64:	7266      	strb	r6, [r4, #9]
 8000a66:	f845 3b20 	str.w	r3, [r5], #32
 8000a6a:	2260      	movs	r2, #96	; 0x60
 8000a6c:	4629      	mov	r1, r5
 8000a6e:	f00b f94f 	bl	800bd10 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000a72:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000a76:	60ee      	str	r6, [r5, #12]
 8000a78:	3524      	adds	r5, #36	; 0x24
 8000a7a:	42ab      	cmp	r3, r5
 8000a7c:	d1fb      	bne.n	8000a76 <_ZN8STM32DMAC1Ev+0x22>
}
 8000a7e:	4620      	mov	r0, r4
 8000a80:	bd70      	pop	{r4, r5, r6, pc}
 8000a82:	bf00      	nop
 8000a84:	08021f48 	.word	0x08021f48

08000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000a88:	b508      	push	{r3, lr}
    switch (format)
 8000a8a:	290b      	cmp	r1, #11
 8000a8c:	d80b      	bhi.n	8000aa6 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8000a8e:	e8df f001 	tbb	[pc, r1]
 8000a92:	0612      	.short	0x0612
 8000a94:	0a0a0a10 	.word	0x0a0a0a10
 8000a98:	0808080a 	.word	0x0808080a
 8000a9c:	0808      	.short	0x0808
 8000a9e:	2001      	movs	r0, #1
}
 8000aa0:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000aa2:	2005      	movs	r0, #5
        break;
 8000aa4:	e7fc      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8000aa6:	4b05      	ldr	r3, [pc, #20]	; (8000abc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000aa8:	4a05      	ldr	r2, [pc, #20]	; (8000ac0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000aaa:	4806      	ldr	r0, [pc, #24]	; (8000ac4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8000aac:	2167      	movs	r1, #103	; 0x67
 8000aae:	f01f fe9f 	bl	80207f0 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000ab2:	2000      	movs	r0, #0
 8000ab4:	e7f4      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000ab6:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000ab8:	e7f2      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000aba:	bf00      	nop
 8000abc:	08021dec 	.word	0x08021dec
 8000ac0:	08021e07 	.word	0x08021e07
 8000ac4:	08021e51 	.word	0x08021e51

08000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000ac8:	b508      	push	{r3, lr}
    switch (format)
 8000aca:	290a      	cmp	r1, #10
 8000acc:	d809      	bhi.n	8000ae2 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8000ace:	e8df f001 	tbb	[pc, r1]
 8000ad2:	0610      	.short	0x0610
 8000ad4:	0808080e 	.word	0x0808080e
 8000ad8:	06060608 	.word	0x06060608
 8000adc:	06          	.byte	0x06
 8000add:	00          	.byte	0x00
 8000ade:	2001      	movs	r0, #1
}
 8000ae0:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000ae2:	4b05      	ldr	r3, [pc, #20]	; (8000af8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8000ae4:	4a05      	ldr	r2, [pc, #20]	; (8000afc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000ae6:	4806      	ldr	r0, [pc, #24]	; (8000b00 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000ae8:	2188      	movs	r1, #136	; 0x88
 8000aea:	f01f fe81 	bl	80207f0 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000aee:	2000      	movs	r0, #0
 8000af0:	e7f6      	b.n	8000ae0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000af2:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000af4:	e7f4      	b.n	8000ae0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000af6:	bf00      	nop
 8000af8:	08021dec 	.word	0x08021dec
 8000afc:	08021e9d 	.word	0x08021e9d
 8000b00:	08021e51 	.word	0x08021e51

08000b04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000b04:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b08:	7f4f      	ldrb	r7, [r1, #29]
{
 8000b0a:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b0c:	4639      	mov	r1, r7
{
 8000b0e:	4681      	mov	r9, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b10:	f7ff ffba 	bl	8000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b14:	f894 801e 	ldrb.w	r8, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b18:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b1a:	4641      	mov	r1, r8
 8000b1c:	4648      	mov	r0, r9
 8000b1e:	f7ff ffb3 	bl	8000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b22:	4641      	mov	r1, r8
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b24:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b26:	4648      	mov	r0, r9
 8000b28:	f7ff ffce 	bl	8000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000b2c:	8aa1      	ldrh	r1, [r4, #20]
 8000b2e:	8b62      	ldrh	r2, [r4, #26]
 8000b30:	4b42      	ldr	r3, [pc, #264]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000b32:	1a52      	subs	r2, r2, r1
 8000b34:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000b36:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000b38:	8b22      	ldrh	r2, [r4, #24]
 8000b3a:	1a52      	subs	r2, r2, r1
 8000b3c:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000b3e:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000b40:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000b42:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000b46:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b48:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000b4a:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b4c:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000b4e:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000b50:	6821      	ldr	r1, [r4, #0]
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b52:	f894 c01c 	ldrb.w	ip, [r4, #28]
    switch (blitOp.operation)
 8000b56:	2980      	cmp	r1, #128	; 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b58:	ea4f 620c 	mov.w	r2, ip, lsl #24
    switch (blitOp.operation)
 8000b5c:	d026      	beq.n	8000bac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa8>
 8000b5e:	d810      	bhi.n	8000b82 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7e>
 8000b60:	2920      	cmp	r1, #32
 8000b62:	ea45 0402 	orr.w	r4, r5, r2
 8000b66:	d061      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000b68:	2940      	cmp	r1, #64	; 0x40
 8000b6a:	d05f      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000b6c:	2904      	cmp	r1, #4
 8000b6e:	d05d      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b70:	4b32      	ldr	r3, [pc, #200]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000b72:	432a      	orrs	r2, r5
 8000b74:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000b78:	4547      	cmp	r7, r8
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b7a:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000b7c:	d05a      	beq.n	8000c34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000b7e:	4a30      	ldr	r2, [pc, #192]	; (8000c40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000b80:	e040      	b.n	8000c04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
    switch (blitOp.operation)
 8000b82:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8000b86:	d007      	beq.n	8000b98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
 8000b88:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8000b8c:	d1f0      	bne.n	8000b70 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b8e:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000b92:	f042 0209 	orr.w	r2, r2, #9
 8000b96:	e003      	b.n	8000ba0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b98:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000b9c:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ba0:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000ba2:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000ba4:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000ba6:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ba8:	6158      	str	r0, [r3, #20]
 8000baa:	e02a      	b.n	8000c02 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000bac:	68a4      	ldr	r4, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bae:	432a      	orrs	r2, r5
 8000bb0:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000bb4:	1d21      	adds	r1, r4, #4
 8000bb6:	62d9      	str	r1, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bb8:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000bba:	7822      	ldrb	r2, [r4, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000bbc:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000bbe:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000bc0:	b142      	cbz	r2, 8000bd4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 8000bc2:	2a01      	cmp	r2, #1
 8000bc4:	d021      	beq.n	8000c0a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x106>
                assert(0 && "Unsupported format");
 8000bc6:	4b1f      	ldr	r3, [pc, #124]	; (8000c44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000bc8:	4a1f      	ldr	r2, [pc, #124]	; (8000c48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8000bca:	4820      	ldr	r0, [pc, #128]	; (8000c4c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8000bcc:	f44f 7189 	mov.w	r1, #274	; 0x112
 8000bd0:	f01f fe0e 	bl	80207f0 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000bd4:	69da      	ldr	r2, [r3, #28]
 8000bd6:	8861      	ldrh	r1, [r4, #2]
 8000bd8:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000bdc:	3901      	subs	r1, #1
 8000bde:	f022 0210 	bic.w	r2, r2, #16
 8000be2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000be6:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000be8:	2001      	movs	r0, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000bea:	4b14      	ldr	r3, [pc, #80]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000bec:	69da      	ldr	r2, [r3, #28]
 8000bee:	f042 0220 	orr.w	r2, r2, #32
 8000bf2:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000bf4:	69da      	ldr	r2, [r3, #28]
 8000bf6:	0692      	lsls	r2, r2, #26
 8000bf8:	d4fc      	bmi.n	8000bf4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf0>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000bfa:	2210      	movs	r2, #16
 8000bfc:	609a      	str	r2, [r3, #8]
            if(blend)
 8000bfe:	2800      	cmp	r0, #0
 8000c00:	d0bd      	beq.n	8000b7e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7a>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000c02:	4a13      	ldr	r2, [pc, #76]	; (8000c50 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000c04:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000c06:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c0a:	8862      	ldrh	r2, [r4, #2]
 8000c0c:	69d9      	ldr	r1, [r3, #28]
 8000c0e:	1e54      	subs	r4, r2, #1
 8000c10:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000c14:	f022 0210 	bic.w	r2, r2, #16
 8000c18:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
                if(blitOp.alpha == 255)
 8000c1c:	f1bc 00ff 	subs.w	r0, ip, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c20:	f042 0210 	orr.w	r2, r2, #16
                if(blitOp.alpha == 255)
 8000c24:	bf18      	it	ne
 8000c26:	2001      	movne	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c28:	61da      	str	r2, [r3, #28]
                break;
 8000c2a:	e7de      	b.n	8000bea <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c2c:	f444 3400 	orr.w	r4, r4, #131072	; 0x20000
 8000c30:	61dc      	str	r4, [r3, #28]
 8000c32:	e7b8      	b.n	8000ba6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000c34:	f240 2201 	movw	r2, #513	; 0x201
 8000c38:	e7e4      	b.n	8000c04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
 8000c3a:	bf00      	nop
 8000c3c:	4002b000 	.word	0x4002b000
 8000c40:	00010201 	.word	0x00010201
 8000c44:	08021ee8 	.word	0x08021ee8
 8000c48:	08021f02 	.word	0x08021f02
 8000c4c:	08021e51 	.word	0x08021e51
 8000c50:	00020201 	.word	0x00020201

08000c54 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000c54:	b570      	push	{r4, r5, r6, lr}
 8000c56:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c58:	7f89      	ldrb	r1, [r1, #30]
 8000c5a:	f7ff ff35 	bl	8000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c5e:	8aa6      	ldrh	r6, [r4, #20]
 8000c60:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c62:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c64:	4b15      	ldr	r3, [pc, #84]	; (8000cbc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c66:	6925      	ldr	r5, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c68:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c6a:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c6e:	1b92      	subs	r2, r2, r6
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c70:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c72:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c74:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000c76:	6826      	ldr	r6, [r4, #0]
 8000c78:	68e1      	ldr	r1, [r4, #12]
 8000c7a:	2e08      	cmp	r6, #8
 8000c7c:	d10d      	bne.n	8000c9a <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c7e:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c80:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000c82:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000c84:	7f20      	ldrb	r0, [r4, #28]
 8000c86:	4a0e      	ldr	r2, [pc, #56]	; (8000cc0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000c88:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000c8c:	61da      	str	r2, [r3, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000c8e:	4a0d      	ldr	r2, [pc, #52]	; (8000cc4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000c90:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c92:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c94:	60dd      	str	r5, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000c96:	601a      	str	r2, [r3, #0]
    }
}
 8000c98:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000c9a:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000c9c:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000c9e:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000ca0:	0948      	lsrs	r0, r1, #5
 8000ca2:	0a0a      	lsrs	r2, r1, #8
 8000ca4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8000ca8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8000cac:	4302      	orrs	r2, r0
 8000cae:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000cb2:	430a      	orrs	r2, r1
 8000cb4:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000cb6:	4a04      	ldr	r2, [pc, #16]	; (8000cc8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000cb8:	e7ed      	b.n	8000c96 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000cba:	bf00      	nop
 8000cbc:	4002b000 	.word	0x4002b000
 8000cc0:	00010009 	.word	0x00010009
 8000cc4:	00020201 	.word	0x00020201
 8000cc8:	00030201 	.word	0x00030201

08000ccc <_ZN8touchgfx5paint6rgb5658tearDownEv>:
    * @brief Waits until previous DMA drawing operation has finished
    */
    void tearDown()
    {
        /* Wait for DMA2D to finish last run */
        while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000ccc:	4b03      	ldr	r3, [pc, #12]	; (8000cdc <_ZN8touchgfx5paint6rgb5658tearDownEv+0x10>)
 8000cce:	681a      	ldr	r2, [r3, #0]
 8000cd0:	07d2      	lsls	r2, r2, #31
 8000cd2:	d4fc      	bmi.n	8000cce <_ZN8touchgfx5paint6rgb5658tearDownEv+0x2>

        /* Clear transfer flags */
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cd4:	2223      	movs	r2, #35	; 0x23
 8000cd6:	609a      	str	r2, [r3, #8]
    }
 8000cd8:	4770      	bx	lr
 8000cda:	bf00      	nop
 8000cdc:	4002b000 	.word	0x4002b000

08000ce0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
    *
    * @brief Renders Canvas Widget chunks using DMA.
    * This functions will not generate an interrupt, and will not affect the DMA queue.
    */
    void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
    {
 8000ce0:	b530      	push	{r4, r5, lr}
        /* Wait for DMA2D to finish last run */
        while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000ce2:	4c0f      	ldr	r4, [pc, #60]	; (8000d20 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8000ce4:	6825      	ldr	r5, [r4, #0]
 8000ce6:	07ed      	lsls	r5, r5, #31
 8000ce8:	d4fc      	bmi.n	8000ce4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

        /* Clear transfer flags */
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cea:	2523      	movs	r5, #35	; 0x23

        /* DMA2D OPFCCR register configuration */
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

        /* Configure DMA2D data size */
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cec:	0409      	lsls	r1, r1, #16
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cee:	60a5      	str	r5, [r4, #8]
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cf0:	f041 0101 	orr.w	r1, r1, #1
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000cf4:	2502      	movs	r5, #2

        /* Configure DMA2D destination address */
        WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

        if (alpha < 0xFF)
 8000cf6:	2bff      	cmp	r3, #255	; 0xff
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000cf8:	6365      	str	r5, [r4, #52]	; 0x34
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cfa:	6461      	str	r1, [r4, #68]	; 0x44
        WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000cfc:	63e0      	str	r0, [r4, #60]	; 0x3c
        if (alpha < 0xFF)
 8000cfe:	d00a      	beq.n	8000d16 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
        {
            /* Write DMA2D BGPFCCR register */
            WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

            /* Write DMA2D FGPFCCR register */
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d00:	4908      	ldr	r1, [pc, #32]	; (8000d24 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
            WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000d02:	6265      	str	r5, [r4, #36]	; 0x24
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d04:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8000d08:	61e3      	str	r3, [r4, #28]

            /* Configure DMA2D source address */
            WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

            /* Enable the Peripheral and Enable the transfer complete interrupt */
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000d0a:	4b07      	ldr	r3, [pc, #28]	; (8000d28 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
            WRITE_REG(DMA2D->FGCOLR, color);
 8000d0c:	6222      	str	r2, [r4, #32]
            WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8000d0e:	6160      	str	r0, [r4, #20]
            WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8000d10:	60e0      	str	r0, [r4, #12]

            /* Set color */
            WRITE_REG(DMA2D->OCOLR, color565);

            /* Enable the Peripheral and Enable the transfer complete interrupt */
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000d12:	6023      	str	r3, [r4, #0]
        }
    }
 8000d14:	bd30      	pop	{r4, r5, pc}
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000d16:	61e5      	str	r5, [r4, #28]
            WRITE_REG(DMA2D->OCOLR, color565);
 8000d18:	9b03      	ldr	r3, [sp, #12]
 8000d1a:	63a3      	str	r3, [r4, #56]	; 0x38
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000d1c:	4b03      	ldr	r3, [pc, #12]	; (8000d2c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 8000d1e:	e7f8      	b.n	8000d12 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 8000d20:	4002b000 	.word	0x4002b000
 8000d24:	00010009 	.word	0x00010009
 8000d28:	00020001 	.word	0x00020001
 8000d2c:	00030001 	.word	0x00030001

08000d30 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000d30:	2001      	movs	r0, #1
 8000d32:	4770      	bx	lr

08000d34 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000d34:	2038      	movs	r0, #56	; 0x38
 8000d36:	4770      	bx	lr

08000d38 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000d38:	2338      	movs	r3, #56	; 0x38
 8000d3a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d3e:	3008      	adds	r0, #8
 8000d40:	4770      	bx	lr

08000d42 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000d42:	2338      	movs	r3, #56	; 0x38
 8000d44:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d48:	3008      	adds	r0, #8
 8000d4a:	4770      	bx	lr

08000d4c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d4c:	2001      	movs	r0, #1
 8000d4e:	4770      	bx	lr

08000d50 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d50:	f242 703c 	movw	r0, #10044	; 0x273c
 8000d54:	4770      	bx	lr

08000d56 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d56:	f242 733c 	movw	r3, #10044	; 0x273c
 8000d5a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d5e:	3008      	adds	r0, #8
 8000d60:	4770      	bx	lr

08000d62 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d62:	f242 733c 	movw	r3, #10044	; 0x273c
 8000d66:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d6a:	3008      	adds	r0, #8
 8000d6c:	4770      	bx	lr

08000d6e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d6e:	2001      	movs	r0, #1
 8000d70:	4770      	bx	lr

08000d72 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d72:	2010      	movs	r0, #16
 8000d74:	4770      	bx	lr

08000d76 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d76:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d7a:	3008      	adds	r0, #8
 8000d7c:	4770      	bx	lr

08000d7e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d7e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d82:	3008      	adds	r0, #8
 8000d84:	4770      	bx	lr

08000d86 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 8000d86:	4608      	mov	r0, r1
 8000d88:	f001 bd4a 	b.w	8002820 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000d8c:	b510      	push	{r4, lr}
 8000d8e:	4b03      	ldr	r3, [pc, #12]	; (8000d9c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8000d90:	6003      	str	r3, [r0, #0]
 8000d92:	4604      	mov	r4, r0
 8000d94:	f009 fd0f 	bl	800a7b6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000d98:	4620      	mov	r0, r4
 8000d9a:	bd10      	pop	{r4, pc}
 8000d9c:	08022000 	.word	0x08022000

08000da0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8000da0:	b510      	push	{r4, lr}
 8000da2:	4604      	mov	r4, r0
 8000da4:	f7ff fff2 	bl	8000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000da8:	4620      	mov	r0, r4
 8000daa:	2140      	movs	r1, #64	; 0x40
 8000dac:	f01f fc6c 	bl	8020688 <_ZdlPvj>
 8000db0:	4620      	mov	r0, r4
 8000db2:	bd10      	pop	{r4, pc}

08000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000db4:	b510      	push	{r4, lr}
 8000db6:	4b03      	ldr	r3, [pc, #12]	; (8000dc4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000db8:	6003      	str	r3, [r0, #0]
 8000dba:	4604      	mov	r4, r0
 8000dbc:	f009 fcfb 	bl	800a7b6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000dc0:	4620      	mov	r0, r4
 8000dc2:	bd10      	pop	{r4, pc}
 8000dc4:	08021fcc 	.word	0x08021fcc

08000dc8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000dc8:	b510      	push	{r4, lr}
 8000dca:	4604      	mov	r4, r0
 8000dcc:	f7ff fff2 	bl	8000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dd0:	4620      	mov	r0, r4
 8000dd2:	f242 7144 	movw	r1, #10052	; 0x2744
 8000dd6:	f01f fc57 	bl	8020688 <_ZdlPvj>
 8000dda:	4620      	mov	r0, r4
 8000ddc:	bd10      	pop	{r4, pc}
	...

08000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000de0:	b510      	push	{r4, lr}
 8000de2:	4b03      	ldr	r3, [pc, #12]	; (8000df0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000de4:	6003      	str	r3, [r0, #0]
 8000de6:	4604      	mov	r4, r0
 8000de8:	f009 fce5 	bl	800a7b6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000dec:	4620      	mov	r0, r4
 8000dee:	bd10      	pop	{r4, pc}
 8000df0:	08021f98 	.word	0x08021f98

08000df4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000df4:	b510      	push	{r4, lr}
 8000df6:	4604      	mov	r4, r0
 8000df8:	f7ff fff2 	bl	8000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dfc:	4620      	mov	r0, r4
 8000dfe:	2118      	movs	r1, #24
 8000e00:	f01f fc42 	bl	8020688 <_ZdlPvj>
 8000e04:	4620      	mov	r0, r4
 8000e06:	bd10      	pop	{r4, pc}

08000e08 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000e08:	b510      	push	{r4, lr}
 8000e0a:	4b09      	ldr	r3, [pc, #36]	; (8000e30 <_ZN12FrontendHeapD1Ev+0x28>)
 8000e0c:	6003      	str	r3, [r0, #0]
 8000e0e:	4604      	mov	r4, r0
 8000e10:	f500 501d 	add.w	r0, r0, #10048	; 0x2740
 8000e14:	3030      	adds	r0, #48	; 0x30
 8000e16:	f7ff ffb9 	bl	8000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000e1a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000e1e:	f7ff ffc9 	bl	8000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e22:	f104 0014 	add.w	r0, r4, #20
 8000e26:	f7ff ffdb 	bl	8000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e2a:	4620      	mov	r0, r4
 8000e2c:	bd10      	pop	{r4, pc}
 8000e2e:	bf00      	nop
 8000e30:	08022034 	.word	0x08022034

08000e34 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000e34:	b508      	push	{r3, lr}
 8000e36:	4802      	ldr	r0, [pc, #8]	; (8000e40 <__tcf_0+0xc>)
 8000e38:	f7ff ffe6 	bl	8000e08 <_ZN12FrontendHeapD1Ev>
 8000e3c:	bd08      	pop	{r3, pc}
 8000e3e:	bf00      	nop
 8000e40:	200001a4 	.word	0x200001a4

08000e44 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000e44:	b510      	push	{r4, lr}
 8000e46:	4604      	mov	r4, r0
 8000e48:	f7ff ffde 	bl	8000e08 <_ZN12FrontendHeapD1Ev>
 8000e4c:	4620      	mov	r0, r4
 8000e4e:	f642 110c 	movw	r1, #10508	; 0x290c
 8000e52:	f01f fc19 	bl	8020688 <_ZdlPvj>
 8000e56:	4620      	mov	r0, r4
 8000e58:	bd10      	pop	{r4, pc}
	...

08000e5c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000e5c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000e60:	f001 f9c6 	bl	80021f0 <_ZN14BitmapDatabase11getInstanceEv>
 8000e64:	4605      	mov	r5, r0
 8000e66:	f001 f9c7 	bl	80021f8 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000e6a:	2400      	movs	r4, #0
 8000e6c:	4601      	mov	r1, r0
 8000e6e:	4623      	mov	r3, r4
 8000e70:	4628      	mov	r0, r5
 8000e72:	4622      	mov	r2, r4
 8000e74:	9400      	str	r4, [sp, #0]
 8000e76:	f013 fb07 	bl	8014488 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000e7a:	4b26      	ldr	r3, [pc, #152]	; (8000f14 <touchgfx_init+0xb8>)
 8000e7c:	4a26      	ldr	r2, [pc, #152]	; (8000f18 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8000e7e:	4d27      	ldr	r5, [pc, #156]	; (8000f1c <touchgfx_init+0xc0>)
 8000e80:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000e82:	4620      	mov	r0, r4
 8000e84:	f003 ff54 	bl	8004d30 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000e88:	4825      	ldr	r0, [pc, #148]	; (8000f20 <touchgfx_init+0xc4>)
 8000e8a:	f013 fa65 	bl	8014358 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000e8e:	782b      	ldrb	r3, [r5, #0]
 8000e90:	f3bf 8f5b 	dmb	ish
 8000e94:	07db      	lsls	r3, r3, #31
 8000e96:	d436      	bmi.n	8000f06 <touchgfx_init+0xaa>
 8000e98:	4628      	mov	r0, r5
 8000e9a:	f01f fbf7 	bl	802068c <__cxa_guard_acquire>
 8000e9e:	b390      	cbz	r0, 8000f06 <touchgfx_init+0xaa>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8000ea0:	4c20      	ldr	r4, [pc, #128]	; (8000f24 <touchgfx_init+0xc8>)
 8000ea2:	4f21      	ldr	r7, [pc, #132]	; (8000f28 <touchgfx_init+0xcc>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000ea4:	4b21      	ldr	r3, [pc, #132]	; (8000f2c <touchgfx_init+0xd0>)
 8000ea6:	6023      	str	r3, [r4, #0]
 8000ea8:	f107 0644 	add.w	r6, r7, #68	; 0x44
 8000eac:	f104 0014 	add.w	r0, r4, #20
 8000eb0:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8000eb4:	6060      	str	r0, [r4, #4]
 8000eb6:	f8c4 8008 	str.w	r8, [r4, #8]
 8000eba:	60e7      	str	r7, [r4, #12]
 8000ebc:	6126      	str	r6, [r4, #16]
 8000ebe:	f009 fc7b 	bl	800a7b8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ec2:	4b1b      	ldr	r3, [pc, #108]	; (8000f30 <touchgfx_init+0xd4>)
 8000ec4:	6163      	str	r3, [r4, #20]
 8000ec6:	4640      	mov	r0, r8
 8000ec8:	f009 fc76 	bl	800a7b8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ecc:	4b19      	ldr	r3, [pc, #100]	; (8000f34 <touchgfx_init+0xd8>)
 8000ece:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000ed0:	4638      	mov	r0, r7
 8000ed2:	f009 fc71 	bl	800a7b8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ed6:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
 8000eda:	4a17      	ldr	r2, [pc, #92]	; (8000f38 <touchgfx_init+0xdc>)
 8000edc:	f8c3 2770 	str.w	r2, [r3, #1904]	; 0x770
 8000ee0:	f503 60f6 	add.w	r0, r3, #1968	; 0x7b0
 8000ee4:	f003 ffa0 	bl	8004e28 <_ZN5ModelC1Ev>
 8000ee8:	4622      	mov	r2, r4
 8000eea:	f107 0140 	add.w	r1, r7, #64	; 0x40
 8000eee:	4630      	mov	r0, r6
 8000ef0:	f003 ff90 	bl	8004e14 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8000ef4:	4630      	mov	r0, r6
 8000ef6:	f001 fc93 	bl	8002820 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8000efa:	4810      	ldr	r0, [pc, #64]	; (8000f3c <touchgfx_init+0xe0>)
 8000efc:	f01f fc96 	bl	802082c <atexit>
 8000f00:	4628      	mov	r0, r5
 8000f02:	f01f fbcf 	bl	80206a4 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8000f06:	480e      	ldr	r0, [pc, #56]	; (8000f40 <touchgfx_init+0xe4>)
}
 8000f08:	b002      	add	sp, #8
 8000f0a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8000f0e:	f7ff bc3e 	b.w	800078e <_ZN11TouchGFXHAL10initializeEv>
 8000f12:	bf00      	nop
 8000f14:	20015610 	.word	0x20015610
 8000f18:	200038d0 	.word	0x200038d0
 8000f1c:	200001a0 	.word	0x200001a0
 8000f20:	20000008 	.word	0x20000008
 8000f24:	200001a4 	.word	0x200001a4
 8000f28:	20002914 	.word	0x20002914
 8000f2c:	08022034 	.word	0x08022034
 8000f30:	08021f98 	.word	0x08021f98
 8000f34:	08021fcc 	.word	0x08021fcc
 8000f38:	08022000 	.word	0x08022000
 8000f3c:	08000e35 	.word	0x08000e35
 8000f40:	20003854 	.word	0x20003854

08000f44 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8000f44:	4801      	ldr	r0, [pc, #4]	; (8000f4c <touchgfx_taskEntry+0x8>)
 8000f46:	f7ff bc24 	b.w	8000792 <_ZN11TouchGFXHAL9taskEntryEv>
 8000f4a:	bf00      	nop
 8000f4c:	20003854 	.word	0x20003854

08000f50 <_GLOBAL__sub_I_touchgfx_init>:
}
 8000f50:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
 8000f52:	4c23      	ldr	r4, [pc, #140]	; (8000fe0 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static STM32DMA dma;
 8000f54:	4e23      	ldr	r6, [pc, #140]	; (8000fe4 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8000f56:	4b24      	ldr	r3, [pc, #144]	; (8000fe8 <_GLOBAL__sub_I_touchgfx_init+0x98>)
static LCD16bpp display;
 8000f58:	4d24      	ldr	r5, [pc, #144]	; (8000fec <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 8000f5a:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8000f5c:	4630      	mov	r0, r6
 8000f5e:	f7ff fd79 	bl	8000a54 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8000f62:	4628      	mov	r0, r5
 8000f64:	f016 fb9a 	bl	801769c <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 8000f68:	4b21      	ldr	r3, [pc, #132]	; (8000ff0 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
        instance = this;
 8000f6a:	4822      	ldr	r0, [pc, #136]	; (8000ff4 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
          lastRenderMethod(HARDWARE)
 8000f6c:	60dc      	str	r4, [r3, #12]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f6e:	4c22      	ldr	r4, [pc, #136]	; (8000ff8 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
        instance = this;
 8000f70:	6003      	str	r3, [r0, #0]
          lastRenderMethod(HARDWARE)
 8000f72:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f74:	20f0      	movs	r0, #240	; 0xf0
          lastRenderMethod(HARDWARE)
 8000f76:	f44f 7180 	mov.w	r1, #256	; 0x100
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f7a:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 8000f7c:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f80:	4c1e      	ldr	r4, [pc, #120]	; (8000ffc <_GLOBAL__sub_I_touchgfx_init+0xac>)
          lastRenderMethod(HARDWARE)
 8000f82:	491f      	ldr	r1, [pc, #124]	; (8001000 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f84:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 8000f86:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f8a:	4c1e      	ldr	r4, [pc, #120]	; (8001004 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8000f8c:	861a      	strh	r2, [r3, #48]	; 0x30
          lastRenderMethod(HARDWARE)
 8000f8e:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f92:	f44f 70a0 	mov.w	r0, #320	; 0x140
          lastRenderMethod(HARDWARE)
 8000f96:	6759      	str	r1, [r3, #116]	; 0x74
 8000f98:	2101      	movs	r1, #1
 8000f9a:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8000f9e:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8000fa2:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8000fa6:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8000faa:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8000fae:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8000fb2:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 8000fb6:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
 8000fba:	661a      	str	r2, [r3, #96]	; 0x60
 8000fbc:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 8000fc0:	671a      	str	r2, [r3, #112]	; 0x70
 8000fc2:	e9c3 6501 	strd	r6, r5, [r3, #4]
 8000fc6:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000fca:	8020      	strh	r0, [r4, #0]
 8000fcc:	4c0e      	ldr	r4, [pc, #56]	; (8001008 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8000fce:	f883 1034 	strb.w	r1, [r3, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000fd2:	8020      	strh	r0, [r4, #0]
        DISPLAY_ROTATION = rotate0;
 8000fd4:	480d      	ldr	r0, [pc, #52]	; (800100c <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8000fd6:	7002      	strb	r2, [r0, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8000fd8:	4a0d      	ldr	r2, [pc, #52]	; (8001010 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8000fda:	601a      	str	r2, [r3, #0]
}
 8000fdc:	bd70      	pop	{r4, r5, r6, pc}
 8000fde:	bf00      	nop
 8000fe0:	20002ab0 	.word	0x20002ab0
 8000fe4:	20002ab4 	.word	0x20002ab4
 8000fe8:	08021a88 	.word	0x08021a88
 8000fec:	200038d4 	.word	0x200038d4
 8000ff0:	20003854 	.word	0x20003854
 8000ff4:	200155ac 	.word	0x200155ac
 8000ff8:	200155a0 	.word	0x200155a0
 8000ffc:	200155a6 	.word	0x200155a6
 8001000:	01000001 	.word	0x01000001
 8001004:	200155a2 	.word	0x200155a2
 8001008:	200155a8 	.word	0x200155a8
 800100c:	200155a4 	.word	0x200155a4
 8001010:	08021c14 	.word	0x08021c14

08001014 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001014:	4801      	ldr	r0, [pc, #4]	; (800101c <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001016:	f7ff bcf9 	b.w	8000a0c <_ZN8STM32DMAD1Ev>
 800101a:	bf00      	nop
 800101c:	20002ab4 	.word	0x20002ab4

08001020 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001020:	4b03      	ldr	r3, [pc, #12]	; (8001030 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 8001022:	2290      	movs	r2, #144	; 0x90
 8001024:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 8001028:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 800102c:	4770      	bx	lr
 800102e:	bf00      	nop
 8001030:	e000e100 	.word	0xe000e100

08001034 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001034:	4a09      	ldr	r2, [pc, #36]	; (800105c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8001036:	490a      	ldr	r1, [pc, #40]	; (8001060 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001038:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800103a:	480a      	ldr	r0, [pc, #40]	; (8001064 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800103c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001040:	3b01      	subs	r3, #1
 8001042:	b29b      	uxth	r3, r3
 8001044:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001046:	6911      	ldr	r1, [r2, #16]
 8001048:	f3c1 010a 	ubfx	r1, r1, #0, #11
 800104c:	3901      	subs	r1, #1
 800104e:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8001050:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8001052:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001054:	f043 0301 	orr.w	r3, r3, #1
 8001058:	6353      	str	r3, [r2, #52]	; 0x34
}
 800105a:	4770      	bx	lr
 800105c:	40016800 	.word	0x40016800
 8001060:	20003950 	.word	0x20003950
 8001064:	2000394e 	.word	0x2000394e

08001068 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001068:	4b01      	ldr	r3, [pc, #4]	; (8001070 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 800106a:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 800106e:	4770      	bx	lr
 8001070:	40016800 	.word	0x40016800

08001074 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001074:	4b02      	ldr	r3, [pc, #8]	; (8001080 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001076:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001078:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800107c:	625a      	str	r2, [r3, #36]	; 0x24
}
 800107e:	4770      	bx	lr
 8001080:	40016800 	.word	0x40016800

08001084 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001084:	b570      	push	{r4, r5, r6, lr}
 8001086:	4604      	mov	r4, r0
    HAL::initialize();
 8001088:	f009 ffb5 	bl	800aff6 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800108c:	6823      	ldr	r3, [r4, #0]
 800108e:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8001090:	f00f ffde 	bl	8011050 <_ZN8touchgfx11Application11getInstanceEv>
 8001094:	4601      	mov	r1, r0
 8001096:	4620      	mov	r0, r4
 8001098:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800109a:	6823      	ldr	r3, [r4, #0]
 800109c:	4a05      	ldr	r2, [pc, #20]	; (80010b4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800109e:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 80010a2:	4620      	mov	r0, r4
 80010a4:	46ac      	mov	ip, r5
 80010a6:	2300      	movs	r3, #0
}
 80010a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80010ac:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 80010b0:	4760      	bx	ip
 80010b2:	bf00      	nop
 80010b4:	d0025800 	.word	0xd0025800

080010b8 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 80010b8:	f009 bf84 	b.w	800afc4 <_ZN8touchgfx3HAL10beginFrameEv>

080010bc <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    if (frameBufferUpdatedThisFrame)
 80010bc:	f890 304b 	ldrb.w	r3, [r0, #75]	; 0x4b
 80010c0:	b113      	cbz	r3, 80010c8 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xc>
        refreshRequested = true;
 80010c2:	4b02      	ldr	r3, [pc, #8]	; (80010cc <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x10>)
 80010c4:	2201      	movs	r2, #1
 80010c6:	701a      	strb	r2, [r3, #0]
    HAL::endFrame();
 80010c8:	f009 bf88 	b.w	800afdc <_ZN8touchgfx3HAL8endFrameEv>
 80010cc:	2000394c 	.word	0x2000394c

080010d0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80010d0:	f009 bf42 	b.w	800af58 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080010d4 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80010d4:	f00a b89b 	b.w	800b20e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080010d8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010d8:	4b03      	ldr	r3, [pc, #12]	; (80010e8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 80010da:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80010de:	609a      	str	r2, [r3, #8]
 80010e0:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80010e4:	609a      	str	r2, [r3, #8]
}
 80010e6:	4770      	bx	lr
 80010e8:	e000e100 	.word	0xe000e100

080010ec <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010ec:	4b08      	ldr	r3, [pc, #32]	; (8001110 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 80010ee:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80010f2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80010f6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80010fa:	f3bf 8f6f 	isb	sy
 80010fe:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001102:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001106:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800110a:	f3bf 8f6f 	isb	sy
}
 800110e:	4770      	bx	lr
 8001110:	e000e100 	.word	0xe000e100

08001114 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001114:	b510      	push	{r4, lr}
        return instance;
 8001116:	4c14      	ldr	r4, [pc, #80]	; (8001168 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001118:	6823      	ldr	r3, [r4, #0]
 800111a:	b323      	cbz	r3, 8001166 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 800111c:	4b13      	ldr	r3, [pc, #76]	; (800116c <HAL_LTDC_LineEventCallback+0x58>)
 800111e:	4a14      	ldr	r2, [pc, #80]	; (8001170 <HAL_LTDC_LineEventCallback+0x5c>)
 8001120:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001122:	8811      	ldrh	r1, [r2, #0]
 8001124:	428b      	cmp	r3, r1
 8001126:	d113      	bne.n	8001150 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001128:	4b12      	ldr	r3, [pc, #72]	; (8001174 <HAL_LTDC_LineEventCallback+0x60>)
 800112a:	8819      	ldrh	r1, [r3, #0]
 800112c:	f006 f83a 	bl	80071a4 <HAL_LTDC_ProgramLineEvent>
 8001130:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8001132:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8001136:	3301      	adds	r3, #1
 8001138:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 800113c:	f7ff fc14 	bl	8000968 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001140:	6820      	ldr	r0, [r4, #0]
 8001142:	f00a fc8f 	bl	800ba64 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001146:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 800114a:	2000      	movs	r0, #0
 800114c:	f7ff baf8 	b.w	8000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001150:	f006 f828 	bl	80071a4 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001154:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8001156:	6803      	ldr	r3, [r0, #0]
 8001158:	6a1b      	ldr	r3, [r3, #32]
 800115a:	4798      	blx	r3
    }
 800115c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001160:	2000      	movs	r0, #0
 8001162:	f7ff baee 	b.w	8000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001166:	bd10      	pop	{r4, pc}
 8001168:	200155ac 	.word	0x200155ac
 800116c:	40016800 	.word	0x40016800
 8001170:	20003950 	.word	0x20003950
 8001174:	2000394e 	.word	0x2000394e

08001178 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8001178:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;
  
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800117a:	4b06      	ldr	r3, [pc, #24]	; (8001194 <SPI5_Write+0x1c>)
{
 800117c:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001180:	681b      	ldr	r3, [r3, #0]
 8001182:	4805      	ldr	r0, [pc, #20]	; (8001198 <SPI5_Write+0x20>)
 8001184:	2201      	movs	r2, #1
 8001186:	f10d 0106 	add.w	r1, sp, #6
 800118a:	f006 fd1c 	bl	8007bc6 <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 800118e:	b003      	add	sp, #12
 8001190:	f85d fb04 	ldr.w	pc, [sp], #4
 8001194:	20000010 	.word	0x20000010
 8001198:	20003b7c 	.word	0x20003b7c

0800119c <CountAvgFrom60sec>:
			result+=ladowarka.PomiaryCoSec[i];
 800119c:	490c      	ldr	r1, [pc, #48]	; (80011d0 <CountAvgFrom60sec+0x34>)
float CountAvgFrom60sec(){
 800119e:	b082      	sub	sp, #8
 80011a0:	2300      	movs	r3, #0
			result+=ladowarka.PomiaryCoSec[i];
 80011a2:	f203 225e 	addw	r2, r3, #606	; 0x25e
 80011a6:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 80011aa:	ed92 7a00 	vldr	s14, [r2]
 80011ae:	eddd 7a01 	vldr	s15, [sp, #4]
		for (uint8_t i=0;i<60;i++)
 80011b2:	3301      	adds	r3, #1
			result+=ladowarka.PomiaryCoSec[i];
 80011b4:	ee77 7a87 	vadd.f32	s15, s15, s14
		for (uint8_t i=0;i<60;i++)
 80011b8:	2b3c      	cmp	r3, #60	; 0x3c
			result+=ladowarka.PomiaryCoSec[i];
 80011ba:	edcd 7a01 	vstr	s15, [sp, #4]
		for (uint8_t i=0;i<60;i++)
 80011be:	d1f0      	bne.n	80011a2 <CountAvgFrom60sec+0x6>
	return result/60;
 80011c0:	ed9d 0a01 	vldr	s0, [sp, #4]
}
 80011c4:	eddf 7a03 	vldr	s15, [pc, #12]	; 80011d4 <CountAvgFrom60sec+0x38>
 80011c8:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80011cc:	b002      	add	sp, #8
 80011ce:	4770      	bx	lr
 80011d0:	20003c14 	.word	0x20003c14
 80011d4:	42700000 	.word	0x42700000

080011d8 <ZadanieDwa>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_ZadanieDwa */
__weak void ZadanieDwa(void *argument)
{
 80011d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	  static volatile uint32_t value=0; //actual value of adc measurement on battery
	  static volatile uint32_t value2=0; //actual value of adc measurement on battery  + resistor.

	  static int sec0to59=0;

		if(ladowarka.Minelo100ms){ //jesli zostalo wykryte przerwanie z liniczka7
 80011dc:	4c6a      	ldr	r4, [pc, #424]	; (8001388 <ZadanieDwa+0x1b0>)
			ladowarka.Minelo100ms=0; //kasuj flage

					//pomiar napiecia baterii
					HAL_ADC_Start(&hadc1);
 80011de:	4d6b      	ldr	r5, [pc, #428]	; (800138c <ZadanieDwa+0x1b4>)
		if(ladowarka.Minelo100ms){ //jesli zostalo wykryte przerwanie z liniczka7
 80011e0:	f8d4 3a6c 	ldr.w	r3, [r4, #2668]	; 0xa6c
 80011e4:	2b00      	cmp	r3, #0
 80011e6:	f000 8096 	beq.w	8001316 <ZadanieDwa+0x13e>
			ladowarka.Minelo100ms=0; //kasuj flage
 80011ea:	2300      	movs	r3, #0
					HAL_ADC_Start(&hadc1);
 80011ec:	4628      	mov	r0, r5
			ladowarka.Minelo100ms=0; //kasuj flage
 80011ee:	f8c4 3a6c 	str.w	r3, [r4, #2668]	; 0xa6c
					value += HAL_ADC_GetValue(&hadc1);
 80011f2:	4f67      	ldr	r7, [pc, #412]	; (8001390 <ZadanieDwa+0x1b8>)

					//pomiar napiecia na baterii i rezystorze
					HAL_ADC_Start(&hadc2);
					value2 += HAL_ADC_GetValue(&hadc2);
					liczbaPomiarow++;
 80011f4:	f8df 81b8 	ldr.w	r8, [pc, #440]	; 80013b0 <ZadanieDwa+0x1d8>
					value2 += HAL_ADC_GetValue(&hadc2);
 80011f8:	4e66      	ldr	r6, [pc, #408]	; (8001394 <ZadanieDwa+0x1bc>)
					HAL_ADC_Start(&hadc1);
 80011fa:	f004 fe27 	bl	8005e4c <HAL_ADC_Start>
					value += HAL_ADC_GetValue(&hadc1);
 80011fe:	4628      	mov	r0, r5
 8001200:	f004 fe98 	bl	8005f34 <HAL_ADC_GetValue>
 8001204:	683b      	ldr	r3, [r7, #0]
 8001206:	4418      	add	r0, r3
 8001208:	6038      	str	r0, [r7, #0]
					HAL_ADC_Start(&hadc2);
 800120a:	4863      	ldr	r0, [pc, #396]	; (8001398 <ZadanieDwa+0x1c0>)
 800120c:	f004 fe1e 	bl	8005e4c <HAL_ADC_Start>
					value2 += HAL_ADC_GetValue(&hadc2);
 8001210:	4861      	ldr	r0, [pc, #388]	; (8001398 <ZadanieDwa+0x1c0>)
 8001212:	f004 fe8f 	bl	8005f34 <HAL_ADC_GetValue>
					liczbaPomiarow++;
 8001216:	f8d8 2000 	ldr.w	r2, [r8]
					value2 += HAL_ADC_GetValue(&hadc2);
 800121a:	6833      	ldr	r3, [r6, #0]
					liczbaPomiarow++;
 800121c:	3201      	adds	r2, #1
 800121e:	210a      	movs	r1, #10
					value2 += HAL_ADC_GetValue(&hadc2);
 8001220:	4418      	add	r0, r3
					liczbaPomiarow++;
 8001222:	f8c8 2000 	str.w	r2, [r8]
 8001226:	fb92 f3f1 	sdiv	r3, r2, r1
 800122a:	fb01 2213 	mls	r2, r1, r3, r2
					value2 += HAL_ADC_GetValue(&hadc2);
 800122e:	6030      	str	r0, [r6, #0]

					/****** jesli minela sekunda ->10tickow co 100ms********/

					if(liczbaPomiarow%10==0){ //jesli minela sekunda
 8001230:	2a00      	cmp	r2, #0
 8001232:	d170      	bne.n	8001316 <ZadanieDwa+0x13e>
						ladowarka.BatteryVoltage=(value/10) * Vdd / 4096.0f; // napiecie na baterii
 8001234:	683a      	ldr	r2, [r7, #0]
 8001236:	fbb2 f3f1 	udiv	r3, r2, r1
 800123a:	ee07 3a10 	vmov	s14, r3
 800123e:	ed9f 6a57 	vldr	s12, [pc, #348]	; 800139c <ZadanieDwa+0x1c4>
 8001242:	eddf 6a57 	vldr	s13, [pc, #348]	; 80013a0 <ZadanieDwa+0x1c8>
 8001246:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800124a:	ee27 7a06 	vmul.f32	s14, s14, s12
 800124e:	ee27 7a26 	vmul.f32	s14, s14, s13
 8001252:	ed84 7a00 	vstr	s14, [r4]
						ladowarka.ChargingCurrent=(value2/10) * Vdd / 4096.0f; // napiecie na baterii i rezystorze,
 8001256:	6833      	ldr	r3, [r6, #0]
 8001258:	fbb3 f3f1 	udiv	r3, r3, r1
 800125c:	ee07 3a90 	vmov	s15, r3
 8001260:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001264:	4b4f      	ldr	r3, [pc, #316]	; (80013a4 <ZadanieDwa+0x1cc>)
 8001266:	ee67 7a86 	vmul.f32	s15, s15, s12
 800126a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800126e:	edc3 7a00 	vstr	s15, [r3]
						ladowarka.ChargingCurrent=(ladowarka.ChargingCurrent-ladowarka.BatteryVoltage)*1000; //	Jako ze rezystor jest 1Ohm, to prad jest rowny napiecu. wynik w [mA]
 8001272:	edd3 7a00 	vldr	s15, [r3]
 8001276:	ed94 7a00 	vldr	s14, [r4]
 800127a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800127e:	ed9f 7a4a 	vldr	s14, [pc, #296]	; 80013a8 <ZadanieDwa+0x1d0>
 8001282:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001286:	edc3 7a00 	vstr	s15, [r3]

						if (ladowarka.ChargeStarted){ //jesli zaczeto ladwowac
 800128a:	6923      	ldr	r3, [r4, #16]
 800128c:	2b00      	cmp	r3, #0
 800128e:	d03d      	beq.n	800130c <ZadanieDwa+0x134>
							if (ladowarka.CzsasLadowaniaWSec<1) {ladowarka.NapiecieBaterii[0]=ladowarka.BatteryVoltage;ladowarka.narysujPunktNaWykresieMin=1; }//dla 0 pomiaru dodaj od razy do tablicy oraz wyplotuj na obu wykreasch.
 8001290:	f8d4 3a78 	ldr.w	r3, [r4, #2680]	; 0xa78
							ladowarka.CzsasLadowaniaWSec++; //jesli zaczal sie proces ladowana ziwekszja wartosc czas ladowania w sec
							ladowarka.narysujPunktNaWykresie=1; //zezwol na narysowanie danej na wykresie


							/********* dodawanie co 1 sek wartosc pomiaru do tabeli********/
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 8001294:	f8df 911c 	ldr.w	r9, [pc, #284]	; 80013b4 <ZadanieDwa+0x1dc>
							if (ladowarka.CzsasLadowaniaWSec<1) {ladowarka.NapiecieBaterii[0]=ladowarka.BatteryVoltage;ladowarka.narysujPunktNaWykresieMin=1; }//dla 0 pomiaru dodaj od razy do tablicy oraz wyplotuj na obu wykreasch.
 8001298:	2b00      	cmp	r3, #0
 800129a:	bfdf      	itttt	le
 800129c:	6823      	ldrle	r3, [r4, #0]
 800129e:	61a3      	strle	r3, [r4, #24]
 80012a0:	2301      	movle	r3, #1
 80012a2:	f8c4 3a74 	strle.w	r3, [r4, #2676]	; 0xa74
							if (ladowarka.BatteryVoltage>ladowarka.MaxBatteryVoltage) ladowarka.MaxBatteryVoltage=ladowarka.BatteryVoltage; //uaktualnij max wartosc.
 80012a6:	ed94 7a00 	vldr	s14, [r4]
 80012aa:	edd4 7a01 	vldr	s15, [r4, #4]
 80012ae:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80012b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80012b6:	bfc4      	itt	gt
 80012b8:	6823      	ldrgt	r3, [r4, #0]
 80012ba:	6063      	strgt	r3, [r4, #4]
							ladowarka.CzsasLadowaniaWSec++; //jesli zaczal sie proces ladowana ziwekszja wartosc czas ladowania w sec
 80012bc:	f8d4 3a78 	ldr.w	r3, [r4, #2680]	; 0xa78
 80012c0:	3301      	adds	r3, #1
 80012c2:	f8c4 3a78 	str.w	r3, [r4, #2680]	; 0xa78
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 80012c6:	f8d9 3000 	ldr.w	r3, [r9]
							ladowarka.narysujPunktNaWykresie=1; //zezwol na narysowanie danej na wykresie
 80012ca:	f04f 0a01 	mov.w	sl, #1
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 80012ce:	eb03 020a 	add.w	r2, r3, sl
 80012d2:	f203 235e 	addw	r3, r3, #606	; 0x25e
							ladowarka.narysujPunktNaWykresie=1; //zezwol na narysowanie danej na wykresie
 80012d6:	f8c4 aa70 	str.w	sl, [r4, #2672]	; 0xa70
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 80012da:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 80012de:	6821      	ldr	r1, [r4, #0]
 80012e0:	f8c9 2000 	str.w	r2, [r9]
							if (sec0to59>59) {	//jesli mamy 10 elementow w tabeli (minelo 10sec) usrednij i dodaj wartosc do NapiecieBaterii
 80012e4:	2a3b      	cmp	r2, #59	; 0x3b
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 80012e6:	6019      	str	r1, [r3, #0]
							if (sec0to59>59) {	//jesli mamy 10 elementow w tabeli (minelo 10sec) usrednij i dodaj wartosc do NapiecieBaterii
 80012e8:	dd10      	ble.n	800130c <ZadanieDwa+0x134>
								ladowarka.NapiecieBaterii[ladowarka.CzsasLadowaniaWSec/60]=CountAvgFrom60sec(); // TO DO srednia z 10 pomiarow
 80012ea:	233c      	movs	r3, #60	; 0x3c
 80012ec:	f8d4 0a78 	ldr.w	r0, [r4, #2680]	; 0xa78
 80012f0:	fb90 f0f3 	sdiv	r0, r0, r3
 80012f4:	f7ff ff52 	bl	800119c <CountAvgFrom60sec>
 80012f8:	3006      	adds	r0, #6
 80012fa:	eb04 0080 	add.w	r0, r4, r0, lsl #2
								sec0to59=0;
 80012fe:	2300      	movs	r3, #0
								ladowarka.NapiecieBaterii[ladowarka.CzsasLadowaniaWSec/60]=CountAvgFrom60sec(); // TO DO srednia z 10 pomiarow
 8001300:	ed80 0a00 	vstr	s0, [r0]
								sec0to59=0;
 8001304:	f8c9 3000 	str.w	r3, [r9]

								ladowarka.narysujPunktNaWykresieMin=1;//zezwol na narysowanie na wykresie minut.
 8001308:	f8c4 aa74 	str.w	sl, [r4, #2676]	; 0xa74
							}

						}
						liczbaPomiarow=0; //po 1 sek ustaw to na 0
 800130c:	2300      	movs	r3, #0
						value=0; //resetuj pomiar napiecia na baterii
 800130e:	603b      	str	r3, [r7, #0]
						liczbaPomiarow=0; //po 1 sek ustaw to na 0
 8001310:	f8c8 3000 	str.w	r3, [r8]
						value2=0; //resetuj  napiecie na baterii i rezystorze,
 8001314:	6033      	str	r3, [r6, #0]


					}

					/*************** generowanie napiecia ***************************/
					if(ladowarka.ChargeStarted==1 && ladowarka.UstawioneNapiecieNaopAmpie==0 ) { //jesli kliknieto przycik na GUI START   i nie ustawiono jeszce napiecia na op ampie
 8001316:	6923      	ldr	r3, [r4, #16]
 8001318:	2b01      	cmp	r3, #1
 800131a:	d119      	bne.n	8001350 <ZadanieDwa+0x178>
 800131c:	6963      	ldr	r3, [r4, #20]
 800131e:	b9bb      	cbnz	r3, 8001350 <ZadanieDwa+0x178>
						/********* ustawienie poprawnego napiecia************/
						int napiecie=4095;//domyslnie 0
						if (ladowarka.LoadingCurrent==400) napiecie=3100;
 8001320:	68a3      	ldr	r3, [r4, #8]
 8001322:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 8001326:	d026      	beq.n	8001376 <ZadanieDwa+0x19e>
						else if (ladowarka.LoadingCurrent==300) napiecie=3250;
 8001328:	68a3      	ldr	r3, [r4, #8]
 800132a:	f5b3 7f96 	cmp.w	r3, #300	; 0x12c
 800132e:	d025      	beq.n	800137c <ZadanieDwa+0x1a4>
						else if (ladowarka.LoadingCurrent==200) napiecie=3530;
 8001330:	68a3      	ldr	r3, [r4, #8]
 8001332:	2bc8      	cmp	r3, #200	; 0xc8
 8001334:	d025      	beq.n	8001382 <ZadanieDwa+0x1aa>
						else if (ladowarka.LoadingCurrent==100) napiecie=3700;
 8001336:	68a1      	ldr	r1, [r4, #8]
 8001338:	f640 73ff 	movw	r3, #4095	; 0xfff
 800133c:	f640 6274 	movw	r2, #3700	; 0xe74
 8001340:	2964      	cmp	r1, #100	; 0x64
 8001342:	bf08      	it	eq
 8001344:	4613      	moveq	r3, r2
							HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, napiecie);  //ustaw poprawne napiece tutaj (3V)
 8001346:	4819      	ldr	r0, [pc, #100]	; (80013ac <ZadanieDwa+0x1d4>)
 8001348:	2200      	movs	r2, #0
 800134a:	2110      	movs	r1, #16
 800134c:	f004 ff55 	bl	80061fa <HAL_DAC_SetValue>
							//ladowarka.UstawioneNapiecieNaopAmpie=1;
					}

					/************** sprawdzenie czy pomiar nie ma sie juz zakonczyc*****************/
					if (ladowarka.CzsasLadowaniaWSec>=ladowarka.ChargingTime*60*60){
 8001350:	f8d4 2a78 	ldr.w	r2, [r4, #2680]	; 0xa78
 8001354:	68e3      	ldr	r3, [r4, #12]
 8001356:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800135a:	434b      	muls	r3, r1
 800135c:	429a      	cmp	r2, r3
 800135e:	db06      	blt.n	800136e <ZadanieDwa+0x196>
						HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, 4095);  //ustaw max napiecie zeby nie ladowac.
 8001360:	4812      	ldr	r0, [pc, #72]	; (80013ac <ZadanieDwa+0x1d4>)
 8001362:	f640 73ff 	movw	r3, #4095	; 0xfff
 8001366:	2200      	movs	r2, #0
 8001368:	2110      	movs	r1, #16
 800136a:	f004 ff46 	bl	80061fa <HAL_DAC_SetValue>
					}



    osDelay(1); //to chyba ma zostac?
 800136e:	2001      	movs	r0, #1
 8001370:	f007 f910 	bl	8008594 <osDelay>
  {
 8001374:	e734      	b.n	80011e0 <ZadanieDwa+0x8>
						if (ladowarka.LoadingCurrent==400) napiecie=3100;
 8001376:	f640 431c 	movw	r3, #3100	; 0xc1c
 800137a:	e7e4      	b.n	8001346 <ZadanieDwa+0x16e>
						else if (ladowarka.LoadingCurrent==300) napiecie=3250;
 800137c:	f640 43b2 	movw	r3, #3250	; 0xcb2
 8001380:	e7e1      	b.n	8001346 <ZadanieDwa+0x16e>
						else if (ladowarka.LoadingCurrent==200) napiecie=3530;
 8001382:	f640 53ca 	movw	r3, #3530	; 0xdca
 8001386:	e7de      	b.n	8001346 <ZadanieDwa+0x16e>
 8001388:	20003c14 	.word	0x20003c14
 800138c:	20003960 	.word	0x20003960
 8001390:	2000469c 	.word	0x2000469c
 8001394:	200046a0 	.word	0x200046a0
 8001398:	200039a8 	.word	0x200039a8
 800139c:	404851ec 	.word	0x404851ec
 80013a0:	39800000 	.word	0x39800000
 80013a4:	20004690 	.word	0x20004690
 80013a8:	447a0000 	.word	0x447a0000
 80013ac:	200039f8 	.word	0x200039f8
 80013b0:	20004694 	.word	0x20004694
 80013b4:	20004698 	.word	0x20004698

080013b8 <SystemClock_Config>:
{
 80013b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80013ba:	b0a1      	sub	sp, #132	; 0x84
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80013bc:	2210      	movs	r2, #16
 80013be:	2100      	movs	r1, #0
 80013c0:	a80a      	add	r0, sp, #40	; 0x28
 80013c2:	f01f fb9b 	bl	8020afc <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80013c6:	2214      	movs	r2, #20
 80013c8:	2100      	movs	r1, #0
 80013ca:	a803      	add	r0, sp, #12
 80013cc:	f01f fb96 	bl	8020afc <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80013d0:	2100      	movs	r1, #0
 80013d2:	2230      	movs	r2, #48	; 0x30
 80013d4:	a814      	add	r0, sp, #80	; 0x50
 80013d6:	f01f fb91 	bl	8020afc <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 80013da:	2400      	movs	r4, #0
 80013dc:	4b22      	ldr	r3, [pc, #136]	; (8001468 <SystemClock_Config+0xb0>)
 80013de:	9401      	str	r4, [sp, #4]
 80013e0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80013e2:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80013e6:	641a      	str	r2, [r3, #64]	; 0x40
 80013e8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80013ea:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80013ee:	9301      	str	r3, [sp, #4]
 80013f0:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80013f2:	4b1e      	ldr	r3, [pc, #120]	; (800146c <SystemClock_Config+0xb4>)
 80013f4:	9402      	str	r4, [sp, #8]
 80013f6:	681a      	ldr	r2, [r3, #0]
 80013f8:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 80013fc:	601a      	str	r2, [r3, #0]
 80013fe:	681b      	ldr	r3, [r3, #0]
 8001400:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001404:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001406:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001408:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800140a:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800140e:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001412:	2502      	movs	r5, #2
 8001414:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8001418:	e9cd 530e 	strd	r5, r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 800141c:	2708      	movs	r7, #8
 800141e:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001422:	2604      	movs	r6, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001424:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001426:	e9cd 7310 	strd	r7, r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800142a:	9512      	str	r5, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 800142c:	9613      	str	r6, [sp, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800142e:	f005 fed7 	bl	80071e0 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001432:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001434:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001438:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 800143c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001440:	e9cd 1306 	strd	r1, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001444:	a803      	add	r0, sp, #12
 8001446:	2105      	movs	r1, #5
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001448:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800144a:	f006 f8a1 	bl	8007590 <HAL_RCC_ClockConfig>
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 800144e:	23c0      	movs	r3, #192	; 0xc0
 8001450:	9318      	str	r3, [sp, #96]	; 0x60
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001452:	a814      	add	r0, sp, #80	; 0x50
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001454:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001458:	9714      	str	r7, [sp, #80]	; 0x50
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 800145a:	961a      	str	r6, [sp, #104]	; 0x68
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 800145c:	931d      	str	r3, [sp, #116]	; 0x74
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800145e:	f006 f971 	bl	8007744 <HAL_RCCEx_PeriphCLKConfig>
}
 8001462:	b021      	add	sp, #132	; 0x84
 8001464:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001466:	bf00      	nop
 8001468:	40023800 	.word	0x40023800
 800146c:	40007000 	.word	0x40007000

08001470 <main>:
{
 8001470:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8001474:	b09b      	sub	sp, #108	; 0x6c
  HAL_Init();
 8001476:	f004 fc03 	bl	8005c80 <HAL_Init>
  SystemClock_Config();
 800147a:	f7ff ff9d 	bl	80013b8 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800147e:	2214      	movs	r2, #20
 8001480:	2100      	movs	r1, #0
 8001482:	a80d      	add	r0, sp, #52	; 0x34
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001484:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001486:	f01f fb39 	bl	8020afc <memset>
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800148a:	4bc6      	ldr	r3, [pc, #792]	; (80017a4 <main+0x334>)
 800148c:	9400      	str	r4, [sp, #0]
 800148e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001490:	48c5      	ldr	r0, [pc, #788]	; (80017a8 <main+0x338>)
  hi2c3.Instance = I2C3;
 8001492:	4ec6      	ldr	r6, [pc, #792]	; (80017ac <main+0x33c>)
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001494:	f042 0220 	orr.w	r2, r2, #32
 8001498:	631a      	str	r2, [r3, #48]	; 0x30
 800149a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800149c:	f002 0220 	and.w	r2, r2, #32
 80014a0:	9200      	str	r2, [sp, #0]
 80014a2:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80014a4:	9401      	str	r4, [sp, #4]
 80014a6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014a8:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80014ac:	631a      	str	r2, [r3, #48]	; 0x30
 80014ae:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014b0:	f002 0280 	and.w	r2, r2, #128	; 0x80
 80014b4:	9201      	str	r2, [sp, #4]
 80014b6:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80014b8:	9402      	str	r4, [sp, #8]
 80014ba:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014bc:	f042 0204 	orr.w	r2, r2, #4
 80014c0:	631a      	str	r2, [r3, #48]	; 0x30
 80014c2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014c4:	f002 0204 	and.w	r2, r2, #4
 80014c8:	9202      	str	r2, [sp, #8]
 80014ca:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80014cc:	9403      	str	r4, [sp, #12]
 80014ce:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014d0:	f042 0201 	orr.w	r2, r2, #1
 80014d4:	631a      	str	r2, [r3, #48]	; 0x30
 80014d6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014d8:	f002 0201 	and.w	r2, r2, #1
 80014dc:	9203      	str	r2, [sp, #12]
 80014de:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80014e0:	9404      	str	r4, [sp, #16]
 80014e2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014e4:	f042 0202 	orr.w	r2, r2, #2
 80014e8:	631a      	str	r2, [r3, #48]	; 0x30
 80014ea:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014ec:	f002 0202 	and.w	r2, r2, #2
 80014f0:	9204      	str	r2, [sp, #16]
 80014f2:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80014f4:	9405      	str	r4, [sp, #20]
 80014f6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014f8:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80014fc:	631a      	str	r2, [r3, #48]	; 0x30
 80014fe:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001500:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001504:	9205      	str	r2, [sp, #20]
 8001506:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001508:	9406      	str	r4, [sp, #24]
 800150a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800150c:	f042 0210 	orr.w	r2, r2, #16
 8001510:	631a      	str	r2, [r3, #48]	; 0x30
 8001512:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001514:	f002 0210 	and.w	r2, r2, #16
 8001518:	9206      	str	r2, [sp, #24]
 800151a:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800151c:	9407      	str	r4, [sp, #28]
 800151e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001520:	f042 0208 	orr.w	r2, r2, #8
 8001524:	631a      	str	r2, [r3, #48]	; 0x30
 8001526:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001528:	f003 0308 	and.w	r3, r3, #8
 800152c:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800152e:	4622      	mov	r2, r4
 8001530:	2104      	movs	r1, #4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001532:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001534:	f005 f858 	bl	80065e8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 8001538:	489d      	ldr	r0, [pc, #628]	; (80017b0 <main+0x340>)
 800153a:	4622      	mov	r2, r4
 800153c:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001540:	f005 f852 	bl	80065e8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001544:	4622      	mov	r2, r4
 8001546:	489b      	ldr	r0, [pc, #620]	; (80017b4 <main+0x344>)
 8001548:	f44f 5140 	mov.w	r1, #12288	; 0x3000
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800154c:	2501      	movs	r5, #1
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 800154e:	f005 f84b 	bl	80065e8 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001552:	2702      	movs	r7, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001554:	f04f 0b04 	mov.w	fp, #4
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001558:	4893      	ldr	r0, [pc, #588]	; (80017a8 <main+0x338>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800155a:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800155c:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800155e:	e9cd b50d 	strd	fp, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001562:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001564:	f004 ff58 	bl	8006418 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8001568:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800156c:	4890      	ldr	r0, [pc, #576]	; (80017b0 <main+0x340>)
 800156e:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001570:	e9cd 250d 	strd	r2, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001574:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001578:	f004 ff4e 	bl	8006418 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800157c:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 800157e:	f44f 5240 	mov.w	r2, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001582:	488c      	ldr	r0, [pc, #560]	; (80017b4 <main+0x344>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001584:	e9cd 250d 	strd	r2, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001588:	e9cd 470f 	strd	r4, r7, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800158c:	f004 ff44 	bl	8006418 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001590:	4889      	ldr	r0, [pc, #548]	; (80017b8 <main+0x348>)
 8001592:	4a8a      	ldr	r2, [pc, #552]	; (80017bc <main+0x34c>)
 8001594:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001596:	f004 fdbf 	bl	8006118 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 800159a:	4b89      	ldr	r3, [pc, #548]	; (80017c0 <main+0x350>)
 800159c:	4a89      	ldr	r2, [pc, #548]	; (80017c4 <main+0x354>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800159e:	6234      	str	r4, [r6, #32]
  hi2c3.Init.ClockSpeed = 100000;
 80015a0:	e9c6 3200 	strd	r3, r2, [r6]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80015a4:	4630      	mov	r0, r6
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80015a6:	f44f 4280 	mov.w	r2, #16384	; 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80015aa:	e9c6 2404 	strd	r2, r4, [r6, #16]
  hi2c3.Init.OwnAddress1 = 0;
 80015ae:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80015b2:	e9c6 4406 	strd	r4, r4, [r6, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80015b6:	f005 f9f9 	bl	80069ac <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 80015ba:	2110      	movs	r1, #16
 80015bc:	4630      	mov	r0, r6
 80015be:	f005 fc35 	bl	8006e2c <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 80015c2:	4621      	mov	r1, r4
 80015c4:	4630      	mov	r0, r6
 80015c6:	f005 fc50 	bl	8006e6a <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 80015ca:	487f      	ldr	r0, [pc, #508]	; (80017c8 <main+0x358>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 80015cc:	497f      	ldr	r1, [pc, #508]	; (80017cc <main+0x35c>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80015ce:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 80015d0:	f44f 7282 	mov.w	r2, #260	; 0x104
 80015d4:	e9c0 1200 	strd	r1, r2, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 80015d8:	f44f 7600 	mov.w	r6, #512	; 0x200
 80015dc:	2218      	movs	r2, #24
 80015de:	e9c0 6206 	strd	r6, r2, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 80015e2:	220a      	movs	r2, #10
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80015e4:	4e7a      	ldr	r6, [pc, #488]	; (80017d0 <main+0x360>)
  hspi5.Init.CRCPolynomial = 10;
 80015e6:	62c2      	str	r2, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 80015e8:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 80015ec:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 80015f0:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 80015f4:	f006 faaa 	bl	8007b4c <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80015f8:	4a76      	ldr	r2, [pc, #472]	; (80017d4 <main+0x364>)
  SdramTiming.LoadToActiveDelay = 2;
 80015fa:	970d      	str	r7, [sp, #52]	; 0x34
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80015fc:	f04f 0810 	mov.w	r8, #16
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8001600:	e9c6 2500 	strd	r2, r5, [r6]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001604:	2240      	movs	r2, #64	; 0x40
 8001606:	e9c6 8204 	strd	r8, r2, [r6, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 800160a:	f44f 72c0 	mov.w	r2, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 800160e:	e9c6 2406 	strd	r2, r4, [r6, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001612:	f44f 6200 	mov.w	r2, #2048	; 0x800
  SdramTiming.WriteRecoveryTime = 3;
 8001616:	2303      	movs	r3, #3
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001618:	f04f 0a07 	mov.w	sl, #7
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 800161c:	e9c6 2408 	strd	r2, r4, [r6, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001620:	a90d      	add	r1, sp, #52	; 0x34
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001622:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001626:	4630      	mov	r0, r6
  SdramTiming.RPDelay = 2;
 8001628:	e9cd 3711 	strd	r3, r7, [sp, #68]	; 0x44
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800162c:	f04f 0908 	mov.w	r9, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001630:	e9c6 4b02 	strd	r4, fp, [r6, #8]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001634:	62b2      	str	r2, [r6, #40]	; 0x28
  SdramTiming.SelfRefreshTime = 4;
 8001636:	e9cd ab0e 	strd	sl, fp, [sp, #56]	; 0x38
  SdramTiming.RowCycleDelay = 7;
 800163a:	f8cd a040 	str.w	sl, [sp, #64]	; 0x40
  SdramTiming.RCDDelay = 2;
 800163e:	9713      	str	r7, [sp, #76]	; 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001640:	f006 f9aa 	bl	8007998 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001644:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001648:	a909      	add	r1, sp, #36	; 0x24
 800164a:	4630      	mov	r0, r6
  Command->AutoRefreshNumber       = 1;
 800164c:	e9cd 950a 	strd	r9, r5, [sp, #40]	; 0x28
 __IO uint32_t tmpmrd =0;
 8001650:	9408      	str	r4, [sp, #32]
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 8001652:	9509      	str	r5, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 8001654:	940c      	str	r4, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001656:	f006 f9bf 	bl	80079d8 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 800165a:	4628      	mov	r0, r5
 800165c:	f004 fb3c 	bl	8005cd8 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 8001660:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001664:	a909      	add	r1, sp, #36	; 0x24
 8001666:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001668:	e9cd 7909 	strd	r7, r9, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 800166c:	e9cd 540b 	strd	r5, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 8001670:	f006 f9b2 	bl	80079d8 <HAL_SDRAM_SendCommand>
  Command->CommandMode             = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 8001674:	2303      	movs	r3, #3
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001676:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800167a:	a909      	add	r1, sp, #36	; 0x24
 800167c:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800167e:	e9cd 3909 	strd	r3, r9, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 8001682:	e9cd b40b 	strd	fp, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001686:	f006 f9a7 	bl	80079d8 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 800168a:	f44f 720c 	mov.w	r2, #560	; 0x230
 800168e:	9208      	str	r2, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8001690:	9b08      	ldr	r3, [sp, #32]
 8001692:	930c      	str	r3, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001694:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001698:	a909      	add	r1, sp, #36	; 0x24
 800169a:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800169c:	e9cd b909 	strd	fp, r9, [sp, #36]	; 0x24
  Command->AutoRefreshNumber       = 1;
 80016a0:	950b      	str	r5, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016a2:	f006 f999 	bl	80079d8 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT); 
 80016a6:	f240 516a 	movw	r1, #1386	; 0x56a
 80016aa:	4630      	mov	r0, r6
 80016ac:	f006 f9ab 	bl	8007a06 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80016b0:	2234      	movs	r2, #52	; 0x34
 80016b2:	4621      	mov	r1, r4
 80016b4:	eb0d 0002 	add.w	r0, sp, r2
 80016b8:	f01f fa20 	bl	8020afc <memset>
  hltdc.Instance = LTDC;
 80016bc:	4e46      	ldr	r6, [pc, #280]	; (80017d8 <main+0x368>)
 80016be:	4b47      	ldr	r3, [pc, #284]	; (80017dc <main+0x36c>)
  hltdc.Init.Backcolor.Blue = 0;
 80016c0:	86b4      	strh	r4, [r6, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 80016c2:	e9c6 3400 	strd	r3, r4, [r6]
  hltdc.Init.HorizontalSync = 9;
 80016c6:	2309      	movs	r3, #9
  hltdc.Init.AccumulatedVBP = 3;
 80016c8:	f04f 0c1d 	mov.w	ip, #29
  hltdc.Init.VerticalSync = 1;
 80016cc:	e9c6 3505 	strd	r3, r5, [r6, #20]
  hltdc.Init.AccumulatedVBP = 3;
 80016d0:	2303      	movs	r3, #3
 80016d2:	e9c6 c307 	strd	ip, r3, [r6, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 80016d6:	f240 1e0d 	movw	lr, #269	; 0x10d
 80016da:	f240 1343 	movw	r3, #323	; 0x143
 80016de:	e9c6 e309 	strd	lr, r3, [r6, #36]	; 0x24
  hltdc.Init.TotalHeigh = 327;
 80016e2:	f240 1917 	movw	r9, #279	; 0x117
 80016e6:	f240 1347 	movw	r3, #327	; 0x147
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80016ea:	4630      	mov	r0, r6
  hltdc.Init.TotalHeigh = 327;
 80016ec:	e9c6 930b 	strd	r9, r3, [r6, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 80016f0:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 80016f4:	6134      	str	r4, [r6, #16]
  hltdc.Init.Backcolor.Red = 0;
 80016f6:	f886 4036 	strb.w	r4, [r6, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80016fa:	f005 fc5b 	bl	8006fb4 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 80016fe:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowX1 = 240;
 8001700:	22f0      	movs	r2, #240	; 0xf0
  pLayerCfg.Alpha0 = 0;
 8001702:	e9cd 1412 	strd	r1, r4, [sp, #72]	; 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001706:	f44f 6b80 	mov.w	fp, #1024	; 0x400
 800170a:	2105      	movs	r1, #5
  pLayerCfg.WindowY1 = 320;
 800170c:	f44f 73a0 	mov.w	r3, #320	; 0x140
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001710:	e9cd b114 	strd	fp, r1, [sp, #80]	; 0x50
  pLayerCfg.WindowY0 = 0;
 8001714:	e9cd 240e 	strd	r2, r4, [sp, #56]	; 0x38
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001718:	a90d      	add	r1, sp, #52	; 0x34
  pLayerCfg.ImageWidth = 240;
 800171a:	e9cd 4216 	strd	r4, r2, [sp, #88]	; 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800171e:	4630      	mov	r0, r6
 8001720:	4622      	mov	r2, r4
  LcdDrv = &ili9341_drv;
 8001722:	4e2f      	ldr	r6, [pc, #188]	; (80017e0 <main+0x370>)
  pLayerCfg.ImageHeight = 320;
 8001724:	9318      	str	r3, [sp, #96]	; 0x60
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001726:	e9cd 3710 	strd	r3, r7, [sp, #64]	; 0x40
  pLayerCfg.WindowX0 = 0;
 800172a:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.Backcolor.Blue = 0;
 800172c:	f8ad 4064 	strh.w	r4, [sp, #100]	; 0x64
  pLayerCfg.Backcolor.Red = 0;
 8001730:	f88d 4066 	strb.w	r4, [sp, #102]	; 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001734:	f005 fd09 	bl	800714a <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8001738:	4b2a      	ldr	r3, [pc, #168]	; (80017e4 <main+0x374>)
 800173a:	6033      	str	r3, [r6, #0]
  LcdDrv->Init();
 800173c:	681b      	ldr	r3, [r3, #0]
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 800173e:	f8df b0b8 	ldr.w	fp, [pc, #184]	; 80017f8 <main+0x388>
  hdac.Instance = DAC;
 8001742:	f8df 90b8 	ldr.w	r9, [pc, #184]	; 80017fc <main+0x38c>
  LcdDrv->Init();
 8001746:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001748:	6833      	ldr	r3, [r6, #0]
  hdma2d.Instance = DMA2D;
 800174a:	4e27      	ldr	r6, [pc, #156]	; (80017e8 <main+0x378>)
  LcdDrv->DisplayOff();
 800174c:	68db      	ldr	r3, [r3, #12]
 800174e:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 8001750:	4b26      	ldr	r3, [pc, #152]	; (80017ec <main+0x37c>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 8001752:	e9c6 470a 	strd	r4, r7, [r6, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001756:	e9c6 440c 	strd	r4, r4, [r6, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800175a:	4630      	mov	r0, r6
  hdma2d.Init.Mode = DMA2D_M2M;
 800175c:	e9c6 3400 	strd	r3, r4, [r6]
  hdma2d.Init.OutputOffset = 0;
 8001760:	e9c6 7402 	strd	r7, r4, [r6, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001764:	f004 fd5b 	bl	800621e <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001768:	4629      	mov	r1, r5
 800176a:	4630      	mov	r0, r6
 800176c:	f004 fe10 	bl	8006390 <HAL_DMA2D_ConfigLayer>
  hadc1.Instance = ADC1;
 8001770:	4e1f      	ldr	r6, [pc, #124]	; (80017f0 <main+0x380>)
  ADC_ChannelConfTypeDef sConfig = {0};
 8001772:	4621      	mov	r1, r4
 8001774:	4642      	mov	r2, r8
 8001776:	a80d      	add	r0, sp, #52	; 0x34
 8001778:	f01f f9c0 	bl	8020afc <memset>
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 800177c:	4a1d      	ldr	r2, [pc, #116]	; (80017f4 <main+0x384>)
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 800177e:	60b4      	str	r4, [r6, #8]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8001780:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8001784:	4630      	mov	r0, r6
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8001786:	e9c6 2300 	strd	r2, r3, [r6]
  hadc1.Init.ScanConvMode = DISABLE;
 800178a:	6134      	str	r4, [r6, #16]
  hadc1.Init.ContinuousConvMode = ENABLE;
 800178c:	7635      	strb	r5, [r6, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 800178e:	f886 4020 	strb.w	r4, [r6, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8001792:	62f4      	str	r4, [r6, #44]	; 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8001794:	f8c6 b028 	str.w	fp, [r6, #40]	; 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8001798:	60f4      	str	r4, [r6, #12]
  hadc1.Init.NbrOfConversion = 1;
 800179a:	61f5      	str	r5, [r6, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 800179c:	f886 4030 	strb.w	r4, [r6, #48]	; 0x30
 80017a0:	e02e      	b.n	8001800 <main+0x390>
 80017a2:	bf00      	nop
 80017a4:	40023800 	.word	0x40023800
 80017a8:	40020800 	.word	0x40020800
 80017ac:	20003a4c 	.word	0x20003a4c
 80017b0:	40020400 	.word	0x40020400
 80017b4:	40020c00 	.word	0x40020c00
 80017b8:	200039f0 	.word	0x200039f0
 80017bc:	40023000 	.word	0x40023000
 80017c0:	40005c00 	.word	0x40005c00
 80017c4:	000186a0 	.word	0x000186a0
 80017c8:	20003b7c 	.word	0x20003b7c
 80017cc:	40015000 	.word	0x40015000
 80017d0:	20003b48 	.word	0x20003b48
 80017d4:	a0000140 	.word	0xa0000140
 80017d8:	20003aa0 	.word	0x20003aa0
 80017dc:	40016800 	.word	0x40016800
 80017e0:	20003958 	.word	0x20003958
 80017e4:	2000001c 	.word	0x2000001c
 80017e8:	20003a0c 	.word	0x20003a0c
 80017ec:	4002b000 	.word	0x4002b000
 80017f0:	20003960 	.word	0x20003960
 80017f4:	40012000 	.word	0x40012000
 80017f8:	0f000001 	.word	0x0f000001
 80017fc:	200039f8 	.word	0x200039f8
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8001800:	6175      	str	r5, [r6, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8001802:	f004 fa7d 	bl	8005d00 <HAL_ADC_Init>
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001806:	a90d      	add	r1, sp, #52	; 0x34
 8001808:	4630      	mov	r0, r6
  sConfig.Rank = 1;
 800180a:	e9cd a50d 	strd	sl, r5, [sp, #52]	; 0x34
  htim7.Instance = TIM7;
 800180e:	4e37      	ldr	r6, [pc, #220]	; (80018ec <main+0x47c>)
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 8001810:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001814:	f004 fb92 	bl	8005f3c <HAL_ADC_ConfigChannel>
  htim7.Init.Prescaler = 8400-1;
 8001818:	4935      	ldr	r1, [pc, #212]	; (80018f0 <main+0x480>)
  htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 800181a:	60b4      	str	r4, [r6, #8]
  htim7.Init.Prescaler = 8400-1;
 800181c:	f242 02cf 	movw	r2, #8399	; 0x20cf
 8001820:	e9c6 1200 	strd	r1, r2, [r6]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 8001824:	4630      	mov	r0, r6
  htim7.Init.Period = 1000-1;
 8001826:	f240 32e7 	movw	r2, #999	; 0x3e7
 800182a:	60f2      	str	r2, [r6, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800182c:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001830:	61b4      	str	r4, [r6, #24]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 8001832:	f006 fd25 	bl	8008280 <HAL_TIM_Base_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 8001836:	a90d      	add	r1, sp, #52	; 0x34
 8001838:	4630      	mov	r0, r6
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800183a:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 800183e:	f006 fd39 	bl	80082b4 <HAL_TIMEx_MasterConfigSynchronization>
  hdac.Instance = DAC;
 8001842:	4a2c      	ldr	r2, [pc, #176]	; (80018f4 <main+0x484>)
 8001844:	f8c9 2000 	str.w	r2, [r9]
  if (HAL_DAC_Init(&hdac) != HAL_OK)
 8001848:	4648      	mov	r0, r9
  DAC_ChannelConfTypeDef sConfig = {0};
 800184a:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_DAC_Init(&hdac) != HAL_OK)
 800184e:	f004 fc73 	bl	8006138 <HAL_DAC_Init>
  if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 8001852:	4642      	mov	r2, r8
 8001854:	a90d      	add	r1, sp, #52	; 0x34
 8001856:	4648      	mov	r0, r9
  sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 8001858:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 800185c:	f004 fcac 	bl	80061b8 <HAL_DAC_ConfigChannel>
  ADC_ChannelConfTypeDef sConfig = {0};
 8001860:	4642      	mov	r2, r8
 8001862:	4621      	mov	r1, r4
 8001864:	a80d      	add	r0, sp, #52	; 0x34
 8001866:	f01f f949 	bl	8020afc <memset>
  hadc2.Instance = ADC2;
 800186a:	4a23      	ldr	r2, [pc, #140]	; (80018f8 <main+0x488>)
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 800186c:	4923      	ldr	r1, [pc, #140]	; (80018fc <main+0x48c>)
  hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 800186e:	6094      	str	r4, [r2, #8]
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8001870:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 8001874:	4610      	mov	r0, r2
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8001876:	e9c2 1300 	strd	r1, r3, [r2]
  hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 800187a:	e9c2 b40a 	strd	fp, r4, [r2, #40]	; 0x28
  hadc2.Init.ScanConvMode = DISABLE;
 800187e:	6114      	str	r4, [r2, #16]
  hadc2.Init.ContinuousConvMode = ENABLE;
 8001880:	7615      	strb	r5, [r2, #24]
  hadc2.Init.DiscontinuousConvMode = DISABLE;
 8001882:	f882 4020 	strb.w	r4, [r2, #32]
  hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8001886:	60d4      	str	r4, [r2, #12]
  hadc2.Init.NbrOfConversion = 1;
 8001888:	61d5      	str	r5, [r2, #28]
  hadc2.Init.DMAContinuousRequests = DISABLE;
 800188a:	f882 4030 	strb.w	r4, [r2, #48]	; 0x30
  hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 800188e:	6155      	str	r5, [r2, #20]
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 8001890:	f004 fa36 	bl	8005d00 <HAL_ADC_Init>
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 8001894:	4a18      	ldr	r2, [pc, #96]	; (80018f8 <main+0x488>)
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 8001896:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 800189a:	4610      	mov	r0, r2
 800189c:	a90d      	add	r1, sp, #52	; 0x34
  sConfig.Rank = 1;
 800189e:	e9cd 750d 	strd	r7, r5, [sp, #52]	; 0x34
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 80018a2:	f004 fb4b 	bl	8005f3c <HAL_ADC_ConfigChannel>
  MX_TouchGFX_Init();
 80018a6:	f7fe fe9e 	bl	80005e6 <MX_TouchGFX_Init>
HAL_TIM_Base_Start_IT(&htim7); //uruchomienie timera 7 (przerwanie co 1 sek)
 80018aa:	4630      	mov	r0, r6
 80018ac:	f006 fbcb 	bl	8008046 <HAL_TIM_Base_Start_IT>
HAL_DAC_Start(&hdac, DAC_CHANNEL_2);
 80018b0:	4641      	mov	r1, r8
 80018b2:	4648      	mov	r0, r9
 80018b4:	f004 fc53 	bl	800615e <HAL_DAC_Start>
HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, 4095); //ustaw max napiecie na ADC, zeby nie plynal zaden prad !ZMIENIC
 80018b8:	f640 73ff 	movw	r3, #4095	; 0xfff
 80018bc:	4622      	mov	r2, r4
 80018be:	4641      	mov	r1, r8
 80018c0:	4648      	mov	r0, r9
 80018c2:	f004 fc9a 	bl	80061fa <HAL_DAC_SetValue>
  osKernelInitialize();
 80018c6:	f006 fdd5 	bl	8008474 <osKernelInitialize>
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80018ca:	4a0d      	ldr	r2, [pc, #52]	; (8001900 <main+0x490>)
 80018cc:	480d      	ldr	r0, [pc, #52]	; (8001904 <main+0x494>)
 80018ce:	4621      	mov	r1, r4
 80018d0:	f006 fe0a 	bl	80084e8 <osThreadNew>
 80018d4:	4b0c      	ldr	r3, [pc, #48]	; (8001908 <main+0x498>)
  TaskDwaHandle = osThreadNew(ZadanieDwa, NULL, &TaskDwa_attributes);
 80018d6:	4a0d      	ldr	r2, [pc, #52]	; (800190c <main+0x49c>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80018d8:	6018      	str	r0, [r3, #0]
  TaskDwaHandle = osThreadNew(ZadanieDwa, NULL, &TaskDwa_attributes);
 80018da:	4621      	mov	r1, r4
 80018dc:	480c      	ldr	r0, [pc, #48]	; (8001910 <main+0x4a0>)
 80018de:	f006 fe03 	bl	80084e8 <osThreadNew>
 80018e2:	4b0c      	ldr	r3, [pc, #48]	; (8001914 <main+0x4a4>)
 80018e4:	6018      	str	r0, [r3, #0]
  osKernelStart();
 80018e6:	f006 fddf 	bl	80084a8 <osKernelStart>
  while (1)
 80018ea:	e7fe      	b.n	80018ea <main+0x47a>
 80018ec:	20003bd4 	.word	0x20003bd4
 80018f0:	40001400 	.word	0x40001400
 80018f4:	40007400 	.word	0x40007400
 80018f8:	200039a8 	.word	0x200039a8
 80018fc:	40012100 	.word	0x40012100
 8001900:	08022054 	.word	0x08022054
 8001904:	080005eb 	.word	0x080005eb
 8001908:	20003954 	.word	0x20003954
 800190c:	08022078 	.word	0x08022078
 8001910:	080011d9 	.word	0x080011d9
 8001914:	2000395c 	.word	0x2000395c

08001918 <IOE_Init>:
 8001918:	4770      	bx	lr

0800191a <IOE_ITConfig>:
 800191a:	4770      	bx	lr

0800191c <IOE_Write>:
{
 800191c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout); 
 800191e:	4b09      	ldr	r3, [pc, #36]	; (8001944 <IOE_Write+0x28>)
 8001920:	f88d 2017 	strb.w	r2, [sp, #23]
 8001924:	681b      	ldr	r3, [r3, #0]
 8001926:	9302      	str	r3, [sp, #8]
 8001928:	f10d 0217 	add.w	r2, sp, #23
 800192c:	2301      	movs	r3, #1
 800192e:	9200      	str	r2, [sp, #0]
 8001930:	9301      	str	r3, [sp, #4]
 8001932:	460a      	mov	r2, r1
 8001934:	4601      	mov	r1, r0
 8001936:	4804      	ldr	r0, [pc, #16]	; (8001948 <IOE_Write+0x2c>)
 8001938:	f005 f8e0 	bl	8006afc <HAL_I2C_Mem_Write>
}
 800193c:	b007      	add	sp, #28
 800193e:	f85d fb04 	ldr.w	pc, [sp], #4
 8001942:	bf00      	nop
 8001944:	2000000c 	.word	0x2000000c
 8001948:	20003a4c 	.word	0x20003a4c

0800194c <IOE_Read>:
{
 800194c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 800194e:	2300      	movs	r3, #0
 8001950:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001954:	4b08      	ldr	r3, [pc, #32]	; (8001978 <IOE_Read+0x2c>)
 8001956:	681b      	ldr	r3, [r3, #0]
 8001958:	9302      	str	r3, [sp, #8]
{
 800195a:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800195c:	2301      	movs	r3, #1
 800195e:	f10d 0117 	add.w	r1, sp, #23
 8001962:	9100      	str	r1, [sp, #0]
 8001964:	9301      	str	r3, [sp, #4]
 8001966:	4601      	mov	r1, r0
 8001968:	4804      	ldr	r0, [pc, #16]	; (800197c <IOE_Read+0x30>)
 800196a:	f005 f957 	bl	8006c1c <HAL_I2C_Mem_Read>
}
 800196e:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8001972:	b007      	add	sp, #28
 8001974:	f85d fb04 	ldr.w	pc, [sp], #4
 8001978:	2000000c 	.word	0x2000000c
 800197c:	20003a4c 	.word	0x20003a4c

08001980 <IOE_ReadMultiple>:
{
 8001980:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001982:	4c08      	ldr	r4, [pc, #32]	; (80019a4 <IOE_ReadMultiple+0x24>)
 8001984:	6824      	ldr	r4, [r4, #0]
 8001986:	9200      	str	r2, [sp, #0]
 8001988:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800198c:	460a      	mov	r2, r1
 800198e:	2301      	movs	r3, #1
 8001990:	4601      	mov	r1, r0
 8001992:	4805      	ldr	r0, [pc, #20]	; (80019a8 <IOE_ReadMultiple+0x28>)
 8001994:	f005 f942 	bl	8006c1c <HAL_I2C_Mem_Read>
}
 8001998:	3800      	subs	r0, #0
 800199a:	bf18      	it	ne
 800199c:	2001      	movne	r0, #1
 800199e:	b004      	add	sp, #16
 80019a0:	bd10      	pop	{r4, pc}
 80019a2:	bf00      	nop
 80019a4:	2000000c 	.word	0x2000000c
 80019a8:	20003a4c 	.word	0x20003a4c

080019ac <IOE_Delay>:
 80019ac:	f004 b994 	b.w	8005cd8 <HAL_Delay>

080019b0 <LCD_IO_Init>:
{
 80019b0:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019b2:	4806      	ldr	r0, [pc, #24]	; (80019cc <LCD_IO_Init+0x1c>)
 80019b4:	2200      	movs	r2, #0
 80019b6:	2104      	movs	r1, #4
 80019b8:	f004 fe16 	bl	80065e8 <HAL_GPIO_WritePin>
}
 80019bc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80019c0:	4802      	ldr	r0, [pc, #8]	; (80019cc <LCD_IO_Init+0x1c>)
 80019c2:	2201      	movs	r2, #1
 80019c4:	2104      	movs	r1, #4
 80019c6:	f004 be0f 	b.w	80065e8 <HAL_GPIO_WritePin>
 80019ca:	bf00      	nop
 80019cc:	40020800 	.word	0x40020800

080019d0 <LCD_IO_WriteData>:
{
 80019d0:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019d2:	4d0b      	ldr	r5, [pc, #44]	; (8001a00 <LCD_IO_WriteData+0x30>)
{
 80019d4:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80019d6:	2201      	movs	r2, #1
 80019d8:	480a      	ldr	r0, [pc, #40]	; (8001a04 <LCD_IO_WriteData+0x34>)
 80019da:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80019de:	f004 fe03 	bl	80065e8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019e2:	2200      	movs	r2, #0
 80019e4:	2104      	movs	r1, #4
 80019e6:	4628      	mov	r0, r5
 80019e8:	f004 fdfe 	bl	80065e8 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 80019ec:	4620      	mov	r0, r4
 80019ee:	f7ff fbc3 	bl	8001178 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80019f2:	4628      	mov	r0, r5
 80019f4:	2201      	movs	r2, #1
}
 80019f6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80019fa:	2104      	movs	r1, #4
 80019fc:	f004 bdf4 	b.w	80065e8 <HAL_GPIO_WritePin>
 8001a00:	40020800 	.word	0x40020800
 8001a04:	40020c00 	.word	0x40020c00

08001a08 <LCD_IO_WriteReg>:
{
 8001a08:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a0a:	4d0b      	ldr	r5, [pc, #44]	; (8001a38 <LCD_IO_WriteReg+0x30>)
{
 8001a0c:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a0e:	2200      	movs	r2, #0
 8001a10:	480a      	ldr	r0, [pc, #40]	; (8001a3c <LCD_IO_WriteReg+0x34>)
 8001a12:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a16:	f004 fde7 	bl	80065e8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a1a:	2200      	movs	r2, #0
 8001a1c:	2104      	movs	r1, #4
 8001a1e:	4628      	mov	r0, r5
 8001a20:	f004 fde2 	bl	80065e8 <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 8001a24:	4620      	mov	r0, r4
 8001a26:	f7ff fba7 	bl	8001178 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a2a:	4628      	mov	r0, r5
 8001a2c:	2201      	movs	r2, #1
}
 8001a2e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a32:	2104      	movs	r1, #4
 8001a34:	f004 bdd8 	b.w	80065e8 <HAL_GPIO_WritePin>
 8001a38:	40020800 	.word	0x40020800
 8001a3c:	40020c00 	.word	0x40020c00

08001a40 <LCD_IO_ReadData>:
{
 8001a40:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a42:	4e14      	ldr	r6, [pc, #80]	; (8001a94 <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a44:	4f14      	ldr	r7, [pc, #80]	; (8001a98 <LCD_IO_ReadData+0x58>)
{
 8001a46:	4605      	mov	r5, r0
 8001a48:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a4a:	4630      	mov	r0, r6
 8001a4c:	2200      	movs	r2, #0
 8001a4e:	2104      	movs	r1, #4
 8001a50:	f004 fdca 	bl	80065e8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a54:	2200      	movs	r2, #0
 8001a56:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a5a:	4638      	mov	r0, r7
 8001a5c:	f004 fdc4 	bl	80065e8 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001a60:	4628      	mov	r0, r5
 8001a62:	f7ff fb89 	bl	8001178 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001a66:	4b0d      	ldr	r3, [pc, #52]	; (8001a9c <LCD_IO_ReadData+0x5c>)
 8001a68:	480d      	ldr	r0, [pc, #52]	; (8001aa0 <LCD_IO_ReadData+0x60>)
 8001a6a:	681b      	ldr	r3, [r3, #0]
 8001a6c:	4622      	mov	r2, r4
 8001a6e:	a901      	add	r1, sp, #4
 8001a70:	f006 fa47 	bl	8007f02 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001a74:	4638      	mov	r0, r7
 8001a76:	2201      	movs	r2, #1
 8001a78:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001a7c:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001a7e:	f004 fdb3 	bl	80065e8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a82:	4630      	mov	r0, r6
 8001a84:	2201      	movs	r2, #1
 8001a86:	2104      	movs	r1, #4
 8001a88:	f004 fdae 	bl	80065e8 <HAL_GPIO_WritePin>
}
 8001a8c:	4620      	mov	r0, r4
 8001a8e:	b003      	add	sp, #12
 8001a90:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001a92:	bf00      	nop
 8001a94:	40020800 	.word	0x40020800
 8001a98:	40020c00 	.word	0x40020c00
 8001a9c:	20000010 	.word	0x20000010
 8001aa0:	20003b7c 	.word	0x20003b7c

08001aa4 <LCD_Delay>:
  HAL_Delay(Delay);
 8001aa4:	f004 b918 	b.w	8005cd8 <HAL_Delay>

08001aa8 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM8) {
 8001aa8:	6802      	ldr	r2, [r0, #0]
 8001aaa:	4b08      	ldr	r3, [pc, #32]	; (8001acc <HAL_TIM_PeriodElapsedCallback+0x24>)
 8001aac:	429a      	cmp	r2, r3
{
 8001aae:	b510      	push	{r4, lr}
 8001ab0:	4604      	mov	r4, r0
  if (htim->Instance == TIM8) {
 8001ab2:	d101      	bne.n	8001ab8 <HAL_TIM_PeriodElapsedCallback+0x10>
    HAL_IncTick();
 8001ab4:	f004 f8fe 	bl	8005cb4 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */
  if (htim->Instance == TIM7){ //timer co 100ms
 8001ab8:	6822      	ldr	r2, [r4, #0]
 8001aba:	4b05      	ldr	r3, [pc, #20]	; (8001ad0 <HAL_TIM_PeriodElapsedCallback+0x28>)
 8001abc:	429a      	cmp	r2, r3
	  ladowarka.Minelo100ms=1;
 8001abe:	bf02      	ittt	eq
 8001ac0:	4b04      	ldreq	r3, [pc, #16]	; (8001ad4 <HAL_TIM_PeriodElapsedCallback+0x2c>)
 8001ac2:	2201      	moveq	r2, #1
 8001ac4:	f8c3 2a6c 	streq.w	r2, [r3, #2668]	; 0xa6c
  }

  /* USER CODE END Callback 1 */
}
 8001ac8:	bd10      	pop	{r4, pc}
 8001aca:	bf00      	nop
 8001acc:	40010400 	.word	0x40010400
 8001ad0:	40001400 	.word	0x40001400
 8001ad4:	20003c14 	.word	0x20003c14

08001ad8 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001ad8:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001ada:	4b0e      	ldr	r3, [pc, #56]	; (8001b14 <HAL_MspInit+0x3c>)
 8001adc:	2200      	movs	r2, #0
 8001ade:	9200      	str	r2, [sp, #0]
 8001ae0:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001ae2:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001ae6:	6459      	str	r1, [r3, #68]	; 0x44
 8001ae8:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001aea:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8001aee:	9100      	str	r1, [sp, #0]
 8001af0:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001af2:	9201      	str	r2, [sp, #4]
 8001af4:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001af6:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8001afa:	6419      	str	r1, [r3, #64]	; 0x40
 8001afc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001afe:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001b02:	9301      	str	r3, [sp, #4]
 8001b04:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001b06:	210f      	movs	r1, #15
 8001b08:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001b0c:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001b0e:	f004 bac3 	b.w	8006098 <HAL_NVIC_SetPriority>
 8001b12:	bf00      	nop
 8001b14:	40023800 	.word	0x40023800

08001b18 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8001b18:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b1a:	2214      	movs	r2, #20
{
 8001b1c:	b08a      	sub	sp, #40	; 0x28
 8001b1e:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b20:	2100      	movs	r1, #0
 8001b22:	eb0d 0002 	add.w	r0, sp, r2
 8001b26:	f01e ffe9 	bl	8020afc <memset>
  if(hadc->Instance==ADC1)
 8001b2a:	6823      	ldr	r3, [r4, #0]
 8001b2c:	4a1e      	ldr	r2, [pc, #120]	; (8001ba8 <HAL_ADC_MspInit+0x90>)
 8001b2e:	4293      	cmp	r3, r2
 8001b30:	d11f      	bne.n	8001b72 <HAL_ADC_MspInit+0x5a>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 8001b32:	4b1e      	ldr	r3, [pc, #120]	; (8001bac <HAL_ADC_MspInit+0x94>)
 8001b34:	2100      	movs	r1, #0
 8001b36:	9101      	str	r1, [sp, #4]
 8001b38:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001b3a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001b3e:	645a      	str	r2, [r3, #68]	; 0x44
 8001b40:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001b42:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8001b46:	9201      	str	r2, [sp, #4]
 8001b48:	9a01      	ldr	r2, [sp, #4]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b4a:	9102      	str	r1, [sp, #8]
 8001b4c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b4e:	f042 0201 	orr.w	r2, r2, #1
 8001b52:	631a      	str	r2, [r3, #48]	; 0x30
 8001b54:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001b56:	f003 0301 	and.w	r3, r3, #1
 8001b5a:	9302      	str	r3, [sp, #8]
 8001b5c:	9b02      	ldr	r3, [sp, #8]
    /**ADC1 GPIO Configuration
    PA7     ------> ADC1_IN7
    */
    GPIO_InitStruct.Pin = GPIO_PIN_7;
 8001b5e:	2380      	movs	r3, #128	; 0x80

    __HAL_RCC_GPIOA_CLK_ENABLE();
    /**ADC2 GPIO Configuration
    PA2     ------> ADC2_IN2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001b60:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b62:	4813      	ldr	r0, [pc, #76]	; (8001bb0 <HAL_ADC_MspInit+0x98>)
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001b64:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b66:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001b68:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b6a:	f004 fc55 	bl	8006418 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC2_MspInit 1 */

  /* USER CODE END ADC2_MspInit 1 */
  }

}
 8001b6e:	b00a      	add	sp, #40	; 0x28
 8001b70:	bd10      	pop	{r4, pc}
  else if(hadc->Instance==ADC2)
 8001b72:	4a10      	ldr	r2, [pc, #64]	; (8001bb4 <HAL_ADC_MspInit+0x9c>)
 8001b74:	4293      	cmp	r3, r2
 8001b76:	d1fa      	bne.n	8001b6e <HAL_ADC_MspInit+0x56>
    __HAL_RCC_ADC2_CLK_ENABLE();
 8001b78:	4b0c      	ldr	r3, [pc, #48]	; (8001bac <HAL_ADC_MspInit+0x94>)
 8001b7a:	2100      	movs	r1, #0
 8001b7c:	9103      	str	r1, [sp, #12]
 8001b7e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001b80:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001b84:	645a      	str	r2, [r3, #68]	; 0x44
 8001b86:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001b88:	f402 7200 	and.w	r2, r2, #512	; 0x200
 8001b8c:	9203      	str	r2, [sp, #12]
 8001b8e:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b90:	9104      	str	r1, [sp, #16]
 8001b92:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b94:	f042 0201 	orr.w	r2, r2, #1
 8001b98:	631a      	str	r2, [r3, #48]	; 0x30
 8001b9a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001b9c:	f003 0301 	and.w	r3, r3, #1
 8001ba0:	9304      	str	r3, [sp, #16]
 8001ba2:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001ba4:	2304      	movs	r3, #4
 8001ba6:	e7db      	b.n	8001b60 <HAL_ADC_MspInit+0x48>
 8001ba8:	40012000 	.word	0x40012000
 8001bac:	40023800 	.word	0x40023800
 8001bb0:	40020000 	.word	0x40020000
 8001bb4:	40012100 	.word	0x40012100

08001bb8 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001bb8:	6802      	ldr	r2, [r0, #0]
 8001bba:	4b09      	ldr	r3, [pc, #36]	; (8001be0 <HAL_CRC_MspInit+0x28>)
 8001bbc:	429a      	cmp	r2, r3
{
 8001bbe:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001bc0:	d10b      	bne.n	8001bda <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001bc2:	2300      	movs	r3, #0
 8001bc4:	9301      	str	r3, [sp, #4]
 8001bc6:	4b07      	ldr	r3, [pc, #28]	; (8001be4 <HAL_CRC_MspInit+0x2c>)
 8001bc8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001bca:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001bce:	631a      	str	r2, [r3, #48]	; 0x30
 8001bd0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001bd2:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001bd6:	9301      	str	r3, [sp, #4]
 8001bd8:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001bda:	b002      	add	sp, #8
 8001bdc:	4770      	bx	lr
 8001bde:	bf00      	nop
 8001be0:	40023000 	.word	0x40023000
 8001be4:	40023800 	.word	0x40023800

08001be8 <HAL_DAC_MspInit>:
* This function configures the hardware resources used in this example
* @param hdac: DAC handle pointer
* @retval None
*/
void HAL_DAC_MspInit(DAC_HandleTypeDef* hdac)
{
 8001be8:	b510      	push	{r4, lr}
 8001bea:	4604      	mov	r4, r0
 8001bec:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001bee:	2214      	movs	r2, #20
 8001bf0:	2100      	movs	r1, #0
 8001bf2:	a803      	add	r0, sp, #12
 8001bf4:	f01e ff82 	bl	8020afc <memset>
  if(hdac->Instance==DAC)
 8001bf8:	6822      	ldr	r2, [r4, #0]
 8001bfa:	4b12      	ldr	r3, [pc, #72]	; (8001c44 <HAL_DAC_MspInit+0x5c>)
 8001bfc:	429a      	cmp	r2, r3
 8001bfe:	d11e      	bne.n	8001c3e <HAL_DAC_MspInit+0x56>
  {
  /* USER CODE BEGIN DAC_MspInit 0 */

  /* USER CODE END DAC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DAC_CLK_ENABLE();
 8001c00:	f503 33e2 	add.w	r3, r3, #115712	; 0x1c400
 8001c04:	2100      	movs	r1, #0
 8001c06:	9101      	str	r1, [sp, #4]
 8001c08:	6c1a      	ldr	r2, [r3, #64]	; 0x40
    PA5     ------> DAC_OUT2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c0a:	480f      	ldr	r0, [pc, #60]	; (8001c48 <HAL_DAC_MspInit+0x60>)
    __HAL_RCC_DAC_CLK_ENABLE();
 8001c0c:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 8001c10:	641a      	str	r2, [r3, #64]	; 0x40
 8001c12:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001c14:	f002 5200 	and.w	r2, r2, #536870912	; 0x20000000
 8001c18:	9201      	str	r2, [sp, #4]
 8001c1a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c1c:	9102      	str	r1, [sp, #8]
 8001c1e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c20:	f042 0201 	orr.w	r2, r2, #1
 8001c24:	631a      	str	r2, [r3, #48]	; 0x30
 8001c26:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c28:	f003 0301 	and.w	r3, r3, #1
 8001c2c:	9302      	str	r3, [sp, #8]
 8001c2e:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001c30:	2220      	movs	r2, #32
 8001c32:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c34:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001c36:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c3a:	f004 fbed 	bl	8006418 <HAL_GPIO_Init>
  /* USER CODE BEGIN DAC_MspInit 1 */

  /* USER CODE END DAC_MspInit 1 */
  }

}
 8001c3e:	b008      	add	sp, #32
 8001c40:	bd10      	pop	{r4, pc}
 8001c42:	bf00      	nop
 8001c44:	40007400 	.word	0x40007400
 8001c48:	40020000 	.word	0x40020000

08001c4c <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001c4c:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001c4e:	4b0f      	ldr	r3, [pc, #60]	; (8001c8c <HAL_DMA2D_MspInit+0x40>)
 8001c50:	6802      	ldr	r2, [r0, #0]
 8001c52:	429a      	cmp	r2, r3
 8001c54:	d116      	bne.n	8001c84 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001c56:	2200      	movs	r2, #0
 8001c58:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001c5c:	9201      	str	r2, [sp, #4]
 8001c5e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001c60:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001c64:	6319      	str	r1, [r3, #48]	; 0x30
 8001c66:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c68:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001c6c:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001c6e:	2105      	movs	r1, #5
 8001c70:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001c72:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001c74:	f004 fa10 	bl	8006098 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001c78:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001c7a:	b003      	add	sp, #12
 8001c7c:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001c80:	f004 ba3c 	b.w	80060fc <HAL_NVIC_EnableIRQ>
}
 8001c84:	b003      	add	sp, #12
 8001c86:	f85d fb04 	ldr.w	pc, [sp], #4
 8001c8a:	bf00      	nop
 8001c8c:	4002b000 	.word	0x4002b000

08001c90 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001c90:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001c94:	4604      	mov	r4, r0
 8001c96:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c98:	2214      	movs	r2, #20
 8001c9a:	2100      	movs	r1, #0
 8001c9c:	a803      	add	r0, sp, #12
 8001c9e:	f01e ff2d 	bl	8020afc <memset>
  if(hi2c->Instance==I2C3)
 8001ca2:	6822      	ldr	r2, [r4, #0]
 8001ca4:	4b24      	ldr	r3, [pc, #144]	; (8001d38 <HAL_I2C_MspInit+0xa8>)
 8001ca6:	429a      	cmp	r2, r3
 8001ca8:	d143      	bne.n	8001d32 <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001caa:	4c24      	ldr	r4, [pc, #144]	; (8001d3c <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001cac:	4824      	ldr	r0, [pc, #144]	; (8001d40 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001cae:	2500      	movs	r5, #0
 8001cb0:	9500      	str	r5, [sp, #0]
 8001cb2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001cb4:	f043 0304 	orr.w	r3, r3, #4
 8001cb8:	6323      	str	r3, [r4, #48]	; 0x30
 8001cba:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001cbc:	f003 0304 	and.w	r3, r3, #4
 8001cc0:	9300      	str	r3, [sp, #0]
 8001cc2:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001cc4:	9501      	str	r5, [sp, #4]
 8001cc6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001cc8:	f043 0301 	orr.w	r3, r3, #1
 8001ccc:	6323      	str	r3, [r4, #48]	; 0x30
 8001cce:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001cd0:	f003 0301 	and.w	r3, r3, #1
 8001cd4:	9301      	str	r3, [sp, #4]
 8001cd6:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001cd8:	f04f 0912 	mov.w	r9, #18
 8001cdc:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001ce0:	f04f 0801 	mov.w	r8, #1
 8001ce4:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001ce6:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ce8:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001cea:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001cee:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001cf2:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001cf4:	f004 fb90 	bl	8006418 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001cf8:	f44f 7380 	mov.w	r3, #256	; 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001cfc:	4811      	ldr	r0, [pc, #68]	; (8001d44 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001cfe:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d00:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001d02:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d06:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d0a:	f004 fb85 	bl	8006418 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001d0e:	9502      	str	r5, [sp, #8]
 8001d10:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001d12:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001d16:	6423      	str	r3, [r4, #64]	; 0x40
 8001d18:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001d1a:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001d1e:	9302      	str	r3, [sp, #8]
 8001d20:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 8001d22:	6a23      	ldr	r3, [r4, #32]
 8001d24:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001d28:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001d2a:	6a23      	ldr	r3, [r4, #32]
 8001d2c:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001d30:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001d32:	b009      	add	sp, #36	; 0x24
 8001d34:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001d38:	40005c00 	.word	0x40005c00
 8001d3c:	40023800 	.word	0x40023800
 8001d40:	40020800 	.word	0x40020800
 8001d44:	40020000 	.word	0x40020000

08001d48 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001d48:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001d4a:	4604      	mov	r4, r0
 8001d4c:	b08d      	sub	sp, #52	; 0x34
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d4e:	2214      	movs	r2, #20
 8001d50:	2100      	movs	r1, #0
 8001d52:	a807      	add	r0, sp, #28
 8001d54:	f01e fed2 	bl	8020afc <memset>
  if(hltdc->Instance==LTDC)
 8001d58:	6822      	ldr	r2, [r4, #0]
 8001d5a:	4b57      	ldr	r3, [pc, #348]	; (8001eb8 <HAL_LTDC_MspInit+0x170>)
 8001d5c:	429a      	cmp	r2, r3
 8001d5e:	f040 80a8 	bne.w	8001eb2 <HAL_LTDC_MspInit+0x16a>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001d62:	f503 4350 	add.w	r3, r3, #53248	; 0xd000
 8001d66:	2500      	movs	r5, #0
 8001d68:	9500      	str	r5, [sp, #0]
 8001d6a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d6c:	4853      	ldr	r0, [pc, #332]	; (8001ebc <HAL_LTDC_MspInit+0x174>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001d6e:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001d72:	645a      	str	r2, [r3, #68]	; 0x44
 8001d74:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001d76:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001d7a:	9200      	str	r2, [sp, #0]
 8001d7c:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001d7e:	9501      	str	r5, [sp, #4]
 8001d80:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d82:	f042 0220 	orr.w	r2, r2, #32
 8001d86:	631a      	str	r2, [r3, #48]	; 0x30
 8001d88:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d8a:	f002 0220 	and.w	r2, r2, #32
 8001d8e:	9201      	str	r2, [sp, #4]
 8001d90:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001d92:	9502      	str	r5, [sp, #8]
 8001d94:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d96:	f042 0201 	orr.w	r2, r2, #1
 8001d9a:	631a      	str	r2, [r3, #48]	; 0x30
 8001d9c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d9e:	f002 0201 	and.w	r2, r2, #1
 8001da2:	9202      	str	r2, [sp, #8]
 8001da4:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001da6:	9503      	str	r5, [sp, #12]
 8001da8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001daa:	f042 0202 	orr.w	r2, r2, #2
 8001dae:	631a      	str	r2, [r3, #48]	; 0x30
 8001db0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001db2:	f002 0202 	and.w	r2, r2, #2
 8001db6:	9203      	str	r2, [sp, #12]
 8001db8:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001dba:	9504      	str	r5, [sp, #16]
 8001dbc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dbe:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001dc2:	631a      	str	r2, [r3, #48]	; 0x30
 8001dc4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dc6:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001dca:	9204      	str	r2, [sp, #16]
 8001dcc:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001dce:	9505      	str	r5, [sp, #20]
 8001dd0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dd2:	f042 0204 	orr.w	r2, r2, #4
 8001dd6:	631a      	str	r2, [r3, #48]	; 0x30
 8001dd8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dda:	f002 0204 	and.w	r2, r2, #4
 8001dde:	9205      	str	r2, [sp, #20]
 8001de0:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001de2:	9506      	str	r5, [sp, #24]
 8001de4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001de6:	f042 0208 	orr.w	r2, r2, #8
 8001dea:	631a      	str	r2, [r3, #48]	; 0x30
 8001dec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001dee:	f003 0308 	and.w	r3, r3, #8
 8001df2:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001df4:	2402      	movs	r4, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001df6:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001df8:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001dfa:	940a      	str	r4, [sp, #40]	; 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dfc:	f44f 6380 	mov.w	r3, #1024	; 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e00:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e02:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e06:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e08:	f004 fb06 	bl	8006418 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001e0c:	f641 0358 	movw	r3, #6232	; 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e10:	482b      	ldr	r0, [pc, #172]	; (8001ec0 <HAL_LTDC_MspInit+0x178>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e12:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e14:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e16:	e9cd 3407 	strd	r3, r4, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001e1a:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001e1c:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e20:	f004 fafa 	bl	8006418 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001e24:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e26:	4827      	ldr	r0, [pc, #156]	; (8001ec4 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001e28:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e2a:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e2c:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001e30:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e34:	f004 faf0 	bl	8006418 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001e38:	f44f 6370 	mov.w	r3, #3840	; 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e3c:	4821      	ldr	r0, [pc, #132]	; (8001ec4 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e3e:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e40:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e42:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001e46:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e4a:	f004 fae5 	bl	8006418 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001e4e:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e52:	481d      	ldr	r0, [pc, #116]	; (8001ec8 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e54:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e56:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e58:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001e5c:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e60:	f004 fada 	bl	8006418 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001e64:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e66:	4819      	ldr	r0, [pc, #100]	; (8001ecc <HAL_LTDC_MspInit+0x184>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e68:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e6a:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e6c:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001e70:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e74:	f004 fad0 	bl	8006418 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001e78:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e7a:	4815      	ldr	r0, [pc, #84]	; (8001ed0 <HAL_LTDC_MspInit+0x188>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e7c:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e7e:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e80:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001e84:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e88:	f004 fac6 	bl	8006418 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001e8c:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e90:	480d      	ldr	r0, [pc, #52]	; (8001ec8 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001e92:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e94:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e96:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001e9a:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e9e:	f004 fabb 	bl	8006418 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001ea2:	2058      	movs	r0, #88	; 0x58
 8001ea4:	462a      	mov	r2, r5
 8001ea6:	2105      	movs	r1, #5
 8001ea8:	f004 f8f6 	bl	8006098 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001eac:	2058      	movs	r0, #88	; 0x58
 8001eae:	f004 f925 	bl	80060fc <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001eb2:	b00d      	add	sp, #52	; 0x34
 8001eb4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001eb6:	bf00      	nop
 8001eb8:	40016800 	.word	0x40016800
 8001ebc:	40021400 	.word	0x40021400
 8001ec0:	40020000 	.word	0x40020000
 8001ec4:	40020400 	.word	0x40020400
 8001ec8:	40021800 	.word	0x40021800
 8001ecc:	40020800 	.word	0x40020800
 8001ed0:	40020c00 	.word	0x40020c00

08001ed4 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001ed4:	b510      	push	{r4, lr}
 8001ed6:	4604      	mov	r4, r0
 8001ed8:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001eda:	2214      	movs	r2, #20
 8001edc:	2100      	movs	r1, #0
 8001ede:	a803      	add	r0, sp, #12
 8001ee0:	f01e fe0c 	bl	8020afc <memset>
  if(hspi->Instance==SPI5)
 8001ee4:	6822      	ldr	r2, [r4, #0]
 8001ee6:	4b14      	ldr	r3, [pc, #80]	; (8001f38 <HAL_SPI_MspInit+0x64>)
 8001ee8:	429a      	cmp	r2, r3
 8001eea:	d123      	bne.n	8001f34 <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001eec:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8001ef0:	2100      	movs	r1, #0
 8001ef2:	9101      	str	r1, [sp, #4]
 8001ef4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001ef6:	4811      	ldr	r0, [pc, #68]	; (8001f3c <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001ef8:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8001efc:	645a      	str	r2, [r3, #68]	; 0x44
 8001efe:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001f00:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 8001f04:	9201      	str	r2, [sp, #4]
 8001f06:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001f08:	9102      	str	r1, [sp, #8]
 8001f0a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f0c:	f042 0220 	orr.w	r2, r2, #32
 8001f10:	631a      	str	r2, [r3, #48]	; 0x30
 8001f12:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001f14:	f003 0320 	and.w	r3, r3, #32
 8001f18:	9302      	str	r3, [sp, #8]
 8001f1a:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f1c:	f44f 7260 	mov.w	r2, #896	; 0x380
 8001f20:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001f22:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f24:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001f28:	2305      	movs	r3, #5
 8001f2a:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f2e:	a903      	add	r1, sp, #12
 8001f30:	f004 fa72 	bl	8006418 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001f34:	b008      	add	sp, #32
 8001f36:	bd10      	pop	{r4, pc}
 8001f38:	40015000 	.word	0x40015000
 8001f3c:	40021400 	.word	0x40021400

08001f40 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001f40:	b507      	push	{r0, r1, r2, lr}
  if(htim_base->Instance==TIM7)
 8001f42:	4b0f      	ldr	r3, [pc, #60]	; (8001f80 <HAL_TIM_Base_MspInit+0x40>)
 8001f44:	6802      	ldr	r2, [r0, #0]
 8001f46:	429a      	cmp	r2, r3
 8001f48:	d116      	bne.n	8001f78 <HAL_TIM_Base_MspInit+0x38>
  {
  /* USER CODE BEGIN TIM7_MspInit 0 */

  /* USER CODE END TIM7_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM7_CLK_ENABLE();
 8001f4a:	2200      	movs	r2, #0
 8001f4c:	f503 3309 	add.w	r3, r3, #140288	; 0x22400
 8001f50:	9201      	str	r2, [sp, #4]
 8001f52:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001f54:	f041 0120 	orr.w	r1, r1, #32
 8001f58:	6419      	str	r1, [r3, #64]	; 0x40
 8001f5a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001f5c:	f003 0320 	and.w	r3, r3, #32
 8001f60:	9301      	str	r3, [sp, #4]
    /* TIM7 interrupt Init */
    HAL_NVIC_SetPriority(TIM7_IRQn, 5, 0);
 8001f62:	2105      	movs	r1, #5
 8001f64:	2037      	movs	r0, #55	; 0x37
    __HAL_RCC_TIM7_CLK_ENABLE();
 8001f66:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(TIM7_IRQn, 5, 0);
 8001f68:	f004 f896 	bl	8006098 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 8001f6c:	2037      	movs	r0, #55	; 0x37
  /* USER CODE BEGIN TIM7_MspInit 1 */

  /* USER CODE END TIM7_MspInit 1 */
  }

}
 8001f6e:	b003      	add	sp, #12
 8001f70:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 8001f74:	f004 b8c2 	b.w	80060fc <HAL_NVIC_EnableIRQ>
}
 8001f78:	b003      	add	sp, #12
 8001f7a:	f85d fb04 	ldr.w	pc, [sp], #4
 8001f7e:	bf00      	nop
 8001f80:	40001400 	.word	0x40001400

08001f84 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001f84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001f88:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001f8a:	2300      	movs	r3, #0
 8001f8c:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8001f8e:	4b2b      	ldr	r3, [pc, #172]	; (800203c <HAL_SDRAM_MspInit+0xb8>)
 8001f90:	681c      	ldr	r4, [r3, #0]
 8001f92:	2c00      	cmp	r4, #0
 8001f94:	d14f      	bne.n	8002036 <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 8001f96:	f04f 0801 	mov.w	r8, #1
 8001f9a:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001f9e:	4b28      	ldr	r3, [pc, #160]	; (8002040 <HAL_SDRAM_MspInit+0xbc>)
 8001fa0:	9400      	str	r4, [sp, #0]
 8001fa2:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fa4:	4827      	ldr	r0, [pc, #156]	; (8002044 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fa6:	ea42 0208 	orr.w	r2, r2, r8
 8001faa:	639a      	str	r2, [r3, #56]	; 0x38
 8001fac:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001fae:	ea03 0308 	and.w	r3, r3, r8
 8001fb2:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fb4:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001fb6:	2603      	movs	r6, #3
 8001fb8:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fba:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fbc:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fbe:	f64f 033f 	movw	r3, #63551	; 0xf83f
 8001fc2:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001fc6:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fca:	f004 fa25 	bl	8006418 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fce:	481e      	ldr	r0, [pc, #120]	; (8002048 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001fd0:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fd2:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fd4:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001fd8:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fdc:	f004 fa1c 	bl	8006418 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001fe0:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001fe4:	4819      	ldr	r0, [pc, #100]	; (800204c <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001fe6:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001fe8:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fea:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001fee:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ff2:	f004 fa11 	bl	8006418 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8001ff6:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001ffa:	4815      	ldr	r0, [pc, #84]	; (8002050 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001ffc:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001ffe:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002000:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002004:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002008:	f004 fa06 	bl	8006418 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 800200c:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002010:	4810      	ldr	r0, [pc, #64]	; (8002054 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002012:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002014:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002016:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800201a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800201e:	f004 f9fb 	bl	8006418 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002022:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002024:	480c      	ldr	r0, [pc, #48]	; (8002058 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002026:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002028:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800202a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800202e:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002032:	f004 f9f1 	bl	8006418 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8002036:	b006      	add	sp, #24
 8002038:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800203c:	200046a4 	.word	0x200046a4
 8002040:	40023800 	.word	0x40023800
 8002044:	40021400 	.word	0x40021400
 8002048:	40020800 	.word	0x40020800
 800204c:	40021800 	.word	0x40021800
 8002050:	40021000 	.word	0x40021000
 8002054:	40020c00 	.word	0x40020c00
 8002058:	40020400 	.word	0x40020400

0800205c <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 800205c:	b530      	push	{r4, r5, lr}
 800205e:	4601      	mov	r1, r0
 8002060:	b089      	sub	sp, #36	; 0x24
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;

  /*Configure the TIM8 IRQ priority */
  HAL_NVIC_SetPriority(TIM8_UP_TIM13_IRQn, TickPriority ,0);
 8002062:	2200      	movs	r2, #0
 8002064:	202c      	movs	r0, #44	; 0x2c
 8002066:	f004 f817 	bl	8006098 <HAL_NVIC_SetPriority>

  /* Enable the TIM8 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM8_UP_TIM13_IRQn);
 800206a:	202c      	movs	r0, #44	; 0x2c
 800206c:	f004 f846 	bl	80060fc <HAL_NVIC_EnableIRQ>

  /* Enable TIM8 clock */
  __HAL_RCC_TIM8_CLK_ENABLE();
 8002070:	2500      	movs	r5, #0
 8002072:	4b15      	ldr	r3, [pc, #84]	; (80020c8 <HAL_InitTick+0x6c>)
 8002074:	9502      	str	r5, [sp, #8]
 8002076:	6c5a      	ldr	r2, [r3, #68]	; 0x44

  /* Compute the prescaler value to have TIM8 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);

  /* Initialize TIM8 */
  htim8.Instance = TIM8;
 8002078:	4c14      	ldr	r4, [pc, #80]	; (80020cc <HAL_InitTick+0x70>)
  __HAL_RCC_TIM8_CLK_ENABLE();
 800207a:	f042 0202 	orr.w	r2, r2, #2
 800207e:	645a      	str	r2, [r3, #68]	; 0x44
 8002080:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002082:	f003 0302 	and.w	r3, r3, #2
 8002086:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002088:	a901      	add	r1, sp, #4
 800208a:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM8_CLK_ENABLE();
 800208c:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 800208e:	f005 fb3b 	bl	8007708 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK2Freq();
 8002092:	f005 fb29 	bl	80076e8 <HAL_RCC_GetPCLK2Freq>
  htim8.Instance = TIM8;
 8002096:	4b0e      	ldr	r3, [pc, #56]	; (80020d0 <HAL_InitTick+0x74>)
 8002098:	6023      	str	r3, [r4, #0]
  + Period = [(TIM8CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim8.Init.Period = (1000000 / 1000) - 1;
 800209a:	f240 33e7 	movw	r3, #999	; 0x3e7
 800209e:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK2Freq();
 80020a0:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
 80020a2:	4b0c      	ldr	r3, [pc, #48]	; (80020d4 <HAL_InitTick+0x78>)
 80020a4:	fbb0 f0f3 	udiv	r0, r0, r3
 80020a8:	3801      	subs	r0, #1
  htim8.Init.Prescaler = uwPrescalerValue;
 80020aa:	6060      	str	r0, [r4, #4]
  htim8.Init.ClockDivision = 0;
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
  if(HAL_TIM_Base_Init(&htim8) == HAL_OK)
 80020ac:	4620      	mov	r0, r4
  htim8.Init.ClockDivision = 0;
 80020ae:	6125      	str	r5, [r4, #16]
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 80020b0:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim8) == HAL_OK)
 80020b2:	f006 f8e5 	bl	8008280 <HAL_TIM_Base_Init>
 80020b6:	b920      	cbnz	r0, 80020c2 <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim8);
 80020b8:	4620      	mov	r0, r4
 80020ba:	f005 ffc4 	bl	8008046 <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 80020be:	b009      	add	sp, #36	; 0x24
 80020c0:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 80020c2:	2001      	movs	r0, #1
 80020c4:	e7fb      	b.n	80020be <HAL_InitTick+0x62>
 80020c6:	bf00      	nop
 80020c8:	40023800 	.word	0x40023800
 80020cc:	200046a8 	.word	0x200046a8
 80020d0:	40010400 	.word	0x40010400
 80020d4:	000f4240 	.word	0x000f4240

080020d8 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 80020d8:	4770      	bx	lr

080020da <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80020da:	e7fe      	b.n	80020da <HardFault_Handler>

080020dc <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80020dc:	e7fe      	b.n	80020dc <MemManage_Handler>

080020de <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80020de:	e7fe      	b.n	80020de <BusFault_Handler>

080020e0 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80020e0:	e7fe      	b.n	80020e0 <UsageFault_Handler>

080020e2 <DebugMon_Handler>:
 80020e2:	4770      	bx	lr

080020e4 <TIM8_UP_TIM13_IRQHandler>:
void TIM8_UP_TIM13_IRQHandler(void)
{
  /* USER CODE BEGIN TIM8_UP_TIM13_IRQn 0 */

  /* USER CODE END TIM8_UP_TIM13_IRQn 0 */
  HAL_TIM_IRQHandler(&htim8);
 80020e4:	4801      	ldr	r0, [pc, #4]	; (80020ec <TIM8_UP_TIM13_IRQHandler+0x8>)
 80020e6:	f005 bfc2 	b.w	800806e <HAL_TIM_IRQHandler>
 80020ea:	bf00      	nop
 80020ec:	200046a8 	.word	0x200046a8

080020f0 <TIM7_IRQHandler>:
void TIM7_IRQHandler(void)
{
  /* USER CODE BEGIN TIM7_IRQn 0 */

  /* USER CODE END TIM7_IRQn 0 */
  HAL_TIM_IRQHandler(&htim7);
 80020f0:	4801      	ldr	r0, [pc, #4]	; (80020f8 <TIM7_IRQHandler+0x8>)
 80020f2:	f005 bfbc 	b.w	800806e <HAL_TIM_IRQHandler>
 80020f6:	bf00      	nop
 80020f8:	20003bd4 	.word	0x20003bd4

080020fc <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 80020fc:	4801      	ldr	r0, [pc, #4]	; (8002104 <LTDC_IRQHandler+0x8>)
 80020fe:	f004 bfc7 	b.w	8007090 <HAL_LTDC_IRQHandler>
 8002102:	bf00      	nop
 8002104:	20003aa0 	.word	0x20003aa0

08002108 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8002108:	4801      	ldr	r0, [pc, #4]	; (8002110 <DMA2D_IRQHandler+0x8>)
 800210a:	f004 b8b6 	b.w	800627a <HAL_DMA2D_IRQHandler>
 800210e:	bf00      	nop
 8002110:	20003a0c 	.word	0x20003a0c

08002114 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002114:	2001      	movs	r0, #1
 8002116:	4770      	bx	lr

08002118 <_kill>:

int _kill(int pid, int sig)
{
 8002118:	b508      	push	{r3, lr}
	errno = EINVAL;
 800211a:	f01e fb9b 	bl	8020854 <__errno>
 800211e:	2316      	movs	r3, #22
 8002120:	6003      	str	r3, [r0, #0]
	return -1;
}
 8002122:	f04f 30ff 	mov.w	r0, #4294967295
 8002126:	bd08      	pop	{r3, pc}

08002128 <_exit>:

void _exit (int status)
{
 8002128:	b508      	push	{r3, lr}
	errno = EINVAL;
 800212a:	f01e fb93 	bl	8020854 <__errno>
 800212e:	2316      	movs	r3, #22
 8002130:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8002132:	e7fe      	b.n	8002132 <_exit+0xa>

08002134 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002134:	b570      	push	{r4, r5, r6, lr}
 8002136:	460d      	mov	r5, r1
 8002138:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800213a:	460e      	mov	r6, r1
 800213c:	1b73      	subs	r3, r6, r5
 800213e:	429c      	cmp	r4, r3
 8002140:	dc01      	bgt.n	8002146 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8002142:	4620      	mov	r0, r4
 8002144:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8002146:	f3af 8000 	nop.w
 800214a:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800214e:	e7f5      	b.n	800213c <_read+0x8>

08002150 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002150:	b570      	push	{r4, r5, r6, lr}
 8002152:	460d      	mov	r5, r1
 8002154:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002156:	460e      	mov	r6, r1
 8002158:	1b73      	subs	r3, r6, r5
 800215a:	429c      	cmp	r4, r3
 800215c:	dc01      	bgt.n	8002162 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 800215e:	4620      	mov	r0, r4
 8002160:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8002162:	f816 0b01 	ldrb.w	r0, [r6], #1
 8002166:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800216a:	e7f5      	b.n	8002158 <_write+0x8>

0800216c <_close>:

int _close(int file)
{
	return -1;
}
 800216c:	f04f 30ff 	mov.w	r0, #4294967295
 8002170:	4770      	bx	lr

08002172 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8002172:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002176:	604b      	str	r3, [r1, #4]
	return 0;
}
 8002178:	2000      	movs	r0, #0
 800217a:	4770      	bx	lr

0800217c <_isatty>:

int _isatty(int file)
{
	return 1;
}
 800217c:	2001      	movs	r0, #1
 800217e:	4770      	bx	lr

08002180 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002180:	2000      	movs	r0, #0
 8002182:	4770      	bx	lr

08002184 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002184:	4a0a      	ldr	r2, [pc, #40]	; (80021b0 <_sbrk+0x2c>)
 8002186:	6811      	ldr	r1, [r2, #0]
{
 8002188:	b508      	push	{r3, lr}
 800218a:	4603      	mov	r3, r0
	if (heap_end == 0)
 800218c:	b909      	cbnz	r1, 8002192 <_sbrk+0xe>
		heap_end = &end;
 800218e:	4909      	ldr	r1, [pc, #36]	; (80021b4 <_sbrk+0x30>)
 8002190:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 8002192:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8002194:	4669      	mov	r1, sp
 8002196:	4403      	add	r3, r0
 8002198:	428b      	cmp	r3, r1
 800219a:	d906      	bls.n	80021aa <_sbrk+0x26>
	{
		errno = ENOMEM;
 800219c:	f01e fb5a 	bl	8020854 <__errno>
 80021a0:	230c      	movs	r3, #12
 80021a2:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 80021a4:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 80021a8:	bd08      	pop	{r3, pc}
	heap_end += incr;
 80021aa:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 80021ac:	e7fc      	b.n	80021a8 <_sbrk+0x24>
 80021ae:	bf00      	nop
 80021b0:	200046e8 	.word	0x200046e8
 80021b4:	20015858 	.word	0x20015858

080021b8 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80021b8:	4770      	bx	lr

080021ba <_ZN23ApplicationFontProviderD0Ev>:
 80021ba:	b510      	push	{r4, lr}
 80021bc:	2104      	movs	r1, #4
 80021be:	4604      	mov	r4, r0
 80021c0:	f01e fa62 	bl	8020688 <_ZdlPvj>
 80021c4:	4620      	mov	r0, r4
 80021c6:	bd10      	pop	{r4, pc}

080021c8 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 80021c8:	2901      	cmp	r1, #1
{
 80021ca:	b508      	push	{r3, lr}
    switch (typography)
 80021cc:	d006      	beq.n	80021dc <_ZN23ApplicationFontProvider7getFontEt+0x14>
 80021ce:	2902      	cmp	r1, #2
 80021d0:	d008      	beq.n	80021e4 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 80021d2:	b959      	cbnz	r1, 80021ec <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_15_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 80021d4:	f002 fdf8 	bl	8004dc8 <_ZN17TypedTextDatabase8getFontsEv>
 80021d8:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 80021da:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 80021dc:	f002 fdf4 	bl	8004dc8 <_ZN17TypedTextDatabase8getFontsEv>
 80021e0:	6840      	ldr	r0, [r0, #4]
 80021e2:	e7fa      	b.n	80021da <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 80021e4:	f002 fdf0 	bl	8004dc8 <_ZN17TypedTextDatabase8getFontsEv>
 80021e8:	6880      	ldr	r0, [r0, #8]
 80021ea:	e7f6      	b.n	80021da <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 80021ec:	2000      	movs	r0, #0
 80021ee:	e7f4      	b.n	80021da <_ZN23ApplicationFontProvider7getFontEt+0x12>

080021f0 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 80021f0:	4800      	ldr	r0, [pc, #0]	; (80021f4 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 80021f2:	4770      	bx	lr
 80021f4:	080220b0 	.word	0x080220b0

080021f8 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 80021f8:	200d      	movs	r0, #13
 80021fa:	4770      	bx	lr

080021fc <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80021fc:	b513      	push	{r0, r1, r4, lr}
 80021fe:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002200:	b151      	cbz	r1, 8002218 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002202:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002204:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002206:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800220a:	aa01      	add	r2, sp, #4
 800220c:	689c      	ldr	r4, [r3, #8]
 800220e:	f10d 0303 	add.w	r3, sp, #3
 8002212:	47a0      	blx	r4
        return glyph;
    }
 8002214:	b002      	add	sp, #8
 8002216:	bd10      	pop	{r4, pc}
            return 0;
 8002218:	4608      	mov	r0, r1
 800221a:	e7fb      	b.n	8002214 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

0800221c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 800221c:	8940      	ldrh	r0, [r0, #10]
 800221e:	4770      	bx	lr

08002220 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002220:	8980      	ldrh	r0, [r0, #12]
 8002222:	4770      	bx	lr

08002224 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 8002224:	8880      	ldrh	r0, [r0, #4]
 8002226:	4770      	bx	lr

08002228 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 8002228:	7983      	ldrb	r3, [r0, #6]
 800222a:	8880      	ldrh	r0, [r0, #4]
 800222c:	4418      	add	r0, r3
    }
 800222e:	b280      	uxth	r0, r0
 8002230:	4770      	bx	lr

08002232 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002232:	79c0      	ldrb	r0, [r0, #7]
    }
 8002234:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002238:	4770      	bx	lr

0800223a <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 800223a:	79c0      	ldrb	r0, [r0, #7]
    }
 800223c:	09c0      	lsrs	r0, r0, #7
 800223e:	4770      	bx	lr

08002240 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002240:	4770      	bx	lr

08002242 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002242:	b510      	push	{r4, lr}
    }
 8002244:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002246:	4604      	mov	r4, r0
    }
 8002248:	f01e fa1e 	bl	8020688 <_ZdlPvj>
 800224c:	4620      	mov	r0, r4
 800224e:	bd10      	pop	{r4, pc}

08002250 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8002250:	4770      	bx	lr

08002252 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8002252:	4770      	bx	lr

08002254 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002254:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 8002258:	6808      	ldr	r0, [r1, #0]
 800225a:	6849      	ldr	r1, [r1, #4]
 800225c:	c303      	stmia	r3!, {r0, r1}
    }
 800225e:	4770      	bx	lr

08002260 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002260:	2000      	movs	r0, #0
 8002262:	4770      	bx	lr

08002264 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002264:	8081      	strh	r1, [r0, #4]
    }
 8002266:	4770      	bx	lr

08002268 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002268:	80c1      	strh	r1, [r0, #6]
    }
 800226a:	4770      	bx	lr

0800226c <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 800226c:	8101      	strh	r1, [r0, #8]
    }
 800226e:	4770      	bx	lr

08002270 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002270:	8141      	strh	r1, [r0, #10]
    }
 8002272:	4770      	bx	lr

08002274 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002274:	4770      	bx	lr

08002276 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8002276:	4770      	bx	lr

08002278 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8002278:	4770      	bx	lr

0800227a <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 800227a:	4770      	bx	lr

0800227c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 800227c:	4770      	bx	lr

0800227e <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800227e:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002280:	88c4      	ldrh	r4, [r0, #6]
 8002282:	6803      	ldr	r3, [r0, #0]
 8002284:	1b12      	subs	r2, r2, r4
 8002286:	8884      	ldrh	r4, [r0, #4]
 8002288:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800228a:	1b09      	subs	r1, r1, r4
 800228c:	b212      	sxth	r2, r2
    }
 800228e:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8002292:	b209      	sxth	r1, r1
 8002294:	4718      	bx	r3

08002296 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8002296:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800229a:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800229c:	f04f 33ff 	mov.w	r3, #4294967295
 80022a0:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 80022a2:	6813      	ldr	r3, [r2, #0]
 80022a4:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 80022a6:	6010      	str	r0, [r2, #0]
    }
 80022a8:	4770      	bx	lr

080022aa <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80022aa:	4770      	bx	lr

080022ac <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80022ac:	4770      	bx	lr

080022ae <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80022ae:	6041      	str	r1, [r0, #4]
    }
 80022b0:	4770      	bx	lr

080022b2 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80022b2:	4770      	bx	lr

080022b4 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80022b4:	4b06      	ldr	r3, [pc, #24]	; (80022d0 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80022b6:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 80022ba:	2300      	movs	r3, #0
 80022bc:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80022c0:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 80022c4:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 80022c8:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
 80022cc:	4770      	bx	lr
 80022ce:	bf00      	nop
 80022d0:	080023e5 	.word	0x080023e5

080022d4 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 80022d4:	2301      	movs	r3, #1
 80022d6:	7203      	strb	r3, [r0, #8]
    }
 80022d8:	4770      	bx	lr

080022da <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 80022da:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80022de:	b11a      	cbz	r2, 80022e8 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 80022e0:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 80022e4:	b102      	cbz	r2, 80022e8 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 80022e6:	6018      	str	r0, [r3, #0]
        }
    }
 80022e8:	4770      	bx	lr

080022ea <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD1Ev>:
{
public:
    /**
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
 80022ea:	4770      	bx	lr

080022ec <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
class WipeTransition : public Transition
 80022ec:	4770      	bx	lr

080022ee <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 80022ee:	4770      	bx	lr

080022f0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 80022f0:	4770      	bx	lr

080022f2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
            // Copy rect from tft to client framebuffer
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
        }
    }

    virtual void tearDown()
 80022f2:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 80022f4:	6840      	ldr	r0, [r0, #4]
 80022f6:	6803      	ldr	r3, [r0, #0]
 80022f8:	3110      	adds	r1, #16
 80022fa:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80022fc:	4718      	bx	r3

080022fe <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    }

    virtual void init()
 80022fe:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 8002300:	6840      	ldr	r0, [r0, #4]
 8002302:	6803      	ldr	r3, [r0, #0]
 8002304:	3110      	adds	r1, #16
 8002306:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002308:	4718      	bx	r3

0800230a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 800230a:	4770      	bx	lr

0800230c <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect4drawERKNS_4RectE>:
        }
 800230c:	4770      	bx	lr

0800230e <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect12getSolidRectEv>:
        virtual Rect getSolidRect() const
 800230e:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002310:	2200      	movs	r2, #0
            return Rect(0U, 0U, rect.width, rect.height);
 8002312:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8002316:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 800231a:	8002      	strh	r2, [r0, #0]
 800231c:	8042      	strh	r2, [r0, #2]
 800231e:	8084      	strh	r4, [r0, #4]
 8002320:	80c1      	strh	r1, [r0, #6]
        }
 8002322:	bd10      	pop	{r4, pc}

08002324 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002324:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8002326:	68c2      	ldr	r2, [r0, #12]
 8002328:	6841      	ldr	r1, [r0, #4]
 800232a:	1054      	asrs	r4, r2, #1
    virtual void execute()
 800232c:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 800232e:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002332:	07d2      	lsls	r2, r2, #31
 8002334:	bf48      	it	mi
 8002336:	590a      	ldrmi	r2, [r1, r4]
 8002338:	689b      	ldr	r3, [r3, #8]
    }
 800233a:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 800233e:	bf48      	it	mi
 8002340:	58d3      	ldrmi	r3, [r2, r3]
 8002342:	4718      	bx	r3

08002344 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002344:	6843      	ldr	r3, [r0, #4]
 8002346:	b12b      	cbz	r3, 8002354 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8002348:	6883      	ldr	r3, [r0, #8]
 800234a:	b92b      	cbnz	r3, 8002358 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 800234c:	68c0      	ldr	r0, [r0, #12]
 800234e:	f000 0001 	and.w	r0, r0, #1
 8002352:	4770      	bx	lr
 8002354:	4618      	mov	r0, r3
 8002356:	4770      	bx	lr
 8002358:	2001      	movs	r0, #1
    }
 800235a:	4770      	bx	lr

0800235c <_ZN8touchgfx12NoTransitionD0Ev>:
 800235c:	b510      	push	{r4, lr}
 800235e:	210c      	movs	r1, #12
 8002360:	4604      	mov	r4, r0
 8002362:	f01e f991 	bl	8020688 <_ZdlPvj>
 8002366:	4620      	mov	r0, r4
 8002368:	bd10      	pop	{r4, pc}

0800236a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800236a:	b510      	push	{r4, lr}
 800236c:	2110      	movs	r1, #16
 800236e:	4604      	mov	r4, r0
 8002370:	f01e f98a 	bl	8020688 <_ZdlPvj>
 8002374:	4620      	mov	r0, r4
 8002376:	bd10      	pop	{r4, pc}

08002378 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8002378:	b510      	push	{r4, lr}
 800237a:	f44f 71ac 	mov.w	r1, #344	; 0x158
 800237e:	4604      	mov	r4, r0
 8002380:	f01e f982 	bl	8020688 <_ZdlPvj>
 8002384:	4620      	mov	r0, r4
 8002386:	bd10      	pop	{r4, pc}

08002388 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
class WipeTransition : public Transition
 8002388:	b510      	push	{r4, lr}
 800238a:	2138      	movs	r1, #56	; 0x38
 800238c:	4604      	mov	r4, r0
 800238e:	f01e f97b 	bl	8020688 <_ZdlPvj>
 8002392:	4620      	mov	r0, r4
 8002394:	bd10      	pop	{r4, pc}

08002396 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD0Ev>:
    class FullSolidRect : public Widget
 8002396:	b510      	push	{r4, lr}
 8002398:	2128      	movs	r1, #40	; 0x28
 800239a:	4604      	mov	r4, r0
 800239c:	f01e f974 	bl	8020688 <_ZdlPvj>
 80023a0:	4620      	mov	r0, r4
 80023a2:	bd10      	pop	{r4, pc}

080023a4 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80023a4:	b508      	push	{r3, lr}
        Application::getInstance()->invalidate();
 80023a6:	f00e fe53 	bl	8011050 <_ZN8touchgfx11Application11getInstanceEv>
    }
 80023aa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        Application::getInstance()->invalidate();
 80023ae:	f00f b9f3 	b.w	8011798 <_ZN8touchgfx11Application10invalidateEv>

080023b2 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 80023b2:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80023b6:	b112      	cbz	r2, 80023be <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 80023b8:	6803      	ldr	r3, [r0, #0]
 80023ba:	695b      	ldr	r3, [r3, #20]
 80023bc:	4718      	bx	r3
    }
 80023be:	4770      	bx	lr

080023c0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80023c0:	b510      	push	{r4, lr}
 80023c2:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80023c4:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 80023c8:	b158      	cbz	r0, 80023e2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80023ca:	6803      	ldr	r3, [r0, #0]
 80023cc:	68db      	ldr	r3, [r3, #12]
 80023ce:	4798      	blx	r3
 80023d0:	b138      	cbz	r0, 80023e2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80023d2:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 80023d6:	6803      	ldr	r3, [r0, #0]
 80023d8:	689b      	ldr	r3, [r3, #8]
 80023da:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80023dc:	2300      	movs	r3, #0
 80023de:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 80023e2:	bd10      	pop	{r4, pc}

080023e4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 80023e4:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80023e8:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 80023ec:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80023ee:	68a8      	ldr	r0, [r5, #8]
 80023f0:	6803      	ldr	r3, [r0, #0]
 80023f2:	6a1b      	ldr	r3, [r3, #32]
 80023f4:	4798      	blx	r3
 80023f6:	f5b0 6fc2 	cmp.w	r0, #1552	; 0x610
 80023fa:	d205      	bcs.n	8002408 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>
 80023fc:	4b45      	ldr	r3, [pc, #276]	; (8002514 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 80023fe:	4a46      	ldr	r2, [pc, #280]	; (8002518 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002400:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002402:	4846      	ldr	r0, [pc, #280]	; (800251c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 8002404:	f01e f9f4 	bl	80207f0 <__assert_func>
 8002408:	6868      	ldr	r0, [r5, #4]
 800240a:	6803      	ldr	r3, [r0, #0]
 800240c:	6a1b      	ldr	r3, [r3, #32]
 800240e:	4798      	blx	r3
 8002410:	280f      	cmp	r0, #15
 8002412:	d803      	bhi.n	800241c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x38>
 8002414:	4b42      	ldr	r3, [pc, #264]	; (8002520 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 8002416:	4a40      	ldr	r2, [pc, #256]	; (8002518 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002418:	21a4      	movs	r1, #164	; 0xa4
 800241a:	e7f2      	b.n	8002402 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800241c:	68e8      	ldr	r0, [r5, #12]
 800241e:	6803      	ldr	r3, [r0, #0]
 8002420:	6a1b      	ldr	r3, [r3, #32]
 8002422:	4798      	blx	r3
 8002424:	280b      	cmp	r0, #11
 8002426:	d803      	bhi.n	8002430 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4c>
 8002428:	4b3e      	ldr	r3, [pc, #248]	; (8002524 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 800242a:	4a3b      	ldr	r2, [pc, #236]	; (8002518 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 800242c:	21a5      	movs	r1, #165	; 0xa5
 800242e:	e7e8      	b.n	8002402 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    if (*currentTrans)
 8002430:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 800252c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
    Application::getInstance()->clearAllTimerWidgets();
 8002434:	f00e fe0c 	bl	8011050 <_ZN8touchgfx11Application11getInstanceEv>
 8002438:	f00e fe10 	bl	801105c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800243c:	f8d9 0000 	ldr.w	r0, [r9]
 8002440:	b110      	cbz	r0, 8002448 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 8002442:	6803      	ldr	r3, [r0, #0]
 8002444:	68db      	ldr	r3, [r3, #12]
 8002446:	4798      	blx	r3
    if (*currentTrans)
 8002448:	f8d9 0000 	ldr.w	r0, [r9]
 800244c:	b110      	cbz	r0, 8002454 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 800244e:	6803      	ldr	r3, [r0, #0]
 8002450:	681b      	ldr	r3, [r3, #0]
 8002452:	4798      	blx	r3
    if (*currentScreen)
 8002454:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8002530 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x14c>
 8002458:	f8d8 0000 	ldr.w	r0, [r8]
 800245c:	b110      	cbz	r0, 8002464 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 800245e:	6803      	ldr	r3, [r0, #0]
 8002460:	695b      	ldr	r3, [r3, #20]
 8002462:	4798      	blx	r3
    if (*currentPresenter)
 8002464:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002468:	b110      	cbz	r0, 8002470 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 800246a:	6803      	ldr	r3, [r0, #0]
 800246c:	685b      	ldr	r3, [r3, #4]
 800246e:	4798      	blx	r3
    if (*currentScreen)
 8002470:	f8d8 0000 	ldr.w	r0, [r8]
 8002474:	b110      	cbz	r0, 800247c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 8002476:	6803      	ldr	r3, [r0, #0]
 8002478:	681b      	ldr	r3, [r3, #0]
 800247a:	4798      	blx	r3
    if (*currentPresenter)
 800247c:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002480:	b110      	cbz	r0, 8002488 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8002482:	6803      	ldr	r3, [r0, #0]
 8002484:	689b      	ldr	r3, [r3, #8]
 8002486:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002488:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 800248a:	6803      	ldr	r3, [r0, #0]
 800248c:	2100      	movs	r1, #0
 800248e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002490:	4798      	blx	r3
        : screenContainer(0), done(false)
 8002492:	f04f 0b00 	mov.w	fp, #0
 8002496:	4b24      	ldr	r3, [pc, #144]	; (8002528 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>)
 8002498:	6003      	str	r3, [r0, #0]
 800249a:	4604      	mov	r4, r0
 800249c:	f8c0 b004 	str.w	fp, [r0, #4]
 80024a0:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80024a4:	68a8      	ldr	r0, [r5, #8]
 80024a6:	6803      	ldr	r3, [r0, #0]
 80024a8:	4659      	mov	r1, fp
 80024aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80024ac:	4798      	blx	r3
 80024ae:	4606      	mov	r6, r0
 80024b0:	f002 fdc6 	bl	8005040 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80024b4:	6868      	ldr	r0, [r5, #4]
 80024b6:	6803      	ldr	r3, [r0, #0]
 80024b8:	4659      	mov	r1, fp
 80024ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80024bc:	4798      	blx	r3
 80024be:	4631      	mov	r1, r6
 80024c0:	4605      	mov	r5, r0
 80024c2:	f002 fd11 	bl	8004ee8 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 80024c6:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80024ca:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 80024ce:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80024d2:	b1e5      	cbz	r5, 800250e <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12a>
 80024d4:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80024d6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80024da:	6833      	ldr	r3, [r6, #0]
    virtual void DisplayCurrentValue() {};
    virtual void DisplayChargingFinished() {};

    void bind(Model* m)
    {
        model = m;
 80024dc:	f8c5 a008 	str.w	sl, [r5, #8]
 80024e0:	4630      	mov	r0, r6
 80024e2:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 80024e4:	63f5      	str	r5, [r6, #60]	; 0x3c
 80024e6:	4798      	blx	r3
    newPresenter->activate();
 80024e8:	682b      	ldr	r3, [r5, #0]
 80024ea:	4628      	mov	r0, r5
 80024ec:	681b      	ldr	r3, [r3, #0]
 80024ee:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80024f0:	4621      	mov	r1, r4
 80024f2:	4630      	mov	r0, r6
 80024f4:	f010 fa5a 	bl	80129ac <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80024f8:	6823      	ldr	r3, [r4, #0]
 80024fa:	4620      	mov	r0, r4
 80024fc:	691b      	ldr	r3, [r3, #16]
 80024fe:	4798      	blx	r3
    newTransition->invalidate();
 8002500:	6823      	ldr	r3, [r4, #0]
 8002502:	695b      	ldr	r3, [r3, #20]
 8002504:	4620      	mov	r0, r4
}
 8002506:	b001      	add	sp, #4
 8002508:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800250c:	4718      	bx	r3
    model->bind(newPresenter);
 800250e:	462b      	mov	r3, r5
 8002510:	e7e1      	b.n	80024d6 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xf2>
 8002512:	bf00      	nop
 8002514:	080221c4 	.word	0x080221c4
 8002518:	08022252 	.word	0x08022252
 800251c:	08022356 	.word	0x08022356
 8002520:	0802239d 	.word	0x0802239d
 8002524:	08022440 	.word	0x08022440
 8002528:	08022670 	.word	0x08022670
 800252c:	200155f4 	.word	0x200155f4
 8002530:	200155f0 	.word	0x200155f0

08002534 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreenGraphScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoScreenGraphScreenWipeTransitionEastImpl()
{
 8002534:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<ScreenGraphView, ScreenGraphPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002538:	e9d0 ba54 	ldrd	fp, sl, [r0, #336]	; 0x150
{
 800253c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800253e:	f8db 0008 	ldr.w	r0, [fp, #8]
 8002542:	6803      	ldr	r3, [r0, #0]
 8002544:	6a1b      	ldr	r3, [r3, #32]
 8002546:	4798      	blx	r3
 8002548:	f242 733b 	movw	r3, #10043	; 0x273b
 800254c:	4298      	cmp	r0, r3
 800254e:	d805      	bhi.n	800255c <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x28>
 8002550:	4b56      	ldr	r3, [pc, #344]	; (80026ac <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x178>)
 8002552:	4a57      	ldr	r2, [pc, #348]	; (80026b0 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x17c>)
 8002554:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002556:	4857      	ldr	r0, [pc, #348]	; (80026b4 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x180>)
 8002558:	f01e f94a 	bl	80207f0 <__assert_func>
 800255c:	f8db 0004 	ldr.w	r0, [fp, #4]
 8002560:	6803      	ldr	r3, [r0, #0]
 8002562:	6a1b      	ldr	r3, [r3, #32]
 8002564:	4798      	blx	r3
 8002566:	280f      	cmp	r0, #15
 8002568:	d803      	bhi.n	8002572 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x3e>
 800256a:	4b53      	ldr	r3, [pc, #332]	; (80026b8 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x184>)
 800256c:	4a50      	ldr	r2, [pc, #320]	; (80026b0 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x17c>)
 800256e:	21a4      	movs	r1, #164	; 0xa4
 8002570:	e7f1      	b.n	8002556 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x22>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002572:	f8db 000c 	ldr.w	r0, [fp, #12]
 8002576:	6803      	ldr	r3, [r0, #0]
 8002578:	6a1b      	ldr	r3, [r3, #32]
 800257a:	4798      	blx	r3
 800257c:	2837      	cmp	r0, #55	; 0x37
 800257e:	d803      	bhi.n	8002588 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x54>
 8002580:	4b4e      	ldr	r3, [pc, #312]	; (80026bc <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x188>)
 8002582:	4a4b      	ldr	r2, [pc, #300]	; (80026b0 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x17c>)
 8002584:	21a5      	movs	r1, #165	; 0xa5
 8002586:	e7e6      	b.n	8002556 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x22>
    if (*currentTrans)
 8002588:	f8df 9144 	ldr.w	r9, [pc, #324]	; 80026d0 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x19c>
    Application::getInstance()->clearAllTimerWidgets();
 800258c:	f00e fd60 	bl	8011050 <_ZN8touchgfx11Application11getInstanceEv>
 8002590:	f00e fd64 	bl	801105c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002594:	f8d9 0000 	ldr.w	r0, [r9]
 8002598:	b110      	cbz	r0, 80025a0 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x6c>
        (*currentTrans)->tearDown();
 800259a:	6803      	ldr	r3, [r0, #0]
 800259c:	68db      	ldr	r3, [r3, #12]
 800259e:	4798      	blx	r3
    if (*currentTrans)
 80025a0:	f8d9 0000 	ldr.w	r0, [r9]
 80025a4:	b110      	cbz	r0, 80025ac <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x78>
        (*currentTrans)->~Transition();
 80025a6:	6803      	ldr	r3, [r0, #0]
 80025a8:	681b      	ldr	r3, [r3, #0]
 80025aa:	4798      	blx	r3
    if (*currentScreen)
 80025ac:	f8df 8124 	ldr.w	r8, [pc, #292]	; 80026d4 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x1a0>
 80025b0:	f8d8 0000 	ldr.w	r0, [r8]
 80025b4:	b110      	cbz	r0, 80025bc <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x88>
        (*currentScreen)->tearDownScreen();
 80025b6:	6803      	ldr	r3, [r0, #0]
 80025b8:	695b      	ldr	r3, [r3, #20]
 80025ba:	4798      	blx	r3
    if (*currentPresenter)
 80025bc:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80025c0:	b110      	cbz	r0, 80025c8 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x94>
        (*currentPresenter)->deactivate();
 80025c2:	6803      	ldr	r3, [r0, #0]
 80025c4:	685b      	ldr	r3, [r3, #4]
 80025c6:	4798      	blx	r3
    if (*currentScreen)
 80025c8:	f8d8 0000 	ldr.w	r0, [r8]
 80025cc:	b110      	cbz	r0, 80025d4 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0xa0>
        (*currentScreen)->~Screen();
 80025ce:	6803      	ldr	r3, [r0, #0]
 80025d0:	681b      	ldr	r3, [r3, #0]
 80025d2:	4798      	blx	r3
    if (*currentPresenter)
 80025d4:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80025d8:	b110      	cbz	r0, 80025e0 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0xac>
        (*currentPresenter)->~Presenter();
 80025da:	6803      	ldr	r3, [r0, #0]
 80025dc:	689b      	ldr	r3, [r3, #8]
 80025de:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80025e0:	f8db 000c 	ldr.w	r0, [fp, #12]
 80025e4:	6803      	ldr	r3, [r0, #0]
 80025e6:	2100      	movs	r1, #0
 80025e8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80025ea:	4798      	blx	r3
          solid()
 80025ec:	4b34      	ldr	r3, [pc, #208]	; (80026c0 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x18c>)
 80025ee:	6003      	str	r3, [r0, #0]
 80025f0:	4604      	mov	r4, r0
 80025f2:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 80025f6:	8103      	strh	r3, [r0, #8]
 80025f8:	2500      	movs	r5, #0
 80025fa:	f44f 7380 	mov.w	r3, #256	; 0x100
 80025fe:	6045      	str	r5, [r0, #4]
 8002600:	7285      	strb	r5, [r0, #10]
 8002602:	6363      	str	r3, [r4, #52]	; 0x34
    class FullSolidRect : public Widget
 8002604:	4b2f      	ldr	r3, [pc, #188]	; (80026c4 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x190>)
 8002606:	6123      	str	r3, [r4, #16]
            targetValue = HAL::DISPLAY_WIDTH;
 8002608:	4b2f      	ldr	r3, [pc, #188]	; (80026c8 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x194>)
          solid()
 800260a:	81e5      	strh	r5, [r4, #14]
            targetValue = HAL::DISPLAY_WIDTH;
 800260c:	f9b3 1000 	ldrsh.w	r1, [r3]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8002610:	4b2e      	ldr	r3, [pc, #184]	; (80026cc <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x198>)
            targetValue = HAL::DISPLAY_WIDTH;
 8002612:	81a1      	strh	r1, [r4, #12]
          solid()
 8002614:	3010      	adds	r0, #16
 8002616:	e9c4 5505 	strd	r5, r5, [r4, #20]
 800261a:	e9c4 5507 	strd	r5, r5, [r4, #28]
 800261e:	e9c4 5509 	strd	r5, r5, [r4, #36]	; 0x24
 8002622:	e9c4 550b 	strd	r5, r5, [r4, #44]	; 0x2c
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8002626:	f9b3 6000 	ldrsh.w	r6, [r3]
        setWidth(width);
 800262a:	9001      	str	r0, [sp, #4]
 800262c:	f7ff fe1e 	bl	800226c <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8002630:	6923      	ldr	r3, [r4, #16]
 8002632:	9801      	ldr	r0, [sp, #4]
 8002634:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002636:	4631      	mov	r1, r6
 8002638:	4798      	blx	r3
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800263a:	f8db 0008 	ldr.w	r0, [fp, #8]
 800263e:	6803      	ldr	r3, [r0, #0]
 8002640:	4629      	mov	r1, r5
 8002642:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002644:	4798      	blx	r3
 8002646:	4606      	mov	r6, r0
 8002648:	f003 f862 	bl	8005710 <_ZN15ScreenGraphViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800264c:	f8db 0004 	ldr.w	r0, [fp, #4]
 8002650:	6803      	ldr	r3, [r0, #0]
 8002652:	4629      	mov	r1, r5
 8002654:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002656:	4798      	blx	r3
 8002658:	4631      	mov	r1, r6
 800265a:	4605      	mov	r5, r0
 800265c:	f002 fd4a 	bl	80050f4 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView>
    *currentTrans = newTransition;
 8002660:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8002664:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8002668:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800266c:	b1e5      	cbz	r5, 80026a8 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x174>
 800266e:	1d2b      	adds	r3, r5, #4
 8002670:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002674:	6833      	ldr	r3, [r6, #0]
 8002676:	f8c5 a008 	str.w	sl, [r5, #8]
 800267a:	4630      	mov	r0, r6
 800267c:	68db      	ldr	r3, [r3, #12]
 800267e:	63f5      	str	r5, [r6, #60]	; 0x3c
 8002680:	4798      	blx	r3
    newPresenter->activate();
 8002682:	682b      	ldr	r3, [r5, #0]
 8002684:	4628      	mov	r0, r5
 8002686:	681b      	ldr	r3, [r3, #0]
 8002688:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800268a:	4621      	mov	r1, r4
 800268c:	4630      	mov	r0, r6
 800268e:	f010 f98d 	bl	80129ac <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002692:	6823      	ldr	r3, [r4, #0]
 8002694:	4620      	mov	r0, r4
 8002696:	691b      	ldr	r3, [r3, #16]
 8002698:	4798      	blx	r3
    newTransition->invalidate();
 800269a:	6823      	ldr	r3, [r4, #0]
 800269c:	695b      	ldr	r3, [r3, #20]
 800269e:	4620      	mov	r0, r4
}
 80026a0:	b003      	add	sp, #12
 80026a2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80026a6:	4718      	bx	r3
    model->bind(newPresenter);
 80026a8:	462b      	mov	r3, r5
 80026aa:	e7e1      	b.n	8002670 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x13c>
 80026ac:	080221c4 	.word	0x080221c4
 80026b0:	080224e3 	.word	0x080224e3
 80026b4:	08022356 	.word	0x08022356
 80026b8:	0802239d 	.word	0x0802239d
 80026bc:	08022440 	.word	0x08022440
 80026c0:	080226fc 	.word	0x080226fc
 80026c4:	08022694 	.word	0x08022694
 80026c8:	200155a0 	.word	0x200155a0
 80026cc:	200155a2 	.word	0x200155a2
 80026d0:	200155f4 	.word	0x200155f4
 80026d4:	200155f0 	.word	0x200155f0

080026d8 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80026d8:	4b04      	ldr	r3, [pc, #16]	; (80026ec <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80026da:	681b      	ldr	r3, [r3, #0]
 80026dc:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 80026e0:	b10a      	cbz	r2, 80026e6 <_ZN8touchgfx3HAL3lcdEv+0xe>
 80026e2:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80026e4:	b900      	cbnz	r0, 80026e8 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 80026e6:	6898      	ldr	r0, [r3, #8]
    }
 80026e8:	4770      	bx	lr
 80026ea:	bf00      	nop
 80026ec:	200155ac 	.word	0x200155ac

080026f0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80026f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80026f2:	4604      	mov	r4, r0
        animationCounter++;
 80026f4:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter <= (animationSteps))
 80026f6:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 80026f8:	3001      	adds	r0, #1
 80026fa:	b2c0      	uxtb	r0, r0
        if (animationCounter <= (animationSteps))
 80026fc:	4298      	cmp	r0, r3
    virtual void handleTickEvent()
 80026fe:	b089      	sub	sp, #36	; 0x24
        animationCounter++;
 8002700:	72a0      	strb	r0, [r4, #10]
        if (animationCounter <= (animationSteps))
 8002702:	d850      	bhi.n	80027a6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xb6>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002704:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8002708:	2100      	movs	r1, #0
 800270a:	f010 f955 	bl	80129b8 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
            if (calculatedValue % 2)
 800270e:	f010 0201 	ands.w	r2, r0, #1
 8002712:	b283      	uxth	r3, r0
 8002714:	d04d      	beq.n	80027b2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xc2>
                calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8002716:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800271a:	2800      	cmp	r0, #0
 800271c:	bfd8      	it	le
 800271e:	460a      	movle	r2, r1
 8002720:	4413      	add	r3, r2
 8002722:	81e3      	strh	r3, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002724:	4e24      	ldr	r6, [pc, #144]	; (80027b8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xc8>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8002726:	4f25      	ldr	r7, [pc, #148]	; (80027bc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xcc>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002728:	8831      	ldrh	r1, [r6, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 800272a:	f8b4 c018 	ldrh.w	ip, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800272e:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8002730:	f9b7 0000 	ldrsh.w	r0, [r7]
 8002734:	f8ad 001e 	strh.w	r0, [sp, #30]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002738:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 800273a:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 800273c:	4463      	add	r3, ip
 800273e:	1a5b      	subs	r3, r3, r1
 8002740:	f8ad 301c 	strh.w	r3, [sp, #28]
                screenContainer->invalidateRect(r);
 8002744:	6803      	ldr	r3, [r0, #0]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002746:	b212      	sxth	r2, r2
 8002748:	2500      	movs	r5, #0
                screenContainer->invalidateRect(r);
 800274a:	691b      	ldr	r3, [r3, #16]
        rect.width = width;
 800274c:	8322      	strh	r2, [r4, #24]
 800274e:	f8ad 2018 	strh.w	r2, [sp, #24]
 8002752:	f8ad 501a 	strh.w	r5, [sp, #26]
 8002756:	a906      	add	r1, sp, #24
 8002758:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800275a:	7aa3      	ldrb	r3, [r4, #10]
 800275c:	2b01      	cmp	r3, #1
 800275e:	d126      	bne.n	80027ae <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
 8002760:	4b17      	ldr	r3, [pc, #92]	; (80027c0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xd0>)
 8002762:	781b      	ldrb	r3, [r3, #0]
 8002764:	b31b      	cbz	r3, 80027ae <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
            Rect rect = solid.getRect(); // Part to copy between buffers
 8002766:	69a1      	ldr	r1, [r4, #24]
 8002768:	6960      	ldr	r0, [r4, #20]
 800276a:	ab04      	add	r3, sp, #16
 800276c:	c303      	stmia	r3!, {r0, r1}
        return instance;
 800276e:	4b15      	ldr	r3, [pc, #84]	; (80027c4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xd4>)
 8002770:	6818      	ldr	r0, [r3, #0]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 8002772:	6803      	ldr	r3, [r0, #0]
 8002774:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002776:	4798      	blx	r3
            source.width = HAL::DISPLAY_WIDTH;
 8002778:	8833      	ldrh	r3, [r6, #0]
 800277a:	f8ad 301c 	strh.w	r3, [sp, #28]
            source.height = HAL::DISPLAY_HEIGHT;
 800277e:	883b      	ldrh	r3, [r7, #0]
 8002780:	f8ad 301e 	strh.w	r3, [sp, #30]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 8002784:	9003      	str	r0, [sp, #12]
        : x(0), y(0), width(0), height(0)
 8002786:	f8ad 5018 	strh.w	r5, [sp, #24]
 800278a:	f8ad 501a 	strh.w	r5, [sp, #26]
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
 800278e:	f7ff ffa3 	bl	80026d8 <_ZN8touchgfx3HAL3lcdEv>
 8002792:	22ff      	movs	r2, #255	; 0xff
 8002794:	6803      	ldr	r3, [r0, #0]
 8002796:	9200      	str	r2, [sp, #0]
 8002798:	9501      	str	r5, [sp, #4]
 800279a:	68dc      	ldr	r4, [r3, #12]
 800279c:	9903      	ldr	r1, [sp, #12]
 800279e:	ab04      	add	r3, sp, #16
 80027a0:	aa06      	add	r2, sp, #24
 80027a2:	47a0      	blx	r4
 80027a4:	e003      	b.n	80027ae <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
            done = true;
 80027a6:	2301      	movs	r3, #1
 80027a8:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80027aa:	2300      	movs	r3, #0
 80027ac:	72a3      	strb	r3, [r4, #10]
    }
 80027ae:	b009      	add	sp, #36	; 0x24
 80027b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80027b2:	81e0      	strh	r0, [r4, #14]
 80027b4:	e7b6      	b.n	8002724 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x34>
 80027b6:	bf00      	nop
 80027b8:	200155a0 	.word	0x200155a0
 80027bc:	200155a2 	.word	0x200155a2
 80027c0:	200155aa 	.word	0x200155aa
 80027c4:	200155ac 	.word	0x200155ac

080027c8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80027c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80027ca:	4604      	mov	r4, r0
 80027cc:	4617      	mov	r7, r2
 80027ce:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 80027d0:	f00e fc5e 	bl	8011090 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80027d4:	4b0e      	ldr	r3, [pc, #56]	; (8002810 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>)
 80027d6:	601c      	str	r4, [r3, #0]
      model(m)
 80027d8:	4b0e      	ldr	r3, [pc, #56]	; (8002814 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x4c>)
 80027da:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 80027dc:	4b0e      	ldr	r3, [pc, #56]	; (8002818 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 80027de:	2500      	movs	r5, #0
 80027e0:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
 80027e4:	4b0d      	ldr	r3, [pc, #52]	; (800281c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 80027e6:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 80027ea:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80027ec:	6803      	ldr	r3, [r0, #0]
 80027ee:	4629      	mov	r1, r5
 80027f0:	689b      	ldr	r3, [r3, #8]
 80027f2:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
      model(m)
 80027f6:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80027fa:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 80027fc:	4628      	mov	r0, r5
 80027fe:	f002 fa97 	bl	8004d30 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002802:	f7ff ff69 	bl	80026d8 <_ZN8touchgfx3HAL3lcdEv>
 8002806:	f016 fd30 	bl	801926a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 800280a:	4620      	mov	r0, r4
 800280c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800280e:	bf00      	nop
 8002810:	20015600 	.word	0x20015600
 8002814:	08022624 	.word	0x08022624
 8002818:	0802260c 	.word	0x0802260c
 800281c:	200155ac 	.word	0x200155ac

08002820 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002820:	4b06      	ldr	r3, [pc, #24]	; (800283c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 8002822:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002826:	2300      	movs	r3, #0
 8002828:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 800282c:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002830:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002834:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002838:	4770      	bx	lr
 800283a:	bf00      	nop
 800283c:	080023e5 	.word	0x080023e5

08002840 <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv>:
 8002840:	4b06      	ldr	r3, [pc, #24]	; (800285c <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv+0x1c>)
 8002842:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002846:	2300      	movs	r3, #0
 8002848:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 800284c:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002850:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002854:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002858:	4770      	bx	lr
 800285a:	bf00      	nop
 800285c:	08002535 	.word	0x08002535

08002860 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8002860:	6a00      	ldr	r0, [r0, #32]
 8002862:	4770      	bx	lr

08002864 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8002864:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8002866:	4770      	bx	lr

08002868 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8002868:	4770      	bx	lr

0800286a <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800286a:	888b      	ldrh	r3, [r1, #4]
 800286c:	6980      	ldr	r0, [r0, #24]
 800286e:	680a      	ldr	r2, [r1, #0]
 8002870:	0adb      	lsrs	r3, r3, #11
 8002872:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8002876:	4410      	add	r0, r2
 8002878:	4770      	bx	lr

0800287a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800287a:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 800287c:	b1c2      	cbz	r2, 80028b0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 800287e:	7b13      	ldrb	r3, [r2, #12]
 8002880:	b1b3      	cbz	r3, 80028b0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8002882:	7b54      	ldrb	r4, [r2, #13]
 8002884:	7ad2      	ldrb	r2, [r2, #11]
 8002886:	0224      	lsls	r4, r4, #8
 8002888:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800288c:	4314      	orrs	r4, r2
 800288e:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002890:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002892:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8002896:	8813      	ldrh	r3, [r2, #0]
 8002898:	428b      	cmp	r3, r1
 800289a:	d102      	bne.n	80028a2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 800289c:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 80028a0:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 80028a2:	d805      	bhi.n	80028b0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80028a4:	3801      	subs	r0, #1
 80028a6:	b280      	uxth	r0, r0
 80028a8:	3204      	adds	r2, #4
 80028aa:	2800      	cmp	r0, #0
 80028ac:	d1f3      	bne.n	8002896 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80028ae:	e7f7      	b.n	80028a0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 80028b0:	2000      	movs	r0, #0
 80028b2:	e7f5      	b.n	80028a0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

080028b4 <_ZN8touchgfx13GeneratedFontD0Ev>:
 80028b4:	b510      	push	{r4, lr}
 80028b6:	2128      	movs	r1, #40	; 0x28
 80028b8:	4604      	mov	r4, r0
 80028ba:	f01d fee5 	bl	8020688 <_ZdlPvj>
 80028be:	4620      	mov	r0, r4
 80028c0:	bd10      	pop	{r4, pc}
	...

080028c4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 80028c4:	b530      	push	{r4, r5, lr}
 80028c6:	b089      	sub	sp, #36	; 0x24
 80028c8:	4604      	mov	r4, r0
      arabicTable(formsTable)
 80028ca:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 80028ce:	9506      	str	r5, [sp, #24]
 80028d0:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 80028d4:	9505      	str	r5, [sp, #20]
 80028d6:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80028da:	9504      	str	r5, [sp, #16]
 80028dc:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 80028e0:	9503      	str	r5, [sp, #12]
 80028e2:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 80028e6:	9502      	str	r5, [sp, #8]
 80028e8:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 80028ec:	9501      	str	r5, [sp, #4]
 80028ee:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80028f2:	9500      	str	r5, [sp, #0]
 80028f4:	f00f fbf0 	bl	80120d8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 80028f8:	4b06      	ldr	r3, [pc, #24]	; (8002914 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
 80028fa:	6023      	str	r3, [r4, #0]
 80028fc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80028fe:	61a3      	str	r3, [r4, #24]
 8002900:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002902:	61e3      	str	r3, [r4, #28]
 8002904:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8002906:	6223      	str	r3, [r4, #32]
 8002908:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800290a:	6263      	str	r3, [r4, #36]	; 0x24
}
 800290c:	4620      	mov	r0, r4
 800290e:	b009      	add	sp, #36	; 0x24
 8002910:	bd30      	pop	{r4, r5, pc}
 8002912:	bf00      	nop
 8002914:	08022720 	.word	0x08022720

08002918 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8002918:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800291a:	4770      	bx	lr

0800291c <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 800291c:	4770      	bx	lr

0800291e <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 800291e:	4770      	bx	lr

08002920 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002920:	4770      	bx	lr

08002922 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002922:	4770      	bx	lr

08002924 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002924:	4770      	bx	lr

08002926 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8002926:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002928:	6803      	ldr	r3, [r0, #0]
 800292a:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 800292c:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 800292e:	466d      	mov	r5, sp
 8002930:	4601      	mov	r1, r0
 8002932:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 8002936:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002938:	4628      	mov	r0, r5
 800293a:	4798      	blx	r3
 800293c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002940:	343c      	adds	r4, #60	; 0x3c
 8002942:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002946:	b005      	add	sp, #20
 8002948:	bd30      	pop	{r4, r5, pc}

0800294a <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 800294a:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 800294c:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 800294e:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 8002950:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002952:	466d      	mov	r5, sp
 8002954:	4601      	mov	r1, r0
 8002956:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 800295a:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 800295c:	4628      	mov	r0, r5
 800295e:	4798      	blx	r3
 8002960:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002964:	343c      	adds	r4, #60	; 0x3c
 8002966:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 800296a:	b005      	add	sp, #20
 800296c:	bd30      	pop	{r4, r5, pc}

0800296e <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800296e:	2200      	movs	r2, #0
 8002970:	8002      	strh	r2, [r0, #0]
 8002972:	8042      	strh	r2, [r0, #2]
 8002974:	8082      	strh	r2, [r0, #4]
 8002976:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002978:	4770      	bx	lr

0800297a <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800297a:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 800297e:	4770      	bx	lr

08002980 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002980:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 8002982:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002984:	4604      	mov	r4, r0
        setX(x);
 8002986:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002988:	4615      	mov	r5, r2
        setX(x);
 800298a:	4798      	blx	r3
        setBaselineY(baselineY);
 800298c:	6823      	ldr	r3, [r4, #0]
 800298e:	4629      	mov	r1, r5
 8002990:	4620      	mov	r0, r4
 8002992:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 8002994:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002998:	4718      	bx	r3

0800299a <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 800299a:	2000      	movs	r0, #0
 800299c:	4770      	bx	lr

0800299e <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 800299e:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80029a0:	4770      	bx	lr

080029a2 <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 80029a2:	4770      	bx	lr

080029a4 <_ZN15Screen1ViewBase17ButtonDownClickedEv>:
     * Virtual Action Handlers
     */
    virtual void ButtonDownClicked()
    {
        // Override and implement this function in Screen1
    }
 80029a4:	4770      	bx	lr

080029a6 <_ZN15Screen1ViewBase15ButtonUpClickedEv>:

    virtual void ButtonUpClicked()
    {
        // Override and implement this function in Screen1
    }
 80029a6:	4770      	bx	lr

080029a8 <_ZN15Screen1ViewBase18ButtonStartClickedEv>:

    virtual void ButtonStartClicked()
    {
        // Override and implement this function in Screen1
    }
 80029a8:	4770      	bx	lr

080029aa <_ZN15Screen1ViewBase19ButtonUpTimeClickedEv>:

    virtual void ButtonUpTimeClicked()
    {
        // Override and implement this function in Screen1
    }
 80029aa:	4770      	bx	lr

080029ac <_ZN15Screen1ViewBase21ButtonDownTimeClickedEv>:

    virtual void ButtonDownTimeClicked()
    {
        // Override and implement this function in Screen1
    }
 80029ac:	4770      	bx	lr

080029ae <_ZN15Screen1ViewBase11setupScreenEv>:
}

void Screen1ViewBase::setupScreen()
{

}
 80029ae:	4770      	bx	lr

080029b0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
 * @tparam T Generic type parameter. Typically a AbstractButtonContainer subclass.
 *
 * @see AbstractButtonContainer, BoxWithBorder
 */
template <class T>
class BoxWithBorderButtonStyle : public T
 80029b0:	4770      	bx	lr

080029b2 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
     *
     * @see setPressed
     */
    bool getPressed()
    {
        return pressed;
 80029b2:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
 80029b6:	b14b      	cbz	r3, 80029cc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x1a>
 80029b8:	f100 026c 	add.w	r2, r0, #108	; 0x6c
 80029bc:	6812      	ldr	r2, [r2, #0]
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 80029be:	65c2      	str	r2, [r0, #92]	; 0x5c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 80029c0:	b13b      	cbz	r3, 80029d2 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x20>
 80029c2:	f100 0374 	add.w	r3, r0, #116	; 0x74
 80029c6:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
 80029c8:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
 80029ca:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 80029cc:	f100 0268 	add.w	r2, r0, #104	; 0x68
 80029d0:	e7f4      	b.n	80029bc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xa>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 80029d2:	f100 0370 	add.w	r3, r0, #112	; 0x70
 80029d6:	e7f6      	b.n	80029c6 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>

080029d8 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80029d8:	4770      	bx	lr

080029da <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 80029da:	4770      	bx	lr

080029dc <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
 * The position of the icon can be adjusted with setIconXY.
 *
 * @see AbstractButtonContainer
 */
template <class T>
class IconButtonStyle : public T
 80029dc:	4770      	bx	lr

080029de <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 80029de:	4770      	bx	lr

080029e0 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80029e0:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80029e2:	68c2      	ldr	r2, [r0, #12]
 80029e4:	6844      	ldr	r4, [r0, #4]
 80029e6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80029e8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80029ea:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80029ee:	07d2      	lsls	r2, r2, #31
 80029f0:	bf48      	it	mi
 80029f2:	5962      	ldrmi	r2, [r4, r5]
 80029f4:	689b      	ldr	r3, [r3, #8]
    }
 80029f6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80029f8:	bf48      	it	mi
 80029fa:	58d3      	ldrmi	r3, [r2, r3]
 80029fc:	4718      	bx	r3

080029fe <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80029fe:	6843      	ldr	r3, [r0, #4]
 8002a00:	b12b      	cbz	r3, 8002a0e <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 8002a02:	6883      	ldr	r3, [r0, #8]
 8002a04:	b92b      	cbnz	r3, 8002a12 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8002a06:	68c0      	ldr	r0, [r0, #12]
 8002a08:	f000 0001 	and.w	r0, r0, #1
 8002a0c:	4770      	bx	lr
 8002a0e:	4618      	mov	r0, r3
 8002a10:	4770      	bx	lr
 8002a12:	2001      	movs	r0, #1
    }
 8002a14:	4770      	bx	lr

08002a16 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002a16:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002a18:	68c2      	ldr	r2, [r0, #12]
 8002a1a:	6844      	ldr	r4, [r0, #4]
 8002a1c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002a1e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002a20:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002a24:	07d2      	lsls	r2, r2, #31
 8002a26:	bf48      	it	mi
 8002a28:	5962      	ldrmi	r2, [r4, r5]
 8002a2a:	689b      	ldr	r3, [r3, #8]
    }
 8002a2c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002a2e:	bf48      	it	mi
 8002a30:	58d3      	ldrmi	r3, [r2, r3]
 8002a32:	4718      	bx	r3

08002a34 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002a34:	6843      	ldr	r3, [r0, #4]
 8002a36:	b12b      	cbz	r3, 8002a44 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002a38:	6883      	ldr	r3, [r0, #8]
 8002a3a:	b92b      	cbnz	r3, 8002a48 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002a3c:	68c0      	ldr	r0, [r0, #12]
 8002a3e:	f000 0001 	and.w	r0, r0, #1
 8002a42:	4770      	bx	lr
 8002a44:	4618      	mov	r0, r3
 8002a46:	4770      	bx	lr
 8002a48:	2001      	movs	r0, #1
    }
 8002a4a:	4770      	bx	lr

08002a4c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:
    }

    /** @copydoc Image::getAlpha() */
    uint8_t getAlpha() const
    {
        return alpha;
 8002a4c:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
     *
     * @note The user code must call invalidate() in order to update the display.
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002a50:	f880 30a4 	strb.w	r3, [r0, #164]	; 0xa4
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002a54:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        iconImage.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8002a58:	4770      	bx	lr

08002a5a <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
 8002a5a:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 8002a5e:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8002a62:	4770      	bx	lr

08002a64 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    virtual void handlePressedUpdated()
 8002a64:	b510      	push	{r4, lr}
 8002a66:	4604      	mov	r4, r0
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 8002a68:	307c      	adds	r0, #124	; 0x7c
 8002a6a:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8002a6e:	b13b      	cbz	r3, 8002a80 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x1c>
 8002a70:	f104 017a 	add.w	r1, r4, #122	; 0x7a
 8002a74:	f00b fe3e 	bl	800e6f4 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::handlePressedUpdated();
 8002a78:	4620      	mov	r0, r4
 8002a7a:	f7ff ff9a 	bl	80029b2 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 8002a7e:	bd10      	pop	{r4, pc}
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 8002a80:	f104 0178 	add.w	r1, r4, #120	; 0x78
 8002a84:	e7f6      	b.n	8002a74 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x10>

08002a86 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002a86:	b510      	push	{r4, lr}
 8002a88:	214c      	movs	r1, #76	; 0x4c
 8002a8a:	4604      	mov	r4, r0
 8002a8c:	f01d fdfc 	bl	8020688 <_ZdlPvj>
 8002a90:	4620      	mov	r0, r4
 8002a92:	bd10      	pop	{r4, pc}

08002a94 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
 8002a94:	b510      	push	{r4, lr}
 8002a96:	2178      	movs	r1, #120	; 0x78
 8002a98:	4604      	mov	r4, r0
 8002a9a:	f01d fdf5 	bl	8020688 <_ZdlPvj>
 8002a9e:	4620      	mov	r0, r4
 8002aa0:	bd10      	pop	{r4, pc}

08002aa2 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class IconButtonStyle : public T
 8002aa2:	b510      	push	{r4, lr}
 8002aa4:	21a8      	movs	r1, #168	; 0xa8
 8002aa6:	4604      	mov	r4, r0
 8002aa8:	f01d fdee 	bl	8020688 <_ZdlPvj>
 8002aac:	4620      	mov	r0, r4
 8002aae:	bd10      	pop	{r4, pc}

08002ab0 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002ab0:	b510      	push	{r4, lr}
 8002ab2:	2110      	movs	r1, #16
 8002ab4:	4604      	mov	r4, r0
 8002ab6:	f01d fde7 	bl	8020688 <_ZdlPvj>
 8002aba:	4620      	mov	r0, r4
 8002abc:	bd10      	pop	{r4, pc}

08002abe <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 8002abe:	b510      	push	{r4, lr}
 8002ac0:	2110      	movs	r1, #16
 8002ac2:	4604      	mov	r4, r0
 8002ac4:	f01d fde0 	bl	8020688 <_ZdlPvj>
 8002ac8:	4620      	mov	r0, r4
 8002aca:	bd10      	pop	{r4, pc}

08002acc <_ZN15Screen1ViewBaseD0Ev>:
    virtual ~Screen1ViewBase() {}
 8002acc:	b510      	push	{r4, lr}
 8002ace:	f44f 61c2 	mov.w	r1, #1552	; 0x610
 8002ad2:	4604      	mov	r4, r0
 8002ad4:	f01d fdd8 	bl	8020688 <_ZdlPvj>
 8002ad8:	4620      	mov	r0, r4
 8002ada:	bd10      	pop	{r4, pc}

08002adc <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 8002adc:	b510      	push	{r4, lr}
 8002ade:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
 8002ae0:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8002ae2:	b150      	cbz	r0, 8002afa <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 8002ae4:	6803      	ldr	r3, [r0, #0]
 8002ae6:	68db      	ldr	r3, [r3, #12]
 8002ae8:	4798      	blx	r3
 8002aea:	b130      	cbz	r0, 8002afa <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
        {
            action->execute(*this);
 8002aec:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8002aee:	6803      	ldr	r3, [r0, #0]
 8002af0:	4621      	mov	r1, r4
 8002af2:	689b      	ldr	r3, [r3, #8]
        }
    }
 8002af4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 8002af8:	4718      	bx	r3
    }
 8002afa:	bd10      	pop	{r4, pc}

08002afc <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:
    }
}

void Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &ButtonDown)
 8002afc:	f100 02c4 	add.w	r2, r0, #196	; 0xc4
 8002b00:	4291      	cmp	r1, r2
 8002b02:	d102      	bne.n	8002b0a <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
    {
        //ButtonUpInteraction
        //When ButtonDown clicked call virtual function
        //Call ButtonDownClicked
        ButtonDownClicked();
 8002b04:	6803      	ldr	r3, [r0, #0]
 8002b06:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    else if (&src == &ButtonUpTime)
    {
        //InteractionButtonUpTimeClicked
        //When ButtonUpTime clicked call virtual function
        //Call ButtonUpTimeClicked
        ButtonUpTimeClicked();
 8002b08:	4718      	bx	r3
    else if (&src == &ButtonUp)
 8002b0a:	f500 72b6 	add.w	r2, r0, #364	; 0x16c
 8002b0e:	4291      	cmp	r1, r2
 8002b10:	d102      	bne.n	8002b18 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1c>
        ButtonUpClicked();
 8002b12:	6803      	ldr	r3, [r0, #0]
 8002b14:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b16:	e7f7      	b.n	8002b08 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    else if (&src == &ButtonDownTime)
 8002b18:	f200 4224 	addw	r2, r0, #1060	; 0x424
 8002b1c:	4291      	cmp	r1, r2
 8002b1e:	d102      	bne.n	8002b26 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x2a>
        ButtonDownTimeClicked();
 8002b20:	6803      	ldr	r3, [r0, #0]
 8002b22:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002b24:	e7f0      	b.n	8002b08 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    else if (&src == &ButtonUpTime)
 8002b26:	f200 42cc 	addw	r2, r0, #1228	; 0x4cc
 8002b2a:	4291      	cmp	r1, r2
 8002b2c:	d102      	bne.n	8002b34 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x38>
        ButtonUpTimeClicked();
 8002b2e:	6803      	ldr	r3, [r0, #0]
 8002b30:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002b32:	e7e9      	b.n	8002b08 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    }
}
 8002b34:	4770      	bx	lr

08002b36 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
 8002b36:	790b      	ldrb	r3, [r1, #4]
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8002b38:	b570      	push	{r4, r5, r6, lr}
        return pressed;
 8002b3a:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
 8002b3e:	4604      	mov	r4, r0
 8002b40:	460d      	mov	r5, r1
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002b42:	b99b      	cbnz	r3, 8002b6c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x36>
 8002b44:	b98e      	cbnz	r6, 8002b6a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 8002b46:	fab3 f383 	clz	r3, r3
 8002b4a:	095b      	lsrs	r3, r3, #5
 8002b4c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        handlePressedUpdated();
 8002b50:	6823      	ldr	r3, [r4, #0]
 8002b52:	4620      	mov	r0, r4
 8002b54:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002b58:	4798      	blx	r3
        {
            setPressed(newPressedValue);
            invalidate();
 8002b5a:	6823      	ldr	r3, [r4, #0]
 8002b5c:	4620      	mov	r0, r4
 8002b5e:	695b      	ldr	r3, [r3, #20]
 8002b60:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 8002b62:	b116      	cbz	r6, 8002b6a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002b64:	792b      	ldrb	r3, [r5, #4]
 8002b66:	2b01      	cmp	r3, #1
 8002b68:	d003      	beq.n	8002b72 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
 8002b6a:	bd70      	pop	{r4, r5, r6, pc}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002b6c:	2e00      	cmp	r6, #0
 8002b6e:	d0fc      	beq.n	8002b6a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002b70:	e7e9      	b.n	8002b46 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            executeAction();
 8002b72:	6823      	ldr	r3, [r4, #0]
 8002b74:	4620      	mov	r0, r4
 8002b76:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    }
 8002b7a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 8002b7e:	4718      	bx	r3

08002b80 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002b80:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002b82:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002b84:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002b86:	4b12      	ldr	r3, [pc, #72]	; (8002bd0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8002b88:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002b8a:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002b8c:	b28d      	uxth	r5, r1
 8002b8e:	b92b      	cbnz	r3, 8002b9c <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8002b90:	4b10      	ldr	r3, [pc, #64]	; (8002bd4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8002b92:	4a11      	ldr	r2, [pc, #68]	; (8002bd8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002b94:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002b96:	4811      	ldr	r0, [pc, #68]	; (8002bdc <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8002b98:	f01d fe2a 	bl	80207f0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002b9c:	4910      	ldr	r1, [pc, #64]	; (8002be0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8002b9e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002ba0:	8809      	ldrh	r1, [r1, #0]
 8002ba2:	4291      	cmp	r1, r2
 8002ba4:	d803      	bhi.n	8002bae <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8002ba6:	4b0f      	ldr	r3, [pc, #60]	; (8002be4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8002ba8:	4a0b      	ldr	r2, [pc, #44]	; (8002bd8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002baa:	216d      	movs	r1, #109	; 0x6d
 8002bac:	e7f3      	b.n	8002b96 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002bae:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8002bb2:	4b0d      	ldr	r3, [pc, #52]	; (8002be8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8002bb4:	681b      	ldr	r3, [r3, #0]
 8002bb6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8002bba:	6803      	ldr	r3, [r0, #0]
 8002bbc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002bbe:	4798      	blx	r3
 8002bc0:	1a28      	subs	r0, r5, r0
 8002bc2:	b201      	sxth	r1, r0
 8002bc4:	4633      	mov	r3, r6
 8002bc6:	4620      	mov	r0, r4
    }
 8002bc8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002bcc:	4718      	bx	r3
 8002bce:	bf00      	nop
 8002bd0:	20015604 	.word	0x20015604
 8002bd4:	08022770 	.word	0x08022770
 8002bd8:	080227b2 	.word	0x080227b2
 8002bdc:	080227ed 	.word	0x080227ed
 8002be0:	20015608 	.word	0x20015608
 8002be4:	08022834 	.word	0x08022834
 8002be8:	2001560c 	.word	0x2001560c

08002bec <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonStart)
 8002bec:	f500 732a 	add.w	r3, r0, #680	; 0x2a8
 8002bf0:	428b      	cmp	r3, r1
{
 8002bf2:	b510      	push	{r4, lr}
 8002bf4:	4604      	mov	r4, r0
    if (&src == &buttonStart)
 8002bf6:	d109      	bne.n	8002c0c <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x20>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002bf8:	f00e fa2a 	bl	8011050 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoScreenGraphScreenWipeTransitionEast();
 8002bfc:	f7ff fe20 	bl	8002840 <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv>
        ButtonStartClicked();
 8002c00:	6823      	ldr	r3, [r4, #0]
 8002c02:	4620      	mov	r0, r4
 8002c04:	6b5b      	ldr	r3, [r3, #52]	; 0x34
}
 8002c06:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        ButtonStartClicked();
 8002c0a:	4718      	bx	r3
}
 8002c0c:	bd10      	pop	{r4, pc}

08002c0e <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8002c0e:	2200      	movs	r2, #0
 8002c10:	f04f 31ff 	mov.w	r1, #4294967295
 8002c14:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8002c18:	6082      	str	r2, [r0, #8]
    }
 8002c1a:	4770      	bx	lr

08002c1c <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002c1c:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002c1e:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002c20:	4604      	mov	r4, r0
        setX(x);
 8002c22:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002c24:	4615      	mov	r5, r2
        setX(x);
 8002c26:	4798      	blx	r3
        setY(y);
 8002c28:	6823      	ldr	r3, [r4, #0]
 8002c2a:	4629      	mov	r1, r5
 8002c2c:	4620      	mov	r0, r4
 8002c2e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8002c30:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002c34:	4718      	bx	r3

08002c36 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>:
        iconReleased = newIconReleased;
 8002c36:	880b      	ldrh	r3, [r1, #0]
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002c38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        iconReleased = newIconReleased;
 8002c3c:	f8a0 3078 	strh.w	r3, [r0, #120]	; 0x78
        iconPressed = newIconPressed;
 8002c40:	8813      	ldrh	r3, [r2, #0]
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002c42:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
        iconPressed = newIconPressed;
 8002c46:	f8a0 307a 	strh.w	r3, [r0, #122]	; 0x7a
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002c4a:	4604      	mov	r4, r0
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002c4c:	4610      	mov	r0, r2
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002c4e:	4690      	mov	r8, r2
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002c50:	f011 fc2e 	bl	80144b0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8002c54:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8002c58:	4607      	mov	r7, r0
 8002c5a:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8002c5e:	4640      	mov	r0, r8
 8002c60:	f3c3 064f 	ubfx	r6, r3, #1, #16
 8002c64:	f011 fc58 	bl	8014518 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8002c68:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8002c6c:	f3c5 054f 	ubfx	r5, r5, #1, #16
 8002c70:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8002c74:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
 8002c78:	eba6 0260 	sub.w	r2, r6, r0, asr #1
 8002c7c:	eba5 0767 	sub.w	r7, r5, r7, asr #1
 8002c80:	f104 007c 	add.w	r0, r4, #124	; 0x7c
 8002c84:	b239      	sxth	r1, r7
 8002c86:	b212      	sxth	r2, r2
 8002c88:	f7ff ffc8 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
        handlePressedUpdated();
 8002c8c:	6823      	ldr	r3, [r4, #0]
 8002c8e:	4620      	mov	r0, r4
 8002c90:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
    }
 8002c94:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        handlePressedUpdated();
 8002c98:	4718      	bx	r3

08002c9a <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002c9a:	b570      	push	{r4, r5, r6, lr}
 8002c9c:	4604      	mov	r4, r0
 8002c9e:	461d      	mov	r5, r3
 8002ca0:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002ca4:	f7ff ffba 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002ca8:	6823      	ldr	r3, [r4, #0]
 8002caa:	4629      	mov	r1, r5
 8002cac:	4620      	mov	r0, r4
 8002cae:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002cb0:	4798      	blx	r3
        setHeight(height);
 8002cb2:	6823      	ldr	r3, [r4, #0]
 8002cb4:	4631      	mov	r1, r6
 8002cb6:	4620      	mov	r0, r4
 8002cb8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002cba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002cbe:	4718      	bx	r3

08002cc0 <_ZN8touchgfx6WidgetC1Ev>:
 8002cc0:	2200      	movs	r2, #0
 8002cc2:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002cc6:	e9c0 2203 	strd	r2, r2, [r0, #12]
          visible(true)
 8002cca:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8002cce:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8002cd2:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002cd6:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8002cd8:	4a01      	ldr	r2, [pc, #4]	; (8002ce0 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8002cda:	6002      	str	r2, [r0, #0]
 8002cdc:	4770      	bx	lr
 8002cde:	bf00      	nop
 8002ce0:	080228b8 	.word	0x080228b8

08002ce4 <_ZN8touchgfx3BoxC1Ev>:
    Box()
 8002ce4:	b510      	push	{r4, lr}
        : Widget(), alpha(255), color(0)
 8002ce6:	2226      	movs	r2, #38	; 0x26
    Box()
 8002ce8:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 8002cea:	2100      	movs	r1, #0
 8002cec:	f01d ff06 	bl	8020afc <memset>
 8002cf0:	4620      	mov	r0, r4
 8002cf2:	f7ff ffe5 	bl	8002cc0 <_ZN8touchgfx6WidgetC1Ev>
 8002cf6:	4b04      	ldr	r3, [pc, #16]	; (8002d08 <_ZN8touchgfx3BoxC1Ev+0x24>)
 8002cf8:	6023      	str	r3, [r4, #0]
 8002cfa:	23ff      	movs	r3, #255	; 0xff
 8002cfc:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
        : color(col)
 8002d00:	2300      	movs	r3, #0
 8002d02:	62a3      	str	r3, [r4, #40]	; 0x28
    }
 8002d04:	4620      	mov	r0, r4
 8002d06:	bd10      	pop	{r4, pc}
 8002d08:	0802400c 	.word	0x0802400c

08002d0c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
    Image(const Bitmap& bmp = Bitmap())
 8002d0c:	b538      	push	{r3, r4, r5, lr}
        : Widget(), bitmap(bmp), alpha(255)
 8002d0e:	2226      	movs	r2, #38	; 0x26
    Image(const Bitmap& bmp = Bitmap())
 8002d10:	4604      	mov	r4, r0
 8002d12:	460d      	mov	r5, r1
        : Widget(), bitmap(bmp), alpha(255)
 8002d14:	2100      	movs	r1, #0
 8002d16:	f01d fef1 	bl	8020afc <memset>
 8002d1a:	4620      	mov	r0, r4
 8002d1c:	f7ff ffd0 	bl	8002cc0 <_ZN8touchgfx6WidgetC1Ev>
 8002d20:	4b06      	ldr	r3, [pc, #24]	; (8002d3c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 8002d22:	6023      	str	r3, [r4, #0]
 8002d24:	882b      	ldrh	r3, [r5, #0]
 8002d26:	84e3      	strh	r3, [r4, #38]	; 0x26
 8002d28:	23ff      	movs	r3, #255	; 0xff
        Image::setBitmap(bmp);
 8002d2a:	4620      	mov	r0, r4
        : Widget(), bitmap(bmp), alpha(255)
 8002d2c:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
        Image::setBitmap(bmp);
 8002d30:	4629      	mov	r1, r5
 8002d32:	f00b fcdf 	bl	800e6f4 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 8002d36:	4620      	mov	r0, r4
 8002d38:	bd38      	pop	{r3, r4, r5, pc}
 8002d3a:	bf00      	nop
 8002d3c:	08024150 	.word	0x08024150

08002d40 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8002d40:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002d42:	2226      	movs	r2, #38	; 0x26
    TextArea()
 8002d44:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002d46:	2100      	movs	r1, #0
 8002d48:	f01d fed8 	bl	8020afc <memset>
 8002d4c:	4620      	mov	r0, r4
 8002d4e:	f7ff ffb7 	bl	8002cc0 <_ZN8touchgfx6WidgetC1Ev>
 8002d52:	4b0a      	ldr	r3, [pc, #40]	; (8002d7c <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8002d54:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8002d56:	4b0a      	ldr	r3, [pc, #40]	; (8002d80 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 8002d58:	62a3      	str	r3, [r4, #40]	; 0x28
 8002d5a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002d5e:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002d60:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002d64:	2300      	movs	r3, #0
 8002d66:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002d6a:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 8002d6e:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002d72:	8723      	strh	r3, [r4, #56]	; 0x38
 8002d74:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8002d76:	4620      	mov	r0, r4
 8002d78:	bd10      	pop	{r4, pc}
 8002d7a:	bf00      	nop
 8002d7c:	08023f7c 	.word	0x08023f7c
 8002d80:	080221bc 	.word	0x080221bc

08002d84 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8002d84:	4b1b      	ldr	r3, [pc, #108]	; (8002df4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8002d86:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8002d88:	881b      	ldrh	r3, [r3, #0]
 8002d8a:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8002d8c:	428b      	cmp	r3, r1
    void updateTextPosition()
 8002d8e:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8002d90:	d92b      	bls.n	8002dea <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002d92:	4b19      	ldr	r3, [pc, #100]	; (8002df8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8002d94:	681b      	ldr	r3, [r3, #0]
 8002d96:	b92b      	cbnz	r3, 8002da4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8002d98:	4b18      	ldr	r3, [pc, #96]	; (8002dfc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8002d9a:	4a19      	ldr	r2, [pc, #100]	; (8002e00 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8002d9c:	4819      	ldr	r0, [pc, #100]	; (8002e04 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8002d9e:	216c      	movs	r1, #108	; 0x6c
 8002da0:	f01d fd26 	bl	80207f0 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002da4:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002da8:	4b17      	ldr	r3, [pc, #92]	; (8002e08 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8002daa:	681b      	ldr	r3, [r3, #0]
 8002dac:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002db0:	4b16      	ldr	r3, [pc, #88]	; (8002e0c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x88>)
 8002db2:	6818      	ldr	r0, [r3, #0]
 8002db4:	f001 fff8 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002db8:	682b      	ldr	r3, [r5, #0]
 8002dba:	9001      	str	r0, [sp, #4]
 8002dbc:	4601      	mov	r1, r0
 8002dbe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002dc0:	4628      	mov	r0, r5
 8002dc2:	4798      	blx	r3
 8002dc4:	682b      	ldr	r3, [r5, #0]
 8002dc6:	9901      	ldr	r1, [sp, #4]
 8002dc8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002dca:	4604      	mov	r4, r0
 8002dcc:	4628      	mov	r0, r5
 8002dce:	4798      	blx	r3
 8002dd0:	682b      	ldr	r3, [r5, #0]
 8002dd2:	9901      	ldr	r1, [sp, #4]
 8002dd4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002dd6:	fb14 f400 	smulbb	r4, r4, r0
 8002dda:	4628      	mov	r0, r5
 8002ddc:	4798      	blx	r3
 8002dde:	b2e4      	uxtb	r4, r4
 8002de0:	4404      	add	r4, r0
 8002de2:	f886 4045 	strb.w	r4, [r6, #69]	; 0x45
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002de6:	b002      	add	sp, #8
 8002de8:	bd70      	pop	{r4, r5, r6, pc}
            textHeightIncludingSpacing = 0;
 8002dea:	2300      	movs	r3, #0
 8002dec:	f880 3045 	strb.w	r3, [r0, #69]	; 0x45
    }
 8002df0:	e7f9      	b.n	8002de6 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x62>
 8002df2:	bf00      	nop
 8002df4:	20015608 	.word	0x20015608
 8002df8:	20015604 	.word	0x20015604
 8002dfc:	08022770 	.word	0x08022770
 8002e00:	080227b2 	.word	0x080227b2
 8002e04:	080227ed 	.word	0x080227ed
 8002e08:	2001560c 	.word	0x2001560c
 8002e0c:	20015610 	.word	0x20015610

08002e10 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>:
        : pressed(false), alpha(255), action(0)
 8002e10:	f44f 437f 	mov.w	r3, #65280	; 0xff00
    IconButtonStyle()
 8002e14:	b573      	push	{r0, r1, r4, r5, r6, lr}
        : T(), up(), down()
 8002e16:	4606      	mov	r6, r0
 8002e18:	8583      	strh	r3, [r0, #44]	; 0x2c
        touchable = touch;
 8002e1a:	f240 1301 	movw	r3, #257	; 0x101
          firstChild(0)
 8002e1e:	2500      	movs	r5, #0
 8002e20:	8483      	strh	r3, [r0, #36]	; 0x24
 8002e22:	4b1d      	ldr	r3, [pc, #116]	; (8002e98 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x88>)
 8002e24:	6285      	str	r5, [r0, #40]	; 0x28
        : x(0), y(0), width(0), height(0)
 8002e26:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8002e2a:	e9c0 5503 	strd	r5, r5, [r0, #12]
          visible(true)
 8002e2e:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8002e32:	e9c0 5507 	strd	r5, r5, [r0, #28]
 8002e36:	6305      	str	r5, [r0, #48]	; 0x30
 8002e38:	f846 3b34 	str.w	r3, [r6], #52
 8002e3c:	4604      	mov	r4, r0
        : Box(), borderColor(0), borderSize(0)
 8002e3e:	4630      	mov	r0, r6
 8002e40:	f7ff ff50 	bl	8002ce4 <_ZN8touchgfx3BoxC1Ev>
 8002e44:	4b15      	ldr	r3, [pc, #84]	; (8002e9c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x8c>)
 8002e46:	6363      	str	r3, [r4, #52]	; 0x34
        borderBox.setXY(0, 0);
 8002e48:	462a      	mov	r2, r5
        : color(0)
 8002e4a:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8002e4e:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
        : color(col)
 8002e52:	6625      	str	r5, [r4, #96]	; 0x60
 8002e54:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8002e58:	4629      	mov	r1, r5
 8002e5a:	4630      	mov	r0, r6
 8002e5c:	f7ff fede 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 8002e60:	4631      	mov	r1, r6
 8002e62:	4620      	mov	r0, r4
 8002e64:	f007 fdd2 	bl	800aa0c <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : T()
 8002e68:	4b0d      	ldr	r3, [pc, #52]	; (8002ea0 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x90>)
 8002e6a:	6023      	str	r3, [r4, #0]
 8002e6c:	f104 057c 	add.w	r5, r4, #124	; 0x7c
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002e70:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002e74:	f8a4 3078 	strh.w	r3, [r4, #120]	; 0x78
 8002e78:	f8a4 307a 	strh.w	r3, [r4, #122]	; 0x7a
 8002e7c:	a901      	add	r1, sp, #4
 8002e7e:	4628      	mov	r0, r5
 8002e80:	f8ad 3004 	strh.w	r3, [sp, #4]
 8002e84:	f7ff ff42 	bl	8002d0c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
        T::add(iconImage);
 8002e88:	4620      	mov	r0, r4
 8002e8a:	4629      	mov	r1, r5
 8002e8c:	f007 fdbe 	bl	800aa0c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8002e90:	4620      	mov	r0, r4
 8002e92:	b002      	add	sp, #8
 8002e94:	bd70      	pop	{r4, r5, r6, pc}
 8002e96:	bf00      	nop
 8002e98:	080229b0 	.word	0x080229b0
 8002e9c:	080240e8 	.word	0x080240e8
 8002ea0:	08022a4c 	.word	0x08022a4c

08002ea4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>:
    void setBoxWithBorderColors(const colortype colorReleased, const colortype colorPressed, const colortype borderColorReleased, const colortype borderColorPressed)
 8002ea4:	b410      	push	{r4}
        borderUp = borderColorReleased;
 8002ea6:	6703      	str	r3, [r0, #112]	; 0x70
        borderDown = borderColorPressed;
 8002ea8:	9b01      	ldr	r3, [sp, #4]
 8002eaa:	6743      	str	r3, [r0, #116]	; 0x74
        handlePressedUpdated();
 8002eac:	6803      	ldr	r3, [r0, #0]
    }
 8002eae:	f85d 4b04 	ldr.w	r4, [sp], #4
        handlePressedUpdated();
 8002eb2:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
        down = colorPressed;
 8002eb6:	e9c0 121a 	strd	r1, r2, [r0, #104]	; 0x68
        handlePressedUpdated();
 8002eba:	4718      	bx	r3

08002ebc <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 8002ebc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002ec0:	ed2d 8b0c 	vpush	{d8-d13}
 8002ec4:	4604      	mov	r4, r0
 8002ec6:	b08d      	sub	sp, #52	; 0x34
        : presenter(0)
 8002ec8:	f00f fbc4 	bl	8012654 <_ZN8touchgfx6ScreenC1Ev>
    flexButtonCallback(this, &Screen1ViewBase::flexButtonCallbackHandler)
 8002ecc:	4622      	mov	r2, r4
 8002ece:	2500      	movs	r5, #0
 8002ed0:	4be5      	ldr	r3, [pc, #916]	; (8003268 <_ZN15Screen1ViewBaseC1Ev+0x3ac>)
 8002ed2:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002ed4:	f842 3b40 	str.w	r3, [r2], #64
 8002ed8:	4610      	mov	r0, r2
 8002eda:	ee08 2a10 	vmov	s16, r2
 8002ede:	f7ff ff01 	bl	8002ce4 <_ZN8touchgfx3BoxC1Ev>
 8002ee2:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 8002ee6:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8002eea:	a90a      	add	r1, sp, #40	; 0x28
 8002eec:	4618      	mov	r0, r3
 8002eee:	ee0c 3a10 	vmov	s24, r3
 8002ef2:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8002ef6:	f7ff ff09 	bl	8002d0c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002efa:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8002efe:	a90a      	add	r1, sp, #40	; 0x28
 8002f00:	4618      	mov	r0, r3
 8002f02:	ee0c 3a90 	vmov	s25, r3
 8002f06:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8002f0a:	f7ff feff 	bl	8002d0c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002f0e:	f104 03c4 	add.w	r3, r4, #196	; 0xc4
 8002f12:	4618      	mov	r0, r3
 8002f14:	ee08 3a90 	vmov	s17, r3
 8002f18:	f7ff ff7a 	bl	8002e10 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002f1c:	f504 73b6 	add.w	r3, r4, #364	; 0x16c
 8002f20:	4618      	mov	r0, r3
 8002f22:	ee09 3a10 	vmov	s18, r3
 8002f26:	f7ff ff73 	bl	8002e10 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002f2a:	f504 7305 	add.w	r3, r4, #532	; 0x214
 8002f2e:	4618      	mov	r0, r3
 8002f30:	ee09 3a90 	vmov	s19, r3
 8002f34:	f7ff ff04 	bl	8002d40 <_ZN8touchgfx8TextAreaC1Ev>
 8002f38:	f504 7317 	add.w	r3, r4, #604	; 0x25c
        : TextArea()
 8002f3c:	4618      	mov	r0, r3
 8002f3e:	ee0a 3a10 	vmov	s20, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8002f42:	4fca      	ldr	r7, [pc, #808]	; (800326c <_ZN15Screen1ViewBaseC1Ev+0x3b0>)
        : TextArea()
 8002f44:	f7ff fefc 	bl	8002d40 <_ZN8touchgfx8TextAreaC1Ev>
 8002f48:	f504 732a 	add.w	r3, r4, #680	; 0x2a8
        : TextAreaWithWildcardBase(), wc1(0)
 8002f4c:	f8c4 725c 	str.w	r7, [r4, #604]	; 0x25c
 8002f50:	f8c4 52a4 	str.w	r5, [r4, #676]	; 0x2a4
 8002f54:	4618      	mov	r0, r3
 8002f56:	ee0a 3a90 	vmov	s21, r3
 8002f5a:	f00b fcfd 	bl	800e958 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002f5e:	f504 733c 	add.w	r3, r4, #752	; 0x2f0
 8002f62:	a90a      	add	r1, sp, #40	; 0x28
 8002f64:	4618      	mov	r0, r3
 8002f66:	ee0d 3a10 	vmov	s26, r3
 8002f6a:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8002f6e:	f7ff fecd 	bl	8002d0c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002f72:	f504 7347 	add.w	r3, r4, #796	; 0x31c
 8002f76:	4618      	mov	r0, r3
 8002f78:	ee0b 3a10 	vmov	s22, r3
 8002f7c:	f7ff fee0 	bl	8002d40 <_ZN8touchgfx8TextAreaC1Ev>
 8002f80:	f504 7359 	add.w	r3, r4, #868	; 0x364
 8002f84:	f504 7b6c 	add.w	fp, r4, #944	; 0x3b0
        : TextArea()
 8002f88:	4618      	mov	r0, r3
 8002f8a:	ee0b 3a90 	vmov	s23, r3
 8002f8e:	f7ff fed7 	bl	8002d40 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8002f92:	f8c4 7364 	str.w	r7, [r4, #868]	; 0x364
 8002f96:	f8c4 53ac 	str.w	r5, [r4, #940]	; 0x3ac
 8002f9a:	4658      	mov	r0, fp
 8002f9c:	f7ff fed0 	bl	8002d40 <_ZN8touchgfx8TextAreaC1Ev>
 8002fa0:	f504 737e 	add.w	r3, r4, #1016	; 0x3f8
 8002fa4:	a90a      	add	r1, sp, #40	; 0x28
 8002fa6:	4618      	mov	r0, r3
 8002fa8:	f204 4924 	addw	r9, r4, #1060	; 0x424
 8002fac:	ee0d 3a90 	vmov	s27, r3
 8002fb0:	f204 48cc 	addw	r8, r4, #1228	; 0x4cc
 8002fb4:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8002fb8:	f7ff fea8 	bl	8002d0c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002fbc:	4648      	mov	r0, r9
 8002fbe:	f7ff ff27 	bl	8002e10 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002fc2:	f204 5a74 	addw	sl, r4, #1396	; 0x574
 8002fc6:	4640      	mov	r0, r8
 8002fc8:	f7ff ff22 	bl	8002e10 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
        : TextArea()
 8002fcc:	4650      	mov	r0, sl
 8002fce:	f7ff feb7 	bl	8002d40 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002fd2:	4ba7      	ldr	r3, [pc, #668]	; (8003270 <_ZN15Screen1ViewBaseC1Ev+0x3b4>)
 8002fd4:	f8c4 35f0 	str.w	r3, [r4, #1520]	; 0x5f0
 8002fd8:	4ba6      	ldr	r3, [pc, #664]	; (8003274 <_ZN15Screen1ViewBaseC1Ev+0x3b8>)
 8002fda:	f8c4 35f8 	str.w	r3, [r4, #1528]	; 0x5f8
 8002fde:	4ba6      	ldr	r3, [pc, #664]	; (8003278 <_ZN15Screen1ViewBaseC1Ev+0x3bc>)
 8002fe0:	f8c4 3600 	str.w	r3, [r4, #1536]	; 0x600
 8002fe4:	4ba5      	ldr	r3, [pc, #660]	; (800327c <_ZN15Screen1ViewBaseC1Ev+0x3c0>)
 8002fe6:	f8c4 3608 	str.w	r3, [r4, #1544]	; 0x608
    __background.setPosition(0, 0, 320, 240);
 8002fea:	23f0      	movs	r3, #240	; 0xf0
 8002fec:	462a      	mov	r2, r5
 8002fee:	4629      	mov	r1, r5
 8002ff0:	ee18 0a10 	vmov	r0, s16
        : TextAreaWithWildcardBase(), wc1(0)
 8002ff4:	f8c4 7574 	str.w	r7, [r4, #1396]	; 0x574
 8002ff8:	f8c4 55bc 	str.w	r5, [r4, #1468]	; 0x5bc
 8002ffc:	f8c4 55fc 	str.w	r5, [r4, #1532]	; 0x5fc
 8003000:	f8c4 560c 	str.w	r5, [r4, #1548]	; 0x60c
 8003004:	9300      	str	r3, [sp, #0]
 8003006:	f8c4 45f4 	str.w	r4, [r4, #1524]	; 0x5f4
 800300a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800300e:	f8c4 4604 	str.w	r4, [r4, #1540]	; 0x604
 8003012:	f7ff fe42 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003016:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800301a:	66a3      	str	r3, [r4, #104]	; 0x68
    image2.setXY(0, 0);
 800301c:	462a      	mov	r2, r5
 800301e:	4629      	mov	r1, r5
 8003020:	ee1c 0a10 	vmov	r0, s24
 8003024:	f7ff fdfa 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
    image2.setBitmap(touchgfx::Bitmap(BITMAP_BG_ID));
 8003028:	ee1c 0a10 	vmov	r0, s24
 800302c:	a90a      	add	r1, sp, #40	; 0x28
 800302e:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 8003032:	f00b fb5f 	bl	800e6f4 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    image3.setXY(118, 25);
 8003036:	ee1c 0a90 	vmov	r0, s25
 800303a:	2219      	movs	r2, #25
 800303c:	2176      	movs	r1, #118	; 0x76
 800303e:	f7ff fded 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
    image3.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 8003042:	aa0a      	add	r2, sp, #40	; 0x28
 8003044:	f04f 0303 	mov.w	r3, #3
 8003048:	4611      	mov	r1, r2
 800304a:	ee1c 0a90 	vmov	r0, s25
 800304e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003052:	f00b fb4f 	bl	800e6f4 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        borderBox.setPosition(x, y, width, height);
 8003056:	2317      	movs	r3, #23
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 8003058:	2705      	movs	r7, #5
    ButtonDown.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800305a:	4e89      	ldr	r6, [pc, #548]	; (8003280 <_ZN15Screen1ViewBaseC1Ev+0x3c4>)
 800305c:	9300      	str	r3, [sp, #0]
 800305e:	462a      	mov	r2, r5
 8003060:	4629      	mov	r1, r5
 8003062:	232b      	movs	r3, #43	; 0x2b
 8003064:	f104 00f8 	add.w	r0, r4, #248	; 0xf8
 8003068:	f7ff fe17 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800306c:	4b85      	ldr	r3, [pc, #532]	; (8003284 <_ZN15Screen1ViewBaseC1Ev+0x3c8>)
 800306e:	4a86      	ldr	r2, [pc, #536]	; (8003288 <_ZN15Screen1ViewBaseC1Ev+0x3cc>)
 8003070:	4986      	ldr	r1, [pc, #536]	; (800328c <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
 8003072:	9600      	str	r6, [sp, #0]
 8003074:	ee18 0a90 	vmov	r0, s17
 8003078:	f8a4 7128 	strh.w	r7, [r4, #296]	; 0x128
 800307c:	f7ff ff12 	bl	8002ea4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    ButtonDown.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID));
 8003080:	ee18 0a90 	vmov	r0, s17
 8003084:	aa0a      	add	r2, sp, #40	; 0x28
 8003086:	a909      	add	r1, sp, #36	; 0x24
 8003088:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800308c:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8003090:	f7ff fdd1 	bl	8002c36 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
    ButtonDown.setPosition(273, 49, 43, 23);
 8003094:	2317      	movs	r3, #23
 8003096:	ee18 0a90 	vmov	r0, s17
 800309a:	9300      	str	r3, [sp, #0]
 800309c:	2231      	movs	r2, #49	; 0x31
 800309e:	232b      	movs	r3, #43	; 0x2b
 80030a0:	f240 1111 	movw	r1, #273	; 0x111
        rect.x = x;
 80030a4:	f8c4 7144 	str.w	r7, [r4, #324]	; 0x144
 80030a8:	f7ff fdf7 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonDown.setAction(flexButtonCallback);
 80030ac:	f504 63c0 	add.w	r3, r4, #1536	; 0x600
 80030b0:	9303      	str	r3, [sp, #12]
        action = &callback;
 80030b2:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
 80030b6:	2317      	movs	r3, #23
 80030b8:	462a      	mov	r2, r5
 80030ba:	4629      	mov	r1, r5
 80030bc:	9300      	str	r3, [sp, #0]
 80030be:	f504 70d0 	add.w	r0, r4, #416	; 0x1a0
 80030c2:	232b      	movs	r3, #43	; 0x2b
 80030c4:	f7ff fde9 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonUp.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80030c8:	4b6e      	ldr	r3, [pc, #440]	; (8003284 <_ZN15Screen1ViewBaseC1Ev+0x3c8>)
 80030ca:	4a6f      	ldr	r2, [pc, #444]	; (8003288 <_ZN15Screen1ViewBaseC1Ev+0x3cc>)
 80030cc:	496f      	ldr	r1, [pc, #444]	; (800328c <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
 80030ce:	9600      	str	r6, [sp, #0]
 80030d0:	ee19 0a10 	vmov	r0, s18
 80030d4:	f8a4 71d0 	strh.w	r7, [r4, #464]	; 0x1d0
 80030d8:	f7ff fee4 	bl	8002ea4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 80030dc:	f04f 0206 	mov.w	r2, #6
    ButtonUp.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID));
 80030e0:	a80a      	add	r0, sp, #40	; 0x28
 80030e2:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 80030e6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80030ea:	a909      	add	r1, sp, #36	; 0x24
 80030ec:	4602      	mov	r2, r0
 80030ee:	ee19 0a10 	vmov	r0, s18
 80030f2:	f7ff fda0 	bl	8002c36 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
 80030f6:	2006      	movs	r0, #6
 80030f8:	f8c4 01ec 	str.w	r0, [r4, #492]	; 0x1ec
    ButtonUp.setPosition(273, 25, 43, 23);
 80030fc:	2017      	movs	r0, #23
 80030fe:	232b      	movs	r3, #43	; 0x2b
 8003100:	9000      	str	r0, [sp, #0]
 8003102:	2219      	movs	r2, #25
 8003104:	ee19 0a10 	vmov	r0, s18
 8003108:	f240 1111 	movw	r1, #273	; 0x111
 800310c:	f7ff fdc5 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 8003110:	9a03      	ldr	r2, [sp, #12]
 8003112:	f8c4 219c 	str.w	r2, [r4, #412]	; 0x19c
    LabelPradLadowania.setXY(41, 28);
 8003116:	ee19 0a90 	vmov	r0, s19
 800311a:	221c      	movs	r2, #28
 800311c:	2129      	movs	r1, #41	; 0x29
        boundingArea = calculateBoundingArea();
 800311e:	ae04      	add	r6, sp, #16
 8003120:	f7ff fd7c 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003124:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 8003128:	ee19 1a90 	vmov	r1, s19
        color = newColor;
 800312c:	f8c4 0244 	str.w	r0, [r4, #580]	; 0x244
        linespace = space;
 8003130:	f8a4 5248 	strh.w	r5, [r4, #584]	; 0x248
        boundingArea = calculateBoundingArea();
 8003134:	4630      	mov	r0, r6
 8003136:	f00a fddd 	bl	800dcf4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800313a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800313e:	f504 7314 	add.w	r3, r4, #592	; 0x250
 8003142:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8003146:	4b52      	ldr	r3, [pc, #328]	; (8003290 <_ZN15Screen1ViewBaseC1Ev+0x3d4>)
 8003148:	930a      	str	r3, [sp, #40]	; 0x28
    LabelPradLadowania.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OQ6C));
 800314a:	ee19 0a90 	vmov	r0, s19
 800314e:	2314      	movs	r3, #20
 8003150:	a90a      	add	r1, sp, #40	; 0x28
 8003152:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003156:	f00b f84f 	bl	800e1f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtPradLadowania.setPosition(143, 36, 124, 24);
 800315a:	2018      	movs	r0, #24
 800315c:	2224      	movs	r2, #36	; 0x24
 800315e:	9000      	str	r0, [sp, #0]
 8003160:	237c      	movs	r3, #124	; 0x7c
 8003162:	ee1a 0a10 	vmov	r0, s20
 8003166:	218f      	movs	r1, #143	; 0x8f
 8003168:	f7ff fd97 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800316c:	f8d4 325c 	ldr.w	r3, [r4, #604]	; 0x25c
        linespace = space;
 8003170:	f8a4 5290 	strh.w	r5, [r4, #656]	; 0x290
        color = newColor;
 8003174:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 8003178:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800317c:	f8c4 028c 	str.w	r0, [r4, #652]	; 0x28c
        boundingArea = calculateBoundingArea();
 8003180:	ee1a 1a10 	vmov	r1, s20
 8003184:	4630      	mov	r0, r6
 8003186:	4798      	blx	r3
 8003188:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800318c:	f504 7326 	add.w	r3, r4, #664	; 0x298
 8003190:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    txtPradLadowania.setWildcard(txtPradLadowaniaBuffer);
 8003194:	f504 63b8 	add.w	r3, r4, #1472	; 0x5c0
        wc1 = value;
 8003198:	f8c4 32a4 	str.w	r3, [r4, #676]	; 0x2a4
 800319c:	4b3c      	ldr	r3, [pc, #240]	; (8003290 <_ZN15Screen1ViewBaseC1Ev+0x3d4>)
    txtPradLadowaniaBuffer[0] = 0;
 800319e:	f8a4 55c0 	strh.w	r5, [r4, #1472]	; 0x5c0
    txtPradLadowania.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9VFQ));
 80031a2:	ee1a 0a10 	vmov	r0, s20
 80031a6:	930a      	str	r3, [sp, #40]	; 0x28
 80031a8:	a90a      	add	r1, sp, #40	; 0x28
 80031aa:	2313      	movs	r3, #19
 80031ac:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80031b0:	f00b f822 	bl	800e1f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    buttonStart.setXY(78, 180);
 80031b4:	ee1a 0a90 	vmov	r0, s21
 80031b8:	22b4      	movs	r2, #180	; 0xb4
 80031ba:	214e      	movs	r1, #78	; 0x4e
 80031bc:	f7ff fd2e 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
 80031c0:	2301      	movs	r3, #1
    buttonStart.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 80031c2:	a80a      	add	r0, sp, #40	; 0x28
 80031c4:	4602      	mov	r2, r0
 80031c6:	a909      	add	r1, sp, #36	; 0x24
 80031c8:	ee1a 0a90 	vmov	r0, s21
 80031cc:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80031d0:	2302      	movs	r3, #2
 80031d2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80031d6:	f00b f86a 	bl	800e2ae <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80031da:	2312      	movs	r3, #18
        updateTextPosition();
 80031dc:	ee1a 0a90 	vmov	r0, s21
 80031e0:	f8a4 32e0 	strh.w	r3, [r4, #736]	; 0x2e0
 80031e4:	f7ff fdce 	bl	8002d84 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonStart.setAction(buttonCallback);
 80031e8:	f504 63be 	add.w	r3, r4, #1520	; 0x5f0
        color = col;
 80031ec:	f04f 30ff 	mov.w	r0, #4294967295
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 80031f0:	f8c4 32d0 	str.w	r3, [r4, #720]	; 0x2d0
    image3_1.setXY(118, 138);
 80031f4:	228a      	movs	r2, #138	; 0x8a
        colorPressed = col;
 80031f6:	e9c4 00b9 	strd	r0, r0, [r4, #740]	; 0x2e4
 80031fa:	2176      	movs	r1, #118	; 0x76
 80031fc:	ee1d 0a10 	vmov	r0, s26
 8003200:	f7ff fd0c 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
 8003204:	f04f 0103 	mov.w	r1, #3
    image3_1.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 8003208:	a80a      	add	r0, sp, #40	; 0x28
 800320a:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
 800320e:	4601      	mov	r1, r0
 8003210:	ee1d 0a10 	vmov	r0, s26
 8003214:	f00b fa6e 	bl	800e6f4 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    LabelNapiecieBaterii.setXY(41, 141);
 8003218:	228d      	movs	r2, #141	; 0x8d
 800321a:	ee1b 0a10 	vmov	r0, s22
 800321e:	2129      	movs	r1, #41	; 0x29
 8003220:	f7ff fcfc 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003224:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 8003228:	ee1b 1a10 	vmov	r1, s22
        color = newColor;
 800322c:	f8c4 034c 	str.w	r0, [r4, #844]	; 0x34c
        linespace = space;
 8003230:	f8a4 5350 	strh.w	r5, [r4, #848]	; 0x350
        boundingArea = calculateBoundingArea();
 8003234:	4630      	mov	r0, r6
 8003236:	f00a fd5d 	bl	800dcf4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800323a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800323e:	f504 7356 	add.w	r3, r4, #856	; 0x358
 8003242:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8003246:	4b12      	ldr	r3, [pc, #72]	; (8003290 <_ZN15Screen1ViewBaseC1Ev+0x3d4>)
 8003248:	930a      	str	r3, [sp, #40]	; 0x28
    LabelNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_O6MQ));
 800324a:	a80a      	add	r0, sp, #40	; 0x28
 800324c:	2311      	movs	r3, #17
 800324e:	4601      	mov	r1, r0
 8003250:	ee1b 0a10 	vmov	r0, s22
 8003254:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003258:	f00a ffce 	bl	800e1f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtNapiecieBaterii.setPosition(143, 147, 124, 24);
 800325c:	2018      	movs	r0, #24
 800325e:	2293      	movs	r2, #147	; 0x93
 8003260:	9000      	str	r0, [sp, #0]
 8003262:	237c      	movs	r3, #124	; 0x7c
 8003264:	e016      	b.n	8003294 <_ZN15Screen1ViewBaseC1Ev+0x3d8>
 8003266:	bf00      	nop
 8003268:	08022b1c 	.word	0x08022b1c
 800326c:	08022920 	.word	0x08022920
 8003270:	08022aec 	.word	0x08022aec
 8003274:	08002bed 	.word	0x08002bed
 8003278:	08022b04 	.word	0x08022b04
 800327c:	08002afd 	.word	0x08002afd
 8003280:	ff336699 	.word	0xff336699
 8003284:	ff003366 	.word	0xff003366
 8003288:	ff0099cc 	.word	0xff0099cc
 800328c:	ff006699 	.word	0xff006699
 8003290:	080221bc 	.word	0x080221bc
 8003294:	ee1b 0a90 	vmov	r0, s23
 8003298:	218f      	movs	r1, #143	; 0x8f
 800329a:	f7ff fcfe 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800329e:	f8d4 3364 	ldr.w	r3, [r4, #868]	; 0x364
        linespace = space;
 80032a2:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        color = newColor;
 80032a6:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 80032aa:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80032ae:	f8c4 0394 	str.w	r0, [r4, #916]	; 0x394
        boundingArea = calculateBoundingArea();
 80032b2:	ee1b 1a90 	vmov	r1, s23
 80032b6:	4630      	mov	r0, r6
 80032b8:	4798      	blx	r3
 80032ba:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80032be:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 80032c2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    txtNapiecieBaterii.setWildcard(txtNapiecieBateriiBuffer);
 80032c6:	f204 53d4 	addw	r3, r4, #1492	; 0x5d4
 80032ca:	f8c4 33ac 	str.w	r3, [r4, #940]	; 0x3ac
    txtNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JY89));
 80032ce:	a80a      	add	r0, sp, #40	; 0x28
 80032d0:	4b96      	ldr	r3, [pc, #600]	; (800352c <_ZN15Screen1ViewBaseC1Ev+0x670>)
    txtNapiecieBateriiBuffer[0] = 0;
 80032d2:	f8a4 55d4 	strh.w	r5, [r4, #1492]	; 0x5d4
    txtNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JY89));
 80032d6:	4601      	mov	r1, r0
 80032d8:	930a      	str	r3, [sp, #40]	; 0x28
 80032da:	ee1b 0a90 	vmov	r0, s23
 80032de:	2310      	movs	r3, #16
 80032e0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80032e4:	f00a ff88 	bl	800e1f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    LabelChargingTime.setXY(6, 86);
 80032e8:	2256      	movs	r2, #86	; 0x56
 80032ea:	2106      	movs	r1, #6
 80032ec:	4658      	mov	r0, fp
 80032ee:	f7ff fc95 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80032f2:	f04f 30ff 	mov.w	r0, #4294967295
 80032f6:	f8c4 03e0 	str.w	r0, [r4, #992]	; 0x3e0
        linespace = space;
 80032fa:	f8a4 53e4 	strh.w	r5, [r4, #996]	; 0x3e4
        boundingArea = calculateBoundingArea();
 80032fe:	4659      	mov	r1, fp
 8003300:	4630      	mov	r0, r6
 8003302:	f00a fcf7 	bl	800dcf4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003306:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800330a:	f504 737b 	add.w	r3, r4, #1004	; 0x3ec
 800330e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    LabelChargingTime.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LNZH));
 8003312:	a80a      	add	r0, sp, #40	; 0x28
 8003314:	4b85      	ldr	r3, [pc, #532]	; (800352c <_ZN15Screen1ViewBaseC1Ev+0x670>)
 8003316:	930a      	str	r3, [sp, #40]	; 0x28
 8003318:	4601      	mov	r1, r0
 800331a:	4658      	mov	r0, fp
 800331c:	f8ad 702c 	strh.w	r7, [sp, #44]	; 0x2c
 8003320:	f00a ff6a 	bl	800e1f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    image3_2.setXY(118, 83);
 8003324:	2253      	movs	r2, #83	; 0x53
 8003326:	ee1d 0a90 	vmov	r0, s27
 800332a:	2176      	movs	r1, #118	; 0x76
 800332c:	f7ff fc76 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
 8003330:	f04f 0103 	mov.w	r1, #3
    image3_2.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 8003334:	ee1d 0a90 	vmov	r0, s27
 8003338:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
 800333c:	a90a      	add	r1, sp, #40	; 0x28
 800333e:	f00b f9d9 	bl	800e6f4 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003342:	2117      	movs	r1, #23
 8003344:	462a      	mov	r2, r5
 8003346:	9100      	str	r1, [sp, #0]
 8003348:	232b      	movs	r3, #43	; 0x2b
 800334a:	4629      	mov	r1, r5
 800334c:	f504 608b 	add.w	r0, r4, #1112	; 0x458
 8003350:	f7ff fca3 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonDownTime.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003354:	4b76      	ldr	r3, [pc, #472]	; (8003530 <_ZN15Screen1ViewBaseC1Ev+0x674>)
 8003356:	9300      	str	r3, [sp, #0]
 8003358:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 800335c:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 8003360:	4a74      	ldr	r2, [pc, #464]	; (8003534 <_ZN15Screen1ViewBaseC1Ev+0x678>)
 8003362:	4975      	ldr	r1, [pc, #468]	; (8003538 <_ZN15Screen1ViewBaseC1Ev+0x67c>)
 8003364:	f8a4 7488 	strh.w	r7, [r4, #1160]	; 0x488
 8003368:	4648      	mov	r0, r9
 800336a:	f7ff fd9b 	bl	8002ea4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    ButtonDownTime.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID));
 800336e:	a90a      	add	r1, sp, #40	; 0x28
 8003370:	460a      	mov	r2, r1
 8003372:	4648      	mov	r0, r9
 8003374:	a909      	add	r1, sp, #36	; 0x24
 8003376:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800337a:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 800337e:	f7ff fc5a 	bl	8002c36 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
    ButtonDownTime.setPosition(273, 105, 43, 23);
 8003382:	2117      	movs	r1, #23
 8003384:	9100      	str	r1, [sp, #0]
 8003386:	232b      	movs	r3, #43	; 0x2b
 8003388:	2269      	movs	r2, #105	; 0x69
 800338a:	f240 1111 	movw	r1, #273	; 0x111
 800338e:	4648      	mov	r0, r9
 8003390:	f8c4 74a4 	str.w	r7, [r4, #1188]	; 0x4a4
 8003394:	f7ff fc81 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 8003398:	9a03      	ldr	r2, [sp, #12]
 800339a:	f8c4 2454 	str.w	r2, [r4, #1108]	; 0x454
 800339e:	2117      	movs	r1, #23
 80033a0:	462a      	mov	r2, r5
 80033a2:	9100      	str	r1, [sp, #0]
 80033a4:	232b      	movs	r3, #43	; 0x2b
 80033a6:	4629      	mov	r1, r5
 80033a8:	f504 60a0 	add.w	r0, r4, #1280	; 0x500
 80033ac:	f7ff fc75 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonUpTime.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80033b0:	4b5f      	ldr	r3, [pc, #380]	; (8003530 <_ZN15Screen1ViewBaseC1Ev+0x674>)
 80033b2:	9300      	str	r3, [sp, #0]
 80033b4:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 80033b8:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 80033bc:	4a5d      	ldr	r2, [pc, #372]	; (8003534 <_ZN15Screen1ViewBaseC1Ev+0x678>)
 80033be:	495e      	ldr	r1, [pc, #376]	; (8003538 <_ZN15Screen1ViewBaseC1Ev+0x67c>)
 80033c0:	f8a4 7530 	strh.w	r7, [r4, #1328]	; 0x530
 80033c4:	4640      	mov	r0, r8
 80033c6:	f7ff fd6d 	bl	8002ea4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 80033ca:	f04f 0206 	mov.w	r2, #6
 80033ce:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 80033d2:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
    ButtonUpTime.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID));
 80033d6:	a909      	add	r1, sp, #36	; 0x24
 80033d8:	aa0a      	add	r2, sp, #40	; 0x28
 80033da:	4640      	mov	r0, r8
 80033dc:	f7ff fc2b 	bl	8002c36 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
 80033e0:	2306      	movs	r3, #6
 80033e2:	f8c4 354c 	str.w	r3, [r4, #1356]	; 0x54c
    ButtonUpTime.setPosition(273, 81, 43, 23);
 80033e6:	2317      	movs	r3, #23
 80033e8:	9300      	str	r3, [sp, #0]
 80033ea:	2251      	movs	r2, #81	; 0x51
 80033ec:	232b      	movs	r3, #43	; 0x2b
 80033ee:	f240 1111 	movw	r1, #273	; 0x111
 80033f2:	4640      	mov	r0, r8
 80033f4:	f7ff fc51 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 80033f8:	9b03      	ldr	r3, [sp, #12]
 80033fa:	f8c4 34fc 	str.w	r3, [r4, #1276]	; 0x4fc
    txtChargingTime.setPosition(143, 93, 124, 24);
 80033fe:	2318      	movs	r3, #24
 8003400:	225d      	movs	r2, #93	; 0x5d
 8003402:	9300      	str	r3, [sp, #0]
 8003404:	218f      	movs	r1, #143	; 0x8f
 8003406:	237c      	movs	r3, #124	; 0x7c
 8003408:	4650      	mov	r0, sl
 800340a:	f7ff fc46 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 800340e:	f04f 33ff 	mov.w	r3, #4294967295
 8003412:	f8c4 35a4 	str.w	r3, [r4, #1444]	; 0x5a4
        boundingArea = calculateBoundingArea();
 8003416:	f8d4 3574 	ldr.w	r3, [r4, #1396]	; 0x574
        linespace = space;
 800341a:	f8a4 55a8 	strh.w	r5, [r4, #1448]	; 0x5a8
        boundingArea = calculateBoundingArea();
 800341e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8003422:	4651      	mov	r1, sl
 8003424:	4630      	mov	r0, r6
 8003426:	4798      	blx	r3
 8003428:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800342c:	f504 63b6 	add.w	r3, r4, #1456	; 0x5b0
 8003430:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003434:	4b41      	ldr	r3, [pc, #260]	; (800353c <_ZN15Screen1ViewBaseC1Ev+0x680>)
 8003436:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(txtChargingTimeBuffer, TXTCHARGINGTIME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_JGTL).getText());
 8003438:	f504 65bd 	add.w	r5, r4, #1512	; 0x5e8
 800343c:	b92b      	cbnz	r3, 800344a <_ZN15Screen1ViewBaseC1Ev+0x58e>
 800343e:	4b40      	ldr	r3, [pc, #256]	; (8003540 <_ZN15Screen1ViewBaseC1Ev+0x684>)
 8003440:	4a40      	ldr	r2, [pc, #256]	; (8003544 <_ZN15Screen1ViewBaseC1Ev+0x688>)
 8003442:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003444:	4840      	ldr	r0, [pc, #256]	; (8003548 <_ZN15Screen1ViewBaseC1Ev+0x68c>)
 8003446:	f01d f9d3 	bl	80207f0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800344a:	4b40      	ldr	r3, [pc, #256]	; (800354c <_ZN15Screen1ViewBaseC1Ev+0x690>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800344c:	881b      	ldrh	r3, [r3, #0]
 800344e:	2b03      	cmp	r3, #3
 8003450:	d803      	bhi.n	800345a <_ZN15Screen1ViewBaseC1Ev+0x59e>
 8003452:	4b3f      	ldr	r3, [pc, #252]	; (8003550 <_ZN15Screen1ViewBaseC1Ev+0x694>)
 8003454:	4a3b      	ldr	r2, [pc, #236]	; (8003544 <_ZN15Screen1ViewBaseC1Ev+0x688>)
 8003456:	2161      	movs	r1, #97	; 0x61
 8003458:	e7f4      	b.n	8003444 <_ZN15Screen1ViewBaseC1Ev+0x588>
        return texts->getText(typedTextId);
 800345a:	4b3e      	ldr	r3, [pc, #248]	; (8003554 <_ZN15Screen1ViewBaseC1Ev+0x698>)
 800345c:	2103      	movs	r1, #3
 800345e:	6818      	ldr	r0, [r3, #0]
 8003460:	f001 fca2 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 8003464:	4a3c      	ldr	r2, [pc, #240]	; (8003558 <_ZN15Screen1ViewBaseC1Ev+0x69c>)
 8003466:	4603      	mov	r3, r0
 8003468:	2103      	movs	r1, #3
 800346a:	4628      	mov	r0, r5
 800346c:	f010 fdae 	bl	8013fcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8003470:	4b2e      	ldr	r3, [pc, #184]	; (800352c <_ZN15Screen1ViewBaseC1Ev+0x670>)
 8003472:	f8c4 55bc 	str.w	r5, [r4, #1468]	; 0x5bc
 8003476:	930a      	str	r3, [sp, #40]	; 0x28
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8003478:	1d25      	adds	r5, r4, #4
 800347a:	2304      	movs	r3, #4
    txtChargingTime.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8IRX));
 800347c:	a90a      	add	r1, sp, #40	; 0x28
 800347e:	4650      	mov	r0, sl
 8003480:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003484:	f00a feb8 	bl	800e1f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003488:	ee18 1a10 	vmov	r1, s16
 800348c:	4628      	mov	r0, r5
 800348e:	f007 fabd 	bl	800aa0c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003492:	ee1c 1a10 	vmov	r1, s24
 8003496:	4628      	mov	r0, r5
 8003498:	f007 fab8 	bl	800aa0c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800349c:	ee1c 1a90 	vmov	r1, s25
 80034a0:	4628      	mov	r0, r5
 80034a2:	f007 fab3 	bl	800aa0c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034a6:	ee18 1a90 	vmov	r1, s17
 80034aa:	4628      	mov	r0, r5
 80034ac:	f007 faae 	bl	800aa0c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034b0:	ee19 1a10 	vmov	r1, s18
 80034b4:	4628      	mov	r0, r5
 80034b6:	f007 faa9 	bl	800aa0c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034ba:	ee19 1a90 	vmov	r1, s19
 80034be:	4628      	mov	r0, r5
 80034c0:	f007 faa4 	bl	800aa0c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034c4:	ee1a 1a10 	vmov	r1, s20
 80034c8:	4628      	mov	r0, r5
 80034ca:	f007 fa9f 	bl	800aa0c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034ce:	ee1a 1a90 	vmov	r1, s21
 80034d2:	4628      	mov	r0, r5
 80034d4:	f007 fa9a 	bl	800aa0c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034d8:	ee1d 1a10 	vmov	r1, s26
 80034dc:	4628      	mov	r0, r5
 80034de:	f007 fa95 	bl	800aa0c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034e2:	ee1b 1a10 	vmov	r1, s22
 80034e6:	4628      	mov	r0, r5
 80034e8:	f007 fa90 	bl	800aa0c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034ec:	ee1b 1a90 	vmov	r1, s23
 80034f0:	4628      	mov	r0, r5
 80034f2:	f007 fa8b 	bl	800aa0c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034f6:	4659      	mov	r1, fp
 80034f8:	4628      	mov	r0, r5
 80034fa:	f007 fa87 	bl	800aa0c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034fe:	ee1d 1a90 	vmov	r1, s27
 8003502:	4628      	mov	r0, r5
 8003504:	f007 fa82 	bl	800aa0c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003508:	4649      	mov	r1, r9
 800350a:	4628      	mov	r0, r5
 800350c:	f007 fa7e 	bl	800aa0c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003510:	4641      	mov	r1, r8
 8003512:	4628      	mov	r0, r5
 8003514:	f007 fa7a 	bl	800aa0c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003518:	4628      	mov	r0, r5
 800351a:	4651      	mov	r1, sl
 800351c:	f007 fa76 	bl	800aa0c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003520:	4620      	mov	r0, r4
 8003522:	b00d      	add	sp, #52	; 0x34
 8003524:	ecbd 8b0c 	vpop	{d8-d13}
 8003528:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800352c:	080221bc 	.word	0x080221bc
 8003530:	ff336699 	.word	0xff336699
 8003534:	ff0099cc 	.word	0xff0099cc
 8003538:	ff006699 	.word	0xff006699
 800353c:	20015604 	.word	0x20015604
 8003540:	08022770 	.word	0x08022770
 8003544:	08022872 	.word	0x08022872
 8003548:	080227ed 	.word	0x080227ed
 800354c:	20015608 	.word	0x20015608
 8003550:	08022834 	.word	0x08022834
 8003554:	20015610 	.word	0x20015610
 8003558:	080228aa 	.word	0x080228aa

0800355c <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 800355c:	2000      	movs	r0, #0
 800355e:	4770      	bx	lr

08003560 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8003560:	888b      	ldrh	r3, [r1, #4]
 8003562:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8003564:	2001      	movs	r0, #1
 8003566:	4770      	bx	lr

08003568 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8003568:	4770      	bx	lr

0800356a <_ZN8touchgfx17AbstractDataGraph8setAlphaEh>:
     *
     * @note All graph elements have to take this alpha into consideration.
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800356a:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
    }
 800356e:	4770      	bx	lr

08003570 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>:
     * @param  min The minimum x value.
     * @param  max The maximum x value.
     *
     * @note The graph as well as the area above and below are automatically redrawn (invalidated).
     */
    virtual void setGraphRangeX(int min, int max)
 8003570:	b410      	push	{r4}
    {
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 8003572:	6803      	ldr	r3, [r0, #0]
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int int2scaledX(int i) const
    {
        return int2scaled(i, xScale);
 8003574:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 8003576:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800357a:	4362      	muls	r2, r4
 800357c:	4361      	muls	r1, r4
    }
 800357e:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 8003582:	4718      	bx	r3

08003584 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff>:
     *
     * @return The product of the two numbers, rounded to nearest integer value.
     */
    FORCE_INLINE_FUNCTION static int float2scaled(float f, int scale)
    {
        const float fs = f * (float)scale;
 8003584:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 8003588:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 800358a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 800358e:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
        const float fs = f * (float)scale;
 8003592:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 8003596:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800359a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800359e:	db17      	blt.n	80035d0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4c>
        {
            return (int)(fs + 0.5f);
 80035a0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80035a4:	ee30 0a07 	vadd.f32	s0, s0, s14
 80035a8:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80035ac:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 80035b0:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 80035b4:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 80035b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80035bc:	db1c      	blt.n	80035f8 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x74>
            return (int)(fs + 0.5f);
 80035be:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80035c2:	ee70 0aa7 	vadd.f32	s1, s1, s15
 80035c6:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 80035ca:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 80035ce:	4718      	bx	r3
        }
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80035d0:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80035d4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80035d8:	ee17 2a10 	vmov	r2, s14
 80035dc:	ee30 0a66 	vsub.f32	s0, s0, s13
 80035e0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80035e4:	ee30 0a26 	vadd.f32	s0, s0, s13
 80035e8:	1e51      	subs	r1, r2, #1
 80035ea:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80035ee:	ee10 2a10 	vmov	r2, s0
 80035f2:	440a      	add	r2, r1
 80035f4:	4611      	mov	r1, r2
 80035f6:	e7db      	b.n	80035b0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x2c>
 80035f8:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 80035fc:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003600:	ee17 2a90 	vmov	r2, s15
 8003604:	ee70 0ac7 	vsub.f32	s1, s1, s14
 8003608:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 800360c:	ee70 0a87 	vadd.f32	s1, s1, s14
 8003610:	3a01      	subs	r2, #1
 8003612:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 8003616:	ee10 ca90 	vmov	ip, s1
 800361a:	4494      	add	ip, r2
 800361c:	4662      	mov	r2, ip
 800361e:	e7d6      	b.n	80035ce <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4a>

08003620 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbi>:
    virtual void setGraphRangeXAuto(bool showYaxis = true, int margin = 0)
 8003620:	b410      	push	{r4}
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8003622:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 8003624:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8003626:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800362a:	4362      	muls	r2, r4
    }
 800362c:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8003630:	4718      	bx	r3

08003632 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf>:
        const float fs = f * (float)scale;
 8003632:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8003636:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003638:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 800363c:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
        const float fs = f * (float)scale;
 8003640:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003644:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003648:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800364c:	db08      	blt.n	8003660 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2e>
            return (int)(fs + 0.5f);
 800364e:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003652:	ee30 0a27 	vadd.f32	s0, s0, s15
 8003656:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800365a:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 800365e:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003660:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003664:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003668:	ee17 2a90 	vmov	r2, s15
 800366c:	ee30 0a47 	vsub.f32	s0, s0, s14
 8003670:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003674:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003678:	3a01      	subs	r2, #1
 800367a:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800367e:	ee10 ca10 	vmov	ip, s0
 8003682:	4494      	add	ip, r2
 8003684:	4662      	mov	r2, ip
 8003686:	e7ea      	b.n	800365e <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2c>

08003688 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii>:
    virtual void setGraphRangeY(int min, int max)
 8003688:	b410      	push	{r4}
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 800368a:	6803      	ldr	r3, [r0, #0]
        return int2scaled(i, yScale);
 800368c:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 800368e:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8003692:	4362      	muls	r2, r4
 8003694:	4361      	muls	r1, r4
    }
 8003696:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 800369a:	4718      	bx	r3

0800369c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>:
        const float fs = f * (float)scale;
 800369c:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 80036a0:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 80036a2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 80036a6:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
        const float fs = f * (float)scale;
 80036aa:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 80036ae:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80036b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80036b6:	db17      	blt.n	80036e8 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4c>
            return (int)(fs + 0.5f);
 80036b8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80036bc:	ee30 0a07 	vadd.f32	s0, s0, s14
 80036c0:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80036c4:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 80036c8:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 80036cc:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 80036d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80036d4:	db1c      	blt.n	8003710 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x74>
            return (int)(fs + 0.5f);
 80036d6:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80036da:	ee70 0aa7 	vadd.f32	s1, s1, s15
 80036de:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 80036e2:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 80036e6:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80036e8:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80036ec:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80036f0:	ee17 2a10 	vmov	r2, s14
 80036f4:	ee30 0a66 	vsub.f32	s0, s0, s13
 80036f8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80036fc:	ee30 0a26 	vadd.f32	s0, s0, s13
 8003700:	1e51      	subs	r1, r2, #1
 8003702:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003706:	ee10 2a10 	vmov	r2, s0
 800370a:	440a      	add	r2, r1
 800370c:	4611      	mov	r1, r2
 800370e:	e7db      	b.n	80036c8 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x2c>
 8003710:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8003714:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003718:	ee17 2a90 	vmov	r2, s15
 800371c:	ee70 0ac7 	vsub.f32	s1, s1, s14
 8003720:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003724:	ee70 0a87 	vadd.f32	s1, s1, s14
 8003728:	3a01      	subs	r2, #1
 800372a:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 800372e:	ee10 ca90 	vmov	ip, s1
 8003732:	4494      	add	ip, r2
 8003734:	4662      	mov	r2, ip
 8003736:	e7d6      	b.n	80036e6 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4a>

08003738 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbi>:
    virtual void setGraphRangeYAuto(bool showXaxis = true, int margin = 0)
 8003738:	b410      	push	{r4}
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 800373a:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 800373c:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 800373e:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8003742:	4362      	muls	r2, r4
    }
 8003744:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 8003748:	4718      	bx	r3

0800374a <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf>:
        const float fs = f * (float)scale;
 800374a:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 800374e:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003750:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 8003754:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
        const float fs = f * (float)scale;
 8003758:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 800375c:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003760:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003764:	db08      	blt.n	8003778 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2e>
            return (int)(fs + 0.5f);
 8003766:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800376a:	ee30 0a27 	vadd.f32	s0, s0, s15
 800376e:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003772:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 8003776:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003778:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800377c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003780:	ee17 2a90 	vmov	r2, s15
 8003784:	ee30 0a47 	vsub.f32	s0, s0, s14
 8003788:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 800378c:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003790:	3a01      	subs	r2, #1
 8003792:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003796:	ee10 ca10 	vmov	ip, s0
 800379a:	4494      	add	ip, r2
 800379c:	4662      	mov	r2, ip
 800379e:	e7ea      	b.n	8003776 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2c>

080037a0 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv>:
        return scaled2intX(graphRangeMinX);
 80037a0:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int scaled2intX(int i) const
    {
        return scaled2int(i, xScale);
 80037a4:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 80037a6:	2b00      	cmp	r3, #0
 80037a8:	db07      	blt.n	80037ba <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 80037aa:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80037ae:	fb93 f0f2 	sdiv	r0, r3, r2
 80037b2:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80037b6:	1040      	asrs	r0, r0, #1
 80037b8:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80037ba:	f06f 0001 	mvn.w	r0, #1
 80037be:	fb00 2003 	mla	r0, r0, r3, r2
 80037c2:	3801      	subs	r0, #1
 80037c4:	fb90 f0f2 	sdiv	r0, r0, r2
 80037c8:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80037cc:	1040      	asrs	r0, r0, #1
 80037ce:	4240      	negs	r0, r0
    }
 80037d0:	4770      	bx	lr

080037d2 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMinAsFloatEv>:
     *
     * @return The number divided by the scale.
     */
    FORCE_INLINE_FUNCTION static float scaled2float(int i, int scale)
    {
        return (float)i / (float)scale;
 80037d2:	edd0 7a4b 	vldr	s15, [r0, #300]	; 0x12c
 80037d6:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80037da:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 80037de:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 80037e2:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80037e6:	4770      	bx	lr

080037e8 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMinScaledEv>:
    }
 80037e8:	f8d0 012c 	ldr.w	r0, [r0, #300]	; 0x12c
 80037ec:	4770      	bx	lr

080037ee <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv>:
        return scaled2intX(graphRangeMaxX);
 80037ee:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
        return scaled2int(i, xScale);
 80037f2:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 80037f4:	2b00      	cmp	r3, #0
 80037f6:	db07      	blt.n	8003808 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 80037f8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80037fc:	fb93 f0f2 	sdiv	r0, r3, r2
 8003800:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003804:	1040      	asrs	r0, r0, #1
 8003806:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003808:	f06f 0001 	mvn.w	r0, #1
 800380c:	fb00 2003 	mla	r0, r0, r3, r2
 8003810:	3801      	subs	r0, #1
 8003812:	fb90 f0f2 	sdiv	r0, r0, r2
 8003816:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800381a:	1040      	asrs	r0, r0, #1
 800381c:	4240      	negs	r0, r0
    }
 800381e:	4770      	bx	lr

08003820 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMaxAsFloatEv>:
        return (float)i / (float)scale;
 8003820:	edd0 7a4c 	vldr	s15, [r0, #304]	; 0x130
 8003824:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003828:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 800382c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003830:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003834:	4770      	bx	lr

08003836 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMaxScaledEv>:
    }
 8003836:	f8d0 0130 	ldr.w	r0, [r0, #304]	; 0x130
 800383a:	4770      	bx	lr

0800383c <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv>:
        return scaled2intY(graphRangeMinY);
 800383c:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
        return scaled2int(i, yScale);
 8003840:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 8003842:	2b00      	cmp	r3, #0
 8003844:	db07      	blt.n	8003856 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 8003846:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800384a:	fb93 f0f2 	sdiv	r0, r3, r2
 800384e:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003852:	1040      	asrs	r0, r0, #1
 8003854:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003856:	f06f 0001 	mvn.w	r0, #1
 800385a:	fb00 2003 	mla	r0, r0, r3, r2
 800385e:	3801      	subs	r0, #1
 8003860:	fb90 f0f2 	sdiv	r0, r0, r2
 8003864:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003868:	1040      	asrs	r0, r0, #1
 800386a:	4240      	negs	r0, r0
    }
 800386c:	4770      	bx	lr

0800386e <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMinAsFloatEv>:
        return (float)i / (float)scale;
 800386e:	edd0 7a4d 	vldr	s15, [r0, #308]	; 0x134
 8003872:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003876:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 800387a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 800387e:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003882:	4770      	bx	lr

08003884 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMinScaledEv>:
    }
 8003884:	f8d0 0134 	ldr.w	r0, [r0, #308]	; 0x134
 8003888:	4770      	bx	lr

0800388a <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv>:
        return scaled2intY(graphRangeMaxY);
 800388a:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
        return scaled2int(i, yScale);
 800388e:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 8003890:	2b00      	cmp	r3, #0
 8003892:	db07      	blt.n	80038a4 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 8003894:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8003898:	fb93 f0f2 	sdiv	r0, r3, r2
 800389c:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80038a0:	1040      	asrs	r0, r0, #1
 80038a2:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80038a4:	f06f 0001 	mvn.w	r0, #1
 80038a8:	fb00 2003 	mla	r0, r0, r3, r2
 80038ac:	3801      	subs	r0, #1
 80038ae:	fb90 f0f2 	sdiv	r0, r0, r2
 80038b2:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80038b6:	1040      	asrs	r0, r0, #1
 80038b8:	4240      	negs	r0, r0
    }
 80038ba:	4770      	bx	lr

080038bc <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMaxAsFloatEv>:
        return (float)i / (float)scale;
 80038bc:	edd0 7a4e 	vldr	s15, [r0, #312]	; 0x138
 80038c0:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80038c4:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 80038c8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 80038cc:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80038d0:	4770      	bx	lr

080038d2 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMaxScaledEv>:
    }
 80038d2:	f8d0 0138 	ldr.w	r0, [r0, #312]	; 0x138
 80038d6:	4770      	bx	lr

080038d8 <_ZN8touchgfx16DynamicDataGraph8setScaleEib>:
     * @see getScale
     *
     * @note The current xAxisFactor, xAxisOffet and xGraphRange values are updated to reflect the
     *       new scale being set.
     */
    virtual void setScale(int scale, bool updateData = false)
 80038d8:	b570      	push	{r4, r5, r6, lr}
    {
        setScaleX(scale, updateData);
 80038da:	6803      	ldr	r3, [r0, #0]
    virtual void setScale(int scale, bool updateData = false)
 80038dc:	4604      	mov	r4, r0
        setScaleX(scale, updateData);
 80038de:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    virtual void setScale(int scale, bool updateData = false)
 80038e2:	460d      	mov	r5, r1
 80038e4:	4616      	mov	r6, r2
        setScaleX(scale, updateData);
 80038e6:	4798      	blx	r3
        setScaleY(scale, updateData);
 80038e8:	6823      	ldr	r3, [r4, #0]
 80038ea:	4632      	mov	r2, r6
 80038ec:	4629      	mov	r1, r5
 80038ee:	4620      	mov	r0, r4
 80038f0:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    }
 80038f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setScaleY(scale, updateData);
 80038f8:	4718      	bx	r3

080038fa <_ZNK8touchgfx16DynamicDataGraph8getScaleEv>:
     *
     * @see setScale
     */
    virtual int getScale() const
    {
        return getScaleY();
 80038fa:	6803      	ldr	r3, [r0, #0]
 80038fc:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003900:	4718      	bx	r3

08003902 <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMinEv>:
     *
     * @return The minimum x coordinate .
     */
    virtual int getGraphRangeXMin() const
    {
        return getGraphRangeXMinScaled();
 8003902:	6803      	ldr	r3, [r0, #0]
 8003904:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8003908:	4718      	bx	r3

0800390a <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMaxEv>:
     *
     * @return The maximum x coordinate .
     */
    virtual int getGraphRangeXMax() const
    {
        return getGraphRangeXMaxScaled();
 800390a:	6803      	ldr	r3, [r0, #0]
 800390c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8003910:	4718      	bx	r3

08003912 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi>:

    virtual void setGraphRangeYAutoScaled(bool showXaxis, int margin);

    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
    {
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003912:	6803      	ldr	r3, [r0, #0]
        if (i >= 0)
 8003914:	2a00      	cmp	r2, #0
    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
 8003916:	b410      	push	{r4}
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003918:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
        return scaled2int(i, xScale);
 800391c:	6b04      	ldr	r4, [r0, #48]	; 0x30
        if (i >= 0)
 800391e:	db0e      	blt.n	800393e <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x2c>
            return ((i * 2 + scale) / scale) / 2;
 8003920:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8003924:	fb92 f1f4 	sdiv	r1, r2, r4
 8003928:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 800392c:	1049      	asrs	r1, r1, #1
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 800392e:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
    }
 8003932:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003936:	3a01      	subs	r2, #1
 8003938:	440a      	add	r2, r1
 800393a:	4249      	negs	r1, r1
 800393c:	4718      	bx	r3
        return -(((-i * 2 + scale - 1) / scale) / 2);
 800393e:	f06f 0101 	mvn.w	r1, #1
 8003942:	fb01 4102 	mla	r1, r1, r2, r4
 8003946:	3901      	subs	r1, #1
 8003948:	fb91 f1f4 	sdiv	r1, r1, r4
 800394c:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003950:	1049      	asrs	r1, r1, #1
 8003952:	4249      	negs	r1, r1
 8003954:	e7eb      	b.n	800392e <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x1c>

08003956 <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(int scale))
    {
        setXAxisFactor(scale);
 8003956:	6803      	ldr	r3, [r0, #0]
 8003958:	f8d3 313c 	ldr.w	r3, [r3, #316]	; 0x13c
 800395c:	4718      	bx	r3

0800395e <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEi>:
        return i * scale;
 800395e:	6b02      	ldr	r2, [r0, #48]	; 0x30
     *
     * @param  factor The x axis factor.
     */
    virtual void setXAxisFactor(int factor)
    {
        setXAxisFactorScaled(int2scaledX(factor));
 8003960:	6803      	ldr	r3, [r0, #0]
 8003962:	4351      	muls	r1, r2
 8003964:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 8003968:	4718      	bx	r3

0800396a <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEf>:
    }

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(float scale))
    {
        setXAxisFactor(scale);
 800396a:	6803      	ldr	r3, [r0, #0]
 800396c:	f8d3 3144 	ldr.w	r3, [r3, #324]	; 0x144
 8003970:	4718      	bx	r3

08003972 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf>:
        const float fs = f * (float)scale;
 8003972:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
    /// @endcond

    /** @copydoc setXAxisFactor(int) */
    virtual void setXAxisFactor(float factor)
    {
        setXAxisFactorScaled(float2scaledX(factor));
 8003976:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003978:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisFactorScaled(float2scaledX(factor));
 800397c:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
        const float fs = f * (float)scale;
 8003980:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003984:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003988:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800398c:	db08      	blt.n	80039a0 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2e>
            return (int)(fs + 0.5f);
 800398e:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003992:	ee30 0a27 	vadd.f32	s0, s0, s15
 8003996:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800399a:	ee17 1a90 	vmov	r1, s15
        setXAxisFactorScaled(float2scaledX(factor));
 800399e:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80039a0:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80039a4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80039a8:	ee17 2a90 	vmov	r2, s15
 80039ac:	ee30 0a47 	vsub.f32	s0, s0, s14
 80039b0:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 80039b4:	ee30 0a07 	vadd.f32	s0, s0, s14
 80039b8:	1e51      	subs	r1, r2, #1
 80039ba:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80039be:	ee10 2a10 	vmov	r2, s0
 80039c2:	440a      	add	r2, r1
 80039c4:	4611      	mov	r1, r2
 80039c6:	e7ea      	b.n	800399e <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2c>

080039c8 <_ZN8touchgfx16DynamicDataGraph20setXAxisFactorScaledEi>:
     *
     * @see setXAxisFactorScaled,setXAxisFactor
     */
    virtual void setXAxisFactorScaled(int factor)
    {
        xAxisFactor = factor;
 80039c8:	f8c0 113c 	str.w	r1, [r0, #316]	; 0x13c
    }
 80039cc:	4770      	bx	lr

080039ce <_ZNK8touchgfx16DynamicDataGraph18getXAxisScaleAsIntEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsInt()", virtual int getXAxisScaleAsInt() const)
    {
        return getXAxisFactorAsInt();
 80039ce:	6803      	ldr	r3, [r0, #0]
 80039d0:	f8d3 3150 	ldr.w	r3, [r3, #336]	; 0x150
 80039d4:	4718      	bx	r3

080039d6 <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv>:
     *
     * @return The x axis factor.
     */
    virtual int getXAxisFactorAsInt() const
    {
        return scaled2intX(getXAxisFactorScaled());
 80039d6:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisFactorAsInt() const
 80039d8:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisFactorScaled());
 80039da:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
    virtual int getXAxisFactorAsInt() const
 80039de:	4604      	mov	r4, r0
        return scaled2intX(getXAxisFactorScaled());
 80039e0:	4798      	blx	r3
        if (i >= 0)
 80039e2:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 80039e4:	6b23      	ldr	r3, [r4, #48]	; 0x30
        if (i >= 0)
 80039e6:	db07      	blt.n	80039f8 <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 80039e8:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 80039ec:	fb90 f0f3 	sdiv	r0, r0, r3
 80039f0:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80039f4:	1040      	asrs	r0, r0, #1
    }
 80039f6:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80039f8:	f06f 0201 	mvn.w	r2, #1
 80039fc:	fb02 3000 	mla	r0, r2, r0, r3
 8003a00:	3801      	subs	r0, #1
 8003a02:	fb90 f0f3 	sdiv	r0, r0, r3
 8003a06:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003a0a:	1040      	asrs	r0, r0, #1
 8003a0c:	4240      	negs	r0, r0
        return scaled2intX(getXAxisFactorScaled());
 8003a0e:	e7f2      	b.n	80039f6 <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x20>

08003a10 <_ZNK8touchgfx16DynamicDataGraph20getXAxisScaleAsFloatEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsFloat()", virtual float getXAxisScaleAsFloat() const)
    {
        return getXAxisFactorAsFloat();
 8003a10:	6803      	ldr	r3, [r0, #0]
 8003a12:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 8003a16:	4718      	bx	r3

08003a18 <_ZNK8touchgfx16DynamicDataGraph21getXAxisFactorAsFloatEv>:
    /// @endcond

    /** @copydoc getXAxisFactorAsInt() */
    virtual float getXAxisFactorAsFloat() const
    {
        return scaled2floatX(getXAxisFactorScaled());
 8003a18:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisFactorAsFloat() const
 8003a1a:	b510      	push	{r4, lr}
        return scaled2floatX(getXAxisFactorScaled());
 8003a1c:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
    virtual float getXAxisFactorAsFloat() const
 8003a20:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisFactorScaled());
 8003a22:	4798      	blx	r3
        return (float)i / (float)scale;
 8003a24:	ee07 0a90 	vmov	s15, r0
 8003a28:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003a2c:	edd4 7a0c 	vldr	s15, [r4, #48]	; 0x30
 8003a30:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003a34:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003a38:	bd10      	pop	{r4, pc}

08003a3a <_ZNK8touchgfx16DynamicDataGraph20getXAxisFactorScaledEv>:
     * @see getXAxisFactorAsInt, getXAxisFactorAsFloat, setXAxisFactor
     */
    virtual int getXAxisFactorScaled() const
    {
        return xAxisFactor;
    }
 8003a3a:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8003a3e:	4770      	bx	lr

08003a40 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEi>:
        return i * scale;
 8003a40:	6b02      	ldr	r2, [r0, #48]	; 0x30
     *
     * @param  offset The x axis offset.
     */
    virtual void setXAxisOffset(int offset)
    {
        setXAxisOffsetScaled(int2scaledX(offset));
 8003a42:	6803      	ldr	r3, [r0, #0]
 8003a44:	4351      	muls	r1, r2
 8003a46:	f8d3 3168 	ldr.w	r3, [r3, #360]	; 0x168
 8003a4a:	4718      	bx	r3

08003a4c <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf>:
        const float fs = f * (float)scale;
 8003a4c:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
    }

    /** @copydoc setXAxisOffset(int) */
    virtual void setXAxisOffset(float offset)
    {
        setXAxisOffsetScaled(float2scaledX(offset));
 8003a50:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003a52:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 8003a56:	f8d3 3168 	ldr.w	r3, [r3, #360]	; 0x168
        const float fs = f * (float)scale;
 8003a5a:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003a5e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003a62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003a66:	db08      	blt.n	8003a7a <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2e>
            return (int)(fs + 0.5f);
 8003a68:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003a6c:	ee30 0a27 	vadd.f32	s0, s0, s15
 8003a70:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003a74:	ee17 1a90 	vmov	r1, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 8003a78:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003a7a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003a7e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003a82:	ee17 2a90 	vmov	r2, s15
 8003a86:	ee30 0a47 	vsub.f32	s0, s0, s14
 8003a8a:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003a8e:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003a92:	1e51      	subs	r1, r2, #1
 8003a94:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003a98:	ee10 2a10 	vmov	r2, s0
 8003a9c:	440a      	add	r2, r1
 8003a9e:	4611      	mov	r1, r2
 8003aa0:	e7ea      	b.n	8003a78 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2c>

08003aa2 <_ZN8touchgfx16DynamicDataGraph20setXAxisOffsetScaledEi>:
     *
     * @see setXAxisOffset, getXAxisOffsetScaled
     */
    virtual void setXAxisOffsetScaled(int offset)
    {
        xAxisOffset = offset;
 8003aa2:	f8c0 1140 	str.w	r1, [r0, #320]	; 0x140
    }
 8003aa6:	4770      	bx	lr

08003aa8 <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv>:
     *
     * @return The x axis offset.
     */
    virtual int getXAxisOffsetAsInt() const
    {
        return scaled2intX(getXAxisOffsetScaled());
 8003aa8:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisOffsetAsInt() const
 8003aaa:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisOffsetScaled());
 8003aac:	f8d3 3174 	ldr.w	r3, [r3, #372]	; 0x174
    virtual int getXAxisOffsetAsInt() const
 8003ab0:	4604      	mov	r4, r0
        return scaled2intX(getXAxisOffsetScaled());
 8003ab2:	4798      	blx	r3
        if (i >= 0)
 8003ab4:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 8003ab6:	6b23      	ldr	r3, [r4, #48]	; 0x30
        if (i >= 0)
 8003ab8:	db07      	blt.n	8003aca <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 8003aba:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8003abe:	fb90 f0f3 	sdiv	r0, r0, r3
 8003ac2:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003ac6:	1040      	asrs	r0, r0, #1
    }
 8003ac8:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003aca:	f06f 0201 	mvn.w	r2, #1
 8003ace:	fb02 3000 	mla	r0, r2, r0, r3
 8003ad2:	3801      	subs	r0, #1
 8003ad4:	fb90 f0f3 	sdiv	r0, r0, r3
 8003ad8:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003adc:	1040      	asrs	r0, r0, #1
 8003ade:	4240      	negs	r0, r0
        return scaled2intX(getXAxisOffsetScaled());
 8003ae0:	e7f2      	b.n	8003ac8 <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x20>

08003ae2 <_ZNK8touchgfx16DynamicDataGraph21getXAxisOffsetAsFloatEv>:

    /** @copydoc getXAxisOffsetAsInt() */
    virtual float getXAxisOffsetAsFloat() const
    {
        return scaled2floatX(getXAxisOffsetScaled());
 8003ae2:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisOffsetAsFloat() const
 8003ae4:	b510      	push	{r4, lr}
        return scaled2floatX(getXAxisOffsetScaled());
 8003ae6:	f8d3 3174 	ldr.w	r3, [r3, #372]	; 0x174
    virtual float getXAxisOffsetAsFloat() const
 8003aea:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisOffsetScaled());
 8003aec:	4798      	blx	r3
        return (float)i / (float)scale;
 8003aee:	ee07 0a90 	vmov	s15, r0
 8003af2:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003af6:	edd4 7a0c 	vldr	s15, [r4, #48]	; 0x30
 8003afa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003afe:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003b02:	bd10      	pop	{r4, pc}

08003b04 <_ZNK8touchgfx16DynamicDataGraph20getXAxisOffsetScaledEv>:
     * @see getXAxisOffsetAsInt, getXAxisOffsetAsFloat, setXAxisOffsetScaled, setXAxisOffset
     */
    virtual int getXAxisOffsetScaled() const
    {
        return xAxisOffset;
    }
 8003b04:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 8003b08:	4770      	bx	lr

08003b0a <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii>:
    }

    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
    {
        // Value is also index for these types of graphs.
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003b0a:	6803      	ldr	r3, [r0, #0]
        return scaled2int(i, xScale);
 8003b0c:	6b02      	ldr	r2, [r0, #48]	; 0x30
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003b0e:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
        if (i >= 0)
 8003b12:	2900      	cmp	r1, #0
    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
 8003b14:	b510      	push	{r4, lr}
 8003b16:	4604      	mov	r4, r0
        if (i >= 0)
 8003b18:	db0e      	blt.n	8003b38 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x2e>
            return ((i * 2 + scale) / scale) / 2;
 8003b1a:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8003b1e:	fb91 f1f2 	sdiv	r1, r1, r2
 8003b22:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003b26:	1049      	asrs	r1, r1, #1
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003b28:	b209      	sxth	r1, r1
 8003b2a:	4620      	mov	r0, r4
 8003b2c:	4798      	blx	r3
 8003b2e:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	; 0x13c
    }
 8003b32:	fb02 3000 	mla	r0, r2, r0, r3
 8003b36:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003b38:	f06f 0001 	mvn.w	r0, #1
 8003b3c:	fb00 2101 	mla	r1, r0, r1, r2
 8003b40:	3901      	subs	r1, #1
 8003b42:	fb91 f1f2 	sdiv	r1, r1, r2
 8003b46:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003b4a:	1049      	asrs	r1, r1, #1
 8003b4c:	4249      	negs	r1, r1
 8003b4e:	e7eb      	b.n	8003b28 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x1e>

08003b50 <_ZNK8touchgfx16DynamicDataGraph9getScaleXEv>:
    virtual void setScaleX(int scale, bool updateData = false);

    virtual int getScaleX() const
    {
        return AbstractDataGraph::getScaleX();
    }
 8003b50:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8003b52:	4770      	bx	lr

08003b54 <_ZNK8touchgfx16DynamicDataGraph9getScaleYEv>:
    virtual void setScaleY(int scale, bool updateData = false);

    virtual int getScaleY() const
    {
        return AbstractDataGraph::getScaleY();
    }
 8003b54:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8003b56:	4770      	bx	lr

08003b58 <_ZN8touchgfx16DynamicDataGraph19setXAxisScaleScaledEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactorScaled()", virtual void setXAxisScaleScaled(int scale))
    {
        setXAxisFactorScaled(scale);
 8003b58:	6803      	ldr	r3, [r0, #0]
 8003b5a:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 8003b5e:	4718      	bx	r3

08003b60 <_ZNK8touchgfx16DynamicDataGraph19getXAxisScaleScaledEv>:
    /// @endcond

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorScaled()", virtual int getXAxisScaleScaled() const)
    {
        return getXAxisFactorScaled();
 8003b60:	6803      	ldr	r3, [r0, #0]
 8003b62:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
 8003b66:	4718      	bx	r3

08003b68 <_ZNK8touchgfx16DynamicDataGraph16indexToScreenXQ5Es>:
        return i * scale;
 8003b68:	6b02      	ldr	r2, [r0, #48]	; 0x30
    }
    /// @endcond

    virtual CWRUtil::Q5 indexToScreenXQ5(int16_t index) const
    {
        return valueToScreenXQ5(int2scaledX(index));
 8003b6a:	6803      	ldr	r3, [r0, #0]
 8003b6c:	4351      	muls	r1, r2
 8003b6e:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 8003b72:	4718      	bx	r3

08003b74 <_ZNK8touchgfx16DynamicDataGraph16indexToScreenYQ5Es>:
    }

    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
    {
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003b74:	6803      	ldr	r3, [r0, #0]
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 8003b76:	b570      	push	{r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003b78:	f8d3 5118 	ldr.w	r5, [r3, #280]	; 0x118
 8003b7c:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 8003b80:	f8d0 6144 	ldr.w	r6, [r0, #324]	; 0x144
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 8003b84:	4604      	mov	r4, r0
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003b86:	4798      	blx	r3
 8003b88:	462b      	mov	r3, r5
 8003b8a:	f856 1020 	ldr.w	r1, [r6, r0, lsl #2]
 8003b8e:	4620      	mov	r0, r4
    }
 8003b90:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003b94:	4718      	bx	r3

08003b96 <_ZNK8touchgfx15GraphScrollData9dataIndexEs>:

    virtual int16_t addValue(int value);

    virtual int16_t dataIndex(int16_t screenIndex) const
    {
        return usedCapacity < maxCapacity ? screenIndex : (screenIndex + current) % maxCapacity;
 8003b96:	f9b0 211c 	ldrsh.w	r2, [r0, #284]	; 0x11c
 8003b9a:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 8003b9e:	4293      	cmp	r3, r2
 8003ba0:	db07      	blt.n	8003bb2 <_ZNK8touchgfx15GraphScrollData9dataIndexEs+0x1c>
 8003ba2:	f9b0 314c 	ldrsh.w	r3, [r0, #332]	; 0x14c
 8003ba6:	4419      	add	r1, r3
 8003ba8:	fb91 f0f2 	sdiv	r0, r1, r2
 8003bac:	fb02 1110 	mls	r1, r2, r0, r1
 8003bb0:	b209      	sxth	r1, r1
    }
 8003bb2:	4608      	mov	r0, r1
 8003bb4:	4770      	bx	lr

08003bb6 <_ZNK8touchgfx15GraphScrollData10indexToXQ5Es>:

private:
    virtual CWRUtil::Q5 indexToXQ5(int16_t index) const
    {
        return CWRUtil::toQ5(index);
    }
 8003bb6:	0148      	lsls	r0, r1, #5
 8003bb8:	4770      	bx	lr

08003bba <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8003bba:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 8003bbe:	4770      	bx	lr

08003bc0 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8003bc0:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 8003bc4:	4770      	bx	lr

08003bc6 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8003bc6:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003bc8:	2200      	movs	r2, #0
        return rect.width;
 8003bca:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8003bce:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8003bd2:	8002      	strh	r2, [r0, #0]
 8003bd4:	8042      	strh	r2, [r0, #2]
 8003bd6:	8084      	strh	r4, [r0, #4]
 8003bd8:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8003bda:	bd10      	pop	{r4, pc}

08003bdc <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8003bdc:	2200      	movs	r2, #0
 8003bde:	8002      	strh	r2, [r0, #0]
 8003be0:	8042      	strh	r2, [r0, #2]
 8003be2:	8082      	strh	r2, [r0, #4]
 8003be4:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8003be6:	4770      	bx	lr

08003be8 <_ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE>:
     *
     * @see getColor
     */
    virtual void setColor(colortype newColor)
    {
        color = newColor;
 8003be8:	62c1      	str	r1, [r0, #44]	; 0x2c
    }
 8003bea:	4770      	bx	lr

08003bec <_ZNK8touchgfx25AbstractGraphElementNoCWR8getColorEv>:
     * @see setColor
     */
    virtual colortype getColor() const
    {
        return color;
    }
 8003bec:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8003bee:	4770      	bx	lr

08003bf0 <_ZNK8touchgfx25AbstractGraphElementNoCWR16drawCanvasWidgetERKNS_4RectE>:

    virtual bool drawCanvasWidget(const Rect&) const
    {
        return true;
    }
 8003bf0:	2001      	movs	r0, #1
 8003bf2:	4770      	bx	lr

08003bf4 <_ZN8touchgfx25AbstractGraphElementNoCWR10setPainterERNS_15AbstractPainterE>:
    void normalizeRect(Rect& r) const;

private:
    virtual void setPainter(AbstractPainter& /*painter*/)
    {
    }
 8003bf4:	4770      	bx	lr

08003bf6 <_ZN8touchgfx20GraphElementGridBase22invalidateGraphPointAtEs>:
        return lineWidth;
    }

    virtual void invalidateGraphPointAt(int16_t)
    {
    }
 8003bf6:	4770      	bx	lr

08003bf8 <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
     *
     * @return The correctly scaled major interval.
     */
    virtual int getCorrectlyScaledMajorInterval(const AbstractDataGraph* graph) const
    {
        return majorGrid == 0 ? 0 : majorGrid->getCorrectlyScaledGridInterval(graph);
 8003bf8:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8003bfa:	b118      	cbz	r0, 8003c04 <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 8003bfc:	6803      	ldr	r3, [r0, #0]
 8003bfe:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8003c02:	4718      	bx	r3
    }
 8003c04:	4770      	bx	lr

08003c06 <_ZNK8touchgfx17GraphElementGridX13enclosingAreaEPKNS_17AbstractDataGraphE>:
    {
        return convertToGraphScaleX(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 8003c06:	b530      	push	{r4, r5, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003c08:	f8b2 111a 	ldrh.w	r1, [r2, #282]	; 0x11a
        return topPadding;
 8003c0c:	f9b2 4114 	ldrsh.w	r4, [r2, #276]	; 0x114
        return rect.width;
 8003c10:	f9b2 5040 	ldrsh.w	r5, [r2, #64]	; 0x40
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003c14:	f8b2 2042 	ldrh.w	r2, [r2, #66]	; 0x42
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003c18:	8044      	strh	r4, [r0, #2]
 8003c1a:	4421      	add	r1, r4
 8003c1c:	1a52      	subs	r2, r2, r1
 8003c1e:	2100      	movs	r1, #0
 8003c20:	8001      	strh	r1, [r0, #0]
 8003c22:	8085      	strh	r5, [r0, #4]
 8003c24:	80c2      	strh	r2, [r0, #6]
    {
        return Rect(0, graph->getGraphAreaPaddingTop(), graph->getGraphAreaWidthIncludingPadding(), graph->getGraphAreaHeight());
    }
 8003c26:	bd30      	pop	{r4, r5, pc}

08003c28 <_ZNK8touchgfx17GraphElementGridX8lineRectEssss>:

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
 8003c28:	b510      	push	{r4, lr}
 8003c2a:	8042      	strh	r2, [r0, #2]
 8003c2c:	f9bd 4008 	ldrsh.w	r4, [sp, #8]
 8003c30:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8003c34:	8004      	strh	r4, [r0, #0]
 8003c36:	8082      	strh	r2, [r0, #4]
 8003c38:	80c3      	strh	r3, [r0, #6]
    {
        return Rect(pos, start, width, length);
    }
 8003c3a:	bd10      	pop	{r4, pc}

08003c3c <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMinScaled();
 8003c3c:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 8003c3e:	4608      	mov	r0, r1
        return graph->getGraphRangeXMinScaled();
 8003c40:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8003c44:	4718      	bx	r3

08003c46 <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMaxScaled();
 8003c46:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 8003c48:	4608      	mov	r0, r1
        return graph->getGraphRangeXMaxScaled();
 8003c4a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8003c4e:	4718      	bx	r3

08003c50 <_ZNK8touchgfx17GraphElementGridX17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 8003c50:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 8003c54:	4770      	bx	lr

08003c56 <_ZNK8touchgfx17GraphElementGridX18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 8003c56:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 8003c5a:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 8003c5e:	4403      	add	r3, r0
 8003c60:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 8003c64:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 8003c66:	b200      	sxth	r0, r0
 8003c68:	4770      	bx	lr

08003c6a <_ZNK8touchgfx17GraphElementGridX20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 8003c6a:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 8003c6e:	4770      	bx	lr

08003c70 <_ZNK8touchgfx17GraphElementGridX18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003c70:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 8003c74:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 8003c78:	4403      	add	r3, r0
 8003c7a:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 8003c7e:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 8003c80:	b200      	sxth	r0, r0
 8003c82:	4770      	bx	lr

08003c84 <_ZNK8touchgfx17GraphElementGridX15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenXQ5(x);
 8003c84:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 8003c86:	4608      	mov	r0, r1
        return graph->valueToScreenXQ5(x);
 8003c88:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 8003c8c:	4611      	mov	r1, r2
 8003c8e:	4718      	bx	r3

08003c90 <_ZNK8touchgfx17GraphElementGridY13enclosingAreaEPKNS_17AbstractDataGraphE>:
 8003c90:	f8b2 1118 	ldrh.w	r1, [r2, #280]	; 0x118
    {
        return convertToGraphScaleY(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 8003c94:	b530      	push	{r4, r5, lr}
        return leftPadding;
 8003c96:	f9b2 5116 	ldrsh.w	r5, [r2, #278]	; 0x116
 8003c9a:	8005      	strh	r5, [r0, #0]
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003c9c:	186c      	adds	r4, r5, r1
 8003c9e:	f8b2 1040 	ldrh.w	r1, [r2, #64]	; 0x40
        return rect.height;
 8003ca2:	f9b2 2042 	ldrsh.w	r2, [r2, #66]	; 0x42
 8003ca6:	80c2      	strh	r2, [r0, #6]
 8003ca8:	1b09      	subs	r1, r1, r4
 8003caa:	2400      	movs	r4, #0
 8003cac:	8044      	strh	r4, [r0, #2]
 8003cae:	8081      	strh	r1, [r0, #4]
    {
        return Rect(graph->getGraphAreaPaddingLeft(), 0, graph->getGraphAreaWidth(), graph->getGraphAreaHeightIncludingPadding());
    }
 8003cb0:	bd30      	pop	{r4, r5, pc}

08003cb2 <_ZNK8touchgfx17GraphElementGridY8lineRectEssss>:
 8003cb2:	8002      	strh	r2, [r0, #0]
 8003cb4:	8083      	strh	r3, [r0, #4]
 8003cb6:	f9bd 2000 	ldrsh.w	r2, [sp]
 8003cba:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8003cbe:	8042      	strh	r2, [r0, #2]
 8003cc0:	80c3      	strh	r3, [r0, #6]

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
    {
        return Rect(start, pos, length, width);
    }
 8003cc2:	4770      	bx	lr

08003cc4 <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMinScaled();
 8003cc4:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 8003cc6:	4608      	mov	r0, r1
        return graph->getGraphRangeYMinScaled();
 8003cc8:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 8003ccc:	4718      	bx	r3

08003cce <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMaxScaled();
 8003cce:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 8003cd0:	4608      	mov	r0, r1
        return graph->getGraphRangeYMaxScaled();
 8003cd2:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 8003cd6:	4718      	bx	r3

08003cd8 <_ZNK8touchgfx17GraphElementGridY17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 8003cd8:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 8003cdc:	4770      	bx	lr

08003cde <_ZNK8touchgfx17GraphElementGridY18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 8003cde:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 8003ce2:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 8003ce6:	4403      	add	r3, r0
 8003ce8:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 8003cec:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 8003cee:	b200      	sxth	r0, r0
 8003cf0:	4770      	bx	lr

08003cf2 <_ZNK8touchgfx17GraphElementGridY20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 8003cf2:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 8003cf6:	4770      	bx	lr

08003cf8 <_ZNK8touchgfx17GraphElementGridY18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003cf8:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 8003cfc:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 8003d00:	4403      	add	r3, r0
 8003d02:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 8003d06:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 8003d08:	b200      	sxth	r0, r0
 8003d0a:	4770      	bx	lr

08003d0c <_ZNK8touchgfx17GraphElementGridY15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenYQ5(y);
 8003d0c:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 8003d0e:	4608      	mov	r0, r1
        return graph->valueToScreenYQ5(y);
 8003d10:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 8003d14:	4611      	mov	r1, r2
 8003d16:	4718      	bx	r3

08003d18 <_ZN19ScreenGraphViewBaseD1Ev>:

class ScreenGraphViewBase : public touchgfx::View<ScreenGraphPresenter>
{
public:
    ScreenGraphViewBase();
    virtual ~ScreenGraphViewBase() {}
 8003d18:	4770      	bx	lr

08003d1a <_ZN19ScreenGraphViewBase11setupScreenEv>:
}

void ScreenGraphViewBase::setupScreen()
{

}
 8003d1a:	4770      	bx	lr

08003d1c <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003d1c:	4770      	bx	lr

08003d1e <_ZN8touchgfx11GraphScrollILs60EED1Ev>:
 * the new values added to the graph.
 *
 * @tparam CAPACITY The maximum number of data points on the graph.
 */
template <int16_t CAPACITY>
class GraphScroll : public GraphScrollData
 8003d1e:	4770      	bx	lr

08003d20 <_ZN8touchgfx11GraphScrollILs600EED1Ev>:
 8003d20:	4770      	bx	lr

08003d22 <_ZN8touchgfx17GraphElementGridYD1Ev>:
class GraphElementGridY : public GraphElementGridBase
 8003d22:	4770      	bx	lr

08003d24 <_ZN8touchgfx17GraphElementGridXD1Ev>:
class GraphElementGridX : public GraphElementGridBase
 8003d24:	4770      	bx	lr

08003d26 <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003d26:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003d28:	68c2      	ldr	r2, [r0, #12]
 8003d2a:	6844      	ldr	r4, [r0, #4]
 8003d2c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003d2e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003d30:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003d34:	07d2      	lsls	r2, r2, #31
 8003d36:	bf48      	it	mi
 8003d38:	5962      	ldrmi	r2, [r4, r5]
 8003d3a:	689b      	ldr	r3, [r3, #8]
    }
 8003d3c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003d3e:	bf48      	it	mi
 8003d40:	58d3      	ldrmi	r3, [r2, r3]
 8003d42:	4718      	bx	r3

08003d44 <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8003d44:	6843      	ldr	r3, [r0, #4]
 8003d46:	b12b      	cbz	r3, 8003d54 <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8003d48:	6883      	ldr	r3, [r0, #8]
 8003d4a:	b92b      	cbnz	r3, 8003d58 <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003d4c:	68c0      	ldr	r0, [r0, #12]
 8003d4e:	f000 0001 	and.w	r0, r0, #1
 8003d52:	4770      	bx	lr
 8003d54:	4618      	mov	r0, r3
 8003d56:	4770      	bx	lr
 8003d58:	2001      	movs	r0, #1
    }
 8003d5a:	4770      	bx	lr

08003d5c <_ZN8touchgfx17GraphElementGridXD0Ev>:
 8003d5c:	b510      	push	{r4, lr}
 8003d5e:	2140      	movs	r1, #64	; 0x40
 8003d60:	4604      	mov	r4, r0
 8003d62:	f01c fc91 	bl	8020688 <_ZdlPvj>
 8003d66:	4620      	mov	r0, r4
 8003d68:	bd10      	pop	{r4, pc}

08003d6a <_ZN8touchgfx17GraphElementGridYD0Ev>:
class GraphElementGridY : public GraphElementGridBase
 8003d6a:	b510      	push	{r4, lr}
 8003d6c:	2140      	movs	r1, #64	; 0x40
 8003d6e:	4604      	mov	r4, r0
 8003d70:	f01c fc8a 	bl	8020688 <_ZdlPvj>
 8003d74:	4620      	mov	r0, r4
 8003d76:	bd10      	pop	{r4, pc}

08003d78 <_ZN8touchgfx11GraphScrollILs600EED0Ev>:
 8003d78:	b510      	push	{r4, lr}
 8003d7a:	f44f 612b 	mov.w	r1, #2736	; 0xab0
 8003d7e:	4604      	mov	r4, r0
 8003d80:	f01c fc82 	bl	8020688 <_ZdlPvj>
 8003d84:	4620      	mov	r0, r4
 8003d86:	bd10      	pop	{r4, pc}

08003d88 <_ZN8touchgfx11GraphScrollILs60EED0Ev>:
 8003d88:	b510      	push	{r4, lr}
 8003d8a:	f44f 7110 	mov.w	r1, #576	; 0x240
 8003d8e:	4604      	mov	r4, r0
 8003d90:	f01c fc7a 	bl	8020688 <_ZdlPvj>
 8003d94:	4620      	mov	r0, r4
 8003d96:	bd10      	pop	{r4, pc}

08003d98 <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003d98:	b510      	push	{r4, lr}
 8003d9a:	2110      	movs	r1, #16
 8003d9c:	4604      	mov	r4, r0
 8003d9e:	f01c fc73 	bl	8020688 <_ZdlPvj>
 8003da2:	4620      	mov	r0, r4
 8003da4:	bd10      	pop	{r4, pc}

08003da6 <_ZN19ScreenGraphViewBaseD0Ev>:
 8003da6:	b510      	push	{r4, lr}
 8003da8:	f242 713c 	movw	r1, #10044	; 0x273c
 8003dac:	4604      	mov	r4, r0
 8003dae:	f01c fc6b 	bl	8020688 <_ZdlPvj>
 8003db2:	4620      	mov	r0, r4
 8003db4:	bd10      	pop	{r4, pc}

08003db6 <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv>:
        if (alpha > 0)
 8003db6:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8003dba:	b10b      	cbz	r3, 8003dc0 <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv+0xa>
            Container::invalidateContent();
 8003dbc:	f006 be5f 	b.w	800aa7e <_ZNK8touchgfx9Container17invalidateContentEv>
    }
 8003dc0:	4770      	bx	lr

08003dc2 <_ZNK8touchgfx17GraphElementGridX30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 8003dc2:	b513      	push	{r0, r1, r4, lr}
 8003dc4:	4603      	mov	r3, r0
 8003dc6:	4608      	mov	r0, r1
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 8003dc8:	e9d3 140c 	ldrd	r1, r4, [r3, #48]	; 0x30
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003dcc:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 8003dce:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003dd0:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8003dd4:	4798      	blx	r3
 8003dd6:	9901      	ldr	r1, [sp, #4]
 8003dd8:	4602      	mov	r2, r0
 8003dda:	4620      	mov	r0, r4
    }
 8003ddc:	b002      	add	sp, #8
 8003dde:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003de2:	f008 bc95 	b.w	800c710 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

08003de6 <_ZNK8touchgfx17GraphElementGridY30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 8003de6:	b513      	push	{r0, r1, r4, lr}
 8003de8:	4603      	mov	r3, r0
 8003dea:	4608      	mov	r0, r1
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 8003dec:	e9d3 140c 	ldrd	r1, r4, [r3, #48]	; 0x30
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003df0:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 8003df2:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003df4:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003df8:	4798      	blx	r3
 8003dfa:	9901      	ldr	r1, [sp, #4]
 8003dfc:	4602      	mov	r2, r0
 8003dfe:	4620      	mov	r0, r4
    }
 8003e00:	b002      	add	sp, #8
 8003e02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003e06:	f008 bc83 	b.w	800c710 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
	...

08003e0c <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 8003e0c:	1e0a      	subs	r2, r1, #0
    virtual int indexToDataPointYScaled(int16_t index) const
 8003e0e:	b510      	push	{r4, lr}
        assert(index >= 0 && index < usedCapacity);
 8003e10:	db03      	blt.n	8003e1a <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0xe>
 8003e12:	f9b0 411e 	ldrsh.w	r4, [r0, #286]	; 0x11e
 8003e16:	4294      	cmp	r4, r2
 8003e18:	dc06      	bgt.n	8003e28 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x1c>
 8003e1a:	4b08      	ldr	r3, [pc, #32]	; (8003e3c <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x30>)
 8003e1c:	4a08      	ldr	r2, [pc, #32]	; (8003e40 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x34>)
 8003e1e:	4809      	ldr	r0, [pc, #36]	; (8003e44 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x38>)
 8003e20:	f240 6133 	movw	r1, #1587	; 0x633
 8003e24:	f01c fce4 	bl	80207f0 <__assert_func>
        return yValues[dataIndex(index)];
 8003e28:	6803      	ldr	r3, [r0, #0]
 8003e2a:	f8d0 4144 	ldr.w	r4, [r0, #324]	; 0x144
 8003e2e:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 8003e32:	4798      	blx	r3
    }
 8003e34:	f854 0020 	ldr.w	r0, [r4, r0, lsl #2]
 8003e38:	bd10      	pop	{r4, pc}
 8003e3a:	bf00      	nop
 8003e3c:	08022b5c 	.word	0x08022b5c
 8003e40:	08022b7f 	.word	0x08022b7f
 8003e44:	08022bce 	.word	0x08022bce

08003e48 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 8003e48:	1e0b      	subs	r3, r1, #0
    virtual int indexToDataPointXScaled(int16_t index) const
 8003e4a:	b510      	push	{r4, lr}
 8003e4c:	4604      	mov	r4, r0
        assert(index >= 0 && index < usedCapacity);
 8003e4e:	db03      	blt.n	8003e58 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x10>
 8003e50:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
 8003e54:	429a      	cmp	r2, r3
 8003e56:	dc06      	bgt.n	8003e66 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x1e>
 8003e58:	4b07      	ldr	r3, [pc, #28]	; (8003e78 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x30>)
 8003e5a:	4a08      	ldr	r2, [pc, #32]	; (8003e7c <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x34>)
 8003e5c:	4808      	ldr	r0, [pc, #32]	; (8003e80 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x38>)
 8003e5e:	f240 612d 	movw	r1, #1581	; 0x62d
 8003e62:	f01c fcc5 	bl	80207f0 <__assert_func>
        return (indexToGlobalIndex(index) * xAxisFactor) + xAxisOffset;
 8003e66:	6803      	ldr	r3, [r0, #0]
 8003e68:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8003e6c:	4798      	blx	r3
 8003e6e:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	; 0x13c
    }
 8003e72:	fb02 3000 	mla	r0, r2, r0, r3
 8003e76:	bd10      	pop	{r4, pc}
 8003e78:	08022b5c 	.word	0x08022b5c
 8003e7c:	08022c2b 	.word	0x08022c2b
 8003e80:	08022bce 	.word	0x08022bce

08003e84 <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

}

void ScreenGraphViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &toggleButton1)
 8003e84:	f500 5389 	add.w	r3, r0, #4384	; 0x1120
 8003e88:	3308      	adds	r3, #8
 8003e8a:	4299      	cmp	r1, r3
{
 8003e8c:	b510      	push	{r4, lr}
 8003e8e:	4604      	mov	r4, r0
    if (&src == &toggleButton1)
 8003e90:	d115      	bne.n	8003ebe <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
    {
        //Interaction2
        //When toggleButton1 clicked execute C++ code
        //Execute C++ code
        dynamicGraph1.setVisible(!dynamicGraph1.isVisible());
 8003e92:	f890 3d7d 	ldrb.w	r3, [r0, #3453]	; 0xd7d
 8003e96:	f083 0301 	eor.w	r3, r3, #1
        visible = vis;
 8003e9a:	f880 3d7d 	strb.w	r3, [r0, #3453]	; 0xd7d
        dynamicGraph2.setVisible(!dynamicGraph2.isVisible());
 8003e9e:	f890 30f1 	ldrb.w	r3, [r0, #241]	; 0xf1
 8003ea2:	f083 0301 	eor.w	r3, r3, #1
 8003ea6:	f880 30f1 	strb.w	r3, [r0, #241]	; 0xf1
        dynamicGraph1.invalidate();
 8003eaa:	f600 5058 	addw	r0, r0, #3416	; 0xd58
 8003eae:	f00e f866 	bl	8011f7e <_ZNK8touchgfx8Drawable10invalidateEv>
        dynamicGraph2.invalidate();
 8003eb2:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
        //When buttonCloseModal clicked hide modalWindow1
        //Hide modalWindow1
        modalWindow1.setVisible(false);
        modalWindow1.invalidate();
    }
}
 8003eb6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        modalWindow1.invalidate();
 8003eba:	f00e b860 	b.w	8011f7e <_ZNK8touchgfx8Drawable10invalidateEv>
    else if (&src == &buttonCloseModal)
 8003ebe:	f500 539c 	add.w	r3, r0, #4992	; 0x1380
 8003ec2:	3308      	adds	r3, #8
 8003ec4:	4299      	cmp	r1, r3
 8003ec6:	d108      	bne.n	8003eda <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x56>
 8003ec8:	f500 5380 	add.w	r3, r0, #4096	; 0x1000
 8003ecc:	2200      	movs	r2, #0
        modalWindow1.invalidate();
 8003ece:	f500 5096 	add.w	r0, r0, #4800	; 0x12c0
 8003ed2:	f883 22fd 	strb.w	r2, [r3, #765]	; 0x2fd
 8003ed6:	3018      	adds	r0, #24
 8003ed8:	e7ed      	b.n	8003eb6 <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x32>
}
 8003eda:	bd10      	pop	{r4, pc}

08003edc <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>:
     * @param  factor2 The second factor.
     * @param  divisor The divisor.
     *
     * @return factor1 * factor2 / divisor as a Q5
     */
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8003edc:	b537      	push	{r0, r1, r2, r4, r5, lr}
    {
        int32_t remainder;
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8003ede:	ab01      	add	r3, sp, #4
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8003ee0:	4615      	mov	r5, r2
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8003ee2:	f00e f9ee 	bl	80122c2 <_ZN8touchgfx6muldivElllRl>
        if (result >= 0)
 8003ee6:	2800      	cmp	r0, #0
 8003ee8:	ea4f 1440 	mov.w	r4, r0, lsl #5
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8003eec:	9901      	ldr	r1, [sp, #4]
 8003eee:	462a      	mov	r2, r5
 8003ef0:	f04f 0020 	mov.w	r0, #32
        if (result >= 0)
 8003ef4:	db04      	blt.n	8003f00 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x24>
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8003ef6:	f00e fa03 	bl	8012300 <_ZN8touchgfx6muldivElll>
            return Q5(v + q5.v);
 8003efa:	4420      	add	r0, r4
        {
            return toQ5(result) + muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
        }
        return toQ5(result) - muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
    }
 8003efc:	b003      	add	sp, #12
 8003efe:	bd30      	pop	{r4, r5, pc}
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8003f00:	f00e f9fe 	bl	8012300 <_ZN8touchgfx6muldivElll>
            return Q5(v - q5.v);
 8003f04:	1a20      	subs	r0, r4, r0
 8003f06:	e7f9      	b.n	8003efc <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x20>

08003f08 <_ZNK8touchgfx17AbstractDataGraph16valueToScreenYQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 8003f08:	b570      	push	{r4, r5, r6, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003f0a:	f9b0 4114 	ldrsh.w	r4, [r0, #276]	; 0x114
 8003f0e:	f8b0 511a 	ldrh.w	r5, [r0, #282]	; 0x11a
 8003f12:	1963      	adds	r3, r4, r5
 8003f14:	f8b0 5042 	ldrh.w	r5, [r0, #66]	; 0x42
 8003f18:	1aed      	subs	r5, r5, r3
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 8003f1a:	e9d0 324d 	ldrd	r3, r2, [r0, #308]	; 0x134
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 8003f1e:	460e      	mov	r6, r1
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 8003f20:	b22d      	sxth	r5, r5
 8003f22:	1ad2      	subs	r2, r2, r3
 8003f24:	1e69      	subs	r1, r5, #1
 8003f26:	1af0      	subs	r0, r6, r3
 8003f28:	f7ff ffd8 	bl	8003edc <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
 8003f2c:	442c      	add	r4, r5
 8003f2e:	3c01      	subs	r4, #1
    }
 8003f30:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
 8003f34:	bd70      	pop	{r4, r5, r6, pc}

08003f36 <_ZNK8touchgfx17AbstractDataGraph16valueToScreenXQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenXQ5(int x) const
 8003f36:	b538      	push	{r3, r4, r5, lr}
 8003f38:	4604      	mov	r4, r0
 8003f3a:	4608      	mov	r0, r1
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003f3c:	f8b4 3118 	ldrh.w	r3, [r4, #280]	; 0x118
 8003f40:	f8b4 1116 	ldrh.w	r1, [r4, #278]	; 0x116
 8003f44:	440b      	add	r3, r1
 8003f46:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 8003f4a:	e9d4 524b 	ldrd	r5, r2, [r4, #300]	; 0x12c
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003f4e:	1ac9      	subs	r1, r1, r3
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 8003f50:	b209      	sxth	r1, r1
 8003f52:	1b52      	subs	r2, r2, r5
 8003f54:	3901      	subs	r1, #1
 8003f56:	1b40      	subs	r0, r0, r5
 8003f58:	f7ff ffc0 	bl	8003edc <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
            return Q5(v + q5.v);
 8003f5c:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	; 0x116
    }
 8003f60:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 8003f64:	bd38      	pop	{r3, r4, r5, pc}
	...

08003f68 <_ZN8touchgfx20GraphElementGridBaseC1Ev>:
    GraphElementGridBase()
 8003f68:	b510      	push	{r4, lr}
 8003f6a:	4604      	mov	r4, r0
        : CanvasWidget()
 8003f6c:	f007 ffb8 	bl	800bee0 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8003f70:	4a06      	ldr	r2, [pc, #24]	; (8003f8c <_ZN8touchgfx20GraphElementGridBaseC1Ev+0x24>)
 8003f72:	6022      	str	r2, [r4, #0]
        : color(col)
 8003f74:	2300      	movs	r3, #0
 8003f76:	2201      	movs	r2, #1
 8003f78:	210a      	movs	r1, #10
 8003f7a:	e9c4 210c 	strd	r2, r1, [r4, #48]	; 0x30
 8003f7e:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003f80:	f884 2038 	strb.w	r2, [r4, #56]	; 0x38
 8003f84:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8003f86:	4620      	mov	r0, r4
 8003f88:	bd10      	pop	{r4, pc}
 8003f8a:	bf00      	nop
 8003f8c:	08023c00 	.word	0x08023c00

08003f90 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8003f90:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 8003f92:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8003f94:	4e12      	ldr	r6, [pc, #72]	; (8003fe0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 8003f96:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8003f98:	4b12      	ldr	r3, [pc, #72]	; (8003fe4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8003f9a:	6003      	str	r3, [r0, #0]
 8003f9c:	6833      	ldr	r3, [r6, #0]
 8003f9e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
    AbstractPainterRGB565()
 8003fa2:	4605      	mov	r5, r0
 8003fa4:	b10a      	cbz	r2, 8003faa <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 8003fa6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003fa8:	b900      	cbnz	r0, 8003fac <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 8003faa:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8003fac:	6803      	ldr	r3, [r0, #0]
 8003fae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003fb0:	4798      	blx	r3
        return auxiliaryLCD;
 8003fb2:	6833      	ldr	r3, [r6, #0]
 8003fb4:	fab0 f480 	clz	r4, r0
 8003fb8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003fba:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8003fbc:	b130      	cbz	r0, 8003fcc <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8003fbe:	6803      	ldr	r3, [r0, #0]
 8003fc0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003fc2:	4798      	blx	r3
 8003fc4:	2800      	cmp	r0, #0
 8003fc6:	bf08      	it	eq
 8003fc8:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8003fcc:	b92c      	cbnz	r4, 8003fda <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8003fce:	4b06      	ldr	r3, [pc, #24]	; (8003fe8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8003fd0:	4a06      	ldr	r2, [pc, #24]	; (8003fec <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8003fd2:	4807      	ldr	r0, [pc, #28]	; (8003ff0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8003fd4:	212c      	movs	r1, #44	; 0x2c
 8003fd6:	f01c fc0b 	bl	80207f0 <__assert_func>
    }
 8003fda:	4628      	mov	r0, r5
 8003fdc:	bd70      	pop	{r4, r5, r6, pc}
 8003fde:	bf00      	nop
 8003fe0:	200155ac 	.word	0x200155ac
 8003fe4:	08022eec 	.word	0x08022eec
 8003fe8:	08022c7a 	.word	0x08022c7a
 8003fec:	08022cd8 	.word	0x08022cd8
 8003ff0:	08022d11 	.word	0x08022d11

08003ff4 <_ZN8touchgfx15GraphLabelsBaseC1Ev>:
 * @see GraphLabelsX, GraphLabelsY
 */
class GraphLabelsBase : public AbstractGraphDecoration
{
public:
    GraphLabelsBase()
 8003ff4:	b510      	push	{r4, lr}
 8003ff6:	4604      	mov	r4, r0
        : CanvasWidget()
 8003ff8:	f007 ff72 	bl	800bee0 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : AbstractGraphDecoration(),
          dataScale(1), labelInterval(0), labelTypedText(TYPED_TEXT_INVALID), labelRotation(TEXT_ROTATE_0), labelDecimals(0), labelDecimalPoint('.'), majorLabel(0)
 8003ffc:	4a0a      	ldr	r2, [pc, #40]	; (8004028 <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x34>)
 8003ffe:	6022      	str	r2, [r4, #0]
 8004000:	2300      	movs	r3, #0
 8004002:	2201      	movs	r2, #1
 8004004:	e9c4 230c 	strd	r2, r3, [r4, #48]	; 0x30
 8004008:	4a08      	ldr	r2, [pc, #32]	; (800402c <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x38>)
 800400a:	63a2      	str	r2, [r4, #56]	; 0x38
 800400c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8004010:	87a2      	strh	r2, [r4, #60]	; 0x3c
 8004012:	222e      	movs	r2, #46	; 0x2e
 8004014:	62e3      	str	r3, [r4, #44]	; 0x2c
 8004016:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800401a:	f8a4 3042 	strh.w	r3, [r4, #66]	; 0x42
 800401e:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 8004022:	64a3      	str	r3, [r4, #72]	; 0x48
    {
    }
 8004024:	4620      	mov	r0, r4
 8004026:	bd10      	pop	{r4, pc}
 8004028:	08023df8 	.word	0x08023df8
 800402c:	080221bc 	.word	0x080221bc

08004030 <_ZN8touchgfx14AbstractButtonC1Ev>:
    AbstractButton()
 8004030:	b510      	push	{r4, lr}
        : Widget(), action(), pressed(false)
 8004032:	2226      	movs	r2, #38	; 0x26
    AbstractButton()
 8004034:	4604      	mov	r4, r0
        : Widget(), action(), pressed(false)
 8004036:	2100      	movs	r1, #0
 8004038:	f01c fd60 	bl	8020afc <memset>
 800403c:	4620      	mov	r0, r4
 800403e:	f7fe fe3f 	bl	8002cc0 <_ZN8touchgfx6WidgetC1Ev>
 8004042:	4b05      	ldr	r3, [pc, #20]	; (8004058 <_ZN8touchgfx14AbstractButtonC1Ev+0x28>)
 8004044:	6023      	str	r3, [r4, #0]
 8004046:	2300      	movs	r3, #0
 8004048:	62a3      	str	r3, [r4, #40]	; 0x28
 800404a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        touchable = touch;
 800404e:	2301      	movs	r3, #1
 8004050:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
    }
 8004054:	4620      	mov	r0, r4
 8004056:	bd10      	pop	{r4, pc}
 8004058:	08023e98 	.word	0x08023e98

0800405c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 800405c:	b510      	push	{r4, lr}
 800405e:	4604      	mov	r4, r0
        : TextArea()
 8004060:	f7fe fe6e 	bl	8002d40 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8004064:	4b02      	ldr	r3, [pc, #8]	; (8004070 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x14>)
 8004066:	6023      	str	r3, [r4, #0]
 8004068:	2300      	movs	r3, #0
 800406a:	64a3      	str	r3, [r4, #72]	; 0x48
    }
 800406c:	4620      	mov	r0, r4
 800406e:	bd10      	pop	{r4, pc}
 8004070:	08022920 	.word	0x08022920

08004074 <_ZN19ScreenGraphViewBaseC1Ev>:
ScreenGraphViewBase::ScreenGraphViewBase() :
 8004074:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004078:	ed2d 8b10 	vpush	{d8-d15}
 800407c:	4604      	mov	r4, r0
 800407e:	b097      	sub	sp, #92	; 0x5c
 8004080:	f00e fae8 	bl	8012654 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &ScreenGraphViewBase::buttonCallbackHandler)
 8004084:	4622      	mov	r2, r4
 8004086:	2500      	movs	r5, #0
 8004088:	4beb      	ldr	r3, [pc, #940]	; (8004438 <_ZN19ScreenGraphViewBaseC1Ev+0x3c4>)
 800408a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800408c:	f842 3b40 	str.w	r3, [r2], #64
 8004090:	4610      	mov	r0, r2
 8004092:	ee0b 2a90 	vmov	s23, r2
 8004096:	f7fe fe25 	bl	8002ce4 <_ZN8touchgfx3BoxC1Ev>
 800409a:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 800409e:	f64f 76ff 	movw	r6, #65535	; 0xffff
 80040a2:	a914      	add	r1, sp, #80	; 0x50
 80040a4:	4618      	mov	r0, r3
 80040a6:	ee0c 3a10 	vmov	s24, r3
 80040aa:	f8ad 6050 	strh.w	r6, [sp, #80]	; 0x50
 80040ae:	f7fe fe2d 	bl	8002d0c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80040b2:	f104 0398 	add.w	r3, r4, #152	; 0x98
        : Box(), borderColor(0), borderSize(0)
 80040b6:	4618      	mov	r0, r3
 80040b8:	f104 0bcc 	add.w	fp, r4, #204	; 0xcc
 80040bc:	ee0d 3a90 	vmov	s27, r3
 80040c0:	f7fe fe10 	bl	8002ce4 <_ZN8touchgfx3BoxC1Ev>
 80040c4:	4bdd      	ldr	r3, [pc, #884]	; (800443c <_ZN19ScreenGraphViewBaseC1Ev+0x3c8>)
 80040c6:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 80040ca:	f44f 7116 	mov.w	r1, #600	; 0x258
 80040ce:	f8c4 50c4 	str.w	r5, [r4, #196]	; 0xc4
 80040d2:	f8a4 50c8 	strh.w	r5, [r4, #200]	; 0xc8
 80040d6:	4658      	mov	r0, fp
 80040d8:	f008 fab6 	bl	800c648 <_ZN8touchgfx17AbstractDataGraphC1Es>
 80040dc:	4bd8      	ldr	r3, [pc, #864]	; (8004440 <_ZN19ScreenGraphViewBaseC1Ev+0x3cc>)
 80040de:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
{
public:
    GraphScroll()
        : GraphScrollData(CAPACITY, y)
 80040e2:	f504 7207 	add.w	r2, r4, #540	; 0x21c
 80040e6:	2301      	movs	r3, #1
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 80040e8:	4629      	mov	r1, r5
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 80040ea:	e9c4 3582 	strd	r3, r5, [r4, #520]	; 0x208
 80040ee:	e9c4 2584 	strd	r2, r5, [r4, #528]	; 0x210
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 80040f2:	4658      	mov	r0, fp
 80040f4:	f240 2257 	movw	r2, #599	; 0x257
 80040f8:	f7ff fa3a 	bl	8003570 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
 80040fc:	f604 337c 	addw	r3, r4, #2940	; 0xb7c
 8004100:	4ad0      	ldr	r2, [pc, #832]	; (8004444 <_ZN19ScreenGraphViewBaseC1Ev+0x3d0>)
 8004102:	f8c4 20cc 	str.w	r2, [r4, #204]	; 0xcc
 8004106:	4618      	mov	r0, r3
        : DynamicDataGraph(capacity, values), current(0)
 8004108:	f8a4 5218 	strh.w	r5, [r4, #536]	; 0x218
 800410c:	ee0f 3a10 	vmov	s30, r3
 8004110:	f007 fee6 	bl	800bee0 <_ZN8touchgfx12CanvasWidgetC1Ev>
 */
class GraphElementLine : public AbstractGraphElement
{
public:
    GraphElementLine()
        : lineWidth(2)
 8004114:	f04f 0202 	mov.w	r2, #2
 8004118:	4bcb      	ldr	r3, [pc, #812]	; (8004448 <_ZN19ScreenGraphViewBaseC1Ev+0x3d4>)
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800411a:	f8df 9350 	ldr.w	r9, [pc, #848]	; 800446c <_ZN19ScreenGraphViewBaseC1Ev+0x3f8>
 800411e:	f884 2ba8 	strb.w	r2, [r4, #2984]	; 0xba8
 8004122:	f604 32ac 	addw	r2, r4, #2988	; 0xbac
 8004126:	f8c4 3b7c 	str.w	r3, [r4, #2940]	; 0xb7c
 800412a:	4610      	mov	r0, r2
 800412c:	9207      	str	r2, [sp, #28]
 800412e:	f7ff ff2f 	bl	8003f90 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8004132:	f109 0224 	add.w	r2, r9, #36	; 0x24
 8004136:	f504 613c 	add.w	r1, r4, #3008	; 0xbc0
 800413a:	f8c4 2bb4 	str.w	r2, [r4, #2996]	; 0xbb4
 800413e:	f8c4 9bac 	str.w	r9, [r4, #2988]	; 0xbac
class GraphElementGridX : public GraphElementGridBase
 8004142:	4608      	mov	r0, r1
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8004144:	f8c4 5bb8 	str.w	r5, [r4, #3000]	; 0xbb8
 8004148:	f8df a324 	ldr.w	sl, [pc, #804]	; 8004470 <_ZN19ScreenGraphViewBaseC1Ev+0x3fc>
class GraphElementGridY : public GraphElementGridBase
 800414c:	4fbf      	ldr	r7, [pc, #764]	; (800444c <_ZN19ScreenGraphViewBaseC1Ev+0x3d8>)
 800414e:	ee0f 1a90 	vmov	s31, r1
class GraphElementGridX : public GraphElementGridBase
 8004152:	f7ff ff09 	bl	8003f68 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8004156:	f504 6140 	add.w	r1, r4, #3072	; 0xc00
 800415a:	f8c4 abc0 	str.w	sl, [r4, #3008]	; 0xbc0
class GraphElementGridY : public GraphElementGridBase
 800415e:	4608      	mov	r0, r1
 8004160:	9108      	str	r1, [sp, #32]
 8004162:	f7ff ff01 	bl	8003f68 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8004166:	f504 6144 	add.w	r1, r4, #3136	; 0xc40
 800416a:	f8c4 7c00 	str.w	r7, [r4, #3072]	; 0xc00
class GraphElementGridX : public GraphElementGridBase
 800416e:	4608      	mov	r0, r1
 8004170:	ee0e 1a10 	vmov	s28, r1
 8004174:	f7ff fef8 	bl	8003f68 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8004178:	f504 6148 	add.w	r1, r4, #3200	; 0xc80
 800417c:	f8c4 ac40 	str.w	sl, [r4, #3136]	; 0xc40
class GraphElementGridY : public GraphElementGridBase
 8004180:	4608      	mov	r0, r1
 8004182:	ee0e 1a90 	vmov	s29, r1
 8004186:	f7ff feef 	bl	8003f68 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 800418a:	f504 614c 	add.w	r1, r4, #3264	; 0xcc0
 800418e:	f8c4 7c80 	str.w	r7, [r4, #3200]	; 0xc80

/**
 * GraphLabelsX will draw labels along the X axis at given intervals. By combining two
 * GraphLabelsX it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsX : public GraphLabelsBase
 8004192:	4608      	mov	r0, r1
 8004194:	9109      	str	r1, [sp, #36]	; 0x24
 8004196:	f7ff ff2d 	bl	8003ff4 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 800419a:	4aad      	ldr	r2, [pc, #692]	; (8004450 <_ZN19ScreenGraphViewBaseC1Ev+0x3dc>)
 800419c:	f8c4 2cc0 	str.w	r2, [r4, #3264]	; 0xcc0
 80041a0:	f604 510c 	addw	r1, r4, #3340	; 0xd0c

/**
 * GraphLabelsY will draw labels along the Y axis at given intervals. By combining two
 * GraphLabelsY it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsY : public GraphLabelsBase
 80041a4:	4608      	mov	r0, r1
 80041a6:	f604 5858 	addw	r8, r4, #3416	; 0xd58
 80041aa:	910a      	str	r1, [sp, #40]	; 0x28
 80041ac:	f7ff ff22 	bl	8003ff4 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 80041b0:	49a8      	ldr	r1, [pc, #672]	; (8004454 <_ZN19ScreenGraphViewBaseC1Ev+0x3e0>)
 80041b2:	f8c4 1d0c 	str.w	r1, [r4, #3340]	; 0xd0c
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 80041b6:	4640      	mov	r0, r8
 80041b8:	213c      	movs	r1, #60	; 0x3c
 80041ba:	f008 fa45 	bl	800c648 <_ZN8touchgfx17AbstractDataGraphC1Es>
 80041be:	4ba0      	ldr	r3, [pc, #640]	; (8004440 <_ZN19ScreenGraphViewBaseC1Ev+0x3cc>)
 80041c0:	f8c4 3d58 	str.w	r3, [r4, #3416]	; 0xd58
 80041c4:	2001      	movs	r0, #1
        : GraphScrollData(CAPACITY, y)
 80041c6:	f604 63a8 	addw	r3, r4, #3752	; 0xea8
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 80041ca:	4629      	mov	r1, r5
 80041cc:	223b      	movs	r2, #59	; 0x3b
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 80041ce:	f8c4 0e94 	str.w	r0, [r4, #3732]	; 0xe94
 80041d2:	f8c4 3e9c 	str.w	r3, [r4, #3740]	; 0xe9c
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 80041d6:	4640      	mov	r0, r8
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 80041d8:	f8c4 5e98 	str.w	r5, [r4, #3736]	; 0xe98
 80041dc:	f8c4 5ea0 	str.w	r5, [r4, #3744]	; 0xea0
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 80041e0:	f7ff f9c6 	bl	8003570 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
 80041e4:	4b9c      	ldr	r3, [pc, #624]	; (8004458 <_ZN19ScreenGraphViewBaseC1Ev+0x3e4>)
 80041e6:	f8c4 3d58 	str.w	r3, [r4, #3416]	; 0xd58
 80041ea:	f604 7098 	addw	r0, r4, #3992	; 0xf98
        : DynamicDataGraph(capacity, values), current(0)
 80041ee:	f8a4 5ea4 	strh.w	r5, [r4, #3748]	; 0xea4
 80041f2:	900b      	str	r0, [sp, #44]	; 0x2c
        : CanvasWidget()
 80041f4:	f007 fe74 	bl	800bee0 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : lineWidth(2)
 80041f8:	4b93      	ldr	r3, [pc, #588]	; (8004448 <_ZN19ScreenGraphViewBaseC1Ev+0x3d4>)
 80041fa:	f8c4 3f98 	str.w	r3, [r4, #3992]	; 0xf98
 80041fe:	f04f 0302 	mov.w	r3, #2
 8004202:	f884 3fc4 	strb.w	r3, [r4, #4036]	; 0xfc4
 8004206:	f604 70c8 	addw	r0, r4, #4040	; 0xfc8
 800420a:	900c      	str	r0, [sp, #48]	; 0x30
 800420c:	f7ff fec0 	bl	8003f90 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8004210:	f109 0224 	add.w	r2, r9, #36	; 0x24
 8004214:	f8c4 2fd0 	str.w	r2, [r4, #4048]	; 0xfd0
 8004218:	f8c4 9fc8 	str.w	r9, [r4, #4040]	; 0xfc8
 800421c:	f604 70dc 	addw	r0, r4, #4060	; 0xfdc
 8004220:	f8c4 5fd4 	str.w	r5, [r4, #4052]	; 0xfd4
 8004224:	900d      	str	r0, [sp, #52]	; 0x34
class GraphElementGridX : public GraphElementGridBase
 8004226:	f7ff fe9f 	bl	8003f68 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 800422a:	f504 5080 	add.w	r0, r4, #4096	; 0x1000
class GraphElementGridY : public GraphElementGridBase
 800422e:	f504 5980 	add.w	r9, r4, #4096	; 0x1000
class GraphElementGridX : public GraphElementGridBase
 8004232:	f8c4 afdc 	str.w	sl, [r4, #4060]	; 0xfdc
 8004236:	301c      	adds	r0, #28
 8004238:	9005      	str	r0, [sp, #20]
class GraphElementGridY : public GraphElementGridBase
 800423a:	f7ff fe95 	bl	8003f68 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 800423e:	f504 5082 	add.w	r0, r4, #4160	; 0x1040
 8004242:	f8c9 701c 	str.w	r7, [r9, #28]
 8004246:	301c      	adds	r0, #28
 8004248:	9003      	str	r0, [sp, #12]
class GraphElementGridX : public GraphElementGridBase
 800424a:	f7ff fe8d 	bl	8003f68 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 800424e:	f504 5084 	add.w	r0, r4, #4224	; 0x1080
 8004252:	f8c9 a05c 	str.w	sl, [r9, #92]	; 0x5c
 8004256:	301c      	adds	r0, #28
 8004258:	9004      	str	r0, [sp, #16]
class GraphElementGridY : public GraphElementGridBase
 800425a:	f7ff fe85 	bl	8003f68 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 800425e:	f504 5086 	add.w	r0, r4, #4288	; 0x10c0
 8004262:	f8c9 709c 	str.w	r7, [r9, #156]	; 0x9c
 8004266:	301c      	adds	r0, #28
 8004268:	9006      	str	r0, [sp, #24]
 800426a:	f7ff fec3 	bl	8003ff4 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 800426e:	4979      	ldr	r1, [pc, #484]	; (8004454 <_ZN19ScreenGraphViewBaseC1Ev+0x3e0>)
 8004270:	f8c9 10dc 	str.w	r1, [r9, #220]	; 0xdc
 8004274:	f504 5189 	add.w	r1, r4, #4384	; 0x1120
 8004278:	3108      	adds	r1, #8
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 800427a:	4608      	mov	r0, r1
 800427c:	ee09 1a10 	vmov	s18, r1
 8004280:	f7ff fed6 	bl	8004030 <_ZN8touchgfx14AbstractButtonC1Ev>
 * A ToggleButton is a Button specialization that swaps the two bitmaps when clicked, such that
 * the previous "pressed" bitmap, now becomes the one displayed when button is not
 * pressed. This can by used to give the effect of a button that can be pressed in and
 * when it is subsequently pressed, it will pop back out.
 */
class ToggleButton : public Button
 8004284:	4b75      	ldr	r3, [pc, #468]	; (800445c <_ZN19ScreenGraphViewBaseC1Ev+0x3e8>)
 8004286:	f8c9 3128 	str.w	r3, [r9, #296]	; 0x128
 800428a:	f504 518b 	add.w	r1, r4, #4448	; 0x1160
 800428e:	f8a9 6156 	strh.w	r6, [r9, #342]	; 0x156
 8004292:	f8a9 6158 	strh.w	r6, [r9, #344]	; 0x158
 8004296:	f889 615a 	strb.w	r6, [r9, #346]	; 0x15a
 800429a:	f8a9 615c 	strh.w	r6, [r9, #348]	; 0x15c
 800429e:	4608      	mov	r0, r1
 80042a0:	ee09 1a90 	vmov	s19, r1
 80042a4:	f7fe fd4c 	bl	8002d40 <_ZN8touchgfx8TextAreaC1Ev>
 80042a8:	f504 518d 	add.w	r1, r4, #4512	; 0x11a0
 80042ac:	3108      	adds	r1, #8
 80042ae:	4608      	mov	r0, r1
 80042b0:	ee08 1a10 	vmov	s16, r1
 80042b4:	f7ff fed2 	bl	800405c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80042b8:	f504 518f 	add.w	r1, r4, #4576	; 0x11e0
 80042bc:	3114      	adds	r1, #20
 80042be:	4608      	mov	r0, r1
 80042c0:	ee0a 1a10 	vmov	s20, r1
 80042c4:	f7ff feca 	bl	800405c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80042c8:	f504 5192 	add.w	r1, r4, #4672	; 0x1240
 80042cc:	4608      	mov	r0, r1
 80042ce:	ee0c 1a90 	vmov	s25, r1
 80042d2:	f7ff fec3 	bl	800405c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80042d6:	f504 5194 	add.w	r1, r4, #4736	; 0x1280
 80042da:	310c      	adds	r1, #12
 80042dc:	f504 5a96 	add.w	sl, r4, #4800	; 0x12c0
 80042e0:	4608      	mov	r0, r1
 80042e2:	f10a 0a18 	add.w	sl, sl, #24
 80042e6:	ee0a 1a90 	vmov	s21, r1
 80042ea:	f7ff feb7 	bl	800405c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80042ee:	4650      	mov	r0, sl
 80042f0:	f006 fb02 	bl	800a8f8 <_ZN8touchgfx11ModalWindowC1Ev>
 80042f4:	f504 519c 	add.w	r1, r4, #4992	; 0x1380
 80042f8:	3108      	adds	r1, #8
 80042fa:	4608      	mov	r0, r1
 80042fc:	ee0d 1a10 	vmov	s26, r1
 8004300:	f7ff fe96 	bl	8004030 <_ZN8touchgfx14AbstractButtonC1Ev>
 8004304:	f504 519d 	add.w	r1, r4, #5024	; 0x13a0
 8004308:	311c      	adds	r1, #28
 800430a:	4b55      	ldr	r3, [pc, #340]	; (8004460 <_ZN19ScreenGraphViewBaseC1Ev+0x3ec>)
 800430c:	f8c9 3388 	str.w	r3, [r9, #904]	; 0x388
 8004310:	460b      	mov	r3, r1
 8004312:	4618      	mov	r0, r3
 8004314:	f8a9 63b6 	strh.w	r6, [r9, #950]	; 0x3b6
 8004318:	f8a9 63b8 	strh.w	r6, [r9, #952]	; 0x3b8
 800431c:	f889 63ba 	strb.w	r6, [r9, #954]	; 0x3ba
 8004320:	ee0b 1a10 	vmov	s22, r1
 8004324:	a914      	add	r1, sp, #80	; 0x50
 8004326:	f8ad 6050 	strh.w	r6, [sp, #80]	; 0x50
 800432a:	f7fe fcef 	bl	8002d0c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800432e:	f504 519f 	add.w	r1, r4, #5088	; 0x13e0
 8004332:	3108      	adds	r1, #8
 8004334:	4608      	mov	r0, r1
 8004336:	ee08 1a90 	vmov	s17, r1
 800433a:	f7fe fd01 	bl	8002d40 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800433e:	4b49      	ldr	r3, [pc, #292]	; (8004464 <_ZN19ScreenGraphViewBaseC1Ev+0x3f0>)
 8004340:	f8c9 346c 	str.w	r3, [r9, #1132]	; 0x46c
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8004344:	f504 50a3 	add.w	r0, r4, #5216	; 0x1460
 8004348:	4b47      	ldr	r3, [pc, #284]	; (8004468 <_ZN19ScreenGraphViewBaseC1Ev+0x3f4>)
 800434a:	f8c9 3474 	str.w	r3, [r9, #1140]	; 0x474
 800434e:	f44f 5196 	mov.w	r1, #4800	; 0x12c0
 8004352:	301c      	adds	r0, #28
 8004354:	f8c9 4470 	str.w	r4, [r9, #1136]	; 0x470
 8004358:	f8c9 5478 	str.w	r5, [r9, #1144]	; 0x478
 800435c:	f00b f9b8 	bl	800f6d0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 8004360:	23f0      	movs	r3, #240	; 0xf0
 8004362:	ee1b 0a90 	vmov	r0, s23
 8004366:	9300      	str	r3, [sp, #0]
 8004368:	462a      	mov	r2, r5
 800436a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800436e:	4629      	mov	r1, r5
 8004370:	f7fe fc93 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 8004374:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
    Background.setXY(-109, -23);
 8004378:	f06f 0216 	mvn.w	r2, #22
 800437c:	ee1c 0a10 	vmov	r0, s24
 8004380:	66a1      	str	r1, [r4, #104]	; 0x68
 8004382:	f06f 016c 	mvn.w	r1, #108	; 0x6c
 8004386:	f7fe fc49 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
 800438a:	f04f 0104 	mov.w	r1, #4
    Background.setBitmap(touchgfx::Bitmap(BITMAP_DARK_BACKGROUNDS_MAIN_BG_TEXTURE_480X272PX_ID));
 800438e:	ee1c 0a10 	vmov	r0, s24
 8004392:	f8ad 1050 	strh.w	r1, [sp, #80]	; 0x50
 8004396:	a914      	add	r1, sp, #80	; 0x50
 8004398:	f00a f9ac 	bl	800e6f4 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    boxWithBorder1.setPosition(0, 0, 320, 166);
 800439c:	21a6      	movs	r1, #166	; 0xa6
 800439e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80043a2:	ee1d 0a90 	vmov	r0, s27
 80043a6:	9100      	str	r1, [sp, #0]
 80043a8:	462a      	mov	r2, r5
 80043aa:	4629      	mov	r1, r5
 80043ac:	f7fe fc75 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 80043b0:	f04f 31ff 	mov.w	r1, #4294967295
 80043b4:	f8c4 10c0 	str.w	r1, [r4, #192]	; 0xc0
        borderColor = colorBorder;
 80043b8:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 80043bc:	f8c4 10c4 	str.w	r1, [r4, #196]	; 0xc4
        borderSize = size;
 80043c0:	f04f 0101 	mov.w	r1, #1
 80043c4:	f8a4 10c8 	strh.w	r1, [r4, #200]	; 0xc8
    dynamicGraph2.setScale(1000);
 80043c8:	462a      	mov	r2, r5
 80043ca:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 80043ce:	4658      	mov	r0, fp
 80043d0:	f7ff fa82 	bl	80038d8 <_ZN8touchgfx16DynamicDataGraph8setScaleEib>
    dynamicGraph2.setGraphRangeX(0, 10);
 80043d4:	220a      	movs	r2, #10
 80043d6:	4629      	mov	r1, r5
 80043d8:	4658      	mov	r0, fp
 80043da:	f7ff f8c9 	bl	8003570 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
    dynamicGraph2.setPosition(0, 0, 320, 166);
 80043de:	21a6      	movs	r1, #166	; 0xa6
 80043e0:	9100      	str	r1, [sp, #0]
 80043e2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80043e6:	462a      	mov	r2, r5
 80043e8:	4629      	mov	r1, r5
 80043ea:	4658      	mov	r0, fp
 80043ec:	f7fe fc55 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
    dynamicGraph2.setGraphAreaMargin(6, 20, 5, 15);
 80043f0:	210f      	movs	r1, #15
 80043f2:	9100      	str	r1, [sp, #0]
 80043f4:	2305      	movs	r3, #5
 80043f6:	2214      	movs	r2, #20
 80043f8:	2106      	movs	r1, #6
 80043fa:	4658      	mov	r0, fp
 80043fc:	f008 f8d6 	bl	800c5ac <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    dynamicGraph2.setGraphAreaPadding(0, 0, 0, 0);
 8004400:	462b      	mov	r3, r5
 8004402:	462a      	mov	r2, r5
 8004404:	4629      	mov	r1, r5
 8004406:	4658      	mov	r0, fp
 8004408:	9500      	str	r5, [sp, #0]
 800440a:	f007 ffd2 	bl	800c3b2 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
    dynamicGraph2.setGraphRangeY(1.0f, 1.5f);
 800440e:	eef7 0a08 	vmov.f32	s1, #120	; 0x3fc00000  1.5
 8004412:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8004416:	4658      	mov	r0, fp
 8004418:	f7ff f940 	bl	800369c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 800441c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8004420:	f8d4 1bf0 	ldr.w	r1, [r4, #3056]	; 0xbf0
 8004424:	f8d4 0bf4 	ldr.w	r0, [r4, #3060]	; 0xbf4
        visible = vis;
 8004428:	f884 50f1 	strb.w	r5, [r4, #241]	; 0xf1
 800442c:	f008 f970 	bl	800c710 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        majorGrid = &major;
 8004430:	ee1e 3a10 	vmov	r3, s28
 8004434:	e01e      	b.n	8004474 <_ZN19ScreenGraphViewBaseC1Ev+0x400>
 8004436:	bf00      	nop
 8004438:	0802325c 	.word	0x0802325c
 800443c:	080240e8 	.word	0x080240e8
 8004440:	080238ac 	.word	0x080238ac
 8004444:	08022f0c 	.word	0x08022f0c
 8004448:	08023b84 	.word	0x08023b84
 800444c:	08022e34 	.word	0x08022e34
 8004450:	08023cb8 	.word	0x08023cb8
 8004454:	08023d58 	.word	0x08023d58
 8004458:	080230a8 	.word	0x080230a8
 800445c:	08023f08 	.word	0x08023f08
 8004460:	08024074 	.word	0x08024074
 8004464:	08023244 	.word	0x08023244
 8004468:	08003e85 	.word	0x08003e85
 800446c:	080237fc 	.word	0x080237fc
 8004470:	08022d7c 	.word	0x08022d7c
        dataScale = scale;
 8004474:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
        color = newColor;
 8004478:	4fd3      	ldr	r7, [pc, #844]	; (80047c8 <_ZN19ScreenGraphViewBaseC1Ev+0x754>)
        majorGrid = &major;
 800447a:	f8c4 3bfc 	str.w	r3, [r4, #3068]	; 0xbfc
        lineWidth = width;
 800447e:	f04f 0101 	mov.w	r1, #1
        dataScale = scale;
 8004482:	f8c4 6bf0 	str.w	r6, [r4, #3056]	; 0xbf0
        color = newColor;
 8004486:	f8c4 7bec 	str.w	r7, [r4, #3052]	; 0xbec
        gridInterval = abs(interval);
 800448a:	f8c4 6bf4 	str.w	r6, [r4, #3060]	; 0xbf4
        lineWidth = width;
 800448e:	f884 1bf8 	strb.w	r1, [r4, #3064]	; 0xbf8
    dynamicGraph2.addGraphElement(dynamicGraph2MinorXAxisGrid);
 8004492:	4658      	mov	r0, fp
 8004494:	ee1f 1a90 	vmov	r1, s31
 8004498:	f007 ff96 	bl	800c3c8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 800449c:	4632      	mov	r2, r6
 800449e:	f8d4 1c30 	ldr.w	r1, [r4, #3120]	; 0xc30
 80044a2:	f8d4 0c34 	ldr.w	r0, [r4, #3124]	; 0xc34
 80044a6:	f008 f933 	bl	800c710 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        majorGrid = &major;
 80044aa:	ee1e 3a90 	vmov	r3, s29
        gridInterval = abs(interval);
 80044ae:	204b      	movs	r0, #75	; 0x4b
        lineWidth = width;
 80044b0:	f04f 0101 	mov.w	r1, #1
        majorGrid = &major;
 80044b4:	f8c4 3c3c 	str.w	r3, [r4, #3132]	; 0xc3c
        dataScale = scale;
 80044b8:	f8c4 6c30 	str.w	r6, [r4, #3120]	; 0xc30
        color = newColor;
 80044bc:	f8c4 7c2c 	str.w	r7, [r4, #3116]	; 0xc2c
        gridInterval = abs(interval);
 80044c0:	f8c4 0c34 	str.w	r0, [r4, #3124]	; 0xc34
        lineWidth = width;
 80044c4:	f884 1c38 	strb.w	r1, [r4, #3128]	; 0xc38
    dynamicGraph2.addGraphElement(dynamicGraph2MinorYAxisGrid);
 80044c8:	4658      	mov	r0, fp
 80044ca:	9908      	ldr	r1, [sp, #32]
 80044cc:	f007 ff7c 	bl	800c3c8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 80044d0:	4632      	mov	r2, r6
 80044d2:	f8d4 1c70 	ldr.w	r1, [r4, #3184]	; 0xc70
 80044d6:	f8d4 0c74 	ldr.w	r0, [r4, #3188]	; 0xc74
 80044da:	f008 f919 	bl	800c710 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        lineWidth = width;
 80044de:	f04f 0302 	mov.w	r3, #2
 80044e2:	f884 3c78 	strb.w	r3, [r4, #3192]	; 0xc78
    dynamicGraph2.addGraphElement(dynamicGraph2MajorXAxisGrid);
 80044e6:	ee1e 1a10 	vmov	r1, s28
        dataScale = scale;
 80044ea:	f8c4 6c70 	str.w	r6, [r4, #3184]	; 0xc70
        color = newColor;
 80044ee:	f8c4 7c6c 	str.w	r7, [r4, #3180]	; 0xc6c
        gridInterval = abs(interval);
 80044f2:	f8c4 6c74 	str.w	r6, [r4, #3188]	; 0xc74
 80044f6:	4658      	mov	r0, fp
 80044f8:	f007 ff66 	bl	800c3c8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 80044fc:	4632      	mov	r2, r6
 80044fe:	f8d4 1cb0 	ldr.w	r1, [r4, #3248]	; 0xcb0
 8004502:	f8d4 0cb4 	ldr.w	r0, [r4, #3252]	; 0xcb4
 8004506:	f008 f903 	bl	800c710 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        lineWidth = width;
 800450a:	f04f 0302 	mov.w	r3, #2
        gridInterval = abs(interval);
 800450e:	2196      	movs	r1, #150	; 0x96
        lineWidth = width;
 8004510:	f884 3cb8 	strb.w	r3, [r4, #3256]	; 0xcb8
        dataScale = scale;
 8004514:	f8c4 6cb0 	str.w	r6, [r4, #3248]	; 0xcb0
        color = newColor;
 8004518:	f8c4 7cac 	str.w	r7, [r4, #3244]	; 0xcac
        gridInterval = abs(interval);
 800451c:	f8c4 1cb4 	str.w	r1, [r4, #3252]	; 0xcb4
    dynamicGraph2.addGraphElement(dynamicGraph2MajorYAxisGrid);
 8004520:	4658      	mov	r0, fp
 8004522:	ee1e 1a90 	vmov	r1, s29
 8004526:	f007 ff4f 	bl	800c3c8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 800452a:	4632      	mov	r2, r6
 800452c:	f8d4 1cf0 	ldr.w	r1, [r4, #3312]	; 0xcf0
 8004530:	f8d4 0cf4 	ldr.w	r0, [r4, #3316]	; 0xcf4
 8004534:	f008 f8ec 	bl	800c710 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
class TypedText
 8004538:	f04f 0207 	mov.w	r2, #7
    dynamicGraph2.addBottomElement(dynamicGraph2MajorXAxisLabel);
 800453c:	9909      	ldr	r1, [sp, #36]	; 0x24
        dataScale = scale;
 800453e:	f8c4 6cf0 	str.w	r6, [r4, #3312]	; 0xcf0
        labelInterval = abs(interval);
 8004542:	f8c4 6cf4 	str.w	r6, [r4, #3316]	; 0xcf4
 8004546:	f8a4 2cfc 	strh.w	r2, [r4, #3324]	; 0xcfc
        color = newColor;
 800454a:	f8c4 7cec 	str.w	r7, [r4, #3308]	; 0xcec
 800454e:	4658      	mov	r0, fp
 8004550:	f007 ff5e 	bl	800c410 <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 8004554:	4632      	mov	r2, r6
 8004556:	f8d4 1d3c 	ldr.w	r1, [r4, #3388]	; 0xd3c
 800455a:	f8d4 0d40 	ldr.w	r0, [r4, #3392]	; 0xd40
 800455e:	f008 f8d7 	bl	800c710 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        labelInterval = abs(interval);
 8004562:	2296      	movs	r2, #150	; 0x96
 8004564:	f8c4 2d40 	str.w	r2, [r4, #3392]	; 0xd40
 8004568:	f04f 0206 	mov.w	r2, #6
 800456c:	f8a4 2d48 	strh.w	r2, [r4, #3400]	; 0xd48
        labelDecimals = decimals;
 8004570:	f04f 0201 	mov.w	r2, #1
    dynamicGraph2.addLeftElement(dynamicGraph2MajorYAxisLabel);
 8004574:	990a      	ldr	r1, [sp, #40]	; 0x28
        dataScale = scale;
 8004576:	f8c4 6d3c 	str.w	r6, [r4, #3388]	; 0xd3c
        labelDecimals = decimals;
 800457a:	f8a4 2d4e 	strh.w	r2, [r4, #3406]	; 0xd4e
 800457e:	f8c4 7d38 	str.w	r7, [r4, #3384]	; 0xd38
 8004582:	4658      	mov	r0, fp
 8004584:	f007 ff32 	bl	800c3ec <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
        canvasPainter = &painter;
 8004588:	9b07      	ldr	r3, [sp, #28]
 800458a:	f8c4 3ba4 	str.w	r3, [r4, #2980]	; 0xba4
 800458e:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
     *
     * @see getLineWidth
     */
    FORCE_INLINE_FUNCTION void setLineWidth(uint8_t width)
    {
        lineWidth = width;
 8004592:	f04f 0302 	mov.w	r3, #2
 8004596:	f884 3ba8 	strb.w	r3, [r4, #2984]	; 0xba8
    dynamicGraph2.addGraphElement(dynamicGraph2Line1);
 800459a:	ee1f 1a10 	vmov	r1, s30
 800459e:	f8c4 2bb8 	str.w	r2, [r4, #3000]	; 0xbb8
 80045a2:	4658      	mov	r0, fp
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 80045a4:	f8a4 5bbc 	strh.w	r5, [r4, #3004]	; 0xbbc
 80045a8:	f007 ff0e 	bl	800c3c8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
    dynamicGraph1.setScale(1000);
 80045ac:	4631      	mov	r1, r6
 80045ae:	462a      	mov	r2, r5
 80045b0:	4640      	mov	r0, r8
 80045b2:	f7ff f991 	bl	80038d8 <_ZN8touchgfx16DynamicDataGraph8setScaleEib>
    dynamicGraph1.setPosition(0, 0, 320, 166);
 80045b6:	22a6      	movs	r2, #166	; 0xa6
 80045b8:	9200      	str	r2, [sp, #0]
 80045ba:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80045be:	462a      	mov	r2, r5
 80045c0:	4629      	mov	r1, r5
 80045c2:	4640      	mov	r0, r8
 80045c4:	f7fe fb69 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
    dynamicGraph1.setGraphAreaMargin(6, 24, 0, 15);
 80045c8:	220f      	movs	r2, #15
 80045ca:	9200      	str	r2, [sp, #0]
 80045cc:	462b      	mov	r3, r5
 80045ce:	2218      	movs	r2, #24
 80045d0:	2106      	movs	r1, #6
 80045d2:	4640      	mov	r0, r8
 80045d4:	f007 ffea 	bl	800c5ac <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    dynamicGraph1.setGraphAreaPadding(0, 0, 0, 0);
 80045d8:	462b      	mov	r3, r5
 80045da:	462a      	mov	r2, r5
 80045dc:	4629      	mov	r1, r5
 80045de:	4640      	mov	r0, r8
 80045e0:	9500      	str	r5, [sp, #0]
 80045e2:	f007 fee6 	bl	800c3b2 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
    dynamicGraph1.setGraphRangeY(1.0f, 1.5f);
 80045e6:	eef7 0a08 	vmov.f32	s1, #120	; 0x3fc00000  1.5
 80045ea:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 80045ee:	4640      	mov	r0, r8
 80045f0:	f7ff f854 	bl	800369c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 80045f4:	4632      	mov	r2, r6
 80045f6:	e9d9 1003 	ldrd	r1, r0, [r9, #12]
 80045fa:	f008 f889 	bl	800c710 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 80045fe:	f241 3288 	movw	r2, #5000	; 0x1388
        majorGrid = &major;
 8004602:	9b03      	ldr	r3, [sp, #12]
        gridInterval = abs(interval);
 8004604:	f8c9 2010 	str.w	r2, [r9, #16]
        lineWidth = width;
 8004608:	f04f 0201 	mov.w	r2, #1
        color = newColor;
 800460c:	e9c9 7602 	strd	r7, r6, [r9, #8]
        majorGrid = &major;
 8004610:	f8c9 3018 	str.w	r3, [r9, #24]
    dynamicGraph1.addGraphElement(dynamicGraph1MinorXAxisGrid);
 8004614:	990d      	ldr	r1, [sp, #52]	; 0x34
        lineWidth = width;
 8004616:	f889 2014 	strb.w	r2, [r9, #20]
 800461a:	4640      	mov	r0, r8
 800461c:	f007 fed4 	bl	800c3c8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004620:	4632      	mov	r2, r6
 8004622:	e9d9 1013 	ldrd	r1, r0, [r9, #76]	; 0x4c
 8004626:	f008 f873 	bl	800c710 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 800462a:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
        lineWidth = width;
 800462e:	f04f 0201 	mov.w	r2, #1
        gridInterval = abs(interval);
 8004632:	f8c9 3050 	str.w	r3, [r9, #80]	; 0x50
        majorGrid = &major;
 8004636:	9b04      	ldr	r3, [sp, #16]
 8004638:	f8c9 3058 	str.w	r3, [r9, #88]	; 0x58
        color = newColor;
 800463c:	e9c9 7612 	strd	r7, r6, [r9, #72]	; 0x48
    dynamicGraph1.addGraphElement(dynamicGraph1MinorYAxisGrid);
 8004640:	9905      	ldr	r1, [sp, #20]
        lineWidth = width;
 8004642:	f889 2054 	strb.w	r2, [r9, #84]	; 0x54
 8004646:	4640      	mov	r0, r8
 8004648:	f007 febe 	bl	800c3c8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 800464c:	4632      	mov	r2, r6
 800464e:	e9d9 1023 	ldrd	r1, r0, [r9, #140]	; 0x8c
 8004652:	f008 f85d 	bl	800c710 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 8004656:	f242 7310 	movw	r3, #10000	; 0x2710
 800465a:	f8c9 3090 	str.w	r3, [r9, #144]	; 0x90
        lineWidth = width;
 800465e:	f04f 0302 	mov.w	r3, #2
        color = newColor;
 8004662:	e9c9 7622 	strd	r7, r6, [r9, #136]	; 0x88
        lineWidth = width;
 8004666:	f889 3094 	strb.w	r3, [r9, #148]	; 0x94
    dynamicGraph1.addGraphElement(dynamicGraph1MajorXAxisGrid);
 800466a:	9903      	ldr	r1, [sp, #12]
 800466c:	4640      	mov	r0, r8
 800466e:	f007 feab 	bl	800c3c8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004672:	4632      	mov	r2, r6
 8004674:	e9d9 1033 	ldrd	r1, r0, [r9, #204]	; 0xcc
 8004678:	f008 f84a 	bl	800c710 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        lineWidth = width;
 800467c:	f04f 0302 	mov.w	r3, #2
        color = newColor;
 8004680:	e9c9 7632 	strd	r7, r6, [r9, #200]	; 0xc8
        lineWidth = width;
 8004684:	f889 30d4 	strb.w	r3, [r9, #212]	; 0xd4
    dynamicGraph1.addGraphElement(dynamicGraph1MajorYAxisGrid);
 8004688:	9904      	ldr	r1, [sp, #16]
        gridInterval = abs(interval);
 800468a:	f8c9 60d0 	str.w	r6, [r9, #208]	; 0xd0
 800468e:	4640      	mov	r0, r8
 8004690:	f007 fe9a 	bl	800c3c8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 8004694:	4632      	mov	r2, r6
 8004696:	e9d9 1043 	ldrd	r1, r0, [r9, #268]	; 0x10c
 800469a:	f008 f839 	bl	800c710 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        labelInterval = abs(interval);
 800469e:	2396      	movs	r3, #150	; 0x96
 80046a0:	f8c9 3110 	str.w	r3, [r9, #272]	; 0x110
 80046a4:	f04f 030f 	mov.w	r3, #15
 80046a8:	f8a9 3118 	strh.w	r3, [r9, #280]	; 0x118
        labelDecimals = decimals;
 80046ac:	f04f 0302 	mov.w	r3, #2
    dynamicGraph1.addLeftElement(dynamicGraph1MajorYAxisLabel);
 80046b0:	9906      	ldr	r1, [sp, #24]
        dataScale = scale;
 80046b2:	f8c9 610c 	str.w	r6, [r9, #268]	; 0x10c
        labelDecimals = decimals;
 80046b6:	f8a9 311e 	strh.w	r3, [r9, #286]	; 0x11e
        color = newColor;
 80046ba:	f8c9 7108 	str.w	r7, [r9, #264]	; 0x108
 80046be:	4640      	mov	r0, r8
 80046c0:	f007 fe94 	bl	800c3ec <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
 80046c4:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80046c8:	f8c4 3fd4 	str.w	r3, [r4, #4052]	; 0xfd4
 80046cc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80046ce:	f8c4 3fc0 	str.w	r3, [r4, #4032]	; 0xfc0
        lineWidth = width;
 80046d2:	f04f 0302 	mov.w	r3, #2
 80046d6:	f884 3fc4 	strb.w	r3, [r4, #4036]	; 0xfc4
    dynamicGraph1.addGraphElement(dynamicGraph1Line1);
 80046da:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80046dc:	f8a4 5fd8 	strh.w	r5, [r4, #4056]	; 0xfd8
 80046e0:	4640      	mov	r0, r8
 80046e2:	f007 fe71 	bl	800c3c8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
    toggleButton1.setXY(65, 211);
 80046e6:	ee19 0a10 	vmov	r0, s18
 80046ea:	22d3      	movs	r2, #211	; 0xd3
 80046ec:	2141      	movs	r1, #65	; 0x41
 80046ee:	f7fe fa95 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
 80046f2:	f04f 030b 	mov.w	r3, #11
 80046f6:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
 80046fa:	f04f 030c 	mov.w	r3, #12
{
public:
    virtual void setBitmaps(const Bitmap& bitmapReleased, const Bitmap& bitmapPressed)
    {
        originalPressed = bitmapPressed;
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 80046fe:	ee19 0a10 	vmov	r0, s18
        originalPressed = bitmapPressed;
 8004702:	f8a9 315c 	strh.w	r3, [r9, #348]	; 0x15c
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 8004706:	aa14      	add	r2, sp, #80	; 0x50
 8004708:	a913      	add	r1, sp, #76	; 0x4c
 800470a:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
 800470e:	f009 fdce 	bl	800e2ae <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    toggleButton1.setAction(buttonCallback);
 8004712:	f504 53a3 	add.w	r3, r4, #5216	; 0x1460
 8004716:	330c      	adds	r3, #12
    txtShowWholeGraph.setXY(1, 219);
 8004718:	22db      	movs	r2, #219	; 0xdb
 800471a:	ee19 0a90 	vmov	r0, s19
        action = &callback;
 800471e:	f8c9 3150 	str.w	r3, [r9, #336]	; 0x150
 8004722:	2101      	movs	r1, #1
 8004724:	ae0e      	add	r6, sp, #56	; 0x38
    toggleButton1.setAction(buttonCallback);
 8004726:	9303      	str	r3, [sp, #12]
    txtShowWholeGraph.setXY(1, 219);
 8004728:	f7fe fa78 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800472c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 8004730:	ee19 1a90 	vmov	r1, s19
        color = newColor;
 8004734:	f8c9 3190 	str.w	r3, [r9, #400]	; 0x190
        boundingArea = calculateBoundingArea();
 8004738:	4630      	mov	r0, r6
        linespace = space;
 800473a:	f8a9 5194 	strh.w	r5, [r9, #404]	; 0x194
        boundingArea = calculateBoundingArea();
 800473e:	f009 fad9 	bl	800dcf4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004742:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8004746:	ee19 3a90 	vmov	r3, s19
 800474a:	333c      	adds	r3, #60	; 0x3c
 800474c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8004750:	4b1e      	ldr	r3, [pc, #120]	; (80047cc <_ZN19ScreenGraphViewBaseC1Ev+0x758>)
 8004752:	9314      	str	r3, [sp, #80]	; 0x50
    txtShowWholeGraph.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DO01));
 8004754:	ee19 0a90 	vmov	r0, s19
 8004758:	230e      	movs	r3, #14
 800475a:	a914      	add	r1, sp, #80	; 0x50
 800475c:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 8004760:	f009 fd4a 	bl	800e1f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtLastValue.setPosition(2, 168, 132, 15);
 8004764:	230f      	movs	r3, #15
 8004766:	22a8      	movs	r2, #168	; 0xa8
 8004768:	ee18 0a10 	vmov	r0, s16
 800476c:	9300      	str	r3, [sp, #0]
 800476e:	2102      	movs	r1, #2
 8004770:	2384      	movs	r3, #132	; 0x84
 8004772:	f7fe fa92 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8004776:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800477a:	f8c9 31d8 	str.w	r3, [r9, #472]	; 0x1d8
        boundingArea = calculateBoundingArea();
 800477e:	f8d9 31a8 	ldr.w	r3, [r9, #424]	; 0x1a8
        linespace = space;
 8004782:	f8a9 51dc 	strh.w	r5, [r9, #476]	; 0x1dc
        boundingArea = calculateBoundingArea();
 8004786:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800478a:	ee18 1a10 	vmov	r1, s16
 800478e:	4630      	mov	r0, r6
 8004790:	4798      	blx	r3
 8004792:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8004796:	ee18 3a10 	vmov	r3, s16
 800479a:	333c      	adds	r3, #60	; 0x3c
 800479c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80047a0:	4b0b      	ldr	r3, [pc, #44]	; (80047d0 <_ZN19ScreenGraphViewBaseC1Ev+0x75c>)
 80047a2:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(txtLastValueBuffer, TXTLASTVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_SQ4H).getText());
 80047a4:	f504 57a1 	add.w	r7, r4, #5152	; 0x1420
 80047a8:	3710      	adds	r7, #16
 80047aa:	b92b      	cbnz	r3, 80047b8 <_ZN19ScreenGraphViewBaseC1Ev+0x744>
 80047ac:	4b09      	ldr	r3, [pc, #36]	; (80047d4 <_ZN19ScreenGraphViewBaseC1Ev+0x760>)
 80047ae:	4a0a      	ldr	r2, [pc, #40]	; (80047d8 <_ZN19ScreenGraphViewBaseC1Ev+0x764>)
 80047b0:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80047b2:	480a      	ldr	r0, [pc, #40]	; (80047dc <_ZN19ScreenGraphViewBaseC1Ev+0x768>)
 80047b4:	f01c f81c 	bl	80207f0 <__assert_func>
 80047b8:	4b09      	ldr	r3, [pc, #36]	; (80047e0 <_ZN19ScreenGraphViewBaseC1Ev+0x76c>)
 80047ba:	881b      	ldrh	r3, [r3, #0]
 80047bc:	2b0b      	cmp	r3, #11
 80047be:	d813      	bhi.n	80047e8 <_ZN19ScreenGraphViewBaseC1Ev+0x774>
 80047c0:	4b08      	ldr	r3, [pc, #32]	; (80047e4 <_ZN19ScreenGraphViewBaseC1Ev+0x770>)
 80047c2:	4a05      	ldr	r2, [pc, #20]	; (80047d8 <_ZN19ScreenGraphViewBaseC1Ev+0x764>)
 80047c4:	2161      	movs	r1, #97	; 0x61
 80047c6:	e7f4      	b.n	80047b2 <_ZN19ScreenGraphViewBaseC1Ev+0x73e>
 80047c8:	ff1497c5 	.word	0xff1497c5
 80047cc:	080221bc 	.word	0x080221bc
 80047d0:	20015604 	.word	0x20015604
 80047d4:	08022770 	.word	0x08022770
 80047d8:	08022872 	.word	0x08022872
 80047dc:	080227ed 	.word	0x080227ed
 80047e0:	20015608 	.word	0x20015608
 80047e4:	08022834 	.word	0x08022834
        return texts->getText(typedTextId);
 80047e8:	4bb8      	ldr	r3, [pc, #736]	; (8004acc <_ZN19ScreenGraphViewBaseC1Ev+0xa58>)
 80047ea:	210b      	movs	r1, #11
 80047ec:	6818      	ldr	r0, [r3, #0]
 80047ee:	f000 fadb 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 80047f2:	4ab7      	ldr	r2, [pc, #732]	; (8004ad0 <_ZN19ScreenGraphViewBaseC1Ev+0xa5c>)
 80047f4:	4603      	mov	r3, r0
 80047f6:	2108      	movs	r1, #8
 80047f8:	4638      	mov	r0, r7
 80047fa:	f00f fbe7 	bl	8013fcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80047fe:	4bb5      	ldr	r3, [pc, #724]	; (8004ad4 <_ZN19ScreenGraphViewBaseC1Ev+0xa60>)
        wc1 = value;
 8004800:	f8c9 71f0 	str.w	r7, [r9, #496]	; 0x1f0
    txtLastValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_POMN));
 8004804:	ee18 0a10 	vmov	r0, s16
 8004808:	9314      	str	r3, [sp, #80]	; 0x50
 800480a:	a914      	add	r1, sp, #80	; 0x50
 800480c:	230d      	movs	r3, #13
 800480e:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 8004812:	f009 fcf1 	bl	800e1f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtMaxValue.setPosition(2, 183, 132, 15);
 8004816:	210f      	movs	r1, #15
 8004818:	9100      	str	r1, [sp, #0]
 800481a:	2384      	movs	r3, #132	; 0x84
 800481c:	2102      	movs	r1, #2
 800481e:	ee1a 0a10 	vmov	r0, s20
 8004822:	22b7      	movs	r2, #183	; 0xb7
 8004824:	f7fe fa39 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8004828:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 800482c:	f8c9 1224 	str.w	r1, [r9, #548]	; 0x224
        boundingArea = calculateBoundingArea();
 8004830:	f04f 31ff 	mov.w	r1, #4294967295
 8004834:	e9c9 158d 	strd	r1, r5, [r9, #564]	; 0x234
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004838:	49a7      	ldr	r1, [pc, #668]	; (8004ad8 <_ZN19ScreenGraphViewBaseC1Ev+0xa64>)
        linespace = space;
 800483a:	f8a9 5228 	strh.w	r5, [r9, #552]	; 0x228
 800483e:	680b      	ldr	r3, [r1, #0]
        boundingArea = calculateBoundingArea();
 8004840:	f8c9 5230 	str.w	r5, [r9, #560]	; 0x230
    Unicode::snprintf(txtMaxValueBuffer, TXTMAXVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_JAK9).getText());
 8004844:	f504 57a2 	add.w	r7, r4, #5184	; 0x1440
 8004848:	2b00      	cmp	r3, #0
 800484a:	d0af      	beq.n	80047ac <_ZN19ScreenGraphViewBaseC1Ev+0x738>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800484c:	48a3      	ldr	r0, [pc, #652]	; (8004adc <_ZN19ScreenGraphViewBaseC1Ev+0xa68>)
 800484e:	8803      	ldrh	r3, [r0, #0]
 8004850:	2b0a      	cmp	r3, #10
 8004852:	d9b5      	bls.n	80047c0 <_ZN19ScreenGraphViewBaseC1Ev+0x74c>
        return texts->getText(typedTextId);
 8004854:	4a9d      	ldr	r2, [pc, #628]	; (8004acc <_ZN19ScreenGraphViewBaseC1Ev+0xa58>)
 8004856:	210a      	movs	r1, #10
 8004858:	6810      	ldr	r0, [r2, #0]
 800485a:	f000 faa5 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800485e:	4a9c      	ldr	r2, [pc, #624]	; (8004ad0 <_ZN19ScreenGraphViewBaseC1Ev+0xa5c>)
 8004860:	4603      	mov	r3, r0
 8004862:	2108      	movs	r1, #8
 8004864:	4638      	mov	r0, r7
 8004866:	f00f fbb1 	bl	8013fcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800486a:	f04f 0c0c 	mov.w	ip, #12
 800486e:	f8ad c054 	strh.w	ip, [sp, #84]	; 0x54
    txtMaxValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5RGF));
 8004872:	f10d 0c50 	add.w	ip, sp, #80	; 0x50
 8004876:	4b97      	ldr	r3, [pc, #604]	; (8004ad4 <_ZN19ScreenGraphViewBaseC1Ev+0xa60>)
 8004878:	f8c9 723c 	str.w	r7, [r9, #572]	; 0x23c
 800487c:	4661      	mov	r1, ip
 800487e:	ee1a 0a10 	vmov	r0, s20
    textChargingTme.setPosition(2, 198, 132, 15);
 8004882:	270f      	movs	r7, #15
 8004884:	9314      	str	r3, [sp, #80]	; 0x50
    txtMaxValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5RGF));
 8004886:	f009 fcb7 	bl	800e1f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textChargingTme.setPosition(2, 198, 132, 15);
 800488a:	9700      	str	r7, [sp, #0]
 800488c:	2384      	movs	r3, #132	; 0x84
 800488e:	2102      	movs	r1, #2
 8004890:	ee1c 0a90 	vmov	r0, s25
 8004894:	22c6      	movs	r2, #198	; 0xc6
 8004896:	f7fe fa00 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800489a:	498f      	ldr	r1, [pc, #572]	; (8004ad8 <_ZN19ScreenGraphViewBaseC1Ev+0xa64>)
        linespace = space;
 800489c:	f8a9 5274 	strh.w	r5, [r9, #628]	; 0x274
        color = newColor;
 80048a0:	f04f 477f 	mov.w	r7, #4278190080	; 0xff000000
 80048a4:	f8c9 7270 	str.w	r7, [r9, #624]	; 0x270
 80048a8:	680b      	ldr	r3, [r1, #0]
        boundingArea = calculateBoundingArea();
 80048aa:	f8c9 527c 	str.w	r5, [r9, #636]	; 0x27c
 80048ae:	f04f 37ff 	mov.w	r7, #4294967295
 80048b2:	e9c9 75a0 	strd	r7, r5, [r9, #640]	; 0x280
    Unicode::snprintf(textChargingTmeBuffer, TEXTCHARGINGTME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_E1C6).getText());
 80048b6:	f504 57a2 	add.w	r7, r4, #5184	; 0x1440
 80048ba:	3710      	adds	r7, #16
 80048bc:	2b00      	cmp	r3, #0
 80048be:	f43f af75 	beq.w	80047ac <_ZN19ScreenGraphViewBaseC1Ev+0x738>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80048c2:	4886      	ldr	r0, [pc, #536]	; (8004adc <_ZN19ScreenGraphViewBaseC1Ev+0xa68>)
 80048c4:	8803      	ldrh	r3, [r0, #0]
 80048c6:	2b08      	cmp	r3, #8
 80048c8:	f67f af7a 	bls.w	80047c0 <_ZN19ScreenGraphViewBaseC1Ev+0x74c>
        return texts->getText(typedTextId);
 80048cc:	4a7f      	ldr	r2, [pc, #508]	; (8004acc <_ZN19ScreenGraphViewBaseC1Ev+0xa58>)
 80048ce:	2108      	movs	r1, #8
 80048d0:	6810      	ldr	r0, [r2, #0]
 80048d2:	f000 fa69 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 80048d6:	4a7e      	ldr	r2, [pc, #504]	; (8004ad0 <_ZN19ScreenGraphViewBaseC1Ev+0xa5c>)
 80048d8:	4603      	mov	r3, r0
 80048da:	210a      	movs	r1, #10
 80048dc:	4638      	mov	r0, r7
 80048de:	f00f fb75 	bl	8013fcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textChargingTme.setTypedText(touchgfx::TypedText(T___SINGLEUSE_U9Q3));
 80048e2:	f10d 0e50 	add.w	lr, sp, #80	; 0x50
        : typedTextId(id)
 80048e6:	4b7b      	ldr	r3, [pc, #492]	; (8004ad4 <_ZN19ScreenGraphViewBaseC1Ev+0xa60>)
 80048e8:	f8c9 7288 	str.w	r7, [r9, #648]	; 0x288
 80048ec:	f04f 0c09 	mov.w	ip, #9
 80048f0:	4671      	mov	r1, lr
 80048f2:	ee1c 0a90 	vmov	r0, s25
 80048f6:	9314      	str	r3, [sp, #80]	; 0x50
 80048f8:	f8ad c054 	strh.w	ip, [sp, #84]	; 0x54
 80048fc:	f009 fc7c 	bl	800e1f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textChargingCurrent.setPosition(160, 168, 153, 15);
 8004900:	f04f 0e0f 	mov.w	lr, #15
 8004904:	f8cd e000 	str.w	lr, [sp]
 8004908:	2399      	movs	r3, #153	; 0x99
 800490a:	21a0      	movs	r1, #160	; 0xa0
 800490c:	ee1a 0a90 	vmov	r0, s21
 8004910:	22a8      	movs	r2, #168	; 0xa8
 8004912:	f7fe f9c2 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004916:	4970      	ldr	r1, [pc, #448]	; (8004ad8 <_ZN19ScreenGraphViewBaseC1Ev+0xa64>)
        linespace = space;
 8004918:	f8a9 52c0 	strh.w	r5, [r9, #704]	; 0x2c0
        color = newColor;
 800491c:	f04f 4e7f 	mov.w	lr, #4278190080	; 0xff000000
 8004920:	680b      	ldr	r3, [r1, #0]
 8004922:	f8c9 e2bc 	str.w	lr, [r9, #700]	; 0x2bc
    Unicode::snprintf(textChargingCurrentBuffer, TEXTCHARGINGCURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_G6V4).getText());
 8004926:	f504 57a3 	add.w	r7, r4, #5216	; 0x1460
        boundingArea = calculateBoundingArea();
 800492a:	f04f 3eff 	mov.w	lr, #4294967295
 800492e:	e9c9 e5b3 	strd	lr, r5, [r9, #716]	; 0x2cc
 8004932:	f8c9 52c8 	str.w	r5, [r9, #712]	; 0x2c8
 8004936:	3704      	adds	r7, #4
 8004938:	2b00      	cmp	r3, #0
 800493a:	f43f af37 	beq.w	80047ac <_ZN19ScreenGraphViewBaseC1Ev+0x738>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800493e:	4867      	ldr	r0, [pc, #412]	; (8004adc <_ZN19ScreenGraphViewBaseC1Ev+0xa68>)
 8004940:	8803      	ldrh	r3, [r0, #0]
 8004942:	2b01      	cmp	r3, #1
 8004944:	f67f af3c 	bls.w	80047c0 <_ZN19ScreenGraphViewBaseC1Ev+0x74c>
        return texts->getText(typedTextId);
 8004948:	4a60      	ldr	r2, [pc, #384]	; (8004acc <_ZN19ScreenGraphViewBaseC1Ev+0xa58>)
 800494a:	2101      	movs	r1, #1
 800494c:	6810      	ldr	r0, [r2, #0]
 800494e:	f000 fa2b 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 8004952:	4a5f      	ldr	r2, [pc, #380]	; (8004ad0 <_ZN19ScreenGraphViewBaseC1Ev+0xa5c>)
 8004954:	4603      	mov	r3, r0
 8004956:	2104      	movs	r1, #4
 8004958:	4638      	mov	r0, r7
 800495a:	f00f fb37 	bl	8013fcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textChargingCurrent.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZLXT));
 800495e:	ee1a 0a90 	vmov	r0, s21
 8004962:	f8c9 72d4 	str.w	r7, [r9, #724]	; 0x2d4
        : typedTextId(id)
 8004966:	f04f 0302 	mov.w	r3, #2
 800496a:	4f5a      	ldr	r7, [pc, #360]	; (8004ad4 <_ZN19ScreenGraphViewBaseC1Ev+0xa60>)
 800496c:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 8004970:	a914      	add	r1, sp, #80	; 0x50
 8004972:	9714      	str	r7, [sp, #80]	; 0x50
 8004974:	f009 fc40 	bl	800e1f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    modalWindow1.setBackground(touchgfx::BitmapId(BITMAP_RSZ_MY_MODAL_BACKGROUND_ID), 75, 60);
 8004978:	230a      	movs	r3, #10
 800497a:	224b      	movs	r2, #75	; 0x4b
 800497c:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
 8004980:	a914      	add	r1, sp, #80	; 0x50
 8004982:	233c      	movs	r3, #60	; 0x3c
 8004984:	4650      	mov	r0, sl
 8004986:	f005 ff69 	bl	800a85c <_ZN8touchgfx11ModalWindow13setBackgroundERKtss>
    modalWindow1.setShadeColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800498a:	4650      	mov	r0, sl
 800498c:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 8004990:	f005 ff38 	bl	800a804 <_ZN8touchgfx11ModalWindow13setShadeColorENS_9colortypeE>
    modalWindow1.setShadeAlpha(150);
 8004994:	2196      	movs	r1, #150	; 0x96
 8004996:	4650      	mov	r0, sl
 8004998:	f005 ff38 	bl	800a80c <_ZN8touchgfx11ModalWindow13setShadeAlphaEh>
    modalWindow1.hide();
 800499c:	4650      	mov	r0, sl
 800499e:	f005 ff24 	bl	800a7ea <_ZN8touchgfx11ModalWindow4hideEv>
    buttonCloseModal.setXY(53, 87);
 80049a2:	ee1d 0a10 	vmov	r0, s26
 80049a6:	2257      	movs	r2, #87	; 0x57
 80049a8:	2135      	movs	r1, #53	; 0x35
 80049aa:	f7fe f937 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
 80049ae:	f04f 0307 	mov.w	r3, #7
    buttonCloseModal.setBitmaps(touchgfx::Bitmap(BITMAP_RSZ_CLOSE_BUTTON_ID), touchgfx::Bitmap(BITMAP_RSZ_CLOSE_BUTTON_PRESSED_ID));
 80049b2:	aa14      	add	r2, sp, #80	; 0x50
 80049b4:	ee1d 0a10 	vmov	r0, s26
 80049b8:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
 80049bc:	a913      	add	r1, sp, #76	; 0x4c
 80049be:	2308      	movs	r3, #8
 80049c0:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
 80049c4:	f009 fc73 	bl	800e2ae <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80049c8:	9b03      	ldr	r3, [sp, #12]
 80049ca:	f8c9 33b0 	str.w	r3, [r9, #944]	; 0x3b0
    modalWindow1.add(buttonCloseModal);
 80049ce:	ee1d 1a10 	vmov	r1, s26
 80049d2:	4650      	mov	r0, sl
 80049d4:	f005 ff13 	bl	800a7fe <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
    image1.setXY(59, 3);
 80049d8:	2203      	movs	r2, #3
 80049da:	ee1b 0a10 	vmov	r0, s22
 80049de:	213b      	movs	r1, #59	; 0x3b
 80049e0:	f7fe f91c 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
 80049e4:	f04f 0c09 	mov.w	ip, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_RSZ_INFO_ICON_ID));
 80049e8:	ee1b 0a10 	vmov	r0, s22
 80049ec:	a914      	add	r1, sp, #80	; 0x50
 80049ee:	f8ad c050 	strh.w	ip, [sp, #80]	; 0x50
 80049f2:	f009 fe7f 	bl	800e6f4 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    modalWindow1.add(image1);
 80049f6:	ee1b 1a10 	vmov	r1, s22
 80049fa:	4650      	mov	r0, sl
 80049fc:	f005 feff 	bl	800a7fe <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
    textChargingCompleted.setXY(7, 60);
 8004a00:	ee18 0a90 	vmov	r0, s17
 8004a04:	223c      	movs	r2, #60	; 0x3c
 8004a06:	2107      	movs	r1, #7
 8004a08:	f7fe f908 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004a0c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 8004a10:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8004a14:	f8c9 3418 	str.w	r3, [r9, #1048]	; 0x418
        linespace = space;
 8004a18:	f8a9 541c 	strh.w	r5, [r9, #1052]	; 0x41c
        boundingArea = calculateBoundingArea();
 8004a1c:	4630      	mov	r0, r6
 8004a1e:	f009 f969 	bl	800dcf4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004a22:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8004a26:	ee18 3a90 	vmov	r3, s17
 8004a2a:	333c      	adds	r3, #60	; 0x3c
 8004a2c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textChargingCompleted.setTypedText(touchgfx::TypedText(T___SINGLEUSE_86E1));
 8004a30:	ee18 0a90 	vmov	r0, s17
 8004a34:	a914      	add	r1, sp, #80	; 0x50
 8004a36:	f8ad 5054 	strh.w	r5, [sp, #84]	; 0x54
 8004a3a:	9714      	str	r7, [sp, #80]	; 0x50
 8004a3c:	1d25      	adds	r5, r4, #4
 8004a3e:	f009 fbdb 	bl	800e1f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    modalWindow1.add(textChargingCompleted);
 8004a42:	ee18 1a90 	vmov	r1, s17
 8004a46:	4650      	mov	r0, sl
 8004a48:	f005 fed9 	bl	800a7fe <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
 8004a4c:	ee1b 1a90 	vmov	r1, s23
 8004a50:	4628      	mov	r0, r5
 8004a52:	f005 ffdb 	bl	800aa0c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004a56:	ee1c 1a10 	vmov	r1, s24
 8004a5a:	4628      	mov	r0, r5
 8004a5c:	f005 ffd6 	bl	800aa0c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004a60:	ee1d 1a90 	vmov	r1, s27
 8004a64:	4628      	mov	r0, r5
 8004a66:	f005 ffd1 	bl	800aa0c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004a6a:	4659      	mov	r1, fp
 8004a6c:	4628      	mov	r0, r5
 8004a6e:	f005 ffcd 	bl	800aa0c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004a72:	4641      	mov	r1, r8
 8004a74:	4628      	mov	r0, r5
 8004a76:	f005 ffc9 	bl	800aa0c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004a7a:	ee19 1a10 	vmov	r1, s18
 8004a7e:	4628      	mov	r0, r5
 8004a80:	f005 ffc4 	bl	800aa0c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004a84:	ee19 1a90 	vmov	r1, s19
 8004a88:	4628      	mov	r0, r5
 8004a8a:	f005 ffbf 	bl	800aa0c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004a8e:	ee18 1a10 	vmov	r1, s16
 8004a92:	4628      	mov	r0, r5
 8004a94:	f005 ffba 	bl	800aa0c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004a98:	ee1a 1a10 	vmov	r1, s20
 8004a9c:	4628      	mov	r0, r5
 8004a9e:	f005 ffb5 	bl	800aa0c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004aa2:	ee1c 1a90 	vmov	r1, s25
 8004aa6:	4628      	mov	r0, r5
 8004aa8:	f005 ffb0 	bl	800aa0c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004aac:	ee1a 1a90 	vmov	r1, s21
 8004ab0:	4628      	mov	r0, r5
 8004ab2:	f005 ffab 	bl	800aa0c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004ab6:	4628      	mov	r0, r5
 8004ab8:	4651      	mov	r1, sl
 8004aba:	f005 ffa7 	bl	800aa0c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004abe:	4620      	mov	r0, r4
 8004ac0:	b017      	add	sp, #92	; 0x5c
 8004ac2:	ecbd 8b10 	vpop	{d8-d15}
 8004ac6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004aca:	bf00      	nop
 8004acc:	20015610 	.word	0x20015610
 8004ad0:	080228aa 	.word	0x080228aa
 8004ad4:	080221bc 	.word	0x080221bc
 8004ad8:	20015604 	.word	0x20015604
 8004adc:	20015608 	.word	0x20015608

08004ae0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 40, 10, 2, 4, 1, 0, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004ae0:	4770      	bx	lr
	...

08004ae4 <_Z23getFont_verdana_10_4bppv>:
{
 8004ae4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 40, 10, 2, 4, 1, 0, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004ae6:	4d16      	ldr	r5, [pc, #88]	; (8004b40 <_Z23getFont_verdana_10_4bppv+0x5c>)
 8004ae8:	782c      	ldrb	r4, [r5, #0]
 8004aea:	f3bf 8f5b 	dmb	ish
 8004aee:	f014 0401 	ands.w	r4, r4, #1
{
 8004af2:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 40, 10, 2, 4, 1, 0, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004af4:	d120      	bne.n	8004b38 <_Z23getFont_verdana_10_4bppv+0x54>
 8004af6:	4628      	mov	r0, r5
 8004af8:	f01b fdc8 	bl	802068c <__cxa_guard_acquire>
 8004afc:	b1e0      	cbz	r0, 8004b38 <_Z23getFont_verdana_10_4bppv+0x54>
 8004afe:	233f      	movs	r3, #63	; 0x3f
 8004b00:	9307      	str	r3, [sp, #28]
 8004b02:	4b10      	ldr	r3, [pc, #64]	; (8004b44 <_Z23getFont_verdana_10_4bppv+0x60>)
 8004b04:	9306      	str	r3, [sp, #24]
 8004b06:	4b10      	ldr	r3, [pc, #64]	; (8004b48 <_Z23getFont_verdana_10_4bppv+0x64>)
 8004b08:	9305      	str	r3, [sp, #20]
 8004b0a:	2301      	movs	r3, #1
 8004b0c:	e9cd 4303 	strd	r4, r3, [sp, #12]
 8004b10:	9302      	str	r3, [sp, #8]
 8004b12:	2204      	movs	r2, #4
 8004b14:	2302      	movs	r3, #2
 8004b16:	e9cd 3200 	strd	r3, r2, [sp]
 8004b1a:	490c      	ldr	r1, [pc, #48]	; (8004b4c <_Z23getFont_verdana_10_4bppv+0x68>)
 8004b1c:	480c      	ldr	r0, [pc, #48]	; (8004b50 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8004b1e:	9408      	str	r4, [sp, #32]
 8004b20:	230a      	movs	r3, #10
 8004b22:	2228      	movs	r2, #40	; 0x28
 8004b24:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8004b28:	f7fd fecc 	bl	80028c4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004b2c:	4809      	ldr	r0, [pc, #36]	; (8004b54 <_Z23getFont_verdana_10_4bppv+0x70>)
 8004b2e:	f01b fe7d 	bl	802082c <atexit>
 8004b32:	4628      	mov	r0, r5
 8004b34:	f01b fdb6 	bl	80206a4 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8004b38:	4805      	ldr	r0, [pc, #20]	; (8004b50 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8004b3a:	b00d      	add	sp, #52	; 0x34
 8004b3c:	bd30      	pop	{r4, r5, pc}
 8004b3e:	bf00      	nop
 8004b40:	200046ec 	.word	0x200046ec
 8004b44:	08025d44 	.word	0x08025d44
 8004b48:	08025dcc 	.word	0x08025dcc
 8004b4c:	08025880 	.word	0x08025880
 8004b50:	200046f0 	.word	0x200046f0
 8004b54:	08004ae1 	.word	0x08004ae1

08004b58 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_15_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_15_4bpp();

touchgfx::GeneratedFont& getFont_verdana_15_4bpp()
{
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 42, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8004b58:	4770      	bx	lr
	...

08004b5c <_Z23getFont_verdana_15_4bppv>:
{
 8004b5c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 42, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8004b5e:	4d16      	ldr	r5, [pc, #88]	; (8004bb8 <_Z23getFont_verdana_15_4bppv+0x5c>)
 8004b60:	782c      	ldrb	r4, [r5, #0]
 8004b62:	f3bf 8f5b 	dmb	ish
 8004b66:	f014 0401 	ands.w	r4, r4, #1
{
 8004b6a:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 42, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8004b6c:	d120      	bne.n	8004bb0 <_Z23getFont_verdana_15_4bppv+0x54>
 8004b6e:	4628      	mov	r0, r5
 8004b70:	f01b fd8c 	bl	802068c <__cxa_guard_acquire>
 8004b74:	b1e0      	cbz	r0, 8004bb0 <_Z23getFont_verdana_15_4bppv+0x54>
 8004b76:	233f      	movs	r3, #63	; 0x3f
 8004b78:	9307      	str	r3, [sp, #28]
 8004b7a:	4b10      	ldr	r3, [pc, #64]	; (8004bbc <_Z23getFont_verdana_15_4bppv+0x60>)
 8004b7c:	9306      	str	r3, [sp, #24]
 8004b7e:	4b10      	ldr	r3, [pc, #64]	; (8004bc0 <_Z23getFont_verdana_15_4bppv+0x64>)
 8004b80:	9305      	str	r3, [sp, #20]
 8004b82:	2301      	movs	r3, #1
 8004b84:	e9cd 4303 	strd	r4, r3, [sp, #12]
 8004b88:	9302      	str	r3, [sp, #8]
 8004b8a:	2204      	movs	r2, #4
 8004b8c:	2303      	movs	r3, #3
 8004b8e:	e9cd 3200 	strd	r3, r2, [sp]
 8004b92:	490c      	ldr	r1, [pc, #48]	; (8004bc4 <_Z23getFont_verdana_15_4bppv+0x68>)
 8004b94:	480c      	ldr	r0, [pc, #48]	; (8004bc8 <_Z23getFont_verdana_15_4bppv+0x6c>)
 8004b96:	9408      	str	r4, [sp, #32]
 8004b98:	230f      	movs	r3, #15
 8004b9a:	222a      	movs	r2, #42	; 0x2a
 8004b9c:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8004ba0:	f7fd fe90 	bl	80028c4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004ba4:	4809      	ldr	r0, [pc, #36]	; (8004bcc <_Z23getFont_verdana_15_4bppv+0x70>)
 8004ba6:	f01b fe41 	bl	802082c <atexit>
 8004baa:	4628      	mov	r0, r5
 8004bac:	f01b fd7a 	bl	80206a4 <__cxa_guard_release>
    return verdana_15_4bpp;
}
 8004bb0:	4805      	ldr	r0, [pc, #20]	; (8004bc8 <_Z23getFont_verdana_15_4bppv+0x6c>)
 8004bb2:	b00d      	add	sp, #52	; 0x34
 8004bb4:	bd30      	pop	{r4, r5, pc}
 8004bb6:	bf00      	nop
 8004bb8:	20004718 	.word	0x20004718
 8004bbc:	08025d60 	.word	0x08025d60
 8004bc0:	08025dd0 	.word	0x08025dd0
 8004bc4:	08025ab0 	.word	0x08025ab0
 8004bc8:	2000471c 	.word	0x2000471c
 8004bcc:	08004b59 	.word	0x08004b59

08004bd0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004bd0:	4770      	bx	lr
	...

08004bd4 <_Z23getFont_verdana_40_4bppv>:
{
 8004bd4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004bd6:	4d15      	ldr	r5, [pc, #84]	; (8004c2c <_Z23getFont_verdana_40_4bppv+0x58>)
 8004bd8:	782c      	ldrb	r4, [r5, #0]
 8004bda:	f3bf 8f5b 	dmb	ish
 8004bde:	f014 0401 	ands.w	r4, r4, #1
{
 8004be2:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004be4:	d11f      	bne.n	8004c26 <_Z23getFont_verdana_40_4bppv+0x52>
 8004be6:	4628      	mov	r0, r5
 8004be8:	f01b fd50 	bl	802068c <__cxa_guard_acquire>
 8004bec:	b1d8      	cbz	r0, 8004c26 <_Z23getFont_verdana_40_4bppv+0x52>
 8004bee:	233f      	movs	r3, #63	; 0x3f
 8004bf0:	9307      	str	r3, [sp, #28]
 8004bf2:	4b0f      	ldr	r3, [pc, #60]	; (8004c30 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8004bf4:	9306      	str	r3, [sp, #24]
 8004bf6:	4b0f      	ldr	r3, [pc, #60]	; (8004c34 <_Z23getFont_verdana_40_4bppv+0x60>)
 8004bf8:	490f      	ldr	r1, [pc, #60]	; (8004c38 <_Z23getFont_verdana_40_4bppv+0x64>)
 8004bfa:	4810      	ldr	r0, [pc, #64]	; (8004c3c <_Z23getFont_verdana_40_4bppv+0x68>)
 8004bfc:	9408      	str	r4, [sp, #32]
 8004bfe:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8004c02:	2204      	movs	r2, #4
 8004c04:	2301      	movs	r3, #1
 8004c06:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8004c0a:	9300      	str	r3, [sp, #0]
 8004c0c:	2205      	movs	r2, #5
 8004c0e:	2328      	movs	r3, #40	; 0x28
 8004c10:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8004c14:	9403      	str	r4, [sp, #12]
 8004c16:	f7fd fe55 	bl	80028c4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004c1a:	4809      	ldr	r0, [pc, #36]	; (8004c40 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8004c1c:	f01b fe06 	bl	802082c <atexit>
 8004c20:	4628      	mov	r0, r5
 8004c22:	f01b fd3f 	bl	80206a4 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8004c26:	4805      	ldr	r0, [pc, #20]	; (8004c3c <_Z23getFont_verdana_40_4bppv+0x68>)
 8004c28:	b00d      	add	sp, #52	; 0x34
 8004c2a:	bd30      	pop	{r4, r5, pc}
 8004c2c:	20004744 	.word	0x20004744
 8004c30:	08025db8 	.word	0x08025db8
 8004c34:	08025dd4 	.word	0x08025dd4
 8004c38:	08025cfc 	.word	0x08025cfc
 8004c3c:	20004748 	.word	0x20004748
 8004c40:	08004bd1 	.word	0x08004bd1

08004c44 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8004c44:	2000      	movs	r0, #0
 8004c46:	4770      	bx	lr

08004c48 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8004c48:	2000      	movs	r0, #0
 8004c4a:	4770      	bx	lr

08004c4c <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8004c4c:	b40e      	push	{r1, r2, r3}
 8004c4e:	b503      	push	{r0, r1, lr}
 8004c50:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8004c52:	2100      	movs	r1, #0
{
 8004c54:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8004c58:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8004c5a:	f00d f86f 	bl	8011d3c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8004c5e:	b002      	add	sp, #8
 8004c60:	f85d eb04 	ldr.w	lr, [sp], #4
 8004c64:	b003      	add	sp, #12
 8004c66:	4770      	bx	lr

08004c68 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8004c68:	b40c      	push	{r2, r3}
 8004c6a:	b507      	push	{r0, r1, r2, lr}
 8004c6c:	ab04      	add	r3, sp, #16
 8004c6e:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8004c72:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8004c74:	f00d f862 	bl	8011d3c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8004c78:	b003      	add	sp, #12
 8004c7a:	f85d eb04 	ldr.w	lr, [sp], #4
 8004c7e:	b002      	add	sp, #8
 8004c80:	4770      	bx	lr
	...

08004c84 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8004c84:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8004c86:	b510      	push	{r4, lr}
 8004c88:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8004c8a:	b373      	cbz	r3, 8004cea <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8004c8c:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8004c8e:	b92b      	cbnz	r3, 8004c9c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8004c90:	4b18      	ldr	r3, [pc, #96]	; (8004cf4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8004c92:	4a19      	ldr	r2, [pc, #100]	; (8004cf8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8004c94:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8004c96:	4819      	ldr	r0, [pc, #100]	; (8004cfc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8004c98:	f01b fdaa 	bl	80207f0 <__assert_func>
            return buffer[pos];
 8004c9c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8004c9e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8004ca2:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8004ca4:	b30b      	cbz	r3, 8004cea <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8004ca6:	f00e fbe2 	bl	801346e <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8004caa:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8004cac:	2b01      	cmp	r3, #1
 8004cae:	d803      	bhi.n	8004cb8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8004cb0:	4b13      	ldr	r3, [pc, #76]	; (8004d00 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8004cb2:	4a14      	ldr	r2, [pc, #80]	; (8004d04 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8004cb4:	21c5      	movs	r1, #197	; 0xc5
 8004cb6:	e7ee      	b.n	8004c96 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8004cb8:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8004cba:	1c53      	adds	r3, r2, #1
 8004cbc:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8004cbe:	2b09      	cmp	r3, #9
 8004cc0:	4619      	mov	r1, r3
 8004cc2:	bf88      	it	hi
 8004cc4:	f1a3 010a 	subhi.w	r1, r3, #10
 8004cc8:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8004ccc:	f640 103f 	movw	r0, #2367	; 0x93f
 8004cd0:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8004cd2:	4281      	cmp	r1, r0
 8004cd4:	d109      	bne.n	8004cea <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8004cd6:	2b0a      	cmp	r3, #10
 8004cd8:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8004cdc:	bf28      	it	cs
 8004cde:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8004ce0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8004ce4:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8004ce6:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8004ce8:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8004cea:	4620      	mov	r0, r4
}
 8004cec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8004cf0:	f00e bac0 	b.w	8013274 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8004cf4:	0802328c 	.word	0x0802328c
 8004cf8:	08023295 	.word	0x08023295
 8004cfc:	08023340 	.word	0x08023340
 8004d00:	0802338a 	.word	0x0802338a
 8004d04:	08023398 	.word	0x08023398

08004d08 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8004d08:	f00e ba7b 	b.w	8013202 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08004d0c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8004d0c:	b510      	push	{r4, lr}
 8004d0e:	b086      	sub	sp, #24
 8004d10:	ac02      	add	r4, sp, #8
 8004d12:	e884 0006 	stmia.w	r4, {r1, r2}
 8004d16:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8004d18:	ab0a      	add	r3, sp, #40	; 0x28
 8004d1a:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8004d1c:	9301      	str	r3, [sp, #4]
 8004d1e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004d20:	9300      	str	r3, [sp, #0]
 8004d22:	4621      	mov	r1, r4
 8004d24:	9b08      	ldr	r3, [sp, #32]
 8004d26:	f00b fd0e 	bl	8010746 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8004d2a:	b006      	add	sp, #24
 8004d2c:	bd10      	pop	{r4, pc}
	...

08004d30 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8004d30:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8004d32:	bb18      	cbnz	r0, 8004d7c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8004d34:	4b12      	ldr	r3, [pc, #72]	; (8004d80 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8004d36:	4813      	ldr	r0, [pc, #76]	; (8004d84 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8004d38:	681b      	ldr	r3, [r3, #0]
 8004d3a:	4913      	ldr	r1, [pc, #76]	; (8004d88 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8004d3c:	b1b3      	cbz	r3, 8004d6c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8004d3e:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8004d40:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8004d42:	441a      	add	r2, r3
 8004d44:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8004d46:	685a      	ldr	r2, [r3, #4]
 8004d48:	441a      	add	r2, r3
 8004d4a:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8004d4c:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8004d4e:	4b0f      	ldr	r3, [pc, #60]	; (8004d8c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8004d50:	2200      	movs	r2, #0
 8004d52:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8004d54:	f000 f838 	bl	8004dc8 <_ZN17TypedTextDatabase8getFontsEv>
 8004d58:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8004d5a:	f000 f833 	bl	8004dc4 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8004d5e:	4b0c      	ldr	r3, [pc, #48]	; (8004d90 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8004d60:	601c      	str	r4, [r3, #0]
        fonts = f;
 8004d62:	4b0c      	ldr	r3, [pc, #48]	; (8004d94 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8004d64:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8004d66:	4b0c      	ldr	r3, [pc, #48]	; (8004d98 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8004d68:	8018      	strh	r0, [r3, #0]
    }
}
 8004d6a:	e007      	b.n	8004d7c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8004d6c:	4b0b      	ldr	r3, [pc, #44]	; (8004d9c <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8004d6e:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8004d70:	4b0b      	ldr	r3, [pc, #44]	; (8004da0 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8004d72:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8004d74:	4b0b      	ldr	r3, [pc, #44]	; (8004da4 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8004d76:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8004d78:	2c00      	cmp	r4, #0
 8004d7a:	d1e8      	bne.n	8004d4e <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8004d7c:	bd38      	pop	{r3, r4, r5, pc}
 8004d7e:	bf00      	nop
 8004d80:	20004770 	.word	0x20004770
 8004d84:	20004774 	.word	0x20004774
 8004d88:	20004778 	.word	0x20004778
 8004d8c:	2000477c 	.word	0x2000477c
 8004d90:	20015604 	.word	0x20015604
 8004d94:	2001560c 	.word	0x2001560c
 8004d98:	20015608 	.word	0x20015608
 8004d9c:	08025e2c 	.word	0x08025e2c
 8004da0:	08025dd8 	.word	0x08025dd8
 8004da4:	08025ff8 	.word	0x08025ff8

08004da8 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8004da8:	4b04      	ldr	r3, [pc, #16]	; (8004dbc <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8004daa:	681b      	ldr	r3, [r3, #0]
 8004dac:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8004db0:	4b03      	ldr	r3, [pc, #12]	; (8004dc0 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8004db2:	681b      	ldr	r3, [r3, #0]
}
 8004db4:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8004db8:	4770      	bx	lr
 8004dba:	bf00      	nop
 8004dbc:	20004778 	.word	0x20004778
 8004dc0:	20004774 	.word	0x20004774

08004dc4 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8004dc4:	2015      	movs	r0, #21
 8004dc6:	4770      	bx	lr

08004dc8 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8004dc8:	4800      	ldr	r0, [pc, #0]	; (8004dcc <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8004dca:	4770      	bx	lr
 8004dcc:	20004780 	.word	0x20004780

08004dd0 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8004dd0:	b510      	push	{r4, lr}
    &(getFont_verdana_15_4bpp()),
 8004dd2:	f7ff fec3 	bl	8004b5c <_Z23getFont_verdana_15_4bppv>
};
 8004dd6:	4c04      	ldr	r4, [pc, #16]	; (8004de8 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 8004dd8:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8004dda:	f7ff fefb 	bl	8004bd4 <_Z23getFont_verdana_40_4bppv>
};
 8004dde:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 8004de0:	f7ff fe80 	bl	8004ae4 <_Z23getFont_verdana_10_4bppv>
};
 8004de4:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 8004de6:	bd10      	pop	{r4, pc}
 8004de8:	20004780 	.word	0x20004780

08004dec <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8004dec:	4770      	bx	lr

08004dee <_ZN19FrontendApplicationD0Ev>:
 8004dee:	b510      	push	{r4, lr}
 8004df0:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8004df4:	4604      	mov	r4, r0
 8004df6:	f01b fc47 	bl	8020688 <_ZdlPvj>
 8004dfa:	4620      	mov	r0, r4
 8004dfc:	bd10      	pop	{r4, pc}

08004dfe <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8004dfe:	b510      	push	{r4, lr}
 8004e00:	4604      	mov	r4, r0
    {
        model.tick();
 8004e02:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 8004e06:	f000 f813 	bl	8004e30 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8004e0a:	4620      	mov	r0, r4
    }
 8004e0c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8004e10:	f00c b812 	b.w	8010e38 <_ZN8touchgfx11Application15handleTickEventEv>

08004e14 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8004e14:	b510      	push	{r4, lr}
 8004e16:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8004e18:	f7fd fcd6 	bl	80027c8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8004e1c:	4b01      	ldr	r3, [pc, #4]	; (8004e24 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8004e1e:	6023      	str	r3, [r4, #0]
{

}
 8004e20:	4620      	mov	r0, r4
 8004e22:	bd10      	pop	{r4, pc}
 8004e24:	08023474 	.word	0x08023474

08004e28 <_ZN5ModelC1Ev>:
extern LadowarkaStruct ladowarka;
#endif
int PradLadowania=400; //Set default charging curretn to 400mA
int licznik;
int ChargingTime=10; //Set default charging time to 10hrs
Model::Model() : modelListener(0)
 8004e28:	2200      	movs	r2, #0
 8004e2a:	6002      	str	r2, [r0, #0]
{

}
 8004e2c:	4770      	bx	lr
	...

08004e30 <_ZN5Model4tickEv>:

void Model::tick()
{
 8004e30:	b570      	push	{r4, r5, r6, lr}
 8004e32:	4604      	mov	r4, r0
//	if (licznik>1000 )licznik =0;
//
//	if (licznik%100) modelListener->UpdateBatteryVoltage();

/************* UPDATE BATT VOLTAGE ON GRAPH *********************/
modelListener->UpdateBatteryVoltage();
 8004e34:	6800      	ldr	r0, [r0, #0]

#ifndef SIMULATOR

if(ladowarka.narysujPunktNaWykresie){
 8004e36:	4d1d      	ldr	r5, [pc, #116]	; (8004eac <_ZN5Model4tickEv+0x7c>)
modelListener->UpdateBatteryVoltage();
 8004e38:	6803      	ldr	r3, [r0, #0]
 8004e3a:	689b      	ldr	r3, [r3, #8]
 8004e3c:	4798      	blx	r3
if(ladowarka.narysujPunktNaWykresie){
 8004e3e:	f8d5 3a70 	ldr.w	r3, [r5, #2672]	; 0xa70
 8004e42:	b173      	cbz	r3, 8004e62 <_ZN5Model4tickEv+0x32>
	if (ladowarka.CzsasLadowaniaWSec==1)	modelListener->DrawPoint(); //dodanie jednego extra punktu bo zaczynamy od 0
 8004e44:	f8d5 3a78 	ldr.w	r3, [r5, #2680]	; 0xa78
 8004e48:	2b01      	cmp	r3, #1
 8004e4a:	d103      	bne.n	8004e54 <_ZN5Model4tickEv+0x24>
 8004e4c:	6820      	ldr	r0, [r4, #0]
 8004e4e:	6803      	ldr	r3, [r0, #0]
 8004e50:	68db      	ldr	r3, [r3, #12]
 8004e52:	4798      	blx	r3
	modelListener->DrawPoint();
 8004e54:	6820      	ldr	r0, [r4, #0]
 8004e56:	6803      	ldr	r3, [r0, #0]
 8004e58:	68db      	ldr	r3, [r3, #12]
 8004e5a:	4798      	blx	r3
	ladowarka.narysujPunktNaWykresie=0;
 8004e5c:	2300      	movs	r3, #0
 8004e5e:	f8c5 3a70 	str.w	r3, [r5, #2672]	; 0xa70
}

if (ladowarka.narysujPunktNaWykresieMin){
 8004e62:	f8d5 3a74 	ldr.w	r3, [r5, #2676]	; 0xa74
 8004e66:	b133      	cbz	r3, 8004e76 <_ZN5Model4tickEv+0x46>
	modelListener->DrawPointMin();
 8004e68:	6820      	ldr	r0, [r4, #0]
 8004e6a:	6803      	ldr	r3, [r0, #0]
 8004e6c:	691b      	ldr	r3, [r3, #16]
 8004e6e:	4798      	blx	r3
	ladowarka.narysujPunktNaWykresieMin=0;
 8004e70:	2300      	movs	r3, #0
 8004e72:	f8c5 3a74 	str.w	r3, [r5, #2676]	; 0xa74

}
#endif

if(ladowarka.CzsasLadowaniaWSec>=ladowarka.ChargingTime*60*60){  //jesli czas ladowania jest wiekszy niz ustawiony pokaz modala
 8004e76:	f8d5 2a78 	ldr.w	r2, [r5, #2680]	; 0xa78
 8004e7a:	68eb      	ldr	r3, [r5, #12]
 8004e7c:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8004e80:	434b      	muls	r3, r1
 8004e82:	429a      	cmp	r2, r3
 8004e84:	db03      	blt.n	8004e8e <_ZN5Model4tickEv+0x5e>
	modelListener->DisplayChargingFinished();
 8004e86:	6820      	ldr	r0, [r4, #0]
 8004e88:	6803      	ldr	r3, [r0, #0]
 8004e8a:	6a1b      	ldr	r3, [r3, #32]
 8004e8c:	4798      	blx	r3
}


/*************** Update min/max value **************************/
modelListener->DisplayLastAndMaxVlt();
 8004e8e:	6820      	ldr	r0, [r4, #0]
 8004e90:	6803      	ldr	r3, [r0, #0]
 8004e92:	695b      	ldr	r3, [r3, #20]
 8004e94:	4798      	blx	r3
/*************** Update Runningn Time value **************************/
modelListener->DisplayRunningTime();
 8004e96:	6820      	ldr	r0, [r4, #0]
 8004e98:	6803      	ldr	r3, [r0, #0]
 8004e9a:	699b      	ldr	r3, [r3, #24]
 8004e9c:	4798      	blx	r3
/*************** Update Charging current value **************************/
modelListener->DisplayCurrentValue();
 8004e9e:	6820      	ldr	r0, [r4, #0]
 8004ea0:	6803      	ldr	r3, [r0, #0]
}
 8004ea2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
modelListener->DisplayCurrentValue();
 8004ea6:	69db      	ldr	r3, [r3, #28]
 8004ea8:	4718      	bx	r3
 8004eaa:	bf00      	nop
 8004eac:	20003c14 	.word	0x20003c14

08004eb0 <_ZN13ModelListener9DrawPointEv>:
    virtual void DrawPoint () {};
 8004eb0:	4770      	bx	lr

08004eb2 <_ZN13ModelListener12DrawPointMinEv>:
    virtual void DrawPointMin () {};
 8004eb2:	4770      	bx	lr

08004eb4 <_ZN13ModelListener20DisplayLastAndMaxVltEv>:
    virtual void DisplayLastAndMaxVlt() {} ;
 8004eb4:	4770      	bx	lr

08004eb6 <_ZN13ModelListener18DisplayRunningTimeEv>:
    virtual void DisplayRunningTime() {} ;
 8004eb6:	4770      	bx	lr

08004eb8 <_ZN13ModelListener19DisplayCurrentValueEv>:
    virtual void DisplayCurrentValue() {};
 8004eb8:	4770      	bx	lr

08004eba <_ZN13ModelListener23DisplayChargingFinishedEv>:
    virtual void DisplayChargingFinished() {};
 8004eba:	4770      	bx	lr

08004ebc <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 8004ebc:	4770      	bx	lr

08004ebe <_ZThn4_N16Screen1PresenterD1Ev>:
 8004ebe:	3804      	subs	r0, #4
 8004ec0:	4770      	bx	lr

08004ec2 <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8004ec2:	4770      	bx	lr

08004ec4 <_ZN16Screen1Presenter20UpdateBatteryVoltageEv>:
{

}

void Screen1Presenter:: UpdateBatteryVoltage(){
view.DisplayBatteryVoltage();
 8004ec4:	68c0      	ldr	r0, [r0, #12]
 8004ec6:	6803      	ldr	r3, [r0, #0]
 8004ec8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004eca:	4718      	bx	r3

08004ecc <_ZThn4_N16Screen1Presenter20UpdateBatteryVoltageEv>:
    virtual void UpdateBatteryVoltage();
 8004ecc:	f1a0 0004 	sub.w	r0, r0, #4
 8004ed0:	f7ff bff8 	b.w	8004ec4 <_ZN16Screen1Presenter20UpdateBatteryVoltageEv>

08004ed4 <_ZN16Screen1PresenterD0Ev>:
    virtual ~Screen1Presenter() {};
 8004ed4:	b510      	push	{r4, lr}
 8004ed6:	2110      	movs	r1, #16
 8004ed8:	4604      	mov	r4, r0
 8004eda:	f01b fbd5 	bl	8020688 <_ZdlPvj>
 8004ede:	4620      	mov	r0, r4
 8004ee0:	bd10      	pop	{r4, pc}

08004ee2 <_ZThn4_N16Screen1PresenterD0Ev>:
 8004ee2:	f1a0 0004 	sub.w	r0, r0, #4
 8004ee6:	e7f5      	b.n	8004ed4 <_ZN16Screen1PresenterD0Ev>

08004ee8 <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 8004ee8:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8004eea:	2200      	movs	r2, #0
 8004eec:	6082      	str	r2, [r0, #8]
    : view(v)
 8004eee:	4a04      	ldr	r2, [pc, #16]	; (8004f00 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 8004ef0:	60c1      	str	r1, [r0, #12]
 8004ef2:	f102 0408 	add.w	r4, r2, #8
 8004ef6:	3224      	adds	r2, #36	; 0x24
 8004ef8:	6004      	str	r4, [r0, #0]
 8004efa:	6042      	str	r2, [r0, #4]
}
 8004efc:	bd10      	pop	{r4, pc}
 8004efe:	bf00      	nop
 8004f00:	080234b8 	.word	0x080234b8

08004f04 <_ZN11Screen1ViewD1Ev>:
#include <gui/screen1_screen/Screen1Presenter.hpp>
class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8004f04:	4770      	bx	lr

08004f06 <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 8004f06:	4770      	bx	lr

08004f08 <_ZN11Screen1View18ButtonStartClickedEv>:
}

void Screen1View::ButtonStartClicked()
{
#ifndef SIMULATOR
 ladowarka.LoadingCurrent=PradLadowania;
 8004f08:	4b04      	ldr	r3, [pc, #16]	; (8004f1c <_ZN11Screen1View18ButtonStartClickedEv+0x14>)
 8004f0a:	681a      	ldr	r2, [r3, #0]
 8004f0c:	4b04      	ldr	r3, [pc, #16]	; (8004f20 <_ZN11Screen1View18ButtonStartClickedEv+0x18>)
 8004f0e:	609a      	str	r2, [r3, #8]
 ladowarka.ChargeStarted=1;
 8004f10:	2201      	movs	r2, #1
 8004f12:	611a      	str	r2, [r3, #16]
 ladowarka.ChargingTime=ChargingTime;
 8004f14:	4a03      	ldr	r2, [pc, #12]	; (8004f24 <_ZN11Screen1View18ButtonStartClickedEv+0x1c>)
 8004f16:	6812      	ldr	r2, [r2, #0]
 8004f18:	60da      	str	r2, [r3, #12]
#endif
}
 8004f1a:	4770      	bx	lr
 8004f1c:	20000018 	.word	0x20000018
 8004f20:	20003c14 	.word	0x20003c14
 8004f24:	20000014 	.word	0x20000014

08004f28 <_ZN11Screen1View15ButtonUpClickedEv>:
	PradLadowania=PradLadowania+100;
 8004f28:	4b0b      	ldr	r3, [pc, #44]	; (8004f58 <_ZN11Screen1View15ButtonUpClickedEv+0x30>)
 8004f2a:	681a      	ldr	r2, [r3, #0]
{
 8004f2c:	b510      	push	{r4, lr}
	PradLadowania=PradLadowania+100;
 8004f2e:	3264      	adds	r2, #100	; 0x64
	if (PradLadowania >400){
 8004f30:	f5b2 7fc8 	cmp.w	r2, #400	; 0x190
	PradLadowania=400;}
 8004f34:	bfc8      	it	gt
 8004f36:	f44f 72c8 	movgt.w	r2, #400	; 0x190
 8004f3a:	601a      	str	r2, [r3, #0]
{
 8004f3c:	4604      	mov	r4, r0
	Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 8004f3e:	681b      	ldr	r3, [r3, #0]
 8004f40:	4a06      	ldr	r2, [pc, #24]	; (8004f5c <_ZN11Screen1View15ButtonUpClickedEv+0x34>)
 8004f42:	210a      	movs	r1, #10
 8004f44:	f500 60b8 	add.w	r0, r0, #1472	; 0x5c0
 8004f48:	f00f f840 	bl	8013fcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 8004f4c:	f504 7017 	add.w	r0, r4, #604	; 0x25c
}
 8004f50:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtPradLadowania.invalidate();
 8004f54:	f00d b813 	b.w	8011f7e <_ZNK8touchgfx8Drawable10invalidateEv>
 8004f58:	20000018 	.word	0x20000018
 8004f5c:	08023500 	.word	0x08023500

08004f60 <_ZN11Screen1View17ButtonDownClickedEv>:
	PradLadowania=PradLadowania-100;
 8004f60:	4b0a      	ldr	r3, [pc, #40]	; (8004f8c <_ZN11Screen1View17ButtonDownClickedEv+0x2c>)
 8004f62:	681a      	ldr	r2, [r3, #0]
{
 8004f64:	b510      	push	{r4, lr}
	PradLadowania=PradLadowania-100;
 8004f66:	3a64      	subs	r2, #100	; 0x64
    if (PradLadowania <100){
 8004f68:	2a63      	cmp	r2, #99	; 0x63
	PradLadowania=100;}
 8004f6a:	bfd8      	it	le
 8004f6c:	2264      	movle	r2, #100	; 0x64
 8004f6e:	601a      	str	r2, [r3, #0]
{
 8004f70:	4604      	mov	r4, r0
	Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 8004f72:	681b      	ldr	r3, [r3, #0]
 8004f74:	4a06      	ldr	r2, [pc, #24]	; (8004f90 <_ZN11Screen1View17ButtonDownClickedEv+0x30>)
 8004f76:	210a      	movs	r1, #10
 8004f78:	f500 60b8 	add.w	r0, r0, #1472	; 0x5c0
 8004f7c:	f00f f826 	bl	8013fcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 8004f80:	f504 7017 	add.w	r0, r4, #604	; 0x25c
}
 8004f84:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtPradLadowania.invalidate();
 8004f88:	f00c bff9 	b.w	8011f7e <_ZNK8touchgfx8Drawable10invalidateEv>
 8004f8c:	20000018 	.word	0x20000018
 8004f90:	08023500 	.word	0x08023500

08004f94 <_ZN11Screen1View19ButtonUpTimeClickedEv>:
	ChargingTime=ChargingTime+1;
 8004f94:	4b0a      	ldr	r3, [pc, #40]	; (8004fc0 <_ZN11Screen1View19ButtonUpTimeClickedEv+0x2c>)
 8004f96:	681a      	ldr	r2, [r3, #0]
{
 8004f98:	b510      	push	{r4, lr}
	ChargingTime=ChargingTime+1;
 8004f9a:	3201      	adds	r2, #1
	if (ChargingTime >10){
 8004f9c:	2a0a      	cmp	r2, #10
		ChargingTime=10;}
 8004f9e:	bfc8      	it	gt
 8004fa0:	220a      	movgt	r2, #10
 8004fa2:	601a      	str	r2, [r3, #0]
{
 8004fa4:	4604      	mov	r4, r0
	Unicode::snprintf(txtChargingTimeBuffer,TXTCHARGINGTIME_SIZE,"%d",ChargingTime);
 8004fa6:	681b      	ldr	r3, [r3, #0]
 8004fa8:	4a06      	ldr	r2, [pc, #24]	; (8004fc4 <_ZN11Screen1View19ButtonUpTimeClickedEv+0x30>)
 8004faa:	2103      	movs	r1, #3
 8004fac:	f500 60bd 	add.w	r0, r0, #1512	; 0x5e8
 8004fb0:	f00f f80c 	bl	8013fcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtChargingTime.invalidate();
 8004fb4:	f204 5074 	addw	r0, r4, #1396	; 0x574
}
 8004fb8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtChargingTime.invalidate();
 8004fbc:	f00c bfdf 	b.w	8011f7e <_ZNK8touchgfx8Drawable10invalidateEv>
 8004fc0:	20000014 	.word	0x20000014
 8004fc4:	08023500 	.word	0x08023500

08004fc8 <_ZN11Screen1View21ButtonDownTimeClickedEv>:
	ChargingTime=ChargingTime-1;
 8004fc8:	4b0a      	ldr	r3, [pc, #40]	; (8004ff4 <_ZN11Screen1View21ButtonDownTimeClickedEv+0x2c>)
 8004fca:	681a      	ldr	r2, [r3, #0]
{
 8004fcc:	b510      	push	{r4, lr}
	ChargingTime=ChargingTime-1;
 8004fce:	3a01      	subs	r2, #1
    if (ChargingTime <1){
 8004fd0:	2a00      	cmp	r2, #0
    	ChargingTime=1;}
 8004fd2:	bfd8      	it	le
 8004fd4:	2201      	movle	r2, #1
 8004fd6:	601a      	str	r2, [r3, #0]
{
 8004fd8:	4604      	mov	r4, r0
	Unicode::snprintf(txtChargingTimeBuffer,TXTCHARGINGTIME_SIZE,"%d",ChargingTime);
 8004fda:	681b      	ldr	r3, [r3, #0]
 8004fdc:	4a06      	ldr	r2, [pc, #24]	; (8004ff8 <_ZN11Screen1View21ButtonDownTimeClickedEv+0x30>)
 8004fde:	2103      	movs	r1, #3
 8004fe0:	f500 60bd 	add.w	r0, r0, #1512	; 0x5e8
 8004fe4:	f00e fff2 	bl	8013fcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtChargingTime.invalidate();
 8004fe8:	f204 5074 	addw	r0, r4, #1396	; 0x574
}
 8004fec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtChargingTime.invalidate();
 8004ff0:	f00c bfc5 	b.w	8011f7e <_ZNK8touchgfx8Drawable10invalidateEv>
 8004ff4:	20000014 	.word	0x20000014
 8004ff8:	08023500 	.word	0x08023500

08004ffc <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 8004ffc:	f7fd bcd7 	b.w	80029ae <_ZN15Screen1ViewBase11setupScreenEv>

08005000 <_ZN11Screen1View21DisplayBatteryVoltageEv>:
void Screen1View::DisplayBatteryVoltage(){
 8005000:	b513      	push	{r0, r1, r4, lr}
	Unicode::snprintfFloat(txtNapiecieBateriiBuffer,TXTNAPIECIEBATERII_SIZE,"%.3f",ladowarka.BatteryVoltage);
 8005002:	4b09      	ldr	r3, [pc, #36]	; (8005028 <_ZN11Screen1View21DisplayBatteryVoltageEv+0x28>)
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 8005004:	4a09      	ldr	r2, [pc, #36]	; (800502c <_ZN11Screen1View21DisplayBatteryVoltageEv+0x2c>)
 8005006:	681b      	ldr	r3, [r3, #0]
 8005008:	9301      	str	r3, [sp, #4]
void Screen1View::DisplayBatteryVoltage(){
 800500a:	4604      	mov	r4, r0
 800500c:	ab01      	add	r3, sp, #4
 800500e:	210a      	movs	r1, #10
 8005010:	f200 50d4 	addw	r0, r0, #1492	; 0x5d4
 8005014:	f00f f996 	bl	8014344 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	txtNapiecieBaterii.invalidate();
 8005018:	f504 7059 	add.w	r0, r4, #868	; 0x364
}
 800501c:	b002      	add	sp, #8
 800501e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtNapiecieBaterii.invalidate();
 8005022:	f00c bfac 	b.w	8011f7e <_ZNK8touchgfx8Drawable10invalidateEv>
 8005026:	bf00      	nop
 8005028:	20003c14 	.word	0x20003c14
 800502c:	08023503 	.word	0x08023503

08005030 <_ZN11Screen1ViewD0Ev>:
 8005030:	b510      	push	{r4, lr}
 8005032:	f44f 61c2 	mov.w	r1, #1552	; 0x610
 8005036:	4604      	mov	r4, r0
 8005038:	f01b fb26 	bl	8020688 <_ZdlPvj>
 800503c:	4620      	mov	r0, r4
 800503e:	bd10      	pop	{r4, pc}

08005040 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8005040:	b510      	push	{r4, lr}
 8005042:	4604      	mov	r4, r0
 8005044:	f7fd ff3a 	bl	8002ebc <_ZN15Screen1ViewBaseC1Ev>
 8005048:	4b07      	ldr	r3, [pc, #28]	; (8005068 <_ZN11Screen1ViewC1Ev+0x28>)
 800504a:	6023      	str	r3, [r4, #0]
Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 800504c:	4b07      	ldr	r3, [pc, #28]	; (800506c <_ZN11Screen1ViewC1Ev+0x2c>)
 800504e:	4a08      	ldr	r2, [pc, #32]	; (8005070 <_ZN11Screen1ViewC1Ev+0x30>)
 8005050:	681b      	ldr	r3, [r3, #0]
 8005052:	210a      	movs	r1, #10
 8005054:	f504 60b8 	add.w	r0, r4, #1472	; 0x5c0
 8005058:	f00e ffb8 	bl	8013fcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 800505c:	f504 7017 	add.w	r0, r4, #604	; 0x25c
 8005060:	f00c ff8d 	bl	8011f7e <_ZNK8touchgfx8Drawable10invalidateEv>
}
 8005064:	4620      	mov	r0, r4
 8005066:	bd10      	pop	{r4, pc}
 8005068:	08023510 	.word	0x08023510
 800506c:	20000018 	.word	0x20000018
 8005070:	08023500 	.word	0x08023500

08005074 <_ZN13ModelListener20UpdateBatteryVoltageEv>:
    virtual void UpdateBatteryVoltage () {};
 8005074:	4770      	bx	lr

08005076 <_ZN20ScreenGraphPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~ScreenGraphPresenter() {};
 8005076:	4770      	bx	lr

08005078 <_ZThn4_N20ScreenGraphPresenterD1Ev>:
 8005078:	3804      	subs	r0, #4
 800507a:	4770      	bx	lr

0800507c <_ZN20ScreenGraphPresenter10deactivateEv>:
}

void ScreenGraphPresenter::activate()
{

}
 800507c:	4770      	bx	lr

0800507e <_ZN20ScreenGraphPresenter9DrawPointEv>:
{

}
void ScreenGraphPresenter::DrawPoint()
{
	view.DrawPoint2();
 800507e:	68c0      	ldr	r0, [r0, #12]
 8005080:	6803      	ldr	r3, [r0, #0]
 8005082:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005084:	4718      	bx	r3

08005086 <_ZThn4_N20ScreenGraphPresenter9DrawPointEv>:
    virtual void DrawPoint();
 8005086:	f1a0 0004 	sub.w	r0, r0, #4
 800508a:	f7ff bff8 	b.w	800507e <_ZN20ScreenGraphPresenter9DrawPointEv>

0800508e <_ZN20ScreenGraphPresenter12DrawPointMinEv>:
}
void ScreenGraphPresenter::DrawPointMin()
{
	view.DrawPoint2Min();
 800508e:	68c0      	ldr	r0, [r0, #12]
 8005090:	6803      	ldr	r3, [r0, #0]
 8005092:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005094:	4718      	bx	r3

08005096 <_ZThn4_N20ScreenGraphPresenter12DrawPointMinEv>:
    virtual void DrawPointMin();
 8005096:	f1a0 0004 	sub.w	r0, r0, #4
 800509a:	f7ff bff8 	b.w	800508e <_ZN20ScreenGraphPresenter12DrawPointMinEv>

0800509e <_ZN20ScreenGraphPresenter20DisplayLastAndMaxVltEv>:
}
void ScreenGraphPresenter::DisplayLastAndMaxVlt()
{
	view.DisplayLastAndMaxVlt2();
 800509e:	68c0      	ldr	r0, [r0, #12]
 80050a0:	6803      	ldr	r3, [r0, #0]
 80050a2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80050a4:	4718      	bx	r3

080050a6 <_ZThn4_N20ScreenGraphPresenter20DisplayLastAndMaxVltEv>:
    virtual void DisplayLastAndMaxVlt();
 80050a6:	f1a0 0004 	sub.w	r0, r0, #4
 80050aa:	f7ff bff8 	b.w	800509e <_ZN20ScreenGraphPresenter20DisplayLastAndMaxVltEv>

080050ae <_ZN20ScreenGraphPresenter18DisplayRunningTimeEv>:
}
void ScreenGraphPresenter::DisplayRunningTime()
{
	view.DisplayRunningTime2();
 80050ae:	68c0      	ldr	r0, [r0, #12]
 80050b0:	6803      	ldr	r3, [r0, #0]
 80050b2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80050b4:	4718      	bx	r3

080050b6 <_ZThn4_N20ScreenGraphPresenter18DisplayRunningTimeEv>:
    virtual void DisplayRunningTime();
 80050b6:	f1a0 0004 	sub.w	r0, r0, #4
 80050ba:	f7ff bff8 	b.w	80050ae <_ZN20ScreenGraphPresenter18DisplayRunningTimeEv>

080050be <_ZN20ScreenGraphPresenter19DisplayCurrentValueEv>:
}
void ScreenGraphPresenter::DisplayCurrentValue()
{
	view.DisplayCurrentValue2();
 80050be:	68c0      	ldr	r0, [r0, #12]
 80050c0:	6803      	ldr	r3, [r0, #0]
 80050c2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80050c4:	4718      	bx	r3

080050c6 <_ZThn4_N20ScreenGraphPresenter19DisplayCurrentValueEv>:
    virtual void DisplayCurrentValue();
 80050c6:	f1a0 0004 	sub.w	r0, r0, #4
 80050ca:	f7ff bff8 	b.w	80050be <_ZN20ScreenGraphPresenter19DisplayCurrentValueEv>

080050ce <_ZN20ScreenGraphPresenter23DisplayChargingFinishedEv>:
}
void ScreenGraphPresenter::DisplayChargingFinished()
{
	view.DisplayChargingFinished2();
 80050ce:	68c0      	ldr	r0, [r0, #12]
 80050d0:	6803      	ldr	r3, [r0, #0]
 80050d2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80050d4:	4718      	bx	r3

080050d6 <_ZThn4_N20ScreenGraphPresenter23DisplayChargingFinishedEv>:
    virtual void DisplayChargingFinished();
 80050d6:	f1a0 0004 	sub.w	r0, r0, #4
 80050da:	f7ff bff8 	b.w	80050ce <_ZN20ScreenGraphPresenter23DisplayChargingFinishedEv>

080050de <_ZN20ScreenGraphPresenterD0Ev>:
    virtual ~ScreenGraphPresenter() {};
 80050de:	b510      	push	{r4, lr}
 80050e0:	2110      	movs	r1, #16
 80050e2:	4604      	mov	r4, r0
 80050e4:	f01b fad0 	bl	8020688 <_ZdlPvj>
 80050e8:	4620      	mov	r0, r4
 80050ea:	bd10      	pop	{r4, pc}

080050ec <_ZThn4_N20ScreenGraphPresenterD0Ev>:
 80050ec:	f1a0 0004 	sub.w	r0, r0, #4
 80050f0:	e7f5      	b.n	80050de <_ZN20ScreenGraphPresenterD0Ev>
	...

080050f4 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView>:
ScreenGraphPresenter::ScreenGraphPresenter(ScreenGraphView& v)
 80050f4:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 80050f6:	2200      	movs	r2, #0
 80050f8:	6082      	str	r2, [r0, #8]
    : view(v)
 80050fa:	4a04      	ldr	r2, [pc, #16]	; (800510c <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView+0x18>)
 80050fc:	60c1      	str	r1, [r0, #12]
 80050fe:	f102 0408 	add.w	r4, r2, #8
 8005102:	3238      	adds	r2, #56	; 0x38
 8005104:	6004      	str	r4, [r0, #0]
 8005106:	6042      	str	r2, [r0, #4]
}
 8005108:	bd10      	pop	{r4, pc}
 800510a:	bf00      	nop
 800510c:	08023554 	.word	0x08023554

08005110 <_ZN15ScreenGraphViewD1Ev>:

class ScreenGraphView : public ScreenGraphViewBase
{
public:
    ScreenGraphView();
    virtual ~ScreenGraphView() {}
 8005110:	4770      	bx	lr

08005112 <_ZN15ScreenGraphView14tearDownScreenEv>:
}

void ScreenGraphView::tearDownScreen()
{
    ScreenGraphViewBase::tearDownScreen();
}
 8005112:	4770      	bx	lr

08005114 <_ZN15ScreenGraphView24DisplayChargingFinished2Ev>:
 8005114:	f500 5380 	add.w	r3, r0, #4096	; 0x1000
 8005118:	2201      	movs	r2, #1
#endif
}

void ScreenGraphView::DisplayChargingFinished2(){
	modalWindow1.setVisible(true);
	modalWindow1.invalidate();
 800511a:	f500 5096 	add.w	r0, r0, #4800	; 0x12c0
 800511e:	f883 22fd 	strb.w	r2, [r3, #765]	; 0x2fd
 8005122:	3018      	adds	r0, #24
 8005124:	f00c bf2b 	b.w	8011f7e <_ZNK8touchgfx8Drawable10invalidateEv>

08005128 <_ZN15ScreenGraphView8countMinEv>:
	Unicode::snprintf(textChargingTmeBuffer,TEXTCHARGINGTME_SIZE,"%02d:%02d:%02d\n",h,m,s);
	textChargingTme.invalidate();
#endif
}

float ScreenGraphView::countMin(){
 8005128:	b508      	push	{r3, lr}
#ifndef SIMULATOR
	float results= ladowarka.PomiaryCoSec[0]; //domyslna wartocs
 800512a:	4915      	ldr	r1, [pc, #84]	; (8005180 <_ZN15ScreenGraphView8countMinEv+0x58>)
float ScreenGraphView::countMin(){
 800512c:	ed2d 8b02 	vpush	{d8}
	float results= ladowarka.PomiaryCoSec[0]; //domyslna wartocs
 8005130:	ed91 0a00 	vldr	s0, [r1]
	for (int i=0;i<59;i++){
 8005134:	2200      	movs	r2, #0
		if ((ladowarka.PomiaryCoSec[i] < results) && ladowarka.PomiaryCoSec[i]!=0)  results=ladowarka.PomiaryCoSec[i];
 8005136:	f6a1 1178 	subw	r1, r1, #2424	; 0x978
 800513a:	f202 235e 	addw	r3, r2, #606	; 0x25e
 800513e:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8005142:	edd3 7a00 	vldr	s15, [r3]
 8005146:	eef4 7ac0 	vcmpe.f32	s15, s0
 800514a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800514e:	d508      	bpl.n	8005162 <_ZN15ScreenGraphView8countMinEv+0x3a>
 8005150:	edd3 7a00 	vldr	s15, [r3]
 8005154:	eef5 7a40 	vcmp.f32	s15, #0.0
 8005158:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800515c:	bf18      	it	ne
 800515e:	ed93 0a00 	vldrne	s0, [r3]
	for (int i=0;i<59;i++){
 8005162:	3201      	adds	r2, #1
 8005164:	2a3b      	cmp	r2, #59	; 0x3b
 8005166:	d1e8      	bne.n	800513a <_ZN15ScreenGraphView8countMinEv+0x12>
	}

	return (floor(results*100)/100);
 8005168:	ed9f 8a06 	vldr	s16, [pc, #24]	; 8005184 <_ZN15ScreenGraphView8countMinEv+0x5c>
  using ::floor;

#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  inline _GLIBCXX_CONSTEXPR float
  floor(float __x)
  { return __builtin_floorf(__x); }
 800516c:	ee20 0a08 	vmul.f32	s0, s0, s16
 8005170:	f01b faf4 	bl	802075c <floorf>
#else
	return 1.5;
#endif
}
 8005174:	ee80 0a08 	vdiv.f32	s0, s0, s16
 8005178:	ecbd 8b02 	vpop	{d8}
 800517c:	bd08      	pop	{r3, pc}
 800517e:	bf00      	nop
 8005180:	2000458c 	.word	0x2000458c
 8005184:	42c80000 	.word	0x42c80000

08005188 <_ZN15ScreenGraphView8countMaxEv>:
float ScreenGraphView::countMax(){
 8005188:	b508      	push	{r3, lr}
 800518a:	ed2d 8b02 	vpush	{d8}
#ifndef SIMULATOR
	float results= 0; //domyslna wartocs
 800518e:	ed9f 0a10 	vldr	s0, [pc, #64]	; 80051d0 <_ZN15ScreenGraphView8countMaxEv+0x48>
	for (int i=0;i<59;i++){
		if (ladowarka.PomiaryCoSec[i] > results)  results=ladowarka.PomiaryCoSec[i];
 8005192:	4910      	ldr	r1, [pc, #64]	; (80051d4 <_ZN15ScreenGraphView8countMaxEv+0x4c>)
	for (int i=0;i<59;i++){
 8005194:	2300      	movs	r3, #0
		if (ladowarka.PomiaryCoSec[i] > results)  results=ladowarka.PomiaryCoSec[i];
 8005196:	f203 225e 	addw	r2, r3, #606	; 0x25e
 800519a:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 800519e:	edd2 7a00 	vldr	s15, [r2]
 80051a2:	eef4 7ac0 	vcmpe.f32	s15, s0
 80051a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
	for (int i=0;i<59;i++){
 80051aa:	f103 0301 	add.w	r3, r3, #1
		if (ladowarka.PomiaryCoSec[i] > results)  results=ladowarka.PomiaryCoSec[i];
 80051ae:	bfc8      	it	gt
 80051b0:	ed92 0a00 	vldrgt	s0, [r2]
	for (int i=0;i<59;i++){
 80051b4:	2b3b      	cmp	r3, #59	; 0x3b
 80051b6:	d1ee      	bne.n	8005196 <_ZN15ScreenGraphView8countMaxEv+0xe>
	}

	return (ceil(results*100)/100);
 80051b8:	ed9f 8a07 	vldr	s16, [pc, #28]	; 80051d8 <_ZN15ScreenGraphView8countMaxEv+0x50>
  { return __builtin_ceilf(__x); }
 80051bc:	ee20 0a08 	vmul.f32	s0, s0, s16
 80051c0:	f01b fa8a 	bl	80206d8 <ceilf>


#else
	return 1.5;
#endif
}
 80051c4:	ee80 0a08 	vdiv.f32	s0, s0, s16
 80051c8:	ecbd 8b02 	vpop	{d8}
 80051cc:	bd08      	pop	{r3, pc}
 80051ce:	bf00      	nop
 80051d0:	00000000 	.word	0x00000000
 80051d4:	20003c14 	.word	0x20003c14
 80051d8:	42c80000 	.word	0x42c80000

080051dc <_ZN15ScreenGraphView19DisplayRunningTime2Ev>:
	sec=ladowarka.CzsasLadowaniaWSec;
 80051dc:	4b11      	ldr	r3, [pc, #68]	; (8005224 <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x48>)
void ScreenGraphView::DisplayRunningTime2(){
 80051de:	b513      	push	{r0, r1, r4, lr}
	sec=ladowarka.CzsasLadowaniaWSec;
 80051e0:	f8d3 2a78 	ldr.w	r2, [r3, #2680]	; 0xa78
	m = (sec -(3600*h))/60;
 80051e4:	4910      	ldr	r1, [pc, #64]	; (8005228 <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x4c>)
void ScreenGraphView::DisplayRunningTime2(){
 80051e6:	4604      	mov	r4, r0
	h = (sec/3600);
 80051e8:	f44f 6361 	mov.w	r3, #3600	; 0xe10
	s = (sec -(3600*h)-(m*60));
 80051ec:	f06f 003b 	mvn.w	r0, #59	; 0x3b
	h = (sec/3600);
 80051f0:	fb92 f3f3 	sdiv	r3, r2, r3
	m = (sec -(3600*h))/60;
 80051f4:	fb01 2203 	mla	r2, r1, r3, r2
 80051f8:	213c      	movs	r1, #60	; 0x3c
 80051fa:	fb92 f1f1 	sdiv	r1, r2, r1
	s = (sec -(3600*h)-(m*60));
 80051fe:	fb00 2201 	mla	r2, r0, r1, r2
	Unicode::snprintf(textChargingTmeBuffer,TEXTCHARGINGTME_SIZE,"%02d:%02d:%02d\n",h,m,s);
 8005202:	f504 50a2 	add.w	r0, r4, #5184	; 0x1440
 8005206:	e9cd 1200 	strd	r1, r2, [sp]
 800520a:	3010      	adds	r0, #16
 800520c:	4a07      	ldr	r2, [pc, #28]	; (800522c <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x50>)
 800520e:	210a      	movs	r1, #10
 8005210:	f00e fedc 	bl	8013fcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textChargingTme.invalidate();
 8005214:	f504 5092 	add.w	r0, r4, #4672	; 0x1240
}
 8005218:	b002      	add	sp, #8
 800521a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	textChargingTme.invalidate();
 800521e:	f00c beae 	b.w	8011f7e <_ZNK8touchgfx8Drawable10invalidateEv>
 8005222:	bf00      	nop
 8005224:	20003c14 	.word	0x20003c14
 8005228:	fffff1f0 	.word	0xfffff1f0
 800522c:	080235b0 	.word	0x080235b0

08005230 <_ZN15ScreenGraphViewD0Ev>:
 8005230:	b510      	push	{r4, lr}
 8005232:	f242 713c 	movw	r1, #10044	; 0x273c
 8005236:	4604      	mov	r4, r0
 8005238:	f01b fa26 	bl	8020688 <_ZdlPvj>
 800523c:	4620      	mov	r0, r4
 800523e:	bd10      	pop	{r4, pc}

08005240 <_ZN15ScreenGraphView11setupScreenEv>:
{
 8005240:	b510      	push	{r4, lr}
 8005242:	4604      	mov	r4, r0
    ScreenGraphViewBase::setupScreen();
 8005244:	f7fe fd69 	bl	8003d1a <_ZN19ScreenGraphViewBase11setupScreenEv>
        setIntervalScaled(AbstractDataGraph::float2scaled(interval, dataScale));
 8005248:	f504 5280 	add.w	r2, r4, #4096	; 0x1000
        const float fs = f * (float)scale;
 800524c:	edd2 7a43 	vldr	s15, [r2, #268]	; 0x10c
 8005250:	ed9f 6a90 	vldr	s12, [pc, #576]	; 8005494 <_ZN15ScreenGraphView11setupScreenEv+0x254>
 8005254:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8005258:	ee27 7a06 	vmul.f32	s14, s14, s12
        if (fs >= 0)
 800525c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8005260:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005264:	f2c0 809e 	blt.w	80053a4 <_ZN15ScreenGraphView11setupScreenEv+0x164>
            return (int)(fs + 0.5f);
 8005268:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800526c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8005270:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 8005274:	ee17 3a90 	vmov	r3, s15
        const float fs = f * (float)scale;
 8005278:	edd2 7a33 	vldr	s15, [r2, #204]	; 0xcc
 800527c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 * @return The absolute (non-negative) value of d.
 */
template <typename T>
T abs(T d)
{
    return (d < 0) ? -d : d;
 8005280:	2b00      	cmp	r3, #0
 8005282:	ee67 7a86 	vmul.f32	s15, s15, s12
 8005286:	bfb8      	it	lt
 8005288:	425b      	neglt	r3, r3
        if (fs >= 0)
 800528a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800528e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
        labelInterval = abs(interval);
 8005292:	f8c2 3110 	str.w	r3, [r2, #272]	; 0x110
 8005296:	f2c0 8099 	blt.w	80053cc <_ZN15ScreenGraphView11setupScreenEv+0x18c>
            return (int)(fs + 0.5f);
 800529a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800529e:	ee77 7a87 	vadd.f32	s15, s15, s14
 80052a2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80052a6:	ee17 3a90 	vmov	r3, s15
        const float fs = f * (float)scale;
 80052aa:	edd2 7a13 	vldr	s15, [r2, #76]	; 0x4c
 80052ae:	ed9f 7a7a 	vldr	s14, [pc, #488]	; 8005498 <_ZN15ScreenGraphView11setupScreenEv+0x258>
 80052b2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80052b6:	2b00      	cmp	r3, #0
 80052b8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80052bc:	bfb8      	it	lt
 80052be:	425b      	neglt	r3, r3
        if (fs >= 0)
 80052c0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80052c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
        gridInterval = abs(interval);
 80052c8:	f8c2 30d0 	str.w	r3, [r2, #208]	; 0xd0
 80052cc:	f2c0 8092 	blt.w	80053f4 <_ZN15ScreenGraphView11setupScreenEv+0x1b4>
            return (int)(fs + 0.5f);
 80052d0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80052d4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80052d8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80052dc:	ee17 3a90 	vmov	r3, s15
 80052e0:	2b00      	cmp	r3, #0
 80052e2:	bfb8      	it	lt
 80052e4:	425b      	neglt	r3, r3
 80052e6:	6513      	str	r3, [r2, #80]	; 0x50
        const float fs = f * (float)scale;
 80052e8:	f8d4 3d3c 	ldr.w	r3, [r4, #3388]	; 0xd3c
 80052ec:	ed9f 6a6b 	vldr	s12, [pc, #428]	; 800549c <_ZN15ScreenGraphView11setupScreenEv+0x25c>
 80052f0:	ee07 3a90 	vmov	s15, r3
 80052f4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80052f8:	ee27 7a06 	vmul.f32	s14, s14, s12
        if (fs >= 0)
 80052fc:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8005300:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005304:	f2c0 808a 	blt.w	800541c <_ZN15ScreenGraphView11setupScreenEv+0x1dc>
            return (int)(fs + 0.5f);
 8005308:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800530c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8005310:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 8005314:	ee17 3a90 	vmov	r3, s15
 8005318:	2b00      	cmp	r3, #0
 800531a:	bfb8      	it	lt
 800531c:	425b      	neglt	r3, r3
 800531e:	f8c4 3d40 	str.w	r3, [r4, #3392]	; 0xd40
        const float fs = f * (float)scale;
 8005322:	f8d4 3cb0 	ldr.w	r3, [r4, #3248]	; 0xcb0
 8005326:	ee07 3a90 	vmov	s15, r3
 800532a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800532e:	ee67 7a86 	vmul.f32	s15, s15, s12
        if (fs >= 0)
 8005332:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005336:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800533a:	f2c0 8083 	blt.w	8005444 <_ZN15ScreenGraphView11setupScreenEv+0x204>
            return (int)(fs + 0.5f);
 800533e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005342:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005346:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800534a:	ee17 3a90 	vmov	r3, s15
 800534e:	2b00      	cmp	r3, #0
 8005350:	bfb8      	it	lt
 8005352:	425b      	neglt	r3, r3
 8005354:	f8c4 3cb4 	str.w	r3, [r4, #3252]	; 0xcb4
        const float fs = f * (float)scale;
 8005358:	f8d4 3c30 	ldr.w	r3, [r4, #3120]	; 0xc30
 800535c:	ed9f 7a50 	vldr	s14, [pc, #320]	; 80054a0 <_ZN15ScreenGraphView11setupScreenEv+0x260>
 8005360:	ee07 3a90 	vmov	s15, r3
 8005364:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005368:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800536c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005370:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005374:	db7a      	blt.n	800546c <_ZN15ScreenGraphView11setupScreenEv+0x22c>
            return (int)(fs + 0.5f);
 8005376:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800537a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800537e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005382:	ee17 3a90 	vmov	r3, s15
 8005386:	2b00      	cmp	r3, #0
 8005388:	bfb8      	it	lt
 800538a:	425b      	neglt	r3, r3
     dynamicGraph1.invalidate();
 800538c:	f604 5058 	addw	r0, r4, #3416	; 0xd58
 8005390:	f8c4 3c34 	str.w	r3, [r4, #3124]	; 0xc34
 8005394:	f00c fdf3 	bl	8011f7e <_ZNK8touchgfx8Drawable10invalidateEv>
     dynamicGraph2.invalidate();
 8005398:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
}
 800539c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     dynamicGraph2.invalidate();
 80053a0:	f00c bded 	b.w	8011f7e <_ZNK8touchgfx8Drawable10invalidateEv>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80053a4:	eefd 6ac7 	vcvt.s32.f32	s13, s14
 80053a8:	eef8 7ae6 	vcvt.f32.s32	s15, s13
 80053ac:	ee16 3a90 	vmov	r3, s13
 80053b0:	ee37 7a67 	vsub.f32	s14, s14, s15
 80053b4:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 80053b8:	ee37 7a27 	vadd.f32	s14, s14, s15
 80053bc:	3b01      	subs	r3, #1
 80053be:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 80053c2:	ee17 1a10 	vmov	r1, s14
 80053c6:	4419      	add	r1, r3
 80053c8:	460b      	mov	r3, r1
 80053ca:	e755      	b.n	8005278 <_ZN15ScreenGraphView11setupScreenEv+0x38>
 80053cc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80053d0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80053d4:	ee17 3a10 	vmov	r3, s14
 80053d8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80053dc:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80053e0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80053e4:	3b01      	subs	r3, #1
 80053e6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80053ea:	ee17 1a90 	vmov	r1, s15
 80053ee:	4419      	add	r1, r3
 80053f0:	460b      	mov	r3, r1
 80053f2:	e75a      	b.n	80052aa <_ZN15ScreenGraphView11setupScreenEv+0x6a>
 80053f4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80053f8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80053fc:	ee17 3a10 	vmov	r3, s14
 8005400:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005404:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005408:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800540c:	3b01      	subs	r3, #1
 800540e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005412:	ee17 1a90 	vmov	r1, s15
 8005416:	4419      	add	r1, r3
 8005418:	460b      	mov	r3, r1
 800541a:	e761      	b.n	80052e0 <_ZN15ScreenGraphView11setupScreenEv+0xa0>
 800541c:	eefd 6ac7 	vcvt.s32.f32	s13, s14
 8005420:	eef8 7ae6 	vcvt.f32.s32	s15, s13
 8005424:	ee16 3a90 	vmov	r3, s13
 8005428:	ee37 7a67 	vsub.f32	s14, s14, s15
 800542c:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 8005430:	ee37 7a27 	vadd.f32	s14, s14, s15
 8005434:	3b01      	subs	r3, #1
 8005436:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 800543a:	ee17 2a10 	vmov	r2, s14
 800543e:	441a      	add	r2, r3
 8005440:	4613      	mov	r3, r2
 8005442:	e769      	b.n	8005318 <_ZN15ScreenGraphView11setupScreenEv+0xd8>
 8005444:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005448:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800544c:	ee17 3a10 	vmov	r3, s14
 8005450:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005454:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005458:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800545c:	3b01      	subs	r3, #1
 800545e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005462:	ee17 2a90 	vmov	r2, s15
 8005466:	441a      	add	r2, r3
 8005468:	4613      	mov	r3, r2
 800546a:	e770      	b.n	800534e <_ZN15ScreenGraphView11setupScreenEv+0x10e>
 800546c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005470:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005474:	ee17 3a10 	vmov	r3, s14
 8005478:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800547c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005480:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005484:	3b01      	subs	r3, #1
 8005486:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800548a:	ee17 2a90 	vmov	r2, s15
 800548e:	441a      	add	r2, r3
 8005490:	4613      	mov	r3, r2
 8005492:	e778      	b.n	8005386 <_ZN15ScreenGraphView11setupScreenEv+0x146>
 8005494:	3c23d70a 	.word	0x3c23d70a
 8005498:	3ba3d70a 	.word	0x3ba3d70a
 800549c:	3dcccccd 	.word	0x3dcccccd
 80054a0:	3d4ccccd 	.word	0x3d4ccccd

080054a4 <_ZN15ScreenGraphView20DisplayCurrentValue2Ev>:
void ScreenGraphView::DisplayCurrentValue2(){
 80054a4:	b513      	push	{r0, r1, r4, lr}
	Unicode::snprintfFloat(textChargingCurrentBuffer,TEXTCHARGINGCURRENT_SIZE,"%3f",ladowarka.ChargingCurrent);
 80054a6:	4b0a      	ldr	r3, [pc, #40]	; (80054d0 <_ZN15ScreenGraphView20DisplayCurrentValue2Ev+0x2c>)
 80054a8:	4a0a      	ldr	r2, [pc, #40]	; (80054d4 <_ZN15ScreenGraphView20DisplayCurrentValue2Ev+0x30>)
 80054aa:	681b      	ldr	r3, [r3, #0]
 80054ac:	9301      	str	r3, [sp, #4]
void ScreenGraphView::DisplayCurrentValue2(){
 80054ae:	4604      	mov	r4, r0
 80054b0:	2104      	movs	r1, #4
 80054b2:	f500 50a3 	add.w	r0, r0, #5216	; 0x1460
 80054b6:	ab01      	add	r3, sp, #4
 80054b8:	4408      	add	r0, r1
 80054ba:	f00e ff43 	bl	8014344 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	textChargingCurrent.invalidate();
 80054be:	f504 5094 	add.w	r0, r4, #4736	; 0x1280
 80054c2:	300c      	adds	r0, #12
}
 80054c4:	b002      	add	sp, #8
 80054c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	textChargingCurrent.invalidate();
 80054ca:	f00c bd58 	b.w	8011f7e <_ZNK8touchgfx8Drawable10invalidateEv>
 80054ce:	bf00      	nop
 80054d0:	20004690 	.word	0x20004690
 80054d4:	080235c0 	.word	0x080235c0

080054d8 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev>:
void ScreenGraphView::DisplayLastAndMaxVlt2(){
 80054d8:	b537      	push	{r0, r1, r2, r4, r5, lr}
	Unicode::snprintfFloat(txtLastValueBuffer,TXTLASTVALUE_SIZE,"%.3f",ladowarka.BatteryVoltage);
 80054da:	4d11      	ldr	r5, [pc, #68]	; (8005520 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x48>)
 80054dc:	4a11      	ldr	r2, [pc, #68]	; (8005524 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x4c>)
 80054de:	682b      	ldr	r3, [r5, #0]
 80054e0:	9301      	str	r3, [sp, #4]
void ScreenGraphView::DisplayLastAndMaxVlt2(){
 80054e2:	4604      	mov	r4, r0
 80054e4:	f500 50a1 	add.w	r0, r0, #5152	; 0x1420
 80054e8:	ab01      	add	r3, sp, #4
 80054ea:	2108      	movs	r1, #8
 80054ec:	3010      	adds	r0, #16
 80054ee:	f00e ff29 	bl	8014344 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	Unicode::snprintfFloat(txtMaxValueBuffer,TXTMAXVALUE_SIZE,"%.3f",ladowarka.MaxBatteryVoltage);
 80054f2:	686b      	ldr	r3, [r5, #4]
 80054f4:	4a0b      	ldr	r2, [pc, #44]	; (8005524 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x4c>)
 80054f6:	9301      	str	r3, [sp, #4]
 80054f8:	2108      	movs	r1, #8
 80054fa:	ab01      	add	r3, sp, #4
 80054fc:	f504 50a2 	add.w	r0, r4, #5184	; 0x1440
 8005500:	f00e ff20 	bl	8014344 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	txtMaxValue.invalidate();
 8005504:	f504 508f 	add.w	r0, r4, #4576	; 0x11e0
 8005508:	3014      	adds	r0, #20
 800550a:	f00c fd38 	bl	8011f7e <_ZNK8touchgfx8Drawable10invalidateEv>
	txtLastValue.invalidate();
 800550e:	f504 508d 	add.w	r0, r4, #4512	; 0x11a0
 8005512:	3008      	adds	r0, #8
}
 8005514:	b003      	add	sp, #12
 8005516:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	txtLastValue.invalidate();
 800551a:	f00c bd30 	b.w	8011f7e <_ZNK8touchgfx8Drawable10invalidateEv>
 800551e:	bf00      	nop
 8005520:	20003c14 	.word	0x20003c14
 8005524:	08023503 	.word	0x08023503

08005528 <_ZN15ScreenGraphView10DrawPoint2Ev>:
void ScreenGraphView::DrawPoint2(){
 8005528:	b538      	push	{r3, r4, r5, lr}
	dynamicGraph1.addDataPoint(ladowarka.BatteryVoltage);
 800552a:	4b24      	ldr	r3, [pc, #144]	; (80055bc <_ZN15ScreenGraphView10DrawPoint2Ev+0x94>)
 800552c:	ed93 7a00 	vldr	s14, [r3]
        const float fs = f * (float)scale;
 8005530:	f8d0 3d8c 	ldr.w	r3, [r0, #3468]	; 0xd8c
 8005534:	ee07 3a90 	vmov	s15, r3
 8005538:	eef8 7ae7 	vcvt.f32.s32	s15, s15
void ScreenGraphView::DrawPoint2(){
 800553c:	ed2d 8b02 	vpush	{d8}
 8005540:	ee67 7a87 	vmul.f32	s15, s15, s14
 8005544:	4604      	mov	r4, r0
        if (fs >= 0)
 8005546:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800554a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
	dynamicGraph1.addDataPoint(ladowarka.BatteryVoltage);
 800554e:	f600 5558 	addw	r5, r0, #3416	; 0xd58
 8005552:	db1e      	blt.n	8005592 <_ZN15ScreenGraphView10DrawPoint2Ev+0x6a>
            return (int)(fs + 0.5f);
 8005554:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005558:	ee77 7a87 	vadd.f32	s15, s15, s14
 800555c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005560:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005564:	4628      	mov	r0, r5
 8005566:	f007 f92d 	bl	800c7c4 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
    dynamicGraph1.setGraphRangeY(countMin(), countMax());
 800556a:	6823      	ldr	r3, [r4, #0]
 800556c:	4620      	mov	r0, r4
 800556e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8005570:	4798      	blx	r3
 8005572:	6823      	ldr	r3, [r4, #0]
 8005574:	4620      	mov	r0, r4
 8005576:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8005578:	eeb0 8a40 	vmov.f32	s16, s0
 800557c:	4798      	blx	r3
 800557e:	4628      	mov	r0, r5
 8005580:	eef0 0a40 	vmov.f32	s1, s0
 8005584:	eeb0 0a48 	vmov.f32	s0, s16
 8005588:	f7fe f888 	bl	800369c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
}
 800558c:	ecbd 8b02 	vpop	{d8}
 8005590:	bd38      	pop	{r3, r4, r5, pc}
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8005592:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005596:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800559a:	ee17 3a10 	vmov	r3, s14
 800559e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80055a2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80055a6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80055aa:	1e59      	subs	r1, r3, #1
 80055ac:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80055b0:	ee17 3a90 	vmov	r3, s15
 80055b4:	440b      	add	r3, r1
 80055b6:	4619      	mov	r1, r3
 80055b8:	e7d4      	b.n	8005564 <_ZN15ScreenGraphView10DrawPoint2Ev+0x3c>
 80055ba:	bf00      	nop
 80055bc:	20003c14 	.word	0x20003c14

080055c0 <_ZN15ScreenGraphView13DrawPoint2MinEv>:
void ScreenGraphView::DrawPoint2Min(){
 80055c0:	b570      	push	{r4, r5, r6, lr}
	dynamicGraph2.addDataPoint(ladowarka.NapiecieBaterii[ladowarka.CzsasLadowaniaWSec/60]);
 80055c2:	4d52      	ldr	r5, [pc, #328]	; (800570c <_ZN15ScreenGraphView13DrawPoint2MinEv+0x14c>)
        const float fs = f * (float)scale;
 80055c4:	edd0 7a40 	vldr	s15, [r0, #256]	; 0x100
 80055c8:	f8d5 3a78 	ldr.w	r3, [r5, #2680]	; 0xa78
 80055cc:	223c      	movs	r2, #60	; 0x3c
 80055ce:	fb93 f3f2 	sdiv	r3, r3, r2
 80055d2:	3306      	adds	r3, #6
 80055d4:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 80055d8:	ed93 7a00 	vldr	s14, [r3]
 80055dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
void ScreenGraphView::DrawPoint2Min(){
 80055e0:	ed2d 8b02 	vpush	{d8}
 80055e4:	ee67 7a87 	vmul.f32	s15, s15, s14
 80055e8:	4604      	mov	r4, r0
        if (fs >= 0)
 80055ea:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80055ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
	dynamicGraph2.addDataPoint(ladowarka.NapiecieBaterii[ladowarka.CzsasLadowaniaWSec/60]);
 80055f2:	f100 06cc 	add.w	r6, r0, #204	; 0xcc
 80055f6:	db74      	blt.n	80056e2 <_ZN15ScreenGraphView13DrawPoint2MinEv+0x122>
            return (int)(fs + 0.5f);
 80055f8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80055fc:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005600:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005604:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005608:	4630      	mov	r0, r6
 800560a:	f007 f8db 	bl	800c7c4 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
	    dynamicGraph2.setGraphRangeY((floor(ladowarka.NapiecieBaterii[0]*10)/10),(ceil(ladowarka.MaxBatteryVoltage*10)/10) );
 800560e:	ed95 0a06 	vldr	s0, [r5, #24]
 8005612:	eeb2 8a04 	vmov.f32	s16, #36	; 0x41200000  10.0
  { return __builtin_floorf(__x); }
 8005616:	ee20 0a08 	vmul.f32	s0, s0, s16
 800561a:	f01b f89f 	bl	802075c <floorf>
 800561e:	eef0 8a40 	vmov.f32	s17, s0
 8005622:	ed95 0a01 	vldr	s0, [r5, #4]
  { return __builtin_ceilf(__x); }
 8005626:	ee20 0a08 	vmul.f32	s0, s0, s16
 800562a:	f01b f855 	bl	80206d8 <ceilf>
 800562e:	4630      	mov	r0, r6
 8005630:	eec0 0a08 	vdiv.f32	s1, s0, s16
 8005634:	ee88 0a88 	vdiv.f32	s0, s17, s16
 8005638:	f7fe f830 	bl	800369c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
	if (ladowarka.CzsasLadowaniaWSec>9*60 && ladowarka.CzsasLadowaniaWSec <59*60){ //jesli czas jest >9min i <59 min
 800563c:	f8d5 3a78 	ldr.w	r3, [r5, #2680]	; 0xa78
 8005640:	f5b3 7f07 	cmp.w	r3, #540	; 0x21c
 8005644:	dd23      	ble.n	800568e <_ZN15ScreenGraphView13DrawPoint2MinEv+0xce>
 8005646:	f8d5 2a78 	ldr.w	r2, [r5, #2680]	; 0xa78
 800564a:	f640 53d3 	movw	r3, #3539	; 0xdd3
 800564e:	429a      	cmp	r2, r3
 8005650:	dc1d      	bgt.n	800568e <_ZN15ScreenGraphView13DrawPoint2MinEv+0xce>
		dynamicGraph2.setGraphRangeX(0,60);
 8005652:	223c      	movs	r2, #60	; 0x3c
 8005654:	2100      	movs	r1, #0
 8005656:	4630      	mov	r0, r6
 8005658:	f7fd ff8a 	bl	8003570 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
        setIntervalScaled(abs(interval) * dataScale);
 800565c:	f8d4 2c70 	ldr.w	r2, [r4, #3184]	; 0xc70
        return i * scale;
 8005660:	f8d4 3cf0 	ldr.w	r3, [r4, #3312]	; 0xcf0
 8005664:	210a      	movs	r1, #10
 8005666:	434a      	muls	r2, r1
 8005668:	2a00      	cmp	r2, #0
 800566a:	bfb8      	it	lt
 800566c:	4252      	neglt	r2, r2
        gridInterval = abs(interval);
 800566e:	f8c4 2c74 	str.w	r2, [r4, #3188]	; 0xc74
        setIntervalScaled(abs(interval) * dataScale);
 8005672:	f8d4 2bf0 	ldr.w	r2, [r4, #3056]	; 0xbf0
 8005676:	0052      	lsls	r2, r2, #1
 8005678:	434b      	muls	r3, r1
 800567a:	2a00      	cmp	r2, #0
 800567c:	bfb8      	it	lt
 800567e:	4252      	neglt	r2, r2
 8005680:	2b00      	cmp	r3, #0
 8005682:	bfb8      	it	lt
 8005684:	425b      	neglt	r3, r3
        gridInterval = abs(interval);
 8005686:	f8c4 2bf4 	str.w	r2, [r4, #3060]	; 0xbf4
 800568a:	f8c4 3cf4 	str.w	r3, [r4, #3316]	; 0xcf4
	if (ladowarka.CzsasLadowaniaWSec >59*60){ //jesli czas jest >59 min
 800568e:	f8d5 2a78 	ldr.w	r2, [r5, #2680]	; 0xa78
 8005692:	f640 53d4 	movw	r3, #3540	; 0xdd4
 8005696:	429a      	cmp	r2, r3
 8005698:	dd20      	ble.n	80056dc <_ZN15ScreenGraphView13DrawPoint2MinEv+0x11c>
			dynamicGraph2.setGraphRangeX(0,ladowarka.ChargingTime*60);
 800569a:	68ea      	ldr	r2, [r5, #12]
 800569c:	253c      	movs	r5, #60	; 0x3c
 800569e:	436a      	muls	r2, r5
 80056a0:	2100      	movs	r1, #0
 80056a2:	4630      	mov	r0, r6
 80056a4:	f7fd ff64 	bl	8003570 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
        setIntervalScaled(abs(interval) * dataScale);
 80056a8:	f8d4 2c70 	ldr.w	r2, [r4, #3184]	; 0xc70
 80056ac:	436a      	muls	r2, r5
 80056ae:	2a00      	cmp	r2, #0
 80056b0:	bfb8      	it	lt
 80056b2:	4252      	neglt	r2, r2
        gridInterval = abs(interval);
 80056b4:	f8c4 2c74 	str.w	r2, [r4, #3188]	; 0xc74
        setIntervalScaled(abs(interval) * dataScale);
 80056b8:	f8d4 2bf0 	ldr.w	r2, [r4, #3056]	; 0xbf0
 80056bc:	230a      	movs	r3, #10
 80056be:	435a      	muls	r2, r3
 80056c0:	f8d4 3cf0 	ldr.w	r3, [r4, #3312]	; 0xcf0
 80056c4:	2a00      	cmp	r2, #0
 80056c6:	fb05 f303 	mul.w	r3, r5, r3
 80056ca:	bfb8      	it	lt
 80056cc:	4252      	neglt	r2, r2
 80056ce:	2b00      	cmp	r3, #0
 80056d0:	bfb8      	it	lt
 80056d2:	425b      	neglt	r3, r3
        gridInterval = abs(interval);
 80056d4:	f8c4 2bf4 	str.w	r2, [r4, #3060]	; 0xbf4
 80056d8:	f8c4 3cf4 	str.w	r3, [r4, #3316]	; 0xcf4
}
 80056dc:	ecbd 8b02 	vpop	{d8}
 80056e0:	bd70      	pop	{r4, r5, r6, pc}
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80056e2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80056e6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80056ea:	ee17 3a10 	vmov	r3, s14
 80056ee:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80056f2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80056f6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80056fa:	1e59      	subs	r1, r3, #1
 80056fc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005700:	ee17 3a90 	vmov	r3, s15
 8005704:	440b      	add	r3, r1
 8005706:	4619      	mov	r1, r3
 8005708:	e77e      	b.n	8005608 <_ZN15ScreenGraphView13DrawPoint2MinEv+0x48>
 800570a:	bf00      	nop
 800570c:	20003c14 	.word	0x20003c14

08005710 <_ZN15ScreenGraphViewC1Ev>:
ScreenGraphView::ScreenGraphView()
 8005710:	b510      	push	{r4, lr}
 8005712:	4604      	mov	r4, r0
 8005714:	f7fe fcae 	bl	8004074 <_ZN19ScreenGraphViewBaseC1Ev>
 8005718:	4b01      	ldr	r3, [pc, #4]	; (8005720 <_ZN15ScreenGraphViewC1Ev+0x10>)
 800571a:	6023      	str	r3, [r4, #0]
}
 800571c:	4620      	mov	r0, r4
 800571e:	bd10      	pop	{r4, pc}
 8005720:	080235cc 	.word	0x080235cc

08005724 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8005724:	20f0      	movs	r0, #240	; 0xf0
 8005726:	4770      	bx	lr

08005728 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8005728:	f44f 70a0 	mov.w	r0, #320	; 0x140
 800572c:	4770      	bx	lr

0800572e <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 800572e:	2029      	movs	r0, #41	; 0x29
 8005730:	f7fc b96a 	b.w	8001a08 <LCD_IO_WriteReg>

08005734 <ili9341_DisplayOff>:
 8005734:	2028      	movs	r0, #40	; 0x28
 8005736:	f7fc b967 	b.w	8001a08 <LCD_IO_WriteReg>

0800573a <ili9341_Init>:
{
 800573a:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800573c:	f7fc f938 	bl	80019b0 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8005740:	20ca      	movs	r0, #202	; 0xca
 8005742:	f7fc f961 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005746:	20c3      	movs	r0, #195	; 0xc3
 8005748:	f7fc f942 	bl	80019d0 <LCD_IO_WriteData>
 800574c:	2008      	movs	r0, #8
 800574e:	f7fc f93f 	bl	80019d0 <LCD_IO_WriteData>
 8005752:	2050      	movs	r0, #80	; 0x50
 8005754:	f7fc f93c 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005758:	20cf      	movs	r0, #207	; 0xcf
 800575a:	f7fc f955 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800575e:	2000      	movs	r0, #0
 8005760:	f7fc f936 	bl	80019d0 <LCD_IO_WriteData>
 8005764:	20c1      	movs	r0, #193	; 0xc1
 8005766:	f7fc f933 	bl	80019d0 <LCD_IO_WriteData>
 800576a:	2030      	movs	r0, #48	; 0x30
 800576c:	f7fc f930 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005770:	20ed      	movs	r0, #237	; 0xed
 8005772:	f7fc f949 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005776:	2064      	movs	r0, #100	; 0x64
 8005778:	f7fc f92a 	bl	80019d0 <LCD_IO_WriteData>
 800577c:	2003      	movs	r0, #3
 800577e:	f7fc f927 	bl	80019d0 <LCD_IO_WriteData>
 8005782:	2012      	movs	r0, #18
 8005784:	f7fc f924 	bl	80019d0 <LCD_IO_WriteData>
 8005788:	2081      	movs	r0, #129	; 0x81
 800578a:	f7fc f921 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800578e:	20e8      	movs	r0, #232	; 0xe8
 8005790:	f7fc f93a 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005794:	2085      	movs	r0, #133	; 0x85
 8005796:	f7fc f91b 	bl	80019d0 <LCD_IO_WriteData>
 800579a:	2000      	movs	r0, #0
 800579c:	f7fc f918 	bl	80019d0 <LCD_IO_WriteData>
 80057a0:	2078      	movs	r0, #120	; 0x78
 80057a2:	f7fc f915 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80057a6:	20cb      	movs	r0, #203	; 0xcb
 80057a8:	f7fc f92e 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80057ac:	2039      	movs	r0, #57	; 0x39
 80057ae:	f7fc f90f 	bl	80019d0 <LCD_IO_WriteData>
 80057b2:	202c      	movs	r0, #44	; 0x2c
 80057b4:	f7fc f90c 	bl	80019d0 <LCD_IO_WriteData>
 80057b8:	2000      	movs	r0, #0
 80057ba:	f7fc f909 	bl	80019d0 <LCD_IO_WriteData>
 80057be:	2034      	movs	r0, #52	; 0x34
 80057c0:	f7fc f906 	bl	80019d0 <LCD_IO_WriteData>
 80057c4:	2002      	movs	r0, #2
 80057c6:	f7fc f903 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80057ca:	20f7      	movs	r0, #247	; 0xf7
 80057cc:	f7fc f91c 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80057d0:	2020      	movs	r0, #32
 80057d2:	f7fc f8fd 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80057d6:	20ea      	movs	r0, #234	; 0xea
 80057d8:	f7fc f916 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80057dc:	2000      	movs	r0, #0
 80057de:	f7fc f8f7 	bl	80019d0 <LCD_IO_WriteData>
 80057e2:	2000      	movs	r0, #0
 80057e4:	f7fc f8f4 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80057e8:	20b1      	movs	r0, #177	; 0xb1
 80057ea:	f7fc f90d 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80057ee:	2000      	movs	r0, #0
 80057f0:	f7fc f8ee 	bl	80019d0 <LCD_IO_WriteData>
 80057f4:	201b      	movs	r0, #27
 80057f6:	f7fc f8eb 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80057fa:	20b6      	movs	r0, #182	; 0xb6
 80057fc:	f7fc f904 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005800:	200a      	movs	r0, #10
 8005802:	f7fc f8e5 	bl	80019d0 <LCD_IO_WriteData>
 8005806:	20a2      	movs	r0, #162	; 0xa2
 8005808:	f7fc f8e2 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800580c:	20c0      	movs	r0, #192	; 0xc0
 800580e:	f7fc f8fb 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005812:	2010      	movs	r0, #16
 8005814:	f7fc f8dc 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005818:	20c1      	movs	r0, #193	; 0xc1
 800581a:	f7fc f8f5 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800581e:	2010      	movs	r0, #16
 8005820:	f7fc f8d6 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005824:	20c5      	movs	r0, #197	; 0xc5
 8005826:	f7fc f8ef 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800582a:	2045      	movs	r0, #69	; 0x45
 800582c:	f7fc f8d0 	bl	80019d0 <LCD_IO_WriteData>
 8005830:	2015      	movs	r0, #21
 8005832:	f7fc f8cd 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005836:	20c7      	movs	r0, #199	; 0xc7
 8005838:	f7fc f8e6 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800583c:	2090      	movs	r0, #144	; 0x90
 800583e:	f7fc f8c7 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005842:	2036      	movs	r0, #54	; 0x36
 8005844:	f7fc f8e0 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005848:	20c8      	movs	r0, #200	; 0xc8
 800584a:	f7fc f8c1 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800584e:	20f2      	movs	r0, #242	; 0xf2
 8005850:	f7fc f8da 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005854:	2000      	movs	r0, #0
 8005856:	f7fc f8bb 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800585a:	20b0      	movs	r0, #176	; 0xb0
 800585c:	f7fc f8d4 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005860:	20c2      	movs	r0, #194	; 0xc2
 8005862:	f7fc f8b5 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005866:	20b6      	movs	r0, #182	; 0xb6
 8005868:	f7fc f8ce 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800586c:	200a      	movs	r0, #10
 800586e:	f7fc f8af 	bl	80019d0 <LCD_IO_WriteData>
 8005872:	20a7      	movs	r0, #167	; 0xa7
 8005874:	f7fc f8ac 	bl	80019d0 <LCD_IO_WriteData>
 8005878:	2027      	movs	r0, #39	; 0x27
 800587a:	f7fc f8a9 	bl	80019d0 <LCD_IO_WriteData>
 800587e:	2004      	movs	r0, #4
 8005880:	f7fc f8a6 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005884:	202a      	movs	r0, #42	; 0x2a
 8005886:	f7fc f8bf 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800588a:	2000      	movs	r0, #0
 800588c:	f7fc f8a0 	bl	80019d0 <LCD_IO_WriteData>
 8005890:	2000      	movs	r0, #0
 8005892:	f7fc f89d 	bl	80019d0 <LCD_IO_WriteData>
 8005896:	2000      	movs	r0, #0
 8005898:	f7fc f89a 	bl	80019d0 <LCD_IO_WriteData>
 800589c:	20ef      	movs	r0, #239	; 0xef
 800589e:	f7fc f897 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80058a2:	202b      	movs	r0, #43	; 0x2b
 80058a4:	f7fc f8b0 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80058a8:	2000      	movs	r0, #0
 80058aa:	f7fc f891 	bl	80019d0 <LCD_IO_WriteData>
 80058ae:	2000      	movs	r0, #0
 80058b0:	f7fc f88e 	bl	80019d0 <LCD_IO_WriteData>
 80058b4:	2001      	movs	r0, #1
 80058b6:	f7fc f88b 	bl	80019d0 <LCD_IO_WriteData>
 80058ba:	203f      	movs	r0, #63	; 0x3f
 80058bc:	f7fc f888 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80058c0:	20f6      	movs	r0, #246	; 0xf6
 80058c2:	f7fc f8a1 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80058c6:	2001      	movs	r0, #1
 80058c8:	f7fc f882 	bl	80019d0 <LCD_IO_WriteData>
 80058cc:	2000      	movs	r0, #0
 80058ce:	f7fc f87f 	bl	80019d0 <LCD_IO_WriteData>
 80058d2:	2006      	movs	r0, #6
 80058d4:	f7fc f87c 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80058d8:	202c      	movs	r0, #44	; 0x2c
 80058da:	f7fc f895 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_Delay(200);
 80058de:	20c8      	movs	r0, #200	; 0xc8
 80058e0:	f7fc f8e0 	bl	8001aa4 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80058e4:	2026      	movs	r0, #38	; 0x26
 80058e6:	f7fc f88f 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80058ea:	2001      	movs	r0, #1
 80058ec:	f7fc f870 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80058f0:	20e0      	movs	r0, #224	; 0xe0
 80058f2:	f7fc f889 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80058f6:	200f      	movs	r0, #15
 80058f8:	f7fc f86a 	bl	80019d0 <LCD_IO_WriteData>
 80058fc:	2029      	movs	r0, #41	; 0x29
 80058fe:	f7fc f867 	bl	80019d0 <LCD_IO_WriteData>
 8005902:	2024      	movs	r0, #36	; 0x24
 8005904:	f7fc f864 	bl	80019d0 <LCD_IO_WriteData>
 8005908:	200c      	movs	r0, #12
 800590a:	f7fc f861 	bl	80019d0 <LCD_IO_WriteData>
 800590e:	200e      	movs	r0, #14
 8005910:	f7fc f85e 	bl	80019d0 <LCD_IO_WriteData>
 8005914:	2009      	movs	r0, #9
 8005916:	f7fc f85b 	bl	80019d0 <LCD_IO_WriteData>
 800591a:	204e      	movs	r0, #78	; 0x4e
 800591c:	f7fc f858 	bl	80019d0 <LCD_IO_WriteData>
 8005920:	2078      	movs	r0, #120	; 0x78
 8005922:	f7fc f855 	bl	80019d0 <LCD_IO_WriteData>
 8005926:	203c      	movs	r0, #60	; 0x3c
 8005928:	f7fc f852 	bl	80019d0 <LCD_IO_WriteData>
 800592c:	2009      	movs	r0, #9
 800592e:	f7fc f84f 	bl	80019d0 <LCD_IO_WriteData>
 8005932:	2013      	movs	r0, #19
 8005934:	f7fc f84c 	bl	80019d0 <LCD_IO_WriteData>
 8005938:	2005      	movs	r0, #5
 800593a:	f7fc f849 	bl	80019d0 <LCD_IO_WriteData>
 800593e:	2017      	movs	r0, #23
 8005940:	f7fc f846 	bl	80019d0 <LCD_IO_WriteData>
 8005944:	2011      	movs	r0, #17
 8005946:	f7fc f843 	bl	80019d0 <LCD_IO_WriteData>
 800594a:	2000      	movs	r0, #0
 800594c:	f7fc f840 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005950:	20e1      	movs	r0, #225	; 0xe1
 8005952:	f7fc f859 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005956:	2000      	movs	r0, #0
 8005958:	f7fc f83a 	bl	80019d0 <LCD_IO_WriteData>
 800595c:	2016      	movs	r0, #22
 800595e:	f7fc f837 	bl	80019d0 <LCD_IO_WriteData>
 8005962:	201b      	movs	r0, #27
 8005964:	f7fc f834 	bl	80019d0 <LCD_IO_WriteData>
 8005968:	2004      	movs	r0, #4
 800596a:	f7fc f831 	bl	80019d0 <LCD_IO_WriteData>
 800596e:	2011      	movs	r0, #17
 8005970:	f7fc f82e 	bl	80019d0 <LCD_IO_WriteData>
 8005974:	2007      	movs	r0, #7
 8005976:	f7fc f82b 	bl	80019d0 <LCD_IO_WriteData>
 800597a:	2031      	movs	r0, #49	; 0x31
 800597c:	f7fc f828 	bl	80019d0 <LCD_IO_WriteData>
 8005980:	2033      	movs	r0, #51	; 0x33
 8005982:	f7fc f825 	bl	80019d0 <LCD_IO_WriteData>
 8005986:	2042      	movs	r0, #66	; 0x42
 8005988:	f7fc f822 	bl	80019d0 <LCD_IO_WriteData>
 800598c:	2005      	movs	r0, #5
 800598e:	f7fc f81f 	bl	80019d0 <LCD_IO_WriteData>
 8005992:	200c      	movs	r0, #12
 8005994:	f7fc f81c 	bl	80019d0 <LCD_IO_WriteData>
 8005998:	200a      	movs	r0, #10
 800599a:	f7fc f819 	bl	80019d0 <LCD_IO_WriteData>
 800599e:	2028      	movs	r0, #40	; 0x28
 80059a0:	f7fc f816 	bl	80019d0 <LCD_IO_WriteData>
 80059a4:	202f      	movs	r0, #47	; 0x2f
 80059a6:	f7fc f813 	bl	80019d0 <LCD_IO_WriteData>
 80059aa:	200f      	movs	r0, #15
 80059ac:	f7fc f810 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80059b0:	2011      	movs	r0, #17
 80059b2:	f7fc f829 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_Delay(200);
 80059b6:	20c8      	movs	r0, #200	; 0xc8
 80059b8:	f7fc f874 	bl	8001aa4 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80059bc:	2029      	movs	r0, #41	; 0x29
 80059be:	f7fc f823 	bl	8001a08 <LCD_IO_WriteReg>
}
 80059c2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 80059c6:	202c      	movs	r0, #44	; 0x2c
 80059c8:	f7fc b81e 	b.w	8001a08 <LCD_IO_WriteReg>

080059cc <ili9341_ReadID>:
{
 80059cc:	b508      	push	{r3, lr}
  LCD_IO_Init();
 80059ce:	f7fb ffef 	bl	80019b0 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 80059d2:	2103      	movs	r1, #3
 80059d4:	20d3      	movs	r0, #211	; 0xd3
 80059d6:	f7fc f833 	bl	8001a40 <LCD_IO_ReadData>
}
 80059da:	b280      	uxth	r0, r0
 80059dc:	bd08      	pop	{r3, pc}

080059de <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 80059de:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 80059e0:	b2c4      	uxtb	r4, r0
 80059e2:	2202      	movs	r2, #2
 80059e4:	2103      	movs	r1, #3
 80059e6:	4620      	mov	r0, r4
 80059e8:	f7fb ff98 	bl	800191c <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 80059ec:	200a      	movs	r0, #10
 80059ee:	f7fb ffdd 	bl	80019ac <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 80059f2:	4620      	mov	r0, r4
 80059f4:	2200      	movs	r2, #0
 80059f6:	2103      	movs	r1, #3
 80059f8:	f7fb ff90 	bl	800191c <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 80059fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8005a00:	2002      	movs	r0, #2
 8005a02:	f7fb bfd3 	b.w	80019ac <IOE_Delay>

08005a06 <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 8005a06:	b538      	push	{r3, r4, r5, lr}
 8005a08:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005a0a:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 8005a0c:	f7fb ff84 	bl	8001918 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005a10:	2100      	movs	r1, #0
 8005a12:	4620      	mov	r0, r4
 8005a14:	f7fb ff9a 	bl	800194c <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8005a18:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005a1a:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8005a1c:	4620      	mov	r0, r4
 8005a1e:	f7fb ff95 	bl	800194c <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005a22:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 8005a26:	b280      	uxth	r0, r0
 8005a28:	bd38      	pop	{r3, r4, r5, pc}

08005a2a <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8005a2a:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8005a2c:	b2c4      	uxtb	r4, r0
 8005a2e:	2140      	movs	r1, #64	; 0x40
 8005a30:	4620      	mov	r0, r4
 8005a32:	f7fb ff8b 	bl	800194c <IOE_Read>
  
  if(state > 0)
 8005a36:	0603      	lsls	r3, r0, #24
 8005a38:	d507      	bpl.n	8005a4a <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8005a3a:	214c      	movs	r1, #76	; 0x4c
 8005a3c:	4620      	mov	r0, r4
 8005a3e:	f7fb ff85 	bl	800194c <IOE_Read>
    {
      ret = 1;
 8005a42:	3800      	subs	r0, #0
 8005a44:	bf18      	it	ne
 8005a46:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 8005a48:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005a4a:	2201      	movs	r2, #1
 8005a4c:	214b      	movs	r1, #75	; 0x4b
 8005a4e:	4620      	mov	r0, r4
 8005a50:	f7fb ff64 	bl	800191c <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8005a54:	4620      	mov	r0, r4
 8005a56:	2200      	movs	r2, #0
 8005a58:	214b      	movs	r1, #75	; 0x4b
 8005a5a:	f7fb ff5f 	bl	800191c <IOE_Write>
  uint8_t ret = 0;
 8005a5e:	2000      	movs	r0, #0
 8005a60:	e7f2      	b.n	8005a48 <stmpe811_TS_DetectTouch+0x1e>

08005a62 <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 8005a62:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8005a64:	2304      	movs	r3, #4
 8005a66:	b2c4      	uxtb	r4, r0
{
 8005a68:	460e      	mov	r6, r1
 8005a6a:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8005a6c:	21d7      	movs	r1, #215	; 0xd7
 8005a6e:	eb0d 0203 	add.w	r2, sp, r3
 8005a72:	4620      	mov	r0, r4
 8005a74:	f7fb ff84 	bl	8001980 <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8005a78:	9b01      	ldr	r3, [sp, #4]
 8005a7a:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8005a7c:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8005a7e:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8005a82:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005a84:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8005a86:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005a88:	2201      	movs	r2, #1
 8005a8a:	214b      	movs	r1, #75	; 0x4b
 8005a8c:	f7fb ff46 	bl	800191c <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8005a90:	2200      	movs	r2, #0
 8005a92:	214b      	movs	r1, #75	; 0x4b
 8005a94:	4620      	mov	r0, r4
 8005a96:	f7fb ff41 	bl	800191c <IOE_Write>
}
 8005a9a:	b002      	add	sp, #8
 8005a9c:	bd70      	pop	{r4, r5, r6, pc}
	...

08005aa0 <stmpe811_Init>:
{
 8005aa0:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8005aa2:	4b0a      	ldr	r3, [pc, #40]	; (8005acc <stmpe811_Init+0x2c>)
 8005aa4:	781a      	ldrb	r2, [r3, #0]
 8005aa6:	4290      	cmp	r0, r2
{
 8005aa8:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 8005aaa:	d00d      	beq.n	8005ac8 <stmpe811_Init+0x28>
 8005aac:	7859      	ldrb	r1, [r3, #1]
 8005aae:	4288      	cmp	r0, r1
 8005ab0:	d00a      	beq.n	8005ac8 <stmpe811_Init+0x28>
 8005ab2:	b10a      	cbz	r2, 8005ab8 <stmpe811_Init+0x18>
 8005ab4:	b941      	cbnz	r1, 8005ac8 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 8005ab6:	2201      	movs	r2, #1
      stmpe811[empty] = DeviceAddr;
 8005ab8:	549c      	strb	r4, [r3, r2]
      IOE_Init(); 
 8005aba:	f7fb ff2d 	bl	8001918 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 8005abe:	4620      	mov	r0, r4
}
 8005ac0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 8005ac4:	f7ff bf8b 	b.w	80059de <stmpe811_Reset>
}
 8005ac8:	bd10      	pop	{r4, pc}
 8005aca:	bf00      	nop
 8005acc:	2000478c 	.word	0x2000478c

08005ad0 <stmpe811_EnableGlobalIT>:
{
 8005ad0:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8005ad2:	b2c4      	uxtb	r4, r0
 8005ad4:	2109      	movs	r1, #9
 8005ad6:	4620      	mov	r0, r4
 8005ad8:	f7fb ff38 	bl	800194c <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8005adc:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8005ae0:	b2c2      	uxtb	r2, r0
 8005ae2:	2109      	movs	r1, #9
 8005ae4:	4620      	mov	r0, r4
}
 8005ae6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8005aea:	f7fb bf17 	b.w	800191c <IOE_Write>

08005aee <stmpe811_DisableGlobalIT>:
{
 8005aee:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8005af0:	b2c4      	uxtb	r4, r0
 8005af2:	2109      	movs	r1, #9
 8005af4:	4620      	mov	r0, r4
 8005af6:	f7fb ff29 	bl	800194c <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8005afa:	2109      	movs	r1, #9
 8005afc:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8005b00:	4620      	mov	r0, r4
}
 8005b02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8005b06:	f7fb bf09 	b.w	800191c <IOE_Write>

08005b0a <stmpe811_EnableITSource>:
{
 8005b0a:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005b0c:	b2c4      	uxtb	r4, r0
{
 8005b0e:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005b10:	4620      	mov	r0, r4
 8005b12:	210a      	movs	r1, #10
 8005b14:	f7fb ff1a 	bl	800194c <IOE_Read>
  tmp |= Source; 
 8005b18:	4328      	orrs	r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005b1a:	b2c2      	uxtb	r2, r0
 8005b1c:	210a      	movs	r1, #10
 8005b1e:	4620      	mov	r0, r4
}
 8005b20:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005b24:	f7fb befa 	b.w	800191c <IOE_Write>

08005b28 <stmpe811_TS_EnableIT>:
{
 8005b28:	b507      	push	{r0, r1, r2, lr}
 8005b2a:	9001      	str	r0, [sp, #4]
  IOE_ITConfig();
 8005b2c:	f7fb fef5 	bl	800191a <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 8005b30:	9801      	ldr	r0, [sp, #4]
 8005b32:	211f      	movs	r1, #31
 8005b34:	f7ff ffe9 	bl	8005b0a <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 8005b38:	9801      	ldr	r0, [sp, #4]
}
 8005b3a:	b003      	add	sp, #12
 8005b3c:	f85d eb04 	ldr.w	lr, [sp], #4
  stmpe811_EnableGlobalIT(DeviceAddr);
 8005b40:	f7ff bfc6 	b.w	8005ad0 <stmpe811_EnableGlobalIT>

08005b44 <stmpe811_DisableITSource>:
{
 8005b44:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005b46:	b2c4      	uxtb	r4, r0
{
 8005b48:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005b4a:	4620      	mov	r0, r4
 8005b4c:	210a      	movs	r1, #10
 8005b4e:	f7fb fefd 	bl	800194c <IOE_Read>
  tmp &= ~Source; 
 8005b52:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005b56:	b2c2      	uxtb	r2, r0
 8005b58:	210a      	movs	r1, #10
 8005b5a:	4620      	mov	r0, r4
}
 8005b5c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005b60:	f7fb bedc 	b.w	800191c <IOE_Write>

08005b64 <stmpe811_TS_DisableIT>:
{
 8005b64:	b510      	push	{r4, lr}
 8005b66:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 8005b68:	f7ff ffc1 	bl	8005aee <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8005b6c:	4620      	mov	r0, r4
 8005b6e:	211f      	movs	r1, #31
}
 8005b70:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8005b74:	f7ff bfe6 	b.w	8005b44 <stmpe811_DisableITSource>

08005b78 <stmpe811_ReadGITStatus>:
{
 8005b78:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8005b7a:	b2c0      	uxtb	r0, r0
{
 8005b7c:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8005b7e:	210b      	movs	r1, #11
 8005b80:	f7fb fee4 	bl	800194c <IOE_Read>
}
 8005b84:	4020      	ands	r0, r4
 8005b86:	bd10      	pop	{r4, pc}

08005b88 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 8005b88:	211f      	movs	r1, #31
 8005b8a:	f7ff bff5 	b.w	8005b78 <stmpe811_ReadGITStatus>

08005b8e <stmpe811_ClearGlobalIT>:
{
 8005b8e:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8005b90:	b2c0      	uxtb	r0, r0
 8005b92:	210b      	movs	r1, #11
 8005b94:	f7fb bec2 	b.w	800191c <IOE_Write>

08005b98 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 8005b98:	211f      	movs	r1, #31
 8005b9a:	f7ff bff8 	b.w	8005b8e <stmpe811_ClearGlobalIT>

08005b9e <stmpe811_IO_EnableAF>:
{
 8005b9e:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8005ba0:	b2c4      	uxtb	r4, r0
{
 8005ba2:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8005ba4:	4620      	mov	r0, r4
 8005ba6:	2117      	movs	r1, #23
 8005ba8:	f7fb fed0 	bl	800194c <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 8005bac:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8005bb0:	b2c2      	uxtb	r2, r0
 8005bb2:	2117      	movs	r1, #23
 8005bb4:	4620      	mov	r0, r4
}
 8005bb6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8005bba:	f7fb beaf 	b.w	800191c <IOE_Write>

08005bbe <stmpe811_TS_Start>:
{
 8005bbe:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8005bc0:	b2c4      	uxtb	r4, r0
{
 8005bc2:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8005bc4:	2104      	movs	r1, #4
 8005bc6:	4620      	mov	r0, r4
 8005bc8:	f7fb fec0 	bl	800194c <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8005bcc:	2104      	movs	r1, #4
 8005bce:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8005bd2:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8005bd4:	4620      	mov	r0, r4
 8005bd6:	f7fb fea1 	bl	800191c <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 8005bda:	4630      	mov	r0, r6
 8005bdc:	21f0      	movs	r1, #240	; 0xf0
 8005bde:	f7ff ffde 	bl	8005b9e <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8005be2:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8005be6:	4620      	mov	r0, r4
 8005be8:	2104      	movs	r1, #4
 8005bea:	f7fb fe97 	bl	800191c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8005bee:	2249      	movs	r2, #73	; 0x49
 8005bf0:	2120      	movs	r1, #32
 8005bf2:	4620      	mov	r0, r4
 8005bf4:	f7fb fe92 	bl	800191c <IOE_Write>
  IOE_Delay(2); 
 8005bf8:	2002      	movs	r0, #2
 8005bfa:	f7fb fed7 	bl	80019ac <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8005bfe:	4620      	mov	r0, r4
 8005c00:	2201      	movs	r2, #1
 8005c02:	2121      	movs	r1, #33	; 0x21
 8005c04:	f7fb fe8a 	bl	800191c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8005c08:	4620      	mov	r0, r4
 8005c0a:	229a      	movs	r2, #154	; 0x9a
 8005c0c:	2141      	movs	r1, #65	; 0x41
 8005c0e:	f7fb fe85 	bl	800191c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8005c12:	4620      	mov	r0, r4
 8005c14:	2201      	movs	r2, #1
 8005c16:	214a      	movs	r1, #74	; 0x4a
 8005c18:	f7fb fe80 	bl	800191c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005c1c:	4620      	mov	r0, r4
 8005c1e:	2201      	movs	r2, #1
 8005c20:	214b      	movs	r1, #75	; 0x4b
 8005c22:	f7fb fe7b 	bl	800191c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8005c26:	4620      	mov	r0, r4
 8005c28:	2200      	movs	r2, #0
 8005c2a:	214b      	movs	r1, #75	; 0x4b
 8005c2c:	f7fb fe76 	bl	800191c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8005c30:	4620      	mov	r0, r4
 8005c32:	2201      	movs	r2, #1
 8005c34:	2156      	movs	r1, #86	; 0x56
 8005c36:	f7fb fe71 	bl	800191c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8005c3a:	4620      	mov	r0, r4
 8005c3c:	2201      	movs	r2, #1
 8005c3e:	2158      	movs	r1, #88	; 0x58
 8005c40:	f7fb fe6c 	bl	800191c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8005c44:	4620      	mov	r0, r4
 8005c46:	2201      	movs	r2, #1
 8005c48:	2140      	movs	r1, #64	; 0x40
 8005c4a:	f7fb fe67 	bl	800191c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8005c4e:	4620      	mov	r0, r4
 8005c50:	22ff      	movs	r2, #255	; 0xff
 8005c52:	210b      	movs	r1, #11
 8005c54:	f7fb fe62 	bl	800191c <IOE_Write>
}
 8005c58:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 8005c5c:	2002      	movs	r0, #2
 8005c5e:	f7fb bea5 	b.w	80019ac <IOE_Delay>
	...

08005c64 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8005c64:	4b05      	ldr	r3, [pc, #20]	; (8005c7c <SystemInit+0x18>)
 8005c66:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8005c6a:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8005c6e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8005c72:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8005c76:	609a      	str	r2, [r3, #8]
#endif
}
 8005c78:	4770      	bx	lr
 8005c7a:	bf00      	nop
 8005c7c:	e000ed00 	.word	0xe000ed00

08005c80 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8005c80:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8005c82:	4b0b      	ldr	r3, [pc, #44]	; (8005cb0 <HAL_Init+0x30>)
 8005c84:	681a      	ldr	r2, [r3, #0]
 8005c86:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005c8a:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8005c8c:	681a      	ldr	r2, [r3, #0]
 8005c8e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8005c92:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8005c94:	681a      	ldr	r2, [r3, #0]
 8005c96:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005c9a:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8005c9c:	2003      	movs	r0, #3
 8005c9e:	f000 f9e9 	bl	8006074 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8005ca2:	2000      	movs	r0, #0
 8005ca4:	f7fc f9da 	bl	800205c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8005ca8:	f7fb ff16 	bl	8001ad8 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8005cac:	2000      	movs	r0, #0
 8005cae:	bd08      	pop	{r3, pc}
 8005cb0:	40023c00 	.word	0x40023c00

08005cb4 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8005cb4:	4a03      	ldr	r2, [pc, #12]	; (8005cc4 <HAL_IncTick+0x10>)
 8005cb6:	4b04      	ldr	r3, [pc, #16]	; (8005cc8 <HAL_IncTick+0x14>)
 8005cb8:	6811      	ldr	r1, [r2, #0]
 8005cba:	781b      	ldrb	r3, [r3, #0]
 8005cbc:	440b      	add	r3, r1
 8005cbe:	6013      	str	r3, [r2, #0]
}
 8005cc0:	4770      	bx	lr
 8005cc2:	bf00      	nop
 8005cc4:	20004790 	.word	0x20004790
 8005cc8:	20000080 	.word	0x20000080

08005ccc <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8005ccc:	4b01      	ldr	r3, [pc, #4]	; (8005cd4 <HAL_GetTick+0x8>)
 8005cce:	6818      	ldr	r0, [r3, #0]
}
 8005cd0:	4770      	bx	lr
 8005cd2:	bf00      	nop
 8005cd4:	20004790 	.word	0x20004790

08005cd8 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8005cd8:	b538      	push	{r3, r4, r5, lr}
 8005cda:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8005cdc:	f7ff fff6 	bl	8005ccc <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8005ce0:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8005ce2:	bf1c      	itt	ne
 8005ce4:	4b05      	ldrne	r3, [pc, #20]	; (8005cfc <HAL_Delay+0x24>)
 8005ce6:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8005ce8:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8005cea:	bf18      	it	ne
 8005cec:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8005cee:	f7ff ffed 	bl	8005ccc <HAL_GetTick>
 8005cf2:	1b43      	subs	r3, r0, r5
 8005cf4:	42a3      	cmp	r3, r4
 8005cf6:	d3fa      	bcc.n	8005cee <HAL_Delay+0x16>
  {
  }
}
 8005cf8:	bd38      	pop	{r3, r4, r5, pc}
 8005cfa:	bf00      	nop
 8005cfc:	20000080 	.word	0x20000080

08005d00 <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
{
 8005d00:	b538      	push	{r3, r4, r5, lr}
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  
  /* Check ADC handle */
  if(hadc == NULL)
 8005d02:	4604      	mov	r4, r0
 8005d04:	2800      	cmp	r0, #0
 8005d06:	f000 809b 	beq.w	8005e40 <HAL_ADC_Init+0x140>
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }
  
  if(hadc->State == HAL_ADC_STATE_RESET)
 8005d0a:	6c05      	ldr	r5, [r0, #64]	; 0x40
 8005d0c:	b925      	cbnz	r5, 8005d18 <HAL_ADC_Init+0x18>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 8005d0e:	f7fb ff03 	bl	8001b18 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 8005d12:	6465      	str	r5, [r4, #68]	; 0x44
    
    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 8005d14:	f884 503c 	strb.w	r5, [r4, #60]	; 0x3c
  }
  
  /* Configuration of ADC parameters if previous preliminary actions are      */ 
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8005d18:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005d1a:	06db      	lsls	r3, r3, #27
 8005d1c:	f100 808e 	bmi.w	8005e3c <HAL_ADC_Init+0x13c>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8005d20:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005d22:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 8005d26:	f023 0302 	bic.w	r3, r3, #2
 8005d2a:	f043 0302 	orr.w	r3, r3, #2
 8005d2e:	6423      	str	r3, [r4, #64]	; 0x40
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
  
  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 8005d30:	4b44      	ldr	r3, [pc, #272]	; (8005e44 <HAL_ADC_Init+0x144>)
 8005d32:	685a      	ldr	r2, [r3, #4]
 8005d34:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8005d38:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 8005d3a:	685a      	ldr	r2, [r3, #4]
 8005d3c:	6861      	ldr	r1, [r4, #4]
 8005d3e:	430a      	orrs	r2, r1
 8005d40:	605a      	str	r2, [r3, #4]
  
  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8005d42:	6823      	ldr	r3, [r4, #0]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8005d44:	6921      	ldr	r1, [r4, #16]
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8005d46:	685a      	ldr	r2, [r3, #4]
 8005d48:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8005d4c:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8005d4e:	685a      	ldr	r2, [r3, #4]
 8005d50:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8005d54:	605a      	str	r2, [r3, #4]
  
  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 8005d56:	685a      	ldr	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8005d58:	68a1      	ldr	r1, [r4, #8]
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 8005d5a:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8005d5e:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8005d60:	685a      	ldr	r2, [r3, #4]
 8005d62:	430a      	orrs	r2, r1
 8005d64:	605a      	str	r2, [r3, #4]
  
  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8005d66:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8005d68:	68e1      	ldr	r1, [r4, #12]
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8005d6a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005d6e:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8005d70:	689a      	ldr	r2, [r3, #8]
 8005d72:	430a      	orrs	r2, r1
 8005d74:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8005d76:	4934      	ldr	r1, [pc, #208]	; (8005e48 <HAL_ADC_Init+0x148>)
 8005d78:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8005d7a:	428a      	cmp	r2, r1
 8005d7c:	d052      	beq.n	8005e24 <HAL_ADC_Init+0x124>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8005d7e:	6899      	ldr	r1, [r3, #8]
 8005d80:	f021 6170 	bic.w	r1, r1, #251658240	; 0xf000000
 8005d84:	6099      	str	r1, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 8005d86:	6899      	ldr	r1, [r3, #8]
 8005d88:	430a      	orrs	r2, r1
 8005d8a:	609a      	str	r2, [r3, #8]
    
    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8005d8c:	689a      	ldr	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 8005d8e:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8005d90:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8005d94:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 8005d96:	689a      	ldr	r2, [r3, #8]
 8005d98:	430a      	orrs	r2, r1
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8005d9a:	609a      	str	r2, [r3, #8]
  }
  
  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 8005d9c:	689a      	ldr	r2, [r3, #8]
 8005d9e:	f022 0202 	bic.w	r2, r2, #2
 8005da2:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 8005da4:	689a      	ldr	r2, [r3, #8]
 8005da6:	7e21      	ldrb	r1, [r4, #24]
 8005da8:	ea42 0241 	orr.w	r2, r2, r1, lsl #1
 8005dac:	609a      	str	r2, [r3, #8]
  
  if(hadc->Init.DiscontinuousConvMode != DISABLE)
 8005dae:	f894 2020 	ldrb.w	r2, [r4, #32]
 8005db2:	2a00      	cmp	r2, #0
 8005db4:	d03e      	beq.n	8005e34 <HAL_ADC_Init+0x134>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
  
    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8005db6:	685a      	ldr	r2, [r3, #4]
    
    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8005db8:	6a61      	ldr	r1, [r4, #36]	; 0x24
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8005dba:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8005dbe:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 8005dc0:	685a      	ldr	r2, [r3, #4]
 8005dc2:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 8005dc6:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8005dc8:	685a      	ldr	r2, [r3, #4]
 8005dca:	3901      	subs	r1, #1
 8005dcc:	ea42 3241 	orr.w	r2, r2, r1, lsl #13
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8005dd0:	605a      	str	r2, [r3, #4]
  }
  
  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8005dd2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8005dd4:	69e1      	ldr	r1, [r4, #28]
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8005dd6:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8005dda:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8005ddc:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005dde:	3901      	subs	r1, #1
 8005de0:	ea42 5201 	orr.w	r2, r2, r1, lsl #20
 8005de4:	62da      	str	r2, [r3, #44]	; 0x2c
  
  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 8005de6:	689a      	ldr	r2, [r3, #8]
 8005de8:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8005dec:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 8005dee:	689a      	ldr	r2, [r3, #8]
 8005df0:	f894 1030 	ldrb.w	r1, [r4, #48]	; 0x30
 8005df4:	ea42 2241 	orr.w	r2, r2, r1, lsl #9
 8005df8:	609a      	str	r2, [r3, #8]
  
  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 8005dfa:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8005dfc:	6961      	ldr	r1, [r4, #20]
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 8005dfe:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005e02:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8005e04:	689a      	ldr	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 8005e06:	2000      	movs	r0, #0
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8005e08:	ea42 2281 	orr.w	r2, r2, r1, lsl #10
 8005e0c:	609a      	str	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 8005e0e:	6460      	str	r0, [r4, #68]	; 0x44
    ADC_STATE_CLR_SET(hadc->State,
 8005e10:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005e12:	f023 0303 	bic.w	r3, r3, #3
 8005e16:	f043 0301 	orr.w	r3, r3, #1
 8005e1a:	6423      	str	r3, [r4, #64]	; 0x40
  __HAL_UNLOCK(hadc);
 8005e1c:	2300      	movs	r3, #0
 8005e1e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
}
 8005e22:	bd38      	pop	{r3, r4, r5, pc}
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8005e24:	689a      	ldr	r2, [r3, #8]
 8005e26:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8005e2a:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8005e2c:	689a      	ldr	r2, [r3, #8]
 8005e2e:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8005e32:	e7b2      	b.n	8005d9a <HAL_ADC_Init+0x9a>
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8005e34:	685a      	ldr	r2, [r3, #4]
 8005e36:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005e3a:	e7c9      	b.n	8005dd0 <HAL_ADC_Init+0xd0>
    tmp_hal_status = HAL_ERROR;
 8005e3c:	2001      	movs	r0, #1
 8005e3e:	e7ed      	b.n	8005e1c <HAL_ADC_Init+0x11c>
    return HAL_ERROR;
 8005e40:	2001      	movs	r0, #1
 8005e42:	e7ee      	b.n	8005e22 <HAL_ADC_Init+0x122>
 8005e44:	40012300 	.word	0x40012300
 8005e48:	0f000001 	.word	0x0f000001

08005e4c <HAL_ADC_Start>:
{
 8005e4c:	b082      	sub	sp, #8
  __IO uint32_t counter = 0U;
 8005e4e:	2300      	movs	r3, #0
 8005e50:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 8005e52:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8005e56:	2b01      	cmp	r3, #1
 8005e58:	d060      	beq.n	8005f1c <HAL_ADC_Start+0xd0>
 8005e5a:	2301      	movs	r3, #1
 8005e5c:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 8005e60:	6803      	ldr	r3, [r0, #0]
 8005e62:	689a      	ldr	r2, [r3, #8]
 8005e64:	07d2      	lsls	r2, r2, #31
 8005e66:	d505      	bpl.n	8005e74 <HAL_ADC_Start+0x28>
  if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 8005e68:	689a      	ldr	r2, [r3, #8]
 8005e6a:	07d1      	lsls	r1, r2, #31
 8005e6c:	d414      	bmi.n	8005e98 <HAL_ADC_Start+0x4c>
  return HAL_OK;
 8005e6e:	2000      	movs	r0, #0
}
 8005e70:	b002      	add	sp, #8
 8005e72:	4770      	bx	lr
    __HAL_ADC_ENABLE(hadc);
 8005e74:	689a      	ldr	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8005e76:	492a      	ldr	r1, [pc, #168]	; (8005f20 <HAL_ADC_Start+0xd4>)
    __HAL_ADC_ENABLE(hadc);
 8005e78:	f042 0201 	orr.w	r2, r2, #1
 8005e7c:	609a      	str	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8005e7e:	4a29      	ldr	r2, [pc, #164]	; (8005f24 <HAL_ADC_Start+0xd8>)
 8005e80:	6812      	ldr	r2, [r2, #0]
 8005e82:	fbb2 f2f1 	udiv	r2, r2, r1
 8005e86:	eb02 0242 	add.w	r2, r2, r2, lsl #1
      counter--;
 8005e8a:	9201      	str	r2, [sp, #4]
    while(counter != 0U)
 8005e8c:	9a01      	ldr	r2, [sp, #4]
 8005e8e:	2a00      	cmp	r2, #0
 8005e90:	d0ea      	beq.n	8005e68 <HAL_ADC_Start+0x1c>
      counter--;
 8005e92:	9a01      	ldr	r2, [sp, #4]
 8005e94:	3a01      	subs	r2, #1
 8005e96:	e7f8      	b.n	8005e8a <HAL_ADC_Start+0x3e>
    ADC_STATE_CLR_SET(hadc->State,
 8005e98:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8005e9a:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8005e9e:	f022 0201 	bic.w	r2, r2, #1
 8005ea2:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005ea6:	6402      	str	r2, [r0, #64]	; 0x40
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 8005ea8:	685a      	ldr	r2, [r3, #4]
 8005eaa:	0552      	lsls	r2, r2, #21
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 8005eac:	bf41      	itttt	mi
 8005eae:	6c02      	ldrmi	r2, [r0, #64]	; 0x40
 8005eb0:	f422 5240 	bicmi.w	r2, r2, #12288	; 0x3000
 8005eb4:	f442 5280 	orrmi.w	r2, r2, #4096	; 0x1000
 8005eb8:	6402      	strmi	r2, [r0, #64]	; 0x40
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8005eba:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8005ebc:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 8005ec0:	bf1c      	itt	ne
 8005ec2:	6c42      	ldrne	r2, [r0, #68]	; 0x44
 8005ec4:	f022 0206 	bicne.w	r2, r2, #6
      ADC_CLEAR_ERRORCODE(hadc);
 8005ec8:	6442      	str	r2, [r0, #68]	; 0x44
    __HAL_UNLOCK(hadc);
 8005eca:	2200      	movs	r2, #0
 8005ecc:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 8005ed0:	f06f 0222 	mvn.w	r2, #34	; 0x22
 8005ed4:	601a      	str	r2, [r3, #0]
    if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 8005ed6:	4a14      	ldr	r2, [pc, #80]	; (8005f28 <HAL_ADC_Start+0xdc>)
 8005ed8:	6851      	ldr	r1, [r2, #4]
 8005eda:	f011 0f1f 	tst.w	r1, #31
 8005ede:	4913      	ldr	r1, [pc, #76]	; (8005f2c <HAL_ADC_Start+0xe0>)
 8005ee0:	d119      	bne.n	8005f16 <HAL_ADC_Start+0xca>
      if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 8005ee2:	428b      	cmp	r3, r1
 8005ee4:	d007      	beq.n	8005ef6 <HAL_ADC_Start+0xaa>
 8005ee6:	f501 7180 	add.w	r1, r1, #256	; 0x100
 8005eea:	428b      	cmp	r3, r1
 8005eec:	d10c      	bne.n	8005f08 <HAL_ADC_Start+0xbc>
 8005eee:	6852      	ldr	r2, [r2, #4]
 8005ef0:	f012 0f1f 	tst.w	r2, #31
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8005ef4:	d1bb      	bne.n	8005e6e <HAL_ADC_Start+0x22>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8005ef6:	6898      	ldr	r0, [r3, #8]
 8005ef8:	f010 5040 	ands.w	r0, r0, #805306368	; 0x30000000
 8005efc:	d1b7      	bne.n	8005e6e <HAL_ADC_Start+0x22>
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8005efe:	689a      	ldr	r2, [r3, #8]
 8005f00:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8005f04:	609a      	str	r2, [r3, #8]
 8005f06:	e7b3      	b.n	8005e70 <HAL_ADC_Start+0x24>
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8005f08:	4909      	ldr	r1, [pc, #36]	; (8005f30 <HAL_ADC_Start+0xe4>)
 8005f0a:	428b      	cmp	r3, r1
 8005f0c:	d1af      	bne.n	8005e6e <HAL_ADC_Start+0x22>
 8005f0e:	6852      	ldr	r2, [r2, #4]
 8005f10:	f012 0f10 	tst.w	r2, #16
 8005f14:	e7ee      	b.n	8005ef4 <HAL_ADC_Start+0xa8>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8005f16:	428b      	cmp	r3, r1
 8005f18:	d1a9      	bne.n	8005e6e <HAL_ADC_Start+0x22>
 8005f1a:	e7ec      	b.n	8005ef6 <HAL_ADC_Start+0xaa>
  __HAL_LOCK(hadc);
 8005f1c:	2002      	movs	r0, #2
 8005f1e:	e7a7      	b.n	8005e70 <HAL_ADC_Start+0x24>
 8005f20:	000f4240 	.word	0x000f4240
 8005f24:	2000007c 	.word	0x2000007c
 8005f28:	40012300 	.word	0x40012300
 8005f2c:	40012000 	.word	0x40012000
 8005f30:	40012200 	.word	0x40012200

08005f34 <HAL_ADC_GetValue>:
  return hadc->Instance->DR;
 8005f34:	6803      	ldr	r3, [r0, #0]
 8005f36:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
}
 8005f38:	4770      	bx	lr
	...

08005f3c <HAL_ADC_ConfigChannel>:
{
 8005f3c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  __IO uint32_t counter = 0U;
 8005f3e:	2300      	movs	r3, #0
 8005f40:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 8005f42:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8005f46:	2b01      	cmp	r3, #1
 8005f48:	d069      	beq.n	800601e <HAL_ADC_ConfigChannel+0xe2>
 8005f4a:	2301      	movs	r3, #1
 8005f4c:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  if (sConfig->Channel > ADC_CHANNEL_9)
 8005f50:	680d      	ldr	r5, [r1, #0]
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8005f52:	6803      	ldr	r3, [r0, #0]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8005f54:	688e      	ldr	r6, [r1, #8]
  if (sConfig->Channel > ADC_CHANNEL_9)
 8005f56:	2d09      	cmp	r5, #9
 8005f58:	b2ac      	uxth	r4, r5
 8005f5a:	d934      	bls.n	8005fc6 <HAL_ADC_ConfigChannel+0x8a>
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8005f5c:	eb04 0244 	add.w	r2, r4, r4, lsl #1
 8005f60:	68df      	ldr	r7, [r3, #12]
 8005f62:	3a1e      	subs	r2, #30
 8005f64:	f04f 0c07 	mov.w	ip, #7
 8005f68:	fa0c fc02 	lsl.w	ip, ip, r2
 8005f6c:	ea27 070c 	bic.w	r7, r7, ip
 8005f70:	60df      	str	r7, [r3, #12]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8005f72:	68df      	ldr	r7, [r3, #12]
 8005f74:	fa06 f202 	lsl.w	r2, r6, r2
 8005f78:	433a      	orrs	r2, r7
 8005f7a:	60da      	str	r2, [r3, #12]
  if (sConfig->Rank < 7U)
 8005f7c:	6849      	ldr	r1, [r1, #4]
 8005f7e:	2906      	cmp	r1, #6
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8005f80:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  if (sConfig->Rank < 7U)
 8005f84:	d82f      	bhi.n	8005fe6 <HAL_ADC_ConfigChannel+0xaa>
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8005f86:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8005f88:	3a05      	subs	r2, #5
 8005f8a:	261f      	movs	r6, #31
 8005f8c:	4096      	lsls	r6, r2
 8005f8e:	ea21 0106 	bic.w	r1, r1, r6
 8005f92:	6359      	str	r1, [r3, #52]	; 0x34
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 8005f94:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8005f96:	fa04 f202 	lsl.w	r2, r4, r2
 8005f9a:	430a      	orrs	r2, r1
 8005f9c:	635a      	str	r2, [r3, #52]	; 0x34
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 8005f9e:	4a30      	ldr	r2, [pc, #192]	; (8006060 <HAL_ADC_ConfigChannel+0x124>)
 8005fa0:	4293      	cmp	r3, r2
 8005fa2:	d10a      	bne.n	8005fba <HAL_ADC_ConfigChannel+0x7e>
 8005fa4:	2d12      	cmp	r5, #18
 8005fa6:	d13c      	bne.n	8006022 <HAL_ADC_ConfigChannel+0xe6>
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 8005fa8:	4b2e      	ldr	r3, [pc, #184]	; (8006064 <HAL_ADC_ConfigChannel+0x128>)
 8005faa:	685a      	ldr	r2, [r3, #4]
 8005fac:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8005fb0:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 8005fb2:	685a      	ldr	r2, [r3, #4]
 8005fb4:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8005fb8:	605a      	str	r2, [r3, #4]
  __HAL_UNLOCK(hadc);
 8005fba:	2300      	movs	r3, #0
 8005fbc:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  return HAL_OK;
 8005fc0:	4618      	mov	r0, r3
}
 8005fc2:	b003      	add	sp, #12
 8005fc4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 8005fc6:	691f      	ldr	r7, [r3, #16]
 8005fc8:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 8005fcc:	f04f 0c07 	mov.w	ip, #7
 8005fd0:	fa0c fc02 	lsl.w	ip, ip, r2
 8005fd4:	ea27 070c 	bic.w	r7, r7, ip
 8005fd8:	611f      	str	r7, [r3, #16]
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 8005fda:	691f      	ldr	r7, [r3, #16]
 8005fdc:	fa06 f202 	lsl.w	r2, r6, r2
 8005fe0:	433a      	orrs	r2, r7
 8005fe2:	611a      	str	r2, [r3, #16]
 8005fe4:	e7ca      	b.n	8005f7c <HAL_ADC_ConfigChannel+0x40>
  else if (sConfig->Rank < 13U)
 8005fe6:	290c      	cmp	r1, #12
 8005fe8:	f04f 011f 	mov.w	r1, #31
 8005fec:	d80b      	bhi.n	8006006 <HAL_ADC_ConfigChannel+0xca>
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 8005fee:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 8005ff0:	3a23      	subs	r2, #35	; 0x23
 8005ff2:	4091      	lsls	r1, r2
 8005ff4:	ea26 0101 	bic.w	r1, r6, r1
 8005ff8:	6319      	str	r1, [r3, #48]	; 0x30
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 8005ffa:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8005ffc:	fa04 f202 	lsl.w	r2, r4, r2
 8006000:	430a      	orrs	r2, r1
 8006002:	631a      	str	r2, [r3, #48]	; 0x30
 8006004:	e7cb      	b.n	8005f9e <HAL_ADC_ConfigChannel+0x62>
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 8006006:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8006008:	3a41      	subs	r2, #65	; 0x41
 800600a:	4091      	lsls	r1, r2
 800600c:	ea26 0101 	bic.w	r1, r6, r1
 8006010:	62d9      	str	r1, [r3, #44]	; 0x2c
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 8006012:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8006014:	fa04 f202 	lsl.w	r2, r4, r2
 8006018:	430a      	orrs	r2, r1
 800601a:	62da      	str	r2, [r3, #44]	; 0x2c
 800601c:	e7bf      	b.n	8005f9e <HAL_ADC_ConfigChannel+0x62>
  __HAL_LOCK(hadc);
 800601e:	2002      	movs	r0, #2
 8006020:	e7cf      	b.n	8005fc2 <HAL_ADC_ConfigChannel+0x86>
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 8006022:	4b11      	ldr	r3, [pc, #68]	; (8006068 <HAL_ADC_ConfigChannel+0x12c>)
 8006024:	429d      	cmp	r5, r3
 8006026:	d001      	beq.n	800602c <HAL_ADC_ConfigChannel+0xf0>
 8006028:	2d11      	cmp	r5, #17
 800602a:	d1c6      	bne.n	8005fba <HAL_ADC_ConfigChannel+0x7e>
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 800602c:	4b0d      	ldr	r3, [pc, #52]	; (8006064 <HAL_ADC_ConfigChannel+0x128>)
 800602e:	685a      	ldr	r2, [r3, #4]
 8006030:	f422 0280 	bic.w	r2, r2, #4194304	; 0x400000
 8006034:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 8006036:	685a      	ldr	r2, [r3, #4]
 8006038:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 800603c:	605a      	str	r2, [r3, #4]
    if((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR))
 800603e:	4b0a      	ldr	r3, [pc, #40]	; (8006068 <HAL_ADC_ConfigChannel+0x12c>)
 8006040:	429d      	cmp	r5, r3
 8006042:	d1ba      	bne.n	8005fba <HAL_ADC_ConfigChannel+0x7e>
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 8006044:	4b09      	ldr	r3, [pc, #36]	; (800606c <HAL_ADC_ConfigChannel+0x130>)
 8006046:	4a0a      	ldr	r2, [pc, #40]	; (8006070 <HAL_ADC_ConfigChannel+0x134>)
 8006048:	681b      	ldr	r3, [r3, #0]
 800604a:	fbb3 f3f2 	udiv	r3, r3, r2
 800604e:	220a      	movs	r2, #10
 8006050:	4353      	muls	r3, r2
        counter--;
 8006052:	9301      	str	r3, [sp, #4]
      while(counter != 0U)
 8006054:	9b01      	ldr	r3, [sp, #4]
 8006056:	2b00      	cmp	r3, #0
 8006058:	d0af      	beq.n	8005fba <HAL_ADC_ConfigChannel+0x7e>
        counter--;
 800605a:	9b01      	ldr	r3, [sp, #4]
 800605c:	3b01      	subs	r3, #1
 800605e:	e7f8      	b.n	8006052 <HAL_ADC_ConfigChannel+0x116>
 8006060:	40012000 	.word	0x40012000
 8006064:	40012300 	.word	0x40012300
 8006068:	10000012 	.word	0x10000012
 800606c:	2000007c 	.word	0x2000007c
 8006070:	000f4240 	.word	0x000f4240

08006074 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8006074:	4907      	ldr	r1, [pc, #28]	; (8006094 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8006076:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8006078:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800607c:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800607e:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8006080:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8006084:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8006086:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8006088:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800608c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8006090:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8006092:	4770      	bx	lr
 8006094:	e000ed00 	.word	0xe000ed00

08006098 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8006098:	4b16      	ldr	r3, [pc, #88]	; (80060f4 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800609a:	b530      	push	{r4, r5, lr}
 800609c:	68dc      	ldr	r4, [r3, #12]
 800609e:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80060a2:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80060a6:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80060a8:	2d04      	cmp	r5, #4
 80060aa:	bf28      	it	cs
 80060ac:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80060ae:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80060b0:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80060b4:	bf8c      	ite	hi
 80060b6:	3c03      	subhi	r4, #3
 80060b8:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80060ba:	fa03 f505 	lsl.w	r5, r3, r5
 80060be:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80060c2:	40a3      	lsls	r3, r4
 80060c4:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80060c8:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 80060ca:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80060cc:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80060d0:	bfac      	ite	ge
 80060d2:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80060d6:	4a08      	ldrlt	r2, [pc, #32]	; (80060f8 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80060d8:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80060dc:	bfb8      	it	lt
 80060de:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80060e2:	b2db      	uxtb	r3, r3
 80060e4:	bfaa      	itet	ge
 80060e6:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80060ea:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80060ec:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 80060f0:	bd30      	pop	{r4, r5, pc}
 80060f2:	bf00      	nop
 80060f4:	e000ed00 	.word	0xe000ed00
 80060f8:	e000ed14 	.word	0xe000ed14

080060fc <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 80060fc:	2800      	cmp	r0, #0
 80060fe:	db08      	blt.n	8006112 <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8006100:	0942      	lsrs	r2, r0, #5
 8006102:	2301      	movs	r3, #1
 8006104:	f000 001f 	and.w	r0, r0, #31
 8006108:	fa03 f000 	lsl.w	r0, r3, r0
 800610c:	4b01      	ldr	r3, [pc, #4]	; (8006114 <HAL_NVIC_EnableIRQ+0x18>)
 800610e:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8006112:	4770      	bx	lr
 8006114:	e000e100 	.word	0xe000e100

08006118 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8006118:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800611a:	4604      	mov	r4, r0
 800611c:	b150      	cbz	r0, 8006134 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800611e:	7943      	ldrb	r3, [r0, #5]
 8006120:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006124:	b913      	cbnz	r3, 800612c <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8006126:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8006128:	f7fb fd46 	bl	8001bb8 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800612c:	2301      	movs	r3, #1
 800612e:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8006130:	2000      	movs	r0, #0
}
 8006132:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006134:	2001      	movs	r0, #1
 8006136:	e7fc      	b.n	8006132 <HAL_CRC_Init+0x1a>

08006138 <HAL_DAC_Init>:
  * @param  hdac pointer to a DAC_HandleTypeDef structure that contains
  *         the configuration information for the specified DAC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_Init(DAC_HandleTypeDef* hdac)
{ 
 8006138:	b510      	push	{r4, lr}
  /* Check DAC handle */
  if(hdac == NULL)
 800613a:	4604      	mov	r4, r0
 800613c:	b168      	cbz	r0, 800615a <HAL_DAC_Init+0x22>
     return HAL_ERROR;
  }
  /* Check the parameters */
  assert_param(IS_DAC_ALL_INSTANCE(hdac->Instance));
  
  if(hdac->State == HAL_DAC_STATE_RESET)
 800613e:	7903      	ldrb	r3, [r0, #4]
 8006140:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006144:	b913      	cbnz	r3, 800614c <HAL_DAC_Init+0x14>
    {
      hdac->MspInitCallback               = HAL_DAC_MspInit;
    }
#endif /* USE_HAL_DAC_REGISTER_CALLBACKS */
    /* Allocate lock resource and initialize it */
    hdac->Lock = HAL_UNLOCKED;
 8006146:	7142      	strb	r2, [r0, #5]
#if (USE_HAL_DAC_REGISTER_CALLBACKS == 1)
    /* Init the low level hardware */
    hdac->MspInitCallback(hdac);
#else
    /* Init the low level hardware */
    HAL_DAC_MspInit(hdac);
 8006148:	f7fb fd4e 	bl	8001be8 <HAL_DAC_MspInit>
#endif /* USE_HAL_DAC_REGISTER_CALLBACKS */
  }
  
  /* Initialize the DAC state*/
  hdac->State = HAL_DAC_STATE_BUSY;
 800614c:	2302      	movs	r3, #2
 800614e:	7123      	strb	r3, [r4, #4]
  
  /* Set DAC error code to none */
  hdac->ErrorCode = HAL_DAC_ERROR_NONE;
 8006150:	2000      	movs	r0, #0
  
  /* Initialize the DAC state*/
  hdac->State = HAL_DAC_STATE_READY;
 8006152:	2301      	movs	r3, #1
  hdac->ErrorCode = HAL_DAC_ERROR_NONE;
 8006154:	6120      	str	r0, [r4, #16]
  hdac->State = HAL_DAC_STATE_READY;
 8006156:	7123      	strb	r3, [r4, #4]
  
  /* Return function status */
  return HAL_OK;
}
 8006158:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 800615a:	2001      	movs	r0, #1
 800615c:	e7fc      	b.n	8006158 <HAL_DAC_Init+0x20>

0800615e <HAL_DAC_Start>:
  *            @arg DAC_CHANNEL_1: DAC Channel1 selected
  *            @arg DAC_CHANNEL_2: DAC Channel2 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_Start(DAC_HandleTypeDef* hdac, uint32_t Channel)
{
 800615e:	b510      	push	{r4, lr}
  
  /* Check the parameters */
  assert_param(IS_DAC_CHANNEL(Channel));
  
  /* Process locked */
  __HAL_LOCK(hdac);
 8006160:	7943      	ldrb	r3, [r0, #5]
 8006162:	2b01      	cmp	r3, #1
 8006164:	f04f 0302 	mov.w	r3, #2
 8006168:	d017      	beq.n	800619a <HAL_DAC_Start+0x3c>
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_BUSY;
 800616a:	7103      	strb	r3, [r0, #4]
  
  /* Enable the Peripheral */
  __HAL_DAC_ENABLE(hdac, Channel);
 800616c:	6803      	ldr	r3, [r0, #0]
 800616e:	2201      	movs	r2, #1
 8006170:	681c      	ldr	r4, [r3, #0]
 8006172:	408a      	lsls	r2, r1
 8006174:	4322      	orrs	r2, r4
 8006176:	601a      	str	r2, [r3, #0]
  
  if(Channel == DAC_CHANNEL_1)
 8006178:	b989      	cbnz	r1, 800619e <HAL_DAC_Start+0x40>
  {
    tmp1 = hdac->Instance->CR & DAC_CR_TEN1;
 800617a:	6819      	ldr	r1, [r3, #0]
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL1;
 800617c:	681a      	ldr	r2, [r3, #0]
    /* Check if software trigger enabled */
    if((tmp1 ==  DAC_CR_TEN1) && (tmp2 ==  DAC_CR_TSEL1))
 800617e:	074c      	lsls	r4, r1, #29
 8006180:	d507      	bpl.n	8006192 <HAL_DAC_Start+0x34>
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL1;
 8006182:	f002 0238 	and.w	r2, r2, #56	; 0x38
    if((tmp1 ==  DAC_CR_TEN1) && (tmp2 ==  DAC_CR_TSEL1))
 8006186:	2a38      	cmp	r2, #56	; 0x38
 8006188:	d103      	bne.n	8006192 <HAL_DAC_Start+0x34>
    {
      /* Enable the selected DAC software conversion */
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG1;
 800618a:	685a      	ldr	r2, [r3, #4]
 800618c:	f042 0201 	orr.w	r2, r2, #1
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
    /* Check if software trigger enabled */
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
    {
      /* Enable the selected DAC software conversion*/
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG2;
 8006190:	605a      	str	r2, [r3, #4]
    }
  }
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_READY;
 8006192:	2301      	movs	r3, #1
 8006194:	7103      	strb	r3, [r0, #4]
  
  /* Process unlocked */
  __HAL_UNLOCK(hdac);
 8006196:	2300      	movs	r3, #0
 8006198:	7143      	strb	r3, [r0, #5]
  __HAL_LOCK(hdac);
 800619a:	4618      	mov	r0, r3
    
  /* Return function status */
  return HAL_OK;
}
 800619c:	bd10      	pop	{r4, pc}
    tmp1 = hdac->Instance->CR & DAC_CR_TEN2;
 800619e:	6819      	ldr	r1, [r3, #0]
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
 80061a0:	681a      	ldr	r2, [r3, #0]
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
 80061a2:	0349      	lsls	r1, r1, #13
 80061a4:	d5f5      	bpl.n	8006192 <HAL_DAC_Start+0x34>
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
 80061a6:	f402 1260 	and.w	r2, r2, #3670016	; 0x380000
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
 80061aa:	f5b2 1f60 	cmp.w	r2, #3670016	; 0x380000
 80061ae:	d1f0      	bne.n	8006192 <HAL_DAC_Start+0x34>
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG2;
 80061b0:	685a      	ldr	r2, [r3, #4]
 80061b2:	f042 0202 	orr.w	r2, r2, #2
 80061b6:	e7eb      	b.n	8006190 <HAL_DAC_Start+0x32>

080061b8 <HAL_DAC_ConfigChannel>:
  *            @arg DAC_CHANNEL_1: DAC Channel1 selected
  *            @arg DAC_CHANNEL_2: DAC Channel2 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_ConfigChannel(DAC_HandleTypeDef* hdac, DAC_ChannelConfTypeDef* sConfig, uint32_t Channel)
{
 80061b8:	b530      	push	{r4, r5, lr}
  assert_param(IS_DAC_TRIGGER(sConfig->DAC_Trigger));
  assert_param(IS_DAC_OUTPUT_BUFFER_STATE(sConfig->DAC_OutputBuffer));
  assert_param(IS_DAC_CHANNEL(Channel));
  
  /* Process locked */
  __HAL_LOCK(hdac);
 80061ba:	7943      	ldrb	r3, [r0, #5]
 80061bc:	2b01      	cmp	r3, #1
 80061be:	f04f 0302 	mov.w	r3, #2
 80061c2:	d018      	beq.n	80061f6 <HAL_DAC_ConfigChannel+0x3e>
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_BUSY;
  
  /* Get the DAC CR value */
  tmpreg1 = hdac->Instance->CR;
 80061c4:	6804      	ldr	r4, [r0, #0]
  hdac->State = HAL_DAC_STATE_BUSY;
 80061c6:	7103      	strb	r3, [r0, #4]
  tmpreg1 = hdac->Instance->CR;
 80061c8:	6823      	ldr	r3, [r4, #0]
  /* Clear BOFFx, TENx, TSELx, WAVEx and MAMPx bits */
  tmpreg1 &= ~(((uint32_t)(DAC_CR_MAMP1 | DAC_CR_WAVE1 | DAC_CR_TSEL1 | DAC_CR_TEN1 | DAC_CR_BOFF1)) << Channel);
 80061ca:	f640 75fe 	movw	r5, #4094	; 0xffe
 80061ce:	4095      	lsls	r5, r2
 80061d0:	ea23 0505 	bic.w	r5, r3, r5
  /* Configure for the selected DAC channel: buffer output, trigger */
  /* Set TSELx and TENx bits according to DAC_Trigger value */
  /* Set BOFFx bit according to DAC_OutputBuffer value */   
  tmpreg2 = (sConfig->DAC_Trigger | sConfig->DAC_OutputBuffer);
 80061d4:	e9d1 3100 	ldrd	r3, r1, [r1]
 80061d8:	430b      	orrs	r3, r1
  /* Calculate CR register value depending on DAC_Channel */
  tmpreg1 |= tmpreg2 << Channel;
 80061da:	4093      	lsls	r3, r2
 80061dc:	432b      	orrs	r3, r5
  /* Write to DAC CR */
  hdac->Instance->CR = tmpreg1;
 80061de:	6023      	str	r3, [r4, #0]
  /* Disable wave generation */
  hdac->Instance->CR &= ~(DAC_CR_WAVE1 << Channel);
 80061e0:	6823      	ldr	r3, [r4, #0]
 80061e2:	21c0      	movs	r1, #192	; 0xc0
 80061e4:	fa01 f202 	lsl.w	r2, r1, r2
 80061e8:	ea23 0202 	bic.w	r2, r3, r2
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_READY;
 80061ec:	2301      	movs	r3, #1
  hdac->Instance->CR &= ~(DAC_CR_WAVE1 << Channel);
 80061ee:	6022      	str	r2, [r4, #0]
  hdac->State = HAL_DAC_STATE_READY;
 80061f0:	7103      	strb	r3, [r0, #4]
  
  /* Process unlocked */
  __HAL_UNLOCK(hdac);
 80061f2:	2300      	movs	r3, #0
 80061f4:	7143      	strb	r3, [r0, #5]
  __HAL_LOCK(hdac);
 80061f6:	4618      	mov	r0, r3
  
  /* Return function status */
  return HAL_OK;
}
 80061f8:	bd30      	pop	{r4, r5, pc}

080061fa <HAL_DAC_SetValue>:
  *            @arg DAC_ALIGN_12B_R: 12bit right data alignment selected
  * @param  Data Data to be loaded in the selected data holding register.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_SetValue(DAC_HandleTypeDef* hdac, uint32_t Channel, uint32_t Alignment, uint32_t Data)
{  
 80061fa:	b513      	push	{r0, r1, r4, lr}
  /* Check the parameters */
  assert_param(IS_DAC_CHANNEL(Channel));
  assert_param(IS_DAC_ALIGN(Alignment));
  assert_param(IS_DAC_DATA(Data));
  
  tmp = (uint32_t)hdac->Instance; 
 80061fc:	6800      	ldr	r0, [r0, #0]
  __IO uint32_t tmp = 0U;
 80061fe:	2400      	movs	r4, #0
 8006200:	9401      	str	r4, [sp, #4]
  tmp = (uint32_t)hdac->Instance; 
 8006202:	9001      	str	r0, [sp, #4]
  if(Channel == DAC_CHANNEL_1)
 8006204:	b941      	cbnz	r1, 8006218 <HAL_DAC_SetValue+0x1e>
  {
    tmp += DAC_DHR12R1_ALIGNMENT(Alignment);
 8006206:	9901      	ldr	r1, [sp, #4]
 8006208:	3108      	adds	r1, #8
  }
  else
  {
    tmp += DAC_DHR12R2_ALIGNMENT(Alignment);
 800620a:	440a      	add	r2, r1
 800620c:	9201      	str	r2, [sp, #4]
  }

  /* Set the DAC channel1 selected data holding register */
  *(__IO uint32_t *) tmp = Data;
 800620e:	9a01      	ldr	r2, [sp, #4]
  
  /* Return function status */
  return HAL_OK;
}
 8006210:	2000      	movs	r0, #0
  *(__IO uint32_t *) tmp = Data;
 8006212:	6013      	str	r3, [r2, #0]
}
 8006214:	b002      	add	sp, #8
 8006216:	bd10      	pop	{r4, pc}
    tmp += DAC_DHR12R2_ALIGNMENT(Alignment);
 8006218:	9901      	ldr	r1, [sp, #4]
 800621a:	3114      	adds	r1, #20
 800621c:	e7f5      	b.n	800620a <HAL_DAC_SetValue+0x10>

0800621e <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 800621e:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if(hdma2d == NULL)
 8006220:	4604      	mov	r4, r0
 8006222:	b330      	cbz	r0, 8006272 <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 8006224:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8006228:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800622c:	b91b      	cbnz	r3, 8006236 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 800622e:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8006232:	f7fb fd0b 	bl	8001c4c <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8006236:	6822      	ldr	r2, [r4, #0]
 8006238:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800623a:	2302      	movs	r3, #2
 800623c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8006240:	6813      	ldr	r3, [r2, #0]
 8006242:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8006246:	430b      	orrs	r3, r1
 8006248:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 800624a:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800624c:	68a1      	ldr	r1, [r4, #8]
 800624e:	f023 0307 	bic.w	r3, r3, #7
 8006252:	430b      	orrs	r3, r1
 8006254:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8006256:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8006258:	68e1      	ldr	r1, [r4, #12]
 800625a:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 800625e:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8006262:	430b      	orrs	r3, r1
 8006264:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8006266:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8006268:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800626a:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800626c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 8006270:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 8006272:	2001      	movs	r0, #1
 8006274:	e7fc      	b.n	8006270 <HAL_DMA2D_Init+0x52>

08006276 <HAL_DMA2D_LineEventCallback>:
 8006276:	4770      	bx	lr

08006278 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8006278:	4770      	bx	lr

0800627a <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800627a:	6803      	ldr	r3, [r0, #0]
{
 800627c:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800627e:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8006280:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8006282:	07f2      	lsls	r2, r6, #31
{
 8006284:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8006286:	d514      	bpl.n	80062b2 <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8006288:	05e9      	lsls	r1, r5, #23
 800628a:	d512      	bpl.n	80062b2 <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 800628c:	681a      	ldr	r2, [r3, #0]
 800628e:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8006292:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8006294:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8006296:	f042 0201 	orr.w	r2, r2, #1
 800629a:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 800629c:	2201      	movs	r2, #1
 800629e:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80062a0:	2304      	movs	r3, #4
 80062a2:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80062a6:	2300      	movs	r3, #0
 80062a8:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 80062ac:	6943      	ldr	r3, [r0, #20]
 80062ae:	b103      	cbz	r3, 80062b2 <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80062b0:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 80062b2:	06b2      	lsls	r2, r6, #26
 80062b4:	d516      	bpl.n	80062e4 <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 80062b6:	04ab      	lsls	r3, r5, #18
 80062b8:	d514      	bpl.n	80062e4 <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 80062ba:	6823      	ldr	r3, [r4, #0]
 80062bc:	681a      	ldr	r2, [r3, #0]
 80062be:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80062c2:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 80062c4:	2220      	movs	r2, #32
 80062c6:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 80062c8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80062ca:	f043 0302 	orr.w	r3, r3, #2
 80062ce:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80062d0:	2304      	movs	r3, #4
 80062d2:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80062d6:	2300      	movs	r3, #0
 80062d8:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 80062dc:	6963      	ldr	r3, [r4, #20]
 80062de:	b10b      	cbz	r3, 80062e4 <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80062e0:	4620      	mov	r0, r4
 80062e2:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 80062e4:	0730      	lsls	r0, r6, #28
 80062e6:	d516      	bpl.n	8006316 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 80062e8:	0529      	lsls	r1, r5, #20
 80062ea:	d514      	bpl.n	8006316 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 80062ec:	6823      	ldr	r3, [r4, #0]
 80062ee:	681a      	ldr	r2, [r3, #0]
 80062f0:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80062f4:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 80062f6:	2208      	movs	r2, #8
 80062f8:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 80062fa:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80062fc:	f043 0304 	orr.w	r3, r3, #4
 8006300:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8006302:	2304      	movs	r3, #4
 8006304:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8006308:	2300      	movs	r3, #0
 800630a:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 800630e:	6963      	ldr	r3, [r4, #20]
 8006310:	b10b      	cbz	r3, 8006316 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8006312:	4620      	mov	r0, r4
 8006314:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8006316:	0772      	lsls	r2, r6, #29
 8006318:	d50b      	bpl.n	8006332 <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 800631a:	056b      	lsls	r3, r5, #21
 800631c:	d509      	bpl.n	8006332 <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 800631e:	6823      	ldr	r3, [r4, #0]
 8006320:	681a      	ldr	r2, [r3, #0]
 8006322:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006326:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8006328:	2204      	movs	r2, #4
 800632a:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 800632c:	4620      	mov	r0, r4
 800632e:	f7ff ffa2 	bl	8006276 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8006332:	07b0      	lsls	r0, r6, #30
 8006334:	d514      	bpl.n	8006360 <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8006336:	05a9      	lsls	r1, r5, #22
 8006338:	d512      	bpl.n	8006360 <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 800633a:	6823      	ldr	r3, [r4, #0]
 800633c:	681a      	ldr	r2, [r3, #0]
 800633e:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8006342:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8006344:	2202      	movs	r2, #2
 8006346:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8006348:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800634a:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800634c:	2301      	movs	r3, #1
 800634e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8006352:	2300      	movs	r3, #0
 8006354:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferCpltCallback != NULL)
 8006358:	6923      	ldr	r3, [r4, #16]
 800635a:	b10b      	cbz	r3, 8006360 <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 800635c:	4620      	mov	r0, r4
 800635e:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8006360:	06f2      	lsls	r2, r6, #27
 8006362:	d513      	bpl.n	800638c <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8006364:	04eb      	lsls	r3, r5, #19
 8006366:	d511      	bpl.n	800638c <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8006368:	6823      	ldr	r3, [r4, #0]
 800636a:	681a      	ldr	r2, [r3, #0]
 800636c:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8006370:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8006372:	2210      	movs	r2, #16
 8006374:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8006376:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006378:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800637a:	2301      	movs	r3, #1
 800637c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8006380:	2300      	movs	r3, #0
 8006382:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8006386:	4620      	mov	r0, r4
 8006388:	f7ff ff76 	bl	8006278 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 800638c:	bd70      	pop	{r4, r5, r6, pc}
	...

08006390 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8006390:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8006392:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8006396:	2b01      	cmp	r3, #1
 8006398:	f04f 0302 	mov.w	r3, #2
 800639c:	d02b      	beq.n	80063f6 <HAL_DMA2D_ConfigLayer+0x66>
 800639e:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80063a0:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 80063a4:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80063a8:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 80063ac:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 80063b0:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 80063b2:	4f18      	ldr	r7, [pc, #96]	; (8006414 <HAL_DMA2D_ConfigLayer+0x84>)
 80063b4:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80063b8:	3c09      	subs	r4, #9
 80063ba:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 80063bc:	bf9c      	itt	ls
 80063be:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 80063c2:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80063c4:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80063c8:	6803      	ldr	r3, [r0, #0]
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 80063ca:	bf88      	it	hi
 80063cc:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 80063d0:	b999      	cbnz	r1, 80063fa <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80063d2:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80063d4:	4039      	ands	r1, r7
 80063d6:	430a      	orrs	r2, r1
 80063d8:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80063da:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 80063dc:	6982      	ldr	r2, [r0, #24]
 80063de:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80063e0:	d803      	bhi.n	80063ea <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 80063e2:	6a42      	ldr	r2, [r0, #36]	; 0x24
 80063e4:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 80063e8:	629a      	str	r2, [r3, #40]	; 0x28
    {
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 80063ea:	2301      	movs	r3, #1
 80063ec:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 80063f0:	2300      	movs	r3, #0
 80063f2:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 80063f6:	4618      	mov	r0, r3

  return HAL_OK;
}
 80063f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 80063fa:	69d9      	ldr	r1, [r3, #28]
 80063fc:	4039      	ands	r1, r7
 80063fe:	430a      	orrs	r2, r1
 8006400:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8006402:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8006404:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8006406:	6992      	ldr	r2, [r2, #24]
 8006408:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 800640a:	bf9c      	itt	ls
 800640c:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 8006410:	621d      	strls	r5, [r3, #32]
 8006412:	e7ea      	b.n	80063ea <HAL_DMA2D_ConfigLayer+0x5a>
 8006414:	00fcfff0 	.word	0x00fcfff0

08006418 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8006418:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800641c:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 80065e0 <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8006420:	4a6d      	ldr	r2, [pc, #436]	; (80065d8 <HAL_GPIO_Init+0x1c0>)
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8006422:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 80065e4 <HAL_GPIO_Init+0x1cc>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8006426:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8006428:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 800642a:	2401      	movs	r4, #1
 800642c:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800642e:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 8006432:	43ac      	bics	r4, r5
 8006434:	f040 80b7 	bne.w	80065a6 <HAL_GPIO_Init+0x18e>
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8006438:	684c      	ldr	r4, [r1, #4]
 800643a:	f024 0c10 	bic.w	ip, r4, #16
 800643e:	ea4f 0e43 	mov.w	lr, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8006442:	2503      	movs	r5, #3
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8006444:	f10c 37ff 	add.w	r7, ip, #4294967295
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8006448:	fa05 f50e 	lsl.w	r5, r5, lr
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 800644c:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800644e:	ea6f 0505 	mvn.w	r5, r5
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8006452:	d811      	bhi.n	8006478 <HAL_GPIO_Init+0x60>
        temp = GPIOx->OSPEEDR; 
 8006454:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8006456:	ea07 0a05 	and.w	sl, r7, r5
        temp |= (GPIO_Init->Speed << (position * 2U));
 800645a:	68cf      	ldr	r7, [r1, #12]
 800645c:	fa07 f70e 	lsl.w	r7, r7, lr
 8006460:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 8006464:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8006466:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8006468:	ea27 0a06 	bic.w	sl, r7, r6
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 800646c:	f3c4 1700 	ubfx	r7, r4, #4, #1
 8006470:	409f      	lsls	r7, r3
 8006472:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OTYPER = temp;
 8006476:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 8006478:	68c7      	ldr	r7, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800647a:	ea07 0a05 	and.w	sl, r7, r5
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 800647e:	688f      	ldr	r7, [r1, #8]
 8006480:	fa07 f70e 	lsl.w	r7, r7, lr
 8006484:	ea47 070a 	orr.w	r7, r7, sl
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8006488:	f1bc 0f02 	cmp.w	ip, #2
      GPIOx->PUPDR = temp;
 800648c:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 800648e:	d116      	bne.n	80064be <HAL_GPIO_Init+0xa6>
        temp = GPIOx->AFR[position >> 3U];
 8006490:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 8006494:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8006498:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800649c:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80064a0:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 80064a4:	f04f 0c0f 	mov.w	ip, #15
 80064a8:	fa0c fc0b 	lsl.w	ip, ip, fp
 80064ac:	ea27 0c0c 	bic.w	ip, r7, ip
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80064b0:	690f      	ldr	r7, [r1, #16]
 80064b2:	fa07 f70b 	lsl.w	r7, r7, fp
 80064b6:	ea47 070c 	orr.w	r7, r7, ip
        GPIOx->AFR[position >> 3U] = temp;
 80064ba:	f8ca 7020 	str.w	r7, [sl, #32]
      temp = GPIOx->MODER;
 80064be:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80064c0:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80064c2:	f004 0703 	and.w	r7, r4, #3
 80064c6:	fa07 f70e 	lsl.w	r7, r7, lr
 80064ca:	433d      	orrs	r5, r7
      GPIOx->MODER = temp;
 80064cc:	6005      	str	r5, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 80064ce:	00e5      	lsls	r5, r4, #3
 80064d0:	d569      	bpl.n	80065a6 <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80064d2:	f04f 0b00 	mov.w	fp, #0
 80064d6:	f8cd b004 	str.w	fp, [sp, #4]
 80064da:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80064de:	4d3f      	ldr	r5, [pc, #252]	; (80065dc <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80064e0:	f447 4780 	orr.w	r7, r7, #16384	; 0x4000
 80064e4:	f8c8 7044 	str.w	r7, [r8, #68]	; 0x44
 80064e8:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 80064ec:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 80064f0:	9701      	str	r7, [sp, #4]
 80064f2:	9f01      	ldr	r7, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 80064f4:	f023 0703 	bic.w	r7, r3, #3
 80064f8:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 80064fc:	f507 379c 	add.w	r7, r7, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8006500:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8006504:	f8d7 a008 	ldr.w	sl, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8006508:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800650c:	f04f 0c0f 	mov.w	ip, #15
 8006510:	fa0c fc0e 	lsl.w	ip, ip, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8006514:	42a8      	cmp	r0, r5
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8006516:	ea2a 0c0c 	bic.w	ip, sl, ip
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800651a:	d04b      	beq.n	80065b4 <HAL_GPIO_Init+0x19c>
 800651c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006520:	42a8      	cmp	r0, r5
 8006522:	d049      	beq.n	80065b8 <HAL_GPIO_Init+0x1a0>
 8006524:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006528:	42a8      	cmp	r0, r5
 800652a:	d047      	beq.n	80065bc <HAL_GPIO_Init+0x1a4>
 800652c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006530:	42a8      	cmp	r0, r5
 8006532:	d045      	beq.n	80065c0 <HAL_GPIO_Init+0x1a8>
 8006534:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006538:	42a8      	cmp	r0, r5
 800653a:	d043      	beq.n	80065c4 <HAL_GPIO_Init+0x1ac>
 800653c:	4548      	cmp	r0, r9
 800653e:	d043      	beq.n	80065c8 <HAL_GPIO_Init+0x1b0>
 8006540:	f505 6500 	add.w	r5, r5, #2048	; 0x800
 8006544:	42a8      	cmp	r0, r5
 8006546:	d041      	beq.n	80065cc <HAL_GPIO_Init+0x1b4>
 8006548:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800654c:	42a8      	cmp	r0, r5
 800654e:	d03f      	beq.n	80065d0 <HAL_GPIO_Init+0x1b8>
 8006550:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006554:	42a8      	cmp	r0, r5
 8006556:	d03d      	beq.n	80065d4 <HAL_GPIO_Init+0x1bc>
 8006558:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800655c:	42a8      	cmp	r0, r5
 800655e:	bf0c      	ite	eq
 8006560:	2509      	moveq	r5, #9
 8006562:	250a      	movne	r5, #10
 8006564:	fa05 f50e 	lsl.w	r5, r5, lr
 8006568:	ea45 050c 	orr.w	r5, r5, ip
        SYSCFG->EXTICR[position >> 2U] = temp;
 800656c:	60bd      	str	r5, [r7, #8]
        temp = EXTI->IMR;
 800656e:	6815      	ldr	r5, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 8006570:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8006572:	f414 3f80 	tst.w	r4, #65536	; 0x10000
        temp &= ~((uint32_t)iocurrent);
 8006576:	bf0c      	ite	eq
 8006578:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 800657a:	4335      	orrne	r5, r6
        }
        EXTI->IMR = temp;
 800657c:	6015      	str	r5, [r2, #0]

        temp = EXTI->EMR;
 800657e:	6855      	ldr	r5, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8006580:	f414 3f00 	tst.w	r4, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 8006584:	bf0c      	ite	eq
 8006586:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 8006588:	4335      	orrne	r5, r6
        }
        EXTI->EMR = temp;
 800658a:	6055      	str	r5, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800658c:	6895      	ldr	r5, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 800658e:	f414 1f80 	tst.w	r4, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 8006592:	bf0c      	ite	eq
 8006594:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 8006596:	4335      	orrne	r5, r6
        }
        EXTI->RTSR = temp;
 8006598:	6095      	str	r5, [r2, #8]

        temp = EXTI->FTSR;
 800659a:	68d5      	ldr	r5, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 800659c:	02a4      	lsls	r4, r4, #10
        temp &= ~((uint32_t)iocurrent);
 800659e:	bf54      	ite	pl
 80065a0:	403d      	andpl	r5, r7
        {
          temp |= iocurrent;
 80065a2:	4335      	orrmi	r5, r6
        }
        EXTI->FTSR = temp;
 80065a4:	60d5      	str	r5, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80065a6:	3301      	adds	r3, #1
 80065a8:	2b10      	cmp	r3, #16
 80065aa:	f47f af3d 	bne.w	8006428 <HAL_GPIO_Init+0x10>
      }
    }
  }
}
 80065ae:	b003      	add	sp, #12
 80065b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80065b4:	465d      	mov	r5, fp
 80065b6:	e7d5      	b.n	8006564 <HAL_GPIO_Init+0x14c>
 80065b8:	2501      	movs	r5, #1
 80065ba:	e7d3      	b.n	8006564 <HAL_GPIO_Init+0x14c>
 80065bc:	2502      	movs	r5, #2
 80065be:	e7d1      	b.n	8006564 <HAL_GPIO_Init+0x14c>
 80065c0:	2503      	movs	r5, #3
 80065c2:	e7cf      	b.n	8006564 <HAL_GPIO_Init+0x14c>
 80065c4:	2504      	movs	r5, #4
 80065c6:	e7cd      	b.n	8006564 <HAL_GPIO_Init+0x14c>
 80065c8:	2505      	movs	r5, #5
 80065ca:	e7cb      	b.n	8006564 <HAL_GPIO_Init+0x14c>
 80065cc:	2506      	movs	r5, #6
 80065ce:	e7c9      	b.n	8006564 <HAL_GPIO_Init+0x14c>
 80065d0:	2507      	movs	r5, #7
 80065d2:	e7c7      	b.n	8006564 <HAL_GPIO_Init+0x14c>
 80065d4:	2508      	movs	r5, #8
 80065d6:	e7c5      	b.n	8006564 <HAL_GPIO_Init+0x14c>
 80065d8:	40013c00 	.word	0x40013c00
 80065dc:	40020000 	.word	0x40020000
 80065e0:	40023800 	.word	0x40023800
 80065e4:	40021400 	.word	0x40021400

080065e8 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 80065e8:	b10a      	cbz	r2, 80065ee <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80065ea:	6181      	str	r1, [r0, #24]
  }
}
 80065ec:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80065ee:	0409      	lsls	r1, r1, #16
 80065f0:	e7fb      	b.n	80065ea <HAL_GPIO_WritePin+0x2>

080065f2 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80065f2:	6801      	ldr	r1, [r0, #0]
 80065f4:	694b      	ldr	r3, [r1, #20]
 80065f6:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 80065fa:	f04f 0200 	mov.w	r2, #0
 80065fe:	d010      	beq.n	8006622 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8006600:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8006604:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8006606:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8006608:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800660a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800660e:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8006612:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8006614:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8006618:	f043 0304 	orr.w	r3, r3, #4
 800661c:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 800661e:	2001      	movs	r0, #1
 8006620:	4770      	bx	lr
  }
  return HAL_OK;
 8006622:	4618      	mov	r0, r3
}
 8006624:	4770      	bx	lr

08006626 <I2C_WaitOnFlagUntilTimeout>:
{
 8006626:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 800662a:	4606      	mov	r6, r0
 800662c:	460f      	mov	r7, r1
 800662e:	4691      	mov	r9, r2
 8006630:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8006632:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8006636:	6833      	ldr	r3, [r6, #0]
 8006638:	f1ba 0f01 	cmp.w	sl, #1
 800663c:	bf0c      	ite	eq
 800663e:	695c      	ldreq	r4, [r3, #20]
 8006640:	699c      	ldrne	r4, [r3, #24]
 8006642:	ea27 0404 	bic.w	r4, r7, r4
 8006646:	b2a4      	uxth	r4, r4
 8006648:	fab4 f484 	clz	r4, r4
 800664c:	0964      	lsrs	r4, r4, #5
 800664e:	45a1      	cmp	r9, r4
 8006650:	d001      	beq.n	8006656 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8006652:	2000      	movs	r0, #0
 8006654:	e017      	b.n	8006686 <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 8006656:	1c6a      	adds	r2, r5, #1
 8006658:	d0ee      	beq.n	8006638 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800665a:	f7ff fb37 	bl	8005ccc <HAL_GetTick>
 800665e:	9b08      	ldr	r3, [sp, #32]
 8006660:	1ac0      	subs	r0, r0, r3
 8006662:	42a8      	cmp	r0, r5
 8006664:	d801      	bhi.n	800666a <I2C_WaitOnFlagUntilTimeout+0x44>
 8006666:	2d00      	cmp	r5, #0
 8006668:	d1e5      	bne.n	8006636 <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800666a:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800666c:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800666e:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8006670:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8006674:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8006678:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800667a:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800667e:	f042 0220 	orr.w	r2, r2, #32
 8006682:	6432      	str	r2, [r6, #64]	; 0x40
        return HAL_ERROR;
 8006684:	2001      	movs	r0, #1
}
 8006686:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

0800668a <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 800668a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800668e:	4604      	mov	r4, r0
 8006690:	460f      	mov	r7, r1
 8006692:	4616      	mov	r6, r2
 8006694:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8006696:	6825      	ldr	r5, [r4, #0]
 8006698:	6968      	ldr	r0, [r5, #20]
 800669a:	ea27 0000 	bic.w	r0, r7, r0
 800669e:	b280      	uxth	r0, r0
 80066a0:	b1b8      	cbz	r0, 80066d2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80066a2:	696b      	ldr	r3, [r5, #20]
 80066a4:	055a      	lsls	r2, r3, #21
 80066a6:	d516      	bpl.n	80066d6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80066a8:	682b      	ldr	r3, [r5, #0]
 80066aa:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80066ae:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80066b0:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 80066b4:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 80066b6:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80066b8:	2300      	movs	r3, #0
 80066ba:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80066bc:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80066c0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80066c4:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80066c6:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80066ca:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80066cc:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 80066d0:	2001      	movs	r0, #1
}
 80066d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 80066d6:	1c73      	adds	r3, r6, #1
 80066d8:	d0de      	beq.n	8006698 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80066da:	f7ff faf7 	bl	8005ccc <HAL_GetTick>
 80066de:	eba0 0008 	sub.w	r0, r0, r8
 80066e2:	42b0      	cmp	r0, r6
 80066e4:	d801      	bhi.n	80066ea <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 80066e6:	2e00      	cmp	r6, #0
 80066e8:	d1d5      	bne.n	8006696 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80066ea:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80066ec:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80066ee:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80066f0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80066f4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80066f8:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80066fa:	f042 0220 	orr.w	r2, r2, #32
 80066fe:	e7e4      	b.n	80066ca <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08006700 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8006700:	b570      	push	{r4, r5, r6, lr}
 8006702:	4604      	mov	r4, r0
 8006704:	460d      	mov	r5, r1
 8006706:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8006708:	6821      	ldr	r1, [r4, #0]
 800670a:	694b      	ldr	r3, [r1, #20]
 800670c:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 8006710:	d001      	beq.n	8006716 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8006712:	2000      	movs	r0, #0
 8006714:	e010      	b.n	8006738 <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8006716:	694a      	ldr	r2, [r1, #20]
 8006718:	06d2      	lsls	r2, r2, #27
 800671a:	d50e      	bpl.n	800673a <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800671c:	f06f 0210 	mvn.w	r2, #16
 8006720:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8006722:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8006724:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8006726:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800672a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800672e:	6c22      	ldr	r2, [r4, #64]	; 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006730:	6422      	str	r2, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8006732:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      return HAL_ERROR;
 8006736:	2001      	movs	r0, #1
}
 8006738:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800673a:	f7ff fac7 	bl	8005ccc <HAL_GetTick>
 800673e:	1b80      	subs	r0, r0, r6
 8006740:	42a8      	cmp	r0, r5
 8006742:	d801      	bhi.n	8006748 <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 8006744:	2d00      	cmp	r5, #0
 8006746:	d1df      	bne.n	8006708 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->PreviousState       = I2C_STATE_NONE;
 8006748:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 800674a:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800674c:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800674e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006752:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006756:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8006758:	f042 0220 	orr.w	r2, r2, #32
 800675c:	e7e8      	b.n	8006730 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

0800675e <I2C_WaitOnBTFFlagUntilTimeout>:
{
 800675e:	b570      	push	{r4, r5, r6, lr}
 8006760:	4604      	mov	r4, r0
 8006762:	460d      	mov	r5, r1
 8006764:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8006766:	6823      	ldr	r3, [r4, #0]
 8006768:	695b      	ldr	r3, [r3, #20]
 800676a:	075b      	lsls	r3, r3, #29
 800676c:	d501      	bpl.n	8006772 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 800676e:	2000      	movs	r0, #0
}
 8006770:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8006772:	4620      	mov	r0, r4
 8006774:	f7ff ff3d 	bl	80065f2 <I2C_IsAcknowledgeFailed>
 8006778:	b9a8      	cbnz	r0, 80067a6 <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 800677a:	1c6a      	adds	r2, r5, #1
 800677c:	d0f3      	beq.n	8006766 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800677e:	f7ff faa5 	bl	8005ccc <HAL_GetTick>
 8006782:	1b80      	subs	r0, r0, r6
 8006784:	42a8      	cmp	r0, r5
 8006786:	d801      	bhi.n	800678c <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8006788:	2d00      	cmp	r5, #0
 800678a:	d1ec      	bne.n	8006766 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800678c:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800678e:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006790:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8006792:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006796:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800679a:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800679c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80067a0:	f042 0220 	orr.w	r2, r2, #32
 80067a4:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 80067a6:	2001      	movs	r0, #1
 80067a8:	e7e2      	b.n	8006770 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

080067aa <I2C_WaitOnTXEFlagUntilTimeout>:
{
 80067aa:	b570      	push	{r4, r5, r6, lr}
 80067ac:	4604      	mov	r4, r0
 80067ae:	460d      	mov	r5, r1
 80067b0:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80067b2:	6823      	ldr	r3, [r4, #0]
 80067b4:	695b      	ldr	r3, [r3, #20]
 80067b6:	061b      	lsls	r3, r3, #24
 80067b8:	d501      	bpl.n	80067be <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 80067ba:	2000      	movs	r0, #0
}
 80067bc:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80067be:	4620      	mov	r0, r4
 80067c0:	f7ff ff17 	bl	80065f2 <I2C_IsAcknowledgeFailed>
 80067c4:	b9a8      	cbnz	r0, 80067f2 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 80067c6:	1c6a      	adds	r2, r5, #1
 80067c8:	d0f3      	beq.n	80067b2 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80067ca:	f7ff fa7f 	bl	8005ccc <HAL_GetTick>
 80067ce:	1b80      	subs	r0, r0, r6
 80067d0:	42a8      	cmp	r0, r5
 80067d2:	d801      	bhi.n	80067d8 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 80067d4:	2d00      	cmp	r5, #0
 80067d6:	d1ec      	bne.n	80067b2 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80067d8:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80067da:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80067dc:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80067de:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80067e2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80067e6:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80067e8:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80067ec:	f042 0220 	orr.w	r2, r2, #32
 80067f0:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 80067f2:	2001      	movs	r0, #1
 80067f4:	e7e2      	b.n	80067bc <I2C_WaitOnTXEFlagUntilTimeout+0x12>
	...

080067f8 <I2C_RequestMemoryWrite>:
{
 80067f8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80067fc:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80067fe:	6802      	ldr	r2, [r0, #0]
{
 8006800:	b085      	sub	sp, #20
 8006802:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 8006806:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006808:	6813      	ldr	r3, [r2, #0]
 800680a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800680e:	6013      	str	r3, [r2, #0]
{
 8006810:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006812:	463b      	mov	r3, r7
 8006814:	f8cd 8000 	str.w	r8, [sp]
 8006818:	2200      	movs	r2, #0
 800681a:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 800681e:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006820:	f7ff ff01 	bl	8006626 <I2C_WaitOnFlagUntilTimeout>
 8006824:	6823      	ldr	r3, [r4, #0]
 8006826:	b138      	cbz	r0, 8006838 <I2C_RequestMemoryWrite+0x40>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8006828:	681b      	ldr	r3, [r3, #0]
 800682a:	05db      	lsls	r3, r3, #23
 800682c:	d502      	bpl.n	8006834 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800682e:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006832:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8006834:	2003      	movs	r0, #3
 8006836:	e00a      	b.n	800684e <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8006838:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 800683c:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800683e:	4919      	ldr	r1, [pc, #100]	; (80068a4 <I2C_RequestMemoryWrite+0xac>)
 8006840:	4643      	mov	r3, r8
 8006842:	463a      	mov	r2, r7
 8006844:	4620      	mov	r0, r4
 8006846:	f7ff ff20 	bl	800668a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800684a:	b118      	cbz	r0, 8006854 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 800684c:	2001      	movs	r0, #1
}
 800684e:	b005      	add	sp, #20
 8006850:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006854:	6823      	ldr	r3, [r4, #0]
 8006856:	9003      	str	r0, [sp, #12]
 8006858:	695a      	ldr	r2, [r3, #20]
 800685a:	9203      	str	r2, [sp, #12]
 800685c:	699b      	ldr	r3, [r3, #24]
 800685e:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006860:	4642      	mov	r2, r8
 8006862:	4639      	mov	r1, r7
 8006864:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006866:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006868:	f7ff ff9f 	bl	80067aa <I2C_WaitOnTXEFlagUntilTimeout>
 800686c:	b140      	cbz	r0, 8006880 <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800686e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006870:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006872:	bf01      	itttt	eq
 8006874:	6822      	ldreq	r2, [r4, #0]
 8006876:	6813      	ldreq	r3, [r2, #0]
 8006878:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800687c:	6013      	streq	r3, [r2, #0]
 800687e:	e7e5      	b.n	800684c <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006880:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006884:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006886:	d102      	bne.n	800688e <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8006888:	b2ed      	uxtb	r5, r5
 800688a:	611d      	str	r5, [r3, #16]
 800688c:	e7df      	b.n	800684e <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800688e:	0a2a      	lsrs	r2, r5, #8
 8006890:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006892:	4639      	mov	r1, r7
 8006894:	4642      	mov	r2, r8
 8006896:	4620      	mov	r0, r4
 8006898:	f7ff ff87 	bl	80067aa <I2C_WaitOnTXEFlagUntilTimeout>
 800689c:	2800      	cmp	r0, #0
 800689e:	d1e6      	bne.n	800686e <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80068a0:	6823      	ldr	r3, [r4, #0]
 80068a2:	e7f1      	b.n	8006888 <I2C_RequestMemoryWrite+0x90>
 80068a4:	00010002 	.word	0x00010002

080068a8 <I2C_RequestMemoryRead>:
{
 80068a8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80068ac:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80068ae:	6803      	ldr	r3, [r0, #0]
{
 80068b0:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80068b2:	681a      	ldr	r2, [r3, #0]
 80068b4:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80068b8:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80068ba:	681a      	ldr	r2, [r3, #0]
{
 80068bc:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80068c0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80068c4:	601a      	str	r2, [r3, #0]
{
 80068c6:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80068c8:	463b      	mov	r3, r7
 80068ca:	f8cd 8000 	str.w	r8, [sp]
 80068ce:	2200      	movs	r2, #0
 80068d0:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 80068d4:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80068d6:	f7ff fea6 	bl	8006626 <I2C_WaitOnFlagUntilTimeout>
 80068da:	6823      	ldr	r3, [r4, #0]
 80068dc:	b148      	cbz	r0, 80068f2 <I2C_RequestMemoryRead+0x4a>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 80068de:	681b      	ldr	r3, [r3, #0]
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 80068e0:	05db      	lsls	r3, r3, #23
 80068e2:	d502      	bpl.n	80068ea <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80068e4:	f44f 7300 	mov.w	r3, #512	; 0x200
 80068e8:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 80068ea:	2003      	movs	r0, #3
}
 80068ec:	b004      	add	sp, #16
 80068ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80068f2:	fa5f f986 	uxtb.w	r9, r6
 80068f6:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 80068fa:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80068fc:	492a      	ldr	r1, [pc, #168]	; (80069a8 <I2C_RequestMemoryRead+0x100>)
 80068fe:	4643      	mov	r3, r8
 8006900:	463a      	mov	r2, r7
 8006902:	4620      	mov	r0, r4
 8006904:	f7ff fec1 	bl	800668a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006908:	b108      	cbz	r0, 800690e <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 800690a:	2001      	movs	r0, #1
 800690c:	e7ee      	b.n	80068ec <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800690e:	6823      	ldr	r3, [r4, #0]
 8006910:	9003      	str	r0, [sp, #12]
 8006912:	695a      	ldr	r2, [r3, #20]
 8006914:	9203      	str	r2, [sp, #12]
 8006916:	699b      	ldr	r3, [r3, #24]
 8006918:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800691a:	4642      	mov	r2, r8
 800691c:	4639      	mov	r1, r7
 800691e:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006920:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006922:	f7ff ff42 	bl	80067aa <I2C_WaitOnTXEFlagUntilTimeout>
 8006926:	b140      	cbz	r0, 800693a <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8006928:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800692a:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800692c:	bf01      	itttt	eq
 800692e:	6822      	ldreq	r2, [r4, #0]
 8006930:	6813      	ldreq	r3, [r2, #0]
 8006932:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8006936:	6013      	streq	r3, [r2, #0]
 8006938:	e7e7      	b.n	800690a <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800693a:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800693e:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006940:	d11a      	bne.n	8006978 <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8006942:	b2ed      	uxtb	r5, r5
 8006944:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006946:	4642      	mov	r2, r8
 8006948:	4639      	mov	r1, r7
 800694a:	4620      	mov	r0, r4
 800694c:	f7ff ff2d 	bl	80067aa <I2C_WaitOnTXEFlagUntilTimeout>
 8006950:	2800      	cmp	r0, #0
 8006952:	d1e9      	bne.n	8006928 <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006954:	6822      	ldr	r2, [r4, #0]
 8006956:	6813      	ldr	r3, [r2, #0]
 8006958:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800695c:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800695e:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8006962:	4602      	mov	r2, r0
 8006964:	f8cd 8000 	str.w	r8, [sp]
 8006968:	463b      	mov	r3, r7
 800696a:	4620      	mov	r0, r4
 800696c:	f7ff fe5b 	bl	8006626 <I2C_WaitOnFlagUntilTimeout>
 8006970:	6822      	ldr	r2, [r4, #0]
 8006972:	b160      	cbz	r0, 800698e <I2C_RequestMemoryRead+0xe6>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8006974:	6813      	ldr	r3, [r2, #0]
 8006976:	e7b3      	b.n	80068e0 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8006978:	0a2a      	lsrs	r2, r5, #8
 800697a:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800697c:	4639      	mov	r1, r7
 800697e:	4642      	mov	r2, r8
 8006980:	4620      	mov	r0, r4
 8006982:	f7ff ff12 	bl	80067aa <I2C_WaitOnTXEFlagUntilTimeout>
 8006986:	2800      	cmp	r0, #0
 8006988:	d1ce      	bne.n	8006928 <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800698a:	6823      	ldr	r3, [r4, #0]
 800698c:	e7d9      	b.n	8006942 <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800698e:	f049 0301 	orr.w	r3, r9, #1
 8006992:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8006994:	4904      	ldr	r1, [pc, #16]	; (80069a8 <I2C_RequestMemoryRead+0x100>)
 8006996:	4643      	mov	r3, r8
 8006998:	463a      	mov	r2, r7
 800699a:	4620      	mov	r0, r4
 800699c:	f7ff fe75 	bl	800668a <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 80069a0:	3800      	subs	r0, #0
 80069a2:	bf18      	it	ne
 80069a4:	2001      	movne	r0, #1
 80069a6:	e7a1      	b.n	80068ec <I2C_RequestMemoryRead+0x44>
 80069a8:	00010002 	.word	0x00010002

080069ac <HAL_I2C_Init>:
{
 80069ac:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 80069ae:	4604      	mov	r4, r0
 80069b0:	b908      	cbnz	r0, 80069b6 <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 80069b2:	2001      	movs	r0, #1
}
 80069b4:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 80069b6:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80069ba:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80069be:	b91b      	cbnz	r3, 80069c8 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 80069c0:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 80069c4:	f7fb f964 	bl	8001c90 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 80069c8:	2324      	movs	r3, #36	; 0x24
 80069ca:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 80069ce:	6823      	ldr	r3, [r4, #0]
 80069d0:	681a      	ldr	r2, [r3, #0]
 80069d2:	f022 0201 	bic.w	r2, r2, #1
 80069d6:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 80069d8:	681a      	ldr	r2, [r3, #0]
 80069da:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80069de:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 80069e0:	681a      	ldr	r2, [r3, #0]
 80069e2:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80069e6:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 80069e8:	f000 fe6e 	bl	80076c8 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 80069ec:	4b3f      	ldr	r3, [pc, #252]	; (8006aec <HAL_I2C_Init+0x140>)
 80069ee:	6865      	ldr	r5, [r4, #4]
 80069f0:	429d      	cmp	r5, r3
 80069f2:	bf94      	ite	ls
 80069f4:	4b3e      	ldrls	r3, [pc, #248]	; (8006af0 <HAL_I2C_Init+0x144>)
 80069f6:	4b3f      	ldrhi	r3, [pc, #252]	; (8006af4 <HAL_I2C_Init+0x148>)
 80069f8:	4298      	cmp	r0, r3
 80069fa:	bf8c      	ite	hi
 80069fc:	2300      	movhi	r3, #0
 80069fe:	2301      	movls	r3, #1
 8006a00:	2b00      	cmp	r3, #0
 8006a02:	d1d6      	bne.n	80069b2 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006a04:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8006a06:	4e39      	ldr	r6, [pc, #228]	; (8006aec <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006a08:	6853      	ldr	r3, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8006a0a:	493b      	ldr	r1, [pc, #236]	; (8006af8 <HAL_I2C_Init+0x14c>)
 8006a0c:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006a10:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8006a14:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8006a16:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006a18:	6053      	str	r3, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8006a1a:	bf88      	it	hi
 8006a1c:	f44f 7696 	movhi.w	r6, #300	; 0x12c
 8006a20:	6a13      	ldr	r3, [r2, #32]
 8006a22:	bf88      	it	hi
 8006a24:	4371      	mulhi	r1, r6
 8006a26:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8006a2a:	bf84      	itt	hi
 8006a2c:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 8006a30:	fbb1 f1f6 	udivhi	r1, r1, r6
 8006a34:	3101      	adds	r1, #1
 8006a36:	4319      	orrs	r1, r3
 8006a38:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8006a3a:	69d1      	ldr	r1, [r2, #28]
 8006a3c:	1e43      	subs	r3, r0, #1
 8006a3e:	482b      	ldr	r0, [pc, #172]	; (8006aec <HAL_I2C_Init+0x140>)
 8006a40:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8006a44:	4285      	cmp	r5, r0
 8006a46:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8006a4a:	d832      	bhi.n	8006ab2 <HAL_I2C_Init+0x106>
 8006a4c:	006d      	lsls	r5, r5, #1
 8006a4e:	f640 70fc 	movw	r0, #4092	; 0xffc
 8006a52:	fbb3 f3f5 	udiv	r3, r3, r5
 8006a56:	3301      	adds	r3, #1
 8006a58:	4203      	tst	r3, r0
 8006a5a:	d042      	beq.n	8006ae2 <HAL_I2C_Init+0x136>
 8006a5c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006a60:	430b      	orrs	r3, r1
 8006a62:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8006a64:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8006a68:	6811      	ldr	r1, [r2, #0]
 8006a6a:	4303      	orrs	r3, r0
 8006a6c:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8006a70:	430b      	orrs	r3, r1
 8006a72:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8006a74:	6891      	ldr	r1, [r2, #8]
 8006a76:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8006a7a:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8006a7e:	4303      	orrs	r3, r0
 8006a80:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8006a84:	430b      	orrs	r3, r1
 8006a86:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8006a88:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8006a8c:	68d1      	ldr	r1, [r2, #12]
 8006a8e:	4303      	orrs	r3, r0
 8006a90:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8006a94:	430b      	orrs	r3, r1
 8006a96:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8006a98:	6813      	ldr	r3, [r2, #0]
 8006a9a:	f043 0301 	orr.w	r3, r3, #1
 8006a9e:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006aa0:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8006aa2:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006aa4:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8006aa6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8006aaa:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8006aac:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 8006ab0:	e780      	b.n	80069b4 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8006ab2:	68a0      	ldr	r0, [r4, #8]
 8006ab4:	b950      	cbnz	r0, 8006acc <HAL_I2C_Init+0x120>
 8006ab6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8006aba:	fbb3 f3f5 	udiv	r3, r3, r5
 8006abe:	3301      	adds	r3, #1
 8006ac0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006ac4:	b17b      	cbz	r3, 8006ae6 <HAL_I2C_Init+0x13a>
 8006ac6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8006aca:	e7c9      	b.n	8006a60 <HAL_I2C_Init+0xb4>
 8006acc:	2019      	movs	r0, #25
 8006ace:	4345      	muls	r5, r0
 8006ad0:	fbb3 f3f5 	udiv	r3, r3, r5
 8006ad4:	3301      	adds	r3, #1
 8006ad6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006ada:	b123      	cbz	r3, 8006ae6 <HAL_I2C_Init+0x13a>
 8006adc:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8006ae0:	e7be      	b.n	8006a60 <HAL_I2C_Init+0xb4>
 8006ae2:	2304      	movs	r3, #4
 8006ae4:	e7bc      	b.n	8006a60 <HAL_I2C_Init+0xb4>
 8006ae6:	2301      	movs	r3, #1
 8006ae8:	e7ba      	b.n	8006a60 <HAL_I2C_Init+0xb4>
 8006aea:	bf00      	nop
 8006aec:	000186a0 	.word	0x000186a0
 8006af0:	001e847f 	.word	0x001e847f
 8006af4:	003d08ff 	.word	0x003d08ff
 8006af8:	000f4240 	.word	0x000f4240

08006afc <HAL_I2C_Mem_Write>:
{
 8006afc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006b00:	4604      	mov	r4, r0
 8006b02:	4699      	mov	r9, r3
 8006b04:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8006b06:	460f      	mov	r7, r1
 8006b08:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8006b0a:	f7ff f8df 	bl	8005ccc <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006b0e:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8006b12:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8006b14:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006b16:	d003      	beq.n	8006b20 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 8006b18:	2002      	movs	r0, #2
}
 8006b1a:	b003      	add	sp, #12
 8006b1c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8006b20:	9000      	str	r0, [sp, #0]
 8006b22:	493c      	ldr	r1, [pc, #240]	; (8006c14 <HAL_I2C_Mem_Write+0x118>)
 8006b24:	2319      	movs	r3, #25
 8006b26:	2201      	movs	r2, #1
 8006b28:	4620      	mov	r0, r4
 8006b2a:	f7ff fd7c 	bl	8006626 <I2C_WaitOnFlagUntilTimeout>
 8006b2e:	2800      	cmp	r0, #0
 8006b30:	d1f2      	bne.n	8006b18 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8006b32:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8006b36:	2b01      	cmp	r3, #1
 8006b38:	d0ee      	beq.n	8006b18 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006b3a:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8006b3c:	2301      	movs	r3, #1
 8006b3e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006b42:	6803      	ldr	r3, [r0, #0]
 8006b44:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8006b46:	bf5e      	ittt	pl
 8006b48:	6803      	ldrpl	r3, [r0, #0]
 8006b4a:	f043 0301 	orrpl.w	r3, r3, #1
 8006b4e:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006b50:	6803      	ldr	r3, [r0, #0]
 8006b52:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006b56:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8006b58:	2321      	movs	r3, #33	; 0x21
 8006b5a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8006b5e:	2340      	movs	r3, #64	; 0x40
 8006b60:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006b64:	2300      	movs	r3, #0
 8006b66:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8006b68:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006b6a:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8006b6c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8006b70:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8006b72:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006b74:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8006b76:	4b28      	ldr	r3, [pc, #160]	; (8006c18 <HAL_I2C_Mem_Write+0x11c>)
 8006b78:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8006b7a:	e9cd 6500 	strd	r6, r5, [sp]
 8006b7e:	464b      	mov	r3, r9
 8006b80:	4642      	mov	r2, r8
 8006b82:	4639      	mov	r1, r7
 8006b84:	4620      	mov	r0, r4
 8006b86:	f7ff fe37 	bl	80067f8 <I2C_RequestMemoryWrite>
 8006b8a:	2800      	cmp	r0, #0
 8006b8c:	d02a      	beq.n	8006be4 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8006b8e:	2001      	movs	r0, #1
 8006b90:	e7c3      	b.n	8006b1a <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006b92:	f7ff fe0a 	bl	80067aa <I2C_WaitOnTXEFlagUntilTimeout>
 8006b96:	b140      	cbz	r0, 8006baa <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8006b98:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006b9a:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006b9c:	bf01      	itttt	eq
 8006b9e:	6822      	ldreq	r2, [r4, #0]
 8006ba0:	6813      	ldreq	r3, [r2, #0]
 8006ba2:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8006ba6:	6013      	streq	r3, [r2, #0]
 8006ba8:	e7f1      	b.n	8006b8e <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8006baa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006bac:	6827      	ldr	r7, [r4, #0]
 8006bae:	461a      	mov	r2, r3
 8006bb0:	f812 1b01 	ldrb.w	r1, [r2], #1
 8006bb4:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8006bb6:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8006bb8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8006bba:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8006bbc:	3a01      	subs	r2, #1
 8006bbe:	b292      	uxth	r2, r2
 8006bc0:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006bc2:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8006bc4:	1e48      	subs	r0, r1, #1
 8006bc6:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006bc8:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8006bca:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006bcc:	d50a      	bpl.n	8006be4 <HAL_I2C_Mem_Write+0xe8>
 8006bce:	b148      	cbz	r0, 8006be4 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8006bd0:	785a      	ldrb	r2, [r3, #1]
 8006bd2:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8006bd4:	3302      	adds	r3, #2
 8006bd6:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8006bd8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006bda:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8006bdc:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8006bde:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8006be0:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8006be2:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8006be4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006be6:	462a      	mov	r2, r5
 8006be8:	4631      	mov	r1, r6
 8006bea:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8006bec:	2b00      	cmp	r3, #0
 8006bee:	d1d0      	bne.n	8006b92 <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006bf0:	f7ff fdb5 	bl	800675e <I2C_WaitOnBTFFlagUntilTimeout>
 8006bf4:	2800      	cmp	r0, #0
 8006bf6:	d1cf      	bne.n	8006b98 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006bf8:	6822      	ldr	r2, [r4, #0]
 8006bfa:	6813      	ldr	r3, [r2, #0]
 8006bfc:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8006c00:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8006c02:	2320      	movs	r3, #32
 8006c04:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8006c08:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8006c0c:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 8006c10:	e783      	b.n	8006b1a <HAL_I2C_Mem_Write+0x1e>
 8006c12:	bf00      	nop
 8006c14:	00100002 	.word	0x00100002
 8006c18:	ffff0000 	.word	0xffff0000

08006c1c <HAL_I2C_Mem_Read>:
{
 8006c1c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006c20:	4604      	mov	r4, r0
 8006c22:	b087      	sub	sp, #28
 8006c24:	4699      	mov	r9, r3
 8006c26:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8006c28:	460d      	mov	r5, r1
 8006c2a:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8006c2c:	f7ff f84e 	bl	8005ccc <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006c30:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8006c34:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8006c36:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006c38:	d004      	beq.n	8006c44 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 8006c3a:	2502      	movs	r5, #2
}
 8006c3c:	4628      	mov	r0, r5
 8006c3e:	b007      	add	sp, #28
 8006c40:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8006c44:	9000      	str	r0, [sp, #0]
 8006c46:	4976      	ldr	r1, [pc, #472]	; (8006e20 <HAL_I2C_Mem_Read+0x204>)
 8006c48:	2319      	movs	r3, #25
 8006c4a:	2201      	movs	r2, #1
 8006c4c:	4620      	mov	r0, r4
 8006c4e:	f7ff fcea 	bl	8006626 <I2C_WaitOnFlagUntilTimeout>
 8006c52:	2800      	cmp	r0, #0
 8006c54:	d1f1      	bne.n	8006c3a <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8006c56:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8006c5a:	2b01      	cmp	r3, #1
 8006c5c:	d0ed      	beq.n	8006c3a <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006c5e:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8006c60:	2301      	movs	r3, #1
 8006c62:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006c66:	6803      	ldr	r3, [r0, #0]
 8006c68:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8006c6a:	bf5e      	ittt	pl
 8006c6c:	6803      	ldrpl	r3, [r0, #0]
 8006c6e:	f043 0301 	orrpl.w	r3, r3, #1
 8006c72:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006c74:	6803      	ldr	r3, [r0, #0]
 8006c76:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006c7a:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8006c7c:	2322      	movs	r3, #34	; 0x22
 8006c7e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8006c82:	2340      	movs	r3, #64	; 0x40
 8006c84:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006c88:	2300      	movs	r3, #0
 8006c8a:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8006c8c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006c8e:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8006c90:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8006c94:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8006c96:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006c98:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8006c9a:	4b62      	ldr	r3, [pc, #392]	; (8006e24 <HAL_I2C_Mem_Read+0x208>)
 8006c9c:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8006c9e:	4629      	mov	r1, r5
 8006ca0:	e9cd 7600 	strd	r7, r6, [sp]
 8006ca4:	464b      	mov	r3, r9
 8006ca6:	4642      	mov	r2, r8
 8006ca8:	4620      	mov	r0, r4
 8006caa:	f7ff fdfd 	bl	80068a8 <I2C_RequestMemoryRead>
 8006cae:	4605      	mov	r5, r0
 8006cb0:	b108      	cbz	r0, 8006cb6 <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8006cb2:	2501      	movs	r5, #1
 8006cb4:	e7c2      	b.n	8006c3c <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8006cb6:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006cb8:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 8006cba:	b9b2      	cbnz	r2, 8006cea <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006cbc:	9002      	str	r0, [sp, #8]
 8006cbe:	695a      	ldr	r2, [r3, #20]
 8006cc0:	9202      	str	r2, [sp, #8]
 8006cc2:	699a      	ldr	r2, [r3, #24]
 8006cc4:	9202      	str	r2, [sp, #8]
 8006cc6:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006cc8:	681a      	ldr	r2, [r3, #0]
 8006cca:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006cce:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006cd0:	f8df 8154 	ldr.w	r8, [pc, #340]	; 8006e28 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 8006cd4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006cd6:	2b00      	cmp	r3, #0
 8006cd8:	d12c      	bne.n	8006d34 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8006cda:	2220      	movs	r2, #32
 8006cdc:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8006ce0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8006ce4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8006ce8:	e7a8      	b.n	8006c3c <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8006cea:	2a01      	cmp	r2, #1
 8006cec:	d10a      	bne.n	8006d04 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006cee:	681a      	ldr	r2, [r3, #0]
 8006cf0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006cf4:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006cf6:	9003      	str	r0, [sp, #12]
 8006cf8:	695a      	ldr	r2, [r3, #20]
 8006cfa:	9203      	str	r2, [sp, #12]
 8006cfc:	699a      	ldr	r2, [r3, #24]
 8006cfe:	9203      	str	r2, [sp, #12]
 8006d00:	9a03      	ldr	r2, [sp, #12]
 8006d02:	e7e1      	b.n	8006cc8 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8006d04:	2a02      	cmp	r2, #2
 8006d06:	d10e      	bne.n	8006d26 <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006d08:	681a      	ldr	r2, [r3, #0]
 8006d0a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006d0e:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006d10:	681a      	ldr	r2, [r3, #0]
 8006d12:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8006d16:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006d18:	9004      	str	r0, [sp, #16]
 8006d1a:	695a      	ldr	r2, [r3, #20]
 8006d1c:	9204      	str	r2, [sp, #16]
 8006d1e:	699b      	ldr	r3, [r3, #24]
 8006d20:	9304      	str	r3, [sp, #16]
 8006d22:	9b04      	ldr	r3, [sp, #16]
 8006d24:	e7d4      	b.n	8006cd0 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006d26:	9005      	str	r0, [sp, #20]
 8006d28:	695a      	ldr	r2, [r3, #20]
 8006d2a:	9205      	str	r2, [sp, #20]
 8006d2c:	699b      	ldr	r3, [r3, #24]
 8006d2e:	9305      	str	r3, [sp, #20]
 8006d30:	9b05      	ldr	r3, [sp, #20]
 8006d32:	e7cd      	b.n	8006cd0 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8006d34:	2b03      	cmp	r3, #3
 8006d36:	d856      	bhi.n	8006de6 <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8006d38:	2b01      	cmp	r3, #1
 8006d3a:	d115      	bne.n	8006d68 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006d3c:	4632      	mov	r2, r6
 8006d3e:	4639      	mov	r1, r7
 8006d40:	4620      	mov	r0, r4
 8006d42:	f7ff fcdd 	bl	8006700 <I2C_WaitOnRXNEFlagUntilTimeout>
 8006d46:	2800      	cmp	r0, #0
 8006d48:	d1b3      	bne.n	8006cb2 <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006d4a:	6823      	ldr	r3, [r4, #0]
 8006d4c:	691a      	ldr	r2, [r3, #16]
 8006d4e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006d50:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8006d52:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006d54:	3301      	adds	r3, #1
 8006d56:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8006d58:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006d5a:	3b01      	subs	r3, #1
 8006d5c:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8006d5e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006d60:	3b01      	subs	r3, #1
 8006d62:	b29b      	uxth	r3, r3
 8006d64:	8563      	strh	r3, [r4, #42]	; 0x2a
 8006d66:	e7b5      	b.n	8006cd4 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 8006d68:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006d6a:	9600      	str	r6, [sp, #0]
 8006d6c:	463b      	mov	r3, r7
 8006d6e:	f04f 0200 	mov.w	r2, #0
 8006d72:	4641      	mov	r1, r8
 8006d74:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8006d76:	d119      	bne.n	8006dac <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006d78:	f7ff fc55 	bl	8006626 <I2C_WaitOnFlagUntilTimeout>
 8006d7c:	2800      	cmp	r0, #0
 8006d7e:	d198      	bne.n	8006cb2 <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006d80:	6823      	ldr	r3, [r4, #0]
 8006d82:	681a      	ldr	r2, [r3, #0]
 8006d84:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006d88:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006d8a:	691a      	ldr	r2, [r3, #16]
 8006d8c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006d8e:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8006d90:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006d92:	1c53      	adds	r3, r2, #1
 8006d94:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8006d96:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006d98:	3b01      	subs	r3, #1
 8006d9a:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8006d9c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006d9e:	3b01      	subs	r3, #1
 8006da0:	b29b      	uxth	r3, r3
 8006da2:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006da4:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006da6:	691b      	ldr	r3, [r3, #16]
 8006da8:	7053      	strb	r3, [r2, #1]
 8006daa:	e7d2      	b.n	8006d52 <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006dac:	f7ff fc3b 	bl	8006626 <I2C_WaitOnFlagUntilTimeout>
 8006db0:	2800      	cmp	r0, #0
 8006db2:	f47f af7e 	bne.w	8006cb2 <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006db6:	6823      	ldr	r3, [r4, #0]
 8006db8:	681a      	ldr	r2, [r3, #0]
 8006dba:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006dbe:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006dc0:	691a      	ldr	r2, [r3, #16]
 8006dc2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006dc4:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8006dc6:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006dc8:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 8006dca:	3301      	adds	r3, #1
 8006dcc:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8006dce:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006dd0:	3b01      	subs	r3, #1
 8006dd2:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8006dd4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006dd6:	3b01      	subs	r3, #1
 8006dd8:	b29b      	uxth	r3, r3
 8006dda:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006ddc:	4602      	mov	r2, r0
 8006dde:	463b      	mov	r3, r7
 8006de0:	4641      	mov	r1, r8
 8006de2:	4620      	mov	r0, r4
 8006de4:	e7c8      	b.n	8006d78 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006de6:	4632      	mov	r2, r6
 8006de8:	4639      	mov	r1, r7
 8006dea:	4620      	mov	r0, r4
 8006dec:	f7ff fc88 	bl	8006700 <I2C_WaitOnRXNEFlagUntilTimeout>
 8006df0:	2800      	cmp	r0, #0
 8006df2:	f47f af5e 	bne.w	8006cb2 <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006df6:	6823      	ldr	r3, [r4, #0]
 8006df8:	691a      	ldr	r2, [r3, #16]
 8006dfa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006dfc:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 8006dfe:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006e00:	1c53      	adds	r3, r2, #1
 8006e02:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 8006e04:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006e06:	3b01      	subs	r3, #1
 8006e08:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8006e0a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006e0c:	3b01      	subs	r3, #1
 8006e0e:	b29b      	uxth	r3, r3
 8006e10:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8006e12:	6823      	ldr	r3, [r4, #0]
 8006e14:	6959      	ldr	r1, [r3, #20]
 8006e16:	0749      	lsls	r1, r1, #29
 8006e18:	f57f af5c 	bpl.w	8006cd4 <HAL_I2C_Mem_Read+0xb8>
 8006e1c:	e7c3      	b.n	8006da6 <HAL_I2C_Mem_Read+0x18a>
 8006e1e:	bf00      	nop
 8006e20:	00100002 	.word	0x00100002
 8006e24:	ffff0000 	.word	0xffff0000
 8006e28:	00010004 	.word	0x00010004

08006e2c <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8006e2c:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8006e2e:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006e32:	2b20      	cmp	r3, #32
 8006e34:	b2dc      	uxtb	r4, r3
 8006e36:	d116      	bne.n	8006e66 <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 8006e38:	2324      	movs	r3, #36	; 0x24
 8006e3a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8006e3e:	6803      	ldr	r3, [r0, #0]
 8006e40:	681a      	ldr	r2, [r3, #0]
 8006e42:	f022 0201 	bic.w	r2, r2, #1
 8006e46:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8006e48:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8006e4a:	f022 0210 	bic.w	r2, r2, #16
 8006e4e:	625a      	str	r2, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 8006e50:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8006e52:	4311      	orrs	r1, r2
 8006e54:	6259      	str	r1, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8006e56:	681a      	ldr	r2, [r3, #0]
 8006e58:	f042 0201 	orr.w	r2, r2, #1
 8006e5c:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8006e5e:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8006e62:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8006e64:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8006e66:	2002      	movs	r0, #2
 8006e68:	e7fc      	b.n	8006e64 <HAL_I2CEx_ConfigAnalogFilter+0x38>

08006e6a <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8006e6a:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8006e6c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006e70:	2b20      	cmp	r3, #32
 8006e72:	b2dc      	uxtb	r4, r3
 8006e74:	d116      	bne.n	8006ea4 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8006e76:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8006e78:	2324      	movs	r3, #36	; 0x24
 8006e7a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 8006e7e:	6813      	ldr	r3, [r2, #0]
 8006e80:	f023 0301 	bic.w	r3, r3, #1
 8006e84:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 8006e86:	6a55      	ldr	r5, [r2, #36]	; 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8006e88:	f64f 73f0 	movw	r3, #65520	; 0xfff0
 8006e8c:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 8006e8e:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 8006e90:	b29b      	uxth	r3, r3
 8006e92:	6253      	str	r3, [r2, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8006e94:	6813      	ldr	r3, [r2, #0]
 8006e96:	f043 0301 	orr.w	r3, r3, #1
 8006e9a:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8006e9c:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8006ea0:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8006ea2:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 8006ea4:	2002      	movs	r0, #2
 8006ea6:	e7fc      	b.n	8006ea2 <HAL_I2CEx_ConfigDigitalFilter+0x38>

08006ea8 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006ea8:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006eaa:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006eae:	01d2      	lsls	r2, r2, #7
 8006eb0:	3284      	adds	r2, #132	; 0x84
 8006eb2:	1883      	adds	r3, r0, r2
{
 8006eb4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006eb8:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006eba:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006ebc:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8006ebe:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006ec2:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8006ec6:	605d      	str	r5, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006ec8:	68c5      	ldr	r5, [r0, #12]
 8006eca:	f10c 0701 	add.w	r7, ip, #1
 8006ece:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006ed2:	f3c6 460b 	ubfx	r6, r6, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006ed6:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006ed8:	4426      	add	r6, r4
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006eda:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8006ede:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8006ee0:	68c5      	ldr	r5, [r0, #12]
 8006ee2:	68ce      	ldr	r6, [r1, #12]
 8006ee4:	f3c5 050a 	ubfx	r5, r5, #0, #11
 8006ee8:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8006eea:	689d      	ldr	r5, [r3, #8]
 8006eec:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8006ef0:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8006ef2:	68c7      	ldr	r7, [r0, #12]
 8006ef4:	688d      	ldr	r5, [r1, #8]
 8006ef6:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8006efa:	3501      	adds	r5, #1
 8006efc:	443d      	add	r5, r7
 8006efe:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8006f02:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8006f04:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8006f06:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8006f08:	f025 0507 	bic.w	r5, r5, #7
 8006f0c:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8006f0e:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8006f12:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8006f14:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8006f16:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8006f1a:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8006f1e:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8006f22:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 8006f26:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8006f2a:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8006f2e:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8006f32:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8006f34:	695d      	ldr	r5, [r3, #20]
 8006f36:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 8006f3a:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8006f3c:	694d      	ldr	r5, [r1, #20]
 8006f3e:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8006f40:	69dd      	ldr	r5, [r3, #28]
 8006f42:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 8006f46:	f025 0507 	bic.w	r5, r5, #7
 8006f4a:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8006f4c:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8006f50:	433d      	orrs	r5, r7
 8006f52:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8006f54:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8006f56:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8006f58:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8006f5c:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8006f5e:	b31e      	cbz	r6, 8006fa8 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8006f60:	2e01      	cmp	r6, #1
 8006f62:	d023      	beq.n	8006fac <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8006f64:	1eb5      	subs	r5, r6, #2
 8006f66:	2d02      	cmp	r5, #2
 8006f68:	d922      	bls.n	8006fb0 <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 8006f6a:	2e07      	cmp	r6, #7
 8006f6c:	bf0c      	ite	eq
 8006f6e:	2502      	moveq	r5, #2
 8006f70:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8006f72:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8006f74:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
 8006f78:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8006f7a:	eba4 040c 	sub.w	r4, r4, ip
 8006f7e:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8006f80:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8006f82:	436c      	muls	r4, r5
 8006f84:	436e      	muls	r6, r5
 8006f86:	3403      	adds	r4, #3
 8006f88:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 8006f8c:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8006f8e:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 8006f90:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 8006f94:	f024 0407 	bic.w	r4, r4, #7
 8006f98:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8006f9a:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8006f9c:	5883      	ldr	r3, [r0, r2]
 8006f9e:	f043 0301 	orr.w	r3, r3, #1
 8006fa2:	5083      	str	r3, [r0, r2]
}
 8006fa4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8006fa8:	2504      	movs	r5, #4
 8006faa:	e7e2      	b.n	8006f72 <LTDC_SetConfig+0xca>
    tmp = 3U;
 8006fac:	2503      	movs	r5, #3
 8006fae:	e7e0      	b.n	8006f72 <LTDC_SetConfig+0xca>
    tmp = 2U;
 8006fb0:	2502      	movs	r5, #2
 8006fb2:	e7de      	b.n	8006f72 <LTDC_SetConfig+0xca>

08006fb4 <HAL_LTDC_Init>:
{
 8006fb4:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8006fb6:	4604      	mov	r4, r0
 8006fb8:	2800      	cmp	r0, #0
 8006fba:	d063      	beq.n	8007084 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8006fbc:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 8006fc0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006fc4:	b91b      	cbnz	r3, 8006fce <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8006fc6:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 8006fca:	f7fa febd 	bl	8001d48 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8006fce:	2302      	movs	r3, #2
 8006fd0:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8006fd4:	6823      	ldr	r3, [r4, #0]
 8006fd6:	699a      	ldr	r2, [r3, #24]
 8006fd8:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8006fdc:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8006fde:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8006fe2:	4302      	orrs	r2, r0
 8006fe4:	68e0      	ldr	r0, [r4, #12]
 8006fe6:	6999      	ldr	r1, [r3, #24]
 8006fe8:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8006fea:	6920      	ldr	r0, [r4, #16]
 8006fec:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8006fee:	430a      	orrs	r2, r1
 8006ff0:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8006ff2:	689a      	ldr	r2, [r3, #8]
 8006ff4:	4924      	ldr	r1, [pc, #144]	; (8007088 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8006ff6:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8006ff8:	400a      	ands	r2, r1
 8006ffa:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8006ffc:	689a      	ldr	r2, [r3, #8]
 8006ffe:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8007002:	69a0      	ldr	r0, [r4, #24]
 8007004:	4302      	orrs	r2, r0
 8007006:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8007008:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800700a:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800700c:	400a      	ands	r2, r1
 800700e:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8007010:	68da      	ldr	r2, [r3, #12]
 8007012:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8007016:	6a20      	ldr	r0, [r4, #32]
 8007018:	4302      	orrs	r2, r0
 800701a:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800701c:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800701e:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8007020:	400a      	ands	r2, r1
 8007022:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8007024:	691a      	ldr	r2, [r3, #16]
 8007026:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800702a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800702c:	4302      	orrs	r2, r0
 800702e:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8007030:	695a      	ldr	r2, [r3, #20]
 8007032:	4011      	ands	r1, r2
 8007034:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8007036:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8007038:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800703a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800703e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8007040:	430a      	orrs	r2, r1
 8007042:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8007044:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8007046:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800704a:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800704e:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 8007052:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8007054:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8007056:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800705a:	430a      	orrs	r2, r1
 800705c:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8007060:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8007064:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8007066:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007068:	f042 0206 	orr.w	r2, r2, #6
 800706c:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 800706e:	699a      	ldr	r2, [r3, #24]
 8007070:	f042 0201 	orr.w	r2, r2, #1
 8007074:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8007076:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8007078:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800707a:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800707e:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 8007082:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8007084:	2001      	movs	r0, #1
 8007086:	e7fc      	b.n	8007082 <HAL_LTDC_Init+0xce>
 8007088:	f000f800 	.word	0xf000f800

0800708c <HAL_LTDC_ErrorCallback>:
 800708c:	4770      	bx	lr

0800708e <HAL_LTDC_ReloadEventCallback>:
 800708e:	4770      	bx	lr

08007090 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8007090:	6803      	ldr	r3, [r0, #0]
{
 8007092:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8007094:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8007096:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8007098:	0772      	lsls	r2, r6, #29
{
 800709a:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800709c:	d514      	bpl.n	80070c8 <HAL_LTDC_IRQHandler+0x38>
 800709e:	0769      	lsls	r1, r5, #29
 80070a0:	d512      	bpl.n	80070c8 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 80070a2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80070a4:	f022 0204 	bic.w	r2, r2, #4
 80070a8:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 80070aa:	2204      	movs	r2, #4
 80070ac:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 80070ae:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 80070b2:	f043 0301 	orr.w	r3, r3, #1
 80070b6:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 80070ba:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80070bc:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80070c0:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 80070c4:	f7ff ffe2 	bl	800708c <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 80070c8:	07b2      	lsls	r2, r6, #30
 80070ca:	d516      	bpl.n	80070fa <HAL_LTDC_IRQHandler+0x6a>
 80070cc:	07ab      	lsls	r3, r5, #30
 80070ce:	d514      	bpl.n	80070fa <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 80070d0:	6823      	ldr	r3, [r4, #0]
 80070d2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80070d4:	f022 0202 	bic.w	r2, r2, #2
 80070d8:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 80070da:	2202      	movs	r2, #2
 80070dc:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 80070de:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 80070e2:	4313      	orrs	r3, r2
 80070e4:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80070e8:	2304      	movs	r3, #4
 80070ea:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80070ee:	2300      	movs	r3, #0
 80070f0:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 80070f4:	4620      	mov	r0, r4
 80070f6:	f7ff ffc9 	bl	800708c <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 80070fa:	07f0      	lsls	r0, r6, #31
 80070fc:	d510      	bpl.n	8007120 <HAL_LTDC_IRQHandler+0x90>
 80070fe:	07e9      	lsls	r1, r5, #31
 8007100:	d50e      	bpl.n	8007120 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8007102:	6823      	ldr	r3, [r4, #0]
 8007104:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007106:	f022 0201 	bic.w	r2, r2, #1
 800710a:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800710c:	2201      	movs	r2, #1
 800710e:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 8007110:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8007112:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8007116:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800711a:	4620      	mov	r0, r4
 800711c:	f7f9 fffa 	bl	8001114 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8007120:	0732      	lsls	r2, r6, #28
 8007122:	d511      	bpl.n	8007148 <HAL_LTDC_IRQHandler+0xb8>
 8007124:	072b      	lsls	r3, r5, #28
 8007126:	d50f      	bpl.n	8007148 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8007128:	6823      	ldr	r3, [r4, #0]
 800712a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800712c:	f022 0208 	bic.w	r2, r2, #8
 8007130:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8007132:	2208      	movs	r2, #8
 8007134:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8007136:	2301      	movs	r3, #1
 8007138:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800713c:	2300      	movs	r3, #0
 800713e:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8007142:	4620      	mov	r0, r4
 8007144:	f7ff ffa3 	bl	800708e <HAL_LTDC_ReloadEventCallback>
}
 8007148:	bd70      	pop	{r4, r5, r6, pc}

0800714a <HAL_LTDC_ConfigLayer>:
{
 800714a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 800714e:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8007152:	2b01      	cmp	r3, #1
{
 8007154:	4606      	mov	r6, r0
 8007156:	460f      	mov	r7, r1
 8007158:	4694      	mov	ip, r2
 800715a:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 800715e:	d01f      	beq.n	80071a0 <HAL_LTDC_ConfigLayer+0x56>
 8007160:	f04f 0801 	mov.w	r8, #1
 8007164:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8007168:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800716c:	2434      	movs	r4, #52	; 0x34
 800716e:	460d      	mov	r5, r1
 8007170:	fb04 6402 	mla	r4, r4, r2, r6
 8007174:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007176:	3438      	adds	r4, #56	; 0x38
 8007178:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800717a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800717c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800717e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007180:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007182:	682b      	ldr	r3, [r5, #0]
 8007184:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8007186:	4630      	mov	r0, r6
 8007188:	4662      	mov	r2, ip
 800718a:	4639      	mov	r1, r7
 800718c:	f7ff fe8c 	bl	8006ea8 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8007190:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8007192:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8007194:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8007198:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800719c:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 80071a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080071a4 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 80071a4:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 80071a8:	2b01      	cmp	r3, #1
 80071aa:	f04f 0302 	mov.w	r3, #2
 80071ae:	d012      	beq.n	80071d6 <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80071b0:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80071b4:	6803      	ldr	r3, [r0, #0]
 80071b6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80071b8:	f022 0201 	bic.w	r2, r2, #1
 80071bc:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 80071be:	4a07      	ldr	r2, [pc, #28]	; (80071dc <HAL_LTDC_ProgramLineEvent+0x38>)
 80071c0:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 80071c2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80071c4:	f042 0201 	orr.w	r2, r2, #1
 80071c8:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 80071ca:	2301      	movs	r3, #1
 80071cc:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80071d0:	2300      	movs	r3, #0
 80071d2:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 80071d6:	4618      	mov	r0, r3
}
 80071d8:	4770      	bx	lr
 80071da:	bf00      	nop
 80071dc:	40016800 	.word	0x40016800

080071e0 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80071e0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 80071e4:	4604      	mov	r4, r0
 80071e6:	b340      	cbz	r0, 800723a <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80071e8:	6803      	ldr	r3, [r0, #0]
 80071ea:	07dd      	lsls	r5, r3, #31
 80071ec:	d410      	bmi.n	8007210 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80071ee:	6823      	ldr	r3, [r4, #0]
 80071f0:	0798      	lsls	r0, r3, #30
 80071f2:	d45e      	bmi.n	80072b2 <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80071f4:	6823      	ldr	r3, [r4, #0]
 80071f6:	071a      	lsls	r2, r3, #28
 80071f8:	f100 80a0 	bmi.w	800733c <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80071fc:	6823      	ldr	r3, [r4, #0]
 80071fe:	075b      	lsls	r3, r3, #29
 8007200:	f100 80c0 	bmi.w	8007384 <HAL_RCC_OscConfig+0x1a4>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8007204:	69a0      	ldr	r0, [r4, #24]
 8007206:	2800      	cmp	r0, #0
 8007208:	f040 8128 	bne.w	800745c <HAL_RCC_OscConfig+0x27c>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800720c:	2000      	movs	r0, #0
 800720e:	e02b      	b.n	8007268 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8007210:	4b8f      	ldr	r3, [pc, #572]	; (8007450 <HAL_RCC_OscConfig+0x270>)
 8007212:	689a      	ldr	r2, [r3, #8]
 8007214:	f002 020c 	and.w	r2, r2, #12
 8007218:	2a04      	cmp	r2, #4
 800721a:	d007      	beq.n	800722c <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800721c:	689a      	ldr	r2, [r3, #8]
 800721e:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8007222:	2a08      	cmp	r2, #8
 8007224:	d10b      	bne.n	800723e <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8007226:	685a      	ldr	r2, [r3, #4]
 8007228:	0251      	lsls	r1, r2, #9
 800722a:	d508      	bpl.n	800723e <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800722c:	4b88      	ldr	r3, [pc, #544]	; (8007450 <HAL_RCC_OscConfig+0x270>)
 800722e:	681b      	ldr	r3, [r3, #0]
 8007230:	039a      	lsls	r2, r3, #14
 8007232:	d5dc      	bpl.n	80071ee <HAL_RCC_OscConfig+0xe>
 8007234:	6863      	ldr	r3, [r4, #4]
 8007236:	2b00      	cmp	r3, #0
 8007238:	d1d9      	bne.n	80071ee <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 800723a:	2001      	movs	r0, #1
 800723c:	e014      	b.n	8007268 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800723e:	6862      	ldr	r2, [r4, #4]
 8007240:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8007244:	d113      	bne.n	800726e <HAL_RCC_OscConfig+0x8e>
 8007246:	681a      	ldr	r2, [r3, #0]
 8007248:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800724c:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800724e:	f7fe fd3d 	bl	8005ccc <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8007252:	4e7f      	ldr	r6, [pc, #508]	; (8007450 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8007254:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8007256:	6833      	ldr	r3, [r6, #0]
 8007258:	039b      	lsls	r3, r3, #14
 800725a:	d4c8      	bmi.n	80071ee <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800725c:	f7fe fd36 	bl	8005ccc <HAL_GetTick>
 8007260:	1b40      	subs	r0, r0, r5
 8007262:	2864      	cmp	r0, #100	; 0x64
 8007264:	d9f7      	bls.n	8007256 <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 8007266:	2003      	movs	r0, #3
}
 8007268:	b002      	add	sp, #8
 800726a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800726e:	4d78      	ldr	r5, [pc, #480]	; (8007450 <HAL_RCC_OscConfig+0x270>)
 8007270:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 8007274:	682b      	ldr	r3, [r5, #0]
 8007276:	d107      	bne.n	8007288 <HAL_RCC_OscConfig+0xa8>
 8007278:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800727c:	602b      	str	r3, [r5, #0]
 800727e:	682b      	ldr	r3, [r5, #0]
 8007280:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8007284:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8007286:	e7e2      	b.n	800724e <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8007288:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800728c:	602b      	str	r3, [r5, #0]
 800728e:	682b      	ldr	r3, [r5, #0]
 8007290:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8007294:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8007296:	2a00      	cmp	r2, #0
 8007298:	d1d9      	bne.n	800724e <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 800729a:	f7fe fd17 	bl	8005ccc <HAL_GetTick>
 800729e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80072a0:	682b      	ldr	r3, [r5, #0]
 80072a2:	039f      	lsls	r7, r3, #14
 80072a4:	d5a3      	bpl.n	80071ee <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80072a6:	f7fe fd11 	bl	8005ccc <HAL_GetTick>
 80072aa:	1b80      	subs	r0, r0, r6
 80072ac:	2864      	cmp	r0, #100	; 0x64
 80072ae:	d9f7      	bls.n	80072a0 <HAL_RCC_OscConfig+0xc0>
 80072b0:	e7d9      	b.n	8007266 <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80072b2:	4b67      	ldr	r3, [pc, #412]	; (8007450 <HAL_RCC_OscConfig+0x270>)
 80072b4:	689a      	ldr	r2, [r3, #8]
 80072b6:	f012 0f0c 	tst.w	r2, #12
 80072ba:	d007      	beq.n	80072cc <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80072bc:	689a      	ldr	r2, [r3, #8]
 80072be:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80072c2:	2a08      	cmp	r2, #8
 80072c4:	d111      	bne.n	80072ea <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80072c6:	685b      	ldr	r3, [r3, #4]
 80072c8:	025e      	lsls	r6, r3, #9
 80072ca:	d40e      	bmi.n	80072ea <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80072cc:	4a60      	ldr	r2, [pc, #384]	; (8007450 <HAL_RCC_OscConfig+0x270>)
 80072ce:	6813      	ldr	r3, [r2, #0]
 80072d0:	079d      	lsls	r5, r3, #30
 80072d2:	d502      	bpl.n	80072da <HAL_RCC_OscConfig+0xfa>
 80072d4:	68e3      	ldr	r3, [r4, #12]
 80072d6:	2b01      	cmp	r3, #1
 80072d8:	d1af      	bne.n	800723a <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80072da:	6813      	ldr	r3, [r2, #0]
 80072dc:	6921      	ldr	r1, [r4, #16]
 80072de:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 80072e2:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80072e6:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80072e8:	e784      	b.n	80071f4 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 80072ea:	68e2      	ldr	r2, [r4, #12]
 80072ec:	4b59      	ldr	r3, [pc, #356]	; (8007454 <HAL_RCC_OscConfig+0x274>)
 80072ee:	b1b2      	cbz	r2, 800731e <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 80072f0:	2201      	movs	r2, #1
 80072f2:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80072f4:	f7fe fcea 	bl	8005ccc <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80072f8:	4d55      	ldr	r5, [pc, #340]	; (8007450 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 80072fa:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80072fc:	682b      	ldr	r3, [r5, #0]
 80072fe:	0798      	lsls	r0, r3, #30
 8007300:	d507      	bpl.n	8007312 <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8007302:	682b      	ldr	r3, [r5, #0]
 8007304:	6922      	ldr	r2, [r4, #16]
 8007306:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800730a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800730e:	602b      	str	r3, [r5, #0]
 8007310:	e770      	b.n	80071f4 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8007312:	f7fe fcdb 	bl	8005ccc <HAL_GetTick>
 8007316:	1b80      	subs	r0, r0, r6
 8007318:	2802      	cmp	r0, #2
 800731a:	d9ef      	bls.n	80072fc <HAL_RCC_OscConfig+0x11c>
 800731c:	e7a3      	b.n	8007266 <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 800731e:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8007320:	f7fe fcd4 	bl	8005ccc <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8007324:	4e4a      	ldr	r6, [pc, #296]	; (8007450 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8007326:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8007328:	6833      	ldr	r3, [r6, #0]
 800732a:	0799      	lsls	r1, r3, #30
 800732c:	f57f af62 	bpl.w	80071f4 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8007330:	f7fe fccc 	bl	8005ccc <HAL_GetTick>
 8007334:	1b40      	subs	r0, r0, r5
 8007336:	2802      	cmp	r0, #2
 8007338:	d9f6      	bls.n	8007328 <HAL_RCC_OscConfig+0x148>
 800733a:	e794      	b.n	8007266 <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800733c:	6962      	ldr	r2, [r4, #20]
 800733e:	4b45      	ldr	r3, [pc, #276]	; (8007454 <HAL_RCC_OscConfig+0x274>)
 8007340:	b182      	cbz	r2, 8007364 <HAL_RCC_OscConfig+0x184>
      __HAL_RCC_LSI_ENABLE();
 8007342:	2201      	movs	r2, #1
 8007344:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8007348:	f7fe fcc0 	bl	8005ccc <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800734c:	4e40      	ldr	r6, [pc, #256]	; (8007450 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800734e:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8007350:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8007352:	079f      	lsls	r7, r3, #30
 8007354:	f53f af52 	bmi.w	80071fc <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8007358:	f7fe fcb8 	bl	8005ccc <HAL_GetTick>
 800735c:	1b40      	subs	r0, r0, r5
 800735e:	2802      	cmp	r0, #2
 8007360:	d9f6      	bls.n	8007350 <HAL_RCC_OscConfig+0x170>
 8007362:	e780      	b.n	8007266 <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 8007364:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8007368:	f7fe fcb0 	bl	8005ccc <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800736c:	4e38      	ldr	r6, [pc, #224]	; (8007450 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800736e:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8007370:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8007372:	0798      	lsls	r0, r3, #30
 8007374:	f57f af42 	bpl.w	80071fc <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8007378:	f7fe fca8 	bl	8005ccc <HAL_GetTick>
 800737c:	1b40      	subs	r0, r0, r5
 800737e:	2802      	cmp	r0, #2
 8007380:	d9f6      	bls.n	8007370 <HAL_RCC_OscConfig+0x190>
 8007382:	e770      	b.n	8007266 <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8007384:	4b32      	ldr	r3, [pc, #200]	; (8007450 <HAL_RCC_OscConfig+0x270>)
 8007386:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8007388:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 800738c:	d128      	bne.n	80073e0 <HAL_RCC_OscConfig+0x200>
      __HAL_RCC_PWR_CLK_ENABLE();
 800738e:	9201      	str	r2, [sp, #4]
 8007390:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8007392:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8007396:	641a      	str	r2, [r3, #64]	; 0x40
 8007398:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800739a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800739e:	9301      	str	r3, [sp, #4]
 80073a0:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 80073a2:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80073a4:	4d2c      	ldr	r5, [pc, #176]	; (8007458 <HAL_RCC_OscConfig+0x278>)
 80073a6:	682b      	ldr	r3, [r5, #0]
 80073a8:	05d9      	lsls	r1, r3, #23
 80073aa:	d51b      	bpl.n	80073e4 <HAL_RCC_OscConfig+0x204>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80073ac:	68a3      	ldr	r3, [r4, #8]
 80073ae:	4d28      	ldr	r5, [pc, #160]	; (8007450 <HAL_RCC_OscConfig+0x270>)
 80073b0:	2b01      	cmp	r3, #1
 80073b2:	d127      	bne.n	8007404 <HAL_RCC_OscConfig+0x224>
 80073b4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80073b6:	f043 0301 	orr.w	r3, r3, #1
 80073ba:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 80073bc:	f7fe fc86 	bl	8005ccc <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80073c0:	4e23      	ldr	r6, [pc, #140]	; (8007450 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 80073c2:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80073c4:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80073c8:	6f33      	ldr	r3, [r6, #112]	; 0x70
 80073ca:	079b      	lsls	r3, r3, #30
 80073cc:	d539      	bpl.n	8007442 <HAL_RCC_OscConfig+0x262>
    if(pwrclkchanged == SET)
 80073ce:	2f00      	cmp	r7, #0
 80073d0:	f43f af18 	beq.w	8007204 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 80073d4:	4a1e      	ldr	r2, [pc, #120]	; (8007450 <HAL_RCC_OscConfig+0x270>)
 80073d6:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80073d8:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80073dc:	6413      	str	r3, [r2, #64]	; 0x40
 80073de:	e711      	b.n	8007204 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 80073e0:	2700      	movs	r7, #0
 80073e2:	e7df      	b.n	80073a4 <HAL_RCC_OscConfig+0x1c4>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 80073e4:	682b      	ldr	r3, [r5, #0]
 80073e6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80073ea:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 80073ec:	f7fe fc6e 	bl	8005ccc <HAL_GetTick>
 80073f0:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80073f2:	682b      	ldr	r3, [r5, #0]
 80073f4:	05da      	lsls	r2, r3, #23
 80073f6:	d4d9      	bmi.n	80073ac <HAL_RCC_OscConfig+0x1cc>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80073f8:	f7fe fc68 	bl	8005ccc <HAL_GetTick>
 80073fc:	1b80      	subs	r0, r0, r6
 80073fe:	2802      	cmp	r0, #2
 8007400:	d9f7      	bls.n	80073f2 <HAL_RCC_OscConfig+0x212>
 8007402:	e730      	b.n	8007266 <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8007404:	2b05      	cmp	r3, #5
 8007406:	d104      	bne.n	8007412 <HAL_RCC_OscConfig+0x232>
 8007408:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800740a:	f043 0304 	orr.w	r3, r3, #4
 800740e:	672b      	str	r3, [r5, #112]	; 0x70
 8007410:	e7d0      	b.n	80073b4 <HAL_RCC_OscConfig+0x1d4>
 8007412:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8007414:	f022 0201 	bic.w	r2, r2, #1
 8007418:	672a      	str	r2, [r5, #112]	; 0x70
 800741a:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 800741c:	f022 0204 	bic.w	r2, r2, #4
 8007420:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8007422:	2b00      	cmp	r3, #0
 8007424:	d1ca      	bne.n	80073bc <HAL_RCC_OscConfig+0x1dc>
      tickstart = HAL_GetTick();
 8007426:	f7fe fc51 	bl	8005ccc <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800742a:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800742e:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8007430:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007432:	0798      	lsls	r0, r3, #30
 8007434:	d5cb      	bpl.n	80073ce <HAL_RCC_OscConfig+0x1ee>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007436:	f7fe fc49 	bl	8005ccc <HAL_GetTick>
 800743a:	1b80      	subs	r0, r0, r6
 800743c:	4540      	cmp	r0, r8
 800743e:	d9f7      	bls.n	8007430 <HAL_RCC_OscConfig+0x250>
 8007440:	e711      	b.n	8007266 <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007442:	f7fe fc43 	bl	8005ccc <HAL_GetTick>
 8007446:	1b40      	subs	r0, r0, r5
 8007448:	4540      	cmp	r0, r8
 800744a:	d9bd      	bls.n	80073c8 <HAL_RCC_OscConfig+0x1e8>
 800744c:	e70b      	b.n	8007266 <HAL_RCC_OscConfig+0x86>
 800744e:	bf00      	nop
 8007450:	40023800 	.word	0x40023800
 8007454:	42470000 	.word	0x42470000
 8007458:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800745c:	4d33      	ldr	r5, [pc, #204]	; (800752c <HAL_RCC_OscConfig+0x34c>)
 800745e:	68ab      	ldr	r3, [r5, #8]
 8007460:	f003 030c 	and.w	r3, r3, #12
 8007464:	2b08      	cmp	r3, #8
 8007466:	d03d      	beq.n	80074e4 <HAL_RCC_OscConfig+0x304>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8007468:	4b31      	ldr	r3, [pc, #196]	; (8007530 <HAL_RCC_OscConfig+0x350>)
 800746a:	2200      	movs	r2, #0
 800746c:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800746e:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8007470:	d12b      	bne.n	80074ca <HAL_RCC_OscConfig+0x2ea>
        tickstart = HAL_GetTick();
 8007472:	f7fe fc2b 	bl	8005ccc <HAL_GetTick>
 8007476:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8007478:	682b      	ldr	r3, [r5, #0]
 800747a:	0199      	lsls	r1, r3, #6
 800747c:	d41f      	bmi.n	80074be <HAL_RCC_OscConfig+0x2de>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800747e:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8007482:	4313      	orrs	r3, r2
 8007484:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8007486:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800748a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800748c:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8007490:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8007492:	0852      	lsrs	r2, r2, #1
 8007494:	3a01      	subs	r2, #1
 8007496:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800749a:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800749c:	4b24      	ldr	r3, [pc, #144]	; (8007530 <HAL_RCC_OscConfig+0x350>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800749e:	4d23      	ldr	r5, [pc, #140]	; (800752c <HAL_RCC_OscConfig+0x34c>)
        __HAL_RCC_PLL_ENABLE();
 80074a0:	2201      	movs	r2, #1
 80074a2:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 80074a4:	f7fe fc12 	bl	8005ccc <HAL_GetTick>
 80074a8:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80074aa:	682b      	ldr	r3, [r5, #0]
 80074ac:	019a      	lsls	r2, r3, #6
 80074ae:	f53f aead 	bmi.w	800720c <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80074b2:	f7fe fc0b 	bl	8005ccc <HAL_GetTick>
 80074b6:	1b00      	subs	r0, r0, r4
 80074b8:	2802      	cmp	r0, #2
 80074ba:	d9f6      	bls.n	80074aa <HAL_RCC_OscConfig+0x2ca>
 80074bc:	e6d3      	b.n	8007266 <HAL_RCC_OscConfig+0x86>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80074be:	f7fe fc05 	bl	8005ccc <HAL_GetTick>
 80074c2:	1b80      	subs	r0, r0, r6
 80074c4:	2802      	cmp	r0, #2
 80074c6:	d9d7      	bls.n	8007478 <HAL_RCC_OscConfig+0x298>
 80074c8:	e6cd      	b.n	8007266 <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 80074ca:	f7fe fbff 	bl	8005ccc <HAL_GetTick>
 80074ce:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80074d0:	682b      	ldr	r3, [r5, #0]
 80074d2:	019b      	lsls	r3, r3, #6
 80074d4:	f57f ae9a 	bpl.w	800720c <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80074d8:	f7fe fbf8 	bl	8005ccc <HAL_GetTick>
 80074dc:	1b00      	subs	r0, r0, r4
 80074de:	2802      	cmp	r0, #2
 80074e0:	d9f6      	bls.n	80074d0 <HAL_RCC_OscConfig+0x2f0>
 80074e2:	e6c0      	b.n	8007266 <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 80074e4:	2801      	cmp	r0, #1
 80074e6:	f43f aebf 	beq.w	8007268 <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 80074ea:	686b      	ldr	r3, [r5, #4]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80074ec:	69e2      	ldr	r2, [r4, #28]
 80074ee:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
 80074f2:	4291      	cmp	r1, r2
 80074f4:	f47f aea1 	bne.w	800723a <HAL_RCC_OscConfig+0x5a>
 80074f8:	6a21      	ldr	r1, [r4, #32]
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 80074fa:	f003 023f 	and.w	r2, r3, #63	; 0x3f
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80074fe:	428a      	cmp	r2, r1
 8007500:	f47f ae9b 	bne.w	800723a <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8007504:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8007506:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800750a:	401a      	ands	r2, r3
 800750c:	428a      	cmp	r2, r1
 800750e:	f47f ae94 	bne.w	800723a <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8007512:	6aa1      	ldr	r1, [r4, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8007514:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8007518:	428a      	cmp	r2, r1
 800751a:	f47f ae8e 	bne.w	800723a <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 800751e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 8007520:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8007524:	4293      	cmp	r3, r2
 8007526:	f43f ae71 	beq.w	800720c <HAL_RCC_OscConfig+0x2c>
 800752a:	e686      	b.n	800723a <HAL_RCC_OscConfig+0x5a>
 800752c:	40023800 	.word	0x40023800
 8007530:	42470000 	.word	0x42470000

08007534 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007534:	4913      	ldr	r1, [pc, #76]	; (8007584 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8007536:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007538:	688b      	ldr	r3, [r1, #8]
 800753a:	f003 030c 	and.w	r3, r3, #12
 800753e:	2b04      	cmp	r3, #4
 8007540:	d01c      	beq.n	800757c <HAL_RCC_GetSysClockFreq+0x48>
 8007542:	2b08      	cmp	r3, #8
 8007544:	d11c      	bne.n	8007580 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8007546:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8007548:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800754a:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800754c:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007550:	bf14      	ite	ne
 8007552:	480d      	ldrne	r0, [pc, #52]	; (8007588 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007554:	480d      	ldreq	r0, [pc, #52]	; (800758c <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007556:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800755a:	bf18      	it	ne
 800755c:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800755e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007562:	fba1 0100 	umull	r0, r1, r1, r0
 8007566:	f7f8 fe93 	bl	8000290 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800756a:	4b06      	ldr	r3, [pc, #24]	; (8007584 <HAL_RCC_GetSysClockFreq+0x50>)
 800756c:	685b      	ldr	r3, [r3, #4]
 800756e:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8007572:	3301      	adds	r3, #1
 8007574:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 8007576:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800757a:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800757c:	4802      	ldr	r0, [pc, #8]	; (8007588 <HAL_RCC_GetSysClockFreq+0x54>)
 800757e:	e7fc      	b.n	800757a <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8007580:	4802      	ldr	r0, [pc, #8]	; (800758c <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8007582:	e7fa      	b.n	800757a <HAL_RCC_GetSysClockFreq+0x46>
 8007584:	40023800 	.word	0x40023800
 8007588:	007a1200 	.word	0x007a1200
 800758c:	00f42400 	.word	0x00f42400

08007590 <HAL_RCC_ClockConfig>:
{
 8007590:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007594:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 8007596:	4604      	mov	r4, r0
 8007598:	b910      	cbnz	r0, 80075a0 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 800759a:	2001      	movs	r0, #1
}
 800759c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 80075a0:	4b44      	ldr	r3, [pc, #272]	; (80076b4 <HAL_RCC_ClockConfig+0x124>)
 80075a2:	681a      	ldr	r2, [r3, #0]
 80075a4:	f002 020f 	and.w	r2, r2, #15
 80075a8:	428a      	cmp	r2, r1
 80075aa:	d328      	bcc.n	80075fe <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80075ac:	6822      	ldr	r2, [r4, #0]
 80075ae:	0797      	lsls	r7, r2, #30
 80075b0:	d42d      	bmi.n	800760e <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80075b2:	07d0      	lsls	r0, r2, #31
 80075b4:	d441      	bmi.n	800763a <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 80075b6:	4b3f      	ldr	r3, [pc, #252]	; (80076b4 <HAL_RCC_ClockConfig+0x124>)
 80075b8:	681a      	ldr	r2, [r3, #0]
 80075ba:	f002 020f 	and.w	r2, r2, #15
 80075be:	42aa      	cmp	r2, r5
 80075c0:	d866      	bhi.n	8007690 <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80075c2:	6822      	ldr	r2, [r4, #0]
 80075c4:	0751      	lsls	r1, r2, #29
 80075c6:	d46c      	bmi.n	80076a2 <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80075c8:	0713      	lsls	r3, r2, #28
 80075ca:	d507      	bpl.n	80075dc <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 80075cc:	4a3a      	ldr	r2, [pc, #232]	; (80076b8 <HAL_RCC_ClockConfig+0x128>)
 80075ce:	6921      	ldr	r1, [r4, #16]
 80075d0:	6893      	ldr	r3, [r2, #8]
 80075d2:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 80075d6:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80075da:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 80075dc:	f7ff ffaa 	bl	8007534 <HAL_RCC_GetSysClockFreq>
 80075e0:	4b35      	ldr	r3, [pc, #212]	; (80076b8 <HAL_RCC_ClockConfig+0x128>)
 80075e2:	4a36      	ldr	r2, [pc, #216]	; (80076bc <HAL_RCC_ClockConfig+0x12c>)
 80075e4:	689b      	ldr	r3, [r3, #8]
 80075e6:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80075ea:	5cd3      	ldrb	r3, [r2, r3]
 80075ec:	40d8      	lsrs	r0, r3
 80075ee:	4b34      	ldr	r3, [pc, #208]	; (80076c0 <HAL_RCC_ClockConfig+0x130>)
 80075f0:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 80075f2:	4b34      	ldr	r3, [pc, #208]	; (80076c4 <HAL_RCC_ClockConfig+0x134>)
 80075f4:	6818      	ldr	r0, [r3, #0]
 80075f6:	f7fa fd31 	bl	800205c <HAL_InitTick>
  return HAL_OK;
 80075fa:	2000      	movs	r0, #0
 80075fc:	e7ce      	b.n	800759c <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80075fe:	b2ca      	uxtb	r2, r1
 8007600:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8007602:	681b      	ldr	r3, [r3, #0]
 8007604:	f003 030f 	and.w	r3, r3, #15
 8007608:	428b      	cmp	r3, r1
 800760a:	d1c6      	bne.n	800759a <HAL_RCC_ClockConfig+0xa>
 800760c:	e7ce      	b.n	80075ac <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800760e:	4b2a      	ldr	r3, [pc, #168]	; (80076b8 <HAL_RCC_ClockConfig+0x128>)
 8007610:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8007614:	bf1e      	ittt	ne
 8007616:	6899      	ldrne	r1, [r3, #8]
 8007618:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 800761c:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800761e:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8007620:	bf42      	ittt	mi
 8007622:	6899      	ldrmi	r1, [r3, #8]
 8007624:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 8007628:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800762a:	4923      	ldr	r1, [pc, #140]	; (80076b8 <HAL_RCC_ClockConfig+0x128>)
 800762c:	68a0      	ldr	r0, [r4, #8]
 800762e:	688b      	ldr	r3, [r1, #8]
 8007630:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8007634:	4303      	orrs	r3, r0
 8007636:	608b      	str	r3, [r1, #8]
 8007638:	e7bb      	b.n	80075b2 <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800763a:	6862      	ldr	r2, [r4, #4]
 800763c:	4b1e      	ldr	r3, [pc, #120]	; (80076b8 <HAL_RCC_ClockConfig+0x128>)
 800763e:	2a01      	cmp	r2, #1
 8007640:	d11c      	bne.n	800767c <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8007642:	681b      	ldr	r3, [r3, #0]
 8007644:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007648:	d0a7      	beq.n	800759a <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800764a:	4e1b      	ldr	r6, [pc, #108]	; (80076b8 <HAL_RCC_ClockConfig+0x128>)
 800764c:	68b3      	ldr	r3, [r6, #8]
 800764e:	f023 0303 	bic.w	r3, r3, #3
 8007652:	4313      	orrs	r3, r2
 8007654:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8007656:	f7fe fb39 	bl	8005ccc <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800765a:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800765e:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8007660:	68b3      	ldr	r3, [r6, #8]
 8007662:	6862      	ldr	r2, [r4, #4]
 8007664:	f003 030c 	and.w	r3, r3, #12
 8007668:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800766c:	d0a3      	beq.n	80075b6 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800766e:	f7fe fb2d 	bl	8005ccc <HAL_GetTick>
 8007672:	1bc0      	subs	r0, r0, r7
 8007674:	4540      	cmp	r0, r8
 8007676:	d9f3      	bls.n	8007660 <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 8007678:	2003      	movs	r0, #3
 800767a:	e78f      	b.n	800759c <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800767c:	1e91      	subs	r1, r2, #2
 800767e:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8007680:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8007682:	d802      	bhi.n	800768a <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8007684:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8007688:	e7de      	b.n	8007648 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800768a:	f013 0f02 	tst.w	r3, #2
 800768e:	e7db      	b.n	8007648 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8007690:	b2ea      	uxtb	r2, r5
 8007692:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8007694:	681b      	ldr	r3, [r3, #0]
 8007696:	f003 030f 	and.w	r3, r3, #15
 800769a:	42ab      	cmp	r3, r5
 800769c:	f47f af7d 	bne.w	800759a <HAL_RCC_ClockConfig+0xa>
 80076a0:	e78f      	b.n	80075c2 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 80076a2:	4905      	ldr	r1, [pc, #20]	; (80076b8 <HAL_RCC_ClockConfig+0x128>)
 80076a4:	68e0      	ldr	r0, [r4, #12]
 80076a6:	688b      	ldr	r3, [r1, #8]
 80076a8:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 80076ac:	4303      	orrs	r3, r0
 80076ae:	608b      	str	r3, [r1, #8]
 80076b0:	e78a      	b.n	80075c8 <HAL_RCC_ClockConfig+0x38>
 80076b2:	bf00      	nop
 80076b4:	40023c00 	.word	0x40023c00
 80076b8:	40023800 	.word	0x40023800
 80076bc:	0802361c 	.word	0x0802361c
 80076c0:	2000007c 	.word	0x2000007c
 80076c4:	20000084 	.word	0x20000084

080076c8 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 80076c8:	4b04      	ldr	r3, [pc, #16]	; (80076dc <HAL_RCC_GetPCLK1Freq+0x14>)
 80076ca:	4a05      	ldr	r2, [pc, #20]	; (80076e0 <HAL_RCC_GetPCLK1Freq+0x18>)
 80076cc:	689b      	ldr	r3, [r3, #8]
 80076ce:	f3c3 2382 	ubfx	r3, r3, #10, #3
 80076d2:	5cd3      	ldrb	r3, [r2, r3]
 80076d4:	4a03      	ldr	r2, [pc, #12]	; (80076e4 <HAL_RCC_GetPCLK1Freq+0x1c>)
 80076d6:	6810      	ldr	r0, [r2, #0]
}
 80076d8:	40d8      	lsrs	r0, r3
 80076da:	4770      	bx	lr
 80076dc:	40023800 	.word	0x40023800
 80076e0:	0802362c 	.word	0x0802362c
 80076e4:	2000007c 	.word	0x2000007c

080076e8 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 80076e8:	4b04      	ldr	r3, [pc, #16]	; (80076fc <HAL_RCC_GetPCLK2Freq+0x14>)
 80076ea:	4a05      	ldr	r2, [pc, #20]	; (8007700 <HAL_RCC_GetPCLK2Freq+0x18>)
 80076ec:	689b      	ldr	r3, [r3, #8]
 80076ee:	f3c3 3342 	ubfx	r3, r3, #13, #3
 80076f2:	5cd3      	ldrb	r3, [r2, r3]
 80076f4:	4a03      	ldr	r2, [pc, #12]	; (8007704 <HAL_RCC_GetPCLK2Freq+0x1c>)
 80076f6:	6810      	ldr	r0, [r2, #0]
}
 80076f8:	40d8      	lsrs	r0, r3
 80076fa:	4770      	bx	lr
 80076fc:	40023800 	.word	0x40023800
 8007700:	0802362c 	.word	0x0802362c
 8007704:	2000007c 	.word	0x2000007c

08007708 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8007708:	230f      	movs	r3, #15
 800770a:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800770c:	4b0b      	ldr	r3, [pc, #44]	; (800773c <HAL_RCC_GetClockConfig+0x34>)
 800770e:	689a      	ldr	r2, [r3, #8]
 8007710:	f002 0203 	and.w	r2, r2, #3
 8007714:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8007716:	689a      	ldr	r2, [r3, #8]
 8007718:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800771c:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800771e:	689a      	ldr	r2, [r3, #8]
 8007720:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8007724:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8007726:	689b      	ldr	r3, [r3, #8]
 8007728:	08db      	lsrs	r3, r3, #3
 800772a:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 800772e:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8007730:	4b03      	ldr	r3, [pc, #12]	; (8007740 <HAL_RCC_GetClockConfig+0x38>)
 8007732:	681b      	ldr	r3, [r3, #0]
 8007734:	f003 030f 	and.w	r3, r3, #15
 8007738:	600b      	str	r3, [r1, #0]
}
 800773a:	4770      	bx	lr
 800773c:	40023800 	.word	0x40023800
 8007740:	40023c00 	.word	0x40023c00

08007744 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8007744:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8007746:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800774a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800774c:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800774e:	f040 808c 	bne.w	800786a <HAL_RCCEx_PeriphCLKConfig+0x126>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8007752:	6823      	ldr	r3, [r4, #0]
 8007754:	f013 0f0c 	tst.w	r3, #12
 8007758:	d045      	beq.n	80077e6 <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 800775a:	4b8b      	ldr	r3, [pc, #556]	; (8007988 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800775c:	4d8b      	ldr	r5, [pc, #556]	; (800798c <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_DISABLE();
 800775e:	2200      	movs	r2, #0
 8007760:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 8007762:	f7fe fab3 	bl	8005ccc <HAL_GetTick>
 8007766:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8007768:	682b      	ldr	r3, [r5, #0]
 800776a:	009f      	lsls	r7, r3, #2
 800776c:	f100 80cf 	bmi.w	800790e <HAL_RCCEx_PeriphCLKConfig+0x1ca>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8007770:	6821      	ldr	r1, [r4, #0]
 8007772:	074e      	lsls	r6, r1, #29
 8007774:	d515      	bpl.n	80077a2 <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8007776:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800777a:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800777e:	061b      	lsls	r3, r3, #24
 8007780:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 8007784:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8007788:	4313      	orrs	r3, r2
 800778a:	f8c5 3088 	str.w	r3, [r5, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800778e:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 8007792:	6a22      	ldr	r2, [r4, #32]
 8007794:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 8007798:	3a01      	subs	r2, #1
 800779a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800779e:	f8c5 308c 	str.w	r3, [r5, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 80077a2:	070d      	lsls	r5, r1, #28
 80077a4:	d514      	bpl.n	80077d0 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80077a6:	4a79      	ldr	r2, [pc, #484]	; (800798c <HAL_RCCEx_PeriphCLKConfig+0x248>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 80077a8:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80077aa:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 80077ae:	6920      	ldr	r0, [r4, #16]
 80077b0:	071b      	lsls	r3, r3, #28
 80077b2:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 80077b6:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 80077ba:	430b      	orrs	r3, r1
 80077bc:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 80077c0:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 80077c4:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80077c6:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80077ca:	430b      	orrs	r3, r1
 80077cc:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 80077d0:	4b6d      	ldr	r3, [pc, #436]	; (8007988 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80077d2:	4e6e      	ldr	r6, [pc, #440]	; (800798c <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_ENABLE();
 80077d4:	2201      	movs	r2, #1
 80077d6:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 80077d8:	f7fe fa78 	bl	8005ccc <HAL_GetTick>
 80077dc:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80077de:	6833      	ldr	r3, [r6, #0]
 80077e0:	0098      	lsls	r0, r3, #2
 80077e2:	f140 809b 	bpl.w	800791c <HAL_RCCEx_PeriphCLKConfig+0x1d8>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 80077e6:	6823      	ldr	r3, [r4, #0]
 80077e8:	069b      	lsls	r3, r3, #26
 80077ea:	d533      	bpl.n	8007854 <HAL_RCCEx_PeriphCLKConfig+0x110>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 80077ec:	2300      	movs	r3, #0
 80077ee:	9301      	str	r3, [sp, #4]
 80077f0:	4b66      	ldr	r3, [pc, #408]	; (800798c <HAL_RCCEx_PeriphCLKConfig+0x248>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 80077f2:	4d67      	ldr	r5, [pc, #412]	; (8007990 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PWR_CLK_ENABLE();
 80077f4:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80077f6:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80077fa:	641a      	str	r2, [r3, #64]	; 0x40
 80077fc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80077fe:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8007802:	9301      	str	r3, [sp, #4]
 8007804:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8007806:	682b      	ldr	r3, [r5, #0]
 8007808:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800780c:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 800780e:	f7fe fa5d 	bl	8005ccc <HAL_GetTick>
 8007812:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 8007814:	682b      	ldr	r3, [r5, #0]
 8007816:	05d9      	lsls	r1, r3, #23
 8007818:	f140 8087 	bpl.w	800792a <HAL_RCCEx_PeriphCLKConfig+0x1e6>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800781c:	4d5b      	ldr	r5, [pc, #364]	; (800798c <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800781e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8007820:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8007824:	f040 8088 	bne.w	8007938 <HAL_RCCEx_PeriphCLKConfig+0x1f4>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8007828:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800782a:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800782e:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8007832:	4a56      	ldr	r2, [pc, #344]	; (800798c <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8007834:	f040 80a4 	bne.w	8007980 <HAL_RCCEx_PeriphCLKConfig+0x23c>
 8007838:	6891      	ldr	r1, [r2, #8]
 800783a:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 800783e:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8007842:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 8007846:	4301      	orrs	r1, r0
 8007848:	6091      	str	r1, [r2, #8]
 800784a:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800784c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8007850:	430b      	orrs	r3, r1
 8007852:	6713      	str	r3, [r2, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8007854:	6820      	ldr	r0, [r4, #0]
 8007856:	f010 0010 	ands.w	r0, r0, #16
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800785a:	bf1f      	itttt	ne
 800785c:	4b4d      	ldrne	r3, [pc, #308]	; (8007994 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800785e:	f894 202c 	ldrbne.w	r2, [r4, #44]	; 0x2c
 8007862:	f8c3 21e0 	strne.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 8007866:	2000      	movne	r0, #0
 8007868:	e04f      	b.n	800790a <HAL_RCCEx_PeriphCLKConfig+0x1c6>
    __HAL_RCC_PLLI2S_DISABLE();
 800786a:	4b47      	ldr	r3, [pc, #284]	; (8007988 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800786c:	4e47      	ldr	r6, [pc, #284]	; (800798c <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_DISABLE();
 800786e:	2200      	movs	r2, #0
 8007870:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 8007872:	f7fe fa2b 	bl	8005ccc <HAL_GetTick>
 8007876:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8007878:	6833      	ldr	r3, [r6, #0]
 800787a:	011f      	lsls	r7, r3, #4
 800787c:	d43f      	bmi.n	80078fe <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800787e:	6821      	ldr	r1, [r4, #0]
 8007880:	07cd      	lsls	r5, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 8007882:	bf41      	itttt	mi
 8007884:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8007888:	071b      	lslmi	r3, r3, #28
 800788a:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 800788e:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8007892:	0788      	lsls	r0, r1, #30
 8007894:	d515      	bpl.n	80078c2 <HAL_RCCEx_PeriphCLKConfig+0x17e>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8007896:	4a3d      	ldr	r2, [pc, #244]	; (800798c <HAL_RCCEx_PeriphCLKConfig+0x248>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8007898:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800789a:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800789e:	6865      	ldr	r5, [r4, #4]
 80078a0:	061b      	lsls	r3, r3, #24
 80078a2:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 80078a6:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 80078aa:	4303      	orrs	r3, r0
 80078ac:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 80078b0:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 80078b4:	69e3      	ldr	r3, [r4, #28]
 80078b6:	f020 001f 	bic.w	r0, r0, #31
 80078ba:	3b01      	subs	r3, #1
 80078bc:	4303      	orrs	r3, r0
 80078be:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 80078c2:	0649      	lsls	r1, r1, #25
 80078c4:	d50a      	bpl.n	80078dc <HAL_RCCEx_PeriphCLKConfig+0x198>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 80078c6:	68e3      	ldr	r3, [r4, #12]
 80078c8:	6862      	ldr	r2, [r4, #4]
 80078ca:	061b      	lsls	r3, r3, #24
 80078cc:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80078d0:	68a2      	ldr	r2, [r4, #8]
 80078d2:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 80078d6:	4a2d      	ldr	r2, [pc, #180]	; (800798c <HAL_RCCEx_PeriphCLKConfig+0x248>)
 80078d8:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 80078dc:	4b2a      	ldr	r3, [pc, #168]	; (8007988 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80078de:	4e2b      	ldr	r6, [pc, #172]	; (800798c <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_ENABLE();
 80078e0:	2201      	movs	r2, #1
 80078e2:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 80078e4:	f7fe f9f2 	bl	8005ccc <HAL_GetTick>
 80078e8:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80078ea:	6833      	ldr	r3, [r6, #0]
 80078ec:	011a      	lsls	r2, r3, #4
 80078ee:	f53f af30 	bmi.w	8007752 <HAL_RCCEx_PeriphCLKConfig+0xe>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 80078f2:	f7fe f9eb 	bl	8005ccc <HAL_GetTick>
 80078f6:	1b40      	subs	r0, r0, r5
 80078f8:	2802      	cmp	r0, #2
 80078fa:	d9f6      	bls.n	80078ea <HAL_RCCEx_PeriphCLKConfig+0x1a6>
 80078fc:	e004      	b.n	8007908 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 80078fe:	f7fe f9e5 	bl	8005ccc <HAL_GetTick>
 8007902:	1b40      	subs	r0, r0, r5
 8007904:	2802      	cmp	r0, #2
 8007906:	d9b7      	bls.n	8007878 <HAL_RCCEx_PeriphCLKConfig+0x134>
        return HAL_TIMEOUT;
 8007908:	2003      	movs	r0, #3
}
 800790a:	b003      	add	sp, #12
 800790c:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800790e:	f7fe f9dd 	bl	8005ccc <HAL_GetTick>
 8007912:	1b80      	subs	r0, r0, r6
 8007914:	2802      	cmp	r0, #2
 8007916:	f67f af27 	bls.w	8007768 <HAL_RCCEx_PeriphCLKConfig+0x24>
 800791a:	e7f5      	b.n	8007908 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800791c:	f7fe f9d6 	bl	8005ccc <HAL_GetTick>
 8007920:	1b40      	subs	r0, r0, r5
 8007922:	2802      	cmp	r0, #2
 8007924:	f67f af5b 	bls.w	80077de <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8007928:	e7ee      	b.n	8007908 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800792a:	f7fe f9cf 	bl	8005ccc <HAL_GetTick>
 800792e:	1b80      	subs	r0, r0, r6
 8007930:	2802      	cmp	r0, #2
 8007932:	f67f af6f 	bls.w	8007814 <HAL_RCCEx_PeriphCLKConfig+0xd0>
 8007936:	e7e7      	b.n	8007908 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8007938:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800793a:	f402 7240 	and.w	r2, r2, #768	; 0x300
 800793e:	4293      	cmp	r3, r2
 8007940:	f43f af72 	beq.w	8007828 <HAL_RCCEx_PeriphCLKConfig+0xe4>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8007944:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8007946:	4a10      	ldr	r2, [pc, #64]	; (8007988 <HAL_RCCEx_PeriphCLKConfig+0x244>)
 8007948:	2101      	movs	r1, #1
 800794a:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800794e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8007952:	2100      	movs	r1, #0
 8007954:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 8007958:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800795a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800795c:	07da      	lsls	r2, r3, #31
 800795e:	f57f af63 	bpl.w	8007828 <HAL_RCCEx_PeriphCLKConfig+0xe4>
        tickstart = HAL_GetTick();
 8007962:	f7fe f9b3 	bl	8005ccc <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007966:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800796a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800796c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800796e:	079b      	lsls	r3, r3, #30
 8007970:	f53f af5a 	bmi.w	8007828 <HAL_RCCEx_PeriphCLKConfig+0xe4>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007974:	f7fe f9aa 	bl	8005ccc <HAL_GetTick>
 8007978:	1b80      	subs	r0, r0, r6
 800797a:	42b8      	cmp	r0, r7
 800797c:	d9f6      	bls.n	800796c <HAL_RCCEx_PeriphCLKConfig+0x228>
 800797e:	e7c3      	b.n	8007908 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8007980:	6891      	ldr	r1, [r2, #8]
 8007982:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8007986:	e75f      	b.n	8007848 <HAL_RCCEx_PeriphCLKConfig+0x104>
 8007988:	42470000 	.word	0x42470000
 800798c:	40023800 	.word	0x40023800
 8007990:	40007000 	.word	0x40007000
 8007994:	42471000 	.word	0x42471000

08007998 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 8007998:	b538      	push	{r3, r4, r5, lr}
 800799a:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 800799c:	4604      	mov	r4, r0
 800799e:	b1c8      	cbz	r0, 80079d4 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 80079a0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80079a4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80079a8:	b91b      	cbnz	r3, 80079b2 <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 80079aa:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 80079ae:	f7fa fae9 	bl	8001f84 <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80079b2:	2302      	movs	r3, #2
 80079b4:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 80079b8:	1d21      	adds	r1, r4, #4
 80079ba:	6820      	ldr	r0, [r4, #0]
 80079bc:	f000 fcba 	bl	8008334 <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 80079c0:	6862      	ldr	r2, [r4, #4]
 80079c2:	6820      	ldr	r0, [r4, #0]
 80079c4:	4629      	mov	r1, r5
 80079c6:	f000 fceb 	bl	80083a0 <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 80079ca:	2301      	movs	r3, #1
 80079cc:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 80079d0:	2000      	movs	r0, #0
}
 80079d2:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80079d4:	2001      	movs	r0, #1
 80079d6:	e7fc      	b.n	80079d2 <HAL_SDRAM_Init+0x3a>

080079d8 <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 80079d8:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80079da:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80079de:	2b02      	cmp	r3, #2
{
 80079e0:	4604      	mov	r4, r0
 80079e2:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80079e4:	b2d8      	uxtb	r0, r3
 80079e6:	d00d      	beq.n	8007a04 <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80079e8:	2302      	movs	r3, #2
 80079ea:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 80079ee:	6820      	ldr	r0, [r4, #0]
 80079f0:	f000 fd12 	bl	8008418 <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 80079f4:	682b      	ldr	r3, [r5, #0]
 80079f6:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 80079f8:	bf0c      	ite	eq
 80079fa:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 80079fc:	2301      	movne	r3, #1
 80079fe:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 8007a02:	2000      	movs	r0, #0
}
 8007a04:	bd38      	pop	{r3, r4, r5, pc}

08007a06 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8007a06:	b510      	push	{r4, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007a08:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8007a0c:	2b02      	cmp	r3, #2
{
 8007a0e:	4604      	mov	r4, r0
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007a10:	b2d8      	uxtb	r0, r3
 8007a12:	d009      	beq.n	8007a28 <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8007a14:	2302      	movs	r3, #2
 8007a16:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 8007a1a:	6820      	ldr	r0, [r4, #0]
 8007a1c:	f000 fd23 	bl	8008466 <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8007a20:	2301      	movs	r3, #1
 8007a22:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 8007a26:	2000      	movs	r0, #0
}
 8007a28:	bd10      	pop	{r4, pc}

08007a2a <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 8007a2a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007a2c:	4604      	mov	r4, r0
 8007a2e:	460e      	mov	r6, r1
 8007a30:	4615      	mov	r5, r2
 8007a32:	461f      	mov	r7, r3
                                                       uint32_t Timeout, uint32_t Tickstart)
{
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8007a34:	6822      	ldr	r2, [r4, #0]
 8007a36:	6893      	ldr	r3, [r2, #8]
 8007a38:	ea36 0303 	bics.w	r3, r6, r3
 8007a3c:	d001      	beq.n	8007a42 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x18>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8007a3e:	2000      	movs	r0, #0
 8007a40:	e02d      	b.n	8007a9e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x74>
    if (Timeout != HAL_MAX_DELAY)
 8007a42:	1c6b      	adds	r3, r5, #1
 8007a44:	d0f7      	beq.n	8007a36 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xc>
      if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
 8007a46:	f7fe f941 	bl	8005ccc <HAL_GetTick>
 8007a4a:	1bc0      	subs	r0, r0, r7
 8007a4c:	4285      	cmp	r5, r0
 8007a4e:	d8f1      	bhi.n	8007a34 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8007a50:	6823      	ldr	r3, [r4, #0]
 8007a52:	685a      	ldr	r2, [r3, #4]
 8007a54:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8007a58:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007a5a:	6862      	ldr	r2, [r4, #4]
 8007a5c:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8007a60:	d10a      	bne.n	8007a78 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4e>
 8007a62:	68a2      	ldr	r2, [r4, #8]
 8007a64:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8007a68:	d002      	beq.n	8007a70 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x46>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8007a6a:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8007a6e:	d103      	bne.n	8007a78 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4e>
          __HAL_SPI_DISABLE(hspi);
 8007a70:	681a      	ldr	r2, [r3, #0]
 8007a72:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007a76:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8007a78:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8007a7a:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 8007a7e:	d107      	bne.n	8007a90 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
          SPI_RESET_CRC(hspi);
 8007a80:	681a      	ldr	r2, [r3, #0]
 8007a82:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8007a86:	601a      	str	r2, [r3, #0]
 8007a88:	681a      	ldr	r2, [r3, #0]
 8007a8a:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8007a8e:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 8007a90:	2301      	movs	r3, #1
 8007a92:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 8007a96:	2300      	movs	r3, #0
 8007a98:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 8007a9c:	2003      	movs	r0, #3
}
 8007a9e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08007aa0 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 8007aa0:	b538      	push	{r3, r4, r5, lr}
 8007aa2:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007aa4:	6842      	ldr	r2, [r0, #4]
 8007aa6:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8007aaa:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007aac:	d11f      	bne.n	8007aee <SPI_EndRxTransaction+0x4e>
 8007aae:	6882      	ldr	r2, [r0, #8]
 8007ab0:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8007ab4:	d002      	beq.n	8007abc <SPI_EndRxTransaction+0x1c>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8007ab6:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8007aba:	d107      	bne.n	8007acc <SPI_EndRxTransaction+0x2c>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 8007abc:	6825      	ldr	r5, [r4, #0]
 8007abe:	6828      	ldr	r0, [r5, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8007ac0:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
    __HAL_SPI_DISABLE(hspi);
 8007ac4:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 8007ac8:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8007aca:	d007      	beq.n	8007adc <SPI_EndRxTransaction+0x3c>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8007acc:	460a      	mov	r2, r1
 8007ace:	2180      	movs	r1, #128	; 0x80
 8007ad0:	4620      	mov	r0, r4
 8007ad2:	f7ff ffaa 	bl	8007a2a <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8007ad6:	b920      	cbnz	r0, 8007ae2 <SPI_EndRxTransaction+0x42>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 8007ad8:	2000      	movs	r0, #0
}
 8007ada:	bd38      	pop	{r3, r4, r5, pc}
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8007adc:	460a      	mov	r2, r1
 8007ade:	2101      	movs	r1, #1
 8007ae0:	e7f6      	b.n	8007ad0 <SPI_EndRxTransaction+0x30>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007ae2:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8007ae4:	f043 0320 	orr.w	r3, r3, #32
 8007ae8:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8007aea:	2003      	movs	r0, #3
 8007aec:	e7f5      	b.n	8007ada <SPI_EndRxTransaction+0x3a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8007aee:	460a      	mov	r2, r1
 8007af0:	2101      	movs	r1, #1
 8007af2:	e7ee      	b.n	8007ad2 <SPI_EndRxTransaction+0x32>

08007af4 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8007af4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007af6:	4613      	mov	r3, r2
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8007af8:	4a12      	ldr	r2, [pc, #72]	; (8007b44 <SPI_EndRxTxTransaction+0x50>)
 8007afa:	6815      	ldr	r5, [r2, #0]
 8007afc:	4a12      	ldr	r2, [pc, #72]	; (8007b48 <SPI_EndRxTxTransaction+0x54>)
 8007afe:	fbb5 f5f2 	udiv	r5, r5, r2
 8007b02:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8007b06:	4355      	muls	r5, r2
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007b08:	6842      	ldr	r2, [r0, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8007b0a:	9501      	str	r5, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007b0c:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8007b10:	4604      	mov	r4, r0
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007b12:	d10b      	bne.n	8007b2c <SPI_EndRxTxTransaction+0x38>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8007b14:	460a      	mov	r2, r1
 8007b16:	2180      	movs	r1, #128	; 0x80
 8007b18:	f7ff ff87 	bl	8007a2a <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8007b1c:	b178      	cbz	r0, 8007b3e <SPI_EndRxTxTransaction+0x4a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007b1e:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8007b20:	f043 0320 	orr.w	r3, r3, #32
 8007b24:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8007b26:	2003      	movs	r0, #3
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 8007b28:	b003      	add	sp, #12
 8007b2a:	bd30      	pop	{r4, r5, pc}
      if (count == 0U)
 8007b2c:	9b01      	ldr	r3, [sp, #4]
 8007b2e:	b133      	cbz	r3, 8007b3e <SPI_EndRxTxTransaction+0x4a>
      count--;
 8007b30:	9b01      	ldr	r3, [sp, #4]
 8007b32:	3b01      	subs	r3, #1
 8007b34:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8007b36:	6823      	ldr	r3, [r4, #0]
 8007b38:	689b      	ldr	r3, [r3, #8]
 8007b3a:	061b      	lsls	r3, r3, #24
 8007b3c:	d4f6      	bmi.n	8007b2c <SPI_EndRxTxTransaction+0x38>
  return HAL_OK;
 8007b3e:	2000      	movs	r0, #0
 8007b40:	e7f2      	b.n	8007b28 <SPI_EndRxTxTransaction+0x34>
 8007b42:	bf00      	nop
 8007b44:	2000007c 	.word	0x2000007c
 8007b48:	016e3600 	.word	0x016e3600

08007b4c <HAL_SPI_Init>:
{
 8007b4c:	b510      	push	{r4, lr}
  if (hspi == NULL)
 8007b4e:	4604      	mov	r4, r0
 8007b50:	2800      	cmp	r0, #0
 8007b52:	d036      	beq.n	8007bc2 <HAL_SPI_Init+0x76>
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8007b54:	2300      	movs	r3, #0
 8007b56:	6283      	str	r3, [r0, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 8007b58:	f890 3051 	ldrb.w	r3, [r0, #81]	; 0x51
 8007b5c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007b60:	b91b      	cbnz	r3, 8007b6a <HAL_SPI_Init+0x1e>
    hspi->Lock = HAL_UNLOCKED;
 8007b62:	f880 2050 	strb.w	r2, [r0, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 8007b66:	f7fa f9b5 	bl	8001ed4 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 8007b6a:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8007b6c:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 8007b6e:	2302      	movs	r3, #2
 8007b70:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 8007b74:	680b      	ldr	r3, [r1, #0]
 8007b76:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8007b7a:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8007b7c:	e9d4 3001 	ldrd	r3, r0, [r4, #4]
 8007b80:	4303      	orrs	r3, r0
 8007b82:	68e0      	ldr	r0, [r4, #12]
 8007b84:	4303      	orrs	r3, r0
 8007b86:	6920      	ldr	r0, [r4, #16]
 8007b88:	4303      	orrs	r3, r0
 8007b8a:	6960      	ldr	r0, [r4, #20]
 8007b8c:	4303      	orrs	r3, r0
 8007b8e:	69e0      	ldr	r0, [r4, #28]
 8007b90:	4303      	orrs	r3, r0
 8007b92:	6a20      	ldr	r0, [r4, #32]
 8007b94:	4303      	orrs	r3, r0
 8007b96:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8007b98:	4303      	orrs	r3, r0
 8007b9a:	f402 7000 	and.w	r0, r2, #512	; 0x200
 8007b9e:	4303      	orrs	r3, r0
 8007ba0:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 8007ba2:	0c12      	lsrs	r2, r2, #16
 8007ba4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007ba6:	f002 0204 	and.w	r2, r2, #4
 8007baa:	431a      	orrs	r2, r3
 8007bac:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8007bae:	69cb      	ldr	r3, [r1, #28]
 8007bb0:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8007bb4:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8007bb6:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 8007bb8:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8007bba:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8007bbc:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
}
 8007bc0:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8007bc2:	2001      	movs	r0, #1
 8007bc4:	e7fc      	b.n	8007bc0 <HAL_SPI_Init+0x74>

08007bc6 <HAL_SPI_Transmit>:
{
 8007bc6:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007bca:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8007bcc:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 8007bd0:	2b01      	cmp	r3, #1
{
 8007bd2:	4604      	mov	r4, r0
 8007bd4:	460d      	mov	r5, r1
 8007bd6:	4617      	mov	r7, r2
  __HAL_LOCK(hspi);
 8007bd8:	f000 809d 	beq.w	8007d16 <HAL_SPI_Transmit+0x150>
 8007bdc:	2301      	movs	r3, #1
 8007bde:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8007be2:	f7fe f873 	bl	8005ccc <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8007be6:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8007bea:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8007bec:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8007bee:	b2d8      	uxtb	r0, r3
 8007bf0:	f040 808f 	bne.w	8007d12 <HAL_SPI_Transmit+0x14c>
  if ((pData == NULL) || (Size == 0U))
 8007bf4:	2d00      	cmp	r5, #0
 8007bf6:	d05a      	beq.n	8007cae <HAL_SPI_Transmit+0xe8>
 8007bf8:	2f00      	cmp	r7, #0
 8007bfa:	d058      	beq.n	8007cae <HAL_SPI_Transmit+0xe8>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8007bfc:	2303      	movs	r3, #3
 8007bfe:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007c02:	68a2      	ldr	r2, [r4, #8]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8007c04:	6325      	str	r5, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007c06:	2300      	movs	r3, #0
 8007c08:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->RxISR       = NULL;
 8007c0a:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->TxXferCount = Size;
 8007c0e:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8007c10:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferCount = 0U;
 8007c12:	87e3      	strh	r3, [r4, #62]	; 0x3e
  hspi->RxXferSize  = 0U;
 8007c14:	87a3      	strh	r3, [r4, #60]	; 0x3c
    SPI_1LINE_TX(hspi);
 8007c16:	6823      	ldr	r3, [r4, #0]
  hspi->TxXferSize  = Size;
 8007c18:	86a7      	strh	r7, [r4, #52]	; 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007c1a:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    SPI_1LINE_TX(hspi);
 8007c1e:	bf08      	it	eq
 8007c20:	681a      	ldreq	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007c22:	68e1      	ldr	r1, [r4, #12]
    SPI_1LINE_TX(hspi);
 8007c24:	bf04      	itt	eq
 8007c26:	f442 4280 	orreq.w	r2, r2, #16384	; 0x4000
 8007c2a:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007c2c:	681a      	ldr	r2, [r3, #0]
 8007c2e:	0652      	lsls	r2, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8007c30:	bf5e      	ittt	pl
 8007c32:	681a      	ldrpl	r2, [r3, #0]
 8007c34:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 8007c38:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007c3a:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007c3e:	6862      	ldr	r2, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007c40:	d141      	bne.n	8007cc6 <HAL_SPI_Transmit+0x100>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007c42:	b10a      	cbz	r2, 8007c48 <HAL_SPI_Transmit+0x82>
 8007c44:	2f01      	cmp	r7, #1
 8007c46:	d107      	bne.n	8007c58 <HAL_SPI_Transmit+0x92>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007c48:	f835 2b02 	ldrh.w	r2, [r5], #2
 8007c4c:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8007c4e:	6325      	str	r5, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007c50:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007c52:	3b01      	subs	r3, #1
 8007c54:	b29b      	uxth	r3, r3
 8007c56:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8007c58:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007c5a:	b29b      	uxth	r3, r3
 8007c5c:	b9a3      	cbnz	r3, 8007c88 <HAL_SPI_Transmit+0xc2>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8007c5e:	4642      	mov	r2, r8
 8007c60:	4631      	mov	r1, r6
 8007c62:	4620      	mov	r0, r4
 8007c64:	f7ff ff46 	bl	8007af4 <SPI_EndRxTxTransaction>
 8007c68:	2800      	cmp	r0, #0
 8007c6a:	d14f      	bne.n	8007d0c <HAL_SPI_Transmit+0x146>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8007c6c:	68a3      	ldr	r3, [r4, #8]
 8007c6e:	b933      	cbnz	r3, 8007c7e <HAL_SPI_Transmit+0xb8>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8007c70:	9301      	str	r3, [sp, #4]
 8007c72:	6823      	ldr	r3, [r4, #0]
 8007c74:	68da      	ldr	r2, [r3, #12]
 8007c76:	9201      	str	r2, [sp, #4]
 8007c78:	689b      	ldr	r3, [r3, #8]
 8007c7a:	9301      	str	r3, [sp, #4]
 8007c7c:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8007c7e:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8007c80:	3800      	subs	r0, #0
 8007c82:	bf18      	it	ne
 8007c84:	2001      	movne	r0, #1
error:
 8007c86:	e012      	b.n	8007cae <HAL_SPI_Transmit+0xe8>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8007c88:	6822      	ldr	r2, [r4, #0]
 8007c8a:	6893      	ldr	r3, [r2, #8]
 8007c8c:	0798      	lsls	r0, r3, #30
 8007c8e:	d505      	bpl.n	8007c9c <HAL_SPI_Transmit+0xd6>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007c90:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007c92:	f833 1b02 	ldrh.w	r1, [r3], #2
 8007c96:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8007c98:	6323      	str	r3, [r4, #48]	; 0x30
 8007c9a:	e7d9      	b.n	8007c50 <HAL_SPI_Transmit+0x8a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007c9c:	f7fe f816 	bl	8005ccc <HAL_GetTick>
 8007ca0:	eba0 0008 	sub.w	r0, r0, r8
 8007ca4:	42b0      	cmp	r0, r6
 8007ca6:	d30b      	bcc.n	8007cc0 <HAL_SPI_Transmit+0xfa>
 8007ca8:	1c71      	adds	r1, r6, #1
 8007caa:	d0d5      	beq.n	8007c58 <HAL_SPI_Transmit+0x92>
          errorcode = HAL_TIMEOUT;
 8007cac:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8007cae:	2301      	movs	r3, #1
 8007cb0:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8007cb4:	2300      	movs	r3, #0
 8007cb6:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8007cba:	b002      	add	sp, #8
 8007cbc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007cc0:	2e00      	cmp	r6, #0
 8007cc2:	d1c9      	bne.n	8007c58 <HAL_SPI_Transmit+0x92>
 8007cc4:	e7f2      	b.n	8007cac <HAL_SPI_Transmit+0xe6>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007cc6:	b10a      	cbz	r2, 8007ccc <HAL_SPI_Transmit+0x106>
 8007cc8:	2f01      	cmp	r7, #1
 8007cca:	d108      	bne.n	8007cde <HAL_SPI_Transmit+0x118>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007ccc:	782a      	ldrb	r2, [r5, #0]
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007cce:	731a      	strb	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8007cd0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007cd2:	3301      	adds	r3, #1
 8007cd4:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007cd6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007cd8:	3b01      	subs	r3, #1
 8007cda:	b29b      	uxth	r3, r3
 8007cdc:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8007cde:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007ce0:	b29b      	uxth	r3, r3
 8007ce2:	2b00      	cmp	r3, #0
 8007ce4:	d0bb      	beq.n	8007c5e <HAL_SPI_Transmit+0x98>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8007ce6:	6823      	ldr	r3, [r4, #0]
 8007ce8:	689a      	ldr	r2, [r3, #8]
 8007cea:	0792      	lsls	r2, r2, #30
 8007cec:	d502      	bpl.n	8007cf4 <HAL_SPI_Transmit+0x12e>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007cee:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007cf0:	7812      	ldrb	r2, [r2, #0]
 8007cf2:	e7ec      	b.n	8007cce <HAL_SPI_Transmit+0x108>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007cf4:	f7fd ffea 	bl	8005ccc <HAL_GetTick>
 8007cf8:	eba0 0008 	sub.w	r0, r0, r8
 8007cfc:	42b0      	cmp	r0, r6
 8007cfe:	d302      	bcc.n	8007d06 <HAL_SPI_Transmit+0x140>
 8007d00:	1c73      	adds	r3, r6, #1
 8007d02:	d0ec      	beq.n	8007cde <HAL_SPI_Transmit+0x118>
 8007d04:	e7d2      	b.n	8007cac <HAL_SPI_Transmit+0xe6>
 8007d06:	2e00      	cmp	r6, #0
 8007d08:	d1e9      	bne.n	8007cde <HAL_SPI_Transmit+0x118>
 8007d0a:	e7cf      	b.n	8007cac <HAL_SPI_Transmit+0xe6>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8007d0c:	2320      	movs	r3, #32
 8007d0e:	6563      	str	r3, [r4, #84]	; 0x54
 8007d10:	e7ac      	b.n	8007c6c <HAL_SPI_Transmit+0xa6>
    errorcode = HAL_BUSY;
 8007d12:	2002      	movs	r0, #2
 8007d14:	e7cb      	b.n	8007cae <HAL_SPI_Transmit+0xe8>
  __HAL_LOCK(hspi);
 8007d16:	2002      	movs	r0, #2
 8007d18:	e7cf      	b.n	8007cba <HAL_SPI_Transmit+0xf4>

08007d1a <HAL_SPI_TransmitReceive>:
{
 8007d1a:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007d1e:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8007d20:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
{
 8007d24:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  __HAL_LOCK(hspi);
 8007d26:	2b01      	cmp	r3, #1
{
 8007d28:	4604      	mov	r4, r0
 8007d2a:	460d      	mov	r5, r1
 8007d2c:	4691      	mov	r9, r2
  __HAL_LOCK(hspi);
 8007d2e:	f000 80e6 	beq.w	8007efe <HAL_SPI_TransmitReceive+0x1e4>
 8007d32:	2301      	movs	r3, #1
 8007d34:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8007d38:	f7fd ffc8 	bl	8005ccc <HAL_GetTick>
  tmp_state           = hspi->State;
 8007d3c:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 8007d40:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8007d42:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8007d44:	4680      	mov	r8, r0
  tmp_state           = hspi->State;
 8007d46:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8007d48:	d00a      	beq.n	8007d60 <HAL_SPI_TransmitReceive+0x46>
 8007d4a:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8007d4e:	f040 80d4 	bne.w	8007efa <HAL_SPI_TransmitReceive+0x1e0>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8007d52:	68a3      	ldr	r3, [r4, #8]
 8007d54:	2b00      	cmp	r3, #0
 8007d56:	f040 80d0 	bne.w	8007efa <HAL_SPI_TransmitReceive+0x1e0>
 8007d5a:	2904      	cmp	r1, #4
 8007d5c:	f040 80cd 	bne.w	8007efa <HAL_SPI_TransmitReceive+0x1e0>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8007d60:	2d00      	cmp	r5, #0
 8007d62:	d040      	beq.n	8007de6 <HAL_SPI_TransmitReceive+0xcc>
 8007d64:	f1b9 0f00 	cmp.w	r9, #0
 8007d68:	d03d      	beq.n	8007de6 <HAL_SPI_TransmitReceive+0xcc>
 8007d6a:	2e00      	cmp	r6, #0
 8007d6c:	d03b      	beq.n	8007de6 <HAL_SPI_TransmitReceive+0xcc>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8007d6e:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8007d72:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8007d76:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8007d78:	bf1c      	itt	ne
 8007d7a:	2305      	movne	r3, #5
 8007d7c:	f884 3051 	strbne.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007d80:	2300      	movs	r3, #0
 8007d82:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 8007d84:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007d88:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8007d8a:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 8007d8c:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007d8e:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 8007d90:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007d92:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 8007d94:	bf58      	it	pl
 8007d96:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 8007d98:	6325      	str	r5, [r4, #48]	; 0x30
    __HAL_SPI_ENABLE(hspi);
 8007d9a:	bf58      	it	pl
 8007d9c:	f041 0140 	orrpl.w	r1, r1, #64	; 0x40
  hspi->TxXferSize  = Size;
 8007da0:	86a6      	strh	r6, [r4, #52]	; 0x34
    __HAL_SPI_ENABLE(hspi);
 8007da2:	bf58      	it	pl
 8007da4:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007da6:	68e1      	ldr	r1, [r4, #12]
 8007da8:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 8007dac:	d152      	bne.n	8007e54 <HAL_SPI_TransmitReceive+0x13a>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007dae:	b10a      	cbz	r2, 8007db4 <HAL_SPI_TransmitReceive+0x9a>
 8007db0:	2e01      	cmp	r6, #1
 8007db2:	d107      	bne.n	8007dc4 <HAL_SPI_TransmitReceive+0xaa>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007db4:	f835 2b02 	ldrh.w	r2, [r5], #2
 8007db8:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 8007dba:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8007dbc:	6325      	str	r5, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8007dbe:	3b01      	subs	r3, #1
 8007dc0:	b29b      	uxth	r3, r3
 8007dc2:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8007dc4:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8007dc6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007dc8:	b29b      	uxth	r3, r3
 8007dca:	b973      	cbnz	r3, 8007dea <HAL_SPI_TransmitReceive+0xd0>
 8007dcc:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007dce:	b29b      	uxth	r3, r3
 8007dd0:	b95b      	cbnz	r3, 8007dea <HAL_SPI_TransmitReceive+0xd0>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8007dd2:	4642      	mov	r2, r8
 8007dd4:	4639      	mov	r1, r7
 8007dd6:	4620      	mov	r0, r4
 8007dd8:	f7ff fe8c 	bl	8007af4 <SPI_EndRxTxTransaction>
 8007ddc:	2800      	cmp	r0, #0
 8007dde:	f000 8081 	beq.w	8007ee4 <HAL_SPI_TransmitReceive+0x1ca>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8007de2:	2320      	movs	r3, #32
 8007de4:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 8007de6:	2001      	movs	r0, #1
 8007de8:	e02b      	b.n	8007e42 <HAL_SPI_TransmitReceive+0x128>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8007dea:	6821      	ldr	r1, [r4, #0]
 8007dec:	688b      	ldr	r3, [r1, #8]
 8007dee:	079e      	lsls	r6, r3, #30
 8007df0:	d50d      	bpl.n	8007e0e <HAL_SPI_TransmitReceive+0xf4>
 8007df2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007df4:	b29b      	uxth	r3, r3
 8007df6:	b153      	cbz	r3, 8007e0e <HAL_SPI_TransmitReceive+0xf4>
 8007df8:	b14d      	cbz	r5, 8007e0e <HAL_SPI_TransmitReceive+0xf4>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007dfa:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007dfc:	f833 2b02 	ldrh.w	r2, [r3], #2
 8007e00:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8007e02:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007e04:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007e06:	3b01      	subs	r3, #1
 8007e08:	b29b      	uxth	r3, r3
 8007e0a:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8007e0c:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8007e0e:	688a      	ldr	r2, [r1, #8]
 8007e10:	f012 0201 	ands.w	r2, r2, #1
 8007e14:	d00c      	beq.n	8007e30 <HAL_SPI_TransmitReceive+0x116>
 8007e16:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007e18:	b29b      	uxth	r3, r3
 8007e1a:	b14b      	cbz	r3, 8007e30 <HAL_SPI_TransmitReceive+0x116>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8007e1c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007e1e:	68c9      	ldr	r1, [r1, #12]
 8007e20:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8007e24:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8007e26:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007e28:	3b01      	subs	r3, #1
 8007e2a:	b29b      	uxth	r3, r3
 8007e2c:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8007e2e:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8007e30:	f7fd ff4c 	bl	8005ccc <HAL_GetTick>
 8007e34:	eba0 0008 	sub.w	r0, r0, r8
 8007e38:	42b8      	cmp	r0, r7
 8007e3a:	d3c4      	bcc.n	8007dc6 <HAL_SPI_TransmitReceive+0xac>
 8007e3c:	1c78      	adds	r0, r7, #1
 8007e3e:	d0c2      	beq.n	8007dc6 <HAL_SPI_TransmitReceive+0xac>
        errorcode = HAL_TIMEOUT;
 8007e40:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8007e42:	2301      	movs	r3, #1
 8007e44:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8007e48:	2300      	movs	r3, #0
 8007e4a:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8007e4e:	b003      	add	sp, #12
 8007e50:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007e54:	b10a      	cbz	r2, 8007e5a <HAL_SPI_TransmitReceive+0x140>
 8007e56:	2e01      	cmp	r6, #1
 8007e58:	d108      	bne.n	8007e6c <HAL_SPI_TransmitReceive+0x152>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007e5a:	782a      	ldrb	r2, [r5, #0]
 8007e5c:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8007e5e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007e60:	3301      	adds	r3, #1
 8007e62:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8007e64:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007e66:	3b01      	subs	r3, #1
 8007e68:	b29b      	uxth	r3, r3
 8007e6a:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8007e6c:	2501      	movs	r5, #1
 8007e6e:	e02d      	b.n	8007ecc <HAL_SPI_TransmitReceive+0x1b2>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8007e70:	6822      	ldr	r2, [r4, #0]
 8007e72:	6893      	ldr	r3, [r2, #8]
 8007e74:	0799      	lsls	r1, r3, #30
 8007e76:	d50e      	bpl.n	8007e96 <HAL_SPI_TransmitReceive+0x17c>
 8007e78:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007e7a:	b29b      	uxth	r3, r3
 8007e7c:	b15b      	cbz	r3, 8007e96 <HAL_SPI_TransmitReceive+0x17c>
 8007e7e:	b155      	cbz	r5, 8007e96 <HAL_SPI_TransmitReceive+0x17c>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 8007e80:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007e82:	781b      	ldrb	r3, [r3, #0]
 8007e84:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 8007e86:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007e88:	3301      	adds	r3, #1
 8007e8a:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007e8c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007e8e:	3b01      	subs	r3, #1
 8007e90:	b29b      	uxth	r3, r3
 8007e92:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8007e94:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8007e96:	6822      	ldr	r2, [r4, #0]
 8007e98:	6891      	ldr	r1, [r2, #8]
 8007e9a:	f011 0101 	ands.w	r1, r1, #1
 8007e9e:	d00d      	beq.n	8007ebc <HAL_SPI_TransmitReceive+0x1a2>
 8007ea0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007ea2:	b29b      	uxth	r3, r3
 8007ea4:	b153      	cbz	r3, 8007ebc <HAL_SPI_TransmitReceive+0x1a2>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 8007ea6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007ea8:	68d2      	ldr	r2, [r2, #12]
 8007eaa:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 8007eac:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007eae:	3301      	adds	r3, #1
 8007eb0:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8007eb2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007eb4:	3b01      	subs	r3, #1
 8007eb6:	b29b      	uxth	r3, r3
 8007eb8:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8007eba:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8007ebc:	f7fd ff06 	bl	8005ccc <HAL_GetTick>
 8007ec0:	eba0 0008 	sub.w	r0, r0, r8
 8007ec4:	42b8      	cmp	r0, r7
 8007ec6:	d30a      	bcc.n	8007ede <HAL_SPI_TransmitReceive+0x1c4>
 8007ec8:	1c7b      	adds	r3, r7, #1
 8007eca:	d1b9      	bne.n	8007e40 <HAL_SPI_TransmitReceive+0x126>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8007ecc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007ece:	b29b      	uxth	r3, r3
 8007ed0:	2b00      	cmp	r3, #0
 8007ed2:	d1cd      	bne.n	8007e70 <HAL_SPI_TransmitReceive+0x156>
 8007ed4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007ed6:	b29b      	uxth	r3, r3
 8007ed8:	2b00      	cmp	r3, #0
 8007eda:	d1c9      	bne.n	8007e70 <HAL_SPI_TransmitReceive+0x156>
 8007edc:	e779      	b.n	8007dd2 <HAL_SPI_TransmitReceive+0xb8>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8007ede:	2f00      	cmp	r7, #0
 8007ee0:	d1f4      	bne.n	8007ecc <HAL_SPI_TransmitReceive+0x1b2>
 8007ee2:	e7ad      	b.n	8007e40 <HAL_SPI_TransmitReceive+0x126>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8007ee4:	68a3      	ldr	r3, [r4, #8]
 8007ee6:	2b00      	cmp	r3, #0
 8007ee8:	d1ab      	bne.n	8007e42 <HAL_SPI_TransmitReceive+0x128>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8007eea:	6823      	ldr	r3, [r4, #0]
 8007eec:	9001      	str	r0, [sp, #4]
 8007eee:	68da      	ldr	r2, [r3, #12]
 8007ef0:	9201      	str	r2, [sp, #4]
 8007ef2:	689b      	ldr	r3, [r3, #8]
 8007ef4:	9301      	str	r3, [sp, #4]
 8007ef6:	9b01      	ldr	r3, [sp, #4]
 8007ef8:	e7a3      	b.n	8007e42 <HAL_SPI_TransmitReceive+0x128>
    errorcode = HAL_BUSY;
 8007efa:	2002      	movs	r0, #2
 8007efc:	e7a1      	b.n	8007e42 <HAL_SPI_TransmitReceive+0x128>
  __HAL_LOCK(hspi);
 8007efe:	2002      	movs	r0, #2
 8007f00:	e7a5      	b.n	8007e4e <HAL_SPI_TransmitReceive+0x134>

08007f02 <HAL_SPI_Receive>:
{
 8007f02:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007f06:	461d      	mov	r5, r3
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8007f08:	6843      	ldr	r3, [r0, #4]
 8007f0a:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
{
 8007f0e:	4604      	mov	r4, r0
 8007f10:	4689      	mov	r9, r1
 8007f12:	4617      	mov	r7, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8007f14:	d10c      	bne.n	8007f30 <HAL_SPI_Receive+0x2e>
 8007f16:	6883      	ldr	r3, [r0, #8]
 8007f18:	b953      	cbnz	r3, 8007f30 <HAL_SPI_Receive+0x2e>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8007f1a:	2304      	movs	r3, #4
 8007f1c:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8007f20:	4613      	mov	r3, r2
 8007f22:	9500      	str	r5, [sp, #0]
 8007f24:	460a      	mov	r2, r1
 8007f26:	f7ff fef8 	bl	8007d1a <HAL_SPI_TransmitReceive>
}
 8007f2a:	b003      	add	sp, #12
 8007f2c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(hspi);
 8007f30:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8007f34:	2b01      	cmp	r3, #1
 8007f36:	f000 8084 	beq.w	8008042 <HAL_SPI_Receive+0x140>
 8007f3a:	2301      	movs	r3, #1
 8007f3c:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 8007f40:	f7fd fec4 	bl	8005ccc <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8007f44:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8007f48:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8007f4a:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8007f4c:	b2d8      	uxtb	r0, r3
 8007f4e:	d176      	bne.n	800803e <HAL_SPI_Receive+0x13c>
  if ((pData == NULL) || (Size == 0U))
 8007f50:	f1b9 0f00 	cmp.w	r9, #0
 8007f54:	d05a      	beq.n	800800c <HAL_SPI_Receive+0x10a>
 8007f56:	2f00      	cmp	r7, #0
 8007f58:	d058      	beq.n	800800c <HAL_SPI_Receive+0x10a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007f5a:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 8007f5c:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8007f60:	2304      	movs	r3, #4
 8007f62:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007f66:	2600      	movs	r6, #0
    SPI_1LINE_RX(hspi);
 8007f68:	6823      	ldr	r3, [r4, #0]
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007f6a:	6566      	str	r6, [r4, #84]	; 0x54
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007f6c:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->RxXferCount = Size;
 8007f70:	87e7      	strh	r7, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 8007f72:	86e6      	strh	r6, [r4, #54]	; 0x36
    SPI_1LINE_RX(hspi);
 8007f74:	bf08      	it	eq
 8007f76:	681a      	ldreq	r2, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 8007f78:	6326      	str	r6, [r4, #48]	; 0x30
    SPI_1LINE_RX(hspi);
 8007f7a:	bf08      	it	eq
 8007f7c:	f422 4280 	biceq.w	r2, r2, #16384	; 0x4000
  hspi->TxISR       = NULL;
 8007f80:	e9c4 6610 	strd	r6, r6, [r4, #64]	; 0x40
  hspi->TxXferSize  = 0U;
 8007f84:	86a6      	strh	r6, [r4, #52]	; 0x34
  hspi->RxXferSize  = Size;
 8007f86:	87a7      	strh	r7, [r4, #60]	; 0x3c
    SPI_1LINE_RX(hspi);
 8007f88:	bf08      	it	eq
 8007f8a:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007f8c:	681a      	ldr	r2, [r3, #0]
 8007f8e:	0656      	lsls	r6, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8007f90:	bf5e      	ittt	pl
 8007f92:	681a      	ldrpl	r2, [r3, #0]
 8007f94:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 8007f98:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 8007f9a:	68e3      	ldr	r3, [r4, #12]
 8007f9c:	b1f3      	cbz	r3, 8007fdc <HAL_SPI_Receive+0xda>
    while (hspi->RxXferCount > 0U)
 8007f9e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007fa0:	b29b      	uxth	r3, r3
 8007fa2:	b1fb      	cbz	r3, 8007fe4 <HAL_SPI_Receive+0xe2>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8007fa4:	6823      	ldr	r3, [r4, #0]
 8007fa6:	689a      	ldr	r2, [r3, #8]
 8007fa8:	07d2      	lsls	r2, r2, #31
 8007faa:	d539      	bpl.n	8008020 <HAL_SPI_Receive+0x11e>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8007fac:	68da      	ldr	r2, [r3, #12]
 8007fae:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007fb0:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8007fb4:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8007fb6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007fb8:	3b01      	subs	r3, #1
 8007fba:	b29b      	uxth	r3, r3
 8007fbc:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8007fbe:	e7ee      	b.n	8007f9e <HAL_SPI_Receive+0x9c>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8007fc0:	6823      	ldr	r3, [r4, #0]
 8007fc2:	689a      	ldr	r2, [r3, #8]
 8007fc4:	07d0      	lsls	r0, r2, #31
 8007fc6:	d518      	bpl.n	8007ffa <HAL_SPI_Receive+0xf8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8007fc8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007fca:	7b1b      	ldrb	r3, [r3, #12]
 8007fcc:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 8007fce:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007fd0:	3301      	adds	r3, #1
 8007fd2:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8007fd4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007fd6:	3b01      	subs	r3, #1
 8007fd8:	b29b      	uxth	r3, r3
 8007fda:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 8007fdc:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007fde:	b29b      	uxth	r3, r3
 8007fe0:	2b00      	cmp	r3, #0
 8007fe2:	d1ed      	bne.n	8007fc0 <HAL_SPI_Receive+0xbe>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8007fe4:	4642      	mov	r2, r8
 8007fe6:	4629      	mov	r1, r5
 8007fe8:	4620      	mov	r0, r4
 8007fea:	f7ff fd59 	bl	8007aa0 <SPI_EndRxTransaction>
 8007fee:	bb18      	cbnz	r0, 8008038 <HAL_SPI_Receive+0x136>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8007ff0:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8007ff2:	3800      	subs	r0, #0
 8007ff4:	bf18      	it	ne
 8007ff6:	2001      	movne	r0, #1
error :
 8007ff8:	e008      	b.n	800800c <HAL_SPI_Receive+0x10a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007ffa:	f7fd fe67 	bl	8005ccc <HAL_GetTick>
 8007ffe:	eba0 0008 	sub.w	r0, r0, r8
 8008002:	42a8      	cmp	r0, r5
 8008004:	d309      	bcc.n	800801a <HAL_SPI_Receive+0x118>
 8008006:	1c69      	adds	r1, r5, #1
 8008008:	d0e8      	beq.n	8007fdc <HAL_SPI_Receive+0xda>
          errorcode = HAL_TIMEOUT;
 800800a:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 800800c:	2301      	movs	r3, #1
 800800e:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8008012:	2300      	movs	r3, #0
 8008014:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  return errorcode;
 8008018:	e787      	b.n	8007f2a <HAL_SPI_Receive+0x28>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800801a:	2d00      	cmp	r5, #0
 800801c:	d1de      	bne.n	8007fdc <HAL_SPI_Receive+0xda>
 800801e:	e7f4      	b.n	800800a <HAL_SPI_Receive+0x108>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8008020:	f7fd fe54 	bl	8005ccc <HAL_GetTick>
 8008024:	eba0 0008 	sub.w	r0, r0, r8
 8008028:	42a8      	cmp	r0, r5
 800802a:	d302      	bcc.n	8008032 <HAL_SPI_Receive+0x130>
 800802c:	1c6b      	adds	r3, r5, #1
 800802e:	d0b6      	beq.n	8007f9e <HAL_SPI_Receive+0x9c>
 8008030:	e7eb      	b.n	800800a <HAL_SPI_Receive+0x108>
 8008032:	2d00      	cmp	r5, #0
 8008034:	d1b3      	bne.n	8007f9e <HAL_SPI_Receive+0x9c>
 8008036:	e7e8      	b.n	800800a <HAL_SPI_Receive+0x108>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8008038:	2320      	movs	r3, #32
 800803a:	6563      	str	r3, [r4, #84]	; 0x54
 800803c:	e7d8      	b.n	8007ff0 <HAL_SPI_Receive+0xee>
    errorcode = HAL_BUSY;
 800803e:	2002      	movs	r0, #2
 8008040:	e7e4      	b.n	800800c <HAL_SPI_Receive+0x10a>
  __HAL_LOCK(hspi);
 8008042:	2002      	movs	r0, #2
 8008044:	e771      	b.n	8007f2a <HAL_SPI_Receive+0x28>

08008046 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8008046:	6803      	ldr	r3, [r0, #0]
 8008048:	68da      	ldr	r2, [r3, #12]
 800804a:	f042 0201 	orr.w	r2, r2, #1
 800804e:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8008050:	689a      	ldr	r2, [r3, #8]
 8008052:	f002 0207 	and.w	r2, r2, #7
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8008056:	2a06      	cmp	r2, #6
  {
    __HAL_TIM_ENABLE(htim);
 8008058:	bf1e      	ittt	ne
 800805a:	681a      	ldrne	r2, [r3, #0]
 800805c:	f042 0201 	orrne.w	r2, r2, #1
 8008060:	601a      	strne	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
}
 8008062:	2000      	movs	r0, #0
 8008064:	4770      	bx	lr

08008066 <HAL_TIM_OC_DelayElapsedCallback>:
 8008066:	4770      	bx	lr

08008068 <HAL_TIM_IC_CaptureCallback>:
 8008068:	4770      	bx	lr

0800806a <HAL_TIM_PWM_PulseFinishedCallback>:
 800806a:	4770      	bx	lr

0800806c <HAL_TIM_TriggerCallback>:
 800806c:	4770      	bx	lr

0800806e <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800806e:	6803      	ldr	r3, [r0, #0]
 8008070:	691a      	ldr	r2, [r3, #16]
 8008072:	0791      	lsls	r1, r2, #30
{
 8008074:	b510      	push	{r4, lr}
 8008076:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8008078:	d50e      	bpl.n	8008098 <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800807a:	68da      	ldr	r2, [r3, #12]
 800807c:	0792      	lsls	r2, r2, #30
 800807e:	d50b      	bpl.n	8008098 <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8008080:	f06f 0202 	mvn.w	r2, #2
 8008084:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8008086:	2201      	movs	r2, #1
 8008088:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800808a:	699b      	ldr	r3, [r3, #24]
 800808c:	079b      	lsls	r3, r3, #30
 800808e:	d077      	beq.n	8008180 <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 8008090:	f7ff ffea 	bl	8008068 <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8008094:	2300      	movs	r3, #0
 8008096:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8008098:	6823      	ldr	r3, [r4, #0]
 800809a:	691a      	ldr	r2, [r3, #16]
 800809c:	0750      	lsls	r0, r2, #29
 800809e:	d510      	bpl.n	80080c2 <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 80080a0:	68da      	ldr	r2, [r3, #12]
 80080a2:	0751      	lsls	r1, r2, #29
 80080a4:	d50d      	bpl.n	80080c2 <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 80080a6:	f06f 0204 	mvn.w	r2, #4
 80080aa:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80080ac:	2202      	movs	r2, #2
 80080ae:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80080b0:	699b      	ldr	r3, [r3, #24]
 80080b2:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80080b6:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80080b8:	d068      	beq.n	800818c <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 80080ba:	f7ff ffd5 	bl	8008068 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80080be:	2300      	movs	r3, #0
 80080c0:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 80080c2:	6823      	ldr	r3, [r4, #0]
 80080c4:	691a      	ldr	r2, [r3, #16]
 80080c6:	0712      	lsls	r2, r2, #28
 80080c8:	d50f      	bpl.n	80080ea <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 80080ca:	68da      	ldr	r2, [r3, #12]
 80080cc:	0710      	lsls	r0, r2, #28
 80080ce:	d50c      	bpl.n	80080ea <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80080d0:	f06f 0208 	mvn.w	r2, #8
 80080d4:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80080d6:	2204      	movs	r2, #4
 80080d8:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80080da:	69db      	ldr	r3, [r3, #28]
 80080dc:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80080de:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80080e0:	d05a      	beq.n	8008198 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 80080e2:	f7ff ffc1 	bl	8008068 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80080e6:	2300      	movs	r3, #0
 80080e8:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 80080ea:	6823      	ldr	r3, [r4, #0]
 80080ec:	691a      	ldr	r2, [r3, #16]
 80080ee:	06d2      	lsls	r2, r2, #27
 80080f0:	d510      	bpl.n	8008114 <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 80080f2:	68da      	ldr	r2, [r3, #12]
 80080f4:	06d0      	lsls	r0, r2, #27
 80080f6:	d50d      	bpl.n	8008114 <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 80080f8:	f06f 0210 	mvn.w	r2, #16
 80080fc:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80080fe:	2208      	movs	r2, #8
 8008100:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8008102:	69db      	ldr	r3, [r3, #28]
 8008104:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8008108:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800810a:	d04b      	beq.n	80081a4 <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 800810c:	f7ff ffac 	bl	8008068 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8008110:	2300      	movs	r3, #0
 8008112:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8008114:	6823      	ldr	r3, [r4, #0]
 8008116:	691a      	ldr	r2, [r3, #16]
 8008118:	07d1      	lsls	r1, r2, #31
 800811a:	d508      	bpl.n	800812e <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800811c:	68da      	ldr	r2, [r3, #12]
 800811e:	07d2      	lsls	r2, r2, #31
 8008120:	d505      	bpl.n	800812e <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8008122:	f06f 0201 	mvn.w	r2, #1
 8008126:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 8008128:	4620      	mov	r0, r4
 800812a:	f7f9 fcbd 	bl	8001aa8 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800812e:	6823      	ldr	r3, [r4, #0]
 8008130:	691a      	ldr	r2, [r3, #16]
 8008132:	0610      	lsls	r0, r2, #24
 8008134:	d508      	bpl.n	8008148 <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8008136:	68da      	ldr	r2, [r3, #12]
 8008138:	0611      	lsls	r1, r2, #24
 800813a:	d505      	bpl.n	8008148 <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800813c:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8008140:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 8008142:	4620      	mov	r0, r4
 8008144:	f000 f8f5 	bl	8008332 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8008148:	6823      	ldr	r3, [r4, #0]
 800814a:	691a      	ldr	r2, [r3, #16]
 800814c:	0652      	lsls	r2, r2, #25
 800814e:	d508      	bpl.n	8008162 <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8008150:	68da      	ldr	r2, [r3, #12]
 8008152:	0650      	lsls	r0, r2, #25
 8008154:	d505      	bpl.n	8008162 <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8008156:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800815a:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 800815c:	4620      	mov	r0, r4
 800815e:	f7ff ff85 	bl	800806c <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8008162:	6823      	ldr	r3, [r4, #0]
 8008164:	691a      	ldr	r2, [r3, #16]
 8008166:	0691      	lsls	r1, r2, #26
 8008168:	d522      	bpl.n	80081b0 <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800816a:	68da      	ldr	r2, [r3, #12]
 800816c:	0692      	lsls	r2, r2, #26
 800816e:	d51f      	bpl.n	80081b0 <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8008170:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 8008174:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8008176:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8008178:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800817c:	f000 b8d8 	b.w	8008330 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8008180:	f7ff ff71 	bl	8008066 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8008184:	4620      	mov	r0, r4
 8008186:	f7ff ff70 	bl	800806a <HAL_TIM_PWM_PulseFinishedCallback>
 800818a:	e783      	b.n	8008094 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800818c:	f7ff ff6b 	bl	8008066 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8008190:	4620      	mov	r0, r4
 8008192:	f7ff ff6a 	bl	800806a <HAL_TIM_PWM_PulseFinishedCallback>
 8008196:	e792      	b.n	80080be <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8008198:	f7ff ff65 	bl	8008066 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800819c:	4620      	mov	r0, r4
 800819e:	f7ff ff64 	bl	800806a <HAL_TIM_PWM_PulseFinishedCallback>
 80081a2:	e7a0      	b.n	80080e6 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80081a4:	f7ff ff5f 	bl	8008066 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80081a8:	4620      	mov	r0, r4
 80081aa:	f7ff ff5e 	bl	800806a <HAL_TIM_PWM_PulseFinishedCallback>
 80081ae:	e7af      	b.n	8008110 <HAL_TIM_IRQHandler+0xa2>
}
 80081b0:	bd10      	pop	{r4, pc}
	...

080081b4 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80081b4:	4a30      	ldr	r2, [pc, #192]	; (8008278 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 80081b6:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80081b8:	4290      	cmp	r0, r2
 80081ba:	d012      	beq.n	80081e2 <TIM_Base_SetConfig+0x2e>
 80081bc:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80081c0:	d00f      	beq.n	80081e2 <TIM_Base_SetConfig+0x2e>
 80081c2:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80081c6:	4290      	cmp	r0, r2
 80081c8:	d00b      	beq.n	80081e2 <TIM_Base_SetConfig+0x2e>
 80081ca:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80081ce:	4290      	cmp	r0, r2
 80081d0:	d007      	beq.n	80081e2 <TIM_Base_SetConfig+0x2e>
 80081d2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80081d6:	4290      	cmp	r0, r2
 80081d8:	d003      	beq.n	80081e2 <TIM_Base_SetConfig+0x2e>
 80081da:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80081de:	4290      	cmp	r0, r2
 80081e0:	d119      	bne.n	8008216 <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 80081e2:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80081e4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 80081e8:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80081ea:	4a23      	ldr	r2, [pc, #140]	; (8008278 <TIM_Base_SetConfig+0xc4>)
 80081ec:	4290      	cmp	r0, r2
 80081ee:	d029      	beq.n	8008244 <TIM_Base_SetConfig+0x90>
 80081f0:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80081f4:	d026      	beq.n	8008244 <TIM_Base_SetConfig+0x90>
 80081f6:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80081fa:	4290      	cmp	r0, r2
 80081fc:	d022      	beq.n	8008244 <TIM_Base_SetConfig+0x90>
 80081fe:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008202:	4290      	cmp	r0, r2
 8008204:	d01e      	beq.n	8008244 <TIM_Base_SetConfig+0x90>
 8008206:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800820a:	4290      	cmp	r0, r2
 800820c:	d01a      	beq.n	8008244 <TIM_Base_SetConfig+0x90>
 800820e:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8008212:	4290      	cmp	r0, r2
 8008214:	d016      	beq.n	8008244 <TIM_Base_SetConfig+0x90>
 8008216:	4a19      	ldr	r2, [pc, #100]	; (800827c <TIM_Base_SetConfig+0xc8>)
 8008218:	4290      	cmp	r0, r2
 800821a:	d013      	beq.n	8008244 <TIM_Base_SetConfig+0x90>
 800821c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008220:	4290      	cmp	r0, r2
 8008222:	d00f      	beq.n	8008244 <TIM_Base_SetConfig+0x90>
 8008224:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008228:	4290      	cmp	r0, r2
 800822a:	d00b      	beq.n	8008244 <TIM_Base_SetConfig+0x90>
 800822c:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 8008230:	4290      	cmp	r0, r2
 8008232:	d007      	beq.n	8008244 <TIM_Base_SetConfig+0x90>
 8008234:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008238:	4290      	cmp	r0, r2
 800823a:	d003      	beq.n	8008244 <TIM_Base_SetConfig+0x90>
 800823c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008240:	4290      	cmp	r0, r2
 8008242:	d103      	bne.n	800824c <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8008244:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8008246:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800824a:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800824c:	694a      	ldr	r2, [r1, #20]
 800824e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8008252:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8008254:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8008256:	688b      	ldr	r3, [r1, #8]
 8008258:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800825a:	680b      	ldr	r3, [r1, #0]
 800825c:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800825e:	4b06      	ldr	r3, [pc, #24]	; (8008278 <TIM_Base_SetConfig+0xc4>)
 8008260:	4298      	cmp	r0, r3
 8008262:	d003      	beq.n	800826c <TIM_Base_SetConfig+0xb8>
 8008264:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8008268:	4298      	cmp	r0, r3
 800826a:	d101      	bne.n	8008270 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 800826c:	690b      	ldr	r3, [r1, #16]
 800826e:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8008270:	2301      	movs	r3, #1
 8008272:	6143      	str	r3, [r0, #20]
}
 8008274:	4770      	bx	lr
 8008276:	bf00      	nop
 8008278:	40010000 	.word	0x40010000
 800827c:	40014000 	.word	0x40014000

08008280 <HAL_TIM_Base_Init>:
{
 8008280:	b510      	push	{r4, lr}
  if (htim == NULL)
 8008282:	4604      	mov	r4, r0
 8008284:	b1a0      	cbz	r0, 80082b0 <HAL_TIM_Base_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 8008286:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800828a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800828e:	b91b      	cbnz	r3, 8008298 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8008290:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 8008294:	f7f9 fe54 	bl	8001f40 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8008298:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800829a:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800829c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80082a0:	1d21      	adds	r1, r4, #4
 80082a2:	f7ff ff87 	bl	80081b4 <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 80082a6:	2301      	movs	r3, #1
 80082a8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 80082ac:	2000      	movs	r0, #0
}
 80082ae:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80082b0:	2001      	movs	r0, #1
 80082b2:	e7fc      	b.n	80082ae <HAL_TIM_Base_Init+0x2e>

080082b4 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        TIM_MasterConfigTypeDef *sMasterConfig)
{
 80082b4:	b530      	push	{r4, r5, lr}
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 80082b6:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 80082ba:	2b01      	cmp	r3, #1
 80082bc:	f04f 0302 	mov.w	r3, #2
 80082c0:	d032      	beq.n	8008328 <HAL_TIMEx_MasterConfigSynchronization+0x74>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 80082c2:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 80082c6:	6803      	ldr	r3, [r0, #0]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 80082c8:	680d      	ldr	r5, [r1, #0]
  tmpcr2 = htim->Instance->CR2;
 80082ca:	685c      	ldr	r4, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;
 80082cc:	689a      	ldr	r2, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 80082ce:	f024 0470 	bic.w	r4, r4, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 80082d2:	432c      	orrs	r4, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 80082d4:	605c      	str	r4, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80082d6:	4c15      	ldr	r4, [pc, #84]	; (800832c <HAL_TIMEx_MasterConfigSynchronization+0x78>)
 80082d8:	42a3      	cmp	r3, r4
 80082da:	d01a      	beq.n	8008312 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 80082dc:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80082e0:	d017      	beq.n	8008312 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 80082e2:	f5a4 447c 	sub.w	r4, r4, #64512	; 0xfc00
 80082e6:	42a3      	cmp	r3, r4
 80082e8:	d013      	beq.n	8008312 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 80082ea:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80082ee:	42a3      	cmp	r3, r4
 80082f0:	d00f      	beq.n	8008312 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 80082f2:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80082f6:	42a3      	cmp	r3, r4
 80082f8:	d00b      	beq.n	8008312 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 80082fa:	f504 4478 	add.w	r4, r4, #63488	; 0xf800
 80082fe:	42a3      	cmp	r3, r4
 8008300:	d007      	beq.n	8008312 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008302:	f504 5470 	add.w	r4, r4, #15360	; 0x3c00
 8008306:	42a3      	cmp	r3, r4
 8008308:	d003      	beq.n	8008312 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800830a:	f5a4 3494 	sub.w	r4, r4, #75776	; 0x12800
 800830e:	42a3      	cmp	r3, r4
 8008310:	d104      	bne.n	800831c <HAL_TIMEx_MasterConfigSynchronization+0x68>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8008312:	6849      	ldr	r1, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 8008314:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8008318:	430a      	orrs	r2, r1

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800831a:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 800831c:	2301      	movs	r3, #1
 800831e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8008322:	2300      	movs	r3, #0
 8008324:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  __HAL_LOCK(htim);
 8008328:	4618      	mov	r0, r3

  return HAL_OK;
}
 800832a:	bd30      	pop	{r4, r5, pc}
 800832c:	40010000 	.word	0x40010000

08008330 <HAL_TIMEx_CommutCallback>:
 8008330:	4770      	bx	lr

08008332 <HAL_TIMEx_BreakCallback>:
 8008332:	4770      	bx	lr

08008334 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8008334:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
                                               Init->InternalBankNumber |\
                                               Init->CASLatency         |\
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
 8008338:	6a4a      	ldr	r2, [r1, #36]	; 0x24
                                               Init->ReadBurst          |\
 800833a:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
                                               Init->RowBitsNumber      |\
 800833e:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
                                               Init->InternalBankNumber |\
 8008342:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
                                               Init->WriteProtection    |\
 8008346:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 800834a:	6809      	ldr	r1, [r1, #0]
 800834c:	2901      	cmp	r1, #1
 800834e:	ea43 0304 	orr.w	r3, r3, r4
 8008352:	4912      	ldr	r1, [pc, #72]	; (800839c <FMC_SDRAM_Init+0x68>)
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 8008354:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8008356:	d00f      	beq.n	8008378 <FMC_SDRAM_Init+0x44>
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8008358:	431a      	orrs	r2, r3
 800835a:	432a      	orrs	r2, r5
 800835c:	ea42 0308 	orr.w	r3, r2, r8
 8008360:	ea43 030e 	orr.w	r3, r3, lr
 8008364:	ea43 030c 	orr.w	r3, r3, ip
 8008368:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 800836a:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800836c:	4333      	orrs	r3, r6
 800836e:	430b      	orrs	r3, r1
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8008370:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 8008372:	2000      	movs	r0, #0
 8008374:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8008378:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 800837a:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 800837c:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800837e:	ea45 0208 	orr.w	r2, r5, r8
 8008382:	ea42 020e 	orr.w	r2, r2, lr
 8008386:	ea42 020c 	orr.w	r2, r2, ip
 800838a:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 800838c:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8008390:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8008392:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8008394:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8008396:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 8008398:	6042      	str	r2, [r0, #4]
 800839a:	e7ea      	b.n	8008372 <FMC_SDRAM_Init+0x3e>
 800839c:	ffff8000 	.word	0xffff8000

080083a0 <FMC_SDRAM_Timing_Init>:
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 80083a0:	68cb      	ldr	r3, [r1, #12]
{
 80083a2:	b5f0      	push	{r4, r5, r6, r7, lr}
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80083a4:	680c      	ldr	r4, [r1, #0]
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 80083a6:	688e      	ldr	r6, [r1, #8]
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 80083a8:	690d      	ldr	r5, [r1, #16]
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 80083aa:	1e5f      	subs	r7, r3, #1
                       (((Timing->RPDelay)-1U) << 20U)             |\
 80083ac:	694b      	ldr	r3, [r1, #20]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80083ae:	f104 3cff 	add.w	ip, r4, #4294967295
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 80083b2:	684c      	ldr	r4, [r1, #4]
                       (((Timing->RCDDelay)-1U) << 24U));
 80083b4:	6989      	ldr	r1, [r1, #24]
                       (((Timing->RPDelay)-1U) << 20U)             |\
 80083b6:	3b01      	subs	r3, #1
 80083b8:	051b      	lsls	r3, r3, #20
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 80083ba:	3c01      	subs	r4, #1
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 80083bc:	3e01      	subs	r6, #1
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 80083be:	3d01      	subs	r5, #1
                       (((Timing->RCDDelay)-1U) << 24U));
 80083c0:	3901      	subs	r1, #1
  if (Bank != FMC_SDRAM_BANK2) 
 80083c2:	2a01      	cmp	r2, #1
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 80083c4:	ea4f 1404 	mov.w	r4, r4, lsl #4
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 80083c8:	ea4f 2606 	mov.w	r6, r6, lsl #8
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 80083cc:	ea4f 4505 	mov.w	r5, r5, lsl #16
                       (((Timing->RCDDelay)-1U) << 24U));
 80083d0:	ea4f 6101 	mov.w	r1, r1, lsl #24
 80083d4:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
  if (Bank != FMC_SDRAM_BANK2) 
 80083d8:	d00c      	beq.n	80083f4 <FMC_SDRAM_Timing_Init+0x54>
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80083da:	ea43 030c 	orr.w	r3, r3, ip
 80083de:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 80083e0:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80083e2:	4333      	orrs	r3, r6
 80083e4:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 80083e6:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80083ea:	430b      	orrs	r3, r1
 80083ec:	4313      	orrs	r3, r2
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 80083ee:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 80083f0:	2000      	movs	r0, #0
 80083f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 80083f4:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 80083f6:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 80083fa:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 80083fe:	4334      	orrs	r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 8008400:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8008402:	ea44 020c 	orr.w	r2, r4, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 8008406:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8008408:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800840a:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 800840c:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8008410:	430a      	orrs	r2, r1
 8008412:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 8008414:	60c2      	str	r2, [r0, #12]
 8008416:	e7eb      	b.n	80083f0 <FMC_SDRAM_Timing_Init+0x50>

08008418 <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8008418:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 800841a:	2300      	movs	r3, #0
 800841c:	9301      	str	r3, [sp, #4]
{
 800841e:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8008420:	e9d1 3200 	ldrd	r3, r2, [r1]
 8008424:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 8008426:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8008428:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 800842c:	688a      	ldr	r2, [r1, #8]
 800842e:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8008430:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8008434:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 8008436:	9b01      	ldr	r3, [sp, #4]
 8008438:	6103      	str	r3, [r0, #16]
{
 800843a:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 800843c:	f7fd fc46 	bl	8005ccc <HAL_GetTick>
 8008440:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8008442:	69a3      	ldr	r3, [r4, #24]
 8008444:	f013 0320 	ands.w	r3, r3, #32
 8008448:	d101      	bne.n	800844e <FMC_SDRAM_SendCommand+0x36>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 800844a:	4618      	mov	r0, r3
 800844c:	e003      	b.n	8008456 <FMC_SDRAM_SendCommand+0x3e>
    if(Timeout != HAL_MAX_DELAY)
 800844e:	1c6b      	adds	r3, r5, #1
 8008450:	d0f7      	beq.n	8008442 <FMC_SDRAM_SendCommand+0x2a>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8008452:	b915      	cbnz	r5, 800845a <FMC_SDRAM_SendCommand+0x42>
        return HAL_TIMEOUT;
 8008454:	2003      	movs	r0, #3
}
 8008456:	b002      	add	sp, #8
 8008458:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800845a:	f7fd fc37 	bl	8005ccc <HAL_GetTick>
 800845e:	1b80      	subs	r0, r0, r6
 8008460:	42a8      	cmp	r0, r5
 8008462:	d9ee      	bls.n	8008442 <FMC_SDRAM_SendCommand+0x2a>
 8008464:	e7f6      	b.n	8008454 <FMC_SDRAM_SendCommand+0x3c>

08008466 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 8008466:	6943      	ldr	r3, [r0, #20]
 8008468:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 800846c:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 800846e:	2000      	movs	r0, #0
 8008470:	4770      	bx	lr
	...

08008474 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008474:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8008478:	b113      	cbz	r3, 8008480 <osKernelInitialize+0xc>
    stat = osErrorISR;
 800847a:	f06f 0005 	mvn.w	r0, #5
 800847e:	4770      	bx	lr
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008480:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 8008484:	4b07      	ldr	r3, [pc, #28]	; (80084a4 <osKernelInitialize+0x30>)
  if (IS_IRQ()) {
 8008486:	b912      	cbnz	r2, 800848e <osKernelInitialize+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008488:	f3ef 8211 	mrs	r2, BASEPRI
 800848c:	b112      	cbz	r2, 8008494 <osKernelInitialize+0x20>
 800848e:	681a      	ldr	r2, [r3, #0]
 8008490:	2a02      	cmp	r2, #2
 8008492:	d0f2      	beq.n	800847a <osKernelInitialize+0x6>
  }
  else {
    if (KernelState == osKernelInactive) {
 8008494:	6818      	ldr	r0, [r3, #0]
 8008496:	b910      	cbnz	r0, 800849e <osKernelInitialize+0x2a>
      #if defined(USE_FREERTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8008498:	2201      	movs	r2, #1
 800849a:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800849c:	4770      	bx	lr
    } else {
      stat = osError;
 800849e:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 80084a2:	4770      	bx	lr
 80084a4:	20004a54 	.word	0x20004a54

080084a8 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 80084a8:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80084aa:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 80084ae:	b113      	cbz	r3, 80084b6 <osKernelStart+0xe>
    stat = osErrorISR;
 80084b0:	f06f 0005 	mvn.w	r0, #5
      stat = osError;
    }
  }

  return (stat);
}
 80084b4:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80084b6:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 80084ba:	4b0a      	ldr	r3, [pc, #40]	; (80084e4 <osKernelStart+0x3c>)
  if (IS_IRQ()) {
 80084bc:	b912      	cbnz	r2, 80084c4 <osKernelStart+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80084be:	f3ef 8211 	mrs	r2, BASEPRI
 80084c2:	b112      	cbz	r2, 80084ca <osKernelStart+0x22>
 80084c4:	681a      	ldr	r2, [r3, #0]
 80084c6:	2a02      	cmp	r2, #2
 80084c8:	d0f2      	beq.n	80084b0 <osKernelStart+0x8>
    if (KernelState == osKernelReady) {
 80084ca:	681a      	ldr	r2, [r3, #0]
 80084cc:	2a01      	cmp	r2, #1
 80084ce:	d105      	bne.n	80084dc <osKernelStart+0x34>
      KernelState = osKernelRunning;
 80084d0:	2202      	movs	r2, #2
 80084d2:	601a      	str	r2, [r3, #0]
      vTaskStartScheduler();
 80084d4:	f001 fbd6 	bl	8009c84 <vTaskStartScheduler>
      stat = osOK;
 80084d8:	2000      	movs	r0, #0
 80084da:	e7eb      	b.n	80084b4 <osKernelStart+0xc>
      stat = osError;
 80084dc:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 80084e0:	e7e8      	b.n	80084b4 <osKernelStart+0xc>
 80084e2:	bf00      	nop
 80084e4:	20004a54 	.word	0x20004a54

080084e8 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80084e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80084ea:	b087      	sub	sp, #28
 80084ec:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 80084ee:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80084f0:	460b      	mov	r3, r1
  hTask = NULL;
 80084f2:	9205      	str	r2, [sp, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80084f4:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 80084f8:	bb22      	cbnz	r2, 8008544 <osThreadNew+0x5c>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80084fa:	f3ef 8210 	mrs	r2, PRIMASK
 80084fe:	b912      	cbnz	r2, 8008506 <osThreadNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008500:	f3ef 8211 	mrs	r2, BASEPRI
 8008504:	b11a      	cbz	r2, 800850e <osThreadNew+0x26>
 8008506:	4a22      	ldr	r2, [pc, #136]	; (8008590 <osThreadNew+0xa8>)
 8008508:	6812      	ldr	r2, [r2, #0]
 800850a:	2a02      	cmp	r2, #2
 800850c:	d01a      	beq.n	8008544 <osThreadNew+0x5c>
 800850e:	b1c8      	cbz	r0, 8008544 <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8008510:	2c00      	cmp	r4, #0
 8008512:	d02f      	beq.n	8008574 <osThreadNew+0x8c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8008514:	69a5      	ldr	r5, [r4, #24]
 8008516:	2d00      	cmp	r5, #0
 8008518:	bf08      	it	eq
 800851a:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800851c:	1e6a      	subs	r2, r5, #1
 800851e:	2a37      	cmp	r2, #55	; 0x37
 8008520:	46ac      	mov	ip, r5
 8008522:	d82b      	bhi.n	800857c <osThreadNew+0x94>
 8008524:	6862      	ldr	r2, [r4, #4]
 8008526:	07d2      	lsls	r2, r2, #31
 8008528:	d428      	bmi.n	800857c <osThreadNew+0x94>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800852a:	6966      	ldr	r6, [r4, #20]
 800852c:	b16e      	cbz	r6, 800854a <osThreadNew+0x62>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800852e:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008530:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 8008534:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008536:	b157      	cbz	r7, 800854e <osThreadNew+0x66>
 8008538:	f1be 0fbf 	cmp.w	lr, #191	; 0xbf
 800853c:	d902      	bls.n	8008544 <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800853e:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008540:	b104      	cbz	r4, 8008544 <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8008542:	b9ee      	cbnz	r6, 8008580 <osThreadNew+0x98>
        }
      }
    }
  }

  return ((osThreadId_t)hTask);
 8008544:	9805      	ldr	r0, [sp, #20]
}
 8008546:	b007      	add	sp, #28
 8008548:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 800854a:	2280      	movs	r2, #128	; 0x80
 800854c:	e7f0      	b.n	8008530 <osThreadNew+0x48>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800854e:	f1be 0f00 	cmp.w	lr, #0
 8008552:	d1f7      	bne.n	8008544 <osThreadNew+0x5c>
      if (mem == 0) {
 8008554:	6924      	ldr	r4, [r4, #16]
 8008556:	2c00      	cmp	r4, #0
 8008558:	d1f4      	bne.n	8008544 <osThreadNew+0x5c>
 800855a:	460c      	mov	r4, r1
        if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800855c:	a905      	add	r1, sp, #20
 800855e:	e9cd c100 	strd	ip, r1, [sp]
 8008562:	b292      	uxth	r2, r2
 8008564:	4621      	mov	r1, r4
 8008566:	f001 fb5f 	bl	8009c28 <xTaskCreate>
 800856a:	2801      	cmp	r0, #1
          hTask = NULL;
 800856c:	bf1c      	itt	ne
 800856e:	2300      	movne	r3, #0
 8008570:	9305      	strne	r3, [sp, #20]
 8008572:	e7e7      	b.n	8008544 <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;
 8008574:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 8008578:	2280      	movs	r2, #128	; 0x80
 800857a:	e7ef      	b.n	800855c <osThreadNew+0x74>
        return (NULL);
 800857c:	2000      	movs	r0, #0
 800857e:	e7e2      	b.n	8008546 <osThreadNew+0x5e>
      hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8008580:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8008584:	9500      	str	r5, [sp, #0]
 8008586:	f001 fb17 	bl	8009bb8 <xTaskCreateStatic>
 800858a:	9005      	str	r0, [sp, #20]
 800858c:	e7da      	b.n	8008544 <osThreadNew+0x5c>
 800858e:	bf00      	nop
 8008590:	20004a54 	.word	0x20004a54

08008594 <osDelay>:

  /* Return flags before clearing */
  return (rflags);
}

osStatus_t osDelay (uint32_t ticks) {
 8008594:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008596:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800859a:	b113      	cbz	r3, 80085a2 <osDelay+0xe>
    stat = osErrorISR;
 800859c:	f06f 0005 	mvn.w	r0, #5
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 80085a0:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80085a2:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 80085a6:	b913      	cbnz	r3, 80085ae <osDelay+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80085a8:	f3ef 8311 	mrs	r3, BASEPRI
 80085ac:	b11b      	cbz	r3, 80085b6 <osDelay+0x22>
 80085ae:	4b05      	ldr	r3, [pc, #20]	; (80085c4 <osDelay+0x30>)
 80085b0:	681b      	ldr	r3, [r3, #0]
 80085b2:	2b02      	cmp	r3, #2
 80085b4:	d0f2      	beq.n	800859c <osDelay+0x8>
    if (ticks != 0U) {
 80085b6:	2800      	cmp	r0, #0
 80085b8:	d0f2      	beq.n	80085a0 <osDelay+0xc>
      vTaskDelay(ticks);
 80085ba:	f001 fccb 	bl	8009f54 <vTaskDelay>
    stat = osOK;
 80085be:	2000      	movs	r0, #0
 80085c0:	e7ee      	b.n	80085a0 <osDelay+0xc>
 80085c2:	bf00      	nop
 80085c4:	20004a54 	.word	0x20004a54

080085c8 <osSemaphoreNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 80085c8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80085ca:	460e      	mov	r6, r1
 80085cc:	4615      	mov	r5, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80085ce:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 80085d2:	b11b      	cbz	r3, 80085dc <osSemaphoreNew+0x14>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 80085d4:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 80085d6:	4620      	mov	r0, r4
 80085d8:	b002      	add	sp, #8
 80085da:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80085dc:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 80085e0:	b913      	cbnz	r3, 80085e8 <osSemaphoreNew+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80085e2:	f3ef 8311 	mrs	r3, BASEPRI
 80085e6:	b11b      	cbz	r3, 80085f0 <osSemaphoreNew+0x28>
 80085e8:	4b21      	ldr	r3, [pc, #132]	; (8008670 <osSemaphoreNew+0xa8>)
 80085ea:	681b      	ldr	r3, [r3, #0]
 80085ec:	2b02      	cmp	r3, #2
 80085ee:	d0f1      	beq.n	80085d4 <osSemaphoreNew+0xc>
 80085f0:	2800      	cmp	r0, #0
 80085f2:	d0ef      	beq.n	80085d4 <osSemaphoreNew+0xc>
 80085f4:	42b0      	cmp	r0, r6
 80085f6:	d3ed      	bcc.n	80085d4 <osSemaphoreNew+0xc>
    if (attr != NULL) {
 80085f8:	b1ed      	cbz	r5, 8008636 <osSemaphoreNew+0x6e>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 80085fa:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
 80085fe:	b1c3      	cbz	r3, 8008632 <osSemaphoreNew+0x6a>
 8008600:	2a4f      	cmp	r2, #79	; 0x4f
 8008602:	d9e7      	bls.n	80085d4 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8008604:	2801      	cmp	r0, #1
 8008606:	d129      	bne.n	800865c <osSemaphoreNew+0x94>
          hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8008608:	2203      	movs	r2, #3
 800860a:	9200      	str	r2, [sp, #0]
 800860c:	2200      	movs	r2, #0
 800860e:	4611      	mov	r1, r2
 8008610:	f000 fd29 	bl	8009066 <xQueueGenericCreateStatic>
          hSemaphore = xSemaphoreCreateBinary();
 8008614:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8008616:	2800      	cmp	r0, #0
 8008618:	d0dc      	beq.n	80085d4 <osSemaphoreNew+0xc>
 800861a:	b1ce      	cbz	r6, 8008650 <osSemaphoreNew+0x88>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800861c:	2300      	movs	r3, #0
 800861e:	461a      	mov	r2, r3
 8008620:	4619      	mov	r1, r3
 8008622:	f000 fdd5 	bl	80091d0 <xQueueGenericSend>
 8008626:	2801      	cmp	r0, #1
 8008628:	d012      	beq.n	8008650 <osSemaphoreNew+0x88>
            vSemaphoreDelete (hSemaphore);
 800862a:	4620      	mov	r0, r4
 800862c:	f001 f910 	bl	8009850 <vQueueDelete>
 8008630:	e7d0      	b.n	80085d4 <osSemaphoreNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8008632:	2a00      	cmp	r2, #0
 8008634:	d1ce      	bne.n	80085d4 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8008636:	2801      	cmp	r0, #1
 8008638:	d104      	bne.n	8008644 <osSemaphoreNew+0x7c>
          hSemaphore = xSemaphoreCreateBinary();
 800863a:	2203      	movs	r2, #3
 800863c:	2100      	movs	r1, #0
 800863e:	f000 fd60 	bl	8009102 <xQueueGenericCreate>
 8008642:	e7e7      	b.n	8008614 <osSemaphoreNew+0x4c>
          hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8008644:	4631      	mov	r1, r6
 8008646:	f000 fda5 	bl	8009194 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800864a:	4604      	mov	r4, r0
 800864c:	2800      	cmp	r0, #0
 800864e:	d0c1      	beq.n	80085d4 <osSemaphoreNew+0xc>
        if (attr != NULL) {
 8008650:	b95d      	cbnz	r5, 800866a <osSemaphoreNew+0xa2>
        vQueueAddToRegistry (hSemaphore, name);
 8008652:	4629      	mov	r1, r5
 8008654:	4620      	mov	r0, r4
 8008656:	f001 f8d5 	bl	8009804 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 800865a:	e7bc      	b.n	80085d6 <osSemaphoreNew+0xe>
          hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800865c:	461a      	mov	r2, r3
 800865e:	4631      	mov	r1, r6
 8008660:	f000 fd76 	bl	8009150 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8008664:	4604      	mov	r4, r0
 8008666:	2800      	cmp	r0, #0
 8008668:	d0b4      	beq.n	80085d4 <osSemaphoreNew+0xc>
          name = attr->name;
 800866a:	682d      	ldr	r5, [r5, #0]
 800866c:	e7f1      	b.n	8008652 <osSemaphoreNew+0x8a>
 800866e:	bf00      	nop
 8008670:	20004a54 	.word	0x20004a54

08008674 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8008674:	b513      	push	{r0, r1, r4, lr}
 8008676:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8008678:	b918      	cbnz	r0, 8008682 <osSemaphoreAcquire+0xe>
    stat = osErrorParameter;
 800867a:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 800867e:	b002      	add	sp, #8
 8008680:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008682:	f3ef 8305 	mrs	r3, IPSR
  else if (IS_IRQ()) {
 8008686:	b163      	cbz	r3, 80086a2 <osSemaphoreAcquire+0x2e>
    if (timeout != 0U) {
 8008688:	2c00      	cmp	r4, #0
 800868a:	d1f6      	bne.n	800867a <osSemaphoreAcquire+0x6>
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800868c:	aa01      	add	r2, sp, #4
 800868e:	4621      	mov	r1, r4
      yield = pdFALSE;
 8008690:	9401      	str	r4, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8008692:	f001 f867 	bl	8009764 <xQueueReceiveFromISR>
 8008696:	2801      	cmp	r0, #1
 8008698:	d113      	bne.n	80086c2 <osSemaphoreAcquire+0x4e>
        portYIELD_FROM_ISR (yield);
 800869a:	9b01      	ldr	r3, [sp, #4]
 800869c:	b9a3      	cbnz	r3, 80086c8 <osSemaphoreAcquire+0x54>
  stat = osOK;
 800869e:	2000      	movs	r0, #0
 80086a0:	e7ed      	b.n	800867e <osSemaphoreAcquire+0xa>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80086a2:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 80086a6:	b913      	cbnz	r3, 80086ae <osSemaphoreAcquire+0x3a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80086a8:	f3ef 8311 	mrs	r3, BASEPRI
 80086ac:	b11b      	cbz	r3, 80086b6 <osSemaphoreAcquire+0x42>
 80086ae:	4b0d      	ldr	r3, [pc, #52]	; (80086e4 <osSemaphoreAcquire+0x70>)
 80086b0:	681b      	ldr	r3, [r3, #0]
 80086b2:	2b02      	cmp	r3, #2
 80086b4:	d0e8      	beq.n	8008688 <osSemaphoreAcquire+0x14>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 80086b6:	4621      	mov	r1, r4
 80086b8:	f000 ff91 	bl	80095de <xQueueSemaphoreTake>
 80086bc:	2801      	cmp	r0, #1
 80086be:	d0ee      	beq.n	800869e <osSemaphoreAcquire+0x2a>
      if (timeout != 0U) {
 80086c0:	b96c      	cbnz	r4, 80086de <osSemaphoreAcquire+0x6a>
        stat = osErrorResource;
 80086c2:	f06f 0002 	mvn.w	r0, #2
 80086c6:	e7da      	b.n	800867e <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 80086c8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80086cc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80086d0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80086d4:	f3bf 8f4f 	dsb	sy
 80086d8:	f3bf 8f6f 	isb	sy
 80086dc:	e7df      	b.n	800869e <osSemaphoreAcquire+0x2a>
        stat = osErrorTimeout;
 80086de:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80086e2:	e7cc      	b.n	800867e <osSemaphoreAcquire+0xa>
 80086e4:	20004a54 	.word	0x20004a54

080086e8 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 80086e8:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 80086ea:	b370      	cbz	r0, 800874a <osSemaphoreRelease+0x62>
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80086ec:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 80086f0:	b14b      	cbz	r3, 8008706 <osSemaphoreRelease+0x1e>
    yield = pdFALSE;
 80086f2:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 80086f4:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 80086f6:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 80086f8:	f000 fe7e 	bl	80093f8 <xQueueGiveFromISR>
 80086fc:	2801      	cmp	r0, #1
 80086fe:	d014      	beq.n	800872a <osSemaphoreRelease+0x42>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 8008700:	f06f 0002 	mvn.w	r0, #2
 8008704:	e014      	b.n	8008730 <osSemaphoreRelease+0x48>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008706:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 800870a:	b913      	cbnz	r3, 8008712 <osSemaphoreRelease+0x2a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800870c:	f3ef 8311 	mrs	r3, BASEPRI
 8008710:	b11b      	cbz	r3, 800871a <osSemaphoreRelease+0x32>
 8008712:	4b0f      	ldr	r3, [pc, #60]	; (8008750 <osSemaphoreRelease+0x68>)
 8008714:	681b      	ldr	r3, [r3, #0]
 8008716:	2b02      	cmp	r3, #2
 8008718:	d0eb      	beq.n	80086f2 <osSemaphoreRelease+0xa>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800871a:	2300      	movs	r3, #0
 800871c:	461a      	mov	r2, r3
 800871e:	4619      	mov	r1, r3
 8008720:	f000 fd56 	bl	80091d0 <xQueueGenericSend>
 8008724:	2801      	cmp	r0, #1
 8008726:	d002      	beq.n	800872e <osSemaphoreRelease+0x46>
 8008728:	e7ea      	b.n	8008700 <osSemaphoreRelease+0x18>
      portYIELD_FROM_ISR (yield);
 800872a:	9b01      	ldr	r3, [sp, #4]
 800872c:	b913      	cbnz	r3, 8008734 <osSemaphoreRelease+0x4c>
  stat = osOK;
 800872e:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 8008730:	b002      	add	sp, #8
 8008732:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8008734:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008738:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800873c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008740:	f3bf 8f4f 	dsb	sy
 8008744:	f3bf 8f6f 	isb	sy
 8008748:	e7f1      	b.n	800872e <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800874a:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800874e:	e7ef      	b.n	8008730 <osSemaphoreRelease+0x48>
 8008750:	20004a54 	.word	0x20004a54

08008754 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8008754:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008756:	4614      	mov	r4, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008758:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800875c:	b11b      	cbz	r3, 8008766 <osMessageQueueNew+0x12>
  hQueue = NULL;
 800875e:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8008760:	4628      	mov	r0, r5
 8008762:	b002      	add	sp, #8
 8008764:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008766:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800876a:	b913      	cbnz	r3, 8008772 <osMessageQueueNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800876c:	f3ef 8311 	mrs	r3, BASEPRI
 8008770:	b11b      	cbz	r3, 800877a <osMessageQueueNew+0x26>
 8008772:	4b1a      	ldr	r3, [pc, #104]	; (80087dc <osMessageQueueNew+0x88>)
 8008774:	681b      	ldr	r3, [r3, #0]
 8008776:	2b02      	cmp	r3, #2
 8008778:	d0f1      	beq.n	800875e <osMessageQueueNew+0xa>
 800877a:	2800      	cmp	r0, #0
 800877c:	d0ef      	beq.n	800875e <osMessageQueueNew+0xa>
 800877e:	2900      	cmp	r1, #0
 8008780:	d0ed      	beq.n	800875e <osMessageQueueNew+0xa>
    if (attr != NULL) {
 8008782:	b1ec      	cbz	r4, 80087c0 <osMessageQueueNew+0x6c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8008784:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
 8008788:	b193      	cbz	r3, 80087b0 <osMessageQueueNew+0x5c>
 800878a:	2a4f      	cmp	r2, #79	; 0x4f
 800878c:	d9e7      	bls.n	800875e <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800878e:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8008790:	2a00      	cmp	r2, #0
 8008792:	d0e4      	beq.n	800875e <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8008794:	6966      	ldr	r6, [r4, #20]
 8008796:	fb01 f500 	mul.w	r5, r1, r0
 800879a:	42ae      	cmp	r6, r5
 800879c:	d3df      	bcc.n	800875e <osMessageQueueNew+0xa>
      hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800879e:	2500      	movs	r5, #0
 80087a0:	9500      	str	r5, [sp, #0]
 80087a2:	f000 fc60 	bl	8009066 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 80087a6:	4605      	mov	r5, r0
 80087a8:	2800      	cmp	r0, #0
 80087aa:	d0d8      	beq.n	800875e <osMessageQueueNew+0xa>
        name = attr->name;
 80087ac:	6824      	ldr	r4, [r4, #0]
 80087ae:	e00f      	b.n	80087d0 <osMessageQueueNew+0x7c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 80087b0:	2a00      	cmp	r2, #0
 80087b2:	d1d4      	bne.n	800875e <osMessageQueueNew+0xa>
 80087b4:	6923      	ldr	r3, [r4, #16]
 80087b6:	2b00      	cmp	r3, #0
 80087b8:	d1d1      	bne.n	800875e <osMessageQueueNew+0xa>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 80087ba:	6963      	ldr	r3, [r4, #20]
 80087bc:	2b00      	cmp	r3, #0
 80087be:	d1ce      	bne.n	800875e <osMessageQueueNew+0xa>
        hQueue = xQueueCreate (msg_count, msg_size);
 80087c0:	2200      	movs	r2, #0
 80087c2:	f000 fc9e 	bl	8009102 <xQueueGenericCreate>
    if (hQueue != NULL) {
 80087c6:	4605      	mov	r5, r0
 80087c8:	2800      	cmp	r0, #0
 80087ca:	d0c8      	beq.n	800875e <osMessageQueueNew+0xa>
      if (attr != NULL) {
 80087cc:	2c00      	cmp	r4, #0
 80087ce:	d1ed      	bne.n	80087ac <osMessageQueueNew+0x58>
      vQueueAddToRegistry (hQueue, name);
 80087d0:	4621      	mov	r1, r4
 80087d2:	4628      	mov	r0, r5
 80087d4:	f001 f816 	bl	8009804 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 80087d8:	e7c2      	b.n	8008760 <osMessageQueueNew+0xc>
 80087da:	bf00      	nop
 80087dc:	20004a54 	.word	0x20004a54

080087e0 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 80087e0:	b513      	push	{r0, r1, r4, lr}
 80087e2:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80087e4:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 80087e8:	b123      	cbz	r3, 80087f4 <osMessageQueuePut+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80087ea:	b9d8      	cbnz	r0, 8008824 <osMessageQueuePut+0x44>
      stat = osErrorParameter;
 80087ec:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 80087f0:	b002      	add	sp, #8
 80087f2:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80087f4:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 80087f8:	b913      	cbnz	r3, 8008800 <osMessageQueuePut+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80087fa:	f3ef 8311 	mrs	r3, BASEPRI
 80087fe:	b11b      	cbz	r3, 8008808 <osMessageQueuePut+0x28>
 8008800:	4b17      	ldr	r3, [pc, #92]	; (8008860 <osMessageQueuePut+0x80>)
 8008802:	681b      	ldr	r3, [r3, #0]
 8008804:	2b02      	cmp	r3, #2
 8008806:	d0f0      	beq.n	80087ea <osMessageQueuePut+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008808:	2800      	cmp	r0, #0
 800880a:	d0ef      	beq.n	80087ec <osMessageQueuePut+0xc>
 800880c:	2900      	cmp	r1, #0
 800880e:	d0ed      	beq.n	80087ec <osMessageQueuePut+0xc>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8008810:	2300      	movs	r3, #0
 8008812:	4622      	mov	r2, r4
 8008814:	f000 fcdc 	bl	80091d0 <xQueueGenericSend>
 8008818:	2801      	cmp	r0, #1
 800881a:	d010      	beq.n	800883e <osMessageQueuePut+0x5e>
        if (timeout != 0U) {
 800881c:	b9e4      	cbnz	r4, 8008858 <osMessageQueuePut+0x78>
          stat = osErrorResource;
 800881e:	f06f 0002 	mvn.w	r0, #2
 8008822:	e7e5      	b.n	80087f0 <osMessageQueuePut+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008824:	2900      	cmp	r1, #0
 8008826:	d0e1      	beq.n	80087ec <osMessageQueuePut+0xc>
 8008828:	2c00      	cmp	r4, #0
 800882a:	d1df      	bne.n	80087ec <osMessageQueuePut+0xc>
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800882c:	4623      	mov	r3, r4
 800882e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008830:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8008832:	f000 fd80 	bl	8009336 <xQueueGenericSendFromISR>
 8008836:	2801      	cmp	r0, #1
 8008838:	d1f1      	bne.n	800881e <osMessageQueuePut+0x3e>
        portYIELD_FROM_ISR (yield);
 800883a:	9b01      	ldr	r3, [sp, #4]
 800883c:	b90b      	cbnz	r3, 8008842 <osMessageQueuePut+0x62>
  stat = osOK;
 800883e:	2000      	movs	r0, #0
 8008840:	e7d6      	b.n	80087f0 <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 8008842:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008846:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800884a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800884e:	f3bf 8f4f 	dsb	sy
 8008852:	f3bf 8f6f 	isb	sy
 8008856:	e7f2      	b.n	800883e <osMessageQueuePut+0x5e>
          stat = osErrorTimeout;
 8008858:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800885c:	e7c8      	b.n	80087f0 <osMessageQueuePut+0x10>
 800885e:	bf00      	nop
 8008860:	20004a54 	.word	0x20004a54

08008864 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8008864:	b513      	push	{r0, r1, r4, lr}
 8008866:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008868:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800886c:	b123      	cbz	r3, 8008878 <osMessageQueueGet+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800886e:	b9d0      	cbnz	r0, 80088a6 <osMessageQueueGet+0x42>
      stat = osErrorParameter;
 8008870:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8008874:	b002      	add	sp, #8
 8008876:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008878:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 800887c:	b913      	cbnz	r3, 8008884 <osMessageQueueGet+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800887e:	f3ef 8311 	mrs	r3, BASEPRI
 8008882:	b11b      	cbz	r3, 800888c <osMessageQueueGet+0x28>
 8008884:	4b16      	ldr	r3, [pc, #88]	; (80088e0 <osMessageQueueGet+0x7c>)
 8008886:	681b      	ldr	r3, [r3, #0]
 8008888:	2b02      	cmp	r3, #2
 800888a:	d0f0      	beq.n	800886e <osMessageQueueGet+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800888c:	2800      	cmp	r0, #0
 800888e:	d0ef      	beq.n	8008870 <osMessageQueueGet+0xc>
 8008890:	2900      	cmp	r1, #0
 8008892:	d0ed      	beq.n	8008870 <osMessageQueueGet+0xc>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8008894:	4622      	mov	r2, r4
 8008896:	f000 fe03 	bl	80094a0 <xQueueReceive>
 800889a:	2801      	cmp	r0, #1
 800889c:	d00f      	beq.n	80088be <osMessageQueueGet+0x5a>
        if (timeout != 0U) {
 800889e:	b9dc      	cbnz	r4, 80088d8 <osMessageQueueGet+0x74>
          stat = osErrorResource;
 80088a0:	f06f 0002 	mvn.w	r0, #2
 80088a4:	e7e6      	b.n	8008874 <osMessageQueueGet+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80088a6:	2900      	cmp	r1, #0
 80088a8:	d0e2      	beq.n	8008870 <osMessageQueueGet+0xc>
 80088aa:	2c00      	cmp	r4, #0
 80088ac:	d1e0      	bne.n	8008870 <osMessageQueueGet+0xc>
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 80088ae:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80088b0:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 80088b2:	f000 ff57 	bl	8009764 <xQueueReceiveFromISR>
 80088b6:	2801      	cmp	r0, #1
 80088b8:	d1f2      	bne.n	80088a0 <osMessageQueueGet+0x3c>
        portYIELD_FROM_ISR (yield);
 80088ba:	9b01      	ldr	r3, [sp, #4]
 80088bc:	b90b      	cbnz	r3, 80088c2 <osMessageQueueGet+0x5e>
  stat = osOK;
 80088be:	2000      	movs	r0, #0
 80088c0:	e7d8      	b.n	8008874 <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 80088c2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80088c6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80088ca:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80088ce:	f3bf 8f4f 	dsb	sy
 80088d2:	f3bf 8f6f 	isb	sy
 80088d6:	e7f2      	b.n	80088be <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 80088d8:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80088dc:	e7ca      	b.n	8008874 <osMessageQueueGet+0x10>
 80088de:	bf00      	nop
 80088e0:	20004a54 	.word	0x20004a54

080088e4 <vApplicationGetIdleTaskMemory>:
/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 80088e4:	4b03      	ldr	r3, [pc, #12]	; (80088f4 <vApplicationGetIdleTaskMemory+0x10>)
 80088e6:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 80088e8:	4b03      	ldr	r3, [pc, #12]	; (80088f8 <vApplicationGetIdleTaskMemory+0x14>)
 80088ea:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 80088ec:	2380      	movs	r3, #128	; 0x80
 80088ee:	6013      	str	r3, [r2, #0]
}
 80088f0:	4770      	bx	lr
 80088f2:	bf00      	nop
 80088f4:	20004994 	.word	0x20004994
 80088f8:	20004794 	.word	0x20004794

080088fc <vApplicationGetTimerTaskMemory>:
/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 80088fc:	4b03      	ldr	r3, [pc, #12]	; (800890c <vApplicationGetTimerTaskMemory+0x10>)
 80088fe:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8008900:	4b03      	ldr	r3, [pc, #12]	; (8008910 <vApplicationGetTimerTaskMemory+0x14>)
 8008902:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8008904:	f44f 7380 	mov.w	r3, #256	; 0x100
 8008908:	6013      	str	r3, [r2, #0]
}
 800890a:	4770      	bx	lr
 800890c:	20004e58 	.word	0x20004e58
 8008910:	20004a58 	.word	0x20004a58

08008914 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 8008914:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8008916:	4b0f      	ldr	r3, [pc, #60]	; (8008954 <prvInsertBlockIntoFreeList+0x40>)
 8008918:	461a      	mov	r2, r3
 800891a:	681b      	ldr	r3, [r3, #0]
 800891c:	4283      	cmp	r3, r0
 800891e:	d3fb      	bcc.n	8008918 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8008920:	6854      	ldr	r4, [r2, #4]
 8008922:	1911      	adds	r1, r2, r4
 8008924:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8008926:	bf01      	itttt	eq
 8008928:	6841      	ldreq	r1, [r0, #4]
 800892a:	4610      	moveq	r0, r2
 800892c:	1909      	addeq	r1, r1, r4
 800892e:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8008930:	6844      	ldr	r4, [r0, #4]
 8008932:	1901      	adds	r1, r0, r4
 8008934:	428b      	cmp	r3, r1
 8008936:	d107      	bne.n	8008948 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8008938:	4907      	ldr	r1, [pc, #28]	; (8008958 <prvInsertBlockIntoFreeList+0x44>)
 800893a:	6809      	ldr	r1, [r1, #0]
 800893c:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800893e:	bf1f      	itttt	ne
 8008940:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8008942:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8008944:	1909      	addne	r1, r1, r4
 8008946:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8008948:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 800894a:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800894c:	bf18      	it	ne
 800894e:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8008950:	bd10      	pop	{r4, pc}
 8008952:	bf00      	nop
 8008954:	20014f28 	.word	0x20014f28
 8008958:	20004f18 	.word	0x20004f18

0800895c <pvPortMalloc>:
{
 800895c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008960:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8008962:	f001 f9df 	bl	8009d24 <vTaskSuspendAll>
		if( pxEnd == NULL )
 8008966:	4840      	ldr	r0, [pc, #256]	; (8008a68 <pvPortMalloc+0x10c>)
 8008968:	4d40      	ldr	r5, [pc, #256]	; (8008a6c <pvPortMalloc+0x110>)
 800896a:	6803      	ldr	r3, [r0, #0]
 800896c:	bb0b      	cbnz	r3, 80089b2 <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 800896e:	4940      	ldr	r1, [pc, #256]	; (8008a70 <pvPortMalloc+0x114>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8008970:	074e      	lsls	r6, r1, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8008972:	bf1f      	itttt	ne
 8008974:	1dcb      	addne	r3, r1, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008976:	f023 0307 	bicne.w	r3, r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800897a:	f501 3280 	addne.w	r2, r1, #65536	; 0x10000
 800897e:	1ad2      	subne	r2, r2, r3
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008980:	bf14      	ite	ne
 8008982:	4619      	movne	r1, r3
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8008984:	f44f 3280 	moveq.w	r2, #65536	; 0x10000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8008988:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800898a:	4e3a      	ldr	r6, [pc, #232]	; (8008a74 <pvPortMalloc+0x118>)
	uxAddress -= xHeapStructSize;
 800898c:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800898e:	f022 0207 	bic.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 8008992:	2300      	movs	r3, #0
 8008994:	6073      	str	r3, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8008996:	6031      	str	r1, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 8008998:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800899c:	1a53      	subs	r3, r2, r1
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800899e:	e9c1 2300 	strd	r2, r3, [r1]
	pxEnd = ( void * ) uxAddress;
 80089a2:	6002      	str	r2, [r0, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 80089a4:	4a34      	ldr	r2, [pc, #208]	; (8008a78 <pvPortMalloc+0x11c>)
 80089a6:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 80089a8:	4a34      	ldr	r2, [pc, #208]	; (8008a7c <pvPortMalloc+0x120>)
 80089aa:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 80089ac:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 80089b0:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 80089b2:	682f      	ldr	r7, [r5, #0]
 80089b4:	4227      	tst	r7, r4
 80089b6:	d151      	bne.n	8008a5c <pvPortMalloc+0x100>
			if( xWantedSize > 0 )
 80089b8:	2c00      	cmp	r4, #0
 80089ba:	d042      	beq.n	8008a42 <pvPortMalloc+0xe6>
				xWantedSize += xHeapStructSize;
 80089bc:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 80089c0:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 80089c2:	bf1c      	itt	ne
 80089c4:	f023 0307 	bicne.w	r3, r3, #7
 80089c8:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 80089ca:	2b00      	cmp	r3, #0
 80089cc:	d046      	beq.n	8008a5c <pvPortMalloc+0x100>
 80089ce:	4c2b      	ldr	r4, [pc, #172]	; (8008a7c <pvPortMalloc+0x120>)
 80089d0:	6826      	ldr	r6, [r4, #0]
 80089d2:	429e      	cmp	r6, r3
 80089d4:	d342      	bcc.n	8008a5c <pvPortMalloc+0x100>
				pxBlock = xStart.pxNextFreeBlock;
 80089d6:	4a27      	ldr	r2, [pc, #156]	; (8008a74 <pvPortMalloc+0x118>)
 80089d8:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 80089da:	6869      	ldr	r1, [r5, #4]
 80089dc:	4299      	cmp	r1, r3
 80089de:	d204      	bcs.n	80089ea <pvPortMalloc+0x8e>
 80089e0:	f8d5 c000 	ldr.w	ip, [r5]
 80089e4:	f1bc 0f00 	cmp.w	ip, #0
 80089e8:	d115      	bne.n	8008a16 <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 80089ea:	6800      	ldr	r0, [r0, #0]
 80089ec:	42a8      	cmp	r0, r5
 80089ee:	d035      	beq.n	8008a5c <pvPortMalloc+0x100>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 80089f0:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80089f2:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 80089f4:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80089f8:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 80089fa:	2910      	cmp	r1, #16
 80089fc:	d912      	bls.n	8008a24 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 80089fe:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8008a00:	0742      	lsls	r2, r0, #29
 8008a02:	d00b      	beq.n	8008a1c <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8008a04:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a08:	f383 8811 	msr	BASEPRI, r3
 8008a0c:	f3bf 8f6f 	isb	sy
 8008a10:	f3bf 8f4f 	dsb	sy
 8008a14:	e7fe      	b.n	8008a14 <pvPortMalloc+0xb8>
 8008a16:	462a      	mov	r2, r5
 8008a18:	4665      	mov	r5, ip
 8008a1a:	e7de      	b.n	80089da <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8008a1c:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8008a1e:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8008a20:	f7ff ff78 	bl	8008914 <prvInsertBlockIntoFreeList>
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008a24:	4914      	ldr	r1, [pc, #80]	; (8008a78 <pvPortMalloc+0x11c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008a26:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008a28:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008a2a:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8008a2c:	431f      	orrs	r7, r3
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008a2e:	4286      	cmp	r6, r0
					pxBlock->pxNextFreeBlock = NULL;
 8008a30:	f04f 0300 	mov.w	r3, #0
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008a34:	6026      	str	r6, [r4, #0]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8008a36:	bf38      	it	cc
 8008a38:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8008a3a:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8008a3e:	606f      	str	r7, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 8008a40:	602b      	str	r3, [r5, #0]
	( void ) xTaskResumeAll();
 8008a42:	f001 fa13 	bl	8009e6c <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8008a46:	0763      	lsls	r3, r4, #29
 8008a48:	d00a      	beq.n	8008a60 <pvPortMalloc+0x104>
 8008a4a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a4e:	f383 8811 	msr	BASEPRI, r3
 8008a52:	f3bf 8f6f 	isb	sy
 8008a56:	f3bf 8f4f 	dsb	sy
 8008a5a:	e7fe      	b.n	8008a5a <pvPortMalloc+0xfe>
void *pvReturn = NULL;
 8008a5c:	2400      	movs	r4, #0
 8008a5e:	e7f0      	b.n	8008a42 <pvPortMalloc+0xe6>
}
 8008a60:	4620      	mov	r0, r4
 8008a62:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008a66:	bf00      	nop
 8008a68:	20004f18 	.word	0x20004f18
 8008a6c:	20014f1c 	.word	0x20014f1c
 8008a70:	20004f1c 	.word	0x20004f1c
 8008a74:	20014f28 	.word	0x20014f28
 8008a78:	20014f24 	.word	0x20014f24
 8008a7c:	20014f20 	.word	0x20014f20

08008a80 <vPortFree>:
{
 8008a80:	b510      	push	{r4, lr}
	if( pv != NULL )
 8008a82:	4604      	mov	r4, r0
 8008a84:	b370      	cbz	r0, 8008ae4 <vPortFree+0x64>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8008a86:	4a18      	ldr	r2, [pc, #96]	; (8008ae8 <vPortFree+0x68>)
 8008a88:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8008a8c:	6812      	ldr	r2, [r2, #0]
 8008a8e:	4213      	tst	r3, r2
 8008a90:	d108      	bne.n	8008aa4 <vPortFree+0x24>
 8008a92:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a96:	f383 8811 	msr	BASEPRI, r3
 8008a9a:	f3bf 8f6f 	isb	sy
 8008a9e:	f3bf 8f4f 	dsb	sy
 8008aa2:	e7fe      	b.n	8008aa2 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8008aa4:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8008aa8:	b141      	cbz	r1, 8008abc <vPortFree+0x3c>
 8008aaa:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008aae:	f383 8811 	msr	BASEPRI, r3
 8008ab2:	f3bf 8f6f 	isb	sy
 8008ab6:	f3bf 8f4f 	dsb	sy
 8008aba:	e7fe      	b.n	8008aba <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8008abc:	ea23 0302 	bic.w	r3, r3, r2
 8008ac0:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8008ac4:	f001 f92e 	bl	8009d24 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008ac8:	4a08      	ldr	r2, [pc, #32]	; (8008aec <vPortFree+0x6c>)
 8008aca:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8008ace:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8008ad0:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008ad4:	440b      	add	r3, r1
 8008ad6:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8008ad8:	f7ff ff1c 	bl	8008914 <prvInsertBlockIntoFreeList>
}
 8008adc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 8008ae0:	f001 b9c4 	b.w	8009e6c <xTaskResumeAll>
}
 8008ae4:	bd10      	pop	{r4, pc}
 8008ae6:	bf00      	nop
 8008ae8:	20014f1c 	.word	0x20014f1c
 8008aec:	20014f20 	.word	0x20014f20

08008af0 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008af0:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8008af4:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008af8:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008afc:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008afe:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8008b00:	2300      	movs	r3, #0
 8008b02:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8008b04:	4770      	bx	lr

08008b06 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8008b06:	2300      	movs	r3, #0
 8008b08:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8008b0a:	4770      	bx	lr

08008b0c <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8008b0c:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 8008b0e:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8008b10:	689a      	ldr	r2, [r3, #8]
 8008b12:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8008b14:	689a      	ldr	r2, [r3, #8]
 8008b16:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8008b18:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008b1a:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008b1c:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008b1e:	3301      	adds	r3, #1
 8008b20:	6003      	str	r3, [r0, #0]
}
 8008b22:	4770      	bx	lr

08008b24 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8008b24:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8008b26:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8008b28:	1c63      	adds	r3, r4, #1
 8008b2a:	d10a      	bne.n	8008b42 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8008b2c:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8008b2e:	685a      	ldr	r2, [r3, #4]
 8008b30:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8008b32:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8008b34:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8008b36:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008b38:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008b3a:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008b3c:	3301      	adds	r3, #1
 8008b3e:	6003      	str	r3, [r0, #0]
}
 8008b40:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8008b42:	f100 0208 	add.w	r2, r0, #8
 8008b46:	4613      	mov	r3, r2
 8008b48:	6852      	ldr	r2, [r2, #4]
 8008b4a:	6815      	ldr	r5, [r2, #0]
 8008b4c:	42a5      	cmp	r5, r4
 8008b4e:	d9fa      	bls.n	8008b46 <vListInsert+0x22>
 8008b50:	e7ed      	b.n	8008b2e <vListInsert+0xa>

08008b52 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8008b52:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8008b56:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8008b58:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8008b5a:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8008b5c:	6859      	ldr	r1, [r3, #4]
 8008b5e:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8008b60:	bf08      	it	eq
 8008b62:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8008b64:	2200      	movs	r2, #0
 8008b66:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8008b68:	681a      	ldr	r2, [r3, #0]
 8008b6a:	3a01      	subs	r2, #1
 8008b6c:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8008b6e:	6818      	ldr	r0, [r3, #0]
}
 8008b70:	4770      	bx	lr
	...

08008b74 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8008b74:	4808      	ldr	r0, [pc, #32]	; (8008b98 <prvPortStartFirstTask+0x24>)
 8008b76:	6800      	ldr	r0, [r0, #0]
 8008b78:	6800      	ldr	r0, [r0, #0]
 8008b7a:	f380 8808 	msr	MSP, r0
 8008b7e:	f04f 0000 	mov.w	r0, #0
 8008b82:	f380 8814 	msr	CONTROL, r0
 8008b86:	b662      	cpsie	i
 8008b88:	b661      	cpsie	f
 8008b8a:	f3bf 8f4f 	dsb	sy
 8008b8e:	f3bf 8f6f 	isb	sy
 8008b92:	df00      	svc	0
 8008b94:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8008b96:	0000      	.short	0x0000
 8008b98:	e000ed08 	.word	0xe000ed08

08008b9c <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8008b9c:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8008bac <vPortEnableVFP+0x10>
 8008ba0:	6801      	ldr	r1, [r0, #0]
 8008ba2:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8008ba6:	6001      	str	r1, [r0, #0]
 8008ba8:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8008baa:	0000      	.short	0x0000
 8008bac:	e000ed88 	.word	0xe000ed88

08008bb0 <prvTaskExitError>:
{
 8008bb0:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8008bb2:	2300      	movs	r3, #0
 8008bb4:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 8008bb6:	4b0d      	ldr	r3, [pc, #52]	; (8008bec <prvTaskExitError+0x3c>)
 8008bb8:	681b      	ldr	r3, [r3, #0]
 8008bba:	3301      	adds	r3, #1
 8008bbc:	d008      	beq.n	8008bd0 <prvTaskExitError+0x20>
 8008bbe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008bc2:	f383 8811 	msr	BASEPRI, r3
 8008bc6:	f3bf 8f6f 	isb	sy
 8008bca:	f3bf 8f4f 	dsb	sy
 8008bce:	e7fe      	b.n	8008bce <prvTaskExitError+0x1e>
 8008bd0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008bd4:	f383 8811 	msr	BASEPRI, r3
 8008bd8:	f3bf 8f6f 	isb	sy
 8008bdc:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8008be0:	9b01      	ldr	r3, [sp, #4]
 8008be2:	2b00      	cmp	r3, #0
 8008be4:	d0fc      	beq.n	8008be0 <prvTaskExitError+0x30>
}
 8008be6:	b002      	add	sp, #8
 8008be8:	4770      	bx	lr
 8008bea:	bf00      	nop
 8008bec:	20000088 	.word	0x20000088

08008bf0 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8008bf0:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8008bf4:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8008bf8:	4b07      	ldr	r3, [pc, #28]	; (8008c18 <pxPortInitialiseStack+0x28>)
 8008bfa:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8008bfe:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8008c02:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8008c06:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8008c0a:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8008c0e:	f840 3c24 	str.w	r3, [r0, #-36]
}
 8008c12:	3844      	subs	r0, #68	; 0x44
 8008c14:	4770      	bx	lr
 8008c16:	bf00      	nop
 8008c18:	08008bb1 	.word	0x08008bb1
 8008c1c:	00000000 	.word	0x00000000

08008c20 <SVC_Handler>:
	__asm volatile (
 8008c20:	4b07      	ldr	r3, [pc, #28]	; (8008c40 <pxCurrentTCBConst2>)
 8008c22:	6819      	ldr	r1, [r3, #0]
 8008c24:	6808      	ldr	r0, [r1, #0]
 8008c26:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008c2a:	f380 8809 	msr	PSP, r0
 8008c2e:	f3bf 8f6f 	isb	sy
 8008c32:	f04f 0000 	mov.w	r0, #0
 8008c36:	f380 8811 	msr	BASEPRI, r0
 8008c3a:	4770      	bx	lr
 8008c3c:	f3af 8000 	nop.w

08008c40 <pxCurrentTCBConst2>:
 8008c40:	20014f78 	.word	0x20014f78

08008c44 <vPortEnterCritical>:
 8008c44:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c48:	f383 8811 	msr	BASEPRI, r3
 8008c4c:	f3bf 8f6f 	isb	sy
 8008c50:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8008c54:	4a0a      	ldr	r2, [pc, #40]	; (8008c80 <vPortEnterCritical+0x3c>)
 8008c56:	6813      	ldr	r3, [r2, #0]
 8008c58:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 8008c5a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 8008c5c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 8008c5e:	d10e      	bne.n	8008c7e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8008c60:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008c64:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 8008c68:	b2db      	uxtb	r3, r3
 8008c6a:	b143      	cbz	r3, 8008c7e <vPortEnterCritical+0x3a>
 8008c6c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c70:	f383 8811 	msr	BASEPRI, r3
 8008c74:	f3bf 8f6f 	isb	sy
 8008c78:	f3bf 8f4f 	dsb	sy
 8008c7c:	e7fe      	b.n	8008c7c <vPortEnterCritical+0x38>
}
 8008c7e:	4770      	bx	lr
 8008c80:	20000088 	.word	0x20000088

08008c84 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8008c84:	4a08      	ldr	r2, [pc, #32]	; (8008ca8 <vPortExitCritical+0x24>)
 8008c86:	6813      	ldr	r3, [r2, #0]
 8008c88:	b943      	cbnz	r3, 8008c9c <vPortExitCritical+0x18>
 8008c8a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c8e:	f383 8811 	msr	BASEPRI, r3
 8008c92:	f3bf 8f6f 	isb	sy
 8008c96:	f3bf 8f4f 	dsb	sy
 8008c9a:	e7fe      	b.n	8008c9a <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8008c9c:	3b01      	subs	r3, #1
 8008c9e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8008ca0:	b90b      	cbnz	r3, 8008ca6 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8008ca2:	f383 8811 	msr	BASEPRI, r3
}
 8008ca6:	4770      	bx	lr
 8008ca8:	20000088 	.word	0x20000088
 8008cac:	00000000 	.word	0x00000000

08008cb0 <PendSV_Handler>:
	__asm volatile
 8008cb0:	f3ef 8009 	mrs	r0, PSP
 8008cb4:	f3bf 8f6f 	isb	sy
 8008cb8:	4b15      	ldr	r3, [pc, #84]	; (8008d10 <pxCurrentTCBConst>)
 8008cba:	681a      	ldr	r2, [r3, #0]
 8008cbc:	f01e 0f10 	tst.w	lr, #16
 8008cc0:	bf08      	it	eq
 8008cc2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8008cc6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008cca:	6010      	str	r0, [r2, #0]
 8008ccc:	e92d 0009 	stmdb	sp!, {r0, r3}
 8008cd0:	f04f 0050 	mov.w	r0, #80	; 0x50
 8008cd4:	f380 8811 	msr	BASEPRI, r0
 8008cd8:	f3bf 8f4f 	dsb	sy
 8008cdc:	f3bf 8f6f 	isb	sy
 8008ce0:	f001 f95c 	bl	8009f9c <vTaskSwitchContext>
 8008ce4:	f04f 0000 	mov.w	r0, #0
 8008ce8:	f380 8811 	msr	BASEPRI, r0
 8008cec:	bc09      	pop	{r0, r3}
 8008cee:	6819      	ldr	r1, [r3, #0]
 8008cf0:	6808      	ldr	r0, [r1, #0]
 8008cf2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008cf6:	f01e 0f10 	tst.w	lr, #16
 8008cfa:	bf08      	it	eq
 8008cfc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8008d00:	f380 8809 	msr	PSP, r0
 8008d04:	f3bf 8f6f 	isb	sy
 8008d08:	4770      	bx	lr
 8008d0a:	bf00      	nop
 8008d0c:	f3af 8000 	nop.w

08008d10 <pxCurrentTCBConst>:
 8008d10:	20014f78 	.word	0x20014f78

08008d14 <SysTick_Handler>:
{
 8008d14:	b508      	push	{r3, lr}
	__asm volatile
 8008d16:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d1a:	f383 8811 	msr	BASEPRI, r3
 8008d1e:	f3bf 8f6f 	isb	sy
 8008d22:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8008d26:	f001 f80b 	bl	8009d40 <xTaskIncrementTick>
 8008d2a:	b128      	cbz	r0, 8008d38 <SysTick_Handler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8008d2c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008d30:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008d34:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 8008d38:	2300      	movs	r3, #0
 8008d3a:	f383 8811 	msr	BASEPRI, r3
}
 8008d3e:	bd08      	pop	{r3, pc}

08008d40 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8008d40:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8008d44:	2300      	movs	r3, #0
 8008d46:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8008d48:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8008d4a:	4b05      	ldr	r3, [pc, #20]	; (8008d60 <vPortSetupTimerInterrupt+0x20>)
 8008d4c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8008d50:	681b      	ldr	r3, [r3, #0]
 8008d52:	fbb3 f3f1 	udiv	r3, r3, r1
 8008d56:	3b01      	subs	r3, #1
 8008d58:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 8008d5a:	2307      	movs	r3, #7
 8008d5c:	6113      	str	r3, [r2, #16]
}
 8008d5e:	4770      	bx	lr
 8008d60:	2000007c 	.word	0x2000007c

08008d64 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8008d64:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 8008d68:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8008d6a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 8008d6e:	4a3a      	ldr	r2, [pc, #232]	; (8008e58 <xPortStartScheduler+0xf4>)
 8008d70:	4291      	cmp	r1, r2
 8008d72:	d108      	bne.n	8008d86 <xPortStartScheduler+0x22>
	__asm volatile
 8008d74:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d78:	f383 8811 	msr	BASEPRI, r3
 8008d7c:	f3bf 8f6f 	isb	sy
 8008d80:	f3bf 8f4f 	dsb	sy
 8008d84:	e7fe      	b.n	8008d84 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8008d86:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 8008d8a:	4b34      	ldr	r3, [pc, #208]	; (8008e5c <xPortStartScheduler+0xf8>)
 8008d8c:	429a      	cmp	r2, r3
 8008d8e:	d108      	bne.n	8008da2 <xPortStartScheduler+0x3e>
 8008d90:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d94:	f383 8811 	msr	BASEPRI, r3
 8008d98:	f3bf 8f6f 	isb	sy
 8008d9c:	f3bf 8f4f 	dsb	sy
 8008da0:	e7fe      	b.n	8008da0 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8008da2:	4b2f      	ldr	r3, [pc, #188]	; (8008e60 <xPortStartScheduler+0xfc>)
 8008da4:	781a      	ldrb	r2, [r3, #0]
 8008da6:	b2d2      	uxtb	r2, r2
 8008da8:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8008daa:	22ff      	movs	r2, #255	; 0xff
 8008dac:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008dae:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008db0:	4a2c      	ldr	r2, [pc, #176]	; (8008e64 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008db2:	b2db      	uxtb	r3, r3
 8008db4:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008db8:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8008dbc:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8008dc0:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8008dc2:	4a29      	ldr	r2, [pc, #164]	; (8008e68 <xPortStartScheduler+0x104>)
 8008dc4:	2307      	movs	r3, #7
 8008dc6:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8008dc8:	2100      	movs	r1, #0
 8008dca:	f89d 0003 	ldrb.w	r0, [sp, #3]
 8008dce:	0600      	lsls	r0, r0, #24
 8008dd0:	f103 34ff 	add.w	r4, r3, #4294967295
 8008dd4:	d40c      	bmi.n	8008df0 <xPortStartScheduler+0x8c>
 8008dd6:	b111      	cbz	r1, 8008dde <xPortStartScheduler+0x7a>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8008dd8:	2b03      	cmp	r3, #3
 8008dda:	6013      	str	r3, [r2, #0]
 8008ddc:	d011      	beq.n	8008e02 <xPortStartScheduler+0x9e>
 8008dde:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008de2:	f383 8811 	msr	BASEPRI, r3
 8008de6:	f3bf 8f6f 	isb	sy
 8008dea:	f3bf 8f4f 	dsb	sy
 8008dee:	e7fe      	b.n	8008dee <xPortStartScheduler+0x8a>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8008df0:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8008df4:	005b      	lsls	r3, r3, #1
 8008df6:	b2db      	uxtb	r3, r3
 8008df8:	f88d 3003 	strb.w	r3, [sp, #3]
 8008dfc:	2101      	movs	r1, #1
 8008dfe:	4623      	mov	r3, r4
 8008e00:	e7e3      	b.n	8008dca <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8008e02:	f44f 7340 	mov.w	r3, #768	; 0x300
 8008e06:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8008e08:	9b01      	ldr	r3, [sp, #4]
 8008e0a:	4a15      	ldr	r2, [pc, #84]	; (8008e60 <xPortStartScheduler+0xfc>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8008e0c:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8008e10:	b2db      	uxtb	r3, r3
 8008e12:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8008e14:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8008e18:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8008e1c:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8008e20:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8008e24:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8008e28:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 8008e2c:	f7ff ff88 	bl	8008d40 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8008e30:	4b0e      	ldr	r3, [pc, #56]	; (8008e6c <xPortStartScheduler+0x108>)
 8008e32:	2500      	movs	r5, #0
 8008e34:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 8008e36:	f7ff feb1 	bl	8008b9c <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 8008e3a:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 8008e3e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8008e42:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 8008e46:	f7ff fe95 	bl	8008b74 <prvPortStartFirstTask>
	vTaskSwitchContext();
 8008e4a:	f001 f8a7 	bl	8009f9c <vTaskSwitchContext>
	prvTaskExitError();
 8008e4e:	f7ff feaf 	bl	8008bb0 <prvTaskExitError>
}
 8008e52:	4628      	mov	r0, r5
 8008e54:	b003      	add	sp, #12
 8008e56:	bd30      	pop	{r4, r5, pc}
 8008e58:	410fc271 	.word	0x410fc271
 8008e5c:	410fc270 	.word	0x410fc270
 8008e60:	e000e400 	.word	0xe000e400
 8008e64:	20014f30 	.word	0x20014f30
 8008e68:	20014f34 	.word	0x20014f34
 8008e6c:	20000088 	.word	0x20000088

08008e70 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8008e70:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8008e74:	2b0f      	cmp	r3, #15
 8008e76:	d90e      	bls.n	8008e96 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8008e78:	4a11      	ldr	r2, [pc, #68]	; (8008ec0 <vPortValidateInterruptPriority+0x50>)
 8008e7a:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8008e7c:	4a11      	ldr	r2, [pc, #68]	; (8008ec4 <vPortValidateInterruptPriority+0x54>)
 8008e7e:	7812      	ldrb	r2, [r2, #0]
 8008e80:	429a      	cmp	r2, r3
 8008e82:	d908      	bls.n	8008e96 <vPortValidateInterruptPriority+0x26>
 8008e84:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e88:	f383 8811 	msr	BASEPRI, r3
 8008e8c:	f3bf 8f6f 	isb	sy
 8008e90:	f3bf 8f4f 	dsb	sy
 8008e94:	e7fe      	b.n	8008e94 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8008e96:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008e9a:	4a0b      	ldr	r2, [pc, #44]	; (8008ec8 <vPortValidateInterruptPriority+0x58>)
 8008e9c:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 8008ea0:	6812      	ldr	r2, [r2, #0]
 8008ea2:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8008ea6:	4293      	cmp	r3, r2
 8008ea8:	d908      	bls.n	8008ebc <vPortValidateInterruptPriority+0x4c>
 8008eaa:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008eae:	f383 8811 	msr	BASEPRI, r3
 8008eb2:	f3bf 8f6f 	isb	sy
 8008eb6:	f3bf 8f4f 	dsb	sy
 8008eba:	e7fe      	b.n	8008eba <vPortValidateInterruptPriority+0x4a>
	}
 8008ebc:	4770      	bx	lr
 8008ebe:	bf00      	nop
 8008ec0:	e000e3f0 	.word	0xe000e3f0
 8008ec4:	20014f30 	.word	0x20014f30
 8008ec8:	20014f34 	.word	0x20014f34

08008ecc <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8008ecc:	b510      	push	{r4, lr}
 8008ece:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8008ed0:	f7ff feb8 	bl	8008c44 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8008ed4:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8008ed6:	f7ff fed5 	bl	8008c84 <vPortExitCritical>

	return xReturn;
}
 8008eda:	fab4 f084 	clz	r0, r4
 8008ede:	0940      	lsrs	r0, r0, #5
 8008ee0:	bd10      	pop	{r4, pc}

08008ee2 <prvCopyDataToQueue>:
{
 8008ee2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008ee4:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8008ee6:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008ee8:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 8008eea:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8008eec:	b952      	cbnz	r2, 8008f04 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008eee:	6807      	ldr	r7, [r0, #0]
 8008ef0:	bb47      	cbnz	r7, 8008f44 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008ef2:	6880      	ldr	r0, [r0, #8]
 8008ef4:	f001 f9ae 	bl	800a254 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8008ef8:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008efa:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008efc:	3601      	adds	r6, #1
 8008efe:	63a6      	str	r6, [r4, #56]	; 0x38
}
 8008f00:	4628      	mov	r0, r5
 8008f02:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8008f04:	b965      	cbnz	r5, 8008f20 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008f06:	6840      	ldr	r0, [r0, #4]
 8008f08:	f017 fdea 	bl	8020ae0 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008f0c:	6863      	ldr	r3, [r4, #4]
 8008f0e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8008f10:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008f12:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008f14:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008f16:	4293      	cmp	r3, r2
 8008f18:	d3f0      	bcc.n	8008efc <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8008f1a:	6823      	ldr	r3, [r4, #0]
 8008f1c:	6063      	str	r3, [r4, #4]
 8008f1e:	e7ed      	b.n	8008efc <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8008f20:	68c0      	ldr	r0, [r0, #12]
 8008f22:	f017 fddd 	bl	8020ae0 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008f26:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8008f28:	68e3      	ldr	r3, [r4, #12]
 8008f2a:	4251      	negs	r1, r2
 8008f2c:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008f2e:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008f30:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008f32:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8008f34:	bf3e      	ittt	cc
 8008f36:	68a3      	ldrcc	r3, [r4, #8]
 8008f38:	185b      	addcc	r3, r3, r1
 8008f3a:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8008f3c:	2d02      	cmp	r5, #2
 8008f3e:	d101      	bne.n	8008f44 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008f40:	b116      	cbz	r6, 8008f48 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 8008f42:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 8008f44:	2500      	movs	r5, #0
 8008f46:	e7d9      	b.n	8008efc <prvCopyDataToQueue+0x1a>
 8008f48:	4635      	mov	r5, r6
 8008f4a:	e7d7      	b.n	8008efc <prvCopyDataToQueue+0x1a>

08008f4c <prvCopyDataFromQueue>:
{
 8008f4c:	4603      	mov	r3, r0
 8008f4e:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8008f50:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 8008f52:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8008f54:	b16a      	cbz	r2, 8008f72 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008f56:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8008f58:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008f5a:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8008f5c:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8008f5e:	bf28      	it	cs
 8008f60:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008f62:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8008f64:	bf28      	it	cs
 8008f66:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008f68:	68d9      	ldr	r1, [r3, #12]
}
 8008f6a:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008f6e:	f017 bdb7 	b.w	8020ae0 <memcpy>
}
 8008f72:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008f76:	4770      	bx	lr

08008f78 <prvUnlockQueue>:
{
 8008f78:	b570      	push	{r4, r5, r6, lr}
 8008f7a:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8008f7c:	f7ff fe62 	bl	8008c44 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8008f80:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008f84:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8008f88:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8008f8a:	2d00      	cmp	r5, #0
 8008f8c:	dc14      	bgt.n	8008fb8 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 8008f8e:	23ff      	movs	r3, #255	; 0xff
 8008f90:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8008f94:	f7ff fe76 	bl	8008c84 <vPortExitCritical>
	taskENTER_CRITICAL();
 8008f98:	f7ff fe54 	bl	8008c44 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8008f9c:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008fa0:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 8008fa4:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8008fa6:	2d00      	cmp	r5, #0
 8008fa8:	dc12      	bgt.n	8008fd0 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 8008faa:	23ff      	movs	r3, #255	; 0xff
 8008fac:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 8008fb0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8008fb4:	f7ff be66 	b.w	8008c84 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008fb8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008fba:	2b00      	cmp	r3, #0
 8008fbc:	d0e7      	beq.n	8008f8e <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008fbe:	4630      	mov	r0, r6
 8008fc0:	f001 f864 	bl	800a08c <xTaskRemoveFromEventList>
 8008fc4:	b108      	cbz	r0, 8008fca <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8008fc6:	f001 f8ed 	bl	800a1a4 <vTaskMissedYield>
			--cTxLock;
 8008fca:	3d01      	subs	r5, #1
 8008fcc:	b26d      	sxtb	r5, r5
 8008fce:	e7dc      	b.n	8008f8a <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008fd0:	6923      	ldr	r3, [r4, #16]
 8008fd2:	2b00      	cmp	r3, #0
 8008fd4:	d0e9      	beq.n	8008faa <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008fd6:	4630      	mov	r0, r6
 8008fd8:	f001 f858 	bl	800a08c <xTaskRemoveFromEventList>
 8008fdc:	b108      	cbz	r0, 8008fe2 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 8008fde:	f001 f8e1 	bl	800a1a4 <vTaskMissedYield>
				--cRxLock;
 8008fe2:	3d01      	subs	r5, #1
 8008fe4:	b26d      	sxtb	r5, r5
 8008fe6:	e7de      	b.n	8008fa6 <prvUnlockQueue+0x2e>

08008fe8 <xQueueGenericReset>:
{
 8008fe8:	b538      	push	{r3, r4, r5, lr}
 8008fea:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8008fec:	4604      	mov	r4, r0
 8008fee:	b940      	cbnz	r0, 8009002 <xQueueGenericReset+0x1a>
 8008ff0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ff4:	f383 8811 	msr	BASEPRI, r3
 8008ff8:	f3bf 8f6f 	isb	sy
 8008ffc:	f3bf 8f4f 	dsb	sy
 8009000:	e7fe      	b.n	8009000 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8009002:	f7ff fe1f 	bl	8008c44 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009006:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 800900a:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800900c:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800900e:	434b      	muls	r3, r1
 8009010:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009012:	1a5b      	subs	r3, r3, r1
 8009014:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009016:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009018:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800901a:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 800901c:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800901e:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8009020:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8009024:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8009028:	b9a5      	cbnz	r5, 8009054 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800902a:	6923      	ldr	r3, [r4, #16]
 800902c:	b173      	cbz	r3, 800904c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800902e:	f104 0010 	add.w	r0, r4, #16
 8009032:	f001 f82b 	bl	800a08c <xTaskRemoveFromEventList>
 8009036:	b148      	cbz	r0, 800904c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8009038:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800903c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009040:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009044:	f3bf 8f4f 	dsb	sy
 8009048:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800904c:	f7ff fe1a 	bl	8008c84 <vPortExitCritical>
}
 8009050:	2001      	movs	r0, #1
 8009052:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8009054:	f104 0010 	add.w	r0, r4, #16
 8009058:	f7ff fd4a 	bl	8008af0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800905c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009060:	f7ff fd46 	bl	8008af0 <vListInitialise>
 8009064:	e7f2      	b.n	800904c <xQueueGenericReset+0x64>

08009066 <xQueueGenericCreateStatic>:
	{
 8009066:	b513      	push	{r0, r1, r4, lr}
 8009068:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800906a:	b940      	cbnz	r0, 800907e <xQueueGenericCreateStatic+0x18>
 800906c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009070:	f383 8811 	msr	BASEPRI, r3
 8009074:	f3bf 8f6f 	isb	sy
 8009078:	f3bf 8f4f 	dsb	sy
 800907c:	e7fe      	b.n	800907c <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 800907e:	b943      	cbnz	r3, 8009092 <xQueueGenericCreateStatic+0x2c>
 8009080:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009084:	f383 8811 	msr	BASEPRI, r3
 8009088:	f3bf 8f6f 	isb	sy
 800908c:	f3bf 8f4f 	dsb	sy
 8009090:	e7fe      	b.n	8009090 <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8009092:	b14a      	cbz	r2, 80090a8 <xQueueGenericCreateStatic+0x42>
 8009094:	b991      	cbnz	r1, 80090bc <xQueueGenericCreateStatic+0x56>
 8009096:	f04f 0350 	mov.w	r3, #80	; 0x50
 800909a:	f383 8811 	msr	BASEPRI, r3
 800909e:	f3bf 8f6f 	isb	sy
 80090a2:	f3bf 8f4f 	dsb	sy
 80090a6:	e7fe      	b.n	80090a6 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 80090a8:	b141      	cbz	r1, 80090bc <xQueueGenericCreateStatic+0x56>
 80090aa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090ae:	f383 8811 	msr	BASEPRI, r3
 80090b2:	f3bf 8f6f 	isb	sy
 80090b6:	f3bf 8f4f 	dsb	sy
 80090ba:	e7fe      	b.n	80090ba <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 80090bc:	2350      	movs	r3, #80	; 0x50
 80090be:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 80090c0:	9b01      	ldr	r3, [sp, #4]
 80090c2:	2b50      	cmp	r3, #80	; 0x50
 80090c4:	d008      	beq.n	80090d8 <xQueueGenericCreateStatic+0x72>
 80090c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090ca:	f383 8811 	msr	BASEPRI, r3
 80090ce:	f3bf 8f6f 	isb	sy
 80090d2:	f3bf 8f4f 	dsb	sy
 80090d6:	e7fe      	b.n	80090d6 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 80090d8:	2900      	cmp	r1, #0
 80090da:	bf08      	it	eq
 80090dc:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 80090de:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80090e0:	6022      	str	r2, [r4, #0]
 80090e2:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 80090e4:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80090e8:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80090ec:	4619      	mov	r1, r3
 80090ee:	4620      	mov	r0, r4
 80090f0:	f7ff ff7a 	bl	8008fe8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 80090f4:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80090f8:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 80090fc:	4620      	mov	r0, r4
 80090fe:	b002      	add	sp, #8
 8009100:	bd10      	pop	{r4, pc}

08009102 <xQueueGenericCreate>:
	{
 8009102:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009104:	460d      	mov	r5, r1
 8009106:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8009108:	4606      	mov	r6, r0
 800910a:	b940      	cbnz	r0, 800911e <xQueueGenericCreate+0x1c>
 800910c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009110:	f383 8811 	msr	BASEPRI, r3
 8009114:	f3bf 8f6f 	isb	sy
 8009118:	f3bf 8f4f 	dsb	sy
 800911c:	e7fe      	b.n	800911c <xQueueGenericCreate+0x1a>
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800911e:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8009120:	3050      	adds	r0, #80	; 0x50
 8009122:	f7ff fc1b 	bl	800895c <pvPortMalloc>
		if( pxNewQueue != NULL )
 8009126:	4604      	mov	r4, r0
 8009128:	b170      	cbz	r0, 8009148 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800912a:	2300      	movs	r3, #0
 800912c:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8009130:	b165      	cbz	r5, 800914c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009132:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8009136:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 800913a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800913c:	2101      	movs	r1, #1
 800913e:	4620      	mov	r0, r4
 8009140:	f7ff ff52 	bl	8008fe8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8009144:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8009148:	4620      	mov	r0, r4
 800914a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800914c:	4603      	mov	r3, r0
 800914e:	e7f2      	b.n	8009136 <xQueueGenericCreate+0x34>

08009150 <xQueueCreateCountingSemaphoreStatic>:
	{
 8009150:	b513      	push	{r0, r1, r4, lr}
 8009152:	4613      	mov	r3, r2
 8009154:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8009156:	b940      	cbnz	r0, 800916a <xQueueCreateCountingSemaphoreStatic+0x1a>
 8009158:	f04f 0350 	mov.w	r3, #80	; 0x50
 800915c:	f383 8811 	msr	BASEPRI, r3
 8009160:	f3bf 8f6f 	isb	sy
 8009164:	f3bf 8f4f 	dsb	sy
 8009168:	e7fe      	b.n	8009168 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800916a:	4288      	cmp	r0, r1
 800916c:	d208      	bcs.n	8009180 <xQueueCreateCountingSemaphoreStatic+0x30>
 800916e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009172:	f383 8811 	msr	BASEPRI, r3
 8009176:	f3bf 8f6f 	isb	sy
 800917a:	f3bf 8f4f 	dsb	sy
 800917e:	e7fe      	b.n	800917e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8009180:	2202      	movs	r2, #2
 8009182:	9200      	str	r2, [sp, #0]
 8009184:	2200      	movs	r2, #0
 8009186:	4611      	mov	r1, r2
 8009188:	f7ff ff6d 	bl	8009066 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800918c:	b100      	cbz	r0, 8009190 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800918e:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8009190:	b002      	add	sp, #8
 8009192:	bd10      	pop	{r4, pc}

08009194 <xQueueCreateCountingSemaphore>:
	{
 8009194:	b510      	push	{r4, lr}
 8009196:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8009198:	b940      	cbnz	r0, 80091ac <xQueueCreateCountingSemaphore+0x18>
 800919a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800919e:	f383 8811 	msr	BASEPRI, r3
 80091a2:	f3bf 8f6f 	isb	sy
 80091a6:	f3bf 8f4f 	dsb	sy
 80091aa:	e7fe      	b.n	80091aa <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 80091ac:	4288      	cmp	r0, r1
 80091ae:	d208      	bcs.n	80091c2 <xQueueCreateCountingSemaphore+0x2e>
 80091b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091b4:	f383 8811 	msr	BASEPRI, r3
 80091b8:	f3bf 8f6f 	isb	sy
 80091bc:	f3bf 8f4f 	dsb	sy
 80091c0:	e7fe      	b.n	80091c0 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80091c2:	2202      	movs	r2, #2
 80091c4:	2100      	movs	r1, #0
 80091c6:	f7ff ff9c 	bl	8009102 <xQueueGenericCreate>
		if( xHandle != NULL )
 80091ca:	b100      	cbz	r0, 80091ce <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80091cc:	6384      	str	r4, [r0, #56]	; 0x38
	}
 80091ce:	bd10      	pop	{r4, pc}

080091d0 <xQueueGenericSend>:
{
 80091d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80091d4:	b085      	sub	sp, #20
 80091d6:	4688      	mov	r8, r1
 80091d8:	9201      	str	r2, [sp, #4]
 80091da:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 80091dc:	4604      	mov	r4, r0
 80091de:	b940      	cbnz	r0, 80091f2 <xQueueGenericSend+0x22>
 80091e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091e4:	f383 8811 	msr	BASEPRI, r3
 80091e8:	f3bf 8f6f 	isb	sy
 80091ec:	f3bf 8f4f 	dsb	sy
 80091f0:	e7fe      	b.n	80091f0 <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80091f2:	b951      	cbnz	r1, 800920a <xQueueGenericSend+0x3a>
 80091f4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80091f6:	b143      	cbz	r3, 800920a <xQueueGenericSend+0x3a>
 80091f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091fc:	f383 8811 	msr	BASEPRI, r3
 8009200:	f3bf 8f6f 	isb	sy
 8009204:	f3bf 8f4f 	dsb	sy
 8009208:	e7fe      	b.n	8009208 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800920a:	2f02      	cmp	r7, #2
 800920c:	d10b      	bne.n	8009226 <xQueueGenericSend+0x56>
 800920e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009210:	2b01      	cmp	r3, #1
 8009212:	d008      	beq.n	8009226 <xQueueGenericSend+0x56>
 8009214:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009218:	f383 8811 	msr	BASEPRI, r3
 800921c:	f3bf 8f6f 	isb	sy
 8009220:	f3bf 8f4f 	dsb	sy
 8009224:	e7fe      	b.n	8009224 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009226:	f000 ffc3 	bl	800a1b0 <xTaskGetSchedulerState>
 800922a:	4606      	mov	r6, r0
 800922c:	b950      	cbnz	r0, 8009244 <xQueueGenericSend+0x74>
 800922e:	9b01      	ldr	r3, [sp, #4]
 8009230:	b14b      	cbz	r3, 8009246 <xQueueGenericSend+0x76>
 8009232:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009236:	f383 8811 	msr	BASEPRI, r3
 800923a:	f3bf 8f6f 	isb	sy
 800923e:	f3bf 8f4f 	dsb	sy
 8009242:	e7fe      	b.n	8009242 <xQueueGenericSend+0x72>
 8009244:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8009246:	f04f 0900 	mov.w	r9, #0
 800924a:	e037      	b.n	80092bc <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 800924c:	9d01      	ldr	r5, [sp, #4]
 800924e:	b91d      	cbnz	r5, 8009258 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 8009250:	f7ff fd18 	bl	8008c84 <vPortExitCritical>
			return errQUEUE_FULL;
 8009254:	2000      	movs	r0, #0
 8009256:	e052      	b.n	80092fe <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 8009258:	b916      	cbnz	r6, 8009260 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800925a:	a802      	add	r0, sp, #8
 800925c:	f000 ff5a 	bl	800a114 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8009260:	f7ff fd10 	bl	8008c84 <vPortExitCritical>
		vTaskSuspendAll();
 8009264:	f000 fd5e 	bl	8009d24 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009268:	f7ff fcec 	bl	8008c44 <vPortEnterCritical>
 800926c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8009270:	2bff      	cmp	r3, #255	; 0xff
 8009272:	bf08      	it	eq
 8009274:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 8009278:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800927c:	2bff      	cmp	r3, #255	; 0xff
 800927e:	bf08      	it	eq
 8009280:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 8009284:	f7ff fcfe 	bl	8008c84 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009288:	a901      	add	r1, sp, #4
 800928a:	a802      	add	r0, sp, #8
 800928c:	f000 ff4e 	bl	800a12c <xTaskCheckForTimeOut>
 8009290:	2800      	cmp	r0, #0
 8009292:	d14a      	bne.n	800932a <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8009294:	f7ff fcd6 	bl	8008c44 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8009298:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800929a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800929c:	429a      	cmp	r2, r3
 800929e:	d131      	bne.n	8009304 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80092a0:	f7ff fcf0 	bl	8008c84 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 80092a4:	9901      	ldr	r1, [sp, #4]
 80092a6:	f104 0010 	add.w	r0, r4, #16
 80092aa:	f000 feb7 	bl	800a01c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80092ae:	4620      	mov	r0, r4
 80092b0:	f7ff fe62 	bl	8008f78 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80092b4:	f000 fdda 	bl	8009e6c <xTaskResumeAll>
 80092b8:	b360      	cbz	r0, 8009314 <xQueueGenericSend+0x144>
 80092ba:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80092bc:	f7ff fcc2 	bl	8008c44 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80092c0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80092c2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80092c4:	429a      	cmp	r2, r3
 80092c6:	d301      	bcc.n	80092cc <xQueueGenericSend+0xfc>
 80092c8:	2f02      	cmp	r7, #2
 80092ca:	d1bf      	bne.n	800924c <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80092cc:	463a      	mov	r2, r7
 80092ce:	4641      	mov	r1, r8
 80092d0:	4620      	mov	r0, r4
 80092d2:	f7ff fe06 	bl	8008ee2 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80092d6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80092d8:	b11b      	cbz	r3, 80092e2 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80092da:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80092de:	f000 fed5 	bl	800a08c <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 80092e2:	b148      	cbz	r0, 80092f8 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 80092e4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80092e8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80092ec:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80092f0:	f3bf 8f4f 	dsb	sy
 80092f4:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80092f8:	f7ff fcc4 	bl	8008c84 <vPortExitCritical>
				return pdPASS;
 80092fc:	2001      	movs	r0, #1
}
 80092fe:	b005      	add	sp, #20
 8009300:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 8009304:	f7ff fcbe 	bl	8008c84 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8009308:	4620      	mov	r0, r4
 800930a:	f7ff fe35 	bl	8008f78 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800930e:	f000 fdad 	bl	8009e6c <xTaskResumeAll>
 8009312:	e7d2      	b.n	80092ba <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 8009314:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009318:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800931c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009320:	f3bf 8f4f 	dsb	sy
 8009324:	f3bf 8f6f 	isb	sy
 8009328:	e7c7      	b.n	80092ba <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 800932a:	4620      	mov	r0, r4
 800932c:	f7ff fe24 	bl	8008f78 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009330:	f000 fd9c 	bl	8009e6c <xTaskResumeAll>
 8009334:	e78e      	b.n	8009254 <xQueueGenericSend+0x84>

08009336 <xQueueGenericSendFromISR>:
{
 8009336:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800933a:	4689      	mov	r9, r1
 800933c:	4690      	mov	r8, r2
 800933e:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8009340:	4604      	mov	r4, r0
 8009342:	b940      	cbnz	r0, 8009356 <xQueueGenericSendFromISR+0x20>
 8009344:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009348:	f383 8811 	msr	BASEPRI, r3
 800934c:	f3bf 8f6f 	isb	sy
 8009350:	f3bf 8f4f 	dsb	sy
 8009354:	e7fe      	b.n	8009354 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009356:	b951      	cbnz	r1, 800936e <xQueueGenericSendFromISR+0x38>
 8009358:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800935a:	b143      	cbz	r3, 800936e <xQueueGenericSendFromISR+0x38>
 800935c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009360:	f383 8811 	msr	BASEPRI, r3
 8009364:	f3bf 8f6f 	isb	sy
 8009368:	f3bf 8f4f 	dsb	sy
 800936c:	e7fe      	b.n	800936c <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800936e:	2f02      	cmp	r7, #2
 8009370:	d10b      	bne.n	800938a <xQueueGenericSendFromISR+0x54>
 8009372:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009374:	2b01      	cmp	r3, #1
 8009376:	d008      	beq.n	800938a <xQueueGenericSendFromISR+0x54>
 8009378:	f04f 0350 	mov.w	r3, #80	; 0x50
 800937c:	f383 8811 	msr	BASEPRI, r3
 8009380:	f3bf 8f6f 	isb	sy
 8009384:	f3bf 8f4f 	dsb	sy
 8009388:	e7fe      	b.n	8009388 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800938a:	f7ff fd71 	bl	8008e70 <vPortValidateInterruptPriority>
	__asm volatile
 800938e:	f3ef 8611 	mrs	r6, BASEPRI
 8009392:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009396:	f383 8811 	msr	BASEPRI, r3
 800939a:	f3bf 8f6f 	isb	sy
 800939e:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80093a2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80093a4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80093a6:	429a      	cmp	r2, r3
 80093a8:	d301      	bcc.n	80093ae <xQueueGenericSendFromISR+0x78>
 80093aa:	2f02      	cmp	r7, #2
 80093ac:	d122      	bne.n	80093f4 <xQueueGenericSendFromISR+0xbe>
			const int8_t cTxLock = pxQueue->cTxLock;
 80093ae:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80093b2:	463a      	mov	r2, r7
			const int8_t cTxLock = pxQueue->cTxLock;
 80093b4:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80093b6:	4649      	mov	r1, r9
 80093b8:	4620      	mov	r0, r4
 80093ba:	f7ff fd92 	bl	8008ee2 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 80093be:	1c6b      	adds	r3, r5, #1
 80093c0:	d113      	bne.n	80093ea <xQueueGenericSendFromISR+0xb4>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80093c2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80093c4:	b90b      	cbnz	r3, 80093ca <xQueueGenericSendFromISR+0x94>
			xReturn = pdPASS;
 80093c6:	2001      	movs	r0, #1
 80093c8:	e00b      	b.n	80093e2 <xQueueGenericSendFromISR+0xac>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80093ca:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80093ce:	f000 fe5d 	bl	800a08c <xTaskRemoveFromEventList>
 80093d2:	2800      	cmp	r0, #0
 80093d4:	d0f7      	beq.n	80093c6 <xQueueGenericSendFromISR+0x90>
							if( pxHigherPriorityTaskWoken != NULL )
 80093d6:	f1b8 0f00 	cmp.w	r8, #0
 80093da:	d0f4      	beq.n	80093c6 <xQueueGenericSendFromISR+0x90>
								*pxHigherPriorityTaskWoken = pdTRUE;
 80093dc:	2001      	movs	r0, #1
 80093de:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 80093e2:	f386 8811 	msr	BASEPRI, r6
}
 80093e6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80093ea:	3501      	adds	r5, #1
 80093ec:	b26d      	sxtb	r5, r5
 80093ee:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 80093f2:	e7e8      	b.n	80093c6 <xQueueGenericSendFromISR+0x90>
			xReturn = errQUEUE_FULL;
 80093f4:	2000      	movs	r0, #0
 80093f6:	e7f4      	b.n	80093e2 <xQueueGenericSendFromISR+0xac>

080093f8 <xQueueGiveFromISR>:
{
 80093f8:	b570      	push	{r4, r5, r6, lr}
 80093fa:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 80093fc:	4604      	mov	r4, r0
 80093fe:	b940      	cbnz	r0, 8009412 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8009400:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009404:	f383 8811 	msr	BASEPRI, r3
 8009408:	f3bf 8f6f 	isb	sy
 800940c:	f3bf 8f4f 	dsb	sy
 8009410:	e7fe      	b.n	8009410 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8009412:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009414:	b143      	cbz	r3, 8009428 <xQueueGiveFromISR+0x30>
 8009416:	f04f 0350 	mov.w	r3, #80	; 0x50
 800941a:	f383 8811 	msr	BASEPRI, r3
 800941e:	f3bf 8f6f 	isb	sy
 8009422:	f3bf 8f4f 	dsb	sy
 8009426:	e7fe      	b.n	8009426 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8009428:	6803      	ldr	r3, [r0, #0]
 800942a:	b953      	cbnz	r3, 8009442 <xQueueGiveFromISR+0x4a>
 800942c:	6883      	ldr	r3, [r0, #8]
 800942e:	b143      	cbz	r3, 8009442 <xQueueGiveFromISR+0x4a>
 8009430:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009434:	f383 8811 	msr	BASEPRI, r3
 8009438:	f3bf 8f6f 	isb	sy
 800943c:	f3bf 8f4f 	dsb	sy
 8009440:	e7fe      	b.n	8009440 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8009442:	f7ff fd15 	bl	8008e70 <vPortValidateInterruptPriority>
	__asm volatile
 8009446:	f3ef 8611 	mrs	r6, BASEPRI
 800944a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800944e:	f383 8811 	msr	BASEPRI, r3
 8009452:	f3bf 8f6f 	isb	sy
 8009456:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800945a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800945c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800945e:	4293      	cmp	r3, r2
 8009460:	d91c      	bls.n	800949c <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8009462:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8009466:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8009468:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 800946a:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800946c:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 800946e:	d110      	bne.n	8009492 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009470:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009472:	b90b      	cbnz	r3, 8009478 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 8009474:	2001      	movs	r0, #1
 8009476:	e009      	b.n	800948c <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009478:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800947c:	f000 fe06 	bl	800a08c <xTaskRemoveFromEventList>
 8009480:	2800      	cmp	r0, #0
 8009482:	d0f7      	beq.n	8009474 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 8009484:	2d00      	cmp	r5, #0
 8009486:	d0f5      	beq.n	8009474 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8009488:	2001      	movs	r0, #1
 800948a:	6028      	str	r0, [r5, #0]
	__asm volatile
 800948c:	f386 8811 	msr	BASEPRI, r6
}
 8009490:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8009492:	3301      	adds	r3, #1
 8009494:	b25b      	sxtb	r3, r3
 8009496:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800949a:	e7eb      	b.n	8009474 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 800949c:	2000      	movs	r0, #0
 800949e:	e7f5      	b.n	800948c <xQueueGiveFromISR+0x94>

080094a0 <xQueueReceive>:
{
 80094a0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80094a4:	460f      	mov	r7, r1
 80094a6:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 80094a8:	4604      	mov	r4, r0
 80094aa:	b940      	cbnz	r0, 80094be <xQueueReceive+0x1e>
	__asm volatile
 80094ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 80094b0:	f383 8811 	msr	BASEPRI, r3
 80094b4:	f3bf 8f6f 	isb	sy
 80094b8:	f3bf 8f4f 	dsb	sy
 80094bc:	e7fe      	b.n	80094bc <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80094be:	b951      	cbnz	r1, 80094d6 <xQueueReceive+0x36>
 80094c0:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80094c2:	b143      	cbz	r3, 80094d6 <xQueueReceive+0x36>
 80094c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80094c8:	f383 8811 	msr	BASEPRI, r3
 80094cc:	f3bf 8f6f 	isb	sy
 80094d0:	f3bf 8f4f 	dsb	sy
 80094d4:	e7fe      	b.n	80094d4 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80094d6:	f000 fe6b 	bl	800a1b0 <xTaskGetSchedulerState>
 80094da:	4606      	mov	r6, r0
 80094dc:	b950      	cbnz	r0, 80094f4 <xQueueReceive+0x54>
 80094de:	9b01      	ldr	r3, [sp, #4]
 80094e0:	b14b      	cbz	r3, 80094f6 <xQueueReceive+0x56>
 80094e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80094e6:	f383 8811 	msr	BASEPRI, r3
 80094ea:	f3bf 8f6f 	isb	sy
 80094ee:	f3bf 8f4f 	dsb	sy
 80094f2:	e7fe      	b.n	80094f2 <xQueueReceive+0x52>
 80094f4:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 80094f6:	f04f 0800 	mov.w	r8, #0
 80094fa:	e03d      	b.n	8009578 <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 80094fc:	9d01      	ldr	r5, [sp, #4]
 80094fe:	b91d      	cbnz	r5, 8009508 <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 8009500:	f7ff fbc0 	bl	8008c84 <vPortExitCritical>
				return errQUEUE_EMPTY;
 8009504:	2000      	movs	r0, #0
 8009506:	e056      	b.n	80095b6 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 8009508:	b916      	cbnz	r6, 8009510 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800950a:	a802      	add	r0, sp, #8
 800950c:	f000 fe02 	bl	800a114 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8009510:	f7ff fbb8 	bl	8008c84 <vPortExitCritical>
		vTaskSuspendAll();
 8009514:	f000 fc06 	bl	8009d24 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009518:	f7ff fb94 	bl	8008c44 <vPortEnterCritical>
 800951c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8009520:	2bff      	cmp	r3, #255	; 0xff
 8009522:	bf08      	it	eq
 8009524:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 8009528:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800952c:	2bff      	cmp	r3, #255	; 0xff
 800952e:	bf08      	it	eq
 8009530:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8009534:	f7ff fba6 	bl	8008c84 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009538:	a901      	add	r1, sp, #4
 800953a:	a802      	add	r0, sp, #8
 800953c:	f000 fdf6 	bl	800a12c <xTaskCheckForTimeOut>
 8009540:	2800      	cmp	r0, #0
 8009542:	d141      	bne.n	80095c8 <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009544:	4620      	mov	r0, r4
 8009546:	f7ff fcc1 	bl	8008ecc <prvIsQueueEmpty>
 800954a:	b3b8      	cbz	r0, 80095bc <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800954c:	9901      	ldr	r1, [sp, #4]
 800954e:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009552:	f000 fd63 	bl	800a01c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8009556:	4620      	mov	r0, r4
 8009558:	f7ff fd0e 	bl	8008f78 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800955c:	f000 fc86 	bl	8009e6c <xTaskResumeAll>
 8009560:	b948      	cbnz	r0, 8009576 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 8009562:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009566:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800956a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800956e:	f3bf 8f4f 	dsb	sy
 8009572:	f3bf 8f6f 	isb	sy
 8009576:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8009578:	f7ff fb64 	bl	8008c44 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800957c:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800957e:	2d00      	cmp	r5, #0
 8009580:	d0bc      	beq.n	80094fc <xQueueReceive+0x5c>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009582:	4639      	mov	r1, r7
 8009584:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009586:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009588:	f7ff fce0 	bl	8008f4c <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800958c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800958e:	6923      	ldr	r3, [r4, #16]
 8009590:	b173      	cbz	r3, 80095b0 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009592:	f104 0010 	add.w	r0, r4, #16
 8009596:	f000 fd79 	bl	800a08c <xTaskRemoveFromEventList>
 800959a:	b148      	cbz	r0, 80095b0 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 800959c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80095a0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80095a4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80095a8:	f3bf 8f4f 	dsb	sy
 80095ac:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80095b0:	f7ff fb68 	bl	8008c84 <vPortExitCritical>
				return pdPASS;
 80095b4:	2001      	movs	r0, #1
}
 80095b6:	b004      	add	sp, #16
 80095b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 80095bc:	4620      	mov	r0, r4
 80095be:	f7ff fcdb 	bl	8008f78 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80095c2:	f000 fc53 	bl	8009e6c <xTaskResumeAll>
 80095c6:	e7d6      	b.n	8009576 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 80095c8:	4620      	mov	r0, r4
 80095ca:	f7ff fcd5 	bl	8008f78 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80095ce:	f000 fc4d 	bl	8009e6c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80095d2:	4620      	mov	r0, r4
 80095d4:	f7ff fc7a 	bl	8008ecc <prvIsQueueEmpty>
 80095d8:	2800      	cmp	r0, #0
 80095da:	d0cc      	beq.n	8009576 <xQueueReceive+0xd6>
 80095dc:	e792      	b.n	8009504 <xQueueReceive+0x64>

080095de <xQueueSemaphoreTake>:
{
 80095de:	b5f0      	push	{r4, r5, r6, r7, lr}
 80095e0:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 80095e2:	4604      	mov	r4, r0
{
 80095e4:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 80095e6:	b940      	cbnz	r0, 80095fa <xQueueSemaphoreTake+0x1c>
 80095e8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80095ec:	f383 8811 	msr	BASEPRI, r3
 80095f0:	f3bf 8f6f 	isb	sy
 80095f4:	f3bf 8f4f 	dsb	sy
 80095f8:	e7fe      	b.n	80095f8 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 80095fa:	6c05      	ldr	r5, [r0, #64]	; 0x40
 80095fc:	b145      	cbz	r5, 8009610 <xQueueSemaphoreTake+0x32>
 80095fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009602:	f383 8811 	msr	BASEPRI, r3
 8009606:	f3bf 8f6f 	isb	sy
 800960a:	f3bf 8f4f 	dsb	sy
 800960e:	e7fe      	b.n	800960e <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009610:	f000 fdce 	bl	800a1b0 <xTaskGetSchedulerState>
 8009614:	4606      	mov	r6, r0
 8009616:	b950      	cbnz	r0, 800962e <xQueueSemaphoreTake+0x50>
 8009618:	9b01      	ldr	r3, [sp, #4]
 800961a:	b15b      	cbz	r3, 8009634 <xQueueSemaphoreTake+0x56>
 800961c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009620:	f383 8811 	msr	BASEPRI, r3
 8009624:	f3bf 8f6f 	isb	sy
 8009628:	f3bf 8f4f 	dsb	sy
 800962c:	e7fe      	b.n	800962c <xQueueSemaphoreTake+0x4e>
 800962e:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8009630:	2700      	movs	r7, #0
 8009632:	e053      	b.n	80096dc <xQueueSemaphoreTake+0xfe>
 8009634:	4605      	mov	r5, r0
 8009636:	e7fb      	b.n	8009630 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 8009638:	9b01      	ldr	r3, [sp, #4]
 800963a:	b963      	cbnz	r3, 8009656 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800963c:	b145      	cbz	r5, 8009650 <xQueueSemaphoreTake+0x72>
 800963e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009642:	f383 8811 	msr	BASEPRI, r3
 8009646:	f3bf 8f6f 	isb	sy
 800964a:	f3bf 8f4f 	dsb	sy
 800964e:	e7fe      	b.n	800964e <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 8009650:	f7ff fb18 	bl	8008c84 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8009654:	e062      	b.n	800971c <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 8009656:	b916      	cbnz	r6, 800965e <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8009658:	a802      	add	r0, sp, #8
 800965a:	f000 fd5b 	bl	800a114 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800965e:	f7ff fb11 	bl	8008c84 <vPortExitCritical>
		vTaskSuspendAll();
 8009662:	f000 fb5f 	bl	8009d24 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009666:	f7ff faed 	bl	8008c44 <vPortEnterCritical>
 800966a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800966e:	2bff      	cmp	r3, #255	; 0xff
 8009670:	bf08      	it	eq
 8009672:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 8009676:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800967a:	2bff      	cmp	r3, #255	; 0xff
 800967c:	bf08      	it	eq
 800967e:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 8009682:	f7ff faff 	bl	8008c84 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009686:	a901      	add	r1, sp, #4
 8009688:	a802      	add	r0, sp, #8
 800968a:	f000 fd4f 	bl	800a12c <xTaskCheckForTimeOut>
 800968e:	2800      	cmp	r0, #0
 8009690:	d14d      	bne.n	800972e <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009692:	4620      	mov	r0, r4
 8009694:	f7ff fc1a 	bl	8008ecc <prvIsQueueEmpty>
 8009698:	2800      	cmp	r0, #0
 800969a:	d042      	beq.n	8009722 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800969c:	6823      	ldr	r3, [r4, #0]
 800969e:	b93b      	cbnz	r3, 80096b0 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 80096a0:	f7ff fad0 	bl	8008c44 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 80096a4:	68a0      	ldr	r0, [r4, #8]
 80096a6:	f000 fd93 	bl	800a1d0 <xTaskPriorityInherit>
 80096aa:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 80096ac:	f7ff faea 	bl	8008c84 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 80096b0:	9901      	ldr	r1, [sp, #4]
 80096b2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80096b6:	f000 fcb1 	bl	800a01c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80096ba:	4620      	mov	r0, r4
 80096bc:	f7ff fc5c 	bl	8008f78 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80096c0:	f000 fbd4 	bl	8009e6c <xTaskResumeAll>
 80096c4:	b948      	cbnz	r0, 80096da <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 80096c6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80096ca:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80096ce:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80096d2:	f3bf 8f4f 	dsb	sy
 80096d6:	f3bf 8f6f 	isb	sy
 80096da:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80096dc:	f7ff fab2 	bl	8008c44 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 80096e0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 80096e2:	2b00      	cmp	r3, #0
 80096e4:	d0a8      	beq.n	8009638 <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 80096e6:	3b01      	subs	r3, #1
 80096e8:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80096ea:	6823      	ldr	r3, [r4, #0]
 80096ec:	b913      	cbnz	r3, 80096f4 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 80096ee:	f000 fe47 	bl	800a380 <pvTaskIncrementMutexHeldCount>
 80096f2:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80096f4:	6923      	ldr	r3, [r4, #16]
 80096f6:	b173      	cbz	r3, 8009716 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80096f8:	f104 0010 	add.w	r0, r4, #16
 80096fc:	f000 fcc6 	bl	800a08c <xTaskRemoveFromEventList>
 8009700:	b148      	cbz	r0, 8009716 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 8009702:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009706:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800970a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800970e:	f3bf 8f4f 	dsb	sy
 8009712:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009716:	f7ff fab5 	bl	8008c84 <vPortExitCritical>
				return pdPASS;
 800971a:	2501      	movs	r5, #1
}
 800971c:	4628      	mov	r0, r5
 800971e:	b005      	add	sp, #20
 8009720:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 8009722:	4620      	mov	r0, r4
 8009724:	f7ff fc28 	bl	8008f78 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8009728:	f000 fba0 	bl	8009e6c <xTaskResumeAll>
 800972c:	e7d5      	b.n	80096da <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 800972e:	4620      	mov	r0, r4
 8009730:	f7ff fc22 	bl	8008f78 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009734:	f000 fb9a 	bl	8009e6c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009738:	4620      	mov	r0, r4
 800973a:	f7ff fbc7 	bl	8008ecc <prvIsQueueEmpty>
 800973e:	2800      	cmp	r0, #0
 8009740:	d0cb      	beq.n	80096da <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 8009742:	2d00      	cmp	r5, #0
 8009744:	d0ea      	beq.n	800971c <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 8009746:	f7ff fa7d 	bl	8008c44 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800974a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800974c:	b119      	cbz	r1, 8009756 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800974e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8009750:	6819      	ldr	r1, [r3, #0]
 8009752:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8009756:	68a0      	ldr	r0, [r4, #8]
 8009758:	f000 fdc0 	bl	800a2dc <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800975c:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 800975e:	f7ff fa91 	bl	8008c84 <vPortExitCritical>
 8009762:	e7db      	b.n	800971c <xQueueSemaphoreTake+0x13e>

08009764 <xQueueReceiveFromISR>:
{
 8009764:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009768:	4689      	mov	r9, r1
 800976a:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800976c:	4605      	mov	r5, r0
 800976e:	b940      	cbnz	r0, 8009782 <xQueueReceiveFromISR+0x1e>
 8009770:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009774:	f383 8811 	msr	BASEPRI, r3
 8009778:	f3bf 8f6f 	isb	sy
 800977c:	f3bf 8f4f 	dsb	sy
 8009780:	e7fe      	b.n	8009780 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009782:	b951      	cbnz	r1, 800979a <xQueueReceiveFromISR+0x36>
 8009784:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009786:	b143      	cbz	r3, 800979a <xQueueReceiveFromISR+0x36>
 8009788:	f04f 0350 	mov.w	r3, #80	; 0x50
 800978c:	f383 8811 	msr	BASEPRI, r3
 8009790:	f3bf 8f6f 	isb	sy
 8009794:	f3bf 8f4f 	dsb	sy
 8009798:	e7fe      	b.n	8009798 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800979a:	f7ff fb69 	bl	8008e70 <vPortValidateInterruptPriority>
	__asm volatile
 800979e:	f3ef 8711 	mrs	r7, BASEPRI
 80097a2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80097a6:	f383 8811 	msr	BASEPRI, r3
 80097aa:	f3bf 8f6f 	isb	sy
 80097ae:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80097b2:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80097b4:	b31c      	cbz	r4, 80097fe <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 80097b6:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80097ba:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 80097bc:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80097be:	4628      	mov	r0, r5
 80097c0:	f7ff fbc4 	bl	8008f4c <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80097c4:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 80097c6:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80097c8:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 80097ca:	d113      	bne.n	80097f4 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80097cc:	692b      	ldr	r3, [r5, #16]
 80097ce:	b90b      	cbnz	r3, 80097d4 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 80097d0:	2001      	movs	r0, #1
 80097d2:	e00b      	b.n	80097ec <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80097d4:	f105 0010 	add.w	r0, r5, #16
 80097d8:	f000 fc58 	bl	800a08c <xTaskRemoveFromEventList>
 80097dc:	2800      	cmp	r0, #0
 80097de:	d0f7      	beq.n	80097d0 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 80097e0:	f1b8 0f00 	cmp.w	r8, #0
 80097e4:	d0f4      	beq.n	80097d0 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 80097e6:	2001      	movs	r0, #1
 80097e8:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 80097ec:	f387 8811 	msr	BASEPRI, r7
}
 80097f0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 80097f4:	3601      	adds	r6, #1
 80097f6:	b276      	sxtb	r6, r6
 80097f8:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 80097fc:	e7e8      	b.n	80097d0 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 80097fe:	4620      	mov	r0, r4
 8009800:	e7f4      	b.n	80097ec <xQueueReceiveFromISR+0x88>
	...

08009804 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8009804:	b510      	push	{r4, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8009806:	4a07      	ldr	r2, [pc, #28]	; (8009824 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009808:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800980a:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800980e:	b92c      	cbnz	r4, 800981c <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8009810:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8009814:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8009818:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800981a:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800981c:	3301      	adds	r3, #1
 800981e:	2b08      	cmp	r3, #8
 8009820:	d1f3      	bne.n	800980a <vQueueAddToRegistry+0x6>
 8009822:	e7fa      	b.n	800981a <vQueueAddToRegistry+0x16>
 8009824:	20014f38 	.word	0x20014f38

08009828 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8009828:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800982a:	4a08      	ldr	r2, [pc, #32]	; (800984c <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800982c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800982e:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 8009832:	684c      	ldr	r4, [r1, #4]
 8009834:	4284      	cmp	r4, r0
 8009836:	d104      	bne.n	8009842 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8009838:	2000      	movs	r0, #0
 800983a:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800983e:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8009840:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009842:	3301      	adds	r3, #1
 8009844:	2b08      	cmp	r3, #8
 8009846:	d1f2      	bne.n	800982e <vQueueUnregisterQueue+0x6>
 8009848:	e7fa      	b.n	8009840 <vQueueUnregisterQueue+0x18>
 800984a:	bf00      	nop
 800984c:	20014f38 	.word	0x20014f38

08009850 <vQueueDelete>:
{
 8009850:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8009852:	4604      	mov	r4, r0
 8009854:	b940      	cbnz	r0, 8009868 <vQueueDelete+0x18>
	__asm volatile
 8009856:	f04f 0350 	mov.w	r3, #80	; 0x50
 800985a:	f383 8811 	msr	BASEPRI, r3
 800985e:	f3bf 8f6f 	isb	sy
 8009862:	f3bf 8f4f 	dsb	sy
 8009866:	e7fe      	b.n	8009866 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 8009868:	f7ff ffde 	bl	8009828 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800986c:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8009870:	b923      	cbnz	r3, 800987c <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 8009872:	4620      	mov	r0, r4
}
 8009874:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8009878:	f7ff b902 	b.w	8008a80 <vPortFree>
}
 800987c:	bd10      	pop	{r4, pc}

0800987e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800987e:	b570      	push	{r4, r5, r6, lr}
 8009880:	4604      	mov	r4, r0
 8009882:	460d      	mov	r5, r1
 8009884:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8009886:	f7ff f9dd 	bl	8008c44 <vPortEnterCritical>
 800988a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800988e:	2bff      	cmp	r3, #255	; 0xff
 8009890:	bf04      	itt	eq
 8009892:	2300      	moveq	r3, #0
 8009894:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8009898:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800989c:	2bff      	cmp	r3, #255	; 0xff
 800989e:	bf04      	itt	eq
 80098a0:	2300      	moveq	r3, #0
 80098a2:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 80098a6:	f7ff f9ed 	bl	8008c84 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 80098aa:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80098ac:	b92b      	cbnz	r3, 80098ba <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 80098ae:	4632      	mov	r2, r6
 80098b0:	4629      	mov	r1, r5
 80098b2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80098b6:	f000 fbcb 	bl	800a050 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 80098ba:	4620      	mov	r0, r4
	}
 80098bc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 80098c0:	f7ff bb5a 	b.w	8008f78 <prvUnlockQueue>

080098c4 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 80098c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80098c8:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 80098ca:	f7ff f9bb 	bl	8008c44 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 80098ce:	4b30      	ldr	r3, [pc, #192]	; (8009990 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 80098d0:	4e30      	ldr	r6, [pc, #192]	; (8009994 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 80098d2:	681a      	ldr	r2, [r3, #0]
 80098d4:	4f30      	ldr	r7, [pc, #192]	; (8009998 <prvAddNewTaskToReadyList+0xd4>)
 80098d6:	3201      	adds	r2, #1
 80098d8:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 80098da:	6835      	ldr	r5, [r6, #0]
 80098dc:	2d00      	cmp	r5, #0
 80098de:	d14b      	bne.n	8009978 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 80098e0:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 80098e2:	681b      	ldr	r3, [r3, #0]
 80098e4:	2b01      	cmp	r3, #1
 80098e6:	d11f      	bne.n	8009928 <prvAddNewTaskToReadyList+0x64>
 80098e8:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80098ea:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80098ec:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80098ee:	f7ff f8ff 	bl	8008af0 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80098f2:	2d38      	cmp	r5, #56	; 0x38
 80098f4:	f108 0814 	add.w	r8, r8, #20
 80098f8:	d1f7      	bne.n	80098ea <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 80098fa:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80099c0 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 80098fe:	4d27      	ldr	r5, [pc, #156]	; (800999c <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 8009900:	4640      	mov	r0, r8
 8009902:	f7ff f8f5 	bl	8008af0 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8009906:	4628      	mov	r0, r5
 8009908:	f7ff f8f2 	bl	8008af0 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800990c:	4824      	ldr	r0, [pc, #144]	; (80099a0 <prvAddNewTaskToReadyList+0xdc>)
 800990e:	f7ff f8ef 	bl	8008af0 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8009912:	4824      	ldr	r0, [pc, #144]	; (80099a4 <prvAddNewTaskToReadyList+0xe0>)
 8009914:	f7ff f8ec 	bl	8008af0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8009918:	4823      	ldr	r0, [pc, #140]	; (80099a8 <prvAddNewTaskToReadyList+0xe4>)
 800991a:	f7ff f8e9 	bl	8008af0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800991e:	4b23      	ldr	r3, [pc, #140]	; (80099ac <prvAddNewTaskToReadyList+0xe8>)
 8009920:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8009924:	4b22      	ldr	r3, [pc, #136]	; (80099b0 <prvAddNewTaskToReadyList+0xec>)
 8009926:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 8009928:	4a22      	ldr	r2, [pc, #136]	; (80099b4 <prvAddNewTaskToReadyList+0xf0>)
 800992a:	6813      	ldr	r3, [r2, #0]
 800992c:	3301      	adds	r3, #1
 800992e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8009930:	4a21      	ldr	r2, [pc, #132]	; (80099b8 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8009932:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8009934:	6811      	ldr	r1, [r2, #0]
 8009936:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009938:	2014      	movs	r0, #20
 800993a:	428b      	cmp	r3, r1
 800993c:	fb00 7003 	mla	r0, r0, r3, r7
 8009940:	f104 0104 	add.w	r1, r4, #4
 8009944:	bf88      	it	hi
 8009946:	6013      	strhi	r3, [r2, #0]
 8009948:	f7ff f8e0 	bl	8008b0c <vListInsertEnd>
	taskEXIT_CRITICAL();
 800994c:	f7ff f99a 	bl	8008c84 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8009950:	4b1a      	ldr	r3, [pc, #104]	; (80099bc <prvAddNewTaskToReadyList+0xf8>)
 8009952:	681b      	ldr	r3, [r3, #0]
 8009954:	b173      	cbz	r3, 8009974 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8009956:	6833      	ldr	r3, [r6, #0]
 8009958:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800995a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800995c:	429a      	cmp	r2, r3
 800995e:	d209      	bcs.n	8009974 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 8009960:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009964:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009968:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800996c:	f3bf 8f4f 	dsb	sy
 8009970:	f3bf 8f6f 	isb	sy
}
 8009974:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8009978:	4b10      	ldr	r3, [pc, #64]	; (80099bc <prvAddNewTaskToReadyList+0xf8>)
 800997a:	681b      	ldr	r3, [r3, #0]
 800997c:	2b00      	cmp	r3, #0
 800997e:	d1d3      	bne.n	8009928 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8009980:	6833      	ldr	r3, [r6, #0]
 8009982:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009984:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009986:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8009988:	bf98      	it	ls
 800998a:	6034      	strls	r4, [r6, #0]
 800998c:	e7cc      	b.n	8009928 <prvAddNewTaskToReadyList+0x64>
 800998e:	bf00      	nop
 8009990:	200153e4 	.word	0x200153e4
 8009994:	20014f78 	.word	0x20014f78
 8009998:	20014f84 	.word	0x20014f84
 800999c:	20015410 	.word	0x20015410
 80099a0:	2001542c 	.word	0x2001542c
 80099a4:	20015458 	.word	0x20015458
 80099a8:	20015444 	.word	0x20015444
 80099ac:	20014f7c 	.word	0x20014f7c
 80099b0:	20014f80 	.word	0x20014f80
 80099b4:	200153f4 	.word	0x200153f4
 80099b8:	200153f8 	.word	0x200153f8
 80099bc:	20015440 	.word	0x20015440
 80099c0:	200153fc 	.word	0x200153fc

080099c4 <prvAddCurrentTaskToDelayedList>:
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 80099c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 80099c6:	4b15      	ldr	r3, [pc, #84]	; (8009a1c <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80099c8:	4e15      	ldr	r6, [pc, #84]	; (8009a20 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 80099ca:	681d      	ldr	r5, [r3, #0]
{
 80099cc:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80099ce:	6830      	ldr	r0, [r6, #0]
 80099d0:	3004      	adds	r0, #4
{
 80099d2:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80099d4:	f7ff f8bd 	bl	8008b52 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 80099d8:	1c63      	adds	r3, r4, #1
 80099da:	d107      	bne.n	80099ec <prvAddCurrentTaskToDelayedList+0x28>
 80099dc:	b137      	cbz	r7, 80099ec <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80099de:	6831      	ldr	r1, [r6, #0]
 80099e0:	4810      	ldr	r0, [pc, #64]	; (8009a24 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 80099e2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80099e6:	3104      	adds	r1, #4
 80099e8:	f7ff b890 	b.w	8008b0c <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 80099ec:	6833      	ldr	r3, [r6, #0]
 80099ee:	192c      	adds	r4, r5, r4
 80099f0:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 80099f2:	d307      	bcc.n	8009a04 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80099f4:	4b0c      	ldr	r3, [pc, #48]	; (8009a28 <prvAddCurrentTaskToDelayedList+0x64>)
 80099f6:	6818      	ldr	r0, [r3, #0]
 80099f8:	6831      	ldr	r1, [r6, #0]
}
 80099fa:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80099fe:	3104      	adds	r1, #4
 8009a00:	f7ff b890 	b.w	8008b24 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009a04:	4b09      	ldr	r3, [pc, #36]	; (8009a2c <prvAddCurrentTaskToDelayedList+0x68>)
 8009a06:	6818      	ldr	r0, [r3, #0]
 8009a08:	6831      	ldr	r1, [r6, #0]
 8009a0a:	3104      	adds	r1, #4
 8009a0c:	f7ff f88a 	bl	8008b24 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8009a10:	4b07      	ldr	r3, [pc, #28]	; (8009a30 <prvAddCurrentTaskToDelayedList+0x6c>)
 8009a12:	681a      	ldr	r2, [r3, #0]
 8009a14:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 8009a16:	bf88      	it	hi
 8009a18:	601c      	strhi	r4, [r3, #0]
}
 8009a1a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009a1c:	2001546c 	.word	0x2001546c
 8009a20:	20014f78 	.word	0x20014f78
 8009a24:	20015444 	.word	0x20015444
 8009a28:	20014f80 	.word	0x20014f80
 8009a2c:	20014f7c 	.word	0x20014f7c
 8009a30:	20015424 	.word	0x20015424

08009a34 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009a34:	4a06      	ldr	r2, [pc, #24]	; (8009a50 <prvResetNextTaskUnblockTime+0x1c>)
 8009a36:	6813      	ldr	r3, [r2, #0]
 8009a38:	6819      	ldr	r1, [r3, #0]
 8009a3a:	4b06      	ldr	r3, [pc, #24]	; (8009a54 <prvResetNextTaskUnblockTime+0x20>)
 8009a3c:	b919      	cbnz	r1, 8009a46 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 8009a3e:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8009a42:	601a      	str	r2, [r3, #0]
}
 8009a44:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009a46:	6812      	ldr	r2, [r2, #0]
 8009a48:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8009a4a:	68d2      	ldr	r2, [r2, #12]
 8009a4c:	6852      	ldr	r2, [r2, #4]
 8009a4e:	e7f8      	b.n	8009a42 <prvResetNextTaskUnblockTime+0xe>
 8009a50:	20014f7c 	.word	0x20014f7c
 8009a54:	20015424 	.word	0x20015424

08009a58 <prvDeleteTCB>:
	{
 8009a58:	b510      	push	{r4, lr}
 8009a5a:	4604      	mov	r4, r0
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 8009a5c:	3058      	adds	r0, #88	; 0x58
 8009a5e:	f017 fc31 	bl	80212c4 <_reclaim_reent>
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8009a62:	f894 30bd 	ldrb.w	r3, [r4, #189]	; 0xbd
 8009a66:	b93b      	cbnz	r3, 8009a78 <prvDeleteTCB+0x20>
				vPortFree( pxTCB->pxStack );
 8009a68:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8009a6a:	f7ff f809 	bl	8008a80 <vPortFree>
				vPortFree( pxTCB );
 8009a6e:	4620      	mov	r0, r4
	}
 8009a70:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 8009a74:	f7ff b804 	b.w	8008a80 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8009a78:	2b01      	cmp	r3, #1
 8009a7a:	d0f8      	beq.n	8009a6e <prvDeleteTCB+0x16>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8009a7c:	2b02      	cmp	r3, #2
 8009a7e:	d008      	beq.n	8009a92 <prvDeleteTCB+0x3a>
 8009a80:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009a84:	f383 8811 	msr	BASEPRI, r3
 8009a88:	f3bf 8f6f 	isb	sy
 8009a8c:	f3bf 8f4f 	dsb	sy
 8009a90:	e7fe      	b.n	8009a90 <prvDeleteTCB+0x38>
	}
 8009a92:	bd10      	pop	{r4, pc}

08009a94 <prvIdleTask>:
{
 8009a94:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009a96:	4c13      	ldr	r4, [pc, #76]	; (8009ae4 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009a98:	4f13      	ldr	r7, [pc, #76]	; (8009ae8 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 8009a9a:	4d14      	ldr	r5, [pc, #80]	; (8009aec <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009a9c:	6823      	ldr	r3, [r4, #0]
 8009a9e:	b973      	cbnz	r3, 8009abe <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8009aa0:	4b13      	ldr	r3, [pc, #76]	; (8009af0 <prvIdleTask+0x5c>)
 8009aa2:	681b      	ldr	r3, [r3, #0]
 8009aa4:	2b01      	cmp	r3, #1
 8009aa6:	d9f8      	bls.n	8009a9a <prvIdleTask+0x6>
				taskYIELD();
 8009aa8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009aac:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009ab0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009ab4:	f3bf 8f4f 	dsb	sy
 8009ab8:	f3bf 8f6f 	isb	sy
 8009abc:	e7ed      	b.n	8009a9a <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 8009abe:	f7ff f8c1 	bl	8008c44 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009ac2:	68fb      	ldr	r3, [r7, #12]
 8009ac4:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009ac6:	1d30      	adds	r0, r6, #4
 8009ac8:	f7ff f843 	bl	8008b52 <uxListRemove>
				--uxCurrentNumberOfTasks;
 8009acc:	682b      	ldr	r3, [r5, #0]
 8009ace:	3b01      	subs	r3, #1
 8009ad0:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8009ad2:	6823      	ldr	r3, [r4, #0]
 8009ad4:	3b01      	subs	r3, #1
 8009ad6:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8009ad8:	f7ff f8d4 	bl	8008c84 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8009adc:	4630      	mov	r0, r6
 8009ade:	f7ff ffbb 	bl	8009a58 <prvDeleteTCB>
 8009ae2:	e7db      	b.n	8009a9c <prvIdleTask+0x8>
 8009ae4:	200153e8 	.word	0x200153e8
 8009ae8:	20015458 	.word	0x20015458
 8009aec:	200153e4 	.word	0x200153e4
 8009af0:	20014f84 	.word	0x20014f84

08009af4 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009af4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009af8:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009afc:	ea4f 0982 	mov.w	r9, r2, lsl #2
 8009b00:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009b02:	4606      	mov	r6, r0
 8009b04:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009b06:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8009b08:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009b0a:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009b0c:	f016 fff6 	bl	8020afc <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009b10:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8009b12:	f1a9 0904 	sub.w	r9, r9, #4
 8009b16:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8009b18:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 8009b1c:	2d00      	cmp	r5, #0
 8009b1e:	d042      	beq.n	8009ba6 <prvInitialiseNewTask.constprop.0+0xb2>
 8009b20:	1e6b      	subs	r3, r5, #1
 8009b22:	f104 0234 	add.w	r2, r4, #52	; 0x34
 8009b26:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8009b28:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8009b2c:	f802 0b01 	strb.w	r0, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 8009b30:	b108      	cbz	r0, 8009b36 <prvInitialiseNewTask.constprop.0+0x42>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8009b32:	42ab      	cmp	r3, r5
 8009b34:	d1f8      	bne.n	8009b28 <prvInitialiseNewTask.constprop.0+0x34>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8009b36:	2300      	movs	r3, #0
 8009b38:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8009b3c:	9d08      	ldr	r5, [sp, #32]
 8009b3e:	2d37      	cmp	r5, #55	; 0x37
 8009b40:	bf28      	it	cs
 8009b42:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8009b44:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8009b48:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8009b4a:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009b4c:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 8009b4e:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009b52:	f7fe ffd8 	bl	8008b06 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009b56:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8009b5a:	f104 0018 	add.w	r0, r4, #24
 8009b5e:	f7fe ffd2 	bl	8008b06 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8009b62:	f8c4 a0b8 	str.w	sl, [r4, #184]	; 0xb8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8009b66:	2260      	movs	r2, #96	; 0x60
 8009b68:	4651      	mov	r1, sl
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8009b6a:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009b6c:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8009b6e:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 8009b70:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8009b74:	f884 a0bc 	strb.w	sl, [r4, #188]	; 0xbc
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8009b78:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8009b7c:	f016 ffbe 	bl	8020afc <memset>
 8009b80:	4b0a      	ldr	r3, [pc, #40]	; (8009bac <prvInitialiseNewTask.constprop.0+0xb8>)
 8009b82:	65e3      	str	r3, [r4, #92]	; 0x5c
 8009b84:	4b0a      	ldr	r3, [pc, #40]	; (8009bb0 <prvInitialiseNewTask.constprop.0+0xbc>)
 8009b86:	6623      	str	r3, [r4, #96]	; 0x60
 8009b88:	4b0a      	ldr	r3, [pc, #40]	; (8009bb4 <prvInitialiseNewTask.constprop.0+0xc0>)
 8009b8a:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8009b8c:	463a      	mov	r2, r7
 8009b8e:	4631      	mov	r1, r6
 8009b90:	4648      	mov	r0, r9
 8009b92:	f7ff f82d 	bl	8008bf0 <pxPortInitialiseStack>
 8009b96:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8009b98:	f1b8 0f00 	cmp.w	r8, #0
 8009b9c:	d001      	beq.n	8009ba2 <prvInitialiseNewTask.constprop.0+0xae>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8009b9e:	f8c8 4000 	str.w	r4, [r8]
}
 8009ba2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8009ba6:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 8009baa:	e7c7      	b.n	8009b3c <prvInitialiseNewTask.constprop.0+0x48>
 8009bac:	08024698 	.word	0x08024698
 8009bb0:	080246b8 	.word	0x080246b8
 8009bb4:	08024678 	.word	0x08024678

08009bb8 <xTaskCreateStatic>:
	{
 8009bb8:	b570      	push	{r4, r5, r6, lr}
 8009bba:	b086      	sub	sp, #24
 8009bbc:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 8009bc0:	b945      	cbnz	r5, 8009bd4 <xTaskCreateStatic+0x1c>
 8009bc2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009bc6:	f383 8811 	msr	BASEPRI, r3
 8009bca:	f3bf 8f6f 	isb	sy
 8009bce:	f3bf 8f4f 	dsb	sy
 8009bd2:	e7fe      	b.n	8009bd2 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 8009bd4:	b944      	cbnz	r4, 8009be8 <xTaskCreateStatic+0x30>
 8009bd6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009bda:	f383 8811 	msr	BASEPRI, r3
 8009bde:	f3bf 8f6f 	isb	sy
 8009be2:	f3bf 8f4f 	dsb	sy
 8009be6:	e7fe      	b.n	8009be6 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8009be8:	26c0      	movs	r6, #192	; 0xc0
 8009bea:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8009bec:	9e05      	ldr	r6, [sp, #20]
 8009bee:	2ec0      	cmp	r6, #192	; 0xc0
 8009bf0:	d008      	beq.n	8009c04 <xTaskCreateStatic+0x4c>
 8009bf2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009bf6:	f383 8811 	msr	BASEPRI, r3
 8009bfa:	f3bf 8f6f 	isb	sy
 8009bfe:	f3bf 8f4f 	dsb	sy
 8009c02:	e7fe      	b.n	8009c02 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8009c04:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8009c06:	2502      	movs	r5, #2
 8009c08:	f884 50bd 	strb.w	r5, [r4, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009c0c:	ad04      	add	r5, sp, #16
 8009c0e:	9501      	str	r5, [sp, #4]
 8009c10:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8009c12:	9402      	str	r4, [sp, #8]
 8009c14:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8009c16:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009c18:	f7ff ff6c 	bl	8009af4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009c1c:	4620      	mov	r0, r4
 8009c1e:	f7ff fe51 	bl	80098c4 <prvAddNewTaskToReadyList>
	}
 8009c22:	9804      	ldr	r0, [sp, #16]
 8009c24:	b006      	add	sp, #24
 8009c26:	bd70      	pop	{r4, r5, r6, pc}

08009c28 <xTaskCreate>:
	{
 8009c28:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009c2c:	4607      	mov	r7, r0
 8009c2e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009c30:	0090      	lsls	r0, r2, #2
	{
 8009c32:	4688      	mov	r8, r1
 8009c34:	4616      	mov	r6, r2
 8009c36:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009c38:	f7fe fe90 	bl	800895c <pvPortMalloc>
			if( pxStack != NULL )
 8009c3c:	4605      	mov	r5, r0
 8009c3e:	b1e8      	cbz	r0, 8009c7c <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8009c40:	20c0      	movs	r0, #192	; 0xc0
 8009c42:	f7fe fe8b 	bl	800895c <pvPortMalloc>
				if( pxNewTCB != NULL )
 8009c46:	4604      	mov	r4, r0
 8009c48:	b1a8      	cbz	r0, 8009c76 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8009c4a:	2300      	movs	r3, #0
 8009c4c:	f880 30bd 	strb.w	r3, [r0, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009c50:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 8009c52:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009c54:	9301      	str	r3, [sp, #4]
 8009c56:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8009c58:	9002      	str	r0, [sp, #8]
 8009c5a:	9300      	str	r3, [sp, #0]
 8009c5c:	4632      	mov	r2, r6
 8009c5e:	464b      	mov	r3, r9
 8009c60:	4641      	mov	r1, r8
 8009c62:	4638      	mov	r0, r7
 8009c64:	f7ff ff46 	bl	8009af4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009c68:	4620      	mov	r0, r4
 8009c6a:	f7ff fe2b 	bl	80098c4 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8009c6e:	2001      	movs	r0, #1
	}
 8009c70:	b005      	add	sp, #20
 8009c72:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 8009c76:	4628      	mov	r0, r5
 8009c78:	f7fe ff02 	bl	8008a80 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8009c7c:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 8009c80:	e7f6      	b.n	8009c70 <xTaskCreate+0x48>
	...

08009c84 <vTaskStartScheduler>:
{
 8009c84:	b510      	push	{r4, lr}
 8009c86:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8009c88:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009c8a:	aa07      	add	r2, sp, #28
 8009c8c:	a906      	add	r1, sp, #24
 8009c8e:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8009c90:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009c94:	f7fe fe26 	bl	80088e4 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8009c98:	9b05      	ldr	r3, [sp, #20]
 8009c9a:	9302      	str	r3, [sp, #8]
 8009c9c:	9b06      	ldr	r3, [sp, #24]
 8009c9e:	9a07      	ldr	r2, [sp, #28]
 8009ca0:	4919      	ldr	r1, [pc, #100]	; (8009d08 <vTaskStartScheduler+0x84>)
 8009ca2:	481a      	ldr	r0, [pc, #104]	; (8009d0c <vTaskStartScheduler+0x88>)
 8009ca4:	e9cd 4300 	strd	r4, r3, [sp]
 8009ca8:	4623      	mov	r3, r4
 8009caa:	f7ff ff85 	bl	8009bb8 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8009cae:	b340      	cbz	r0, 8009d02 <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 8009cb0:	f000 fbc4 	bl	800a43c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8009cb4:	2801      	cmp	r0, #1
 8009cb6:	d119      	bne.n	8009cec <vTaskStartScheduler+0x68>
 8009cb8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009cbc:	f383 8811 	msr	BASEPRI, r3
 8009cc0:	f3bf 8f6f 	isb	sy
 8009cc4:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8009cc8:	4b11      	ldr	r3, [pc, #68]	; (8009d10 <vTaskStartScheduler+0x8c>)
 8009cca:	4a12      	ldr	r2, [pc, #72]	; (8009d14 <vTaskStartScheduler+0x90>)
 8009ccc:	681b      	ldr	r3, [r3, #0]
 8009cce:	3358      	adds	r3, #88	; 0x58
 8009cd0:	6013      	str	r3, [r2, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 8009cd2:	4b11      	ldr	r3, [pc, #68]	; (8009d18 <vTaskStartScheduler+0x94>)
 8009cd4:	f04f 32ff 	mov.w	r2, #4294967295
 8009cd8:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8009cda:	4b10      	ldr	r3, [pc, #64]	; (8009d1c <vTaskStartScheduler+0x98>)
 8009cdc:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8009cde:	4b10      	ldr	r3, [pc, #64]	; (8009d20 <vTaskStartScheduler+0x9c>)
 8009ce0:	601c      	str	r4, [r3, #0]
}
 8009ce2:	b008      	add	sp, #32
 8009ce4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 8009ce8:	f7ff b83c 	b.w	8008d64 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8009cec:	3001      	adds	r0, #1
 8009cee:	d108      	bne.n	8009d02 <vTaskStartScheduler+0x7e>
 8009cf0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009cf4:	f383 8811 	msr	BASEPRI, r3
 8009cf8:	f3bf 8f6f 	isb	sy
 8009cfc:	f3bf 8f4f 	dsb	sy
 8009d00:	e7fe      	b.n	8009d00 <vTaskStartScheduler+0x7c>
}
 8009d02:	b008      	add	sp, #32
 8009d04:	bd10      	pop	{r4, pc}
 8009d06:	bf00      	nop
 8009d08:	08023634 	.word	0x08023634
 8009d0c:	08009a95 	.word	0x08009a95
 8009d10:	20014f78 	.word	0x20014f78
 8009d14:	20000104 	.word	0x20000104
 8009d18:	20015424 	.word	0x20015424
 8009d1c:	20015440 	.word	0x20015440
 8009d20:	2001546c 	.word	0x2001546c

08009d24 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8009d24:	4a02      	ldr	r2, [pc, #8]	; (8009d30 <vTaskSuspendAll+0xc>)
 8009d26:	6813      	ldr	r3, [r2, #0]
 8009d28:	3301      	adds	r3, #1
 8009d2a:	6013      	str	r3, [r2, #0]
}
 8009d2c:	4770      	bx	lr
 8009d2e:	bf00      	nop
 8009d30:	200153f0 	.word	0x200153f0

08009d34 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8009d34:	4b01      	ldr	r3, [pc, #4]	; (8009d3c <xTaskGetTickCount+0x8>)
 8009d36:	6818      	ldr	r0, [r3, #0]
}
 8009d38:	4770      	bx	lr
 8009d3a:	bf00      	nop
 8009d3c:	2001546c 	.word	0x2001546c

08009d40 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009d40:	4b3f      	ldr	r3, [pc, #252]	; (8009e40 <xTaskIncrementTick+0x100>)
 8009d42:	681b      	ldr	r3, [r3, #0]
{
 8009d44:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009d48:	2b00      	cmp	r3, #0
 8009d4a:	d173      	bne.n	8009e34 <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8009d4c:	4b3d      	ldr	r3, [pc, #244]	; (8009e44 <xTaskIncrementTick+0x104>)
 8009d4e:	681d      	ldr	r5, [r3, #0]
 8009d50:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 8009d52:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8009d54:	b9bd      	cbnz	r5, 8009d86 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 8009d56:	4b3c      	ldr	r3, [pc, #240]	; (8009e48 <xTaskIncrementTick+0x108>)
 8009d58:	681a      	ldr	r2, [r3, #0]
 8009d5a:	6812      	ldr	r2, [r2, #0]
 8009d5c:	b142      	cbz	r2, 8009d70 <xTaskIncrementTick+0x30>
 8009d5e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d62:	f383 8811 	msr	BASEPRI, r3
 8009d66:	f3bf 8f6f 	isb	sy
 8009d6a:	f3bf 8f4f 	dsb	sy
 8009d6e:	e7fe      	b.n	8009d6e <xTaskIncrementTick+0x2e>
 8009d70:	4a36      	ldr	r2, [pc, #216]	; (8009e4c <xTaskIncrementTick+0x10c>)
 8009d72:	6819      	ldr	r1, [r3, #0]
 8009d74:	6810      	ldr	r0, [r2, #0]
 8009d76:	6018      	str	r0, [r3, #0]
 8009d78:	6011      	str	r1, [r2, #0]
 8009d7a:	4a35      	ldr	r2, [pc, #212]	; (8009e50 <xTaskIncrementTick+0x110>)
 8009d7c:	6813      	ldr	r3, [r2, #0]
 8009d7e:	3301      	adds	r3, #1
 8009d80:	6013      	str	r3, [r2, #0]
 8009d82:	f7ff fe57 	bl	8009a34 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009d86:	4e33      	ldr	r6, [pc, #204]	; (8009e54 <xTaskIncrementTick+0x114>)
 8009d88:	4f33      	ldr	r7, [pc, #204]	; (8009e58 <xTaskIncrementTick+0x118>)
 8009d8a:	6833      	ldr	r3, [r6, #0]
 8009d8c:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 8009e64 <xTaskIncrementTick+0x124>
 8009d90:	42ab      	cmp	r3, r5
BaseType_t xSwitchRequired = pdFALSE;
 8009d92:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009d96:	d911      	bls.n	8009dbc <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8009d98:	f8d8 3000 	ldr.w	r3, [r8]
 8009d9c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009d9e:	2214      	movs	r2, #20
 8009da0:	4353      	muls	r3, r2
 8009da2:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 8009da4:	2b02      	cmp	r3, #2
 8009da6:	bf28      	it	cs
 8009da8:	2401      	movcs	r4, #1
		if( xYieldPending != pdFALSE )
 8009daa:	4b2c      	ldr	r3, [pc, #176]	; (8009e5c <xTaskIncrementTick+0x11c>)
 8009dac:	681b      	ldr	r3, [r3, #0]
			xSwitchRequired = pdTRUE;
 8009dae:	2b00      	cmp	r3, #0
}
 8009db0:	bf0c      	ite	eq
 8009db2:	4620      	moveq	r0, r4
 8009db4:	2001      	movne	r0, #1
 8009db6:	b003      	add	sp, #12
 8009db8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009dbc:	f8df 9088 	ldr.w	r9, [pc, #136]	; 8009e48 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 8009dc0:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 8009e68 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009dc4:	f8d9 3000 	ldr.w	r3, [r9]
 8009dc8:	681b      	ldr	r3, [r3, #0]
 8009dca:	b91b      	cbnz	r3, 8009dd4 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009dcc:	f04f 33ff 	mov.w	r3, #4294967295
 8009dd0:	6033      	str	r3, [r6, #0]
					break;
 8009dd2:	e7e1      	b.n	8009d98 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009dd4:	f8d9 3000 	ldr.w	r3, [r9]
 8009dd8:	68db      	ldr	r3, [r3, #12]
 8009dda:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8009dde:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 8009de2:	4295      	cmp	r5, r2
 8009de4:	d201      	bcs.n	8009dea <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 8009de6:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8009de8:	e7d6      	b.n	8009d98 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009dea:	f10b 0104 	add.w	r1, fp, #4
 8009dee:	4608      	mov	r0, r1
 8009df0:	9101      	str	r1, [sp, #4]
 8009df2:	f7fe feae 	bl	8008b52 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8009df6:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 8009dfa:	9901      	ldr	r1, [sp, #4]
 8009dfc:	b122      	cbz	r2, 8009e08 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009dfe:	f10b 0018 	add.w	r0, fp, #24
 8009e02:	f7fe fea6 	bl	8008b52 <uxListRemove>
 8009e06:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 8009e08:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 8009e0c:	f8da 2000 	ldr.w	r2, [sl]
 8009e10:	2314      	movs	r3, #20
 8009e12:	4290      	cmp	r0, r2
 8009e14:	bf88      	it	hi
 8009e16:	f8ca 0000 	strhi.w	r0, [sl]
 8009e1a:	fb03 7000 	mla	r0, r3, r0, r7
 8009e1e:	f7fe fe75 	bl	8008b0c <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009e22:	f8d8 1000 	ldr.w	r1, [r8]
 8009e26:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 8009e2a:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 8009e2c:	429a      	cmp	r2, r3
 8009e2e:	bf28      	it	cs
 8009e30:	2401      	movcs	r4, #1
 8009e32:	e7c7      	b.n	8009dc4 <xTaskIncrementTick+0x84>
		++uxPendedTicks;
 8009e34:	4a0a      	ldr	r2, [pc, #40]	; (8009e60 <xTaskIncrementTick+0x120>)
 8009e36:	6813      	ldr	r3, [r2, #0]
 8009e38:	3301      	adds	r3, #1
 8009e3a:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8009e3c:	2400      	movs	r4, #0
 8009e3e:	e7b4      	b.n	8009daa <xTaskIncrementTick+0x6a>
 8009e40:	200153f0 	.word	0x200153f0
 8009e44:	2001546c 	.word	0x2001546c
 8009e48:	20014f7c 	.word	0x20014f7c
 8009e4c:	20014f80 	.word	0x20014f80
 8009e50:	20015428 	.word	0x20015428
 8009e54:	20015424 	.word	0x20015424
 8009e58:	20014f84 	.word	0x20014f84
 8009e5c:	20015470 	.word	0x20015470
 8009e60:	200153ec 	.word	0x200153ec
 8009e64:	20014f78 	.word	0x20014f78
 8009e68:	200153f8 	.word	0x200153f8

08009e6c <xTaskResumeAll>:
{
 8009e6c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 8009e6e:	4c31      	ldr	r4, [pc, #196]	; (8009f34 <xTaskResumeAll+0xc8>)
 8009e70:	6823      	ldr	r3, [r4, #0]
 8009e72:	b943      	cbnz	r3, 8009e86 <xTaskResumeAll+0x1a>
 8009e74:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009e78:	f383 8811 	msr	BASEPRI, r3
 8009e7c:	f3bf 8f6f 	isb	sy
 8009e80:	f3bf 8f4f 	dsb	sy
 8009e84:	e7fe      	b.n	8009e84 <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 8009e86:	f7fe fedd 	bl	8008c44 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8009e8a:	6823      	ldr	r3, [r4, #0]
 8009e8c:	3b01      	subs	r3, #1
 8009e8e:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009e90:	6824      	ldr	r4, [r4, #0]
 8009e92:	b12c      	cbz	r4, 8009ea0 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 8009e94:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8009e96:	f7fe fef5 	bl	8008c84 <vPortExitCritical>
}
 8009e9a:	4620      	mov	r0, r4
 8009e9c:	b003      	add	sp, #12
 8009e9e:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8009ea0:	4b25      	ldr	r3, [pc, #148]	; (8009f38 <xTaskResumeAll+0xcc>)
 8009ea2:	681b      	ldr	r3, [r3, #0]
 8009ea4:	2b00      	cmp	r3, #0
 8009ea6:	d0f5      	beq.n	8009e94 <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009ea8:	4d24      	ldr	r5, [pc, #144]	; (8009f3c <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 8009eaa:	4e25      	ldr	r6, [pc, #148]	; (8009f40 <xTaskResumeAll+0xd4>)
 8009eac:	4f25      	ldr	r7, [pc, #148]	; (8009f44 <xTaskResumeAll+0xd8>)
 8009eae:	e01e      	b.n	8009eee <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009eb0:	68eb      	ldr	r3, [r5, #12]
 8009eb2:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009eb4:	f104 0018 	add.w	r0, r4, #24
 8009eb8:	f7fe fe4b 	bl	8008b52 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009ebc:	1d21      	adds	r1, r4, #4
 8009ebe:	4608      	mov	r0, r1
 8009ec0:	9101      	str	r1, [sp, #4]
 8009ec2:	f7fe fe46 	bl	8008b52 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8009ec6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009ec8:	6832      	ldr	r2, [r6, #0]
 8009eca:	9901      	ldr	r1, [sp, #4]
 8009ecc:	2014      	movs	r0, #20
 8009ece:	4293      	cmp	r3, r2
 8009ed0:	fb00 7003 	mla	r0, r0, r3, r7
 8009ed4:	bf88      	it	hi
 8009ed6:	6033      	strhi	r3, [r6, #0]
 8009ed8:	f7fe fe18 	bl	8008b0c <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009edc:	4b1a      	ldr	r3, [pc, #104]	; (8009f48 <xTaskResumeAll+0xdc>)
 8009ede:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8009ee0:	681b      	ldr	r3, [r3, #0]
 8009ee2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009ee4:	429a      	cmp	r2, r3
 8009ee6:	d302      	bcc.n	8009eee <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 8009ee8:	4b18      	ldr	r3, [pc, #96]	; (8009f4c <xTaskResumeAll+0xe0>)
 8009eea:	2201      	movs	r2, #1
 8009eec:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009eee:	682b      	ldr	r3, [r5, #0]
 8009ef0:	2b00      	cmp	r3, #0
 8009ef2:	d1dd      	bne.n	8009eb0 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 8009ef4:	b10c      	cbz	r4, 8009efa <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 8009ef6:	f7ff fd9d 	bl	8009a34 <prvResetNextTaskUnblockTime>
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 8009efa:	4d15      	ldr	r5, [pc, #84]	; (8009f50 <xTaskResumeAll+0xe4>)
 8009efc:	682c      	ldr	r4, [r5, #0]
					if( uxPendedCounts > ( UBaseType_t ) 0U )
 8009efe:	b144      	cbz	r4, 8009f12 <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 8009f00:	4e12      	ldr	r6, [pc, #72]	; (8009f4c <xTaskResumeAll+0xe0>)
 8009f02:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8009f04:	f7ff ff1c 	bl	8009d40 <xTaskIncrementTick>
 8009f08:	b100      	cbz	r0, 8009f0c <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 8009f0a:	6037      	str	r7, [r6, #0]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 8009f0c:	3c01      	subs	r4, #1
 8009f0e:	d1f9      	bne.n	8009f04 <xTaskResumeAll+0x98>
						uxPendedTicks = 0;
 8009f10:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8009f12:	4b0e      	ldr	r3, [pc, #56]	; (8009f4c <xTaskResumeAll+0xe0>)
 8009f14:	681b      	ldr	r3, [r3, #0]
 8009f16:	2b00      	cmp	r3, #0
 8009f18:	d0bc      	beq.n	8009e94 <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 8009f1a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009f1e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009f22:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009f26:	f3bf 8f4f 	dsb	sy
 8009f2a:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8009f2e:	2401      	movs	r4, #1
 8009f30:	e7b1      	b.n	8009e96 <xTaskResumeAll+0x2a>
 8009f32:	bf00      	nop
 8009f34:	200153f0 	.word	0x200153f0
 8009f38:	200153e4 	.word	0x200153e4
 8009f3c:	2001542c 	.word	0x2001542c
 8009f40:	200153f8 	.word	0x200153f8
 8009f44:	20014f84 	.word	0x20014f84
 8009f48:	20014f78 	.word	0x20014f78
 8009f4c:	20015470 	.word	0x20015470
 8009f50:	200153ec 	.word	0x200153ec

08009f54 <vTaskDelay>:
	{
 8009f54:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 8009f56:	b950      	cbnz	r0, 8009f6e <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8009f58:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009f5c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009f60:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009f64:	f3bf 8f4f 	dsb	sy
 8009f68:	f3bf 8f6f 	isb	sy
	}
 8009f6c:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8009f6e:	4b0a      	ldr	r3, [pc, #40]	; (8009f98 <vTaskDelay+0x44>)
 8009f70:	6819      	ldr	r1, [r3, #0]
 8009f72:	b141      	cbz	r1, 8009f86 <vTaskDelay+0x32>
 8009f74:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009f78:	f383 8811 	msr	BASEPRI, r3
 8009f7c:	f3bf 8f6f 	isb	sy
 8009f80:	f3bf 8f4f 	dsb	sy
 8009f84:	e7fe      	b.n	8009f84 <vTaskDelay+0x30>
			vTaskSuspendAll();
 8009f86:	f7ff fecd 	bl	8009d24 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8009f8a:	f7ff fd1b 	bl	80099c4 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 8009f8e:	f7ff ff6d 	bl	8009e6c <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 8009f92:	2800      	cmp	r0, #0
 8009f94:	d0e0      	beq.n	8009f58 <vTaskDelay+0x4>
 8009f96:	e7e9      	b.n	8009f6c <vTaskDelay+0x18>
 8009f98:	200153f0 	.word	0x200153f0

08009f9c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8009f9c:	4b19      	ldr	r3, [pc, #100]	; (800a004 <vTaskSwitchContext+0x68>)
 8009f9e:	681a      	ldr	r2, [r3, #0]
 8009fa0:	4b19      	ldr	r3, [pc, #100]	; (800a008 <vTaskSwitchContext+0x6c>)
{
 8009fa2:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8009fa4:	b112      	cbz	r2, 8009fac <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8009fa6:	2201      	movs	r2, #1
 8009fa8:	601a      	str	r2, [r3, #0]
}
 8009faa:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009fac:	4d17      	ldr	r5, [pc, #92]	; (800a00c <vTaskSwitchContext+0x70>)
		xYieldPending = pdFALSE;
 8009fae:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009fb0:	682a      	ldr	r2, [r5, #0]
 8009fb2:	4917      	ldr	r1, [pc, #92]	; (800a010 <vTaskSwitchContext+0x74>)
 8009fb4:	2614      	movs	r6, #20
 8009fb6:	fb06 f302 	mul.w	r3, r6, r2
 8009fba:	18c8      	adds	r0, r1, r3
 8009fbc:	58cc      	ldr	r4, [r1, r3]
 8009fbe:	b1ac      	cbz	r4, 8009fec <vTaskSwitchContext+0x50>
 8009fc0:	6844      	ldr	r4, [r0, #4]
 8009fc2:	3308      	adds	r3, #8
 8009fc4:	6864      	ldr	r4, [r4, #4]
 8009fc6:	6044      	str	r4, [r0, #4]
 8009fc8:	440b      	add	r3, r1
 8009fca:	429c      	cmp	r4, r3
 8009fcc:	bf04      	itt	eq
 8009fce:	6863      	ldreq	r3, [r4, #4]
 8009fd0:	6043      	streq	r3, [r0, #4]
 8009fd2:	2314      	movs	r3, #20
 8009fd4:	fb03 1102 	mla	r1, r3, r2, r1
 8009fd8:	684b      	ldr	r3, [r1, #4]
 8009fda:	68d9      	ldr	r1, [r3, #12]
 8009fdc:	4b0d      	ldr	r3, [pc, #52]	; (800a014 <vTaskSwitchContext+0x78>)
 8009fde:	6019      	str	r1, [r3, #0]
 8009fe0:	602a      	str	r2, [r5, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8009fe2:	681b      	ldr	r3, [r3, #0]
 8009fe4:	4a0c      	ldr	r2, [pc, #48]	; (800a018 <vTaskSwitchContext+0x7c>)
 8009fe6:	3358      	adds	r3, #88	; 0x58
 8009fe8:	6013      	str	r3, [r2, #0]
}
 8009fea:	e7de      	b.n	8009faa <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009fec:	b942      	cbnz	r2, 800a000 <vTaskSwitchContext+0x64>
 8009fee:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009ff2:	f383 8811 	msr	BASEPRI, r3
 8009ff6:	f3bf 8f6f 	isb	sy
 8009ffa:	f3bf 8f4f 	dsb	sy
 8009ffe:	e7fe      	b.n	8009ffe <vTaskSwitchContext+0x62>
 800a000:	3a01      	subs	r2, #1
 800a002:	e7d8      	b.n	8009fb6 <vTaskSwitchContext+0x1a>
 800a004:	200153f0 	.word	0x200153f0
 800a008:	20015470 	.word	0x20015470
 800a00c:	200153f8 	.word	0x200153f8
 800a010:	20014f84 	.word	0x20014f84
 800a014:	20014f78 	.word	0x20014f78
 800a018:	20000104 	.word	0x20000104

0800a01c <vTaskPlaceOnEventList>:
{
 800a01c:	b510      	push	{r4, lr}
 800a01e:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 800a020:	b940      	cbnz	r0, 800a034 <vTaskPlaceOnEventList+0x18>
 800a022:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a026:	f383 8811 	msr	BASEPRI, r3
 800a02a:	f3bf 8f6f 	isb	sy
 800a02e:	f3bf 8f4f 	dsb	sy
 800a032:	e7fe      	b.n	800a032 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a034:	4b05      	ldr	r3, [pc, #20]	; (800a04c <vTaskPlaceOnEventList+0x30>)
 800a036:	6819      	ldr	r1, [r3, #0]
 800a038:	3118      	adds	r1, #24
 800a03a:	f7fe fd73 	bl	8008b24 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a03e:	4620      	mov	r0, r4
 800a040:	2101      	movs	r1, #1
}
 800a042:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a046:	f7ff bcbd 	b.w	80099c4 <prvAddCurrentTaskToDelayedList>
 800a04a:	bf00      	nop
 800a04c:	20014f78 	.word	0x20014f78

0800a050 <vTaskPlaceOnEventListRestricted>:
	{
 800a050:	b538      	push	{r3, r4, r5, lr}
 800a052:	460d      	mov	r5, r1
 800a054:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800a056:	b940      	cbnz	r0, 800a06a <vTaskPlaceOnEventListRestricted+0x1a>
 800a058:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a05c:	f383 8811 	msr	BASEPRI, r3
 800a060:	f3bf 8f6f 	isb	sy
 800a064:	f3bf 8f4f 	dsb	sy
 800a068:	e7fe      	b.n	800a068 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a06a:	4b07      	ldr	r3, [pc, #28]	; (800a088 <vTaskPlaceOnEventListRestricted+0x38>)
 800a06c:	6819      	ldr	r1, [r3, #0]
 800a06e:	3118      	adds	r1, #24
 800a070:	f7fe fd4c 	bl	8008b0c <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800a074:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a076:	4621      	mov	r1, r4
 800a078:	bf0c      	ite	eq
 800a07a:	4628      	moveq	r0, r5
 800a07c:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800a080:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a084:	f7ff bc9e 	b.w	80099c4 <prvAddCurrentTaskToDelayedList>
 800a088:	20014f78 	.word	0x20014f78

0800a08c <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a08c:	68c3      	ldr	r3, [r0, #12]
{
 800a08e:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a090:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800a092:	b944      	cbnz	r4, 800a0a6 <xTaskRemoveFromEventList+0x1a>
 800a094:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a098:	f383 8811 	msr	BASEPRI, r3
 800a09c:	f3bf 8f6f 	isb	sy
 800a0a0:	f3bf 8f4f 	dsb	sy
 800a0a4:	e7fe      	b.n	800a0a4 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800a0a6:	f104 0118 	add.w	r1, r4, #24
 800a0aa:	4608      	mov	r0, r1
 800a0ac:	9101      	str	r1, [sp, #4]
 800a0ae:	f7fe fd50 	bl	8008b52 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a0b2:	4b12      	ldr	r3, [pc, #72]	; (800a0fc <xTaskRemoveFromEventList+0x70>)
 800a0b4:	9901      	ldr	r1, [sp, #4]
 800a0b6:	681b      	ldr	r3, [r3, #0]
 800a0b8:	b9eb      	cbnz	r3, 800a0f6 <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800a0ba:	1d21      	adds	r1, r4, #4
 800a0bc:	4608      	mov	r0, r1
 800a0be:	9101      	str	r1, [sp, #4]
 800a0c0:	f7fe fd47 	bl	8008b52 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800a0c4:	4a0e      	ldr	r2, [pc, #56]	; (800a100 <xTaskRemoveFromEventList+0x74>)
 800a0c6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a0c8:	6810      	ldr	r0, [r2, #0]
 800a0ca:	9901      	ldr	r1, [sp, #4]
 800a0cc:	4283      	cmp	r3, r0
 800a0ce:	bf88      	it	hi
 800a0d0:	6013      	strhi	r3, [r2, #0]
 800a0d2:	4a0c      	ldr	r2, [pc, #48]	; (800a104 <xTaskRemoveFromEventList+0x78>)
 800a0d4:	2014      	movs	r0, #20
 800a0d6:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800a0da:	f7fe fd17 	bl	8008b0c <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800a0de:	4b0a      	ldr	r3, [pc, #40]	; (800a108 <xTaskRemoveFromEventList+0x7c>)
 800a0e0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a0e2:	681b      	ldr	r3, [r3, #0]
 800a0e4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a0e6:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800a0e8:	bf85      	ittet	hi
 800a0ea:	4b08      	ldrhi	r3, [pc, #32]	; (800a10c <xTaskRemoveFromEventList+0x80>)
 800a0ec:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800a0ee:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800a0f0:	6018      	strhi	r0, [r3, #0]
}
 800a0f2:	b002      	add	sp, #8
 800a0f4:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800a0f6:	4806      	ldr	r0, [pc, #24]	; (800a110 <xTaskRemoveFromEventList+0x84>)
 800a0f8:	e7ef      	b.n	800a0da <xTaskRemoveFromEventList+0x4e>
 800a0fa:	bf00      	nop
 800a0fc:	200153f0 	.word	0x200153f0
 800a100:	200153f8 	.word	0x200153f8
 800a104:	20014f84 	.word	0x20014f84
 800a108:	20014f78 	.word	0x20014f78
 800a10c:	20015470 	.word	0x20015470
 800a110:	2001542c 	.word	0x2001542c

0800a114 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800a114:	4b03      	ldr	r3, [pc, #12]	; (800a124 <vTaskInternalSetTimeOutState+0x10>)
 800a116:	681b      	ldr	r3, [r3, #0]
 800a118:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800a11a:	4b03      	ldr	r3, [pc, #12]	; (800a128 <vTaskInternalSetTimeOutState+0x14>)
 800a11c:	681b      	ldr	r3, [r3, #0]
 800a11e:	6043      	str	r3, [r0, #4]
}
 800a120:	4770      	bx	lr
 800a122:	bf00      	nop
 800a124:	20015428 	.word	0x20015428
 800a128:	2001546c 	.word	0x2001546c

0800a12c <xTaskCheckForTimeOut>:
{
 800a12c:	b570      	push	{r4, r5, r6, lr}
 800a12e:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 800a130:	4605      	mov	r5, r0
 800a132:	b940      	cbnz	r0, 800a146 <xTaskCheckForTimeOut+0x1a>
 800a134:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a138:	f383 8811 	msr	BASEPRI, r3
 800a13c:	f3bf 8f6f 	isb	sy
 800a140:	f3bf 8f4f 	dsb	sy
 800a144:	e7fe      	b.n	800a144 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800a146:	b941      	cbnz	r1, 800a15a <xTaskCheckForTimeOut+0x2e>
 800a148:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a14c:	f383 8811 	msr	BASEPRI, r3
 800a150:	f3bf 8f6f 	isb	sy
 800a154:	f3bf 8f4f 	dsb	sy
 800a158:	e7fe      	b.n	800a158 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800a15a:	f7fe fd73 	bl	8008c44 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800a15e:	4b0f      	ldr	r3, [pc, #60]	; (800a19c <xTaskCheckForTimeOut+0x70>)
 800a160:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800a162:	6823      	ldr	r3, [r4, #0]
 800a164:	1c5a      	adds	r2, r3, #1
 800a166:	d010      	beq.n	800a18a <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a168:	480d      	ldr	r0, [pc, #52]	; (800a1a0 <xTaskCheckForTimeOut+0x74>)
 800a16a:	682e      	ldr	r6, [r5, #0]
 800a16c:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a16e:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a170:	4286      	cmp	r6, r0
 800a172:	d001      	beq.n	800a178 <xTaskCheckForTimeOut+0x4c>
 800a174:	428a      	cmp	r2, r1
 800a176:	d90f      	bls.n	800a198 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a178:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800a17a:	4283      	cmp	r3, r0
 800a17c:	d90a      	bls.n	800a194 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 800a17e:	1a5b      	subs	r3, r3, r1
 800a180:	4413      	add	r3, r2
 800a182:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800a184:	4628      	mov	r0, r5
 800a186:	f7ff ffc5 	bl	800a114 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800a18a:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800a18c:	f7fe fd7a 	bl	8008c84 <vPortExitCritical>
}
 800a190:	4620      	mov	r0, r4
 800a192:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 800a194:	2300      	movs	r3, #0
 800a196:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800a198:	2401      	movs	r4, #1
 800a19a:	e7f7      	b.n	800a18c <xTaskCheckForTimeOut+0x60>
 800a19c:	2001546c 	.word	0x2001546c
 800a1a0:	20015428 	.word	0x20015428

0800a1a4 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800a1a4:	4b01      	ldr	r3, [pc, #4]	; (800a1ac <vTaskMissedYield+0x8>)
 800a1a6:	2201      	movs	r2, #1
 800a1a8:	601a      	str	r2, [r3, #0]
}
 800a1aa:	4770      	bx	lr
 800a1ac:	20015470 	.word	0x20015470

0800a1b0 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800a1b0:	4b05      	ldr	r3, [pc, #20]	; (800a1c8 <xTaskGetSchedulerState+0x18>)
 800a1b2:	681b      	ldr	r3, [r3, #0]
 800a1b4:	b133      	cbz	r3, 800a1c4 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a1b6:	4b05      	ldr	r3, [pc, #20]	; (800a1cc <xTaskGetSchedulerState+0x1c>)
 800a1b8:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
 800a1ba:	2b00      	cmp	r3, #0
 800a1bc:	bf0c      	ite	eq
 800a1be:	2002      	moveq	r0, #2
 800a1c0:	2000      	movne	r0, #0
 800a1c2:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800a1c4:	2001      	movs	r0, #1
	}
 800a1c6:	4770      	bx	lr
 800a1c8:	20015440 	.word	0x20015440
 800a1cc:	200153f0 	.word	0x200153f0

0800a1d0 <xTaskPriorityInherit>:
	{
 800a1d0:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800a1d2:	4604      	mov	r4, r0
 800a1d4:	b348      	cbz	r0, 800a22a <xTaskPriorityInherit+0x5a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800a1d6:	4d1c      	ldr	r5, [pc, #112]	; (800a248 <xTaskPriorityInherit+0x78>)
 800a1d8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800a1da:	682a      	ldr	r2, [r5, #0]
 800a1dc:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800a1de:	4293      	cmp	r3, r2
 800a1e0:	d229      	bcs.n	800a236 <xTaskPriorityInherit+0x66>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a1e2:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a1e4:	4e19      	ldr	r6, [pc, #100]	; (800a24c <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a1e6:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a1e8:	bfa1      	itttt	ge
 800a1ea:	682a      	ldrge	r2, [r5, #0]
 800a1ec:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 800a1ee:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 800a1f2:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a1f4:	2214      	movs	r2, #20
 800a1f6:	fb02 6303 	mla	r3, r2, r3, r6
 800a1fa:	6942      	ldr	r2, [r0, #20]
 800a1fc:	429a      	cmp	r2, r3
 800a1fe:	d116      	bne.n	800a22e <xTaskPriorityInherit+0x5e>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a200:	1d01      	adds	r1, r0, #4
 800a202:	4608      	mov	r0, r1
 800a204:	9101      	str	r1, [sp, #4]
 800a206:	f7fe fca4 	bl	8008b52 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a20a:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a20c:	4a10      	ldr	r2, [pc, #64]	; (800a250 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a20e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a210:	6810      	ldr	r0, [r2, #0]
 800a212:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a214:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a216:	4283      	cmp	r3, r0
 800a218:	f04f 0014 	mov.w	r0, #20
 800a21c:	fb00 6003 	mla	r0, r0, r3, r6
 800a220:	bf88      	it	hi
 800a222:	6013      	strhi	r3, [r2, #0]
 800a224:	f7fe fc72 	bl	8008b0c <vListInsertEnd>
				xReturn = pdTRUE;
 800a228:	2001      	movs	r0, #1
	}
 800a22a:	b002      	add	sp, #8
 800a22c:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a22e:	682b      	ldr	r3, [r5, #0]
 800a230:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a232:	62c3      	str	r3, [r0, #44]	; 0x2c
 800a234:	e7f8      	b.n	800a228 <xTaskPriorityInherit+0x58>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800a236:	682b      	ldr	r3, [r5, #0]
 800a238:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800a23a:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 800a23c:	42a0      	cmp	r0, r4
 800a23e:	bf2c      	ite	cs
 800a240:	2000      	movcs	r0, #0
 800a242:	2001      	movcc	r0, #1
 800a244:	e7f1      	b.n	800a22a <xTaskPriorityInherit+0x5a>
 800a246:	bf00      	nop
 800a248:	20014f78 	.word	0x20014f78
 800a24c:	20014f84 	.word	0x20014f84
 800a250:	200153f8 	.word	0x200153f8

0800a254 <xTaskPriorityDisinherit>:
	{
 800a254:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 800a256:	b910      	cbnz	r0, 800a25e <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 800a258:	2000      	movs	r0, #0
	}
 800a25a:	b002      	add	sp, #8
 800a25c:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800a25e:	4b1c      	ldr	r3, [pc, #112]	; (800a2d0 <xTaskPriorityDisinherit+0x7c>)
 800a260:	681c      	ldr	r4, [r3, #0]
 800a262:	4284      	cmp	r4, r0
 800a264:	d008      	beq.n	800a278 <xTaskPriorityDisinherit+0x24>
 800a266:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a26a:	f383 8811 	msr	BASEPRI, r3
 800a26e:	f3bf 8f6f 	isb	sy
 800a272:	f3bf 8f4f 	dsb	sy
 800a276:	e7fe      	b.n	800a276 <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 800a278:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800a27a:	b943      	cbnz	r3, 800a28e <xTaskPriorityDisinherit+0x3a>
 800a27c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a280:	f383 8811 	msr	BASEPRI, r3
 800a284:	f3bf 8f6f 	isb	sy
 800a288:	f3bf 8f4f 	dsb	sy
 800a28c:	e7fe      	b.n	800a28c <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a28e:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800a290:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800a292:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a294:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800a296:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a298:	d0de      	beq.n	800a258 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800a29a:	2b00      	cmp	r3, #0
 800a29c:	d1dc      	bne.n	800a258 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a29e:	1d21      	adds	r1, r4, #4
 800a2a0:	4608      	mov	r0, r1
 800a2a2:	9101      	str	r1, [sp, #4]
 800a2a4:	f7fe fc55 	bl	8008b52 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a2a8:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800a2aa:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a2ac:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a2ae:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 800a2b2:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800a2b4:	4a07      	ldr	r2, [pc, #28]	; (800a2d4 <xTaskPriorityDisinherit+0x80>)
 800a2b6:	6810      	ldr	r0, [r2, #0]
 800a2b8:	4283      	cmp	r3, r0
 800a2ba:	bf88      	it	hi
 800a2bc:	6013      	strhi	r3, [r2, #0]
 800a2be:	4a06      	ldr	r2, [pc, #24]	; (800a2d8 <xTaskPriorityDisinherit+0x84>)
 800a2c0:	2014      	movs	r0, #20
 800a2c2:	fb00 2003 	mla	r0, r0, r3, r2
 800a2c6:	f7fe fc21 	bl	8008b0c <vListInsertEnd>
					xReturn = pdTRUE;
 800a2ca:	2001      	movs	r0, #1
		return xReturn;
 800a2cc:	e7c5      	b.n	800a25a <xTaskPriorityDisinherit+0x6>
 800a2ce:	bf00      	nop
 800a2d0:	20014f78 	.word	0x20014f78
 800a2d4:	200153f8 	.word	0x200153f8
 800a2d8:	20014f84 	.word	0x20014f84

0800a2dc <vTaskPriorityDisinheritAfterTimeout>:
	{
 800a2dc:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800a2de:	4604      	mov	r4, r0
 800a2e0:	2800      	cmp	r0, #0
 800a2e2:	d044      	beq.n	800a36e <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 800a2e4:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a2e6:	b942      	cbnz	r2, 800a2fa <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800a2e8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a2ec:	f383 8811 	msr	BASEPRI, r3
 800a2f0:	f3bf 8f6f 	isb	sy
 800a2f4:	f3bf 8f4f 	dsb	sy
 800a2f8:	e7fe      	b.n	800a2f8 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800a2fa:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 800a2fc:	4299      	cmp	r1, r3
 800a2fe:	bf38      	it	cc
 800a300:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800a302:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800a304:	428b      	cmp	r3, r1
 800a306:	d032      	beq.n	800a36e <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800a308:	2a01      	cmp	r2, #1
 800a30a:	d130      	bne.n	800a36e <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 800a30c:	4a19      	ldr	r2, [pc, #100]	; (800a374 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800a30e:	6812      	ldr	r2, [r2, #0]
 800a310:	4282      	cmp	r2, r0
 800a312:	d108      	bne.n	800a326 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800a314:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a318:	f383 8811 	msr	BASEPRI, r3
 800a31c:	f3bf 8f6f 	isb	sy
 800a320:	f3bf 8f4f 	dsb	sy
 800a324:	e7fe      	b.n	800a324 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a326:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a328:	4d13      	ldr	r5, [pc, #76]	; (800a378 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 800a32a:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a32c:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a32e:	f04f 0214 	mov.w	r2, #20
 800a332:	fb02 5303 	mla	r3, r2, r3, r5
 800a336:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a338:	bfa4      	itt	ge
 800a33a:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 800a33e:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a340:	429a      	cmp	r2, r3
 800a342:	d114      	bne.n	800a36e <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a344:	1d01      	adds	r1, r0, #4
 800a346:	4608      	mov	r0, r1
 800a348:	9101      	str	r1, [sp, #4]
 800a34a:	f7fe fc02 	bl	8008b52 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800a34e:	4a0b      	ldr	r2, [pc, #44]	; (800a37c <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 800a350:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a352:	6810      	ldr	r0, [r2, #0]
 800a354:	9901      	ldr	r1, [sp, #4]
 800a356:	4283      	cmp	r3, r0
 800a358:	f04f 0014 	mov.w	r0, #20
 800a35c:	fb00 5003 	mla	r0, r0, r3, r5
 800a360:	bf88      	it	hi
 800a362:	6013      	strhi	r3, [r2, #0]
	}
 800a364:	b003      	add	sp, #12
 800a366:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800a36a:	f7fe bbcf 	b.w	8008b0c <vListInsertEnd>
	}
 800a36e:	b003      	add	sp, #12
 800a370:	bd30      	pop	{r4, r5, pc}
 800a372:	bf00      	nop
 800a374:	20014f78 	.word	0x20014f78
 800a378:	20014f84 	.word	0x20014f84
 800a37c:	200153f8 	.word	0x200153f8

0800a380 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800a380:	4b04      	ldr	r3, [pc, #16]	; (800a394 <pvTaskIncrementMutexHeldCount+0x14>)
 800a382:	681a      	ldr	r2, [r3, #0]
 800a384:	b11a      	cbz	r2, 800a38e <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800a386:	6819      	ldr	r1, [r3, #0]
 800a388:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800a38a:	3201      	adds	r2, #1
 800a38c:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800a38e:	6818      	ldr	r0, [r3, #0]
	}
 800a390:	4770      	bx	lr
 800a392:	bf00      	nop
 800a394:	20014f78 	.word	0x20014f78

0800a398 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800a398:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800a39a:	4c11      	ldr	r4, [pc, #68]	; (800a3e0 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800a39c:	f7fe fc52 	bl	8008c44 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800a3a0:	6825      	ldr	r5, [r4, #0]
 800a3a2:	b9bd      	cbnz	r5, 800a3d4 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800a3a4:	4f0f      	ldr	r7, [pc, #60]	; (800a3e4 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800a3a6:	4e10      	ldr	r6, [pc, #64]	; (800a3e8 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800a3a8:	4638      	mov	r0, r7
 800a3aa:	f7fe fba1 	bl	8008af0 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800a3ae:	4630      	mov	r0, r6
 800a3b0:	f7fe fb9e 	bl	8008af0 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800a3b4:	4b0d      	ldr	r3, [pc, #52]	; (800a3ec <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a3b6:	4a0e      	ldr	r2, [pc, #56]	; (800a3f0 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 800a3b8:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800a3ba:	4b0e      	ldr	r3, [pc, #56]	; (800a3f4 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a3bc:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800a3be:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a3c0:	200a      	movs	r0, #10
 800a3c2:	4b0d      	ldr	r3, [pc, #52]	; (800a3f8 <prvCheckForValidListAndQueue+0x60>)
 800a3c4:	9500      	str	r5, [sp, #0]
 800a3c6:	f7fe fe4e 	bl	8009066 <xQueueGenericCreateStatic>
 800a3ca:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800a3cc:	b110      	cbz	r0, 800a3d4 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800a3ce:	490b      	ldr	r1, [pc, #44]	; (800a3fc <prvCheckForValidListAndQueue+0x64>)
 800a3d0:	f7ff fa18 	bl	8009804 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800a3d4:	b003      	add	sp, #12
 800a3d6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800a3da:	f7fe bc53 	b.w	8008c84 <vPortExitCritical>
 800a3de:	bf00      	nop
 800a3e0:	20015598 	.word	0x20015598
 800a3e4:	2001551c 	.word	0x2001551c
 800a3e8:	20015530 	.word	0x20015530
 800a3ec:	20015474 	.word	0x20015474
 800a3f0:	2001547c 	.word	0x2001547c
 800a3f4:	20015478 	.word	0x20015478
 800a3f8:	20015548 	.word	0x20015548
 800a3fc:	08023639 	.word	0x08023639

0800a400 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 800a400:	4291      	cmp	r1, r2
{
 800a402:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800a404:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a406:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800a408:	d80a      	bhi.n	800a420 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a40a:	1ad2      	subs	r2, r2, r3
 800a40c:	6983      	ldr	r3, [r0, #24]
 800a40e:	429a      	cmp	r2, r3
 800a410:	d20d      	bcs.n	800a42e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800a412:	4b08      	ldr	r3, [pc, #32]	; (800a434 <prvInsertTimerInActiveList+0x34>)
 800a414:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a416:	6818      	ldr	r0, [r3, #0]
 800a418:	f7fe fb84 	bl	8008b24 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800a41c:	2000      	movs	r0, #0
}
 800a41e:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800a420:	429a      	cmp	r2, r3
 800a422:	d201      	bcs.n	800a428 <prvInsertTimerInActiveList+0x28>
 800a424:	4299      	cmp	r1, r3
 800a426:	d202      	bcs.n	800a42e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a428:	4b03      	ldr	r3, [pc, #12]	; (800a438 <prvInsertTimerInActiveList+0x38>)
 800a42a:	1d01      	adds	r1, r0, #4
 800a42c:	e7f3      	b.n	800a416 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800a42e:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800a430:	e7f5      	b.n	800a41e <prvInsertTimerInActiveList+0x1e>
 800a432:	bf00      	nop
 800a434:	20015478 	.word	0x20015478
 800a438:	20015474 	.word	0x20015474

0800a43c <xTimerCreateTimerTask>:
{
 800a43c:	b510      	push	{r4, lr}
 800a43e:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800a440:	f7ff ffaa 	bl	800a398 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800a444:	4b12      	ldr	r3, [pc, #72]	; (800a490 <xTimerCreateTimerTask+0x54>)
 800a446:	681b      	ldr	r3, [r3, #0]
 800a448:	b1b3      	cbz	r3, 800a478 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800a44a:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a44c:	aa07      	add	r2, sp, #28
 800a44e:	a906      	add	r1, sp, #24
 800a450:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800a452:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a456:	f7fe fa51 	bl	80088fc <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800a45a:	9b05      	ldr	r3, [sp, #20]
 800a45c:	9302      	str	r3, [sp, #8]
 800a45e:	9b06      	ldr	r3, [sp, #24]
 800a460:	9301      	str	r3, [sp, #4]
 800a462:	2302      	movs	r3, #2
 800a464:	9300      	str	r3, [sp, #0]
 800a466:	9a07      	ldr	r2, [sp, #28]
 800a468:	490a      	ldr	r1, [pc, #40]	; (800a494 <xTimerCreateTimerTask+0x58>)
 800a46a:	480b      	ldr	r0, [pc, #44]	; (800a498 <xTimerCreateTimerTask+0x5c>)
 800a46c:	4623      	mov	r3, r4
 800a46e:	f7ff fba3 	bl	8009bb8 <xTaskCreateStatic>
 800a472:	4b0a      	ldr	r3, [pc, #40]	; (800a49c <xTimerCreateTimerTask+0x60>)
 800a474:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800a476:	b940      	cbnz	r0, 800a48a <xTimerCreateTimerTask+0x4e>
 800a478:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a47c:	f383 8811 	msr	BASEPRI, r3
 800a480:	f3bf 8f6f 	isb	sy
 800a484:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800a488:	e7fe      	b.n	800a488 <xTimerCreateTimerTask+0x4c>
}
 800a48a:	2001      	movs	r0, #1
 800a48c:	b008      	add	sp, #32
 800a48e:	bd10      	pop	{r4, pc}
 800a490:	20015598 	.word	0x20015598
 800a494:	0802363e 	.word	0x0802363e
 800a498:	0800a5a5 	.word	0x0800a5a5
 800a49c:	2001559c 	.word	0x2001559c

0800a4a0 <xTimerGenericCommand>:
{
 800a4a0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a4a2:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800a4a4:	4604      	mov	r4, r0
{
 800a4a6:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800a4a8:	b940      	cbnz	r0, 800a4bc <xTimerGenericCommand+0x1c>
 800a4aa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a4ae:	f383 8811 	msr	BASEPRI, r3
 800a4b2:	f3bf 8f6f 	isb	sy
 800a4b6:	f3bf 8f4f 	dsb	sy
 800a4ba:	e7fe      	b.n	800a4ba <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800a4bc:	4d0d      	ldr	r5, [pc, #52]	; (800a4f4 <xTimerGenericCommand+0x54>)
 800a4be:	6828      	ldr	r0, [r5, #0]
 800a4c0:	b180      	cbz	r0, 800a4e4 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800a4c2:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800a4c4:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800a4c8:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800a4ca:	dc0d      	bgt.n	800a4e8 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800a4cc:	f7ff fe70 	bl	800a1b0 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800a4d0:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800a4d2:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800a4d4:	bf08      	it	eq
 800a4d6:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800a4d8:	6828      	ldr	r0, [r5, #0]
 800a4da:	bf18      	it	ne
 800a4dc:	461a      	movne	r2, r3
 800a4de:	4669      	mov	r1, sp
 800a4e0:	f7fe fe76 	bl	80091d0 <xQueueGenericSend>
}
 800a4e4:	b004      	add	sp, #16
 800a4e6:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800a4e8:	2300      	movs	r3, #0
 800a4ea:	4669      	mov	r1, sp
 800a4ec:	f7fe ff23 	bl	8009336 <xQueueGenericSendFromISR>
 800a4f0:	e7f8      	b.n	800a4e4 <xTimerGenericCommand+0x44>
 800a4f2:	bf00      	nop
 800a4f4:	20015598 	.word	0x20015598

0800a4f8 <prvSampleTimeNow>:
{
 800a4f8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800a4fc:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800a5a0 <prvSampleTimeNow+0xa8>
{
 800a500:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800a502:	f7ff fc17 	bl	8009d34 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800a506:	f8d8 3000 	ldr.w	r3, [r8]
 800a50a:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 800a50c:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800a50e:	d940      	bls.n	800a592 <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800a510:	4f21      	ldr	r7, [pc, #132]	; (800a598 <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a512:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800a516:	683b      	ldr	r3, [r7, #0]
 800a518:	681a      	ldr	r2, [r3, #0]
 800a51a:	b95a      	cbnz	r2, 800a534 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 800a51c:	4a1f      	ldr	r2, [pc, #124]	; (800a59c <prvSampleTimeNow+0xa4>)
 800a51e:	6811      	ldr	r1, [r2, #0]
 800a520:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 800a522:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 800a524:	2301      	movs	r3, #1
}
 800a526:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 800a528:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800a52a:	f8c8 5000 	str.w	r5, [r8]
}
 800a52e:	b004      	add	sp, #16
 800a530:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a534:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a536:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a538:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a53c:	1d21      	adds	r1, r4, #4
 800a53e:	4608      	mov	r0, r1
 800a540:	9103      	str	r1, [sp, #12]
 800a542:	f7fe fb06 	bl	8008b52 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a546:	6a23      	ldr	r3, [r4, #32]
 800a548:	4620      	mov	r0, r4
 800a54a:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a54c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a550:	9903      	ldr	r1, [sp, #12]
 800a552:	f013 0f04 	tst.w	r3, #4
 800a556:	d0de      	beq.n	800a516 <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800a558:	69a3      	ldr	r3, [r4, #24]
 800a55a:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 800a55c:	459a      	cmp	sl, r3
 800a55e:	d205      	bcs.n	800a56c <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a560:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800a562:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a564:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a566:	f7fe fadd 	bl	8008b24 <vListInsert>
 800a56a:	e7d4      	b.n	800a516 <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a56c:	2300      	movs	r3, #0
 800a56e:	f8cd 9000 	str.w	r9, [sp]
 800a572:	4652      	mov	r2, sl
 800a574:	4619      	mov	r1, r3
 800a576:	4620      	mov	r0, r4
 800a578:	f7ff ff92 	bl	800a4a0 <xTimerGenericCommand>
				configASSERT( xResult );
 800a57c:	2800      	cmp	r0, #0
 800a57e:	d1ca      	bne.n	800a516 <prvSampleTimeNow+0x1e>
 800a580:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a584:	f383 8811 	msr	BASEPRI, r3
 800a588:	f3bf 8f6f 	isb	sy
 800a58c:	f3bf 8f4f 	dsb	sy
 800a590:	e7fe      	b.n	800a590 <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 800a592:	2300      	movs	r3, #0
 800a594:	e7c7      	b.n	800a526 <prvSampleTimeNow+0x2e>
 800a596:	bf00      	nop
 800a598:	20015474 	.word	0x20015474
 800a59c:	20015478 	.word	0x20015478
 800a5a0:	20015544 	.word	0x20015544

0800a5a4 <prvTimerTask>:
{
 800a5a4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a5a8:	4d6e      	ldr	r5, [pc, #440]	; (800a764 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a5aa:	4e6f      	ldr	r6, [pc, #444]	; (800a768 <prvTimerTask+0x1c4>)
{
 800a5ac:	b089      	sub	sp, #36	; 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a5ae:	682b      	ldr	r3, [r5, #0]
 800a5b0:	f8d3 8000 	ldr.w	r8, [r3]
 800a5b4:	f1b8 0f00 	cmp.w	r8, #0
 800a5b8:	d035      	beq.n	800a626 <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a5ba:	68db      	ldr	r3, [r3, #12]
 800a5bc:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a5c0:	2400      	movs	r4, #0
	vTaskSuspendAll();
 800a5c2:	f7ff fbaf 	bl	8009d24 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a5c6:	a804      	add	r0, sp, #16
 800a5c8:	f7ff ff96 	bl	800a4f8 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800a5cc:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a5ce:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800a5d0:	2b00      	cmp	r3, #0
 800a5d2:	d169      	bne.n	800a6a8 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800a5d4:	2c00      	cmp	r4, #0
 800a5d6:	d14c      	bne.n	800a672 <prvTimerTask+0xce>
 800a5d8:	4540      	cmp	r0, r8
 800a5da:	d350      	bcc.n	800a67e <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 800a5dc:	f7ff fc46 	bl	8009e6c <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a5e0:	682b      	ldr	r3, [r5, #0]
 800a5e2:	68db      	ldr	r3, [r3, #12]
 800a5e4:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a5e6:	1d38      	adds	r0, r7, #4
 800a5e8:	f7fe fab3 	bl	8008b52 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a5ec:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800a5f0:	0758      	lsls	r0, r3, #29
 800a5f2:	d51a      	bpl.n	800a62a <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800a5f4:	69b9      	ldr	r1, [r7, #24]
 800a5f6:	4643      	mov	r3, r8
 800a5f8:	464a      	mov	r2, r9
 800a5fa:	4441      	add	r1, r8
 800a5fc:	4638      	mov	r0, r7
 800a5fe:	f7ff feff 	bl	800a400 <prvInsertTimerInActiveList>
 800a602:	b1b0      	cbz	r0, 800a632 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a604:	9400      	str	r4, [sp, #0]
 800a606:	4623      	mov	r3, r4
 800a608:	4642      	mov	r2, r8
 800a60a:	4621      	mov	r1, r4
 800a60c:	4638      	mov	r0, r7
 800a60e:	f7ff ff47 	bl	800a4a0 <xTimerGenericCommand>
			configASSERT( xResult );
 800a612:	b970      	cbnz	r0, 800a632 <prvTimerTask+0x8e>
 800a614:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a618:	f383 8811 	msr	BASEPRI, r3
 800a61c:	f3bf 8f6f 	isb	sy
 800a620:	f3bf 8f4f 	dsb	sy
 800a624:	e7fe      	b.n	800a624 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a626:	2401      	movs	r4, #1
 800a628:	e7cb      	b.n	800a5c2 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a62a:	f023 0301 	bic.w	r3, r3, #1
 800a62e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a632:	6a3b      	ldr	r3, [r7, #32]
 800a634:	4638      	mov	r0, r7
 800a636:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800a638:	6830      	ldr	r0, [r6, #0]
 800a63a:	2200      	movs	r2, #0
 800a63c:	a904      	add	r1, sp, #16
 800a63e:	f7fe ff2f 	bl	80094a0 <xQueueReceive>
 800a642:	2800      	cmp	r0, #0
 800a644:	d0b3      	beq.n	800a5ae <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a646:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a648:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a64a:	2b00      	cmp	r3, #0
 800a64c:	db2f      	blt.n	800a6ae <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800a64e:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800a650:	6963      	ldr	r3, [r4, #20]
 800a652:	2b00      	cmp	r3, #0
 800a654:	d132      	bne.n	800a6bc <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a656:	a803      	add	r0, sp, #12
 800a658:	f7ff ff4e 	bl	800a4f8 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 800a65c:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a65e:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800a660:	2b09      	cmp	r3, #9
 800a662:	d8e9      	bhi.n	800a638 <prvTimerTask+0x94>
 800a664:	e8df f003 	tbb	[pc, r3]
 800a668:	572e2e2e 	.word	0x572e2e2e
 800a66c:	2e2e765e 	.word	0x2e2e765e
 800a670:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800a672:	4b3e      	ldr	r3, [pc, #248]	; (800a76c <prvTimerTask+0x1c8>)
 800a674:	681b      	ldr	r3, [r3, #0]
 800a676:	681c      	ldr	r4, [r3, #0]
 800a678:	fab4 f484 	clz	r4, r4
 800a67c:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a67e:	6830      	ldr	r0, [r6, #0]
 800a680:	4622      	mov	r2, r4
 800a682:	eba8 0109 	sub.w	r1, r8, r9
 800a686:	f7ff f8fa 	bl	800987e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800a68a:	f7ff fbef 	bl	8009e6c <xTaskResumeAll>
 800a68e:	2800      	cmp	r0, #0
 800a690:	d1d2      	bne.n	800a638 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 800a692:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a696:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a69a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a69e:	f3bf 8f4f 	dsb	sy
 800a6a2:	f3bf 8f6f 	isb	sy
 800a6a6:	e7c7      	b.n	800a638 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 800a6a8:	f7ff fbe0 	bl	8009e6c <xTaskResumeAll>
}
 800a6ac:	e7c4      	b.n	800a638 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a6ae:	9b05      	ldr	r3, [sp, #20]
 800a6b0:	9907      	ldr	r1, [sp, #28]
 800a6b2:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800a6b4:	9b04      	ldr	r3, [sp, #16]
 800a6b6:	2b00      	cmp	r3, #0
 800a6b8:	dbbe      	blt.n	800a638 <prvTimerTask+0x94>
 800a6ba:	e7c8      	b.n	800a64e <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a6bc:	1d20      	adds	r0, r4, #4
 800a6be:	f7fe fa48 	bl	8008b52 <uxListRemove>
 800a6c2:	e7c8      	b.n	800a656 <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a6c4:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a6c8:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a6ca:	f043 0301 	orr.w	r3, r3, #1
 800a6ce:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a6d2:	9b05      	ldr	r3, [sp, #20]
 800a6d4:	4620      	mov	r0, r4
 800a6d6:	4419      	add	r1, r3
 800a6d8:	f7ff fe92 	bl	800a400 <prvInsertTimerInActiveList>
 800a6dc:	2800      	cmp	r0, #0
 800a6de:	d0ab      	beq.n	800a638 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a6e0:	6a23      	ldr	r3, [r4, #32]
 800a6e2:	4620      	mov	r0, r4
 800a6e4:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a6e6:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a6ea:	0759      	lsls	r1, r3, #29
 800a6ec:	d5a4      	bpl.n	800a638 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800a6ee:	69a2      	ldr	r2, [r4, #24]
 800a6f0:	9905      	ldr	r1, [sp, #20]
 800a6f2:	2300      	movs	r3, #0
 800a6f4:	440a      	add	r2, r1
 800a6f6:	9300      	str	r3, [sp, #0]
 800a6f8:	4619      	mov	r1, r3
 800a6fa:	4620      	mov	r0, r4
 800a6fc:	f7ff fed0 	bl	800a4a0 <xTimerGenericCommand>
							configASSERT( xResult );
 800a700:	2800      	cmp	r0, #0
 800a702:	d199      	bne.n	800a638 <prvTimerTask+0x94>
 800a704:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a708:	f383 8811 	msr	BASEPRI, r3
 800a70c:	f3bf 8f6f 	isb	sy
 800a710:	f3bf 8f4f 	dsb	sy
 800a714:	e7fe      	b.n	800a714 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a716:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a71a:	f023 0301 	bic.w	r3, r3, #1
 800a71e:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 800a722:	e789      	b.n	800a638 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a724:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a728:	f043 0301 	orr.w	r3, r3, #1
 800a72c:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800a730:	9905      	ldr	r1, [sp, #20]
 800a732:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800a734:	b941      	cbnz	r1, 800a748 <prvTimerTask+0x1a4>
 800a736:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a73a:	f383 8811 	msr	BASEPRI, r3
 800a73e:	f3bf 8f6f 	isb	sy
 800a742:	f3bf 8f4f 	dsb	sy
 800a746:	e7fe      	b.n	800a746 <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800a748:	4603      	mov	r3, r0
 800a74a:	4401      	add	r1, r0
 800a74c:	4620      	mov	r0, r4
 800a74e:	f7ff fe57 	bl	800a400 <prvInsertTimerInActiveList>
					break;
 800a752:	e771      	b.n	800a638 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800a754:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a758:	079a      	lsls	r2, r3, #30
 800a75a:	d4de      	bmi.n	800a71a <prvTimerTask+0x176>
							vPortFree( pxTimer );
 800a75c:	4620      	mov	r0, r4
 800a75e:	f7fe f98f 	bl	8008a80 <vPortFree>
 800a762:	e769      	b.n	800a638 <prvTimerTask+0x94>
 800a764:	20015474 	.word	0x20015474
 800a768:	20015598 	.word	0x20015598
 800a76c:	20015478 	.word	0x20015478

0800a770 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800a770:	8880      	ldrh	r0, [r0, #4]
 800a772:	4770      	bx	lr

0800a774 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800a774:	b570      	push	{r4, r5, r6, lr}
 800a776:	6803      	ldr	r3, [r0, #0]
 800a778:	4605      	mov	r5, r0
 800a77a:	460c      	mov	r4, r1
 800a77c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a77e:	2100      	movs	r1, #0
 800a780:	4798      	blx	r3
 800a782:	682b      	ldr	r3, [r5, #0]
 800a784:	4606      	mov	r6, r0
 800a786:	6a1b      	ldr	r3, [r3, #32]
 800a788:	4628      	mov	r0, r5
 800a78a:	4798      	blx	r3
 800a78c:	1ba4      	subs	r4, r4, r6
 800a78e:	b2a4      	uxth	r4, r4
 800a790:	fbb4 f0f0 	udiv	r0, r4, r0
 800a794:	bd70      	pop	{r4, r5, r6, pc}

0800a796 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800a796:	2300      	movs	r3, #0
 800a798:	8083      	strh	r3, [r0, #4]
 800a79a:	4770      	bx	lr

0800a79c <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800a79c:	b510      	push	{r4, lr}
 800a79e:	6803      	ldr	r3, [r0, #0]
 800a7a0:	8881      	ldrh	r1, [r0, #4]
 800a7a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a7a4:	4604      	mov	r4, r0
 800a7a6:	4798      	blx	r3
 800a7a8:	88a3      	ldrh	r3, [r4, #4]
 800a7aa:	3301      	adds	r3, #1
 800a7ac:	80a3      	strh	r3, [r4, #4]
 800a7ae:	bd10      	pop	{r4, pc}

0800a7b0 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800a7b0:	6803      	ldr	r3, [r0, #0]
 800a7b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a7b4:	4718      	bx	r3

0800a7b6 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800a7b6:	4770      	bx	lr

0800a7b8 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800a7b8:	4a02      	ldr	r2, [pc, #8]	; (800a7c4 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800a7ba:	6002      	str	r2, [r0, #0]
 800a7bc:	2200      	movs	r2, #0
 800a7be:	8082      	strh	r2, [r0, #4]
 800a7c0:	4770      	bx	lr
 800a7c2:	bf00      	nop
 800a7c4:	08023650 	.word	0x08023650

0800a7c8 <_ZNK8touchgfx11ModalWindow18getBackgroundWidthEv>:
 800a7c8:	f8b0 008c 	ldrh.w	r0, [r0, #140]	; 0x8c
 800a7cc:	4770      	bx	lr

0800a7ce <_ZNK8touchgfx11ModalWindow19getBackgroundHeightEv>:
 800a7ce:	f8b0 008e 	ldrh.w	r0, [r0, #142]	; 0x8e
 800a7d2:	4770      	bx	lr

0800a7d4 <_ZNK8touchgfx11ModalWindow13getShadeAlphaEv>:
 800a7d4:	f890 0052 	ldrb.w	r0, [r0, #82]	; 0x52
 800a7d8:	4770      	bx	lr

0800a7da <_ZNK8touchgfx11ModalWindow13getShadeColorEv>:
 800a7da:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800a7dc:	4770      	bx	lr

0800a7de <_ZN8touchgfx11ModalWindow4showEv>:
 800a7de:	2201      	movs	r2, #1
 800a7e0:	6803      	ldr	r3, [r0, #0]
 800a7e2:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800a7e6:	695b      	ldr	r3, [r3, #20]
 800a7e8:	4718      	bx	r3

0800a7ea <_ZN8touchgfx11ModalWindow4hideEv>:
 800a7ea:	b510      	push	{r4, lr}
 800a7ec:	6803      	ldr	r3, [r0, #0]
 800a7ee:	4604      	mov	r4, r0
 800a7f0:	695b      	ldr	r3, [r3, #20]
 800a7f2:	4798      	blx	r3
 800a7f4:	2300      	movs	r3, #0
 800a7f6:	f884 3025 	strb.w	r3, [r4, #37]	; 0x25
 800a7fa:	bd10      	pop	{r4, pc}

0800a7fc <_ZN8touchgfx11ModalWindowD1Ev>:
 800a7fc:	4770      	bx	lr

0800a7fe <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>:
 800a7fe:	3058      	adds	r0, #88	; 0x58
 800a800:	f000 b904 	b.w	800aa0c <_ZN8touchgfx9Container3addERNS_8DrawableE>

0800a804 <_ZN8touchgfx11ModalWindow13setShadeColorENS_9colortypeE>:
 800a804:	6541      	str	r1, [r0, #84]	; 0x54
 800a806:	302c      	adds	r0, #44	; 0x2c
 800a808:	f007 bbb9 	b.w	8011f7e <_ZNK8touchgfx8Drawable10invalidateEv>

0800a80c <_ZN8touchgfx11ModalWindow13setShadeAlphaEh>:
 800a80c:	f880 1052 	strb.w	r1, [r0, #82]	; 0x52
 800a810:	302c      	adds	r0, #44	; 0x2c
 800a812:	f007 bbb4 	b.w	8011f7e <_ZNK8touchgfx8Drawable10invalidateEv>

0800a816 <_ZN8touchgfx11ModalWindow6removeERNS_8DrawableE>:
 800a816:	3058      	adds	r0, #88	; 0x58
 800a818:	f000 b943 	b.w	800aaa2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>

0800a81c <_ZN8touchgfx11ModalWindowD0Ev>:
 800a81c:	b510      	push	{r4, lr}
 800a81e:	21b0      	movs	r1, #176	; 0xb0
 800a820:	4604      	mov	r4, r0
 800a822:	f015 ff31 	bl	8020688 <_ZdlPvj>
 800a826:	4620      	mov	r0, r4
 800a828:	bd10      	pop	{r4, pc}
	...

0800a82c <_ZN8touchgfx8DrawableC1Ev>:
 800a82c:	4a0a      	ldr	r2, [pc, #40]	; (800a858 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 800a82e:	6002      	str	r2, [r0, #0]
 800a830:	2200      	movs	r2, #0
 800a832:	8082      	strh	r2, [r0, #4]
 800a834:	80c2      	strh	r2, [r0, #6]
 800a836:	8102      	strh	r2, [r0, #8]
 800a838:	8142      	strh	r2, [r0, #10]
 800a83a:	8182      	strh	r2, [r0, #12]
 800a83c:	81c2      	strh	r2, [r0, #14]
 800a83e:	8202      	strh	r2, [r0, #16]
 800a840:	8242      	strh	r2, [r0, #18]
 800a842:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800a846:	61c2      	str	r2, [r0, #28]
 800a848:	8402      	strh	r2, [r0, #32]
 800a84a:	8442      	strh	r2, [r0, #34]	; 0x22
 800a84c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800a850:	2201      	movs	r2, #1
 800a852:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800a856:	4770      	bx	lr
 800a858:	0802428c 	.word	0x0802428c

0800a85c <_ZN8touchgfx11ModalWindow13setBackgroundERKtss>:
 800a85c:	b570      	push	{r4, r5, r6, lr}
 800a85e:	4604      	mov	r4, r0
 800a860:	461e      	mov	r6, r3
 800a862:	f854 3b58 	ldr.w	r3, [r4], #88
 800a866:	4615      	mov	r5, r2
 800a868:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800a86c:	4798      	blx	r3
 800a86e:	4632      	mov	r2, r6
 800a870:	4629      	mov	r1, r5
 800a872:	4620      	mov	r0, r4
 800a874:	f7f8 f9d2 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
 800a878:	bd70      	pop	{r4, r5, r6, pc}

0800a87a <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800a87a:	b570      	push	{r4, r5, r6, lr}
 800a87c:	6803      	ldr	r3, [r0, #0]
 800a87e:	4604      	mov	r4, r0
 800a880:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a882:	4615      	mov	r5, r2
 800a884:	4798      	blx	r3
 800a886:	6823      	ldr	r3, [r4, #0]
 800a888:	4629      	mov	r1, r5
 800a88a:	4620      	mov	r0, r4
 800a88c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a88e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a892:	4718      	bx	r3

0800a894 <_ZN8touchgfx11ModalWindow13setBackgroundERKt>:
 800a894:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a896:	880b      	ldrh	r3, [r1, #0]
 800a898:	a902      	add	r1, sp, #8
 800a89a:	f100 0584 	add.w	r5, r0, #132	; 0x84
 800a89e:	4604      	mov	r4, r0
 800a8a0:	f821 3d04 	strh.w	r3, [r1, #-4]!
 800a8a4:	4628      	mov	r0, r5
 800a8a6:	f003 ff25 	bl	800e6f4 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a8aa:	2200      	movs	r2, #0
 800a8ac:	4611      	mov	r1, r2
 800a8ae:	4628      	mov	r0, r5
 800a8b0:	f7f8 f9b4 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
 800a8b4:	f9b4 608c 	ldrsh.w	r6, [r4, #140]	; 0x8c
 800a8b8:	f9b4 708e 	ldrsh.w	r7, [r4, #142]	; 0x8e
 800a8bc:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800a8c0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800a8c4:	f104 0558 	add.w	r5, r4, #88	; 0x58
 800a8c8:	2302      	movs	r3, #2
 800a8ca:	4628      	mov	r0, r5
 800a8cc:	1bd2      	subs	r2, r2, r7
 800a8ce:	1b89      	subs	r1, r1, r6
 800a8d0:	fb92 f2f3 	sdiv	r2, r2, r3
 800a8d4:	fb91 f1f3 	sdiv	r1, r1, r3
 800a8d8:	b212      	sxth	r2, r2
 800a8da:	b209      	sxth	r1, r1
 800a8dc:	f7f8 f99e 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
 800a8e0:	463a      	mov	r2, r7
 800a8e2:	4631      	mov	r1, r6
 800a8e4:	4628      	mov	r0, r5
 800a8e6:	f7ff ffc8 	bl	800a87a <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800a8ea:	6823      	ldr	r3, [r4, #0]
 800a8ec:	4620      	mov	r0, r4
 800a8ee:	695b      	ldr	r3, [r3, #20]
 800a8f0:	4798      	blx	r3
 800a8f2:	b003      	add	sp, #12
 800a8f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800a8f8 <_ZN8touchgfx11ModalWindowC1Ev>:
 800a8f8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800a8fc:	4604      	mov	r4, r0
 800a8fe:	4625      	mov	r5, r4
 800a900:	f7ff ff94 	bl	800a82c <_ZN8touchgfx8DrawableC1Ev>
 800a904:	2600      	movs	r6, #0
 800a906:	4b36      	ldr	r3, [pc, #216]	; (800a9e0 <_ZN8touchgfx11ModalWindowC1Ev+0xe8>)
 800a908:	62a6      	str	r6, [r4, #40]	; 0x28
 800a90a:	f845 3b2c 	str.w	r3, [r5], #44
 800a90e:	f04f 0a26 	mov.w	sl, #38	; 0x26
 800a912:	4652      	mov	r2, sl
 800a914:	4631      	mov	r1, r6
 800a916:	4628      	mov	r0, r5
 800a918:	f016 f8f0 	bl	8020afc <memset>
 800a91c:	4628      	mov	r0, r5
 800a91e:	f7ff ff85 	bl	800a82c <_ZN8touchgfx8DrawableC1Ev>
 800a922:	f104 0858 	add.w	r8, r4, #88	; 0x58
 800a926:	4b2f      	ldr	r3, [pc, #188]	; (800a9e4 <_ZN8touchgfx11ModalWindowC1Ev+0xec>)
 800a928:	62e3      	str	r3, [r4, #44]	; 0x2c
 800a92a:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800a92e:	f884 9052 	strb.w	r9, [r4, #82]	; 0x52
 800a932:	6566      	str	r6, [r4, #84]	; 0x54
 800a934:	4640      	mov	r0, r8
 800a936:	f7ff ff79 	bl	800a82c <_ZN8touchgfx8DrawableC1Ev>
 800a93a:	f104 0784 	add.w	r7, r4, #132	; 0x84
 800a93e:	4b2a      	ldr	r3, [pc, #168]	; (800a9e8 <_ZN8touchgfx11ModalWindowC1Ev+0xf0>)
 800a940:	65a3      	str	r3, [r4, #88]	; 0x58
 800a942:	4652      	mov	r2, sl
 800a944:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a948:	4631      	mov	r1, r6
 800a94a:	f8c4 6080 	str.w	r6, [r4, #128]	; 0x80
 800a94e:	4638      	mov	r0, r7
 800a950:	f8ad 3004 	strh.w	r3, [sp, #4]
 800a954:	f016 f8d2 	bl	8020afc <memset>
 800a958:	4638      	mov	r0, r7
 800a95a:	f7ff ff67 	bl	800a82c <_ZN8touchgfx8DrawableC1Ev>
 800a95e:	a902      	add	r1, sp, #8
 800a960:	4b22      	ldr	r3, [pc, #136]	; (800a9ec <_ZN8touchgfx11ModalWindowC1Ev+0xf4>)
 800a962:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 800a966:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 800a96a:	f8a4 30aa 	strh.w	r3, [r4, #170]	; 0xaa
 800a96e:	f884 90ac 	strb.w	r9, [r4, #172]	; 0xac
 800a972:	4638      	mov	r0, r7
 800a974:	f003 febe 	bl	800e6f4 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a978:	4b1d      	ldr	r3, [pc, #116]	; (800a9f0 <_ZN8touchgfx11ModalWindowC1Ev+0xf8>)
 800a97a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800a97e:	4b1d      	ldr	r3, [pc, #116]	; (800a9f4 <_ZN8touchgfx11ModalWindowC1Ev+0xfc>)
 800a980:	4620      	mov	r0, r4
 800a982:	f9b3 1000 	ldrsh.w	r1, [r3]
 800a986:	f7ff ff78 	bl	800a87a <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800a98a:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 800a98e:	f9b4 a00a 	ldrsh.w	sl, [r4, #10]
 800a992:	4632      	mov	r2, r6
 800a994:	4631      	mov	r1, r6
 800a996:	4628      	mov	r0, r5
 800a998:	f7f8 f940 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
 800a99c:	4652      	mov	r2, sl
 800a99e:	4649      	mov	r1, r9
 800a9a0:	4628      	mov	r0, r5
 800a9a2:	f7ff ff6a 	bl	800a87a <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800a9a6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800a9aa:	6563      	str	r3, [r4, #84]	; 0x54
 800a9ac:	2301      	movs	r3, #1
 800a9ae:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 800a9b2:	2360      	movs	r3, #96	; 0x60
 800a9b4:	f884 3052 	strb.w	r3, [r4, #82]	; 0x52
 800a9b8:	4628      	mov	r0, r5
 800a9ba:	f007 fae0 	bl	8011f7e <_ZNK8touchgfx8Drawable10invalidateEv>
 800a9be:	4629      	mov	r1, r5
 800a9c0:	4620      	mov	r0, r4
 800a9c2:	f000 f823 	bl	800aa0c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800a9c6:	4641      	mov	r1, r8
 800a9c8:	4620      	mov	r0, r4
 800a9ca:	f000 f81f 	bl	800aa0c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800a9ce:	4640      	mov	r0, r8
 800a9d0:	4639      	mov	r1, r7
 800a9d2:	f000 f81b 	bl	800aa0c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800a9d6:	4620      	mov	r0, r4
 800a9d8:	b002      	add	sp, #8
 800a9da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a9de:	bf00      	nop
 800a9e0:	08023684 	.word	0x08023684
 800a9e4:	0802400c 	.word	0x0802400c
 800a9e8:	0802373c 	.word	0x0802373c
 800a9ec:	08024150 	.word	0x08024150
 800a9f0:	200155a2 	.word	0x200155a2
 800a9f4:	200155a0 	.word	0x200155a0

0800a9f8 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800a9f8:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a9fa:	2000      	movs	r0, #0
 800a9fc:	b12b      	cbz	r3, 800aa0a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a9fe:	b920      	cbnz	r0, 800aa0a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800aa00:	1a5a      	subs	r2, r3, r1
 800aa02:	4250      	negs	r0, r2
 800aa04:	4150      	adcs	r0, r2
 800aa06:	699b      	ldr	r3, [r3, #24]
 800aa08:	e7f8      	b.n	800a9fc <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800aa0a:	4770      	bx	lr

0800aa0c <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800aa0c:	2300      	movs	r3, #0
 800aa0e:	6148      	str	r0, [r1, #20]
 800aa10:	618b      	str	r3, [r1, #24]
 800aa12:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800aa14:	b913      	cbnz	r3, 800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800aa16:	6281      	str	r1, [r0, #40]	; 0x28
 800aa18:	4770      	bx	lr
 800aa1a:	4613      	mov	r3, r2
 800aa1c:	699a      	ldr	r2, [r3, #24]
 800aa1e:	2a00      	cmp	r2, #0
 800aa20:	d1fb      	bne.n	800aa1a <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800aa22:	6199      	str	r1, [r3, #24]
 800aa24:	4770      	bx	lr

0800aa26 <_ZN8touchgfx9Container9removeAllEv>:
 800aa26:	2200      	movs	r2, #0
 800aa28:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800aa2a:	b123      	cbz	r3, 800aa36 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800aa2c:	6999      	ldr	r1, [r3, #24]
 800aa2e:	6281      	str	r1, [r0, #40]	; 0x28
 800aa30:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800aa34:	e7f8      	b.n	800aa28 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800aa36:	4770      	bx	lr

0800aa38 <_ZN8touchgfx9Container6unlinkEv>:
 800aa38:	2300      	movs	r3, #0
 800aa3a:	6283      	str	r3, [r0, #40]	; 0x28
 800aa3c:	4770      	bx	lr

0800aa3e <_ZNK8touchgfx9Container12getSolidRectEv>:
 800aa3e:	2200      	movs	r2, #0
 800aa40:	8002      	strh	r2, [r0, #0]
 800aa42:	8042      	strh	r2, [r0, #2]
 800aa44:	8082      	strh	r2, [r0, #4]
 800aa46:	80c2      	strh	r2, [r0, #6]
 800aa48:	4770      	bx	lr

0800aa4a <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800aa4a:	b570      	push	{r4, r5, r6, lr}
 800aa4c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800aa4e:	460d      	mov	r5, r1
 800aa50:	4616      	mov	r6, r2
 800aa52:	b13c      	cbz	r4, 800aa64 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800aa54:	6823      	ldr	r3, [r4, #0]
 800aa56:	4620      	mov	r0, r4
 800aa58:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800aa5a:	4632      	mov	r2, r6
 800aa5c:	4629      	mov	r1, r5
 800aa5e:	4798      	blx	r3
 800aa60:	69a4      	ldr	r4, [r4, #24]
 800aa62:	e7f6      	b.n	800aa52 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800aa64:	bd70      	pop	{r4, r5, r6, pc}

0800aa66 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800aa66:	b538      	push	{r3, r4, r5, lr}
 800aa68:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800aa6a:	460d      	mov	r5, r1
 800aa6c:	b134      	cbz	r4, 800aa7c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800aa6e:	682b      	ldr	r3, [r5, #0]
 800aa70:	4621      	mov	r1, r4
 800aa72:	689b      	ldr	r3, [r3, #8]
 800aa74:	4628      	mov	r0, r5
 800aa76:	4798      	blx	r3
 800aa78:	69a4      	ldr	r4, [r4, #24]
 800aa7a:	e7f7      	b.n	800aa6c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800aa7c:	bd38      	pop	{r3, r4, r5, pc}

0800aa7e <_ZNK8touchgfx9Container17invalidateContentEv>:
 800aa7e:	b510      	push	{r4, lr}
 800aa80:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800aa82:	b12c      	cbz	r4, 800aa90 <_ZNK8touchgfx9Container17invalidateContentEv+0x12>
 800aa84:	6823      	ldr	r3, [r4, #0]
 800aa86:	4620      	mov	r0, r4
 800aa88:	699b      	ldr	r3, [r3, #24]
 800aa8a:	4798      	blx	r3
 800aa8c:	69a4      	ldr	r4, [r4, #24]
 800aa8e:	e7f8      	b.n	800aa82 <_ZNK8touchgfx9Container17invalidateContentEv+0x4>
 800aa90:	bd10      	pop	{r4, pc}

0800aa92 <_ZN8touchgfx9ContainerD1Ev>:
 800aa92:	4770      	bx	lr

0800aa94 <_ZN8touchgfx9ContainerD0Ev>:
 800aa94:	b510      	push	{r4, lr}
 800aa96:	212c      	movs	r1, #44	; 0x2c
 800aa98:	4604      	mov	r4, r0
 800aa9a:	f015 fdf5 	bl	8020688 <_ZdlPvj>
 800aa9e:	4620      	mov	r0, r4
 800aaa0:	bd10      	pop	{r4, pc}

0800aaa2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800aaa2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800aaa4:	b19b      	cbz	r3, 800aace <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800aaa6:	428b      	cmp	r3, r1
 800aaa8:	d109      	bne.n	800aabe <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800aaaa:	699a      	ldr	r2, [r3, #24]
 800aaac:	2100      	movs	r1, #0
 800aaae:	6159      	str	r1, [r3, #20]
 800aab0:	6282      	str	r2, [r0, #40]	; 0x28
 800aab2:	b902      	cbnz	r2, 800aab6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800aab4:	4770      	bx	lr
 800aab6:	6199      	str	r1, [r3, #24]
 800aab8:	4770      	bx	lr
 800aaba:	4613      	mov	r3, r2
 800aabc:	b13a      	cbz	r2, 800aace <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800aabe:	699a      	ldr	r2, [r3, #24]
 800aac0:	428a      	cmp	r2, r1
 800aac2:	d1fa      	bne.n	800aaba <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800aac4:	698a      	ldr	r2, [r1, #24]
 800aac6:	619a      	str	r2, [r3, #24]
 800aac8:	2300      	movs	r3, #0
 800aaca:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800aace:	4770      	bx	lr

0800aad0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800aad0:	b410      	push	{r4}
 800aad2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800aad4:	4604      	mov	r4, r0
 800aad6:	b92b      	cbnz	r3, 800aae4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800aad8:	6803      	ldr	r3, [r0, #0]
 800aada:	f85d 4b04 	ldr.w	r4, [sp], #4
 800aade:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800aae0:	4611      	mov	r1, r2
 800aae2:	4718      	bx	r3
 800aae4:	b941      	cbnz	r1, 800aaf8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800aae6:	6193      	str	r3, [r2, #24]
 800aae8:	6282      	str	r2, [r0, #40]	; 0x28
 800aaea:	6154      	str	r4, [r2, #20]
 800aaec:	f85d 4b04 	ldr.w	r4, [sp], #4
 800aaf0:	4770      	bx	lr
 800aaf2:	4603      	mov	r3, r0
 800aaf4:	2800      	cmp	r0, #0
 800aaf6:	d0f9      	beq.n	800aaec <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800aaf8:	4299      	cmp	r1, r3
 800aafa:	6998      	ldr	r0, [r3, #24]
 800aafc:	d1f9      	bne.n	800aaf2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800aafe:	6190      	str	r0, [r2, #24]
 800ab00:	618a      	str	r2, [r1, #24]
 800ab02:	e7f2      	b.n	800aaea <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800ab04 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800ab04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ab08:	461f      	mov	r7, r3
 800ab0a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800ab0e:	460d      	mov	r5, r1
 800ab10:	4616      	mov	r6, r2
 800ab12:	b103      	cbz	r3, 800ab16 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800ab14:	6038      	str	r0, [r7, #0]
 800ab16:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ab18:	b314      	cbz	r4, 800ab60 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800ab1a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800ab1e:	b1eb      	cbz	r3, 800ab5c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ab20:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800ab24:	428d      	cmp	r5, r1
 800ab26:	db19      	blt.n	800ab5c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ab28:	8923      	ldrh	r3, [r4, #8]
 800ab2a:	b289      	uxth	r1, r1
 800ab2c:	440b      	add	r3, r1
 800ab2e:	b21b      	sxth	r3, r3
 800ab30:	429d      	cmp	r5, r3
 800ab32:	da13      	bge.n	800ab5c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ab34:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800ab38:	4296      	cmp	r6, r2
 800ab3a:	db0f      	blt.n	800ab5c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ab3c:	8963      	ldrh	r3, [r4, #10]
 800ab3e:	b292      	uxth	r2, r2
 800ab40:	4413      	add	r3, r2
 800ab42:	b21b      	sxth	r3, r3
 800ab44:	429e      	cmp	r6, r3
 800ab46:	da09      	bge.n	800ab5c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ab48:	6823      	ldr	r3, [r4, #0]
 800ab4a:	1ab2      	subs	r2, r6, r2
 800ab4c:	1a69      	subs	r1, r5, r1
 800ab4e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800ab52:	b212      	sxth	r2, r2
 800ab54:	463b      	mov	r3, r7
 800ab56:	b209      	sxth	r1, r1
 800ab58:	4620      	mov	r0, r4
 800ab5a:	47c0      	blx	r8
 800ab5c:	69a4      	ldr	r4, [r4, #24]
 800ab5e:	e7db      	b.n	800ab18 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800ab60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ab64 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800ab64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ab68:	4c6e      	ldr	r4, [pc, #440]	; (800ad24 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800ab6a:	b0a1      	sub	sp, #132	; 0x84
 800ab6c:	6824      	ldr	r4, [r4, #0]
 800ab6e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800ab70:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800ab74:	9303      	str	r3, [sp, #12]
 800ab76:	2400      	movs	r4, #0
 800ab78:	802c      	strh	r4, [r5, #0]
 800ab7a:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800ab7c:	802c      	strh	r4, [r5, #0]
 800ab7e:	601c      	str	r4, [r3, #0]
 800ab80:	4606      	mov	r6, r0
 800ab82:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800ab86:	f7ff ffbd 	bl	800ab04 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800ab8a:	f1b9 0f03 	cmp.w	r9, #3
 800ab8e:	f340 80c2 	ble.w	800ad16 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800ab92:	4631      	mov	r1, r6
 800ab94:	a80c      	add	r0, sp, #48	; 0x30
 800ab96:	f007 fa8d 	bl	80120b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ab9a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800ab9e:	9306      	str	r3, [sp, #24]
 800aba0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800aba4:	9307      	str	r3, [sp, #28]
 800aba6:	9b03      	ldr	r3, [sp, #12]
 800aba8:	f8d3 a000 	ldr.w	sl, [r3]
 800abac:	f1ba 0f00 	cmp.w	sl, #0
 800abb0:	f000 80b4 	beq.w	800ad1c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800abb4:	4651      	mov	r1, sl
 800abb6:	a810      	add	r0, sp, #64	; 0x40
 800abb8:	f007 fa7c 	bl	80120b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800abbc:	9b01      	ldr	r3, [sp, #4]
 800abbe:	9a06      	ldr	r2, [sp, #24]
 800abc0:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800abc4:	189d      	adds	r5, r3, r2
 800abc6:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800abca:	9a07      	ldr	r2, [sp, #28]
 800abcc:	2002      	movs	r0, #2
 800abce:	fb91 f1f0 	sdiv	r1, r1, r0
 800abd2:	4419      	add	r1, r3
 800abd4:	1a6d      	subs	r5, r5, r1
 800abd6:	9b02      	ldr	r3, [sp, #8]
 800abd8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800abdc:	4413      	add	r3, r2
 800abde:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800abe2:	fb92 f2f0 	sdiv	r2, r2, r0
 800abe6:	440a      	add	r2, r1
 800abe8:	1a9b      	subs	r3, r3, r2
 800abea:	435b      	muls	r3, r3
 800abec:	fb05 3505 	mla	r5, r5, r5, r3
 800abf0:	4f4d      	ldr	r7, [pc, #308]	; (800ad28 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800abf2:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800abf4:	ac10      	add	r4, sp, #64	; 0x40
 800abf6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800abf8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800abfa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800abfc:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800abfe:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ac00:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800ac04:	f1b9 0f0c 	cmp.w	r9, #12
 800ac08:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800ac0c:	f04f 0303 	mov.w	r3, #3
 800ac10:	bfc8      	it	gt
 800ac12:	4698      	movgt	r8, r3
 800ac14:	f8cd 9000 	str.w	r9, [sp]
 800ac18:	f04f 0400 	mov.w	r4, #0
 800ac1c:	bfdc      	itt	le
 800ac1e:	f109 32ff 	addle.w	r2, r9, #4294967295
 800ac22:	fb92 f8f3 	sdivle	r8, r2, r3
 800ac26:	1c63      	adds	r3, r4, #1
 800ac28:	aa10      	add	r2, sp, #64	; 0x40
 800ac2a:	f004 0401 	and.w	r4, r4, #1
 800ac2e:	9308      	str	r3, [sp, #32]
 800ac30:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800ac34:	9b00      	ldr	r3, [sp, #0]
 800ac36:	fb93 f3f8 	sdiv	r3, r3, r8
 800ac3a:	b29b      	uxth	r3, r3
 800ac3c:	3404      	adds	r4, #4
 800ac3e:	f04f 0b00 	mov.w	fp, #0
 800ac42:	9304      	str	r3, [sp, #16]
 800ac44:	9a04      	ldr	r2, [sp, #16]
 800ac46:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800ac4a:	fb13 f302 	smulbb	r3, r3, r2
 800ac4e:	9a01      	ldr	r2, [sp, #4]
 800ac50:	b29b      	uxth	r3, r3
 800ac52:	1899      	adds	r1, r3, r2
 800ac54:	9305      	str	r3, [sp, #20]
 800ac56:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800ac5a:	b209      	sxth	r1, r1
 800ac5c:	4299      	cmp	r1, r3
 800ac5e:	db4d      	blt.n	800acfc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ac60:	8932      	ldrh	r2, [r6, #8]
 800ac62:	4413      	add	r3, r2
 800ac64:	b21b      	sxth	r3, r3
 800ac66:	4299      	cmp	r1, r3
 800ac68:	da48      	bge.n	800acfc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ac6a:	9b04      	ldr	r3, [sp, #16]
 800ac6c:	6827      	ldr	r7, [r4, #0]
 800ac6e:	fb17 f703 	smulbb	r7, r7, r3
 800ac72:	9b02      	ldr	r3, [sp, #8]
 800ac74:	b2bf      	uxth	r7, r7
 800ac76:	18fa      	adds	r2, r7, r3
 800ac78:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800ac7c:	b212      	sxth	r2, r2
 800ac7e:	429a      	cmp	r2, r3
 800ac80:	db3c      	blt.n	800acfc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ac82:	8970      	ldrh	r0, [r6, #10]
 800ac84:	4403      	add	r3, r0
 800ac86:	b21b      	sxth	r3, r3
 800ac88:	429a      	cmp	r2, r3
 800ac8a:	da37      	bge.n	800acfc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ac8c:	2300      	movs	r3, #0
 800ac8e:	930b      	str	r3, [sp, #44]	; 0x2c
 800ac90:	4630      	mov	r0, r6
 800ac92:	ab0b      	add	r3, sp, #44	; 0x2c
 800ac94:	f7ff ff36 	bl	800ab04 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800ac98:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800ac9a:	b37a      	cbz	r2, 800acfc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ac9c:	4552      	cmp	r2, sl
 800ac9e:	d02d      	beq.n	800acfc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800aca0:	4611      	mov	r1, r2
 800aca2:	a80e      	add	r0, sp, #56	; 0x38
 800aca4:	9209      	str	r2, [sp, #36]	; 0x24
 800aca6:	f007 fa05 	bl	80120b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800acaa:	9a06      	ldr	r2, [sp, #24]
 800acac:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800acb0:	9b01      	ldr	r3, [sp, #4]
 800acb2:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800acb6:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800acba:	4413      	add	r3, r2
 800acbc:	f04f 0e02 	mov.w	lr, #2
 800acc0:	fb91 f1fe 	sdiv	r1, r1, lr
 800acc4:	4401      	add	r1, r0
 800acc6:	1a58      	subs	r0, r3, r1
 800acc8:	9a07      	ldr	r2, [sp, #28]
 800acca:	9b02      	ldr	r3, [sp, #8]
 800accc:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800acd0:	fb9c fcfe 	sdiv	ip, ip, lr
 800acd4:	4413      	add	r3, r2
 800acd6:	448c      	add	ip, r1
 800acd8:	eba3 030c 	sub.w	r3, r3, ip
 800acdc:	435b      	muls	r3, r3
 800acde:	fb00 3300 	mla	r3, r0, r0, r3
 800ace2:	42ab      	cmp	r3, r5
 800ace4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800ace6:	d208      	bcs.n	800acfa <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800ace8:	9803      	ldr	r0, [sp, #12]
 800acea:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800acec:	6001      	str	r1, [r0, #0]
 800acee:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800acf0:	9805      	ldr	r0, [sp, #20]
 800acf2:	8008      	strh	r0, [r1, #0]
 800acf4:	992b      	ldr	r1, [sp, #172]	; 0xac
 800acf6:	461d      	mov	r5, r3
 800acf8:	800f      	strh	r7, [r1, #0]
 800acfa:	4692      	mov	sl, r2
 800acfc:	f10b 0b01 	add.w	fp, fp, #1
 800ad00:	f1bb 0f04 	cmp.w	fp, #4
 800ad04:	f104 0408 	add.w	r4, r4, #8
 800ad08:	d19c      	bne.n	800ac44 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800ad0a:	9b00      	ldr	r3, [sp, #0]
 800ad0c:	9c08      	ldr	r4, [sp, #32]
 800ad0e:	444b      	add	r3, r9
 800ad10:	4544      	cmp	r4, r8
 800ad12:	9300      	str	r3, [sp, #0]
 800ad14:	d187      	bne.n	800ac26 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800ad16:	b021      	add	sp, #132	; 0x84
 800ad18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ad1c:	f04f 35ff 	mov.w	r5, #4294967295
 800ad20:	e766      	b.n	800abf0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800ad22:	bf00      	nop
 800ad24:	200155ac 	.word	0x200155ac
 800ad28:	08021a40 	.word	0x08021a40

0800ad2c <_ZN8touchgfx4RectaNERKS0_>:
 800ad2c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ad30:	f9b1 7000 	ldrsh.w	r7, [r1]
 800ad34:	888c      	ldrh	r4, [r1, #4]
 800ad36:	f9b0 9000 	ldrsh.w	r9, [r0]
 800ad3a:	443c      	add	r4, r7
 800ad3c:	b2a4      	uxth	r4, r4
 800ad3e:	fa0f f884 	sxth.w	r8, r4
 800ad42:	45c1      	cmp	r9, r8
 800ad44:	da2f      	bge.n	800ada6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ad46:	8882      	ldrh	r2, [r0, #4]
 800ad48:	444a      	add	r2, r9
 800ad4a:	b292      	uxth	r2, r2
 800ad4c:	fa0f fe82 	sxth.w	lr, r2
 800ad50:	4577      	cmp	r7, lr
 800ad52:	da28      	bge.n	800ada6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ad54:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800ad58:	88cb      	ldrh	r3, [r1, #6]
 800ad5a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800ad5e:	442b      	add	r3, r5
 800ad60:	b21b      	sxth	r3, r3
 800ad62:	429e      	cmp	r6, r3
 800ad64:	da1f      	bge.n	800ada6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ad66:	88c3      	ldrh	r3, [r0, #6]
 800ad68:	4433      	add	r3, r6
 800ad6a:	b29b      	uxth	r3, r3
 800ad6c:	fa0f fc83 	sxth.w	ip, r3
 800ad70:	4565      	cmp	r5, ip
 800ad72:	da18      	bge.n	800ada6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ad74:	454f      	cmp	r7, r9
 800ad76:	bfb8      	it	lt
 800ad78:	464f      	movlt	r7, r9
 800ad7a:	42b5      	cmp	r5, r6
 800ad7c:	bfb8      	it	lt
 800ad7e:	4635      	movlt	r5, r6
 800ad80:	45f0      	cmp	r8, lr
 800ad82:	bfd8      	it	le
 800ad84:	4622      	movle	r2, r4
 800ad86:	1bd2      	subs	r2, r2, r7
 800ad88:	8082      	strh	r2, [r0, #4]
 800ad8a:	884a      	ldrh	r2, [r1, #2]
 800ad8c:	88c9      	ldrh	r1, [r1, #6]
 800ad8e:	8007      	strh	r7, [r0, #0]
 800ad90:	440a      	add	r2, r1
 800ad92:	b292      	uxth	r2, r2
 800ad94:	b211      	sxth	r1, r2
 800ad96:	458c      	cmp	ip, r1
 800ad98:	bfa8      	it	ge
 800ad9a:	4613      	movge	r3, r2
 800ad9c:	1b5b      	subs	r3, r3, r5
 800ad9e:	80c3      	strh	r3, [r0, #6]
 800ada0:	8045      	strh	r5, [r0, #2]
 800ada2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ada6:	2300      	movs	r3, #0
 800ada8:	8003      	strh	r3, [r0, #0]
 800adaa:	8043      	strh	r3, [r0, #2]
 800adac:	8083      	strh	r3, [r0, #4]
 800adae:	80c3      	strh	r3, [r0, #6]
 800adb0:	e7f7      	b.n	800ada2 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800adb2 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800adb2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800adb6:	2b00      	cmp	r3, #0
 800adb8:	dd06      	ble.n	800adc8 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800adba:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800adbe:	2800      	cmp	r0, #0
 800adc0:	bfcc      	ite	gt
 800adc2:	2000      	movgt	r0, #0
 800adc4:	2001      	movle	r0, #1
 800adc6:	4770      	bx	lr
 800adc8:	2001      	movs	r0, #1
 800adca:	4770      	bx	lr

0800adcc <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800adcc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800add0:	2300      	movs	r3, #0
 800add2:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800add4:	8003      	strh	r3, [r0, #0]
 800add6:	4604      	mov	r4, r0
 800add8:	8043      	strh	r3, [r0, #2]
 800adda:	8083      	strh	r3, [r0, #4]
 800addc:	80c3      	strh	r3, [r0, #6]
 800adde:	2d00      	cmp	r5, #0
 800ade0:	d040      	beq.n	800ae64 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800ade2:	1d28      	adds	r0, r5, #4
 800ade4:	f7ff ffe5 	bl	800adb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ade8:	b988      	cbnz	r0, 800ae0e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800adea:	4620      	mov	r0, r4
 800adec:	f7ff ffe1 	bl	800adb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800adf0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800adf4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800adf8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800adfc:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800ae00:	b138      	cbz	r0, 800ae12 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800ae02:	8022      	strh	r2, [r4, #0]
 800ae04:	8063      	strh	r3, [r4, #2]
 800ae06:	f8a4 e004 	strh.w	lr, [r4, #4]
 800ae0a:	f8a4 c006 	strh.w	ip, [r4, #6]
 800ae0e:	69ad      	ldr	r5, [r5, #24]
 800ae10:	e7e5      	b.n	800adde <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800ae12:	f9b4 0000 	ldrsh.w	r0, [r4]
 800ae16:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800ae1a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800ae1e:	4290      	cmp	r0, r2
 800ae20:	4607      	mov	r7, r0
 800ae22:	bfa8      	it	ge
 800ae24:	4617      	movge	r7, r2
 800ae26:	4472      	add	r2, lr
 800ae28:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800ae2c:	8027      	strh	r7, [r4, #0]
 800ae2e:	4299      	cmp	r1, r3
 800ae30:	460e      	mov	r6, r1
 800ae32:	4440      	add	r0, r8
 800ae34:	bfa8      	it	ge
 800ae36:	461e      	movge	r6, r3
 800ae38:	4471      	add	r1, lr
 800ae3a:	4463      	add	r3, ip
 800ae3c:	b200      	sxth	r0, r0
 800ae3e:	b212      	sxth	r2, r2
 800ae40:	b209      	sxth	r1, r1
 800ae42:	b21b      	sxth	r3, r3
 800ae44:	4290      	cmp	r0, r2
 800ae46:	bfac      	ite	ge
 800ae48:	ebc7 0200 	rsbge	r2, r7, r0
 800ae4c:	ebc7 0202 	rsblt	r2, r7, r2
 800ae50:	4299      	cmp	r1, r3
 800ae52:	bfac      	ite	ge
 800ae54:	ebc6 0301 	rsbge	r3, r6, r1
 800ae58:	ebc6 0303 	rsblt	r3, r6, r3
 800ae5c:	8066      	strh	r6, [r4, #2]
 800ae5e:	80a2      	strh	r2, [r4, #4]
 800ae60:	80e3      	strh	r3, [r4, #6]
 800ae62:	e7d4      	b.n	800ae0e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800ae64:	4620      	mov	r0, r4
 800ae66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ae6a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800ae6a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800ae6e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800ae72:	b383      	cbz	r3, 800aed6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800ae74:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ae76:	b374      	cbz	r4, 800aed6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800ae78:	f9b1 5000 	ldrsh.w	r5, [r1]
 800ae7c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800ae80:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800ae84:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800ae88:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800ae8c:	b303      	cbz	r3, 800aed0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800ae8e:	4668      	mov	r0, sp
 800ae90:	1d21      	adds	r1, r4, #4
 800ae92:	f8ad 5000 	strh.w	r5, [sp]
 800ae96:	f8ad 6002 	strh.w	r6, [sp, #2]
 800ae9a:	f8ad 7004 	strh.w	r7, [sp, #4]
 800ae9e:	f8ad 8006 	strh.w	r8, [sp, #6]
 800aea2:	f7ff ff43 	bl	800ad2c <_ZN8touchgfx4RectaNERKS0_>
 800aea6:	4668      	mov	r0, sp
 800aea8:	f7ff ff83 	bl	800adb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800aeac:	b980      	cbnz	r0, 800aed0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800aeae:	f8bd 3000 	ldrh.w	r3, [sp]
 800aeb2:	88a2      	ldrh	r2, [r4, #4]
 800aeb4:	1a9b      	subs	r3, r3, r2
 800aeb6:	f8ad 3000 	strh.w	r3, [sp]
 800aeba:	88e2      	ldrh	r2, [r4, #6]
 800aebc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800aec0:	1a9b      	subs	r3, r3, r2
 800aec2:	f8ad 3002 	strh.w	r3, [sp, #2]
 800aec6:	6823      	ldr	r3, [r4, #0]
 800aec8:	4669      	mov	r1, sp
 800aeca:	689b      	ldr	r3, [r3, #8]
 800aecc:	4620      	mov	r0, r4
 800aece:	4798      	blx	r3
 800aed0:	69a4      	ldr	r4, [r4, #24]
 800aed2:	2c00      	cmp	r4, #0
 800aed4:	d1d8      	bne.n	800ae88 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800aed6:	b002      	add	sp, #8
 800aed8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800aedc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800aedc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800aede:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800aee2:	460d      	mov	r5, r1
 800aee4:	4616      	mov	r6, r2
 800aee6:	b323      	cbz	r3, 800af32 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800aee8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800aeea:	b314      	cbz	r4, 800af32 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800aeec:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800aef0:	b1eb      	cbz	r3, 800af2e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800aef2:	6828      	ldr	r0, [r5, #0]
 800aef4:	6869      	ldr	r1, [r5, #4]
 800aef6:	466b      	mov	r3, sp
 800aef8:	c303      	stmia	r3!, {r0, r1}
 800aefa:	4668      	mov	r0, sp
 800aefc:	1d21      	adds	r1, r4, #4
 800aefe:	f7ff ff15 	bl	800ad2c <_ZN8touchgfx4RectaNERKS0_>
 800af02:	4668      	mov	r0, sp
 800af04:	f7ff ff55 	bl	800adb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800af08:	b988      	cbnz	r0, 800af2e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800af0a:	f8bd 3000 	ldrh.w	r3, [sp]
 800af0e:	88a2      	ldrh	r2, [r4, #4]
 800af10:	1a9b      	subs	r3, r3, r2
 800af12:	f8ad 3000 	strh.w	r3, [sp]
 800af16:	88e2      	ldrh	r2, [r4, #6]
 800af18:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800af1c:	1a9b      	subs	r3, r3, r2
 800af1e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800af22:	6823      	ldr	r3, [r4, #0]
 800af24:	4632      	mov	r2, r6
 800af26:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800af28:	4669      	mov	r1, sp
 800af2a:	4620      	mov	r0, r4
 800af2c:	4798      	blx	r3
 800af2e:	69a4      	ldr	r4, [r4, #24]
 800af30:	e7db      	b.n	800aeea <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800af32:	b002      	add	sp, #8
 800af34:	bd70      	pop	{r4, r5, r6, pc}

0800af36 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800af36:	b513      	push	{r0, r1, r4, lr}
 800af38:	6803      	ldr	r3, [r0, #0]
 800af3a:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800af3e:	2300      	movs	r3, #0
 800af40:	e9cd 3300 	strd	r3, r3, [sp]
 800af44:	466b      	mov	r3, sp
 800af46:	47a0      	blx	r4
 800af48:	b002      	add	sp, #8
 800af4a:	bd10      	pop	{r4, pc}

0800af4c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800af4c:	2301      	movs	r3, #1
 800af4e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800af52:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800af56:	4770      	bx	lr

0800af58 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800af58:	2301      	movs	r3, #1
 800af5a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800af5e:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800af62:	4770      	bx	lr

0800af64 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800af64:	6843      	ldr	r3, [r0, #4]
 800af66:	2201      	movs	r2, #1
 800af68:	725a      	strb	r2, [r3, #9]
 800af6a:	6840      	ldr	r0, [r0, #4]
 800af6c:	6803      	ldr	r3, [r0, #0]
 800af6e:	691b      	ldr	r3, [r3, #16]
 800af70:	4718      	bx	r3

0800af72 <_ZN8touchgfx3HAL8flushDMAEv>:
 800af72:	6840      	ldr	r0, [r0, #4]
 800af74:	6803      	ldr	r3, [r0, #0]
 800af76:	689b      	ldr	r3, [r3, #8]
 800af78:	4718      	bx	r3

0800af7a <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800af7a:	b530      	push	{r4, r5, lr}
 800af7c:	b08b      	sub	sp, #44	; 0x2c
 800af7e:	6804      	ldr	r4, [r0, #0]
 800af80:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800af84:	9509      	str	r5, [sp, #36]	; 0x24
 800af86:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800af8a:	9508      	str	r5, [sp, #32]
 800af8c:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800af90:	9507      	str	r5, [sp, #28]
 800af92:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800af96:	9506      	str	r5, [sp, #24]
 800af98:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800af9c:	9505      	str	r5, [sp, #20]
 800af9e:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800afa2:	9504      	str	r5, [sp, #16]
 800afa4:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800afa8:	9503      	str	r5, [sp, #12]
 800afaa:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800afae:	9502      	str	r5, [sp, #8]
 800afb0:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800afb4:	e9cd 3500 	strd	r3, r5, [sp]
 800afb8:	4613      	mov	r3, r2
 800afba:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800afbc:	2200      	movs	r2, #0
 800afbe:	47a0      	blx	r4
 800afc0:	b00b      	add	sp, #44	; 0x2c
 800afc2:	bd30      	pop	{r4, r5, pc}

0800afc4 <_ZN8touchgfx3HAL10beginFrameEv>:
 800afc4:	4b04      	ldr	r3, [pc, #16]	; (800afd8 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800afc6:	781b      	ldrb	r3, [r3, #0]
 800afc8:	b123      	cbz	r3, 800afd4 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800afca:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800afce:	f080 0001 	eor.w	r0, r0, #1
 800afd2:	4770      	bx	lr
 800afd4:	2001      	movs	r0, #1
 800afd6:	4770      	bx	lr
 800afd8:	200155aa 	.word	0x200155aa

0800afdc <_ZN8touchgfx3HAL8endFrameEv>:
 800afdc:	b510      	push	{r4, lr}
 800afde:	4604      	mov	r4, r0
 800afe0:	6840      	ldr	r0, [r0, #4]
 800afe2:	6803      	ldr	r3, [r0, #0]
 800afe4:	689b      	ldr	r3, [r3, #8]
 800afe6:	4798      	blx	r3
 800afe8:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 800afec:	b113      	cbz	r3, 800aff4 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800afee:	2301      	movs	r3, #1
 800aff0:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800aff4:	bd10      	pop	{r4, pc}

0800aff6 <_ZN8touchgfx3HAL10initializeEv>:
 800aff6:	b510      	push	{r4, lr}
 800aff8:	4604      	mov	r4, r0
 800affa:	f7f5 fc75 	bl	80008e8 <_ZN8touchgfx10OSWrappers10initializeEv>
 800affe:	6860      	ldr	r0, [r4, #4]
 800b000:	6803      	ldr	r3, [r0, #0]
 800b002:	68db      	ldr	r3, [r3, #12]
 800b004:	4798      	blx	r3
 800b006:	68e0      	ldr	r0, [r4, #12]
 800b008:	6803      	ldr	r3, [r0, #0]
 800b00a:	689b      	ldr	r3, [r3, #8]
 800b00c:	4798      	blx	r3
 800b00e:	6823      	ldr	r3, [r4, #0]
 800b010:	4620      	mov	r0, r4
 800b012:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800b014:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b018:	4718      	bx	r3
	...

0800b01c <_ZN8touchgfx3HAL4tickEv>:
 800b01c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b01e:	6803      	ldr	r3, [r0, #0]
 800b020:	4d5b      	ldr	r5, [pc, #364]	; (800b190 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800b022:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800b026:	4604      	mov	r4, r0
 800b028:	4798      	blx	r3
 800b02a:	2800      	cmp	r0, #0
 800b02c:	f000 8095 	beq.w	800b15a <_ZN8touchgfx3HAL4tickEv+0x13e>
 800b030:	2001      	movs	r0, #1
 800b032:	f7f5 fb85 	bl	8000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800b036:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 800b03a:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800b03e:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800b042:	2600      	movs	r6, #0
 800b044:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800b048:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800b04c:	b133      	cbz	r3, 800b05c <_ZN8touchgfx3HAL4tickEv+0x40>
 800b04e:	6823      	ldr	r3, [r4, #0]
 800b050:	4620      	mov	r0, r4
 800b052:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800b056:	4798      	blx	r3
 800b058:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 800b05c:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800b060:	6862      	ldr	r2, [r4, #4]
 800b062:	f083 0301 	eor.w	r3, r3, #1
 800b066:	7253      	strb	r3, [r2, #9]
 800b068:	2601      	movs	r6, #1
 800b06a:	702e      	strb	r6, [r5, #0]
 800b06c:	f005 fff0 	bl	8011050 <_ZN8touchgfx11Application11getInstanceEv>
 800b070:	6803      	ldr	r3, [r0, #0]
 800b072:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b074:	4798      	blx	r3
 800b076:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800b07a:	b90b      	cbnz	r3, 800b080 <_ZN8touchgfx3HAL4tickEv+0x64>
 800b07c:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 800b080:	f005 ffe6 	bl	8011050 <_ZN8touchgfx11Application11getInstanceEv>
 800b084:	6803      	ldr	r3, [r0, #0]
 800b086:	695b      	ldr	r3, [r3, #20]
 800b088:	4798      	blx	r3
 800b08a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800b08c:	6803      	ldr	r3, [r0, #0]
 800b08e:	691b      	ldr	r3, [r3, #16]
 800b090:	4798      	blx	r3
 800b092:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800b096:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800b09a:	3b01      	subs	r3, #1
 800b09c:	b2db      	uxtb	r3, r3
 800b09e:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800b0a2:	b10a      	cbz	r2, 800b0a8 <_ZN8touchgfx3HAL4tickEv+0x8c>
 800b0a4:	2b00      	cmp	r3, #0
 800b0a6:	d1eb      	bne.n	800b080 <_ZN8touchgfx3HAL4tickEv+0x64>
 800b0a8:	4a3a      	ldr	r2, [pc, #232]	; (800b194 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800b0aa:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 800b0ae:	7813      	ldrb	r3, [r2, #0]
 800b0b0:	3301      	adds	r3, #1
 800b0b2:	b25b      	sxtb	r3, r3
 800b0b4:	4299      	cmp	r1, r3
 800b0b6:	7013      	strb	r3, [r2, #0]
 800b0b8:	dc10      	bgt.n	800b0dc <_ZN8touchgfx3HAL4tickEv+0xc0>
 800b0ba:	68e0      	ldr	r0, [r4, #12]
 800b0bc:	2300      	movs	r3, #0
 800b0be:	7013      	strb	r3, [r2, #0]
 800b0c0:	6803      	ldr	r3, [r0, #0]
 800b0c2:	aa03      	add	r2, sp, #12
 800b0c4:	68db      	ldr	r3, [r3, #12]
 800b0c6:	a902      	add	r1, sp, #8
 800b0c8:	4798      	blx	r3
 800b0ca:	6823      	ldr	r3, [r4, #0]
 800b0cc:	2800      	cmp	r0, #0
 800b0ce:	d050      	beq.n	800b172 <_ZN8touchgfx3HAL4tickEv+0x156>
 800b0d0:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800b0d4:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800b0d8:	4620      	mov	r0, r4
 800b0da:	4798      	blx	r3
 800b0dc:	6960      	ldr	r0, [r4, #20]
 800b0de:	2300      	movs	r3, #0
 800b0e0:	f88d 3007 	strb.w	r3, [sp, #7]
 800b0e4:	b158      	cbz	r0, 800b0fe <_ZN8touchgfx3HAL4tickEv+0xe2>
 800b0e6:	6803      	ldr	r3, [r0, #0]
 800b0e8:	f10d 0107 	add.w	r1, sp, #7
 800b0ec:	68db      	ldr	r3, [r3, #12]
 800b0ee:	4798      	blx	r3
 800b0f0:	b128      	cbz	r0, 800b0fe <_ZN8touchgfx3HAL4tickEv+0xe2>
 800b0f2:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800b0f4:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800b0f8:	6803      	ldr	r3, [r0, #0]
 800b0fa:	68db      	ldr	r3, [r3, #12]
 800b0fc:	4798      	blx	r3
 800b0fe:	f104 001c 	add.w	r0, r4, #28
 800b102:	f014 fef9 	bl	801fef8 <_ZN8touchgfx8Gestures4tickEv>
 800b106:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800b10a:	b30b      	cbz	r3, 800b150 <_ZN8touchgfx3HAL4tickEv+0x134>
 800b10c:	6920      	ldr	r0, [r4, #16]
 800b10e:	6803      	ldr	r3, [r0, #0]
 800b110:	691b      	ldr	r3, [r3, #16]
 800b112:	4798      	blx	r3
 800b114:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800b116:	4606      	mov	r6, r0
 800b118:	b903      	cbnz	r3, 800b11c <_ZN8touchgfx3HAL4tickEv+0x100>
 800b11a:	6720      	str	r0, [r4, #112]	; 0x70
 800b11c:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800b11e:	4a1e      	ldr	r2, [pc, #120]	; (800b198 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800b120:	1af3      	subs	r3, r6, r3
 800b122:	4293      	cmp	r3, r2
 800b124:	d914      	bls.n	800b150 <_ZN8touchgfx3HAL4tickEv+0x134>
 800b126:	6920      	ldr	r0, [r4, #16]
 800b128:	6803      	ldr	r3, [r0, #0]
 800b12a:	699b      	ldr	r3, [r3, #24]
 800b12c:	4798      	blx	r3
 800b12e:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800b130:	2264      	movs	r2, #100	; 0x64
 800b132:	1af3      	subs	r3, r6, r3
 800b134:	fbb3 f3f2 	udiv	r3, r3, r2
 800b138:	fbb0 f0f3 	udiv	r0, r0, r3
 800b13c:	2800      	cmp	r0, #0
 800b13e:	dc1d      	bgt.n	800b17c <_ZN8touchgfx3HAL4tickEv+0x160>
 800b140:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800b144:	6920      	ldr	r0, [r4, #16]
 800b146:	6803      	ldr	r3, [r0, #0]
 800b148:	2100      	movs	r1, #0
 800b14a:	69db      	ldr	r3, [r3, #28]
 800b14c:	4798      	blx	r3
 800b14e:	6726      	str	r6, [r4, #112]	; 0x70
 800b150:	f005 ff7e 	bl	8011050 <_ZN8touchgfx11Application11getInstanceEv>
 800b154:	6803      	ldr	r3, [r0, #0]
 800b156:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b158:	4798      	blx	r3
 800b15a:	6823      	ldr	r3, [r4, #0]
 800b15c:	4620      	mov	r0, r4
 800b15e:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800b162:	4798      	blx	r3
 800b164:	2001      	movs	r0, #1
 800b166:	f7f5 faec 	bl	8000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800b16a:	2300      	movs	r3, #0
 800b16c:	702b      	strb	r3, [r5, #0]
 800b16e:	b004      	add	sp, #16
 800b170:	bd70      	pop	{r4, r5, r6, pc}
 800b172:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800b176:	4620      	mov	r0, r4
 800b178:	4798      	blx	r3
 800b17a:	e7af      	b.n	800b0dc <_ZN8touchgfx3HAL4tickEv+0xc0>
 800b17c:	2863      	cmp	r0, #99	; 0x63
 800b17e:	bfcb      	itete	gt
 800b180:	2300      	movgt	r3, #0
 800b182:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800b186:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800b18a:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800b18e:	e7d9      	b.n	800b144 <_ZN8touchgfx3HAL4tickEv+0x128>
 800b190:	200155b0 	.word	0x200155b0
 800b194:	200155b1 	.word	0x200155b1
 800b198:	05f5e100 	.word	0x05f5e100

0800b19c <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800b19c:	f7f5 bbd4 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800b1a0 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800b1a0:	6581      	str	r1, [r0, #88]	; 0x58
 800b1a2:	301c      	adds	r0, #28
 800b1a4:	f014 bea6 	b.w	801fef4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800b1a8 <_ZN8touchgfx3HAL5touchEll>:
 800b1a8:	b530      	push	{r4, r5, lr}
 800b1aa:	b087      	sub	sp, #28
 800b1ac:	4604      	mov	r4, r0
 800b1ae:	a804      	add	r0, sp, #16
 800b1b0:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800b1b4:	f005 fd0e 	bl	8010bd4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800b1b8:	9b04      	ldr	r3, [sp, #16]
 800b1ba:	f8ad 300c 	strh.w	r3, [sp, #12]
 800b1be:	a906      	add	r1, sp, #24
 800b1c0:	9b05      	ldr	r3, [sp, #20]
 800b1c2:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800b1c6:	a803      	add	r0, sp, #12
 800b1c8:	f005 fd56 	bl	8010c78 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800b1cc:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800b1d0:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800b1d4:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800b1d8:	f104 001c 	add.w	r0, r4, #28
 800b1dc:	b189      	cbz	r1, 800b202 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800b1de:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800b1e2:	9300      	str	r3, [sp, #0]
 800b1e4:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800b1e8:	4613      	mov	r3, r2
 800b1ea:	462a      	mov	r2, r5
 800b1ec:	f014 fe92 	bl	801ff14 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800b1f0:	b128      	cbz	r0, 800b1fe <_ZN8touchgfx3HAL5touchEll+0x56>
 800b1f2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800b1f6:	65e3      	str	r3, [r4, #92]	; 0x5c
 800b1f8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800b1fc:	6623      	str	r3, [r4, #96]	; 0x60
 800b1fe:	b007      	add	sp, #28
 800b200:	bd30      	pop	{r4, r5, pc}
 800b202:	f014 fec7 	bl	801ff94 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b206:	2301      	movs	r3, #1
 800b208:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800b20c:	e7f1      	b.n	800b1f2 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800b20e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800b20e:	b510      	push	{r4, lr}
 800b210:	2b00      	cmp	r3, #0
 800b212:	d046      	beq.n	800b2a2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b214:	ea81 0002 	eor.w	r0, r1, r2
 800b218:	07c4      	lsls	r4, r0, #31
 800b21a:	d508      	bpl.n	800b22e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800b21c:	440b      	add	r3, r1
 800b21e:	3a01      	subs	r2, #1
 800b220:	428b      	cmp	r3, r1
 800b222:	d93e      	bls.n	800b2a2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b224:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b228:	f801 0b01 	strb.w	r0, [r1], #1
 800b22c:	e7f8      	b.n	800b220 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800b22e:	07d0      	lsls	r0, r2, #31
 800b230:	bf42      	ittt	mi
 800b232:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800b236:	f801 0b01 	strbmi.w	r0, [r1], #1
 800b23a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800b23e:	2b01      	cmp	r3, #1
 800b240:	d911      	bls.n	800b266 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b242:	ea81 0402 	eor.w	r4, r1, r2
 800b246:	07a4      	lsls	r4, r4, #30
 800b248:	4610      	mov	r0, r2
 800b24a:	d022      	beq.n	800b292 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800b24c:	f023 0401 	bic.w	r4, r3, #1
 800b250:	440c      	add	r4, r1
 800b252:	428c      	cmp	r4, r1
 800b254:	4602      	mov	r2, r0
 800b256:	d904      	bls.n	800b262 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800b258:	8812      	ldrh	r2, [r2, #0]
 800b25a:	f821 2b02 	strh.w	r2, [r1], #2
 800b25e:	3002      	adds	r0, #2
 800b260:	e7f7      	b.n	800b252 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800b262:	f003 0301 	and.w	r3, r3, #1
 800b266:	f023 0003 	bic.w	r0, r3, #3
 800b26a:	4408      	add	r0, r1
 800b26c:	4288      	cmp	r0, r1
 800b26e:	4614      	mov	r4, r2
 800b270:	d904      	bls.n	800b27c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800b272:	6824      	ldr	r4, [r4, #0]
 800b274:	f841 4b04 	str.w	r4, [r1], #4
 800b278:	3204      	adds	r2, #4
 800b27a:	e7f7      	b.n	800b26c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800b27c:	f003 0303 	and.w	r3, r3, #3
 800b280:	440b      	add	r3, r1
 800b282:	3a01      	subs	r2, #1
 800b284:	428b      	cmp	r3, r1
 800b286:	d90c      	bls.n	800b2a2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b288:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b28c:	f801 0b01 	strb.w	r0, [r1], #1
 800b290:	e7f8      	b.n	800b284 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800b292:	0790      	lsls	r0, r2, #30
 800b294:	d0e7      	beq.n	800b266 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b296:	f832 0b02 	ldrh.w	r0, [r2], #2
 800b29a:	f821 0b02 	strh.w	r0, [r1], #2
 800b29e:	3b02      	subs	r3, #2
 800b2a0:	e7e1      	b.n	800b266 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b2a2:	2001      	movs	r0, #1
 800b2a4:	bd10      	pop	{r4, pc}

0800b2a6 <_ZN8touchgfx3HAL7noTouchEv>:
 800b2a6:	b510      	push	{r4, lr}
 800b2a8:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800b2ac:	4604      	mov	r4, r0
 800b2ae:	b153      	cbz	r3, 800b2c6 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800b2b0:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800b2b4:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800b2b8:	2101      	movs	r1, #1
 800b2ba:	301c      	adds	r0, #28
 800b2bc:	f014 fe6a 	bl	801ff94 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b2c0:	2300      	movs	r3, #0
 800b2c2:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800b2c6:	bd10      	pop	{r4, pc}

0800b2c8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800b2c8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b2cc:	b085      	sub	sp, #20
 800b2ce:	ad04      	add	r5, sp, #16
 800b2d0:	4604      	mov	r4, r0
 800b2d2:	2000      	movs	r0, #0
 800b2d4:	f845 0d04 	str.w	r0, [r5, #-4]!
 800b2d8:	69a0      	ldr	r0, [r4, #24]
 800b2da:	6806      	ldr	r6, [r0, #0]
 800b2dc:	9501      	str	r5, [sp, #4]
 800b2de:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800b2e2:	9500      	str	r5, [sp, #0]
 800b2e4:	6835      	ldr	r5, [r6, #0]
 800b2e6:	4699      	mov	r9, r3
 800b2e8:	460f      	mov	r7, r1
 800b2ea:	4690      	mov	r8, r2
 800b2ec:	47a8      	blx	r5
 800b2ee:	4d10      	ldr	r5, [pc, #64]	; (800b330 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800b2f0:	4606      	mov	r6, r0
 800b2f2:	f8a5 9000 	strh.w	r9, [r5]
 800b2f6:	f7f7 f9ef 	bl	80026d8 <_ZN8touchgfx3HAL3lcdEv>
 800b2fa:	6803      	ldr	r3, [r0, #0]
 800b2fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b2fe:	4798      	blx	r3
 800b300:	b128      	cbz	r0, 800b30e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800b302:	2801      	cmp	r0, #1
 800b304:	d00b      	beq.n	800b31e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800b306:	4630      	mov	r0, r6
 800b308:	b005      	add	sp, #20
 800b30a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b30e:	882b      	ldrh	r3, [r5, #0]
 800b310:	fb08 7203 	mla	r2, r8, r3, r7
 800b314:	9b03      	ldr	r3, [sp, #12]
 800b316:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800b31a:	63e3      	str	r3, [r4, #60]	; 0x3c
 800b31c:	e7f3      	b.n	800b306 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b31e:	882a      	ldrh	r2, [r5, #0]
 800b320:	9b03      	ldr	r3, [sp, #12]
 800b322:	fb08 7202 	mla	r2, r8, r2, r7
 800b326:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800b32a:	1a9a      	subs	r2, r3, r2
 800b32c:	63e2      	str	r2, [r4, #60]	; 0x3c
 800b32e:	e7ea      	b.n	800b306 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b330:	200155a6 	.word	0x200155a6

0800b334 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800b334:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b336:	b08b      	sub	sp, #44	; 0x2c
 800b338:	4617      	mov	r7, r2
 800b33a:	4604      	mov	r4, r0
 800b33c:	460e      	mov	r6, r1
 800b33e:	461d      	mov	r5, r3
 800b340:	f7f7 f9ca 	bl	80026d8 <_ZN8touchgfx3HAL3lcdEv>
 800b344:	6803      	ldr	r3, [r0, #0]
 800b346:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b348:	4798      	blx	r3
 800b34a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800b34e:	9007      	str	r0, [sp, #28]
 800b350:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b354:	4b0d      	ldr	r3, [pc, #52]	; (800b38c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800b356:	6822      	ldr	r2, [r4, #0]
 800b358:	881b      	ldrh	r3, [r3, #0]
 800b35a:	9306      	str	r3, [sp, #24]
 800b35c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800b360:	9305      	str	r3, [sp, #20]
 800b362:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800b366:	9304      	str	r3, [sp, #16]
 800b368:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b36c:	9303      	str	r3, [sp, #12]
 800b36e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b372:	9302      	str	r3, [sp, #8]
 800b374:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b378:	e9cd 5300 	strd	r5, r3, [sp]
 800b37c:	4631      	mov	r1, r6
 800b37e:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800b380:	463b      	mov	r3, r7
 800b382:	2200      	movs	r2, #0
 800b384:	4620      	mov	r0, r4
 800b386:	47a8      	blx	r5
 800b388:	b00b      	add	sp, #44	; 0x2c
 800b38a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b38c:	200155a6 	.word	0x200155a6

0800b390 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800b390:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b394:	4698      	mov	r8, r3
 800b396:	6803      	ldr	r3, [r0, #0]
 800b398:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800b39a:	4b15      	ldr	r3, [pc, #84]	; (800b3f0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800b39c:	b08b      	sub	sp, #44	; 0x2c
 800b39e:	4617      	mov	r7, r2
 800b3a0:	f8b3 9000 	ldrh.w	r9, [r3]
 800b3a4:	460e      	mov	r6, r1
 800b3a6:	4604      	mov	r4, r0
 800b3a8:	f7f7 f996 	bl	80026d8 <_ZN8touchgfx3HAL3lcdEv>
 800b3ac:	6803      	ldr	r3, [r0, #0]
 800b3ae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b3b0:	4798      	blx	r3
 800b3b2:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800b3b6:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b3ba:	2302      	movs	r3, #2
 800b3bc:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800b3c0:	2301      	movs	r3, #1
 800b3c2:	9305      	str	r3, [sp, #20]
 800b3c4:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800b3c8:	9304      	str	r3, [sp, #16]
 800b3ca:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800b3ce:	9303      	str	r3, [sp, #12]
 800b3d0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b3d4:	9302      	str	r3, [sp, #8]
 800b3d6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b3da:	2200      	movs	r2, #0
 800b3dc:	e9cd 8300 	strd	r8, r3, [sp]
 800b3e0:	4631      	mov	r1, r6
 800b3e2:	463b      	mov	r3, r7
 800b3e4:	4620      	mov	r0, r4
 800b3e6:	47a8      	blx	r5
 800b3e8:	b00b      	add	sp, #44	; 0x2c
 800b3ea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b3ee:	bf00      	nop
 800b3f0:	200155a6 	.word	0x200155a6

0800b3f4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800b3f4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b3f8:	4698      	mov	r8, r3
 800b3fa:	6803      	ldr	r3, [r0, #0]
 800b3fc:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 800b3fe:	4b11      	ldr	r3, [pc, #68]	; (800b444 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800b400:	b087      	sub	sp, #28
 800b402:	f8b3 9000 	ldrh.w	r9, [r3]
 800b406:	460e      	mov	r6, r1
 800b408:	4617      	mov	r7, r2
 800b40a:	4604      	mov	r4, r0
 800b40c:	f7f7 f964 	bl	80026d8 <_ZN8touchgfx3HAL3lcdEv>
 800b410:	6803      	ldr	r3, [r0, #0]
 800b412:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b414:	4798      	blx	r3
 800b416:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800b41a:	f8cd 900c 	str.w	r9, [sp, #12]
 800b41e:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800b422:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800b426:	9302      	str	r3, [sp, #8]
 800b428:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800b42c:	9301      	str	r3, [sp, #4]
 800b42e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800b432:	9300      	str	r3, [sp, #0]
 800b434:	463a      	mov	r2, r7
 800b436:	4643      	mov	r3, r8
 800b438:	4631      	mov	r1, r6
 800b43a:	4620      	mov	r0, r4
 800b43c:	47a8      	blx	r5
 800b43e:	b007      	add	sp, #28
 800b440:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b444:	200155a6 	.word	0x200155a6

0800b448 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800b448:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b44c:	4604      	mov	r4, r0
 800b44e:	b08f      	sub	sp, #60	; 0x3c
 800b450:	4610      	mov	r0, r2
 800b452:	460d      	mov	r5, r1
 800b454:	4691      	mov	r9, r2
 800b456:	461e      	mov	r6, r3
 800b458:	f008 ff96 	bl	8014388 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b45c:	2800      	cmp	r0, #0
 800b45e:	f000 809d 	beq.w	800b59c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800b462:	6823      	ldr	r3, [r4, #0]
 800b464:	f8df b198 	ldr.w	fp, [pc, #408]	; 800b600 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800b468:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b46a:	f8df a198 	ldr.w	sl, [pc, #408]	; 800b604 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800b46e:	4f61      	ldr	r7, [pc, #388]	; (800b5f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b470:	4620      	mov	r0, r4
 800b472:	4798      	blx	r3
 800b474:	6823      	ldr	r3, [r4, #0]
 800b476:	4620      	mov	r0, r4
 800b478:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b47a:	4798      	blx	r3
 800b47c:	f8bb 3000 	ldrh.w	r3, [fp]
 800b480:	9301      	str	r3, [sp, #4]
 800b482:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800b486:	f8ba 3000 	ldrh.w	r3, [sl]
 800b48a:	9302      	str	r3, [sp, #8]
 800b48c:	883b      	ldrh	r3, [r7, #0]
 800b48e:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800b492:	9303      	str	r3, [sp, #12]
 800b494:	4b58      	ldr	r3, [pc, #352]	; (800b5f8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b496:	9305      	str	r3, [sp, #20]
 800b498:	881a      	ldrh	r2, [r3, #0]
 800b49a:	9204      	str	r2, [sp, #16]
 800b49c:	4640      	mov	r0, r8
 800b49e:	f009 f807 	bl	80144b0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b4a2:	8038      	strh	r0, [r7, #0]
 800b4a4:	4640      	mov	r0, r8
 800b4a6:	f009 f837 	bl	8014518 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b4aa:	9b05      	ldr	r3, [sp, #20]
 800b4ac:	b280      	uxth	r0, r0
 800b4ae:	8018      	strh	r0, [r3, #0]
 800b4b0:	4b52      	ldr	r3, [pc, #328]	; (800b5fc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800b4b2:	781b      	ldrb	r3, [r3, #0]
 800b4b4:	2b00      	cmp	r3, #0
 800b4b6:	d174      	bne.n	800b5a2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800b4b8:	883b      	ldrh	r3, [r7, #0]
 800b4ba:	f8ab 3000 	strh.w	r3, [fp]
 800b4be:	f8aa 0000 	strh.w	r0, [sl]
 800b4c2:	4648      	mov	r0, r9
 800b4c4:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800b4c8:	f008 ff5e 	bl	8014388 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b4cc:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800b4d0:	2200      	movs	r2, #0
 800b4d2:	4611      	mov	r1, r2
 800b4d4:	4628      	mov	r0, r5
 800b4d6:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800b4da:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800b4de:	f7f7 fb9d 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
 800b4e2:	2301      	movs	r3, #1
 800b4e4:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800b4e8:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800b4ec:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800b4f0:	2b00      	cmp	r3, #0
 800b4f2:	dd5c      	ble.n	800b5ae <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b4f4:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800b4f8:	2b00      	cmp	r3, #0
 800b4fa:	dd58      	ble.n	800b5ae <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b4fc:	462a      	mov	r2, r5
 800b4fe:	ab0a      	add	r3, sp, #40	; 0x28
 800b500:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b504:	6851      	ldr	r1, [r2, #4]
 800b506:	c303      	stmia	r3!, {r0, r1}
 800b508:	4631      	mov	r1, r6
 800b50a:	a80a      	add	r0, sp, #40	; 0x28
 800b50c:	f7ff fc0e 	bl	800ad2c <_ZN8touchgfx4RectaNERKS0_>
 800b510:	4b38      	ldr	r3, [pc, #224]	; (800b5f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b512:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b516:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800b51a:	2100      	movs	r1, #0
 800b51c:	aa0a      	add	r2, sp, #40	; 0x28
 800b51e:	4b36      	ldr	r3, [pc, #216]	; (800b5f8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b520:	910c      	str	r1, [sp, #48]	; 0x30
 800b522:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b526:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b52a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800b52e:	ab08      	add	r3, sp, #32
 800b530:	e883 0003 	stmia.w	r3, {r0, r1}
 800b534:	4618      	mov	r0, r3
 800b536:	a90c      	add	r1, sp, #48	; 0x30
 800b538:	f7ff fbf8 	bl	800ad2c <_ZN8touchgfx4RectaNERKS0_>
 800b53c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800b53e:	2b00      	cmp	r3, #0
 800b540:	d13c      	bne.n	800b5bc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800b542:	2000      	movs	r0, #0
 800b544:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 800b548:	2600      	movs	r6, #0
 800b54a:	682a      	ldr	r2, [r5, #0]
 800b54c:	696b      	ldr	r3, [r5, #20]
 800b54e:	616e      	str	r6, [r5, #20]
 800b550:	9305      	str	r3, [sp, #20]
 800b552:	6892      	ldr	r2, [r2, #8]
 800b554:	a908      	add	r1, sp, #32
 800b556:	4628      	mov	r0, r5
 800b558:	4790      	blx	r2
 800b55a:	9b05      	ldr	r3, [sp, #20]
 800b55c:	616b      	str	r3, [r5, #20]
 800b55e:	4652      	mov	r2, sl
 800b560:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 800b564:	4649      	mov	r1, r9
 800b566:	4628      	mov	r0, r5
 800b568:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800b56c:	f7f7 fb56 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
 800b570:	4b23      	ldr	r3, [pc, #140]	; (800b600 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800b572:	9a01      	ldr	r2, [sp, #4]
 800b574:	801a      	strh	r2, [r3, #0]
 800b576:	4b23      	ldr	r3, [pc, #140]	; (800b604 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800b578:	9a02      	ldr	r2, [sp, #8]
 800b57a:	801a      	strh	r2, [r3, #0]
 800b57c:	4b1d      	ldr	r3, [pc, #116]	; (800b5f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b57e:	9a03      	ldr	r2, [sp, #12]
 800b580:	801a      	strh	r2, [r3, #0]
 800b582:	4b1d      	ldr	r3, [pc, #116]	; (800b5f8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b584:	9a04      	ldr	r2, [sp, #16]
 800b586:	801a      	strh	r2, [r3, #0]
 800b588:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800b58c:	6823      	ldr	r3, [r4, #0]
 800b58e:	4620      	mov	r0, r4
 800b590:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b592:	4798      	blx	r3
 800b594:	6823      	ldr	r3, [r4, #0]
 800b596:	4620      	mov	r0, r4
 800b598:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b59a:	4798      	blx	r3
 800b59c:	b00f      	add	sp, #60	; 0x3c
 800b59e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b5a2:	883b      	ldrh	r3, [r7, #0]
 800b5a4:	f8ab 0000 	strh.w	r0, [fp]
 800b5a8:	f8aa 3000 	strh.w	r3, [sl]
 800b5ac:	e789      	b.n	800b4c2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800b5ae:	462a      	mov	r2, r5
 800b5b0:	ab0a      	add	r3, sp, #40	; 0x28
 800b5b2:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b5b6:	6851      	ldr	r1, [r2, #4]
 800b5b8:	c303      	stmia	r3!, {r0, r1}
 800b5ba:	e7a9      	b.n	800b510 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800b5bc:	a807      	add	r0, sp, #28
 800b5be:	f009 f8e7 	bl	8014790 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b5c2:	4606      	mov	r6, r0
 800b5c4:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800b5c6:	6803      	ldr	r3, [r0, #0]
 800b5c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b5ca:	4798      	blx	r3
 800b5cc:	4286      	cmp	r6, r0
 800b5ce:	d1b8      	bne.n	800b542 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800b5d0:	f7f7 f882 	bl	80026d8 <_ZN8touchgfx3HAL3lcdEv>
 800b5d4:	6803      	ldr	r3, [r0, #0]
 800b5d6:	4606      	mov	r6, r0
 800b5d8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b5da:	9305      	str	r3, [sp, #20]
 800b5dc:	a807      	add	r0, sp, #28
 800b5de:	f009 f8d7 	bl	8014790 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b5e2:	9b05      	ldr	r3, [sp, #20]
 800b5e4:	4601      	mov	r1, r0
 800b5e6:	4630      	mov	r0, r6
 800b5e8:	4798      	blx	r3
 800b5ea:	f080 0001 	eor.w	r0, r0, #1
 800b5ee:	b2c0      	uxtb	r0, r0
 800b5f0:	e7a8      	b.n	800b544 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800b5f2:	bf00      	nop
 800b5f4:	200155a0 	.word	0x200155a0
 800b5f8:	200155a2 	.word	0x200155a2
 800b5fc:	200155a4 	.word	0x200155a4
 800b600:	200155a6 	.word	0x200155a6
 800b604:	200155a8 	.word	0x200155a8

0800b608 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800b608:	b510      	push	{r4, lr}
 800b60a:	4b07      	ldr	r3, [pc, #28]	; (800b628 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800b60c:	781b      	ldrb	r3, [r3, #0]
 800b60e:	4604      	mov	r4, r0
 800b610:	b13b      	cbz	r3, 800b622 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b612:	6803      	ldr	r3, [r0, #0]
 800b614:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b616:	4798      	blx	r3
 800b618:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800b61a:	4283      	cmp	r3, r0
 800b61c:	d101      	bne.n	800b622 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b61e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800b620:	bd10      	pop	{r4, pc}
 800b622:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800b624:	e7fc      	b.n	800b620 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800b626:	bf00      	nop
 800b628:	200155aa 	.word	0x200155aa

0800b62c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800b62c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b630:	b08a      	sub	sp, #40	; 0x28
 800b632:	461d      	mov	r5, r3
 800b634:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800b638:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b63c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b640:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b644:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b648:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b64c:	2400      	movs	r4, #0
 800b64e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b652:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800b656:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b65a:	4690      	mov	r8, r2
 800b65c:	4607      	mov	r7, r0
 800b65e:	9404      	str	r4, [sp, #16]
 800b660:	f88d 4020 	strb.w	r4, [sp, #32]
 800b664:	f7ff ffd0 	bl	800b608 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b668:	fb06 8505 	mla	r5, r6, r5, r8
 800b66c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b670:	6878      	ldr	r0, [r7, #4]
 800b672:	9505      	str	r5, [sp, #20]
 800b674:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b678:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b67c:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 800b680:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800b684:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800b688:	6803      	ldr	r3, [r0, #0]
 800b68a:	a901      	add	r1, sp, #4
 800b68c:	685b      	ldr	r3, [r3, #4]
 800b68e:	4798      	blx	r3
 800b690:	b00a      	add	sp, #40	; 0x28
 800b692:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b696 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800b696:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b69a:	b08b      	sub	sp, #44	; 0x2c
 800b69c:	2400      	movs	r4, #0
 800b69e:	461d      	mov	r5, r3
 800b6a0:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800b6a4:	4688      	mov	r8, r1
 800b6a6:	4691      	mov	r9, r2
 800b6a8:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 800b6ac:	9404      	str	r4, [sp, #16]
 800b6ae:	4607      	mov	r7, r0
 800b6b0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b6b4:	f7ff ffa8 	bl	800b608 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b6b8:	fb06 9505 	mla	r5, r6, r5, r9
 800b6bc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b6c0:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b6c4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b6c8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b6cc:	6878      	ldr	r0, [r7, #4]
 800b6ce:	9505      	str	r5, [sp, #20]
 800b6d0:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b6d4:	f8ad 401c 	strh.w	r4, [sp, #28]
 800b6d8:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b6dc:	f8cd 8010 	str.w	r8, [sp, #16]
 800b6e0:	f8ad 4020 	strh.w	r4, [sp, #32]
 800b6e4:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b6e8:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800b6ec:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800b6f0:	6803      	ldr	r3, [r0, #0]
 800b6f2:	a901      	add	r1, sp, #4
 800b6f4:	685b      	ldr	r3, [r3, #4]
 800b6f6:	4798      	blx	r3
 800b6f8:	b00b      	add	sp, #44	; 0x2c
 800b6fa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800b700 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800b700:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b704:	b08a      	sub	sp, #40	; 0x28
 800b706:	4698      	mov	r8, r3
 800b708:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 800b70c:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 800b710:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 800b714:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 800b718:	2300      	movs	r3, #0
 800b71a:	2d0b      	cmp	r5, #11
 800b71c:	4606      	mov	r6, r0
 800b71e:	9304      	str	r3, [sp, #16]
 800b720:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 800b724:	d138      	bne.n	800b798 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800b726:	2380      	movs	r3, #128	; 0x80
 800b728:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b72c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b730:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b734:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b738:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b73c:	f88d 0020 	strb.w	r0, [sp, #32]
 800b740:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b744:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b748:	4630      	mov	r0, r6
 800b74a:	9203      	str	r2, [sp, #12]
 800b74c:	f7ff ff5c 	bl	800b608 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b750:	2c0b      	cmp	r4, #11
 800b752:	bf98      	it	ls
 800b754:	4b1b      	ldrls	r3, [pc, #108]	; (800b7c4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800b756:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800b75a:	bf98      	it	ls
 800b75c:	5d19      	ldrbls	r1, [r3, r4]
 800b75e:	f8ad 701e 	strh.w	r7, [sp, #30]
 800b762:	bf88      	it	hi
 800b764:	2100      	movhi	r1, #0
 800b766:	fb02 8307 	mla	r3, r2, r7, r8
 800b76a:	10c9      	asrs	r1, r1, #3
 800b76c:	fb01 0003 	mla	r0, r1, r3, r0
 800b770:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 800b774:	9005      	str	r0, [sp, #20]
 800b776:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800b77a:	6870      	ldr	r0, [r6, #4]
 800b77c:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 800b780:	2300      	movs	r3, #0
 800b782:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b786:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b78a:	6803      	ldr	r3, [r0, #0]
 800b78c:	a901      	add	r1, sp, #4
 800b78e:	685b      	ldr	r3, [r3, #4]
 800b790:	4798      	blx	r3
 800b792:	b00a      	add	sp, #40	; 0x28
 800b794:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b798:	2d02      	cmp	r5, #2
 800b79a:	d109      	bne.n	800b7b0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800b79c:	28ff      	cmp	r0, #255	; 0xff
 800b79e:	d105      	bne.n	800b7ac <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800b7a0:	f1bc 0f00 	cmp.w	ip, #0
 800b7a4:	bf14      	ite	ne
 800b7a6:	2340      	movne	r3, #64	; 0x40
 800b7a8:	2320      	moveq	r3, #32
 800b7aa:	e7bd      	b.n	800b728 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b7ac:	2340      	movs	r3, #64	; 0x40
 800b7ae:	e7bb      	b.n	800b728 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b7b0:	28ff      	cmp	r0, #255	; 0xff
 800b7b2:	d105      	bne.n	800b7c0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800b7b4:	f1bc 0f00 	cmp.w	ip, #0
 800b7b8:	bf14      	ite	ne
 800b7ba:	2304      	movne	r3, #4
 800b7bc:	2301      	moveq	r3, #1
 800b7be:	e7b3      	b.n	800b728 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b7c0:	2304      	movs	r3, #4
 800b7c2:	e7b1      	b.n	800b728 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b7c4:	080237c4 	.word	0x080237c4

0800b7c8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800b7c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b7cc:	b08b      	sub	sp, #44	; 0x2c
 800b7ce:	461d      	mov	r5, r3
 800b7d0:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800b7d4:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 800b7d8:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 800b7dc:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 800b7e0:	bf14      	ite	ne
 800b7e2:	2308      	movne	r3, #8
 800b7e4:	2302      	moveq	r3, #2
 800b7e6:	2400      	movs	r4, #0
 800b7e8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b7ec:	4688      	mov	r8, r1
 800b7ee:	4693      	mov	fp, r2
 800b7f0:	9404      	str	r4, [sp, #16]
 800b7f2:	4607      	mov	r7, r0
 800b7f4:	f7ff ff08 	bl	800b608 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b7f8:	2e0b      	cmp	r6, #11
 800b7fa:	bf98      	it	ls
 800b7fc:	4b15      	ldrls	r3, [pc, #84]	; (800b854 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800b7fe:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800b802:	bf98      	it	ls
 800b804:	5d9c      	ldrbls	r4, [r3, r6]
 800b806:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800b80a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b80e:	fb05 b50a 	mla	r5, r5, sl, fp
 800b812:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800b816:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b81a:	10e4      	asrs	r4, r4, #3
 800b81c:	fb04 0405 	mla	r4, r4, r5, r0
 800b820:	2300      	movs	r3, #0
 800b822:	6878      	ldr	r0, [r7, #4]
 800b824:	9405      	str	r4, [sp, #20]
 800b826:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b82a:	f8ad a01e 	strh.w	sl, [sp, #30]
 800b82e:	f8cd 8010 	str.w	r8, [sp, #16]
 800b832:	f88d 9020 	strb.w	r9, [sp, #32]
 800b836:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 800b83a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b83e:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 800b842:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 800b846:	6803      	ldr	r3, [r0, #0]
 800b848:	a901      	add	r1, sp, #4
 800b84a:	685b      	ldr	r3, [r3, #4]
 800b84c:	4798      	blx	r3
 800b84e:	b00b      	add	sp, #44	; 0x2c
 800b850:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b854:	080237c4 	.word	0x080237c4

0800b858 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800b858:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b85c:	461e      	mov	r6, r3
 800b85e:	4b0a      	ldr	r3, [pc, #40]	; (800b888 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800b860:	460f      	mov	r7, r1
 800b862:	881d      	ldrh	r5, [r3, #0]
 800b864:	4690      	mov	r8, r2
 800b866:	f7f6 ff37 	bl	80026d8 <_ZN8touchgfx3HAL3lcdEv>
 800b86a:	6803      	ldr	r3, [r0, #0]
 800b86c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b86e:	4798      	blx	r3
 800b870:	280b      	cmp	r0, #11
 800b872:	bf9a      	itte	ls
 800b874:	4b05      	ldrls	r3, [pc, #20]	; (800b88c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800b876:	5c1c      	ldrbls	r4, [r3, r0]
 800b878:	2400      	movhi	r4, #0
 800b87a:	fb08 7005 	mla	r0, r8, r5, r7
 800b87e:	10e4      	asrs	r4, r4, #3
 800b880:	fb04 6000 	mla	r0, r4, r0, r6
 800b884:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b888:	200155a6 	.word	0x200155a6
 800b88c:	080237c4 	.word	0x080237c4

0800b890 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800b890:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b892:	b08b      	sub	sp, #44	; 0x2c
 800b894:	461f      	mov	r7, r3
 800b896:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800b89a:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b89e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b8a2:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b8a6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b8aa:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b8ae:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b8b2:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b8b6:	2500      	movs	r5, #0
 800b8b8:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800b8bc:	f88d 3020 	strb.w	r3, [sp, #32]
 800b8c0:	4604      	mov	r4, r0
 800b8c2:	4616      	mov	r6, r2
 800b8c4:	9504      	str	r5, [sp, #16]
 800b8c6:	f7ff fe9f 	bl	800b608 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b8ca:	463a      	mov	r2, r7
 800b8cc:	4631      	mov	r1, r6
 800b8ce:	4603      	mov	r3, r0
 800b8d0:	4620      	mov	r0, r4
 800b8d2:	f7ff ffc1 	bl	800b858 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b8d6:	4b0e      	ldr	r3, [pc, #56]	; (800b910 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800b8d8:	9005      	str	r0, [sp, #20]
 800b8da:	881b      	ldrh	r3, [r3, #0]
 800b8dc:	f8ad 301e 	strh.w	r3, [sp, #30]
 800b8e0:	f7f6 fefa 	bl	80026d8 <_ZN8touchgfx3HAL3lcdEv>
 800b8e4:	6803      	ldr	r3, [r0, #0]
 800b8e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b8e8:	4798      	blx	r3
 800b8ea:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800b8ec:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800b8f0:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800b8f4:	9304      	str	r3, [sp, #16]
 800b8f6:	6860      	ldr	r0, [r4, #4]
 800b8f8:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800b8fc:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800b900:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 800b904:	6803      	ldr	r3, [r0, #0]
 800b906:	a901      	add	r1, sp, #4
 800b908:	685b      	ldr	r3, [r3, #4]
 800b90a:	4798      	blx	r3
 800b90c:	b00b      	add	sp, #44	; 0x2c
 800b90e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b910:	200155a6 	.word	0x200155a6

0800b914 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800b914:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b916:	b08d      	sub	sp, #52	; 0x34
 800b918:	466b      	mov	r3, sp
 800b91a:	e883 0006 	stmia.w	r3, {r1, r2}
 800b91e:	2300      	movs	r3, #0
 800b920:	9306      	str	r3, [sp, #24]
 800b922:	6803      	ldr	r3, [r0, #0]
 800b924:	f8bd 6000 	ldrh.w	r6, [sp]
 800b928:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b92a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800b92e:	2501      	movs	r5, #1
 800b930:	9503      	str	r5, [sp, #12]
 800b932:	4604      	mov	r4, r0
 800b934:	4798      	blx	r3
 800b936:	463a      	mov	r2, r7
 800b938:	4631      	mov	r1, r6
 800b93a:	4603      	mov	r3, r0
 800b93c:	4620      	mov	r0, r4
 800b93e:	f7ff ff8b 	bl	800b858 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b942:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800b944:	9307      	str	r3, [sp, #28]
 800b946:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b94a:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b94e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b952:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800b956:	4b0f      	ldr	r3, [pc, #60]	; (800b994 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800b958:	9004      	str	r0, [sp, #16]
 800b95a:	881b      	ldrh	r3, [r3, #0]
 800b95c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800b960:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800b964:	f7f6 feb8 	bl	80026d8 <_ZN8touchgfx3HAL3lcdEv>
 800b968:	6803      	ldr	r3, [r0, #0]
 800b96a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b96c:	4798      	blx	r3
 800b96e:	23ff      	movs	r3, #255	; 0xff
 800b970:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800b974:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800b978:	6860      	ldr	r0, [r4, #4]
 800b97a:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800b97e:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800b982:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800b986:	6803      	ldr	r3, [r0, #0]
 800b988:	a903      	add	r1, sp, #12
 800b98a:	685b      	ldr	r3, [r3, #4]
 800b98c:	4798      	blx	r3
 800b98e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800b990:	b00d      	add	sp, #52	; 0x34
 800b992:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b994:	200155a6 	.word	0x200155a6

0800b998 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800b998:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b99c:	b08c      	sub	sp, #48	; 0x30
 800b99e:	461e      	mov	r6, r3
 800b9a0:	466d      	mov	r5, sp
 800b9a2:	2300      	movs	r3, #0
 800b9a4:	e885 0006 	stmia.w	r5, {r1, r2}
 800b9a8:	9306      	str	r3, [sp, #24]
 800b9aa:	6803      	ldr	r3, [r0, #0]
 800b9ac:	f8bd 7000 	ldrh.w	r7, [sp]
 800b9b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b9b2:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800b9b6:	2501      	movs	r5, #1
 800b9b8:	9503      	str	r5, [sp, #12]
 800b9ba:	4604      	mov	r4, r0
 800b9bc:	4798      	blx	r3
 800b9be:	4642      	mov	r2, r8
 800b9c0:	4639      	mov	r1, r7
 800b9c2:	4603      	mov	r3, r0
 800b9c4:	4620      	mov	r0, r4
 800b9c6:	f7ff ff47 	bl	800b858 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b9ca:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b9ce:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b9d2:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b9d6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800b9da:	4b11      	ldr	r3, [pc, #68]	; (800ba20 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800b9dc:	9004      	str	r0, [sp, #16]
 800b9de:	881b      	ldrh	r3, [r3, #0]
 800b9e0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800b9e4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800b9e6:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800b9ea:	9607      	str	r6, [sp, #28]
 800b9ec:	f7f6 fe74 	bl	80026d8 <_ZN8touchgfx3HAL3lcdEv>
 800b9f0:	6803      	ldr	r3, [r0, #0]
 800b9f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b9f4:	4798      	blx	r3
 800b9f6:	23ff      	movs	r3, #255	; 0xff
 800b9f8:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800b9fc:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800ba00:	6860      	ldr	r0, [r4, #4]
 800ba02:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800ba06:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800ba0a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800ba0e:	6803      	ldr	r3, [r0, #0]
 800ba10:	a903      	add	r1, sp, #12
 800ba12:	685b      	ldr	r3, [r3, #4]
 800ba14:	4798      	blx	r3
 800ba16:	4630      	mov	r0, r6
 800ba18:	b00c      	add	sp, #48	; 0x30
 800ba1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ba1e:	bf00      	nop
 800ba20:	200155a6 	.word	0x200155a6

0800ba24 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800ba24:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ba26:	b085      	sub	sp, #20
 800ba28:	ac02      	add	r4, sp, #8
 800ba2a:	e884 0006 	stmia.w	r4, {r1, r2}
 800ba2e:	4605      	mov	r5, r0
 800ba30:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800ba34:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800ba38:	f7ff fde6 	bl	800b608 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ba3c:	463a      	mov	r2, r7
 800ba3e:	4603      	mov	r3, r0
 800ba40:	4631      	mov	r1, r6
 800ba42:	4628      	mov	r0, r5
 800ba44:	f7ff ff08 	bl	800b858 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800ba48:	4a05      	ldr	r2, [pc, #20]	; (800ba60 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800ba4a:	682b      	ldr	r3, [r5, #0]
 800ba4c:	8812      	ldrh	r2, [r2, #0]
 800ba4e:	9200      	str	r2, [sp, #0]
 800ba50:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 800ba52:	e894 0006 	ldmia.w	r4, {r1, r2}
 800ba56:	4603      	mov	r3, r0
 800ba58:	4628      	mov	r0, r5
 800ba5a:	47b0      	blx	r6
 800ba5c:	b005      	add	sp, #20
 800ba5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ba60:	200155a6 	.word	0x200155a6

0800ba64 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800ba64:	b570      	push	{r4, r5, r6, lr}
 800ba66:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800ba6a:	4604      	mov	r4, r0
 800ba6c:	b19b      	cbz	r3, 800ba96 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800ba6e:	2002      	movs	r0, #2
 800ba70:	f7f4 fe68 	bl	8000744 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800ba74:	2300      	movs	r3, #0
 800ba76:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800ba7a:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800ba7e:	6823      	ldr	r3, [r4, #0]
 800ba80:	4620      	mov	r0, r4
 800ba82:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800ba86:	f7ff fdbf 	bl	800b608 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ba8a:	462b      	mov	r3, r5
 800ba8c:	4601      	mov	r1, r0
 800ba8e:	4620      	mov	r0, r4
 800ba90:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ba94:	4718      	bx	r3
 800ba96:	bd70      	pop	{r4, r5, r6, pc}

0800ba98 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800ba98:	b538      	push	{r3, r4, r5, lr}
 800ba9a:	f890 3078 	ldrb.w	r3, [r0, #120]	; 0x78
 800ba9e:	428b      	cmp	r3, r1
 800baa0:	4604      	mov	r4, r0
 800baa2:	460d      	mov	r5, r1
 800baa4:	d006      	beq.n	800bab4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800baa6:	6803      	ldr	r3, [r0, #0]
 800baa8:	b929      	cbnz	r1, 800bab6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800baaa:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800baae:	4798      	blx	r3
 800bab0:	f884 5078 	strb.w	r5, [r4, #120]	; 0x78
 800bab4:	bd38      	pop	{r3, r4, r5, pc}
 800bab6:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800baba:	e7f8      	b.n	800baae <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800babc <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800babc:	b510      	push	{r4, lr}
 800babe:	4b0d      	ldr	r3, [pc, #52]	; (800baf4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800bac0:	781b      	ldrb	r3, [r3, #0]
 800bac2:	4604      	mov	r4, r0
 800bac4:	b95b      	cbnz	r3, 800bade <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800bac6:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800baca:	2b02      	cmp	r3, #2
 800bacc:	d007      	beq.n	800bade <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800bace:	6840      	ldr	r0, [r0, #4]
 800bad0:	f000 f92a 	bl	800bd28 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800bad4:	b118      	cbz	r0, 800bade <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800bad6:	6862      	ldr	r2, [r4, #4]
 800bad8:	7a53      	ldrb	r3, [r2, #9]
 800bada:	2b00      	cmp	r3, #0
 800badc:	d0fc      	beq.n	800bad8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800bade:	f7f4 ff2b 	bl	8000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800bae2:	4620      	mov	r0, r4
 800bae4:	2100      	movs	r1, #0
 800bae6:	f7ff ffd7 	bl	800ba98 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800baea:	4620      	mov	r0, r4
 800baec:	f7ff fd8c 	bl	800b608 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800baf0:	bd10      	pop	{r4, pc}
 800baf2:	bf00      	nop
 800baf4:	200155aa 	.word	0x200155aa

0800baf8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800baf8:	b570      	push	{r4, r5, r6, lr}
 800bafa:	4604      	mov	r4, r0
 800bafc:	6803      	ldr	r3, [r0, #0]
 800bafe:	b919      	cbnz	r1, 800bb08 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800bb00:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bb02:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bb06:	4718      	bx	r3
 800bb08:	2200      	movs	r2, #0
 800bb0a:	f890 6078 	ldrb.w	r6, [r0, #120]	; 0x78
 800bb0e:	f880 2078 	strb.w	r2, [r0, #120]	; 0x78
 800bb12:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bb14:	4798      	blx	r3
 800bb16:	f884 6078 	strb.w	r6, [r4, #120]	; 0x78
 800bb1a:	4605      	mov	r5, r0
 800bb1c:	2101      	movs	r1, #1
 800bb1e:	4620      	mov	r0, r4
 800bb20:	f7ff ffba 	bl	800ba98 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bb24:	4628      	mov	r0, r5
 800bb26:	bd70      	pop	{r4, r5, r6, pc}

0800bb28 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800bb28:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800bb2c:	1a13      	subs	r3, r2, r0
 800bb2e:	4258      	negs	r0, r3
 800bb30:	4158      	adcs	r0, r3
 800bb32:	4770      	bx	lr

0800bb34 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800bb34:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800bb38:	1a9b      	subs	r3, r3, r2
 800bb3a:	2b00      	cmp	r3, #0
 800bb3c:	bfdc      	itt	le
 800bb3e:	6882      	ldrle	r2, [r0, #8]
 800bb40:	189b      	addle	r3, r3, r2
 800bb42:	2b01      	cmp	r3, #1
 800bb44:	bfcc      	ite	gt
 800bb46:	2000      	movgt	r0, #0
 800bb48:	2001      	movle	r0, #1
 800bb4a:	4770      	bx	lr

0800bb4c <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800bb4c:	6902      	ldr	r2, [r0, #16]
 800bb4e:	6843      	ldr	r3, [r0, #4]
 800bb50:	2024      	movs	r0, #36	; 0x24
 800bb52:	fb00 3002 	mla	r0, r0, r2, r3
 800bb56:	4770      	bx	lr

0800bb58 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800bb58:	6803      	ldr	r3, [r0, #0]
 800bb5a:	691b      	ldr	r3, [r3, #16]
 800bb5c:	4718      	bx	r3

0800bb5e <_ZN8touchgfx13DMA_Interface7executeEv>:
 800bb5e:	b570      	push	{r4, r5, r6, lr}
 800bb60:	2301      	movs	r3, #1
 800bb62:	7203      	strb	r3, [r0, #8]
 800bb64:	4604      	mov	r4, r0
 800bb66:	6840      	ldr	r0, [r0, #4]
 800bb68:	6803      	ldr	r3, [r0, #0]
 800bb6a:	699b      	ldr	r3, [r3, #24]
 800bb6c:	4798      	blx	r3
 800bb6e:	6803      	ldr	r3, [r0, #0]
 800bb70:	2b40      	cmp	r3, #64	; 0x40
 800bb72:	4605      	mov	r5, r0
 800bb74:	d00c      	beq.n	800bb90 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bb76:	d810      	bhi.n	800bb9a <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800bb78:	2b04      	cmp	r3, #4
 800bb7a:	d01d      	beq.n	800bbb8 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800bb7c:	d804      	bhi.n	800bb88 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800bb7e:	2b01      	cmp	r3, #1
 800bb80:	d006      	beq.n	800bb90 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bb82:	2b02      	cmp	r3, #2
 800bb84:	d02c      	beq.n	800bbe0 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800bb86:	bd70      	pop	{r4, r5, r6, pc}
 800bb88:	2b08      	cmp	r3, #8
 800bb8a:	d01d      	beq.n	800bbc8 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800bb8c:	2b20      	cmp	r3, #32
 800bb8e:	d1fa      	bne.n	800bb86 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800bb90:	6823      	ldr	r3, [r4, #0]
 800bb92:	4620      	mov	r0, r4
 800bb94:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bb96:	4798      	blx	r3
 800bb98:	e013      	b.n	800bbc2 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800bb9a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800bb9e:	d0f7      	beq.n	800bb90 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bba0:	d804      	bhi.n	800bbac <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800bba2:	2b80      	cmp	r3, #128	; 0x80
 800bba4:	d0f4      	beq.n	800bb90 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bba6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800bbaa:	e7f0      	b.n	800bb8e <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800bbac:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800bbb0:	d0ee      	beq.n	800bb90 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bbb2:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800bbb6:	e7e5      	b.n	800bb84 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800bbb8:	6823      	ldr	r3, [r4, #0]
 800bbba:	7f01      	ldrb	r1, [r0, #28]
 800bbbc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bbbe:	4620      	mov	r0, r4
 800bbc0:	4798      	blx	r3
 800bbc2:	6823      	ldr	r3, [r4, #0]
 800bbc4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bbc6:	e006      	b.n	800bbd6 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800bbc8:	6823      	ldr	r3, [r4, #0]
 800bbca:	7f01      	ldrb	r1, [r0, #28]
 800bbcc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bbce:	4620      	mov	r0, r4
 800bbd0:	4798      	blx	r3
 800bbd2:	6823      	ldr	r3, [r4, #0]
 800bbd4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800bbd6:	4629      	mov	r1, r5
 800bbd8:	4620      	mov	r0, r4
 800bbda:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bbde:	4718      	bx	r3
 800bbe0:	6823      	ldr	r3, [r4, #0]
 800bbe2:	4620      	mov	r0, r4
 800bbe4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bbe6:	4798      	blx	r3
 800bbe8:	e7f3      	b.n	800bbd2 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800bbea <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800bbea:	4770      	bx	lr

0800bbec <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800bbec:	4770      	bx	lr

0800bbee <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800bbee:	4770      	bx	lr

0800bbf0 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800bbf0:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800bbf4:	1ad2      	subs	r2, r2, r3
 800bbf6:	2a00      	cmp	r2, #0
 800bbf8:	b510      	push	{r4, lr}
 800bbfa:	bfdc      	itt	le
 800bbfc:	6884      	ldrle	r4, [r0, #8]
 800bbfe:	1912      	addle	r2, r2, r4
 800bc00:	2a01      	cmp	r2, #1
 800bc02:	dd16      	ble.n	800bc32 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800bc04:	6842      	ldr	r2, [r0, #4]
 800bc06:	2424      	movs	r4, #36	; 0x24
 800bc08:	fb04 2303 	mla	r3, r4, r3, r2
 800bc0c:	f101 0220 	add.w	r2, r1, #32
 800bc10:	f851 4b04 	ldr.w	r4, [r1], #4
 800bc14:	f843 4b04 	str.w	r4, [r3], #4
 800bc18:	4291      	cmp	r1, r2
 800bc1a:	d1f9      	bne.n	800bc10 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800bc1c:	780a      	ldrb	r2, [r1, #0]
 800bc1e:	701a      	strb	r2, [r3, #0]
 800bc20:	68c3      	ldr	r3, [r0, #12]
 800bc22:	6882      	ldr	r2, [r0, #8]
 800bc24:	f3bf 8f5b 	dmb	ish
 800bc28:	3301      	adds	r3, #1
 800bc2a:	429a      	cmp	r2, r3
 800bc2c:	bfd8      	it	le
 800bc2e:	1a9b      	suble	r3, r3, r2
 800bc30:	60c3      	str	r3, [r0, #12]
 800bc32:	bd10      	pop	{r4, pc}

0800bc34 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800bc34:	6903      	ldr	r3, [r0, #16]
 800bc36:	6882      	ldr	r2, [r0, #8]
 800bc38:	f3bf 8f5b 	dmb	ish
 800bc3c:	3301      	adds	r3, #1
 800bc3e:	429a      	cmp	r2, r3
 800bc40:	bfd8      	it	le
 800bc42:	1a9b      	suble	r3, r3, r2
 800bc44:	6103      	str	r3, [r0, #16]
 800bc46:	4770      	bx	lr

0800bc48 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800bc48:	b570      	push	{r4, r5, r6, lr}
 800bc4a:	4604      	mov	r4, r0
 800bc4c:	460e      	mov	r6, r1
 800bc4e:	6860      	ldr	r0, [r4, #4]
 800bc50:	6803      	ldr	r3, [r0, #0]
 800bc52:	685b      	ldr	r3, [r3, #4]
 800bc54:	4798      	blx	r3
 800bc56:	2800      	cmp	r0, #0
 800bc58:	d1f9      	bne.n	800bc4e <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800bc5a:	4d0d      	ldr	r5, [pc, #52]	; (800bc90 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800bc5c:	6828      	ldr	r0, [r5, #0]
 800bc5e:	6803      	ldr	r3, [r0, #0]
 800bc60:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800bc62:	4798      	blx	r3
 800bc64:	f7f4 fe76 	bl	8000954 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800bc68:	6828      	ldr	r0, [r5, #0]
 800bc6a:	2101      	movs	r1, #1
 800bc6c:	f7ff ff14 	bl	800ba98 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bc70:	6860      	ldr	r0, [r4, #4]
 800bc72:	6803      	ldr	r3, [r0, #0]
 800bc74:	4631      	mov	r1, r6
 800bc76:	689b      	ldr	r3, [r3, #8]
 800bc78:	4798      	blx	r3
 800bc7a:	6823      	ldr	r3, [r4, #0]
 800bc7c:	4620      	mov	r0, r4
 800bc7e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bc80:	4798      	blx	r3
 800bc82:	6828      	ldr	r0, [r5, #0]
 800bc84:	6803      	ldr	r3, [r0, #0]
 800bc86:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bc8a:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800bc8c:	4718      	bx	r3
 800bc8e:	bf00      	nop
 800bc90:	200155ac 	.word	0x200155ac

0800bc94 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800bc94:	b508      	push	{r3, lr}
 800bc96:	f7f4 fe4f 	bl	8000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800bc9a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800bc9e:	f7f4 be53 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800bca2 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800bca2:	b510      	push	{r4, lr}
 800bca4:	2114      	movs	r1, #20
 800bca6:	4604      	mov	r4, r0
 800bca8:	f014 fcee 	bl	8020688 <_ZdlPvj>
 800bcac:	4620      	mov	r0, r4
 800bcae:	bd10      	pop	{r4, pc}

0800bcb0 <_ZN8touchgfx13DMA_Interface5startEv>:
 800bcb0:	b510      	push	{r4, lr}
 800bcb2:	4604      	mov	r4, r0
 800bcb4:	6840      	ldr	r0, [r0, #4]
 800bcb6:	6803      	ldr	r3, [r0, #0]
 800bcb8:	681b      	ldr	r3, [r3, #0]
 800bcba:	4798      	blx	r3
 800bcbc:	b948      	cbnz	r0, 800bcd2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bcbe:	7a63      	ldrb	r3, [r4, #9]
 800bcc0:	b13b      	cbz	r3, 800bcd2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bcc2:	7a23      	ldrb	r3, [r4, #8]
 800bcc4:	b92b      	cbnz	r3, 800bcd2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bcc6:	6823      	ldr	r3, [r4, #0]
 800bcc8:	4620      	mov	r0, r4
 800bcca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bccc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bcd0:	4718      	bx	r3
 800bcd2:	bd10      	pop	{r4, pc}

0800bcd4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800bcd4:	b570      	push	{r4, r5, r6, lr}
 800bcd6:	4604      	mov	r4, r0
 800bcd8:	6840      	ldr	r0, [r0, #4]
 800bcda:	6803      	ldr	r3, [r0, #0]
 800bcdc:	681b      	ldr	r3, [r3, #0]
 800bcde:	4798      	blx	r3
 800bce0:	4605      	mov	r5, r0
 800bce2:	b930      	cbnz	r0, 800bcf2 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800bce4:	7a23      	ldrb	r3, [r4, #8]
 800bce6:	b123      	cbz	r3, 800bcf2 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800bce8:	6860      	ldr	r0, [r4, #4]
 800bcea:	6803      	ldr	r3, [r0, #0]
 800bcec:	695b      	ldr	r3, [r3, #20]
 800bcee:	4798      	blx	r3
 800bcf0:	7225      	strb	r5, [r4, #8]
 800bcf2:	6860      	ldr	r0, [r4, #4]
 800bcf4:	6803      	ldr	r3, [r0, #0]
 800bcf6:	681b      	ldr	r3, [r3, #0]
 800bcf8:	4798      	blx	r3
 800bcfa:	b928      	cbnz	r0, 800bd08 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800bcfc:	6823      	ldr	r3, [r4, #0]
 800bcfe:	4620      	mov	r0, r4
 800bd00:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bd02:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bd06:	4718      	bx	r3
 800bd08:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bd0c:	f7f4 be2a 	b.w	8000964 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800bd10 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800bd10:	b510      	push	{r4, lr}
 800bd12:	4c04      	ldr	r4, [pc, #16]	; (800bd24 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800bd14:	6082      	str	r2, [r0, #8]
 800bd16:	2200      	movs	r2, #0
 800bd18:	e9c0 4100 	strd	r4, r1, [r0]
 800bd1c:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800bd20:	bd10      	pop	{r4, pc}
 800bd22:	bf00      	nop
 800bd24:	080237d8 	.word	0x080237d8

0800bd28 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800bd28:	6840      	ldr	r0, [r0, #4]
 800bd2a:	6803      	ldr	r3, [r0, #0]
 800bd2c:	681b      	ldr	r3, [r3, #0]
 800bd2e:	4718      	bx	r3

0800bd30 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800bd30:	4b06      	ldr	r3, [pc, #24]	; (800bd4c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 800bd32:	60c1      	str	r1, [r0, #12]
 800bd34:	094a      	lsrs	r2, r1, #5
 800bd36:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 800bd3a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800bd3e:	4313      	orrs	r3, r2
 800bd40:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 800bd44:	4319      	orrs	r1, r3
 800bd46:	8201      	strh	r1, [r0, #16]
 800bd48:	4770      	bx	lr
 800bd4a:	bf00      	nop
 800bd4c:	fffff800 	.word	0xfffff800

0800bd50 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800bd50:	f1a0 0008 	sub.w	r0, r0, #8
 800bd54:	e7ec      	b.n	800bd30 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 800bd56:	bf00      	nop

0800bd58 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 800bd58:	b508      	push	{r3, lr}
 800bd5a:	4b05      	ldr	r3, [pc, #20]	; (800bd70 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 800bd5c:	6818      	ldr	r0, [r3, #0]
 800bd5e:	6803      	ldr	r3, [r0, #0]
 800bd60:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800bd64:	4798      	blx	r3
 800bd66:	1e43      	subs	r3, r0, #1
 800bd68:	4258      	negs	r0, r3
 800bd6a:	4158      	adcs	r0, r3
 800bd6c:	bd08      	pop	{r3, pc}
 800bd6e:	bf00      	nop
 800bd70:	200155ac 	.word	0x200155ac

0800bd74 <_ZN8touchgfx13PainterRGB565D1Ev>:
 800bd74:	4770      	bx	lr

0800bd76 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 800bd76:	3808      	subs	r0, #8
 800bd78:	4770      	bx	lr

0800bd7a <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 800bd7a:	b430      	push	{r4, r5}
 800bd7c:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800bd80:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 800bd84:	8a02      	ldrh	r2, [r0, #16]
 800bd86:	9202      	str	r2, [sp, #8]
 800bd88:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800bd8c:	68c2      	ldr	r2, [r0, #12]
 800bd8e:	4629      	mov	r1, r5
 800bd90:	4620      	mov	r0, r4
 800bd92:	bc30      	pop	{r4, r5}
 800bd94:	f7f4 bfa4 	b.w	8000ce0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0800bd98 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 800bd98:	f7f4 bf98 	b.w	8000ccc <_ZN8touchgfx5paint6rgb5658tearDownEv>

0800bd9c <_ZN8touchgfx13PainterRGB565D0Ev>:
 800bd9c:	b510      	push	{r4, lr}
 800bd9e:	2114      	movs	r1, #20
 800bda0:	4604      	mov	r4, r0
 800bda2:	f014 fc71 	bl	8020688 <_ZdlPvj>
 800bda6:	4620      	mov	r0, r4
 800bda8:	bd10      	pop	{r4, pc}

0800bdaa <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 800bdaa:	f1a0 0008 	sub.w	r0, r0, #8
 800bdae:	e7f5      	b.n	800bd9c <_ZN8touchgfx13PainterRGB565D0Ev>

0800bdb0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800bdb0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800bdb2:	6803      	ldr	r3, [r0, #0]
 800bdb4:	460d      	mov	r5, r1
 800bdb6:	4604      	mov	r4, r0
 800bdb8:	4601      	mov	r1, r0
 800bdba:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800bdbc:	a802      	add	r0, sp, #8
 800bdbe:	4798      	blx	r3
 800bdc0:	6828      	ldr	r0, [r5, #0]
 800bdc2:	6869      	ldr	r1, [r5, #4]
 800bdc4:	466b      	mov	r3, sp
 800bdc6:	c303      	stmia	r3!, {r0, r1}
 800bdc8:	4668      	mov	r0, sp
 800bdca:	4619      	mov	r1, r3
 800bdcc:	f7fe ffae 	bl	800ad2c <_ZN8touchgfx4RectaNERKS0_>
 800bdd0:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800bdd2:	b1a8      	cbz	r0, 800be00 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800bdd4:	6803      	ldr	r3, [r0, #0]
 800bdd6:	1d21      	adds	r1, r4, #4
 800bdd8:	68db      	ldr	r3, [r3, #12]
 800bdda:	4798      	blx	r3
 800bddc:	b180      	cbz	r0, 800be00 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800bdde:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800bde2:	2b00      	cmp	r3, #0
 800bde4:	dd0c      	ble.n	800be00 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800bde6:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 800bdea:	2d00      	cmp	r5, #0
 800bdec:	dd08      	ble.n	800be00 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800bdee:	4a2d      	ldr	r2, [pc, #180]	; (800bea4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xf4>)
 800bdf0:	7812      	ldrb	r2, [r2, #0]
 800bdf2:	b13a      	cbz	r2, 800be04 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x54>
 800bdf4:	2a01      	cmp	r2, #1
 800bdf6:	d02d      	beq.n	800be54 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa4>
 800bdf8:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800bdfa:	6803      	ldr	r3, [r0, #0]
 800bdfc:	691b      	ldr	r3, [r3, #16]
 800bdfe:	4798      	blx	r3
 800be00:	b004      	add	sp, #16
 800be02:	bd70      	pop	{r4, r5, r6, pc}
 800be04:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800be08:	441d      	add	r5, r3
 800be0a:	b2ad      	uxth	r5, r5
 800be0c:	b22e      	sxth	r6, r5
 800be0e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800be12:	42b3      	cmp	r3, r6
 800be14:	daf0      	bge.n	800bdf8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800be16:	6823      	ldr	r3, [r4, #0]
 800be18:	4669      	mov	r1, sp
 800be1a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800be1c:	4620      	mov	r0, r4
 800be1e:	4798      	blx	r3
 800be20:	b940      	cbnz	r0, 800be34 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
 800be22:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800be26:	2b01      	cmp	r3, #1
 800be28:	d004      	beq.n	800be34 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
 800be2a:	3301      	adds	r3, #1
 800be2c:	105b      	asrs	r3, r3, #1
 800be2e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800be32:	e7f0      	b.n	800be16 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x66>
 800be34:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800be38:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800be3c:	4413      	add	r3, r2
 800be3e:	b29b      	uxth	r3, r3
 800be40:	441a      	add	r2, r3
 800be42:	b212      	sxth	r2, r2
 800be44:	4296      	cmp	r6, r2
 800be46:	f8ad 3002 	strh.w	r3, [sp, #2]
 800be4a:	dae0      	bge.n	800be0e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800be4c:	1aeb      	subs	r3, r5, r3
 800be4e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800be52:	e7dc      	b.n	800be0e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800be54:	f8bd 5000 	ldrh.w	r5, [sp]
 800be58:	441d      	add	r5, r3
 800be5a:	b2ad      	uxth	r5, r5
 800be5c:	b22e      	sxth	r6, r5
 800be5e:	f9bd 3000 	ldrsh.w	r3, [sp]
 800be62:	42b3      	cmp	r3, r6
 800be64:	dac8      	bge.n	800bdf8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800be66:	6823      	ldr	r3, [r4, #0]
 800be68:	4669      	mov	r1, sp
 800be6a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800be6c:	4620      	mov	r0, r4
 800be6e:	4798      	blx	r3
 800be70:	b940      	cbnz	r0, 800be84 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
 800be72:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800be76:	2b01      	cmp	r3, #1
 800be78:	d004      	beq.n	800be84 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
 800be7a:	3301      	adds	r3, #1
 800be7c:	105b      	asrs	r3, r3, #1
 800be7e:	f8ad 3004 	strh.w	r3, [sp, #4]
 800be82:	e7f0      	b.n	800be66 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xb6>
 800be84:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800be88:	f8bd 3000 	ldrh.w	r3, [sp]
 800be8c:	4413      	add	r3, r2
 800be8e:	b29b      	uxth	r3, r3
 800be90:	441a      	add	r2, r3
 800be92:	b212      	sxth	r2, r2
 800be94:	4296      	cmp	r6, r2
 800be96:	f8ad 3000 	strh.w	r3, [sp]
 800be9a:	dae0      	bge.n	800be5e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800be9c:	1aeb      	subs	r3, r5, r3
 800be9e:	f8ad 3004 	strh.w	r3, [sp, #4]
 800bea2:	e7dc      	b.n	800be5e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800bea4:	200155a4 	.word	0x200155a4

0800bea8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800bea8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800beaa:	6803      	ldr	r3, [r0, #0]
 800beac:	4604      	mov	r4, r0
 800beae:	4601      	mov	r1, r0
 800beb0:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800beb2:	4668      	mov	r0, sp
 800beb4:	4798      	blx	r3
 800beb6:	2100      	movs	r1, #0
 800beb8:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800bebc:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800bec0:	9102      	str	r1, [sp, #8]
 800bec2:	4668      	mov	r0, sp
 800bec4:	a902      	add	r1, sp, #8
 800bec6:	f8ad 200c 	strh.w	r2, [sp, #12]
 800beca:	f8ad 300e 	strh.w	r3, [sp, #14]
 800bece:	f7fe ff2d 	bl	800ad2c <_ZN8touchgfx4RectaNERKS0_>
 800bed2:	6823      	ldr	r3, [r4, #0]
 800bed4:	4669      	mov	r1, sp
 800bed6:	691b      	ldr	r3, [r3, #16]
 800bed8:	4620      	mov	r0, r4
 800beda:	4798      	blx	r3
 800bedc:	b004      	add	sp, #16
 800bede:	bd10      	pop	{r4, pc}

0800bee0 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800bee0:	2101      	movs	r1, #1
 800bee2:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800bee6:	490b      	ldr	r1, [pc, #44]	; (800bf14 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 800bee8:	6001      	str	r1, [r0, #0]
 800beea:	2200      	movs	r2, #0
 800beec:	21ff      	movs	r1, #255	; 0xff
 800beee:	8082      	strh	r2, [r0, #4]
 800bef0:	80c2      	strh	r2, [r0, #6]
 800bef2:	8102      	strh	r2, [r0, #8]
 800bef4:	8142      	strh	r2, [r0, #10]
 800bef6:	8182      	strh	r2, [r0, #12]
 800bef8:	81c2      	strh	r2, [r0, #14]
 800befa:	8202      	strh	r2, [r0, #16]
 800befc:	8242      	strh	r2, [r0, #18]
 800befe:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800bf02:	61c2      	str	r2, [r0, #28]
 800bf04:	8402      	strh	r2, [r0, #32]
 800bf06:	8442      	strh	r2, [r0, #34]	; 0x22
 800bf08:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800bf0c:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 800bf10:	6282      	str	r2, [r0, #40]	; 0x28
 800bf12:	4770      	bx	lr
 800bf14:	08023834 	.word	0x08023834

0800bf18 <_ZN8touchgfx17AbstractDataGraph9setScaleXEib>:
 800bf18:	6301      	str	r1, [r0, #48]	; 0x30
 800bf1a:	4770      	bx	lr

0800bf1c <_ZNK8touchgfx17AbstractDataGraph9getScaleXEv>:
 800bf1c:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800bf1e:	4770      	bx	lr

0800bf20 <_ZN8touchgfx17AbstractDataGraph9setScaleYEib>:
 800bf20:	6341      	str	r1, [r0, #52]	; 0x34
 800bf22:	4770      	bx	lr

0800bf24 <_ZNK8touchgfx17AbstractDataGraph9getScaleYEv>:
 800bf24:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800bf26:	4770      	bx	lr

0800bf28 <_ZN8touchgfx16DynamicDataGraph14beforeAddValueEv>:
 800bf28:	4770      	bx	lr

0800bf2a <_ZNK8touchgfx16DynamicDataGraph9dataIndexEs>:
 800bf2a:	4608      	mov	r0, r1
 800bf2c:	4770      	bx	lr

0800bf2e <_ZNK8touchgfx16DynamicDataGraph18indexToGlobalIndexEs>:
 800bf2e:	4608      	mov	r0, r1
 800bf30:	4770      	bx	lr

0800bf32 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE>:
 800bf32:	b530      	push	{r4, r5, lr}
 800bf34:	460d      	mov	r5, r1
 800bf36:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800bf38:	8949      	ldrh	r1, [r1, #10]
 800bf3a:	1ac9      	subs	r1, r1, r3
 800bf3c:	6803      	ldr	r3, [r0, #0]
 800bf3e:	b085      	sub	sp, #20
 800bf40:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 800bf44:	f10d 0206 	add.w	r2, sp, #6
 800bf48:	b209      	sxth	r1, r1
 800bf4a:	4604      	mov	r4, r0
 800bf4c:	4798      	blx	r3
 800bf4e:	b1a0      	cbz	r0, 800bf7a <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800bf50:	792b      	ldrb	r3, [r5, #4]
 800bf52:	b993      	cbnz	r3, 800bf7a <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800bf54:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 800bf58:	b178      	cbz	r0, 800bf7a <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800bf5a:	6803      	ldr	r3, [r0, #0]
 800bf5c:	68db      	ldr	r3, [r3, #12]
 800bf5e:	4798      	blx	r3
 800bf60:	b158      	cbz	r0, 800bf7a <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800bf62:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800bf66:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 800bf6a:	f8ad 3008 	strh.w	r3, [sp, #8]
 800bf6e:	9503      	str	r5, [sp, #12]
 800bf70:	6803      	ldr	r3, [r0, #0]
 800bf72:	aa02      	add	r2, sp, #8
 800bf74:	689b      	ldr	r3, [r3, #8]
 800bf76:	4621      	mov	r1, r4
 800bf78:	4798      	blx	r3
 800bf7a:	b005      	add	sp, #20
 800bf7c:	bd30      	pop	{r4, r5, pc}

0800bf7e <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii>:
 800bf7e:	b510      	push	{r4, lr}
 800bf80:	428a      	cmp	r2, r1
 800bf82:	bfbe      	ittt	lt
 800bf84:	460b      	movlt	r3, r1
 800bf86:	4611      	movlt	r1, r2
 800bf88:	461a      	movlt	r2, r3
 800bf8a:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
 800bf8e:	428b      	cmp	r3, r1
 800bf90:	4604      	mov	r4, r0
 800bf92:	d103      	bne.n	800bf9c <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x1e>
 800bf94:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
 800bf98:	4293      	cmp	r3, r2
 800bf9a:	d011      	beq.n	800bfc0 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x42>
 800bf9c:	f8c4 112c 	str.w	r1, [r4, #300]	; 0x12c
 800bfa0:	f8c4 2130 	str.w	r2, [r4, #304]	; 0x130
 800bfa4:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800bfa8:	f005 ffe9 	bl	8011f7e <_ZNK8touchgfx8Drawable10invalidateEv>
 800bfac:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800bfb0:	f005 ffe5 	bl	8011f7e <_ZNK8touchgfx8Drawable10invalidateEv>
 800bfb4:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800bfb8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bfbc:	f005 bfdf 	b.w	8011f7e <_ZNK8touchgfx8Drawable10invalidateEv>
 800bfc0:	bd10      	pop	{r4, pc}

0800bfc2 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii>:
 800bfc2:	b510      	push	{r4, lr}
 800bfc4:	428a      	cmp	r2, r1
 800bfc6:	bfbe      	ittt	lt
 800bfc8:	460b      	movlt	r3, r1
 800bfca:	4611      	movlt	r1, r2
 800bfcc:	461a      	movlt	r2, r3
 800bfce:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
 800bfd2:	428b      	cmp	r3, r1
 800bfd4:	4604      	mov	r4, r0
 800bfd6:	d103      	bne.n	800bfe0 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x1e>
 800bfd8:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
 800bfdc:	4293      	cmp	r3, r2
 800bfde:	d011      	beq.n	800c004 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x42>
 800bfe0:	f8c4 1134 	str.w	r1, [r4, #308]	; 0x134
 800bfe4:	f8c4 2138 	str.w	r2, [r4, #312]	; 0x138
 800bfe8:	f104 0064 	add.w	r0, r4, #100	; 0x64
 800bfec:	f005 ffc7 	bl	8011f7e <_ZNK8touchgfx8Drawable10invalidateEv>
 800bff0:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800bff4:	f005 ffc3 	bl	8011f7e <_ZNK8touchgfx8Drawable10invalidateEv>
 800bff8:	f104 0090 	add.w	r0, r4, #144	; 0x90
 800bffc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c000:	f005 bfbd 	b.w	8011f7e <_ZNK8touchgfx8Drawable10invalidateEv>
 800c004:	bd10      	pop	{r4, pc}

0800c006 <_ZN8touchgfx17AbstractDataGraph5clearEv>:
 800c006:	2300      	movs	r3, #0
 800c008:	f8a0 311e 	strh.w	r3, [r0, #286]	; 0x11e
 800c00c:	3038      	adds	r0, #56	; 0x38
 800c00e:	f005 bfb6 	b.w	8011f7e <_ZNK8touchgfx8Drawable10invalidateEv>

0800c012 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi>:
 800c012:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c016:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 800c01a:	4605      	mov	r5, r0
 800c01c:	4688      	mov	r8, r1
 800c01e:	4617      	mov	r7, r2
 800c020:	2b00      	cmp	r3, #0
 800c022:	d03f      	beq.n	800c0a4 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800c024:	6803      	ldr	r3, [r0, #0]
 800c026:	f8d3 3130 	ldr.w	r3, [r3, #304]	; 0x130
 800c02a:	4798      	blx	r3
 800c02c:	682b      	ldr	r3, [r5, #0]
 800c02e:	4604      	mov	r4, r0
 800c030:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
 800c034:	4628      	mov	r0, r5
 800c036:	4798      	blx	r3
 800c038:	4284      	cmp	r4, r0
 800c03a:	bfc8      	it	gt
 800c03c:	4623      	movgt	r3, r4
 800c03e:	f9b5 611e 	ldrsh.w	r6, [r5, #286]	; 0x11e
 800c042:	bfc4      	itt	gt
 800c044:	4604      	movgt	r4, r0
 800c046:	4618      	movgt	r0, r3
 800c048:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
 800c04c:	42b3      	cmp	r3, r6
 800c04e:	da29      	bge.n	800c0a4 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800c050:	42b0      	cmp	r0, r6
 800c052:	bfa8      	it	ge
 800c054:	4630      	movge	r0, r6
 800c056:	2800      	cmp	r0, #0
 800c058:	db24      	blt.n	800c0a4 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800c05a:	f1b8 0f00 	cmp.w	r8, #0
 800c05e:	d11e      	bne.n	800c09e <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x8c>
 800c060:	f8d5 2144 	ldr.w	r2, [r5, #324]	; 0x144
 800c064:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 800c068:	460c      	mov	r4, r1
 800c06a:	009a      	lsls	r2, r3, #2
 800c06c:	4298      	cmp	r0, r3
 800c06e:	dd0b      	ble.n	800c088 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x76>
 800c070:	f8d5 6144 	ldr.w	r6, [r5, #324]	; 0x144
 800c074:	58b6      	ldr	r6, [r6, r2]
 800c076:	42b1      	cmp	r1, r6
 800c078:	bfa8      	it	ge
 800c07a:	4631      	movge	r1, r6
 800c07c:	42b4      	cmp	r4, r6
 800c07e:	bfb8      	it	lt
 800c080:	4634      	movlt	r4, r6
 800c082:	3301      	adds	r3, #1
 800c084:	3204      	adds	r2, #4
 800c086:	e7f1      	b.n	800c06c <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x5a>
 800c088:	1bc9      	subs	r1, r1, r7
 800c08a:	193a      	adds	r2, r7, r4
 800c08c:	4291      	cmp	r1, r2
 800c08e:	d009      	beq.n	800c0a4 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800c090:	682b      	ldr	r3, [r5, #0]
 800c092:	4628      	mov	r0, r5
 800c094:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800c098:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800c09c:	4718      	bx	r3
 800c09e:	427c      	negs	r4, r7
 800c0a0:	4639      	mov	r1, r7
 800c0a2:	e7e2      	b.n	800c06a <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x58>
 800c0a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c0a8 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE>:
 800c0a8:	b530      	push	{r4, r5, lr}
 800c0aa:	790b      	ldrb	r3, [r1, #4]
 800c0ac:	2b02      	cmp	r3, #2
 800c0ae:	b085      	sub	sp, #20
 800c0b0:	4604      	mov	r4, r0
 800c0b2:	460d      	mov	r5, r1
 800c0b4:	d020      	beq.n	800c0f8 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c0b6:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800c0b8:	88c9      	ldrh	r1, [r1, #6]
 800c0ba:	1ac9      	subs	r1, r1, r3
 800c0bc:	6803      	ldr	r3, [r0, #0]
 800c0be:	f10d 0206 	add.w	r2, sp, #6
 800c0c2:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 800c0c6:	b209      	sxth	r1, r1
 800c0c8:	4798      	blx	r3
 800c0ca:	b1a8      	cbz	r0, 800c0f8 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c0cc:	792b      	ldrb	r3, [r5, #4]
 800c0ce:	2b01      	cmp	r3, #1
 800c0d0:	d812      	bhi.n	800c0f8 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c0d2:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 800c0d6:	b178      	cbz	r0, 800c0f8 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c0d8:	6803      	ldr	r3, [r0, #0]
 800c0da:	68db      	ldr	r3, [r3, #12]
 800c0dc:	4798      	blx	r3
 800c0de:	b158      	cbz	r0, 800c0f8 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c0e0:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800c0e4:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 800c0e8:	f8ad 3008 	strh.w	r3, [sp, #8]
 800c0ec:	9503      	str	r5, [sp, #12]
 800c0ee:	6803      	ldr	r3, [r0, #0]
 800c0f0:	aa02      	add	r2, sp, #8
 800c0f2:	689b      	ldr	r3, [r3, #8]
 800c0f4:	4621      	mov	r1, r4
 800c0f6:	4798      	blx	r3
 800c0f8:	b005      	add	sp, #20
 800c0fa:	bd30      	pop	{r4, r5, pc}

0800c0fc <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_>:
 800c0fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c100:	4604      	mov	r4, r0
 800c102:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800c106:	9e06      	ldr	r6, [sp, #24]
 800c108:	4690      	mov	r8, r2
 800c10a:	461f      	mov	r7, r3
 800c10c:	b928      	cbnz	r0, 800c11a <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1e>
 800c10e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c112:	8033      	strh	r3, [r6, #0]
 800c114:	803b      	strh	r3, [r7, #0]
 800c116:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c11a:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 800c11e:	f9b4 0116 	ldrsh.w	r0, [r4, #278]	; 0x116
 800c122:	1883      	adds	r3, r0, r2
 800c124:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 800c128:	1ad2      	subs	r2, r2, r3
 800c12a:	b212      	sxth	r2, r2
 800c12c:	2a01      	cmp	r2, #1
 800c12e:	dc07      	bgt.n	800c140 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x44>
 800c130:	2300      	movs	r3, #0
 800c132:	803b      	strh	r3, [r7, #0]
 800c134:	f8b4 311e 	ldrh.w	r3, [r4, #286]	; 0x11e
 800c138:	3b01      	subs	r3, #1
 800c13a:	8033      	strh	r3, [r6, #0]
 800c13c:	2001      	movs	r0, #1
 800c13e:	e7ea      	b.n	800c116 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800c140:	1a08      	subs	r0, r1, r0
 800c142:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800c146:	f8d4 112c 	ldr.w	r1, [r4, #300]	; 0x12c
 800c14a:	6b25      	ldr	r5, [r4, #48]	; 0x30
 800c14c:	1a5b      	subs	r3, r3, r1
 800c14e:	ea4f 1040 	mov.w	r0, r0, lsl #5
 800c152:	d45b      	bmi.n	800c20c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x110>
 800c154:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 800c158:	fb93 f1f5 	sdiv	r1, r3, r5
 800c15c:	2302      	movs	r3, #2
 800c15e:	fb91 f1f3 	sdiv	r1, r1, r3
 800c162:	3a01      	subs	r2, #1
 800c164:	f006 f8cc 	bl	8012300 <_ZN8touchgfx6muldivElll>
 800c168:	f8d4 112c 	ldr.w	r1, [r4, #300]	; 0x12c
 800c16c:	f8d4 c030 	ldr.w	ip, [r4, #48]	; 0x30
 800c170:	2900      	cmp	r1, #0
 800c172:	db57      	blt.n	800c224 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x128>
 800c174:	eb0c 0341 	add.w	r3, ip, r1, lsl #1
 800c178:	2502      	movs	r5, #2
 800c17a:	fb93 f3fc 	sdiv	r3, r3, ip
 800c17e:	fb93 f3f5 	sdiv	r3, r3, r5
 800c182:	eb00 1543 	add.w	r5, r0, r3, lsl #5
 800c186:	f8d4 2130 	ldr.w	r2, [r4, #304]	; 0x130
 800c18a:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	; 0x116
 800c18e:	1a52      	subs	r2, r2, r1
 800c190:	eba8 0003 	sub.w	r0, r8, r3
 800c194:	ea4f 1040 	mov.w	r0, r0, lsl #5
 800c198:	d450      	bmi.n	800c23c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x140>
 800c19a:	eb0c 0242 	add.w	r2, ip, r2, lsl #1
 800c19e:	fb92 f1fc 	sdiv	r1, r2, ip
 800c1a2:	2202      	movs	r2, #2
 800c1a4:	fb91 f1f2 	sdiv	r1, r1, r2
 800c1a8:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 800c1ac:	4413      	add	r3, r2
 800c1ae:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 800c1b2:	1ad2      	subs	r2, r2, r3
 800c1b4:	b212      	sxth	r2, r2
 800c1b6:	3a01      	subs	r2, #1
 800c1b8:	f006 f8a2 	bl	8012300 <_ZN8touchgfx6muldivElll>
 800c1bc:	f8d4 312c 	ldr.w	r3, [r4, #300]	; 0x12c
 800c1c0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c1c2:	2b00      	cmp	r3, #0
 800c1c4:	db46      	blt.n	800c254 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x158>
 800c1c6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800c1ca:	fb93 f3f2 	sdiv	r3, r3, r2
 800c1ce:	2202      	movs	r2, #2
 800c1d0:	fb93 f3f2 	sdiv	r3, r3, r2
 800c1d4:	eb00 1343 	add.w	r3, r0, r3, lsl #5
 800c1d8:	429d      	cmp	r5, r3
 800c1da:	bfde      	ittt	le
 800c1dc:	461a      	movle	r2, r3
 800c1de:	462b      	movle	r3, r5
 800c1e0:	4615      	movle	r5, r2
 800c1e2:	2d00      	cmp	r5, #0
 800c1e4:	bfa4      	itt	ge
 800c1e6:	351f      	addge	r5, #31
 800c1e8:	116d      	asrge	r5, r5, #5
 800c1ea:	f04f 0020 	mov.w	r0, #32
 800c1ee:	bfb8      	it	lt
 800c1f0:	fb95 f5f0 	sdivlt	r5, r5, r0
 800c1f4:	b22d      	sxth	r5, r5
 800c1f6:	2d00      	cmp	r5, #0
 800c1f8:	b21b      	sxth	r3, r3
 800c1fa:	fb93 f3f0 	sdiv	r3, r3, r0
 800c1fe:	803b      	strh	r3, [r7, #0]
 800c200:	8035      	strh	r5, [r6, #0]
 800c202:	da33      	bge.n	800c26c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x170>
 800c204:	2000      	movs	r0, #0
 800c206:	8030      	strh	r0, [r6, #0]
 800c208:	8038      	strh	r0, [r7, #0]
 800c20a:	e784      	b.n	800c116 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800c20c:	f06f 0101 	mvn.w	r1, #1
 800c210:	fb01 5303 	mla	r3, r1, r3, r5
 800c214:	1e59      	subs	r1, r3, #1
 800c216:	2302      	movs	r3, #2
 800c218:	fb91 f1f5 	sdiv	r1, r1, r5
 800c21c:	fb91 f1f3 	sdiv	r1, r1, r3
 800c220:	4249      	negs	r1, r1
 800c222:	e79e      	b.n	800c162 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x66>
 800c224:	f06f 0301 	mvn.w	r3, #1
 800c228:	fb03 c301 	mla	r3, r3, r1, ip
 800c22c:	3b01      	subs	r3, #1
 800c22e:	2502      	movs	r5, #2
 800c230:	fb93 f3fc 	sdiv	r3, r3, ip
 800c234:	fb93 f3f5 	sdiv	r3, r3, r5
 800c238:	425b      	negs	r3, r3
 800c23a:	e7a2      	b.n	800c182 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x86>
 800c23c:	f06f 0101 	mvn.w	r1, #1
 800c240:	fb01 c202 	mla	r2, r1, r2, ip
 800c244:	1e51      	subs	r1, r2, #1
 800c246:	2202      	movs	r2, #2
 800c248:	fb91 f1fc 	sdiv	r1, r1, ip
 800c24c:	fb91 f1f2 	sdiv	r1, r1, r2
 800c250:	4249      	negs	r1, r1
 800c252:	e7a9      	b.n	800c1a8 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xac>
 800c254:	f06f 0101 	mvn.w	r1, #1
 800c258:	fb01 2303 	mla	r3, r1, r3, r2
 800c25c:	3b01      	subs	r3, #1
 800c25e:	fb93 f3f2 	sdiv	r3, r3, r2
 800c262:	2202      	movs	r2, #2
 800c264:	fb93 f3f2 	sdiv	r3, r3, r2
 800c268:	425b      	negs	r3, r3
 800c26a:	e7b3      	b.n	800c1d4 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xd8>
 800c26c:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c270:	f9b7 2000 	ldrsh.w	r2, [r7]
 800c274:	4293      	cmp	r3, r2
 800c276:	dc05      	bgt.n	800c284 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x188>
 800c278:	3b01      	subs	r3, #1
 800c27a:	b21b      	sxth	r3, r3
 800c27c:	8033      	strh	r3, [r6, #0]
 800c27e:	2000      	movs	r0, #0
 800c280:	803b      	strh	r3, [r7, #0]
 800c282:	e748      	b.n	800c116 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800c284:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800c288:	803a      	strh	r2, [r7, #0]
 800c28a:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c28e:	f9b6 2000 	ldrsh.w	r2, [r6]
 800c292:	4293      	cmp	r3, r2
 800c294:	bfdc      	itt	le
 800c296:	f103 33ff 	addle.w	r3, r3, #4294967295
 800c29a:	b21a      	sxthle	r2, r3
 800c29c:	8032      	strh	r2, [r6, #0]
 800c29e:	e74d      	b.n	800c13c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x40>

0800c2a0 <_ZN8touchgfx9ContainerC1Ev>:
 800c2a0:	2101      	movs	r1, #1
 800c2a2:	2200      	movs	r2, #0
 800c2a4:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800c2a8:	4909      	ldr	r1, [pc, #36]	; (800c2d0 <_ZN8touchgfx9ContainerC1Ev+0x30>)
 800c2aa:	8082      	strh	r2, [r0, #4]
 800c2ac:	80c2      	strh	r2, [r0, #6]
 800c2ae:	8102      	strh	r2, [r0, #8]
 800c2b0:	8142      	strh	r2, [r0, #10]
 800c2b2:	8182      	strh	r2, [r0, #12]
 800c2b4:	81c2      	strh	r2, [r0, #14]
 800c2b6:	8202      	strh	r2, [r0, #16]
 800c2b8:	8242      	strh	r2, [r0, #18]
 800c2ba:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800c2be:	61c2      	str	r2, [r0, #28]
 800c2c0:	8402      	strh	r2, [r0, #32]
 800c2c2:	8442      	strh	r2, [r0, #34]	; 0x22
 800c2c4:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800c2c8:	6001      	str	r1, [r0, #0]
 800c2ca:	6282      	str	r2, [r0, #40]	; 0x28
 800c2cc:	4770      	bx	lr
 800c2ce:	bf00      	nop
 800c2d0:	0802373c 	.word	0x0802373c

0800c2d4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>:
 800c2d4:	6800      	ldr	r0, [r0, #0]
 800c2d6:	2800      	cmp	r0, #0
 800c2d8:	bfbd      	ittte	lt
 800c2da:	380f      	sublt	r0, #15
 800c2dc:	2320      	movlt	r3, #32
 800c2de:	fb90 f0f3 	sdivlt	r0, r0, r3
 800c2e2:	3010      	addge	r0, #16
 800c2e4:	bfa8      	it	ge
 800c2e6:	1140      	asrge	r0, r0, #5
 800c2e8:	4770      	bx	lr

0800c2ea <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs>:
 800c2ea:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c2ee:	4605      	mov	r5, r0
 800c2f0:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800c2f4:	4688      	mov	r8, r1
 800c2f6:	4691      	mov	r9, r2
 800c2f8:	469a      	mov	sl, r3
 800c2fa:	b360      	cbz	r0, 800c356 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6c>
 800c2fc:	2700      	movs	r7, #0
 800c2fe:	f04f 3bff 	mov.w	fp, #4294967295
 800c302:	f9b5 311e 	ldrsh.w	r3, [r5, #286]	; 0x11e
 800c306:	b23e      	sxth	r6, r7
 800c308:	42b3      	cmp	r3, r6
 800c30a:	dd23      	ble.n	800c354 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6a>
 800c30c:	682b      	ldr	r3, [r5, #0]
 800c30e:	4631      	mov	r1, r6
 800c310:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800c314:	4628      	mov	r0, r5
 800c316:	4798      	blx	r3
 800c318:	9001      	str	r0, [sp, #4]
 800c31a:	a801      	add	r0, sp, #4
 800c31c:	f7ff ffda 	bl	800c2d4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c320:	682b      	ldr	r3, [r5, #0]
 800c322:	eba0 0008 	sub.w	r0, r0, r8
 800c326:	b204      	sxth	r4, r0
 800c328:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800c32c:	4631      	mov	r1, r6
 800c32e:	4628      	mov	r0, r5
 800c330:	4798      	blx	r3
 800c332:	9001      	str	r0, [sp, #4]
 800c334:	a801      	add	r0, sp, #4
 800c336:	f7ff ffcd 	bl	800c2d4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c33a:	eba0 0009 	sub.w	r0, r0, r9
 800c33e:	fb10 f000 	smulbb	r0, r0, r0
 800c342:	fb04 0404 	mla	r4, r4, r4, r0
 800c346:	455c      	cmp	r4, fp
 800c348:	bf3c      	itt	cc
 800c34a:	f8aa 6000 	strhcc.w	r6, [sl]
 800c34e:	46a3      	movcc	fp, r4
 800c350:	3701      	adds	r7, #1
 800c352:	e7d6      	b.n	800c302 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x18>
 800c354:	2001      	movs	r0, #1
 800c356:	b003      	add	sp, #12
 800c358:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c35c <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs>:
 800c35c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800c360:	4604      	mov	r4, r0
 800c362:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800c366:	4688      	mov	r8, r1
 800c368:	4691      	mov	r9, r2
 800c36a:	b1f8      	cbz	r0, 800c3ac <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x50>
 800c36c:	2500      	movs	r5, #0
 800c36e:	f04f 37ff 	mov.w	r7, #4294967295
 800c372:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c376:	b22e      	sxth	r6, r5
 800c378:	42b3      	cmp	r3, r6
 800c37a:	dd16      	ble.n	800c3aa <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x4e>
 800c37c:	6823      	ldr	r3, [r4, #0]
 800c37e:	4631      	mov	r1, r6
 800c380:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800c384:	4620      	mov	r0, r4
 800c386:	4798      	blx	r3
 800c388:	9001      	str	r0, [sp, #4]
 800c38a:	a801      	add	r0, sp, #4
 800c38c:	f7ff ffa2 	bl	800c2d4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c390:	b200      	sxth	r0, r0
 800c392:	eba0 0008 	sub.w	r0, r0, r8
 800c396:	2800      	cmp	r0, #0
 800c398:	bfb8      	it	lt
 800c39a:	4240      	neglt	r0, r0
 800c39c:	42b8      	cmp	r0, r7
 800c39e:	bf3c      	itt	cc
 800c3a0:	f8a9 6000 	strhcc.w	r6, [r9]
 800c3a4:	4607      	movcc	r7, r0
 800c3a6:	3501      	adds	r5, #1
 800c3a8:	e7e3      	b.n	800c372 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x16>
 800c3aa:	2001      	movs	r0, #1
 800c3ac:	b003      	add	sp, #12
 800c3ae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800c3b2 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>:
 800c3b2:	f8a0 3118 	strh.w	r3, [r0, #280]	; 0x118
 800c3b6:	f9bd 3000 	ldrsh.w	r3, [sp]
 800c3ba:	f8a0 1114 	strh.w	r1, [r0, #276]	; 0x114
 800c3be:	f8a0 2116 	strh.w	r2, [r0, #278]	; 0x116
 800c3c2:	f8a0 311a 	strh.w	r3, [r0, #282]	; 0x11a
 800c3c6:	4770      	bx	lr

0800c3c8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>:
 800c3c8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c3ca:	4604      	mov	r4, r0
 800c3cc:	3038      	adds	r0, #56	; 0x38
 800c3ce:	460d      	mov	r5, r1
 800c3d0:	f7fe fb1c 	bl	800aa0c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c3d4:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 800c3d8:	9200      	str	r2, [sp, #0]
 800c3da:	2200      	movs	r2, #0
 800c3dc:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800c3e0:	4611      	mov	r1, r2
 800c3e2:	4628      	mov	r0, r5
 800c3e4:	f7f6 fc59 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c3e8:	b003      	add	sp, #12
 800c3ea:	bd30      	pop	{r4, r5, pc}

0800c3ec <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>:
 800c3ec:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c3ee:	4604      	mov	r4, r0
 800c3f0:	3064      	adds	r0, #100	; 0x64
 800c3f2:	460d      	mov	r5, r1
 800c3f4:	f7fe fb0a 	bl	800aa0c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c3f8:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 800c3fc:	9200      	str	r2, [sp, #0]
 800c3fe:	2200      	movs	r2, #0
 800c400:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 800c404:	4611      	mov	r1, r2
 800c406:	4628      	mov	r0, r5
 800c408:	f7f6 fc47 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c40c:	b003      	add	sp, #12
 800c40e:	bd30      	pop	{r4, r5, pc}

0800c410 <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>:
 800c410:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c412:	4604      	mov	r4, r0
 800c414:	30e8      	adds	r0, #232	; 0xe8
 800c416:	460d      	mov	r5, r1
 800c418:	f7fe faf8 	bl	800aa0c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c41c:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	; 0xf2
 800c420:	9200      	str	r2, [sp, #0]
 800c422:	2200      	movs	r2, #0
 800c424:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	; 0xf0
 800c428:	4611      	mov	r1, r2
 800c42a:	4628      	mov	r0, r5
 800c42c:	f7f6 fc35 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c430:	b003      	add	sp, #12
 800c432:	bd30      	pop	{r4, r5, pc}

0800c434 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>:
 800c434:	b538      	push	{r3, r4, r5, lr}
 800c436:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 800c43a:	428b      	cmp	r3, r1
 800c43c:	460d      	mov	r5, r1
 800c43e:	dd08      	ble.n	800c452 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 800c440:	6e04      	ldr	r4, [r0, #96]	; 0x60
 800c442:	b134      	cbz	r4, 800c452 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 800c444:	6823      	ldr	r3, [r4, #0]
 800c446:	4620      	mov	r0, r4
 800c448:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c44a:	4629      	mov	r1, r5
 800c44c:	4798      	blx	r3
 800c44e:	69a4      	ldr	r4, [r4, #24]
 800c450:	e7f7      	b.n	800c442 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0xe>
 800c452:	bd38      	pop	{r3, r4, r5, pc}

0800c454 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>:
 800c454:	b570      	push	{r4, r5, r6, lr}
 800c456:	f8d0 40e4 	ldr.w	r4, [r0, #228]	; 0xe4
 800c45a:	4606      	mov	r6, r0
 800c45c:	460d      	mov	r5, r1
 800c45e:	b134      	cbz	r4, 800c46e <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1a>
 800c460:	6823      	ldr	r3, [r4, #0]
 800c462:	4620      	mov	r0, r4
 800c464:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c466:	4629      	mov	r1, r5
 800c468:	4798      	blx	r3
 800c46a:	69a4      	ldr	r4, [r4, #24]
 800c46c:	e7f7      	b.n	800c45e <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0xa>
 800c46e:	f8d6 4110 	ldr.w	r4, [r6, #272]	; 0x110
 800c472:	b134      	cbz	r4, 800c482 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x2e>
 800c474:	6823      	ldr	r3, [r4, #0]
 800c476:	4620      	mov	r0, r4
 800c478:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c47a:	4629      	mov	r1, r5
 800c47c:	4798      	blx	r3
 800c47e:	69a4      	ldr	r4, [r4, #24]
 800c480:	e7f7      	b.n	800c472 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1e>
 800c482:	bd70      	pop	{r4, r5, r6, pc}

0800c484 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>:
 800c484:	b538      	push	{r3, r4, r5, lr}
 800c486:	4604      	mov	r4, r0
 800c488:	2500      	movs	r5, #0
 800c48a:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c48e:	42ab      	cmp	r3, r5
 800c490:	db05      	blt.n	800c49e <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x1a>
 800c492:	b229      	sxth	r1, r5
 800c494:	4620      	mov	r0, r4
 800c496:	f7ff ffdd 	bl	800c454 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>
 800c49a:	3501      	adds	r5, #1
 800c49c:	e7f5      	b.n	800c48a <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x6>
 800c49e:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800c4a2:	f005 fd6c 	bl	8011f7e <_ZNK8touchgfx8Drawable10invalidateEv>
 800c4a6:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800c4aa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c4ae:	f005 bd66 	b.w	8011f7e <_ZNK8touchgfx8Drawable10invalidateEv>

0800c4b2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>:
 800c4b2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c4b4:	6e05      	ldr	r5, [r0, #96]	; 0x60
 800c4b6:	4604      	mov	r4, r0
 800c4b8:	b15d      	cbz	r5, 800c4d2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x20>
 800c4ba:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 800c4be:	9200      	str	r2, [sp, #0]
 800c4c0:	2200      	movs	r2, #0
 800c4c2:	4628      	mov	r0, r5
 800c4c4:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800c4c8:	4611      	mov	r1, r2
 800c4ca:	f7f6 fbe6 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c4ce:	69ad      	ldr	r5, [r5, #24]
 800c4d0:	e7f2      	b.n	800c4b8 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x6>
 800c4d2:	f8d4 50e4 	ldr.w	r5, [r4, #228]	; 0xe4
 800c4d6:	b15d      	cbz	r5, 800c4f0 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x3e>
 800c4d8:	f9b4 20c6 	ldrsh.w	r2, [r4, #198]	; 0xc6
 800c4dc:	9200      	str	r2, [sp, #0]
 800c4de:	2200      	movs	r2, #0
 800c4e0:	4628      	mov	r0, r5
 800c4e2:	f9b4 30c4 	ldrsh.w	r3, [r4, #196]	; 0xc4
 800c4e6:	4611      	mov	r1, r2
 800c4e8:	f7f6 fbd7 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c4ec:	69ad      	ldr	r5, [r5, #24]
 800c4ee:	e7f2      	b.n	800c4d6 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x24>
 800c4f0:	f8d4 508c 	ldr.w	r5, [r4, #140]	; 0x8c
 800c4f4:	b15d      	cbz	r5, 800c50e <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x5c>
 800c4f6:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 800c4fa:	9200      	str	r2, [sp, #0]
 800c4fc:	2200      	movs	r2, #0
 800c4fe:	4628      	mov	r0, r5
 800c500:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 800c504:	4611      	mov	r1, r2
 800c506:	f7f6 fbc8 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c50a:	69ad      	ldr	r5, [r5, #24]
 800c50c:	e7f2      	b.n	800c4f4 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x42>
 800c50e:	f8d4 50b8 	ldr.w	r5, [r4, #184]	; 0xb8
 800c512:	b15d      	cbz	r5, 800c52c <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7a>
 800c514:	f9b4 209a 	ldrsh.w	r2, [r4, #154]	; 0x9a
 800c518:	9200      	str	r2, [sp, #0]
 800c51a:	2200      	movs	r2, #0
 800c51c:	4628      	mov	r0, r5
 800c51e:	f9b4 3098 	ldrsh.w	r3, [r4, #152]	; 0x98
 800c522:	4611      	mov	r1, r2
 800c524:	f7f6 fbb9 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c528:	69ad      	ldr	r5, [r5, #24]
 800c52a:	e7f2      	b.n	800c512 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x60>
 800c52c:	f8d4 5110 	ldr.w	r5, [r4, #272]	; 0x110
 800c530:	b15d      	cbz	r5, 800c54a <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x98>
 800c532:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	; 0xf2
 800c536:	9200      	str	r2, [sp, #0]
 800c538:	2200      	movs	r2, #0
 800c53a:	4628      	mov	r0, r5
 800c53c:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	; 0xf0
 800c540:	4611      	mov	r1, r2
 800c542:	f7f6 fbaa 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c546:	69ad      	ldr	r5, [r5, #24]
 800c548:	e7f2      	b.n	800c530 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7e>
 800c54a:	6823      	ldr	r3, [r4, #0]
 800c54c:	695b      	ldr	r3, [r3, #20]
 800c54e:	4620      	mov	r0, r4
 800c550:	b003      	add	sp, #12
 800c552:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800c556:	4718      	bx	r3

0800c558 <_ZN8touchgfx17AbstractDataGraph8setWidthEs>:
 800c558:	b430      	push	{r4, r5}
 800c55a:	f8b0 4098 	ldrh.w	r4, [r0, #152]	; 0x98
 800c55e:	f8a0 10c4 	strh.w	r1, [r0, #196]	; 0xc4
 800c562:	b28a      	uxth	r2, r1
 800c564:	1b15      	subs	r5, r2, r4
 800c566:	f8a0 5094 	strh.w	r5, [r0, #148]	; 0x94
 800c56a:	f8b0 506c 	ldrh.w	r5, [r0, #108]	; 0x6c
 800c56e:	f8a0 10f0 	strh.w	r1, [r0, #240]	; 0xf0
 800c572:	442c      	add	r4, r5
 800c574:	1b12      	subs	r2, r2, r4
 800c576:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800c57a:	8101      	strh	r1, [r0, #8]
 800c57c:	bc30      	pop	{r4, r5}
 800c57e:	f7ff bf98 	b.w	800c4b2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800c582 <_ZN8touchgfx17AbstractDataGraph9setHeightEs>:
 800c582:	b430      	push	{r4, r5}
 800c584:	f8b0 40f2 	ldrh.w	r4, [r0, #242]	; 0xf2
 800c588:	f8a0 106e 	strh.w	r1, [r0, #110]	; 0x6e
 800c58c:	b28a      	uxth	r2, r1
 800c58e:	1b15      	subs	r5, r2, r4
 800c590:	f8a0 50ee 	strh.w	r5, [r0, #238]	; 0xee
 800c594:	f8b0 50c6 	ldrh.w	r5, [r0, #198]	; 0xc6
 800c598:	f8a0 109a 	strh.w	r1, [r0, #154]	; 0x9a
 800c59c:	442c      	add	r4, r5
 800c59e:	1b12      	subs	r2, r2, r4
 800c5a0:	f8a0 2042 	strh.w	r2, [r0, #66]	; 0x42
 800c5a4:	8141      	strh	r1, [r0, #10]
 800c5a6:	bc30      	pop	{r4, r5}
 800c5a8:	f7ff bf83 	b.w	800c4b2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800c5ac <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>:
 800c5ac:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800c5b0:	f9bd 7028 	ldrsh.w	r7, [sp, #40]	; 0x28
 800c5b4:	fa1f fa83 	uxth.w	sl, r3
 800c5b8:	4699      	mov	r9, r3
 800c5ba:	8903      	ldrh	r3, [r0, #8]
 800c5bc:	4604      	mov	r4, r0
 800c5be:	4615      	mov	r5, r2
 800c5c0:	fa1f f887 	uxth.w	r8, r7
 800c5c4:	4452      	add	r2, sl
 800c5c6:	8940      	ldrh	r0, [r0, #10]
 800c5c8:	1a9b      	subs	r3, r3, r2
 800c5ca:	eb08 0201 	add.w	r2, r8, r1
 800c5ce:	1a80      	subs	r0, r0, r2
 800c5d0:	b200      	sxth	r0, r0
 800c5d2:	460e      	mov	r6, r1
 800c5d4:	9000      	str	r0, [sp, #0]
 800c5d6:	460a      	mov	r2, r1
 800c5d8:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800c5dc:	4629      	mov	r1, r5
 800c5de:	b21b      	sxth	r3, r3
 800c5e0:	f7f6 fb5b 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c5e4:	2200      	movs	r2, #0
 800c5e6:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800c5ea:	9600      	str	r6, [sp, #0]
 800c5ec:	4611      	mov	r1, r2
 800c5ee:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800c5f2:	f7f6 fb52 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c5f6:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c5fa:	9300      	str	r3, [sp, #0]
 800c5fc:	2200      	movs	r2, #0
 800c5fe:	462b      	mov	r3, r5
 800c600:	4611      	mov	r1, r2
 800c602:	f104 0064 	add.w	r0, r4, #100	; 0x64
 800c606:	f7f6 fb48 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c60a:	8921      	ldrh	r1, [r4, #8]
 800c60c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c610:	9300      	str	r3, [sp, #0]
 800c612:	eba1 010a 	sub.w	r1, r1, sl
 800c616:	464b      	mov	r3, r9
 800c618:	f104 0090 	add.w	r0, r4, #144	; 0x90
 800c61c:	2200      	movs	r2, #0
 800c61e:	b209      	sxth	r1, r1
 800c620:	f7f6 fb3b 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c624:	8962      	ldrh	r2, [r4, #10]
 800c626:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800c62a:	9700      	str	r7, [sp, #0]
 800c62c:	eba2 0208 	sub.w	r2, r2, r8
 800c630:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800c634:	b212      	sxth	r2, r2
 800c636:	2100      	movs	r1, #0
 800c638:	f7f6 fb2f 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c63c:	4620      	mov	r0, r4
 800c63e:	b002      	add	sp, #8
 800c640:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c644:	f7ff bf35 	b.w	800c4b2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800c648 <_ZN8touchgfx17AbstractDataGraphC1Es>:
 800c648:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c64c:	b085      	sub	sp, #20
 800c64e:	4604      	mov	r4, r0
 800c650:	9103      	str	r1, [sp, #12]
 800c652:	f7ff fe25 	bl	800c2a0 <_ZN8touchgfx9ContainerC1Ev>
 800c656:	4b2d      	ldr	r3, [pc, #180]	; (800c70c <_ZN8touchgfx17AbstractDataGraphC1Es+0xc4>)
 800c658:	6023      	str	r3, [r4, #0]
 800c65a:	2601      	movs	r6, #1
 800c65c:	23ff      	movs	r3, #255	; 0xff
 800c65e:	f104 0b38 	add.w	fp, r4, #56	; 0x38
 800c662:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800c666:	f104 0964 	add.w	r9, r4, #100	; 0x64
 800c66a:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800c66e:	4658      	mov	r0, fp
 800c670:	f7ff fe16 	bl	800c2a0 <_ZN8touchgfx9ContainerC1Ev>
 800c674:	f104 0890 	add.w	r8, r4, #144	; 0x90
 800c678:	4648      	mov	r0, r9
 800c67a:	f7ff fe11 	bl	800c2a0 <_ZN8touchgfx9ContainerC1Ev>
 800c67e:	f104 0abc 	add.w	sl, r4, #188	; 0xbc
 800c682:	4640      	mov	r0, r8
 800c684:	f7ff fe0c 	bl	800c2a0 <_ZN8touchgfx9ContainerC1Ev>
 800c688:	f104 07e8 	add.w	r7, r4, #232	; 0xe8
 800c68c:	4650      	mov	r0, sl
 800c68e:	f7ff fe07 	bl	800c2a0 <_ZN8touchgfx9ContainerC1Ev>
 800c692:	4638      	mov	r0, r7
 800c694:	f7ff fe04 	bl	800c2a0 <_ZN8touchgfx9ContainerC1Ev>
 800c698:	2500      	movs	r5, #0
 800c69a:	9903      	ldr	r1, [sp, #12]
 800c69c:	f8a4 111c 	strh.w	r1, [r4, #284]	; 0x11c
 800c6a0:	4620      	mov	r0, r4
 800c6a2:	4659      	mov	r1, fp
 800c6a4:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 800c6a8:	f8c4 5118 	str.w	r5, [r4, #280]	; 0x118
 800c6ac:	f8a4 511e 	strh.w	r5, [r4, #286]	; 0x11e
 800c6b0:	f8a4 5120 	strh.w	r5, [r4, #288]	; 0x120
 800c6b4:	f8c4 5124 	str.w	r5, [r4, #292]	; 0x124
 800c6b8:	f8c4 5128 	str.w	r5, [r4, #296]	; 0x128
 800c6bc:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800c6c0:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800c6c4:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 800c6c8:	f8c4 5138 	str.w	r5, [r4, #312]	; 0x138
 800c6cc:	f7fe f99e 	bl	800aa0c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c6d0:	4651      	mov	r1, sl
 800c6d2:	4620      	mov	r0, r4
 800c6d4:	f7fe f99a 	bl	800aa0c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c6d8:	4649      	mov	r1, r9
 800c6da:	4620      	mov	r0, r4
 800c6dc:	f7fe f996 	bl	800aa0c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c6e0:	4641      	mov	r1, r8
 800c6e2:	4620      	mov	r0, r4
 800c6e4:	f7fe f992 	bl	800aa0c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c6e8:	4639      	mov	r1, r7
 800c6ea:	4620      	mov	r0, r4
 800c6ec:	f7fe f98e 	bl	800aa0c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c6f0:	4620      	mov	r0, r4
 800c6f2:	9500      	str	r5, [sp, #0]
 800c6f4:	462b      	mov	r3, r5
 800c6f6:	462a      	mov	r2, r5
 800c6f8:	4629      	mov	r1, r5
 800c6fa:	f7ff ff57 	bl	800c5ac <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
 800c6fe:	4620      	mov	r0, r4
 800c700:	f884 6024 	strb.w	r6, [r4, #36]	; 0x24
 800c704:	b005      	add	sp, #20
 800c706:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c70a:	bf00      	nop
 800c70c:	08023a44 	.word	0x08023a44

0800c710 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>:
 800c710:	4291      	cmp	r1, r2
 800c712:	4613      	mov	r3, r2
 800c714:	d003      	beq.n	800c71e <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii+0xe>
 800c716:	460a      	mov	r2, r1
 800c718:	4619      	mov	r1, r3
 800c71a:	f005 bdf1 	b.w	8012300 <_ZN8touchgfx6muldivElll>
 800c71e:	4770      	bx	lr

0800c720 <_ZN8touchgfx16DynamicDataGraph9setScaleXEib>:
 800c720:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c724:	6803      	ldr	r3, [r0, #0]
 800c726:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800c72a:	460d      	mov	r5, r1
 800c72c:	4604      	mov	r4, r0
 800c72e:	4798      	blx	r3
 800c730:	42a8      	cmp	r0, r5
 800c732:	4606      	mov	r6, r0
 800c734:	d024      	beq.n	800c780 <_ZN8touchgfx16DynamicDataGraph9setScaleXEib+0x60>
 800c736:	6823      	ldr	r3, [r4, #0]
 800c738:	4601      	mov	r1, r0
 800c73a:	462a      	mov	r2, r5
 800c73c:	f8d4 012c 	ldr.w	r0, [r4, #300]	; 0x12c
 800c740:	f8d3 70a4 	ldr.w	r7, [r3, #164]	; 0xa4
 800c744:	f7ff ffe4 	bl	800c710 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c748:	462a      	mov	r2, r5
 800c74a:	4680      	mov	r8, r0
 800c74c:	4631      	mov	r1, r6
 800c74e:	f8d4 0130 	ldr.w	r0, [r4, #304]	; 0x130
 800c752:	f7ff ffdd 	bl	800c710 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c756:	4641      	mov	r1, r8
 800c758:	4602      	mov	r2, r0
 800c75a:	4620      	mov	r0, r4
 800c75c:	47b8      	blx	r7
 800c75e:	462a      	mov	r2, r5
 800c760:	4631      	mov	r1, r6
 800c762:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 800c766:	f7ff ffd3 	bl	800c710 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c76a:	462a      	mov	r2, r5
 800c76c:	f8c4 013c 	str.w	r0, [r4, #316]	; 0x13c
 800c770:	4631      	mov	r1, r6
 800c772:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 800c776:	f7ff ffcb 	bl	800c710 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c77a:	6325      	str	r5, [r4, #48]	; 0x30
 800c77c:	f8c4 0140 	str.w	r0, [r4, #320]	; 0x140
 800c780:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c784 <_ZN8touchgfx16DynamicDataGraph9setScaleYEib>:
 800c784:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c788:	4604      	mov	r4, r0
 800c78a:	460f      	mov	r7, r1
 800c78c:	b1ba      	cbz	r2, 800c7be <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x3a>
 800c78e:	6803      	ldr	r3, [r0, #0]
 800c790:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800c794:	4798      	blx	r3
 800c796:	2600      	movs	r6, #0
 800c798:	4681      	mov	r9, r0
 800c79a:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c79e:	b235      	sxth	r5, r6
 800c7a0:	42ab      	cmp	r3, r5
 800c7a2:	f106 0601 	add.w	r6, r6, #1
 800c7a6:	dd0a      	ble.n	800c7be <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x3a>
 800c7a8:	f8d4 8144 	ldr.w	r8, [r4, #324]	; 0x144
 800c7ac:	463a      	mov	r2, r7
 800c7ae:	4649      	mov	r1, r9
 800c7b0:	f858 0025 	ldr.w	r0, [r8, r5, lsl #2]
 800c7b4:	f7ff ffac 	bl	800c710 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c7b8:	f848 0025 	str.w	r0, [r8, r5, lsl #2]
 800c7bc:	e7ed      	b.n	800c79a <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x16>
 800c7be:	6367      	str	r7, [r4, #52]	; 0x34
 800c7c0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0800c7c4 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>:
 800c7c4:	b570      	push	{r4, r5, r6, lr}
 800c7c6:	6803      	ldr	r3, [r0, #0]
 800c7c8:	4604      	mov	r4, r0
 800c7ca:	f8d3 3178 	ldr.w	r3, [r3, #376]	; 0x178
 800c7ce:	460d      	mov	r5, r1
 800c7d0:	4798      	blx	r3
 800c7d2:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 800c7d6:	3301      	adds	r3, #1
 800c7d8:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
 800c7dc:	6823      	ldr	r3, [r4, #0]
 800c7de:	4629      	mov	r1, r5
 800c7e0:	4620      	mov	r0, r4
 800c7e2:	f8d3 317c 	ldr.w	r3, [r3, #380]	; 0x17c
 800c7e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c7ea:	4718      	bx	r3

0800c7ec <_ZN8touchgfx16GraphElementLineD1Ev>:
 800c7ec:	4770      	bx	lr

0800c7ee <_ZN8touchgfx16GraphElementLineD0Ev>:
 800c7ee:	b510      	push	{r4, lr}
 800c7f0:	2130      	movs	r1, #48	; 0x30
 800c7f2:	4604      	mov	r4, r0
 800c7f4:	f013 ff48 	bl	8020688 <_ZdlPvj>
 800c7f8:	4620      	mov	r0, r4
 800c7fa:	bd10      	pop	{r4, pc}

0800c7fc <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800c7fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c7fe:	4604      	mov	r4, r0
 800c800:	4608      	mov	r0, r1
 800c802:	460d      	mov	r5, r1
 800c804:	f7fe fad5 	bl	800adb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c808:	b978      	cbnz	r0, 800c82a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800c80a:	4620      	mov	r0, r4
 800c80c:	f7fe fad1 	bl	800adb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c810:	f9b5 6000 	ldrsh.w	r6, [r5]
 800c814:	b150      	cbz	r0, 800c82c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800c816:	8026      	strh	r6, [r4, #0]
 800c818:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800c81c:	8063      	strh	r3, [r4, #2]
 800c81e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800c822:	80a3      	strh	r3, [r4, #4]
 800c824:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800c828:	80e3      	strh	r3, [r4, #6]
 800c82a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c82c:	f9b4 1000 	ldrsh.w	r1, [r4]
 800c830:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800c834:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800c838:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800c83c:	88ed      	ldrh	r5, [r5, #6]
 800c83e:	42b1      	cmp	r1, r6
 800c840:	460f      	mov	r7, r1
 800c842:	bfa8      	it	ge
 800c844:	4637      	movge	r7, r6
 800c846:	4293      	cmp	r3, r2
 800c848:	4618      	mov	r0, r3
 800c84a:	4466      	add	r6, ip
 800c84c:	bfa8      	it	ge
 800c84e:	4610      	movge	r0, r2
 800c850:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800c854:	8027      	strh	r7, [r4, #0]
 800c856:	442a      	add	r2, r5
 800c858:	88e5      	ldrh	r5, [r4, #6]
 800c85a:	8060      	strh	r0, [r4, #2]
 800c85c:	4461      	add	r1, ip
 800c85e:	442b      	add	r3, r5
 800c860:	b236      	sxth	r6, r6
 800c862:	b209      	sxth	r1, r1
 800c864:	b212      	sxth	r2, r2
 800c866:	b21b      	sxth	r3, r3
 800c868:	428e      	cmp	r6, r1
 800c86a:	bfac      	ite	ge
 800c86c:	ebc7 0106 	rsbge	r1, r7, r6
 800c870:	ebc7 0101 	rsblt	r1, r7, r1
 800c874:	429a      	cmp	r2, r3
 800c876:	bfac      	ite	ge
 800c878:	ebc0 0202 	rsbge	r2, r0, r2
 800c87c:	ebc0 0203 	rsblt	r2, r0, r3
 800c880:	80a1      	strh	r1, [r4, #4]
 800c882:	80e2      	strh	r2, [r4, #6]
 800c884:	e7d1      	b.n	800c82a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>

0800c886 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 800c886:	6800      	ldr	r0, [r0, #0]
 800c888:	2800      	cmp	r0, #0
 800c88a:	bfb9      	ittee	lt
 800c88c:	2320      	movlt	r3, #32
 800c88e:	fb90 f0f3 	sdivlt	r0, r0, r3
 800c892:	301f      	addge	r0, #31
 800c894:	1140      	asrge	r0, r0, #5
 800c896:	4770      	bx	lr

0800c898 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE>:
 800c898:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c89c:	6803      	ldr	r3, [r0, #0]
 800c89e:	6945      	ldr	r5, [r0, #20]
 800c8a0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800c8a2:	b093      	sub	sp, #76	; 0x4c
 800c8a4:	4604      	mov	r4, r0
 800c8a6:	460f      	mov	r7, r1
 800c8a8:	2d00      	cmp	r5, #0
 800c8aa:	f000 81ad 	beq.w	800cc08 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x370>
 800c8ae:	696d      	ldr	r5, [r5, #20]
 800c8b0:	4798      	blx	r3
 800c8b2:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800c8b6:	2b00      	cmp	r3, #0
 800c8b8:	d077      	beq.n	800c9aa <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c8ba:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800c8be:	fb13 f000 	smulbb	r0, r3, r0
 800c8c2:	b283      	uxth	r3, r0
 800c8c4:	1c58      	adds	r0, r3, #1
 800c8c6:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 800c8ca:	1200      	asrs	r0, r0, #8
 800c8cc:	d06d      	beq.n	800c9aa <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c8ce:	b2c3      	uxtb	r3, r0
 800c8d0:	9308      	str	r3, [sp, #32]
 800c8d2:	6823      	ldr	r3, [r4, #0]
 800c8d4:	f10d 0840 	add.w	r8, sp, #64	; 0x40
 800c8d8:	462a      	mov	r2, r5
 800c8da:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800c8de:	4621      	mov	r1, r4
 800c8e0:	4640      	mov	r0, r8
 800c8e2:	4798      	blx	r3
 800c8e4:	e898 0003 	ldmia.w	r8, {r0, r1}
 800c8e8:	ae0e      	add	r6, sp, #56	; 0x38
 800c8ea:	e886 0003 	stmia.w	r6, {r0, r1}
 800c8ee:	4639      	mov	r1, r7
 800c8f0:	4630      	mov	r0, r6
 800c8f2:	f7fe fa1b 	bl	800ad2c <_ZN8touchgfx4RectaNERKS0_>
 800c8f6:	6823      	ldr	r3, [r4, #0]
 800c8f8:	4629      	mov	r1, r5
 800c8fa:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800c8fe:	4620      	mov	r0, r4
 800c900:	4798      	blx	r3
 800c902:	6823      	ldr	r3, [r4, #0]
 800c904:	4607      	mov	r7, r0
 800c906:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800c90a:	4629      	mov	r1, r5
 800c90c:	4620      	mov	r0, r4
 800c90e:	4798      	blx	r3
 800c910:	4681      	mov	r9, r0
 800c912:	f894 0038 	ldrb.w	r0, [r4, #56]	; 0x38
 800c916:	0103      	lsls	r3, r0, #4
 800c918:	9309      	str	r3, [sp, #36]	; 0x24
 800c91a:	6823      	ldr	r3, [r4, #0]
 800c91c:	4629      	mov	r1, r5
 800c91e:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800c922:	4620      	mov	r0, r4
 800c924:	4798      	blx	r3
 800c926:	b203      	sxth	r3, r0
 800c928:	9306      	str	r3, [sp, #24]
 800c92a:	6823      	ldr	r3, [r4, #0]
 800c92c:	4629      	mov	r1, r5
 800c92e:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800c932:	4620      	mov	r0, r4
 800c934:	4798      	blx	r3
 800c936:	2f00      	cmp	r7, #0
 800c938:	b203      	sxth	r3, r0
 800c93a:	9307      	str	r3, [sp, #28]
 800c93c:	d138      	bne.n	800c9b0 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x118>
 800c93e:	f1b9 0f00 	cmp.w	r9, #0
 800c942:	d132      	bne.n	800c9aa <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c944:	6823      	ldr	r3, [r4, #0]
 800c946:	464a      	mov	r2, r9
 800c948:	4629      	mov	r1, r5
 800c94a:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800c94e:	4620      	mov	r0, r4
 800c950:	4798      	blx	r3
 800c952:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c954:	1ac0      	subs	r0, r0, r3
 800c956:	9010      	str	r0, [sp, #64]	; 0x40
 800c958:	4640      	mov	r0, r8
 800c95a:	f7ff fcbb 	bl	800c2d4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c95e:	6823      	ldr	r3, [r4, #0]
 800c960:	4607      	mov	r7, r0
 800c962:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800c966:	4629      	mov	r1, r5
 800c968:	4620      	mov	r0, r4
 800c96a:	4798      	blx	r3
 800c96c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800c970:	1a38      	subs	r0, r7, r0
 800c972:	fa0f f880 	sxth.w	r8, r0
 800c976:	eb13 0f08 	cmn.w	r3, r8
 800c97a:	d416      	bmi.n	800c9aa <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c97c:	6823      	ldr	r3, [r4, #0]
 800c97e:	4629      	mov	r1, r5
 800c980:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 800c984:	4620      	mov	r0, r4
 800c986:	4798      	blx	r3
 800c988:	4580      	cmp	r8, r0
 800c98a:	da0e      	bge.n	800c9aa <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c98c:	9a08      	ldr	r2, [sp, #32]
 800c98e:	6823      	ldr	r3, [r4, #0]
 800c990:	9202      	str	r2, [sp, #8]
 800c992:	b23f      	sxth	r7, r7
 800c994:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800c998:	9201      	str	r2, [sp, #4]
 800c99a:	9700      	str	r7, [sp, #0]
 800c99c:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800c9a0:	4631      	mov	r1, r6
 800c9a2:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800c9a6:	4620      	mov	r0, r4
 800c9a8:	47a8      	blx	r5
 800c9aa:	b013      	add	sp, #76	; 0x4c
 800c9ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c9b0:	ddfb      	ble.n	800c9aa <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c9b2:	6823      	ldr	r3, [r4, #0]
 800c9b4:	4629      	mov	r1, r5
 800c9b6:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800c9ba:	4620      	mov	r0, r4
 800c9bc:	4798      	blx	r3
 800c9be:	6823      	ldr	r3, [r4, #0]
 800c9c0:	4683      	mov	fp, r0
 800c9c2:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800c9c6:	4629      	mov	r1, r5
 800c9c8:	4620      	mov	r0, r4
 800c9ca:	4798      	blx	r3
 800c9cc:	eba0 030b 	sub.w	r3, r0, fp
 800c9d0:	2b00      	cmp	r3, #0
 800c9d2:	bfb8      	it	lt
 800c9d4:	425b      	neglt	r3, r3
 800c9d6:	fb93 f3f7 	sdiv	r3, r3, r7
 800c9da:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800c9de:	4680      	mov	r8, r0
 800c9e0:	dce3      	bgt.n	800c9aa <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c9e2:	6823      	ldr	r3, [r4, #0]
 800c9e4:	465a      	mov	r2, fp
 800c9e6:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800c9ea:	4629      	mov	r1, r5
 800c9ec:	4620      	mov	r0, r4
 800c9ee:	4798      	blx	r3
 800c9f0:	6823      	ldr	r3, [r4, #0]
 800c9f2:	4606      	mov	r6, r0
 800c9f4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800c9f8:	4642      	mov	r2, r8
 800c9fa:	4629      	mov	r1, r5
 800c9fc:	4620      	mov	r0, r4
 800c9fe:	4798      	blx	r3
 800ca00:	42b0      	cmp	r0, r6
 800ca02:	bfa2      	ittt	ge
 800ca04:	4643      	movge	r3, r8
 800ca06:	46d8      	movge	r8, fp
 800ca08:	469b      	movge	fp, r3
 800ca0a:	45d8      	cmp	r8, fp
 800ca0c:	bfac      	ite	ge
 800ca0e:	f04f 33ff 	movge.w	r3, #4294967295
 800ca12:	2301      	movlt	r3, #1
 800ca14:	fb98 f6f7 	sdiv	r6, r8, r7
 800ca18:	fb9b f2f7 	sdiv	r2, fp, r7
 800ca1c:	1af6      	subs	r6, r6, r3
 800ca1e:	441a      	add	r2, r3
 800ca20:	4296      	cmp	r6, r2
 800ca22:	bfac      	ite	ge
 800ca24:	f04f 3aff 	movge.w	sl, #4294967295
 800ca28:	f04f 0a01 	movlt.w	sl, #1
 800ca2c:	f1b9 0f00 	cmp.w	r9, #0
 800ca30:	d13e      	bne.n	800cab0 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x218>
 800ca32:	fb07 fb0a 	mul.w	fp, r7, sl
 800ca36:	eb0a 0802 	add.w	r8, sl, r2
 800ca3a:	4377      	muls	r7, r6
 800ca3c:	45b0      	cmp	r8, r6
 800ca3e:	d0b4      	beq.n	800c9aa <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800ca40:	6823      	ldr	r3, [r4, #0]
 800ca42:	463a      	mov	r2, r7
 800ca44:	4629      	mov	r1, r5
 800ca46:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800ca4a:	4620      	mov	r0, r4
 800ca4c:	4798      	blx	r3
 800ca4e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ca50:	1ac0      	subs	r0, r0, r3
 800ca52:	9010      	str	r0, [sp, #64]	; 0x40
 800ca54:	a810      	add	r0, sp, #64	; 0x40
 800ca56:	f7ff fc3d 	bl	800c2d4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800ca5a:	6823      	ldr	r3, [r4, #0]
 800ca5c:	4681      	mov	r9, r0
 800ca5e:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800ca62:	4629      	mov	r1, r5
 800ca64:	4620      	mov	r0, r4
 800ca66:	4798      	blx	r3
 800ca68:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800ca6c:	eba9 0000 	sub.w	r0, r9, r0
 800ca70:	b203      	sxth	r3, r0
 800ca72:	42da      	cmn	r2, r3
 800ca74:	9304      	str	r3, [sp, #16]
 800ca76:	d418      	bmi.n	800caaa <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 800ca78:	6822      	ldr	r2, [r4, #0]
 800ca7a:	4629      	mov	r1, r5
 800ca7c:	f8d2 20a8 	ldr.w	r2, [r2, #168]	; 0xa8
 800ca80:	4620      	mov	r0, r4
 800ca82:	4790      	blx	r2
 800ca84:	9b04      	ldr	r3, [sp, #16]
 800ca86:	4283      	cmp	r3, r0
 800ca88:	da0f      	bge.n	800caaa <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 800ca8a:	9b08      	ldr	r3, [sp, #32]
 800ca8c:	9302      	str	r3, [sp, #8]
 800ca8e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800ca92:	6822      	ldr	r2, [r4, #0]
 800ca94:	9301      	str	r3, [sp, #4]
 800ca96:	fa0f f389 	sxth.w	r3, r9
 800ca9a:	9300      	str	r3, [sp, #0]
 800ca9c:	f8d2 9088 	ldr.w	r9, [r2, #136]	; 0x88
 800caa0:	a90e      	add	r1, sp, #56	; 0x38
 800caa2:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800caa6:	4620      	mov	r0, r4
 800caa8:	47c8      	blx	r9
 800caaa:	4456      	add	r6, sl
 800caac:	445f      	add	r7, fp
 800caae:	e7c5      	b.n	800ca3c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x1a4>
 800cab0:	fb98 f8f9 	sdiv	r8, r8, r9
 800cab4:	eba8 0203 	sub.w	r2, r8, r3
 800cab8:	fb9b f8f9 	sdiv	r8, fp, r9
 800cabc:	4498      	add	r8, r3
 800cabe:	4542      	cmp	r2, r8
 800cac0:	bfac      	ite	ge
 800cac2:	f04f 33ff 	movge.w	r3, #4294967295
 800cac6:	2301      	movlt	r3, #1
 800cac8:	930a      	str	r3, [sp, #40]	; 0x28
 800caca:	6823      	ldr	r3, [r4, #0]
 800cacc:	9204      	str	r2, [sp, #16]
 800cace:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cad2:	fb02 f209 	mul.w	r2, r2, r9
 800cad6:	4629      	mov	r1, r5
 800cad8:	4620      	mov	r0, r4
 800cada:	4798      	blx	r3
 800cadc:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
 800cae0:	f84b 0d08 	str.w	r0, [fp, #-8]!
 800cae4:	4658      	mov	r0, fp
 800cae6:	f7ff fbf5 	bl	800c2d4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800caea:	b203      	sxth	r3, r0
 800caec:	9305      	str	r3, [sp, #20]
 800caee:	6823      	ldr	r3, [r4, #0]
 800caf0:	fb06 f207 	mul.w	r2, r6, r7
 800caf4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800caf8:	4629      	mov	r1, r5
 800cafa:	4620      	mov	r0, r4
 800cafc:	4798      	blx	r3
 800cafe:	9010      	str	r0, [sp, #64]	; 0x40
 800cb00:	4658      	mov	r0, fp
 800cb02:	f7ff fbe7 	bl	800c2d4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cb06:	fb07 f20a 	mul.w	r2, r7, sl
 800cb0a:	920b      	str	r2, [sp, #44]	; 0x2c
 800cb0c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800cb0e:	4442      	add	r2, r8
 800cb10:	b203      	sxth	r3, r0
 800cb12:	920c      	str	r2, [sp, #48]	; 0x30
 800cb14:	9a05      	ldr	r2, [sp, #20]
 800cb16:	429a      	cmp	r2, r3
 800cb18:	dc16      	bgt.n	800cb48 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x2b0>
 800cb1a:	eb06 080a 	add.w	r8, r6, sl
 800cb1e:	fb07 f808 	mul.w	r8, r7, r8
 800cb22:	9a05      	ldr	r2, [sp, #20]
 800cb24:	429a      	cmp	r2, r3
 800cb26:	db54      	blt.n	800cbd2 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x33a>
 800cb28:	6823      	ldr	r3, [r4, #0]
 800cb2a:	4642      	mov	r2, r8
 800cb2c:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cb30:	4629      	mov	r1, r5
 800cb32:	4620      	mov	r0, r4
 800cb34:	4798      	blx	r3
 800cb36:	9010      	str	r0, [sp, #64]	; 0x40
 800cb38:	4658      	mov	r0, fp
 800cb3a:	f7ff fbcb 	bl	800c2d4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cb3e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800cb40:	4456      	add	r6, sl
 800cb42:	b203      	sxth	r3, r0
 800cb44:	4490      	add	r8, r2
 800cb46:	e7ec      	b.n	800cb22 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x28a>
 800cb48:	6823      	ldr	r3, [r4, #0]
 800cb4a:	fb07 f206 	mul.w	r2, r7, r6
 800cb4e:	4629      	mov	r1, r5
 800cb50:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cb54:	4620      	mov	r0, r4
 800cb56:	4798      	blx	r3
 800cb58:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cb5a:	1ac0      	subs	r0, r0, r3
 800cb5c:	9010      	str	r0, [sp, #64]	; 0x40
 800cb5e:	4658      	mov	r0, fp
 800cb60:	f7ff fbb8 	bl	800c2d4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cb64:	6823      	ldr	r3, [r4, #0]
 800cb66:	4680      	mov	r8, r0
 800cb68:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800cb6c:	4629      	mov	r1, r5
 800cb6e:	4620      	mov	r0, r4
 800cb70:	4798      	blx	r3
 800cb72:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800cb76:	eba8 0000 	sub.w	r0, r8, r0
 800cb7a:	b203      	sxth	r3, r0
 800cb7c:	42da      	cmn	r2, r3
 800cb7e:	930d      	str	r3, [sp, #52]	; 0x34
 800cb80:	d418      	bmi.n	800cbb4 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 800cb82:	6822      	ldr	r2, [r4, #0]
 800cb84:	4629      	mov	r1, r5
 800cb86:	f8d2 20a8 	ldr.w	r2, [r2, #168]	; 0xa8
 800cb8a:	4620      	mov	r0, r4
 800cb8c:	4790      	blx	r2
 800cb8e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800cb90:	4283      	cmp	r3, r0
 800cb92:	da0f      	bge.n	800cbb4 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 800cb94:	9b08      	ldr	r3, [sp, #32]
 800cb96:	9302      	str	r3, [sp, #8]
 800cb98:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800cb9c:	6822      	ldr	r2, [r4, #0]
 800cb9e:	9301      	str	r3, [sp, #4]
 800cba0:	fa0f f388 	sxth.w	r3, r8
 800cba4:	9300      	str	r3, [sp, #0]
 800cba6:	f8d2 8088 	ldr.w	r8, [r2, #136]	; 0x88
 800cbaa:	a90e      	add	r1, sp, #56	; 0x38
 800cbac:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800cbb0:	4620      	mov	r0, r4
 800cbb2:	47c0      	blx	r8
 800cbb4:	6823      	ldr	r3, [r4, #0]
 800cbb6:	4456      	add	r6, sl
 800cbb8:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cbbc:	fb06 f207 	mul.w	r2, r6, r7
 800cbc0:	4629      	mov	r1, r5
 800cbc2:	4620      	mov	r0, r4
 800cbc4:	4798      	blx	r3
 800cbc6:	9010      	str	r0, [sp, #64]	; 0x40
 800cbc8:	4658      	mov	r0, fp
 800cbca:	f7ff fb83 	bl	800c2d4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cbce:	b203      	sxth	r3, r0
 800cbd0:	e7a0      	b.n	800cb14 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 800cbd2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800cbd4:	930d      	str	r3, [sp, #52]	; 0x34
 800cbd6:	9b04      	ldr	r3, [sp, #16]
 800cbd8:	4413      	add	r3, r2
 800cbda:	9304      	str	r3, [sp, #16]
 800cbdc:	9a04      	ldr	r2, [sp, #16]
 800cbde:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800cbe0:	4293      	cmp	r3, r2
 800cbe2:	f43f aee2 	beq.w	800c9aa <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800cbe6:	9b04      	ldr	r3, [sp, #16]
 800cbe8:	6822      	ldr	r2, [r4, #0]
 800cbea:	4629      	mov	r1, r5
 800cbec:	f8d2 80ac 	ldr.w	r8, [r2, #172]	; 0xac
 800cbf0:	4620      	mov	r0, r4
 800cbf2:	fb03 f209 	mul.w	r2, r3, r9
 800cbf6:	47c0      	blx	r8
 800cbf8:	9010      	str	r0, [sp, #64]	; 0x40
 800cbfa:	4658      	mov	r0, fp
 800cbfc:	f7ff fb6a 	bl	800c2d4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cc00:	b203      	sxth	r3, r0
 800cc02:	9305      	str	r3, [sp, #20]
 800cc04:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800cc06:	e785      	b.n	800cb14 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 800cc08:	4798      	blx	r3
 800cc0a:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800cc0e:	deff      	udf	#255	; 0xff

0800cc10 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 800cc10:	b510      	push	{r4, lr}
 800cc12:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 800cc16:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 800cc1a:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 800cc1e:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 800cc22:	13a4      	asrs	r4, r4, #14
 800cc24:	139b      	asrs	r3, r3, #14
 800cc26:	429c      	cmp	r4, r3
 800cc28:	bfb8      	it	lt
 800cc2a:	461c      	movlt	r4, r3
 800cc2c:	2c01      	cmp	r4, #1
 800cc2e:	dd07      	ble.n	800cc40 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 800cc30:	fb91 f1f4 	sdiv	r1, r1, r4
 800cc34:	fb90 f0f4 	sdiv	r0, r0, r4
 800cc38:	f7ff ffea 	bl	800cc10 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800cc3c:	4360      	muls	r0, r4
 800cc3e:	bd10      	pop	{r4, pc}
 800cc40:	4340      	muls	r0, r0
 800cc42:	fb01 0101 	mla	r1, r1, r1, r0
 800cc46:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 800cc4a:	bfb4      	ite	lt
 800cc4c:	f44f 4380 	movlt.w	r3, #16384	; 0x4000
 800cc50:	f04f 4380 	movge.w	r3, #1073741824	; 0x40000000
 800cc54:	2000      	movs	r0, #0
 800cc56:	18c2      	adds	r2, r0, r3
 800cc58:	428a      	cmp	r2, r1
 800cc5a:	bf9c      	itt	ls
 800cc5c:	1898      	addls	r0, r3, r2
 800cc5e:	1a89      	subls	r1, r1, r2
 800cc60:	089b      	lsrs	r3, r3, #2
 800cc62:	ea4f 0050 	mov.w	r0, r0, lsr #1
 800cc66:	d1f6      	bne.n	800cc56 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x46>
 800cc68:	e7e9      	b.n	800cc3e <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

0800cc6a <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>:
 800cc6a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cc6c:	9906      	ldr	r1, [sp, #24]
 800cc6e:	4291      	cmp	r1, r2
 800cc70:	bfbc      	itt	lt
 800cc72:	9206      	strlt	r2, [sp, #24]
 800cc74:	460a      	movlt	r2, r1
 800cc76:	9907      	ldr	r1, [sp, #28]
 800cc78:	428b      	cmp	r3, r1
 800cc7a:	4606      	mov	r6, r0
 800cc7c:	461c      	mov	r4, r3
 800cc7e:	f04f 0020 	mov.w	r0, #32
 800cc82:	bfc8      	it	gt
 800cc84:	460c      	movgt	r4, r1
 800cc86:	fb92 f5f0 	sdiv	r5, r2, r0
 800cc8a:	fb94 f4f0 	sdiv	r4, r4, r0
 800cc8e:	a806      	add	r0, sp, #24
 800cc90:	bfc8      	it	gt
 800cc92:	9307      	strgt	r3, [sp, #28]
 800cc94:	f7ff fdf7 	bl	800c886 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800cc98:	4607      	mov	r7, r0
 800cc9a:	a807      	add	r0, sp, #28
 800cc9c:	f7ff fdf3 	bl	800c886 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800cca0:	1b7a      	subs	r2, r7, r5
 800cca2:	1b00      	subs	r0, r0, r4
 800cca4:	80f0      	strh	r0, [r6, #6]
 800cca6:	8035      	strh	r5, [r6, #0]
 800cca8:	8074      	strh	r4, [r6, #2]
 800ccaa:	80b2      	strh	r2, [r6, #4]
 800ccac:	4630      	mov	r0, r6
 800ccae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800ccb0 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>:
 800ccb0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ccb2:	9c08      	ldr	r4, [sp, #32]
 800ccb4:	2602      	movs	r6, #2
 800ccb6:	3401      	adds	r4, #1
 800ccb8:	fb94 f4f6 	sdiv	r4, r4, r6
 800ccbc:	18a6      	adds	r6, r4, r2
 800ccbe:	191f      	adds	r7, r3, r4
 800ccc0:	e9cd 6700 	strd	r6, r7, [sp]
 800ccc4:	1b1b      	subs	r3, r3, r4
 800ccc6:	1b12      	subs	r2, r2, r4
 800ccc8:	4605      	mov	r5, r0
 800ccca:	f7ff ffce 	bl	800cc6a <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>
 800ccce:	4628      	mov	r0, r5
 800ccd0:	b003      	add	sp, #12
 800ccd2:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800ccd4 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs>:
 800ccd4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ccd8:	6943      	ldr	r3, [r0, #20]
 800ccda:	b087      	sub	sp, #28
 800ccdc:	4606      	mov	r6, r0
 800ccde:	460d      	mov	r5, r1
 800cce0:	2b00      	cmp	r3, #0
 800cce2:	d072      	beq.n	800cdca <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xf6>
 800cce4:	695c      	ldr	r4, [r3, #20]
 800cce6:	f890 702c 	ldrb.w	r7, [r0, #44]	; 0x2c
 800ccea:	6823      	ldr	r3, [r4, #0]
 800ccec:	4620      	mov	r0, r4
 800ccee:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800ccf2:	4798      	blx	r3
 800ccf4:	6823      	ldr	r3, [r4, #0]
 800ccf6:	4680      	mov	r8, r0
 800ccf8:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800ccfc:	4629      	mov	r1, r5
 800ccfe:	4620      	mov	r0, r4
 800cd00:	4798      	blx	r3
 800cd02:	017f      	lsls	r7, r7, #5
 800cd04:	4603      	mov	r3, r0
 800cd06:	9700      	str	r7, [sp, #0]
 800cd08:	4642      	mov	r2, r8
 800cd0a:	4631      	mov	r1, r6
 800cd0c:	a802      	add	r0, sp, #8
 800cd0e:	f7ff ffcf 	bl	800ccb0 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800cd12:	2d00      	cmp	r5, #0
 800cd14:	dd1b      	ble.n	800cd4e <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0x7a>
 800cd16:	6823      	ldr	r3, [r4, #0]
 800cd18:	f105 38ff 	add.w	r8, r5, #4294967295
 800cd1c:	fa0f f888 	sxth.w	r8, r8
 800cd20:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800cd24:	4641      	mov	r1, r8
 800cd26:	4620      	mov	r0, r4
 800cd28:	4798      	blx	r3
 800cd2a:	6823      	ldr	r3, [r4, #0]
 800cd2c:	4681      	mov	r9, r0
 800cd2e:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800cd32:	4641      	mov	r1, r8
 800cd34:	4620      	mov	r0, r4
 800cd36:	4798      	blx	r3
 800cd38:	4631      	mov	r1, r6
 800cd3a:	4603      	mov	r3, r0
 800cd3c:	9700      	str	r7, [sp, #0]
 800cd3e:	a804      	add	r0, sp, #16
 800cd40:	464a      	mov	r2, r9
 800cd42:	f7ff ffb5 	bl	800ccb0 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800cd46:	a904      	add	r1, sp, #16
 800cd48:	a802      	add	r0, sp, #8
 800cd4a:	f7ff fd57 	bl	800c7fc <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800cd4e:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800cd52:	3b01      	subs	r3, #1
 800cd54:	429d      	cmp	r5, r3
 800cd56:	da19      	bge.n	800cd8c <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xb8>
 800cd58:	6823      	ldr	r3, [r4, #0]
 800cd5a:	3501      	adds	r5, #1
 800cd5c:	b22d      	sxth	r5, r5
 800cd5e:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800cd62:	4629      	mov	r1, r5
 800cd64:	4620      	mov	r0, r4
 800cd66:	4798      	blx	r3
 800cd68:	6823      	ldr	r3, [r4, #0]
 800cd6a:	4680      	mov	r8, r0
 800cd6c:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800cd70:	4629      	mov	r1, r5
 800cd72:	4620      	mov	r0, r4
 800cd74:	4798      	blx	r3
 800cd76:	4631      	mov	r1, r6
 800cd78:	4603      	mov	r3, r0
 800cd7a:	9700      	str	r7, [sp, #0]
 800cd7c:	a804      	add	r0, sp, #16
 800cd7e:	4642      	mov	r2, r8
 800cd80:	f7ff ff96 	bl	800ccb0 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800cd84:	a904      	add	r1, sp, #16
 800cd86:	a802      	add	r0, sp, #8
 800cd88:	f7ff fd38 	bl	800c7fc <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800cd8c:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 800cd90:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 800cd94:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 800cd98:	18ca      	adds	r2, r1, r3
 800cd9a:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800cd9e:	f8ad 1012 	strh.w	r1, [sp, #18]
 800cda2:	1a9b      	subs	r3, r3, r2
 800cda4:	f8ad 0014 	strh.w	r0, [sp, #20]
 800cda8:	2200      	movs	r2, #0
 800cdaa:	a904      	add	r1, sp, #16
 800cdac:	a802      	add	r0, sp, #8
 800cdae:	f8ad 2010 	strh.w	r2, [sp, #16]
 800cdb2:	f8ad 3016 	strh.w	r3, [sp, #22]
 800cdb6:	f7fd ffb9 	bl	800ad2c <_ZN8touchgfx4RectaNERKS0_>
 800cdba:	6833      	ldr	r3, [r6, #0]
 800cdbc:	a902      	add	r1, sp, #8
 800cdbe:	691b      	ldr	r3, [r3, #16]
 800cdc0:	4630      	mov	r0, r6
 800cdc2:	4798      	blx	r3
 800cdc4:	b007      	add	sp, #28
 800cdc6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cdca:	681b      	ldr	r3, [r3, #0]
 800cdcc:	deff      	udf	#255	; 0xff

0800cdce <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>:
 800cdce:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800cdd2:	2b00      	cmp	r3, #0
 800cdd4:	da05      	bge.n	800cde2 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x14>
 800cdd6:	880a      	ldrh	r2, [r1, #0]
 800cdd8:	b29b      	uxth	r3, r3
 800cdda:	441a      	add	r2, r3
 800cddc:	425b      	negs	r3, r3
 800cdde:	800a      	strh	r2, [r1, #0]
 800cde0:	808b      	strh	r3, [r1, #4]
 800cde2:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800cde6:	2b00      	cmp	r3, #0
 800cde8:	da05      	bge.n	800cdf6 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x28>
 800cdea:	884a      	ldrh	r2, [r1, #2]
 800cdec:	b29b      	uxth	r3, r3
 800cdee:	441a      	add	r2, r3
 800cdf0:	425b      	negs	r3, r3
 800cdf2:	804a      	strh	r2, [r1, #2]
 800cdf4:	80cb      	strh	r3, [r1, #6]
 800cdf6:	4770      	bx	lr

0800cdf8 <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh>:
 800cdf8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800cdfa:	4604      	mov	r4, r0
 800cdfc:	460d      	mov	r5, r1
 800cdfe:	6801      	ldr	r1, [r0, #0]
 800ce00:	f9bd 0024 	ldrsh.w	r0, [sp, #36]	; 0x24
 800ce04:	9001      	str	r0, [sp, #4]
 800ce06:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 800ce0a:	9000      	str	r0, [sp, #0]
 800ce0c:	f8d1 6090 	ldr.w	r6, [r1, #144]	; 0x90
 800ce10:	a802      	add	r0, sp, #8
 800ce12:	4621      	mov	r1, r4
 800ce14:	47b0      	blx	r6
 800ce16:	a902      	add	r1, sp, #8
 800ce18:	4620      	mov	r0, r4
 800ce1a:	f7ff ffd8 	bl	800cdce <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>
 800ce1e:	a802      	add	r0, sp, #8
 800ce20:	4629      	mov	r1, r5
 800ce22:	f7fd ff83 	bl	800ad2c <_ZN8touchgfx4RectaNERKS0_>
 800ce26:	a802      	add	r0, sp, #8
 800ce28:	f7fd ffc3 	bl	800adb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ce2c:	b968      	cbnz	r0, 800ce4a <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh+0x52>
 800ce2e:	6823      	ldr	r3, [r4, #0]
 800ce30:	a902      	add	r1, sp, #8
 800ce32:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ce34:	4620      	mov	r0, r4
 800ce36:	4798      	blx	r3
 800ce38:	f7f5 fc4e 	bl	80026d8 <_ZN8touchgfx3HAL3lcdEv>
 800ce3c:	6803      	ldr	r3, [r0, #0]
 800ce3e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ce40:	6a1d      	ldr	r5, [r3, #32]
 800ce42:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 800ce46:	a902      	add	r1, sp, #8
 800ce48:	47a8      	blx	r5
 800ce4a:	b004      	add	sp, #16
 800ce4c:	bd70      	pop	{r4, r5, r6, pc}

0800ce4e <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>:
 800ce4e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ce52:	b08b      	sub	sp, #44	; 0x2c
 800ce54:	461e      	mov	r6, r3
 800ce56:	f9bd 3050 	ldrsh.w	r3, [sp, #80]	; 0x50
 800ce5a:	9304      	str	r3, [sp, #16]
 800ce5c:	429e      	cmp	r6, r3
 800ce5e:	4689      	mov	r9, r1
 800ce60:	4615      	mov	r5, r2
 800ce62:	d072      	beq.n	800cf4a <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xfc>
 800ce64:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800ce68:	015b      	lsls	r3, r3, #5
 800ce6a:	9303      	str	r3, [sp, #12]
 800ce6c:	6813      	ldr	r3, [r2, #0]
 800ce6e:	4610      	mov	r0, r2
 800ce70:	4631      	mov	r1, r6
 800ce72:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800ce76:	4798      	blx	r3
 800ce78:	ab0a      	add	r3, sp, #40	; 0x28
 800ce7a:	4634      	mov	r4, r6
 800ce7c:	f843 0d10 	str.w	r0, [r3, #-16]!
 800ce80:	4618      	mov	r0, r3
 800ce82:	f7ff fa27 	bl	800c2d4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800ce86:	682b      	ldr	r3, [r5, #0]
 800ce88:	4631      	mov	r1, r6
 800ce8a:	0147      	lsls	r7, r0, #5
 800ce8c:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800ce90:	4628      	mov	r0, r5
 800ce92:	4798      	blx	r3
 800ce94:	ab0a      	add	r3, sp, #40	; 0x28
 800ce96:	f843 0d0c 	str.w	r0, [r3, #-12]!
 800ce9a:	4618      	mov	r0, r3
 800ce9c:	f7ff fa1a 	bl	800c2d4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cea0:	ea4f 1840 	mov.w	r8, r0, lsl #5
 800cea4:	4642      	mov	r2, r8
 800cea6:	4639      	mov	r1, r7
 800cea8:	4648      	mov	r0, r9
 800ceaa:	f013 fb9b 	bl	80205e4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800ceae:	2301      	movs	r3, #1
 800ceb0:	9300      	str	r3, [sp, #0]
 800ceb2:	9b00      	ldr	r3, [sp, #0]
 800ceb4:	441c      	add	r4, r3
 800ceb6:	682b      	ldr	r3, [r5, #0]
 800ceb8:	b224      	sxth	r4, r4
 800ceba:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800cebe:	4621      	mov	r1, r4
 800cec0:	4628      	mov	r0, r5
 800cec2:	4798      	blx	r3
 800cec4:	9008      	str	r0, [sp, #32]
 800cec6:	a808      	add	r0, sp, #32
 800cec8:	f7ff fa04 	bl	800c2d4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cecc:	0143      	lsls	r3, r0, #5
 800cece:	9301      	str	r3, [sp, #4]
 800ced0:	682b      	ldr	r3, [r5, #0]
 800ced2:	4621      	mov	r1, r4
 800ced4:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800ced8:	4628      	mov	r0, r5
 800ceda:	4798      	blx	r3
 800cedc:	9009      	str	r0, [sp, #36]	; 0x24
 800cede:	a809      	add	r0, sp, #36	; 0x24
 800cee0:	f7ff f9f8 	bl	800c2d4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cee4:	0143      	lsls	r3, r0, #5
 800cee6:	9302      	str	r3, [sp, #8]
 800cee8:	9b01      	ldr	r3, [sp, #4]
 800ceea:	eba3 0b07 	sub.w	fp, r3, r7
 800ceee:	9b02      	ldr	r3, [sp, #8]
 800cef0:	eba3 0a08 	sub.w	sl, r3, r8
 800cef4:	4651      	mov	r1, sl
 800cef6:	4658      	mov	r0, fp
 800cef8:	f7ff fe8a 	bl	800cc10 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800cefc:	b318      	cbz	r0, 800cf46 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xf8>
 800cefe:	4602      	mov	r2, r0
 800cf00:	4651      	mov	r1, sl
 800cf02:	9005      	str	r0, [sp, #20]
 800cf04:	9803      	ldr	r0, [sp, #12]
 800cf06:	f005 f9fb 	bl	8012300 <_ZN8touchgfx6muldivElll>
 800cf0a:	2302      	movs	r3, #2
 800cf0c:	fb90 faf3 	sdiv	sl, r0, r3
 800cf10:	9b05      	ldr	r3, [sp, #20]
 800cf12:	9803      	ldr	r0, [sp, #12]
 800cf14:	461a      	mov	r2, r3
 800cf16:	4659      	mov	r1, fp
 800cf18:	f005 f9f2 	bl	8012300 <_ZN8touchgfx6muldivElll>
 800cf1c:	2302      	movs	r3, #2
 800cf1e:	eba7 010a 	sub.w	r1, r7, sl
 800cf22:	fb90 fbf3 	sdiv	fp, r0, r3
 800cf26:	4648      	mov	r0, r9
 800cf28:	eb0b 0208 	add.w	r2, fp, r8
 800cf2c:	f013 fa30 	bl	8020390 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800cf30:	9b02      	ldr	r3, [sp, #8]
 800cf32:	eb03 020b 	add.w	r2, r3, fp
 800cf36:	9b01      	ldr	r3, [sp, #4]
 800cf38:	4648      	mov	r0, r9
 800cf3a:	eba3 010a 	sub.w	r1, r3, sl
 800cf3e:	f013 fa27 	bl	8020390 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800cf42:	e9dd 7801 	ldrd	r7, r8, [sp, #4]
 800cf46:	42a6      	cmp	r6, r4
 800cf48:	db02      	blt.n	800cf50 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x102>
 800cf4a:	b00b      	add	sp, #44	; 0x2c
 800cf4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cf50:	9b00      	ldr	r3, [sp, #0]
 800cf52:	9a04      	ldr	r2, [sp, #16]
 800cf54:	42a2      	cmp	r2, r4
 800cf56:	bf08      	it	eq
 800cf58:	f04f 33ff 	moveq.w	r3, #4294967295
 800cf5c:	e7a8      	b.n	800ceb0 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x62>
	...

0800cf60 <_ZN8touchgfx6CanvasD1Ev>:
 800cf60:	b510      	push	{r4, lr}
 800cf62:	4b04      	ldr	r3, [pc, #16]	; (800cf74 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 800cf64:	4604      	mov	r4, r0
 800cf66:	f840 3b20 	str.w	r3, [r0], #32
 800cf6a:	f001 fd23 	bl	800e9b4 <_ZN8touchgfx7OutlineD1Ev>
 800cf6e:	4620      	mov	r0, r4
 800cf70:	bd10      	pop	{r4, pc}
 800cf72:	bf00      	nop
 800cf74:	08023b74 	.word	0x08023b74

0800cf78 <_ZN8touchgfx6CanvasD0Ev>:
 800cf78:	b510      	push	{r4, lr}
 800cf7a:	4604      	mov	r4, r0
 800cf7c:	f7ff fff0 	bl	800cf60 <_ZN8touchgfx6CanvasD1Ev>
 800cf80:	4620      	mov	r0, r4
 800cf82:	2170      	movs	r1, #112	; 0x70
 800cf84:	f013 fb80 	bl	8020688 <_ZdlPvj>
 800cf88:	4620      	mov	r0, r4
 800cf8a:	bd10      	pop	{r4, pc}

0800cf8c <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE>:
 800cf8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cf90:	6943      	ldr	r3, [r0, #20]
 800cf92:	b0a2      	sub	sp, #136	; 0x88
 800cf94:	4606      	mov	r6, r0
 800cf96:	460f      	mov	r7, r1
 800cf98:	2b00      	cmp	r3, #0
 800cf9a:	d06a      	beq.n	800d072 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xe6>
 800cf9c:	695c      	ldr	r4, [r3, #20]
 800cf9e:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800cfa2:	2b01      	cmp	r3, #1
 800cfa4:	dc04      	bgt.n	800cfb0 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x24>
 800cfa6:	2401      	movs	r4, #1
 800cfa8:	4620      	mov	r0, r4
 800cfaa:	b022      	add	sp, #136	; 0x88
 800cfac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cfb0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800cfb4:	ad22      	add	r5, sp, #136	; 0x88
 800cfb6:	011b      	lsls	r3, r3, #4
 800cfb8:	f845 3d70 	str.w	r3, [r5, #-112]!
 800cfbc:	4628      	mov	r0, r5
 800cfbe:	f7ff fc62 	bl	800c886 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800cfc2:	8839      	ldrh	r1, [r7, #0]
 800cfc4:	88ba      	ldrh	r2, [r7, #4]
 800cfc6:	6823      	ldr	r3, [r4, #0]
 800cfc8:	b280      	uxth	r0, r0
 800cfca:	440a      	add	r2, r1
 800cfcc:	4402      	add	r2, r0
 800cfce:	1a09      	subs	r1, r1, r0
 800cfd0:	f10d 000e 	add.w	r0, sp, #14
 800cfd4:	9000      	str	r0, [sp, #0]
 800cfd6:	f8d3 8124 	ldr.w	r8, [r3, #292]	; 0x124
 800cfda:	b212      	sxth	r2, r2
 800cfdc:	ab03      	add	r3, sp, #12
 800cfde:	b209      	sxth	r1, r1
 800cfe0:	4620      	mov	r0, r4
 800cfe2:	47c0      	blx	r8
 800cfe4:	2800      	cmp	r0, #0
 800cfe6:	d0de      	beq.n	800cfa6 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1a>
 800cfe8:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 800cfec:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 800cff0:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 800cff4:	f8ad 1012 	strh.w	r1, [sp, #18]
 800cff8:	18ca      	adds	r2, r1, r3
 800cffa:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800cffe:	f8ad 0014 	strh.w	r0, [sp, #20]
 800d002:	1a9b      	subs	r3, r3, r2
 800d004:	4639      	mov	r1, r7
 800d006:	2200      	movs	r2, #0
 800d008:	a804      	add	r0, sp, #16
 800d00a:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d00e:	f8ad 2010 	strh.w	r2, [sp, #16]
 800d012:	f7fd fe8b 	bl	800ad2c <_ZN8touchgfx4RectaNERKS0_>
 800d016:	aa04      	add	r2, sp, #16
 800d018:	4631      	mov	r1, r6
 800d01a:	4628      	mov	r0, r5
 800d01c:	f013 f90a 	bl	8020234 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 800d020:	f9b4 7120 	ldrsh.w	r7, [r4, #288]	; 0x120
 800d024:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800d028:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 800d02c:	2f00      	cmp	r7, #0
 800d02e:	dd03      	ble.n	800d038 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xac>
 800d030:	42bb      	cmp	r3, r7
 800d032:	da01      	bge.n	800d038 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xac>
 800d034:	42ba      	cmp	r2, r7
 800d036:	da0f      	bge.n	800d058 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xcc>
 800d038:	9200      	str	r2, [sp, #0]
 800d03a:	4622      	mov	r2, r4
 800d03c:	4629      	mov	r1, r5
 800d03e:	4630      	mov	r0, r6
 800d040:	f7ff ff05 	bl	800ce4e <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 800d044:	f894 102c 	ldrb.w	r1, [r4, #44]	; 0x2c
 800d048:	4628      	mov	r0, r5
 800d04a:	f013 fa1d 	bl	8020488 <_ZN8touchgfx6Canvas6renderEh>
 800d04e:	4604      	mov	r4, r0
 800d050:	4628      	mov	r0, r5
 800d052:	f7ff ff85 	bl	800cf60 <_ZN8touchgfx6CanvasD1Ev>
 800d056:	e7a7      	b.n	800cfa8 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1c>
 800d058:	1e7a      	subs	r2, r7, #1
 800d05a:	b212      	sxth	r2, r2
 800d05c:	9200      	str	r2, [sp, #0]
 800d05e:	4629      	mov	r1, r5
 800d060:	4622      	mov	r2, r4
 800d062:	4630      	mov	r0, r6
 800d064:	f7ff fef3 	bl	800ce4e <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 800d068:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800d06c:	9300      	str	r3, [sp, #0]
 800d06e:	463b      	mov	r3, r7
 800d070:	e7e3      	b.n	800d03a <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xae>
 800d072:	f8b3 311e 	ldrh.w	r3, [r3, #286]	; 0x11e
 800d076:	deff      	udf	#255	; 0xff

0800d078 <_ZN8touchgfx15GraphLabelsBase22invalidateGraphPointAtEs>:
 800d078:	4770      	bx	lr

0800d07a <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
 800d07a:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800d07c:	b118      	cbz	r0, 800d086 <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 800d07e:	6803      	ldr	r3, [r0, #0]
 800d080:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d084:	4718      	bx	r3
 800d086:	4770      	bx	lr

0800d088 <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 800d088:	680b      	ldr	r3, [r1, #0]
 800d08a:	4608      	mov	r0, r1
 800d08c:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 800d090:	4718      	bx	r3

0800d092 <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 800d092:	680b      	ldr	r3, [r1, #0]
 800d094:	4608      	mov	r0, r1
 800d096:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800d09a:	4718      	bx	r3

0800d09c <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 800d09c:	680b      	ldr	r3, [r1, #0]
 800d09e:	4608      	mov	r0, r1
 800d0a0:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 800d0a4:	4718      	bx	r3

0800d0a6 <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 800d0a6:	680b      	ldr	r3, [r1, #0]
 800d0a8:	4608      	mov	r0, r1
 800d0aa:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 800d0ae:	4718      	bx	r3

0800d0b0 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE>:
 800d0b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d0b4:	4a37      	ldr	r2, [pc, #220]	; (800d194 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe4>)
 800d0b6:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800d0b8:	8812      	ldrh	r2, [r2, #0]
 800d0ba:	429a      	cmp	r2, r3
 800d0bc:	b087      	sub	sp, #28
 800d0be:	4604      	mov	r4, r0
 800d0c0:	4689      	mov	r9, r1
 800d0c2:	d937      	bls.n	800d134 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d0c4:	4a34      	ldr	r2, [pc, #208]	; (800d198 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe8>)
 800d0c6:	6812      	ldr	r2, [r2, #0]
 800d0c8:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800d0cc:	4b33      	ldr	r3, [pc, #204]	; (800d19c <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xec>)
 800d0ce:	681b      	ldr	r3, [r3, #0]
 800d0d0:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 800d0d4:	f1b8 0f00 	cmp.w	r8, #0
 800d0d8:	d02c      	beq.n	800d134 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d0da:	6803      	ldr	r3, [r0, #0]
 800d0dc:	6945      	ldr	r5, [r0, #20]
 800d0de:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800d0e0:	2d00      	cmp	r5, #0
 800d0e2:	d052      	beq.n	800d18a <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xda>
 800d0e4:	696f      	ldr	r7, [r5, #20]
 800d0e6:	4798      	blx	r3
 800d0e8:	f897 502c 	ldrb.w	r5, [r7, #44]	; 0x2c
 800d0ec:	fb15 f000 	smulbb	r0, r5, r0
 800d0f0:	b280      	uxth	r0, r0
 800d0f2:	1c45      	adds	r5, r0, #1
 800d0f4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800d0f8:	122d      	asrs	r5, r5, #8
 800d0fa:	d01b      	beq.n	800d134 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d0fc:	6823      	ldr	r3, [r4, #0]
 800d0fe:	4639      	mov	r1, r7
 800d100:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d104:	4620      	mov	r0, r4
 800d106:	4798      	blx	r3
 800d108:	6823      	ldr	r3, [r4, #0]
 800d10a:	4606      	mov	r6, r0
 800d10c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800d110:	4639      	mov	r1, r7
 800d112:	4620      	mov	r0, r4
 800d114:	4798      	blx	r3
 800d116:	b2ed      	uxtb	r5, r5
 800d118:	4683      	mov	fp, r0
 800d11a:	b970      	cbnz	r0, 800d13a <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 800d11c:	b96e      	cbnz	r6, 800d13a <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 800d11e:	e9cd 6501 	strd	r6, r5, [sp, #4]
 800d122:	6823      	ldr	r3, [r4, #0]
 800d124:	9600      	str	r6, [sp, #0]
 800d126:	f8d3 508c 	ldr.w	r5, [r3, #140]	; 0x8c
 800d12a:	4642      	mov	r2, r8
 800d12c:	463b      	mov	r3, r7
 800d12e:	4649      	mov	r1, r9
 800d130:	4620      	mov	r0, r4
 800d132:	47a8      	blx	r5
 800d134:	b007      	add	sp, #28
 800d136:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d13a:	2e00      	cmp	r6, #0
 800d13c:	ddfa      	ble.n	800d134 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d13e:	6823      	ldr	r3, [r4, #0]
 800d140:	4639      	mov	r1, r7
 800d142:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800d146:	4620      	mov	r0, r4
 800d148:	4798      	blx	r3
 800d14a:	6823      	ldr	r3, [r4, #0]
 800d14c:	4682      	mov	sl, r0
 800d14e:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800d152:	4639      	mov	r1, r7
 800d154:	4620      	mov	r0, r4
 800d156:	4798      	blx	r3
 800d158:	4582      	cmp	sl, r0
 800d15a:	bfde      	ittt	le
 800d15c:	4603      	movle	r3, r0
 800d15e:	4650      	movle	r0, sl
 800d160:	469a      	movle	sl, r3
 800d162:	ebaa 0300 	sub.w	r3, sl, r0
 800d166:	fb93 f3f6 	sdiv	r3, r3, r6
 800d16a:	2b64      	cmp	r3, #100	; 0x64
 800d16c:	dce2      	bgt.n	800d134 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d16e:	e9cd b503 	strd	fp, r5, [sp, #12]
 800d172:	e9cd a601 	strd	sl, r6, [sp, #4]
 800d176:	6823      	ldr	r3, [r4, #0]
 800d178:	9000      	str	r0, [sp, #0]
 800d17a:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800d17e:	4642      	mov	r2, r8
 800d180:	463b      	mov	r3, r7
 800d182:	4649      	mov	r1, r9
 800d184:	4620      	mov	r0, r4
 800d186:	47a8      	blx	r5
 800d188:	e7d4      	b.n	800d134 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d18a:	4798      	blx	r3
 800d18c:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800d190:	deff      	udf	#255	; 0xff
 800d192:	bf00      	nop
 800d194:	20015608 	.word	0x20015608
 800d198:	20015604 	.word	0x20015604
 800d19c:	2001560c 	.word	0x2001560c

0800d1a0 <_ZN8touchgfx12GraphLabelsYD1Ev>:
 800d1a0:	4770      	bx	lr

0800d1a2 <_ZN8touchgfx12GraphLabelsXD1Ev>:
 800d1a2:	4770      	bx	lr

0800d1a4 <_ZNK8touchgfx12GraphLabelsX31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 800d1a4:	b538      	push	{r3, r4, r5, lr}
 800d1a6:	680a      	ldr	r2, [r1, #0]
 800d1a8:	e9d0 540c 	ldrd	r5, r4, [r0, #48]	; 0x30
 800d1ac:	f8d2 208c 	ldr.w	r2, [r2, #140]	; 0x8c
 800d1b0:	4608      	mov	r0, r1
 800d1b2:	4790      	blx	r2
 800d1b4:	4629      	mov	r1, r5
 800d1b6:	4602      	mov	r2, r0
 800d1b8:	4620      	mov	r0, r4
 800d1ba:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d1be:	f7ff baa7 	b.w	800c710 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0800d1c2 <_ZNK8touchgfx12GraphLabelsY31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 800d1c2:	b538      	push	{r3, r4, r5, lr}
 800d1c4:	680a      	ldr	r2, [r1, #0]
 800d1c6:	e9d0 540c 	ldrd	r5, r4, [r0, #48]	; 0x30
 800d1ca:	f8d2 2094 	ldr.w	r2, [r2, #148]	; 0x94
 800d1ce:	4608      	mov	r0, r1
 800d1d0:	4790      	blx	r2
 800d1d2:	4629      	mov	r1, r5
 800d1d4:	4602      	mov	r2, r0
 800d1d6:	4620      	mov	r0, r4
 800d1d8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d1dc:	f7ff ba98 	b.w	800c710 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0800d1e0 <_ZN8touchgfx12GraphLabelsYD0Ev>:
 800d1e0:	b510      	push	{r4, lr}
 800d1e2:	214c      	movs	r1, #76	; 0x4c
 800d1e4:	4604      	mov	r4, r0
 800d1e6:	f013 fa4f 	bl	8020688 <_ZdlPvj>
 800d1ea:	4620      	mov	r0, r4
 800d1ec:	bd10      	pop	{r4, pc}

0800d1ee <_ZN8touchgfx12GraphLabelsXD0Ev>:
 800d1ee:	b510      	push	{r4, lr}
 800d1f0:	214c      	movs	r1, #76	; 0x4c
 800d1f2:	4604      	mov	r4, r0
 800d1f4:	f013 fa48 	bl	8020688 <_ZdlPvj>
 800d1f8:	4620      	mov	r0, r4
 800d1fa:	bd10      	pop	{r4, pc}

0800d1fc <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 800d1fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d200:	b08d      	sub	sp, #52	; 0x34
 800d202:	e9dd 9a18 	ldrd	r9, sl, [sp, #96]	; 0x60
 800d206:	9309      	str	r3, [sp, #36]	; 0x24
 800d208:	f89d 3068 	ldrb.w	r3, [sp, #104]	; 0x68
 800d20c:	930a      	str	r3, [sp, #40]	; 0x28
 800d20e:	4606      	mov	r6, r0
 800d210:	e9cd 1207 	strd	r1, r2, [sp, #28]
 800d214:	e9dd 7816 	ldrd	r7, r8, [sp, #88]	; 0x58
 800d218:	f1b9 0f00 	cmp.w	r9, #0
 800d21c:	d117      	bne.n	800d24e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x52>
 800d21e:	2f00      	cmp	r7, #0
 800d220:	dc7c      	bgt.n	800d31c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x120>
 800d222:	f1b8 0f00 	cmp.w	r8, #0
 800d226:	da01      	bge.n	800d22c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 800d228:	2f00      	cmp	r7, #0
 800d22a:	d17a      	bne.n	800d322 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800d22c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d22e:	9318      	str	r3, [sp, #96]	; 0x60
 800d230:	2300      	movs	r3, #0
 800d232:	e9cd 3316 	strd	r3, r3, [sp, #88]	; 0x58
 800d236:	6832      	ldr	r2, [r6, #0]
 800d238:	9907      	ldr	r1, [sp, #28]
 800d23a:	f8d2 408c 	ldr.w	r4, [r2, #140]	; 0x8c
 800d23e:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800d242:	4630      	mov	r0, r6
 800d244:	46a4      	mov	ip, r4
 800d246:	b00d      	add	sp, #52	; 0x34
 800d248:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d24c:	4760      	bx	ip
 800d24e:	fb97 f4f9 	sdiv	r4, r7, r9
 800d252:	1e63      	subs	r3, r4, #1
 800d254:	9305      	str	r3, [sp, #20]
 800d256:	f1ba 0f00 	cmp.w	sl, #0
 800d25a:	d122      	bne.n	800d2a2 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xa6>
 800d25c:	fb98 faf9 	sdiv	sl, r8, r9
 800d260:	fb03 f509 	mul.w	r5, r3, r9
 800d264:	f10a 0a02 	add.w	sl, sl, #2
 800d268:	9b05      	ldr	r3, [sp, #20]
 800d26a:	459a      	cmp	sl, r3
 800d26c:	d059      	beq.n	800d322 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800d26e:	42af      	cmp	r7, r5
 800d270:	dc5a      	bgt.n	800d328 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x12c>
 800d272:	45a8      	cmp	r8, r5
 800d274:	da01      	bge.n	800d27a <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>
 800d276:	42af      	cmp	r7, r5
 800d278:	db0e      	blt.n	800d298 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 800d27a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d27c:	9302      	str	r3, [sp, #8]
 800d27e:	9905      	ldr	r1, [sp, #20]
 800d280:	6b73      	ldr	r3, [r6, #52]	; 0x34
 800d282:	6832      	ldr	r2, [r6, #0]
 800d284:	434b      	muls	r3, r1
 800d286:	e9cd 5300 	strd	r5, r3, [sp]
 800d28a:	9907      	ldr	r1, [sp, #28]
 800d28c:	f8d2 b08c 	ldr.w	fp, [r2, #140]	; 0x8c
 800d290:	4630      	mov	r0, r6
 800d292:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800d296:	47d8      	blx	fp
 800d298:	9b05      	ldr	r3, [sp, #20]
 800d29a:	3301      	adds	r3, #1
 800d29c:	9305      	str	r3, [sp, #20]
 800d29e:	444d      	add	r5, r9
 800d2a0:	e7e2      	b.n	800d268 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x6c>
 800d2a2:	fb97 f3fa 	sdiv	r3, r7, sl
 800d2a6:	3b01      	subs	r3, #1
 800d2a8:	9306      	str	r3, [sp, #24]
 800d2aa:	9a06      	ldr	r2, [sp, #24]
 800d2ac:	fb98 f3fa 	sdiv	r3, r8, sl
 800d2b0:	fb02 fb0a 	mul.w	fp, r2, sl
 800d2b4:	9a05      	ldr	r2, [sp, #20]
 800d2b6:	3302      	adds	r3, #2
 800d2b8:	fb02 f509 	mul.w	r5, r2, r9
 800d2bc:	930b      	str	r3, [sp, #44]	; 0x2c
 800d2be:	45ab      	cmp	fp, r5
 800d2c0:	dd1d      	ble.n	800d2fe <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 800d2c2:	42af      	cmp	r7, r5
 800d2c4:	dc08      	bgt.n	800d2d8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xdc>
 800d2c6:	45a8      	cmp	r8, r5
 800d2c8:	da08      	bge.n	800d2dc <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 800d2ca:	42af      	cmp	r7, r5
 800d2cc:	da06      	bge.n	800d2dc <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 800d2ce:	9b05      	ldr	r3, [sp, #20]
 800d2d0:	3301      	adds	r3, #1
 800d2d2:	9305      	str	r3, [sp, #20]
 800d2d4:	444d      	add	r5, r9
 800d2d6:	e7f2      	b.n	800d2be <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 800d2d8:	45a8      	cmp	r8, r5
 800d2da:	dcf8      	bgt.n	800d2ce <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 800d2dc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d2de:	9302      	str	r3, [sp, #8]
 800d2e0:	9905      	ldr	r1, [sp, #20]
 800d2e2:	6b73      	ldr	r3, [r6, #52]	; 0x34
 800d2e4:	6832      	ldr	r2, [r6, #0]
 800d2e6:	434b      	muls	r3, r1
 800d2e8:	e9cd 5300 	strd	r5, r3, [sp]
 800d2ec:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800d2f0:	9907      	ldr	r1, [sp, #28]
 800d2f2:	461c      	mov	r4, r3
 800d2f4:	4630      	mov	r0, r6
 800d2f6:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800d2fa:	47a0      	blx	r4
 800d2fc:	e7e7      	b.n	800d2ce <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 800d2fe:	45ab      	cmp	fp, r5
 800d300:	db04      	blt.n	800d30c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x110>
 800d302:	9b05      	ldr	r3, [sp, #20]
 800d304:	3301      	adds	r3, #1
 800d306:	9305      	str	r3, [sp, #20]
 800d308:	444d      	add	r5, r9
 800d30a:	e7f8      	b.n	800d2fe <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 800d30c:	9b06      	ldr	r3, [sp, #24]
 800d30e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d310:	3301      	adds	r3, #1
 800d312:	4293      	cmp	r3, r2
 800d314:	9306      	str	r3, [sp, #24]
 800d316:	d004      	beq.n	800d322 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800d318:	44d3      	add	fp, sl
 800d31a:	e7d0      	b.n	800d2be <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 800d31c:	f1b8 0f00 	cmp.w	r8, #0
 800d320:	dd84      	ble.n	800d22c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 800d322:	b00d      	add	sp, #52	; 0x34
 800d324:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d328:	45a8      	cmp	r8, r5
 800d32a:	dcb5      	bgt.n	800d298 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 800d32c:	e7a5      	b.n	800d27a <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>

0800d32e <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 800d32e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d332:	f9b3 4120 	ldrsh.w	r4, [r3, #288]	; 0x120
 800d336:	b089      	sub	sp, #36	; 0x24
 800d338:	2c00      	cmp	r4, #0
 800d33a:	9007      	str	r0, [sp, #28]
 800d33c:	468a      	mov	sl, r1
 800d33e:	4693      	mov	fp, r2
 800d340:	461d      	mov	r5, r3
 800d342:	e9dd c612 	ldrd	ip, r6, [sp, #72]	; 0x48
 800d346:	e9dd 7814 	ldrd	r7, r8, [sp, #80]	; 0x50
 800d34a:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800d34e:	dd03      	ble.n	800d358 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 800d350:	4564      	cmp	r4, ip
 800d352:	dd01      	ble.n	800d358 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 800d354:	42b4      	cmp	r4, r6
 800d356:	dd0e      	ble.n	800d376 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x48>
 800d358:	e9cd 8915 	strd	r8, r9, [sp, #84]	; 0x54
 800d35c:	e9cd 6713 	strd	r6, r7, [sp, #76]	; 0x4c
 800d360:	f8cd c048 	str.w	ip, [sp, #72]	; 0x48
 800d364:	9807      	ldr	r0, [sp, #28]
 800d366:	462b      	mov	r3, r5
 800d368:	465a      	mov	r2, fp
 800d36a:	4651      	mov	r1, sl
 800d36c:	b009      	add	sp, #36	; 0x24
 800d36e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d372:	f7ff bf43 	b.w	800d1fc <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 800d376:	f104 3eff 	add.w	lr, r4, #4294967295
 800d37a:	e9cd 8903 	strd	r8, r9, [sp, #12]
 800d37e:	9702      	str	r7, [sp, #8]
 800d380:	e9cd ce00 	strd	ip, lr, [sp]
 800d384:	f7ff ff3a 	bl	800d1fc <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 800d388:	e9cd 8915 	strd	r8, r9, [sp, #84]	; 0x54
 800d38c:	e9cd 6713 	strd	r6, r7, [sp, #76]	; 0x4c
 800d390:	9412      	str	r4, [sp, #72]	; 0x48
 800d392:	e7e7      	b.n	800d364 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x36>

0800d394 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>:
 800d394:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d398:	f1b3 0900 	subs.w	r9, r3, #0
 800d39c:	460d      	mov	r5, r1
 800d39e:	4690      	mov	r8, r2
 800d3a0:	9f08      	ldr	r7, [sp, #32]
 800d3a2:	f8bd a024 	ldrh.w	sl, [sp, #36]	; 0x24
 800d3a6:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 800d3a8:	da18      	bge.n	800d3dc <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 800d3aa:	2a01      	cmp	r2, #1
 800d3ac:	dd16      	ble.n	800d3dc <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 800d3ae:	232d      	movs	r3, #45	; 0x2d
 800d3b0:	800b      	strh	r3, [r1, #0]
 800d3b2:	f1c9 0900 	rsb	r9, r9, #0
 800d3b6:	2001      	movs	r0, #1
 800d3b8:	2f00      	cmp	r7, #0
 800d3ba:	d111      	bne.n	800d3e0 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x4c>
 800d3bc:	eba8 0100 	sub.w	r1, r8, r0
 800d3c0:	2302      	movs	r3, #2
 800d3c2:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800d3c6:	fb96 f3f3 	sdiv	r3, r6, r3
 800d3ca:	4a24      	ldr	r2, [pc, #144]	; (800d45c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 800d3cc:	444b      	add	r3, r9
 800d3ce:	b289      	uxth	r1, r1
 800d3d0:	fb93 f3f6 	sdiv	r3, r3, r6
 800d3d4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d3d8:	f006 bdf8 	b.w	8013fcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800d3dc:	2000      	movs	r0, #0
 800d3de:	e7eb      	b.n	800d3b8 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x24>
 800d3e0:	dd39      	ble.n	800d456 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 800d3e2:	fb99 f4f6 	sdiv	r4, r9, r6
 800d3e6:	eba8 0100 	sub.w	r1, r8, r0
 800d3ea:	4623      	mov	r3, r4
 800d3ec:	4a1b      	ldr	r2, [pc, #108]	; (800d45c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 800d3ee:	b289      	uxth	r1, r1
 800d3f0:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800d3f4:	f006 fdea 	bl	8013fcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800d3f8:	4628      	mov	r0, r5
 800d3fa:	f006 fa73 	bl	80138e4 <_ZN8touchgfx7Unicode6strlenEPKt>
 800d3fe:	f108 38ff 	add.w	r8, r8, #4294967295
 800d402:	4580      	cmp	r8, r0
 800d404:	dd27      	ble.n	800d456 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 800d406:	f825 a010 	strh.w	sl, [r5, r0, lsl #1]
 800d40a:	fb06 9314 	mls	r3, r6, r4, r9
 800d40e:	3001      	adds	r0, #1
 800d410:	2200      	movs	r2, #0
 800d412:	f04f 090a 	mov.w	r9, #10
 800d416:	f107 3aff 	add.w	sl, r7, #4294967295
 800d41a:	f04f 0e02 	mov.w	lr, #2
 800d41e:	fb96 fefe 	sdiv	lr, r6, lr
 800d422:	4580      	cmp	r8, r0
 800d424:	4684      	mov	ip, r0
 800d426:	dd13      	ble.n	800d450 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xbc>
 800d428:	fb09 f303 	mul.w	r3, r9, r3
 800d42c:	4592      	cmp	sl, r2
 800d42e:	f102 0201 	add.w	r2, r2, #1
 800d432:	bf08      	it	eq
 800d434:	4473      	addeq	r3, lr
 800d436:	f100 0c01 	add.w	ip, r0, #1
 800d43a:	fb93 f4f6 	sdiv	r4, r3, r6
 800d43e:	4297      	cmp	r7, r2
 800d440:	f104 0130 	add.w	r1, r4, #48	; 0x30
 800d444:	f825 1010 	strh.w	r1, [r5, r0, lsl #1]
 800d448:	fb06 3314 	mls	r3, r6, r4, r3
 800d44c:	4660      	mov	r0, ip
 800d44e:	d1e8      	bne.n	800d422 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x8e>
 800d450:	2300      	movs	r3, #0
 800d452:	f825 301c 	strh.w	r3, [r5, ip, lsl #1]
 800d456:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d45a:	bf00      	nop
 800d45c:	08023500 	.word	0x08023500

0800d460 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs>:
 800d460:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d464:	4a6b      	ldr	r2, [pc, #428]	; (800d614 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1b4>)
 800d466:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800d468:	8812      	ldrh	r2, [r2, #0]
 800d46a:	429a      	cmp	r2, r3
 800d46c:	b092      	sub	sp, #72	; 0x48
 800d46e:	4604      	mov	r4, r0
 800d470:	460e      	mov	r6, r1
 800d472:	d93a      	bls.n	800d4ea <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d474:	4a68      	ldr	r2, [pc, #416]	; (800d618 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1b8>)
 800d476:	6812      	ldr	r2, [r2, #0]
 800d478:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800d47c:	4b67      	ldr	r3, [pc, #412]	; (800d61c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1bc>)
 800d47e:	681b      	ldr	r3, [r3, #0]
 800d480:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 800d484:	f1b8 0f00 	cmp.w	r8, #0
 800d488:	d02f      	beq.n	800d4ea <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d48a:	6803      	ldr	r3, [r0, #0]
 800d48c:	6945      	ldr	r5, [r0, #20]
 800d48e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800d490:	2d00      	cmp	r5, #0
 800d492:	f000 80ba 	beq.w	800d60a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1aa>
 800d496:	696f      	ldr	r7, [r5, #20]
 800d498:	4798      	blx	r3
 800d49a:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 800d49e:	fb13 f000 	smulbb	r0, r3, r0
 800d4a2:	b280      	uxth	r0, r0
 800d4a4:	1c43      	adds	r3, r0, #1
 800d4a6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 800d4aa:	0a03      	lsrs	r3, r0, #8
 800d4ac:	d01d      	beq.n	800d4ea <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d4ae:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800d4b0:	6823      	ldr	r3, [r4, #0]
 800d4b2:	434e      	muls	r6, r1
 800d4b4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d4b8:	4639      	mov	r1, r7
 800d4ba:	4620      	mov	r0, r4
 800d4bc:	4798      	blx	r3
 800d4be:	6823      	ldr	r3, [r4, #0]
 800d4c0:	4605      	mov	r5, r0
 800d4c2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800d4c6:	4639      	mov	r1, r7
 800d4c8:	4620      	mov	r0, r4
 800d4ca:	4798      	blx	r3
 800d4cc:	2d00      	cmp	r5, #0
 800d4ce:	dd0f      	ble.n	800d4f0 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x90>
 800d4d0:	fb96 f3f5 	sdiv	r3, r6, r5
 800d4d4:	436b      	muls	r3, r5
 800d4d6:	1b9a      	subs	r2, r3, r6
 800d4d8:	4253      	negs	r3, r2
 800d4da:	4153      	adcs	r3, r2
 800d4dc:	2800      	cmp	r0, #0
 800d4de:	dd09      	ble.n	800d4f4 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x94>
 800d4e0:	fb96 f2f0 	sdiv	r2, r6, r0
 800d4e4:	4350      	muls	r0, r2
 800d4e6:	42b0      	cmp	r0, r6
 800d4e8:	d10e      	bne.n	800d508 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa8>
 800d4ea:	b012      	add	sp, #72	; 0x48
 800d4ec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d4f0:	2300      	movs	r3, #0
 800d4f2:	e7f3      	b.n	800d4dc <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x7c>
 800d4f4:	d108      	bne.n	800d508 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa8>
 800d4f6:	2d00      	cmp	r5, #0
 800d4f8:	f040 8084 	bne.w	800d604 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1a4>
 800d4fc:	2e00      	cmp	r6, #0
 800d4fe:	d055      	beq.n	800d5ac <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x14c>
 800d500:	2b00      	cmp	r3, #0
 800d502:	d0f2      	beq.n	800d4ea <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d504:	462a      	mov	r2, r5
 800d506:	e007      	b.n	800d518 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb8>
 800d508:	2b00      	cmp	r3, #0
 800d50a:	d0ee      	beq.n	800d4ea <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d50c:	2d00      	cmp	r5, #0
 800d50e:	d0f9      	beq.n	800d504 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa4>
 800d510:	fb96 f2f5 	sdiv	r2, r6, r5
 800d514:	6b65      	ldr	r5, [r4, #52]	; 0x34
 800d516:	436a      	muls	r2, r5
 800d518:	683b      	ldr	r3, [r7, #0]
 800d51a:	f8df 9104 	ldr.w	r9, [pc, #260]	; 800d620 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1c0>
 800d51e:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 800d522:	4631      	mov	r1, r6
 800d524:	4638      	mov	r0, r7
 800d526:	4798      	blx	r3
 800d528:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800d52a:	9302      	str	r3, [sp, #8]
 800d52c:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 800d530:	9301      	str	r3, [sp, #4]
 800d532:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800d536:	9300      	str	r3, [sp, #0]
 800d538:	a908      	add	r1, sp, #32
 800d53a:	4603      	mov	r3, r0
 800d53c:	2214      	movs	r2, #20
 800d53e:	4620      	mov	r0, r4
 800d540:	f7ff ff28 	bl	800d394 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800d544:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800d548:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d54a:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d54e:	f8d8 3000 	ldr.w	r3, [r8]
 800d552:	d12d      	bne.n	800d5b0 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x150>
 800d554:	f8d9 0000 	ldr.w	r0, [r9]
 800d558:	699d      	ldr	r5, [r3, #24]
 800d55a:	f7f7 fc25 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800d55e:	aa08      	add	r2, sp, #32
 800d560:	4601      	mov	r1, r0
 800d562:	4640      	mov	r0, r8
 800d564:	47a8      	blx	r5
 800d566:	4605      	mov	r5, r0
 800d568:	683b      	ldr	r3, [r7, #0]
 800d56a:	f8b7 806c 	ldrh.w	r8, [r7, #108]	; 0x6c
 800d56e:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800d572:	4631      	mov	r1, r6
 800d574:	4638      	mov	r0, r7
 800d576:	4798      	blx	r3
 800d578:	ab12      	add	r3, sp, #72	; 0x48
 800d57a:	f843 0d34 	str.w	r0, [r3, #-52]!
 800d57e:	4618      	mov	r0, r3
 800d580:	f7fe fea8 	bl	800c2d4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d584:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800d588:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d58c:	4440      	add	r0, r8
 800d58e:	6823      	ldr	r3, [r4, #0]
 800d590:	f8ad 501c 	strh.w	r5, [sp, #28]
 800d594:	eba0 0055 	sub.w	r0, r0, r5, lsr #1
 800d598:	2200      	movs	r2, #0
 800d59a:	f8ad 0018 	strh.w	r0, [sp, #24]
 800d59e:	f8ad 201a 	strh.w	r2, [sp, #26]
 800d5a2:	691b      	ldr	r3, [r3, #16]
 800d5a4:	a906      	add	r1, sp, #24
 800d5a6:	4620      	mov	r0, r4
 800d5a8:	4798      	blx	r3
 800d5aa:	e79e      	b.n	800d4ea <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d5ac:	4632      	mov	r2, r6
 800d5ae:	e7b3      	b.n	800d518 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb8>
 800d5b0:	f8d9 0000 	ldr.w	r0, [r9]
 800d5b4:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800d5b6:	f7f7 fbf7 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800d5ba:	aa08      	add	r2, sp, #32
 800d5bc:	4601      	mov	r1, r0
 800d5be:	4640      	mov	r0, r8
 800d5c0:	47a8      	blx	r5
 800d5c2:	f8d8 3000 	ldr.w	r3, [r8]
 800d5c6:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d5c8:	f8d3 a040 	ldr.w	sl, [r3, #64]	; 0x40
 800d5cc:	4605      	mov	r5, r0
 800d5ce:	f8d9 0000 	ldr.w	r0, [r9]
 800d5d2:	f7f7 fbe9 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800d5d6:	aa08      	add	r2, sp, #32
 800d5d8:	4601      	mov	r1, r0
 800d5da:	4640      	mov	r0, r8
 800d5dc:	47d0      	blx	sl
 800d5de:	f8d8 3000 	ldr.w	r3, [r8]
 800d5e2:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d5e4:	f8d3 a024 	ldr.w	sl, [r3, #36]	; 0x24
 800d5e8:	fb15 f500 	smulbb	r5, r5, r0
 800d5ec:	f8d9 0000 	ldr.w	r0, [r9]
 800d5f0:	f7f7 fbda 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800d5f4:	aa08      	add	r2, sp, #32
 800d5f6:	4601      	mov	r1, r0
 800d5f8:	4640      	mov	r0, r8
 800d5fa:	47d0      	blx	sl
 800d5fc:	b2ad      	uxth	r5, r5
 800d5fe:	4405      	add	r5, r0
 800d600:	b2ad      	uxth	r5, r5
 800d602:	e7b1      	b.n	800d568 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x108>
 800d604:	2b00      	cmp	r3, #0
 800d606:	d183      	bne.n	800d510 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb0>
 800d608:	e76f      	b.n	800d4ea <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d60a:	4798      	blx	r3
 800d60c:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800d610:	deff      	udf	#255	; 0xff
 800d612:	bf00      	nop
 800d614:	20015608 	.word	0x20015608
 800d618:	20015604 	.word	0x20015604
 800d61c:	2001560c 	.word	0x2001560c
 800d620:	20015610 	.word	0x20015610

0800d624 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 800d624:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d628:	461d      	mov	r5, r3
 800d62a:	b099      	sub	sp, #100	; 0x64
 800d62c:	681b      	ldr	r3, [r3, #0]
 800d62e:	4604      	mov	r4, r0
 800d630:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800d634:	4689      	mov	r9, r1
 800d636:	4628      	mov	r0, r5
 800d638:	9922      	ldr	r1, [sp, #136]	; 0x88
 800d63a:	4690      	mov	r8, r2
 800d63c:	4798      	blx	r3
 800d63e:	af18      	add	r7, sp, #96	; 0x60
 800d640:	f847 0d28 	str.w	r0, [r7, #-40]!
 800d644:	4638      	mov	r0, r7
 800d646:	f7fe fe45 	bl	800c2d4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d64a:	f8b5 3116 	ldrh.w	r3, [r5, #278]	; 0x116
 800d64e:	1ac0      	subs	r0, r0, r3
 800d650:	b200      	sxth	r0, r0
 800d652:	2800      	cmp	r0, #0
 800d654:	f2c0 80b0 	blt.w	800d7b8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800d658:	f8b5 2118 	ldrh.w	r2, [r5, #280]	; 0x118
 800d65c:	441a      	add	r2, r3
 800d65e:	f8b5 3040 	ldrh.w	r3, [r5, #64]	; 0x40
 800d662:	1a9b      	subs	r3, r3, r2
 800d664:	b21b      	sxth	r3, r3
 800d666:	4298      	cmp	r0, r3
 800d668:	f280 80a6 	bge.w	800d7b8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800d66c:	682b      	ldr	r3, [r5, #0]
 800d66e:	e9dd 1222 	ldrd	r1, r2, [sp, #136]	; 0x88
 800d672:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 800d676:	4628      	mov	r0, r5
 800d678:	4798      	blx	r3
 800d67a:	682b      	ldr	r3, [r5, #0]
 800d67c:	f8b4 a042 	ldrh.w	sl, [r4, #66]	; 0x42
 800d680:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800d684:	f8b4 b044 	ldrh.w	fp, [r4, #68]	; 0x44
 800d688:	4606      	mov	r6, r0
 800d68a:	4628      	mov	r0, r5
 800d68c:	4798      	blx	r3
 800d68e:	f8cd a000 	str.w	sl, [sp]
 800d692:	e9cd b001 	strd	fp, r0, [sp, #4]
 800d696:	4633      	mov	r3, r6
 800d698:	4639      	mov	r1, r7
 800d69a:	2214      	movs	r2, #20
 800d69c:	4620      	mov	r0, r4
 800d69e:	f7ff fe79 	bl	800d394 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800d6a2:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800d6a6:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d6a8:	f8df a16c 	ldr.w	sl, [pc, #364]	; 800d818 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f4>
 800d6ac:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d6b0:	f8d8 3000 	ldr.w	r3, [r8]
 800d6b4:	f040 8083 	bne.w	800d7be <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x19a>
 800d6b8:	f8da 0000 	ldr.w	r0, [sl]
 800d6bc:	699e      	ldr	r6, [r3, #24]
 800d6be:	f7f7 fb73 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800d6c2:	463a      	mov	r2, r7
 800d6c4:	4601      	mov	r1, r0
 800d6c6:	4640      	mov	r0, r8
 800d6c8:	47b0      	blx	r6
 800d6ca:	4606      	mov	r6, r0
 800d6cc:	682b      	ldr	r3, [r5, #0]
 800d6ce:	9922      	ldr	r1, [sp, #136]	; 0x88
 800d6d0:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800d6d4:	f8b5 a06c 	ldrh.w	sl, [r5, #108]	; 0x6c
 800d6d8:	4628      	mov	r0, r5
 800d6da:	4798      	blx	r3
 800d6dc:	f10d 0b60 	add.w	fp, sp, #96	; 0x60
 800d6e0:	ad05      	add	r5, sp, #20
 800d6e2:	f84b 0d3c 	str.w	r0, [fp, #-60]!
 800d6e6:	4658      	mov	r0, fp
 800d6e8:	f7fe fdf4 	bl	800c2d4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d6ec:	4450      	add	r0, sl
 800d6ee:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800d6f2:	f8ad 6018 	strh.w	r6, [sp, #24]
 800d6f6:	eba0 0056 	sub.w	r0, r0, r6, lsr #1
 800d6fa:	f04f 0a00 	mov.w	sl, #0
 800d6fe:	f8ad 301a 	strh.w	r3, [sp, #26]
 800d702:	f8ad 0014 	strh.w	r0, [sp, #20]
 800d706:	f8ad a016 	strh.w	sl, [sp, #22]
 800d70a:	e895 0003 	ldmia.w	r5, {r0, r1}
 800d70e:	ae07      	add	r6, sp, #28
 800d710:	e886 0003 	stmia.w	r6, {r0, r1}
 800d714:	4649      	mov	r1, r9
 800d716:	4630      	mov	r0, r6
 800d718:	f7fd fb08 	bl	800ad2c <_ZN8touchgfx4RectaNERKS0_>
 800d71c:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800d720:	4553      	cmp	r3, sl
 800d722:	dd49      	ble.n	800d7b8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800d724:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800d728:	4553      	cmp	r3, sl
 800d72a:	dd45      	ble.n	800d7b8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800d72c:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800d730:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800d734:	1a9b      	subs	r3, r3, r2
 800d736:	f8ad 301c 	strh.w	r3, [sp, #28]
 800d73a:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800d73e:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 800d742:	1a9b      	subs	r3, r3, r2
 800d744:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d748:	6823      	ldr	r3, [r4, #0]
 800d74a:	4620      	mov	r0, r4
 800d74c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d74e:	4629      	mov	r1, r5
 800d750:	4798      	blx	r3
 800d752:	4b30      	ldr	r3, [pc, #192]	; (800d814 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f0>)
 800d754:	f8b4 903c 	ldrh.w	r9, [r4, #60]	; 0x3c
 800d758:	681b      	ldr	r3, [r3, #0]
 800d75a:	f894 1040 	ldrb.w	r1, [r4, #64]	; 0x40
 800d75e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d760:	eb03 0349 	add.w	r3, r3, r9, lsl #1
 800d764:	785b      	ldrb	r3, [r3, #1]
 800d766:	920b      	str	r2, [sp, #44]	; 0x2c
 800d768:	f3c3 0001 	ubfx	r0, r3, #0, #2
 800d76c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800d770:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800d774:	f89d 3090 	ldrb.w	r3, [sp, #144]	; 0x90
 800d778:	f88d 102a 	strb.w	r1, [sp, #42]	; 0x2a
 800d77c:	f88d 3032 	strb.w	r3, [sp, #50]	; 0x32
 800d780:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 800d784:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800d788:	f8ad a030 	strh.w	sl, [sp, #48]	; 0x30
 800d78c:	f88d a033 	strb.w	sl, [sp, #51]	; 0x33
 800d790:	f88d a034 	strb.w	sl, [sp, #52]	; 0x34
 800d794:	f7f4 ffa0 	bl	80026d8 <_ZN8touchgfx3HAL3lcdEv>
 800d798:	4b1f      	ldr	r3, [pc, #124]	; (800d818 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f4>)
 800d79a:	4604      	mov	r4, r0
 800d79c:	4649      	mov	r1, r9
 800d79e:	6818      	ldr	r0, [r3, #0]
 800d7a0:	f7f7 fb02 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800d7a4:	e9cd 7a02 	strd	r7, sl, [sp, #8]
 800d7a8:	e9cd b000 	strd	fp, r0, [sp]
 800d7ac:	4633      	mov	r3, r6
 800d7ae:	e895 0006 	ldmia.w	r5, {r1, r2}
 800d7b2:	4620      	mov	r0, r4
 800d7b4:	f7f7 faaa 	bl	8004d0c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800d7b8:	b019      	add	sp, #100	; 0x64
 800d7ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d7be:	f8da 0000 	ldr.w	r0, [sl]
 800d7c2:	6a9e      	ldr	r6, [r3, #40]	; 0x28
 800d7c4:	f7f7 faf0 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800d7c8:	463a      	mov	r2, r7
 800d7ca:	4601      	mov	r1, r0
 800d7cc:	4640      	mov	r0, r8
 800d7ce:	47b0      	blx	r6
 800d7d0:	f8d8 3000 	ldr.w	r3, [r8]
 800d7d4:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d7d6:	f8d3 b040 	ldr.w	fp, [r3, #64]	; 0x40
 800d7da:	4606      	mov	r6, r0
 800d7dc:	f8da 0000 	ldr.w	r0, [sl]
 800d7e0:	f7f7 fae2 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800d7e4:	463a      	mov	r2, r7
 800d7e6:	4601      	mov	r1, r0
 800d7e8:	4640      	mov	r0, r8
 800d7ea:	47d8      	blx	fp
 800d7ec:	f8d8 3000 	ldr.w	r3, [r8]
 800d7f0:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d7f2:	f8d3 b024 	ldr.w	fp, [r3, #36]	; 0x24
 800d7f6:	fb16 f600 	smulbb	r6, r6, r0
 800d7fa:	f8da 0000 	ldr.w	r0, [sl]
 800d7fe:	f7f7 fad3 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800d802:	463a      	mov	r2, r7
 800d804:	4601      	mov	r1, r0
 800d806:	4640      	mov	r0, r8
 800d808:	47d8      	blx	fp
 800d80a:	b2b6      	uxth	r6, r6
 800d80c:	4406      	add	r6, r0
 800d80e:	b2b6      	uxth	r6, r6
 800d810:	e75c      	b.n	800d6cc <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa8>
 800d812:	bf00      	nop
 800d814:	20015604 	.word	0x20015604
 800d818:	20015610 	.word	0x20015610

0800d81c <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 800d81c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d820:	4698      	mov	r8, r3
 800d822:	b099      	sub	sp, #100	; 0x64
 800d824:	681b      	ldr	r3, [r3, #0]
 800d826:	4604      	mov	r4, r0
 800d828:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 800d82c:	4689      	mov	r9, r1
 800d82e:	4640      	mov	r0, r8
 800d830:	9922      	ldr	r1, [sp, #136]	; 0x88
 800d832:	4617      	mov	r7, r2
 800d834:	4798      	blx	r3
 800d836:	ae18      	add	r6, sp, #96	; 0x60
 800d838:	f846 0d28 	str.w	r0, [r6, #-40]!
 800d83c:	4630      	mov	r0, r6
 800d83e:	f7fe fd49 	bl	800c2d4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d842:	f8b8 3114 	ldrh.w	r3, [r8, #276]	; 0x114
 800d846:	1ac0      	subs	r0, r0, r3
 800d848:	b200      	sxth	r0, r0
 800d84a:	2800      	cmp	r0, #0
 800d84c:	f2c0 80c0 	blt.w	800d9d0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800d850:	f8b8 211a 	ldrh.w	r2, [r8, #282]	; 0x11a
 800d854:	441a      	add	r2, r3
 800d856:	f8b8 3042 	ldrh.w	r3, [r8, #66]	; 0x42
 800d85a:	1a9b      	subs	r3, r3, r2
 800d85c:	b21b      	sxth	r3, r3
 800d85e:	4298      	cmp	r0, r3
 800d860:	f280 80b6 	bge.w	800d9d0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800d864:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800d866:	9302      	str	r3, [sp, #8]
 800d868:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 800d86c:	9301      	str	r3, [sp, #4]
 800d86e:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800d872:	9300      	str	r3, [sp, #0]
 800d874:	4631      	mov	r1, r6
 800d876:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800d878:	f8df a174 	ldr.w	sl, [pc, #372]	; 800d9f0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d4>
 800d87c:	2214      	movs	r2, #20
 800d87e:	4620      	mov	r0, r4
 800d880:	f7ff fd88 	bl	800d394 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800d884:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800d888:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d88a:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d88e:	683b      	ldr	r3, [r7, #0]
 800d890:	f040 80a1 	bne.w	800d9d6 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1ba>
 800d894:	f8da 0000 	ldr.w	r0, [sl]
 800d898:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800d89a:	f7f7 fa85 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800d89e:	4632      	mov	r2, r6
 800d8a0:	4601      	mov	r1, r0
 800d8a2:	4638      	mov	r0, r7
 800d8a4:	47a8      	blx	r5
 800d8a6:	683b      	ldr	r3, [r7, #0]
 800d8a8:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d8aa:	f8d3 b040 	ldr.w	fp, [r3, #64]	; 0x40
 800d8ae:	4605      	mov	r5, r0
 800d8b0:	f8da 0000 	ldr.w	r0, [sl]
 800d8b4:	f7f7 fa78 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800d8b8:	4632      	mov	r2, r6
 800d8ba:	4601      	mov	r1, r0
 800d8bc:	4638      	mov	r0, r7
 800d8be:	47d8      	blx	fp
 800d8c0:	683b      	ldr	r3, [r7, #0]
 800d8c2:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d8c4:	f8d3 b024 	ldr.w	fp, [r3, #36]	; 0x24
 800d8c8:	fb15 f500 	smulbb	r5, r5, r0
 800d8cc:	f8da 0000 	ldr.w	r0, [sl]
 800d8d0:	f7f7 fa6a 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800d8d4:	4632      	mov	r2, r6
 800d8d6:	4601      	mov	r1, r0
 800d8d8:	4638      	mov	r0, r7
 800d8da:	47d8      	blx	fp
 800d8dc:	b2ad      	uxth	r5, r5
 800d8de:	4405      	add	r5, r0
 800d8e0:	b2ad      	uxth	r5, r5
 800d8e2:	f8d8 3000 	ldr.w	r3, [r8]
 800d8e6:	9922      	ldr	r1, [sp, #136]	; 0x88
 800d8e8:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 800d8ec:	f8b8 a0c6 	ldrh.w	sl, [r8, #198]	; 0xc6
 800d8f0:	4640      	mov	r0, r8
 800d8f2:	4798      	blx	r3
 800d8f4:	f10d 0b60 	add.w	fp, sp, #96	; 0x60
 800d8f8:	f04f 0800 	mov.w	r8, #0
 800d8fc:	f84b 0d3c 	str.w	r0, [fp, #-60]!
 800d900:	4658      	mov	r0, fp
 800d902:	f7fe fce7 	bl	800c2d4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d906:	4450      	add	r0, sl
 800d908:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800d90c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d910:	eba0 0055 	sub.w	r0, r0, r5, lsr #1
 800d914:	f8ad 501a 	strh.w	r5, [sp, #26]
 800d918:	f8ad 8014 	strh.w	r8, [sp, #20]
 800d91c:	f8ad 0016 	strh.w	r0, [sp, #22]
 800d920:	ad05      	add	r5, sp, #20
 800d922:	e895 0003 	ldmia.w	r5, {r0, r1}
 800d926:	f10d 0a1c 	add.w	sl, sp, #28
 800d92a:	e88a 0003 	stmia.w	sl, {r0, r1}
 800d92e:	4649      	mov	r1, r9
 800d930:	4650      	mov	r0, sl
 800d932:	f7fd f9fb 	bl	800ad2c <_ZN8touchgfx4RectaNERKS0_>
 800d936:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800d93a:	4543      	cmp	r3, r8
 800d93c:	dd48      	ble.n	800d9d0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800d93e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800d942:	4543      	cmp	r3, r8
 800d944:	dd44      	ble.n	800d9d0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800d946:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800d94a:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800d94e:	1a9b      	subs	r3, r3, r2
 800d950:	f8ad 301c 	strh.w	r3, [sp, #28]
 800d954:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800d958:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 800d95c:	1a9b      	subs	r3, r3, r2
 800d95e:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d962:	6823      	ldr	r3, [r4, #0]
 800d964:	4620      	mov	r0, r4
 800d966:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d968:	4629      	mov	r1, r5
 800d96a:	4798      	blx	r3
 800d96c:	4b1f      	ldr	r3, [pc, #124]	; (800d9ec <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d0>)
 800d96e:	f8b4 903c 	ldrh.w	r9, [r4, #60]	; 0x3c
 800d972:	681b      	ldr	r3, [r3, #0]
 800d974:	f894 1040 	ldrb.w	r1, [r4, #64]	; 0x40
 800d978:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d97a:	eb03 0349 	add.w	r3, r3, r9, lsl #1
 800d97e:	785b      	ldrb	r3, [r3, #1]
 800d980:	920b      	str	r2, [sp, #44]	; 0x2c
 800d982:	f3c3 0001 	ubfx	r0, r3, #0, #2
 800d986:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800d98a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800d98e:	f89d 3090 	ldrb.w	r3, [sp, #144]	; 0x90
 800d992:	f88d 102a 	strb.w	r1, [sp, #42]	; 0x2a
 800d996:	f88d 3032 	strb.w	r3, [sp, #50]	; 0x32
 800d99a:	9709      	str	r7, [sp, #36]	; 0x24
 800d99c:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800d9a0:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 800d9a4:	f88d 8033 	strb.w	r8, [sp, #51]	; 0x33
 800d9a8:	f88d 8034 	strb.w	r8, [sp, #52]	; 0x34
 800d9ac:	f7f4 fe94 	bl	80026d8 <_ZN8touchgfx3HAL3lcdEv>
 800d9b0:	4b0f      	ldr	r3, [pc, #60]	; (800d9f0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d4>)
 800d9b2:	4604      	mov	r4, r0
 800d9b4:	4649      	mov	r1, r9
 800d9b6:	6818      	ldr	r0, [r3, #0]
 800d9b8:	f7f7 f9f6 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800d9bc:	e9cd 6802 	strd	r6, r8, [sp, #8]
 800d9c0:	e9cd b000 	strd	fp, r0, [sp]
 800d9c4:	4653      	mov	r3, sl
 800d9c6:	e895 0006 	ldmia.w	r5, {r1, r2}
 800d9ca:	4620      	mov	r0, r4
 800d9cc:	f7f7 f99e 	bl	8004d0c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800d9d0:	b019      	add	sp, #100	; 0x64
 800d9d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d9d6:	f8da 0000 	ldr.w	r0, [sl]
 800d9da:	699d      	ldr	r5, [r3, #24]
 800d9dc:	f7f7 f9e4 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800d9e0:	4632      	mov	r2, r6
 800d9e2:	4601      	mov	r1, r0
 800d9e4:	4638      	mov	r0, r7
 800d9e6:	47a8      	blx	r5
 800d9e8:	4605      	mov	r5, r0
 800d9ea:	e77a      	b.n	800d8e2 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xc6>
 800d9ec:	20015604 	.word	0x20015604
 800d9f0:	20015610 	.word	0x20015610

0800d9f4 <_ZN8touchgfx15GraphScrollData5clearEv>:
 800d9f4:	b510      	push	{r4, lr}
 800d9f6:	4604      	mov	r4, r0
 800d9f8:	f7fe fb05 	bl	800c006 <_ZN8touchgfx17AbstractDataGraph5clearEv>
 800d9fc:	2300      	movs	r3, #0
 800d9fe:	f8a4 314c 	strh.w	r3, [r4, #332]	; 0x14c
 800da02:	bd10      	pop	{r4, pc}

0800da04 <_ZN8touchgfx15GraphScrollData14beforeAddValueEv>:
 800da04:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
 800da08:	f9b0 311c 	ldrsh.w	r3, [r0, #284]	; 0x11c
 800da0c:	429a      	cmp	r2, r3
 800da0e:	d101      	bne.n	800da14 <_ZN8touchgfx15GraphScrollData14beforeAddValueEv+0x10>
 800da10:	f7fe bd38 	b.w	800c484 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 800da14:	4770      	bx	lr

0800da16 <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs>:
 800da16:	b538      	push	{r3, r4, r5, lr}
 800da18:	f9b0 411c 	ldrsh.w	r4, [r0, #284]	; 0x11c
 800da1c:	f9b0 511e 	ldrsh.w	r5, [r0, #286]	; 0x11e
 800da20:	42a5      	cmp	r5, r4
 800da22:	da04      	bge.n	800da2e <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs+0x18>
 800da24:	6803      	ldr	r3, [r0, #0]
 800da26:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 800da2a:	4798      	blx	r3
 800da2c:	bd38      	pop	{r3, r4, r5, pc}
 800da2e:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 800da32:	4408      	add	r0, r1
 800da34:	1b00      	subs	r0, r0, r4
 800da36:	e7f9      	b.n	800da2c <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs+0x16>

0800da38 <_ZN8touchgfx15GraphScrollData8addValueEi>:
 800da38:	b570      	push	{r4, r5, r6, lr}
 800da3a:	f9b0 514c 	ldrsh.w	r5, [r0, #332]	; 0x14c
 800da3e:	f9b0 611e 	ldrsh.w	r6, [r0, #286]	; 0x11e
 800da42:	f9b0 211c 	ldrsh.w	r2, [r0, #284]	; 0x11c
 800da46:	4604      	mov	r4, r0
 800da48:	1c6b      	adds	r3, r5, #1
 800da4a:	b21b      	sxth	r3, r3
 800da4c:	42ae      	cmp	r6, r5
 800da4e:	bf08      	it	eq
 800da50:	f8a4 311e 	strheq.w	r3, [r4, #286]	; 0x11e
 800da54:	fb93 f0f2 	sdiv	r0, r3, r2
 800da58:	fb02 3010 	mls	r0, r2, r0, r3
 800da5c:	f8d4 3144 	ldr.w	r3, [r4, #324]	; 0x144
 800da60:	f8a4 014c 	strh.w	r0, [r4, #332]	; 0x14c
 800da64:	4296      	cmp	r6, r2
 800da66:	f843 1025 	str.w	r1, [r3, r5, lsl #2]
 800da6a:	d108      	bne.n	800da7e <_ZN8touchgfx15GraphScrollData8addValueEi+0x46>
 800da6c:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800da70:	f004 fa85 	bl	8011f7e <_ZNK8touchgfx8Drawable10invalidateEv>
 800da74:	4620      	mov	r0, r4
 800da76:	f7fe fd05 	bl	800c484 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 800da7a:	4628      	mov	r0, r5
 800da7c:	bd70      	pop	{r4, r5, r6, pc}
 800da7e:	4629      	mov	r1, r5
 800da80:	4620      	mov	r0, r4
 800da82:	f7fe fcd7 	bl	800c434 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>
 800da86:	e7f8      	b.n	800da7a <_ZN8touchgfx15GraphScrollData8addValueEi+0x42>

0800da88 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800da88:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800da8c:	4770      	bx	lr

0800da8e <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800da8e:	b510      	push	{r4, lr}
 800da90:	4604      	mov	r4, r0
 800da92:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800da94:	b150      	cbz	r0, 800daac <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800da96:	6803      	ldr	r3, [r0, #0]
 800da98:	68db      	ldr	r3, [r3, #12]
 800da9a:	4798      	blx	r3
 800da9c:	b130      	cbz	r0, 800daac <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800da9e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800daa0:	6803      	ldr	r3, [r0, #0]
 800daa2:	4621      	mov	r1, r4
 800daa4:	689b      	ldr	r3, [r3, #8]
 800daa6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800daaa:	4718      	bx	r3
 800daac:	bd10      	pop	{r4, pc}

0800daae <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 800daae:	b570      	push	{r4, r5, r6, lr}
 800dab0:	790b      	ldrb	r3, [r1, #4]
 800dab2:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 800dab6:	2b00      	cmp	r3, #0
 800dab8:	bf0c      	ite	eq
 800daba:	2301      	moveq	r3, #1
 800dabc:	2300      	movne	r3, #0
 800dabe:	4604      	mov	r4, r0
 800dac0:	460e      	mov	r6, r1
 800dac2:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 800dac6:	d109      	bne.n	800dadc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 800dac8:	b14d      	cbz	r5, 800dade <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 800daca:	7933      	ldrb	r3, [r6, #4]
 800dacc:	2b01      	cmp	r3, #1
 800dace:	d10c      	bne.n	800daea <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800dad0:	6823      	ldr	r3, [r4, #0]
 800dad2:	4620      	mov	r0, r4
 800dad4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800dad6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dada:	4718      	bx	r3
 800dadc:	b12d      	cbz	r5, 800daea <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800dade:	6823      	ldr	r3, [r4, #0]
 800dae0:	4620      	mov	r0, r4
 800dae2:	695b      	ldr	r3, [r3, #20]
 800dae4:	4798      	blx	r3
 800dae6:	2d00      	cmp	r5, #0
 800dae8:	d1ef      	bne.n	800daca <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 800daea:	bd70      	pop	{r4, r5, r6, pc}

0800daec <_ZN8touchgfx12ToggleButtonD1Ev>:
 800daec:	4770      	bx	lr

0800daee <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 800daee:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800daf2:	b133      	cbz	r3, 800db02 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 800daf4:	790b      	ldrb	r3, [r1, #4]
 800daf6:	2b01      	cmp	r3, #1
 800daf8:	bf01      	itttt	eq
 800dafa:	8dc3      	ldrheq	r3, [r0, #46]	; 0x2e
 800dafc:	8e02      	ldrheq	r2, [r0, #48]	; 0x30
 800dafe:	85c2      	strheq	r2, [r0, #46]	; 0x2e
 800db00:	8603      	strheq	r3, [r0, #48]	; 0x30
 800db02:	f7ff bfd4 	b.w	800daae <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>

0800db06 <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
 800db06:	8813      	ldrh	r3, [r2, #0]
 800db08:	8683      	strh	r3, [r0, #52]	; 0x34
 800db0a:	f000 bbd0 	b.w	800e2ae <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>

0800db0e <_ZN8touchgfx12ToggleButtonD0Ev>:
 800db0e:	b510      	push	{r4, lr}
 800db10:	2138      	movs	r1, #56	; 0x38
 800db12:	4604      	mov	r4, r0
 800db14:	f012 fdb8 	bl	8020688 <_ZdlPvj>
 800db18:	4620      	mov	r0, r4
 800db1a:	bd10      	pop	{r4, pc}

0800db1c <_ZNK8touchgfx6Button17invalidateContentEv>:
 800db1c:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 800db20:	b12a      	cbz	r2, 800db2e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800db22:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800db26:	b112      	cbz	r2, 800db2e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800db28:	6803      	ldr	r3, [r0, #0]
 800db2a:	695b      	ldr	r3, [r3, #20]
 800db2c:	4718      	bx	r3
 800db2e:	4770      	bx	lr

0800db30 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800db30:	2000      	movs	r0, #0
 800db32:	4770      	bx	lr

0800db34 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800db34:	4b07      	ldr	r3, [pc, #28]	; (800db54 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800db36:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800db38:	881b      	ldrh	r3, [r3, #0]
 800db3a:	4293      	cmp	r3, r2
 800db3c:	bf81      	itttt	hi
 800db3e:	4b06      	ldrhi	r3, [pc, #24]	; (800db58 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800db40:	681b      	ldrhi	r3, [r3, #0]
 800db42:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800db46:	7858      	ldrbhi	r0, [r3, #1]
 800db48:	bf8c      	ite	hi
 800db4a:	f000 0003 	andhi.w	r0, r0, #3
 800db4e:	2000      	movls	r0, #0
 800db50:	4770      	bx	lr
 800db52:	bf00      	nop
 800db54:	20015608 	.word	0x20015608
 800db58:	20015604 	.word	0x20015604

0800db5c <_ZN8touchgfx8TextAreaD1Ev>:
 800db5c:	4770      	bx	lr
	...

0800db60 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800db60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800db64:	4b10      	ldr	r3, [pc, #64]	; (800dba8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800db66:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800db68:	881b      	ldrh	r3, [r3, #0]
 800db6a:	428b      	cmp	r3, r1
 800db6c:	4604      	mov	r4, r0
 800db6e:	d918      	bls.n	800dba2 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800db70:	6803      	ldr	r3, [r0, #0]
 800db72:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 800db74:	4b0d      	ldr	r3, [pc, #52]	; (800dbac <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800db76:	6818      	ldr	r0, [r3, #0]
 800db78:	f7f7 f916 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800db7c:	6823      	ldr	r3, [r4, #0]
 800db7e:	4606      	mov	r6, r0
 800db80:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800db82:	4620      	mov	r0, r4
 800db84:	4798      	blx	r3
 800db86:	6823      	ldr	r3, [r4, #0]
 800db88:	4607      	mov	r7, r0
 800db8a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800db8e:	4620      	mov	r0, r4
 800db90:	4798      	blx	r3
 800db92:	463a      	mov	r2, r7
 800db94:	4603      	mov	r3, r0
 800db96:	4631      	mov	r1, r6
 800db98:	4620      	mov	r0, r4
 800db9a:	46ac      	mov	ip, r5
 800db9c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800dba0:	4760      	bx	ip
 800dba2:	2000      	movs	r0, #0
 800dba4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dba8:	20015608 	.word	0x20015608
 800dbac:	20015610 	.word	0x20015610

0800dbb0 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800dbb0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800dbb4:	4b17      	ldr	r3, [pc, #92]	; (800dc14 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800dbb6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800dbb8:	881b      	ldrh	r3, [r3, #0]
 800dbba:	428b      	cmp	r3, r1
 800dbbc:	4604      	mov	r4, r0
 800dbbe:	d926      	bls.n	800dc0e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800dbc0:	4b15      	ldr	r3, [pc, #84]	; (800dc18 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800dbc2:	681b      	ldr	r3, [r3, #0]
 800dbc4:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800dbc8:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800dbcc:	4b13      	ldr	r3, [pc, #76]	; (800dc1c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800dbce:	7855      	ldrb	r5, [r2, #1]
 800dbd0:	681b      	ldr	r3, [r3, #0]
 800dbd2:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800dbd6:	6833      	ldr	r3, [r6, #0]
 800dbd8:	69df      	ldr	r7, [r3, #28]
 800dbda:	4b11      	ldr	r3, [pc, #68]	; (800dc20 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800dbdc:	6818      	ldr	r0, [r3, #0]
 800dbde:	f7f7 f8e3 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800dbe2:	6823      	ldr	r3, [r4, #0]
 800dbe4:	4680      	mov	r8, r0
 800dbe6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800dbe8:	4620      	mov	r0, r4
 800dbea:	4798      	blx	r3
 800dbec:	6823      	ldr	r3, [r4, #0]
 800dbee:	4681      	mov	r9, r0
 800dbf0:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800dbf4:	4620      	mov	r0, r4
 800dbf6:	4798      	blx	r3
 800dbf8:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800dbfc:	9000      	str	r0, [sp, #0]
 800dbfe:	464b      	mov	r3, r9
 800dc00:	4642      	mov	r2, r8
 800dc02:	4629      	mov	r1, r5
 800dc04:	4630      	mov	r0, r6
 800dc06:	47b8      	blx	r7
 800dc08:	b003      	add	sp, #12
 800dc0a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800dc0e:	2000      	movs	r0, #0
 800dc10:	e7fa      	b.n	800dc08 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800dc12:	bf00      	nop
 800dc14:	20015608 	.word	0x20015608
 800dc18:	20015604 	.word	0x20015604
 800dc1c:	2001560c 	.word	0x2001560c
 800dc20:	20015610 	.word	0x20015610

0800dc24 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800dc24:	b40e      	push	{r1, r2, r3}
 800dc26:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800dc2a:	4b2f      	ldr	r3, [pc, #188]	; (800dce8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800dc2c:	881a      	ldrh	r2, [r3, #0]
 800dc2e:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800dc30:	429a      	cmp	r2, r3
 800dc32:	b09d      	sub	sp, #116	; 0x74
 800dc34:	4604      	mov	r4, r0
 800dc36:	d954      	bls.n	800dce2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800dc38:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 800dcec <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800dc3c:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800dcf0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800dc40:	aa26      	add	r2, sp, #152	; 0x98
 800dc42:	9202      	str	r2, [sp, #8]
 800dc44:	f8d9 2000 	ldr.w	r2, [r9]
 800dc48:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800dc4c:	f8d8 3000 	ldr.w	r3, [r8]
 800dc50:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800dc54:	682b      	ldr	r3, [r5, #0]
 800dc56:	4628      	mov	r0, r5
 800dc58:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800dc5a:	4798      	blx	r3
 800dc5c:	b207      	sxth	r7, r0
 800dc5e:	4606      	mov	r6, r0
 800dc60:	a803      	add	r0, sp, #12
 800dc62:	f004 fedc 	bl	8012a1e <_ZN8touchgfx12TextProviderC1Ev>
 800dc66:	682b      	ldr	r3, [r5, #0]
 800dc68:	4628      	mov	r0, r5
 800dc6a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800dc6c:	4798      	blx	r3
 800dc6e:	682b      	ldr	r3, [r5, #0]
 800dc70:	4682      	mov	sl, r0
 800dc72:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800dc74:	4628      	mov	r0, r5
 800dc76:	4798      	blx	r3
 800dc78:	4653      	mov	r3, sl
 800dc7a:	9000      	str	r0, [sp, #0]
 800dc7c:	9a02      	ldr	r2, [sp, #8]
 800dc7e:	9925      	ldr	r1, [sp, #148]	; 0x94
 800dc80:	a803      	add	r0, sp, #12
 800dc82:	f004 ff27 	bl	8012ad4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800dc86:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800dc88:	f8d9 3000 	ldr.w	r3, [r9]
 800dc8c:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 800dc90:	8925      	ldrh	r5, [r4, #8]
 800dc92:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800dc96:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800dc9a:	eba5 050c 	sub.w	r5, r5, ip
 800dc9e:	784a      	ldrb	r2, [r1, #1]
 800dca0:	f8d8 3000 	ldr.w	r3, [r8]
 800dca4:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800dca8:	b22d      	sxth	r5, r5
 800dcaa:	9500      	str	r5, [sp, #0]
 800dcac:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800dcb0:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800dcb4:	a803      	add	r0, sp, #12
 800dcb6:	f002 fd21 	bl	80106fc <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800dcba:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800dcbe:	18b9      	adds	r1, r7, r2
 800dcc0:	2900      	cmp	r1, #0
 800dcc2:	b203      	sxth	r3, r0
 800dcc4:	dd0b      	ble.n	800dcde <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800dcc6:	3b01      	subs	r3, #1
 800dcc8:	fb13 f302 	smulbb	r3, r3, r2
 800dccc:	fb16 3300 	smlabb	r3, r6, r0, r3
 800dcd0:	b21f      	sxth	r7, r3
 800dcd2:	4638      	mov	r0, r7
 800dcd4:	b01d      	add	sp, #116	; 0x74
 800dcd6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800dcda:	b003      	add	sp, #12
 800dcdc:	4770      	bx	lr
 800dcde:	2b00      	cmp	r3, #0
 800dce0:	dcf7      	bgt.n	800dcd2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800dce2:	2700      	movs	r7, #0
 800dce4:	e7f5      	b.n	800dcd2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800dce6:	bf00      	nop
 800dce8:	20015608 	.word	0x20015608
 800dcec:	20015604 	.word	0x20015604
 800dcf0:	2001560c 	.word	0x2001560c

0800dcf4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800dcf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dcf8:	4bbb      	ldr	r3, [pc, #748]	; (800dfe8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f4>)
 800dcfa:	460c      	mov	r4, r1
 800dcfc:	881b      	ldrh	r3, [r3, #0]
 800dcfe:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 800dd00:	428b      	cmp	r3, r1
 800dd02:	b0a9      	sub	sp, #164	; 0xa4
 800dd04:	4681      	mov	r9, r0
 800dd06:	d809      	bhi.n	800dd1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 800dd08:	2300      	movs	r3, #0
 800dd0a:	f04f 32ff 	mov.w	r2, #4294967295
 800dd0e:	e9c0 3200 	strd	r3, r2, [r0]
 800dd12:	6083      	str	r3, [r0, #8]
 800dd14:	4648      	mov	r0, r9
 800dd16:	b029      	add	sp, #164	; 0xa4
 800dd18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dd1c:	f8df b2d0 	ldr.w	fp, [pc, #720]	; 800dff0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 800dd20:	f8df 82d0 	ldr.w	r8, [pc, #720]	; 800dff4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>
 800dd24:	f8db 3000 	ldr.w	r3, [fp]
 800dd28:	f8d8 0000 	ldr.w	r0, [r8]
 800dd2c:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800dd30:	4bae      	ldr	r3, [pc, #696]	; (800dfec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 800dd32:	681b      	ldr	r3, [r3, #0]
 800dd34:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800dd38:	f7f7 f836 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800dd3c:	682b      	ldr	r3, [r5, #0]
 800dd3e:	4607      	mov	r7, r0
 800dd40:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800dd42:	4628      	mov	r0, r5
 800dd44:	4798      	blx	r3
 800dd46:	8ea6      	ldrh	r6, [r4, #52]	; 0x34
 800dd48:	f8cd 800c 	str.w	r8, [sp, #12]
 800dd4c:	4430      	add	r0, r6
 800dd4e:	f894 6039 	ldrb.w	r6, [r4, #57]	; 0x39
 800dd52:	b283      	uxth	r3, r0
 800dd54:	f10d 0a3c 	add.w	sl, sp, #60	; 0x3c
 800dd58:	9302      	str	r3, [sp, #8]
 800dd5a:	4650      	mov	r0, sl
 800dd5c:	2e00      	cmp	r6, #0
 800dd5e:	f040 8091 	bne.w	800de84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 800dd62:	f004 fe5c 	bl	8012a1e <_ZN8touchgfx12TextProviderC1Ev>
 800dd66:	682b      	ldr	r3, [r5, #0]
 800dd68:	4628      	mov	r0, r5
 800dd6a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800dd6c:	4798      	blx	r3
 800dd6e:	682b      	ldr	r3, [r5, #0]
 800dd70:	9005      	str	r0, [sp, #20]
 800dd72:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800dd74:	4628      	mov	r0, r5
 800dd76:	4798      	blx	r3
 800dd78:	6823      	ldr	r3, [r4, #0]
 800dd7a:	4680      	mov	r8, r0
 800dd7c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800dd7e:	4620      	mov	r0, r4
 800dd80:	4798      	blx	r3
 800dd82:	6822      	ldr	r2, [r4, #0]
 800dd84:	9004      	str	r0, [sp, #16]
 800dd86:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800dd8a:	4620      	mov	r0, r4
 800dd8c:	4790      	blx	r2
 800dd8e:	9905      	ldr	r1, [sp, #20]
 800dd90:	9b04      	ldr	r3, [sp, #16]
 800dd92:	9001      	str	r0, [sp, #4]
 800dd94:	9300      	str	r3, [sp, #0]
 800dd96:	460a      	mov	r2, r1
 800dd98:	4643      	mov	r3, r8
 800dd9a:	4639      	mov	r1, r7
 800dd9c:	4650      	mov	r0, sl
 800dd9e:	f004 feae 	bl	8012afe <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800dda2:	4637      	mov	r7, r6
 800dda4:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800dda6:	f8db 3000 	ldr.w	r3, [fp]
 800ddaa:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800ddae:	4629      	mov	r1, r5
 800ddb0:	785b      	ldrb	r3, [r3, #1]
 800ddb2:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800ddb6:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800ddba:	4650      	mov	r0, sl
 800ddbc:	f002 f9f0 	bl	80101a0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800ddc0:	4287      	cmp	r7, r0
 800ddc2:	bfb8      	it	lt
 800ddc4:	b207      	sxthlt	r7, r0
 800ddc6:	3601      	adds	r6, #1
 800ddc8:	4650      	mov	r0, sl
 800ddca:	b2b6      	uxth	r6, r6
 800ddcc:	f004 fe4e 	bl	8012a6c <_ZN8touchgfx12TextProvider11endOfStringEv>
 800ddd0:	2800      	cmp	r0, #0
 800ddd2:	d0e7      	beq.n	800dda4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xb0>
 800ddd4:	9b02      	ldr	r3, [sp, #8]
 800ddd6:	f8b4 8034 	ldrh.w	r8, [r4, #52]	; 0x34
 800ddda:	fb13 f606 	smulbb	r6, r3, r6
 800ddde:	eba6 0608 	sub.w	r6, r6, r8
 800dde2:	b2b6      	uxth	r6, r6
 800dde4:	fa0f f886 	sxth.w	r8, r6
 800dde8:	f1b8 0f00 	cmp.w	r8, #0
 800ddec:	dd06      	ble.n	800ddfc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x108>
 800ddee:	682b      	ldr	r3, [r5, #0]
 800ddf0:	4628      	mov	r0, r5
 800ddf2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ddf4:	4798      	blx	r3
 800ddf6:	4430      	add	r0, r6
 800ddf8:	fa0f f880 	sxth.w	r8, r0
 800ddfc:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800de00:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800de04:	6823      	ldr	r3, [r4, #0]
 800de06:	bf08      	it	eq
 800de08:	f9b4 6008 	ldrsheq.w	r6, [r4, #8]
 800de0c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800de0e:	bf18      	it	ne
 800de10:	f9b4 600a 	ldrshne.w	r6, [r4, #10]
 800de14:	4620      	mov	r0, r4
 800de16:	4798      	blx	r3
 800de18:	2801      	cmp	r0, #1
 800de1a:	b2ba      	uxth	r2, r7
 800de1c:	f000 80d1 	beq.w	800dfc2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ce>
 800de20:	2802      	cmp	r0, #2
 800de22:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800de26:	f000 80d2 	beq.w	800dfce <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2da>
 800de2a:	b21e      	sxth	r6, r3
 800de2c:	7a29      	ldrb	r1, [r5, #8]
 800de2e:	7a6d      	ldrb	r5, [r5, #9]
 800de30:	1a76      	subs	r6, r6, r1
 800de32:	4429      	add	r1, r5
 800de34:	440a      	add	r2, r1
 800de36:	f894 1038 	ldrb.w	r1, [r4, #56]	; 0x38
 800de3a:	b2b3      	uxth	r3, r6
 800de3c:	b292      	uxth	r2, r2
 800de3e:	2902      	cmp	r1, #2
 800de40:	b21f      	sxth	r7, r3
 800de42:	b216      	sxth	r6, r2
 800de44:	f000 80c6 	beq.w	800dfd4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2e0>
 800de48:	2903      	cmp	r1, #3
 800de4a:	f000 80d5 	beq.w	800dff8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>
 800de4e:	2901      	cmp	r1, #1
 800de50:	f040 80db 	bne.w	800e00a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x316>
 800de54:	8923      	ldrh	r3, [r4, #8]
 800de56:	4632      	mov	r2, r6
 800de58:	eba3 0308 	sub.w	r3, r3, r8
 800de5c:	4646      	mov	r6, r8
 800de5e:	463d      	mov	r5, r7
 800de60:	4690      	mov	r8, r2
 800de62:	b21f      	sxth	r7, r3
 800de64:	9b03      	ldr	r3, [sp, #12]
 800de66:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800de68:	6818      	ldr	r0, [r3, #0]
 800de6a:	f7f6 ff9d 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800de6e:	f8a9 7000 	strh.w	r7, [r9]
 800de72:	f8a9 5002 	strh.w	r5, [r9, #2]
 800de76:	f8a9 6004 	strh.w	r6, [r9, #4]
 800de7a:	f8a9 8006 	strh.w	r8, [r9, #6]
 800de7e:	f8c9 0008 	str.w	r0, [r9, #8]
 800de82:	e747      	b.n	800dd14 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 800de84:	f004 fdcb 	bl	8012a1e <_ZN8touchgfx12TextProviderC1Ev>
 800de88:	682b      	ldr	r3, [r5, #0]
 800de8a:	4628      	mov	r0, r5
 800de8c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800de8e:	4798      	blx	r3
 800de90:	682b      	ldr	r3, [r5, #0]
 800de92:	4606      	mov	r6, r0
 800de94:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800de96:	4628      	mov	r0, r5
 800de98:	4798      	blx	r3
 800de9a:	6823      	ldr	r3, [r4, #0]
 800de9c:	4680      	mov	r8, r0
 800de9e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800dea0:	4620      	mov	r0, r4
 800dea2:	4798      	blx	r3
 800dea4:	6822      	ldr	r2, [r4, #0]
 800dea6:	9004      	str	r0, [sp, #16]
 800dea8:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800deac:	4620      	mov	r0, r4
 800deae:	4790      	blx	r2
 800deb0:	9b04      	ldr	r3, [sp, #16]
 800deb2:	9001      	str	r0, [sp, #4]
 800deb4:	4632      	mov	r2, r6
 800deb6:	9300      	str	r3, [sp, #0]
 800deb8:	4639      	mov	r1, r7
 800deba:	4643      	mov	r3, r8
 800debc:	4650      	mov	r0, sl
 800debe:	f004 fe1e 	bl	8012afe <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800dec2:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800dec6:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 800deca:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800decc:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 800ded0:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800ded4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800ded8:	bf0a      	itet	eq
 800deda:	4642      	moveq	r2, r8
 800dedc:	461a      	movne	r2, r3
 800dede:	4698      	moveq	r8, r3
 800dee0:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800dee4:	1ad2      	subs	r2, r2, r3
 800dee6:	f8db 3000 	ldr.w	r3, [fp]
 800deea:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800deee:	7859      	ldrb	r1, [r3, #1]
 800def0:	f8cd a020 	str.w	sl, [sp, #32]
 800def4:	2300      	movs	r3, #0
 800def6:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800defa:	f8ad 301c 	strh.w	r3, [sp, #28]
 800defe:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 800df02:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800df06:	950a      	str	r5, [sp, #40]	; 0x28
 800df08:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800df0c:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800df10:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800df14:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800df18:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800df1c:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800df20:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800df24:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 800df28:	b350      	cbz	r0, 800df80 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800df2a:	682b      	ldr	r3, [r5, #0]
 800df2c:	4628      	mov	r0, r5
 800df2e:	695b      	ldr	r3, [r3, #20]
 800df30:	4798      	blx	r3
 800df32:	4607      	mov	r7, r0
 800df34:	b320      	cbz	r0, 800df80 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800df36:	980a      	ldr	r0, [sp, #40]	; 0x28
 800df38:	6803      	ldr	r3, [r0, #0]
 800df3a:	4639      	mov	r1, r7
 800df3c:	68db      	ldr	r3, [r3, #12]
 800df3e:	4798      	blx	r3
 800df40:	4606      	mov	r6, r0
 800df42:	b1e8      	cbz	r0, 800df80 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800df44:	7b43      	ldrb	r3, [r0, #13]
 800df46:	7a82      	ldrb	r2, [r0, #10]
 800df48:	005b      	lsls	r3, r3, #1
 800df4a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800df4e:	4313      	orrs	r3, r2
 800df50:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800df54:	f89d 3025 	ldrb.w	r3, [sp, #37]	; 0x25
 800df58:	2b04      	cmp	r3, #4
 800df5a:	d111      	bne.n	800df80 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800df5c:	980a      	ldr	r0, [sp, #40]	; 0x28
 800df5e:	6803      	ldr	r3, [r0, #0]
 800df60:	4632      	mov	r2, r6
 800df62:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800df64:	4639      	mov	r1, r7
 800df66:	4798      	blx	r3
 800df68:	7b73      	ldrb	r3, [r6, #13]
 800df6a:	005b      	lsls	r3, r3, #1
 800df6c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800df70:	7ab3      	ldrb	r3, [r6, #10]
 800df72:	4313      	orrs	r3, r2
 800df74:	4418      	add	r0, r3
 800df76:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800df7a:	4418      	add	r0, r3
 800df7c:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 800df80:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 800df84:	2600      	movs	r6, #0
 800df86:	ea4f 0b4a 	mov.w	fp, sl, lsl #1
 800df8a:	4637      	mov	r7, r6
 800df8c:	45c3      	cmp	fp, r8
 800df8e:	bfd4      	ite	le
 800df90:	2100      	movle	r1, #0
 800df92:	2101      	movgt	r1, #1
 800df94:	a807      	add	r0, sp, #28
 800df96:	f002 fae2 	bl	801055e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800df9a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 800df9e:	429f      	cmp	r7, r3
 800dfa0:	bfb8      	it	lt
 800dfa2:	b21f      	sxthlt	r7, r3
 800dfa4:	9b02      	ldr	r3, [sp, #8]
 800dfa6:	eba8 0803 	sub.w	r8, r8, r3
 800dfaa:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800dfae:	3601      	adds	r6, #1
 800dfb0:	b2b6      	uxth	r6, r6
 800dfb2:	fa0f f888 	sxth.w	r8, r8
 800dfb6:	2b00      	cmp	r3, #0
 800dfb8:	f43f af0c 	beq.w	800ddd4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xe0>
 800dfbc:	45c2      	cmp	sl, r8
 800dfbe:	dbe5      	blt.n	800df8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x298>
 800dfc0:	e708      	b.n	800ddd4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xe0>
 800dfc2:	1bf6      	subs	r6, r6, r7
 800dfc4:	2702      	movs	r7, #2
 800dfc6:	fb96 f6f7 	sdiv	r6, r6, r7
 800dfca:	b236      	sxth	r6, r6
 800dfcc:	e72e      	b.n	800de2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x138>
 800dfce:	4413      	add	r3, r2
 800dfd0:	1af6      	subs	r6, r6, r3
 800dfd2:	e7fa      	b.n	800dfca <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2d6>
 800dfd4:	8925      	ldrh	r5, [r4, #8]
 800dfd6:	1aad      	subs	r5, r5, r2
 800dfd8:	1aed      	subs	r5, r5, r3
 800dfda:	b22f      	sxth	r7, r5
 800dfdc:	8965      	ldrh	r5, [r4, #10]
 800dfde:	eba5 0508 	sub.w	r5, r5, r8
 800dfe2:	b22d      	sxth	r5, r5
 800dfe4:	e73e      	b.n	800de64 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800dfe6:	bf00      	nop
 800dfe8:	20015608 	.word	0x20015608
 800dfec:	2001560c 	.word	0x2001560c
 800dff0:	20015604 	.word	0x20015604
 800dff4:	20015610 	.word	0x20015610
 800dff8:	8965      	ldrh	r5, [r4, #10]
 800dffa:	1aad      	subs	r5, r5, r2
 800dffc:	1aed      	subs	r5, r5, r3
 800dffe:	4633      	mov	r3, r6
 800e000:	b22d      	sxth	r5, r5
 800e002:	4646      	mov	r6, r8
 800e004:	2700      	movs	r7, #0
 800e006:	4698      	mov	r8, r3
 800e008:	e72c      	b.n	800de64 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800e00a:	2500      	movs	r5, #0
 800e00c:	e72a      	b.n	800de64 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800e00e:	bf00      	nop

0800e010 <_ZN8touchgfx8TextAreaD0Ev>:
 800e010:	b510      	push	{r4, lr}
 800e012:	2148      	movs	r1, #72	; 0x48
 800e014:	4604      	mov	r4, r0
 800e016:	f012 fb37 	bl	8020688 <_ZdlPvj>
 800e01a:	4620      	mov	r0, r4
 800e01c:	bd10      	pop	{r4, pc}
	...

0800e020 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 800e020:	b513      	push	{r0, r1, r4, lr}
 800e022:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800e026:	4604      	mov	r4, r0
 800e028:	b1fb      	cbz	r3, 800e06a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e02a:	4b16      	ldr	r3, [pc, #88]	; (800e084 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 800e02c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800e02e:	881b      	ldrh	r3, [r3, #0]
 800e030:	428b      	cmp	r3, r1
 800e032:	d91a      	bls.n	800e06a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e034:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e038:	2b00      	cmp	r3, #0
 800e03a:	dd16      	ble.n	800e06a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e03c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e040:	2b00      	cmp	r3, #0
 800e042:	dd12      	ble.n	800e06a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e044:	4b10      	ldr	r3, [pc, #64]	; (800e088 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 800e046:	6818      	ldr	r0, [r3, #0]
 800e048:	f7f6 feae 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800e04c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800e050:	6822      	ldr	r2, [r4, #0]
 800e052:	2b00      	cmp	r3, #0
 800e054:	db06      	blt.n	800e064 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800e056:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800e05a:	2b00      	cmp	r3, #0
 800e05c:	db02      	blt.n	800e064 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800e05e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800e060:	4298      	cmp	r0, r3
 800e062:	d004      	beq.n	800e06e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 800e064:	6953      	ldr	r3, [r2, #20]
 800e066:	4620      	mov	r0, r4
 800e068:	4798      	blx	r3
 800e06a:	b002      	add	sp, #8
 800e06c:	bd10      	pop	{r4, pc}
 800e06e:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 800e072:	c903      	ldmia	r1, {r0, r1}
 800e074:	466b      	mov	r3, sp
 800e076:	e883 0003 	stmia.w	r3, {r0, r1}
 800e07a:	6912      	ldr	r2, [r2, #16]
 800e07c:	4619      	mov	r1, r3
 800e07e:	4620      	mov	r0, r4
 800e080:	4790      	blx	r2
 800e082:	e7f2      	b.n	800e06a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e084:	20015608 	.word	0x20015608
 800e088:	20015610 	.word	0x20015610

0800e08c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800e08c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e090:	4b44      	ldr	r3, [pc, #272]	; (800e1a4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 800e092:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800e094:	881b      	ldrh	r3, [r3, #0]
 800e096:	4293      	cmp	r3, r2
 800e098:	b08e      	sub	sp, #56	; 0x38
 800e09a:	4604      	mov	r4, r0
 800e09c:	d97e      	bls.n	800e19c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e09e:	6808      	ldr	r0, [r1, #0]
 800e0a0:	4d41      	ldr	r5, [pc, #260]	; (800e1a8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 800e0a2:	6849      	ldr	r1, [r1, #4]
 800e0a4:	ab05      	add	r3, sp, #20
 800e0a6:	c303      	stmia	r3!, {r0, r1}
 800e0a8:	4611      	mov	r1, r2
 800e0aa:	6828      	ldr	r0, [r5, #0]
 800e0ac:	f7f6 fe7c 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800e0b0:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800e0b4:	2b00      	cmp	r3, #0
 800e0b6:	db11      	blt.n	800e0dc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e0b8:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800e0bc:	2b00      	cmp	r3, #0
 800e0be:	db0d      	blt.n	800e0dc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e0c0:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800e0c2:	4298      	cmp	r0, r3
 800e0c4:	d10a      	bne.n	800e0dc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e0c6:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800e0ca:	e892 0003 	ldmia.w	r2, {r0, r1}
 800e0ce:	ab09      	add	r3, sp, #36	; 0x24
 800e0d0:	e883 0003 	stmia.w	r3, {r0, r1}
 800e0d4:	4619      	mov	r1, r3
 800e0d6:	a805      	add	r0, sp, #20
 800e0d8:	f7fc fe28 	bl	800ad2c <_ZN8touchgfx4RectaNERKS0_>
 800e0dc:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800e0e0:	2b00      	cmp	r3, #0
 800e0e2:	dd5b      	ble.n	800e19c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e0e4:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800e0e8:	2b00      	cmp	r3, #0
 800e0ea:	dd57      	ble.n	800e19c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e0ec:	4f2f      	ldr	r7, [pc, #188]	; (800e1ac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 800e0ee:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800e0f0:	683b      	ldr	r3, [r7, #0]
 800e0f2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800e0f6:	4b2e      	ldr	r3, [pc, #184]	; (800e1b0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 800e0f8:	681b      	ldr	r3, [r3, #0]
 800e0fa:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800e0fe:	2e00      	cmp	r6, #0
 800e100:	d04c      	beq.n	800e19c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e102:	6823      	ldr	r3, [r4, #0]
 800e104:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 800e108:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800e10a:	4620      	mov	r0, r4
 800e10c:	4798      	blx	r3
 800e10e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800e110:	683b      	ldr	r3, [r7, #0]
 800e112:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 800e116:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 800e11a:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 800e11e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e120:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800e124:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 800e128:	785b      	ldrb	r3, [r3, #1]
 800e12a:	9609      	str	r6, [sp, #36]	; 0x24
 800e12c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800e130:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800e134:	4b1f      	ldr	r3, [pc, #124]	; (800e1b4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 800e136:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800e13a:	681b      	ldr	r3, [r3, #0]
 800e13c:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 800e140:	910b      	str	r1, [sp, #44]	; 0x2c
 800e142:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 800e146:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 800e14a:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 800e14e:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 800e152:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e156:	b10a      	cbz	r2, 800e15c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 800e158:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 800e15a:	b906      	cbnz	r6, 800e15e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 800e15c:	689e      	ldr	r6, [r3, #8]
 800e15e:	af07      	add	r7, sp, #28
 800e160:	4621      	mov	r1, r4
 800e162:	4638      	mov	r0, r7
 800e164:	f003 ffa6 	bl	80120b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e168:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800e16a:	6828      	ldr	r0, [r5, #0]
 800e16c:	f7f6 fe1c 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800e170:	6823      	ldr	r3, [r4, #0]
 800e172:	4605      	mov	r5, r0
 800e174:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e176:	4620      	mov	r0, r4
 800e178:	4798      	blx	r3
 800e17a:	6823      	ldr	r3, [r4, #0]
 800e17c:	4680      	mov	r8, r0
 800e17e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e182:	4620      	mov	r0, r4
 800e184:	4798      	blx	r3
 800e186:	e9cd 8002 	strd	r8, r0, [sp, #8]
 800e18a:	ab09      	add	r3, sp, #36	; 0x24
 800e18c:	9300      	str	r3, [sp, #0]
 800e18e:	9501      	str	r5, [sp, #4]
 800e190:	ab05      	add	r3, sp, #20
 800e192:	e897 0006 	ldmia.w	r7, {r1, r2}
 800e196:	4630      	mov	r0, r6
 800e198:	f7f6 fdb8 	bl	8004d0c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800e19c:	b00e      	add	sp, #56	; 0x38
 800e19e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e1a2:	bf00      	nop
 800e1a4:	20015608 	.word	0x20015608
 800e1a8:	20015610 	.word	0x20015610
 800e1ac:	20015604 	.word	0x20015604
 800e1b0:	2001560c 	.word	0x2001560c
 800e1b4:	200155ac 	.word	0x200155ac

0800e1b8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800e1b8:	b538      	push	{r3, r4, r5, lr}
 800e1ba:	4b0e      	ldr	r3, [pc, #56]	; (800e1f4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800e1bc:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800e1be:	881b      	ldrh	r3, [r3, #0]
 800e1c0:	429a      	cmp	r2, r3
 800e1c2:	4604      	mov	r4, r0
 800e1c4:	d214      	bcs.n	800e1f0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800e1c6:	6803      	ldr	r3, [r0, #0]
 800e1c8:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800e1ca:	4798      	blx	r3
 800e1cc:	6823      	ldr	r3, [r4, #0]
 800e1ce:	4605      	mov	r5, r0
 800e1d0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800e1d2:	4620      	mov	r0, r4
 800e1d4:	4798      	blx	r3
 800e1d6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e1da:	b22d      	sxth	r5, r5
 800e1dc:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800e1e0:	4601      	mov	r1, r0
 800e1e2:	bf06      	itte	eq
 800e1e4:	4602      	moveq	r2, r0
 800e1e6:	4629      	moveq	r1, r5
 800e1e8:	462a      	movne	r2, r5
 800e1ea:	4620      	mov	r0, r4
 800e1ec:	f7fc fb45 	bl	800a87a <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800e1f0:	bd38      	pop	{r3, r4, r5, pc}
 800e1f2:	bf00      	nop
 800e1f4:	20015608 	.word	0x20015608

0800e1f8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800e1f8:	b530      	push	{r4, r5, lr}
 800e1fa:	888b      	ldrh	r3, [r1, #4]
 800e1fc:	8583      	strh	r3, [r0, #44]	; 0x2c
 800e1fe:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e202:	b085      	sub	sp, #20
 800e204:	4604      	mov	r4, r0
 800e206:	b923      	cbnz	r3, 800e212 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800e208:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e20c:	b90b      	cbnz	r3, 800e212 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800e20e:	f7ff ffd3 	bl	800e1b8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800e212:	6823      	ldr	r3, [r4, #0]
 800e214:	466d      	mov	r5, sp
 800e216:	4621      	mov	r1, r4
 800e218:	4628      	mov	r0, r5
 800e21a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800e21e:	4798      	blx	r3
 800e220:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800e224:	343c      	adds	r4, #60	; 0x3c
 800e226:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800e22a:	b005      	add	sp, #20
 800e22c:	bd30      	pop	{r4, r5, pc}

0800e22e <_ZNK8touchgfx3Box12getSolidRectEv>:
 800e22e:	2300      	movs	r3, #0
 800e230:	8083      	strh	r3, [r0, #4]
 800e232:	80c3      	strh	r3, [r0, #6]
 800e234:	8003      	strh	r3, [r0, #0]
 800e236:	8043      	strh	r3, [r0, #2]
 800e238:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800e23c:	2bff      	cmp	r3, #255	; 0xff
 800e23e:	bf01      	itttt	eq
 800e240:	890b      	ldrheq	r3, [r1, #8]
 800e242:	8083      	strheq	r3, [r0, #4]
 800e244:	894b      	ldrheq	r3, [r1, #10]
 800e246:	80c3      	strheq	r3, [r0, #6]
 800e248:	4770      	bx	lr
	...

0800e24c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800e24c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e24e:	4604      	mov	r4, r0
 800e250:	6808      	ldr	r0, [r1, #0]
 800e252:	6849      	ldr	r1, [r1, #4]
 800e254:	466b      	mov	r3, sp
 800e256:	c303      	stmia	r3!, {r0, r1}
 800e258:	6823      	ldr	r3, [r4, #0]
 800e25a:	4669      	mov	r1, sp
 800e25c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e25e:	4620      	mov	r0, r4
 800e260:	4798      	blx	r3
 800e262:	4b08      	ldr	r3, [pc, #32]	; (800e284 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800e264:	681b      	ldr	r3, [r3, #0]
 800e266:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e26a:	b10a      	cbz	r2, 800e270 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800e26c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800e26e:	b900      	cbnz	r0, 800e272 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800e270:	6898      	ldr	r0, [r3, #8]
 800e272:	6803      	ldr	r3, [r0, #0]
 800e274:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800e276:	6a1d      	ldr	r5, [r3, #32]
 800e278:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800e27c:	4669      	mov	r1, sp
 800e27e:	47a8      	blx	r5
 800e280:	b003      	add	sp, #12
 800e282:	bd30      	pop	{r4, r5, pc}
 800e284:	200155ac 	.word	0x200155ac

0800e288 <_ZN8touchgfx3BoxD1Ev>:
 800e288:	4770      	bx	lr

0800e28a <_ZN8touchgfx3BoxD0Ev>:
 800e28a:	b510      	push	{r4, lr}
 800e28c:	212c      	movs	r1, #44	; 0x2c
 800e28e:	4604      	mov	r4, r0
 800e290:	f012 f9fa 	bl	8020688 <_ZdlPvj>
 800e294:	4620      	mov	r0, r4
 800e296:	bd10      	pop	{r4, pc}

0800e298 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800e298:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 800e29c:	b12a      	cbz	r2, 800e2aa <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800e29e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800e2a2:	b112      	cbz	r2, 800e2aa <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800e2a4:	6803      	ldr	r3, [r0, #0]
 800e2a6:	695b      	ldr	r3, [r3, #20]
 800e2a8:	4718      	bx	r3
 800e2aa:	4770      	bx	lr

0800e2ac <_ZN8touchgfx6ButtonD1Ev>:
 800e2ac:	4770      	bx	lr

0800e2ae <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800e2ae:	b570      	push	{r4, r5, r6, lr}
 800e2b0:	880b      	ldrh	r3, [r1, #0]
 800e2b2:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800e2b4:	4605      	mov	r5, r0
 800e2b6:	8813      	ldrh	r3, [r2, #0]
 800e2b8:	f825 3f30 	strh.w	r3, [r5, #48]!
 800e2bc:	4604      	mov	r4, r0
 800e2be:	4628      	mov	r0, r5
 800e2c0:	f006 f8f6 	bl	80144b0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e2c4:	4606      	mov	r6, r0
 800e2c6:	4628      	mov	r0, r5
 800e2c8:	f006 f926 	bl	8014518 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e2cc:	6823      	ldr	r3, [r4, #0]
 800e2ce:	4605      	mov	r5, r0
 800e2d0:	4631      	mov	r1, r6
 800e2d2:	4620      	mov	r0, r4
 800e2d4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e2d6:	4798      	blx	r3
 800e2d8:	6823      	ldr	r3, [r4, #0]
 800e2da:	4629      	mov	r1, r5
 800e2dc:	4620      	mov	r0, r4
 800e2de:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e2e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e2e4:	4718      	bx	r3

0800e2e6 <_ZN8touchgfx6ButtonD0Ev>:
 800e2e6:	b510      	push	{r4, lr}
 800e2e8:	2134      	movs	r1, #52	; 0x34
 800e2ea:	4604      	mov	r4, r0
 800e2ec:	f012 f9cc 	bl	8020688 <_ZdlPvj>
 800e2f0:	4620      	mov	r0, r4
 800e2f2:	bd10      	pop	{r4, pc}

0800e2f4 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800e2f4:	b510      	push	{r4, lr}
 800e2f6:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800e2fa:	2bff      	cmp	r3, #255	; 0xff
 800e2fc:	4604      	mov	r4, r0
 800e2fe:	d006      	beq.n	800e30e <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800e300:	2300      	movs	r3, #0
 800e302:	8003      	strh	r3, [r0, #0]
 800e304:	8043      	strh	r3, [r0, #2]
 800e306:	8083      	strh	r3, [r0, #4]
 800e308:	80c3      	strh	r3, [r0, #6]
 800e30a:	4620      	mov	r0, r4
 800e30c:	bd10      	pop	{r4, pc}
 800e30e:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800e312:	b11b      	cbz	r3, 800e31c <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800e314:	3130      	adds	r1, #48	; 0x30
 800e316:	f006 f933 	bl	8014580 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800e31a:	e7f6      	b.n	800e30a <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800e31c:	312e      	adds	r1, #46	; 0x2e
 800e31e:	e7fa      	b.n	800e316 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

0800e320 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800e320:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e324:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800e328:	b08a      	sub	sp, #40	; 0x28
 800e32a:	4604      	mov	r4, r0
 800e32c:	4688      	mov	r8, r1
 800e32e:	2b00      	cmp	r3, #0
 800e330:	d066      	beq.n	800e400 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800e332:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800e334:	f8ad 3014 	strh.w	r3, [sp, #20]
 800e338:	a805      	add	r0, sp, #20
 800e33a:	f006 f8b9 	bl	80144b0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e33e:	4607      	mov	r7, r0
 800e340:	a805      	add	r0, sp, #20
 800e342:	f006 f8e9 	bl	8014518 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e346:	f9b8 6000 	ldrsh.w	r6, [r8]
 800e34a:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 800e34e:	4432      	add	r2, r6
 800e350:	b292      	uxth	r2, r2
 800e352:	2300      	movs	r3, #0
 800e354:	fa0f fc82 	sxth.w	ip, r2
 800e358:	459c      	cmp	ip, r3
 800e35a:	9306      	str	r3, [sp, #24]
 800e35c:	dd52      	ble.n	800e404 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e35e:	42b7      	cmp	r7, r6
 800e360:	dd50      	ble.n	800e404 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e362:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 800e366:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800e36a:	442b      	add	r3, r5
 800e36c:	b29b      	uxth	r3, r3
 800e36e:	b219      	sxth	r1, r3
 800e370:	2900      	cmp	r1, #0
 800e372:	dd47      	ble.n	800e404 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e374:	42a8      	cmp	r0, r5
 800e376:	dd45      	ble.n	800e404 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e378:	4567      	cmp	r7, ip
 800e37a:	bfb8      	it	lt
 800e37c:	b2ba      	uxthlt	r2, r7
 800e37e:	4288      	cmp	r0, r1
 800e380:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800e384:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800e388:	bfb8      	it	lt
 800e38a:	b283      	uxthlt	r3, r0
 800e38c:	1b92      	subs	r2, r2, r6
 800e38e:	1b5b      	subs	r3, r3, r5
 800e390:	f8ad 201c 	strh.w	r2, [sp, #28]
 800e394:	f8ad 301e 	strh.w	r3, [sp, #30]
 800e398:	f8ad 6018 	strh.w	r6, [sp, #24]
 800e39c:	f8ad 501a 	strh.w	r5, [sp, #26]
 800e3a0:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800e3a4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800e3a8:	429a      	cmp	r2, r3
 800e3aa:	d026      	beq.n	800e3fa <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800e3ac:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800e3b0:	2b00      	cmp	r3, #0
 800e3b2:	dd22      	ble.n	800e3fa <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800e3b4:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800e3b8:	2b00      	cmp	r3, #0
 800e3ba:	dd1e      	ble.n	800e3fa <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800e3bc:	2300      	movs	r3, #0
 800e3be:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800e3c2:	6823      	ldr	r3, [r4, #0]
 800e3c4:	a908      	add	r1, sp, #32
 800e3c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e3c8:	4620      	mov	r0, r4
 800e3ca:	4798      	blx	r3
 800e3cc:	4b0f      	ldr	r3, [pc, #60]	; (800e40c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 800e3ce:	681b      	ldr	r3, [r3, #0]
 800e3d0:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e3d4:	b10a      	cbz	r2, 800e3da <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 800e3d6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800e3d8:	b900      	cbnz	r0, 800e3dc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 800e3da:	6898      	ldr	r0, [r3, #8]
 800e3dc:	6801      	ldr	r1, [r0, #0]
 800e3de:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800e3e2:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800e3e6:	2501      	movs	r5, #1
 800e3e8:	9502      	str	r5, [sp, #8]
 800e3ea:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800e3ee:	9401      	str	r4, [sp, #4]
 800e3f0:	ac06      	add	r4, sp, #24
 800e3f2:	9400      	str	r4, [sp, #0]
 800e3f4:	688c      	ldr	r4, [r1, #8]
 800e3f6:	a905      	add	r1, sp, #20
 800e3f8:	47a0      	blx	r4
 800e3fa:	b00a      	add	sp, #40	; 0x28
 800e3fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e400:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800e402:	e797      	b.n	800e334 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800e404:	2300      	movs	r3, #0
 800e406:	9307      	str	r3, [sp, #28]
 800e408:	e7ca      	b.n	800e3a0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 800e40a:	bf00      	nop
 800e40c:	200155ac 	.word	0x200155ac

0800e410 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800e410:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e414:	4b2f      	ldr	r3, [pc, #188]	; (800e4d4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 800e416:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800e418:	881b      	ldrh	r3, [r3, #0]
 800e41a:	4293      	cmp	r3, r2
 800e41c:	b08d      	sub	sp, #52	; 0x34
 800e41e:	4604      	mov	r4, r0
 800e420:	460f      	mov	r7, r1
 800e422:	d954      	bls.n	800e4ce <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800e424:	4b2c      	ldr	r3, [pc, #176]	; (800e4d8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 800e426:	6819      	ldr	r1, [r3, #0]
 800e428:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 800e42c:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 800e430:	4a2a      	ldr	r2, [pc, #168]	; (800e4dc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 800e432:	6812      	ldr	r2, [r2, #0]
 800e434:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800e438:	2900      	cmp	r1, #0
 800e43a:	d048      	beq.n	800e4ce <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800e43c:	785a      	ldrb	r2, [r3, #1]
 800e43e:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 800e442:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800e446:	4b26      	ldr	r3, [pc, #152]	; (800e4e0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 800e448:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 800e44c:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 800e450:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 800e454:	6b26      	ldr	r6, [r4, #48]	; 0x30
 800e456:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 800e45a:	9107      	str	r1, [sp, #28]
 800e45c:	f3c2 0801 	ubfx	r8, r2, #0, #2
 800e460:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800e464:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 800e468:	681a      	ldr	r2, [r3, #0]
 800e46a:	f88d 8020 	strb.w	r8, [sp, #32]
 800e46e:	f892 3076 	ldrb.w	r3, [r2, #118]	; 0x76
 800e472:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 800e476:	9609      	str	r6, [sp, #36]	; 0x24
 800e478:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 800e47c:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 800e480:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 800e484:	b10b      	cbz	r3, 800e48a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 800e486:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 800e488:	b905      	cbnz	r5, 800e48c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 800e48a:	6895      	ldr	r5, [r2, #8]
 800e48c:	ae05      	add	r6, sp, #20
 800e48e:	4621      	mov	r1, r4
 800e490:	4630      	mov	r0, r6
 800e492:	f003 fe0f 	bl	80120b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e496:	4b13      	ldr	r3, [pc, #76]	; (800e4e4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 800e498:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800e49a:	6818      	ldr	r0, [r3, #0]
 800e49c:	f7f6 fc84 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800e4a0:	6823      	ldr	r3, [r4, #0]
 800e4a2:	4680      	mov	r8, r0
 800e4a4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e4a6:	4620      	mov	r0, r4
 800e4a8:	4798      	blx	r3
 800e4aa:	6823      	ldr	r3, [r4, #0]
 800e4ac:	4681      	mov	r9, r0
 800e4ae:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e4b2:	4620      	mov	r0, r4
 800e4b4:	4798      	blx	r3
 800e4b6:	e9cd 9002 	strd	r9, r0, [sp, #8]
 800e4ba:	ab07      	add	r3, sp, #28
 800e4bc:	9300      	str	r3, [sp, #0]
 800e4be:	f8cd 8004 	str.w	r8, [sp, #4]
 800e4c2:	463b      	mov	r3, r7
 800e4c4:	e896 0006 	ldmia.w	r6, {r1, r2}
 800e4c8:	4628      	mov	r0, r5
 800e4ca:	f7f6 fc1f 	bl	8004d0c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800e4ce:	b00d      	add	sp, #52	; 0x34
 800e4d0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e4d4:	20015608 	.word	0x20015608
 800e4d8:	20015604 	.word	0x20015604
 800e4dc:	2001560c 	.word	0x2001560c
 800e4e0:	200155ac 	.word	0x200155ac
 800e4e4:	20015610 	.word	0x20015610

0800e4e8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
 800e4e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e4ec:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800e4f0:	b0a0      	sub	sp, #128	; 0x80
 800e4f2:	4604      	mov	r4, r0
 800e4f4:	b193      	cbz	r3, 800e51c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e4f6:	4b30      	ldr	r3, [pc, #192]	; (800e5b8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd0>)
 800e4f8:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800e4fa:	881b      	ldrh	r3, [r3, #0]
 800e4fc:	428b      	cmp	r3, r1
 800e4fe:	d90d      	bls.n	800e51c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e500:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e504:	2b00      	cmp	r3, #0
 800e506:	dd09      	ble.n	800e51c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e508:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e50c:	2b00      	cmp	r3, #0
 800e50e:	dd05      	ble.n	800e51c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e510:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800e514:	b12b      	cbz	r3, 800e522 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x3a>
 800e516:	6803      	ldr	r3, [r0, #0]
 800e518:	695b      	ldr	r3, [r3, #20]
 800e51a:	4798      	blx	r3
 800e51c:	b020      	add	sp, #128	; 0x80
 800e51e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e522:	4b26      	ldr	r3, [pc, #152]	; (800e5bc <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd4>)
 800e524:	681b      	ldr	r3, [r3, #0]
 800e526:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800e52a:	4b25      	ldr	r3, [pc, #148]	; (800e5c0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd8>)
 800e52c:	681b      	ldr	r3, [r3, #0]
 800e52e:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800e532:	4b24      	ldr	r3, [pc, #144]	; (800e5c4 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xdc>)
 800e534:	6818      	ldr	r0, [r3, #0]
 800e536:	f7f6 fc37 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800e53a:	4606      	mov	r6, r0
 800e53c:	a807      	add	r0, sp, #28
 800e53e:	f004 fa6e 	bl	8012a1e <_ZN8touchgfx12TextProviderC1Ev>
 800e542:	682b      	ldr	r3, [r5, #0]
 800e544:	4628      	mov	r0, r5
 800e546:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e548:	4798      	blx	r3
 800e54a:	682b      	ldr	r3, [r5, #0]
 800e54c:	4607      	mov	r7, r0
 800e54e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800e550:	4628      	mov	r0, r5
 800e552:	4798      	blx	r3
 800e554:	6823      	ldr	r3, [r4, #0]
 800e556:	4605      	mov	r5, r0
 800e558:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e55a:	4620      	mov	r0, r4
 800e55c:	4798      	blx	r3
 800e55e:	6823      	ldr	r3, [r4, #0]
 800e560:	4680      	mov	r8, r0
 800e562:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e566:	4620      	mov	r0, r4
 800e568:	4798      	blx	r3
 800e56a:	462b      	mov	r3, r5
 800e56c:	e9cd 8000 	strd	r8, r0, [sp]
 800e570:	463a      	mov	r2, r7
 800e572:	a807      	add	r0, sp, #28
 800e574:	4631      	mov	r1, r6
 800e576:	f004 fac2 	bl	8012afe <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800e57a:	a807      	add	r0, sp, #28
 800e57c:	f004 fe7a 	bl	8013274 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e580:	280a      	cmp	r0, #10
 800e582:	d103      	bne.n	800e58c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xa4>
 800e584:	6823      	ldr	r3, [r4, #0]
 800e586:	4620      	mov	r0, r4
 800e588:	695b      	ldr	r3, [r3, #20]
 800e58a:	e7c6      	b.n	800e51a <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x32>
 800e58c:	a807      	add	r0, sp, #28
 800e58e:	f004 fe71 	bl	8013274 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e592:	2800      	cmp	r0, #0
 800e594:	d1f4      	bne.n	800e580 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x98>
 800e596:	ad04      	add	r5, sp, #16
 800e598:	4621      	mov	r1, r4
 800e59a:	4628      	mov	r0, r5
 800e59c:	f7ff fbaa 	bl	800dcf4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800e5a0:	e895 0003 	ldmia.w	r5, {r0, r1}
 800e5a4:	6822      	ldr	r2, [r4, #0]
 800e5a6:	ab02      	add	r3, sp, #8
 800e5a8:	e883 0003 	stmia.w	r3, {r0, r1}
 800e5ac:	6912      	ldr	r2, [r2, #16]
 800e5ae:	4619      	mov	r1, r3
 800e5b0:	4620      	mov	r0, r4
 800e5b2:	4790      	blx	r2
 800e5b4:	e7b2      	b.n	800e51c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e5b6:	bf00      	nop
 800e5b8:	20015608 	.word	0x20015608
 800e5bc:	20015604 	.word	0x20015604
 800e5c0:	2001560c 	.word	0x2001560c
 800e5c4:	20015610 	.word	0x20015610

0800e5c8 <_ZN8touchgfx13BoxWithBorderD1Ev>:
 800e5c8:	4770      	bx	lr

0800e5ca <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800e5ca:	b510      	push	{r4, lr}
 800e5cc:	2134      	movs	r1, #52	; 0x34
 800e5ce:	4604      	mov	r4, r0
 800e5d0:	f012 f85a 	bl	8020688 <_ZdlPvj>
 800e5d4:	4620      	mov	r0, r4
 800e5d6:	bd10      	pop	{r4, pc}

0800e5d8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 800e5d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e5dc:	4604      	mov	r4, r0
 800e5de:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800e5e0:	8962      	ldrh	r2, [r4, #10]
 800e5e2:	b218      	sxth	r0, r3
 800e5e4:	460e      	mov	r6, r1
 800e5e6:	005b      	lsls	r3, r3, #1
 800e5e8:	8921      	ldrh	r1, [r4, #8]
 800e5ea:	b29b      	uxth	r3, r3
 800e5ec:	1ac9      	subs	r1, r1, r3
 800e5ee:	b08e      	sub	sp, #56	; 0x38
 800e5f0:	b209      	sxth	r1, r1
 800e5f2:	1ad3      	subs	r3, r2, r3
 800e5f4:	b21b      	sxth	r3, r3
 800e5f6:	2900      	cmp	r1, #0
 800e5f8:	f8ad 0000 	strh.w	r0, [sp]
 800e5fc:	f8ad 0002 	strh.w	r0, [sp, #2]
 800e600:	f8ad 1004 	strh.w	r1, [sp, #4]
 800e604:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e608:	dd5e      	ble.n	800e6c8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800e60a:	2b00      	cmp	r3, #0
 800e60c:	dd5c      	ble.n	800e6c8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800e60e:	6830      	ldr	r0, [r6, #0]
 800e610:	6871      	ldr	r1, [r6, #4]
 800e612:	ab02      	add	r3, sp, #8
 800e614:	c303      	stmia	r3!, {r0, r1}
 800e616:	4669      	mov	r1, sp
 800e618:	a802      	add	r0, sp, #8
 800e61a:	f7fc fb87 	bl	800ad2c <_ZN8touchgfx4RectaNERKS0_>
 800e61e:	4620      	mov	r0, r4
 800e620:	a902      	add	r1, sp, #8
 800e622:	f7ff fe13 	bl	800e24c <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 800e626:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 800e628:	2800      	cmp	r0, #0
 800e62a:	d05f      	beq.n	800e6ec <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800e62c:	8963      	ldrh	r3, [r4, #10]
 800e62e:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800e632:	f8ad 101c 	strh.w	r1, [sp, #28]
 800e636:	1a1f      	subs	r7, r3, r0
 800e638:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 800e63c:	b202      	sxth	r2, r0
 800e63e:	2500      	movs	r5, #0
 800e640:	b21b      	sxth	r3, r3
 800e642:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800e646:	1a09      	subs	r1, r1, r0
 800e648:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800e64c:	9506      	str	r5, [sp, #24]
 800e64e:	f8ad 201e 	strh.w	r2, [sp, #30]
 800e652:	f8ad 5020 	strh.w	r5, [sp, #32]
 800e656:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800e65a:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 800e65e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 800e662:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800e666:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800e66a:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 800e66e:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 800e672:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800e676:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800e67a:	af04      	add	r7, sp, #16
 800e67c:	ab06      	add	r3, sp, #24
 800e67e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800e682:	e893 0003 	ldmia.w	r3, {r0, r1}
 800e686:	e887 0003 	stmia.w	r7, {r0, r1}
 800e68a:	4631      	mov	r1, r6
 800e68c:	4638      	mov	r0, r7
 800e68e:	f7fc fb4d 	bl	800ad2c <_ZN8touchgfx4RectaNERKS0_>
 800e692:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800e696:	2b00      	cmp	r3, #0
 800e698:	dd12      	ble.n	800e6c0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800e69a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800e69e:	2b00      	cmp	r3, #0
 800e6a0:	dd0e      	ble.n	800e6c0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800e6a2:	6823      	ldr	r3, [r4, #0]
 800e6a4:	4639      	mov	r1, r7
 800e6a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e6a8:	4620      	mov	r0, r4
 800e6aa:	4798      	blx	r3
 800e6ac:	f7f4 f814 	bl	80026d8 <_ZN8touchgfx3HAL3lcdEv>
 800e6b0:	6803      	ldr	r3, [r0, #0]
 800e6b2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800e6b4:	f8d3 8020 	ldr.w	r8, [r3, #32]
 800e6b8:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800e6bc:	4639      	mov	r1, r7
 800e6be:	47c0      	blx	r8
 800e6c0:	3501      	adds	r5, #1
 800e6c2:	2d04      	cmp	r5, #4
 800e6c4:	d1da      	bne.n	800e67c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 800e6c6:	e011      	b.n	800e6ec <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800e6c8:	6830      	ldr	r0, [r6, #0]
 800e6ca:	6871      	ldr	r1, [r6, #4]
 800e6cc:	ab06      	add	r3, sp, #24
 800e6ce:	c303      	stmia	r3!, {r0, r1}
 800e6d0:	6823      	ldr	r3, [r4, #0]
 800e6d2:	a906      	add	r1, sp, #24
 800e6d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e6d6:	4620      	mov	r0, r4
 800e6d8:	4798      	blx	r3
 800e6da:	f7f3 fffd 	bl	80026d8 <_ZN8touchgfx3HAL3lcdEv>
 800e6de:	6803      	ldr	r3, [r0, #0]
 800e6e0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800e6e2:	6a1d      	ldr	r5, [r3, #32]
 800e6e4:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800e6e8:	a906      	add	r1, sp, #24
 800e6ea:	47a8      	blx	r5
 800e6ec:	b00e      	add	sp, #56	; 0x38
 800e6ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e6f2 <_ZN8touchgfx5ImageD1Ev>:
 800e6f2:	4770      	bx	lr

0800e6f4 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800e6f4:	b570      	push	{r4, r5, r6, lr}
 800e6f6:	880b      	ldrh	r3, [r1, #0]
 800e6f8:	84c3      	strh	r3, [r0, #38]	; 0x26
 800e6fa:	4604      	mov	r4, r0
 800e6fc:	4608      	mov	r0, r1
 800e6fe:	460d      	mov	r5, r1
 800e700:	f005 fed6 	bl	80144b0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e704:	4606      	mov	r6, r0
 800e706:	4628      	mov	r0, r5
 800e708:	f005 ff06 	bl	8014518 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e70c:	6823      	ldr	r3, [r4, #0]
 800e70e:	4605      	mov	r5, r0
 800e710:	4631      	mov	r1, r6
 800e712:	4620      	mov	r0, r4
 800e714:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e716:	4798      	blx	r3
 800e718:	6823      	ldr	r3, [r4, #0]
 800e71a:	4629      	mov	r1, r5
 800e71c:	4620      	mov	r0, r4
 800e71e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e720:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e724:	4718      	bx	r3

0800e726 <_ZN8touchgfx5ImageD0Ev>:
 800e726:	b510      	push	{r4, lr}
 800e728:	212c      	movs	r1, #44	; 0x2c
 800e72a:	4604      	mov	r4, r0
 800e72c:	f011 ffac 	bl	8020688 <_ZdlPvj>
 800e730:	4620      	mov	r0, r4
 800e732:	bd10      	pop	{r4, pc}

0800e734 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800e734:	b510      	push	{r4, lr}
 800e736:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800e73a:	2bff      	cmp	r3, #255	; 0xff
 800e73c:	4604      	mov	r4, r0
 800e73e:	d006      	beq.n	800e74e <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800e740:	2300      	movs	r3, #0
 800e742:	8003      	strh	r3, [r0, #0]
 800e744:	8043      	strh	r3, [r0, #2]
 800e746:	8083      	strh	r3, [r0, #4]
 800e748:	80c3      	strh	r3, [r0, #6]
 800e74a:	4620      	mov	r0, r4
 800e74c:	bd10      	pop	{r4, pc}
 800e74e:	3126      	adds	r1, #38	; 0x26
 800e750:	f005 ff16 	bl	8014580 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800e754:	e7f9      	b.n	800e74a <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800e756 <_ZNK8touchgfx5Image17invalidateContentEv>:
 800e756:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 800e75a:	b12a      	cbz	r2, 800e768 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800e75c:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800e760:	b112      	cbz	r2, 800e768 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800e762:	6803      	ldr	r3, [r0, #0]
 800e764:	695b      	ldr	r3, [r3, #20]
 800e766:	4718      	bx	r3
 800e768:	4770      	bx	lr
	...

0800e76c <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800e76c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e770:	4604      	mov	r4, r0
 800e772:	b088      	sub	sp, #32
 800e774:	f854 3b26 	ldr.w	r3, [r4], #38
 800e778:	2500      	movs	r5, #0
 800e77a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e77c:	460f      	mov	r7, r1
 800e77e:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800e782:	a904      	add	r1, sp, #16
 800e784:	4606      	mov	r6, r0
 800e786:	4798      	blx	r3
 800e788:	4620      	mov	r0, r4
 800e78a:	f005 fe91 	bl	80144b0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e78e:	4680      	mov	r8, r0
 800e790:	4620      	mov	r0, r4
 800e792:	f005 fec1 	bl	8014518 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e796:	9506      	str	r5, [sp, #24]
 800e798:	ad06      	add	r5, sp, #24
 800e79a:	f8ad 001e 	strh.w	r0, [sp, #30]
 800e79e:	4639      	mov	r1, r7
 800e7a0:	4628      	mov	r0, r5
 800e7a2:	f8ad 801c 	strh.w	r8, [sp, #28]
 800e7a6:	f7fc fac1 	bl	800ad2c <_ZN8touchgfx4RectaNERKS0_>
 800e7aa:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800e7ae:	2b00      	cmp	r3, #0
 800e7b0:	dd19      	ble.n	800e7e6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800e7b2:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800e7b6:	2b00      	cmp	r3, #0
 800e7b8:	dd15      	ble.n	800e7e6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800e7ba:	4b0c      	ldr	r3, [pc, #48]	; (800e7ec <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800e7bc:	681b      	ldr	r3, [r3, #0]
 800e7be:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e7c2:	b10a      	cbz	r2, 800e7c8 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800e7c4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800e7c6:	b900      	cbnz	r0, 800e7ca <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800e7c8:	6898      	ldr	r0, [r3, #8]
 800e7ca:	6801      	ldr	r1, [r0, #0]
 800e7cc:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800e7d0:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800e7d4:	2701      	movs	r7, #1
 800e7d6:	9702      	str	r7, [sp, #8]
 800e7d8:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800e7dc:	e9cd 5600 	strd	r5, r6, [sp]
 800e7e0:	688d      	ldr	r5, [r1, #8]
 800e7e2:	4621      	mov	r1, r4
 800e7e4:	47a8      	blx	r5
 800e7e6:	b008      	add	sp, #32
 800e7e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e7ec:	200155ac 	.word	0x200155ac

0800e7f0 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 800e7f0:	4770      	bx	lr

0800e7f2 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 800e7f2:	b510      	push	{r4, lr}
 800e7f4:	2148      	movs	r1, #72	; 0x48
 800e7f6:	4604      	mov	r4, r0
 800e7f8:	f011 ff46 	bl	8020688 <_ZdlPvj>
 800e7fc:	4620      	mov	r0, r4
 800e7fe:	bd10      	pop	{r4, pc}

0800e800 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 800e800:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e804:	b08d      	sub	sp, #52	; 0x34
 800e806:	4604      	mov	r4, r0
 800e808:	4688      	mov	r8, r1
 800e80a:	f7ff fd89 	bl	800e320 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800e80e:	4a4d      	ldr	r2, [pc, #308]	; (800e944 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x144>)
 800e810:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800e812:	8812      	ldrh	r2, [r2, #0]
 800e814:	429a      	cmp	r2, r3
 800e816:	f240 8081 	bls.w	800e91c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800e81a:	4e4b      	ldr	r6, [pc, #300]	; (800e948 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x148>)
 800e81c:	6832      	ldr	r2, [r6, #0]
 800e81e:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800e822:	4b4a      	ldr	r3, [pc, #296]	; (800e94c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x14c>)
 800e824:	681b      	ldr	r3, [r3, #0]
 800e826:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 800e82a:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800e82e:	2300      	movs	r3, #0
 800e830:	e9cd 3303 	strd	r3, r3, [sp, #12]
 800e834:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e838:	2b03      	cmp	r3, #3
 800e83a:	d811      	bhi.n	800e860 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800e83c:	e8df f003 	tbb	[pc, r3]
 800e840:	71027102 	.word	0x71027102
 800e844:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800e848:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800e84c:	f8ad 1010 	strh.w	r1, [sp, #16]
 800e850:	1a9b      	subs	r3, r3, r2
 800e852:	2002      	movs	r0, #2
 800e854:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e858:	fb93 f3f0 	sdiv	r3, r3, r0
 800e85c:	f8ad 300e 	strh.w	r3, [sp, #14]
 800e860:	ad03      	add	r5, sp, #12
 800e862:	e895 0003 	ldmia.w	r5, {r0, r1}
 800e866:	f10d 0914 	add.w	r9, sp, #20
 800e86a:	e889 0003 	stmia.w	r9, {r0, r1}
 800e86e:	4641      	mov	r1, r8
 800e870:	4648      	mov	r0, r9
 800e872:	f7fc fa5b 	bl	800ad2c <_ZN8touchgfx4RectaNERKS0_>
 800e876:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800e87a:	2b00      	cmp	r3, #0
 800e87c:	dd4e      	ble.n	800e91c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800e87e:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800e882:	2b00      	cmp	r3, #0
 800e884:	dd4a      	ble.n	800e91c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800e886:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800e88a:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800e88e:	1a9b      	subs	r3, r3, r2
 800e890:	f8ad 3014 	strh.w	r3, [sp, #20]
 800e894:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800e898:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800e89c:	1a9b      	subs	r3, r3, r2
 800e89e:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e8a2:	6823      	ldr	r3, [r4, #0]
 800e8a4:	4629      	mov	r1, r5
 800e8a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e8a8:	4620      	mov	r0, r4
 800e8aa:	4798      	blx	r3
 800e8ac:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800e8b0:	2b00      	cmp	r3, #0
 800e8b2:	d045      	beq.n	800e940 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x140>
 800e8b4:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e8b6:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800e8b8:	6833      	ldr	r3, [r6, #0]
 800e8ba:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 800e8be:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 800e8c2:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800e8c6:	785b      	ldrb	r3, [r3, #1]
 800e8c8:	9209      	str	r2, [sp, #36]	; 0x24
 800e8ca:	f3c3 0601 	ubfx	r6, r3, #0, #2
 800e8ce:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800e8d2:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800e8d6:	2300      	movs	r3, #0
 800e8d8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800e8dc:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800e8e0:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800e8e4:	4b1a      	ldr	r3, [pc, #104]	; (800e950 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x150>)
 800e8e6:	9707      	str	r7, [sp, #28]
 800e8e8:	681b      	ldr	r3, [r3, #0]
 800e8ea:	f88d 6020 	strb.w	r6, [sp, #32]
 800e8ee:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e8f2:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800e8f6:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800e8fa:	b10a      	cbz	r2, 800e900 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x100>
 800e8fc:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 800e8fe:	b904      	cbnz	r4, 800e902 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 800e900:	689c      	ldr	r4, [r3, #8]
 800e902:	4b14      	ldr	r3, [pc, #80]	; (800e954 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x154>)
 800e904:	6818      	ldr	r0, [r3, #0]
 800e906:	f7f6 fa4f 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800e90a:	ab07      	add	r3, sp, #28
 800e90c:	9001      	str	r0, [sp, #4]
 800e90e:	9300      	str	r3, [sp, #0]
 800e910:	e895 0006 	ldmia.w	r5, {r1, r2}
 800e914:	464b      	mov	r3, r9
 800e916:	4620      	mov	r0, r4
 800e918:	f7f6 f9f8 	bl	8004d0c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800e91c:	b00d      	add	sp, #52	; 0x34
 800e91e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e922:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800e926:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800e92a:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e92e:	1a9b      	subs	r3, r3, r2
 800e930:	2002      	movs	r0, #2
 800e932:	f8ad 1012 	strh.w	r1, [sp, #18]
 800e936:	fb93 f3f0 	sdiv	r3, r3, r0
 800e93a:	f8ad 300c 	strh.w	r3, [sp, #12]
 800e93e:	e78f      	b.n	800e860 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800e940:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800e942:	e7b8      	b.n	800e8b6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb6>
 800e944:	20015608 	.word	0x20015608
 800e948:	20015604 	.word	0x20015604
 800e94c:	2001560c 	.word	0x2001560c
 800e950:	200155ac 	.word	0x200155ac
 800e954:	20015610 	.word	0x20015610

0800e958 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 800e958:	b510      	push	{r4, lr}
 800e95a:	2101      	movs	r1, #1
 800e95c:	4c13      	ldr	r4, [pc, #76]	; (800e9ac <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 800e95e:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800e962:	2200      	movs	r2, #0
 800e964:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 800e968:	6004      	str	r4, [r0, #0]
 800e96a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800e96e:	4c10      	ldr	r4, [pc, #64]	; (800e9b0 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 800e970:	8082      	strh	r2, [r0, #4]
 800e972:	80c2      	strh	r2, [r0, #6]
 800e974:	8102      	strh	r2, [r0, #8]
 800e976:	8142      	strh	r2, [r0, #10]
 800e978:	8182      	strh	r2, [r0, #12]
 800e97a:	81c2      	strh	r2, [r0, #14]
 800e97c:	8202      	strh	r2, [r0, #16]
 800e97e:	8242      	strh	r2, [r0, #18]
 800e980:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800e984:	61c2      	str	r2, [r0, #28]
 800e986:	8402      	strh	r2, [r0, #32]
 800e988:	8442      	strh	r2, [r0, #34]	; 0x22
 800e98a:	6282      	str	r2, [r0, #40]	; 0x28
 800e98c:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800e990:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800e992:	8601      	strh	r1, [r0, #48]	; 0x30
 800e994:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 800e998:	6344      	str	r4, [r0, #52]	; 0x34
 800e99a:	8701      	strh	r1, [r0, #56]	; 0x38
 800e99c:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 800e9a0:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 800e9a4:	f880 2045 	strb.w	r2, [r0, #69]	; 0x45
 800e9a8:	bd10      	pop	{r4, pc}
 800e9aa:	bf00      	nop
 800e9ac:	080241bc 	.word	0x080241bc
 800e9b0:	080221bc 	.word	0x080221bc

0800e9b4 <_ZN8touchgfx7OutlineD1Ev>:
 800e9b4:	4770      	bx	lr

0800e9b6 <_ZN8touchgfx7OutlineD0Ev>:
 800e9b6:	b510      	push	{r4, lr}
 800e9b8:	2130      	movs	r1, #48	; 0x30
 800e9ba:	4604      	mov	r4, r0
 800e9bc:	f011 fe64 	bl	8020688 <_ZdlPvj>
 800e9c0:	4620      	mov	r0, r4
 800e9c2:	bd10      	pop	{r4, pc}

0800e9c4 <_ZN8touchgfx7Outline5resetEv>:
 800e9c4:	b510      	push	{r4, lr}
 800e9c6:	4604      	mov	r4, r0
 800e9c8:	f000 fe8c 	bl	800f6e4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 800e9cc:	60e0      	str	r0, [r4, #12]
 800e9ce:	f000 fe8f 	bl	800f6f0 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 800e9d2:	68e3      	ldr	r3, [r4, #12]
 800e9d4:	6123      	str	r3, [r4, #16]
 800e9d6:	08c0      	lsrs	r0, r0, #3
 800e9d8:	2200      	movs	r2, #0
 800e9da:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800e9de:	3801      	subs	r0, #1
 800e9e0:	6060      	str	r0, [r4, #4]
 800e9e2:	60a2      	str	r2, [r4, #8]
 800e9e4:	8019      	strh	r1, [r3, #0]
 800e9e6:	8059      	strh	r1, [r3, #2]
 800e9e8:	809a      	strh	r2, [r3, #4]
 800e9ea:	80da      	strh	r2, [r3, #6]
 800e9ec:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e9ee:	f023 0301 	bic.w	r3, r3, #1
 800e9f2:	f043 0302 	orr.w	r3, r3, #2
 800e9f6:	6263      	str	r3, [r4, #36]	; 0x24
 800e9f8:	bd10      	pop	{r4, pc}
	...

0800e9fc <_ZN8touchgfx7OutlineC1Ev>:
 800e9fc:	b510      	push	{r4, lr}
 800e9fe:	4b0a      	ldr	r3, [pc, #40]	; (800ea28 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 800ea00:	6003      	str	r3, [r0, #0]
 800ea02:	2300      	movs	r3, #0
 800ea04:	e9c0 3301 	strd	r3, r3, [r0, #4]
 800ea08:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800ea0c:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800ea10:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800ea14:	6243      	str	r3, [r0, #36]	; 0x24
 800ea16:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 800ea1a:	4604      	mov	r4, r0
 800ea1c:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 800ea20:	f7ff ffd0 	bl	800e9c4 <_ZN8touchgfx7Outline5resetEv>
 800ea24:	4620      	mov	r0, r4
 800ea26:	bd10      	pop	{r4, pc}
 800ea28:	08024230 	.word	0x08024230

0800ea2c <_ZN8touchgfx7Outline10renderLineEiiii>:
 800ea2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ea30:	b093      	sub	sp, #76	; 0x4c
 800ea32:	1156      	asrs	r6, r2, #5
 800ea34:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 800ea36:	9305      	str	r3, [sp, #20]
 800ea38:	f004 051f 	and.w	r5, r4, #31
 800ea3c:	1153      	asrs	r3, r2, #5
 800ea3e:	9504      	str	r5, [sp, #16]
 800ea40:	1165      	asrs	r5, r4, #5
 800ea42:	9303      	str	r3, [sp, #12]
 800ea44:	42ae      	cmp	r6, r5
 800ea46:	ea4f 1364 	mov.w	r3, r4, asr #5
 800ea4a:	9306      	str	r3, [sp, #24]
 800ea4c:	f002 031f 	and.w	r3, r2, #31
 800ea50:	f040 80f8 	bne.w	800ec44 <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 800ea54:	9c04      	ldr	r4, [sp, #16]
 800ea56:	9a05      	ldr	r2, [sp, #20]
 800ea58:	42a3      	cmp	r3, r4
 800ea5a:	ea4f 1e62 	mov.w	lr, r2, asr #5
 800ea5e:	6902      	ldr	r2, [r0, #16]
 800ea60:	d125      	bne.n	800eaae <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 800ea62:	f9b2 3000 	ldrsh.w	r3, [r2]
 800ea66:	459e      	cmp	lr, r3
 800ea68:	d103      	bne.n	800ea72 <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 800ea6a:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800ea6e:	429e      	cmp	r6, r3
 800ea70:	d035      	beq.n	800eade <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800ea72:	88d1      	ldrh	r1, [r2, #6]
 800ea74:	8893      	ldrh	r3, [r2, #4]
 800ea76:	430b      	orrs	r3, r1
 800ea78:	d010      	beq.n	800ea9c <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800ea7a:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800ea7e:	2b00      	cmp	r3, #0
 800ea80:	db0c      	blt.n	800ea9c <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800ea82:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800ea84:	428b      	cmp	r3, r1
 800ea86:	da09      	bge.n	800ea9c <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800ea88:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800ea8c:	428b      	cmp	r3, r1
 800ea8e:	bf38      	it	cc
 800ea90:	3208      	addcc	r2, #8
 800ea92:	f103 0301 	add.w	r3, r3, #1
 800ea96:	bf38      	it	cc
 800ea98:	6102      	strcc	r2, [r0, #16]
 800ea9a:	6083      	str	r3, [r0, #8]
 800ea9c:	6903      	ldr	r3, [r0, #16]
 800ea9e:	9a03      	ldr	r2, [sp, #12]
 800eaa0:	f8a3 e000 	strh.w	lr, [r3]
 800eaa4:	805a      	strh	r2, [r3, #2]
 800eaa6:	2200      	movs	r2, #0
 800eaa8:	809a      	strh	r2, [r3, #4]
 800eaaa:	80da      	strh	r2, [r3, #6]
 800eaac:	e017      	b.n	800eade <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800eaae:	9c05      	ldr	r4, [sp, #20]
 800eab0:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 800eab4:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 800eab8:	f004 041f 	and.w	r4, r4, #31
 800eabc:	114e      	asrs	r6, r1, #5
 800eabe:	9402      	str	r4, [sp, #8]
 800eac0:	9c04      	ldr	r4, [sp, #16]
 800eac2:	4576      	cmp	r6, lr
 800eac4:	f001 0c1f 	and.w	ip, r1, #31
 800eac8:	eba4 0403 	sub.w	r4, r4, r3
 800eacc:	d10a      	bne.n	800eae4 <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 800eace:	9b02      	ldr	r3, [sp, #8]
 800ead0:	449c      	add	ip, r3
 800ead2:	44a0      	add	r8, r4
 800ead4:	fb04 a40c 	mla	r4, r4, ip, sl
 800ead8:	f8a2 8004 	strh.w	r8, [r2, #4]
 800eadc:	80d4      	strh	r4, [r2, #6]
 800eade:	b013      	add	sp, #76	; 0x4c
 800eae0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800eae4:	9d05      	ldr	r5, [sp, #20]
 800eae6:	1a69      	subs	r1, r5, r1
 800eae8:	bf5b      	ittet	pl
 800eaea:	f1cc 0520 	rsbpl	r5, ip, #32
 800eaee:	436c      	mulpl	r4, r5
 800eaf0:	2500      	movmi	r5, #0
 800eaf2:	2520      	movpl	r5, #32
 800eaf4:	bf44      	itt	mi
 800eaf6:	fb04 f40c 	mulmi.w	r4, r4, ip
 800eafa:	4249      	negmi	r1, r1
 800eafc:	9501      	str	r5, [sp, #4]
 800eafe:	9f01      	ldr	r7, [sp, #4]
 800eb00:	fb94 f5f1 	sdiv	r5, r4, r1
 800eb04:	fb01 4415 	mls	r4, r1, r5, r4
 800eb08:	bf54      	ite	pl
 800eb0a:	f04f 0901 	movpl.w	r9, #1
 800eb0e:	f04f 39ff 	movmi.w	r9, #4294967295
 800eb12:	2c00      	cmp	r4, #0
 800eb14:	bfb8      	it	lt
 800eb16:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800eb1a:	44bc      	add	ip, r7
 800eb1c:	44a8      	add	r8, r5
 800eb1e:	fb05 ac0c 	mla	ip, r5, ip, sl
 800eb22:	f8a2 8004 	strh.w	r8, [r2, #4]
 800eb26:	f8a2 c006 	strh.w	ip, [r2, #6]
 800eb2a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800eb2e:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800eb32:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 800eb36:	bfb8      	it	lt
 800eb38:	1864      	addlt	r4, r4, r1
 800eb3a:	ea58 0202 	orrs.w	r2, r8, r2
 800eb3e:	444e      	add	r6, r9
 800eb40:	d011      	beq.n	800eb66 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800eb42:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800eb46:	f1b8 0f00 	cmp.w	r8, #0
 800eb4a:	db0c      	blt.n	800eb66 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800eb4c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800eb4e:	4590      	cmp	r8, r2
 800eb50:	da09      	bge.n	800eb66 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800eb52:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 800eb56:	4590      	cmp	r8, r2
 800eb58:	bf3c      	itt	cc
 800eb5a:	f10c 0208 	addcc.w	r2, ip, #8
 800eb5e:	6102      	strcc	r2, [r0, #16]
 800eb60:	f108 0201 	add.w	r2, r8, #1
 800eb64:	6082      	str	r2, [r0, #8]
 800eb66:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800eb6a:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800eb6e:	f8ac 6000 	strh.w	r6, [ip]
 800eb72:	2700      	movs	r7, #0
 800eb74:	45b6      	cmp	lr, r6
 800eb76:	f8ac 2002 	strh.w	r2, [ip, #2]
 800eb7a:	f8ac 7004 	strh.w	r7, [ip, #4]
 800eb7e:	f8ac 7006 	strh.w	r7, [ip, #6]
 800eb82:	442b      	add	r3, r5
 800eb84:	d04d      	beq.n	800ec22 <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 800eb86:	9f04      	ldr	r7, [sp, #16]
 800eb88:	1aff      	subs	r7, r7, r3
 800eb8a:	443d      	add	r5, r7
 800eb8c:	016d      	lsls	r5, r5, #5
 800eb8e:	fb95 f8f1 	sdiv	r8, r5, r1
 800eb92:	fb01 5518 	mls	r5, r1, r8, r5
 800eb96:	2d00      	cmp	r5, #0
 800eb98:	bfb8      	it	lt
 800eb9a:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800eb9e:	f108 0701 	add.w	r7, r8, #1
 800eba2:	bfb8      	it	lt
 800eba4:	186d      	addlt	r5, r5, r1
 800eba6:	1a64      	subs	r4, r4, r1
 800eba8:	9703      	str	r7, [sp, #12]
 800ebaa:	f04f 0a00 	mov.w	sl, #0
 800ebae:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ebb2:	1964      	adds	r4, r4, r5
 800ebb4:	bf58      	it	pl
 800ebb6:	9f03      	ldrpl	r7, [sp, #12]
 800ebb8:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800ebbc:	bf48      	it	mi
 800ebbe:	4647      	movmi	r7, r8
 800ebc0:	44bb      	add	fp, r7
 800ebc2:	f8ac b004 	strh.w	fp, [ip, #4]
 800ebc6:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800ebca:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800ebce:	f8ac b006 	strh.w	fp, [ip, #6]
 800ebd2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ebd6:	443b      	add	r3, r7
 800ebd8:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800ebdc:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800ebe0:	bf58      	it	pl
 800ebe2:	1a64      	subpl	r4, r4, r1
 800ebe4:	ea5b 0707 	orrs.w	r7, fp, r7
 800ebe8:	444e      	add	r6, r9
 800ebea:	d011      	beq.n	800ec10 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800ebec:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800ebf0:	f1bb 0f00 	cmp.w	fp, #0
 800ebf4:	db0c      	blt.n	800ec10 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800ebf6:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800ebf8:	45bb      	cmp	fp, r7
 800ebfa:	da09      	bge.n	800ec10 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800ebfc:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800ec00:	45bb      	cmp	fp, r7
 800ec02:	bf3c      	itt	cc
 800ec04:	f10c 0708 	addcc.w	r7, ip, #8
 800ec08:	6107      	strcc	r7, [r0, #16]
 800ec0a:	f10b 0701 	add.w	r7, fp, #1
 800ec0e:	6087      	str	r7, [r0, #8]
 800ec10:	6907      	ldr	r7, [r0, #16]
 800ec12:	45b6      	cmp	lr, r6
 800ec14:	803e      	strh	r6, [r7, #0]
 800ec16:	807a      	strh	r2, [r7, #2]
 800ec18:	f8a7 a004 	strh.w	sl, [r7, #4]
 800ec1c:	f8a7 a006 	strh.w	sl, [r7, #6]
 800ec20:	d1c5      	bne.n	800ebae <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 800ec22:	9a04      	ldr	r2, [sp, #16]
 800ec24:	1ad3      	subs	r3, r2, r3
 800ec26:	6902      	ldr	r2, [r0, #16]
 800ec28:	8891      	ldrh	r1, [r2, #4]
 800ec2a:	88d6      	ldrh	r6, [r2, #6]
 800ec2c:	4419      	add	r1, r3
 800ec2e:	8091      	strh	r1, [r2, #4]
 800ec30:	9902      	ldr	r1, [sp, #8]
 800ec32:	f101 0c20 	add.w	ip, r1, #32
 800ec36:	9901      	ldr	r1, [sp, #4]
 800ec38:	ebac 0c01 	sub.w	ip, ip, r1
 800ec3c:	fb03 630c 	mla	r3, r3, ip, r6
 800ec40:	80d3      	strh	r3, [r2, #6]
 800ec42:	e74c      	b.n	800eade <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800ec44:	9d05      	ldr	r5, [sp, #20]
 800ec46:	1aa2      	subs	r2, r4, r2
 800ec48:	eba5 0501 	sub.w	r5, r5, r1
 800ec4c:	9508      	str	r5, [sp, #32]
 800ec4e:	9202      	str	r2, [sp, #8]
 800ec50:	f140 8128 	bpl.w	800eea4 <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 800ec54:	9a03      	ldr	r2, [sp, #12]
 800ec56:	2a00      	cmp	r2, #0
 800ec58:	f6ff af41 	blt.w	800eade <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800ec5c:	9a02      	ldr	r2, [sp, #8]
 800ec5e:	4252      	negs	r2, r2
 800ec60:	9202      	str	r2, [sp, #8]
 800ec62:	9a06      	ldr	r2, [sp, #24]
 800ec64:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 800ec68:	f04f 34ff 	mov.w	r4, #4294967295
 800ec6c:	9206      	str	r2, [sp, #24]
 800ec6e:	462a      	mov	r2, r5
 800ec70:	940b      	str	r4, [sp, #44]	; 0x2c
 800ec72:	435a      	muls	r2, r3
 800ec74:	2400      	movs	r4, #0
 800ec76:	9d02      	ldr	r5, [sp, #8]
 800ec78:	9401      	str	r4, [sp, #4]
 800ec7a:	9c02      	ldr	r4, [sp, #8]
 800ec7c:	fb92 f4f4 	sdiv	r4, r2, r4
 800ec80:	fb05 2214 	mls	r2, r5, r4, r2
 800ec84:	2a00      	cmp	r2, #0
 800ec86:	9207      	str	r2, [sp, #28]
 800ec88:	bfbc      	itt	lt
 800ec8a:	1952      	addlt	r2, r2, r5
 800ec8c:	9207      	strlt	r2, [sp, #28]
 800ec8e:	9a01      	ldr	r2, [sp, #4]
 800ec90:	6905      	ldr	r5, [r0, #16]
 800ec92:	bfb8      	it	lt
 800ec94:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800ec98:	eb04 0901 	add.w	r9, r4, r1
 800ec9c:	429a      	cmp	r2, r3
 800ec9e:	ea4f 1669 	mov.w	r6, r9, asr #5
 800eca2:	f040 8112 	bne.w	800eeca <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 800eca6:	f9b5 3000 	ldrsh.w	r3, [r5]
 800ecaa:	429e      	cmp	r6, r3
 800ecac:	d104      	bne.n	800ecb8 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 800ecae:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800ecb2:	9a03      	ldr	r2, [sp, #12]
 800ecb4:	429a      	cmp	r2, r3
 800ecb6:	d01b      	beq.n	800ecf0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800ecb8:	88ea      	ldrh	r2, [r5, #6]
 800ecba:	88ab      	ldrh	r3, [r5, #4]
 800ecbc:	4313      	orrs	r3, r2
 800ecbe:	d010      	beq.n	800ece2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800ecc0:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800ecc4:	2a00      	cmp	r2, #0
 800ecc6:	db0c      	blt.n	800ece2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800ecc8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800ecca:	429a      	cmp	r2, r3
 800eccc:	da09      	bge.n	800ece2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800ecce:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 800ecd2:	429a      	cmp	r2, r3
 800ecd4:	bf38      	it	cc
 800ecd6:	3508      	addcc	r5, #8
 800ecd8:	f102 0201 	add.w	r2, r2, #1
 800ecdc:	bf38      	it	cc
 800ecde:	6105      	strcc	r5, [r0, #16]
 800ece0:	6082      	str	r2, [r0, #8]
 800ece2:	6903      	ldr	r3, [r0, #16]
 800ece4:	9a03      	ldr	r2, [sp, #12]
 800ece6:	805a      	strh	r2, [r3, #2]
 800ece8:	2200      	movs	r2, #0
 800ecea:	801e      	strh	r6, [r3, #0]
 800ecec:	809a      	strh	r2, [r3, #4]
 800ecee:	80da      	strh	r2, [r3, #6]
 800ecf0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ecf2:	9a03      	ldr	r2, [sp, #12]
 800ecf4:	6901      	ldr	r1, [r0, #16]
 800ecf6:	441a      	add	r2, r3
 800ecf8:	f9b1 3000 	ldrsh.w	r3, [r1]
 800ecfc:	42b3      	cmp	r3, r6
 800ecfe:	d103      	bne.n	800ed08 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 800ed00:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800ed04:	429a      	cmp	r2, r3
 800ed06:	d01a      	beq.n	800ed3e <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 800ed08:	88cc      	ldrh	r4, [r1, #6]
 800ed0a:	888b      	ldrh	r3, [r1, #4]
 800ed0c:	4323      	orrs	r3, r4
 800ed0e:	d010      	beq.n	800ed32 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800ed10:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800ed14:	2c00      	cmp	r4, #0
 800ed16:	db0c      	blt.n	800ed32 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800ed18:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800ed1a:	429c      	cmp	r4, r3
 800ed1c:	da09      	bge.n	800ed32 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800ed1e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800ed22:	429c      	cmp	r4, r3
 800ed24:	bf38      	it	cc
 800ed26:	3108      	addcc	r1, #8
 800ed28:	f104 0401 	add.w	r4, r4, #1
 800ed2c:	bf38      	it	cc
 800ed2e:	6101      	strcc	r1, [r0, #16]
 800ed30:	6084      	str	r4, [r0, #8]
 800ed32:	6903      	ldr	r3, [r0, #16]
 800ed34:	2100      	movs	r1, #0
 800ed36:	801e      	strh	r6, [r3, #0]
 800ed38:	805a      	strh	r2, [r3, #2]
 800ed3a:	8099      	strh	r1, [r3, #4]
 800ed3c:	80d9      	strh	r1, [r3, #6]
 800ed3e:	9b06      	ldr	r3, [sp, #24]
 800ed40:	4293      	cmp	r3, r2
 800ed42:	f000 8082 	beq.w	800ee4a <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 800ed46:	9b08      	ldr	r3, [sp, #32]
 800ed48:	9c02      	ldr	r4, [sp, #8]
 800ed4a:	9902      	ldr	r1, [sp, #8]
 800ed4c:	015b      	lsls	r3, r3, #5
 800ed4e:	fb93 f1f1 	sdiv	r1, r3, r1
 800ed52:	fb04 3311 	mls	r3, r4, r1, r3
 800ed56:	2b00      	cmp	r3, #0
 800ed58:	9103      	str	r1, [sp, #12]
 800ed5a:	9308      	str	r3, [sp, #32]
 800ed5c:	da04      	bge.n	800ed68 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 800ed5e:	1e4b      	subs	r3, r1, #1
 800ed60:	9303      	str	r3, [sp, #12]
 800ed62:	9b08      	ldr	r3, [sp, #32]
 800ed64:	4423      	add	r3, r4
 800ed66:	9308      	str	r3, [sp, #32]
 800ed68:	9b07      	ldr	r3, [sp, #28]
 800ed6a:	9902      	ldr	r1, [sp, #8]
 800ed6c:	1a5b      	subs	r3, r3, r1
 800ed6e:	9307      	str	r3, [sp, #28]
 800ed70:	9b01      	ldr	r3, [sp, #4]
 800ed72:	f1c3 0320 	rsb	r3, r3, #32
 800ed76:	930e      	str	r3, [sp, #56]	; 0x38
 800ed78:	990e      	ldr	r1, [sp, #56]	; 0x38
 800ed7a:	9b01      	ldr	r3, [sp, #4]
 800ed7c:	1a5b      	subs	r3, r3, r1
 800ed7e:	464f      	mov	r7, r9
 800ed80:	930a      	str	r3, [sp, #40]	; 0x28
 800ed82:	2600      	movs	r6, #0
 800ed84:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 800ed88:	185b      	adds	r3, r3, r1
 800ed8a:	bf58      	it	pl
 800ed8c:	9902      	ldrpl	r1, [sp, #8]
 800ed8e:	9307      	str	r3, [sp, #28]
 800ed90:	bf5d      	ittte	pl
 800ed92:	1a5b      	subpl	r3, r3, r1
 800ed94:	9307      	strpl	r3, [sp, #28]
 800ed96:	9b03      	ldrpl	r3, [sp, #12]
 800ed98:	9903      	ldrmi	r1, [sp, #12]
 800ed9a:	bf58      	it	pl
 800ed9c:	1c59      	addpl	r1, r3, #1
 800ed9e:	4489      	add	r9, r1
 800eda0:	2a00      	cmp	r2, #0
 800eda2:	ea4f 1a69 	mov.w	sl, r9, asr #5
 800eda6:	db2e      	blt.n	800ee06 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800eda8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800edaa:	4293      	cmp	r3, r2
 800edac:	dd2b      	ble.n	800ee06 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800edae:	9c01      	ldr	r4, [sp, #4]
 800edb0:	6905      	ldr	r5, [r0, #16]
 800edb2:	46a0      	mov	r8, r4
 800edb4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 800edb6:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 800edba:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 800edbe:	45a0      	cmp	r8, r4
 800edc0:	f040 814f 	bne.w	800f062 <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 800edc4:	f9b5 1000 	ldrsh.w	r1, [r5]
 800edc8:	4551      	cmp	r1, sl
 800edca:	d103      	bne.n	800edd4 <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 800edcc:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800edd0:	4291      	cmp	r1, r2
 800edd2:	d018      	beq.n	800ee06 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800edd4:	ea5c 010e 	orrs.w	r1, ip, lr
 800edd8:	d00f      	beq.n	800edfa <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800edda:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800edde:	2900      	cmp	r1, #0
 800ede0:	db0b      	blt.n	800edfa <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800ede2:	428b      	cmp	r3, r1
 800ede4:	dd09      	ble.n	800edfa <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800ede6:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 800edea:	4299      	cmp	r1, r3
 800edec:	bf38      	it	cc
 800edee:	3508      	addcc	r5, #8
 800edf0:	f101 0101 	add.w	r1, r1, #1
 800edf4:	bf38      	it	cc
 800edf6:	6105      	strcc	r5, [r0, #16]
 800edf8:	6081      	str	r1, [r0, #8]
 800edfa:	6903      	ldr	r3, [r0, #16]
 800edfc:	f8a3 a000 	strh.w	sl, [r3]
 800ee00:	805a      	strh	r2, [r3, #2]
 800ee02:	809e      	strh	r6, [r3, #4]
 800ee04:	80de      	strh	r6, [r3, #6]
 800ee06:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ee08:	6901      	ldr	r1, [r0, #16]
 800ee0a:	441a      	add	r2, r3
 800ee0c:	88cc      	ldrh	r4, [r1, #6]
 800ee0e:	888b      	ldrh	r3, [r1, #4]
 800ee10:	4323      	orrs	r3, r4
 800ee12:	d010      	beq.n	800ee36 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800ee14:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800ee18:	2c00      	cmp	r4, #0
 800ee1a:	db0c      	blt.n	800ee36 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800ee1c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800ee1e:	429c      	cmp	r4, r3
 800ee20:	da09      	bge.n	800ee36 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800ee22:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800ee26:	429c      	cmp	r4, r3
 800ee28:	bf38      	it	cc
 800ee2a:	3108      	addcc	r1, #8
 800ee2c:	f104 0401 	add.w	r4, r4, #1
 800ee30:	bf38      	it	cc
 800ee32:	6101      	strcc	r1, [r0, #16]
 800ee34:	6084      	str	r4, [r0, #8]
 800ee36:	6903      	ldr	r3, [r0, #16]
 800ee38:	f8a3 a000 	strh.w	sl, [r3]
 800ee3c:	805a      	strh	r2, [r3, #2]
 800ee3e:	809e      	strh	r6, [r3, #4]
 800ee40:	80de      	strh	r6, [r3, #6]
 800ee42:	9b06      	ldr	r3, [sp, #24]
 800ee44:	4293      	cmp	r3, r2
 800ee46:	464f      	mov	r7, r9
 800ee48:	d19c      	bne.n	800ed84 <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 800ee4a:	9b01      	ldr	r3, [sp, #4]
 800ee4c:	6907      	ldr	r7, [r0, #16]
 800ee4e:	f1c3 0620 	rsb	r6, r3, #32
 800ee52:	9b05      	ldr	r3, [sp, #20]
 800ee54:	ea4f 1e63 	mov.w	lr, r3, asr #5
 800ee58:	9b04      	ldr	r3, [sp, #16]
 800ee5a:	429e      	cmp	r6, r3
 800ee5c:	f040 81cc 	bne.w	800f1f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 800ee60:	f9b7 3000 	ldrsh.w	r3, [r7]
 800ee64:	459e      	cmp	lr, r3
 800ee66:	d104      	bne.n	800ee72 <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 800ee68:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800ee6c:	429a      	cmp	r2, r3
 800ee6e:	f43f ae36 	beq.w	800eade <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800ee72:	88f9      	ldrh	r1, [r7, #6]
 800ee74:	88bb      	ldrh	r3, [r7, #4]
 800ee76:	430b      	orrs	r3, r1
 800ee78:	d010      	beq.n	800ee9c <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800ee7a:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800ee7e:	2b00      	cmp	r3, #0
 800ee80:	db0c      	blt.n	800ee9c <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800ee82:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800ee84:	428b      	cmp	r3, r1
 800ee86:	da09      	bge.n	800ee9c <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800ee88:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800ee8c:	428b      	cmp	r3, r1
 800ee8e:	bf38      	it	cc
 800ee90:	3708      	addcc	r7, #8
 800ee92:	f103 0301 	add.w	r3, r3, #1
 800ee96:	bf38      	it	cc
 800ee98:	6107      	strcc	r7, [r0, #16]
 800ee9a:	6083      	str	r3, [r0, #8]
 800ee9c:	6903      	ldr	r3, [r0, #16]
 800ee9e:	f8a3 e000 	strh.w	lr, [r3]
 800eea2:	e5ff      	b.n	800eaa4 <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 800eea4:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800eea6:	9c03      	ldr	r4, [sp, #12]
 800eea8:	42a2      	cmp	r2, r4
 800eeaa:	f6ff ae18 	blt.w	800eade <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800eeae:	9c06      	ldr	r4, [sp, #24]
 800eeb0:	42a2      	cmp	r2, r4
 800eeb2:	bfb8      	it	lt
 800eeb4:	3201      	addlt	r2, #1
 800eeb6:	9c08      	ldr	r4, [sp, #32]
 800eeb8:	bfb8      	it	lt
 800eeba:	9206      	strlt	r2, [sp, #24]
 800eebc:	f1c3 0220 	rsb	r2, r3, #32
 800eec0:	4362      	muls	r2, r4
 800eec2:	2401      	movs	r4, #1
 800eec4:	940b      	str	r4, [sp, #44]	; 0x2c
 800eec6:	2420      	movs	r4, #32
 800eec8:	e6d5      	b.n	800ec76 <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 800eeca:	f009 021f 	and.w	r2, r9, #31
 800eece:	ea4f 1861 	mov.w	r8, r1, asr #5
 800eed2:	920c      	str	r2, [sp, #48]	; 0x30
 800eed4:	9a01      	ldr	r2, [sp, #4]
 800eed6:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 800eeda:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 800eede:	45b0      	cmp	r8, r6
 800eee0:	f001 011f 	and.w	r1, r1, #31
 800eee4:	eba2 0203 	sub.w	r2, r2, r3
 800eee8:	d108      	bne.n	800eefc <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 800eeea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800eeec:	4419      	add	r1, r3
 800eeee:	4496      	add	lr, r2
 800eef0:	fb02 a101 	mla	r1, r2, r1, sl
 800eef4:	f8a5 e004 	strh.w	lr, [r5, #4]
 800eef8:	80e9      	strh	r1, [r5, #6]
 800eefa:	e6f9      	b.n	800ecf0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800eefc:	2c00      	cmp	r4, #0
 800eefe:	f2c0 80a9 	blt.w	800f054 <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 800ef02:	2701      	movs	r7, #1
 800ef04:	f1c1 0c20 	rsb	ip, r1, #32
 800ef08:	970a      	str	r7, [sp, #40]	; 0x28
 800ef0a:	fb02 f20c 	mul.w	r2, r2, ip
 800ef0e:	2720      	movs	r7, #32
 800ef10:	9709      	str	r7, [sp, #36]	; 0x24
 800ef12:	fb92 fcf4 	sdiv	ip, r2, r4
 800ef16:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800ef18:	fb04 221c 	mls	r2, r4, ip, r2
 800ef1c:	2a00      	cmp	r2, #0
 800ef1e:	bfb8      	it	lt
 800ef20:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 800ef24:	4439      	add	r1, r7
 800ef26:	fb0c a101 	mla	r1, ip, r1, sl
 800ef2a:	80e9      	strh	r1, [r5, #6]
 800ef2c:	44e6      	add	lr, ip
 800ef2e:	990a      	ldr	r1, [sp, #40]	; 0x28
 800ef30:	f8a5 e004 	strh.w	lr, [r5, #4]
 800ef34:	eb08 0501 	add.w	r5, r8, r1
 800ef38:	6901      	ldr	r1, [r0, #16]
 800ef3a:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 800ef3e:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 800ef42:	bfb8      	it	lt
 800ef44:	1912      	addlt	r2, r2, r4
 800ef46:	ea58 070e 	orrs.w	r7, r8, lr
 800ef4a:	d010      	beq.n	800ef6e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800ef4c:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 800ef50:	f1be 0f00 	cmp.w	lr, #0
 800ef54:	db0b      	blt.n	800ef6e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800ef56:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800ef58:	45be      	cmp	lr, r7
 800ef5a:	da08      	bge.n	800ef6e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800ef5c:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800ef60:	45be      	cmp	lr, r7
 800ef62:	bf3c      	itt	cc
 800ef64:	3108      	addcc	r1, #8
 800ef66:	6101      	strcc	r1, [r0, #16]
 800ef68:	f10e 0101 	add.w	r1, lr, #1
 800ef6c:	6081      	str	r1, [r0, #8]
 800ef6e:	6901      	ldr	r1, [r0, #16]
 800ef70:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 800ef74:	800d      	strh	r5, [r1, #0]
 800ef76:	f04f 0e00 	mov.w	lr, #0
 800ef7a:	42ae      	cmp	r6, r5
 800ef7c:	f8a1 8002 	strh.w	r8, [r1, #2]
 800ef80:	f8a1 e004 	strh.w	lr, [r1, #4]
 800ef84:	f8a1 e006 	strh.w	lr, [r1, #6]
 800ef88:	4463      	add	r3, ip
 800ef8a:	d054      	beq.n	800f036 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 800ef8c:	9901      	ldr	r1, [sp, #4]
 800ef8e:	1ac9      	subs	r1, r1, r3
 800ef90:	4461      	add	r1, ip
 800ef92:	0149      	lsls	r1, r1, #5
 800ef94:	fb91 fef4 	sdiv	lr, r1, r4
 800ef98:	fb04 111e 	mls	r1, r4, lr, r1
 800ef9c:	2900      	cmp	r1, #0
 800ef9e:	bfb8      	it	lt
 800efa0:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 800efa4:	f10e 0701 	add.w	r7, lr, #1
 800efa8:	bfb8      	it	lt
 800efaa:	1909      	addlt	r1, r1, r4
 800efac:	1b12      	subs	r2, r2, r4
 800efae:	970d      	str	r7, [sp, #52]	; 0x34
 800efb0:	f8d0 a010 	ldr.w	sl, [r0, #16]
 800efb4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800efb6:	f8ba b004 	ldrh.w	fp, [sl, #4]
 800efba:	1852      	adds	r2, r2, r1
 800efbc:	bf54      	ite	pl
 800efbe:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 800efc2:	46f4      	movmi	ip, lr
 800efc4:	44e3      	add	fp, ip
 800efc6:	f8aa b004 	strh.w	fp, [sl, #4]
 800efca:	f8ba b006 	ldrh.w	fp, [sl, #6]
 800efce:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 800efd2:	f8aa b006 	strh.w	fp, [sl, #6]
 800efd6:	4463      	add	r3, ip
 800efd8:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800efdc:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800efe0:	f8bc a004 	ldrh.w	sl, [ip, #4]
 800efe4:	bf58      	it	pl
 800efe6:	1b12      	subpl	r2, r2, r4
 800efe8:	443d      	add	r5, r7
 800efea:	ea5b 070a 	orrs.w	r7, fp, sl
 800efee:	d014      	beq.n	800f01a <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800eff0:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 800eff4:	f1ba 0f00 	cmp.w	sl, #0
 800eff8:	db0f      	blt.n	800f01a <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800effa:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800effc:	45ba      	cmp	sl, r7
 800effe:	da0c      	bge.n	800f01a <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800f000:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 800f004:	45ba      	cmp	sl, r7
 800f006:	bf38      	it	cc
 800f008:	f10c 0c08 	addcc.w	ip, ip, #8
 800f00c:	f10a 0a01 	add.w	sl, sl, #1
 800f010:	bf38      	it	cc
 800f012:	f8c0 c010 	strcc.w	ip, [r0, #16]
 800f016:	f8c0 a008 	str.w	sl, [r0, #8]
 800f01a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f01e:	f04f 0700 	mov.w	r7, #0
 800f022:	42ae      	cmp	r6, r5
 800f024:	f8ac 5000 	strh.w	r5, [ip]
 800f028:	f8ac 8002 	strh.w	r8, [ip, #2]
 800f02c:	f8ac 7004 	strh.w	r7, [ip, #4]
 800f030:	f8ac 7006 	strh.w	r7, [ip, #6]
 800f034:	d1bc      	bne.n	800efb0 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 800f036:	6904      	ldr	r4, [r0, #16]
 800f038:	9a01      	ldr	r2, [sp, #4]
 800f03a:	990c      	ldr	r1, [sp, #48]	; 0x30
 800f03c:	1ad3      	subs	r3, r2, r3
 800f03e:	88a2      	ldrh	r2, [r4, #4]
 800f040:	441a      	add	r2, r3
 800f042:	80a2      	strh	r2, [r4, #4]
 800f044:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f046:	3120      	adds	r1, #32
 800f048:	1a89      	subs	r1, r1, r2
 800f04a:	88e2      	ldrh	r2, [r4, #6]
 800f04c:	fb03 2301 	mla	r3, r3, r1, r2
 800f050:	80e3      	strh	r3, [r4, #6]
 800f052:	e64d      	b.n	800ecf0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800f054:	f04f 37ff 	mov.w	r7, #4294967295
 800f058:	970a      	str	r7, [sp, #40]	; 0x28
 800f05a:	434a      	muls	r2, r1
 800f05c:	4264      	negs	r4, r4
 800f05e:	2700      	movs	r7, #0
 800f060:	e756      	b.n	800ef10 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 800f062:	ea4f 1867 	mov.w	r8, r7, asr #5
 800f066:	f009 031f 	and.w	r3, r9, #31
 800f06a:	45d0      	cmp	r8, sl
 800f06c:	f007 071f 	and.w	r7, r7, #31
 800f070:	930f      	str	r3, [sp, #60]	; 0x3c
 800f072:	fa1f fc8c 	uxth.w	ip, ip
 800f076:	fa1f fe8e 	uxth.w	lr, lr
 800f07a:	d10a      	bne.n	800f092 <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 800f07c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f07e:	449c      	add	ip, r3
 800f080:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800f082:	f8a5 c004 	strh.w	ip, [r5, #4]
 800f086:	441f      	add	r7, r3
 800f088:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f08a:	fb03 e707 	mla	r7, r3, r7, lr
 800f08e:	80ef      	strh	r7, [r5, #6]
 800f090:	e6b9      	b.n	800ee06 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800f092:	2900      	cmp	r1, #0
 800f094:	f2c0 80a8 	blt.w	800f1e8 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 800f098:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800f09a:	f1c7 0320 	rsb	r3, r7, #32
 800f09e:	4363      	muls	r3, r4
 800f0a0:	2401      	movs	r4, #1
 800f0a2:	940d      	str	r4, [sp, #52]	; 0x34
 800f0a4:	2420      	movs	r4, #32
 800f0a6:	940c      	str	r4, [sp, #48]	; 0x30
 800f0a8:	fb93 f4f1 	sdiv	r4, r3, r1
 800f0ac:	fb01 3b14 	mls	fp, r1, r4, r3
 800f0b0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f0b2:	f1bb 0f00 	cmp.w	fp, #0
 800f0b6:	bfb8      	it	lt
 800f0b8:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800f0bc:	441f      	add	r7, r3
 800f0be:	fb04 e707 	mla	r7, r4, r7, lr
 800f0c2:	44a4      	add	ip, r4
 800f0c4:	f8a5 c004 	strh.w	ip, [r5, #4]
 800f0c8:	80ef      	strh	r7, [r5, #6]
 800f0ca:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f0ce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f0d0:	f8bc e006 	ldrh.w	lr, [ip, #6]
 800f0d4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800f0d8:	bfb8      	it	lt
 800f0da:	448b      	addlt	fp, r1
 800f0dc:	eb08 0503 	add.w	r5, r8, r3
 800f0e0:	ea5e 0307 	orrs.w	r3, lr, r7
 800f0e4:	d011      	beq.n	800f10a <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800f0e6:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 800f0ea:	f1be 0f00 	cmp.w	lr, #0
 800f0ee:	db0c      	blt.n	800f10a <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800f0f0:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f0f2:	45be      	cmp	lr, r7
 800f0f4:	da09      	bge.n	800f10a <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800f0f6:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800f0fa:	45be      	cmp	lr, r7
 800f0fc:	bf3c      	itt	cc
 800f0fe:	f10c 0708 	addcc.w	r7, ip, #8
 800f102:	6107      	strcc	r7, [r0, #16]
 800f104:	f10e 0701 	add.w	r7, lr, #1
 800f108:	6087      	str	r7, [r0, #8]
 800f10a:	6907      	ldr	r7, [r0, #16]
 800f10c:	b213      	sxth	r3, r2
 800f10e:	9310      	str	r3, [sp, #64]	; 0x40
 800f110:	807b      	strh	r3, [r7, #2]
 800f112:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f114:	803d      	strh	r5, [r7, #0]
 800f116:	4555      	cmp	r5, sl
 800f118:	80be      	strh	r6, [r7, #4]
 800f11a:	80fe      	strh	r6, [r7, #6]
 800f11c:	eb04 0c03 	add.w	ip, r4, r3
 800f120:	d051      	beq.n	800f1c6 <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 800f122:	9b01      	ldr	r3, [sp, #4]
 800f124:	eba3 070c 	sub.w	r7, r3, ip
 800f128:	443c      	add	r4, r7
 800f12a:	0164      	lsls	r4, r4, #5
 800f12c:	fb94 f8f1 	sdiv	r8, r4, r1
 800f130:	fb01 4418 	mls	r4, r1, r8, r4
 800f134:	2c00      	cmp	r4, #0
 800f136:	bfb8      	it	lt
 800f138:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800f13c:	ebab 0301 	sub.w	r3, fp, r1
 800f140:	f108 0701 	add.w	r7, r8, #1
 800f144:	bfb8      	it	lt
 800f146:	1864      	addlt	r4, r4, r1
 800f148:	9309      	str	r3, [sp, #36]	; 0x24
 800f14a:	9711      	str	r7, [sp, #68]	; 0x44
 800f14c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f14e:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800f152:	191b      	adds	r3, r3, r4
 800f154:	bf58      	it	pl
 800f156:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 800f158:	f8be b004 	ldrh.w	fp, [lr, #4]
 800f15c:	9309      	str	r3, [sp, #36]	; 0x24
 800f15e:	bf48      	it	mi
 800f160:	4647      	movmi	r7, r8
 800f162:	44bb      	add	fp, r7
 800f164:	f8ae b004 	strh.w	fp, [lr, #4]
 800f168:	f8be b006 	ldrh.w	fp, [lr, #6]
 800f16c:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800f170:	f8ae b006 	strh.w	fp, [lr, #6]
 800f174:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800f178:	44bc      	add	ip, r7
 800f17a:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 800f17c:	f8be b006 	ldrh.w	fp, [lr, #6]
 800f180:	443d      	add	r5, r7
 800f182:	f8be 7004 	ldrh.w	r7, [lr, #4]
 800f186:	bf5c      	itt	pl
 800f188:	1a5b      	subpl	r3, r3, r1
 800f18a:	9309      	strpl	r3, [sp, #36]	; 0x24
 800f18c:	ea5b 0307 	orrs.w	r3, fp, r7
 800f190:	d011      	beq.n	800f1b6 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800f192:	f9be b002 	ldrsh.w	fp, [lr, #2]
 800f196:	f1bb 0f00 	cmp.w	fp, #0
 800f19a:	db0c      	blt.n	800f1b6 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800f19c:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f19e:	45bb      	cmp	fp, r7
 800f1a0:	da09      	bge.n	800f1b6 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800f1a2:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800f1a6:	45bb      	cmp	fp, r7
 800f1a8:	bf3c      	itt	cc
 800f1aa:	f10e 0708 	addcc.w	r7, lr, #8
 800f1ae:	6107      	strcc	r7, [r0, #16]
 800f1b0:	f10b 0701 	add.w	r7, fp, #1
 800f1b4:	6087      	str	r7, [r0, #8]
 800f1b6:	6907      	ldr	r7, [r0, #16]
 800f1b8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f1ba:	803d      	strh	r5, [r7, #0]
 800f1bc:	4555      	cmp	r5, sl
 800f1be:	807b      	strh	r3, [r7, #2]
 800f1c0:	80be      	strh	r6, [r7, #4]
 800f1c2:	80fe      	strh	r6, [r7, #6]
 800f1c4:	d1c2      	bne.n	800f14c <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 800f1c6:	9b01      	ldr	r3, [sp, #4]
 800f1c8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800f1ca:	eba3 0c0c 	sub.w	ip, r3, ip
 800f1ce:	6903      	ldr	r3, [r0, #16]
 800f1d0:	8899      	ldrh	r1, [r3, #4]
 800f1d2:	4461      	add	r1, ip
 800f1d4:	8099      	strh	r1, [r3, #4]
 800f1d6:	990c      	ldr	r1, [sp, #48]	; 0x30
 800f1d8:	3720      	adds	r7, #32
 800f1da:	1a7f      	subs	r7, r7, r1
 800f1dc:	88d9      	ldrh	r1, [r3, #6]
 800f1de:	fb0c 1c07 	mla	ip, ip, r7, r1
 800f1e2:	f8a3 c006 	strh.w	ip, [r3, #6]
 800f1e6:	e60e      	b.n	800ee06 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800f1e8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f1ea:	f04f 34ff 	mov.w	r4, #4294967295
 800f1ee:	940d      	str	r4, [sp, #52]	; 0x34
 800f1f0:	437b      	muls	r3, r7
 800f1f2:	4249      	negs	r1, r1
 800f1f4:	2400      	movs	r4, #0
 800f1f6:	e756      	b.n	800f0a6 <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 800f1f8:	9905      	ldr	r1, [sp, #20]
 800f1fa:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 800f1fe:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 800f202:	f001 011f 	and.w	r1, r1, #31
 800f206:	ea4f 1b69 	mov.w	fp, r9, asr #5
 800f20a:	9102      	str	r1, [sp, #8]
 800f20c:	9904      	ldr	r1, [sp, #16]
 800f20e:	45f3      	cmp	fp, lr
 800f210:	f009 0c1f 	and.w	ip, r9, #31
 800f214:	eba1 0406 	sub.w	r4, r1, r6
 800f218:	d108      	bne.n	800f22c <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 800f21a:	9b02      	ldr	r3, [sp, #8]
 800f21c:	449c      	add	ip, r3
 800f21e:	44a0      	add	r8, r4
 800f220:	fb04 a40c 	mla	r4, r4, ip, sl
 800f224:	f8a7 8004 	strh.w	r8, [r7, #4]
 800f228:	80fc      	strh	r4, [r7, #6]
 800f22a:	e458      	b.n	800eade <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800f22c:	9905      	ldr	r1, [sp, #20]
 800f22e:	ebb1 0109 	subs.w	r1, r1, r9
 800f232:	bf5b      	ittet	pl
 800f234:	f1cc 0520 	rsbpl	r5, ip, #32
 800f238:	436c      	mulpl	r4, r5
 800f23a:	2500      	movmi	r5, #0
 800f23c:	2520      	movpl	r5, #32
 800f23e:	bf44      	itt	mi
 800f240:	fb04 f40c 	mulmi.w	r4, r4, ip
 800f244:	4249      	negmi	r1, r1
 800f246:	9501      	str	r5, [sp, #4]
 800f248:	9b01      	ldr	r3, [sp, #4]
 800f24a:	fb94 f5f1 	sdiv	r5, r4, r1
 800f24e:	fb01 4415 	mls	r4, r1, r5, r4
 800f252:	bf54      	ite	pl
 800f254:	f04f 0901 	movpl.w	r9, #1
 800f258:	f04f 39ff 	movmi.w	r9, #4294967295
 800f25c:	2c00      	cmp	r4, #0
 800f25e:	bfb8      	it	lt
 800f260:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800f264:	449c      	add	ip, r3
 800f266:	44a8      	add	r8, r5
 800f268:	fb05 ac0c 	mla	ip, r5, ip, sl
 800f26c:	f8a7 8004 	strh.w	r8, [r7, #4]
 800f270:	f8a7 c006 	strh.w	ip, [r7, #6]
 800f274:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f278:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800f27c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800f280:	bfb8      	it	lt
 800f282:	1864      	addlt	r4, r4, r1
 800f284:	ea58 0707 	orrs.w	r7, r8, r7
 800f288:	eb0b 0309 	add.w	r3, fp, r9
 800f28c:	d011      	beq.n	800f2b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800f28e:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800f292:	f1b8 0f00 	cmp.w	r8, #0
 800f296:	db0c      	blt.n	800f2b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800f298:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f29a:	45b8      	cmp	r8, r7
 800f29c:	da09      	bge.n	800f2b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800f29e:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 800f2a2:	45b8      	cmp	r8, r7
 800f2a4:	bf3c      	itt	cc
 800f2a6:	f10c 0708 	addcc.w	r7, ip, #8
 800f2aa:	6107      	strcc	r7, [r0, #16]
 800f2ac:	f108 0701 	add.w	r7, r8, #1
 800f2b0:	6087      	str	r7, [r0, #8]
 800f2b2:	6907      	ldr	r7, [r0, #16]
 800f2b4:	f04f 0c00 	mov.w	ip, #0
 800f2b8:	b212      	sxth	r2, r2
 800f2ba:	459e      	cmp	lr, r3
 800f2bc:	803b      	strh	r3, [r7, #0]
 800f2be:	807a      	strh	r2, [r7, #2]
 800f2c0:	f8a7 c004 	strh.w	ip, [r7, #4]
 800f2c4:	f8a7 c006 	strh.w	ip, [r7, #6]
 800f2c8:	442e      	add	r6, r5
 800f2ca:	d04d      	beq.n	800f368 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 800f2cc:	9f04      	ldr	r7, [sp, #16]
 800f2ce:	1bbf      	subs	r7, r7, r6
 800f2d0:	443d      	add	r5, r7
 800f2d2:	016d      	lsls	r5, r5, #5
 800f2d4:	fb95 f8f1 	sdiv	r8, r5, r1
 800f2d8:	fb01 5518 	mls	r5, r1, r8, r5
 800f2dc:	4565      	cmp	r5, ip
 800f2de:	bfb8      	it	lt
 800f2e0:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800f2e4:	f108 0701 	add.w	r7, r8, #1
 800f2e8:	bfb8      	it	lt
 800f2ea:	186d      	addlt	r5, r5, r1
 800f2ec:	1a64      	subs	r4, r4, r1
 800f2ee:	9703      	str	r7, [sp, #12]
 800f2f0:	f04f 0a00 	mov.w	sl, #0
 800f2f4:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f2f8:	1964      	adds	r4, r4, r5
 800f2fa:	bf58      	it	pl
 800f2fc:	9f03      	ldrpl	r7, [sp, #12]
 800f2fe:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800f302:	bf48      	it	mi
 800f304:	4647      	movmi	r7, r8
 800f306:	44bb      	add	fp, r7
 800f308:	f8ac b004 	strh.w	fp, [ip, #4]
 800f30c:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f310:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800f314:	f8ac b006 	strh.w	fp, [ip, #6]
 800f318:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f31c:	443e      	add	r6, r7
 800f31e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f322:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800f326:	bf58      	it	pl
 800f328:	1a64      	subpl	r4, r4, r1
 800f32a:	ea5b 0707 	orrs.w	r7, fp, r7
 800f32e:	444b      	add	r3, r9
 800f330:	d011      	beq.n	800f356 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800f332:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800f336:	f1bb 0f00 	cmp.w	fp, #0
 800f33a:	db0c      	blt.n	800f356 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800f33c:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f33e:	45bb      	cmp	fp, r7
 800f340:	da09      	bge.n	800f356 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800f342:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800f346:	45bb      	cmp	fp, r7
 800f348:	bf3c      	itt	cc
 800f34a:	f10c 0708 	addcc.w	r7, ip, #8
 800f34e:	6107      	strcc	r7, [r0, #16]
 800f350:	f10b 0701 	add.w	r7, fp, #1
 800f354:	6087      	str	r7, [r0, #8]
 800f356:	6907      	ldr	r7, [r0, #16]
 800f358:	459e      	cmp	lr, r3
 800f35a:	803b      	strh	r3, [r7, #0]
 800f35c:	807a      	strh	r2, [r7, #2]
 800f35e:	f8a7 a004 	strh.w	sl, [r7, #4]
 800f362:	f8a7 a006 	strh.w	sl, [r7, #6]
 800f366:	d1c5      	bne.n	800f2f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 800f368:	9b04      	ldr	r3, [sp, #16]
 800f36a:	1b9e      	subs	r6, r3, r6
 800f36c:	6903      	ldr	r3, [r0, #16]
 800f36e:	889a      	ldrh	r2, [r3, #4]
 800f370:	4432      	add	r2, r6
 800f372:	809a      	strh	r2, [r3, #4]
 800f374:	9a02      	ldr	r2, [sp, #8]
 800f376:	f102 0c20 	add.w	ip, r2, #32
 800f37a:	9a01      	ldr	r2, [sp, #4]
 800f37c:	ebac 0c02 	sub.w	ip, ip, r2
 800f380:	88da      	ldrh	r2, [r3, #6]
 800f382:	fb06 260c 	mla	r6, r6, ip, r2
 800f386:	80de      	strh	r6, [r3, #6]
 800f388:	f7ff bba9 	b.w	800eade <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

0800f38c <_ZN8touchgfx7Outline6lineToEii>:
 800f38c:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f38e:	079b      	lsls	r3, r3, #30
 800f390:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f392:	460e      	mov	r6, r1
 800f394:	4615      	mov	r5, r2
 800f396:	d511      	bpl.n	800f3bc <_ZN8touchgfx7Outline6lineToEii+0x30>
 800f398:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 800f39c:	ea86 0701 	eor.w	r7, r6, r1
 800f3a0:	ea85 0302 	eor.w	r3, r5, r2
 800f3a4:	433b      	orrs	r3, r7
 800f3a6:	d009      	beq.n	800f3bc <_ZN8touchgfx7Outline6lineToEii+0x30>
 800f3a8:	4633      	mov	r3, r6
 800f3aa:	9500      	str	r5, [sp, #0]
 800f3ac:	f7ff fb3e 	bl	800ea2c <_ZN8touchgfx7Outline10renderLineEiiii>
 800f3b0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f3b2:	e9c0 6505 	strd	r6, r5, [r0, #20]
 800f3b6:	f043 0301 	orr.w	r3, r3, #1
 800f3ba:	6243      	str	r3, [r0, #36]	; 0x24
 800f3bc:	b003      	add	sp, #12
 800f3be:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f3c0 <_ZN8touchgfx7Outline6moveToEii>:
 800f3c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f3c2:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f3c4:	4615      	mov	r5, r2
 800f3c6:	079a      	lsls	r2, r3, #30
 800f3c8:	4604      	mov	r4, r0
 800f3ca:	460e      	mov	r6, r1
 800f3cc:	d401      	bmi.n	800f3d2 <_ZN8touchgfx7Outline6moveToEii+0x12>
 800f3ce:	f7ff faf9 	bl	800e9c4 <_ZN8touchgfx7Outline5resetEv>
 800f3d2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800f3d4:	07db      	lsls	r3, r3, #31
 800f3d6:	d504      	bpl.n	800f3e2 <_ZN8touchgfx7Outline6moveToEii+0x22>
 800f3d8:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 800f3dc:	4620      	mov	r0, r4
 800f3de:	f7ff ffd5 	bl	800f38c <_ZN8touchgfx7Outline6lineToEii>
 800f3e2:	6923      	ldr	r3, [r4, #16]
 800f3e4:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f3e8:	1170      	asrs	r0, r6, #5
 800f3ea:	4290      	cmp	r0, r2
 800f3ec:	ea4f 1165 	mov.w	r1, r5, asr #5
 800f3f0:	d103      	bne.n	800f3fa <_ZN8touchgfx7Outline6moveToEii+0x3a>
 800f3f2:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800f3f6:	4291      	cmp	r1, r2
 800f3f8:	d01a      	beq.n	800f430 <_ZN8touchgfx7Outline6moveToEii+0x70>
 800f3fa:	88df      	ldrh	r7, [r3, #6]
 800f3fc:	889a      	ldrh	r2, [r3, #4]
 800f3fe:	433a      	orrs	r2, r7
 800f400:	d010      	beq.n	800f424 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800f402:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800f406:	2a00      	cmp	r2, #0
 800f408:	db0c      	blt.n	800f424 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800f40a:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800f40c:	42ba      	cmp	r2, r7
 800f40e:	da09      	bge.n	800f424 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800f410:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 800f414:	42ba      	cmp	r2, r7
 800f416:	bf38      	it	cc
 800f418:	3308      	addcc	r3, #8
 800f41a:	f102 0201 	add.w	r2, r2, #1
 800f41e:	bf38      	it	cc
 800f420:	6123      	strcc	r3, [r4, #16]
 800f422:	60a2      	str	r2, [r4, #8]
 800f424:	6923      	ldr	r3, [r4, #16]
 800f426:	2200      	movs	r2, #0
 800f428:	8018      	strh	r0, [r3, #0]
 800f42a:	8059      	strh	r1, [r3, #2]
 800f42c:	809a      	strh	r2, [r3, #4]
 800f42e:	80da      	strh	r2, [r3, #6]
 800f430:	6166      	str	r6, [r4, #20]
 800f432:	e9c4 5606 	strd	r5, r6, [r4, #24]
 800f436:	6225      	str	r5, [r4, #32]
 800f438:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800f43a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 800f43a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f43e:	b0d0      	sub	sp, #320	; 0x140
 800f440:	466c      	mov	r4, sp
 800f442:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 800f446:	4627      	mov	r7, r4
 800f448:	1a0d      	subs	r5, r1, r0
 800f44a:	2d48      	cmp	r5, #72	; 0x48
 800f44c:	f100 0308 	add.w	r3, r0, #8
 800f450:	f340 80d5 	ble.w	800f5fe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800f454:	112d      	asrs	r5, r5, #4
 800f456:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 800f45a:	f9b0 9000 	ldrsh.w	r9, [r0]
 800f45e:	6816      	ldr	r6, [r2, #0]
 800f460:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 800f464:	6006      	str	r6, [r0, #0]
 800f466:	6856      	ldr	r6, [r2, #4]
 800f468:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800f46c:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800f470:	6046      	str	r6, [r0, #4]
 800f472:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800f476:	f8a2 8002 	strh.w	r8, [r2, #2]
 800f47a:	f8a2 e004 	strh.w	lr, [r2, #4]
 800f47e:	f8a2 c006 	strh.w	ip, [r2, #6]
 800f482:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800f486:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 800f48a:	4565      	cmp	r5, ip
 800f48c:	f1a1 0208 	sub.w	r2, r1, #8
 800f490:	db06      	blt.n	800f4a0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 800f492:	d119      	bne.n	800f4c8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800f494:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 800f498:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 800f49c:	42ae      	cmp	r6, r5
 800f49e:	dd13      	ble.n	800f4c8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800f4a0:	460e      	mov	r6, r1
 800f4a2:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 800f4a6:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800f4aa:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 800f4ae:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 800f4b2:	601d      	str	r5, [r3, #0]
 800f4b4:	6875      	ldr	r5, [r6, #4]
 800f4b6:	605d      	str	r5, [r3, #4]
 800f4b8:	f821 9c08 	strh.w	r9, [r1, #-8]
 800f4bc:	f821 cc06 	strh.w	ip, [r1, #-6]
 800f4c0:	f821 8c04 	strh.w	r8, [r1, #-4]
 800f4c4:	f821 ec02 	strh.w	lr, [r1, #-2]
 800f4c8:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800f4cc:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 800f4d0:	42ae      	cmp	r6, r5
 800f4d2:	db06      	blt.n	800f4e2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 800f4d4:	d116      	bne.n	800f504 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800f4d6:	f9b0 c000 	ldrsh.w	ip, [r0]
 800f4da:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 800f4de:	45ac      	cmp	ip, r5
 800f4e0:	da10      	bge.n	800f504 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800f4e2:	681d      	ldr	r5, [r3, #0]
 800f4e4:	f9b0 8000 	ldrsh.w	r8, [r0]
 800f4e8:	6005      	str	r5, [r0, #0]
 800f4ea:	685d      	ldr	r5, [r3, #4]
 800f4ec:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800f4f0:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800f4f4:	f8a0 8008 	strh.w	r8, [r0, #8]
 800f4f8:	6045      	str	r5, [r0, #4]
 800f4fa:	8146      	strh	r6, [r0, #10]
 800f4fc:	f8a0 e00c 	strh.w	lr, [r0, #12]
 800f500:	f8a0 c00e 	strh.w	ip, [r0, #14]
 800f504:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800f508:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800f50c:	4565      	cmp	r5, ip
 800f50e:	db06      	blt.n	800f51e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 800f510:	d119      	bne.n	800f546 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f512:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 800f516:	f9b0 5000 	ldrsh.w	r5, [r0]
 800f51a:	42ae      	cmp	r6, r5
 800f51c:	da13      	bge.n	800f546 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f51e:	460e      	mov	r6, r1
 800f520:	f9b0 9000 	ldrsh.w	r9, [r0]
 800f524:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800f528:	6005      	str	r5, [r0, #0]
 800f52a:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 800f52e:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 800f532:	6875      	ldr	r5, [r6, #4]
 800f534:	6045      	str	r5, [r0, #4]
 800f536:	f821 9c08 	strh.w	r9, [r1, #-8]
 800f53a:	f821 cc06 	strh.w	ip, [r1, #-6]
 800f53e:	f821 8c04 	strh.w	r8, [r1, #-4]
 800f542:	f821 ec02 	strh.w	lr, [r1, #-2]
 800f546:	3308      	adds	r3, #8
 800f548:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800f54c:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 800f550:	45e6      	cmp	lr, ip
 800f552:	dbf8      	blt.n	800f546 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f554:	d105      	bne.n	800f562 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800f556:	f9b3 6000 	ldrsh.w	r6, [r3]
 800f55a:	f9b0 5000 	ldrsh.w	r5, [r0]
 800f55e:	42ae      	cmp	r6, r5
 800f560:	dbf1      	blt.n	800f546 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f562:	4615      	mov	r5, r2
 800f564:	3a08      	subs	r2, #8
 800f566:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 800f56a:	45b4      	cmp	ip, r6
 800f56c:	dbf9      	blt.n	800f562 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800f56e:	d105      	bne.n	800f57c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 800f570:	f9b0 8000 	ldrsh.w	r8, [r0]
 800f574:	f9b2 6000 	ldrsh.w	r6, [r2]
 800f578:	45b0      	cmp	r8, r6
 800f57a:	dbf2      	blt.n	800f562 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800f57c:	4293      	cmp	r3, r2
 800f57e:	f1a5 0608 	sub.w	r6, r5, #8
 800f582:	d816      	bhi.n	800f5b2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 800f584:	f8d6 c000 	ldr.w	ip, [r6]
 800f588:	f9b3 a000 	ldrsh.w	sl, [r3]
 800f58c:	f8c3 c000 	str.w	ip, [r3]
 800f590:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 800f594:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 800f598:	f8d6 c004 	ldr.w	ip, [r6, #4]
 800f59c:	f8c3 c004 	str.w	ip, [r3, #4]
 800f5a0:	f825 ac08 	strh.w	sl, [r5, #-8]
 800f5a4:	f825 ec06 	strh.w	lr, [r5, #-6]
 800f5a8:	f825 9c04 	strh.w	r9, [r5, #-4]
 800f5ac:	f825 8c02 	strh.w	r8, [r5, #-2]
 800f5b0:	e7c9      	b.n	800f546 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f5b2:	f8d6 e000 	ldr.w	lr, [r6]
 800f5b6:	f9b0 a000 	ldrsh.w	sl, [r0]
 800f5ba:	f8c0 e000 	str.w	lr, [r0]
 800f5be:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 800f5c2:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 800f5c6:	f8d6 e004 	ldr.w	lr, [r6, #4]
 800f5ca:	f8c0 e004 	str.w	lr, [r0, #4]
 800f5ce:	f825 ac08 	strh.w	sl, [r5, #-8]
 800f5d2:	f825 cc06 	strh.w	ip, [r5, #-6]
 800f5d6:	f825 9c04 	strh.w	r9, [r5, #-4]
 800f5da:	f825 8c02 	strh.w	r8, [r5, #-2]
 800f5de:	1acd      	subs	r5, r1, r3
 800f5e0:	1a16      	subs	r6, r2, r0
 800f5e2:	10ed      	asrs	r5, r5, #3
 800f5e4:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 800f5e8:	bfb5      	itete	lt
 800f5ea:	e9c4 0200 	strdlt	r0, r2, [r4]
 800f5ee:	e9c4 3100 	strdge	r3, r1, [r4]
 800f5f2:	460a      	movlt	r2, r1
 800f5f4:	4603      	movge	r3, r0
 800f5f6:	3408      	adds	r4, #8
 800f5f8:	4618      	mov	r0, r3
 800f5fa:	4611      	mov	r1, r2
 800f5fc:	e724      	b.n	800f448 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800f5fe:	4299      	cmp	r1, r3
 800f600:	d928      	bls.n	800f654 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 800f602:	f1a3 0210 	sub.w	r2, r3, #16
 800f606:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 800f60a:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 800f60e:	45ac      	cmp	ip, r5
 800f610:	db06      	blt.n	800f620 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 800f612:	d11d      	bne.n	800f650 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800f614:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 800f618:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 800f61c:	42ae      	cmp	r6, r5
 800f61e:	da17      	bge.n	800f650 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800f620:	4615      	mov	r5, r2
 800f622:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 800f626:	f855 6f08 	ldr.w	r6, [r5, #8]!
 800f62a:	6116      	str	r6, [r2, #16]
 800f62c:	686e      	ldr	r6, [r5, #4]
 800f62e:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 800f632:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 800f636:	f8a2 9008 	strh.w	r9, [r2, #8]
 800f63a:	42a8      	cmp	r0, r5
 800f63c:	6156      	str	r6, [r2, #20]
 800f63e:	f8a2 c00a 	strh.w	ip, [r2, #10]
 800f642:	f8a2 800c 	strh.w	r8, [r2, #12]
 800f646:	f8a2 e00e 	strh.w	lr, [r2, #14]
 800f64a:	f1a2 0208 	sub.w	r2, r2, #8
 800f64e:	d1da      	bne.n	800f606 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 800f650:	3308      	adds	r3, #8
 800f652:	e7d4      	b.n	800f5fe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800f654:	42bc      	cmp	r4, r7
 800f656:	d903      	bls.n	800f660 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 800f658:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 800f65c:	3c08      	subs	r4, #8
 800f65e:	e6f3      	b.n	800f448 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800f660:	b050      	add	sp, #320	; 0x140
 800f662:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800f666 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 800f666:	b510      	push	{r4, lr}
 800f668:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f66a:	07da      	lsls	r2, r3, #31
 800f66c:	4604      	mov	r4, r0
 800f66e:	d507      	bpl.n	800f680 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 800f670:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 800f674:	f7ff fe8a 	bl	800f38c <_ZN8touchgfx7Outline6lineToEii>
 800f678:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f67a:	f023 0301 	bic.w	r3, r3, #1
 800f67e:	6243      	str	r3, [r0, #36]	; 0x24
 800f680:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800f682:	079b      	lsls	r3, r3, #30
 800f684:	d521      	bpl.n	800f6ca <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 800f686:	6923      	ldr	r3, [r4, #16]
 800f688:	88d9      	ldrh	r1, [r3, #6]
 800f68a:	889a      	ldrh	r2, [r3, #4]
 800f68c:	430a      	orrs	r2, r1
 800f68e:	d010      	beq.n	800f6b2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800f690:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800f694:	2a00      	cmp	r2, #0
 800f696:	db0c      	blt.n	800f6b2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800f698:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800f69a:	428a      	cmp	r2, r1
 800f69c:	da09      	bge.n	800f6b2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800f69e:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800f6a2:	4291      	cmp	r1, r2
 800f6a4:	bf88      	it	hi
 800f6a6:	3308      	addhi	r3, #8
 800f6a8:	f102 0201 	add.w	r2, r2, #1
 800f6ac:	bf88      	it	hi
 800f6ae:	6123      	strhi	r3, [r4, #16]
 800f6b0:	60a2      	str	r2, [r4, #8]
 800f6b2:	68a1      	ldr	r1, [r4, #8]
 800f6b4:	b129      	cbz	r1, 800f6c2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800f6b6:	6863      	ldr	r3, [r4, #4]
 800f6b8:	4299      	cmp	r1, r3
 800f6ba:	d802      	bhi.n	800f6c2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800f6bc:	68e0      	ldr	r0, [r4, #12]
 800f6be:	f7ff febc 	bl	800f43a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 800f6c2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800f6c4:	f023 0302 	bic.w	r3, r3, #2
 800f6c8:	6263      	str	r3, [r4, #36]	; 0x24
 800f6ca:	68e0      	ldr	r0, [r4, #12]
 800f6cc:	bd10      	pop	{r4, pc}
	...

0800f6d0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 800f6d0:	4b02      	ldr	r3, [pc, #8]	; (800f6dc <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 800f6d2:	6018      	str	r0, [r3, #0]
 800f6d4:	4b02      	ldr	r3, [pc, #8]	; (800f6e0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 800f6d6:	6019      	str	r1, [r3, #0]
 800f6d8:	4770      	bx	lr
 800f6da:	bf00      	nop
 800f6dc:	200155b4 	.word	0x200155b4
 800f6e0:	200155b8 	.word	0x200155b8

0800f6e4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 800f6e4:	4b01      	ldr	r3, [pc, #4]	; (800f6ec <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 800f6e6:	6818      	ldr	r0, [r3, #0]
 800f6e8:	4770      	bx	lr
 800f6ea:	bf00      	nop
 800f6ec:	200155b4 	.word	0x200155b4

0800f6f0 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 800f6f0:	4b01      	ldr	r3, [pc, #4]	; (800f6f8 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 800f6f2:	6818      	ldr	r0, [r3, #0]
 800f6f4:	4770      	bx	lr
 800f6f6:	bf00      	nop
 800f6f8:	200155b8 	.word	0x200155b8

0800f6fc <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800f6fc:	b510      	push	{r4, lr}
 800f6fe:	6803      	ldr	r3, [r0, #0]
 800f700:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f702:	460c      	mov	r4, r1
 800f704:	4798      	blx	r3
 800f706:	1b03      	subs	r3, r0, r4
 800f708:	4258      	negs	r0, r3
 800f70a:	4158      	adcs	r0, r3
 800f70c:	bd10      	pop	{r4, pc}
	...

0800f710 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800f710:	4b01      	ldr	r3, [pc, #4]	; (800f718 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800f712:	6019      	str	r1, [r3, #0]
 800f714:	4770      	bx	lr
 800f716:	bf00      	nop
 800f718:	200155bc 	.word	0x200155bc

0800f71c <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800f71c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f720:	4696      	mov	lr, r2
 800f722:	4605      	mov	r5, r0
 800f724:	4614      	mov	r4, r2
 800f726:	460e      	mov	r6, r1
 800f728:	461f      	mov	r7, r3
 800f72a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f72e:	b097      	sub	sp, #92	; 0x5c
 800f730:	f10d 0c1c 	add.w	ip, sp, #28
 800f734:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f738:	f8de 3000 	ldr.w	r3, [lr]
 800f73c:	f8cc 3000 	str.w	r3, [ip]
 800f740:	f104 0e14 	add.w	lr, r4, #20
 800f744:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f748:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800f74c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f750:	f8de 3000 	ldr.w	r3, [lr]
 800f754:	f8cc 3000 	str.w	r3, [ip]
 800f758:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800f75c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f760:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800f764:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f768:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800f76c:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800f770:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800f774:	f8de 3000 	ldr.w	r3, [lr]
 800f778:	f8cc 3000 	str.w	r3, [ip]
 800f77c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800f77e:	682b      	ldr	r3, [r5, #0]
 800f780:	9201      	str	r2, [sp, #4]
 800f782:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800f786:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800f788:	9200      	str	r2, [sp, #0]
 800f78a:	f8cd 8008 	str.w	r8, [sp, #8]
 800f78e:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 800f792:	aa07      	add	r2, sp, #28
 800f794:	463b      	mov	r3, r7
 800f796:	4631      	mov	r1, r6
 800f798:	4628      	mov	r0, r5
 800f79a:	47d8      	blx	fp
 800f79c:	46a6      	mov	lr, r4
 800f79e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f7a2:	f10d 0c1c 	add.w	ip, sp, #28
 800f7a6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f7aa:	f8de 3000 	ldr.w	r3, [lr]
 800f7ae:	f8cc 3000 	str.w	r3, [ip]
 800f7b2:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800f7b6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f7ba:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800f7be:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f7c2:	343c      	adds	r4, #60	; 0x3c
 800f7c4:	f8de 3000 	ldr.w	r3, [lr]
 800f7c8:	f8cc 3000 	str.w	r3, [ip]
 800f7cc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800f7ce:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800f7d2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f7d6:	6823      	ldr	r3, [r4, #0]
 800f7d8:	f8cc 3000 	str.w	r3, [ip]
 800f7dc:	682b      	ldr	r3, [r5, #0]
 800f7de:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800f7e2:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800f7e4:	9201      	str	r2, [sp, #4]
 800f7e6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800f7e8:	9200      	str	r2, [sp, #0]
 800f7ea:	f8cd 8008 	str.w	r8, [sp, #8]
 800f7ee:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 800f7f0:	aa07      	add	r2, sp, #28
 800f7f2:	463b      	mov	r3, r7
 800f7f4:	4631      	mov	r1, r6
 800f7f6:	4628      	mov	r0, r5
 800f7f8:	47a0      	blx	r4
 800f7fa:	b017      	add	sp, #92	; 0x5c
 800f7fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f800 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800f800:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f804:	b08d      	sub	sp, #52	; 0x34
 800f806:	4688      	mov	r8, r1
 800f808:	9916      	ldr	r1, [sp, #88]	; 0x58
 800f80a:	f8d3 c000 	ldr.w	ip, [r3]
 800f80e:	680f      	ldr	r7, [r1, #0]
 800f810:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800f814:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800f818:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800f81c:	edd3 6a07 	vldr	s13, [r3, #28]
 800f820:	9918      	ldr	r1, [sp, #96]	; 0x60
 800f822:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800f826:	f9b1 9000 	ldrsh.w	r9, [r1]
 800f82a:	f9ba 1000 	ldrsh.w	r1, [sl]
 800f82e:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800f832:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800f836:	eba7 070c 	sub.w	r7, r7, ip
 800f83a:	42bc      	cmp	r4, r7
 800f83c:	bfa8      	it	ge
 800f83e:	463c      	movge	r4, r7
 800f840:	ee07 4a90 	vmov	s15, r4
 800f844:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800f848:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800f84c:	ee25 4a04 	vmul.f32	s8, s10, s8
 800f850:	ee65 4a24 	vmul.f32	s9, s10, s9
 800f854:	ee25 5a27 	vmul.f32	s10, s10, s15
 800f858:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800f85c:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800f860:	eb09 0e0c 	add.w	lr, r9, ip
 800f864:	4571      	cmp	r1, lr
 800f866:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800f86a:	ee32 1a05 	vadd.f32	s2, s4, s10
 800f86e:	ee36 0a84 	vadd.f32	s0, s13, s8
 800f872:	ee61 1a87 	vmul.f32	s3, s3, s14
 800f876:	ee22 2a07 	vmul.f32	s4, s4, s14
 800f87a:	f340 808d 	ble.w	800f998 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800f87e:	eba1 060e 	sub.w	r6, r1, lr
 800f882:	fb96 f5f4 	sdiv	r5, r6, r4
 800f886:	ee07 5a10 	vmov	s14, r5
 800f88a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f88e:	2d00      	cmp	r5, #0
 800f890:	fb04 6615 	mls	r6, r4, r5, r6
 800f894:	eea7 0a04 	vfma.f32	s0, s14, s8
 800f898:	eee7 0a24 	vfma.f32	s1, s14, s9
 800f89c:	eea7 1a05 	vfma.f32	s2, s14, s10
 800f8a0:	dd13      	ble.n	800f8ca <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800f8a2:	ee70 6a44 	vsub.f32	s13, s0, s8
 800f8a6:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800f8aa:	eef5 6a40 	vcmp.f32	s13, #0.0
 800f8ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f8b2:	bf18      	it	ne
 800f8b4:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800f8b8:	ee31 2a45 	vsub.f32	s4, s2, s10
 800f8bc:	bf08      	it	eq
 800f8be:	eeb0 7a67 	vmoveq.f32	s14, s15
 800f8c2:	ee61 1a87 	vmul.f32	s3, s3, s14
 800f8c6:	ee22 2a07 	vmul.f32	s4, s4, s14
 800f8ca:	fb05 f204 	mul.w	r2, r5, r4
 800f8ce:	1abf      	subs	r7, r7, r2
 800f8d0:	4494      	add	ip, r2
 800f8d2:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800f8d6:	4411      	add	r1, r2
 800f8d8:	eb09 020c 	add.w	r2, r9, ip
 800f8dc:	443a      	add	r2, r7
 800f8de:	b209      	sxth	r1, r1
 800f8e0:	428a      	cmp	r2, r1
 800f8e2:	bfc4      	itt	gt
 800f8e4:	eba1 0209 	subgt.w	r2, r1, r9
 800f8e8:	eba2 070c 	subgt.w	r7, r2, ip
 800f8ec:	2f00      	cmp	r7, #0
 800f8ee:	dd50      	ble.n	800f992 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800f8f0:	fb97 f1f4 	sdiv	r1, r7, r4
 800f8f4:	fb04 7211 	mls	r2, r4, r1, r7
 800f8f8:	b90a      	cbnz	r2, 800f8fe <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800f8fa:	3901      	subs	r1, #1
 800f8fc:	4622      	mov	r2, r4
 800f8fe:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800f902:	6840      	ldr	r0, [r0, #4]
 800f904:	900b      	str	r0, [sp, #44]	; 0x2c
 800f906:	f8d0 a000 	ldr.w	sl, [r0]
 800f90a:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800f90c:	9008      	str	r0, [sp, #32]
 800f90e:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800f912:	9818      	ldr	r0, [sp, #96]	; 0x60
 800f914:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800f918:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800f91c:	695b      	ldr	r3, [r3, #20]
 800f91e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800f920:	445b      	add	r3, fp
 800f922:	eef0 6a42 	vmov.f32	s13, s4
 800f926:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800f92a:	ee21 3a23 	vmul.f32	s6, s2, s7
 800f92e:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800f932:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f936:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800f93a:	9307      	str	r3, [sp, #28]
 800f93c:	ee17 7a90 	vmov	r7, s15
 800f940:	ee73 7a42 	vsub.f32	s15, s6, s4
 800f944:	eeb0 7a61 	vmov.f32	s14, s3
 800f948:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800f94c:	ee16 3a90 	vmov	r3, s13
 800f950:	fb97 f7f4 	sdiv	r7, r7, r4
 800f954:	ee17 ca90 	vmov	ip, s15
 800f958:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800f95c:	fb9c fcf4 	sdiv	ip, ip, r4
 800f960:	fb0c 3306 	mla	r3, ip, r6, r3
 800f964:	9302      	str	r3, [sp, #8]
 800f966:	ee17 3a10 	vmov	r3, s14
 800f96a:	44b6      	add	lr, r6
 800f96c:	fb04 e505 	mla	r5, r4, r5, lr
 800f970:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800f974:	fb07 3706 	mla	r7, r7, r6, r3
 800f978:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800f97c:	e9cd 4700 	strd	r4, r7, [sp]
 800f980:	2900      	cmp	r1, #0
 800f982:	bfcc      	ite	gt
 800f984:	46a1      	movgt	r9, r4
 800f986:	4691      	movle	r9, r2
 800f988:	eba9 0306 	sub.w	r3, r9, r6
 800f98c:	f8da 4008 	ldr.w	r4, [sl, #8]
 800f990:	47a0      	blx	r4
 800f992:	b00d      	add	sp, #52	; 0x34
 800f994:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f998:	2500      	movs	r5, #0
 800f99a:	462e      	mov	r6, r5
 800f99c:	e799      	b.n	800f8d2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800f9a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800f9a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f9a4:	b0db      	sub	sp, #364	; 0x16c
 800f9a6:	461d      	mov	r5, r3
 800f9a8:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800f9ac:	930a      	str	r3, [sp, #40]	; 0x28
 800f9ae:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800f9b2:	930b      	str	r3, [sp, #44]	; 0x2c
 800f9b4:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800f9b8:	9310      	str	r3, [sp, #64]	; 0x40
 800f9ba:	6803      	ldr	r3, [r0, #0]
 800f9bc:	910f      	str	r1, [sp, #60]	; 0x3c
 800f9be:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 800f9c0:	9009      	str	r0, [sp, #36]	; 0x24
 800f9c2:	4614      	mov	r4, r2
 800f9c4:	4629      	mov	r1, r5
 800f9c6:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800f9ca:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800f9ce:	47b8      	blx	r7
 800f9d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f9d2:	6058      	str	r0, [r3, #4]
 800f9d4:	2800      	cmp	r0, #0
 800f9d6:	f000 83a1 	beq.w	801011c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f9da:	682b      	ldr	r3, [r5, #0]
 800f9dc:	9314      	str	r3, [sp, #80]	; 0x50
 800f9de:	686b      	ldr	r3, [r5, #4]
 800f9e0:	9315      	str	r3, [sp, #84]	; 0x54
 800f9e2:	4bc4      	ldr	r3, [pc, #784]	; (800fcf4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800f9e4:	ed94 7a02 	vldr	s14, [r4, #8]
 800f9e8:	7819      	ldrb	r1, [r3, #0]
 800f9ea:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800f9ee:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800f9f2:	2900      	cmp	r1, #0
 800f9f4:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800f9f8:	bf16      	itet	ne
 800f9fa:	4619      	movne	r1, r3
 800f9fc:	4611      	moveq	r1, r2
 800f9fe:	4613      	movne	r3, r2
 800fa00:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fa04:	9116      	str	r1, [sp, #88]	; 0x58
 800fa06:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800fa0a:	f240 8387 	bls.w	801011c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fa0e:	ed94 7a07 	vldr	s14, [r4, #28]
 800fa12:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800fa16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fa1a:	f240 837f 	bls.w	801011c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fa1e:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800fa22:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800fa26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fa2a:	f240 8377 	bls.w	801011c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fa2e:	6822      	ldr	r2, [r4, #0]
 800fa30:	4bb1      	ldr	r3, [pc, #708]	; (800fcf8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800fa32:	429a      	cmp	r2, r3
 800fa34:	f2c0 8372 	blt.w	801011c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fa38:	49b0      	ldr	r1, [pc, #704]	; (800fcfc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800fa3a:	6963      	ldr	r3, [r4, #20]
 800fa3c:	428a      	cmp	r2, r1
 800fa3e:	f300 836d 	bgt.w	801011c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fa42:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800fa46:	48ae      	ldr	r0, [pc, #696]	; (800fd00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800fa48:	33ff      	adds	r3, #255	; 0xff
 800fa4a:	4283      	cmp	r3, r0
 800fa4c:	f200 8366 	bhi.w	801011c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fa50:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800fa52:	4dac      	ldr	r5, [pc, #688]	; (800fd04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800fa54:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800fa58:	33ff      	adds	r3, #255	; 0xff
 800fa5a:	42ab      	cmp	r3, r5
 800fa5c:	f200 835e 	bhi.w	801011c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fa60:	6862      	ldr	r2, [r4, #4]
 800fa62:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800fa66:	33ff      	adds	r3, #255	; 0xff
 800fa68:	4283      	cmp	r3, r0
 800fa6a:	f200 8357 	bhi.w	801011c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fa6e:	69a1      	ldr	r1, [r4, #24]
 800fa70:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800fa74:	33ff      	adds	r3, #255	; 0xff
 800fa76:	4283      	cmp	r3, r0
 800fa78:	f200 8350 	bhi.w	801011c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fa7c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800fa7e:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800fa82:	30ff      	adds	r0, #255	; 0xff
 800fa84:	42a8      	cmp	r0, r5
 800fa86:	f200 8349 	bhi.w	801011c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fa8a:	428a      	cmp	r2, r1
 800fa8c:	f280 8110 	bge.w	800fcb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800fa90:	429a      	cmp	r2, r3
 800fa92:	f300 8119 	bgt.w	800fcc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800fa96:	4299      	cmp	r1, r3
 800fa98:	f280 811d 	bge.w	800fcd6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800fa9c:	2502      	movs	r5, #2
 800fa9e:	2701      	movs	r7, #1
 800faa0:	46a9      	mov	r9, r5
 800faa2:	46b8      	mov	r8, r7
 800faa4:	f04f 0a00 	mov.w	sl, #0
 800faa8:	4621      	mov	r1, r4
 800faaa:	a849      	add	r0, sp, #292	; 0x124
 800faac:	f003 fcfe 	bl	80134ac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800fab0:	4622      	mov	r2, r4
 800fab2:	4653      	mov	r3, sl
 800fab4:	a949      	add	r1, sp, #292	; 0x124
 800fab6:	f8cd 9000 	str.w	r9, [sp]
 800faba:	a819      	add	r0, sp, #100	; 0x64
 800fabc:	f003 fe26 	bl	801370c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800fac0:	4622      	mov	r2, r4
 800fac2:	4653      	mov	r3, sl
 800fac4:	a949      	add	r1, sp, #292	; 0x124
 800fac6:	f8cd 8000 	str.w	r8, [sp]
 800faca:	a829      	add	r0, sp, #164	; 0xa4
 800facc:	f003 fe1e 	bl	801370c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800fad0:	4643      	mov	r3, r8
 800fad2:	4622      	mov	r2, r4
 800fad4:	a949      	add	r1, sp, #292	; 0x124
 800fad6:	f8cd 9000 	str.w	r9, [sp]
 800fada:	a839      	add	r0, sp, #228	; 0xe4
 800fadc:	f003 fe16 	bl	801370c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800fae0:	42af      	cmp	r7, r5
 800fae2:	bfb5      	itete	lt
 800fae4:	2300      	movlt	r3, #0
 800fae6:	2301      	movge	r3, #1
 800fae8:	930e      	strlt	r3, [sp, #56]	; 0x38
 800faea:	930e      	strge	r3, [sp, #56]	; 0x38
 800faec:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800faee:	e893 0003 	ldmia.w	r3, {r0, r1}
 800faf2:	af12      	add	r7, sp, #72	; 0x48
 800faf4:	bfb9      	ittee	lt
 800faf6:	ad29      	addlt	r5, sp, #164	; 0xa4
 800faf8:	ac19      	addlt	r4, sp, #100	; 0x64
 800fafa:	ad19      	addge	r5, sp, #100	; 0x64
 800fafc:	ac29      	addge	r4, sp, #164	; 0xa4
 800fafe:	e887 0003 	stmia.w	r7, {r0, r1}
 800fb02:	b928      	cbnz	r0, 800fb10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800fb04:	4b80      	ldr	r3, [pc, #512]	; (800fd08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800fb06:	6818      	ldr	r0, [r3, #0]
 800fb08:	6803      	ldr	r3, [r0, #0]
 800fb0a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800fb0c:	4798      	blx	r3
 800fb0e:	6038      	str	r0, [r7, #0]
 800fb10:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800fb12:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800fb16:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800fb1a:	930c      	str	r3, [sp, #48]	; 0x30
 800fb1c:	990c      	ldr	r1, [sp, #48]	; 0x30
 800fb1e:	6963      	ldr	r3, [r4, #20]
 800fb20:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800fb22:	440b      	add	r3, r1
 800fb24:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800fb28:	4408      	add	r0, r1
 800fb2a:	b200      	sxth	r0, r0
 800fb2c:	4283      	cmp	r3, r0
 800fb2e:	900d      	str	r0, [sp, #52]	; 0x34
 800fb30:	f280 80dd 	bge.w	800fcee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800fb34:	428b      	cmp	r3, r1
 800fb36:	da08      	bge.n	800fb4a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800fb38:	2a00      	cmp	r2, #0
 800fb3a:	dd06      	ble.n	800fb4a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800fb3c:	1acb      	subs	r3, r1, r3
 800fb3e:	429a      	cmp	r2, r3
 800fb40:	f2c0 80e4 	blt.w	800fd0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800fb44:	2b00      	cmp	r3, #0
 800fb46:	f300 80e2 	bgt.w	800fd0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800fb4a:	6967      	ldr	r7, [r4, #20]
 800fb4c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800fb4e:	443b      	add	r3, r7
 800fb50:	461f      	mov	r7, r3
 800fb52:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800fb54:	1bdf      	subs	r7, r3, r7
 800fb56:	4297      	cmp	r7, r2
 800fb58:	bfa8      	it	ge
 800fb5a:	4617      	movge	r7, r2
 800fb5c:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800fb60:	2f00      	cmp	r7, #0
 800fb62:	f340 8166 	ble.w	800fe32 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800fb66:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800fb68:	6829      	ldr	r1, [r5, #0]
 800fb6a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fb6e:	f9bb 3000 	ldrsh.w	r3, [fp]
 800fb72:	6820      	ldr	r0, [r4, #0]
 800fb74:	4411      	add	r1, r2
 800fb76:	4299      	cmp	r1, r3
 800fb78:	dd1a      	ble.n	800fbb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800fb7a:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800fb7e:	440b      	add	r3, r1
 800fb80:	4402      	add	r2, r0
 800fb82:	b21b      	sxth	r3, r3
 800fb84:	429a      	cmp	r2, r3
 800fb86:	dc13      	bgt.n	800fbb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800fb88:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fb8a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800fb8c:	681b      	ldr	r3, [r3, #0]
 800fb8e:	9206      	str	r2, [sp, #24]
 800fb90:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800fb92:	9205      	str	r2, [sp, #20]
 800fb94:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800fb96:	9500      	str	r5, [sp, #0]
 800fb98:	e9cd b203 	strd	fp, r2, [sp, #12]
 800fb9c:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800fb9e:	9809      	ldr	r0, [sp, #36]	; 0x24
 800fba0:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800fba4:	a912      	add	r1, sp, #72	; 0x48
 800fba6:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800fbaa:	aa49      	add	r2, sp, #292	; 0x124
 800fbac:	4623      	mov	r3, r4
 800fbae:	47c8      	blx	r9
 800fbb0:	e9d4 2300 	ldrd	r2, r3, [r4]
 800fbb4:	441a      	add	r2, r3
 800fbb6:	6963      	ldr	r3, [r4, #20]
 800fbb8:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800fbbc:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800fbc0:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800fbc4:	68a1      	ldr	r1, [r4, #8]
 800fbc6:	ed94 6a08 	vldr	s12, [r4, #32]
 800fbca:	6022      	str	r2, [r4, #0]
 800fbcc:	3301      	adds	r3, #1
 800fbce:	6163      	str	r3, [r4, #20]
 800fbd0:	69a3      	ldr	r3, [r4, #24]
 800fbd2:	ee37 7a27 	vadd.f32	s14, s14, s15
 800fbd6:	3b01      	subs	r3, #1
 800fbd8:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800fbdc:	61a3      	str	r3, [r4, #24]
 800fbde:	6923      	ldr	r3, [r4, #16]
 800fbe0:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800fbe4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fbe8:	edd4 6a07 	vldr	s13, [r4, #28]
 800fbec:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800fbf0:	440b      	add	r3, r1
 800fbf2:	68e1      	ldr	r1, [r4, #12]
 800fbf4:	6123      	str	r3, [r4, #16]
 800fbf6:	ee76 6a86 	vadd.f32	s13, s13, s12
 800fbfa:	428b      	cmp	r3, r1
 800fbfc:	edc4 6a07 	vstr	s13, [r4, #28]
 800fc00:	db15      	blt.n	800fc2e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800fc02:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800fc06:	ee76 6a26 	vadd.f32	s13, s12, s13
 800fc0a:	3201      	adds	r2, #1
 800fc0c:	edc4 6a07 	vstr	s13, [r4, #28]
 800fc10:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800fc14:	6022      	str	r2, [r4, #0]
 800fc16:	ee36 7a87 	vadd.f32	s14, s13, s14
 800fc1a:	1a5b      	subs	r3, r3, r1
 800fc1c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800fc20:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800fc24:	6123      	str	r3, [r4, #16]
 800fc26:	ee77 7a27 	vadd.f32	s15, s14, s15
 800fc2a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800fc2e:	e9d5 2300 	ldrd	r2, r3, [r5]
 800fc32:	441a      	add	r2, r3
 800fc34:	696b      	ldr	r3, [r5, #20]
 800fc36:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800fc3a:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800fc3e:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800fc42:	68a9      	ldr	r1, [r5, #8]
 800fc44:	ed95 6a08 	vldr	s12, [r5, #32]
 800fc48:	602a      	str	r2, [r5, #0]
 800fc4a:	3301      	adds	r3, #1
 800fc4c:	616b      	str	r3, [r5, #20]
 800fc4e:	69ab      	ldr	r3, [r5, #24]
 800fc50:	ee37 7a27 	vadd.f32	s14, s14, s15
 800fc54:	3b01      	subs	r3, #1
 800fc56:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800fc5a:	61ab      	str	r3, [r5, #24]
 800fc5c:	692b      	ldr	r3, [r5, #16]
 800fc5e:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800fc62:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fc66:	edd5 6a07 	vldr	s13, [r5, #28]
 800fc6a:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800fc6e:	440b      	add	r3, r1
 800fc70:	68e9      	ldr	r1, [r5, #12]
 800fc72:	612b      	str	r3, [r5, #16]
 800fc74:	ee76 6a86 	vadd.f32	s13, s13, s12
 800fc78:	428b      	cmp	r3, r1
 800fc7a:	edc5 6a07 	vstr	s13, [r5, #28]
 800fc7e:	db15      	blt.n	800fcac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800fc80:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800fc84:	ee76 6a26 	vadd.f32	s13, s12, s13
 800fc88:	3201      	adds	r2, #1
 800fc8a:	edc5 6a07 	vstr	s13, [r5, #28]
 800fc8e:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800fc92:	602a      	str	r2, [r5, #0]
 800fc94:	ee36 7a87 	vadd.f32	s14, s13, s14
 800fc98:	1a5b      	subs	r3, r3, r1
 800fc9a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800fc9e:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800fca2:	612b      	str	r3, [r5, #16]
 800fca4:	ee77 7a27 	vadd.f32	s15, s14, s15
 800fca8:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800fcac:	3f01      	subs	r7, #1
 800fcae:	e757      	b.n	800fb60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800fcb0:	4299      	cmp	r1, r3
 800fcb2:	dc13      	bgt.n	800fcdc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800fcb4:	429a      	cmp	r2, r3
 800fcb6:	da14      	bge.n	800fce2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800fcb8:	2502      	movs	r5, #2
 800fcba:	2703      	movs	r7, #3
 800fcbc:	46a9      	mov	r9, r5
 800fcbe:	f04f 0800 	mov.w	r8, #0
 800fcc2:	f04f 0a01 	mov.w	sl, #1
 800fcc6:	e6ef      	b.n	800faa8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800fcc8:	2501      	movs	r5, #1
 800fcca:	2700      	movs	r7, #0
 800fccc:	46a9      	mov	r9, r5
 800fcce:	46b8      	mov	r8, r7
 800fcd0:	f04f 0a02 	mov.w	sl, #2
 800fcd4:	e6e8      	b.n	800faa8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800fcd6:	2501      	movs	r5, #1
 800fcd8:	2702      	movs	r7, #2
 800fcda:	e6e1      	b.n	800faa0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800fcdc:	2500      	movs	r5, #0
 800fcde:	2701      	movs	r7, #1
 800fce0:	e7f4      	b.n	800fccc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800fce2:	2702      	movs	r7, #2
 800fce4:	2503      	movs	r5, #3
 800fce6:	f04f 0900 	mov.w	r9, #0
 800fcea:	46b8      	mov	r8, r7
 800fcec:	e7e9      	b.n	800fcc2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800fcee:	4613      	mov	r3, r2
 800fcf0:	e728      	b.n	800fb44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800fcf2:	bf00      	nop
 800fcf4:	200155a4 	.word	0x200155a4
 800fcf8:	fffd8f01 	.word	0xfffd8f01
 800fcfc:	00027100 	.word	0x00027100
 800fd00:	0004e1ff 	.word	0x0004e1ff
 800fd04:	0004e1fe 	.word	0x0004e1fe
 800fd08:	200155ac 	.word	0x200155ac
 800fd0c:	4613      	mov	r3, r2
 800fd0e:	992b      	ldr	r1, [sp, #172]	; 0xac
 800fd10:	9111      	str	r1, [sp, #68]	; 0x44
 800fd12:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800fd16:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800fd1a:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800fd1c:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800fd20:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800fd24:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800fd28:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800fd2c:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800fd30:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800fd34:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800fd38:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800fd3c:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800fd40:	469e      	mov	lr, r3
 800fd42:	469c      	mov	ip, r3
 800fd44:	f04f 0900 	mov.w	r9, #0
 800fd48:	f1bc 0f00 	cmp.w	ip, #0
 800fd4c:	d147      	bne.n	800fdde <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800fd4e:	eb03 0c07 	add.w	ip, r3, r7
 800fd52:	1ad7      	subs	r7, r2, r3
 800fd54:	f1b9 0f00 	cmp.w	r9, #0
 800fd58:	d009      	beq.n	800fd6e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800fd5a:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800fd5e:	9029      	str	r0, [sp, #164]	; 0xa4
 800fd60:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800fd64:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800fd68:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800fd6c:	912d      	str	r1, [sp, #180]	; 0xb4
 800fd6e:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800fd70:	9111      	str	r1, [sp, #68]	; 0x44
 800fd72:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800fd76:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800fd7a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800fd7e:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800fd82:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800fd86:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800fd8a:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800fd8e:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800fd92:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800fd96:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800fd9a:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800fd9e:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800fda2:	f04f 0800 	mov.w	r8, #0
 800fda6:	f1be 0f00 	cmp.w	lr, #0
 800fdaa:	d031      	beq.n	800fe10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800fdac:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800fdae:	4431      	add	r1, r6
 800fdb0:	4549      	cmp	r1, r9
 800fdb2:	4450      	add	r0, sl
 800fdb4:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800fdb8:	ee37 7a04 	vadd.f32	s14, s14, s8
 800fdbc:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800fdc0:	db08      	blt.n	800fdd4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800fdc2:	ee77 7a85 	vadd.f32	s15, s15, s10
 800fdc6:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800fdca:	ee37 7a06 	vadd.f32	s14, s14, s12
 800fdce:	3001      	adds	r0, #1
 800fdd0:	eba1 0109 	sub.w	r1, r1, r9
 800fdd4:	f10e 3eff 	add.w	lr, lr, #4294967295
 800fdd8:	f04f 0801 	mov.w	r8, #1
 800fddc:	e7e3      	b.n	800fda6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800fdde:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800fde0:	4431      	add	r1, r6
 800fde2:	4541      	cmp	r1, r8
 800fde4:	4450      	add	r0, sl
 800fde6:	ee37 7a24 	vadd.f32	s14, s14, s9
 800fdea:	ee77 7a84 	vadd.f32	s15, s15, s8
 800fdee:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800fdf2:	db08      	blt.n	800fe06 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800fdf4:	ee76 6a85 	vadd.f32	s13, s13, s10
 800fdf8:	ee37 7a25 	vadd.f32	s14, s14, s11
 800fdfc:	ee77 7a86 	vadd.f32	s15, s15, s12
 800fe00:	3001      	adds	r0, #1
 800fe02:	eba1 0108 	sub.w	r1, r1, r8
 800fe06:	f10c 3cff 	add.w	ip, ip, #4294967295
 800fe0a:	f04f 0901 	mov.w	r9, #1
 800fe0e:	e79b      	b.n	800fd48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800fe10:	449c      	add	ip, r3
 800fe12:	1aff      	subs	r7, r7, r3
 800fe14:	f1b8 0f00 	cmp.w	r8, #0
 800fe18:	d009      	beq.n	800fe2e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800fe1a:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800fe1e:	9019      	str	r0, [sp, #100]	; 0x64
 800fe20:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800fe24:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800fe28:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800fe2c:	911d      	str	r1, [sp, #116]	; 0x74
 800fe2e:	1ad2      	subs	r2, r2, r3
 800fe30:	e68b      	b.n	800fb4a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800fe32:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fe34:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800fe36:	2b00      	cmp	r3, #0
 800fe38:	f000 80d1 	beq.w	800ffde <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800fe3c:	ad19      	add	r5, sp, #100	; 0x64
 800fe3e:	ac39      	add	r4, sp, #228	; 0xe4
 800fe40:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800fe42:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800fe46:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800fe4a:	930c      	str	r3, [sp, #48]	; 0x30
 800fe4c:	990c      	ldr	r1, [sp, #48]	; 0x30
 800fe4e:	6963      	ldr	r3, [r4, #20]
 800fe50:	440b      	add	r3, r1
 800fe52:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800fe56:	4408      	add	r0, r1
 800fe58:	b200      	sxth	r0, r0
 800fe5a:	4283      	cmp	r3, r0
 800fe5c:	900d      	str	r0, [sp, #52]	; 0x34
 800fe5e:	f280 80c1 	bge.w	800ffe4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800fe62:	428b      	cmp	r3, r1
 800fe64:	da08      	bge.n	800fe78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800fe66:	2a00      	cmp	r2, #0
 800fe68:	dd06      	ble.n	800fe78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800fe6a:	1acb      	subs	r3, r1, r3
 800fe6c:	429a      	cmp	r2, r3
 800fe6e:	f2c0 80bb 	blt.w	800ffe8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800fe72:	2b00      	cmp	r3, #0
 800fe74:	f300 80b9 	bgt.w	800ffea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800fe78:	6967      	ldr	r7, [r4, #20]
 800fe7a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800fe7c:	443b      	add	r3, r7
 800fe7e:	461f      	mov	r7, r3
 800fe80:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800fe82:	1bdf      	subs	r7, r3, r7
 800fe84:	4297      	cmp	r7, r2
 800fe86:	bfa8      	it	ge
 800fe88:	4617      	movge	r7, r2
 800fe8a:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800fe8e:	2f00      	cmp	r7, #0
 800fe90:	f340 813c 	ble.w	801010c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800fe94:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800fe96:	6829      	ldr	r1, [r5, #0]
 800fe98:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fe9c:	f9bb 3000 	ldrsh.w	r3, [fp]
 800fea0:	6820      	ldr	r0, [r4, #0]
 800fea2:	4411      	add	r1, r2
 800fea4:	4299      	cmp	r1, r3
 800fea6:	dd1a      	ble.n	800fede <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800fea8:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800feac:	440b      	add	r3, r1
 800feae:	4402      	add	r2, r0
 800feb0:	b21b      	sxth	r3, r3
 800feb2:	429a      	cmp	r2, r3
 800feb4:	dc13      	bgt.n	800fede <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800feb6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800feb8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800feba:	681b      	ldr	r3, [r3, #0]
 800febc:	9206      	str	r2, [sp, #24]
 800febe:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800fec0:	9205      	str	r2, [sp, #20]
 800fec2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800fec4:	9500      	str	r5, [sp, #0]
 800fec6:	e9cd b203 	strd	fp, r2, [sp, #12]
 800feca:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800fecc:	9809      	ldr	r0, [sp, #36]	; 0x24
 800fece:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800fed2:	a912      	add	r1, sp, #72	; 0x48
 800fed4:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800fed8:	aa49      	add	r2, sp, #292	; 0x124
 800feda:	4623      	mov	r3, r4
 800fedc:	47c8      	blx	r9
 800fede:	e9d4 2300 	ldrd	r2, r3, [r4]
 800fee2:	441a      	add	r2, r3
 800fee4:	6963      	ldr	r3, [r4, #20]
 800fee6:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800feea:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800feee:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800fef2:	68a1      	ldr	r1, [r4, #8]
 800fef4:	ed94 6a08 	vldr	s12, [r4, #32]
 800fef8:	6022      	str	r2, [r4, #0]
 800fefa:	3301      	adds	r3, #1
 800fefc:	6163      	str	r3, [r4, #20]
 800fefe:	69a3      	ldr	r3, [r4, #24]
 800ff00:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ff04:	3b01      	subs	r3, #1
 800ff06:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800ff0a:	61a3      	str	r3, [r4, #24]
 800ff0c:	6923      	ldr	r3, [r4, #16]
 800ff0e:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800ff12:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ff16:	edd4 6a07 	vldr	s13, [r4, #28]
 800ff1a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800ff1e:	440b      	add	r3, r1
 800ff20:	68e1      	ldr	r1, [r4, #12]
 800ff22:	6123      	str	r3, [r4, #16]
 800ff24:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ff28:	428b      	cmp	r3, r1
 800ff2a:	edc4 6a07 	vstr	s13, [r4, #28]
 800ff2e:	db15      	blt.n	800ff5c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800ff30:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800ff34:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ff38:	3201      	adds	r2, #1
 800ff3a:	edc4 6a07 	vstr	s13, [r4, #28]
 800ff3e:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800ff42:	6022      	str	r2, [r4, #0]
 800ff44:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ff48:	1a5b      	subs	r3, r3, r1
 800ff4a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800ff4e:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800ff52:	6123      	str	r3, [r4, #16]
 800ff54:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ff58:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800ff5c:	e9d5 2300 	ldrd	r2, r3, [r5]
 800ff60:	441a      	add	r2, r3
 800ff62:	696b      	ldr	r3, [r5, #20]
 800ff64:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800ff68:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800ff6c:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800ff70:	68a9      	ldr	r1, [r5, #8]
 800ff72:	ed95 6a08 	vldr	s12, [r5, #32]
 800ff76:	602a      	str	r2, [r5, #0]
 800ff78:	3301      	adds	r3, #1
 800ff7a:	616b      	str	r3, [r5, #20]
 800ff7c:	69ab      	ldr	r3, [r5, #24]
 800ff7e:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ff82:	3b01      	subs	r3, #1
 800ff84:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800ff88:	61ab      	str	r3, [r5, #24]
 800ff8a:	692b      	ldr	r3, [r5, #16]
 800ff8c:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800ff90:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ff94:	edd5 6a07 	vldr	s13, [r5, #28]
 800ff98:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800ff9c:	440b      	add	r3, r1
 800ff9e:	68e9      	ldr	r1, [r5, #12]
 800ffa0:	612b      	str	r3, [r5, #16]
 800ffa2:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ffa6:	428b      	cmp	r3, r1
 800ffa8:	edc5 6a07 	vstr	s13, [r5, #28]
 800ffac:	db15      	blt.n	800ffda <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800ffae:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800ffb2:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ffb6:	3201      	adds	r2, #1
 800ffb8:	edc5 6a07 	vstr	s13, [r5, #28]
 800ffbc:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800ffc0:	602a      	str	r2, [r5, #0]
 800ffc2:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ffc6:	1a5b      	subs	r3, r3, r1
 800ffc8:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800ffcc:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800ffd0:	612b      	str	r3, [r5, #16]
 800ffd2:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ffd6:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800ffda:	3f01      	subs	r7, #1
 800ffdc:	e757      	b.n	800fe8e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800ffde:	ad39      	add	r5, sp, #228	; 0xe4
 800ffe0:	ac19      	add	r4, sp, #100	; 0x64
 800ffe2:	e72d      	b.n	800fe40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800ffe4:	4613      	mov	r3, r2
 800ffe6:	e744      	b.n	800fe72 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800ffe8:	4613      	mov	r3, r2
 800ffea:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 800ffee:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 800fff0:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 800fff4:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 800fff8:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 800fffc:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8010000:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8010004:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8010008:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 801000c:	993d      	ldr	r1, [sp, #244]	; 0xf4
 801000e:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8010012:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8010016:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 801001a:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 801001e:	960e      	str	r6, [sp, #56]	; 0x38
 8010020:	469e      	mov	lr, r3
 8010022:	461f      	mov	r7, r3
 8010024:	f04f 0900 	mov.w	r9, #0
 8010028:	2f00      	cmp	r7, #0
 801002a:	d146      	bne.n	80100ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 801002c:	449c      	add	ip, r3
 801002e:	1ad7      	subs	r7, r2, r3
 8010030:	f1b9 0f00 	cmp.w	r9, #0
 8010034:	d009      	beq.n	801004a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8010036:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 801003a:	9039      	str	r0, [sp, #228]	; 0xe4
 801003c:	913d      	str	r1, [sp, #244]	; 0xf4
 801003e:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8010042:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8010046:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 801004a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 801004c:	910e      	str	r1, [sp, #56]	; 0x38
 801004e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8010052:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8010056:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801005a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801005e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8010062:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8010066:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801006a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801006e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8010072:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8010076:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801007a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801007e:	f04f 0800 	mov.w	r8, #0
 8010082:	f1be 0f00 	cmp.w	lr, #0
 8010086:	d030      	beq.n	80100ea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8010088:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 801008a:	4431      	add	r1, r6
 801008c:	4549      	cmp	r1, r9
 801008e:	4450      	add	r0, sl
 8010090:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8010094:	ee37 7a04 	vadd.f32	s14, s14, s8
 8010098:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801009c:	db08      	blt.n	80100b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 801009e:	ee77 7a85 	vadd.f32	s15, s15, s10
 80100a2:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80100a6:	ee37 7a06 	vadd.f32	s14, s14, s12
 80100aa:	3001      	adds	r0, #1
 80100ac:	eba1 0109 	sub.w	r1, r1, r9
 80100b0:	f10e 3eff 	add.w	lr, lr, #4294967295
 80100b4:	f04f 0801 	mov.w	r8, #1
 80100b8:	e7e3      	b.n	8010082 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 80100ba:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80100bc:	4431      	add	r1, r6
 80100be:	4541      	cmp	r1, r8
 80100c0:	4450      	add	r0, sl
 80100c2:	ee37 7a24 	vadd.f32	s14, s14, s9
 80100c6:	ee77 7a84 	vadd.f32	s15, s15, s8
 80100ca:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80100ce:	db08      	blt.n	80100e2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 80100d0:	ee76 6a85 	vadd.f32	s13, s13, s10
 80100d4:	ee37 7a25 	vadd.f32	s14, s14, s11
 80100d8:	ee77 7a86 	vadd.f32	s15, s15, s12
 80100dc:	3001      	adds	r0, #1
 80100de:	eba1 0108 	sub.w	r1, r1, r8
 80100e2:	3f01      	subs	r7, #1
 80100e4:	f04f 0901 	mov.w	r9, #1
 80100e8:	e79e      	b.n	8010028 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 80100ea:	449c      	add	ip, r3
 80100ec:	1aff      	subs	r7, r7, r3
 80100ee:	f1b8 0f00 	cmp.w	r8, #0
 80100f2:	d009      	beq.n	8010108 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 80100f4:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 80100f8:	9019      	str	r0, [sp, #100]	; 0x64
 80100fa:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 80100fe:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8010102:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8010106:	911d      	str	r1, [sp, #116]	; 0x74
 8010108:	1ad2      	subs	r2, r2, r3
 801010a:	e6b5      	b.n	800fe78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801010c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801010e:	681b      	ldr	r3, [r3, #0]
 8010110:	b923      	cbnz	r3, 801011c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010112:	4b04      	ldr	r3, [pc, #16]	; (8010124 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8010114:	6818      	ldr	r0, [r3, #0]
 8010116:	6803      	ldr	r3, [r0, #0]
 8010118:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801011a:	4798      	blx	r3
 801011c:	b05b      	add	sp, #364	; 0x16c
 801011e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010122:	bf00      	nop
 8010124:	200155ac 	.word	0x200155ac

08010128 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 8010128:	b570      	push	{r4, r5, r6, lr}
 801012a:	4604      	mov	r4, r0
 801012c:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8010130:	9804      	ldr	r0, [sp, #16]
 8010132:	6061      	str	r1, [r4, #4]
 8010134:	2500      	movs	r5, #0
 8010136:	8025      	strh	r5, [r4, #0]
 8010138:	7223      	strb	r3, [r4, #8]
 801013a:	7266      	strb	r6, [r4, #9]
 801013c:	60e0      	str	r0, [r4, #12]
 801013e:	8222      	strh	r2, [r4, #16]
 8010140:	8265      	strh	r5, [r4, #18]
 8010142:	82a5      	strh	r5, [r4, #20]
 8010144:	82e5      	strh	r5, [r4, #22]
 8010146:	8325      	strh	r5, [r4, #24]
 8010148:	8365      	strh	r5, [r4, #26]
 801014a:	83a5      	strh	r5, [r4, #28]
 801014c:	77a5      	strb	r5, [r4, #30]
 801014e:	b32e      	cbz	r6, 801019c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 8010150:	6803      	ldr	r3, [r0, #0]
 8010152:	695b      	ldr	r3, [r3, #20]
 8010154:	4798      	blx	r3
 8010156:	4606      	mov	r6, r0
 8010158:	b300      	cbz	r0, 801019c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 801015a:	68e0      	ldr	r0, [r4, #12]
 801015c:	6803      	ldr	r3, [r0, #0]
 801015e:	4631      	mov	r1, r6
 8010160:	68db      	ldr	r3, [r3, #12]
 8010162:	4798      	blx	r3
 8010164:	4605      	mov	r5, r0
 8010166:	b1c8      	cbz	r0, 801019c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 8010168:	7b43      	ldrb	r3, [r0, #13]
 801016a:	7a82      	ldrb	r2, [r0, #10]
 801016c:	005b      	lsls	r3, r3, #1
 801016e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8010172:	4313      	orrs	r3, r2
 8010174:	83a3      	strh	r3, [r4, #28]
 8010176:	7a63      	ldrb	r3, [r4, #9]
 8010178:	2b04      	cmp	r3, #4
 801017a:	d10f      	bne.n	801019c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 801017c:	68e0      	ldr	r0, [r4, #12]
 801017e:	6803      	ldr	r3, [r0, #0]
 8010180:	462a      	mov	r2, r5
 8010182:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010184:	4631      	mov	r1, r6
 8010186:	4798      	blx	r3
 8010188:	7b6b      	ldrb	r3, [r5, #13]
 801018a:	005b      	lsls	r3, r3, #1
 801018c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8010190:	7aab      	ldrb	r3, [r5, #10]
 8010192:	4313      	orrs	r3, r2
 8010194:	4418      	add	r0, r3
 8010196:	8ba3      	ldrh	r3, [r4, #28]
 8010198:	4418      	add	r0, r3
 801019a:	83a0      	strh	r0, [r4, #28]
 801019c:	4620      	mov	r0, r4
 801019e:	bd70      	pop	{r4, r5, r6, pc}

080101a0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 80101a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80101a4:	2400      	movs	r4, #0
 80101a6:	b085      	sub	sp, #20
 80101a8:	4681      	mov	r9, r0
 80101aa:	4688      	mov	r8, r1
 80101ac:	4692      	mov	sl, r2
 80101ae:	469b      	mov	fp, r3
 80101b0:	4627      	mov	r7, r4
 80101b2:	4625      	mov	r5, r4
 80101b4:	4626      	mov	r6, r4
 80101b6:	4554      	cmp	r4, sl
 80101b8:	da2a      	bge.n	8010210 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80101ba:	2300      	movs	r3, #0
 80101bc:	9303      	str	r3, [sp, #12]
 80101be:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80101c2:	429d      	cmp	r5, r3
 80101c4:	d004      	beq.n	80101d0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 80101c6:	f242 030b 	movw	r3, #8203	; 0x200b
 80101ca:	429d      	cmp	r5, r3
 80101cc:	bf18      	it	ne
 80101ce:	462f      	movne	r7, r5
 80101d0:	ab03      	add	r3, sp, #12
 80101d2:	4642      	mov	r2, r8
 80101d4:	4659      	mov	r1, fp
 80101d6:	4648      	mov	r0, r9
 80101d8:	f002 ff7e 	bl	80130d8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80101dc:	4605      	mov	r5, r0
 80101de:	b1b8      	cbz	r0, 8010210 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80101e0:	280a      	cmp	r0, #10
 80101e2:	d015      	beq.n	8010210 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80101e4:	9a03      	ldr	r2, [sp, #12]
 80101e6:	b18a      	cbz	r2, 801020c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 80101e8:	7b50      	ldrb	r0, [r2, #13]
 80101ea:	7a93      	ldrb	r3, [r2, #10]
 80101ec:	8895      	ldrh	r5, [r2, #4]
 80101ee:	0040      	lsls	r0, r0, #1
 80101f0:	f400 7080 	and.w	r0, r0, #256	; 0x100
 80101f4:	4303      	orrs	r3, r0
 80101f6:	9301      	str	r3, [sp, #4]
 80101f8:	f8d8 3000 	ldr.w	r3, [r8]
 80101fc:	4639      	mov	r1, r7
 80101fe:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010200:	4640      	mov	r0, r8
 8010202:	4798      	blx	r3
 8010204:	9b01      	ldr	r3, [sp, #4]
 8010206:	4418      	add	r0, r3
 8010208:	4406      	add	r6, r0
 801020a:	b2b6      	uxth	r6, r6
 801020c:	3401      	adds	r4, #1
 801020e:	e7d2      	b.n	80101b6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8010210:	4630      	mov	r0, r6
 8010212:	b005      	add	sp, #20
 8010214:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010218 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8010218:	2a02      	cmp	r2, #2
 801021a:	b530      	push	{r4, r5, lr}
 801021c:	d011      	beq.n	8010242 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 801021e:	2a03      	cmp	r2, #3
 8010220:	d01c      	beq.n	801025c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8010222:	2a01      	cmp	r2, #1
 8010224:	d10c      	bne.n	8010240 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8010226:	888b      	ldrh	r3, [r1, #4]
 8010228:	8801      	ldrh	r1, [r0, #0]
 801022a:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 801022e:	8844      	ldrh	r4, [r0, #2]
 8010230:	8004      	strh	r4, [r0, #0]
 8010232:	1a5b      	subs	r3, r3, r1
 8010234:	1a9b      	subs	r3, r3, r2
 8010236:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 801023a:	8043      	strh	r3, [r0, #2]
 801023c:	8081      	strh	r1, [r0, #4]
 801023e:	80c2      	strh	r2, [r0, #6]
 8010240:	bd30      	pop	{r4, r5, pc}
 8010242:	88cb      	ldrh	r3, [r1, #6]
 8010244:	8842      	ldrh	r2, [r0, #2]
 8010246:	1a9b      	subs	r3, r3, r2
 8010248:	88c2      	ldrh	r2, [r0, #6]
 801024a:	1a9b      	subs	r3, r3, r2
 801024c:	888a      	ldrh	r2, [r1, #4]
 801024e:	8801      	ldrh	r1, [r0, #0]
 8010250:	8043      	strh	r3, [r0, #2]
 8010252:	1a52      	subs	r2, r2, r1
 8010254:	8881      	ldrh	r1, [r0, #4]
 8010256:	1a52      	subs	r2, r2, r1
 8010258:	8002      	strh	r2, [r0, #0]
 801025a:	e7f1      	b.n	8010240 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 801025c:	88cb      	ldrh	r3, [r1, #6]
 801025e:	8841      	ldrh	r1, [r0, #2]
 8010260:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8010264:	f9b0 5000 	ldrsh.w	r5, [r0]
 8010268:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 801026c:	8045      	strh	r5, [r0, #2]
 801026e:	1a5b      	subs	r3, r3, r1
 8010270:	1a9b      	subs	r3, r3, r2
 8010272:	8003      	strh	r3, [r0, #0]
 8010274:	8082      	strh	r2, [r0, #4]
 8010276:	80c4      	strh	r4, [r0, #6]
 8010278:	e7e2      	b.n	8010240 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0801027a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 801027a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801027e:	b09f      	sub	sp, #124	; 0x7c
 8010280:	9116      	str	r1, [sp, #88]	; 0x58
 8010282:	9317      	str	r3, [sp, #92]	; 0x5c
 8010284:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8010286:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8010288:	8809      	ldrh	r1, [r1, #0]
 801028a:	889b      	ldrh	r3, [r3, #4]
 801028c:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8010290:	9212      	str	r2, [sp, #72]	; 0x48
 8010292:	440b      	add	r3, r1
 8010294:	b21b      	sxth	r3, r3
 8010296:	9310      	str	r3, [sp, #64]	; 0x40
 8010298:	f8d8 3000 	ldr.w	r3, [r8]
 801029c:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 80102a0:	7a59      	ldrb	r1, [r3, #9]
 80102a2:	7a1b      	ldrb	r3, [r3, #8]
 80102a4:	9011      	str	r0, [sp, #68]	; 0x44
 80102a6:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 80102aa:	9114      	str	r1, [sp, #80]	; 0x50
 80102ac:	9315      	str	r3, [sp, #84]	; 0x54
 80102ae:	f9bd 50a0 	ldrsh.w	r5, [sp, #160]	; 0xa0
 80102b2:	2a00      	cmp	r2, #0
 80102b4:	d06a      	beq.n	801038c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 80102b6:	f898 3010 	ldrb.w	r3, [r8, #16]
 80102ba:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80102bc:	2b04      	cmp	r3, #4
 80102be:	bf14      	ite	ne
 80102c0:	2301      	movne	r3, #1
 80102c2:	2302      	moveq	r3, #2
 80102c4:	4413      	add	r3, r2
 80102c6:	f04f 0900 	mov.w	r9, #0
 80102ca:	930f      	str	r3, [sp, #60]	; 0x3c
 80102cc:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 80102d0:	464c      	mov	r4, r9
 80102d2:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 80102d6:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 80102da:	4293      	cmp	r3, r2
 80102dc:	f280 808f 	bge.w	80103fe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 80102e0:	2300      	movs	r3, #0
 80102e2:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 80102e6:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 80102ea:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80102ee:	429c      	cmp	r4, r3
 80102f0:	d006      	beq.n	8010300 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 80102f2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80102f4:	f242 020b 	movw	r2, #8203	; 0x200b
 80102f8:	4294      	cmp	r4, r2
 80102fa:	bf18      	it	ne
 80102fc:	4623      	movne	r3, r4
 80102fe:	930d      	str	r3, [sp, #52]	; 0x34
 8010300:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010302:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8010304:	f8d8 2000 	ldr.w	r2, [r8]
 8010308:	428b      	cmp	r3, r1
 801030a:	db41      	blt.n	8010390 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 801030c:	6813      	ldr	r3, [r2, #0]
 801030e:	4610      	mov	r0, r2
 8010310:	695b      	ldr	r3, [r3, #20]
 8010312:	4798      	blx	r3
 8010314:	4604      	mov	r4, r0
 8010316:	f8d8 0000 	ldr.w	r0, [r8]
 801031a:	6803      	ldr	r3, [r0, #0]
 801031c:	aa1d      	add	r2, sp, #116	; 0x74
 801031e:	689e      	ldr	r6, [r3, #8]
 8010320:	4621      	mov	r1, r4
 8010322:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8010326:	47b0      	blx	r6
 8010328:	901c      	str	r0, [sp, #112]	; 0x70
 801032a:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801032e:	429c      	cmp	r4, r3
 8010330:	f000 80e9 	beq.w	8010506 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8010334:	f242 030b 	movw	r3, #8203	; 0x200b
 8010338:	429c      	cmp	r4, r3
 801033a:	f000 80e4 	beq.w	8010506 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 801033e:	2c00      	cmp	r4, #0
 8010340:	f000 80f6 	beq.w	8010530 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 8010344:	2c0a      	cmp	r4, #10
 8010346:	d060      	beq.n	801040a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8010348:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801034a:	b36a      	cbz	r2, 80103a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 801034c:	8894      	ldrh	r4, [r2, #4]
 801034e:	f1bb 0f00 	cmp.w	fp, #0
 8010352:	d03b      	beq.n	80103cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8010354:	f892 900d 	ldrb.w	r9, [r2, #13]
 8010358:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801035c:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8010360:	f892 900a 	ldrb.w	r9, [r2, #10]
 8010364:	f1bb 0f01 	cmp.w	fp, #1
 8010368:	ea49 0903 	orr.w	r9, r9, r3
 801036c:	d134      	bne.n	80103d8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 801036e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010370:	eba5 0509 	sub.w	r5, r5, r9
 8010374:	2b00      	cmp	r3, #0
 8010376:	d14f      	bne.n	8010418 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8010378:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801037a:	eb09 0305 	add.w	r3, r9, r5
 801037e:	4413      	add	r3, r2
 8010380:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8010382:	f9b2 2000 	ldrsh.w	r2, [r2]
 8010386:	4293      	cmp	r3, r2
 8010388:	da51      	bge.n	801042e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 801038a:	e038      	b.n	80103fe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 801038c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801038e:	e79a      	b.n	80102c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8010390:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8010394:	9301      	str	r3, [sp, #4]
 8010396:	ab1d      	add	r3, sp, #116	; 0x74
 8010398:	9300      	str	r3, [sp, #0]
 801039a:	4659      	mov	r1, fp
 801039c:	ab1c      	add	r3, sp, #112	; 0x70
 801039e:	982c      	ldr	r0, [sp, #176]	; 0xb0
 80103a0:	f002 fee3 	bl	801316a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 80103a4:	4604      	mov	r4, r0
 80103a6:	e7c0      	b.n	801032a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 80103a8:	f8d8 0000 	ldr.w	r0, [r8]
 80103ac:	6803      	ldr	r3, [r0, #0]
 80103ae:	691b      	ldr	r3, [r3, #16]
 80103b0:	4798      	blx	r3
 80103b2:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80103b6:	4298      	cmp	r0, r3
 80103b8:	f000 80a5 	beq.w	8010506 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 80103bc:	f242 030b 	movw	r3, #8203	; 0x200b
 80103c0:	4298      	cmp	r0, r3
 80103c2:	f000 80a0 	beq.w	8010506 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 80103c6:	f1bb 0f00 	cmp.w	fp, #0
 80103ca:	d100      	bne.n	80103ce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 80103cc:	444d      	add	r5, r9
 80103ce:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80103d0:	2a00      	cmp	r2, #0
 80103d2:	d1bf      	bne.n	8010354 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 80103d4:	4691      	mov	r9, r2
 80103d6:	e096      	b.n	8010506 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 80103d8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80103da:	2b00      	cmp	r3, #0
 80103dc:	f000 80aa 	beq.w	8010534 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80103e0:	f1bb 0f00 	cmp.w	fp, #0
 80103e4:	d118      	bne.n	8010418 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 80103e6:	f8d8 0000 	ldr.w	r0, [r8]
 80103ea:	990d      	ldr	r1, [sp, #52]	; 0x34
 80103ec:	6803      	ldr	r3, [r0, #0]
 80103ee:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80103f0:	4798      	blx	r3
 80103f2:	4405      	add	r5, r0
 80103f4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80103f6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80103f8:	1aeb      	subs	r3, r5, r3
 80103fa:	4293      	cmp	r3, r2
 80103fc:	dd17      	ble.n	801042e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 80103fe:	2c00      	cmp	r4, #0
 8010400:	f000 8096 	beq.w	8010530 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 8010404:	2c0a      	cmp	r4, #10
 8010406:	f040 8084 	bne.w	8010512 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 801040a:	240a      	movs	r4, #10
 801040c:	fab4 f084 	clz	r0, r4
 8010410:	0940      	lsrs	r0, r0, #5
 8010412:	b01f      	add	sp, #124	; 0x7c
 8010414:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010418:	f8d8 0000 	ldr.w	r0, [r8]
 801041c:	990d      	ldr	r1, [sp, #52]	; 0x34
 801041e:	6803      	ldr	r3, [r0, #0]
 8010420:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010422:	4798      	blx	r3
 8010424:	f1bb 0f01 	cmp.w	fp, #1
 8010428:	eba5 0500 	sub.w	r5, r5, r0
 801042c:	d0a4      	beq.n	8010378 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 801042e:	981c      	ldr	r0, [sp, #112]	; 0x70
 8010430:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8010432:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8010436:	f9b3 6000 	ldrsh.w	r6, [r3]
 801043a:	7b43      	ldrb	r3, [r0, #13]
 801043c:	015b      	lsls	r3, r3, #5
 801043e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8010442:	7983      	ldrb	r3, [r0, #6]
 8010444:	4429      	add	r1, r5
 8010446:	4313      	orrs	r3, r2
 8010448:	440b      	add	r3, r1
 801044a:	42b3      	cmp	r3, r6
 801044c:	db5b      	blt.n	8010506 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 801044e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010450:	4299      	cmp	r1, r3
 8010452:	da58      	bge.n	8010506 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8010454:	f8d8 0000 	ldr.w	r0, [r8]
 8010458:	6803      	ldr	r3, [r0, #0]
 801045a:	42ae      	cmp	r6, r5
 801045c:	bfc8      	it	gt
 801045e:	1b76      	subgt	r6, r6, r5
 8010460:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010462:	bfcc      	ite	gt
 8010464:	b2b6      	uxthgt	r6, r6
 8010466:	2600      	movle	r6, #0
 8010468:	4798      	blx	r3
 801046a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801046c:	7b5a      	ldrb	r2, [r3, #13]
 801046e:	00d1      	lsls	r1, r2, #3
 8010470:	f401 7780 	and.w	r7, r1, #256	; 0x100
 8010474:	7a19      	ldrb	r1, [r3, #8]
 8010476:	4339      	orrs	r1, r7
 8010478:	0657      	lsls	r7, r2, #25
 801047a:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 801047c:	bf44      	itt	mi
 801047e:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8010482:	b209      	sxthmi	r1, r1
 8010484:	19c7      	adds	r7, r0, r7
 8010486:	1a7f      	subs	r7, r7, r1
 8010488:	9929      	ldr	r1, [sp, #164]	; 0xa4
 801048a:	b2bf      	uxth	r7, r7
 801048c:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8010490:	fa0f fa87 	sxth.w	sl, r7
 8010494:	4551      	cmp	r1, sl
 8010496:	dd3a      	ble.n	801050e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 8010498:	0112      	lsls	r2, r2, #4
 801049a:	79d8      	ldrb	r0, [r3, #7]
 801049c:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80104a0:	4302      	orrs	r2, r0
 80104a2:	4492      	add	sl, r2
 80104a4:	4551      	cmp	r1, sl
 80104a6:	dc2e      	bgt.n	8010506 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 80104a8:	1bcf      	subs	r7, r1, r7
 80104aa:	b2bf      	uxth	r7, r7
 80104ac:	468a      	mov	sl, r1
 80104ae:	9319      	str	r3, [sp, #100]	; 0x64
 80104b0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80104b2:	f8d8 0000 	ldr.w	r0, [r8]
 80104b6:	681a      	ldr	r2, [r3, #0]
 80104b8:	6801      	ldr	r1, [r0, #0]
 80104ba:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 80104bc:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 80104be:	9313      	str	r3, [sp, #76]	; 0x4c
 80104c0:	9218      	str	r2, [sp, #96]	; 0x60
 80104c2:	6b89      	ldr	r1, [r1, #56]	; 0x38
 80104c4:	4788      	blx	r1
 80104c6:	f898 1006 	ldrb.w	r1, [r8, #6]
 80104ca:	910b      	str	r1, [sp, #44]	; 0x2c
 80104cc:	f898 100e 	ldrb.w	r1, [r8, #14]
 80104d0:	910a      	str	r1, [sp, #40]	; 0x28
 80104d2:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 80104d6:	9109      	str	r1, [sp, #36]	; 0x24
 80104d8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80104da:	f8d8 1008 	ldr.w	r1, [r8, #8]
 80104de:	9305      	str	r3, [sp, #20]
 80104e0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80104e2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80104e4:	9206      	str	r2, [sp, #24]
 80104e6:	e9cd 0107 	strd	r0, r1, [sp, #28]
 80104ea:	e9cd 7303 	strd	r7, r3, [sp, #12]
 80104ee:	e9cd a601 	strd	sl, r6, [sp, #4]
 80104f2:	442e      	add	r6, r5
 80104f4:	b236      	sxth	r6, r6
 80104f6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80104f8:	9600      	str	r6, [sp, #0]
 80104fa:	681a      	ldr	r2, [r3, #0]
 80104fc:	9916      	ldr	r1, [sp, #88]	; 0x58
 80104fe:	685b      	ldr	r3, [r3, #4]
 8010500:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010502:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010504:	47b0      	blx	r6
 8010506:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010508:	3301      	adds	r3, #1
 801050a:	930e      	str	r3, [sp, #56]	; 0x38
 801050c:	e6e3      	b.n	80102d6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 801050e:	2700      	movs	r7, #0
 8010510:	e7cd      	b.n	80104ae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8010512:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8010514:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8010516:	3501      	adds	r5, #1
 8010518:	429d      	cmp	r5, r3
 801051a:	f6bf af77 	bge.w	801040c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 801051e:	4659      	mov	r1, fp
 8010520:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8010522:	f7f4 fbaf 	bl	8004c84 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8010526:	4604      	mov	r4, r0
 8010528:	b110      	cbz	r0, 8010530 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 801052a:	280a      	cmp	r0, #10
 801052c:	d1f2      	bne.n	8010514 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 801052e:	e76c      	b.n	801040a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8010530:	2400      	movs	r4, #0
 8010532:	e76b      	b.n	801040c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8010534:	f1bb 0f00 	cmp.w	fp, #0
 8010538:	f43f af5c 	beq.w	80103f4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 801053c:	e777      	b.n	801042e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

0801053e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 801053e:	b530      	push	{r4, r5, lr}
 8010540:	8a44      	ldrh	r4, [r0, #18]
 8010542:	8ac5      	ldrh	r5, [r0, #22]
 8010544:	82c3      	strh	r3, [r0, #22]
 8010546:	442c      	add	r4, r5
 8010548:	1ae4      	subs	r4, r4, r3
 801054a:	8244      	strh	r4, [r0, #18]
 801054c:	8b03      	ldrh	r3, [r0, #24]
 801054e:	8a84      	ldrh	r4, [r0, #20]
 8010550:	4422      	add	r2, r4
 8010552:	440c      	add	r4, r1
 8010554:	1a59      	subs	r1, r3, r1
 8010556:	8342      	strh	r2, [r0, #26]
 8010558:	8284      	strh	r4, [r0, #20]
 801055a:	8301      	strh	r1, [r0, #24]
 801055c:	bd30      	pop	{r4, r5, pc}

0801055e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 801055e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010562:	7a43      	ldrb	r3, [r0, #9]
 8010564:	1eda      	subs	r2, r3, #3
 8010566:	b087      	sub	sp, #28
 8010568:	4604      	mov	r4, r0
 801056a:	b2d2      	uxtb	r2, r2
 801056c:	460f      	mov	r7, r1
 801056e:	2900      	cmp	r1, #0
 8010570:	d036      	beq.n	80105e0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 8010572:	2a01      	cmp	r2, #1
 8010574:	d932      	bls.n	80105dc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 8010576:	1e58      	subs	r0, r3, #1
 8010578:	f1d0 0b00 	rsbs	fp, r0, #0
 801057c:	eb4b 0b00 	adc.w	fp, fp, r0
 8010580:	1e99      	subs	r1, r3, #2
 8010582:	424b      	negs	r3, r1
 8010584:	414b      	adcs	r3, r1
 8010586:	9303      	str	r3, [sp, #12]
 8010588:	2300      	movs	r3, #0
 801058a:	e9cd 3301 	strd	r3, r3, [sp, #4]
 801058e:	2500      	movs	r5, #0
 8010590:	8265      	strh	r5, [r4, #18]
 8010592:	82a5      	strh	r5, [r4, #20]
 8010594:	46a9      	mov	r9, r5
 8010596:	f242 0a0b 	movw	sl, #8203	; 0x200b
 801059a:	2300      	movs	r3, #0
 801059c:	9305      	str	r3, [sp, #20]
 801059e:	8823      	ldrh	r3, [r4, #0]
 80105a0:	2b20      	cmp	r3, #32
 80105a2:	d02b      	beq.n	80105fc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 80105a4:	eba3 020a 	sub.w	r2, r3, sl
 80105a8:	4256      	negs	r6, r2
 80105aa:	4156      	adcs	r6, r2
 80105ac:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80105b0:	4293      	cmp	r3, r2
 80105b2:	d004      	beq.n	80105be <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 80105b4:	4553      	cmp	r3, sl
 80105b6:	bf16      	itet	ne
 80105b8:	4699      	movne	r9, r3
 80105ba:	2601      	moveq	r6, #1
 80105bc:	2600      	movne	r6, #0
 80105be:	ab05      	add	r3, sp, #20
 80105c0:	68e2      	ldr	r2, [r4, #12]
 80105c2:	7a21      	ldrb	r1, [r4, #8]
 80105c4:	6860      	ldr	r0, [r4, #4]
 80105c6:	f002 fd87 	bl	80130d8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80105ca:	8020      	strh	r0, [r4, #0]
 80105cc:	b9c8      	cbnz	r0, 8010602 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 80105ce:	8b22      	ldrh	r2, [r4, #24]
 80105d0:	2300      	movs	r3, #0
 80105d2:	4611      	mov	r1, r2
 80105d4:	4620      	mov	r0, r4
 80105d6:	f7ff ffb2 	bl	801053e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80105da:	e066      	b.n	80106aa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 80105dc:	468b      	mov	fp, r1
 80105de:	e7cf      	b.n	8010580 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 80105e0:	3b01      	subs	r3, #1
 80105e2:	2a01      	cmp	r2, #1
 80105e4:	bf8c      	ite	hi
 80105e6:	2200      	movhi	r2, #0
 80105e8:	2201      	movls	r2, #1
 80105ea:	2b01      	cmp	r3, #1
 80105ec:	bf8c      	ite	hi
 80105ee:	2300      	movhi	r3, #0
 80105f0:	2301      	movls	r3, #1
 80105f2:	9202      	str	r2, [sp, #8]
 80105f4:	9301      	str	r3, [sp, #4]
 80105f6:	9103      	str	r1, [sp, #12]
 80105f8:	468b      	mov	fp, r1
 80105fa:	e7c8      	b.n	801058e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 80105fc:	4699      	mov	r9, r3
 80105fe:	2601      	movs	r6, #1
 8010600:	e7dd      	b.n	80105be <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 8010602:	8ae3      	ldrh	r3, [r4, #22]
 8010604:	280a      	cmp	r0, #10
 8010606:	f103 0301 	add.w	r3, r3, #1
 801060a:	82e3      	strh	r3, [r4, #22]
 801060c:	d0df      	beq.n	80105ce <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 801060e:	9a05      	ldr	r2, [sp, #20]
 8010610:	bb42      	cbnz	r2, 8010664 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 8010612:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010616:	4298      	cmp	r0, r3
 8010618:	d001      	beq.n	801061e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 801061a:	4550      	cmp	r0, sl
 801061c:	d1bd      	bne.n	801059a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801061e:	8823      	ldrh	r3, [r4, #0]
 8010620:	8b21      	ldrh	r1, [r4, #24]
 8010622:	2b20      	cmp	r3, #32
 8010624:	d001      	beq.n	801062a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 8010626:	4553      	cmp	r3, sl
 8010628:	d131      	bne.n	801068e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 801062a:	2e00      	cmp	r6, #0
 801062c:	bf0a      	itet	eq
 801062e:	460d      	moveq	r5, r1
 8010630:	4630      	movne	r0, r6
 8010632:	2001      	moveq	r0, #1
 8010634:	440a      	add	r2, r1
 8010636:	8aa3      	ldrh	r3, [r4, #20]
 8010638:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 801063c:	b292      	uxth	r2, r2
 801063e:	8322      	strh	r2, [r4, #24]
 8010640:	4413      	add	r3, r2
 8010642:	2f00      	cmp	r7, #0
 8010644:	d03a      	beq.n	80106bc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 8010646:	f1bb 0f00 	cmp.w	fp, #0
 801064a:	d102      	bne.n	8010652 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 801064c:	9903      	ldr	r1, [sp, #12]
 801064e:	b301      	cbz	r1, 8010692 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 8010650:	b1f8      	cbz	r0, 8010692 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 8010652:	8ba1      	ldrh	r1, [r4, #28]
 8010654:	4419      	add	r1, r3
 8010656:	458c      	cmp	ip, r1
 8010658:	da2a      	bge.n	80106b0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 801065a:	8a61      	ldrh	r1, [r4, #18]
 801065c:	b341      	cbz	r1, 80106b0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 801065e:	4563      	cmp	r3, ip
 8010660:	dd9b      	ble.n	801059a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010662:	e01c      	b.n	801069e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 8010664:	8893      	ldrh	r3, [r2, #4]
 8010666:	8023      	strh	r3, [r4, #0]
 8010668:	f892 800d 	ldrb.w	r8, [r2, #13]
 801066c:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8010670:	f408 7080 	and.w	r0, r8, #256	; 0x100
 8010674:	f892 800a 	ldrb.w	r8, [r2, #10]
 8010678:	ea48 0800 	orr.w	r8, r8, r0
 801067c:	68e0      	ldr	r0, [r4, #12]
 801067e:	6803      	ldr	r3, [r0, #0]
 8010680:	4649      	mov	r1, r9
 8010682:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010684:	4798      	blx	r3
 8010686:	eb08 0200 	add.w	r2, r8, r0
 801068a:	b292      	uxth	r2, r2
 801068c:	e7c7      	b.n	801061e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 801068e:	2000      	movs	r0, #0
 8010690:	e7d0      	b.n	8010634 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 8010692:	4563      	cmp	r3, ip
 8010694:	dd81      	ble.n	801059a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010696:	8a63      	ldrh	r3, [r4, #18]
 8010698:	2b00      	cmp	r3, #0
 801069a:	f43f af7e 	beq.w	801059a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801069e:	2301      	movs	r3, #1
 80106a0:	77a3      	strb	r3, [r4, #30]
 80106a2:	8ba2      	ldrh	r2, [r4, #28]
 80106a4:	8b63      	ldrh	r3, [r4, #26]
 80106a6:	4413      	add	r3, r2
 80106a8:	8363      	strh	r3, [r4, #26]
 80106aa:	b007      	add	sp, #28
 80106ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80106b0:	2300      	movs	r3, #0
 80106b2:	4611      	mov	r1, r2
 80106b4:	4620      	mov	r0, r4
 80106b6:	f7ff ff42 	bl	801053e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80106ba:	e76e      	b.n	801059a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80106bc:	4563      	cmp	r3, ip
 80106be:	dd14      	ble.n	80106ea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 80106c0:	9b02      	ldr	r3, [sp, #8]
 80106c2:	b113      	cbz	r3, 80106ca <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 80106c4:	2301      	movs	r3, #1
 80106c6:	460a      	mov	r2, r1
 80106c8:	e783      	b.n	80105d2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 80106ca:	9b01      	ldr	r3, [sp, #4]
 80106cc:	2b00      	cmp	r3, #0
 80106ce:	f43f af64 	beq.w	801059a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80106d2:	2800      	cmp	r0, #0
 80106d4:	f47f af61 	bne.w	801059a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80106d8:	b116      	cbz	r6, 80106e0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 80106da:	2301      	movs	r3, #1
 80106dc:	462a      	mov	r2, r5
 80106de:	e779      	b.n	80105d4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 80106e0:	8a63      	ldrh	r3, [r4, #18]
 80106e2:	2b00      	cmp	r3, #0
 80106e4:	f43f af59 	beq.w	801059a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80106e8:	e7df      	b.n	80106aa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 80106ea:	2800      	cmp	r0, #0
 80106ec:	f47f af55 	bne.w	801059a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80106f0:	2e00      	cmp	r6, #0
 80106f2:	f43f af52 	beq.w	801059a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80106f6:	2301      	movs	r3, #1
 80106f8:	462a      	mov	r2, r5
 80106fa:	e7db      	b.n	80106b4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

080106fc <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 80106fc:	b530      	push	{r4, r5, lr}
 80106fe:	4605      	mov	r5, r0
 8010700:	b08b      	sub	sp, #44	; 0x2c
 8010702:	b191      	cbz	r1, 801072a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 8010704:	e9cd 3100 	strd	r3, r1, [sp]
 8010708:	4613      	mov	r3, r2
 801070a:	4601      	mov	r1, r0
 801070c:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 8010710:	a802      	add	r0, sp, #8
 8010712:	f7ff fd09 	bl	8010128 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8010716:	2401      	movs	r4, #1
 8010718:	2100      	movs	r1, #0
 801071a:	a802      	add	r0, sp, #8
 801071c:	f7ff ff1f 	bl	801055e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8010720:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8010724:	b163      	cbz	r3, 8010740 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8010726:	3401      	adds	r4, #1
 8010728:	e7f6      	b.n	8010718 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 801072a:	f002 fda3 	bl	8013274 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801072e:	2401      	movs	r4, #1
 8010730:	280a      	cmp	r0, #10
 8010732:	4628      	mov	r0, r5
 8010734:	bf08      	it	eq
 8010736:	3401      	addeq	r4, #1
 8010738:	f002 fd9c 	bl	8013274 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801073c:	2800      	cmp	r0, #0
 801073e:	d1f7      	bne.n	8010730 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8010740:	b2a0      	uxth	r0, r4
 8010742:	b00b      	add	sp, #44	; 0x2c
 8010744:	bd30      	pop	{r4, r5, pc}

08010746 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8010746:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801074a:	b0e5      	sub	sp, #404	; 0x194
 801074c:	4689      	mov	r9, r1
 801074e:	f8dd a1b8 	ldr.w	sl, [sp, #440]	; 0x1b8
 8010752:	900a      	str	r0, [sp, #40]	; 0x28
 8010754:	461c      	mov	r4, r3
 8010756:	f1ba 0f00 	cmp.w	sl, #0
 801075a:	f000 80b4 	beq.w	80108c6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 801075e:	681b      	ldr	r3, [r3, #0]
 8010760:	2b00      	cmp	r3, #0
 8010762:	f000 80b0 	beq.w	80108c6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010766:	7ba3      	ldrb	r3, [r4, #14]
 8010768:	2b00      	cmp	r3, #0
 801076a:	f000 80ac 	beq.w	80108c6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 801076e:	6810      	ldr	r0, [r2, #0]
 8010770:	6851      	ldr	r1, [r2, #4]
 8010772:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 8010776:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801077a:	f10d 0834 	add.w	r8, sp, #52	; 0x34
 801077e:	4643      	mov	r3, r8
 8010780:	c303      	stmia	r3!, {r0, r1}
 8010782:	2500      	movs	r5, #0
 8010784:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 8010788:	79a2      	ldrb	r2, [r4, #6]
 801078a:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801078e:	a90f      	add	r1, sp, #60	; 0x3c
 8010790:	4640      	mov	r0, r8
 8010792:	950f      	str	r5, [sp, #60]	; 0x3c
 8010794:	f7ff fd40 	bl	8010218 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8010798:	a90f      	add	r1, sp, #60	; 0x3c
 801079a:	4608      	mov	r0, r1
 801079c:	79a2      	ldrb	r2, [r4, #6]
 801079e:	af19      	add	r7, sp, #100	; 0x64
 80107a0:	f7ff fd3a 	bl	8010218 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80107a4:	4638      	mov	r0, r7
 80107a6:	f002 f93a 	bl	8012a1e <_ZN8touchgfx12TextProviderC1Ev>
 80107aa:	6820      	ldr	r0, [r4, #0]
 80107ac:	6803      	ldr	r3, [r0, #0]
 80107ae:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80107b0:	4798      	blx	r3
 80107b2:	4606      	mov	r6, r0
 80107b4:	6820      	ldr	r0, [r4, #0]
 80107b6:	6803      	ldr	r3, [r0, #0]
 80107b8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80107ba:	4798      	blx	r3
 80107bc:	4633      	mov	r3, r6
 80107be:	9000      	str	r0, [sp, #0]
 80107c0:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 80107c2:	4651      	mov	r1, sl
 80107c4:	4638      	mov	r0, r7
 80107c6:	f002 f985 	bl	8012ad4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80107ca:	6820      	ldr	r0, [r4, #0]
 80107cc:	7923      	ldrb	r3, [r4, #4]
 80107ce:	9308      	str	r3, [sp, #32]
 80107d0:	6803      	ldr	r3, [r0, #0]
 80107d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80107d4:	4798      	blx	r3
 80107d6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80107da:	181e      	adds	r6, r3, r0
 80107dc:	42ae      	cmp	r6, r5
 80107de:	dd06      	ble.n	80107ee <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xa8>
 80107e0:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 80107e4:	4282      	cmp	r2, r0
 80107e6:	bfa4      	itt	ge
 80107e8:	189d      	addge	r5, r3, r2
 80107ea:	fb95 f5f6 	sdivge	r5, r5, r6
 80107ee:	a832      	add	r0, sp, #200	; 0xc8
 80107f0:	f002 f915 	bl	8012a1e <_ZN8touchgfx12TextProviderC1Ev>
 80107f4:	7c23      	ldrb	r3, [r4, #16]
 80107f6:	b17b      	cbz	r3, 8010818 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd2>
 80107f8:	6820      	ldr	r0, [r4, #0]
 80107fa:	6803      	ldr	r3, [r0, #0]
 80107fc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80107fe:	4798      	blx	r3
 8010800:	4683      	mov	fp, r0
 8010802:	6820      	ldr	r0, [r4, #0]
 8010804:	6803      	ldr	r3, [r0, #0]
 8010806:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8010808:	4798      	blx	r3
 801080a:	465b      	mov	r3, fp
 801080c:	9000      	str	r0, [sp, #0]
 801080e:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 8010810:	4651      	mov	r1, sl
 8010812:	a832      	add	r0, sp, #200	; 0xc8
 8010814:	f002 f95e 	bl	8012ad4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010818:	7be1      	ldrb	r1, [r4, #15]
 801081a:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 801081e:	7963      	ldrb	r3, [r4, #5]
 8010820:	1a52      	subs	r2, r2, r1
 8010822:	7c21      	ldrb	r1, [r4, #16]
 8010824:	9101      	str	r1, [sp, #4]
 8010826:	6821      	ldr	r1, [r4, #0]
 8010828:	9100      	str	r1, [sp, #0]
 801082a:	b292      	uxth	r2, r2
 801082c:	a932      	add	r1, sp, #200	; 0xc8
 801082e:	a811      	add	r0, sp, #68	; 0x44
 8010830:	f7ff fc7a 	bl	8010128 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8010834:	7c23      	ldrb	r3, [r4, #16]
 8010836:	b9bb      	cbnz	r3, 8010868 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>
 8010838:	fa1f fa86 	uxth.w	sl, r6
 801083c:	2d00      	cmp	r5, #0
 801083e:	dd45      	ble.n	80108cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 8010840:	4638      	mov	r0, r7
 8010842:	f002 fd17 	bl	8013274 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010846:	2800      	cmp	r0, #0
 8010848:	d03d      	beq.n	80108c6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 801084a:	280a      	cmp	r0, #10
 801084c:	d1f6      	bne.n	801083c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 801084e:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8010852:	4453      	add	r3, sl
 8010854:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8010858:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 801085c:	eba3 030a 	sub.w	r3, r3, sl
 8010860:	3d01      	subs	r5, #1
 8010862:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8010866:	e7e9      	b.n	801083c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 8010868:	0073      	lsls	r3, r6, #1
 801086a:	9309      	str	r3, [sp, #36]	; 0x24
 801086c:	f64f 7bff 	movw	fp, #65535	; 0xffff
 8010870:	fa1f fa86 	uxth.w	sl, r6
 8010874:	2d00      	cmp	r5, #0
 8010876:	dd29      	ble.n	80108cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 8010878:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 801087c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801087e:	428b      	cmp	r3, r1
 8010880:	bfd4      	ite	le
 8010882:	2100      	movle	r1, #0
 8010884:	2101      	movgt	r1, #1
 8010886:	a811      	add	r0, sp, #68	; 0x44
 8010888:	f7ff fe69 	bl	801055e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 801088c:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 8010890:	3b01      	subs	r3, #1
 8010892:	b29b      	uxth	r3, r3
 8010894:	455b      	cmp	r3, fp
 8010896:	930b      	str	r3, [sp, #44]	; 0x2c
 8010898:	d005      	beq.n	80108a6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x160>
 801089a:	7961      	ldrb	r1, [r4, #5]
 801089c:	4638      	mov	r0, r7
 801089e:	f7f4 f9f1 	bl	8004c84 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80108a2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80108a4:	e7f4      	b.n	8010890 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x14a>
 80108a6:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 80108aa:	4453      	add	r3, sl
 80108ac:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 80108b0:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 80108b4:	eba3 030a 	sub.w	r3, r3, sl
 80108b8:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 80108bc:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80108c0:	3d01      	subs	r5, #1
 80108c2:	2b00      	cmp	r3, #0
 80108c4:	d1d6      	bne.n	8010874 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12e>
 80108c6:	b065      	add	sp, #404	; 0x194
 80108c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80108cc:	0075      	lsls	r5, r6, #1
 80108ce:	f04f 0a00 	mov.w	sl, #0
 80108d2:	7c23      	ldrb	r3, [r4, #16]
 80108d4:	2b00      	cmp	r3, #0
 80108d6:	d066      	beq.n	80109a6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x260>
 80108d8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 80108dc:	428d      	cmp	r5, r1
 80108de:	bfd4      	ite	le
 80108e0:	2100      	movle	r1, #0
 80108e2:	2101      	movgt	r1, #1
 80108e4:	a811      	add	r0, sp, #68	; 0x44
 80108e6:	f7ff fe3a 	bl	801055e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 80108ea:	9b08      	ldr	r3, [sp, #32]
 80108ec:	2b00      	cmp	r3, #0
 80108ee:	d055      	beq.n	801099c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 80108f0:	f894 b010 	ldrb.w	fp, [r4, #16]
 80108f4:	2264      	movs	r2, #100	; 0x64
 80108f6:	4639      	mov	r1, r7
 80108f8:	a84b      	add	r0, sp, #300	; 0x12c
 80108fa:	f010 f8f1 	bl	8020ae0 <memcpy>
 80108fe:	f1bb 0f00 	cmp.w	fp, #0
 8010902:	d058      	beq.n	80109b6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x270>
 8010904:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8010908:	7922      	ldrb	r2, [r4, #4]
 801090a:	2a01      	cmp	r2, #1
 801090c:	d13c      	bne.n	8010988 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 801090e:	f9bd 0040 	ldrsh.w	r0, [sp, #64]	; 0x40
 8010912:	1ac0      	subs	r0, r0, r3
 8010914:	2302      	movs	r3, #2
 8010916:	fb90 f0f3 	sdiv	r0, r0, r3
 801091a:	b200      	sxth	r0, r0
 801091c:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8010920:	4418      	add	r0, r3
 8010922:	7c23      	ldrb	r3, [r4, #16]
 8010924:	b200      	sxth	r0, r0
 8010926:	2b00      	cmp	r3, #0
 8010928:	d03a      	beq.n	80109a0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25a>
 801092a:	f8bd 2056 	ldrh.w	r2, [sp, #86]	; 0x56
 801092e:	f89d 1062 	ldrb.w	r1, [sp, #98]	; 0x62
 8010932:	9000      	str	r0, [sp, #0]
 8010934:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8010938:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 801093c:	980a      	ldr	r0, [sp, #40]	; 0x28
 801093e:	e9cd a703 	strd	sl, r7, [sp, #12]
 8010942:	e9cd 8401 	strd	r8, r4, [sp, #4]
 8010946:	464a      	mov	r2, r9
 8010948:	2100      	movs	r1, #0
 801094a:	f7ff fc96 	bl	801027a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 801094e:	2800      	cmp	r0, #0
 8010950:	d1b9      	bne.n	80108c6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010952:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8010956:	b2b2      	uxth	r2, r6
 8010958:	4611      	mov	r1, r2
 801095a:	4413      	add	r3, r2
 801095c:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8010960:	1a52      	subs	r2, r2, r1
 8010962:	7c21      	ldrb	r1, [r4, #16]
 8010964:	b21b      	sxth	r3, r3
 8010966:	b212      	sxth	r2, r2
 8010968:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 801096c:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 8010970:	b109      	cbz	r1, 8010976 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x230>
 8010972:	42b2      	cmp	r2, r6
 8010974:	dba7      	blt.n	80108c6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010976:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 801097a:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 801097e:	440a      	add	r2, r1
 8010980:	b212      	sxth	r2, r2
 8010982:	4293      	cmp	r3, r2
 8010984:	dda5      	ble.n	80108d2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x18c>
 8010986:	e79e      	b.n	80108c6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010988:	2a02      	cmp	r2, #2
 801098a:	d105      	bne.n	8010998 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 801098c:	7be2      	ldrb	r2, [r4, #15]
 801098e:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 8010992:	1a80      	subs	r0, r0, r2
 8010994:	1ac0      	subs	r0, r0, r3
 8010996:	e7c0      	b.n	801091a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d4>
 8010998:	2000      	movs	r0, #0
 801099a:	e7bf      	b.n	801091c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 801099c:	7be0      	ldrb	r0, [r4, #15]
 801099e:	e7bd      	b.n	801091c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 80109a0:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80109a4:	e7c3      	b.n	801092e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e8>
 80109a6:	9b08      	ldr	r3, [sp, #32]
 80109a8:	2b00      	cmp	r3, #0
 80109aa:	d0f7      	beq.n	801099c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 80109ac:	2264      	movs	r2, #100	; 0x64
 80109ae:	4639      	mov	r1, r7
 80109b0:	a84b      	add	r0, sp, #300	; 0x12c
 80109b2:	f010 f895 	bl	8020ae0 <memcpy>
 80109b6:	2300      	movs	r3, #0
 80109b8:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80109bc:	6821      	ldr	r1, [r4, #0]
 80109be:	a84b      	add	r0, sp, #300	; 0x12c
 80109c0:	f7ff fbee 	bl	80101a0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80109c4:	b203      	sxth	r3, r0
 80109c6:	e79f      	b.n	8010908 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c2>

080109c8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 80109c8:	2b03      	cmp	r3, #3
 80109ca:	d818      	bhi.n	80109fe <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 80109cc:	e8df f003 	tbb	[pc, r3]
 80109d0:	130d0602 	.word	0x130d0602
 80109d4:	f9b0 2000 	ldrsh.w	r2, [r0]
 80109d8:	1850      	adds	r0, r2, r1
 80109da:	4770      	bx	lr
 80109dc:	8803      	ldrh	r3, [r0, #0]
 80109de:	8880      	ldrh	r0, [r0, #4]
 80109e0:	4418      	add	r0, r3
 80109e2:	b200      	sxth	r0, r0
 80109e4:	1a80      	subs	r0, r0, r2
 80109e6:	3801      	subs	r0, #1
 80109e8:	4770      	bx	lr
 80109ea:	8803      	ldrh	r3, [r0, #0]
 80109ec:	8880      	ldrh	r0, [r0, #4]
 80109ee:	4418      	add	r0, r3
 80109f0:	b200      	sxth	r0, r0
 80109f2:	1a40      	subs	r0, r0, r1
 80109f4:	e7f7      	b.n	80109e6 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 80109f6:	f9b0 0000 	ldrsh.w	r0, [r0]
 80109fa:	4410      	add	r0, r2
 80109fc:	4770      	bx	lr
 80109fe:	2000      	movs	r0, #0
 8010a00:	4770      	bx	lr

08010a02 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8010a02:	2b03      	cmp	r3, #3
 8010a04:	d817      	bhi.n	8010a36 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8010a06:	e8df f003 	tbb	[pc, r3]
 8010a0a:	0602      	.short	0x0602
 8010a0c:	1009      	.short	0x1009
 8010a0e:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8010a12:	1850      	adds	r0, r2, r1
 8010a14:	4770      	bx	lr
 8010a16:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8010a1a:	e7fa      	b.n	8010a12 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8010a1c:	8843      	ldrh	r3, [r0, #2]
 8010a1e:	88c0      	ldrh	r0, [r0, #6]
 8010a20:	4418      	add	r0, r3
 8010a22:	b200      	sxth	r0, r0
 8010a24:	1a80      	subs	r0, r0, r2
 8010a26:	3801      	subs	r0, #1
 8010a28:	4770      	bx	lr
 8010a2a:	8843      	ldrh	r3, [r0, #2]
 8010a2c:	88c0      	ldrh	r0, [r0, #6]
 8010a2e:	4418      	add	r0, r3
 8010a30:	b200      	sxth	r0, r0
 8010a32:	1a40      	subs	r0, r0, r1
 8010a34:	e7f7      	b.n	8010a26 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8010a36:	2000      	movs	r0, #0
 8010a38:	4770      	bx	lr
	...

08010a3c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8010a3c:	4b01      	ldr	r3, [pc, #4]	; (8010a44 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8010a3e:	2200      	movs	r2, #0
 8010a40:	601a      	str	r2, [r3, #0]
 8010a42:	4770      	bx	lr
 8010a44:	200155bc 	.word	0x200155bc

08010a48 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8010a48:	4603      	mov	r3, r0
 8010a4a:	b1c8      	cbz	r0, 8010a80 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8010a4c:	0c02      	lsrs	r2, r0, #16
 8010a4e:	0412      	lsls	r2, r2, #16
 8010a50:	b9a2      	cbnz	r2, 8010a7c <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8010a52:	0403      	lsls	r3, r0, #16
 8010a54:	2010      	movs	r0, #16
 8010a56:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8010a5a:	bf04      	itt	eq
 8010a5c:	021b      	lsleq	r3, r3, #8
 8010a5e:	3008      	addeq	r0, #8
 8010a60:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8010a64:	bf04      	itt	eq
 8010a66:	011b      	lsleq	r3, r3, #4
 8010a68:	3004      	addeq	r0, #4
 8010a6a:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8010a6e:	bf04      	itt	eq
 8010a70:	009b      	lsleq	r3, r3, #2
 8010a72:	3002      	addeq	r0, #2
 8010a74:	2b00      	cmp	r3, #0
 8010a76:	db04      	blt.n	8010a82 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8010a78:	3001      	adds	r0, #1
 8010a7a:	4770      	bx	lr
 8010a7c:	2000      	movs	r0, #0
 8010a7e:	e7ea      	b.n	8010a56 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8010a80:	2020      	movs	r0, #32
 8010a82:	4770      	bx	lr

08010a84 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8010a84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010a88:	b087      	sub	sp, #28
 8010a8a:	4681      	mov	r9, r0
 8010a8c:	4698      	mov	r8, r3
 8010a8e:	4610      	mov	r0, r2
 8010a90:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 8010a94:	460d      	mov	r5, r1
 8010a96:	b981      	cbnz	r1, 8010aba <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 8010a98:	b14b      	cbz	r3, 8010aae <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 8010a9a:	460b      	mov	r3, r1
 8010a9c:	e9cd 4700 	strd	r4, r7, [sp]
 8010aa0:	464a      	mov	r2, r9
 8010aa2:	4641      	mov	r1, r8
 8010aa4:	f7ff ffee 	bl	8010a84 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010aa8:	b007      	add	sp, #28
 8010aaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010aae:	f04f 33ff 	mov.w	r3, #4294967295
 8010ab2:	603b      	str	r3, [r7, #0]
 8010ab4:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8010ab8:	e7f6      	b.n	8010aa8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 8010aba:	fa32 fa01 	lsrs.w	sl, r2, r1
 8010abe:	d107      	bne.n	8010ad0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 8010ac0:	fb09 f602 	mul.w	r6, r9, r2
 8010ac4:	fbb6 f0f4 	udiv	r0, r6, r4
 8010ac8:	fb04 6610 	mls	r6, r4, r0, r6
 8010acc:	603e      	str	r6, [r7, #0]
 8010ace:	e7eb      	b.n	8010aa8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 8010ad0:	2601      	movs	r6, #1
 8010ad2:	408e      	lsls	r6, r1
 8010ad4:	3e01      	subs	r6, #1
 8010ad6:	4016      	ands	r6, r2
 8010ad8:	fa09 fb01 	lsl.w	fp, r9, r1
 8010adc:	4630      	mov	r0, r6
 8010ade:	fbbb f3f4 	udiv	r3, fp, r4
 8010ae2:	9302      	str	r3, [sp, #8]
 8010ae4:	fb0a f303 	mul.w	r3, sl, r3
 8010ae8:	9303      	str	r3, [sp, #12]
 8010aea:	f7ff ffad 	bl	8010a48 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8010aee:	464a      	mov	r2, r9
 8010af0:	460b      	mov	r3, r1
 8010af2:	e9cd 4700 	strd	r4, r7, [sp]
 8010af6:	4601      	mov	r1, r0
 8010af8:	4630      	mov	r0, r6
 8010afa:	f7ff ffc3 	bl	8010a84 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010afe:	9b02      	ldr	r3, [sp, #8]
 8010b00:	fb04 bb13 	mls	fp, r4, r3, fp
 8010b04:	4606      	mov	r6, r0
 8010b06:	4658      	mov	r0, fp
 8010b08:	eb05 0108 	add.w	r1, r5, r8
 8010b0c:	f7ff ff9c 	bl	8010a48 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8010b10:	ab05      	add	r3, sp, #20
 8010b12:	e9cd 4300 	strd	r4, r3, [sp]
 8010b16:	465a      	mov	r2, fp
 8010b18:	4603      	mov	r3, r0
 8010b1a:	4650      	mov	r0, sl
 8010b1c:	f7ff ffb2 	bl	8010a84 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010b20:	6839      	ldr	r1, [r7, #0]
 8010b22:	9a05      	ldr	r2, [sp, #20]
 8010b24:	9b03      	ldr	r3, [sp, #12]
 8010b26:	4411      	add	r1, r2
 8010b28:	fbb1 f2f4 	udiv	r2, r1, r4
 8010b2c:	18d3      	adds	r3, r2, r3
 8010b2e:	441e      	add	r6, r3
 8010b30:	fb04 1412 	mls	r4, r4, r2, r1
 8010b34:	4430      	add	r0, r6
 8010b36:	603c      	str	r4, [r7, #0]
 8010b38:	e7b6      	b.n	8010aa8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

08010b3a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8010b3a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010b3e:	b085      	sub	sp, #20
 8010b40:	f1b0 0900 	subs.w	r9, r0, #0
 8010b44:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8010b46:	461d      	mov	r5, r3
 8010b48:	bfbf      	itttt	lt
 8010b4a:	6823      	ldrlt	r3, [r4, #0]
 8010b4c:	425b      	neglt	r3, r3
 8010b4e:	f1c9 0900 	rsblt	r9, r9, #0
 8010b52:	6023      	strlt	r3, [r4, #0]
 8010b54:	bfb4      	ite	lt
 8010b56:	f04f 36ff 	movlt.w	r6, #4294967295
 8010b5a:	2601      	movge	r6, #1
 8010b5c:	2a00      	cmp	r2, #0
 8010b5e:	4617      	mov	r7, r2
 8010b60:	da04      	bge.n	8010b6c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8010b62:	6823      	ldr	r3, [r4, #0]
 8010b64:	425b      	negs	r3, r3
 8010b66:	4257      	negs	r7, r2
 8010b68:	4276      	negs	r6, r6
 8010b6a:	6023      	str	r3, [r4, #0]
 8010b6c:	2d00      	cmp	r5, #0
 8010b6e:	4638      	mov	r0, r7
 8010b70:	bfba      	itte	lt
 8010b72:	426d      	neglt	r5, r5
 8010b74:	f04f 38ff 	movlt.w	r8, #4294967295
 8010b78:	f04f 0801 	movge.w	r8, #1
 8010b7c:	f7ff ff64 	bl	8010a48 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8010b80:	ab03      	add	r3, sp, #12
 8010b82:	e9cd 5300 	strd	r5, r3, [sp]
 8010b86:	463a      	mov	r2, r7
 8010b88:	4603      	mov	r3, r0
 8010b8a:	4648      	mov	r0, r9
 8010b8c:	f7ff ff7a 	bl	8010a84 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010b90:	6823      	ldr	r3, [r4, #0]
 8010b92:	9a03      	ldr	r2, [sp, #12]
 8010b94:	4546      	cmp	r6, r8
 8010b96:	441a      	add	r2, r3
 8010b98:	fb92 f3f5 	sdiv	r3, r2, r5
 8010b9c:	4418      	add	r0, r3
 8010b9e:	bf18      	it	ne
 8010ba0:	4240      	negne	r0, r0
 8010ba2:	fb05 2313 	mls	r3, r5, r3, r2
 8010ba6:	1c72      	adds	r2, r6, #1
 8010ba8:	6023      	str	r3, [r4, #0]
 8010baa:	d105      	bne.n	8010bb8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8010bac:	2b00      	cmp	r3, #0
 8010bae:	f1c3 0200 	rsb	r2, r3, #0
 8010bb2:	db0b      	blt.n	8010bcc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8010bb4:	6022      	str	r2, [r4, #0]
 8010bb6:	e006      	b.n	8010bc6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8010bb8:	2e01      	cmp	r6, #1
 8010bba:	d104      	bne.n	8010bc6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8010bbc:	2b00      	cmp	r3, #0
 8010bbe:	da02      	bge.n	8010bc6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8010bc0:	442b      	add	r3, r5
 8010bc2:	3801      	subs	r0, #1
 8010bc4:	6023      	str	r3, [r4, #0]
 8010bc6:	b005      	add	sp, #20
 8010bc8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010bcc:	3801      	subs	r0, #1
 8010bce:	1b52      	subs	r2, r2, r5
 8010bd0:	e7f0      	b.n	8010bb4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

08010bd4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8010bd4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8010bd8:	4c1c      	ldr	r4, [pc, #112]	; (8010c4c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8010bda:	6807      	ldr	r7, [r0, #0]
 8010bdc:	69a3      	ldr	r3, [r4, #24]
 8010bde:	4605      	mov	r5, r0
 8010be0:	b92b      	cbnz	r3, 8010bee <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8010be2:	6840      	ldr	r0, [r0, #4]
 8010be4:	e9c5 7000 	strd	r7, r0, [r5]
 8010be8:	b004      	add	sp, #16
 8010bea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010bee:	68a2      	ldr	r2, [r4, #8]
 8010bf0:	6820      	ldr	r0, [r4, #0]
 8010bf2:	ae04      	add	r6, sp, #16
 8010bf4:	f04f 0802 	mov.w	r8, #2
 8010bf8:	fb93 f1f8 	sdiv	r1, r3, r8
 8010bfc:	440a      	add	r2, r1
 8010bfe:	f846 2d04 	str.w	r2, [r6, #-4]!
 8010c02:	69e1      	ldr	r1, [r4, #28]
 8010c04:	9600      	str	r6, [sp, #0]
 8010c06:	463a      	mov	r2, r7
 8010c08:	f7ff ff97 	bl	8010b3a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010c0c:	69a3      	ldr	r3, [r4, #24]
 8010c0e:	686a      	ldr	r2, [r5, #4]
 8010c10:	6a21      	ldr	r1, [r4, #32]
 8010c12:	9600      	str	r6, [sp, #0]
 8010c14:	4607      	mov	r7, r0
 8010c16:	6860      	ldr	r0, [r4, #4]
 8010c18:	f7ff ff8f 	bl	8010b3a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010c1c:	6962      	ldr	r2, [r4, #20]
 8010c1e:	69a3      	ldr	r3, [r4, #24]
 8010c20:	fb93 f8f8 	sdiv	r8, r3, r8
 8010c24:	4442      	add	r2, r8
 8010c26:	9203      	str	r2, [sp, #12]
 8010c28:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8010c2a:	682a      	ldr	r2, [r5, #0]
 8010c2c:	9600      	str	r6, [sp, #0]
 8010c2e:	4407      	add	r7, r0
 8010c30:	68e0      	ldr	r0, [r4, #12]
 8010c32:	f7ff ff82 	bl	8010b3a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010c36:	9600      	str	r6, [sp, #0]
 8010c38:	4680      	mov	r8, r0
 8010c3a:	69a3      	ldr	r3, [r4, #24]
 8010c3c:	686a      	ldr	r2, [r5, #4]
 8010c3e:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8010c40:	6920      	ldr	r0, [r4, #16]
 8010c42:	f7ff ff7a 	bl	8010b3a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010c46:	4440      	add	r0, r8
 8010c48:	e7cc      	b.n	8010be4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8010c4a:	bf00      	nop
 8010c4c:	200155c0 	.word	0x200155c0

08010c50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8010c50:	4b07      	ldr	r3, [pc, #28]	; (8010c70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8010c52:	781b      	ldrb	r3, [r3, #0]
 8010c54:	2b01      	cmp	r3, #1
 8010c56:	d109      	bne.n	8010c6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8010c58:	f9b1 3000 	ldrsh.w	r3, [r1]
 8010c5c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8010c60:	8003      	strh	r3, [r0, #0]
 8010c62:	4b04      	ldr	r3, [pc, #16]	; (8010c74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8010c64:	881b      	ldrh	r3, [r3, #0]
 8010c66:	3b01      	subs	r3, #1
 8010c68:	1a9b      	subs	r3, r3, r2
 8010c6a:	800b      	strh	r3, [r1, #0]
 8010c6c:	4770      	bx	lr
 8010c6e:	bf00      	nop
 8010c70:	200155a4 	.word	0x200155a4
 8010c74:	200155a0 	.word	0x200155a0

08010c78 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8010c78:	b510      	push	{r4, lr}
 8010c7a:	4b07      	ldr	r3, [pc, #28]	; (8010c98 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8010c7c:	781b      	ldrb	r3, [r3, #0]
 8010c7e:	2b01      	cmp	r3, #1
 8010c80:	d108      	bne.n	8010c94 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8010c82:	4b06      	ldr	r3, [pc, #24]	; (8010c9c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8010c84:	880c      	ldrh	r4, [r1, #0]
 8010c86:	881b      	ldrh	r3, [r3, #0]
 8010c88:	f9b0 2000 	ldrsh.w	r2, [r0]
 8010c8c:	3b01      	subs	r3, #1
 8010c8e:	1b1b      	subs	r3, r3, r4
 8010c90:	8003      	strh	r3, [r0, #0]
 8010c92:	800a      	strh	r2, [r1, #0]
 8010c94:	bd10      	pop	{r4, pc}
 8010c96:	bf00      	nop
 8010c98:	200155a4 	.word	0x200155a4
 8010c9c:	200155a0 	.word	0x200155a0

08010ca0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8010ca0:	b510      	push	{r4, lr}
 8010ca2:	4b0a      	ldr	r3, [pc, #40]	; (8010ccc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8010ca4:	781b      	ldrb	r3, [r3, #0]
 8010ca6:	2b01      	cmp	r3, #1
 8010ca8:	d10e      	bne.n	8010cc8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8010caa:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8010cae:	8843      	ldrh	r3, [r0, #2]
 8010cb0:	f9b0 4000 	ldrsh.w	r4, [r0]
 8010cb4:	8044      	strh	r4, [r0, #2]
 8010cb6:	18ca      	adds	r2, r1, r3
 8010cb8:	4b05      	ldr	r3, [pc, #20]	; (8010cd0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8010cba:	881b      	ldrh	r3, [r3, #0]
 8010cbc:	1a9b      	subs	r3, r3, r2
 8010cbe:	8003      	strh	r3, [r0, #0]
 8010cc0:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010cc4:	80c3      	strh	r3, [r0, #6]
 8010cc6:	8081      	strh	r1, [r0, #4]
 8010cc8:	bd10      	pop	{r4, pc}
 8010cca:	bf00      	nop
 8010ccc:	200155a4 	.word	0x200155a4
 8010cd0:	200155a0 	.word	0x200155a0

08010cd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8010cd4:	4b08      	ldr	r3, [pc, #32]	; (8010cf8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8010cd6:	781b      	ldrb	r3, [r3, #0]
 8010cd8:	2b01      	cmp	r3, #1
 8010cda:	d10c      	bne.n	8010cf6 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8010cdc:	8803      	ldrh	r3, [r0, #0]
 8010cde:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8010ce2:	8842      	ldrh	r2, [r0, #2]
 8010ce4:	8002      	strh	r2, [r0, #0]
 8010ce6:	185a      	adds	r2, r3, r1
 8010ce8:	4b04      	ldr	r3, [pc, #16]	; (8010cfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8010cea:	881b      	ldrh	r3, [r3, #0]
 8010cec:	1a9b      	subs	r3, r3, r2
 8010cee:	8043      	strh	r3, [r0, #2]
 8010cf0:	88c3      	ldrh	r3, [r0, #6]
 8010cf2:	8083      	strh	r3, [r0, #4]
 8010cf4:	80c1      	strh	r1, [r0, #6]
 8010cf6:	4770      	bx	lr
 8010cf8:	200155a4 	.word	0x200155a4
 8010cfc:	200155a0 	.word	0x200155a0

08010d00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8010d00:	b510      	push	{r4, lr}
 8010d02:	4b07      	ldr	r3, [pc, #28]	; (8010d20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8010d04:	781b      	ldrb	r3, [r3, #0]
 8010d06:	2b01      	cmp	r3, #1
 8010d08:	d108      	bne.n	8010d1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8010d0a:	f9b1 3000 	ldrsh.w	r3, [r1]
 8010d0e:	f9b0 4000 	ldrsh.w	r4, [r0]
 8010d12:	8003      	strh	r3, [r0, #0]
 8010d14:	8893      	ldrh	r3, [r2, #4]
 8010d16:	3b01      	subs	r3, #1
 8010d18:	1b1b      	subs	r3, r3, r4
 8010d1a:	800b      	strh	r3, [r1, #0]
 8010d1c:	bd10      	pop	{r4, pc}
 8010d1e:	bf00      	nop
 8010d20:	200155a4 	.word	0x200155a4

08010d24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8010d24:	b510      	push	{r4, lr}
 8010d26:	4b0a      	ldr	r3, [pc, #40]	; (8010d50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8010d28:	781b      	ldrb	r3, [r3, #0]
 8010d2a:	2b01      	cmp	r3, #1
 8010d2c:	460a      	mov	r2, r1
 8010d2e:	d10d      	bne.n	8010d4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8010d30:	8881      	ldrh	r1, [r0, #4]
 8010d32:	8803      	ldrh	r3, [r0, #0]
 8010d34:	440b      	add	r3, r1
 8010d36:	4601      	mov	r1, r0
 8010d38:	3b01      	subs	r3, #1
 8010d3a:	f821 3b02 	strh.w	r3, [r1], #2
 8010d3e:	f7ff ffdf 	bl	8010d00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8010d42:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010d46:	88c2      	ldrh	r2, [r0, #6]
 8010d48:	8082      	strh	r2, [r0, #4]
 8010d4a:	80c3      	strh	r3, [r0, #6]
 8010d4c:	bd10      	pop	{r4, pc}
 8010d4e:	bf00      	nop
 8010d50:	200155a4 	.word	0x200155a4

08010d54 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8010d54:	b570      	push	{r4, r5, r6, lr}
 8010d56:	4c0b      	ldr	r4, [pc, #44]	; (8010d84 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8010d58:	2300      	movs	r3, #0
 8010d5a:	4605      	mov	r5, r0
 8010d5c:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 8010d60:	6820      	ldr	r0, [r4, #0]
 8010d62:	460e      	mov	r6, r1
 8010d64:	b110      	cbz	r0, 8010d6c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x18>
 8010d66:	6803      	ldr	r3, [r0, #0]
 8010d68:	695b      	ldr	r3, [r3, #20]
 8010d6a:	4798      	blx	r3
 8010d6c:	6026      	str	r6, [r4, #0]
 8010d6e:	6833      	ldr	r3, [r6, #0]
 8010d70:	4630      	mov	r0, r6
 8010d72:	68db      	ldr	r3, [r3, #12]
 8010d74:	4798      	blx	r3
 8010d76:	682b      	ldr	r3, [r5, #0]
 8010d78:	4628      	mov	r0, r5
 8010d7a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010d7c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010d80:	4718      	bx	r3
 8010d82:	bf00      	nop
 8010d84:	200155f0 	.word	0x200155f0

08010d88 <_ZN8touchgfx11Application13requestRedrawEv>:
 8010d88:	4b06      	ldr	r3, [pc, #24]	; (8010da4 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8010d8a:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010d8e:	4b06      	ldr	r3, [pc, #24]	; (8010da8 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8010d90:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 8010d94:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010d98:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 8010d9c:	2100      	movs	r1, #0
 8010d9e:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 8010da2:	4770      	bx	lr
 8010da4:	200155a0 	.word	0x200155a0
 8010da8:	200155a2 	.word	0x200155a2

08010dac <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8010dac:	4b03      	ldr	r3, [pc, #12]	; (8010dbc <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8010dae:	6818      	ldr	r0, [r3, #0]
 8010db0:	b110      	cbz	r0, 8010db8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8010db2:	6803      	ldr	r3, [r0, #0]
 8010db4:	699b      	ldr	r3, [r3, #24]
 8010db6:	4718      	bx	r3
 8010db8:	4770      	bx	lr
 8010dba:	bf00      	nop
 8010dbc:	200155f0 	.word	0x200155f0

08010dc0 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8010dc0:	4770      	bx	lr
	...

08010dc4 <_ZN8touchgfx11Application4drawEv>:
 8010dc4:	b507      	push	{r0, r1, r2, lr}
 8010dc6:	4b09      	ldr	r3, [pc, #36]	; (8010dec <_ZN8touchgfx11Application4drawEv+0x28>)
 8010dc8:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010dcc:	4b08      	ldr	r3, [pc, #32]	; (8010df0 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8010dce:	f8ad 2004 	strh.w	r2, [sp, #4]
 8010dd2:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010dd6:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010dda:	6803      	ldr	r3, [r0, #0]
 8010ddc:	2100      	movs	r1, #0
 8010dde:	9100      	str	r1, [sp, #0]
 8010de0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010de2:	4669      	mov	r1, sp
 8010de4:	4798      	blx	r3
 8010de6:	b003      	add	sp, #12
 8010de8:	f85d fb04 	ldr.w	pc, [sp], #4
 8010dec:	200155a0 	.word	0x200155a0
 8010df0:	200155a2 	.word	0x200155a2

08010df4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8010df4:	4b03      	ldr	r3, [pc, #12]	; (8010e04 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8010df6:	6818      	ldr	r0, [r3, #0]
 8010df8:	b110      	cbz	r0, 8010e00 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8010dfa:	6803      	ldr	r3, [r0, #0]
 8010dfc:	69db      	ldr	r3, [r3, #28]
 8010dfe:	4718      	bx	r3
 8010e00:	4770      	bx	lr
 8010e02:	bf00      	nop
 8010e04:	200155f0 	.word	0x200155f0

08010e08 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8010e08:	4b03      	ldr	r3, [pc, #12]	; (8010e18 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8010e0a:	6818      	ldr	r0, [r3, #0]
 8010e0c:	b110      	cbz	r0, 8010e14 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8010e0e:	6803      	ldr	r3, [r0, #0]
 8010e10:	6a1b      	ldr	r3, [r3, #32]
 8010e12:	4718      	bx	r3
 8010e14:	4770      	bx	lr
 8010e16:	bf00      	nop
 8010e18:	200155f0 	.word	0x200155f0

08010e1c <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8010e1c:	2300      	movs	r3, #0
 8010e1e:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 8010e22:	4770      	bx	lr

08010e24 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8010e24:	4b03      	ldr	r3, [pc, #12]	; (8010e34 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8010e26:	6818      	ldr	r0, [r3, #0]
 8010e28:	b110      	cbz	r0, 8010e30 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8010e2a:	6803      	ldr	r3, [r0, #0]
 8010e2c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010e2e:	4718      	bx	r3
 8010e30:	4770      	bx	lr
 8010e32:	bf00      	nop
 8010e34:	200155f0 	.word	0x200155f0

08010e38 <_ZN8touchgfx11Application15handleTickEventEv>:
 8010e38:	b570      	push	{r4, r5, r6, lr}
 8010e3a:	4d32      	ldr	r5, [pc, #200]	; (8010f04 <_ZN8touchgfx11Application15handleTickEventEv+0xcc>)
 8010e3c:	4604      	mov	r4, r0
 8010e3e:	6828      	ldr	r0, [r5, #0]
 8010e40:	b140      	cbz	r0, 8010e54 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8010e42:	7a03      	ldrb	r3, [r0, #8]
 8010e44:	b933      	cbnz	r3, 8010e54 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8010e46:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 8010e4a:	6803      	ldr	r3, [r0, #0]
 8010e4c:	689b      	ldr	r3, [r3, #8]
 8010e4e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010e52:	4718      	bx	r3
 8010e54:	f894 3134 	ldrb.w	r3, [r4, #308]	; 0x134
 8010e58:	b97b      	cbnz	r3, 8010e7a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010e5a:	b170      	cbz	r0, 8010e7a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010e5c:	7a03      	ldrb	r3, [r0, #8]
 8010e5e:	b163      	cbz	r3, 8010e7a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010e60:	4b29      	ldr	r3, [pc, #164]	; (8010f08 <_ZN8touchgfx11Application15handleTickEventEv+0xd0>)
 8010e62:	6818      	ldr	r0, [r3, #0]
 8010e64:	b110      	cbz	r0, 8010e6c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8010e66:	6803      	ldr	r3, [r0, #0]
 8010e68:	691b      	ldr	r3, [r3, #16]
 8010e6a:	4798      	blx	r3
 8010e6c:	6828      	ldr	r0, [r5, #0]
 8010e6e:	6803      	ldr	r3, [r0, #0]
 8010e70:	68db      	ldr	r3, [r3, #12]
 8010e72:	4798      	blx	r3
 8010e74:	2301      	movs	r3, #1
 8010e76:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 8010e7a:	2500      	movs	r5, #0
 8010e7c:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 8010e80:	42a8      	cmp	r0, r5
 8010e82:	dd0c      	ble.n	8010e9e <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 8010e84:	1963      	adds	r3, r4, r5
 8010e86:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 8010e8a:	b132      	cbz	r2, 8010e9a <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 8010e8c:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 8010e90:	4413      	add	r3, r2
 8010e92:	6858      	ldr	r0, [r3, #4]
 8010e94:	6803      	ldr	r3, [r0, #0]
 8010e96:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8010e98:	4798      	blx	r3
 8010e9a:	3501      	adds	r5, #1
 8010e9c:	e7ee      	b.n	8010e7c <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 8010e9e:	2300      	movs	r3, #0
 8010ea0:	461a      	mov	r2, r3
 8010ea2:	4298      	cmp	r0, r3
 8010ea4:	d015      	beq.n	8010ed2 <_ZN8touchgfx11Application15handleTickEventEv+0x9a>
 8010ea6:	18e1      	adds	r1, r4, r3
 8010ea8:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 8010eac:	b16d      	cbz	r5, 8010eca <_ZN8touchgfx11Application15handleTickEventEv+0x92>
 8010eae:	429a      	cmp	r2, r3
 8010eb0:	d00a      	beq.n	8010ec8 <_ZN8touchgfx11Application15handleTickEventEv+0x90>
 8010eb2:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 8010eb6:	4431      	add	r1, r6
 8010eb8:	684e      	ldr	r6, [r1, #4]
 8010eba:	b291      	uxth	r1, r2
 8010ebc:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8010ec0:	604e      	str	r6, [r1, #4]
 8010ec2:	18a1      	adds	r1, r4, r2
 8010ec4:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 8010ec8:	3201      	adds	r2, #1
 8010eca:	3301      	adds	r3, #1
 8010ecc:	e7e9      	b.n	8010ea2 <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 8010ece:	f8a4 3084 	strh.w	r3, [r4, #132]	; 0x84
 8010ed2:	f8b4 5084 	ldrh.w	r5, [r4, #132]	; 0x84
 8010ed6:	4295      	cmp	r5, r2
 8010ed8:	dd0d      	ble.n	8010ef6 <_ZN8touchgfx11Application15handleTickEventEv+0xbe>
 8010eda:	1e6b      	subs	r3, r5, #1
 8010edc:	b29b      	uxth	r3, r3
 8010ede:	eb04 0183 	add.w	r1, r4, r3, lsl #2
 8010ee2:	4618      	mov	r0, r3
 8010ee4:	3104      	adds	r1, #4
 8010ee6:	4285      	cmp	r5, r0
 8010ee8:	ddf1      	ble.n	8010ece <_ZN8touchgfx11Application15handleTickEventEv+0x96>
 8010eea:	f851 6f04 	ldr.w	r6, [r1, #4]!
 8010eee:	f841 6c04 	str.w	r6, [r1, #-4]
 8010ef2:	3001      	adds	r0, #1
 8010ef4:	e7f7      	b.n	8010ee6 <_ZN8touchgfx11Application15handleTickEventEv+0xae>
 8010ef6:	4b04      	ldr	r3, [pc, #16]	; (8010f08 <_ZN8touchgfx11Application15handleTickEventEv+0xd0>)
 8010ef8:	6818      	ldr	r0, [r3, #0]
 8010efa:	b110      	cbz	r0, 8010f02 <_ZN8touchgfx11Application15handleTickEventEv+0xca>
 8010efc:	6803      	ldr	r3, [r0, #0]
 8010efe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010f00:	e7a5      	b.n	8010e4e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8010f02:	bd70      	pop	{r4, r5, r6, pc}
 8010f04:	200155f4 	.word	0x200155f4
 8010f08:	200155f0 	.word	0x200155f0

08010f0c <_ZN8touchgfx11ApplicationD1Ev>:
 8010f0c:	4770      	bx	lr

08010f0e <_ZN8touchgfx11ApplicationD0Ev>:
 8010f0e:	b510      	push	{r4, lr}
 8010f10:	f44f 719c 	mov.w	r1, #312	; 0x138
 8010f14:	4604      	mov	r4, r0
 8010f16:	f00f fbb7 	bl	8020688 <_ZdlPvj>
 8010f1a:	4620      	mov	r0, r4
 8010f1c:	bd10      	pop	{r4, pc}

08010f1e <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8010f1e:	b510      	push	{r4, lr}
 8010f20:	f9b1 4000 	ldrsh.w	r4, [r1]
 8010f24:	888a      	ldrh	r2, [r1, #4]
 8010f26:	f9b0 3000 	ldrsh.w	r3, [r0]
 8010f2a:	4422      	add	r2, r4
 8010f2c:	b212      	sxth	r2, r2
 8010f2e:	4293      	cmp	r3, r2
 8010f30:	da15      	bge.n	8010f5e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8010f32:	8882      	ldrh	r2, [r0, #4]
 8010f34:	4413      	add	r3, r2
 8010f36:	b21b      	sxth	r3, r3
 8010f38:	429c      	cmp	r4, r3
 8010f3a:	da10      	bge.n	8010f5e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8010f3c:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8010f40:	88c9      	ldrh	r1, [r1, #6]
 8010f42:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8010f46:	4419      	add	r1, r3
 8010f48:	b209      	sxth	r1, r1
 8010f4a:	428a      	cmp	r2, r1
 8010f4c:	da07      	bge.n	8010f5e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8010f4e:	88c0      	ldrh	r0, [r0, #6]
 8010f50:	4410      	add	r0, r2
 8010f52:	b200      	sxth	r0, r0
 8010f54:	4283      	cmp	r3, r0
 8010f56:	bfac      	ite	ge
 8010f58:	2000      	movge	r0, #0
 8010f5a:	2001      	movlt	r0, #1
 8010f5c:	bd10      	pop	{r4, pc}
 8010f5e:	2000      	movs	r0, #0
 8010f60:	e7fc      	b.n	8010f5c <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08010f62 <_ZN8touchgfx4Rect10restrictToEss>:
 8010f62:	f9b0 3000 	ldrsh.w	r3, [r0]
 8010f66:	2b00      	cmp	r3, #0
 8010f68:	b510      	push	{r4, lr}
 8010f6a:	da04      	bge.n	8010f76 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8010f6c:	8884      	ldrh	r4, [r0, #4]
 8010f6e:	4423      	add	r3, r4
 8010f70:	8083      	strh	r3, [r0, #4]
 8010f72:	2300      	movs	r3, #0
 8010f74:	8003      	strh	r3, [r0, #0]
 8010f76:	f9b0 4000 	ldrsh.w	r4, [r0]
 8010f7a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010f7e:	1b09      	subs	r1, r1, r4
 8010f80:	428b      	cmp	r3, r1
 8010f82:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8010f86:	bfc8      	it	gt
 8010f88:	8081      	strhgt	r1, [r0, #4]
 8010f8a:	2b00      	cmp	r3, #0
 8010f8c:	da04      	bge.n	8010f98 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8010f8e:	88c1      	ldrh	r1, [r0, #6]
 8010f90:	440b      	add	r3, r1
 8010f92:	80c3      	strh	r3, [r0, #6]
 8010f94:	2300      	movs	r3, #0
 8010f96:	8043      	strh	r3, [r0, #2]
 8010f98:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8010f9c:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8010fa0:	1a52      	subs	r2, r2, r1
 8010fa2:	4293      	cmp	r3, r2
 8010fa4:	bfc8      	it	gt
 8010fa6:	80c2      	strhgt	r2, [r0, #6]
 8010fa8:	bd10      	pop	{r4, pc}
	...

08010fac <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8010fac:	b510      	push	{r4, lr}
 8010fae:	4b10      	ldr	r3, [pc, #64]	; (8010ff0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8010fb0:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010fb4:	4b0f      	ldr	r3, [pc, #60]	; (8010ff4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8010fb6:	460c      	mov	r4, r1
 8010fb8:	4620      	mov	r0, r4
 8010fba:	f9b3 1000 	ldrsh.w	r1, [r3]
 8010fbe:	f7ff ffd0 	bl	8010f62 <_ZN8touchgfx4Rect10restrictToEss>
 8010fc2:	4b0d      	ldr	r3, [pc, #52]	; (8010ff8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8010fc4:	6818      	ldr	r0, [r3, #0]
 8010fc6:	b190      	cbz	r0, 8010fee <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8010fc8:	6803      	ldr	r3, [r0, #0]
 8010fca:	4621      	mov	r1, r4
 8010fcc:	689b      	ldr	r3, [r3, #8]
 8010fce:	4798      	blx	r3
 8010fd0:	4b0a      	ldr	r3, [pc, #40]	; (8010ffc <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8010fd2:	6818      	ldr	r0, [r3, #0]
 8010fd4:	b118      	cbz	r0, 8010fde <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8010fd6:	6803      	ldr	r3, [r0, #0]
 8010fd8:	4621      	mov	r1, r4
 8010fda:	689b      	ldr	r3, [r3, #8]
 8010fdc:	4798      	blx	r3
 8010fde:	4b08      	ldr	r3, [pc, #32]	; (8011000 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8010fe0:	6818      	ldr	r0, [r3, #0]
 8010fe2:	6803      	ldr	r3, [r0, #0]
 8010fe4:	4621      	mov	r1, r4
 8010fe6:	69db      	ldr	r3, [r3, #28]
 8010fe8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010fec:	4718      	bx	r3
 8010fee:	bd10      	pop	{r4, pc}
 8010ff0:	200155a2 	.word	0x200155a2
 8010ff4:	200155a0 	.word	0x200155a0
 8010ff8:	200155f0 	.word	0x200155f0
 8010ffc:	200155ec 	.word	0x200155ec
 8011000:	200155ac 	.word	0x200155ac

08011004 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8011004:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011006:	4606      	mov	r6, r0
 8011008:	4608      	mov	r0, r1
 801100a:	460f      	mov	r7, r1
 801100c:	f7f9 fed1 	bl	800adb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011010:	b9e8      	cbnz	r0, 801104e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8011012:	f9b7 5000 	ldrsh.w	r5, [r7]
 8011016:	f9b6 4000 	ldrsh.w	r4, [r6]
 801101a:	42a5      	cmp	r5, r4
 801101c:	db17      	blt.n	801104e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801101e:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8011022:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8011026:	429a      	cmp	r2, r3
 8011028:	db11      	blt.n	801104e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801102a:	88b9      	ldrh	r1, [r7, #4]
 801102c:	440d      	add	r5, r1
 801102e:	88b1      	ldrh	r1, [r6, #4]
 8011030:	440c      	add	r4, r1
 8011032:	b22d      	sxth	r5, r5
 8011034:	b224      	sxth	r4, r4
 8011036:	42a5      	cmp	r5, r4
 8011038:	dc09      	bgt.n	801104e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801103a:	88f8      	ldrh	r0, [r7, #6]
 801103c:	4410      	add	r0, r2
 801103e:	88f2      	ldrh	r2, [r6, #6]
 8011040:	4413      	add	r3, r2
 8011042:	b200      	sxth	r0, r0
 8011044:	b21b      	sxth	r3, r3
 8011046:	4298      	cmp	r0, r3
 8011048:	bfcc      	ite	gt
 801104a:	2000      	movgt	r0, #0
 801104c:	2001      	movle	r0, #1
 801104e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08011050 <_ZN8touchgfx11Application11getInstanceEv>:
 8011050:	4b01      	ldr	r3, [pc, #4]	; (8011058 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8011052:	6818      	ldr	r0, [r3, #0]
 8011054:	4770      	bx	lr
 8011056:	bf00      	nop
 8011058:	20015600 	.word	0x20015600

0801105c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 801105c:	2300      	movs	r3, #0
 801105e:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 8011062:	f100 0288 	add.w	r2, r0, #136	; 0x88
 8011066:	30a8      	adds	r0, #168	; 0xa8
 8011068:	f802 3b01 	strb.w	r3, [r2], #1
 801106c:	4282      	cmp	r2, r0
 801106e:	d1fb      	bne.n	8011068 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 8011070:	4770      	bx	lr

08011072 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8011072:	4603      	mov	r3, r0
 8011074:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8011078:	2200      	movs	r2, #0
 801107a:	801a      	strh	r2, [r3, #0]
 801107c:	805a      	strh	r2, [r3, #2]
 801107e:	809a      	strh	r2, [r3, #4]
 8011080:	80da      	strh	r2, [r3, #6]
 8011082:	3308      	adds	r3, #8
 8011084:	428b      	cmp	r3, r1
 8011086:	d1f8      	bne.n	801107a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8011088:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 801108c:	4770      	bx	lr
	...

08011090 <_ZN8touchgfx11ApplicationC1Ev>:
 8011090:	b570      	push	{r4, r5, r6, lr}
 8011092:	4b19      	ldr	r3, [pc, #100]	; (80110f8 <_ZN8touchgfx11ApplicationC1Ev+0x68>)
 8011094:	6003      	str	r3, [r0, #0]
 8011096:	2500      	movs	r5, #0
 8011098:	4604      	mov	r4, r0
 801109a:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 801109e:	30a8      	adds	r0, #168	; 0xa8
 80110a0:	f7ff ffe7 	bl	8011072 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80110a4:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 80110a8:	f7ff ffe3 	bl	8011072 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80110ac:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 80110b0:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 80110b4:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 80110b8:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 80110bc:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 80110c0:	490e      	ldr	r1, [pc, #56]	; (80110fc <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 80110c2:	480f      	ldr	r0, [pc, #60]	; (8011100 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 80110c4:	4e0f      	ldr	r6, [pc, #60]	; (8011104 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 80110c6:	f00e fec3 	bl	801fe50 <CRC_Lock>
 80110ca:	4b0f      	ldr	r3, [pc, #60]	; (8011108 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 80110cc:	b158      	cbz	r0, 80110e6 <_ZN8touchgfx11ApplicationC1Ev+0x56>
 80110ce:	801d      	strh	r5, [r3, #0]
 80110d0:	4a0e      	ldr	r2, [pc, #56]	; (801110c <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 80110d2:	2300      	movs	r3, #0
 80110d4:	6013      	str	r3, [r2, #0]
 80110d6:	4a0e      	ldr	r2, [pc, #56]	; (8011110 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 80110d8:	6033      	str	r3, [r6, #0]
 80110da:	4620      	mov	r0, r4
 80110dc:	6013      	str	r3, [r2, #0]
 80110de:	f7ff ffbd 	bl	801105c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 80110e2:	4620      	mov	r0, r4
 80110e4:	bd70      	pop	{r4, r5, r6, pc}
 80110e6:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80110ea:	2002      	movs	r0, #2
 80110ec:	801a      	strh	r2, [r3, #0]
 80110ee:	6030      	str	r0, [r6, #0]
 80110f0:	f001 fae8 	bl	80126c4 <_ZN8touchgfx6Screen4drawEv>
 80110f4:	e7ec      	b.n	80110d0 <_ZN8touchgfx11ApplicationC1Ev+0x40>
 80110f6:	bf00      	nop
 80110f8:	08024240 	.word	0x08024240
 80110fc:	b5e8b5cd 	.word	0xb5e8b5cd
 8011100:	f407a5c2 	.word	0xf407a5c2
 8011104:	200155f0 	.word	0x200155f0
 8011108:	2000008c 	.word	0x2000008c
 801110c:	20015600 	.word	0x20015600
 8011110:	200155f4 	.word	0x200155f4

08011114 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8011114:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8011118:	3b01      	subs	r3, #1
 801111a:	b29b      	uxth	r3, r3
 801111c:	428b      	cmp	r3, r1
 801111e:	b510      	push	{r4, lr}
 8011120:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8011124:	d908      	bls.n	8011138 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8011126:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801112a:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 801112e:	681a      	ldr	r2, [r3, #0]
 8011130:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8011134:	685a      	ldr	r2, [r3, #4]
 8011136:	6062      	str	r2, [r4, #4]
 8011138:	bd10      	pop	{r4, pc}
	...

0801113c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 801113c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011140:	4b94      	ldr	r3, [pc, #592]	; (8011394 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 8011142:	b08f      	sub	sp, #60	; 0x3c
 8011144:	ac0a      	add	r4, sp, #40	; 0x28
 8011146:	e884 0006 	stmia.w	r4, {r1, r2}
 801114a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801114e:	4b92      	ldr	r3, [pc, #584]	; (8011398 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>)
 8011150:	4683      	mov	fp, r0
 8011152:	f9b3 1000 	ldrsh.w	r1, [r3]
 8011156:	4620      	mov	r0, r4
 8011158:	f7ff ff03 	bl	8010f62 <_ZN8touchgfx4Rect10restrictToEss>
 801115c:	4620      	mov	r0, r4
 801115e:	f7f9 fe28 	bl	800adb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011162:	2800      	cmp	r0, #0
 8011164:	d16a      	bne.n	801123c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8011166:	9403      	str	r4, [sp, #12]
 8011168:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 801116c:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 8011170:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 8011174:	2400      	movs	r4, #0
 8011176:	9301      	str	r3, [sp, #4]
 8011178:	36a0      	adds	r6, #160	; 0xa0
 801117a:	42a5      	cmp	r5, r4
 801117c:	d00d      	beq.n	801119a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 801117e:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 8011182:	9803      	ldr	r0, [sp, #12]
 8011184:	f7ff ff3e 	bl	8011004 <_ZNK8touchgfx4Rect8includesERKS0_>
 8011188:	b128      	cbz	r0, 8011196 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 801118a:	1e69      	subs	r1, r5, #1
 801118c:	1b09      	subs	r1, r1, r4
 801118e:	b289      	uxth	r1, r1
 8011190:	9801      	ldr	r0, [sp, #4]
 8011192:	f7ff ffbf 	bl	8011114 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011196:	3401      	adds	r4, #1
 8011198:	e7ef      	b.n	801117a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e>
 801119a:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 801119e:	9704      	str	r7, [sp, #16]
 80111a0:	1e7b      	subs	r3, r7, #1
 80111a2:	9302      	str	r3, [sp, #8]
 80111a4:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 80111a8:	2400      	movs	r4, #0
 80111aa:	4655      	mov	r5, sl
 80111ac:	9705      	str	r7, [sp, #20]
 80111ae:	4626      	mov	r6, r4
 80111b0:	9b05      	ldr	r3, [sp, #20]
 80111b2:	2b00      	cmp	r3, #0
 80111b4:	d078      	beq.n	80112a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x16c>
 80111b6:	9903      	ldr	r1, [sp, #12]
 80111b8:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 80111bc:	f7ff feaf 	bl	8010f1e <_ZNK8touchgfx4Rect9intersectERKS0_>
 80111c0:	b360      	cbz	r0, 801121c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80111c2:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 80111c6:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 80111ca:	f9bd 902a 	ldrsh.w	r9, [sp, #42]	; 0x2a
 80111ce:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 80111d2:	45e6      	cmp	lr, ip
 80111d4:	db35      	blt.n	8011242 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80111d6:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80111da:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 80111de:	4472      	add	r2, lr
 80111e0:	4463      	add	r3, ip
 80111e2:	b212      	sxth	r2, r2
 80111e4:	b21b      	sxth	r3, r3
 80111e6:	429a      	cmp	r2, r3
 80111e8:	dc2b      	bgt.n	8011242 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80111ea:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 80111ee:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80111f2:	fa1f f288 	uxth.w	r2, r8
 80111f6:	4413      	add	r3, r2
 80111f8:	b29b      	uxth	r3, r3
 80111fa:	45c1      	cmp	r9, r8
 80111fc:	fa0f fe83 	sxth.w	lr, r3
 8011200:	fa1f fc89 	uxth.w	ip, r9
 8011204:	db0f      	blt.n	8011226 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8011206:	eba3 030c 	sub.w	r3, r3, ip
 801120a:	1ac9      	subs	r1, r1, r3
 801120c:	b209      	sxth	r1, r1
 801120e:	2900      	cmp	r1, #0
 8011210:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8011214:	dd12      	ble.n	801123c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8011216:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 801121a:	4604      	mov	r4, r0
 801121c:	9b05      	ldr	r3, [sp, #20]
 801121e:	3b01      	subs	r3, #1
 8011220:	9305      	str	r3, [sp, #20]
 8011222:	3d08      	subs	r5, #8
 8011224:	e7c4      	b.n	80111b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x74>
 8011226:	4461      	add	r1, ip
 8011228:	b209      	sxth	r1, r1
 801122a:	4571      	cmp	r1, lr
 801122c:	dc3a      	bgt.n	80112a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 801122e:	eba2 020c 	sub.w	r2, r2, ip
 8011232:	b212      	sxth	r2, r2
 8011234:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8011238:	2a00      	cmp	r2, #0
 801123a:	dcee      	bgt.n	801121a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 801123c:	b00f      	add	sp, #60	; 0x3c
 801123e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011242:	45c1      	cmp	r9, r8
 8011244:	db2e      	blt.n	80112a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8011246:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 801124a:	4499      	add	r9, r3
 801124c:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 8011250:	4498      	add	r8, r3
 8011252:	fa0f f989 	sxth.w	r9, r9
 8011256:	fa0f f888 	sxth.w	r8, r8
 801125a:	45c1      	cmp	r9, r8
 801125c:	dc22      	bgt.n	80112a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 801125e:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 8011262:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8011266:	fa1f f28c 	uxth.w	r2, ip
 801126a:	4413      	add	r3, r2
 801126c:	b29b      	uxth	r3, r3
 801126e:	45e6      	cmp	lr, ip
 8011270:	fa1f f88e 	uxth.w	r8, lr
 8011274:	fa0f f983 	sxth.w	r9, r3
 8011278:	db0a      	blt.n	8011290 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x154>
 801127a:	eba3 0308 	sub.w	r3, r3, r8
 801127e:	1ac9      	subs	r1, r1, r3
 8011280:	b209      	sxth	r1, r1
 8011282:	2900      	cmp	r1, #0
 8011284:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8011288:	ddd8      	ble.n	801123c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801128a:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 801128e:	e7c4      	b.n	801121a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8011290:	4441      	add	r1, r8
 8011292:	b209      	sxth	r1, r1
 8011294:	4549      	cmp	r1, r9
 8011296:	dc05      	bgt.n	80112a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8011298:	eba2 0208 	sub.w	r2, r2, r8
 801129c:	b212      	sxth	r2, r2
 801129e:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80112a2:	e7c9      	b.n	8011238 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 80112a4:	4606      	mov	r6, r0
 80112a6:	e7b9      	b.n	801121c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80112a8:	2c00      	cmp	r4, #0
 80112aa:	f47f af7d 	bne.w	80111a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c>
 80112ae:	2e00      	cmp	r6, #0
 80112b0:	f000 81e1 	beq.w	8011676 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 80112b4:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 80112b8:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 80112bc:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80112c0:	b2b9      	uxth	r1, r7
 80112c2:	9105      	str	r1, [sp, #20]
 80112c4:	9805      	ldr	r0, [sp, #20]
 80112c6:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80112ca:	4401      	add	r1, r0
 80112cc:	b2b3      	uxth	r3, r6
 80112ce:	b289      	uxth	r1, r1
 80112d0:	441a      	add	r2, r3
 80112d2:	9106      	str	r1, [sp, #24]
 80112d4:	b292      	uxth	r2, r2
 80112d6:	f9bd 9018 	ldrsh.w	r9, [sp, #24]
 80112da:	fa0f f882 	sxth.w	r8, r2
 80112de:	4655      	mov	r5, sl
 80112e0:	e9cd 2307 	strd	r2, r3, [sp, #28]
 80112e4:	9b04      	ldr	r3, [sp, #16]
 80112e6:	2b00      	cmp	r3, #0
 80112e8:	d058      	beq.n	801139c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x260>
 80112ea:	9903      	ldr	r1, [sp, #12]
 80112ec:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 80112f0:	f7ff fe15 	bl	8010f1e <_ZNK8touchgfx4Rect9intersectERKS0_>
 80112f4:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 80112f8:	b1d8      	cbz	r0, 8011332 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 80112fa:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 80112fe:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 8011302:	4576      	cmp	r6, lr
 8011304:	dc26      	bgt.n	8011354 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 8011306:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 801130a:	44f4      	add	ip, lr
 801130c:	fa0f fc8c 	sxth.w	ip, ip
 8011310:	45e0      	cmp	r8, ip
 8011312:	db1f      	blt.n	8011354 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 8011314:	428f      	cmp	r7, r1
 8011316:	fa1f fc81 	uxth.w	ip, r1
 801131a:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 801131e:	dc0f      	bgt.n	8011340 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x204>
 8011320:	9806      	ldr	r0, [sp, #24]
 8011322:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 8011326:	eba0 0c0c 	sub.w	ip, r0, ip
 801132a:	eba1 010c 	sub.w	r1, r1, ip
 801132e:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 8011332:	4620      	mov	r0, r4
 8011334:	9904      	ldr	r1, [sp, #16]
 8011336:	3901      	subs	r1, #1
 8011338:	9104      	str	r1, [sp, #16]
 801133a:	3d08      	subs	r5, #8
 801133c:	4604      	mov	r4, r0
 801133e:	e7cf      	b.n	80112e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a4>
 8011340:	4461      	add	r1, ip
 8011342:	b209      	sxth	r1, r1
 8011344:	4549      	cmp	r1, r9
 8011346:	dcf5      	bgt.n	8011334 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8011348:	9905      	ldr	r1, [sp, #20]
 801134a:	eba1 0c0c 	sub.w	ip, r1, ip
 801134e:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 8011352:	e7ee      	b.n	8011332 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8011354:	428f      	cmp	r7, r1
 8011356:	dced      	bgt.n	8011334 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8011358:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 801135c:	4461      	add	r1, ip
 801135e:	b209      	sxth	r1, r1
 8011360:	4589      	cmp	r9, r1
 8011362:	dbe7      	blt.n	8011334 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8011364:	4576      	cmp	r6, lr
 8011366:	fa1f fc8e 	uxth.w	ip, lr
 801136a:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 801136e:	dc08      	bgt.n	8011382 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 8011370:	eba2 0c0c 	sub.w	ip, r2, ip
 8011374:	eba1 010c 	sub.w	r1, r1, ip
 8011378:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 801137c:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 8011380:	e7d7      	b.n	8011332 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8011382:	4461      	add	r1, ip
 8011384:	b209      	sxth	r1, r1
 8011386:	4588      	cmp	r8, r1
 8011388:	dbd4      	blt.n	8011334 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 801138a:	eba3 0c0c 	sub.w	ip, r3, ip
 801138e:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 8011392:	e7ce      	b.n	8011332 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8011394:	200155a2 	.word	0x200155a2
 8011398:	200155a0 	.word	0x200155a0
 801139c:	2c00      	cmp	r4, #0
 801139e:	f000 816a 	beq.w	8011676 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 80113a2:	9b02      	ldr	r3, [sp, #8]
 80113a4:	3301      	adds	r3, #1
 80113a6:	f000 8166 	beq.w	8011676 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 80113aa:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 80113ae:	4621      	mov	r1, r4
 80113b0:	9803      	ldr	r0, [sp, #12]
 80113b2:	f7ff fe27 	bl	8011004 <_ZNK8touchgfx4Rect8includesERKS0_>
 80113b6:	b120      	cbz	r0, 80113c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x286>
 80113b8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80113bc:	9801      	ldr	r0, [sp, #4]
 80113be:	f7ff fea9 	bl	8011114 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80113c2:	9903      	ldr	r1, [sp, #12]
 80113c4:	4620      	mov	r0, r4
 80113c6:	f7ff fdaa 	bl	8010f1e <_ZNK8touchgfx4Rect9intersectERKS0_>
 80113ca:	2800      	cmp	r0, #0
 80113cc:	f000 809b 	beq.w	8011506 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 80113d0:	f9ba 00a0 	ldrsh.w	r0, [sl, #160]	; 0xa0
 80113d4:	f9ba 30a4 	ldrsh.w	r3, [sl, #164]	; 0xa4
 80113d8:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 80113dc:	9309      	str	r3, [sp, #36]	; 0x24
 80113de:	b281      	uxth	r1, r0
 80113e0:	eb01 0c03 	add.w	ip, r1, r3
 80113e4:	fa1f f98c 	uxth.w	r9, ip
 80113e8:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 80113ec:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 80113f0:	f9ba 20a2 	ldrsh.w	r2, [sl, #162]	; 0xa2
 80113f4:	b2ab      	uxth	r3, r5
 80113f6:	eb03 040c 	add.w	r4, r3, ip
 80113fa:	b2a4      	uxth	r4, r4
 80113fc:	9405      	str	r4, [sp, #20]
 80113fe:	f9bd 4014 	ldrsh.w	r4, [sp, #20]
 8011402:	9404      	str	r4, [sp, #16]
 8011404:	4285      	cmp	r5, r0
 8011406:	f8bb 40e8 	ldrh.w	r4, [fp, #232]	; 0xe8
 801140a:	f340 809a 	ble.w	8011542 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x406>
 801140e:	1a5b      	subs	r3, r3, r1
 8011410:	b29b      	uxth	r3, r3
 8011412:	4596      	cmp	lr, r2
 8011414:	fa0f f589 	sxth.w	r5, r9
 8011418:	b21e      	sxth	r6, r3
 801141a:	dd2e      	ble.n	801147a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x33e>
 801141c:	9f02      	ldr	r7, [sp, #8]
 801141e:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 8011422:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8011426:	9f04      	ldr	r7, [sp, #16]
 8011428:	1b7f      	subs	r7, r7, r5
 801142a:	f8b8 50ae 	ldrh.w	r5, [r8, #174]	; 0xae
 801142e:	fa1f fe8e 	uxth.w	lr, lr
 8011432:	b292      	uxth	r2, r2
 8011434:	ebae 0102 	sub.w	r1, lr, r2
 8011438:	4486      	add	lr, r0
 801143a:	442a      	add	r2, r5
 801143c:	b289      	uxth	r1, r1
 801143e:	fa0f fe8e 	sxth.w	lr, lr
 8011442:	b212      	sxth	r2, r2
 8011444:	b20c      	sxth	r4, r1
 8011446:	ebae 0202 	sub.w	r2, lr, r2
 801144a:	4367      	muls	r7, r4
 801144c:	4372      	muls	r2, r6
 801144e:	4297      	cmp	r7, r2
 8011450:	db09      	blt.n	8011466 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32a>
 8011452:	f8b8 20a8 	ldrh.w	r2, [r8, #168]	; 0xa8
 8011456:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 801145a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801145e:	449c      	add	ip, r3
 8011460:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8011464:	e680      	b.n	8011168 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011466:	4401      	add	r1, r0
 8011468:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 801146c:	f8a8 60ac 	strh.w	r6, [r8, #172]	; 0xac
 8011470:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8011474:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8011478:	e676      	b.n	8011168 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801147a:	9f04      	ldr	r7, [sp, #16]
 801147c:	42bd      	cmp	r5, r7
 801147e:	da27      	bge.n	80114d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x394>
 8011480:	9902      	ldr	r1, [sp, #8]
 8011482:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 8011486:	eb0b 00c1 	add.w	r0, fp, r1, lsl #3
 801148a:	eb04 010e 	add.w	r1, r4, lr
 801148e:	fa1f f881 	uxth.w	r8, r1
 8011492:	f8b0 10ae 	ldrh.w	r1, [r0, #174]	; 0xae
 8011496:	4411      	add	r1, r2
 8011498:	eba1 0108 	sub.w	r1, r1, r8
 801149c:	b289      	uxth	r1, r1
 801149e:	fa0f f988 	sxth.w	r9, r8
 80114a2:	eba2 020e 	sub.w	r2, r2, lr
 80114a6:	fa0f f881 	sxth.w	r8, r1
 80114aa:	1b7f      	subs	r7, r7, r5
 80114ac:	4372      	muls	r2, r6
 80114ae:	fb08 f707 	mul.w	r7, r8, r7
 80114b2:	42ba      	cmp	r2, r7
 80114b4:	dc06      	bgt.n	80114c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 80114b6:	f8a0 90aa 	strh.w	r9, [r0, #170]	; 0xaa
 80114ba:	f8a0 80ae 	strh.w	r8, [r0, #174]	; 0xae
 80114be:	f8b0 20a8 	ldrh.w	r2, [r0, #168]	; 0xa8
 80114c2:	e7ca      	b.n	801145a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 80114c4:	f8a0 60ac 	strh.w	r6, [r0, #172]	; 0xac
 80114c8:	4421      	add	r1, r4
 80114ca:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80114ce:	e64b      	b.n	8011168 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80114d0:	9d05      	ldr	r5, [sp, #20]
 80114d2:	eba9 0505 	sub.w	r5, r9, r5
 80114d6:	b2ad      	uxth	r5, r5
 80114d8:	2c06      	cmp	r4, #6
 80114da:	fa0f fe85 	sxth.w	lr, r5
 80114de:	d818      	bhi.n	8011512 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d6>
 80114e0:	9b04      	ldr	r3, [sp, #16]
 80114e2:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 80114e6:	1c63      	adds	r3, r4, #1
 80114e8:	f9ba 10a6 	ldrsh.w	r1, [sl, #166]	; 0xa6
 80114ec:	f8aa e0a4 	strh.w	lr, [sl, #164]	; 0xa4
 80114f0:	f8ab 30e8 	strh.w	r3, [fp, #232]	; 0xe8
 80114f4:	9b01      	ldr	r3, [sp, #4]
 80114f6:	9d01      	ldr	r5, [sp, #4]
 80114f8:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 80114fc:	f825 0034 	strh.w	r0, [r5, r4, lsl #3]
 8011500:	805a      	strh	r2, [r3, #2]
 8011502:	809e      	strh	r6, [r3, #4]
 8011504:	80d9      	strh	r1, [r3, #6]
 8011506:	9b02      	ldr	r3, [sp, #8]
 8011508:	3b01      	subs	r3, #1
 801150a:	9302      	str	r3, [sp, #8]
 801150c:	f1aa 0a08 	sub.w	sl, sl, #8
 8011510:	e747      	b.n	80113a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x266>
 8011512:	9a02      	ldr	r2, [sp, #8]
 8011514:	45b6      	cmp	lr, r6
 8011516:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801151a:	db0d      	blt.n	8011538 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fc>
 801151c:	449c      	add	ip, r3
 801151e:	fa1f fc8c 	uxth.w	ip, ip
 8011522:	445a      	add	r2, fp
 8011524:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8011528:	448c      	add	ip, r1
 801152a:	f8ad 0028 	strh.w	r0, [sp, #40]	; 0x28
 801152e:	f8a2 c0a8 	strh.w	ip, [r2, #168]	; 0xa8
 8011532:	f8a2 e0ac 	strh.w	lr, [r2, #172]	; 0xac
 8011536:	e617      	b.n	8011168 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011538:	445a      	add	r2, fp
 801153a:	44ac      	add	ip, r5
 801153c:	f8a2 60ac 	strh.w	r6, [r2, #172]	; 0xac
 8011540:	e78e      	b.n	8011460 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 8011542:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8011546:	fa1f f18e 	uxth.w	r1, lr
 801154a:	eb01 0806 	add.w	r8, r1, r6
 801154e:	b293      	uxth	r3, r2
 8011550:	fa1f f888 	uxth.w	r8, r8
 8011554:	9306      	str	r3, [sp, #24]
 8011556:	fa0f f388 	sxth.w	r3, r8
 801155a:	9307      	str	r3, [sp, #28]
 801155c:	9f06      	ldr	r7, [sp, #24]
 801155e:	f8ba 30a6 	ldrh.w	r3, [sl, #166]	; 0xa6
 8011562:	443b      	add	r3, r7
 8011564:	b29b      	uxth	r3, r3
 8011566:	4596      	cmp	lr, r2
 8011568:	9308      	str	r3, [sp, #32]
 801156a:	da25      	bge.n	80115b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
 801156c:	9905      	ldr	r1, [sp, #20]
 801156e:	eba3 0308 	sub.w	r3, r3, r8
 8011572:	eba9 0401 	sub.w	r4, r9, r1
 8011576:	b2a4      	uxth	r4, r4
 8011578:	b29b      	uxth	r3, r3
 801157a:	fa0f f984 	sxth.w	r9, r4
 801157e:	b219      	sxth	r1, r3
 8011580:	eba2 020e 	sub.w	r2, r2, lr
 8011584:	1b40      	subs	r0, r0, r5
 8011586:	fb09 f202 	mul.w	r2, r9, r2
 801158a:	4348      	muls	r0, r1
 801158c:	4282      	cmp	r2, r0
 801158e:	9a02      	ldr	r2, [sp, #8]
 8011590:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8011594:	445a      	add	r2, fp
 8011596:	dc06      	bgt.n	80115a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 8011598:	9b07      	ldr	r3, [sp, #28]
 801159a:	f8a2 10ae 	strh.w	r1, [r2, #174]	; 0xae
 801159e:	f8a2 30aa 	strh.w	r3, [r2, #170]	; 0xaa
 80115a2:	44a4      	add	ip, r4
 80115a4:	e75c      	b.n	8011460 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 80115a6:	9904      	ldr	r1, [sp, #16]
 80115a8:	f8a2 90ac 	strh.w	r9, [r2, #172]	; 0xac
 80115ac:	f8a2 10a8 	strh.w	r1, [r2, #168]	; 0xa8
 80115b0:	4433      	add	r3, r6
 80115b2:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80115b6:	e5d7      	b.n	8011168 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80115b8:	9f06      	ldr	r7, [sp, #24]
 80115ba:	9b04      	ldr	r3, [sp, #16]
 80115bc:	1bc9      	subs	r1, r1, r7
 80115be:	fa0f f789 	sxth.w	r7, r9
 80115c2:	b289      	uxth	r1, r1
 80115c4:	429f      	cmp	r7, r3
 80115c6:	fa0f fe81 	sxth.w	lr, r1
 80115ca:	dd22      	ble.n	8011612 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d6>
 80115cc:	9a05      	ldr	r2, [sp, #20]
 80115ce:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80115d2:	1b40      	subs	r0, r0, r5
 80115d4:	eba9 0202 	sub.w	r2, r9, r2
 80115d8:	9d07      	ldr	r5, [sp, #28]
 80115da:	b292      	uxth	r2, r2
 80115dc:	eba5 0a03 	sub.w	sl, r5, r3
 80115e0:	b214      	sxth	r4, r2
 80115e2:	9b02      	ldr	r3, [sp, #8]
 80115e4:	fb0e f000 	mul.w	r0, lr, r0
 80115e8:	fb04 fa0a 	mul.w	sl, r4, sl
 80115ec:	00db      	lsls	r3, r3, #3
 80115ee:	4550      	cmp	r0, sl
 80115f0:	445b      	add	r3, fp
 80115f2:	db03      	blt.n	80115fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c0>
 80115f4:	f8a3 e0ae 	strh.w	lr, [r3, #174]	; 0xae
 80115f8:	4494      	add	ip, r2
 80115fa:	e731      	b.n	8011460 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 80115fc:	9a04      	ldr	r2, [sp, #16]
 80115fe:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 8011602:	f8a3 40ac 	strh.w	r4, [r3, #172]	; 0xac
 8011606:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 801160a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801160e:	4431      	add	r1, r6
 8011610:	e75b      	b.n	80114ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38e>
 8011612:	9b08      	ldr	r3, [sp, #32]
 8011614:	eba3 0308 	sub.w	r3, r3, r8
 8011618:	b29b      	uxth	r3, r3
 801161a:	2c06      	cmp	r4, #6
 801161c:	b21d      	sxth	r5, r3
 801161e:	d813      	bhi.n	8011648 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50c>
 8011620:	9b07      	ldr	r3, [sp, #28]
 8011622:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 8011626:	1c63      	adds	r3, r4, #1
 8011628:	f8aa 50a6 	strh.w	r5, [sl, #166]	; 0xa6
 801162c:	f8ab 30e8 	strh.w	r3, [fp, #232]	; 0xe8
 8011630:	9b01      	ldr	r3, [sp, #4]
 8011632:	9901      	ldr	r1, [sp, #4]
 8011634:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8011638:	f821 0034 	strh.w	r0, [r1, r4, lsl #3]
 801163c:	805a      	strh	r2, [r3, #2]
 801163e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8011640:	809a      	strh	r2, [r3, #4]
 8011642:	f8a3 e006 	strh.w	lr, [r3, #6]
 8011646:	e75e      	b.n	8011506 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 8011648:	9802      	ldr	r0, [sp, #8]
 801164a:	4575      	cmp	r5, lr
 801164c:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 8011650:	db0d      	blt.n	801166e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x532>
 8011652:	4431      	add	r1, r6
 8011654:	9b06      	ldr	r3, [sp, #24]
 8011656:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801165a:	b289      	uxth	r1, r1
 801165c:	4458      	add	r0, fp
 801165e:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8011662:	4419      	add	r1, r3
 8011664:	f8a0 10aa 	strh.w	r1, [r0, #170]	; 0xaa
 8011668:	f8a0 50ae 	strh.w	r5, [r0, #174]	; 0xae
 801166c:	e57c      	b.n	8011168 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801166e:	4458      	add	r0, fp
 8011670:	f8a0 e0ae 	strh.w	lr, [r0, #174]	; 0xae
 8011674:	e79c      	b.n	80115b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
 8011676:	f8bb 60e8 	ldrh.w	r6, [fp, #232]	; 0xe8
 801167a:	2e07      	cmp	r6, #7
 801167c:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8011680:	d812      	bhi.n	80116a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56c>
 8011682:	1c75      	adds	r5, r6, #1
 8011684:	f8ab 50e8 	strh.w	r5, [fp, #232]	; 0xe8
 8011688:	9d01      	ldr	r5, [sp, #4]
 801168a:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 801168e:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8011692:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8011696:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 801169a:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 801169e:	442c      	add	r4, r5
 80116a0:	8061      	strh	r1, [r4, #2]
 80116a2:	80a2      	strh	r2, [r4, #4]
 80116a4:	80e3      	strh	r3, [r4, #6]
 80116a6:	e5c9      	b.n	801123c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80116a8:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 80116ac:	3e01      	subs	r6, #1
 80116ae:	445c      	add	r4, fp
 80116b0:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 80116b4:	f04f 37ff 	mov.w	r7, #4294967295
 80116b8:	2500      	movs	r5, #0
 80116ba:	9305      	str	r3, [sp, #20]
 80116bc:	f9b4 30a4 	ldrsh.w	r3, [r4, #164]	; 0xa4
 80116c0:	9302      	str	r3, [sp, #8]
 80116c2:	1e72      	subs	r2, r6, #1
 80116c4:	f9b4 30a6 	ldrsh.w	r3, [r4, #166]	; 0xa6
 80116c8:	9304      	str	r3, [sp, #16]
 80116ca:	4691      	mov	r9, r2
 80116cc:	f104 03a0 	add.w	r3, r4, #160	; 0xa0
 80116d0:	f1b9 3fff 	cmp.w	r9, #4294967295
 80116d4:	bf14      	ite	ne
 80116d6:	9905      	ldrne	r1, [sp, #20]
 80116d8:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 80116dc:	6818      	ldr	r0, [r3, #0]
 80116de:	9207      	str	r2, [sp, #28]
 80116e0:	bf18      	it	ne
 80116e2:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 80116e6:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80116ea:	f8be 1006 	ldrh.w	r1, [lr, #6]
 80116ee:	f8be 8004 	ldrh.w	r8, [lr, #4]
 80116f2:	9306      	str	r3, [sp, #24]
 80116f4:	fb18 f801 	smulbb	r8, r8, r1
 80116f8:	6859      	ldr	r1, [r3, #4]
 80116fa:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80116fe:	4671      	mov	r1, lr
 8011700:	a80c      	add	r0, sp, #48	; 0x30
 8011702:	f7fb f87b 	bl	800c7fc <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8011706:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 801170a:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 801170e:	9b04      	ldr	r3, [sp, #16]
 8011710:	9a02      	ldr	r2, [sp, #8]
 8011712:	fb10 f001 	smulbb	r0, r0, r1
 8011716:	fb02 8803 	mla	r8, r2, r3, r8
 801171a:	eba0 0108 	sub.w	r1, r0, r8
 801171e:	f04f 0c08 	mov.w	ip, #8
 8011722:	fb90 f0fc 	sdiv	r0, r0, ip
 8011726:	4288      	cmp	r0, r1
 8011728:	dc20      	bgt.n	801176c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x630>
 801172a:	4551      	cmp	r1, sl
 801172c:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8011730:	da03      	bge.n	801173a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 8011732:	b1d9      	cbz	r1, 801176c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x630>
 8011734:	468a      	mov	sl, r1
 8011736:	464f      	mov	r7, r9
 8011738:	4635      	mov	r5, r6
 801173a:	f109 39ff 	add.w	r9, r9, #4294967295
 801173e:	f119 0f02 	cmn.w	r9, #2
 8011742:	d1c5      	bne.n	80116d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8011744:	4616      	mov	r6, r2
 8011746:	3201      	adds	r2, #1
 8011748:	f1a4 0408 	sub.w	r4, r4, #8
 801174c:	d1b6      	bne.n	80116bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x580>
 801174e:	9b01      	ldr	r3, [sp, #4]
 8011750:	b2ac      	uxth	r4, r5
 8011752:	00ed      	lsls	r5, r5, #3
 8011754:	1958      	adds	r0, r3, r5
 8011756:	1c7b      	adds	r3, r7, #1
 8011758:	d10b      	bne.n	8011772 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x636>
 801175a:	4601      	mov	r1, r0
 801175c:	9803      	ldr	r0, [sp, #12]
 801175e:	f7fb f84d 	bl	800c7fc <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8011762:	4621      	mov	r1, r4
 8011764:	9801      	ldr	r0, [sp, #4]
 8011766:	f7ff fcd5 	bl	8011114 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801176a:	e4fd      	b.n	8011168 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801176c:	464f      	mov	r7, r9
 801176e:	4635      	mov	r5, r6
 8011770:	e7ed      	b.n	801174e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x612>
 8011772:	9b01      	ldr	r3, [sp, #4]
 8011774:	00ff      	lsls	r7, r7, #3
 8011776:	19d9      	adds	r1, r3, r7
 8011778:	f7fb f840 	bl	800c7fc <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801177c:	9b03      	ldr	r3, [sp, #12]
 801177e:	cb03      	ldmia	r3!, {r0, r1}
 8011780:	445f      	add	r7, fp
 8011782:	445d      	add	r5, fp
 8011784:	f8c7 00a8 	str.w	r0, [r7, #168]	; 0xa8
 8011788:	f8c7 10ac 	str.w	r1, [r7, #172]	; 0xac
 801178c:	f855 0fa8 	ldr.w	r0, [r5, #168]!
 8011790:	9b03      	ldr	r3, [sp, #12]
 8011792:	6869      	ldr	r1, [r5, #4]
 8011794:	c303      	stmia	r3!, {r0, r1}
 8011796:	e7e4      	b.n	8011762 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x626>

08011798 <_ZN8touchgfx11Application10invalidateEv>:
 8011798:	4b09      	ldr	r3, [pc, #36]	; (80117c0 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 801179a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801179e:	4b09      	ldr	r3, [pc, #36]	; (80117c4 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 80117a0:	b082      	sub	sp, #8
 80117a2:	f9b3 3000 	ldrsh.w	r3, [r3]
 80117a6:	f8ad 3006 	strh.w	r3, [sp, #6]
 80117aa:	2100      	movs	r1, #0
 80117ac:	9100      	str	r1, [sp, #0]
 80117ae:	f8ad 2004 	strh.w	r2, [sp, #4]
 80117b2:	ab02      	add	r3, sp, #8
 80117b4:	e913 0006 	ldmdb	r3, {r1, r2}
 80117b8:	b002      	add	sp, #8
 80117ba:	f7ff bcbf 	b.w	801113c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 80117be:	bf00      	nop
 80117c0:	200155a0 	.word	0x200155a0
 80117c4:	200155a2 	.word	0x200155a2

080117c8 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 80117c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80117cc:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 80117d0:	b09b      	sub	sp, #108	; 0x6c
 80117d2:	4604      	mov	r4, r0
 80117d4:	4630      	mov	r0, r6
 80117d6:	f7f9 faec 	bl	800adb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80117da:	4605      	mov	r5, r0
 80117dc:	b940      	cbnz	r0, 80117f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x28>
 80117de:	e896 0006 	ldmia.w	r6, {r1, r2}
 80117e2:	4620      	mov	r0, r4
 80117e4:	f7ff fcaa 	bl	801113c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 80117e8:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 80117ec:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 80117f0:	4bc9      	ldr	r3, [pc, #804]	; (8011b18 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 80117f2:	681b      	ldr	r3, [r3, #0]
 80117f4:	2b00      	cmp	r3, #0
 80117f6:	d03e      	beq.n	8011876 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 80117f8:	4dc8      	ldr	r5, [pc, #800]	; (8011b1c <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 80117fa:	4628      	mov	r0, r5
 80117fc:	f7f9 fad9 	bl	800adb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011800:	4606      	mov	r6, r0
 8011802:	2800      	cmp	r0, #0
 8011804:	d137      	bne.n	8011876 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 8011806:	4628      	mov	r0, r5
 8011808:	f7ff fa4a 	bl	8010ca0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801180c:	6829      	ldr	r1, [r5, #0]
 801180e:	686a      	ldr	r2, [r5, #4]
 8011810:	4620      	mov	r0, r4
 8011812:	f7ff fc93 	bl	801113c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8011816:	802e      	strh	r6, [r5, #0]
 8011818:	806e      	strh	r6, [r5, #2]
 801181a:	80ae      	strh	r6, [r5, #4]
 801181c:	80ee      	strh	r6, [r5, #6]
 801181e:	ae09      	add	r6, sp, #36	; 0x24
 8011820:	4630      	mov	r0, r6
 8011822:	f7ff fc26 	bl	8011072 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8011826:	4abe      	ldr	r2, [pc, #760]	; (8011b20 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8011828:	f8b4 70e8 	ldrh.w	r7, [r4, #232]	; 0xe8
 801182c:	8815      	ldrh	r5, [r2, #0]
 801182e:	9202      	str	r2, [sp, #8]
 8011830:	462b      	mov	r3, r5
 8011832:	f104 00a8 	add.w	r0, r4, #168	; 0xa8
 8011836:	429f      	cmp	r7, r3
 8011838:	d924      	bls.n	8011884 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbc>
 801183a:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 801183e:	2907      	cmp	r1, #7
 8011840:	d816      	bhi.n	8011870 <_ZN8touchgfx11Application15drawCachedAreasEv+0xa8>
 8011842:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8011846:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 801184a:	f9b2 9002 	ldrsh.w	r9, [r2, #2]
 801184e:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 8011852:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8011856:	1c4a      	adds	r2, r1, #1
 8011858:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 801185c:	eb06 02c1 	add.w	r2, r6, r1, lsl #3
 8011860:	f826 8031 	strh.w	r8, [r6, r1, lsl #3]
 8011864:	f8a2 9002 	strh.w	r9, [r2, #2]
 8011868:	f8a2 e004 	strh.w	lr, [r2, #4]
 801186c:	f8a2 c006 	strh.w	ip, [r2, #6]
 8011870:	3301      	adds	r3, #1
 8011872:	b29b      	uxth	r3, r3
 8011874:	e7df      	b.n	8011836 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6e>
 8011876:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 801187a:	2b00      	cmp	r3, #0
 801187c:	d1cf      	bne.n	801181e <_ZN8touchgfx11Application15drawCachedAreasEv+0x56>
 801187e:	b01b      	add	sp, #108	; 0x6c
 8011880:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011884:	462f      	mov	r7, r5
 8011886:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 801188a:	42bb      	cmp	r3, r7
 801188c:	d90b      	bls.n	80118a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xde>
 801188e:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
 8011892:	4620      	mov	r0, r4
 8011894:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 8011898:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 801189c:	3701      	adds	r7, #1
 801189e:	f7ff fc4d 	bl	801113c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 80118a2:	b2bf      	uxth	r7, r7
 80118a4:	e7ef      	b.n	8011886 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbe>
 80118a6:	4a9f      	ldr	r2, [pc, #636]	; (8011b24 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 80118a8:	6813      	ldr	r3, [r2, #0]
 80118aa:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 80118ae:	2b01      	cmp	r3, #1
 80118b0:	4690      	mov	r8, r2
 80118b2:	f040 80e6 	bne.w	8011a82 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ba>
 80118b6:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 80118ba:	f8b4 70e8 	ldrh.w	r7, [r4, #232]	; 0xe8
 80118be:	4629      	mov	r1, r5
 80118c0:	33aa      	adds	r3, #170	; 0xaa
 80118c2:	2500      	movs	r5, #0
 80118c4:	428f      	cmp	r7, r1
 80118c6:	f103 0308 	add.w	r3, r3, #8
 80118ca:	dd0a      	ble.n	80118e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11a>
 80118cc:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 80118d0:	f833 0c04 	ldrh.w	r0, [r3, #-4]
 80118d4:	4402      	add	r2, r0
 80118d6:	b212      	sxth	r2, r2
 80118d8:	4295      	cmp	r5, r2
 80118da:	bfb8      	it	lt
 80118dc:	4615      	movlt	r5, r2
 80118de:	3101      	adds	r1, #1
 80118e0:	e7f0      	b.n	80118c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0xfc>
 80118e2:	4b91      	ldr	r3, [pc, #580]	; (8011b28 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 80118e4:	f8df b23c 	ldr.w	fp, [pc, #572]	; 8011b24 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>
 80118e8:	881b      	ldrh	r3, [r3, #0]
 80118ea:	2b0f      	cmp	r3, #15
 80118ec:	bf88      	it	hi
 80118ee:	ea4f 0ad3 	movhi.w	sl, r3, lsr #3
 80118f2:	f04f 0300 	mov.w	r3, #0
 80118f6:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80118fa:	bf98      	it	ls
 80118fc:	f04f 0a01 	movls.w	sl, #1
 8011900:	46d8      	mov	r8, fp
 8011902:	f8bd 701a 	ldrh.w	r7, [sp, #26]
 8011906:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 801190a:	4438      	add	r0, r7
 801190c:	b207      	sxth	r7, r0
 801190e:	f8db 0000 	ldr.w	r0, [fp]
 8011912:	42bd      	cmp	r5, r7
 8011914:	6803      	ldr	r3, [r0, #0]
 8011916:	f340 8084 	ble.w	8011a22 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 801191a:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 801191e:	4798      	blx	r3
 8011920:	eb07 030a 	add.w	r3, r7, sl
 8011924:	4298      	cmp	r0, r3
 8011926:	da07      	bge.n	8011938 <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 8011928:	4285      	cmp	r5, r0
 801192a:	dd05      	ble.n	8011938 <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 801192c:	4287      	cmp	r7, r0
 801192e:	dd6d      	ble.n	8011a0c <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8011930:	2f00      	cmp	r7, #0
 8011932:	dd6b      	ble.n	8011a0c <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8011934:	4628      	mov	r0, r5
 8011936:	e004      	b.n	8011942 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 8011938:	4287      	cmp	r7, r0
 801193a:	dcfb      	bgt.n	8011934 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16c>
 801193c:	42a8      	cmp	r0, r5
 801193e:	bfa8      	it	ge
 8011940:	4628      	movge	r0, r5
 8011942:	4b7a      	ldr	r3, [pc, #488]	; (8011b2c <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>)
 8011944:	f8ad 7016 	strh.w	r7, [sp, #22]
 8011948:	f9b3 3000 	ldrsh.w	r3, [r3]
 801194c:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011950:	9b02      	ldr	r3, [sp, #8]
 8011952:	1bc0      	subs	r0, r0, r7
 8011954:	2200      	movs	r2, #0
 8011956:	881f      	ldrh	r7, [r3, #0]
 8011958:	f8ad 2014 	strh.w	r2, [sp, #20]
 801195c:	f8ad 001a 	strh.w	r0, [sp, #26]
 8011960:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8011964:	42bb      	cmp	r3, r7
 8011966:	d9cc      	bls.n	8011902 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 8011968:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 801196c:	ab07      	add	r3, sp, #28
 801196e:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 8011972:	6851      	ldr	r1, [r2, #4]
 8011974:	c303      	stmia	r3!, {r0, r1}
 8011976:	a905      	add	r1, sp, #20
 8011978:	a807      	add	r0, sp, #28
 801197a:	f7ff fad0 	bl	8010f1e <_ZNK8touchgfx4Rect9intersectERKS0_>
 801197e:	2800      	cmp	r0, #0
 8011980:	d04c      	beq.n	8011a1c <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 8011982:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8011986:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 801198a:	f8bd 9020 	ldrh.w	r9, [sp, #32]
 801198e:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8011992:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8011996:	9303      	str	r3, [sp, #12]
 8011998:	4686      	mov	lr, r0
 801199a:	4290      	cmp	r0, r2
 801199c:	4448      	add	r0, r9
 801199e:	f8bd 9018 	ldrh.w	r9, [sp, #24]
 80119a2:	bfb8      	it	lt
 80119a4:	4696      	movlt	lr, r2
 80119a6:	444a      	add	r2, r9
 80119a8:	4299      	cmp	r1, r3
 80119aa:	b280      	uxth	r0, r0
 80119ac:	b292      	uxth	r2, r2
 80119ae:	468c      	mov	ip, r1
 80119b0:	fa0f f982 	sxth.w	r9, r2
 80119b4:	bfb8      	it	lt
 80119b6:	469c      	movlt	ip, r3
 80119b8:	b203      	sxth	r3, r0
 80119ba:	454b      	cmp	r3, r9
 80119bc:	bfb8      	it	lt
 80119be:	4602      	movlt	r2, r0
 80119c0:	eba2 020e 	sub.w	r2, r2, lr
 80119c4:	f8ad 2020 	strh.w	r2, [sp, #32]
 80119c8:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 80119cc:	9b03      	ldr	r3, [sp, #12]
 80119ce:	f8ad e01c 	strh.w	lr, [sp, #28]
 80119d2:	4411      	add	r1, r2
 80119d4:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80119d8:	f8ad c01e 	strh.w	ip, [sp, #30]
 80119dc:	4413      	add	r3, r2
 80119de:	b289      	uxth	r1, r1
 80119e0:	b29b      	uxth	r3, r3
 80119e2:	b208      	sxth	r0, r1
 80119e4:	b21a      	sxth	r2, r3
 80119e6:	4290      	cmp	r0, r2
 80119e8:	bfb8      	it	lt
 80119ea:	460b      	movlt	r3, r1
 80119ec:	eba3 030c 	sub.w	r3, r3, ip
 80119f0:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80119f4:	a807      	add	r0, sp, #28
 80119f6:	f7f9 f9dc 	bl	800adb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80119fa:	b920      	cbnz	r0, 8011a06 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 80119fc:	6823      	ldr	r3, [r4, #0]
 80119fe:	a907      	add	r1, sp, #28
 8011a00:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011a02:	4620      	mov	r0, r4
 8011a04:	4798      	blx	r3
 8011a06:	3701      	adds	r7, #1
 8011a08:	b2bf      	uxth	r7, r7
 8011a0a:	e7a9      	b.n	8011960 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8011a0c:	f8d8 0000 	ldr.w	r0, [r8]
 8011a10:	6803      	ldr	r3, [r0, #0]
 8011a12:	2101      	movs	r1, #1
 8011a14:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8011a18:	4798      	blx	r3
 8011a1a:	e772      	b.n	8011902 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 8011a1c:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8011a20:	e7e8      	b.n	80119f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 8011a22:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011a24:	4798      	blx	r3
 8011a26:	4b42      	ldr	r3, [pc, #264]	; (8011b30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x368>)
 8011a28:	781b      	ldrb	r3, [r3, #0]
 8011a2a:	2b00      	cmp	r3, #0
 8011a2c:	f43f af27 	beq.w	801187e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 8011a30:	2300      	movs	r3, #0
 8011a32:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 8011a36:	9b02      	ldr	r3, [sp, #8]
 8011a38:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8011a3c:	881b      	ldrh	r3, [r3, #0]
 8011a3e:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 8011a42:	429d      	cmp	r5, r3
 8011a44:	f67f af1b 	bls.w	801187e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 8011a48:	f8b4 112a 	ldrh.w	r1, [r4, #298]	; 0x12a
 8011a4c:	2907      	cmp	r1, #7
 8011a4e:	d815      	bhi.n	8011a7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b4>
 8011a50:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 8011a54:	f936 8033 	ldrsh.w	r8, [r6, r3, lsl #3]
 8011a58:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 8011a5c:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 8011a60:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 8011a64:	1c4a      	adds	r2, r1, #1
 8011a66:	f8a4 212a 	strh.w	r2, [r4, #298]	; 0x12a
 8011a6a:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8011a6e:	f820 8031 	strh.w	r8, [r0, r1, lsl #3]
 8011a72:	f8a2 e002 	strh.w	lr, [r2, #2]
 8011a76:	f8a2 c004 	strh.w	ip, [r2, #4]
 8011a7a:	80d7      	strh	r7, [r2, #6]
 8011a7c:	3301      	adds	r3, #1
 8011a7e:	b29b      	uxth	r3, r3
 8011a80:	e7df      	b.n	8011a42 <_ZN8touchgfx11Application15drawCachedAreasEv+0x27a>
 8011a82:	2b02      	cmp	r3, #2
 8011a84:	f040 8136 	bne.w	8011cf4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 8011a88:	4b2a      	ldr	r3, [pc, #168]	; (8011b34 <_ZN8touchgfx11Application15drawCachedAreasEv+0x36c>)
 8011a8a:	781b      	ldrb	r3, [r3, #0]
 8011a8c:	2b01      	cmp	r3, #1
 8011a8e:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 8011a92:	f000 809c 	beq.w	8011bce <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 8011a96:	9b02      	ldr	r3, [sp, #8]
 8011a98:	f8b4 20e8 	ldrh.w	r2, [r4, #232]	; 0xe8
 8011a9c:	f8b3 b000 	ldrh.w	fp, [r3]
 8011aa0:	f10b 0b01 	add.w	fp, fp, #1
 8011aa4:	fa1f fb8b 	uxth.w	fp, fp
 8011aa8:	2a00      	cmp	r2, #0
 8011aaa:	d0bc      	beq.n	8011a26 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8011aac:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 8011ab0:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 8011ab4:	441d      	add	r5, r3
 8011ab6:	b22d      	sxth	r5, r5
 8011ab8:	4659      	mov	r1, fp
 8011aba:	f04f 0800 	mov.w	r8, #0
 8011abe:	b28b      	uxth	r3, r1
 8011ac0:	429a      	cmp	r2, r3
 8011ac2:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 8011ac6:	f240 80c1 	bls.w	8011c4c <_ZN8touchgfx11Application15drawCachedAreasEv+0x484>
 8011aca:	4427      	add	r7, r4
 8011acc:	eb04 0ec1 	add.w	lr, r4, r1, lsl #3
 8011ad0:	f9b7 30aa 	ldrsh.w	r3, [r7, #170]	; 0xaa
 8011ad4:	f9be c0aa 	ldrsh.w	ip, [lr, #170]	; 0xaa
 8011ad8:	4563      	cmp	r3, ip
 8011ada:	4608      	mov	r0, r1
 8011adc:	f340 80a3 	ble.w	8011c26 <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
 8011ae0:	f8be 50ae 	ldrh.w	r5, [lr, #174]	; 0xae
 8011ae4:	4465      	add	r5, ip
 8011ae6:	b22d      	sxth	r5, r5
 8011ae8:	429d      	cmp	r5, r3
 8011aea:	bfa8      	it	ge
 8011aec:	461d      	movge	r5, r3
 8011aee:	3101      	adds	r1, #1
 8011af0:	4680      	mov	r8, r0
 8011af2:	e7e4      	b.n	8011abe <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
 8011af4:	d10b      	bne.n	8011b0e <_ZN8touchgfx11Application15drawCachedAreasEv+0x346>
 8011af6:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 8011afa:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 8011afe:	458c      	cmp	ip, r1
 8011b00:	bfb4      	ite	lt
 8011b02:	469c      	movlt	ip, r3
 8011b04:	46bc      	movge	ip, r7
 8011b06:	4572      	cmp	r2, lr
 8011b08:	bfb8      	it	lt
 8011b0a:	4672      	movlt	r2, lr
 8011b0c:	e088      	b.n	8011c20 <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 8011b0e:	428a      	cmp	r2, r1
 8011b10:	bfb8      	it	lt
 8011b12:	460a      	movlt	r2, r1
 8011b14:	46bc      	mov	ip, r7
 8011b16:	e083      	b.n	8011c20 <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 8011b18:	200155ec 	.word	0x200155ec
 8011b1c:	200155f8 	.word	0x200155f8
 8011b20:	2000008c 	.word	0x2000008c
 8011b24:	200155ac 	.word	0x200155ac
 8011b28:	200155a2 	.word	0x200155a2
 8011b2c:	200155a0 	.word	0x200155a0
 8011b30:	200155aa 	.word	0x200155aa
 8011b34:	200155a4 	.word	0x200155a4
 8011b38:	1961      	adds	r1, r4, r5
 8011b3a:	ab07      	add	r3, sp, #28
 8011b3c:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 8011b40:	6849      	ldr	r1, [r1, #4]
 8011b42:	c303      	stmia	r3!, {r0, r1}
 8011b44:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8011b48:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8011b4c:	2b13      	cmp	r3, #19
 8011b4e:	bfd8      	it	le
 8011b50:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8011b54:	f8ad 201c 	strh.w	r2, [sp, #28]
 8011b58:	440b      	add	r3, r1
 8011b5a:	1a9b      	subs	r3, r3, r2
 8011b5c:	a807      	add	r0, sp, #28
 8011b5e:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011b62:	f7ff f8b7 	bl	8010cd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011b66:	a807      	add	r0, sp, #28
 8011b68:	f7f9 f923 	bl	800adb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011b6c:	bb78      	cbnz	r0, 8011bce <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 8011b6e:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8011b72:	f8d8 0000 	ldr.w	r0, [r8]
 8011b76:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8011b7a:	f8d0 e000 	ldr.w	lr, [r0]
 8011b7e:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8011b82:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8011b86:	f1bc 0f14 	cmp.w	ip, #20
 8011b8a:	bfa8      	it	ge
 8011b8c:	f04f 0c14 	movge.w	ip, #20
 8011b90:	fa1f fc8c 	uxth.w	ip, ip
 8011b94:	f8cd c000 	str.w	ip, [sp]
 8011b98:	f8de a090 	ldr.w	sl, [lr, #144]	; 0x90
 8011b9c:	47d0      	blx	sl
 8011b9e:	4682      	mov	sl, r0
 8011ba0:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8011ba4:	a807      	add	r0, sp, #28
 8011ba6:	f7ff f87b 	bl	8010ca0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8011baa:	6823      	ldr	r3, [r4, #0]
 8011bac:	4425      	add	r5, r4
 8011bae:	4620      	mov	r0, r4
 8011bb0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011bb2:	a907      	add	r1, sp, #28
 8011bb4:	4798      	blx	r3
 8011bb6:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 8011bba:	eba0 000a 	sub.w	r0, r0, sl
 8011bbe:	b200      	sxth	r0, r0
 8011bc0:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 8011bc4:	b918      	cbnz	r0, 8011bce <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 8011bc6:	b2b9      	uxth	r1, r7
 8011bc8:	4648      	mov	r0, r9
 8011bca:	f7ff faa3 	bl	8011114 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011bce:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 8011bd2:	f1bb 0f00 	cmp.w	fp, #0
 8011bd6:	f43f af26 	beq.w	8011a26 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8011bda:	9b02      	ldr	r3, [sp, #8]
 8011bdc:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 8011be0:	881b      	ldrh	r3, [r3, #0]
 8011be2:	3301      	adds	r3, #1
 8011be4:	b29b      	uxth	r3, r3
 8011be6:	2700      	movs	r7, #0
 8011be8:	b299      	uxth	r1, r3
 8011bea:	458b      	cmp	fp, r1
 8011bec:	ea4f 05c7 	mov.w	r5, r7, lsl #3
 8011bf0:	d9a2      	bls.n	8011b38 <_ZN8touchgfx11Application15drawCachedAreasEv+0x370>
 8011bf2:	4425      	add	r5, r4
 8011bf4:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 8011bf8:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 8011bfc:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 8011c00:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 8011c04:	4408      	add	r0, r1
 8011c06:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 8011c0a:	4471      	add	r1, lr
 8011c0c:	b200      	sxth	r0, r0
 8011c0e:	b209      	sxth	r1, r1
 8011c10:	4288      	cmp	r0, r1
 8011c12:	469c      	mov	ip, r3
 8011c14:	f6bf af6e 	bge.w	8011af4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x32c>
 8011c18:	4586      	cmp	lr, r0
 8011c1a:	4672      	mov	r2, lr
 8011c1c:	bfb8      	it	lt
 8011c1e:	4602      	movlt	r2, r0
 8011c20:	3301      	adds	r3, #1
 8011c22:	4667      	mov	r7, ip
 8011c24:	e7e0      	b.n	8011be8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x420>
 8011c26:	d10c      	bne.n	8011c42 <_ZN8touchgfx11Application15drawCachedAreasEv+0x47a>
 8011c28:	f9b7 70ac 	ldrsh.w	r7, [r7, #172]	; 0xac
 8011c2c:	f9be 00ac 	ldrsh.w	r0, [lr, #172]	; 0xac
 8011c30:	4287      	cmp	r7, r0
 8011c32:	bfb4      	ite	lt
 8011c34:	4608      	movlt	r0, r1
 8011c36:	4640      	movge	r0, r8
 8011c38:	f8be 70ae 	ldrh.w	r7, [lr, #174]	; 0xae
 8011c3c:	443b      	add	r3, r7
 8011c3e:	b21b      	sxth	r3, r3
 8011c40:	e752      	b.n	8011ae8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 8011c42:	4565      	cmp	r5, ip
 8011c44:	bfa8      	it	ge
 8011c46:	4665      	movge	r5, ip
 8011c48:	4640      	mov	r0, r8
 8011c4a:	e750      	b.n	8011aee <_ZN8touchgfx11Application15drawCachedAreasEv+0x326>
 8011c4c:	eb09 0007 	add.w	r0, r9, r7
 8011c50:	4427      	add	r7, r4
 8011c52:	9203      	str	r2, [sp, #12]
 8011c54:	f9b7 a0ae 	ldrsh.w	sl, [r7, #174]	; 0xae
 8011c58:	f1ba 0f13 	cmp.w	sl, #19
 8011c5c:	bfde      	ittt	le
 8011c5e:	f8b7 50aa 	ldrhle.w	r5, [r7, #170]	; 0xaa
 8011c62:	4455      	addle	r5, sl
 8011c64:	b22d      	sxthle	r5, r5
 8011c66:	f7f9 f8a4 	bl	800adb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011c6a:	9a03      	ldr	r2, [sp, #12]
 8011c6c:	2800      	cmp	r0, #0
 8011c6e:	f47f af1b 	bne.w	8011aa8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e0>
 8011c72:	f9b7 20aa 	ldrsh.w	r2, [r7, #170]	; 0xaa
 8011c76:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8011c7a:	482a      	ldr	r0, [pc, #168]	; (8011d24 <_ZN8touchgfx11Application15drawCachedAreasEv+0x55c>)
 8011c7c:	f9b7 10a8 	ldrsh.w	r1, [r7, #168]	; 0xa8
 8011c80:	f9b7 30ac 	ldrsh.w	r3, [r7, #172]	; 0xac
 8011c84:	6800      	ldr	r0, [r0, #0]
 8011c86:	f8ad 101c 	strh.w	r1, [sp, #28]
 8011c8a:	1aad      	subs	r5, r5, r2
 8011c8c:	2d14      	cmp	r5, #20
 8011c8e:	f8ad 201e 	strh.w	r2, [sp, #30]
 8011c92:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011c96:	bfa8      	it	ge
 8011c98:	2514      	movge	r5, #20
 8011c9a:	f8d0 c000 	ldr.w	ip, [r0]
 8011c9e:	b2ad      	uxth	r5, r5
 8011ca0:	fa1f fa8a 	uxth.w	sl, sl
 8011ca4:	4555      	cmp	r5, sl
 8011ca6:	bf94      	ite	ls
 8011ca8:	9500      	strls	r5, [sp, #0]
 8011caa:	f8cd a000 	strhi.w	sl, [sp]
 8011cae:	b292      	uxth	r2, r2
 8011cb0:	f8dc 5090 	ldr.w	r5, [ip, #144]	; 0x90
 8011cb4:	b29b      	uxth	r3, r3
 8011cb6:	b289      	uxth	r1, r1
 8011cb8:	47a8      	blx	r5
 8011cba:	6823      	ldr	r3, [r4, #0]
 8011cbc:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8011cc0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011cc2:	a907      	add	r1, sp, #28
 8011cc4:	4620      	mov	r0, r4
 8011cc6:	4798      	blx	r3
 8011cc8:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8011ccc:	f8b7 30ae 	ldrh.w	r3, [r7, #174]	; 0xae
 8011cd0:	f8b7 20aa 	ldrh.w	r2, [r7, #170]	; 0xaa
 8011cd4:	1a5b      	subs	r3, r3, r1
 8011cd6:	440a      	add	r2, r1
 8011cd8:	b21b      	sxth	r3, r3
 8011cda:	f8a7 20aa 	strh.w	r2, [r7, #170]	; 0xaa
 8011cde:	f8a7 30ae 	strh.w	r3, [r7, #174]	; 0xae
 8011ce2:	2b00      	cmp	r3, #0
 8011ce4:	f47f aed7 	bne.w	8011a96 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 8011ce8:	fa1f f188 	uxth.w	r1, r8
 8011cec:	4648      	mov	r0, r9
 8011cee:	f7ff fa11 	bl	8011114 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011cf2:	e6d0      	b.n	8011a96 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 8011cf4:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8011cf8:	42ab      	cmp	r3, r5
 8011cfa:	f67f ae94 	bls.w	8011a26 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8011cfe:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 8011d02:	ab07      	add	r3, sp, #28
 8011d04:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 8011d08:	6851      	ldr	r1, [r2, #4]
 8011d0a:	c303      	stmia	r3!, {r0, r1}
 8011d0c:	a807      	add	r0, sp, #28
 8011d0e:	f7f9 f850 	bl	800adb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011d12:	b920      	cbnz	r0, 8011d1e <_ZN8touchgfx11Application15drawCachedAreasEv+0x556>
 8011d14:	6823      	ldr	r3, [r4, #0]
 8011d16:	a907      	add	r1, sp, #28
 8011d18:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011d1a:	4620      	mov	r0, r4
 8011d1c:	4798      	blx	r3
 8011d1e:	3501      	adds	r5, #1
 8011d20:	b2ad      	uxth	r5, r5
 8011d22:	e7e7      	b.n	8011cf4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 8011d24:	200155ac 	.word	0x200155ac

08011d28 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8011d28:	4b03      	ldr	r3, [pc, #12]	; (8011d38 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8011d2a:	2200      	movs	r2, #0
 8011d2c:	801a      	strh	r2, [r3, #0]
 8011d2e:	805a      	strh	r2, [r3, #2]
 8011d30:	809a      	strh	r2, [r3, #4]
 8011d32:	80da      	strh	r2, [r3, #6]
 8011d34:	4770      	bx	lr
 8011d36:	bf00      	nop
 8011d38:	200155f8 	.word	0x200155f8

08011d3c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8011d3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011d40:	4606      	mov	r6, r0
 8011d42:	b09d      	sub	sp, #116	; 0x74
 8011d44:	a803      	add	r0, sp, #12
 8011d46:	4614      	mov	r4, r2
 8011d48:	468a      	mov	sl, r1
 8011d4a:	461d      	mov	r5, r3
 8011d4c:	f000 fe67 	bl	8012a1e <_ZN8touchgfx12TextProviderC1Ev>
 8011d50:	6833      	ldr	r3, [r6, #0]
 8011d52:	4630      	mov	r0, r6
 8011d54:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011d56:	4798      	blx	r3
 8011d58:	6833      	ldr	r3, [r6, #0]
 8011d5a:	4607      	mov	r7, r0
 8011d5c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011d5e:	4630      	mov	r0, r6
 8011d60:	4798      	blx	r3
 8011d62:	462a      	mov	r2, r5
 8011d64:	9000      	str	r0, [sp, #0]
 8011d66:	4621      	mov	r1, r4
 8011d68:	463b      	mov	r3, r7
 8011d6a:	a803      	add	r0, sp, #12
 8011d6c:	f000 feb2 	bl	8012ad4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011d70:	2500      	movs	r5, #0
 8011d72:	462c      	mov	r4, r5
 8011d74:	46a9      	mov	r9, r5
 8011d76:	46a8      	mov	r8, r5
 8011d78:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8011d7c:	2300      	movs	r3, #0
 8011d7e:	9302      	str	r3, [sp, #8]
 8011d80:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8011d84:	429c      	cmp	r4, r3
 8011d86:	d002      	beq.n	8011d8e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8011d88:	455c      	cmp	r4, fp
 8011d8a:	bf18      	it	ne
 8011d8c:	4625      	movne	r5, r4
 8011d8e:	ab02      	add	r3, sp, #8
 8011d90:	4632      	mov	r2, r6
 8011d92:	4651      	mov	r1, sl
 8011d94:	a803      	add	r0, sp, #12
 8011d96:	f001 f99f 	bl	80130d8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011d9a:	4604      	mov	r4, r0
 8011d9c:	b108      	cbz	r0, 8011da2 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8011d9e:	280a      	cmp	r0, #10
 8011da0:	d10a      	bne.n	8011db8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8011da2:	45c1      	cmp	r9, r8
 8011da4:	bf38      	it	cc
 8011da6:	46c1      	movcc	r9, r8
 8011da8:	f04f 0800 	mov.w	r8, #0
 8011dac:	2c00      	cmp	r4, #0
 8011dae:	d1e5      	bne.n	8011d7c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8011db0:	4648      	mov	r0, r9
 8011db2:	b01d      	add	sp, #116	; 0x74
 8011db4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011db8:	9a02      	ldr	r2, [sp, #8]
 8011dba:	2a00      	cmp	r2, #0
 8011dbc:	d0de      	beq.n	8011d7c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8011dbe:	7b57      	ldrb	r7, [r2, #13]
 8011dc0:	6833      	ldr	r3, [r6, #0]
 8011dc2:	8894      	ldrh	r4, [r2, #4]
 8011dc4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011dc6:	007f      	lsls	r7, r7, #1
 8011dc8:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8011dcc:	7a97      	ldrb	r7, [r2, #10]
 8011dce:	4629      	mov	r1, r5
 8011dd0:	4307      	orrs	r7, r0
 8011dd2:	4630      	mov	r0, r6
 8011dd4:	4798      	blx	r3
 8011dd6:	4438      	add	r0, r7
 8011dd8:	4480      	add	r8, r0
 8011dda:	fa1f f888 	uxth.w	r8, r8
 8011dde:	e7e5      	b.n	8011dac <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08011de0 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8011de0:	b508      	push	{r3, lr}
 8011de2:	6803      	ldr	r3, [r0, #0]
 8011de4:	68db      	ldr	r3, [r3, #12]
 8011de6:	4798      	blx	r3
 8011de8:	b128      	cbz	r0, 8011df6 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8011dea:	7b43      	ldrb	r3, [r0, #13]
 8011dec:	7a80      	ldrb	r0, [r0, #10]
 8011dee:	005b      	lsls	r3, r3, #1
 8011df0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011df4:	4318      	orrs	r0, r3
 8011df6:	bd08      	pop	{r3, pc}

08011df8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8011df8:	b40e      	push	{r1, r2, r3}
 8011dfa:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011dfc:	b09e      	sub	sp, #120	; 0x78
 8011dfe:	ab23      	add	r3, sp, #140	; 0x8c
 8011e00:	4605      	mov	r5, r0
 8011e02:	f853 4b04 	ldr.w	r4, [r3], #4
 8011e06:	9303      	str	r3, [sp, #12]
 8011e08:	a805      	add	r0, sp, #20
 8011e0a:	f000 fe08 	bl	8012a1e <_ZN8touchgfx12TextProviderC1Ev>
 8011e0e:	682b      	ldr	r3, [r5, #0]
 8011e10:	4628      	mov	r0, r5
 8011e12:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011e14:	4798      	blx	r3
 8011e16:	682b      	ldr	r3, [r5, #0]
 8011e18:	4606      	mov	r6, r0
 8011e1a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011e1c:	4628      	mov	r0, r5
 8011e1e:	4798      	blx	r3
 8011e20:	4633      	mov	r3, r6
 8011e22:	ae1e      	add	r6, sp, #120	; 0x78
 8011e24:	4621      	mov	r1, r4
 8011e26:	9000      	str	r0, [sp, #0]
 8011e28:	9a03      	ldr	r2, [sp, #12]
 8011e2a:	2400      	movs	r4, #0
 8011e2c:	a805      	add	r0, sp, #20
 8011e2e:	f000 fe51 	bl	8012ad4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011e32:	f846 4d68 	str.w	r4, [r6, #-104]!
 8011e36:	462a      	mov	r2, r5
 8011e38:	4633      	mov	r3, r6
 8011e3a:	4621      	mov	r1, r4
 8011e3c:	a805      	add	r0, sp, #20
 8011e3e:	f001 f94b 	bl	80130d8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011e42:	b1f0      	cbz	r0, 8011e82 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8011e44:	280a      	cmp	r0, #10
 8011e46:	d018      	beq.n	8011e7a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8011e48:	9f04      	ldr	r7, [sp, #16]
 8011e4a:	b1b7      	cbz	r7, 8011e7a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8011e4c:	7b78      	ldrb	r0, [r7, #13]
 8011e4e:	7a3b      	ldrb	r3, [r7, #8]
 8011e50:	88aa      	ldrh	r2, [r5, #4]
 8011e52:	00c1      	lsls	r1, r0, #3
 8011e54:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8011e58:	4319      	orrs	r1, r3
 8011e5a:	0643      	lsls	r3, r0, #25
 8011e5c:	bf44      	itt	mi
 8011e5e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8011e62:	b219      	sxthmi	r1, r3
 8011e64:	0100      	lsls	r0, r0, #4
 8011e66:	79fb      	ldrb	r3, [r7, #7]
 8011e68:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8011e6c:	4303      	orrs	r3, r0
 8011e6e:	4413      	add	r3, r2
 8011e70:	1a5b      	subs	r3, r3, r1
 8011e72:	b29b      	uxth	r3, r3
 8011e74:	42a3      	cmp	r3, r4
 8011e76:	bfc8      	it	gt
 8011e78:	b21c      	sxthgt	r4, r3
 8011e7a:	4633      	mov	r3, r6
 8011e7c:	462a      	mov	r2, r5
 8011e7e:	2100      	movs	r1, #0
 8011e80:	e7dc      	b.n	8011e3c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8011e82:	b2a0      	uxth	r0, r4
 8011e84:	b01e      	add	sp, #120	; 0x78
 8011e86:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8011e8a:	b003      	add	sp, #12
 8011e8c:	4770      	bx	lr

08011e8e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8011e8e:	b40e      	push	{r1, r2, r3}
 8011e90:	b570      	push	{r4, r5, r6, lr}
 8011e92:	b09d      	sub	sp, #116	; 0x74
 8011e94:	ab21      	add	r3, sp, #132	; 0x84
 8011e96:	4604      	mov	r4, r0
 8011e98:	f853 5b04 	ldr.w	r5, [r3], #4
 8011e9c:	9302      	str	r3, [sp, #8]
 8011e9e:	a803      	add	r0, sp, #12
 8011ea0:	f000 fdbd 	bl	8012a1e <_ZN8touchgfx12TextProviderC1Ev>
 8011ea4:	6823      	ldr	r3, [r4, #0]
 8011ea6:	4620      	mov	r0, r4
 8011ea8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011eaa:	4798      	blx	r3
 8011eac:	6823      	ldr	r3, [r4, #0]
 8011eae:	4606      	mov	r6, r0
 8011eb0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011eb2:	4620      	mov	r0, r4
 8011eb4:	4798      	blx	r3
 8011eb6:	4633      	mov	r3, r6
 8011eb8:	9000      	str	r0, [sp, #0]
 8011eba:	9a02      	ldr	r2, [sp, #8]
 8011ebc:	4629      	mov	r1, r5
 8011ebe:	a803      	add	r0, sp, #12
 8011ec0:	f000 fe08 	bl	8012ad4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011ec4:	a803      	add	r0, sp, #12
 8011ec6:	f001 f9d5 	bl	8013274 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8011eca:	2401      	movs	r4, #1
 8011ecc:	b2a3      	uxth	r3, r4
 8011ece:	b140      	cbz	r0, 8011ee2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8011ed0:	280a      	cmp	r0, #10
 8011ed2:	bf08      	it	eq
 8011ed4:	3301      	addeq	r3, #1
 8011ed6:	a803      	add	r0, sp, #12
 8011ed8:	bf08      	it	eq
 8011eda:	b21c      	sxtheq	r4, r3
 8011edc:	f001 f9ca 	bl	8013274 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8011ee0:	e7f4      	b.n	8011ecc <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8011ee2:	4618      	mov	r0, r3
 8011ee4:	b01d      	add	sp, #116	; 0x74
 8011ee6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011eea:	b003      	add	sp, #12
 8011eec:	4770      	bx	lr

08011eee <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8011eee:	b40e      	push	{r1, r2, r3}
 8011ef0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011ef2:	b09e      	sub	sp, #120	; 0x78
 8011ef4:	ab23      	add	r3, sp, #140	; 0x8c
 8011ef6:	4604      	mov	r4, r0
 8011ef8:	f853 5b04 	ldr.w	r5, [r3], #4
 8011efc:	9303      	str	r3, [sp, #12]
 8011efe:	a805      	add	r0, sp, #20
 8011f00:	f000 fd8d 	bl	8012a1e <_ZN8touchgfx12TextProviderC1Ev>
 8011f04:	6823      	ldr	r3, [r4, #0]
 8011f06:	4620      	mov	r0, r4
 8011f08:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011f0a:	4798      	blx	r3
 8011f0c:	6823      	ldr	r3, [r4, #0]
 8011f0e:	4606      	mov	r6, r0
 8011f10:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011f12:	4620      	mov	r0, r4
 8011f14:	4798      	blx	r3
 8011f16:	4633      	mov	r3, r6
 8011f18:	4629      	mov	r1, r5
 8011f1a:	9000      	str	r0, [sp, #0]
 8011f1c:	9a03      	ldr	r2, [sp, #12]
 8011f1e:	a805      	add	r0, sp, #20
 8011f20:	ad1e      	add	r5, sp, #120	; 0x78
 8011f22:	f000 fdd7 	bl	8012ad4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011f26:	2100      	movs	r1, #0
 8011f28:	f845 1d68 	str.w	r1, [r5, #-104]!
 8011f2c:	4622      	mov	r2, r4
 8011f2e:	462b      	mov	r3, r5
 8011f30:	a805      	add	r0, sp, #20
 8011f32:	f001 f8d1 	bl	80130d8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011f36:	26ff      	movs	r6, #255	; 0xff
 8011f38:	b1d8      	cbz	r0, 8011f72 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 8011f3a:	280a      	cmp	r0, #10
 8011f3c:	d012      	beq.n	8011f64 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 8011f3e:	9804      	ldr	r0, [sp, #16]
 8011f40:	b180      	cbz	r0, 8011f64 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 8011f42:	7b47      	ldrb	r7, [r0, #13]
 8011f44:	7922      	ldrb	r2, [r4, #4]
 8011f46:	00fb      	lsls	r3, r7, #3
 8011f48:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8011f4c:	7a03      	ldrb	r3, [r0, #8]
 8011f4e:	430b      	orrs	r3, r1
 8011f50:	0679      	lsls	r1, r7, #25
 8011f52:	bf44      	itt	mi
 8011f54:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011f58:	b21b      	sxthmi	r3, r3
 8011f5a:	1ad3      	subs	r3, r2, r3
 8011f5c:	b2db      	uxtb	r3, r3
 8011f5e:	429e      	cmp	r6, r3
 8011f60:	bf28      	it	cs
 8011f62:	461e      	movcs	r6, r3
 8011f64:	462b      	mov	r3, r5
 8011f66:	4622      	mov	r2, r4
 8011f68:	2100      	movs	r1, #0
 8011f6a:	a805      	add	r0, sp, #20
 8011f6c:	f001 f8b4 	bl	80130d8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011f70:	e7e2      	b.n	8011f38 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 8011f72:	4630      	mov	r0, r6
 8011f74:	b01e      	add	sp, #120	; 0x78
 8011f76:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8011f7a:	b003      	add	sp, #12
 8011f7c:	4770      	bx	lr

08011f7e <_ZNK8touchgfx8Drawable10invalidateEv>:
 8011f7e:	b513      	push	{r0, r1, r4, lr}
 8011f80:	6803      	ldr	r3, [r0, #0]
 8011f82:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8011f86:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011f8a:	f8ad 1004 	strh.w	r1, [sp, #4]
 8011f8e:	2400      	movs	r4, #0
 8011f90:	9400      	str	r4, [sp, #0]
 8011f92:	f8ad 2006 	strh.w	r2, [sp, #6]
 8011f96:	691b      	ldr	r3, [r3, #16]
 8011f98:	4669      	mov	r1, sp
 8011f9a:	4798      	blx	r3
 8011f9c:	b002      	add	sp, #8
 8011f9e:	bd10      	pop	{r4, pc}

08011fa0 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8011fa0:	b538      	push	{r3, r4, r5, lr}
 8011fa2:	680b      	ldr	r3, [r1, #0]
 8011fa4:	460c      	mov	r4, r1
 8011fa6:	68db      	ldr	r3, [r3, #12]
 8011fa8:	4605      	mov	r5, r0
 8011faa:	4798      	blx	r3
 8011fac:	6823      	ldr	r3, [r4, #0]
 8011fae:	4620      	mov	r0, r4
 8011fb0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011fb2:	4629      	mov	r1, r5
 8011fb4:	4798      	blx	r3
 8011fb6:	4628      	mov	r0, r5
 8011fb8:	bd38      	pop	{r3, r4, r5, pc}

08011fba <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8011fba:	b410      	push	{r4}
 8011fbc:	880a      	ldrh	r2, [r1, #0]
 8011fbe:	8884      	ldrh	r4, [r0, #4]
 8011fc0:	4422      	add	r2, r4
 8011fc2:	800a      	strh	r2, [r1, #0]
 8011fc4:	88c4      	ldrh	r4, [r0, #6]
 8011fc6:	884a      	ldrh	r2, [r1, #2]
 8011fc8:	4422      	add	r2, r4
 8011fca:	804a      	strh	r2, [r1, #2]
 8011fcc:	6940      	ldr	r0, [r0, #20]
 8011fce:	b120      	cbz	r0, 8011fda <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8011fd0:	6803      	ldr	r3, [r0, #0]
 8011fd2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011fd6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011fd8:	4718      	bx	r3
 8011fda:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011fde:	4770      	bx	lr

08011fe0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8011fe0:	b570      	push	{r4, r5, r6, lr}
 8011fe2:	8882      	ldrh	r2, [r0, #4]
 8011fe4:	880b      	ldrh	r3, [r1, #0]
 8011fe6:	4413      	add	r3, r2
 8011fe8:	800b      	strh	r3, [r1, #0]
 8011fea:	88c2      	ldrh	r2, [r0, #6]
 8011fec:	884b      	ldrh	r3, [r1, #2]
 8011fee:	460c      	mov	r4, r1
 8011ff0:	4413      	add	r3, r2
 8011ff2:	804b      	strh	r3, [r1, #2]
 8011ff4:	4605      	mov	r5, r0
 8011ff6:	1d01      	adds	r1, r0, #4
 8011ff8:	4620      	mov	r0, r4
 8011ffa:	f7f8 fe97 	bl	800ad2c <_ZN8touchgfx4RectaNERKS0_>
 8011ffe:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8012002:	2b00      	cmp	r3, #0
 8012004:	dd0b      	ble.n	801201e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8012006:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801200a:	2b00      	cmp	r3, #0
 801200c:	dd07      	ble.n	801201e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801200e:	6968      	ldr	r0, [r5, #20]
 8012010:	b128      	cbz	r0, 801201e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8012012:	6803      	ldr	r3, [r0, #0]
 8012014:	4621      	mov	r1, r4
 8012016:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012018:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801201c:	4718      	bx	r3
 801201e:	bd70      	pop	{r4, r5, r6, pc}

08012020 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8012020:	b570      	push	{r4, r5, r6, lr}
 8012022:	8882      	ldrh	r2, [r0, #4]
 8012024:	880b      	ldrh	r3, [r1, #0]
 8012026:	4413      	add	r3, r2
 8012028:	800b      	strh	r3, [r1, #0]
 801202a:	88c2      	ldrh	r2, [r0, #6]
 801202c:	884b      	ldrh	r3, [r1, #2]
 801202e:	460c      	mov	r4, r1
 8012030:	4413      	add	r3, r2
 8012032:	804b      	strh	r3, [r1, #2]
 8012034:	4605      	mov	r5, r0
 8012036:	1d01      	adds	r1, r0, #4
 8012038:	4620      	mov	r0, r4
 801203a:	f7f8 fe77 	bl	800ad2c <_ZN8touchgfx4RectaNERKS0_>
 801203e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8012042:	2b00      	cmp	r3, #0
 8012044:	dd18      	ble.n	8012078 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8012046:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801204a:	2b00      	cmp	r3, #0
 801204c:	dd14      	ble.n	8012078 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 801204e:	6968      	ldr	r0, [r5, #20]
 8012050:	b128      	cbz	r0, 801205e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8012052:	6803      	ldr	r3, [r0, #0]
 8012054:	4621      	mov	r1, r4
 8012056:	691b      	ldr	r3, [r3, #16]
 8012058:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801205c:	4718      	bx	r3
 801205e:	4b07      	ldr	r3, [pc, #28]	; (801207c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8012060:	681b      	ldr	r3, [r3, #0]
 8012062:	3304      	adds	r3, #4
 8012064:	429d      	cmp	r5, r3
 8012066:	d107      	bne.n	8012078 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8012068:	f7fe fff2 	bl	8011050 <_ZN8touchgfx11Application11getInstanceEv>
 801206c:	6821      	ldr	r1, [r4, #0]
 801206e:	6862      	ldr	r2, [r4, #4]
 8012070:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012074:	f7ff b862 	b.w	801113c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8012078:	bd70      	pop	{r4, r5, r6, pc}
 801207a:	bf00      	nop
 801207c:	200155f0 	.word	0x200155f0

08012080 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8012080:	b570      	push	{r4, r5, r6, lr}
 8012082:	4604      	mov	r4, r0
 8012084:	4616      	mov	r6, r2
 8012086:	460d      	mov	r5, r1
 8012088:	b901      	cbnz	r1, 801208c <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 801208a:	b192      	cbz	r2, 80120b2 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 801208c:	6823      	ldr	r3, [r4, #0]
 801208e:	4620      	mov	r0, r4
 8012090:	699b      	ldr	r3, [r3, #24]
 8012092:	4798      	blx	r3
 8012094:	88e2      	ldrh	r2, [r4, #6]
 8012096:	88a1      	ldrh	r1, [r4, #4]
 8012098:	4432      	add	r2, r6
 801209a:	4429      	add	r1, r5
 801209c:	4620      	mov	r0, r4
 801209e:	b212      	sxth	r2, r2
 80120a0:	b209      	sxth	r1, r1
 80120a2:	f7f0 fdbb 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
 80120a6:	6823      	ldr	r3, [r4, #0]
 80120a8:	4620      	mov	r0, r4
 80120aa:	699b      	ldr	r3, [r3, #24]
 80120ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80120b0:	4718      	bx	r3
 80120b2:	bd70      	pop	{r4, r5, r6, pc}

080120b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 80120b4:	b510      	push	{r4, lr}
 80120b6:	4604      	mov	r4, r0
 80120b8:	4608      	mov	r0, r1
 80120ba:	2300      	movs	r3, #0
 80120bc:	8023      	strh	r3, [r4, #0]
 80120be:	8063      	strh	r3, [r4, #2]
 80120c0:	6803      	ldr	r3, [r0, #0]
 80120c2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80120c6:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 80120ca:	80a1      	strh	r1, [r4, #4]
 80120cc:	80e2      	strh	r2, [r4, #6]
 80120ce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80120d0:	4621      	mov	r1, r4
 80120d2:	4798      	blx	r3
 80120d4:	4620      	mov	r0, r4
 80120d6:	bd10      	pop	{r4, pc}

080120d8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 80120d8:	b530      	push	{r4, r5, lr}
 80120da:	8083      	strh	r3, [r0, #4]
 80120dc:	f89d 300c 	ldrb.w	r3, [sp, #12]
 80120e0:	f89d 5010 	ldrb.w	r5, [sp, #16]
 80120e4:	7183      	strb	r3, [r0, #6]
 80120e6:	79c3      	ldrb	r3, [r0, #7]
 80120e8:	6101      	str	r1, [r0, #16]
 80120ea:	f365 0306 	bfi	r3, r5, #0, #7
 80120ee:	f89d 5014 	ldrb.w	r5, [sp, #20]
 80120f2:	8282      	strh	r2, [r0, #20]
 80120f4:	f365 13c7 	bfi	r3, r5, #7, #1
 80120f8:	71c3      	strb	r3, [r0, #7]
 80120fa:	f89d 3018 	ldrb.w	r3, [sp, #24]
 80120fe:	7203      	strb	r3, [r0, #8]
 8012100:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8012104:	7243      	strb	r3, [r0, #9]
 8012106:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801210a:	8143      	strh	r3, [r0, #10]
 801210c:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 8012110:	8183      	strh	r3, [r0, #12]
 8012112:	4b01      	ldr	r3, [pc, #4]	; (8012118 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 8012114:	6003      	str	r3, [r0, #0]
 8012116:	bd30      	pop	{r4, r5, pc}
 8012118:	080242f4 	.word	0x080242f4

0801211c <_ZNK8touchgfx9ConstFont4findEt>:
 801211c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801211e:	6904      	ldr	r4, [r0, #16]
 8012120:	b3bc      	cbz	r4, 8012192 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012122:	88a3      	ldrh	r3, [r4, #4]
 8012124:	8a82      	ldrh	r2, [r0, #20]
 8012126:	1acb      	subs	r3, r1, r3
 8012128:	f102 32ff 	add.w	r2, r2, #4294967295
 801212c:	d431      	bmi.n	8012192 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801212e:	4293      	cmp	r3, r2
 8012130:	dd0c      	ble.n	801214c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8012132:	230e      	movs	r3, #14
 8012134:	fb03 4302 	mla	r3, r3, r2, r4
 8012138:	889b      	ldrh	r3, [r3, #4]
 801213a:	1a5b      	subs	r3, r3, r1
 801213c:	1ad3      	subs	r3, r2, r3
 801213e:	429a      	cmp	r2, r3
 8012140:	db27      	blt.n	8012192 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012142:	2b00      	cmp	r3, #0
 8012144:	bfbc      	itt	lt
 8012146:	2302      	movlt	r3, #2
 8012148:	fb92 f3f3 	sdivlt	r3, r2, r3
 801214c:	2500      	movs	r5, #0
 801214e:	260e      	movs	r6, #14
 8012150:	4295      	cmp	r5, r2
 8012152:	dc1e      	bgt.n	8012192 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012154:	fb06 4003 	mla	r0, r6, r3, r4
 8012158:	8887      	ldrh	r7, [r0, #4]
 801215a:	42b9      	cmp	r1, r7
 801215c:	d01a      	beq.n	8012194 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801215e:	d20d      	bcs.n	801217c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8012160:	1e5a      	subs	r2, r3, #1
 8012162:	4295      	cmp	r5, r2
 8012164:	dc15      	bgt.n	8012192 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012166:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801216a:	1a5b      	subs	r3, r3, r1
 801216c:	1ad3      	subs	r3, r2, r3
 801216e:	429a      	cmp	r2, r3
 8012170:	db0f      	blt.n	8012192 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012172:	429d      	cmp	r5, r3
 8012174:	ddec      	ble.n	8012150 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8012176:	1953      	adds	r3, r2, r5
 8012178:	105b      	asrs	r3, r3, #1
 801217a:	e7e9      	b.n	8012150 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801217c:	1c5d      	adds	r5, r3, #1
 801217e:	42aa      	cmp	r2, r5
 8012180:	db07      	blt.n	8012192 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012182:	8a43      	ldrh	r3, [r0, #18]
 8012184:	1acb      	subs	r3, r1, r3
 8012186:	442b      	add	r3, r5
 8012188:	429d      	cmp	r5, r3
 801218a:	dc02      	bgt.n	8012192 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801218c:	429a      	cmp	r2, r3
 801218e:	dadf      	bge.n	8012150 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8012190:	e7f1      	b.n	8012176 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8012192:	2000      	movs	r0, #0
 8012194:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012196 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8012196:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012198:	4604      	mov	r4, r0
 801219a:	4617      	mov	r7, r2
 801219c:	461e      	mov	r6, r3
 801219e:	b911      	cbnz	r1, 80121a6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 80121a0:	2500      	movs	r5, #0
 80121a2:	4628      	mov	r0, r5
 80121a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80121a6:	290a      	cmp	r1, #10
 80121a8:	d0fa      	beq.n	80121a0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80121aa:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80121ae:	4291      	cmp	r1, r2
 80121b0:	d0f6      	beq.n	80121a0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80121b2:	f242 020b 	movw	r2, #8203	; 0x200b
 80121b6:	4291      	cmp	r1, r2
 80121b8:	d0f2      	beq.n	80121a0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80121ba:	f7ff ffaf 	bl	801211c <_ZNK8touchgfx9ConstFont4findEt>
 80121be:	4605      	mov	r5, r0
 80121c0:	b950      	cbnz	r0, 80121d8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 80121c2:	6823      	ldr	r3, [r4, #0]
 80121c4:	4620      	mov	r0, r4
 80121c6:	691b      	ldr	r3, [r3, #16]
 80121c8:	4798      	blx	r3
 80121ca:	4601      	mov	r1, r0
 80121cc:	4620      	mov	r0, r4
 80121ce:	f7ff ffa5 	bl	801211c <_ZNK8touchgfx9ConstFont4findEt>
 80121d2:	4605      	mov	r5, r0
 80121d4:	2800      	cmp	r0, #0
 80121d6:	d0e3      	beq.n	80121a0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80121d8:	6823      	ldr	r3, [r4, #0]
 80121da:	4629      	mov	r1, r5
 80121dc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80121de:	4620      	mov	r0, r4
 80121e0:	4798      	blx	r3
 80121e2:	6038      	str	r0, [r7, #0]
 80121e4:	6823      	ldr	r3, [r4, #0]
 80121e6:	4620      	mov	r0, r4
 80121e8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80121ea:	4798      	blx	r3
 80121ec:	7030      	strb	r0, [r6, #0]
 80121ee:	e7d8      	b.n	80121a2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

080121f0 <_ZN8touchgfx4clzuEm>:
 80121f0:	4603      	mov	r3, r0
 80121f2:	b1c8      	cbz	r0, 8012228 <_ZN8touchgfx4clzuEm+0x38>
 80121f4:	0c02      	lsrs	r2, r0, #16
 80121f6:	0412      	lsls	r2, r2, #16
 80121f8:	b9a2      	cbnz	r2, 8012224 <_ZN8touchgfx4clzuEm+0x34>
 80121fa:	0403      	lsls	r3, r0, #16
 80121fc:	2010      	movs	r0, #16
 80121fe:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8012202:	bf04      	itt	eq
 8012204:	021b      	lsleq	r3, r3, #8
 8012206:	3008      	addeq	r0, #8
 8012208:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 801220c:	bf04      	itt	eq
 801220e:	011b      	lsleq	r3, r3, #4
 8012210:	3004      	addeq	r0, #4
 8012212:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8012216:	bf04      	itt	eq
 8012218:	009b      	lsleq	r3, r3, #2
 801221a:	3002      	addeq	r0, #2
 801221c:	2b00      	cmp	r3, #0
 801221e:	db04      	blt.n	801222a <_ZN8touchgfx4clzuEm+0x3a>
 8012220:	3001      	adds	r0, #1
 8012222:	4770      	bx	lr
 8012224:	2000      	movs	r0, #0
 8012226:	e7ea      	b.n	80121fe <_ZN8touchgfx4clzuEm+0xe>
 8012228:	2020      	movs	r0, #32
 801222a:	4770      	bx	lr

0801222c <_ZN8touchgfx7muldivuEmmmRm>:
 801222c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012230:	4680      	mov	r8, r0
 8012232:	460f      	mov	r7, r1
 8012234:	4615      	mov	r5, r2
 8012236:	461e      	mov	r6, r3
 8012238:	f7ff ffda 	bl	80121f0 <_ZN8touchgfx4clzuEm>
 801223c:	b998      	cbnz	r0, 8012266 <_ZN8touchgfx7muldivuEmmmRm+0x3a>
 801223e:	4608      	mov	r0, r1
 8012240:	f7ff ffd6 	bl	80121f0 <_ZN8touchgfx4clzuEm>
 8012244:	2800      	cmp	r0, #0
 8012246:	dd08      	ble.n	801225a <_ZN8touchgfx7muldivuEmmmRm+0x2e>
 8012248:	4633      	mov	r3, r6
 801224a:	462a      	mov	r2, r5
 801224c:	4641      	mov	r1, r8
 801224e:	4638      	mov	r0, r7
 8012250:	f7ff ffec 	bl	801222c <_ZN8touchgfx7muldivuEmmmRm>
 8012254:	b003      	add	sp, #12
 8012256:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801225a:	f04f 33ff 	mov.w	r3, #4294967295
 801225e:	6033      	str	r3, [r6, #0]
 8012260:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8012264:	e7f6      	b.n	8012254 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 8012266:	fa31 f900 	lsrs.w	r9, r1, r0
 801226a:	fb01 f308 	mul.w	r3, r1, r8
 801226e:	d105      	bne.n	801227c <_ZN8touchgfx7muldivuEmmmRm+0x50>
 8012270:	fbb3 f0f5 	udiv	r0, r3, r5
 8012274:	fb05 3510 	mls	r5, r5, r0, r3
 8012278:	6035      	str	r5, [r6, #0]
 801227a:	e7eb      	b.n	8012254 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 801227c:	2301      	movs	r3, #1
 801227e:	fa08 fb00 	lsl.w	fp, r8, r0
 8012282:	fa03 f000 	lsl.w	r0, r3, r0
 8012286:	3801      	subs	r0, #1
 8012288:	462a      	mov	r2, r5
 801228a:	4633      	mov	r3, r6
 801228c:	4641      	mov	r1, r8
 801228e:	4038      	ands	r0, r7
 8012290:	f7ff ffcc 	bl	801222c <_ZN8touchgfx7muldivuEmmmRm>
 8012294:	fbbb faf5 	udiv	sl, fp, r5
 8012298:	462a      	mov	r2, r5
 801229a:	4607      	mov	r7, r0
 801229c:	ab01      	add	r3, sp, #4
 801229e:	fb05 b11a 	mls	r1, r5, sl, fp
 80122a2:	4648      	mov	r0, r9
 80122a4:	f7ff ffc2 	bl	801222c <_ZN8touchgfx7muldivuEmmmRm>
 80122a8:	9b01      	ldr	r3, [sp, #4]
 80122aa:	6832      	ldr	r2, [r6, #0]
 80122ac:	fb09 f40a 	mul.w	r4, r9, sl
 80122b0:	441a      	add	r2, r3
 80122b2:	fbb2 f3f5 	udiv	r3, r2, r5
 80122b6:	441c      	add	r4, r3
 80122b8:	443c      	add	r4, r7
 80122ba:	4420      	add	r0, r4
 80122bc:	fb05 2513 	mls	r5, r5, r3, r2
 80122c0:	e7da      	b.n	8012278 <_ZN8touchgfx7muldivuEmmmRm+0x4c>

080122c2 <_ZN8touchgfx6muldivElllRl>:
 80122c2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80122c4:	2800      	cmp	r0, #0
 80122c6:	bfba      	itte	lt
 80122c8:	4240      	neglt	r0, r0
 80122ca:	f04f 34ff 	movlt.w	r4, #4294967295
 80122ce:	2401      	movge	r4, #1
 80122d0:	2900      	cmp	r1, #0
 80122d2:	bfbc      	itt	lt
 80122d4:	4249      	neglt	r1, r1
 80122d6:	4264      	neglt	r4, r4
 80122d8:	2a00      	cmp	r2, #0
 80122da:	bfb6      	itet	lt
 80122dc:	4265      	neglt	r5, r4
 80122de:	4625      	movge	r5, r4
 80122e0:	4252      	neglt	r2, r2
 80122e2:	4288      	cmp	r0, r1
 80122e4:	461e      	mov	r6, r3
 80122e6:	bfc2      	ittt	gt
 80122e8:	4603      	movgt	r3, r0
 80122ea:	4608      	movgt	r0, r1
 80122ec:	4619      	movgt	r1, r3
 80122ee:	ab01      	add	r3, sp, #4
 80122f0:	f7ff ff9c 	bl	801222c <_ZN8touchgfx7muldivuEmmmRm>
 80122f4:	9b01      	ldr	r3, [sp, #4]
 80122f6:	4368      	muls	r0, r5
 80122f8:	435c      	muls	r4, r3
 80122fa:	6034      	str	r4, [r6, #0]
 80122fc:	b002      	add	sp, #8
 80122fe:	bd70      	pop	{r4, r5, r6, pc}

08012300 <_ZN8touchgfx6muldivElll>:
 8012300:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012302:	4606      	mov	r6, r0
 8012304:	ab01      	add	r3, sp, #4
 8012306:	460d      	mov	r5, r1
 8012308:	4614      	mov	r4, r2
 801230a:	f7ff ffda 	bl	80122c2 <_ZN8touchgfx6muldivElllRl>
 801230e:	2e00      	cmp	r6, #0
 8012310:	db20      	blt.n	8012354 <_ZN8touchgfx6muldivElll+0x54>
 8012312:	bf14      	ite	ne
 8012314:	2301      	movne	r3, #1
 8012316:	2300      	moveq	r3, #0
 8012318:	2d00      	cmp	r5, #0
 801231a:	db1e      	blt.n	801235a <_ZN8touchgfx6muldivElll+0x5a>
 801231c:	bf14      	ite	ne
 801231e:	2201      	movne	r2, #1
 8012320:	2200      	moveq	r2, #0
 8012322:	2c00      	cmp	r4, #0
 8012324:	fb03 f202 	mul.w	r2, r3, r2
 8012328:	db1a      	blt.n	8012360 <_ZN8touchgfx6muldivElll+0x60>
 801232a:	bf14      	ite	ne
 801232c:	2301      	movne	r3, #1
 801232e:	2300      	moveq	r3, #0
 8012330:	4353      	muls	r3, r2
 8012332:	2b01      	cmp	r3, #1
 8012334:	d117      	bne.n	8012366 <_ZN8touchgfx6muldivElll+0x66>
 8012336:	9b01      	ldr	r3, [sp, #4]
 8012338:	2c00      	cmp	r4, #0
 801233a:	bfb8      	it	lt
 801233c:	4264      	neglt	r4, r4
 801233e:	2b00      	cmp	r3, #0
 8012340:	f104 0401 	add.w	r4, r4, #1
 8012344:	bfb8      	it	lt
 8012346:	425b      	neglt	r3, r3
 8012348:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 801234c:	db00      	blt.n	8012350 <_ZN8touchgfx6muldivElll+0x50>
 801234e:	3001      	adds	r0, #1
 8012350:	b002      	add	sp, #8
 8012352:	bd70      	pop	{r4, r5, r6, pc}
 8012354:	f04f 33ff 	mov.w	r3, #4294967295
 8012358:	e7de      	b.n	8012318 <_ZN8touchgfx6muldivElll+0x18>
 801235a:	f04f 32ff 	mov.w	r2, #4294967295
 801235e:	e7e0      	b.n	8012322 <_ZN8touchgfx6muldivElll+0x22>
 8012360:	f04f 33ff 	mov.w	r3, #4294967295
 8012364:	e7e4      	b.n	8012330 <_ZN8touchgfx6muldivElll+0x30>
 8012366:	3301      	adds	r3, #1
 8012368:	d1f2      	bne.n	8012350 <_ZN8touchgfx6muldivElll+0x50>
 801236a:	9b01      	ldr	r3, [sp, #4]
 801236c:	2c00      	cmp	r4, #0
 801236e:	bfb8      	it	lt
 8012370:	4264      	neglt	r4, r4
 8012372:	2b00      	cmp	r3, #0
 8012374:	bfb8      	it	lt
 8012376:	425b      	neglt	r3, r3
 8012378:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 801237c:	bfc8      	it	gt
 801237e:	f100 30ff 	addgt.w	r0, r0, #4294967295
 8012382:	e7e5      	b.n	8012350 <_ZN8touchgfx6muldivElll+0x50>

08012384 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8012384:	2000      	movs	r0, #0
 8012386:	4770      	bx	lr

08012388 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8012388:	2001      	movs	r0, #1
 801238a:	4770      	bx	lr

0801238c <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 801238c:	2002      	movs	r0, #2
 801238e:	4770      	bx	lr

08012390 <_ZN8touchgfx6ScreenD1Ev>:
 8012390:	4770      	bx	lr

08012392 <_ZN8touchgfx12GestureEventD1Ev>:
 8012392:	4770      	bx	lr

08012394 <_ZN8touchgfx9DragEventD1Ev>:
 8012394:	4770      	bx	lr

08012396 <_ZN8touchgfx10ClickEventD1Ev>:
 8012396:	4770      	bx	lr

08012398 <_ZN8touchgfx10ClickEventD0Ev>:
 8012398:	b510      	push	{r4, lr}
 801239a:	210c      	movs	r1, #12
 801239c:	4604      	mov	r4, r0
 801239e:	f00e f973 	bl	8020688 <_ZdlPvj>
 80123a2:	4620      	mov	r0, r4
 80123a4:	bd10      	pop	{r4, pc}

080123a6 <_ZN8touchgfx9DragEventD0Ev>:
 80123a6:	b510      	push	{r4, lr}
 80123a8:	2110      	movs	r1, #16
 80123aa:	4604      	mov	r4, r0
 80123ac:	f00e f96c 	bl	8020688 <_ZdlPvj>
 80123b0:	4620      	mov	r0, r4
 80123b2:	bd10      	pop	{r4, pc}

080123b4 <_ZN8touchgfx12GestureEventD0Ev>:
 80123b4:	b510      	push	{r4, lr}
 80123b6:	210c      	movs	r1, #12
 80123b8:	4604      	mov	r4, r0
 80123ba:	f00e f965 	bl	8020688 <_ZdlPvj>
 80123be:	4620      	mov	r0, r4
 80123c0:	bd10      	pop	{r4, pc}

080123c2 <_ZN8touchgfx6ScreenD0Ev>:
 80123c2:	b510      	push	{r4, lr}
 80123c4:	213c      	movs	r1, #60	; 0x3c
 80123c6:	4604      	mov	r4, r0
 80123c8:	f00e f95e 	bl	8020688 <_ZdlPvj>
 80123cc:	4620      	mov	r0, r4
 80123ce:	bd10      	pop	{r4, pc}

080123d0 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 80123d0:	b530      	push	{r4, r5, lr}
 80123d2:	460d      	mov	r5, r1
 80123d4:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80123d6:	b087      	sub	sp, #28
 80123d8:	4604      	mov	r4, r0
 80123da:	b301      	cbz	r1, 801241e <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 80123dc:	a801      	add	r0, sp, #4
 80123de:	f7ff fe69 	bl	80120b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80123e2:	892a      	ldrh	r2, [r5, #8]
 80123e4:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80123e8:	7928      	ldrb	r0, [r5, #4]
 80123ea:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 80123ee:	f88d 0010 	strb.w	r0, [sp, #16]
 80123f2:	1ad2      	subs	r2, r2, r3
 80123f4:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80123f6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80123f8:	f8ad 1012 	strh.w	r1, [sp, #18]
 80123fc:	441a      	add	r2, r3
 80123fe:	896b      	ldrh	r3, [r5, #10]
 8012400:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8012404:	f8ad 2014 	strh.w	r2, [sp, #20]
 8012408:	1b5b      	subs	r3, r3, r5
 801240a:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 801240c:	442b      	add	r3, r5
 801240e:	4d05      	ldr	r5, [pc, #20]	; (8012424 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8012410:	9503      	str	r5, [sp, #12]
 8012412:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012416:	6803      	ldr	r3, [r0, #0]
 8012418:	a903      	add	r1, sp, #12
 801241a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801241c:	4798      	blx	r3
 801241e:	b007      	add	sp, #28
 8012420:	bd30      	pop	{r4, r5, pc}
 8012422:	bf00      	nop
 8012424:	08024374 	.word	0x08024374

08012428 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8012428:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801242c:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801242e:	b08a      	sub	sp, #40	; 0x28
 8012430:	4604      	mov	r4, r0
 8012432:	460d      	mov	r5, r1
 8012434:	b113      	cbz	r3, 801243c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8012436:	790b      	ldrb	r3, [r1, #4]
 8012438:	2b00      	cmp	r3, #0
 801243a:	d044      	beq.n	80124c6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801243c:	f104 0804 	add.w	r8, r4, #4
 8012440:	4641      	mov	r1, r8
 8012442:	a803      	add	r0, sp, #12
 8012444:	f7ff fe36 	bl	80120b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012448:	792b      	ldrb	r3, [r5, #4]
 801244a:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801244e:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8012452:	b983      	cbnz	r3, 8012476 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8012454:	892a      	ldrh	r2, [r5, #8]
 8012456:	88e9      	ldrh	r1, [r5, #6]
 8012458:	f104 0336 	add.w	r3, r4, #54	; 0x36
 801245c:	1b92      	subs	r2, r2, r6
 801245e:	1bc9      	subs	r1, r1, r7
 8012460:	9301      	str	r3, [sp, #4]
 8012462:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8012466:	9300      	str	r3, [sp, #0]
 8012468:	b212      	sxth	r2, r2
 801246a:	f104 0330 	add.w	r3, r4, #48	; 0x30
 801246e:	b209      	sxth	r1, r1
 8012470:	4640      	mov	r0, r8
 8012472:	f7f8 fb77 	bl	800ab64 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8012476:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8012478:	b329      	cbz	r1, 80124c6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801247a:	a805      	add	r0, sp, #20
 801247c:	f7ff fe1a 	bl	80120b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012480:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8012484:	792b      	ldrb	r3, [r5, #4]
 8012486:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8012488:	f88d 3020 	strb.w	r3, [sp, #32]
 801248c:	1abf      	subs	r7, r7, r2
 801248e:	88ea      	ldrh	r2, [r5, #6]
 8012490:	4417      	add	r7, r2
 8012492:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8012494:	4417      	add	r7, r2
 8012496:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 801249a:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 801249e:	1ab6      	subs	r6, r6, r2
 80124a0:	892a      	ldrh	r2, [r5, #8]
 80124a2:	4416      	add	r6, r2
 80124a4:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80124a6:	4416      	add	r6, r2
 80124a8:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 80124ac:	4a07      	ldr	r2, [pc, #28]	; (80124cc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 80124ae:	9207      	str	r2, [sp, #28]
 80124b0:	2600      	movs	r6, #0
 80124b2:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 80124b6:	6803      	ldr	r3, [r0, #0]
 80124b8:	a907      	add	r1, sp, #28
 80124ba:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80124bc:	4798      	blx	r3
 80124be:	792b      	ldrb	r3, [r5, #4]
 80124c0:	b10b      	cbz	r3, 80124c6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80124c2:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 80124c6:	b00a      	add	sp, #40	; 0x28
 80124c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80124cc:	0802434c 	.word	0x0802434c

080124d0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 80124d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80124d4:	460c      	mov	r4, r1
 80124d6:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80124d8:	b088      	sub	sp, #32
 80124da:	4605      	mov	r5, r0
 80124dc:	2900      	cmp	r1, #0
 80124de:	d06d      	beq.n	80125bc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 80124e0:	4668      	mov	r0, sp
 80124e2:	f7ff fde7 	bl	80120b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80124e6:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 80124e8:	88e3      	ldrh	r3, [r4, #6]
 80124ea:	f9bd 8000 	ldrsh.w	r8, [sp]
 80124ee:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 80124f2:	440b      	add	r3, r1
 80124f4:	b21b      	sxth	r3, r3
 80124f6:	4543      	cmp	r3, r8
 80124f8:	db31      	blt.n	801255e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80124fa:	f8bd c004 	ldrh.w	ip, [sp, #4]
 80124fe:	44c4      	add	ip, r8
 8012500:	fa0f fc8c 	sxth.w	ip, ip
 8012504:	4563      	cmp	r3, ip
 8012506:	da2a      	bge.n	801255e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012508:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 801250a:	8926      	ldrh	r6, [r4, #8]
 801250c:	4416      	add	r6, r2
 801250e:	b236      	sxth	r6, r6
 8012510:	42be      	cmp	r6, r7
 8012512:	db24      	blt.n	801255e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012514:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8012518:	4438      	add	r0, r7
 801251a:	b200      	sxth	r0, r0
 801251c:	4286      	cmp	r6, r0
 801251e:	da1e      	bge.n	801255e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012520:	8963      	ldrh	r3, [r4, #10]
 8012522:	4419      	add	r1, r3
 8012524:	b209      	sxth	r1, r1
 8012526:	4541      	cmp	r1, r8
 8012528:	db08      	blt.n	801253c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801252a:	4561      	cmp	r1, ip
 801252c:	da06      	bge.n	801253c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801252e:	89a3      	ldrh	r3, [r4, #12]
 8012530:	441a      	add	r2, r3
 8012532:	b212      	sxth	r2, r2
 8012534:	42ba      	cmp	r2, r7
 8012536:	db01      	blt.n	801253c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8012538:	4282      	cmp	r2, r0
 801253a:	db10      	blt.n	801255e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801253c:	4b21      	ldr	r3, [pc, #132]	; (80125c4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801253e:	9304      	str	r3, [sp, #16]
 8012540:	2302      	movs	r3, #2
 8012542:	f88d 3014 	strb.w	r3, [sp, #20]
 8012546:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8012548:	2300      	movs	r3, #0
 801254a:	f8ad 3016 	strh.w	r3, [sp, #22]
 801254e:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012552:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012556:	6803      	ldr	r3, [r0, #0]
 8012558:	a904      	add	r1, sp, #16
 801255a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801255c:	4798      	blx	r3
 801255e:	1d29      	adds	r1, r5, #4
 8012560:	a802      	add	r0, sp, #8
 8012562:	f7ff fda7 	bl	80120b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012566:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801256a:	88e0      	ldrh	r0, [r4, #6]
 801256c:	7921      	ldrb	r1, [r4, #4]
 801256e:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8012572:	8922      	ldrh	r2, [r4, #8]
 8012574:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8012576:	f88d 1014 	strb.w	r1, [sp, #20]
 801257a:	eba3 0808 	sub.w	r8, r3, r8
 801257e:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8012582:	1bdf      	subs	r7, r3, r7
 8012584:	b2bb      	uxth	r3, r7
 8012586:	fa1f f888 	uxth.w	r8, r8
 801258a:	8967      	ldrh	r7, [r4, #10]
 801258c:	89a4      	ldrh	r4, [r4, #12]
 801258e:	4440      	add	r0, r8
 8012590:	4460      	add	r0, ip
 8012592:	441a      	add	r2, r3
 8012594:	44b8      	add	r8, r7
 8012596:	4423      	add	r3, r4
 8012598:	f8ad 0016 	strh.w	r0, [sp, #22]
 801259c:	4433      	add	r3, r6
 801259e:	4432      	add	r2, r6
 80125a0:	44e0      	add	r8, ip
 80125a2:	4c09      	ldr	r4, [pc, #36]	; (80125c8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 80125a4:	6b28      	ldr	r0, [r5, #48]	; 0x30
 80125a6:	9404      	str	r4, [sp, #16]
 80125a8:	f8ad 2018 	strh.w	r2, [sp, #24]
 80125ac:	f8ad 801a 	strh.w	r8, [sp, #26]
 80125b0:	f8ad 301c 	strh.w	r3, [sp, #28]
 80125b4:	6803      	ldr	r3, [r0, #0]
 80125b6:	a904      	add	r1, sp, #16
 80125b8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80125ba:	4798      	blx	r3
 80125bc:	b008      	add	sp, #32
 80125be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80125c2:	bf00      	nop
 80125c4:	0802434c 	.word	0x0802434c
 80125c8:	08024360 	.word	0x08024360

080125cc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 80125cc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80125ce:	4604      	mov	r4, r0
 80125d0:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 80125d4:	3201      	adds	r2, #1
 80125d6:	d112      	bne.n	80125fe <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 80125d8:	6803      	ldr	r3, [r0, #0]
 80125da:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80125de:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80125e2:	f8ad 1004 	strh.w	r1, [sp, #4]
 80125e6:	2500      	movs	r5, #0
 80125e8:	9500      	str	r5, [sp, #0]
 80125ea:	466d      	mov	r5, sp
 80125ec:	4629      	mov	r1, r5
 80125ee:	f8ad 2006 	strh.w	r2, [sp, #6]
 80125f2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80125f4:	4798      	blx	r3
 80125f6:	e895 0003 	ldmia.w	r5, {r0, r1}
 80125fa:	e884 0003 	stmia.w	r4, {r0, r1}
 80125fe:	4620      	mov	r0, r4
 8012600:	b003      	add	sp, #12
 8012602:	bd30      	pop	{r4, r5, pc}

08012604 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8012604:	b513      	push	{r0, r1, r4, lr}
 8012606:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 801260a:	3301      	adds	r3, #1
 801260c:	4604      	mov	r4, r0
 801260e:	d109      	bne.n	8012624 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8012610:	4601      	mov	r1, r0
 8012612:	4668      	mov	r0, sp
 8012614:	f7ff fd4e 	bl	80120b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012618:	f8bd 3000 	ldrh.w	r3, [sp]
 801261c:	8423      	strh	r3, [r4, #32]
 801261e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012622:	8463      	strh	r3, [r4, #34]	; 0x22
 8012624:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8012628:	b002      	add	sp, #8
 801262a:	bd10      	pop	{r4, pc}

0801262c <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 801262c:	b513      	push	{r0, r1, r4, lr}
 801262e:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8012632:	3301      	adds	r3, #1
 8012634:	4604      	mov	r4, r0
 8012636:	d109      	bne.n	801264c <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8012638:	4601      	mov	r1, r0
 801263a:	4668      	mov	r0, sp
 801263c:	f7ff fd3a 	bl	80120b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012640:	f8bd 3000 	ldrh.w	r3, [sp]
 8012644:	8423      	strh	r3, [r4, #32]
 8012646:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801264a:	8463      	strh	r3, [r4, #34]	; 0x22
 801264c:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8012650:	b002      	add	sp, #8
 8012652:	bd10      	pop	{r4, pc}

08012654 <_ZN8touchgfx6ScreenC1Ev>:
 8012654:	b570      	push	{r4, r5, r6, lr}
 8012656:	4605      	mov	r5, r0
 8012658:	4b16      	ldr	r3, [pc, #88]	; (80126b4 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 801265a:	f845 3b04 	str.w	r3, [r5], #4
 801265e:	2300      	movs	r3, #0
 8012660:	8103      	strh	r3, [r0, #8]
 8012662:	8143      	strh	r3, [r0, #10]
 8012664:	8183      	strh	r3, [r0, #12]
 8012666:	81c3      	strh	r3, [r0, #14]
 8012668:	8203      	strh	r3, [r0, #16]
 801266a:	8243      	strh	r3, [r0, #18]
 801266c:	8283      	strh	r3, [r0, #20]
 801266e:	82c3      	strh	r3, [r0, #22]
 8012670:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8012674:	6203      	str	r3, [r0, #32]
 8012676:	8483      	strh	r3, [r0, #36]	; 0x24
 8012678:	84c3      	strh	r3, [r0, #38]	; 0x26
 801267a:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 801267e:	4a0e      	ldr	r2, [pc, #56]	; (80126b8 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8012680:	6343      	str	r3, [r0, #52]	; 0x34
 8012682:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8012686:	4b0d      	ldr	r3, [pc, #52]	; (80126bc <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8012688:	6042      	str	r2, [r0, #4]
 801268a:	f9b3 6000 	ldrsh.w	r6, [r3]
 801268e:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8012690:	4a0b      	ldr	r2, [pc, #44]	; (80126c0 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8012692:	4604      	mov	r4, r0
 8012694:	2101      	movs	r1, #1
 8012696:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 801269a:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 801269e:	f9b2 1000 	ldrsh.w	r1, [r2]
 80126a2:	4628      	mov	r0, r5
 80126a4:	4798      	blx	r3
 80126a6:	6863      	ldr	r3, [r4, #4]
 80126a8:	4628      	mov	r0, r5
 80126aa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80126ac:	4631      	mov	r1, r6
 80126ae:	4798      	blx	r3
 80126b0:	4620      	mov	r0, r4
 80126b2:	bd70      	pop	{r4, r5, r6, pc}
 80126b4:	08024388 	.word	0x08024388
 80126b8:	0802373c 	.word	0x0802373c
 80126bc:	200155a2 	.word	0x200155a2
 80126c0:	200155a0 	.word	0x200155a0

080126c4 <_ZN8touchgfx6Screen4drawEv>:
 80126c4:	b507      	push	{r0, r1, r2, lr}
 80126c6:	4b09      	ldr	r3, [pc, #36]	; (80126ec <_ZN8touchgfx6Screen4drawEv+0x28>)
 80126c8:	f9b3 2000 	ldrsh.w	r2, [r3]
 80126cc:	4b08      	ldr	r3, [pc, #32]	; (80126f0 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 80126ce:	f8ad 2004 	strh.w	r2, [sp, #4]
 80126d2:	f9b3 3000 	ldrsh.w	r3, [r3]
 80126d6:	f8ad 3006 	strh.w	r3, [sp, #6]
 80126da:	6803      	ldr	r3, [r0, #0]
 80126dc:	2100      	movs	r1, #0
 80126de:	9100      	str	r1, [sp, #0]
 80126e0:	689b      	ldr	r3, [r3, #8]
 80126e2:	4669      	mov	r1, sp
 80126e4:	4798      	blx	r3
 80126e6:	b003      	add	sp, #12
 80126e8:	f85d fb04 	ldr.w	pc, [sp], #4
 80126ec:	200155a0 	.word	0x200155a0
 80126f0:	200155a2 	.word	0x200155a2

080126f4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 80126f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80126f8:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 80126fc:	2b00      	cmp	r3, #0
 80126fe:	b089      	sub	sp, #36	; 0x24
 8012700:	4680      	mov	r8, r0
 8012702:	460c      	mov	r4, r1
 8012704:	4615      	mov	r5, r2
 8012706:	dd0e      	ble.n	8012726 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012708:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 801270c:	2b00      	cmp	r3, #0
 801270e:	dd0a      	ble.n	8012726 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012710:	4628      	mov	r0, r5
 8012712:	f7ff ff5b 	bl	80125cc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8012716:	4621      	mov	r1, r4
 8012718:	f7fe fc01 	bl	8010f1e <_ZNK8touchgfx4Rect9intersectERKS0_>
 801271c:	69eb      	ldr	r3, [r5, #28]
 801271e:	b928      	cbnz	r0, 801272c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8012720:	461d      	mov	r5, r3
 8012722:	2b00      	cmp	r3, #0
 8012724:	d1f4      	bne.n	8012710 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8012726:	b009      	add	sp, #36	; 0x24
 8012728:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801272c:	ae04      	add	r6, sp, #16
 801272e:	2b00      	cmp	r3, #0
 8012730:	f000 80b5 	beq.w	801289e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8012734:	682b      	ldr	r3, [r5, #0]
 8012736:	4629      	mov	r1, r5
 8012738:	68db      	ldr	r3, [r3, #12]
 801273a:	a802      	add	r0, sp, #8
 801273c:	4798      	blx	r3
 801273e:	4628      	mov	r0, r5
 8012740:	f7ff ff60 	bl	8012604 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8012744:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8012748:	4407      	add	r7, r0
 801274a:	4628      	mov	r0, r5
 801274c:	f7ff ff6e 	bl	801262c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8012750:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8012754:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8012758:	f8ad 2014 	strh.w	r2, [sp, #20]
 801275c:	4418      	add	r0, r3
 801275e:	4621      	mov	r1, r4
 8012760:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8012764:	f8ad 0012 	strh.w	r0, [sp, #18]
 8012768:	b23f      	sxth	r7, r7
 801276a:	4630      	mov	r0, r6
 801276c:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012770:	f8ad 7010 	strh.w	r7, [sp, #16]
 8012774:	f7f8 fada 	bl	800ad2c <_ZN8touchgfx4RectaNERKS0_>
 8012778:	4628      	mov	r0, r5
 801277a:	f7ff ff27 	bl	80125cc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801277e:	4602      	mov	r2, r0
 8012780:	e896 0003 	ldmia.w	r6, {r0, r1}
 8012784:	ab06      	add	r3, sp, #24
 8012786:	e883 0003 	stmia.w	r3, {r0, r1}
 801278a:	4611      	mov	r1, r2
 801278c:	4618      	mov	r0, r3
 801278e:	f7f8 facd 	bl	800ad2c <_ZN8touchgfx4RectaNERKS0_>
 8012792:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8012796:	f9b4 1000 	ldrsh.w	r1, [r4]
 801279a:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801279e:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 80127a2:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 80127a6:	4299      	cmp	r1, r3
 80127a8:	d10b      	bne.n	80127c2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80127aa:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80127ae:	4552      	cmp	r2, sl
 80127b0:	d107      	bne.n	80127c2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80127b2:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80127b6:	455a      	cmp	r2, fp
 80127b8:	d103      	bne.n	80127c2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80127ba:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80127be:	454a      	cmp	r2, r9
 80127c0:	d06d      	beq.n	801289e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80127c2:	f1bb 0f00 	cmp.w	fp, #0
 80127c6:	dd65      	ble.n	8012894 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80127c8:	f1b9 0f00 	cmp.w	r9, #0
 80127cc:	dd62      	ble.n	8012894 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80127ce:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80127d2:	fa1f f08a 	uxth.w	r0, sl
 80127d6:	4552      	cmp	r2, sl
 80127d8:	9000      	str	r0, [sp, #0]
 80127da:	da12      	bge.n	8012802 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 80127dc:	9301      	str	r3, [sp, #4]
 80127de:	9b00      	ldr	r3, [sp, #0]
 80127e0:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80127e4:	f8ad 2012 	strh.w	r2, [sp, #18]
 80127e8:	1a9a      	subs	r2, r3, r2
 80127ea:	f8ad 1010 	strh.w	r1, [sp, #16]
 80127ee:	f8ad 0014 	strh.w	r0, [sp, #20]
 80127f2:	f8ad 2016 	strh.w	r2, [sp, #22]
 80127f6:	69ea      	ldr	r2, [r5, #28]
 80127f8:	4631      	mov	r1, r6
 80127fa:	4640      	mov	r0, r8
 80127fc:	f7ff ff7a 	bl	80126f4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012800:	9b01      	ldr	r3, [sp, #4]
 8012802:	f9b4 2000 	ldrsh.w	r2, [r4]
 8012806:	429a      	cmp	r2, r3
 8012808:	b29f      	uxth	r7, r3
 801280a:	da0d      	bge.n	8012828 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 801280c:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012810:	1aba      	subs	r2, r7, r2
 8012812:	f8ad a012 	strh.w	sl, [sp, #18]
 8012816:	f8ad 2014 	strh.w	r2, [sp, #20]
 801281a:	f8ad 9016 	strh.w	r9, [sp, #22]
 801281e:	69ea      	ldr	r2, [r5, #28]
 8012820:	4631      	mov	r1, r6
 8012822:	4640      	mov	r0, r8
 8012824:	f7ff ff66 	bl	80126f4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012828:	8822      	ldrh	r2, [r4, #0]
 801282a:	88a3      	ldrh	r3, [r4, #4]
 801282c:	445f      	add	r7, fp
 801282e:	4413      	add	r3, r2
 8012830:	b29b      	uxth	r3, r3
 8012832:	b2bf      	uxth	r7, r7
 8012834:	b23a      	sxth	r2, r7
 8012836:	b219      	sxth	r1, r3
 8012838:	4291      	cmp	r1, r2
 801283a:	dd0d      	ble.n	8012858 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 801283c:	1bdb      	subs	r3, r3, r7
 801283e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012842:	f8ad a012 	strh.w	sl, [sp, #18]
 8012846:	f8ad 3014 	strh.w	r3, [sp, #20]
 801284a:	f8ad 9016 	strh.w	r9, [sp, #22]
 801284e:	69ea      	ldr	r2, [r5, #28]
 8012850:	4631      	mov	r1, r6
 8012852:	4640      	mov	r0, r8
 8012854:	f7ff ff4e 	bl	80126f4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012858:	88e2      	ldrh	r2, [r4, #6]
 801285a:	8863      	ldrh	r3, [r4, #2]
 801285c:	4413      	add	r3, r2
 801285e:	9a00      	ldr	r2, [sp, #0]
 8012860:	444a      	add	r2, r9
 8012862:	b29b      	uxth	r3, r3
 8012864:	fa1f f982 	uxth.w	r9, r2
 8012868:	fa0f f289 	sxth.w	r2, r9
 801286c:	b219      	sxth	r1, r3
 801286e:	428a      	cmp	r2, r1
 8012870:	da15      	bge.n	801289e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8012872:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8012876:	f9b4 0000 	ldrsh.w	r0, [r4]
 801287a:	f8ad 1014 	strh.w	r1, [sp, #20]
 801287e:	eba3 0309 	sub.w	r3, r3, r9
 8012882:	f8ad 0010 	strh.w	r0, [sp, #16]
 8012886:	f8ad 2012 	strh.w	r2, [sp, #18]
 801288a:	f8ad 3016 	strh.w	r3, [sp, #22]
 801288e:	69ea      	ldr	r2, [r5, #28]
 8012890:	4631      	mov	r1, r6
 8012892:	e001      	b.n	8012898 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8012894:	69ea      	ldr	r2, [r5, #28]
 8012896:	4621      	mov	r1, r4
 8012898:	4640      	mov	r0, r8
 801289a:	f7ff ff2b 	bl	80126f4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801289e:	4628      	mov	r0, r5
 80128a0:	f7ff fe94 	bl	80125cc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80128a4:	6861      	ldr	r1, [r4, #4]
 80128a6:	4602      	mov	r2, r0
 80128a8:	6820      	ldr	r0, [r4, #0]
 80128aa:	4633      	mov	r3, r6
 80128ac:	c303      	stmia	r3!, {r0, r1}
 80128ae:	4611      	mov	r1, r2
 80128b0:	4630      	mov	r0, r6
 80128b2:	f7f8 fa3b 	bl	800ad2c <_ZN8touchgfx4RectaNERKS0_>
 80128b6:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80128ba:	2b00      	cmp	r3, #0
 80128bc:	f77f af33 	ble.w	8012726 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80128c0:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80128c4:	2b00      	cmp	r3, #0
 80128c6:	f77f af2e 	ble.w	8012726 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80128ca:	4628      	mov	r0, r5
 80128cc:	f7ff fe9a 	bl	8012604 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80128d0:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 80128d4:	1a18      	subs	r0, r3, r0
 80128d6:	f8ad 0010 	strh.w	r0, [sp, #16]
 80128da:	4628      	mov	r0, r5
 80128dc:	f7ff fea6 	bl	801262c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80128e0:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80128e4:	1a18      	subs	r0, r3, r0
 80128e6:	f8ad 0012 	strh.w	r0, [sp, #18]
 80128ea:	682b      	ldr	r3, [r5, #0]
 80128ec:	4631      	mov	r1, r6
 80128ee:	689b      	ldr	r3, [r3, #8]
 80128f0:	4628      	mov	r0, r5
 80128f2:	4798      	blx	r3
 80128f4:	e717      	b.n	8012726 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

080128f6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 80128f6:	b570      	push	{r4, r5, r6, lr}
 80128f8:	460c      	mov	r4, r1
 80128fa:	b086      	sub	sp, #24
 80128fc:	1d06      	adds	r6, r0, #4
 80128fe:	2300      	movs	r3, #0
 8012900:	4631      	mov	r1, r6
 8012902:	4605      	mov	r5, r0
 8012904:	a802      	add	r0, sp, #8
 8012906:	9301      	str	r3, [sp, #4]
 8012908:	f7ff fbd4 	bl	80120b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801290c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8012910:	8822      	ldrh	r2, [r4, #0]
 8012912:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8012916:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801291a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801291e:	1ad2      	subs	r2, r2, r3
 8012920:	8863      	ldrh	r3, [r4, #2]
 8012922:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012926:	1a5b      	subs	r3, r3, r1
 8012928:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 801292c:	f8ad 1016 	strh.w	r1, [sp, #22]
 8012930:	aa01      	add	r2, sp, #4
 8012932:	a904      	add	r1, sp, #16
 8012934:	4630      	mov	r0, r6
 8012936:	f8ad 3012 	strh.w	r3, [sp, #18]
 801293a:	f7f8 facf 	bl	800aedc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801293e:	9a01      	ldr	r2, [sp, #4]
 8012940:	b11a      	cbz	r2, 801294a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8012942:	4621      	mov	r1, r4
 8012944:	4628      	mov	r0, r5
 8012946:	f7ff fed5 	bl	80126f4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801294a:	b006      	add	sp, #24
 801294c:	bd70      	pop	{r4, r5, r6, pc}

0801294e <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801294e:	b530      	push	{r4, r5, lr}
 8012950:	4602      	mov	r2, r0
 8012952:	4604      	mov	r4, r0
 8012954:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8012958:	b085      	sub	sp, #20
 801295a:	460d      	mov	r5, r1
 801295c:	6851      	ldr	r1, [r2, #4]
 801295e:	466b      	mov	r3, sp
 8012960:	c303      	stmia	r3!, {r0, r1}
 8012962:	4629      	mov	r1, r5
 8012964:	4668      	mov	r0, sp
 8012966:	f7f8 f9e1 	bl	800ad2c <_ZN8touchgfx4RectaNERKS0_>
 801296a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801296e:	b12b      	cbz	r3, 801297c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8012970:	4669      	mov	r1, sp
 8012972:	4620      	mov	r0, r4
 8012974:	f7ff ffbf 	bl	80128f6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8012978:	b005      	add	sp, #20
 801297a:	bd30      	pop	{r4, r5, pc}
 801297c:	3404      	adds	r4, #4
 801297e:	4621      	mov	r1, r4
 8012980:	a802      	add	r0, sp, #8
 8012982:	f7ff fb97 	bl	80120b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012986:	f8bd 3000 	ldrh.w	r3, [sp]
 801298a:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801298e:	1a9b      	subs	r3, r3, r2
 8012990:	f8ad 3000 	strh.w	r3, [sp]
 8012994:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8012998:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801299c:	4669      	mov	r1, sp
 801299e:	1a9b      	subs	r3, r3, r2
 80129a0:	4620      	mov	r0, r4
 80129a2:	f8ad 3002 	strh.w	r3, [sp, #2]
 80129a6:	f7f8 fa60 	bl	800ae6a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 80129aa:	e7e5      	b.n	8012978 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

080129ac <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 80129ac:	680a      	ldr	r2, [r1, #0]
 80129ae:	460b      	mov	r3, r1
 80129b0:	6992      	ldr	r2, [r2, #24]
 80129b2:	1d01      	adds	r1, r0, #4
 80129b4:	4618      	mov	r0, r3
 80129b6:	4710      	bx	r2

080129b8 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 80129b8:	4298      	cmp	r0, r3
 80129ba:	d200      	bcs.n	80129be <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 80129bc:	b913      	cbnz	r3, 80129c4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 80129be:	440a      	add	r2, r1
 80129c0:	b210      	sxth	r0, r2
 80129c2:	4770      	bx	lr
 80129c4:	ee07 0a90 	vmov	s15, r0
 80129c8:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80129cc:	ee07 3a90 	vmov	s15, r3
 80129d0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80129d4:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80129d8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80129dc:	ee37 7a66 	vsub.f32	s14, s14, s13
 80129e0:	ee07 2a90 	vmov	s15, r2
 80129e4:	ee67 5a07 	vmul.f32	s11, s14, s14
 80129e8:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 80129ec:	eee5 6a87 	vfma.f32	s13, s11, s14
 80129f0:	ee07 1a90 	vmov	s15, r1
 80129f4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80129f8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80129fc:	eee6 7a26 	vfma.f32	s15, s12, s13
 8012a00:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012a04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012a08:	bfcc      	ite	gt
 8012a0a:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8012a0e:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8012a12:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012a16:	ee17 3a90 	vmov	r3, s15
 8012a1a:	b218      	sxth	r0, r3
 8012a1c:	4770      	bx	lr

08012a1e <_ZN8touchgfx12TextProviderC1Ev>:
 8012a1e:	b538      	push	{r3, r4, r5, lr}
 8012a20:	2500      	movs	r5, #0
 8012a22:	2302      	movs	r3, #2
 8012a24:	4604      	mov	r4, r0
 8012a26:	e9c0 5500 	strd	r5, r5, [r0]
 8012a2a:	7403      	strb	r3, [r0, #16]
 8012a2c:	6145      	str	r5, [r0, #20]
 8012a2e:	7605      	strb	r5, [r0, #24]
 8012a30:	83c5      	strh	r5, [r0, #30]
 8012a32:	8405      	strh	r5, [r0, #32]
 8012a34:	86c5      	strh	r5, [r0, #54]	; 0x36
 8012a36:	8705      	strh	r5, [r0, #56]	; 0x38
 8012a38:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8012a3a:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8012a3e:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8012a42:	220e      	movs	r2, #14
 8012a44:	4629      	mov	r1, r5
 8012a46:	304c      	adds	r0, #76	; 0x4c
 8012a48:	f00e f858 	bl	8020afc <memset>
 8012a4c:	2301      	movs	r3, #1
 8012a4e:	4620      	mov	r0, r4
 8012a50:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8012a54:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8012a58:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8012a5c:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8012a60:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8012a64:	f7f2 f950 	bl	8004d08 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8012a68:	4620      	mov	r0, r4
 8012a6a:	bd38      	pop	{r3, r4, r5, pc}

08012a6c <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8012a6c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8012a6e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012a72:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8012a74:	fab0 f080 	clz	r0, r0
 8012a78:	0940      	lsrs	r0, r0, #5
 8012a7a:	4770      	bx	lr

08012a7c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8012a7c:	b530      	push	{r4, r5, lr}
 8012a7e:	2500      	movs	r5, #0
 8012a80:	2401      	movs	r4, #1
 8012a82:	6843      	ldr	r3, [r0, #4]
 8012a84:	b913      	cbnz	r3, 8012a8c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8012a86:	6803      	ldr	r3, [r0, #0]
 8012a88:	b313      	cbz	r3, 8012ad0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8012a8a:	6043      	str	r3, [r0, #4]
 8012a8c:	7e03      	ldrb	r3, [r0, #24]
 8012a8e:	b143      	cbz	r3, 8012aa2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8012a90:	6943      	ldr	r3, [r0, #20]
 8012a92:	b12b      	cbz	r3, 8012aa0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8012a94:	881a      	ldrh	r2, [r3, #0]
 8012a96:	b11a      	cbz	r2, 8012aa0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8012a98:	1c9a      	adds	r2, r3, #2
 8012a9a:	6142      	str	r2, [r0, #20]
 8012a9c:	8818      	ldrh	r0, [r3, #0]
 8012a9e:	bd30      	pop	{r4, r5, pc}
 8012aa0:	7605      	strb	r5, [r0, #24]
 8012aa2:	6843      	ldr	r3, [r0, #4]
 8012aa4:	8819      	ldrh	r1, [r3, #0]
 8012aa6:	b199      	cbz	r1, 8012ad0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8012aa8:	1c9a      	adds	r2, r3, #2
 8012aaa:	2902      	cmp	r1, #2
 8012aac:	6042      	str	r2, [r0, #4]
 8012aae:	d1f5      	bne.n	8012a9c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8012ab0:	7c03      	ldrb	r3, [r0, #16]
 8012ab2:	2b01      	cmp	r3, #1
 8012ab4:	d8e5      	bhi.n	8012a82 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012ab6:	1c5a      	adds	r2, r3, #1
 8012ab8:	3302      	adds	r3, #2
 8012aba:	7402      	strb	r2, [r0, #16]
 8012abc:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8012ac0:	6143      	str	r3, [r0, #20]
 8012ac2:	2b00      	cmp	r3, #0
 8012ac4:	d0dd      	beq.n	8012a82 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012ac6:	881b      	ldrh	r3, [r3, #0]
 8012ac8:	2b00      	cmp	r3, #0
 8012aca:	d0da      	beq.n	8012a82 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012acc:	7604      	strb	r4, [r0, #24]
 8012ace:	e7d8      	b.n	8012a82 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012ad0:	2000      	movs	r0, #0
 8012ad2:	e7e4      	b.n	8012a9e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08012ad4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8012ad4:	b430      	push	{r4, r5}
 8012ad6:	6001      	str	r1, [r0, #0]
 8012ad8:	2100      	movs	r1, #0
 8012ada:	6041      	str	r1, [r0, #4]
 8012adc:	6815      	ldr	r5, [r2, #0]
 8012ade:	6085      	str	r5, [r0, #8]
 8012ae0:	6852      	ldr	r2, [r2, #4]
 8012ae2:	6443      	str	r3, [r0, #68]	; 0x44
 8012ae4:	9b02      	ldr	r3, [sp, #8]
 8012ae6:	60c2      	str	r2, [r0, #12]
 8012ae8:	7401      	strb	r1, [r0, #16]
 8012aea:	6141      	str	r1, [r0, #20]
 8012aec:	7601      	strb	r1, [r0, #24]
 8012aee:	8701      	strh	r1, [r0, #56]	; 0x38
 8012af0:	8401      	strh	r1, [r0, #32]
 8012af2:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8012af6:	6483      	str	r3, [r0, #72]	; 0x48
 8012af8:	bc30      	pop	{r4, r5}
 8012afa:	f7f2 b905 	b.w	8004d08 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08012afe <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8012afe:	b408      	push	{r3}
 8012b00:	b510      	push	{r4, lr}
 8012b02:	b085      	sub	sp, #20
 8012b04:	ac07      	add	r4, sp, #28
 8012b06:	f854 3b04 	ldr.w	r3, [r4], #4
 8012b0a:	9300      	str	r3, [sp, #0]
 8012b0c:	4613      	mov	r3, r2
 8012b0e:	4622      	mov	r2, r4
 8012b10:	9403      	str	r4, [sp, #12]
 8012b12:	f7ff ffdf 	bl	8012ad4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012b16:	b005      	add	sp, #20
 8012b18:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012b1c:	b001      	add	sp, #4
 8012b1e:	4770      	bx	lr

08012b20 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8012b20:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012b22:	4605      	mov	r5, r0
 8012b24:	4608      	mov	r0, r1
 8012b26:	b1e9      	cbz	r1, 8012b64 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8012b28:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8012b2c:	460b      	mov	r3, r1
 8012b2e:	f101 0708 	add.w	r7, r1, #8
 8012b32:	4622      	mov	r2, r4
 8012b34:	6818      	ldr	r0, [r3, #0]
 8012b36:	6859      	ldr	r1, [r3, #4]
 8012b38:	4626      	mov	r6, r4
 8012b3a:	c603      	stmia	r6!, {r0, r1}
 8012b3c:	3308      	adds	r3, #8
 8012b3e:	42bb      	cmp	r3, r7
 8012b40:	4634      	mov	r4, r6
 8012b42:	d1f7      	bne.n	8012b34 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8012b44:	6818      	ldr	r0, [r3, #0]
 8012b46:	6030      	str	r0, [r6, #0]
 8012b48:	889b      	ldrh	r3, [r3, #4]
 8012b4a:	80b3      	strh	r3, [r6, #4]
 8012b4c:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8012b50:	015b      	lsls	r3, r3, #5
 8012b52:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8012b56:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8012b5a:	430b      	orrs	r3, r1
 8012b5c:	425b      	negs	r3, r3
 8012b5e:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8012b62:	4610      	mov	r0, r2
 8012b64:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012b66 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8012b66:	b538      	push	{r3, r4, r5, lr}
 8012b68:	460c      	mov	r4, r1
 8012b6a:	6811      	ldr	r1, [r2, #0]
 8012b6c:	4610      	mov	r0, r2
 8012b6e:	68cd      	ldr	r5, [r1, #12]
 8012b70:	4619      	mov	r1, r3
 8012b72:	47a8      	blx	r5
 8012b74:	2800      	cmp	r0, #0
 8012b76:	bf08      	it	eq
 8012b78:	4620      	moveq	r0, r4
 8012b7a:	bd38      	pop	{r3, r4, r5, pc}

08012b7c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8012b7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012b7e:	4604      	mov	r4, r0
 8012b80:	4615      	mov	r5, r2
 8012b82:	4608      	mov	r0, r1
 8012b84:	b93a      	cbnz	r2, 8012b96 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8012b86:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8012b8a:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8012b8e:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8012b92:	4628      	mov	r0, r5
 8012b94:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012b96:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8012b9a:	8893      	ldrh	r3, [r2, #4]
 8012b9c:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8012ba0:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8012ba4:	79ee      	ldrb	r6, [r5, #7]
 8012ba6:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8012baa:	4316      	orrs	r6, r2
 8012bac:	19da      	adds	r2, r3, r7
 8012bae:	b291      	uxth	r1, r2
 8012bb0:	291d      	cmp	r1, #29
 8012bb2:	b2b7      	uxth	r7, r6
 8012bb4:	d87a      	bhi.n	8012cac <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8012bb6:	2201      	movs	r2, #1
 8012bb8:	408a      	lsls	r2, r1
 8012bba:	4975      	ldr	r1, [pc, #468]	; (8012d90 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8012bbc:	420a      	tst	r2, r1
 8012bbe:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8012bc2:	d12d      	bne.n	8012c20 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8012bc4:	f412 7f60 	tst.w	r2, #896	; 0x380
 8012bc8:	d070      	beq.n	8012cac <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8012bca:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8012bce:	462b      	mov	r3, r5
 8012bd0:	f105 0e08 	add.w	lr, r5, #8
 8012bd4:	4615      	mov	r5, r2
 8012bd6:	6818      	ldr	r0, [r3, #0]
 8012bd8:	6859      	ldr	r1, [r3, #4]
 8012bda:	4694      	mov	ip, r2
 8012bdc:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8012be0:	3308      	adds	r3, #8
 8012be2:	4573      	cmp	r3, lr
 8012be4:	4662      	mov	r2, ip
 8012be6:	d1f6      	bne.n	8012bd6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8012be8:	6818      	ldr	r0, [r3, #0]
 8012bea:	f8cc 0000 	str.w	r0, [ip]
 8012bee:	889b      	ldrh	r3, [r3, #4]
 8012bf0:	f8ac 3004 	strh.w	r3, [ip, #4]
 8012bf4:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8012bf8:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8012bfc:	b2b3      	uxth	r3, r6
 8012bfe:	1aca      	subs	r2, r1, r3
 8012c00:	b292      	uxth	r2, r2
 8012c02:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8012c06:	10d2      	asrs	r2, r2, #3
 8012c08:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8012c0c:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8012c10:	4302      	orrs	r2, r0
 8012c12:	1bcf      	subs	r7, r1, r7
 8012c14:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8012c18:	1afb      	subs	r3, r7, r3
 8012c1a:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8012c1e:	e7b8      	b.n	8012b92 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8012c20:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8012c22:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012c26:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8012c28:	f640 6333 	movw	r3, #3635	; 0xe33
 8012c2c:	4299      	cmp	r1, r3
 8012c2e:	d110      	bne.n	8012c52 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8012c30:	6803      	ldr	r3, [r0, #0]
 8012c32:	68db      	ldr	r3, [r3, #12]
 8012c34:	4798      	blx	r3
 8012c36:	7b41      	ldrb	r1, [r0, #13]
 8012c38:	00cb      	lsls	r3, r1, #3
 8012c3a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012c3e:	7a03      	ldrb	r3, [r0, #8]
 8012c40:	0648      	lsls	r0, r1, #25
 8012c42:	ea43 0302 	orr.w	r3, r3, r2
 8012c46:	bf44      	itt	mi
 8012c48:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012c4c:	b21b      	sxthmi	r3, r3
 8012c4e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012c52:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8012c56:	443b      	add	r3, r7
 8012c58:	4433      	add	r3, r6
 8012c5a:	b29b      	uxth	r3, r3
 8012c5c:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8012c60:	462a      	mov	r2, r5
 8012c62:	f105 0c08 	add.w	ip, r5, #8
 8012c66:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012c6a:	4635      	mov	r5, r6
 8012c6c:	6810      	ldr	r0, [r2, #0]
 8012c6e:	6851      	ldr	r1, [r2, #4]
 8012c70:	4637      	mov	r7, r6
 8012c72:	c703      	stmia	r7!, {r0, r1}
 8012c74:	3208      	adds	r2, #8
 8012c76:	4562      	cmp	r2, ip
 8012c78:	463e      	mov	r6, r7
 8012c7a:	d1f7      	bne.n	8012c6c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8012c7c:	6810      	ldr	r0, [r2, #0]
 8012c7e:	6038      	str	r0, [r7, #0]
 8012c80:	8892      	ldrh	r2, [r2, #4]
 8012c82:	80ba      	strh	r2, [r7, #4]
 8012c84:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8012c88:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8012c8c:	10db      	asrs	r3, r3, #3
 8012c8e:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8012c92:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8012c96:	4313      	orrs	r3, r2
 8012c98:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8012c9c:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8012ca0:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8012ca4:	1a9b      	subs	r3, r3, r2
 8012ca6:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8012caa:	e772      	b.n	8012b92 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8012cac:	f023 0204 	bic.w	r2, r3, #4
 8012cb0:	f640 611b 	movw	r1, #3611	; 0xe1b
 8012cb4:	428a      	cmp	r2, r1
 8012cb6:	d003      	beq.n	8012cc0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8012cb8:	f640 621d 	movw	r2, #3613	; 0xe1d
 8012cbc:	4293      	cmp	r3, r2
 8012cbe:	d120      	bne.n	8012d02 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8012cc0:	3b01      	subs	r3, #1
 8012cc2:	4602      	mov	r2, r0
 8012cc4:	b29b      	uxth	r3, r3
 8012cc6:	4629      	mov	r1, r5
 8012cc8:	4620      	mov	r0, r4
 8012cca:	f7ff ff4c 	bl	8012b66 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8012cce:	7b41      	ldrb	r1, [r0, #13]
 8012cd0:	00cb      	lsls	r3, r1, #3
 8012cd2:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012cd6:	7a03      	ldrb	r3, [r0, #8]
 8012cd8:	0649      	lsls	r1, r1, #25
 8012cda:	ea43 0302 	orr.w	r3, r3, r2
 8012cde:	bf44      	itt	mi
 8012ce0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012ce4:	b21b      	sxthmi	r3, r3
 8012ce6:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012cea:	7b6b      	ldrb	r3, [r5, #13]
 8012cec:	7aaa      	ldrb	r2, [r5, #10]
 8012cee:	005b      	lsls	r3, r3, #1
 8012cf0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012cf4:	4313      	orrs	r3, r2
 8012cf6:	115a      	asrs	r2, r3, #5
 8012cf8:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8012cfc:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8012d00:	e036      	b.n	8012d70 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8012d02:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8012d06:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8012d0a:	7a2a      	ldrb	r2, [r5, #8]
 8012d0c:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8012d10:	ea42 0201 	orr.w	r2, r2, r1
 8012d14:	bf1c      	itt	ne
 8012d16:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8012d1a:	b212      	sxthne	r2, r2
 8012d1c:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8012d20:	f640 6109 	movw	r1, #3593	; 0xe09
 8012d24:	f023 0210 	bic.w	r2, r3, #16
 8012d28:	428a      	cmp	r2, r1
 8012d2a:	d003      	beq.n	8012d34 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8012d2c:	f640 6213 	movw	r2, #3603	; 0xe13
 8012d30:	4293      	cmp	r3, r2
 8012d32:	d12a      	bne.n	8012d8a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8012d34:	7b6e      	ldrb	r6, [r5, #13]
 8012d36:	0076      	lsls	r6, r6, #1
 8012d38:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8012d3c:	7aae      	ldrb	r6, [r5, #10]
 8012d3e:	4316      	orrs	r6, r2
 8012d40:	f640 6213 	movw	r2, #3603	; 0xe13
 8012d44:	4293      	cmp	r3, r2
 8012d46:	bf18      	it	ne
 8012d48:	f103 33ff 	addne.w	r3, r3, #4294967295
 8012d4c:	4602      	mov	r2, r0
 8012d4e:	bf14      	ite	ne
 8012d50:	b29b      	uxthne	r3, r3
 8012d52:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8012d56:	4629      	mov	r1, r5
 8012d58:	4620      	mov	r0, r4
 8012d5a:	f7ff ff04 	bl	8012b66 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8012d5e:	7b43      	ldrb	r3, [r0, #13]
 8012d60:	7a82      	ldrb	r2, [r0, #10]
 8012d62:	005b      	lsls	r3, r3, #1
 8012d64:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012d68:	4313      	orrs	r3, r2
 8012d6a:	1af6      	subs	r6, r6, r3
 8012d6c:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8012d70:	7b69      	ldrb	r1, [r5, #13]
 8012d72:	00cb      	lsls	r3, r1, #3
 8012d74:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012d78:	7a2b      	ldrb	r3, [r5, #8]
 8012d7a:	4313      	orrs	r3, r2
 8012d7c:	064a      	lsls	r2, r1, #25
 8012d7e:	bf44      	itt	mi
 8012d80:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012d84:	b21b      	sxthmi	r3, r3
 8012d86:	1bdb      	subs	r3, r3, r7
 8012d88:	e747      	b.n	8012c1a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8012d8a:	2300      	movs	r3, #0
 8012d8c:	e7b6      	b.n	8012cfc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8012d8e:	bf00      	nop
 8012d90:	3fc00079 	.word	0x3fc00079

08012d94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8012d94:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012d98:	4604      	mov	r4, r0
 8012d9a:	b942      	cbnz	r2, 8012dae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8012d9c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8012da0:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8012da4:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8012da8:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8012dac:	e047      	b.n	8012e3e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8012dae:	7b51      	ldrb	r1, [r2, #13]
 8012db0:	8893      	ldrh	r3, [r2, #4]
 8012db2:	010d      	lsls	r5, r1, #4
 8012db4:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8012db8:	79d5      	ldrb	r5, [r2, #7]
 8012dba:	4305      	orrs	r5, r0
 8012dbc:	2d04      	cmp	r5, #4
 8012dbe:	bfcc      	ite	gt
 8012dc0:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8012dc4:	f04f 0e01 	movle.w	lr, #1
 8012dc8:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8012dcc:	f200 80ab 	bhi.w	8012f26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8012dd0:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8012dd4:	4283      	cmp	r3, r0
 8012dd6:	d216      	bcs.n	8012e06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012dd8:	f240 605b 	movw	r0, #1627	; 0x65b
 8012ddc:	4283      	cmp	r3, r0
 8012dde:	d859      	bhi.n	8012e94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8012de0:	f240 6057 	movw	r0, #1623	; 0x657
 8012de4:	4283      	cmp	r3, r0
 8012de6:	d20e      	bcs.n	8012e06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012de8:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8012dec:	d24a      	bcs.n	8012e84 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8012dee:	f240 604e 	movw	r0, #1614	; 0x64e
 8012df2:	4283      	cmp	r3, r0
 8012df4:	d207      	bcs.n	8012e06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012df6:	f240 601a 	movw	r0, #1562	; 0x61a
 8012dfa:	4283      	cmp	r3, r0
 8012dfc:	d02a      	beq.n	8012e54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012dfe:	d821      	bhi.n	8012e44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8012e00:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8012e04:	d35b      	bcc.n	8012ebe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012e06:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8012e0a:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8012e0e:	f040 80d0 	bne.w	8012fb2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8012e12:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8012e16:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8012e1a:	f040 80ca 	bne.w	8012fb2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8012e1e:	00cb      	lsls	r3, r1, #3
 8012e20:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8012e24:	7a13      	ldrb	r3, [r2, #8]
 8012e26:	0649      	lsls	r1, r1, #25
 8012e28:	ea43 0300 	orr.w	r3, r3, r0
 8012e2c:	bf44      	itt	mi
 8012e2e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012e32:	b21b      	sxthmi	r3, r3
 8012e34:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012e38:	1b5d      	subs	r5, r3, r5
 8012e3a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8012e3e:	4610      	mov	r0, r2
 8012e40:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012e44:	f240 604b 	movw	r0, #1611	; 0x64b
 8012e48:	4283      	cmp	r3, r0
 8012e4a:	d338      	bcc.n	8012ebe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012e4c:	f240 604c 	movw	r0, #1612	; 0x64c
 8012e50:	4283      	cmp	r3, r0
 8012e52:	d9d8      	bls.n	8012e06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012e54:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8012e58:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8012e5c:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8012e60:	f040 80f2 	bne.w	8013048 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8012e64:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8012e68:	f040 80ee 	bne.w	8013048 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8012e6c:	00cb      	lsls	r3, r1, #3
 8012e6e:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8012e72:	7a13      	ldrb	r3, [r2, #8]
 8012e74:	064e      	lsls	r6, r1, #25
 8012e76:	ea43 0300 	orr.w	r3, r3, r0
 8012e7a:	bf44      	itt	mi
 8012e7c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012e80:	b21b      	sxthmi	r3, r3
 8012e82:	e7d9      	b.n	8012e38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8012e84:	f240 6054 	movw	r0, #1620	; 0x654
 8012e88:	4283      	cmp	r3, r0
 8012e8a:	d8e3      	bhi.n	8012e54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012e8c:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8012e90:	d9e0      	bls.n	8012e54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012e92:	e7b8      	b.n	8012e06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012e94:	f240 6074 	movw	r0, #1652	; 0x674
 8012e98:	4283      	cmp	r3, r0
 8012e9a:	d0b4      	beq.n	8012e06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012e9c:	d82d      	bhi.n	8012efa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8012e9e:	f240 605e 	movw	r0, #1630	; 0x65e
 8012ea2:	4283      	cmp	r3, r0
 8012ea4:	d804      	bhi.n	8012eb0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8012ea6:	f240 605d 	movw	r0, #1629	; 0x65d
 8012eaa:	4283      	cmp	r3, r0
 8012eac:	d3d2      	bcc.n	8012e54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012eae:	e7aa      	b.n	8012e06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012eb0:	f240 605f 	movw	r0, #1631	; 0x65f
 8012eb4:	4283      	cmp	r3, r0
 8012eb6:	d0cd      	beq.n	8012e54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012eb8:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8012ebc:	d0a3      	beq.n	8012e06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012ebe:	00cb      	lsls	r3, r1, #3
 8012ec0:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8012ec4:	7a13      	ldrb	r3, [r2, #8]
 8012ec6:	0649      	lsls	r1, r1, #25
 8012ec8:	ea43 0300 	orr.w	r3, r3, r0
 8012ecc:	bf44      	itt	mi
 8012ece:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012ed2:	b21b      	sxthmi	r3, r3
 8012ed4:	1b5d      	subs	r5, r3, r5
 8012ed6:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012eda:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8012ede:	7b53      	ldrb	r3, [r2, #13]
 8012ee0:	015b      	lsls	r3, r3, #5
 8012ee2:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8012ee6:	7993      	ldrb	r3, [r2, #6]
 8012ee8:	430b      	orrs	r3, r1
 8012eea:	005b      	lsls	r3, r3, #1
 8012eec:	2105      	movs	r1, #5
 8012eee:	fb93 f3f1 	sdiv	r3, r3, r1
 8012ef2:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8012ef6:	440b      	add	r3, r1
 8012ef8:	e756      	b.n	8012da8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8012efa:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8012efe:	4283      	cmp	r3, r0
 8012f00:	d809      	bhi.n	8012f16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8012f02:	f240 60df 	movw	r0, #1759	; 0x6df
 8012f06:	4283      	cmp	r3, r0
 8012f08:	f4bf af7d 	bcs.w	8012e06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012f0c:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8012f10:	2b05      	cmp	r3, #5
 8012f12:	d8d4      	bhi.n	8012ebe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012f14:	e777      	b.n	8012e06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012f16:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8012f1a:	4283      	cmp	r3, r0
 8012f1c:	d09a      	beq.n	8012e54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012f1e:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8012f22:	4283      	cmp	r3, r0
 8012f24:	e7ca      	b.n	8012ebc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8012f26:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8012f2a:	d22b      	bcs.n	8012f84 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8012f2c:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8012f30:	4283      	cmp	r3, r0
 8012f32:	d28f      	bcs.n	8012e54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012f34:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8012f38:	4283      	cmp	r3, r0
 8012f3a:	d816      	bhi.n	8012f6a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8012f3c:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8012f40:	4283      	cmp	r3, r0
 8012f42:	f4bf af60 	bcs.w	8012e06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012f46:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8012f4a:	4283      	cmp	r3, r0
 8012f4c:	d80a      	bhi.n	8012f64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8012f4e:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8012f52:	4283      	cmp	r3, r0
 8012f54:	f4bf af57 	bcs.w	8012e06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012f58:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8012f5c:	4283      	cmp	r3, r0
 8012f5e:	f43f af79 	beq.w	8012e54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012f62:	e7ac      	b.n	8012ebe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012f64:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8012f68:	e7f8      	b.n	8012f5c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8012f6a:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8012f6e:	4283      	cmp	r3, r0
 8012f70:	d802      	bhi.n	8012f78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8012f72:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8012f76:	e798      	b.n	8012eaa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8012f78:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8012f7c:	4283      	cmp	r3, r0
 8012f7e:	f47f af42 	bne.w	8012e06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012f82:	e767      	b.n	8012e54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012f84:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8012f88:	4283      	cmp	r3, r0
 8012f8a:	f43f af63 	beq.w	8012e54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012f8e:	d802      	bhi.n	8012f96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8012f90:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8012f94:	e7f2      	b.n	8012f7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8012f96:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8012f9a:	4283      	cmp	r3, r0
 8012f9c:	d805      	bhi.n	8012faa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8012f9e:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8012fa2:	4283      	cmp	r3, r0
 8012fa4:	f4ff af2f 	bcc.w	8012e06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012fa8:	e754      	b.n	8012e54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012faa:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8012fae:	4283      	cmp	r3, r0
 8012fb0:	e7af      	b.n	8012f12 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8012fb2:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8012fb6:	4617      	mov	r7, r2
 8012fb8:	f102 0808 	add.w	r8, r2, #8
 8012fbc:	4666      	mov	r6, ip
 8012fbe:	6838      	ldr	r0, [r7, #0]
 8012fc0:	6879      	ldr	r1, [r7, #4]
 8012fc2:	46e6      	mov	lr, ip
 8012fc4:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8012fc8:	3708      	adds	r7, #8
 8012fca:	4547      	cmp	r7, r8
 8012fcc:	46f4      	mov	ip, lr
 8012fce:	d1f6      	bne.n	8012fbe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8012fd0:	6838      	ldr	r0, [r7, #0]
 8012fd2:	f8ce 0000 	str.w	r0, [lr]
 8012fd6:	88b9      	ldrh	r1, [r7, #4]
 8012fd8:	f8ae 1004 	strh.w	r1, [lr, #4]
 8012fdc:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8012fe0:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8012fe4:	d009      	beq.n	8012ffa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8012fe6:	7b51      	ldrb	r1, [r2, #13]
 8012fe8:	7992      	ldrb	r2, [r2, #6]
 8012fea:	0149      	lsls	r1, r1, #5
 8012fec:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8012ff0:	4311      	orrs	r1, r2
 8012ff2:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8012ff6:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8012ffa:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8012ffe:	b2ad      	uxth	r5, r5
 8013000:	d00d      	beq.n	801301e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8013002:	442b      	add	r3, r5
 8013004:	b29b      	uxth	r3, r3
 8013006:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801300a:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801300e:	10db      	asrs	r3, r3, #3
 8013010:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8013014:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8013018:	4313      	orrs	r3, r2
 801301a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801301e:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8013022:	00cb      	lsls	r3, r1, #3
 8013024:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013028:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801302c:	064f      	lsls	r7, r1, #25
 801302e:	ea43 0302 	orr.w	r3, r3, r2
 8013032:	bf44      	itt	mi
 8013034:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013038:	b21b      	sxthmi	r3, r3
 801303a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801303e:	1b5b      	subs	r3, r3, r5
 8013040:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8013044:	4632      	mov	r2, r6
 8013046:	e6fa      	b.n	8012e3e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8013048:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801304c:	4617      	mov	r7, r2
 801304e:	f102 0908 	add.w	r9, r2, #8
 8013052:	4666      	mov	r6, ip
 8013054:	6838      	ldr	r0, [r7, #0]
 8013056:	6879      	ldr	r1, [r7, #4]
 8013058:	46e0      	mov	r8, ip
 801305a:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 801305e:	3708      	adds	r7, #8
 8013060:	454f      	cmp	r7, r9
 8013062:	46c4      	mov	ip, r8
 8013064:	d1f6      	bne.n	8013054 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8013066:	6838      	ldr	r0, [r7, #0]
 8013068:	f8c8 0000 	str.w	r0, [r8]
 801306c:	88b9      	ldrh	r1, [r7, #4]
 801306e:	f8a8 1004 	strh.w	r1, [r8, #4]
 8013072:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8013076:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801307a:	d009      	beq.n	8013090 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 801307c:	7b51      	ldrb	r1, [r2, #13]
 801307e:	7992      	ldrb	r2, [r2, #6]
 8013080:	0149      	lsls	r1, r1, #5
 8013082:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8013086:	4311      	orrs	r1, r2
 8013088:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801308c:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8013090:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8013094:	d00e      	beq.n	80130b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 8013096:	eba3 030e 	sub.w	r3, r3, lr
 801309a:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801309e:	b29b      	uxth	r3, r3
 80130a0:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80130a4:	10db      	asrs	r3, r3, #3
 80130a6:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80130aa:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80130ae:	4313      	orrs	r3, r2
 80130b0:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80130b4:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 80130b8:	00cb      	lsls	r3, r1, #3
 80130ba:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80130be:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 80130c2:	0648      	lsls	r0, r1, #25
 80130c4:	ea43 0302 	orr.w	r3, r3, r2
 80130c8:	bf44      	itt	mi
 80130ca:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80130ce:	b21b      	sxthmi	r3, r3
 80130d0:	1b5d      	subs	r5, r3, r5
 80130d2:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80130d6:	e7b5      	b.n	8013044 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

080130d8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 80130d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80130dc:	461e      	mov	r6, r3
 80130de:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80130e0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80130e4:	4604      	mov	r4, r0
 80130e6:	4617      	mov	r7, r2
 80130e8:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80130ec:	f7f1 fdca 	bl	8004c84 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80130f0:	4605      	mov	r5, r0
 80130f2:	b918      	cbnz	r0, 80130fc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 80130f4:	6030      	str	r0, [r6, #0]
 80130f6:	4628      	mov	r0, r5
 80130f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80130fc:	683b      	ldr	r3, [r7, #0]
 80130fe:	4601      	mov	r1, r0
 8013100:	68db      	ldr	r3, [r3, #12]
 8013102:	4638      	mov	r0, r7
 8013104:	4798      	blx	r3
 8013106:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801310a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801310e:	4602      	mov	r2, r0
 8013110:	6030      	str	r0, [r6, #0]
 8013112:	d213      	bcs.n	801313c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8013114:	4643      	mov	r3, r8
 8013116:	4639      	mov	r1, r7
 8013118:	4620      	mov	r0, r4
 801311a:	f7ff fe3b 	bl	8012d94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801311e:	6030      	str	r0, [r6, #0]
 8013120:	6833      	ldr	r3, [r6, #0]
 8013122:	b143      	cbz	r3, 8013136 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8013124:	7b5a      	ldrb	r2, [r3, #13]
 8013126:	7a9b      	ldrb	r3, [r3, #10]
 8013128:	0052      	lsls	r2, r2, #1
 801312a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801312e:	4313      	orrs	r3, r2
 8013130:	bf0c      	ite	eq
 8013132:	2301      	moveq	r3, #1
 8013134:	2300      	movne	r3, #0
 8013136:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801313a:	e7dc      	b.n	80130f6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 801313c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8013140:	b29b      	uxth	r3, r3
 8013142:	2b7f      	cmp	r3, #127	; 0x7f
 8013144:	d804      	bhi.n	8013150 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8013146:	4639      	mov	r1, r7
 8013148:	4620      	mov	r0, r4
 801314a:	f7ff fd17 	bl	8012b7c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801314e:	e7e6      	b.n	801311e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8013150:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8013154:	2b00      	cmp	r3, #0
 8013156:	d0e3      	beq.n	8013120 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8013158:	f640 1302 	movw	r3, #2306	; 0x902
 801315c:	429d      	cmp	r5, r3
 801315e:	d1df      	bne.n	8013120 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8013160:	4601      	mov	r1, r0
 8013162:	4620      	mov	r0, r4
 8013164:	f7ff fcdc 	bl	8012b20 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8013168:	e7d9      	b.n	801311e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0801316a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 801316a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801316e:	461e      	mov	r6, r3
 8013170:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8013172:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8013176:	4604      	mov	r4, r0
 8013178:	4617      	mov	r7, r2
 801317a:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801317e:	f7f1 fd81 	bl	8004c84 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8013182:	4605      	mov	r5, r0
 8013184:	b918      	cbnz	r0, 801318e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 8013186:	6030      	str	r0, [r6, #0]
 8013188:	4628      	mov	r0, r5
 801318a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801318e:	683b      	ldr	r3, [r7, #0]
 8013190:	4601      	mov	r1, r0
 8013192:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8013196:	4638      	mov	r0, r7
 8013198:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 801319c:	47c8      	blx	r9
 801319e:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80131a2:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80131a6:	4602      	mov	r2, r0
 80131a8:	6030      	str	r0, [r6, #0]
 80131aa:	d213      	bcs.n	80131d4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 80131ac:	4643      	mov	r3, r8
 80131ae:	4639      	mov	r1, r7
 80131b0:	4620      	mov	r0, r4
 80131b2:	f7ff fdef 	bl	8012d94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80131b6:	6030      	str	r0, [r6, #0]
 80131b8:	6833      	ldr	r3, [r6, #0]
 80131ba:	b143      	cbz	r3, 80131ce <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 80131bc:	7b5a      	ldrb	r2, [r3, #13]
 80131be:	7a9b      	ldrb	r3, [r3, #10]
 80131c0:	0052      	lsls	r2, r2, #1
 80131c2:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80131c6:	4313      	orrs	r3, r2
 80131c8:	bf0c      	ite	eq
 80131ca:	2301      	moveq	r3, #1
 80131cc:	2300      	movne	r3, #0
 80131ce:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 80131d2:	e7d9      	b.n	8013188 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 80131d4:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80131d8:	b29b      	uxth	r3, r3
 80131da:	2b7f      	cmp	r3, #127	; 0x7f
 80131dc:	d804      	bhi.n	80131e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 80131de:	4639      	mov	r1, r7
 80131e0:	4620      	mov	r0, r4
 80131e2:	f7ff fccb 	bl	8012b7c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80131e6:	e7e6      	b.n	80131b6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 80131e8:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80131ec:	2b00      	cmp	r3, #0
 80131ee:	d0e3      	beq.n	80131b8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80131f0:	f640 1302 	movw	r3, #2306	; 0x902
 80131f4:	429d      	cmp	r5, r3
 80131f6:	d1df      	bne.n	80131b8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80131f8:	4601      	mov	r1, r0
 80131fa:	4620      	mov	r0, r4
 80131fc:	f7ff fc90 	bl	8012b20 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8013200:	e7d9      	b.n	80131b6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08013202 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8013202:	b510      	push	{r4, lr}
 8013204:	4604      	mov	r4, r0
 8013206:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 801320a:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801320c:	b1f1      	cbz	r1, 801324c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801320e:	2b0a      	cmp	r3, #10
 8013210:	d02f      	beq.n	8013272 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8013212:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8013214:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8013218:	3901      	subs	r1, #1
 801321a:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 801321c:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8013220:	1c51      	adds	r1, r2, #1
 8013222:	b289      	uxth	r1, r1
 8013224:	2901      	cmp	r1, #1
 8013226:	bf84      	itt	hi
 8013228:	f102 32ff 	addhi.w	r2, r2, #4294967295
 801322c:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 801322e:	f103 0201 	add.w	r2, r3, #1
 8013232:	8722      	strh	r2, [r4, #56]	; 0x38
 8013234:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8013236:	bf98      	it	ls
 8013238:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 801323a:	4413      	add	r3, r2
 801323c:	b29b      	uxth	r3, r3
 801323e:	2b09      	cmp	r3, #9
 8013240:	bf88      	it	hi
 8013242:	3b0a      	subhi	r3, #10
 8013244:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8013248:	8458      	strh	r0, [r3, #34]	; 0x22
 801324a:	e7dc      	b.n	8013206 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 801324c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801324e:	2b0a      	cmp	r3, #10
 8013250:	d00f      	beq.n	8013272 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8013252:	4620      	mov	r0, r4
 8013254:	f7ff fc12 	bl	8012a7c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8013258:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801325a:	1c5a      	adds	r2, r3, #1
 801325c:	8722      	strh	r2, [r4, #56]	; 0x38
 801325e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8013260:	4413      	add	r3, r2
 8013262:	b29b      	uxth	r3, r3
 8013264:	2b09      	cmp	r3, #9
 8013266:	bf88      	it	hi
 8013268:	3b0a      	subhi	r3, #10
 801326a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801326e:	8458      	strh	r0, [r3, #34]	; 0x22
 8013270:	e7ec      	b.n	801324c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8013272:	bd10      	pop	{r4, pc}

08013274 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8013274:	b538      	push	{r3, r4, r5, lr}
 8013276:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8013278:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 801327c:	4604      	mov	r4, r0
 801327e:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8013280:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8013282:	3a01      	subs	r2, #1
 8013284:	8702      	strh	r2, [r0, #56]	; 0x38
 8013286:	1c5a      	adds	r2, r3, #1
 8013288:	b292      	uxth	r2, r2
 801328a:	2a09      	cmp	r2, #9
 801328c:	bf86      	itte	hi
 801328e:	3b09      	subhi	r3, #9
 8013290:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 8013292:	86c2      	strhls	r2, [r0, #54]	; 0x36
 8013294:	f7ff ffb5 	bl	8013202 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8013298:	8c23      	ldrh	r3, [r4, #32]
 801329a:	2b01      	cmp	r3, #1
 801329c:	bf9c      	itt	ls
 801329e:	3301      	addls	r3, #1
 80132a0:	8423      	strhls	r3, [r4, #32]
 80132a2:	8be3      	ldrh	r3, [r4, #30]
 80132a4:	b90b      	cbnz	r3, 80132aa <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 80132a6:	2302      	movs	r3, #2
 80132a8:	83e3      	strh	r3, [r4, #30]
 80132aa:	8be3      	ldrh	r3, [r4, #30]
 80132ac:	3b01      	subs	r3, #1
 80132ae:	b29b      	uxth	r3, r3
 80132b0:	83e3      	strh	r3, [r4, #30]
 80132b2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80132b6:	4628      	mov	r0, r5
 80132b8:	8365      	strh	r5, [r4, #26]
 80132ba:	bd38      	pop	{r3, r4, r5, pc}

080132bc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 80132bc:	428a      	cmp	r2, r1
 80132be:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80132c2:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 80132c4:	d931      	bls.n	801332a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 80132c6:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 80132c8:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 80132cc:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 80132d0:	19ee      	adds	r6, r5, r7
 80132d2:	1a54      	subs	r4, r2, r1
 80132d4:	3e01      	subs	r6, #1
 80132d6:	fa1f fe84 	uxth.w	lr, r4
 80132da:	b2b4      	uxth	r4, r6
 80132dc:	eba4 090e 	sub.w	r9, r4, lr
 80132e0:	fa1f f989 	uxth.w	r9, r9
 80132e4:	2c09      	cmp	r4, #9
 80132e6:	4626      	mov	r6, r4
 80132e8:	bf88      	it	hi
 80132ea:	f1a4 060a 	subhi.w	r6, r4, #10
 80132ee:	f1bc 0f00 	cmp.w	ip, #0
 80132f2:	bf08      	it	eq
 80132f4:	f04f 0c02 	moveq.w	ip, #2
 80132f8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80132fc:	f10c 3cff 	add.w	ip, ip, #4294967295
 8013300:	fa1f fc8c 	uxth.w	ip, ip
 8013304:	3c01      	subs	r4, #1
 8013306:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 801330a:	b2a4      	uxth	r4, r4
 801330c:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8013310:	454c      	cmp	r4, r9
 8013312:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 8013316:	d1e5      	bne.n	80132e4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8013318:	eba5 050e 	sub.w	r5, r5, lr
 801331c:	eb0e 0408 	add.w	r4, lr, r8
 8013320:	8705      	strh	r5, [r0, #56]	; 0x38
 8013322:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 8013326:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 801332a:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 801332c:	1a64      	subs	r4, r4, r1
 801332e:	4439      	add	r1, r7
 8013330:	b289      	uxth	r1, r1
 8013332:	2909      	cmp	r1, #9
 8013334:	bf88      	it	hi
 8013336:	390a      	subhi	r1, #10
 8013338:	8704      	strh	r4, [r0, #56]	; 0x38
 801333a:	86c1      	strh	r1, [r0, #54]	; 0x36
 801333c:	250a      	movs	r5, #10
 801333e:	b18a      	cbz	r2, 8013364 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8013340:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8013342:	3a01      	subs	r2, #1
 8013344:	b292      	uxth	r2, r2
 8013346:	3101      	adds	r1, #1
 8013348:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 801334c:	8701      	strh	r1, [r0, #56]	; 0x38
 801334e:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8013350:	b901      	cbnz	r1, 8013354 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 8013352:	86c5      	strh	r5, [r0, #54]	; 0x36
 8013354:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8013356:	3901      	subs	r1, #1
 8013358:	b289      	uxth	r1, r1
 801335a:	86c1      	strh	r1, [r0, #54]	; 0x36
 801335c:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8013360:	844c      	strh	r4, [r1, #34]	; 0x22
 8013362:	e7ec      	b.n	801333e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8013364:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013368:	f7ff bf4b 	b.w	8013202 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0801336c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 801336c:	b570      	push	{r4, r5, r6, lr}
 801336e:	2500      	movs	r5, #0
 8013370:	4295      	cmp	r5, r2
 8013372:	d011      	beq.n	8013398 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8013374:	8bc4      	ldrh	r4, [r0, #30]
 8013376:	f831 6b02 	ldrh.w	r6, [r1], #2
 801337a:	4414      	add	r4, r2
 801337c:	3c01      	subs	r4, #1
 801337e:	1b64      	subs	r4, r4, r5
 8013380:	b2a4      	uxth	r4, r4
 8013382:	2c01      	cmp	r4, #1
 8013384:	bf88      	it	hi
 8013386:	3c02      	subhi	r4, #2
 8013388:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801338c:	8b64      	ldrh	r4, [r4, #26]
 801338e:	42b4      	cmp	r4, r6
 8013390:	d117      	bne.n	80133c2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8013392:	3501      	adds	r5, #1
 8013394:	b2ad      	uxth	r5, r5
 8013396:	e7eb      	b.n	8013370 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8013398:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801339c:	2400      	movs	r4, #0
 801339e:	4413      	add	r3, r2
 80133a0:	b2a2      	uxth	r2, r4
 80133a2:	429a      	cmp	r2, r3
 80133a4:	da0f      	bge.n	80133c6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 80133a6:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 80133a8:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 80133ac:	4432      	add	r2, r6
 80133ae:	b292      	uxth	r2, r2
 80133b0:	2a09      	cmp	r2, #9
 80133b2:	bf88      	it	hi
 80133b4:	3a0a      	subhi	r2, #10
 80133b6:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80133ba:	3401      	adds	r4, #1
 80133bc:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 80133be:	42aa      	cmp	r2, r5
 80133c0:	d0ee      	beq.n	80133a0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 80133c2:	2000      	movs	r0, #0
 80133c4:	bd70      	pop	{r4, r5, r6, pc}
 80133c6:	2001      	movs	r0, #1
 80133c8:	e7fc      	b.n	80133c4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

080133ca <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 80133ca:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80133ce:	4605      	mov	r5, r0
 80133d0:	4616      	mov	r6, r2
 80133d2:	1c8c      	adds	r4, r1, #2
 80133d4:	8809      	ldrh	r1, [r1, #0]
 80133d6:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 80133da:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 80133de:	42b3      	cmp	r3, r6
 80133e0:	d124      	bne.n	801342c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 80133e2:	f3c1 2903 	ubfx	r9, r1, #8, #4
 80133e6:	f3c1 1803 	ubfx	r8, r1, #4, #4
 80133ea:	f001 070f 	and.w	r7, r1, #15
 80133ee:	f8cd 8000 	str.w	r8, [sp]
 80133f2:	464b      	mov	r3, r9
 80133f4:	4652      	mov	r2, sl
 80133f6:	4621      	mov	r1, r4
 80133f8:	4628      	mov	r0, r5
 80133fa:	f7ff ffb7 	bl	801336c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 80133fe:	4683      	mov	fp, r0
 8013400:	b168      	cbz	r0, 801341e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8013402:	eb0a 0109 	add.w	r1, sl, r9
 8013406:	4441      	add	r1, r8
 8013408:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 801340c:	463a      	mov	r2, r7
 801340e:	4649      	mov	r1, r9
 8013410:	4628      	mov	r0, r5
 8013412:	f7ff ff53 	bl	80132bc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8013416:	4658      	mov	r0, fp
 8013418:	b003      	add	sp, #12
 801341a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801341e:	eb07 010a 	add.w	r1, r7, sl
 8013422:	4449      	add	r1, r9
 8013424:	4441      	add	r1, r8
 8013426:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 801342a:	e7d2      	b.n	80133d2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 801342c:	f04f 0b00 	mov.w	fp, #0
 8013430:	e7f1      	b.n	8013416 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08013432 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8013432:	b570      	push	{r4, r5, r6, lr}
 8013434:	8810      	ldrh	r0, [r2, #0]
 8013436:	4298      	cmp	r0, r3
 8013438:	d817      	bhi.n	801346a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801343a:	1e48      	subs	r0, r1, #1
 801343c:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8013440:	4298      	cmp	r0, r3
 8013442:	d312      	bcc.n	801346a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8013444:	2400      	movs	r4, #0
 8013446:	428c      	cmp	r4, r1
 8013448:	d20f      	bcs.n	801346a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801344a:	1860      	adds	r0, r4, r1
 801344c:	1040      	asrs	r0, r0, #1
 801344e:	0085      	lsls	r5, r0, #2
 8013450:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8013454:	42b3      	cmp	r3, r6
 8013456:	d902      	bls.n	801345e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8013458:	3001      	adds	r0, #1
 801345a:	b284      	uxth	r4, r0
 801345c:	e7f3      	b.n	8013446 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801345e:	d201      	bcs.n	8013464 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8013460:	b281      	uxth	r1, r0
 8013462:	e7f0      	b.n	8013446 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8013464:	442a      	add	r2, r5
 8013466:	8850      	ldrh	r0, [r2, #2]
 8013468:	bd70      	pop	{r4, r5, r6, pc}
 801346a:	2000      	movs	r0, #0
 801346c:	e7fc      	b.n	8013468 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0801346e <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 801346e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013472:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8013474:	886f      	ldrh	r7, [r5, #2]
 8013476:	4604      	mov	r4, r0
 8013478:	087f      	lsrs	r7, r7, #1
 801347a:	260b      	movs	r6, #11
 801347c:	3e01      	subs	r6, #1
 801347e:	d013      	beq.n	80134a8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8013480:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8013482:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8013486:	462a      	mov	r2, r5
 8013488:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801348c:	4639      	mov	r1, r7
 801348e:	4643      	mov	r3, r8
 8013490:	4620      	mov	r0, r4
 8013492:	f7ff ffce 	bl	8013432 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8013496:	b138      	cbz	r0, 80134a8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8013498:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 801349c:	4642      	mov	r2, r8
 801349e:	4620      	mov	r0, r4
 80134a0:	f7ff ff93 	bl	80133ca <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 80134a4:	2800      	cmp	r0, #0
 80134a6:	d1e9      	bne.n	801347c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 80134a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080134ac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 80134ac:	b570      	push	{r4, r5, r6, lr}
 80134ae:	694a      	ldr	r2, [r1, #20]
 80134b0:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80134b2:	684b      	ldr	r3, [r1, #4]
 80134b4:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 80134b6:	1b54      	subs	r4, r2, r5
 80134b8:	f000 8106 	beq.w	80136c8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 80134bc:	1b9b      	subs	r3, r3, r6
 80134be:	d003      	beq.n	80134c8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80134c0:	4363      	muls	r3, r4
 80134c2:	2210      	movs	r2, #16
 80134c4:	fb93 f3f2 	sdiv	r3, r3, r2
 80134c8:	680c      	ldr	r4, [r1, #0]
 80134ca:	698a      	ldr	r2, [r1, #24]
 80134cc:	1b65      	subs	r5, r4, r5
 80134ce:	f000 80fd 	beq.w	80136cc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 80134d2:	1b92      	subs	r2, r2, r6
 80134d4:	d003      	beq.n	80134de <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80134d6:	436a      	muls	r2, r5
 80134d8:	2410      	movs	r4, #16
 80134da:	fb92 f2f4 	sdiv	r2, r2, r4
 80134de:	1a9b      	subs	r3, r3, r2
 80134e0:	ee07 3a90 	vmov	s15, r3
 80134e4:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8013708 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 80134e8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80134ec:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80134f0:	ee67 7a84 	vmul.f32	s15, s15, s8
 80134f4:	460a      	mov	r2, r1
 80134f6:	ee87 3a27 	vdiv.f32	s6, s14, s15
 80134fa:	4603      	mov	r3, r0
 80134fc:	f100 040c 	add.w	r4, r0, #12
 8013500:	eeb1 6a43 	vneg.f32	s12, s6
 8013504:	edd2 7a02 	vldr	s15, [r2, #8]
 8013508:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801350c:	3214      	adds	r2, #20
 801350e:	ece3 6a01 	vstmia	r3!, {s13}
 8013512:	ed52 7a02 	vldr	s15, [r2, #-8]
 8013516:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801351a:	429c      	cmp	r4, r3
 801351c:	edc3 7a02 	vstr	s15, [r3, #8]
 8013520:	ed52 7a01 	vldr	s15, [r2, #-4]
 8013524:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8013528:	edc3 7a05 	vstr	s15, [r3, #20]
 801352c:	d1ea      	bne.n	8013504 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801352e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8013530:	698b      	ldr	r3, [r1, #24]
 8013532:	edd0 4a02 	vldr	s9, [r0, #8]
 8013536:	edd0 3a00 	vldr	s7, [r0]
 801353a:	edd0 6a01 	vldr	s13, [r0, #4]
 801353e:	ed90 5a05 	vldr	s10, [r0, #20]
 8013542:	ed90 2a03 	vldr	s4, [r0, #12]
 8013546:	edd0 5a04 	vldr	s11, [r0, #16]
 801354a:	ed90 1a07 	vldr	s2, [r0, #28]
 801354e:	edd0 2a06 	vldr	s5, [r0, #24]
 8013552:	1a9b      	subs	r3, r3, r2
 8013554:	ee07 3a90 	vmov	s15, r3
 8013558:	684b      	ldr	r3, [r1, #4]
 801355a:	1a9b      	subs	r3, r3, r2
 801355c:	ee07 3a10 	vmov	s14, r3
 8013560:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013564:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8013568:	ee67 7a84 	vmul.f32	s15, s15, s8
 801356c:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8013570:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013574:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8013578:	ee27 7a04 	vmul.f32	s14, s14, s8
 801357c:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8013580:	eee6 7a87 	vfma.f32	s15, s13, s14
 8013584:	ee32 5a45 	vsub.f32	s10, s4, s10
 8013588:	ee67 7a83 	vmul.f32	s15, s15, s6
 801358c:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8013590:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8013592:	694a      	ldr	r2, [r1, #20]
 8013594:	1b13      	subs	r3, r2, r4
 8013596:	ee07 3a10 	vmov	s14, r3
 801359a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801359e:	680b      	ldr	r3, [r1, #0]
 80135a0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80135a4:	1b1b      	subs	r3, r3, r4
 80135a6:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80135aa:	ee07 3a10 	vmov	s14, r3
 80135ae:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80135b2:	ee27 7a04 	vmul.f32	s14, s14, s8
 80135b6:	eee6 4a87 	vfma.f32	s9, s13, s14
 80135ba:	ee64 4a86 	vmul.f32	s9, s9, s12
 80135be:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 80135c2:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80135c4:	698b      	ldr	r3, [r1, #24]
 80135c6:	1a9b      	subs	r3, r3, r2
 80135c8:	ee06 3a90 	vmov	s13, r3
 80135cc:	684b      	ldr	r3, [r1, #4]
 80135ce:	1a9b      	subs	r3, r3, r2
 80135d0:	ee07 3a10 	vmov	s14, r3
 80135d4:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80135d8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80135dc:	ee66 6a84 	vmul.f32	s13, s13, s8
 80135e0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80135e4:	ee65 6a66 	vnmul.f32	s13, s10, s13
 80135e8:	eee5 6a87 	vfma.f32	s13, s11, s14
 80135ec:	ee66 6a83 	vmul.f32	s13, s13, s6
 80135f0:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 80135f4:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80135f6:	694a      	ldr	r2, [r1, #20]
 80135f8:	1b13      	subs	r3, r2, r4
 80135fa:	ee07 3a10 	vmov	s14, r3
 80135fe:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013602:	680b      	ldr	r3, [r1, #0]
 8013604:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013608:	1b1b      	subs	r3, r3, r4
 801360a:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801360e:	ee07 3a10 	vmov	s14, r3
 8013612:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013616:	ee27 7a04 	vmul.f32	s14, s14, s8
 801361a:	eea5 5a87 	vfma.f32	s10, s11, s14
 801361e:	edd0 5a08 	vldr	s11, [r0, #32]
 8013622:	ee25 5a06 	vmul.f32	s10, s10, s12
 8013626:	ee31 1a65 	vsub.f32	s2, s2, s11
 801362a:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 801362e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8013630:	698b      	ldr	r3, [r1, #24]
 8013632:	1a9b      	subs	r3, r3, r2
 8013634:	ee07 3a10 	vmov	s14, r3
 8013638:	684b      	ldr	r3, [r1, #4]
 801363a:	1a9b      	subs	r3, r3, r2
 801363c:	ee01 3a90 	vmov	s3, r3
 8013640:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013644:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8013648:	ee27 7a04 	vmul.f32	s14, s14, s8
 801364c:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8013650:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8013654:	ee61 1a84 	vmul.f32	s3, s3, s8
 8013658:	eea1 7a21 	vfma.f32	s14, s2, s3
 801365c:	ee27 7a03 	vmul.f32	s14, s14, s6
 8013660:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8013664:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8013666:	694a      	ldr	r2, [r1, #20]
 8013668:	1b13      	subs	r3, r2, r4
 801366a:	ee03 3a10 	vmov	s6, r3
 801366e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8013672:	680b      	ldr	r3, [r1, #0]
 8013674:	ee23 3a04 	vmul.f32	s6, s6, s8
 8013678:	1b1b      	subs	r3, r3, r4
 801367a:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 801367e:	ee03 3a10 	vmov	s6, r3
 8013682:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8013686:	ee23 4a04 	vmul.f32	s8, s6, s8
 801368a:	eee1 5a04 	vfma.f32	s11, s2, s8
 801368e:	ee25 6a86 	vmul.f32	s12, s11, s12
 8013692:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8013696:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 801369a:	eee3 5aa6 	vfma.f32	s11, s7, s13
 801369e:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80136a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80136a6:	dd13      	ble.n	80136d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 80136a8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80136ac:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 80136b0:	63c3      	str	r3, [r0, #60]	; 0x3c
 80136b2:	eee3 7a87 	vfma.f32	s15, s7, s14
 80136b6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80136ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80136be:	dd15      	ble.n	80136ec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 80136c0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80136c4:	6403      	str	r3, [r0, #64]	; 0x40
 80136c6:	bd70      	pop	{r4, r5, r6, pc}
 80136c8:	4623      	mov	r3, r4
 80136ca:	e6fd      	b.n	80134c8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80136cc:	462a      	mov	r2, r5
 80136ce:	e706      	b.n	80134de <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80136d0:	d502      	bpl.n	80136d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 80136d2:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80136d6:	e7e9      	b.n	80136ac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 80136d8:	ee22 2a64 	vnmul.f32	s4, s4, s9
 80136dc:	eea3 2a85 	vfma.f32	s4, s7, s10
 80136e0:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 80136e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80136e8:	dade      	bge.n	80136a8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 80136ea:	e7f2      	b.n	80136d2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 80136ec:	d502      	bpl.n	80136f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 80136ee:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80136f2:	e7e7      	b.n	80136c4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 80136f4:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 80136f8:	eee3 4a86 	vfma.f32	s9, s7, s12
 80136fc:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8013700:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013704:	dadc      	bge.n	80136c0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8013706:	e7f2      	b.n	80136ee <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8013708:	3d800000 	.word	0x3d800000

0801370c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 801370c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013710:	2714      	movs	r7, #20
 8013712:	435f      	muls	r7, r3
 8013714:	eb02 0c07 	add.w	ip, r2, r7
 8013718:	f8dc 5004 	ldr.w	r5, [ip, #4]
 801371c:	f115 0e0f 	adds.w	lr, r5, #15
 8013720:	f100 80a2 	bmi.w	8013868 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8013724:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8013728:	9c08      	ldr	r4, [sp, #32]
 801372a:	f8c0 e014 	str.w	lr, [r0, #20]
 801372e:	2614      	movs	r6, #20
 8013730:	4366      	muls	r6, r4
 8013732:	eb02 0806 	add.w	r8, r2, r6
 8013736:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801373a:	f115 040f 	adds.w	r4, r5, #15
 801373e:	f100 809f 	bmi.w	8013880 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8013742:	1124      	asrs	r4, r4, #4
 8013744:	eba4 040e 	sub.w	r4, r4, lr
 8013748:	6184      	str	r4, [r0, #24]
 801374a:	2c00      	cmp	r4, #0
 801374c:	f000 808a 	beq.w	8013864 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8013750:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8013754:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8013758:	5995      	ldr	r5, [r2, r6]
 801375a:	eba4 0809 	sub.w	r8, r4, r9
 801375e:	59d4      	ldr	r4, [r2, r7]
 8013760:	eba5 0a04 	sub.w	sl, r5, r4
 8013764:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8013768:	fb0e fe05 	mul.w	lr, lr, r5
 801376c:	fb0a ee19 	mls	lr, sl, r9, lr
 8013770:	fb08 e404 	mla	r4, r8, r4, lr
 8013774:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8013778:	3c01      	subs	r4, #1
 801377a:	19a4      	adds	r4, r4, r6
 801377c:	f100 808c 	bmi.w	8013898 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8013780:	fb94 fef6 	sdiv	lr, r4, r6
 8013784:	f8c0 e000 	str.w	lr, [r0]
 8013788:	fb06 441e 	mls	r4, r6, lr, r4
 801378c:	6104      	str	r4, [r0, #16]
 801378e:	2d00      	cmp	r5, #0
 8013790:	f2c0 8095 	blt.w	80138be <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8013794:	fb95 f4f6 	sdiv	r4, r5, r6
 8013798:	6044      	str	r4, [r0, #4]
 801379a:	fb06 5514 	mls	r5, r6, r4, r5
 801379e:	6085      	str	r5, [r0, #8]
 80137a0:	60c6      	str	r6, [r0, #12]
 80137a2:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80137a6:	6945      	ldr	r5, [r0, #20]
 80137a8:	59d2      	ldr	r2, [r2, r7]
 80137aa:	eddf 6a4d 	vldr	s13, [pc, #308]	; 80138e0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 80137ae:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 80137b2:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 80137b6:	ee07 4a10 	vmov	s14, r4
 80137ba:	6804      	ldr	r4, [r0, #0]
 80137bc:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 80137c0:	ee07 2a90 	vmov	s15, r2
 80137c4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80137c8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80137cc:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80137d0:	ee27 7a26 	vmul.f32	s14, s14, s13
 80137d4:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80137d8:	edd3 6a00 	vldr	s13, [r3]
 80137dc:	eee6 6a07 	vfma.f32	s13, s12, s14
 80137e0:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 80137e4:	eee6 6a27 	vfma.f32	s13, s12, s15
 80137e8:	edc0 6a07 	vstr	s13, [r0, #28]
 80137ec:	edd0 6a01 	vldr	s13, [r0, #4]
 80137f0:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 80137f4:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 80137f8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80137fc:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8013800:	ed80 6a08 	vstr	s12, [r0, #32]
 8013804:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8013806:	6242      	str	r2, [r0, #36]	; 0x24
 8013808:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 801380c:	ed93 6a03 	vldr	s12, [r3, #12]
 8013810:	eea5 6a87 	vfma.f32	s12, s11, s14
 8013814:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8013818:	eea5 6aa7 	vfma.f32	s12, s11, s15
 801381c:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8013820:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8013824:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8013828:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801382c:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8013830:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8013832:	6302      	str	r2, [r0, #48]	; 0x30
 8013834:	ed93 6a06 	vldr	s12, [r3, #24]
 8013838:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 801383c:	eea5 6a87 	vfma.f32	s12, s11, s14
 8013840:	eeb0 7a46 	vmov.f32	s14, s12
 8013844:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8013848:	eea6 7a27 	vfma.f32	s14, s12, s15
 801384c:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8013850:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8013854:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8013858:	eee6 7a87 	vfma.f32	s15, s13, s14
 801385c:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8013860:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8013862:	63c3      	str	r3, [r0, #60]	; 0x3c
 8013864:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8013868:	f1c5 0501 	rsb	r5, r5, #1
 801386c:	f015 050f 	ands.w	r5, r5, #15
 8013870:	bf18      	it	ne
 8013872:	2501      	movne	r5, #1
 8013874:	2410      	movs	r4, #16
 8013876:	fb9e fef4 	sdiv	lr, lr, r4
 801387a:	ebae 0e05 	sub.w	lr, lr, r5
 801387e:	e753      	b.n	8013728 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8013880:	f1c5 0501 	rsb	r5, r5, #1
 8013884:	f015 050f 	ands.w	r5, r5, #15
 8013888:	bf18      	it	ne
 801388a:	2501      	movne	r5, #1
 801388c:	f04f 0910 	mov.w	r9, #16
 8013890:	fb94 f4f9 	sdiv	r4, r4, r9
 8013894:	1b64      	subs	r4, r4, r5
 8013896:	e755      	b.n	8013744 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8013898:	4264      	negs	r4, r4
 801389a:	fb94 fef6 	sdiv	lr, r4, r6
 801389e:	f1ce 0800 	rsb	r8, lr, #0
 80138a2:	fb06 441e 	mls	r4, r6, lr, r4
 80138a6:	f8c0 8000 	str.w	r8, [r0]
 80138aa:	6104      	str	r4, [r0, #16]
 80138ac:	2c00      	cmp	r4, #0
 80138ae:	f43f af6e 	beq.w	801378e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 80138b2:	ea6f 0e0e 	mvn.w	lr, lr
 80138b6:	f8c0 e000 	str.w	lr, [r0]
 80138ba:	1b34      	subs	r4, r6, r4
 80138bc:	e766      	b.n	801378c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 80138be:	426d      	negs	r5, r5
 80138c0:	fb95 f4f6 	sdiv	r4, r5, r6
 80138c4:	f1c4 0e00 	rsb	lr, r4, #0
 80138c8:	fb06 5514 	mls	r5, r6, r4, r5
 80138cc:	f8c0 e004 	str.w	lr, [r0, #4]
 80138d0:	6085      	str	r5, [r0, #8]
 80138d2:	2d00      	cmp	r5, #0
 80138d4:	f43f af64 	beq.w	80137a0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 80138d8:	43e4      	mvns	r4, r4
 80138da:	6044      	str	r4, [r0, #4]
 80138dc:	1b75      	subs	r5, r6, r5
 80138de:	e75e      	b.n	801379e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 80138e0:	3d800000 	.word	0x3d800000

080138e4 <_ZN8touchgfx7Unicode6strlenEPKt>:
 80138e4:	4602      	mov	r2, r0
 80138e6:	b148      	cbz	r0, 80138fc <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 80138e8:	2300      	movs	r3, #0
 80138ea:	b298      	uxth	r0, r3
 80138ec:	3301      	adds	r3, #1
 80138ee:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 80138f2:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 80138f6:	2900      	cmp	r1, #0
 80138f8:	d1f7      	bne.n	80138ea <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 80138fa:	4770      	bx	lr
 80138fc:	4770      	bx	lr

080138fe <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 80138fe:	b530      	push	{r4, r5, lr}
 8013900:	4604      	mov	r4, r0
 8013902:	b159      	cbz	r1, 801391c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8013904:	b148      	cbz	r0, 801391a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8013906:	2300      	movs	r3, #0
 8013908:	b298      	uxth	r0, r3
 801390a:	4282      	cmp	r2, r0
 801390c:	d905      	bls.n	801391a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801390e:	5ccd      	ldrb	r5, [r1, r3]
 8013910:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8013914:	3301      	adds	r3, #1
 8013916:	2d00      	cmp	r5, #0
 8013918:	d1f6      	bne.n	8013908 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801391a:	bd30      	pop	{r4, r5, pc}
 801391c:	4608      	mov	r0, r1
 801391e:	e7fc      	b.n	801391a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08013920 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 8013920:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013922:	b08b      	sub	sp, #44	; 0x2c
 8013924:	468c      	mov	ip, r1
 8013926:	2100      	movs	r1, #0
 8013928:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801392c:	ae01      	add	r6, sp, #4
 801392e:	211f      	movs	r1, #31
 8013930:	fbb0 f7f3 	udiv	r7, r0, r3
 8013934:	fb03 0517 	mls	r5, r3, r7, r0
 8013938:	b2ec      	uxtb	r4, r5
 801393a:	2d09      	cmp	r5, #9
 801393c:	bfd4      	ite	le
 801393e:	3430      	addle	r4, #48	; 0x30
 8013940:	3457      	addgt	r4, #87	; 0x57
 8013942:	b2e4      	uxtb	r4, r4
 8013944:	558c      	strb	r4, [r1, r6]
 8013946:	4638      	mov	r0, r7
 8013948:	1e4c      	subs	r4, r1, #1
 801394a:	b92f      	cbnz	r7, 8013958 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 801394c:	4431      	add	r1, r6
 801394e:	4660      	mov	r0, ip
 8013950:	f7ff ffd5 	bl	80138fe <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8013954:	b00b      	add	sp, #44	; 0x2c
 8013956:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013958:	4621      	mov	r1, r4
 801395a:	e7e9      	b.n	8013930 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

0801395c <_ZN8touchgfx7Unicode4itoaElPtti>:
 801395c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801395e:	4607      	mov	r7, r0
 8013960:	b08b      	sub	sp, #44	; 0x2c
 8013962:	4608      	mov	r0, r1
 8013964:	b341      	cbz	r1, 80139b8 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8013966:	1e99      	subs	r1, r3, #2
 8013968:	2922      	cmp	r1, #34	; 0x22
 801396a:	d825      	bhi.n	80139b8 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 801396c:	2100      	movs	r1, #0
 801396e:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8013972:	463c      	mov	r4, r7
 8013974:	261f      	movs	r6, #31
 8013976:	f10d 0c04 	add.w	ip, sp, #4
 801397a:	fb94 fef3 	sdiv	lr, r4, r3
 801397e:	fb03 441e 	mls	r4, r3, lr, r4
 8013982:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8013986:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 801398a:	b2ec      	uxtb	r4, r5
 801398c:	2d09      	cmp	r5, #9
 801398e:	bfd4      	ite	le
 8013990:	3430      	addle	r4, #48	; 0x30
 8013992:	3457      	addgt	r4, #87	; 0x57
 8013994:	b2e4      	uxtb	r4, r4
 8013996:	f80c 4006 	strb.w	r4, [ip, r6]
 801399a:	4674      	mov	r4, lr
 801399c:	1e71      	subs	r1, r6, #1
 801399e:	b96c      	cbnz	r4, 80139bc <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 80139a0:	2f00      	cmp	r7, #0
 80139a2:	da05      	bge.n	80139b0 <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 80139a4:	ab0a      	add	r3, sp, #40	; 0x28
 80139a6:	4419      	add	r1, r3
 80139a8:	232d      	movs	r3, #45	; 0x2d
 80139aa:	f801 3c24 	strb.w	r3, [r1, #-36]
 80139ae:	1eb1      	subs	r1, r6, #2
 80139b0:	3101      	adds	r1, #1
 80139b2:	4461      	add	r1, ip
 80139b4:	f7ff ffa3 	bl	80138fe <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80139b8:	b00b      	add	sp, #44	; 0x2c
 80139ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80139bc:	460e      	mov	r6, r1
 80139be:	e7dc      	b.n	801397a <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

080139c0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 80139c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80139c4:	4691      	mov	r9, r2
 80139c6:	b085      	sub	sp, #20
 80139c8:	6802      	ldr	r2, [r0, #0]
 80139ca:	9201      	str	r2, [sp, #4]
 80139cc:	4688      	mov	r8, r1
 80139ce:	4683      	mov	fp, r0
 80139d0:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 80139d4:	9103      	str	r1, [sp, #12]
 80139d6:	4610      	mov	r0, r2
 80139d8:	461c      	mov	r4, r3
 80139da:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 80139de:	9302      	str	r3, [sp, #8]
 80139e0:	f7ff ff80 	bl	80138e4 <_ZN8touchgfx7Unicode6strlenEPKt>
 80139e4:	f1b8 0f00 	cmp.w	r8, #0
 80139e8:	bf0c      	ite	eq
 80139ea:	4684      	moveq	ip, r0
 80139ec:	f100 0c01 	addne.w	ip, r0, #1
 80139f0:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 80139f4:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 80139f8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80139fa:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80139fc:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8013a00:	9903      	ldr	r1, [sp, #12]
 8013a02:	fa1f fc8c 	uxth.w	ip, ip
 8013a06:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8013a0a:	d041      	beq.n	8013a90 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8013a0c:	d834      	bhi.n	8013a78 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8013a0e:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8013a12:	d059      	beq.n	8013ac8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8013a14:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8013a18:	d03a      	beq.n	8013a90 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8013a1a:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8013a1e:	d034      	beq.n	8013a8a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8013a20:	2400      	movs	r4, #0
 8013a22:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8013a26:	3a01      	subs	r2, #1
 8013a28:	b169      	cbz	r1, 8013a46 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013a2a:	9911      	ldr	r1, [sp, #68]	; 0x44
 8013a2c:	458c      	cmp	ip, r1
 8013a2e:	da09      	bge.n	8013a44 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8013a30:	eba1 010c 	sub.w	r1, r1, ip
 8013a34:	b289      	uxth	r1, r1
 8013a36:	b933      	cbnz	r3, 8013a46 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013a38:	2e00      	cmp	r6, #0
 8013a3a:	d051      	beq.n	8013ae0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8013a3c:	2800      	cmp	r0, #0
 8013a3e:	d04f      	beq.n	8013ae0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8013a40:	440c      	add	r4, r1
 8013a42:	b2a4      	uxth	r4, r4
 8013a44:	2100      	movs	r1, #0
 8013a46:	682b      	ldr	r3, [r5, #0]
 8013a48:	4293      	cmp	r3, r2
 8013a4a:	da07      	bge.n	8013a5c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8013a4c:	f1b8 0f00 	cmp.w	r8, #0
 8013a50:	d004      	beq.n	8013a5c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8013a52:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8013a56:	682b      	ldr	r3, [r5, #0]
 8013a58:	3301      	adds	r3, #1
 8013a5a:	602b      	str	r3, [r5, #0]
 8013a5c:	2730      	movs	r7, #48	; 0x30
 8013a5e:	2c00      	cmp	r4, #0
 8013a60:	d04e      	beq.n	8013b00 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8013a62:	682e      	ldr	r6, [r5, #0]
 8013a64:	3c01      	subs	r4, #1
 8013a66:	42b2      	cmp	r2, r6
 8013a68:	b2a4      	uxth	r4, r4
 8013a6a:	dd49      	ble.n	8013b00 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8013a6c:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8013a70:	682b      	ldr	r3, [r5, #0]
 8013a72:	3301      	adds	r3, #1
 8013a74:	602b      	str	r3, [r5, #0]
 8013a76:	e7f2      	b.n	8013a5e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8013a78:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8013a7c:	d01d      	beq.n	8013aba <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8013a7e:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8013a82:	d002      	beq.n	8013a8a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8013a84:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8013a88:	e7c9      	b.n	8013a1e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8013a8a:	4684      	mov	ip, r0
 8013a8c:	f04f 0800 	mov.w	r8, #0
 8013a90:	2c00      	cmp	r4, #0
 8013a92:	d0c6      	beq.n	8013a22 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013a94:	b947      	cbnz	r7, 8013aa8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8013a96:	2801      	cmp	r0, #1
 8013a98:	d106      	bne.n	8013aa8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8013a9a:	8814      	ldrh	r4, [r2, #0]
 8013a9c:	2c30      	cmp	r4, #48	; 0x30
 8013a9e:	bf02      	ittt	eq
 8013aa0:	3202      	addeq	r2, #2
 8013aa2:	f8cb 2000 	streq.w	r2, [fp]
 8013aa6:	4638      	moveq	r0, r7
 8013aa8:	45bc      	cmp	ip, r7
 8013aaa:	da14      	bge.n	8013ad6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8013aac:	b2bf      	uxth	r7, r7
 8013aae:	eba7 040c 	sub.w	r4, r7, ip
 8013ab2:	b2a4      	uxth	r4, r4
 8013ab4:	46bc      	mov	ip, r7
 8013ab6:	2600      	movs	r6, #0
 8013ab8:	e7b3      	b.n	8013a22 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013aba:	4684      	mov	ip, r0
 8013abc:	b16c      	cbz	r4, 8013ada <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8013abe:	42b8      	cmp	r0, r7
 8013ac0:	dd00      	ble.n	8013ac4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8013ac2:	b2b8      	uxth	r0, r7
 8013ac4:	2400      	movs	r4, #0
 8013ac6:	e003      	b.n	8013ad0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8013ac8:	f04f 0c01 	mov.w	ip, #1
 8013acc:	2400      	movs	r4, #0
 8013ace:	4660      	mov	r0, ip
 8013ad0:	4626      	mov	r6, r4
 8013ad2:	46a0      	mov	r8, r4
 8013ad4:	e7a5      	b.n	8013a22 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013ad6:	2400      	movs	r4, #0
 8013ad8:	e7ed      	b.n	8013ab6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8013ada:	4626      	mov	r6, r4
 8013adc:	46a0      	mov	r8, r4
 8013ade:	e7a0      	b.n	8013a22 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013ae0:	2900      	cmp	r1, #0
 8013ae2:	d0b0      	beq.n	8013a46 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013ae4:	2720      	movs	r7, #32
 8013ae6:	682e      	ldr	r6, [r5, #0]
 8013ae8:	2900      	cmp	r1, #0
 8013aea:	d0ac      	beq.n	8013a46 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013aec:	3901      	subs	r1, #1
 8013aee:	4296      	cmp	r6, r2
 8013af0:	b289      	uxth	r1, r1
 8013af2:	daa7      	bge.n	8013a44 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8013af4:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8013af8:	682b      	ldr	r3, [r5, #0]
 8013afa:	3301      	adds	r3, #1
 8013afc:	602b      	str	r3, [r5, #0]
 8013afe:	e7f2      	b.n	8013ae6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8013b00:	b188      	cbz	r0, 8013b26 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8013b02:	682b      	ldr	r3, [r5, #0]
 8013b04:	3801      	subs	r0, #1
 8013b06:	429a      	cmp	r2, r3
 8013b08:	b280      	uxth	r0, r0
 8013b0a:	dd0c      	ble.n	8013b26 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8013b0c:	f8db 3000 	ldr.w	r3, [fp]
 8013b10:	1c9c      	adds	r4, r3, #2
 8013b12:	f8cb 4000 	str.w	r4, [fp]
 8013b16:	881c      	ldrh	r4, [r3, #0]
 8013b18:	682b      	ldr	r3, [r5, #0]
 8013b1a:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8013b1e:	682b      	ldr	r3, [r5, #0]
 8013b20:	3301      	adds	r3, #1
 8013b22:	602b      	str	r3, [r5, #0]
 8013b24:	e7ec      	b.n	8013b00 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8013b26:	2620      	movs	r6, #32
 8013b28:	b151      	cbz	r1, 8013b40 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8013b2a:	6828      	ldr	r0, [r5, #0]
 8013b2c:	3901      	subs	r1, #1
 8013b2e:	4282      	cmp	r2, r0
 8013b30:	b289      	uxth	r1, r1
 8013b32:	dd05      	ble.n	8013b40 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8013b34:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8013b38:	682b      	ldr	r3, [r5, #0]
 8013b3a:	3301      	adds	r3, #1
 8013b3c:	602b      	str	r3, [r5, #0]
 8013b3e:	e7f3      	b.n	8013b28 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8013b40:	b005      	add	sp, #20
 8013b42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013b46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8013b46:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013b4a:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8013b4e:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8013b52:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8013b56:	2400      	movs	r4, #0
 8013b58:	8014      	strh	r4, [r2, #0]
 8013b5a:	701c      	strb	r4, [r3, #0]
 8013b5c:	f888 4000 	strb.w	r4, [r8]
 8013b60:	f88c 4000 	strb.w	r4, [ip]
 8013b64:	f88e 4000 	strb.w	r4, [lr]
 8013b68:	703c      	strb	r4, [r7, #0]
 8013b6a:	6804      	ldr	r4, [r0, #0]
 8013b6c:	b1a4      	cbz	r4, 8013b98 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8013b6e:	8824      	ldrh	r4, [r4, #0]
 8013b70:	f04f 0901 	mov.w	r9, #1
 8013b74:	b314      	cbz	r4, 8013bbc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8013b76:	2c2b      	cmp	r4, #43	; 0x2b
 8013b78:	d001      	beq.n	8013b7e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8013b7a:	2c20      	cmp	r4, #32
 8013b7c:	d110      	bne.n	8013ba0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8013b7e:	8014      	strh	r4, [r2, #0]
 8013b80:	6804      	ldr	r4, [r0, #0]
 8013b82:	b10c      	cbz	r4, 8013b88 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8013b84:	3402      	adds	r4, #2
 8013b86:	6004      	str	r4, [r0, #0]
 8013b88:	680c      	ldr	r4, [r1, #0]
 8013b8a:	b10c      	cbz	r4, 8013b90 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8013b8c:	3401      	adds	r4, #1
 8013b8e:	600c      	str	r4, [r1, #0]
 8013b90:	6804      	ldr	r4, [r0, #0]
 8013b92:	b17c      	cbz	r4, 8013bb4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8013b94:	8824      	ldrh	r4, [r4, #0]
 8013b96:	e7ed      	b.n	8013b74 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8013b98:	680c      	ldr	r4, [r1, #0]
 8013b9a:	b17c      	cbz	r4, 8013bbc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8013b9c:	7824      	ldrb	r4, [r4, #0]
 8013b9e:	e7e7      	b.n	8013b70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8013ba0:	2c2d      	cmp	r4, #45	; 0x2d
 8013ba2:	d102      	bne.n	8013baa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8013ba4:	f883 9000 	strb.w	r9, [r3]
 8013ba8:	e7ea      	b.n	8013b80 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8013baa:	2c23      	cmp	r4, #35	; 0x23
 8013bac:	d107      	bne.n	8013bbe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8013bae:	f888 9000 	strb.w	r9, [r8]
 8013bb2:	e7e5      	b.n	8013b80 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8013bb4:	680c      	ldr	r4, [r1, #0]
 8013bb6:	b10c      	cbz	r4, 8013bbc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8013bb8:	7824      	ldrb	r4, [r4, #0]
 8013bba:	e7db      	b.n	8013b74 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8013bbc:	2400      	movs	r4, #0
 8013bbe:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8013bc2:	2b09      	cmp	r3, #9
 8013bc4:	d901      	bls.n	8013bca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8013bc6:	2c2a      	cmp	r4, #42	; 0x2a
 8013bc8:	d122      	bne.n	8013c10 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8013bca:	2301      	movs	r3, #1
 8013bcc:	2c30      	cmp	r4, #48	; 0x30
 8013bce:	f88e 3000 	strb.w	r3, [lr]
 8013bd2:	d10d      	bne.n	8013bf0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8013bd4:	f88c 3000 	strb.w	r3, [ip]
 8013bd8:	6803      	ldr	r3, [r0, #0]
 8013bda:	b10b      	cbz	r3, 8013be0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8013bdc:	3302      	adds	r3, #2
 8013bde:	6003      	str	r3, [r0, #0]
 8013be0:	680b      	ldr	r3, [r1, #0]
 8013be2:	b10b      	cbz	r3, 8013be8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8013be4:	3301      	adds	r3, #1
 8013be6:	600b      	str	r3, [r1, #0]
 8013be8:	6803      	ldr	r3, [r0, #0]
 8013bea:	2b00      	cmp	r3, #0
 8013bec:	d02f      	beq.n	8013c4e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8013bee:	881c      	ldrh	r4, [r3, #0]
 8013bf0:	2c2a      	cmp	r4, #42	; 0x2a
 8013bf2:	d135      	bne.n	8013c60 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8013bf4:	f04f 33ff 	mov.w	r3, #4294967295
 8013bf8:	6033      	str	r3, [r6, #0]
 8013bfa:	6803      	ldr	r3, [r0, #0]
 8013bfc:	b10b      	cbz	r3, 8013c02 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8013bfe:	3302      	adds	r3, #2
 8013c00:	6003      	str	r3, [r0, #0]
 8013c02:	680b      	ldr	r3, [r1, #0]
 8013c04:	b10b      	cbz	r3, 8013c0a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8013c06:	3301      	adds	r3, #1
 8013c08:	600b      	str	r3, [r1, #0]
 8013c0a:	6803      	ldr	r3, [r0, #0]
 8013c0c:	b31b      	cbz	r3, 8013c56 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8013c0e:	881c      	ldrh	r4, [r3, #0]
 8013c10:	2c2e      	cmp	r4, #46	; 0x2e
 8013c12:	d11a      	bne.n	8013c4a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8013c14:	2301      	movs	r3, #1
 8013c16:	703b      	strb	r3, [r7, #0]
 8013c18:	6803      	ldr	r3, [r0, #0]
 8013c1a:	b10b      	cbz	r3, 8013c20 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8013c1c:	3302      	adds	r3, #2
 8013c1e:	6003      	str	r3, [r0, #0]
 8013c20:	680b      	ldr	r3, [r1, #0]
 8013c22:	b10b      	cbz	r3, 8013c28 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8013c24:	3301      	adds	r3, #1
 8013c26:	600b      	str	r3, [r1, #0]
 8013c28:	6803      	ldr	r3, [r0, #0]
 8013c2a:	2b00      	cmp	r3, #0
 8013c2c:	d036      	beq.n	8013c9c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8013c2e:	881b      	ldrh	r3, [r3, #0]
 8013c30:	2b2a      	cmp	r3, #42	; 0x2a
 8013c32:	d137      	bne.n	8013ca4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8013c34:	f04f 33ff 	mov.w	r3, #4294967295
 8013c38:	602b      	str	r3, [r5, #0]
 8013c3a:	6803      	ldr	r3, [r0, #0]
 8013c3c:	b10b      	cbz	r3, 8013c42 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8013c3e:	3302      	adds	r3, #2
 8013c40:	6003      	str	r3, [r0, #0]
 8013c42:	680b      	ldr	r3, [r1, #0]
 8013c44:	b10b      	cbz	r3, 8013c4a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8013c46:	3301      	adds	r3, #1
 8013c48:	600b      	str	r3, [r1, #0]
 8013c4a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013c4e:	680c      	ldr	r4, [r1, #0]
 8013c50:	b134      	cbz	r4, 8013c60 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8013c52:	7824      	ldrb	r4, [r4, #0]
 8013c54:	e7cc      	b.n	8013bf0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8013c56:	680b      	ldr	r3, [r1, #0]
 8013c58:	2b00      	cmp	r3, #0
 8013c5a:	d0f6      	beq.n	8013c4a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8013c5c:	781c      	ldrb	r4, [r3, #0]
 8013c5e:	e7d7      	b.n	8013c10 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8013c60:	2300      	movs	r3, #0
 8013c62:	6033      	str	r3, [r6, #0]
 8013c64:	220a      	movs	r2, #10
 8013c66:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8013c6a:	fa1f f38c 	uxth.w	r3, ip
 8013c6e:	2b09      	cmp	r3, #9
 8013c70:	d8ce      	bhi.n	8013c10 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8013c72:	6833      	ldr	r3, [r6, #0]
 8013c74:	fb02 c303 	mla	r3, r2, r3, ip
 8013c78:	6033      	str	r3, [r6, #0]
 8013c7a:	6803      	ldr	r3, [r0, #0]
 8013c7c:	b10b      	cbz	r3, 8013c82 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8013c7e:	3302      	adds	r3, #2
 8013c80:	6003      	str	r3, [r0, #0]
 8013c82:	680b      	ldr	r3, [r1, #0]
 8013c84:	b10b      	cbz	r3, 8013c8a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8013c86:	3301      	adds	r3, #1
 8013c88:	600b      	str	r3, [r1, #0]
 8013c8a:	6803      	ldr	r3, [r0, #0]
 8013c8c:	b10b      	cbz	r3, 8013c92 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8013c8e:	881c      	ldrh	r4, [r3, #0]
 8013c90:	e7e9      	b.n	8013c66 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8013c92:	680c      	ldr	r4, [r1, #0]
 8013c94:	2c00      	cmp	r4, #0
 8013c96:	d0e6      	beq.n	8013c66 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8013c98:	7824      	ldrb	r4, [r4, #0]
 8013c9a:	e7e4      	b.n	8013c66 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8013c9c:	680b      	ldr	r3, [r1, #0]
 8013c9e:	b10b      	cbz	r3, 8013ca4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8013ca0:	781b      	ldrb	r3, [r3, #0]
 8013ca2:	e7c5      	b.n	8013c30 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8013ca4:	2200      	movs	r2, #0
 8013ca6:	602a      	str	r2, [r5, #0]
 8013ca8:	240a      	movs	r4, #10
 8013caa:	3b30      	subs	r3, #48	; 0x30
 8013cac:	b29e      	uxth	r6, r3
 8013cae:	2e09      	cmp	r6, #9
 8013cb0:	682a      	ldr	r2, [r5, #0]
 8013cb2:	d813      	bhi.n	8013cdc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8013cb4:	fb04 3302 	mla	r3, r4, r2, r3
 8013cb8:	602b      	str	r3, [r5, #0]
 8013cba:	6803      	ldr	r3, [r0, #0]
 8013cbc:	b10b      	cbz	r3, 8013cc2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8013cbe:	3302      	adds	r3, #2
 8013cc0:	6003      	str	r3, [r0, #0]
 8013cc2:	680b      	ldr	r3, [r1, #0]
 8013cc4:	b10b      	cbz	r3, 8013cca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8013cc6:	3301      	adds	r3, #1
 8013cc8:	600b      	str	r3, [r1, #0]
 8013cca:	6803      	ldr	r3, [r0, #0]
 8013ccc:	b10b      	cbz	r3, 8013cd2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8013cce:	881b      	ldrh	r3, [r3, #0]
 8013cd0:	e7eb      	b.n	8013caa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8013cd2:	680b      	ldr	r3, [r1, #0]
 8013cd4:	2b00      	cmp	r3, #0
 8013cd6:	d0e8      	beq.n	8013caa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8013cd8:	781b      	ldrb	r3, [r3, #0]
 8013cda:	e7e6      	b.n	8013caa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8013cdc:	2a06      	cmp	r2, #6
 8013cde:	bfa8      	it	ge
 8013ce0:	2206      	movge	r2, #6
 8013ce2:	602a      	str	r2, [r5, #0]
 8013ce4:	e7b1      	b.n	8013c4a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08013ce6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8013ce6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013cea:	b0a3      	sub	sp, #140	; 0x8c
 8013cec:	2600      	movs	r6, #0
 8013cee:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8013cf2:	4607      	mov	r7, r0
 8013cf4:	4688      	mov	r8, r1
 8013cf6:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8013cfa:	4631      	mov	r1, r6
 8013cfc:	2242      	movs	r2, #66	; 0x42
 8013cfe:	4648      	mov	r0, r9
 8013d00:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8013d02:	960d      	str	r6, [sp, #52]	; 0x34
 8013d04:	f00c fefa 	bl	8020afc <memset>
 8013d08:	b15f      	cbz	r7, 8013d22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8013d0a:	f108 3aff 	add.w	sl, r8, #4294967295
 8013d0e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013d10:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013d12:	b152      	cbz	r2, 8013d2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8013d14:	8812      	ldrh	r2, [r2, #0]
 8013d16:	b10a      	cbz	r2, 8013d1c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8013d18:	459a      	cmp	sl, r3
 8013d1a:	dc2e      	bgt.n	8013d7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8013d1c:	2200      	movs	r2, #0
 8013d1e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8013d22:	4638      	mov	r0, r7
 8013d24:	b023      	add	sp, #140	; 0x8c
 8013d26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013d2a:	9a08      	ldr	r2, [sp, #32]
 8013d2c:	2a00      	cmp	r2, #0
 8013d2e:	d0f5      	beq.n	8013d1c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8013d30:	7812      	ldrb	r2, [r2, #0]
 8013d32:	e7f0      	b.n	8013d16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8013d34:	2d00      	cmp	r5, #0
 8013d36:	d0ea      	beq.n	8013d0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013d38:	782a      	ldrb	r2, [r5, #0]
 8013d3a:	b142      	cbz	r2, 8013d4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8013d3c:	2a25      	cmp	r2, #37	; 0x25
 8013d3e:	d001      	beq.n	8013d44 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8013d40:	459a      	cmp	sl, r3
 8013d42:	dc08      	bgt.n	8013d56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8013d44:	f1bb 0f00 	cmp.w	fp, #0
 8013d48:	d121      	bne.n	8013d8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8013d4a:	2d00      	cmp	r5, #0
 8013d4c:	d0df      	beq.n	8013d0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013d4e:	782a      	ldrb	r2, [r5, #0]
 8013d50:	f04f 0b00 	mov.w	fp, #0
 8013d54:	e01d      	b.n	8013d92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8013d56:	f1bb 0f00 	cmp.w	fp, #0
 8013d5a:	d078      	beq.n	8013e4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8013d5c:	f8bb 2000 	ldrh.w	r2, [fp]
 8013d60:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8013d64:	f1bb 0f00 	cmp.w	fp, #0
 8013d68:	d002      	beq.n	8013d70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8013d6a:	f10b 0202 	add.w	r2, fp, #2
 8013d6e:	9209      	str	r2, [sp, #36]	; 0x24
 8013d70:	b10d      	cbz	r5, 8013d76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8013d72:	3501      	adds	r5, #1
 8013d74:	9508      	str	r5, [sp, #32]
 8013d76:	3301      	adds	r3, #1
 8013d78:	930d      	str	r3, [sp, #52]	; 0x34
 8013d7a:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8013d7e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013d80:	f1bb 0f00 	cmp.w	fp, #0
 8013d84:	d0d6      	beq.n	8013d34 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8013d86:	f8bb 2000 	ldrh.w	r2, [fp]
 8013d8a:	2a00      	cmp	r2, #0
 8013d8c:	d1d6      	bne.n	8013d3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8013d8e:	f8bb 2000 	ldrh.w	r2, [fp]
 8013d92:	2a00      	cmp	r2, #0
 8013d94:	d0bb      	beq.n	8013d0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013d96:	459a      	cmp	sl, r3
 8013d98:	ddb9      	ble.n	8013d0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013d9a:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8013d9e:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8013da2:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8013da6:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8013daa:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8013dae:	960e      	str	r6, [sp, #56]	; 0x38
 8013db0:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8013db4:	960f      	str	r6, [sp, #60]	; 0x3c
 8013db6:	f1bb 0f00 	cmp.w	fp, #0
 8013dba:	d002      	beq.n	8013dc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8013dbc:	f10b 0302 	add.w	r3, fp, #2
 8013dc0:	9309      	str	r3, [sp, #36]	; 0x24
 8013dc2:	b10d      	cbz	r5, 8013dc8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8013dc4:	1c6b      	adds	r3, r5, #1
 8013dc6:	9308      	str	r3, [sp, #32]
 8013dc8:	ab0f      	add	r3, sp, #60	; 0x3c
 8013dca:	9305      	str	r3, [sp, #20]
 8013dcc:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8013dd0:	9304      	str	r3, [sp, #16]
 8013dd2:	ab0e      	add	r3, sp, #56	; 0x38
 8013dd4:	9303      	str	r3, [sp, #12]
 8013dd6:	ab0c      	add	r3, sp, #48	; 0x30
 8013dd8:	9302      	str	r3, [sp, #8]
 8013dda:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8013dde:	9301      	str	r3, [sp, #4]
 8013de0:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8013de4:	9300      	str	r3, [sp, #0]
 8013de6:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8013dea:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8013dee:	a908      	add	r1, sp, #32
 8013df0:	a809      	add	r0, sp, #36	; 0x24
 8013df2:	f7ff fea8 	bl	8013b46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8013df6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013df8:	2b00      	cmp	r3, #0
 8013dfa:	bfbe      	ittt	lt
 8013dfc:	6823      	ldrlt	r3, [r4, #0]
 8013dfe:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8013e02:	930e      	strlt	r3, [sp, #56]	; 0x38
 8013e04:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013e06:	bfb8      	it	lt
 8013e08:	3404      	addlt	r4, #4
 8013e0a:	2b00      	cmp	r3, #0
 8013e0c:	bfb8      	it	lt
 8013e0e:	6823      	ldrlt	r3, [r4, #0]
 8013e10:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8013e14:	bfbe      	ittt	lt
 8013e16:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8013e1a:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8013e1c:	3404      	addlt	r4, #4
 8013e1e:	b1d9      	cbz	r1, 8013e58 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8013e20:	880b      	ldrh	r3, [r1, #0]
 8013e22:	2b69      	cmp	r3, #105	; 0x69
 8013e24:	d01f      	beq.n	8013e66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013e26:	d82f      	bhi.n	8013e88 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8013e28:	2b58      	cmp	r3, #88	; 0x58
 8013e2a:	d01c      	beq.n	8013e66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013e2c:	d818      	bhi.n	8013e60 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8013e2e:	2b25      	cmp	r3, #37	; 0x25
 8013e30:	d034      	beq.n	8013e9c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8013e32:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8013e36:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013e38:	f1bb 0f00 	cmp.w	fp, #0
 8013e3c:	f000 80b8 	beq.w	8013fb0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8013e40:	f8bb 5000 	ldrh.w	r5, [fp]
 8013e44:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8013e48:	3301      	adds	r3, #1
 8013e4a:	930d      	str	r3, [sp, #52]	; 0x34
 8013e4c:	e029      	b.n	8013ea2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8013e4e:	b10d      	cbz	r5, 8013e54 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8013e50:	782a      	ldrb	r2, [r5, #0]
 8013e52:	e785      	b.n	8013d60 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8013e54:	462a      	mov	r2, r5
 8013e56:	e783      	b.n	8013d60 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8013e58:	2a00      	cmp	r2, #0
 8013e5a:	d0ea      	beq.n	8013e32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8013e5c:	7813      	ldrb	r3, [r2, #0]
 8013e5e:	e7e0      	b.n	8013e22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8013e60:	3b63      	subs	r3, #99	; 0x63
 8013e62:	2b01      	cmp	r3, #1
 8013e64:	d8e5      	bhi.n	8013e32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8013e66:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8013e6a:	b329      	cbz	r1, 8013eb8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8013e6c:	880b      	ldrh	r3, [r1, #0]
 8013e6e:	2b69      	cmp	r3, #105	; 0x69
 8013e70:	d063      	beq.n	8013f3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8013e72:	d825      	bhi.n	8013ec0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8013e74:	2b63      	cmp	r3, #99	; 0x63
 8013e76:	d038      	beq.n	8013eea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8013e78:	2b64      	cmp	r3, #100	; 0x64
 8013e7a:	d05e      	beq.n	8013f3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8013e7c:	2b58      	cmp	r3, #88	; 0x58
 8013e7e:	d07b      	beq.n	8013f78 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8013e80:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8013e84:	4625      	mov	r5, r4
 8013e86:	e036      	b.n	8013ef6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013e88:	2b73      	cmp	r3, #115	; 0x73
 8013e8a:	d0ec      	beq.n	8013e66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013e8c:	d802      	bhi.n	8013e94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8013e8e:	2b6f      	cmp	r3, #111	; 0x6f
 8013e90:	d1cf      	bne.n	8013e32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8013e92:	e7e8      	b.n	8013e66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013e94:	2b75      	cmp	r3, #117	; 0x75
 8013e96:	d0e6      	beq.n	8013e66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013e98:	2b78      	cmp	r3, #120	; 0x78
 8013e9a:	e7f9      	b.n	8013e90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8013e9c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013e9e:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8013ea2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013ea4:	b10b      	cbz	r3, 8013eaa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8013ea6:	3302      	adds	r3, #2
 8013ea8:	9309      	str	r3, [sp, #36]	; 0x24
 8013eaa:	9b08      	ldr	r3, [sp, #32]
 8013eac:	2b00      	cmp	r3, #0
 8013eae:	f43f af2e 	beq.w	8013d0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013eb2:	3301      	adds	r3, #1
 8013eb4:	9308      	str	r3, [sp, #32]
 8013eb6:	e72a      	b.n	8013d0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013eb8:	2a00      	cmp	r2, #0
 8013eba:	d0e1      	beq.n	8013e80 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8013ebc:	7813      	ldrb	r3, [r2, #0]
 8013ebe:	e7d6      	b.n	8013e6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8013ec0:	2b73      	cmp	r3, #115	; 0x73
 8013ec2:	d036      	beq.n	8013f32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8013ec4:	d807      	bhi.n	8013ed6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8013ec6:	2b6f      	cmp	r3, #111	; 0x6f
 8013ec8:	d1da      	bne.n	8013e80 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8013eca:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013ecc:	1d25      	adds	r5, r4, #4
 8013ece:	eba8 0202 	sub.w	r2, r8, r2
 8013ed2:	2308      	movs	r3, #8
 8013ed4:	e04a      	b.n	8013f6c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8013ed6:	2b75      	cmp	r3, #117	; 0x75
 8013ed8:	d043      	beq.n	8013f62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8013eda:	2b78      	cmp	r3, #120	; 0x78
 8013edc:	d1d0      	bne.n	8013e80 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8013ede:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013ee0:	1d25      	adds	r5, r4, #4
 8013ee2:	eba8 0202 	sub.w	r2, r8, r2
 8013ee6:	2310      	movs	r3, #16
 8013ee8:	e040      	b.n	8013f6c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8013eea:	6823      	ldr	r3, [r4, #0]
 8013eec:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8013ef0:	1d25      	adds	r5, r4, #4
 8013ef2:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8013ef6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013ef8:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8013efc:	2b00      	cmp	r3, #0
 8013efe:	d052      	beq.n	8013fa6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8013f00:	881a      	ldrh	r2, [r3, #0]
 8013f02:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8013f06:	a80d      	add	r0, sp, #52	; 0x34
 8013f08:	9005      	str	r0, [sp, #20]
 8013f0a:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8013f0e:	9004      	str	r0, [sp, #16]
 8013f10:	980e      	ldr	r0, [sp, #56]	; 0x38
 8013f12:	9003      	str	r0, [sp, #12]
 8013f14:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8013f18:	9002      	str	r0, [sp, #8]
 8013f1a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8013f1c:	9001      	str	r0, [sp, #4]
 8013f1e:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8013f22:	9000      	str	r0, [sp, #0]
 8013f24:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8013f28:	a810      	add	r0, sp, #64	; 0x40
 8013f2a:	f7ff fd49 	bl	80139c0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8013f2e:	462c      	mov	r4, r5
 8013f30:	e7b7      	b.n	8013ea2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8013f32:	6823      	ldr	r3, [r4, #0]
 8013f34:	1d25      	adds	r5, r4, #4
 8013f36:	9310      	str	r3, [sp, #64]	; 0x40
 8013f38:	e7dd      	b.n	8013ef6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013f3a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013f3c:	6820      	ldr	r0, [r4, #0]
 8013f3e:	eba8 0202 	sub.w	r2, r8, r2
 8013f42:	230a      	movs	r3, #10
 8013f44:	b292      	uxth	r2, r2
 8013f46:	4649      	mov	r1, r9
 8013f48:	f7ff fd08 	bl	801395c <_ZN8touchgfx7Unicode4itoaElPtti>
 8013f4c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013f50:	2b2d      	cmp	r3, #45	; 0x2d
 8013f52:	f104 0504 	add.w	r5, r4, #4
 8013f56:	d1ce      	bne.n	8013ef6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013f58:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8013f5c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013f5e:	3302      	adds	r3, #2
 8013f60:	e7e9      	b.n	8013f36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8013f62:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013f64:	1d25      	adds	r5, r4, #4
 8013f66:	eba8 0202 	sub.w	r2, r8, r2
 8013f6a:	230a      	movs	r3, #10
 8013f6c:	b292      	uxth	r2, r2
 8013f6e:	4649      	mov	r1, r9
 8013f70:	6820      	ldr	r0, [r4, #0]
 8013f72:	f7ff fcd5 	bl	8013920 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 8013f76:	e7be      	b.n	8013ef6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013f78:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013f7a:	6820      	ldr	r0, [r4, #0]
 8013f7c:	eba8 0202 	sub.w	r2, r8, r2
 8013f80:	b292      	uxth	r2, r2
 8013f82:	2310      	movs	r3, #16
 8013f84:	4649      	mov	r1, r9
 8013f86:	f7ff fccb 	bl	8013920 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 8013f8a:	1d25      	adds	r5, r4, #4
 8013f8c:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8013f90:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8013f94:	2b00      	cmp	r3, #0
 8013f96:	d0ae      	beq.n	8013ef6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013f98:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8013f9c:	2919      	cmp	r1, #25
 8013f9e:	d8f7      	bhi.n	8013f90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8013fa0:	3b20      	subs	r3, #32
 8013fa2:	8013      	strh	r3, [r2, #0]
 8013fa4:	e7f4      	b.n	8013f90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8013fa6:	9a08      	ldr	r2, [sp, #32]
 8013fa8:	2a00      	cmp	r2, #0
 8013faa:	d0aa      	beq.n	8013f02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8013fac:	7812      	ldrb	r2, [r2, #0]
 8013fae:	e7a8      	b.n	8013f02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8013fb0:	2d00      	cmp	r5, #0
 8013fb2:	f43f af47 	beq.w	8013e44 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8013fb6:	782d      	ldrb	r5, [r5, #0]
 8013fb8:	e744      	b.n	8013e44 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08013fba <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8013fba:	b507      	push	{r0, r1, r2, lr}
 8013fbc:	9300      	str	r3, [sp, #0]
 8013fbe:	4613      	mov	r3, r2
 8013fc0:	2200      	movs	r2, #0
 8013fc2:	f7ff fe90 	bl	8013ce6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8013fc6:	b003      	add	sp, #12
 8013fc8:	f85d fb04 	ldr.w	pc, [sp], #4

08013fcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8013fcc:	b40c      	push	{r2, r3}
 8013fce:	b507      	push	{r0, r1, r2, lr}
 8013fd0:	ab04      	add	r3, sp, #16
 8013fd2:	f853 2b04 	ldr.w	r2, [r3], #4
 8013fd6:	9301      	str	r3, [sp, #4]
 8013fd8:	f7ff ffef 	bl	8013fba <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8013fdc:	b003      	add	sp, #12
 8013fde:	f85d eb04 	ldr.w	lr, [sp], #4
 8013fe2:	b002      	add	sp, #8
 8013fe4:	4770      	bx	lr
	...

08013fe8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 8013fe8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013fec:	b0c3      	sub	sp, #268	; 0x10c
 8013fee:	2600      	movs	r6, #0
 8013ff0:	f10d 0840 	add.w	r8, sp, #64	; 0x40
 8013ff4:	4607      	mov	r7, r0
 8013ff6:	4689      	mov	r9, r1
 8013ff8:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8013ffc:	4631      	mov	r1, r6
 8013ffe:	22c8      	movs	r2, #200	; 0xc8
 8014000:	4640      	mov	r0, r8
 8014002:	f8dd a130 	ldr.w	sl, [sp, #304]	; 0x130
 8014006:	960c      	str	r6, [sp, #48]	; 0x30
 8014008:	f00c fd78 	bl	8020afc <memset>
 801400c:	b17f      	cbz	r7, 801402e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x46>
 801400e:	eddf 5aa4 	vldr	s11, [pc, #656]	; 80142a0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b8>
 8014012:	f8df b298 	ldr.w	fp, [pc, #664]	; 80142ac <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c4>
 8014016:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014018:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801401a:	b162      	cbz	r2, 8014036 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x4e>
 801401c:	8812      	ldrh	r2, [r2, #0]
 801401e:	b11a      	cbz	r2, 8014028 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 8014020:	f109 31ff 	add.w	r1, r9, #4294967295
 8014024:	4299      	cmp	r1, r3
 8014026:	dc26      	bgt.n	8014076 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 8014028:	2200      	movs	r2, #0
 801402a:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801402e:	4638      	mov	r0, r7
 8014030:	b043      	add	sp, #268	; 0x10c
 8014032:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014036:	9a08      	ldr	r2, [sp, #32]
 8014038:	2a00      	cmp	r2, #0
 801403a:	d0f5      	beq.n	8014028 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 801403c:	7812      	ldrb	r2, [r2, #0]
 801403e:	e7ee      	b.n	801401e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36>
 8014040:	2c00      	cmp	r4, #0
 8014042:	d0e8      	beq.n	8014016 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8014044:	7822      	ldrb	r2, [r4, #0]
 8014046:	b132      	cbz	r2, 8014056 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6e>
 8014048:	2a25      	cmp	r2, #37	; 0x25
 801404a:	d001      	beq.n	8014050 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x68>
 801404c:	4299      	cmp	r1, r3
 801404e:	dc05      	bgt.n	801405c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 8014050:	b9cd      	cbnz	r5, 8014086 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x9e>
 8014052:	2c00      	cmp	r4, #0
 8014054:	d0df      	beq.n	8014016 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8014056:	7822      	ldrb	r2, [r4, #0]
 8014058:	2500      	movs	r5, #0
 801405a:	e015      	b.n	8014088 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xa0>
 801405c:	2d00      	cmp	r5, #0
 801405e:	d073      	beq.n	8014148 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 8014060:	882a      	ldrh	r2, [r5, #0]
 8014062:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8014066:	b10d      	cbz	r5, 801406c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x84>
 8014068:	3502      	adds	r5, #2
 801406a:	9509      	str	r5, [sp, #36]	; 0x24
 801406c:	b10c      	cbz	r4, 8014072 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8a>
 801406e:	3401      	adds	r4, #1
 8014070:	9408      	str	r4, [sp, #32]
 8014072:	3301      	adds	r3, #1
 8014074:	930c      	str	r3, [sp, #48]	; 0x30
 8014076:	e9dd 4508 	ldrd	r4, r5, [sp, #32]
 801407a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801407c:	2d00      	cmp	r5, #0
 801407e:	d0df      	beq.n	8014040 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x58>
 8014080:	882a      	ldrh	r2, [r5, #0]
 8014082:	2a00      	cmp	r2, #0
 8014084:	d1e0      	bne.n	8014048 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x60>
 8014086:	882a      	ldrh	r2, [r5, #0]
 8014088:	2a00      	cmp	r2, #0
 801408a:	d0c4      	beq.n	8014016 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 801408c:	4299      	cmp	r1, r3
 801408e:	ddc2      	ble.n	8014016 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8014090:	2300      	movs	r3, #0
 8014092:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8014096:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801409a:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801409e:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 80140a2:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 80140a6:	930d      	str	r3, [sp, #52]	; 0x34
 80140a8:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 80140ac:	930e      	str	r3, [sp, #56]	; 0x38
 80140ae:	b10d      	cbz	r5, 80140b4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xcc>
 80140b0:	1cab      	adds	r3, r5, #2
 80140b2:	9309      	str	r3, [sp, #36]	; 0x24
 80140b4:	b10c      	cbz	r4, 80140ba <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xd2>
 80140b6:	1c63      	adds	r3, r4, #1
 80140b8:	9308      	str	r3, [sp, #32]
 80140ba:	ab0e      	add	r3, sp, #56	; 0x38
 80140bc:	9305      	str	r3, [sp, #20]
 80140be:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 80140c2:	9304      	str	r3, [sp, #16]
 80140c4:	ab0d      	add	r3, sp, #52	; 0x34
 80140c6:	9303      	str	r3, [sp, #12]
 80140c8:	ab0b      	add	r3, sp, #44	; 0x2c
 80140ca:	9302      	str	r3, [sp, #8]
 80140cc:	f10d 032b 	add.w	r3, sp, #43	; 0x2b
 80140d0:	9301      	str	r3, [sp, #4]
 80140d2:	f10d 032a 	add.w	r3, sp, #42	; 0x2a
 80140d6:	9300      	str	r3, [sp, #0]
 80140d8:	f10d 022e 	add.w	r2, sp, #46	; 0x2e
 80140dc:	f10d 0329 	add.w	r3, sp, #41	; 0x29
 80140e0:	a908      	add	r1, sp, #32
 80140e2:	a809      	add	r0, sp, #36	; 0x24
 80140e4:	f7ff fd2f 	bl	8013b46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 80140e8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80140ea:	2b00      	cmp	r3, #0
 80140ec:	da0b      	bge.n	8014106 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x11e>
 80140ee:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 80140f2:	edd3 7a00 	vldr	s15, [r3]
 80140f6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80140fa:	3601      	adds	r6, #1
 80140fc:	ee17 3a90 	vmov	r3, s15
 8014100:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014104:	930d      	str	r3, [sp, #52]	; 0x34
 8014106:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014108:	2b00      	cmp	r3, #0
 801410a:	da0b      	bge.n	8014124 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x13c>
 801410c:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 8014110:	edd3 7a00 	vldr	s15, [r3]
 8014114:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8014118:	3601      	adds	r6, #1
 801411a:	ee17 3a90 	vmov	r3, s15
 801411e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014122:	930e      	str	r3, [sp, #56]	; 0x38
 8014124:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014126:	b1a3      	cbz	r3, 8014152 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x16a>
 8014128:	881a      	ldrh	r2, [r3, #0]
 801412a:	2a25      	cmp	r2, #37	; 0x25
 801412c:	d016      	beq.n	801415c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x174>
 801412e:	2a66      	cmp	r2, #102	; 0x66
 8014130:	d01a      	beq.n	8014168 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 8014132:	e9cd 4508 	strd	r4, r5, [sp, #32]
 8014136:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014138:	2d00      	cmp	r5, #0
 801413a:	f000 80fe 	beq.w	801433a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x352>
 801413e:	882c      	ldrh	r4, [r5, #0]
 8014140:	f827 4013 	strh.w	r4, [r7, r3, lsl #1]
 8014144:	3301      	adds	r3, #1
 8014146:	e00d      	b.n	8014164 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17c>
 8014148:	b10c      	cbz	r4, 801414e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x166>
 801414a:	7822      	ldrb	r2, [r4, #0]
 801414c:	e789      	b.n	8014062 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7a>
 801414e:	4622      	mov	r2, r4
 8014150:	e787      	b.n	8014062 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7a>
 8014152:	9b08      	ldr	r3, [sp, #32]
 8014154:	2b00      	cmp	r3, #0
 8014156:	d0ec      	beq.n	8014132 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x14a>
 8014158:	781a      	ldrb	r2, [r3, #0]
 801415a:	e7e6      	b.n	801412a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x142>
 801415c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801415e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8014162:	3302      	adds	r3, #2
 8014164:	930c      	str	r3, [sp, #48]	; 0x30
 8014166:	e042      	b.n	80141ee <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x206>
 8014168:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 801416c:	edd3 7a00 	vldr	s15, [r3]
 8014170:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 8014174:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
 8014178:	3601      	adds	r6, #1
 801417a:	b923      	cbnz	r3, 8014186 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19e>
 801417c:	2301      	movs	r3, #1
 801417e:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 8014182:	2306      	movs	r3, #6
 8014184:	930e      	str	r3, [sp, #56]	; 0x38
 8014186:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801418a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801418e:	bf48      	it	mi
 8014190:	eef1 7a67 	vnegmi.f32	s15, s15
 8014194:	eeb0 7ae7 	vabs.f32	s14, s15
 8014198:	bf48      	it	mi
 801419a:	232d      	movmi	r3, #45	; 0x2d
 801419c:	eeb4 7a65 	vcmp.f32	s14, s11
 80141a0:	bf48      	it	mi
 80141a2:	f8ad 302e 	strhmi.w	r3, [sp, #46]	; 0x2e
 80141a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80141aa:	dd2b      	ble.n	8014204 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21c>
 80141ac:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 80141b0:	2366      	movs	r3, #102	; 0x66
 80141b2:	9311      	str	r3, [sp, #68]	; 0x44
 80141b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80141b6:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80141ba:	2b00      	cmp	r3, #0
 80141bc:	f000 80b7 	beq.w	801432e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x346>
 80141c0:	881a      	ldrh	r2, [r3, #0]
 80141c2:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 80141c6:	a80c      	add	r0, sp, #48	; 0x30
 80141c8:	9005      	str	r0, [sp, #20]
 80141ca:	f89d 0029 	ldrb.w	r0, [sp, #41]	; 0x29
 80141ce:	9004      	str	r0, [sp, #16]
 80141d0:	980d      	ldr	r0, [sp, #52]	; 0x34
 80141d2:	9003      	str	r0, [sp, #12]
 80141d4:	f89d 002c 	ldrb.w	r0, [sp, #44]	; 0x2c
 80141d8:	9002      	str	r0, [sp, #8]
 80141da:	980e      	ldr	r0, [sp, #56]	; 0x38
 80141dc:	9001      	str	r0, [sp, #4]
 80141de:	f89d 002b 	ldrb.w	r0, [sp, #43]	; 0x2b
 80141e2:	9000      	str	r0, [sp, #0]
 80141e4:	e9cd 9706 	strd	r9, r7, [sp, #24]
 80141e8:	a80f      	add	r0, sp, #60	; 0x3c
 80141ea:	f7ff fbe9 	bl	80139c0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 80141ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80141f0:	b10b      	cbz	r3, 80141f6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x20e>
 80141f2:	3302      	adds	r3, #2
 80141f4:	9309      	str	r3, [sp, #36]	; 0x24
 80141f6:	9b08      	ldr	r3, [sp, #32]
 80141f8:	2b00      	cmp	r3, #0
 80141fa:	f43f af0c 	beq.w	8014016 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 80141fe:	3301      	adds	r3, #1
 8014200:	9308      	str	r3, [sp, #32]
 8014202:	e708      	b.n	8014016 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8014204:	eef4 7a67 	vcmp.f32	s15, s15
 8014208:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801420c:	d60b      	bvs.n	8014226 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x23e>
 801420e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8014210:	ed9f 7a24 	vldr	s14, [pc, #144]	; 80142a4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 8014214:	2300      	movs	r3, #0
 8014216:	eeb2 6a04 	vmov.f32	s12, #36	; 0x41200000  10.0
 801421a:	4283      	cmp	r3, r0
 801421c:	da07      	bge.n	801422e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x246>
 801421e:	ee87 7a06 	vdiv.f32	s14, s14, s12
 8014222:	3301      	adds	r3, #1
 8014224:	e7f9      	b.n	801421a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x232>
 8014226:	4b20      	ldr	r3, [pc, #128]	; (80142a8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c0>)
 8014228:	9310      	str	r3, [sp, #64]	; 0x40
 801422a:	236e      	movs	r3, #110	; 0x6e
 801422c:	e7c1      	b.n	80141b2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1ca>
 801422e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8014232:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014236:	eeb0 7a67 	vmov.f32	s14, s15
 801423a:	eeb4 7ac6 	vcmpe.f32	s14, s12
 801423e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014242:	da27      	bge.n	8014294 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ac>
 8014244:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8014246:	2100      	movs	r1, #0
 8014248:	eeb6 5a00 	vmov.f32	s10, #96	; 0x3f000000  0.5
 801424c:	eba9 0202 	sub.w	r2, r9, r2
 8014250:	eef4 6ac5 	vcmpe.f32	s13, s10
 8014254:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014258:	b28c      	uxth	r4, r1
 801425a:	db2a      	blt.n	80142b2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ca>
 801425c:	1a53      	subs	r3, r2, r1
 801425e:	2b00      	cmp	r3, #0
 8014260:	dd27      	ble.n	80142b2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ca>
 8014262:	2963      	cmp	r1, #99	; 0x63
 8014264:	d024      	beq.n	80142b0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 8014266:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801426a:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 801426e:	ee17 3a10 	vmov	r3, s14
 8014272:	2b09      	cmp	r3, #9
 8014274:	bfa8      	it	ge
 8014276:	2309      	movge	r3, #9
 8014278:	ee07 3a10 	vmov	s14, r3
 801427c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014280:	f103 0430 	add.w	r4, r3, #48	; 0x30
 8014284:	f828 4011 	strh.w	r4, [r8, r1, lsl #1]
 8014288:	eee7 7a66 	vfms.f32	s15, s14, s13
 801428c:	3101      	adds	r1, #1
 801428e:	eec6 6a86 	vdiv.f32	s13, s13, s12
 8014292:	e7dd      	b.n	8014250 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x268>
 8014294:	ee66 6a86 	vmul.f32	s13, s13, s12
 8014298:	ee87 7a06 	vdiv.f32	s14, s14, s12
 801429c:	e7cd      	b.n	801423a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x252>
 801429e:	bf00      	nop
 80142a0:	7f7fffff 	.word	0x7f7fffff
 80142a4:	3f000002 	.word	0x3f000002
 80142a8:	0061006e 	.word	0x0061006e
 80142ac:	006e0069 	.word	0x006e0069
 80142b0:	460c      	mov	r4, r1
 80142b2:	2a63      	cmp	r2, #99	; 0x63
 80142b4:	bfd4      	ite	le
 80142b6:	ebc4 0202 	rsble	r2, r4, r2
 80142ba:	f1c4 0263 	rsbgt	r2, r4, #99	; 0x63
 80142be:	2a00      	cmp	r2, #0
 80142c0:	dd30      	ble.n	8014324 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 80142c2:	4603      	mov	r3, r0
 80142c4:	2501      	movs	r5, #1
 80142c6:	210a      	movs	r1, #10
 80142c8:	2b00      	cmp	r3, #0
 80142ca:	dd0d      	ble.n	80142e8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x300>
 80142cc:	ee67 7a86 	vmul.f32	s15, s15, s12
 80142d0:	3b01      	subs	r3, #1
 80142d2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80142d6:	ee17 ca10 	vmov	ip, s14
 80142da:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80142de:	fb01 c505 	mla	r5, r1, r5, ip
 80142e2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80142e6:	e7ef      	b.n	80142c8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e0>
 80142e8:	2800      	cmp	r0, #0
 80142ea:	f100 33ff 	add.w	r3, r0, #4294967295
 80142ee:	bfac      	ite	ge
 80142f0:	1a18      	subge	r0, r3, r0
 80142f2:	4618      	movlt	r0, r3
 80142f4:	0064      	lsls	r4, r4, #1
 80142f6:	900e      	str	r0, [sp, #56]	; 0x38
 80142f8:	230a      	movs	r3, #10
 80142fa:	b292      	uxth	r2, r2
 80142fc:	eb08 0104 	add.w	r1, r8, r4
 8014300:	4628      	mov	r0, r5
 8014302:	f7ff fb2b 	bl	801395c <_ZN8touchgfx7Unicode4itoaElPtti>
 8014306:	2d01      	cmp	r5, #1
 8014308:	dc0a      	bgt.n	8014320 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x338>
 801430a:	f89d 302a 	ldrb.w	r3, [sp, #42]	; 0x2a
 801430e:	2b00      	cmp	r3, #0
 8014310:	bf0c      	ite	eq
 8014312:	2300      	moveq	r3, #0
 8014314:	232e      	movne	r3, #46	; 0x2e
 8014316:	aa42      	add	r2, sp, #264	; 0x108
 8014318:	4414      	add	r4, r2
 801431a:	f824 3cc8 	strh.w	r3, [r4, #-200]
 801431e:	e749      	b.n	80141b4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1cc>
 8014320:	232e      	movs	r3, #46	; 0x2e
 8014322:	e7f8      	b.n	8014316 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x32e>
 8014324:	ab42      	add	r3, sp, #264	; 0x108
 8014326:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 801432a:	2300      	movs	r3, #0
 801432c:	e7f5      	b.n	801431a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x332>
 801432e:	9a08      	ldr	r2, [sp, #32]
 8014330:	2a00      	cmp	r2, #0
 8014332:	f43f af46 	beq.w	80141c2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1da>
 8014336:	7812      	ldrb	r2, [r2, #0]
 8014338:	e743      	b.n	80141c2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1da>
 801433a:	2c00      	cmp	r4, #0
 801433c:	f43f af00 	beq.w	8014140 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 8014340:	7824      	ldrb	r4, [r4, #0]
 8014342:	e6fd      	b.n	8014140 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>

08014344 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 8014344:	b507      	push	{r0, r1, r2, lr}
 8014346:	9300      	str	r3, [sp, #0]
 8014348:	4613      	mov	r3, r2
 801434a:	2200      	movs	r2, #0
 801434c:	f7ff fe4c 	bl	8013fe8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 8014350:	b003      	add	sp, #12
 8014352:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08014358 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8014358:	4b01      	ldr	r3, [pc, #4]	; (8014360 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801435a:	6018      	str	r0, [r3, #0]
 801435c:	4770      	bx	lr
 801435e:	bf00      	nop
 8014360:	20015614 	.word	0x20015614

08014364 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8014364:	4b06      	ldr	r3, [pc, #24]	; (8014380 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8014366:	881a      	ldrh	r2, [r3, #0]
 8014368:	4282      	cmp	r2, r0
 801436a:	d807      	bhi.n	801437c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 801436c:	4b05      	ldr	r3, [pc, #20]	; (8014384 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801436e:	881b      	ldrh	r3, [r3, #0]
 8014370:	4413      	add	r3, r2
 8014372:	4298      	cmp	r0, r3
 8014374:	bfac      	ite	ge
 8014376:	2000      	movge	r0, #0
 8014378:	2001      	movlt	r0, #1
 801437a:	4770      	bx	lr
 801437c:	2000      	movs	r0, #0
 801437e:	4770      	bx	lr
 8014380:	20015634 	.word	0x20015634
 8014384:	20015638 	.word	0x20015638

08014388 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8014388:	b508      	push	{r3, lr}
 801438a:	4601      	mov	r1, r0
 801438c:	f7ff ffea 	bl	8014364 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8014390:	b118      	cbz	r0, 801439a <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8014392:	4b02      	ldr	r3, [pc, #8]	; (801439c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8014394:	681b      	ldr	r3, [r3, #0]
 8014396:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801439a:	bd08      	pop	{r3, pc}
 801439c:	20015618 	.word	0x20015618

080143a0 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 80143a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80143a2:	4c24      	ldr	r4, [pc, #144]	; (8014434 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 80143a4:	6823      	ldr	r3, [r4, #0]
 80143a6:	2b00      	cmp	r3, #0
 80143a8:	d042      	beq.n	8014430 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80143aa:	4a23      	ldr	r2, [pc, #140]	; (8014438 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 80143ac:	4d23      	ldr	r5, [pc, #140]	; (801443c <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 80143ae:	8811      	ldrh	r1, [r2, #0]
 80143b0:	f8b5 c000 	ldrh.w	ip, [r5]
 80143b4:	4822      	ldr	r0, [pc, #136]	; (8014440 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 80143b6:	4461      	add	r1, ip
 80143b8:	1c4a      	adds	r2, r1, #1
 80143ba:	f022 0201 	bic.w	r2, r2, #1
 80143be:	008f      	lsls	r7, r1, #2
 80143c0:	0412      	lsls	r2, r2, #16
 80143c2:	19de      	adds	r6, r3, r7
 80143c4:	0c12      	lsrs	r2, r2, #16
 80143c6:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 80143ca:	6006      	str	r6, [r0, #0]
 80143cc:	4e1d      	ldr	r6, [pc, #116]	; (8014444 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 80143ce:	19da      	adds	r2, r3, r7
 80143d0:	6032      	str	r2, [r6, #0]
 80143d2:	220e      	movs	r2, #14
 80143d4:	fb02 f20c 	mul.w	r2, r2, ip
 80143d8:	3203      	adds	r2, #3
 80143da:	f022 0203 	bic.w	r2, r2, #3
 80143de:	443a      	add	r2, r7
 80143e0:	4f19      	ldr	r7, [pc, #100]	; (8014448 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 80143e2:	4413      	add	r3, r2
 80143e4:	603b      	str	r3, [r7, #0]
 80143e6:	4f19      	ldr	r7, [pc, #100]	; (801444c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 80143e8:	2300      	movs	r3, #0
 80143ea:	803b      	strh	r3, [r7, #0]
 80143ec:	4f18      	ldr	r7, [pc, #96]	; (8014450 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 80143ee:	683f      	ldr	r7, [r7, #0]
 80143f0:	1aba      	subs	r2, r7, r2
 80143f2:	4f18      	ldr	r7, [pc, #96]	; (8014454 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 80143f4:	603a      	str	r2, [r7, #0]
 80143f6:	4a18      	ldr	r2, [pc, #96]	; (8014458 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 80143f8:	469c      	mov	ip, r3
 80143fa:	8013      	strh	r3, [r2, #0]
 80143fc:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8014400:	428b      	cmp	r3, r1
 8014402:	d10d      	bne.n	8014420 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8014404:	882d      	ldrh	r5, [r5, #0]
 8014406:	6830      	ldr	r0, [r6, #0]
 8014408:	2300      	movs	r3, #0
 801440a:	240e      	movs	r4, #14
 801440c:	429d      	cmp	r5, r3
 801440e:	d90f      	bls.n	8014430 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8014410:	fb04 0203 	mla	r2, r4, r3, r0
 8014414:	3301      	adds	r3, #1
 8014416:	7b11      	ldrb	r1, [r2, #12]
 8014418:	f36f 1145 	bfc	r1, #5, #1
 801441c:	7311      	strb	r1, [r2, #12]
 801441e:	e7f5      	b.n	801440c <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8014420:	6822      	ldr	r2, [r4, #0]
 8014422:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8014426:	6802      	ldr	r2, [r0, #0]
 8014428:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 801442c:	3301      	adds	r3, #1
 801442e:	e7e7      	b.n	8014400 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8014430:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014432:	bf00      	nop
 8014434:	20015618 	.word	0x20015618
 8014438:	20015634 	.word	0x20015634
 801443c:	20015638 	.word	0x20015638
 8014440:	2001562c 	.word	0x2001562c
 8014444:	2001561c 	.word	0x2001561c
 8014448:	20015624 	.word	0x20015624
 801444c:	20015636 	.word	0x20015636
 8014450:	20015620 	.word	0x20015620
 8014454:	20015630 	.word	0x20015630
 8014458:	20015628 	.word	0x20015628

0801445c <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 801445c:	4b06      	ldr	r3, [pc, #24]	; (8014478 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801445e:	681b      	ldr	r3, [r3, #0]
 8014460:	b943      	cbnz	r3, 8014474 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8014462:	b139      	cbz	r1, 8014474 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8014464:	4b05      	ldr	r3, [pc, #20]	; (801447c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8014466:	801a      	strh	r2, [r3, #0]
 8014468:	4b05      	ldr	r3, [pc, #20]	; (8014480 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801446a:	6019      	str	r1, [r3, #0]
 801446c:	4b05      	ldr	r3, [pc, #20]	; (8014484 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801446e:	6018      	str	r0, [r3, #0]
 8014470:	f7ff bf96 	b.w	80143a0 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8014474:	4770      	bx	lr
 8014476:	bf00      	nop
 8014478:	20015624 	.word	0x20015624
 801447c:	20015638 	.word	0x20015638
 8014480:	20015620 	.word	0x20015620
 8014484:	20015618 	.word	0x20015618

08014488 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8014488:	b470      	push	{r4, r5, r6}
 801448a:	4c07      	ldr	r4, [pc, #28]	; (80144a8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 801448c:	6826      	ldr	r6, [r4, #0]
 801448e:	4605      	mov	r5, r0
 8014490:	4610      	mov	r0, r2
 8014492:	9a03      	ldr	r2, [sp, #12]
 8014494:	b936      	cbnz	r6, 80144a4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8014496:	6025      	str	r5, [r4, #0]
 8014498:	4c04      	ldr	r4, [pc, #16]	; (80144ac <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801449a:	8021      	strh	r1, [r4, #0]
 801449c:	bc70      	pop	{r4, r5, r6}
 801449e:	4619      	mov	r1, r3
 80144a0:	f7ff bfdc 	b.w	801445c <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 80144a4:	bc70      	pop	{r4, r5, r6}
 80144a6:	4770      	bx	lr
 80144a8:	2001563c 	.word	0x2001563c
 80144ac:	20015634 	.word	0x20015634

080144b0 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 80144b0:	4a12      	ldr	r2, [pc, #72]	; (80144fc <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 80144b2:	8803      	ldrh	r3, [r0, #0]
 80144b4:	8812      	ldrh	r2, [r2, #0]
 80144b6:	4293      	cmp	r3, r2
 80144b8:	d207      	bcs.n	80144ca <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 80144ba:	4a11      	ldr	r2, [pc, #68]	; (8014500 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 80144bc:	6812      	ldr	r2, [r2, #0]
 80144be:	2114      	movs	r1, #20
 80144c0:	fb01 2303 	mla	r3, r1, r3, r2
 80144c4:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80144c8:	4770      	bx	lr
 80144ca:	490e      	ldr	r1, [pc, #56]	; (8014504 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 80144cc:	8809      	ldrh	r1, [r1, #0]
 80144ce:	4411      	add	r1, r2
 80144d0:	428b      	cmp	r3, r1
 80144d2:	da04      	bge.n	80144de <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 80144d4:	1a9b      	subs	r3, r3, r2
 80144d6:	4a0c      	ldr	r2, [pc, #48]	; (8014508 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 80144d8:	210e      	movs	r1, #14
 80144da:	6812      	ldr	r2, [r2, #0]
 80144dc:	e7f0      	b.n	80144c0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 80144de:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80144e2:	4293      	cmp	r3, r2
 80144e4:	d108      	bne.n	80144f8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 80144e6:	4b09      	ldr	r3, [pc, #36]	; (801450c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 80144e8:	781b      	ldrb	r3, [r3, #0]
 80144ea:	b91b      	cbnz	r3, 80144f4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 80144ec:	4b08      	ldr	r3, [pc, #32]	; (8014510 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 80144ee:	f9b3 0000 	ldrsh.w	r0, [r3]
 80144f2:	4770      	bx	lr
 80144f4:	4b07      	ldr	r3, [pc, #28]	; (8014514 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 80144f6:	e7fa      	b.n	80144ee <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 80144f8:	2000      	movs	r0, #0
 80144fa:	4770      	bx	lr
 80144fc:	20015634 	.word	0x20015634
 8014500:	2001563c 	.word	0x2001563c
 8014504:	20015638 	.word	0x20015638
 8014508:	2001561c 	.word	0x2001561c
 801450c:	200155a4 	.word	0x200155a4
 8014510:	200155a6 	.word	0x200155a6
 8014514:	200155a8 	.word	0x200155a8

08014518 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8014518:	4a12      	ldr	r2, [pc, #72]	; (8014564 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801451a:	8803      	ldrh	r3, [r0, #0]
 801451c:	8812      	ldrh	r2, [r2, #0]
 801451e:	4293      	cmp	r3, r2
 8014520:	d207      	bcs.n	8014532 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8014522:	4a11      	ldr	r2, [pc, #68]	; (8014568 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8014524:	6812      	ldr	r2, [r2, #0]
 8014526:	2114      	movs	r1, #20
 8014528:	fb01 2303 	mla	r3, r1, r3, r2
 801452c:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8014530:	4770      	bx	lr
 8014532:	490e      	ldr	r1, [pc, #56]	; (801456c <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8014534:	8809      	ldrh	r1, [r1, #0]
 8014536:	4411      	add	r1, r2
 8014538:	428b      	cmp	r3, r1
 801453a:	da04      	bge.n	8014546 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 801453c:	1a9b      	subs	r3, r3, r2
 801453e:	4a0c      	ldr	r2, [pc, #48]	; (8014570 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8014540:	210e      	movs	r1, #14
 8014542:	6812      	ldr	r2, [r2, #0]
 8014544:	e7f0      	b.n	8014528 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8014546:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801454a:	4293      	cmp	r3, r2
 801454c:	d108      	bne.n	8014560 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801454e:	4b09      	ldr	r3, [pc, #36]	; (8014574 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8014550:	781b      	ldrb	r3, [r3, #0]
 8014552:	b91b      	cbnz	r3, 801455c <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8014554:	4b08      	ldr	r3, [pc, #32]	; (8014578 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8014556:	f9b3 0000 	ldrsh.w	r0, [r3]
 801455a:	4770      	bx	lr
 801455c:	4b07      	ldr	r3, [pc, #28]	; (801457c <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801455e:	e7fa      	b.n	8014556 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8014560:	2000      	movs	r0, #0
 8014562:	4770      	bx	lr
 8014564:	20015634 	.word	0x20015634
 8014568:	2001563c 	.word	0x2001563c
 801456c:	20015638 	.word	0x20015638
 8014570:	2001561c 	.word	0x2001561c
 8014574:	200155a4 	.word	0x200155a4
 8014578:	200155a8 	.word	0x200155a8
 801457c:	200155a6 	.word	0x200155a6

08014580 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8014580:	b510      	push	{r4, lr}
 8014582:	4a1f      	ldr	r2, [pc, #124]	; (8014600 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8014584:	880b      	ldrh	r3, [r1, #0]
 8014586:	8812      	ldrh	r2, [r2, #0]
 8014588:	4293      	cmp	r3, r2
 801458a:	d213      	bcs.n	80145b4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 801458c:	4a1d      	ldr	r2, [pc, #116]	; (8014604 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 801458e:	6812      	ldr	r2, [r2, #0]
 8014590:	2114      	movs	r1, #20
 8014592:	fb01 2303 	mla	r3, r1, r3, r2
 8014596:	8a1a      	ldrh	r2, [r3, #16]
 8014598:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 801459c:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 80145a0:	8a5b      	ldrh	r3, [r3, #18]
 80145a2:	8004      	strh	r4, [r0, #0]
 80145a4:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80145a8:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80145ac:	8041      	strh	r1, [r0, #2]
 80145ae:	8082      	strh	r2, [r0, #4]
 80145b0:	80c3      	strh	r3, [r0, #6]
 80145b2:	e00e      	b.n	80145d2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 80145b4:	4914      	ldr	r1, [pc, #80]	; (8014608 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 80145b6:	8809      	ldrh	r1, [r1, #0]
 80145b8:	4411      	add	r1, r2
 80145ba:	428b      	cmp	r3, r1
 80145bc:	da0a      	bge.n	80145d4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 80145be:	1a9b      	subs	r3, r3, r2
 80145c0:	4a12      	ldr	r2, [pc, #72]	; (801460c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 80145c2:	6812      	ldr	r2, [r2, #0]
 80145c4:	210e      	movs	r1, #14
 80145c6:	fb01 2303 	mla	r3, r1, r3, r2
 80145ca:	681a      	ldr	r2, [r3, #0]
 80145cc:	6002      	str	r2, [r0, #0]
 80145ce:	685a      	ldr	r2, [r3, #4]
 80145d0:	6042      	str	r2, [r0, #4]
 80145d2:	bd10      	pop	{r4, pc}
 80145d4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80145d8:	4293      	cmp	r3, r2
 80145da:	d10b      	bne.n	80145f4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 80145dc:	4b0c      	ldr	r3, [pc, #48]	; (8014610 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 80145de:	f9b3 1000 	ldrsh.w	r1, [r3]
 80145e2:	4b0c      	ldr	r3, [pc, #48]	; (8014614 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 80145e4:	8081      	strh	r1, [r0, #4]
 80145e6:	f9b3 2000 	ldrsh.w	r2, [r3]
 80145ea:	80c2      	strh	r2, [r0, #6]
 80145ec:	2300      	movs	r3, #0
 80145ee:	8003      	strh	r3, [r0, #0]
 80145f0:	8043      	strh	r3, [r0, #2]
 80145f2:	e7ee      	b.n	80145d2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 80145f4:	2300      	movs	r3, #0
 80145f6:	8003      	strh	r3, [r0, #0]
 80145f8:	8043      	strh	r3, [r0, #2]
 80145fa:	8083      	strh	r3, [r0, #4]
 80145fc:	e7d8      	b.n	80145b0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 80145fe:	bf00      	nop
 8014600:	20015634 	.word	0x20015634
 8014604:	2001563c 	.word	0x2001563c
 8014608:	20015638 	.word	0x20015638
 801460c:	2001561c 	.word	0x2001561c
 8014610:	200155a0 	.word	0x200155a0
 8014614:	200155a2 	.word	0x200155a2

08014618 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8014618:	4a17      	ldr	r2, [pc, #92]	; (8014678 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801461a:	8803      	ldrh	r3, [r0, #0]
 801461c:	8812      	ldrh	r2, [r2, #0]
 801461e:	4293      	cmp	r3, r2
 8014620:	d213      	bcs.n	801464a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8014622:	4a16      	ldr	r2, [pc, #88]	; (801467c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8014624:	6812      	ldr	r2, [r2, #0]
 8014626:	2114      	movs	r1, #20
 8014628:	fb01 2303 	mla	r3, r1, r3, r2
 801462c:	8a1a      	ldrh	r2, [r3, #16]
 801462e:	8919      	ldrh	r1, [r3, #8]
 8014630:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8014634:	428a      	cmp	r2, r1
 8014636:	db1d      	blt.n	8014674 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8014638:	8a58      	ldrh	r0, [r3, #18]
 801463a:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801463e:	895b      	ldrh	r3, [r3, #10]
 8014640:	4298      	cmp	r0, r3
 8014642:	bfac      	ite	ge
 8014644:	2000      	movge	r0, #0
 8014646:	2001      	movlt	r0, #1
 8014648:	4770      	bx	lr
 801464a:	490d      	ldr	r1, [pc, #52]	; (8014680 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801464c:	8809      	ldrh	r1, [r1, #0]
 801464e:	4411      	add	r1, r2
 8014650:	428b      	cmp	r3, r1
 8014652:	da0d      	bge.n	8014670 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8014654:	1a9b      	subs	r3, r3, r2
 8014656:	4a0b      	ldr	r2, [pc, #44]	; (8014684 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8014658:	6812      	ldr	r2, [r2, #0]
 801465a:	210e      	movs	r1, #14
 801465c:	fb01 2303 	mla	r3, r1, r3, r2
 8014660:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8014664:	891a      	ldrh	r2, [r3, #8]
 8014666:	4291      	cmp	r1, r2
 8014668:	db04      	blt.n	8014674 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801466a:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801466e:	e7e6      	b.n	801463e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8014670:	2000      	movs	r0, #0
 8014672:	4770      	bx	lr
 8014674:	2001      	movs	r0, #1
 8014676:	4770      	bx	lr
 8014678:	20015634 	.word	0x20015634
 801467c:	2001563c 	.word	0x2001563c
 8014680:	20015638 	.word	0x20015638
 8014684:	2001561c 	.word	0x2001561c

08014688 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8014688:	4a12      	ldr	r2, [pc, #72]	; (80146d4 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801468a:	8803      	ldrh	r3, [r0, #0]
 801468c:	8811      	ldrh	r1, [r2, #0]
 801468e:	428b      	cmp	r3, r1
 8014690:	d20b      	bcs.n	80146aa <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8014692:	4a11      	ldr	r2, [pc, #68]	; (80146d8 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8014694:	6812      	ldr	r2, [r2, #0]
 8014696:	b112      	cbz	r2, 801469e <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8014698:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801469c:	b9c0      	cbnz	r0, 80146d0 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801469e:	4a0f      	ldr	r2, [pc, #60]	; (80146dc <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 80146a0:	6811      	ldr	r1, [r2, #0]
 80146a2:	2214      	movs	r2, #20
 80146a4:	4353      	muls	r3, r2
 80146a6:	58c8      	ldr	r0, [r1, r3]
 80146a8:	4770      	bx	lr
 80146aa:	4a0d      	ldr	r2, [pc, #52]	; (80146e0 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 80146ac:	8812      	ldrh	r2, [r2, #0]
 80146ae:	440a      	add	r2, r1
 80146b0:	4293      	cmp	r3, r2
 80146b2:	da04      	bge.n	80146be <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 80146b4:	4a08      	ldr	r2, [pc, #32]	; (80146d8 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80146b6:	6812      	ldr	r2, [r2, #0]
 80146b8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80146bc:	4770      	bx	lr
 80146be:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80146c2:	4293      	cmp	r3, r2
 80146c4:	d103      	bne.n	80146ce <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 80146c6:	4b07      	ldr	r3, [pc, #28]	; (80146e4 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 80146c8:	681b      	ldr	r3, [r3, #0]
 80146ca:	6c58      	ldr	r0, [r3, #68]	; 0x44
 80146cc:	4770      	bx	lr
 80146ce:	2000      	movs	r0, #0
 80146d0:	4770      	bx	lr
 80146d2:	bf00      	nop
 80146d4:	20015634 	.word	0x20015634
 80146d8:	20015618 	.word	0x20015618
 80146dc:	2001563c 	.word	0x2001563c
 80146e0:	20015638 	.word	0x20015638
 80146e4:	200155ac 	.word	0x200155ac

080146e8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 80146e8:	4b24      	ldr	r3, [pc, #144]	; (801477c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 80146ea:	8802      	ldrh	r2, [r0, #0]
 80146ec:	8818      	ldrh	r0, [r3, #0]
 80146ee:	4282      	cmp	r2, r0
 80146f0:	d221      	bcs.n	8014736 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 80146f2:	4b23      	ldr	r3, [pc, #140]	; (8014780 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 80146f4:	6819      	ldr	r1, [r3, #0]
 80146f6:	2314      	movs	r3, #20
 80146f8:	fb03 1302 	mla	r3, r3, r2, r1
 80146fc:	6858      	ldr	r0, [r3, #4]
 80146fe:	2800      	cmp	r0, #0
 8014700:	d03a      	beq.n	8014778 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8014702:	4920      	ldr	r1, [pc, #128]	; (8014784 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8014704:	6809      	ldr	r1, [r1, #0]
 8014706:	2900      	cmp	r1, #0
 8014708:	d036      	beq.n	8014778 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801470a:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801470e:	2900      	cmp	r1, #0
 8014710:	d032      	beq.n	8014778 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8014712:	891a      	ldrh	r2, [r3, #8]
 8014714:	8958      	ldrh	r0, [r3, #10]
 8014716:	4350      	muls	r0, r2
 8014718:	7c5a      	ldrb	r2, [r3, #17]
 801471a:	7cdb      	ldrb	r3, [r3, #19]
 801471c:	0952      	lsrs	r2, r2, #5
 801471e:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8014722:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8014726:	2b0b      	cmp	r3, #11
 8014728:	bf18      	it	ne
 801472a:	0040      	lslne	r0, r0, #1
 801472c:	3003      	adds	r0, #3
 801472e:	f020 0003 	bic.w	r0, r0, #3
 8014732:	4408      	add	r0, r1
 8014734:	4770      	bx	lr
 8014736:	4b14      	ldr	r3, [pc, #80]	; (8014788 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8014738:	881b      	ldrh	r3, [r3, #0]
 801473a:	4403      	add	r3, r0
 801473c:	429a      	cmp	r2, r3
 801473e:	da1a      	bge.n	8014776 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8014740:	4b12      	ldr	r3, [pc, #72]	; (801478c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8014742:	681b      	ldr	r3, [r3, #0]
 8014744:	1a10      	subs	r0, r2, r0
 8014746:	210e      	movs	r1, #14
 8014748:	fb01 3000 	mla	r0, r1, r0, r3
 801474c:	7b03      	ldrb	r3, [r0, #12]
 801474e:	f003 031f 	and.w	r3, r3, #31
 8014752:	2b0b      	cmp	r3, #11
 8014754:	d10b      	bne.n	801476e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8014756:	8903      	ldrh	r3, [r0, #8]
 8014758:	8940      	ldrh	r0, [r0, #10]
 801475a:	4358      	muls	r0, r3
 801475c:	4b09      	ldr	r3, [pc, #36]	; (8014784 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801475e:	6819      	ldr	r1, [r3, #0]
 8014760:	3003      	adds	r0, #3
 8014762:	f020 0303 	bic.w	r3, r0, #3
 8014766:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801476a:	4418      	add	r0, r3
 801476c:	4770      	bx	lr
 801476e:	2b0d      	cmp	r3, #13
 8014770:	d101      	bne.n	8014776 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8014772:	300d      	adds	r0, #13
 8014774:	4770      	bx	lr
 8014776:	2000      	movs	r0, #0
 8014778:	4770      	bx	lr
 801477a:	bf00      	nop
 801477c:	20015634 	.word	0x20015634
 8014780:	2001563c 	.word	0x2001563c
 8014784:	20015618 	.word	0x20015618
 8014788:	20015638 	.word	0x20015638
 801478c:	2001561c 	.word	0x2001561c

08014790 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8014790:	b510      	push	{r4, lr}
 8014792:	4a17      	ldr	r2, [pc, #92]	; (80147f0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8014794:	8803      	ldrh	r3, [r0, #0]
 8014796:	8812      	ldrh	r2, [r2, #0]
 8014798:	4293      	cmp	r3, r2
 801479a:	d20c      	bcs.n	80147b6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 801479c:	4a15      	ldr	r2, [pc, #84]	; (80147f4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 801479e:	6812      	ldr	r2, [r2, #0]
 80147a0:	2114      	movs	r1, #20
 80147a2:	fb01 2303 	mla	r3, r1, r3, r2
 80147a6:	7c58      	ldrb	r0, [r3, #17]
 80147a8:	0942      	lsrs	r2, r0, #5
 80147aa:	7cd8      	ldrb	r0, [r3, #19]
 80147ac:	f3c0 1042 	ubfx	r0, r0, #5, #3
 80147b0:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 80147b4:	bd10      	pop	{r4, pc}
 80147b6:	4910      	ldr	r1, [pc, #64]	; (80147f8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 80147b8:	8809      	ldrh	r1, [r1, #0]
 80147ba:	4411      	add	r1, r2
 80147bc:	428b      	cmp	r3, r1
 80147be:	da09      	bge.n	80147d4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 80147c0:	1a9b      	subs	r3, r3, r2
 80147c2:	4a0e      	ldr	r2, [pc, #56]	; (80147fc <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 80147c4:	6812      	ldr	r2, [r2, #0]
 80147c6:	210e      	movs	r1, #14
 80147c8:	fb01 2303 	mla	r3, r1, r3, r2
 80147cc:	7b18      	ldrb	r0, [r3, #12]
 80147ce:	f000 001f 	and.w	r0, r0, #31
 80147d2:	e7ef      	b.n	80147b4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80147d4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80147d8:	4293      	cmp	r3, r2
 80147da:	d106      	bne.n	80147ea <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 80147dc:	f7ed ff7c 	bl	80026d8 <_ZN8touchgfx3HAL3lcdEv>
 80147e0:	6803      	ldr	r3, [r0, #0]
 80147e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80147e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80147e8:	4718      	bx	r3
 80147ea:	2000      	movs	r0, #0
 80147ec:	e7e2      	b.n	80147b4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80147ee:	bf00      	nop
 80147f0:	20015634 	.word	0x20015634
 80147f4:	2001563c 	.word	0x2001563c
 80147f8:	20015638 	.word	0x20015638
 80147fc:	2001561c 	.word	0x2001561c

08014800 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8014800:	2010      	movs	r0, #16
 8014802:	4770      	bx	lr

08014804 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8014804:	2000      	movs	r0, #0
 8014806:	4770      	bx	lr

08014808 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8014808:	4b02      	ldr	r3, [pc, #8]	; (8014814 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801480a:	8818      	ldrh	r0, [r3, #0]
 801480c:	0040      	lsls	r0, r0, #1
 801480e:	b280      	uxth	r0, r0
 8014810:	4770      	bx	lr
 8014812:	bf00      	nop
 8014814:	200155a6 	.word	0x200155a6

08014818 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8014818:	2bff      	cmp	r3, #255	; 0xff
 801481a:	d050      	beq.n	80148be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801481c:	2a0b      	cmp	r2, #11
 801481e:	d04a      	beq.n	80148b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8014820:	d80e      	bhi.n	8014840 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8014822:	2a03      	cmp	r2, #3
 8014824:	d03f      	beq.n	80148a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8014826:	d804      	bhi.n	8014832 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8014828:	2a01      	cmp	r2, #1
 801482a:	d03e      	beq.n	80148aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 801482c:	d93f      	bls.n	80148ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801482e:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8014830:	4770      	bx	lr
 8014832:	2a09      	cmp	r2, #9
 8014834:	d03f      	beq.n	80148b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8014836:	d83c      	bhi.n	80148b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8014838:	2a08      	cmp	r2, #8
 801483a:	d03a      	beq.n	80148b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801483c:	2000      	movs	r0, #0
 801483e:	4770      	bx	lr
 8014840:	2a2f      	cmp	r2, #47	; 0x2f
 8014842:	d024      	beq.n	801488e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8014844:	d80d      	bhi.n	8014862 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8014846:	2a2d      	cmp	r2, #45	; 0x2d
 8014848:	d014      	beq.n	8014874 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801484a:	d826      	bhi.n	801489a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801484c:	2a2c      	cmp	r2, #44	; 0x2c
 801484e:	d1f5      	bne.n	801483c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014850:	684b      	ldr	r3, [r1, #4]
 8014852:	781b      	ldrb	r3, [r3, #0]
 8014854:	2b01      	cmp	r3, #1
 8014856:	d018      	beq.n	801488a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8014858:	d323      	bcc.n	80148a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801485a:	2b02      	cmp	r3, #2
 801485c:	d1ee      	bne.n	801483c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801485e:	6880      	ldr	r0, [r0, #8]
 8014860:	4770      	bx	lr
 8014862:	2a31      	cmp	r2, #49	; 0x31
 8014864:	d004      	beq.n	8014870 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8014866:	d328      	bcc.n	80148ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8014868:	2a32      	cmp	r2, #50	; 0x32
 801486a:	d026      	beq.n	80148ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801486c:	2a33      	cmp	r2, #51	; 0x33
 801486e:	d1e5      	bne.n	801483c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014870:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8014872:	4770      	bx	lr
 8014874:	684b      	ldr	r3, [r1, #4]
 8014876:	781b      	ldrb	r3, [r3, #0]
 8014878:	2b01      	cmp	r3, #1
 801487a:	d004      	beq.n	8014886 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 801487c:	d30b      	bcc.n	8014896 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801487e:	2b02      	cmp	r3, #2
 8014880:	d1dc      	bne.n	801483c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014882:	6900      	ldr	r0, [r0, #16]
 8014884:	4770      	bx	lr
 8014886:	6a00      	ldr	r0, [r0, #32]
 8014888:	4770      	bx	lr
 801488a:	6980      	ldr	r0, [r0, #24]
 801488c:	4770      	bx	lr
 801488e:	684b      	ldr	r3, [r1, #4]
 8014890:	781b      	ldrb	r3, [r3, #0]
 8014892:	2b00      	cmp	r3, #0
 8014894:	d1d2      	bne.n	801483c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014896:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8014898:	4770      	bx	lr
 801489a:	684b      	ldr	r3, [r1, #4]
 801489c:	781b      	ldrb	r3, [r3, #0]
 801489e:	2b00      	cmp	r3, #0
 80148a0:	d1cc      	bne.n	801483c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80148a2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80148a4:	4770      	bx	lr
 80148a6:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80148a8:	4770      	bx	lr
 80148aa:	6d00      	ldr	r0, [r0, #80]	; 0x50
 80148ac:	4770      	bx	lr
 80148ae:	6c00      	ldr	r0, [r0, #64]	; 0x40
 80148b0:	4770      	bx	lr
 80148b2:	6d80      	ldr	r0, [r0, #88]	; 0x58
 80148b4:	4770      	bx	lr
 80148b6:	6e00      	ldr	r0, [r0, #96]	; 0x60
 80148b8:	4770      	bx	lr
 80148ba:	6e80      	ldr	r0, [r0, #104]	; 0x68
 80148bc:	4770      	bx	lr
 80148be:	2a0b      	cmp	r2, #11
 80148c0:	d049      	beq.n	8014956 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80148c2:	d80e      	bhi.n	80148e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 80148c4:	2a03      	cmp	r2, #3
 80148c6:	d040      	beq.n	801494a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 80148c8:	d804      	bhi.n	80148d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 80148ca:	2a01      	cmp	r2, #1
 80148cc:	d03f      	beq.n	801494e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 80148ce:	d940      	bls.n	8014952 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 80148d0:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80148d2:	4770      	bx	lr
 80148d4:	2a09      	cmp	r2, #9
 80148d6:	d03e      	beq.n	8014956 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80148d8:	d801      	bhi.n	80148de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 80148da:	2a08      	cmp	r2, #8
 80148dc:	d1ae      	bne.n	801483c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80148de:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 80148e0:	4770      	bx	lr
 80148e2:	2a2f      	cmp	r2, #47	; 0x2f
 80148e4:	d024      	beq.n	8014930 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 80148e6:	d80d      	bhi.n	8014904 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 80148e8:	2a2d      	cmp	r2, #45	; 0x2d
 80148ea:	d014      	beq.n	8014916 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 80148ec:	d826      	bhi.n	801493c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 80148ee:	2a2c      	cmp	r2, #44	; 0x2c
 80148f0:	d1a4      	bne.n	801483c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80148f2:	684b      	ldr	r3, [r1, #4]
 80148f4:	781b      	ldrb	r3, [r3, #0]
 80148f6:	2b01      	cmp	r3, #1
 80148f8:	d018      	beq.n	801492c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 80148fa:	d324      	bcc.n	8014946 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 80148fc:	2b02      	cmp	r3, #2
 80148fe:	d19d      	bne.n	801483c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014900:	68c0      	ldr	r0, [r0, #12]
 8014902:	4770      	bx	lr
 8014904:	2a31      	cmp	r2, #49	; 0x31
 8014906:	d004      	beq.n	8014912 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8014908:	d327      	bcc.n	801495a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801490a:	2a32      	cmp	r2, #50	; 0x32
 801490c:	d025      	beq.n	801495a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801490e:	2a33      	cmp	r2, #51	; 0x33
 8014910:	d194      	bne.n	801483c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014912:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8014914:	4770      	bx	lr
 8014916:	684b      	ldr	r3, [r1, #4]
 8014918:	781b      	ldrb	r3, [r3, #0]
 801491a:	2b01      	cmp	r3, #1
 801491c:	d004      	beq.n	8014928 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801491e:	d30b      	bcc.n	8014938 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8014920:	2b02      	cmp	r3, #2
 8014922:	d18b      	bne.n	801483c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014924:	6940      	ldr	r0, [r0, #20]
 8014926:	4770      	bx	lr
 8014928:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801492a:	4770      	bx	lr
 801492c:	69c0      	ldr	r0, [r0, #28]
 801492e:	4770      	bx	lr
 8014930:	684b      	ldr	r3, [r1, #4]
 8014932:	781b      	ldrb	r3, [r3, #0]
 8014934:	2b00      	cmp	r3, #0
 8014936:	d181      	bne.n	801483c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014938:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801493a:	4770      	bx	lr
 801493c:	684b      	ldr	r3, [r1, #4]
 801493e:	781b      	ldrb	r3, [r3, #0]
 8014940:	2b00      	cmp	r3, #0
 8014942:	f47f af7b 	bne.w	801483c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014946:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8014948:	4770      	bx	lr
 801494a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 801494c:	4770      	bx	lr
 801494e:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8014950:	4770      	bx	lr
 8014952:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8014954:	4770      	bx	lr
 8014956:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8014958:	4770      	bx	lr
 801495a:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 801495c:	4770      	bx	lr

0801495e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801495e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014962:	b087      	sub	sp, #28
 8014964:	9815      	ldr	r0, [sp, #84]	; 0x54
 8014966:	9205      	str	r2, [sp, #20]
 8014968:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801496c:	9202      	str	r2, [sp, #8]
 801496e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8014972:	9101      	str	r1, [sp, #4]
 8014974:	6841      	ldr	r1, [r0, #4]
 8014976:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801497a:	fb01 2404 	mla	r4, r1, r4, r2
 801497e:	6802      	ldr	r2, [r0, #0]
 8014980:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014984:	f8de 2000 	ldr.w	r2, [lr]
 8014988:	9203      	str	r2, [sp, #12]
 801498a:	f8de 2004 	ldr.w	r2, [lr, #4]
 801498e:	3204      	adds	r2, #4
 8014990:	9204      	str	r2, [sp, #16]
 8014992:	9a02      	ldr	r2, [sp, #8]
 8014994:	43d6      	mvns	r6, r2
 8014996:	b2f6      	uxtb	r6, r6
 8014998:	9a01      	ldr	r2, [sp, #4]
 801499a:	2a00      	cmp	r2, #0
 801499c:	dc03      	bgt.n	80149a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801499e:	9a05      	ldr	r2, [sp, #20]
 80149a0:	2a00      	cmp	r2, #0
 80149a2:	f340 8129 	ble.w	8014bf8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80149a6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80149a8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80149ac:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80149b0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80149b4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80149b6:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80149ba:	2b00      	cmp	r3, #0
 80149bc:	dd0e      	ble.n	80149dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80149be:	1408      	asrs	r0, r1, #16
 80149c0:	d405      	bmi.n	80149ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80149c2:	4560      	cmp	r0, ip
 80149c4:	da03      	bge.n	80149ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80149c6:	1410      	asrs	r0, r2, #16
 80149c8:	d401      	bmi.n	80149ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80149ca:	42b8      	cmp	r0, r7
 80149cc:	db07      	blt.n	80149de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80149ce:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80149d0:	4401      	add	r1, r0
 80149d2:	9814      	ldr	r0, [sp, #80]	; 0x50
 80149d4:	3b01      	subs	r3, #1
 80149d6:	4402      	add	r2, r0
 80149d8:	3402      	adds	r4, #2
 80149da:	e7ee      	b.n	80149ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80149dc:	d071      	beq.n	8014ac2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80149de:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80149e0:	1e58      	subs	r0, r3, #1
 80149e2:	fb05 1500 	mla	r5, r5, r0, r1
 80149e6:	142d      	asrs	r5, r5, #16
 80149e8:	d45f      	bmi.n	8014aaa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80149ea:	4565      	cmp	r5, ip
 80149ec:	da5d      	bge.n	8014aaa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80149ee:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80149f0:	fb05 2000 	mla	r0, r5, r0, r2
 80149f4:	1400      	asrs	r0, r0, #16
 80149f6:	d458      	bmi.n	8014aaa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80149f8:	42b8      	cmp	r0, r7
 80149fa:	da56      	bge.n	8014aaa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80149fc:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8014a00:	4699      	mov	r9, r3
 8014a02:	46a2      	mov	sl, r4
 8014a04:	f1b9 0f00 	cmp.w	r9, #0
 8014a08:	dd57      	ble.n	8014aba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8014a0a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8014a0e:	9803      	ldr	r0, [sp, #12]
 8014a10:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8014a14:	140d      	asrs	r5, r1, #16
 8014a16:	fb07 000c 	mla	r0, r7, ip, r0
 8014a1a:	f109 39ff 	add.w	r9, r9, #4294967295
 8014a1e:	5d40      	ldrb	r0, [r0, r5]
 8014a20:	9d04      	ldr	r5, [sp, #16]
 8014a22:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8014a26:	f8ba 5000 	ldrh.w	r5, [sl]
 8014a2a:	122f      	asrs	r7, r5, #8
 8014a2c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014a30:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014a34:	fb17 f706 	smulbb	r7, r7, r6
 8014a38:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8014a3c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014a40:	00ed      	lsls	r5, r5, #3
 8014a42:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8014a46:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8014a4a:	10c7      	asrs	r7, r0, #3
 8014a4c:	b2ed      	uxtb	r5, r5
 8014a4e:	00c0      	lsls	r0, r0, #3
 8014a50:	fb18 f806 	smulbb	r8, r8, r6
 8014a54:	fb15 f506 	smulbb	r5, r5, r6
 8014a58:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014a5c:	b2c0      	uxtb	r0, r0
 8014a5e:	fa1f fc8c 	uxth.w	ip, ip
 8014a62:	fb07 870b 	mla	r7, r7, fp, r8
 8014a66:	fb00 500b 	mla	r0, r0, fp, r5
 8014a6a:	b280      	uxth	r0, r0
 8014a6c:	b2bf      	uxth	r7, r7
 8014a6e:	f10c 0501 	add.w	r5, ip, #1
 8014a72:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014a76:	f107 0801 	add.w	r8, r7, #1
 8014a7a:	1c45      	adds	r5, r0, #1
 8014a7c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014a80:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8014a84:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014a86:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014a8a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014a8e:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8014a92:	ea45 0c0c 	orr.w	ip, r5, ip
 8014a96:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8014a9a:	4401      	add	r1, r0
 8014a9c:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014a9e:	ea4c 0c08 	orr.w	ip, ip, r8
 8014aa2:	f82a cb02 	strh.w	ip, [sl], #2
 8014aa6:	4402      	add	r2, r0
 8014aa8:	e7ac      	b.n	8014a04 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8014aaa:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8014aae:	f04f 0800 	mov.w	r8, #0
 8014ab2:	eb03 0008 	add.w	r0, r3, r8
 8014ab6:	2800      	cmp	r0, #0
 8014ab8:	dc41      	bgt.n	8014b3e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8014aba:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014abe:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014ac2:	9b01      	ldr	r3, [sp, #4]
 8014ac4:	2b00      	cmp	r3, #0
 8014ac6:	f340 8097 	ble.w	8014bf8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8014aca:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014ace:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014ad2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8014ad6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014ad8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014adc:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014ae0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014ae4:	eef0 6a62 	vmov.f32	s13, s5
 8014ae8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014aec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014af0:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014af4:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8014af8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014afc:	eef0 6a43 	vmov.f32	s13, s6
 8014b00:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014b04:	ee12 2a90 	vmov	r2, s5
 8014b08:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014b0c:	fb92 f3f3 	sdiv	r3, r2, r3
 8014b10:	ee13 2a10 	vmov	r2, s6
 8014b14:	9313      	str	r3, [sp, #76]	; 0x4c
 8014b16:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014b18:	fb92 f3f3 	sdiv	r3, r2, r3
 8014b1c:	9314      	str	r3, [sp, #80]	; 0x50
 8014b1e:	9b01      	ldr	r3, [sp, #4]
 8014b20:	9a05      	ldr	r2, [sp, #20]
 8014b22:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014b26:	3b01      	subs	r3, #1
 8014b28:	9301      	str	r3, [sp, #4]
 8014b2a:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8014b2e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014b30:	eeb0 3a67 	vmov.f32	s6, s15
 8014b34:	bf08      	it	eq
 8014b36:	4613      	moveq	r3, r2
 8014b38:	eef0 2a47 	vmov.f32	s5, s14
 8014b3c:	e72c      	b.n	8014998 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8014b3e:	140f      	asrs	r7, r1, #16
 8014b40:	d453      	bmi.n	8014bea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014b42:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014b46:	42bd      	cmp	r5, r7
 8014b48:	dd4f      	ble.n	8014bea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014b4a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014b4e:	d44c      	bmi.n	8014bea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014b50:	f8de 000c 	ldr.w	r0, [lr, #12]
 8014b54:	4560      	cmp	r0, ip
 8014b56:	dd48      	ble.n	8014bea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014b58:	9803      	ldr	r0, [sp, #12]
 8014b5a:	b22d      	sxth	r5, r5
 8014b5c:	fb0c 0505 	mla	r5, ip, r5, r0
 8014b60:	5de8      	ldrb	r0, [r5, r7]
 8014b62:	9d04      	ldr	r5, [sp, #16]
 8014b64:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8014b68:	f06f 0501 	mvn.w	r5, #1
 8014b6c:	fb05 fb08 	mul.w	fp, r5, r8
 8014b70:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014b74:	f834 500b 	ldrh.w	r5, [r4, fp]
 8014b78:	122f      	asrs	r7, r5, #8
 8014b7a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014b7e:	fb17 f706 	smulbb	r7, r7, r6
 8014b82:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8014b86:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014b8a:	00ed      	lsls	r5, r5, #3
 8014b8c:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8014b90:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8014b94:	10c7      	asrs	r7, r0, #3
 8014b96:	b2ed      	uxtb	r5, r5
 8014b98:	00c0      	lsls	r0, r0, #3
 8014b9a:	fb19 f906 	smulbb	r9, r9, r6
 8014b9e:	fb15 f506 	smulbb	r5, r5, r6
 8014ba2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014ba6:	b2c0      	uxtb	r0, r0
 8014ba8:	fa1f fc8c 	uxth.w	ip, ip
 8014bac:	fb07 970a 	mla	r7, r7, sl, r9
 8014bb0:	fb00 500a 	mla	r0, r0, sl, r5
 8014bb4:	b2bf      	uxth	r7, r7
 8014bb6:	b280      	uxth	r0, r0
 8014bb8:	f10c 0501 	add.w	r5, ip, #1
 8014bbc:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014bc0:	f107 0901 	add.w	r9, r7, #1
 8014bc4:	1c45      	adds	r5, r0, #1
 8014bc6:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014bca:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8014bce:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014bd2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014bd6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8014bda:	ea45 0c0c 	orr.w	ip, r5, ip
 8014bde:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8014be2:	ea4c 0c09 	orr.w	ip, ip, r9
 8014be6:	f824 c00b 	strh.w	ip, [r4, fp]
 8014bea:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014bec:	4401      	add	r1, r0
 8014bee:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014bf0:	f108 38ff 	add.w	r8, r8, #4294967295
 8014bf4:	4402      	add	r2, r0
 8014bf6:	e75c      	b.n	8014ab2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8014bf8:	b007      	add	sp, #28
 8014bfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014bfe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014bfe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014c02:	b085      	sub	sp, #20
 8014c04:	4693      	mov	fp, r2
 8014c06:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8014c08:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8014c0a:	6870      	ldr	r0, [r6, #4]
 8014c0c:	9100      	str	r1, [sp, #0]
 8014c0e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8014c12:	fb00 2404 	mla	r4, r0, r4, r2
 8014c16:	6832      	ldr	r2, [r6, #0]
 8014c18:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014c1c:	682a      	ldr	r2, [r5, #0]
 8014c1e:	9201      	str	r2, [sp, #4]
 8014c20:	686a      	ldr	r2, [r5, #4]
 8014c22:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8014c26:	3204      	adds	r2, #4
 8014c28:	9202      	str	r2, [sp, #8]
 8014c2a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014c2e:	9a00      	ldr	r2, [sp, #0]
 8014c30:	2a00      	cmp	r2, #0
 8014c32:	dc03      	bgt.n	8014c3c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8014c34:	f1bb 0f00 	cmp.w	fp, #0
 8014c38:	f340 80a0 	ble.w	8014d7c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8014c3c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014c3e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8014c42:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8014c46:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8014c4a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014c4c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014c50:	2b00      	cmp	r3, #0
 8014c52:	dd0c      	ble.n	8014c6e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014c54:	1406      	asrs	r6, r0, #16
 8014c56:	d405      	bmi.n	8014c64 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014c58:	454e      	cmp	r6, r9
 8014c5a:	da03      	bge.n	8014c64 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014c5c:	1416      	asrs	r6, r2, #16
 8014c5e:	d401      	bmi.n	8014c64 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014c60:	4546      	cmp	r6, r8
 8014c62:	db05      	blt.n	8014c70 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014c64:	4470      	add	r0, lr
 8014c66:	4462      	add	r2, ip
 8014c68:	3b01      	subs	r3, #1
 8014c6a:	3402      	adds	r4, #2
 8014c6c:	e7f0      	b.n	8014c50 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8014c6e:	d00f      	beq.n	8014c90 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014c70:	1e5e      	subs	r6, r3, #1
 8014c72:	fb0e 0706 	mla	r7, lr, r6, r0
 8014c76:	143f      	asrs	r7, r7, #16
 8014c78:	d541      	bpl.n	8014cfe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8014c7a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8014c7e:	4698      	mov	r8, r3
 8014c80:	9603      	str	r6, [sp, #12]
 8014c82:	f1b8 0f00 	cmp.w	r8, #0
 8014c86:	dc59      	bgt.n	8014d3c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014c88:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014c8c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014c90:	9b00      	ldr	r3, [sp, #0]
 8014c92:	2b00      	cmp	r3, #0
 8014c94:	dd72      	ble.n	8014d7c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8014c96:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014c9a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014c9e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014ca2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014ca4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014ca8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014cac:	eeb0 6a62 	vmov.f32	s12, s5
 8014cb0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014cb4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014cb8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014cbc:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8014cc0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014cc4:	eeb0 6a43 	vmov.f32	s12, s6
 8014cc8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014ccc:	ee12 2a90 	vmov	r2, s5
 8014cd0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014cd4:	fb92 fef3 	sdiv	lr, r2, r3
 8014cd8:	ee13 2a10 	vmov	r2, s6
 8014cdc:	fb92 fcf3 	sdiv	ip, r2, r3
 8014ce0:	9b00      	ldr	r3, [sp, #0]
 8014ce2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014ce6:	3b01      	subs	r3, #1
 8014ce8:	9300      	str	r3, [sp, #0]
 8014cea:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8014cee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014cf0:	eeb0 3a67 	vmov.f32	s6, s15
 8014cf4:	bf08      	it	eq
 8014cf6:	465b      	moveq	r3, fp
 8014cf8:	eef0 2a47 	vmov.f32	s5, s14
 8014cfc:	e797      	b.n	8014c2e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8014cfe:	454f      	cmp	r7, r9
 8014d00:	dabb      	bge.n	8014c7a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014d02:	fb0c 2606 	mla	r6, ip, r6, r2
 8014d06:	1436      	asrs	r6, r6, #16
 8014d08:	d4b7      	bmi.n	8014c7a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014d0a:	4546      	cmp	r6, r8
 8014d0c:	dab5      	bge.n	8014c7a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014d0e:	461e      	mov	r6, r3
 8014d10:	46a0      	mov	r8, r4
 8014d12:	2e00      	cmp	r6, #0
 8014d14:	ddb8      	ble.n	8014c88 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8014d16:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8014d1a:	9901      	ldr	r1, [sp, #4]
 8014d1c:	1417      	asrs	r7, r2, #16
 8014d1e:	ea4f 4920 	mov.w	r9, r0, asr #16
 8014d22:	fb0a 1707 	mla	r7, sl, r7, r1
 8014d26:	9902      	ldr	r1, [sp, #8]
 8014d28:	f817 7009 	ldrb.w	r7, [r7, r9]
 8014d2c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8014d30:	f828 7b02 	strh.w	r7, [r8], #2
 8014d34:	4470      	add	r0, lr
 8014d36:	4462      	add	r2, ip
 8014d38:	3e01      	subs	r6, #1
 8014d3a:	e7ea      	b.n	8014d12 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8014d3c:	ea5f 4920 	movs.w	r9, r0, asr #16
 8014d40:	d417      	bmi.n	8014d72 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014d42:	68ae      	ldr	r6, [r5, #8]
 8014d44:	454e      	cmp	r6, r9
 8014d46:	dd14      	ble.n	8014d72 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014d48:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8014d4c:	d411      	bmi.n	8014d72 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014d4e:	68ef      	ldr	r7, [r5, #12]
 8014d50:	4557      	cmp	r7, sl
 8014d52:	dd0e      	ble.n	8014d72 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014d54:	9f01      	ldr	r7, [sp, #4]
 8014d56:	b236      	sxth	r6, r6
 8014d58:	fb0a 7606 	mla	r6, sl, r6, r7
 8014d5c:	9f02      	ldr	r7, [sp, #8]
 8014d5e:	f816 6009 	ldrb.w	r6, [r6, r9]
 8014d62:	f06f 0101 	mvn.w	r1, #1
 8014d66:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8014d6a:	fb01 f608 	mul.w	r6, r1, r8
 8014d6e:	9903      	ldr	r1, [sp, #12]
 8014d70:	538f      	strh	r7, [r1, r6]
 8014d72:	4470      	add	r0, lr
 8014d74:	4462      	add	r2, ip
 8014d76:	f108 38ff 	add.w	r8, r8, #4294967295
 8014d7a:	e782      	b.n	8014c82 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014d7c:	b005      	add	sp, #20
 8014d7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014d82 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014d82:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014d86:	b087      	sub	sp, #28
 8014d88:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8014d8a:	9205      	str	r2, [sp, #20]
 8014d8c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8014d90:	9203      	str	r2, [sp, #12]
 8014d92:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8014d96:	9102      	str	r1, [sp, #8]
 8014d98:	6861      	ldr	r1, [r4, #4]
 8014d9a:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8014d9e:	fb01 2000 	mla	r0, r1, r0, r2
 8014da2:	6822      	ldr	r2, [r4, #0]
 8014da4:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8014da8:	9200      	str	r2, [sp, #0]
 8014daa:	f8dc 2000 	ldr.w	r2, [ip]
 8014dae:	9204      	str	r2, [sp, #16]
 8014db0:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8014db4:	3204      	adds	r2, #4
 8014db6:	9201      	str	r2, [sp, #4]
 8014db8:	9a03      	ldr	r2, [sp, #12]
 8014dba:	43d5      	mvns	r5, r2
 8014dbc:	b2ed      	uxtb	r5, r5
 8014dbe:	9a02      	ldr	r2, [sp, #8]
 8014dc0:	2a00      	cmp	r2, #0
 8014dc2:	dc03      	bgt.n	8014dcc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8014dc4:	9a05      	ldr	r2, [sp, #20]
 8014dc6:	2a00      	cmp	r2, #0
 8014dc8:	f340 812c 	ble.w	8015024 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8014dcc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014dce:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8014dd2:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8014dd6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014dda:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014ddc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014de0:	2b00      	cmp	r3, #0
 8014de2:	dd10      	ble.n	8014e06 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014de4:	140c      	asrs	r4, r1, #16
 8014de6:	d405      	bmi.n	8014df4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014de8:	4574      	cmp	r4, lr
 8014dea:	da03      	bge.n	8014df4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014dec:	1414      	asrs	r4, r2, #16
 8014dee:	d401      	bmi.n	8014df4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014df0:	42bc      	cmp	r4, r7
 8014df2:	db09      	blt.n	8014e08 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8014df4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014df6:	9800      	ldr	r0, [sp, #0]
 8014df8:	4421      	add	r1, r4
 8014dfa:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014dfc:	3002      	adds	r0, #2
 8014dfe:	4422      	add	r2, r4
 8014e00:	3b01      	subs	r3, #1
 8014e02:	9000      	str	r0, [sp, #0]
 8014e04:	e7ec      	b.n	8014de0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8014e06:	d071      	beq.n	8014eec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8014e08:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8014e0a:	1e5c      	subs	r4, r3, #1
 8014e0c:	fb06 1604 	mla	r6, r6, r4, r1
 8014e10:	1436      	asrs	r6, r6, #16
 8014e12:	d45d      	bmi.n	8014ed0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014e14:	4576      	cmp	r6, lr
 8014e16:	da5b      	bge.n	8014ed0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014e18:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8014e1a:	fb06 2404 	mla	r4, r6, r4, r2
 8014e1e:	1424      	asrs	r4, r4, #16
 8014e20:	d456      	bmi.n	8014ed0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014e22:	42bc      	cmp	r4, r7
 8014e24:	da54      	bge.n	8014ed0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014e26:	f8dd 9000 	ldr.w	r9, [sp]
 8014e2a:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8014e2e:	4698      	mov	r8, r3
 8014e30:	f1b8 0f00 	cmp.w	r8, #0
 8014e34:	dd54      	ble.n	8014ee0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8014e36:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8014e3a:	9804      	ldr	r0, [sp, #16]
 8014e3c:	1414      	asrs	r4, r2, #16
 8014e3e:	fb07 0404 	mla	r4, r7, r4, r0
 8014e42:	140e      	asrs	r6, r1, #16
 8014e44:	9801      	ldr	r0, [sp, #4]
 8014e46:	f814 e006 	ldrb.w	lr, [r4, r6]
 8014e4a:	f8b9 4000 	ldrh.w	r4, [r9]
 8014e4e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8014e52:	eb00 0b0e 	add.w	fp, r0, lr
 8014e56:	1227      	asrs	r7, r4, #8
 8014e58:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8014e5c:	f89b b001 	ldrb.w	fp, [fp, #1]
 8014e60:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8014e64:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014e66:	fb16 f60a 	smulbb	r6, r6, sl
 8014e6a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014e6e:	fb07 6705 	mla	r7, r7, r5, r6
 8014e72:	10e6      	asrs	r6, r4, #3
 8014e74:	00e4      	lsls	r4, r4, #3
 8014e76:	b2e4      	uxtb	r4, r4
 8014e78:	fb1b fb0a 	smulbb	fp, fp, sl
 8014e7c:	fb14 f405 	smulbb	r4, r4, r5
 8014e80:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014e84:	b2bf      	uxth	r7, r7
 8014e86:	fb06 b605 	mla	r6, r6, r5, fp
 8014e8a:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8014e8e:	b2b6      	uxth	r6, r6
 8014e90:	fa1f fe8e 	uxth.w	lr, lr
 8014e94:	1c7c      	adds	r4, r7, #1
 8014e96:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8014e9a:	f106 0b01 	add.w	fp, r6, #1
 8014e9e:	f10e 0401 	add.w	r4, lr, #1
 8014ea2:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8014ea6:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8014eaa:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8014eae:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8014eb2:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8014eb6:	4327      	orrs	r7, r4
 8014eb8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8014ebc:	4401      	add	r1, r0
 8014ebe:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014ec0:	ea47 070b 	orr.w	r7, r7, fp
 8014ec4:	f829 7b02 	strh.w	r7, [r9], #2
 8014ec8:	4402      	add	r2, r0
 8014eca:	f108 38ff 	add.w	r8, r8, #4294967295
 8014ece:	e7af      	b.n	8014e30 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8014ed0:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8014ed4:	f04f 0e00 	mov.w	lr, #0
 8014ed8:	eb03 040e 	add.w	r4, r3, lr
 8014edc:	2c00      	cmp	r4, #0
 8014ede:	dc43      	bgt.n	8014f68 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8014ee0:	9a00      	ldr	r2, [sp, #0]
 8014ee2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014ee6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8014eea:	9300      	str	r3, [sp, #0]
 8014eec:	9b02      	ldr	r3, [sp, #8]
 8014eee:	2b00      	cmp	r3, #0
 8014ef0:	f340 8098 	ble.w	8015024 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8014ef4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014ef8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014efc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8014f00:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014f02:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014f06:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014f0a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014f0e:	eef0 6a62 	vmov.f32	s13, s5
 8014f12:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014f16:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014f1a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014f1e:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8014f22:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014f26:	eef0 6a43 	vmov.f32	s13, s6
 8014f2a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014f2e:	ee12 2a90 	vmov	r2, s5
 8014f32:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014f36:	fb92 f3f3 	sdiv	r3, r2, r3
 8014f3a:	ee13 2a10 	vmov	r2, s6
 8014f3e:	9313      	str	r3, [sp, #76]	; 0x4c
 8014f40:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014f42:	fb92 f3f3 	sdiv	r3, r2, r3
 8014f46:	9314      	str	r3, [sp, #80]	; 0x50
 8014f48:	9b02      	ldr	r3, [sp, #8]
 8014f4a:	9a05      	ldr	r2, [sp, #20]
 8014f4c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014f50:	3b01      	subs	r3, #1
 8014f52:	9302      	str	r3, [sp, #8]
 8014f54:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8014f58:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014f5a:	eeb0 3a67 	vmov.f32	s6, s15
 8014f5e:	bf08      	it	eq
 8014f60:	4613      	moveq	r3, r2
 8014f62:	eef0 2a47 	vmov.f32	s5, s14
 8014f66:	e72a      	b.n	8014dbe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8014f68:	140f      	asrs	r7, r1, #16
 8014f6a:	d454      	bmi.n	8015016 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014f6c:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8014f70:	42be      	cmp	r6, r7
 8014f72:	dd50      	ble.n	8015016 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014f74:	ea5f 4822 	movs.w	r8, r2, asr #16
 8014f78:	d44d      	bmi.n	8015016 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014f7a:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8014f7e:	4544      	cmp	r4, r8
 8014f80:	dd49      	ble.n	8015016 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014f82:	9c04      	ldr	r4, [sp, #16]
 8014f84:	b236      	sxth	r6, r6
 8014f86:	fb08 4606 	mla	r6, r8, r6, r4
 8014f8a:	f06f 0001 	mvn.w	r0, #1
 8014f8e:	f816 8007 	ldrb.w	r8, [r6, r7]
 8014f92:	9c01      	ldr	r4, [sp, #4]
 8014f94:	fb00 fa0e 	mul.w	sl, r0, lr
 8014f98:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8014f9c:	9800      	ldr	r0, [sp, #0]
 8014f9e:	eb04 0b08 	add.w	fp, r4, r8
 8014fa2:	f830 400a 	ldrh.w	r4, [r0, sl]
 8014fa6:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8014faa:	9801      	ldr	r0, [sp, #4]
 8014fac:	f89b b001 	ldrb.w	fp, [fp, #1]
 8014fb0:	f810 8008 	ldrb.w	r8, [r0, r8]
 8014fb4:	9800      	ldr	r0, [sp, #0]
 8014fb6:	1227      	asrs	r7, r4, #8
 8014fb8:	fb16 f609 	smulbb	r6, r6, r9
 8014fbc:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014fc0:	fb07 6705 	mla	r7, r7, r5, r6
 8014fc4:	10e6      	asrs	r6, r4, #3
 8014fc6:	00e4      	lsls	r4, r4, #3
 8014fc8:	b2e4      	uxtb	r4, r4
 8014fca:	fb1b fb09 	smulbb	fp, fp, r9
 8014fce:	fb14 f405 	smulbb	r4, r4, r5
 8014fd2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014fd6:	b2bf      	uxth	r7, r7
 8014fd8:	fb06 b605 	mla	r6, r6, r5, fp
 8014fdc:	fb08 4809 	mla	r8, r8, r9, r4
 8014fe0:	b2b6      	uxth	r6, r6
 8014fe2:	fa1f f888 	uxth.w	r8, r8
 8014fe6:	1c7c      	adds	r4, r7, #1
 8014fe8:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8014fec:	f106 0b01 	add.w	fp, r6, #1
 8014ff0:	f108 0401 	add.w	r4, r8, #1
 8014ff4:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8014ff8:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8014ffc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015000:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8015004:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8015008:	4327      	orrs	r7, r4
 801500a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801500e:	ea47 070b 	orr.w	r7, r7, fp
 8015012:	f820 700a 	strh.w	r7, [r0, sl]
 8015016:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015018:	4401      	add	r1, r0
 801501a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801501c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8015020:	4402      	add	r2, r0
 8015022:	e759      	b.n	8014ed8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8015024:	b007      	add	sp, #28
 8015026:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801502c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801502c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015030:	b085      	sub	sp, #20
 8015032:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015036:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8015038:	9203      	str	r2, [sp, #12]
 801503a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801503e:	6870      	ldr	r0, [r6, #4]
 8015040:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8015042:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8015046:	686f      	ldr	r7, [r5, #4]
 8015048:	9101      	str	r1, [sp, #4]
 801504a:	fb00 2404 	mla	r4, r0, r4, r2
 801504e:	6832      	ldr	r2, [r6, #0]
 8015050:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015054:	682a      	ldr	r2, [r5, #0]
 8015056:	9202      	str	r2, [sp, #8]
 8015058:	3704      	adds	r7, #4
 801505a:	9a01      	ldr	r2, [sp, #4]
 801505c:	2a00      	cmp	r2, #0
 801505e:	dc03      	bgt.n	8015068 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8015060:	9a03      	ldr	r2, [sp, #12]
 8015062:	2a00      	cmp	r2, #0
 8015064:	f340 80cc 	ble.w	8015200 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8015068:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801506a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801506e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8015072:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015076:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015078:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801507c:	2b00      	cmp	r3, #0
 801507e:	dd0d      	ble.n	801509c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015080:	1406      	asrs	r6, r0, #16
 8015082:	d405      	bmi.n	8015090 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8015084:	454e      	cmp	r6, r9
 8015086:	da03      	bge.n	8015090 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8015088:	1416      	asrs	r6, r2, #16
 801508a:	d401      	bmi.n	8015090 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801508c:	4546      	cmp	r6, r8
 801508e:	db06      	blt.n	801509e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015090:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8015092:	4460      	add	r0, ip
 8015094:	4432      	add	r2, r6
 8015096:	3b01      	subs	r3, #1
 8015098:	3402      	adds	r4, #2
 801509a:	e7ef      	b.n	801507c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801509c:	d00f      	beq.n	80150be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801509e:	1e5e      	subs	r6, r3, #1
 80150a0:	fb0c 0e06 	mla	lr, ip, r6, r0
 80150a4:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 80150a8:	d543      	bpl.n	8015132 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80150aa:	4698      	mov	r8, r3
 80150ac:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 80150b0:	f1b8 0f00 	cmp.w	r8, #0
 80150b4:	dc71      	bgt.n	801519a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 80150b6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80150ba:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80150be:	9b01      	ldr	r3, [sp, #4]
 80150c0:	2b00      	cmp	r3, #0
 80150c2:	f340 809d 	ble.w	8015200 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80150c6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80150ca:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80150ce:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80150d2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80150d4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80150d8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80150dc:	eeb0 6a62 	vmov.f32	s12, s5
 80150e0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80150e4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80150e8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80150ec:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80150f0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80150f4:	eeb0 6a43 	vmov.f32	s12, s6
 80150f8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80150fc:	ee12 2a90 	vmov	r2, s5
 8015100:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015104:	fb92 fcf3 	sdiv	ip, r2, r3
 8015108:	ee13 2a10 	vmov	r2, s6
 801510c:	fb92 f3f3 	sdiv	r3, r2, r3
 8015110:	9312      	str	r3, [sp, #72]	; 0x48
 8015112:	9b01      	ldr	r3, [sp, #4]
 8015114:	9a03      	ldr	r2, [sp, #12]
 8015116:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801511a:	3b01      	subs	r3, #1
 801511c:	9301      	str	r3, [sp, #4]
 801511e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015122:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015124:	eeb0 3a67 	vmov.f32	s6, s15
 8015128:	bf08      	it	eq
 801512a:	4613      	moveq	r3, r2
 801512c:	eef0 2a47 	vmov.f32	s5, s14
 8015130:	e793      	b.n	801505a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8015132:	45ce      	cmp	lr, r9
 8015134:	dab9      	bge.n	80150aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015136:	9912      	ldr	r1, [sp, #72]	; 0x48
 8015138:	fb01 2606 	mla	r6, r1, r6, r2
 801513c:	1436      	asrs	r6, r6, #16
 801513e:	d4b4      	bmi.n	80150aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015140:	4546      	cmp	r6, r8
 8015142:	dab2      	bge.n	80150aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015144:	4698      	mov	r8, r3
 8015146:	46a2      	mov	sl, r4
 8015148:	f1b8 0f00 	cmp.w	r8, #0
 801514c:	ddb3      	ble.n	80150b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801514e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8015152:	9902      	ldr	r1, [sp, #8]
 8015154:	1416      	asrs	r6, r2, #16
 8015156:	fb09 1606 	mla	r6, r9, r6, r1
 801515a:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801515e:	492a      	ldr	r1, [pc, #168]	; (8015208 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8015160:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8015164:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8015168:	eb07 0b0e 	add.w	fp, r7, lr
 801516c:	4460      	add	r0, ip
 801516e:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8015172:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8015176:	00f6      	lsls	r6, r6, #3
 8015178:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801517c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8015180:	ea49 0606 	orr.w	r6, r9, r6
 8015184:	f817 900e 	ldrb.w	r9, [r7, lr]
 8015188:	9912      	ldr	r1, [sp, #72]	; 0x48
 801518a:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801518e:	f82a 6b02 	strh.w	r6, [sl], #2
 8015192:	440a      	add	r2, r1
 8015194:	f108 38ff 	add.w	r8, r8, #4294967295
 8015198:	e7d6      	b.n	8015148 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801519a:	ea5f 4920 	movs.w	r9, r0, asr #16
 801519e:	d429      	bmi.n	80151f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80151a0:	68ae      	ldr	r6, [r5, #8]
 80151a2:	454e      	cmp	r6, r9
 80151a4:	dd26      	ble.n	80151f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80151a6:	ea5f 4b22 	movs.w	fp, r2, asr #16
 80151aa:	d423      	bmi.n	80151f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80151ac:	68e9      	ldr	r1, [r5, #12]
 80151ae:	4559      	cmp	r1, fp
 80151b0:	dd20      	ble.n	80151f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80151b2:	9902      	ldr	r1, [sp, #8]
 80151b4:	fa0f fe86 	sxth.w	lr, r6
 80151b8:	fb0b 1e0e 	mla	lr, fp, lr, r1
 80151bc:	f06f 0101 	mvn.w	r1, #1
 80151c0:	f81e e009 	ldrb.w	lr, [lr, r9]
 80151c4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80151c8:	eb07 060e 	add.w	r6, r7, lr
 80151cc:	fb01 f908 	mul.w	r9, r1, r8
 80151d0:	f896 b002 	ldrb.w	fp, [r6, #2]
 80151d4:	7876      	ldrb	r6, [r6, #1]
 80151d6:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 80151da:	00f6      	lsls	r6, r6, #3
 80151dc:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 80151e0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80151e4:	ea4b 0606 	orr.w	r6, fp, r6
 80151e8:	f817 b00e 	ldrb.w	fp, [r7, lr]
 80151ec:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 80151f0:	f82a 6009 	strh.w	r6, [sl, r9]
 80151f4:	9912      	ldr	r1, [sp, #72]	; 0x48
 80151f6:	4460      	add	r0, ip
 80151f8:	440a      	add	r2, r1
 80151fa:	f108 38ff 	add.w	r8, r8, #4294967295
 80151fe:	e757      	b.n	80150b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8015200:	b005      	add	sp, #20
 8015202:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015206:	bf00      	nop
 8015208:	fffff800 	.word	0xfffff800

0801520c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801520c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015210:	b087      	sub	sp, #28
 8015212:	468b      	mov	fp, r1
 8015214:	9815      	ldr	r0, [sp, #84]	; 0x54
 8015216:	9204      	str	r2, [sp, #16]
 8015218:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801521c:	9205      	str	r2, [sp, #20]
 801521e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8015222:	6841      	ldr	r1, [r0, #4]
 8015224:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8015228:	fb01 2404 	mla	r4, r1, r4, r2
 801522c:	6802      	ldr	r2, [r0, #0]
 801522e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015232:	f8dc 2000 	ldr.w	r2, [ip]
 8015236:	9201      	str	r2, [sp, #4]
 8015238:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801523c:	3204      	adds	r2, #4
 801523e:	9202      	str	r2, [sp, #8]
 8015240:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015244:	f1bb 0f00 	cmp.w	fp, #0
 8015248:	dc03      	bgt.n	8015252 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801524a:	9a04      	ldr	r2, [sp, #16]
 801524c:	2a00      	cmp	r2, #0
 801524e:	f340 8138 	ble.w	80154c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8015252:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015254:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8015258:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801525c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015260:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015262:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015266:	2b00      	cmp	r3, #0
 8015268:	dd0e      	ble.n	8015288 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801526a:	1402      	asrs	r2, r0, #16
 801526c:	d405      	bmi.n	801527a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801526e:	42ba      	cmp	r2, r7
 8015270:	da03      	bge.n	801527a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015272:	140a      	asrs	r2, r1, #16
 8015274:	d401      	bmi.n	801527a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015276:	42b2      	cmp	r2, r6
 8015278:	db07      	blt.n	801528a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801527a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801527c:	4410      	add	r0, r2
 801527e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015280:	3b01      	subs	r3, #1
 8015282:	4411      	add	r1, r2
 8015284:	3402      	adds	r4, #2
 8015286:	e7ee      	b.n	8015266 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8015288:	d019      	beq.n	80152be <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801528a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801528c:	1e5a      	subs	r2, r3, #1
 801528e:	fb05 0502 	mla	r5, r5, r2, r0
 8015292:	142d      	asrs	r5, r5, #16
 8015294:	d409      	bmi.n	80152aa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015296:	42bd      	cmp	r5, r7
 8015298:	da07      	bge.n	80152aa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801529a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801529c:	fb05 1202 	mla	r2, r5, r2, r1
 80152a0:	1412      	asrs	r2, r2, #16
 80152a2:	d402      	bmi.n	80152aa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80152a4:	42b2      	cmp	r2, r6
 80152a6:	f2c0 80ac 	blt.w	8015402 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 80152aa:	f04f 0e00 	mov.w	lr, #0
 80152ae:	eb03 020e 	add.w	r2, r3, lr
 80152b2:	2a00      	cmp	r2, #0
 80152b4:	dc3e      	bgt.n	8015334 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80152b6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80152ba:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80152be:	f1bb 0f00 	cmp.w	fp, #0
 80152c2:	f340 80fe 	ble.w	80154c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80152c6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80152ca:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80152ce:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80152d2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80152d4:	f1bb 0b01 	subs.w	fp, fp, #1
 80152d8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80152dc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80152e0:	eeb0 6a62 	vmov.f32	s12, s5
 80152e4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80152e8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80152ec:	ee77 2a62 	vsub.f32	s5, s14, s5
 80152f0:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80152f4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80152f8:	eeb0 6a43 	vmov.f32	s12, s6
 80152fc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015300:	ee12 2a90 	vmov	r2, s5
 8015304:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015308:	fb92 f3f3 	sdiv	r3, r2, r3
 801530c:	ee13 2a10 	vmov	r2, s6
 8015310:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015314:	9313      	str	r3, [sp, #76]	; 0x4c
 8015316:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015318:	fb92 f3f3 	sdiv	r3, r2, r3
 801531c:	9a04      	ldr	r2, [sp, #16]
 801531e:	9314      	str	r3, [sp, #80]	; 0x50
 8015320:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8015324:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015326:	eeb0 3a67 	vmov.f32	s6, s15
 801532a:	bf08      	it	eq
 801532c:	4613      	moveq	r3, r2
 801532e:	eef0 2a47 	vmov.f32	s5, s14
 8015332:	e787      	b.n	8015244 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8015334:	1406      	asrs	r6, r0, #16
 8015336:	d45d      	bmi.n	80153f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015338:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801533c:	42b5      	cmp	r5, r6
 801533e:	dd59      	ble.n	80153f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015340:	140f      	asrs	r7, r1, #16
 8015342:	d457      	bmi.n	80153f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015344:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8015348:	42ba      	cmp	r2, r7
 801534a:	dd53      	ble.n	80153f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801534c:	9a01      	ldr	r2, [sp, #4]
 801534e:	b22d      	sxth	r5, r5
 8015350:	fb07 2505 	mla	r5, r7, r5, r2
 8015354:	5daa      	ldrb	r2, [r5, r6]
 8015356:	9d02      	ldr	r5, [sp, #8]
 8015358:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801535c:	0e2e      	lsrs	r6, r5, #24
 801535e:	d049      	beq.n	80153f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015360:	f06f 0201 	mvn.w	r2, #1
 8015364:	fb02 f20e 	mul.w	r2, r2, lr
 8015368:	9203      	str	r2, [sp, #12]
 801536a:	f834 8002 	ldrh.w	r8, [r4, r2]
 801536e:	9a05      	ldr	r2, [sp, #20]
 8015370:	4356      	muls	r6, r2
 8015372:	1c72      	adds	r2, r6, #1
 8015374:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8015378:	1212      	asrs	r2, r2, #8
 801537a:	fa1f f982 	uxth.w	r9, r2
 801537e:	ea4f 2728 	mov.w	r7, r8, asr #8
 8015382:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015386:	43d2      	mvns	r2, r2
 8015388:	b2d2      	uxtb	r2, r2
 801538a:	fb16 f609 	smulbb	r6, r6, r9
 801538e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015392:	fb07 6702 	mla	r7, r7, r2, r6
 8015396:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801539a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801539e:	b2ed      	uxtb	r5, r5
 80153a0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80153a4:	fa5f f888 	uxtb.w	r8, r8
 80153a8:	fb15 f509 	smulbb	r5, r5, r9
 80153ac:	fb08 5502 	mla	r5, r8, r2, r5
 80153b0:	b2bf      	uxth	r7, r7
 80153b2:	fb1a fa09 	smulbb	sl, sl, r9
 80153b6:	b2ad      	uxth	r5, r5
 80153b8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80153bc:	fb06 a602 	mla	r6, r6, r2, sl
 80153c0:	1c7a      	adds	r2, r7, #1
 80153c2:	f105 0a01 	add.w	sl, r5, #1
 80153c6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80153ca:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80153ce:	b2b6      	uxth	r6, r6
 80153d0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80153d4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80153d8:	ea4a 0707 	orr.w	r7, sl, r7
 80153dc:	f106 0a01 	add.w	sl, r6, #1
 80153e0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80153e4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80153e8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80153ec:	9a03      	ldr	r2, [sp, #12]
 80153ee:	ea47 070a 	orr.w	r7, r7, sl
 80153f2:	52a7      	strh	r7, [r4, r2]
 80153f4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80153f6:	4410      	add	r0, r2
 80153f8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80153fa:	f10e 3eff 	add.w	lr, lr, #4294967295
 80153fe:	4411      	add	r1, r2
 8015400:	e755      	b.n	80152ae <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015402:	f04f 0800 	mov.w	r8, #0
 8015406:	eba3 0208 	sub.w	r2, r3, r8
 801540a:	2a00      	cmp	r2, #0
 801540c:	f77f af53 	ble.w	80152b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015410:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8015414:	9f01      	ldr	r7, [sp, #4]
 8015416:	140a      	asrs	r2, r1, #16
 8015418:	1405      	asrs	r5, r0, #16
 801541a:	fb06 7202 	mla	r2, r6, r2, r7
 801541e:	5d52      	ldrb	r2, [r2, r5]
 8015420:	9d02      	ldr	r5, [sp, #8]
 8015422:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8015426:	0e2e      	lsrs	r6, r5, #24
 8015428:	d044      	beq.n	80154b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801542a:	9a05      	ldr	r2, [sp, #20]
 801542c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8015430:	4356      	muls	r6, r2
 8015432:	1c72      	adds	r2, r6, #1
 8015434:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8015438:	1212      	asrs	r2, r2, #8
 801543a:	fa1f f982 	uxth.w	r9, r2
 801543e:	ea4f 272e 	mov.w	r7, lr, asr #8
 8015442:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015446:	43d2      	mvns	r2, r2
 8015448:	b2d2      	uxtb	r2, r2
 801544a:	fb16 f609 	smulbb	r6, r6, r9
 801544e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015452:	fb07 6702 	mla	r7, r7, r2, r6
 8015456:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801545a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801545e:	b2ed      	uxtb	r5, r5
 8015460:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015464:	fa5f fe8e 	uxtb.w	lr, lr
 8015468:	fb15 f509 	smulbb	r5, r5, r9
 801546c:	fb0e 5502 	mla	r5, lr, r2, r5
 8015470:	b2bf      	uxth	r7, r7
 8015472:	fb1a fa09 	smulbb	sl, sl, r9
 8015476:	b2ad      	uxth	r5, r5
 8015478:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801547c:	fb06 a602 	mla	r6, r6, r2, sl
 8015480:	1c7a      	adds	r2, r7, #1
 8015482:	f105 0a01 	add.w	sl, r5, #1
 8015486:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801548a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801548e:	b2b6      	uxth	r6, r6
 8015490:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015494:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015498:	ea4a 0707 	orr.w	r7, sl, r7
 801549c:	f106 0a01 	add.w	sl, r6, #1
 80154a0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80154a4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80154a8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80154ac:	ea47 070a 	orr.w	r7, r7, sl
 80154b0:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80154b4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80154b6:	4410      	add	r0, r2
 80154b8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80154ba:	f108 0801 	add.w	r8, r8, #1
 80154be:	4411      	add	r1, r2
 80154c0:	e7a1      	b.n	8015406 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 80154c2:	b007      	add	sp, #28
 80154c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080154c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80154c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80154cc:	b085      	sub	sp, #20
 80154ce:	468b      	mov	fp, r1
 80154d0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80154d2:	9203      	str	r2, [sp, #12]
 80154d4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80154d8:	6841      	ldr	r1, [r0, #4]
 80154da:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 80154de:	fb01 2404 	mla	r4, r1, r4, r2
 80154e2:	6802      	ldr	r2, [r0, #0]
 80154e4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80154e8:	f8de 2000 	ldr.w	r2, [lr]
 80154ec:	9200      	str	r2, [sp, #0]
 80154ee:	f8de 2004 	ldr.w	r2, [lr, #4]
 80154f2:	3204      	adds	r2, #4
 80154f4:	9201      	str	r2, [sp, #4]
 80154f6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80154fa:	f1bb 0f00 	cmp.w	fp, #0
 80154fe:	dc03      	bgt.n	8015508 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8015500:	9a03      	ldr	r2, [sp, #12]
 8015502:	2a00      	cmp	r2, #0
 8015504:	f340 8153 	ble.w	80157ae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8015508:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801550a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801550e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8015512:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015516:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015518:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801551c:	2b00      	cmp	r3, #0
 801551e:	dd0e      	ble.n	801553e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015520:	1408      	asrs	r0, r1, #16
 8015522:	d405      	bmi.n	8015530 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015524:	42b8      	cmp	r0, r7
 8015526:	da03      	bge.n	8015530 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015528:	1410      	asrs	r0, r2, #16
 801552a:	d401      	bmi.n	8015530 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801552c:	42b0      	cmp	r0, r6
 801552e:	db07      	blt.n	8015540 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8015530:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015532:	4401      	add	r1, r0
 8015534:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015536:	3b01      	subs	r3, #1
 8015538:	4402      	add	r2, r0
 801553a:	3402      	adds	r4, #2
 801553c:	e7ee      	b.n	801551c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801553e:	d017      	beq.n	8015570 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8015540:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8015542:	1e58      	subs	r0, r3, #1
 8015544:	fb05 1500 	mla	r5, r5, r0, r1
 8015548:	142d      	asrs	r5, r5, #16
 801554a:	d409      	bmi.n	8015560 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801554c:	42bd      	cmp	r5, r7
 801554e:	da07      	bge.n	8015560 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015550:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8015552:	fb05 2000 	mla	r0, r5, r0, r2
 8015556:	1400      	asrs	r0, r0, #16
 8015558:	d402      	bmi.n	8015560 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801555a:	42b0      	cmp	r0, r6
 801555c:	f2c0 80bc 	blt.w	80156d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8015560:	2600      	movs	r6, #0
 8015562:	1998      	adds	r0, r3, r6
 8015564:	2800      	cmp	r0, #0
 8015566:	dc3e      	bgt.n	80155e6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8015568:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801556c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015570:	f1bb 0f00 	cmp.w	fp, #0
 8015574:	f340 811b 	ble.w	80157ae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8015578:	ee30 0a04 	vadd.f32	s0, s0, s8
 801557c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015580:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015584:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015586:	f1bb 0b01 	subs.w	fp, fp, #1
 801558a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801558e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015592:	eeb0 6a62 	vmov.f32	s12, s5
 8015596:	ee61 7a27 	vmul.f32	s15, s2, s15
 801559a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801559e:	ee77 2a62 	vsub.f32	s5, s14, s5
 80155a2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80155a6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80155aa:	eeb0 6a43 	vmov.f32	s12, s6
 80155ae:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80155b2:	ee12 2a90 	vmov	r2, s5
 80155b6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80155ba:	fb92 f3f3 	sdiv	r3, r2, r3
 80155be:	ee13 2a10 	vmov	r2, s6
 80155c2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80155c6:	9311      	str	r3, [sp, #68]	; 0x44
 80155c8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80155ca:	fb92 f3f3 	sdiv	r3, r2, r3
 80155ce:	9a03      	ldr	r2, [sp, #12]
 80155d0:	9312      	str	r3, [sp, #72]	; 0x48
 80155d2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80155d6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80155d8:	eeb0 3a67 	vmov.f32	s6, s15
 80155dc:	bf08      	it	eq
 80155de:	4613      	moveq	r3, r2
 80155e0:	eef0 2a47 	vmov.f32	s5, s14
 80155e4:	e789      	b.n	80154fa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80155e6:	140f      	asrs	r7, r1, #16
 80155e8:	d426      	bmi.n	8015638 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80155ea:	f8de 5008 	ldr.w	r5, [lr, #8]
 80155ee:	42bd      	cmp	r5, r7
 80155f0:	dd22      	ble.n	8015638 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80155f2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80155f6:	d41f      	bmi.n	8015638 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80155f8:	f8de 000c 	ldr.w	r0, [lr, #12]
 80155fc:	4560      	cmp	r0, ip
 80155fe:	dd1b      	ble.n	8015638 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015600:	9800      	ldr	r0, [sp, #0]
 8015602:	b22d      	sxth	r5, r5
 8015604:	fb0c 0505 	mla	r5, ip, r5, r0
 8015608:	5de8      	ldrb	r0, [r5, r7]
 801560a:	9d01      	ldr	r5, [sp, #4]
 801560c:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8015610:	0e07      	lsrs	r7, r0, #24
 8015612:	2fff      	cmp	r7, #255	; 0xff
 8015614:	d116      	bne.n	8015644 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015616:	f06f 0501 	mvn.w	r5, #1
 801561a:	fb05 f706 	mul.w	r7, r5, r6
 801561e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8015622:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8015626:	0945      	lsrs	r5, r0, #5
 8015628:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801562c:	ea4c 0505 	orr.w	r5, ip, r5
 8015630:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8015634:	4305      	orrs	r5, r0
 8015636:	53e5      	strh	r5, [r4, r7]
 8015638:	9811      	ldr	r0, [sp, #68]	; 0x44
 801563a:	4401      	add	r1, r0
 801563c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801563e:	3e01      	subs	r6, #1
 8015640:	4402      	add	r2, r0
 8015642:	e78e      	b.n	8015562 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8015644:	b2fd      	uxtb	r5, r7
 8015646:	2f00      	cmp	r7, #0
 8015648:	d0f6      	beq.n	8015638 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801564a:	f06f 0701 	mvn.w	r7, #1
 801564e:	4377      	muls	r7, r6
 8015650:	fa1f f985 	uxth.w	r9, r5
 8015654:	f834 8007 	ldrh.w	r8, [r4, r7]
 8015658:	9702      	str	r7, [sp, #8]
 801565a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801565e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8015662:	43ed      	mvns	r5, r5
 8015664:	b2ed      	uxtb	r5, r5
 8015666:	fb17 f709 	smulbb	r7, r7, r9
 801566a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801566e:	fb0c 7c05 	mla	ip, ip, r5, r7
 8015672:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8015676:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801567a:	b2c0      	uxtb	r0, r0
 801567c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015680:	fa5f f888 	uxtb.w	r8, r8
 8015684:	fb10 f009 	smulbb	r0, r0, r9
 8015688:	fb08 0005 	mla	r0, r8, r5, r0
 801568c:	b280      	uxth	r0, r0
 801568e:	fa1f fc8c 	uxth.w	ip, ip
 8015692:	fb1a fa09 	smulbb	sl, sl, r9
 8015696:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801569a:	fb07 a705 	mla	r7, r7, r5, sl
 801569e:	f100 0a01 	add.w	sl, r0, #1
 80156a2:	f10c 0501 	add.w	r5, ip, #1
 80156a6:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80156aa:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80156ae:	b2bf      	uxth	r7, r7
 80156b0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80156b4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80156b8:	ea4a 0c0c 	orr.w	ip, sl, ip
 80156bc:	f107 0a01 	add.w	sl, r7, #1
 80156c0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80156c4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80156c8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80156cc:	9802      	ldr	r0, [sp, #8]
 80156ce:	ea4c 0c0a 	orr.w	ip, ip, sl
 80156d2:	f824 c000 	strh.w	ip, [r4, r0]
 80156d6:	e7af      	b.n	8015638 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80156d8:	f04f 0800 	mov.w	r8, #0
 80156dc:	eba3 0008 	sub.w	r0, r3, r8
 80156e0:	2800      	cmp	r0, #0
 80156e2:	f77f af41 	ble.w	8015568 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80156e6:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80156ea:	9f00      	ldr	r7, [sp, #0]
 80156ec:	1410      	asrs	r0, r2, #16
 80156ee:	140d      	asrs	r5, r1, #16
 80156f0:	fb06 7000 	mla	r0, r6, r0, r7
 80156f4:	5d40      	ldrb	r0, [r0, r5]
 80156f6:	9d01      	ldr	r5, [sp, #4]
 80156f8:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 80156fc:	0e2e      	lsrs	r6, r5, #24
 80156fe:	2eff      	cmp	r6, #255	; 0xff
 8015700:	d112      	bne.n	8015728 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8015702:	482c      	ldr	r0, [pc, #176]	; (80157b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8015704:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8015708:	0968      	lsrs	r0, r5, #5
 801570a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801570e:	4330      	orrs	r0, r6
 8015710:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8015714:	4328      	orrs	r0, r5
 8015716:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801571a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801571c:	4401      	add	r1, r0
 801571e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015720:	f108 0801 	add.w	r8, r8, #1
 8015724:	4402      	add	r2, r0
 8015726:	e7d9      	b.n	80156dc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8015728:	b2f0      	uxtb	r0, r6
 801572a:	2e00      	cmp	r6, #0
 801572c:	d0f5      	beq.n	801571a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801572e:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8015732:	fa1f f980 	uxth.w	r9, r0
 8015736:	ea4f 272c 	mov.w	r7, ip, asr #8
 801573a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801573e:	43c0      	mvns	r0, r0
 8015740:	b2c0      	uxtb	r0, r0
 8015742:	fb16 f609 	smulbb	r6, r6, r9
 8015746:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801574a:	fb07 6700 	mla	r7, r7, r0, r6
 801574e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8015752:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8015756:	b2ed      	uxtb	r5, r5
 8015758:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801575c:	fa5f fc8c 	uxtb.w	ip, ip
 8015760:	fb15 f509 	smulbb	r5, r5, r9
 8015764:	fb0c 5500 	mla	r5, ip, r0, r5
 8015768:	b2bf      	uxth	r7, r7
 801576a:	fb1a fa09 	smulbb	sl, sl, r9
 801576e:	b2ad      	uxth	r5, r5
 8015770:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015774:	fb06 a600 	mla	r6, r6, r0, sl
 8015778:	1c78      	adds	r0, r7, #1
 801577a:	f105 0a01 	add.w	sl, r5, #1
 801577e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8015782:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015786:	b2b6      	uxth	r6, r6
 8015788:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801578c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015790:	ea4a 0707 	orr.w	r7, sl, r7
 8015794:	f106 0a01 	add.w	sl, r6, #1
 8015798:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801579c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80157a0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80157a4:	ea47 070a 	orr.w	r7, r7, sl
 80157a8:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80157ac:	e7b5      	b.n	801571a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80157ae:	b005      	add	sp, #20
 80157b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80157b4:	fffff800 	.word	0xfffff800

080157b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80157b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80157bc:	b087      	sub	sp, #28
 80157be:	468b      	mov	fp, r1
 80157c0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80157c2:	9204      	str	r2, [sp, #16]
 80157c4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80157c8:	9205      	str	r2, [sp, #20]
 80157ca:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80157ce:	6861      	ldr	r1, [r4, #4]
 80157d0:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 80157d4:	fb01 2000 	mla	r0, r1, r0, r2
 80157d8:	6822      	ldr	r2, [r4, #0]
 80157da:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80157de:	f8de 2000 	ldr.w	r2, [lr]
 80157e2:	9201      	str	r2, [sp, #4]
 80157e4:	f8de 2004 	ldr.w	r2, [lr, #4]
 80157e8:	9202      	str	r2, [sp, #8]
 80157ea:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80157ee:	f1bb 0f00 	cmp.w	fp, #0
 80157f2:	dc03      	bgt.n	80157fc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 80157f4:	9a04      	ldr	r2, [sp, #16]
 80157f6:	2a00      	cmp	r2, #0
 80157f8:	f340 8142 	ble.w	8015a80 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80157fc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80157fe:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8015802:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8015806:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801580a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801580c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015810:	2b00      	cmp	r3, #0
 8015812:	dd0e      	ble.n	8015832 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8015814:	140c      	asrs	r4, r1, #16
 8015816:	d405      	bmi.n	8015824 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015818:	42bc      	cmp	r4, r7
 801581a:	da03      	bge.n	8015824 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801581c:	1414      	asrs	r4, r2, #16
 801581e:	d401      	bmi.n	8015824 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015820:	42b4      	cmp	r4, r6
 8015822:	db07      	blt.n	8015834 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015824:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015826:	4421      	add	r1, r4
 8015828:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801582a:	3b01      	subs	r3, #1
 801582c:	4422      	add	r2, r4
 801582e:	3002      	adds	r0, #2
 8015830:	e7ee      	b.n	8015810 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8015832:	d019      	beq.n	8015868 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8015834:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8015836:	1e5c      	subs	r4, r3, #1
 8015838:	fb05 1504 	mla	r5, r5, r4, r1
 801583c:	142d      	asrs	r5, r5, #16
 801583e:	d409      	bmi.n	8015854 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015840:	42bd      	cmp	r5, r7
 8015842:	da07      	bge.n	8015854 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015844:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8015846:	fb05 2404 	mla	r4, r5, r4, r2
 801584a:	1424      	asrs	r4, r4, #16
 801584c:	d402      	bmi.n	8015854 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801584e:	42b4      	cmp	r4, r6
 8015850:	f2c0 80b1 	blt.w	80159b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8015854:	f04f 0800 	mov.w	r8, #0
 8015858:	eb03 0408 	add.w	r4, r3, r8
 801585c:	2c00      	cmp	r4, #0
 801585e:	dc3e      	bgt.n	80158de <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8015860:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015864:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015868:	f1bb 0f00 	cmp.w	fp, #0
 801586c:	f340 8108 	ble.w	8015a80 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8015870:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015874:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015878:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801587c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801587e:	f1bb 0b01 	subs.w	fp, fp, #1
 8015882:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015886:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801588a:	eeb0 6a62 	vmov.f32	s12, s5
 801588e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015892:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015896:	ee77 2a62 	vsub.f32	s5, s14, s5
 801589a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801589e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80158a2:	eeb0 6a43 	vmov.f32	s12, s6
 80158a6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80158aa:	ee12 2a90 	vmov	r2, s5
 80158ae:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80158b2:	fb92 f3f3 	sdiv	r3, r2, r3
 80158b6:	ee13 2a10 	vmov	r2, s6
 80158ba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80158be:	9313      	str	r3, [sp, #76]	; 0x4c
 80158c0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80158c2:	fb92 f3f3 	sdiv	r3, r2, r3
 80158c6:	9a04      	ldr	r2, [sp, #16]
 80158c8:	9314      	str	r3, [sp, #80]	; 0x50
 80158ca:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80158ce:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80158d0:	eeb0 3a67 	vmov.f32	s6, s15
 80158d4:	bf08      	it	eq
 80158d6:	4613      	moveq	r3, r2
 80158d8:	eef0 2a47 	vmov.f32	s5, s14
 80158dc:	e787      	b.n	80157ee <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 80158de:	140e      	asrs	r6, r1, #16
 80158e0:	d462      	bmi.n	80159a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80158e2:	f8de 5008 	ldr.w	r5, [lr, #8]
 80158e6:	42b5      	cmp	r5, r6
 80158e8:	dd5e      	ble.n	80159a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80158ea:	1417      	asrs	r7, r2, #16
 80158ec:	d45c      	bmi.n	80159a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80158ee:	f8de 400c 	ldr.w	r4, [lr, #12]
 80158f2:	42bc      	cmp	r4, r7
 80158f4:	dd58      	ble.n	80159a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80158f6:	b22d      	sxth	r5, r5
 80158f8:	fb07 6505 	mla	r5, r7, r5, r6
 80158fc:	9c02      	ldr	r4, [sp, #8]
 80158fe:	5d66      	ldrb	r6, [r4, r5]
 8015900:	2e00      	cmp	r6, #0
 8015902:	d051      	beq.n	80159a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015904:	9c01      	ldr	r4, [sp, #4]
 8015906:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801590a:	f06f 0401 	mvn.w	r4, #1
 801590e:	fb04 f408 	mul.w	r4, r4, r8
 8015912:	9403      	str	r4, [sp, #12]
 8015914:	5b05      	ldrh	r5, [r0, r4]
 8015916:	9c05      	ldr	r4, [sp, #20]
 8015918:	4366      	muls	r6, r4
 801591a:	1c74      	adds	r4, r6, #1
 801591c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8015920:	1224      	asrs	r4, r4, #8
 8015922:	b2a7      	uxth	r7, r4
 8015924:	122e      	asrs	r6, r5, #8
 8015926:	43e4      	mvns	r4, r4
 8015928:	b2e4      	uxtb	r4, r4
 801592a:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801592e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015932:	fb16 f604 	smulbb	r6, r6, r4
 8015936:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801593a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801593e:	00ed      	lsls	r5, r5, #3
 8015940:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015944:	b2ed      	uxtb	r5, r5
 8015946:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801594a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801594e:	fb15 f504 	smulbb	r5, r5, r4
 8015952:	fa5f f989 	uxtb.w	r9, r9
 8015956:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801595a:	fb09 5507 	mla	r5, r9, r7, r5
 801595e:	fb1a fa04 	smulbb	sl, sl, r4
 8015962:	fa1f fc8c 	uxth.w	ip, ip
 8015966:	b2ad      	uxth	r5, r5
 8015968:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801596c:	fb06 a607 	mla	r6, r6, r7, sl
 8015970:	f10c 0401 	add.w	r4, ip, #1
 8015974:	f105 0a01 	add.w	sl, r5, #1
 8015978:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801597c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015980:	b2b6      	uxth	r6, r6
 8015982:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015986:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801598a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801598e:	f106 0a01 	add.w	sl, r6, #1
 8015992:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015996:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801599a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801599e:	9c03      	ldr	r4, [sp, #12]
 80159a0:	ea4c 0c0a 	orr.w	ip, ip, sl
 80159a4:	f820 c004 	strh.w	ip, [r0, r4]
 80159a8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80159aa:	4421      	add	r1, r4
 80159ac:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80159ae:	f108 38ff 	add.w	r8, r8, #4294967295
 80159b2:	4422      	add	r2, r4
 80159b4:	e750      	b.n	8015858 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80159b6:	f04f 0900 	mov.w	r9, #0
 80159ba:	eba3 0409 	sub.w	r4, r3, r9
 80159be:	2c00      	cmp	r4, #0
 80159c0:	f77f af4e 	ble.w	8015860 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80159c4:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80159c8:	140d      	asrs	r5, r1, #16
 80159ca:	1414      	asrs	r4, r2, #16
 80159cc:	fb06 5404 	mla	r4, r6, r4, r5
 80159d0:	9d02      	ldr	r5, [sp, #8]
 80159d2:	5d2e      	ldrb	r6, [r5, r4]
 80159d4:	2e00      	cmp	r6, #0
 80159d6:	d04c      	beq.n	8015a72 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 80159d8:	9d01      	ldr	r5, [sp, #4]
 80159da:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 80159de:	9c05      	ldr	r4, [sp, #20]
 80159e0:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80159e4:	4366      	muls	r6, r4
 80159e6:	1c74      	adds	r4, r6, #1
 80159e8:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 80159ec:	1224      	asrs	r4, r4, #8
 80159ee:	b2a7      	uxth	r7, r4
 80159f0:	122e      	asrs	r6, r5, #8
 80159f2:	43e4      	mvns	r4, r4
 80159f4:	b2e4      	uxtb	r4, r4
 80159f6:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80159fa:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80159fe:	fb16 f604 	smulbb	r6, r6, r4
 8015a02:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015a06:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015a0a:	00ed      	lsls	r5, r5, #3
 8015a0c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015a10:	b2ed      	uxtb	r5, r5
 8015a12:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8015a16:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015a1a:	fb15 f504 	smulbb	r5, r5, r4
 8015a1e:	fa5f f888 	uxtb.w	r8, r8
 8015a22:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015a26:	fb08 5507 	mla	r5, r8, r7, r5
 8015a2a:	fb1a fa04 	smulbb	sl, sl, r4
 8015a2e:	fa1f fc8c 	uxth.w	ip, ip
 8015a32:	b2ad      	uxth	r5, r5
 8015a34:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015a38:	fb06 a607 	mla	r6, r6, r7, sl
 8015a3c:	f10c 0401 	add.w	r4, ip, #1
 8015a40:	f105 0a01 	add.w	sl, r5, #1
 8015a44:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015a48:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015a4c:	b2b6      	uxth	r6, r6
 8015a4e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015a52:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015a56:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015a5a:	f106 0a01 	add.w	sl, r6, #1
 8015a5e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015a62:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015a66:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015a6a:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015a6e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8015a72:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015a74:	4421      	add	r1, r4
 8015a76:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015a78:	f109 0901 	add.w	r9, r9, #1
 8015a7c:	4422      	add	r2, r4
 8015a7e:	e79c      	b.n	80159ba <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8015a80:	b007      	add	sp, #28
 8015a82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015a86 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015a86:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015a8a:	b085      	sub	sp, #20
 8015a8c:	468b      	mov	fp, r1
 8015a8e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015a90:	9203      	str	r2, [sp, #12]
 8015a92:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8015a96:	6861      	ldr	r1, [r4, #4]
 8015a98:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8015a9c:	fb01 2000 	mla	r0, r1, r0, r2
 8015aa0:	6822      	ldr	r2, [r4, #0]
 8015aa2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8015aa6:	f8d8 2000 	ldr.w	r2, [r8]
 8015aaa:	9200      	str	r2, [sp, #0]
 8015aac:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8015ab0:	9201      	str	r2, [sp, #4]
 8015ab2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015ab6:	f1bb 0f00 	cmp.w	fp, #0
 8015aba:	dc03      	bgt.n	8015ac4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8015abc:	9a03      	ldr	r2, [sp, #12]
 8015abe:	2a00      	cmp	r2, #0
 8015ac0:	f340 8146 	ble.w	8015d50 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8015ac4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015ac6:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8015aca:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8015ace:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015ad2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015ad4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015ad8:	2b00      	cmp	r3, #0
 8015ada:	dd0e      	ble.n	8015afa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8015adc:	140c      	asrs	r4, r1, #16
 8015ade:	d405      	bmi.n	8015aec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015ae0:	42bc      	cmp	r4, r7
 8015ae2:	da03      	bge.n	8015aec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015ae4:	1414      	asrs	r4, r2, #16
 8015ae6:	d401      	bmi.n	8015aec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015ae8:	42b4      	cmp	r4, r6
 8015aea:	db07      	blt.n	8015afc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015aec:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015aee:	4421      	add	r1, r4
 8015af0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015af2:	3b01      	subs	r3, #1
 8015af4:	4422      	add	r2, r4
 8015af6:	3002      	adds	r0, #2
 8015af8:	e7ee      	b.n	8015ad8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8015afa:	d017      	beq.n	8015b2c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8015afc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8015afe:	1e5c      	subs	r4, r3, #1
 8015b00:	fb05 1504 	mla	r5, r5, r4, r1
 8015b04:	142d      	asrs	r5, r5, #16
 8015b06:	d409      	bmi.n	8015b1c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015b08:	42bd      	cmp	r5, r7
 8015b0a:	da07      	bge.n	8015b1c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015b0c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8015b0e:	fb05 2404 	mla	r4, r5, r4, r2
 8015b12:	1424      	asrs	r4, r4, #16
 8015b14:	d402      	bmi.n	8015b1c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015b16:	42b4      	cmp	r4, r6
 8015b18:	f2c0 80b3 	blt.w	8015c82 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8015b1c:	2600      	movs	r6, #0
 8015b1e:	199c      	adds	r4, r3, r6
 8015b20:	2c00      	cmp	r4, #0
 8015b22:	dc3e      	bgt.n	8015ba2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8015b24:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015b28:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015b2c:	f1bb 0f00 	cmp.w	fp, #0
 8015b30:	f340 810e 	ble.w	8015d50 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8015b34:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015b38:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015b3c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015b40:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015b42:	f1bb 0b01 	subs.w	fp, fp, #1
 8015b46:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015b4a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015b4e:	eeb0 6a62 	vmov.f32	s12, s5
 8015b52:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015b56:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015b5a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015b5e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015b62:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015b66:	eeb0 6a43 	vmov.f32	s12, s6
 8015b6a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015b6e:	ee12 2a90 	vmov	r2, s5
 8015b72:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015b76:	fb92 f3f3 	sdiv	r3, r2, r3
 8015b7a:	ee13 2a10 	vmov	r2, s6
 8015b7e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015b82:	9311      	str	r3, [sp, #68]	; 0x44
 8015b84:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015b86:	fb92 f3f3 	sdiv	r3, r2, r3
 8015b8a:	9a03      	ldr	r2, [sp, #12]
 8015b8c:	9312      	str	r3, [sp, #72]	; 0x48
 8015b8e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015b92:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015b94:	eeb0 3a67 	vmov.f32	s6, s15
 8015b98:	bf08      	it	eq
 8015b9a:	4613      	moveq	r3, r2
 8015b9c:	eef0 2a47 	vmov.f32	s5, s14
 8015ba0:	e789      	b.n	8015ab6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8015ba2:	140f      	asrs	r7, r1, #16
 8015ba4:	d418      	bmi.n	8015bd8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015ba6:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8015baa:	42bd      	cmp	r5, r7
 8015bac:	dd14      	ble.n	8015bd8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015bae:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015bb2:	d411      	bmi.n	8015bd8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015bb4:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8015bb8:	4564      	cmp	r4, ip
 8015bba:	dd0d      	ble.n	8015bd8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015bbc:	b22d      	sxth	r5, r5
 8015bbe:	fb0c 7505 	mla	r5, ip, r5, r7
 8015bc2:	9c01      	ldr	r4, [sp, #4]
 8015bc4:	5d64      	ldrb	r4, [r4, r5]
 8015bc6:	2cff      	cmp	r4, #255	; 0xff
 8015bc8:	d10c      	bne.n	8015be4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8015bca:	9c00      	ldr	r4, [sp, #0]
 8015bcc:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8015bd0:	f06f 0401 	mvn.w	r4, #1
 8015bd4:	4374      	muls	r4, r6
 8015bd6:	5305      	strh	r5, [r0, r4]
 8015bd8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015bda:	4421      	add	r1, r4
 8015bdc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015bde:	3e01      	subs	r6, #1
 8015be0:	4422      	add	r2, r4
 8015be2:	e79c      	b.n	8015b1e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015be4:	2c00      	cmp	r4, #0
 8015be6:	d0f7      	beq.n	8015bd8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015be8:	9f00      	ldr	r7, [sp, #0]
 8015bea:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8015bee:	f06f 0501 	mvn.w	r5, #1
 8015bf2:	4375      	muls	r5, r6
 8015bf4:	9502      	str	r5, [sp, #8]
 8015bf6:	5b45      	ldrh	r5, [r0, r5]
 8015bf8:	fa1f fc84 	uxth.w	ip, r4
 8015bfc:	122f      	asrs	r7, r5, #8
 8015bfe:	43e4      	mvns	r4, r4
 8015c00:	b2e4      	uxtb	r4, r4
 8015c02:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8015c06:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015c0a:	fb17 f704 	smulbb	r7, r7, r4
 8015c0e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015c12:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8015c16:	00ed      	lsls	r5, r5, #3
 8015c18:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8015c1c:	b2ed      	uxtb	r5, r5
 8015c1e:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8015c22:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8015c26:	fb15 f504 	smulbb	r5, r5, r4
 8015c2a:	fa5f f989 	uxtb.w	r9, r9
 8015c2e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015c32:	fb09 550c 	mla	r5, r9, ip, r5
 8015c36:	fb1a fa04 	smulbb	sl, sl, r4
 8015c3a:	fa1f fe8e 	uxth.w	lr, lr
 8015c3e:	b2ad      	uxth	r5, r5
 8015c40:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015c44:	fb07 a70c 	mla	r7, r7, ip, sl
 8015c48:	f10e 0401 	add.w	r4, lr, #1
 8015c4c:	f105 0a01 	add.w	sl, r5, #1
 8015c50:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8015c54:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015c58:	b2bf      	uxth	r7, r7
 8015c5a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015c5e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8015c62:	ea4a 0e0e 	orr.w	lr, sl, lr
 8015c66:	f107 0a01 	add.w	sl, r7, #1
 8015c6a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8015c6e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015c72:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015c76:	9c02      	ldr	r4, [sp, #8]
 8015c78:	ea4e 0e0a 	orr.w	lr, lr, sl
 8015c7c:	f820 e004 	strh.w	lr, [r0, r4]
 8015c80:	e7aa      	b.n	8015bd8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015c82:	f04f 0900 	mov.w	r9, #0
 8015c86:	eba3 0409 	sub.w	r4, r3, r9
 8015c8a:	2c00      	cmp	r4, #0
 8015c8c:	f77f af4a 	ble.w	8015b24 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015c90:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8015c94:	1414      	asrs	r4, r2, #16
 8015c96:	140d      	asrs	r5, r1, #16
 8015c98:	fb06 5504 	mla	r5, r6, r4, r5
 8015c9c:	9c01      	ldr	r4, [sp, #4]
 8015c9e:	5d64      	ldrb	r4, [r4, r5]
 8015ca0:	2cff      	cmp	r4, #255	; 0xff
 8015ca2:	d10b      	bne.n	8015cbc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8015ca4:	9c00      	ldr	r4, [sp, #0]
 8015ca6:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8015caa:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8015cae:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015cb0:	4421      	add	r1, r4
 8015cb2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015cb4:	f109 0901 	add.w	r9, r9, #1
 8015cb8:	4422      	add	r2, r4
 8015cba:	e7e4      	b.n	8015c86 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8015cbc:	2c00      	cmp	r4, #0
 8015cbe:	d0f6      	beq.n	8015cae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8015cc0:	9e00      	ldr	r6, [sp, #0]
 8015cc2:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8015cc6:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8015cca:	b2a7      	uxth	r7, r4
 8015ccc:	122e      	asrs	r6, r5, #8
 8015cce:	43e4      	mvns	r4, r4
 8015cd0:	b2e4      	uxtb	r4, r4
 8015cd2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8015cd6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015cda:	fb16 f604 	smulbb	r6, r6, r4
 8015cde:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015ce2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015ce6:	00ed      	lsls	r5, r5, #3
 8015ce8:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015cec:	b2ed      	uxtb	r5, r5
 8015cee:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8015cf2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015cf6:	fb15 f504 	smulbb	r5, r5, r4
 8015cfa:	fa5f fe8e 	uxtb.w	lr, lr
 8015cfe:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015d02:	fb0e 5507 	mla	r5, lr, r7, r5
 8015d06:	fb1a fa04 	smulbb	sl, sl, r4
 8015d0a:	fa1f fc8c 	uxth.w	ip, ip
 8015d0e:	b2ad      	uxth	r5, r5
 8015d10:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015d14:	fb06 a607 	mla	r6, r6, r7, sl
 8015d18:	f10c 0401 	add.w	r4, ip, #1
 8015d1c:	f105 0a01 	add.w	sl, r5, #1
 8015d20:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015d24:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015d28:	b2b6      	uxth	r6, r6
 8015d2a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015d2e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015d32:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015d36:	f106 0a01 	add.w	sl, r6, #1
 8015d3a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015d3e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015d42:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015d46:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015d4a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8015d4e:	e7ae      	b.n	8015cae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8015d50:	b005      	add	sp, #20
 8015d52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015d56 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015d56:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015d5a:	b085      	sub	sp, #20
 8015d5c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015d5e:	9203      	str	r2, [sp, #12]
 8015d60:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8015d64:	9201      	str	r2, [sp, #4]
 8015d66:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8015d6a:	9100      	str	r1, [sp, #0]
 8015d6c:	6841      	ldr	r1, [r0, #4]
 8015d6e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8015d72:	fb01 2404 	mla	r4, r1, r4, r2
 8015d76:	6802      	ldr	r2, [r0, #0]
 8015d78:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015d7c:	f8de 2000 	ldr.w	r2, [lr]
 8015d80:	9202      	str	r2, [sp, #8]
 8015d82:	9a01      	ldr	r2, [sp, #4]
 8015d84:	43d6      	mvns	r6, r2
 8015d86:	b2f6      	uxtb	r6, r6
 8015d88:	9a00      	ldr	r2, [sp, #0]
 8015d8a:	2a00      	cmp	r2, #0
 8015d8c:	dc03      	bgt.n	8015d96 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8015d8e:	9a03      	ldr	r2, [sp, #12]
 8015d90:	2a00      	cmp	r2, #0
 8015d92:	f340 8124 	ble.w	8015fde <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8015d96:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015d98:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8015d9c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8015da0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015da4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015da6:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015daa:	2b00      	cmp	r3, #0
 8015dac:	dd0e      	ble.n	8015dcc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015dae:	1408      	asrs	r0, r1, #16
 8015db0:	d405      	bmi.n	8015dbe <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015db2:	4560      	cmp	r0, ip
 8015db4:	da03      	bge.n	8015dbe <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015db6:	1410      	asrs	r0, r2, #16
 8015db8:	d401      	bmi.n	8015dbe <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015dba:	42b8      	cmp	r0, r7
 8015dbc:	db07      	blt.n	8015dce <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8015dbe:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015dc0:	4401      	add	r1, r0
 8015dc2:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015dc4:	3b01      	subs	r3, #1
 8015dc6:	4402      	add	r2, r0
 8015dc8:	3402      	adds	r4, #2
 8015dca:	e7ee      	b.n	8015daa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8015dcc:	d06e      	beq.n	8015eac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8015dce:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8015dd0:	1e58      	subs	r0, r3, #1
 8015dd2:	fb05 1500 	mla	r5, r5, r0, r1
 8015dd6:	142d      	asrs	r5, r5, #16
 8015dd8:	d45c      	bmi.n	8015e94 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015dda:	4565      	cmp	r5, ip
 8015ddc:	da5a      	bge.n	8015e94 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015dde:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8015de0:	fb05 2000 	mla	r0, r5, r0, r2
 8015de4:	1400      	asrs	r0, r0, #16
 8015de6:	d455      	bmi.n	8015e94 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015de8:	42b8      	cmp	r0, r7
 8015dea:	da53      	bge.n	8015e94 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015dec:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8015df0:	4699      	mov	r9, r3
 8015df2:	46a2      	mov	sl, r4
 8015df4:	f1b9 0f00 	cmp.w	r9, #0
 8015df8:	dd54      	ble.n	8015ea4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8015dfa:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8015dfe:	140d      	asrs	r5, r1, #16
 8015e00:	1410      	asrs	r0, r2, #16
 8015e02:	fb07 5000 	mla	r0, r7, r0, r5
 8015e06:	9d02      	ldr	r5, [sp, #8]
 8015e08:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8015e0c:	f8ba 5000 	ldrh.w	r5, [sl]
 8015e10:	122f      	asrs	r7, r5, #8
 8015e12:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8015e16:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015e1a:	fb17 f706 	smulbb	r7, r7, r6
 8015e1e:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8015e22:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015e26:	00ed      	lsls	r5, r5, #3
 8015e28:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8015e2c:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8015e30:	10c7      	asrs	r7, r0, #3
 8015e32:	b2ed      	uxtb	r5, r5
 8015e34:	00c0      	lsls	r0, r0, #3
 8015e36:	fb18 f806 	smulbb	r8, r8, r6
 8015e3a:	fb15 f506 	smulbb	r5, r5, r6
 8015e3e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015e42:	b2c0      	uxtb	r0, r0
 8015e44:	fa1f fc8c 	uxth.w	ip, ip
 8015e48:	fb07 870b 	mla	r7, r7, fp, r8
 8015e4c:	fb00 500b 	mla	r0, r0, fp, r5
 8015e50:	b280      	uxth	r0, r0
 8015e52:	b2bf      	uxth	r7, r7
 8015e54:	f10c 0501 	add.w	r5, ip, #1
 8015e58:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8015e5c:	f107 0801 	add.w	r8, r7, #1
 8015e60:	1c45      	adds	r5, r0, #1
 8015e62:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8015e66:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8015e6a:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015e6c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015e70:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015e74:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8015e78:	ea45 0c0c 	orr.w	ip, r5, ip
 8015e7c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8015e80:	4401      	add	r1, r0
 8015e82:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015e84:	ea4c 0c08 	orr.w	ip, ip, r8
 8015e88:	f82a cb02 	strh.w	ip, [sl], #2
 8015e8c:	4402      	add	r2, r0
 8015e8e:	f109 39ff 	add.w	r9, r9, #4294967295
 8015e92:	e7af      	b.n	8015df4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015e94:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8015e98:	f04f 0800 	mov.w	r8, #0
 8015e9c:	eb03 0008 	add.w	r0, r3, r8
 8015ea0:	2800      	cmp	r0, #0
 8015ea2:	dc41      	bgt.n	8015f28 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8015ea4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015ea8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015eac:	9b00      	ldr	r3, [sp, #0]
 8015eae:	2b00      	cmp	r3, #0
 8015eb0:	f340 8095 	ble.w	8015fde <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8015eb4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015eb8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015ebc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8015ec0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015ec2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015ec6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015eca:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015ece:	eef0 6a62 	vmov.f32	s13, s5
 8015ed2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015ed6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015eda:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015ede:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8015ee2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015ee6:	eef0 6a43 	vmov.f32	s13, s6
 8015eea:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015eee:	ee12 2a90 	vmov	r2, s5
 8015ef2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015ef6:	fb92 f3f3 	sdiv	r3, r2, r3
 8015efa:	ee13 2a10 	vmov	r2, s6
 8015efe:	9311      	str	r3, [sp, #68]	; 0x44
 8015f00:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015f02:	fb92 f3f3 	sdiv	r3, r2, r3
 8015f06:	9312      	str	r3, [sp, #72]	; 0x48
 8015f08:	9b00      	ldr	r3, [sp, #0]
 8015f0a:	9a03      	ldr	r2, [sp, #12]
 8015f0c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015f10:	3b01      	subs	r3, #1
 8015f12:	9300      	str	r3, [sp, #0]
 8015f14:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8015f18:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015f1a:	eeb0 3a67 	vmov.f32	s6, s15
 8015f1e:	bf08      	it	eq
 8015f20:	4613      	moveq	r3, r2
 8015f22:	eef0 2a47 	vmov.f32	s5, s14
 8015f26:	e72f      	b.n	8015d88 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8015f28:	140f      	asrs	r7, r1, #16
 8015f2a:	d451      	bmi.n	8015fd0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015f2c:	f8de 5008 	ldr.w	r5, [lr, #8]
 8015f30:	42bd      	cmp	r5, r7
 8015f32:	dd4d      	ble.n	8015fd0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015f34:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015f38:	d44a      	bmi.n	8015fd0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015f3a:	f8de 000c 	ldr.w	r0, [lr, #12]
 8015f3e:	4560      	cmp	r0, ip
 8015f40:	dd46      	ble.n	8015fd0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015f42:	b22d      	sxth	r5, r5
 8015f44:	fb0c 7505 	mla	r5, ip, r5, r7
 8015f48:	9802      	ldr	r0, [sp, #8]
 8015f4a:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8015f4e:	f06f 0501 	mvn.w	r5, #1
 8015f52:	fb05 fb08 	mul.w	fp, r5, r8
 8015f56:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8015f5a:	f834 500b 	ldrh.w	r5, [r4, fp]
 8015f5e:	122f      	asrs	r7, r5, #8
 8015f60:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015f64:	fb17 f706 	smulbb	r7, r7, r6
 8015f68:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8015f6c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015f70:	00ed      	lsls	r5, r5, #3
 8015f72:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8015f76:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8015f7a:	10c7      	asrs	r7, r0, #3
 8015f7c:	b2ed      	uxtb	r5, r5
 8015f7e:	00c0      	lsls	r0, r0, #3
 8015f80:	fb19 f906 	smulbb	r9, r9, r6
 8015f84:	fb15 f506 	smulbb	r5, r5, r6
 8015f88:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015f8c:	b2c0      	uxtb	r0, r0
 8015f8e:	fa1f fc8c 	uxth.w	ip, ip
 8015f92:	fb07 970a 	mla	r7, r7, sl, r9
 8015f96:	fb00 500a 	mla	r0, r0, sl, r5
 8015f9a:	b2bf      	uxth	r7, r7
 8015f9c:	b280      	uxth	r0, r0
 8015f9e:	f10c 0501 	add.w	r5, ip, #1
 8015fa2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8015fa6:	f107 0901 	add.w	r9, r7, #1
 8015faa:	1c45      	adds	r5, r0, #1
 8015fac:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8015fb0:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8015fb4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015fb8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015fbc:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8015fc0:	ea45 0c0c 	orr.w	ip, r5, ip
 8015fc4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8015fc8:	ea4c 0c09 	orr.w	ip, ip, r9
 8015fcc:	f824 c00b 	strh.w	ip, [r4, fp]
 8015fd0:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015fd2:	4401      	add	r1, r0
 8015fd4:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015fd6:	f108 38ff 	add.w	r8, r8, #4294967295
 8015fda:	4402      	add	r2, r0
 8015fdc:	e75e      	b.n	8015e9c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8015fde:	b005      	add	sp, #20
 8015fe0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015fe4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015fe4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015fe8:	b085      	sub	sp, #20
 8015fea:	4693      	mov	fp, r2
 8015fec:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8015fee:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8015ff0:	6870      	ldr	r0, [r6, #4]
 8015ff2:	9101      	str	r1, [sp, #4]
 8015ff4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8015ff8:	fb00 2404 	mla	r4, r0, r4, r2
 8015ffc:	6832      	ldr	r2, [r6, #0]
 8015ffe:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8016002:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016006:	682a      	ldr	r2, [r5, #0]
 8016008:	9202      	str	r2, [sp, #8]
 801600a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801600e:	9a01      	ldr	r2, [sp, #4]
 8016010:	2a00      	cmp	r2, #0
 8016012:	dc03      	bgt.n	801601c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8016014:	f1bb 0f00 	cmp.w	fp, #0
 8016018:	f340 809a 	ble.w	8016150 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801601c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801601e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8016022:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8016026:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801602a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801602c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8016030:	2b00      	cmp	r3, #0
 8016032:	dd0c      	ble.n	801604e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8016034:	1406      	asrs	r6, r0, #16
 8016036:	d405      	bmi.n	8016044 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016038:	454e      	cmp	r6, r9
 801603a:	da03      	bge.n	8016044 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801603c:	1416      	asrs	r6, r2, #16
 801603e:	d401      	bmi.n	8016044 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016040:	4546      	cmp	r6, r8
 8016042:	db05      	blt.n	8016050 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8016044:	4470      	add	r0, lr
 8016046:	4462      	add	r2, ip
 8016048:	3b01      	subs	r3, #1
 801604a:	3402      	adds	r4, #2
 801604c:	e7f0      	b.n	8016030 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801604e:	d00f      	beq.n	8016070 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8016050:	1e5e      	subs	r6, r3, #1
 8016052:	fb0e 0706 	mla	r7, lr, r6, r0
 8016056:	143f      	asrs	r7, r7, #16
 8016058:	d541      	bpl.n	80160de <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801605a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801605e:	4698      	mov	r8, r3
 8016060:	9603      	str	r6, [sp, #12]
 8016062:	f1b8 0f00 	cmp.w	r8, #0
 8016066:	dc56      	bgt.n	8016116 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8016068:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801606c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016070:	9b01      	ldr	r3, [sp, #4]
 8016072:	2b00      	cmp	r3, #0
 8016074:	dd6c      	ble.n	8016150 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8016076:	ee30 0a04 	vadd.f32	s0, s0, s8
 801607a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801607e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016082:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016084:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016088:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801608c:	eeb0 6a62 	vmov.f32	s12, s5
 8016090:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016094:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016098:	ee77 2a62 	vsub.f32	s5, s14, s5
 801609c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80160a0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80160a4:	eeb0 6a43 	vmov.f32	s12, s6
 80160a8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80160ac:	ee12 2a90 	vmov	r2, s5
 80160b0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80160b4:	fb92 fef3 	sdiv	lr, r2, r3
 80160b8:	ee13 2a10 	vmov	r2, s6
 80160bc:	fb92 fcf3 	sdiv	ip, r2, r3
 80160c0:	9b01      	ldr	r3, [sp, #4]
 80160c2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80160c6:	3b01      	subs	r3, #1
 80160c8:	9301      	str	r3, [sp, #4]
 80160ca:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80160ce:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80160d0:	eeb0 3a67 	vmov.f32	s6, s15
 80160d4:	bf08      	it	eq
 80160d6:	465b      	moveq	r3, fp
 80160d8:	eef0 2a47 	vmov.f32	s5, s14
 80160dc:	e797      	b.n	801600e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80160de:	454f      	cmp	r7, r9
 80160e0:	dabb      	bge.n	801605a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80160e2:	fb0c 2606 	mla	r6, ip, r6, r2
 80160e6:	1436      	asrs	r6, r6, #16
 80160e8:	d4b7      	bmi.n	801605a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80160ea:	4546      	cmp	r6, r8
 80160ec:	dab5      	bge.n	801605a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80160ee:	461e      	mov	r6, r3
 80160f0:	46a0      	mov	r8, r4
 80160f2:	2e00      	cmp	r6, #0
 80160f4:	ddb8      	ble.n	8016068 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80160f6:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80160fa:	9902      	ldr	r1, [sp, #8]
 80160fc:	1417      	asrs	r7, r2, #16
 80160fe:	ea4f 4920 	mov.w	r9, r0, asr #16
 8016102:	fb0a 9707 	mla	r7, sl, r7, r9
 8016106:	4470      	add	r0, lr
 8016108:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801610c:	f828 7b02 	strh.w	r7, [r8], #2
 8016110:	4462      	add	r2, ip
 8016112:	3e01      	subs	r6, #1
 8016114:	e7ed      	b.n	80160f2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8016116:	ea5f 4920 	movs.w	r9, r0, asr #16
 801611a:	d414      	bmi.n	8016146 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801611c:	68ae      	ldr	r6, [r5, #8]
 801611e:	454e      	cmp	r6, r9
 8016120:	dd11      	ble.n	8016146 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8016122:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8016126:	d40e      	bmi.n	8016146 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8016128:	68ef      	ldr	r7, [r5, #12]
 801612a:	4557      	cmp	r7, sl
 801612c:	dd0b      	ble.n	8016146 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801612e:	b236      	sxth	r6, r6
 8016130:	fb0a 9606 	mla	r6, sl, r6, r9
 8016134:	9f02      	ldr	r7, [sp, #8]
 8016136:	f06f 0101 	mvn.w	r1, #1
 801613a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801613e:	fb01 f608 	mul.w	r6, r1, r8
 8016142:	9903      	ldr	r1, [sp, #12]
 8016144:	538f      	strh	r7, [r1, r6]
 8016146:	4470      	add	r0, lr
 8016148:	4462      	add	r2, ip
 801614a:	f108 38ff 	add.w	r8, r8, #4294967295
 801614e:	e788      	b.n	8016062 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016150:	b005      	add	sp, #20
 8016152:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016156 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016156:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801615a:	b087      	sub	sp, #28
 801615c:	468b      	mov	fp, r1
 801615e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016160:	9203      	str	r2, [sp, #12]
 8016162:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8016166:	9204      	str	r2, [sp, #16]
 8016168:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801616c:	6841      	ldr	r1, [r0, #4]
 801616e:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8016172:	fb01 2505 	mla	r5, r1, r5, r2
 8016176:	6802      	ldr	r2, [r0, #0]
 8016178:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801617c:	f8d9 2000 	ldr.w	r2, [r9]
 8016180:	9201      	str	r2, [sp, #4]
 8016182:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016186:	f1bb 0f00 	cmp.w	fp, #0
 801618a:	dc03      	bgt.n	8016194 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801618c:	9a03      	ldr	r2, [sp, #12]
 801618e:	2a00      	cmp	r2, #0
 8016190:	f340 8159 	ble.w	8016446 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8016194:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016196:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801619a:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801619e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80161a2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80161a4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80161a8:	2b00      	cmp	r3, #0
 80161aa:	dd0e      	ble.n	80161ca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80161ac:	1402      	asrs	r2, r0, #16
 80161ae:	d405      	bmi.n	80161bc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80161b0:	42ba      	cmp	r2, r7
 80161b2:	da03      	bge.n	80161bc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80161b4:	140a      	asrs	r2, r1, #16
 80161b6:	d401      	bmi.n	80161bc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80161b8:	42b2      	cmp	r2, r6
 80161ba:	db07      	blt.n	80161cc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80161bc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80161be:	4410      	add	r0, r2
 80161c0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80161c2:	3b01      	subs	r3, #1
 80161c4:	4411      	add	r1, r2
 80161c6:	3502      	adds	r5, #2
 80161c8:	e7ee      	b.n	80161a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80161ca:	d017      	beq.n	80161fc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80161cc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80161ce:	1e5a      	subs	r2, r3, #1
 80161d0:	fb04 0402 	mla	r4, r4, r2, r0
 80161d4:	1424      	asrs	r4, r4, #16
 80161d6:	d409      	bmi.n	80161ec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80161d8:	42bc      	cmp	r4, r7
 80161da:	da07      	bge.n	80161ec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80161dc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80161de:	fb04 1202 	mla	r2, r4, r2, r1
 80161e2:	1412      	asrs	r2, r2, #16
 80161e4:	d402      	bmi.n	80161ec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80161e6:	42b2      	cmp	r2, r6
 80161e8:	f2c0 80bf 	blt.w	801636a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80161ec:	2700      	movs	r7, #0
 80161ee:	19da      	adds	r2, r3, r7
 80161f0:	2a00      	cmp	r2, #0
 80161f2:	dc3e      	bgt.n	8016272 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80161f4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80161f8:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80161fc:	f1bb 0f00 	cmp.w	fp, #0
 8016200:	f340 8121 	ble.w	8016446 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8016204:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016208:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801620c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016210:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016212:	f1bb 0b01 	subs.w	fp, fp, #1
 8016216:	ee31 1a05 	vadd.f32	s2, s2, s10
 801621a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801621e:	eeb0 6a62 	vmov.f32	s12, s5
 8016222:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016226:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801622a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801622e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016232:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016236:	eeb0 6a43 	vmov.f32	s12, s6
 801623a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801623e:	ee12 2a90 	vmov	r2, s5
 8016242:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016246:	fb92 f3f3 	sdiv	r3, r2, r3
 801624a:	ee13 2a10 	vmov	r2, s6
 801624e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016252:	9313      	str	r3, [sp, #76]	; 0x4c
 8016254:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016256:	fb92 f3f3 	sdiv	r3, r2, r3
 801625a:	9a03      	ldr	r2, [sp, #12]
 801625c:	9314      	str	r3, [sp, #80]	; 0x50
 801625e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8016262:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016264:	eeb0 3a67 	vmov.f32	s6, s15
 8016268:	bf08      	it	eq
 801626a:	4613      	moveq	r3, r2
 801626c:	eef0 2a47 	vmov.f32	s5, s14
 8016270:	e789      	b.n	8016186 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8016272:	1406      	asrs	r6, r0, #16
 8016274:	d42d      	bmi.n	80162d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8016276:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801627a:	42b4      	cmp	r4, r6
 801627c:	dd29      	ble.n	80162d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801627e:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8016282:	d426      	bmi.n	80162d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8016284:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8016288:	4562      	cmp	r2, ip
 801628a:	dd22      	ble.n	80162d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801628c:	b224      	sxth	r4, r4
 801628e:	9a01      	ldr	r2, [sp, #4]
 8016290:	fb0c 6404 	mla	r4, ip, r4, r6
 8016294:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8016298:	0e22      	lsrs	r2, r4, #24
 801629a:	d01a      	beq.n	80162d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801629c:	9e04      	ldr	r6, [sp, #16]
 801629e:	4372      	muls	r2, r6
 80162a0:	1c56      	adds	r6, r2, #1
 80162a2:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80162a6:	1212      	asrs	r2, r2, #8
 80162a8:	0a26      	lsrs	r6, r4, #8
 80162aa:	2aff      	cmp	r2, #255	; 0xff
 80162ac:	9605      	str	r6, [sp, #20]
 80162ae:	d116      	bne.n	80162de <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 80162b0:	f06f 0201 	mvn.w	r2, #1
 80162b4:	fb02 fc07 	mul.w	ip, r2, r7
 80162b8:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 80162bc:	0962      	lsrs	r2, r4, #5
 80162be:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80162c2:	f026 0607 	bic.w	r6, r6, #7
 80162c6:	4316      	orrs	r6, r2
 80162c8:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80162cc:	4326      	orrs	r6, r4
 80162ce:	f825 600c 	strh.w	r6, [r5, ip]
 80162d2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80162d4:	4410      	add	r0, r2
 80162d6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80162d8:	3f01      	subs	r7, #1
 80162da:	4411      	add	r1, r2
 80162dc:	e787      	b.n	80161ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80162de:	f06f 0601 	mvn.w	r6, #1
 80162e2:	437e      	muls	r6, r7
 80162e4:	fa1f fa82 	uxth.w	sl, r2
 80162e8:	f835 8006 	ldrh.w	r8, [r5, r6]
 80162ec:	9602      	str	r6, [sp, #8]
 80162ee:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80162f2:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 80162f6:	43d2      	mvns	r2, r2
 80162f8:	b2d2      	uxtb	r2, r2
 80162fa:	fb1c fc0a 	smulbb	ip, ip, sl
 80162fe:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8016302:	fb0e ce02 	mla	lr, lr, r2, ip
 8016306:	b2e4      	uxtb	r4, r4
 8016308:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801630c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8016310:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8016314:	fa5f f888 	uxtb.w	r8, r8
 8016318:	fb14 f40a 	smulbb	r4, r4, sl
 801631c:	fb08 4402 	mla	r4, r8, r2, r4
 8016320:	fa1f fe8e 	uxth.w	lr, lr
 8016324:	fb16 f60a 	smulbb	r6, r6, sl
 8016328:	b2a4      	uxth	r4, r4
 801632a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801632e:	fb0c 6c02 	mla	ip, ip, r2, r6
 8016332:	f10e 0201 	add.w	r2, lr, #1
 8016336:	1c66      	adds	r6, r4, #1
 8016338:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801633c:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8016340:	fa1f fc8c 	uxth.w	ip, ip
 8016344:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016348:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801634c:	ea46 0e0e 	orr.w	lr, r6, lr
 8016350:	f10c 0601 	add.w	r6, ip, #1
 8016354:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8016358:	0976      	lsrs	r6, r6, #5
 801635a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801635e:	9a02      	ldr	r2, [sp, #8]
 8016360:	ea4e 0e06 	orr.w	lr, lr, r6
 8016364:	f825 e002 	strh.w	lr, [r5, r2]
 8016368:	e7b3      	b.n	80162d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801636a:	f04f 0800 	mov.w	r8, #0
 801636e:	eba3 0208 	sub.w	r2, r3, r8
 8016372:	2a00      	cmp	r2, #0
 8016374:	f77f af3e 	ble.w	80161f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8016378:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801637c:	1404      	asrs	r4, r0, #16
 801637e:	140a      	asrs	r2, r1, #16
 8016380:	fb06 4202 	mla	r2, r6, r2, r4
 8016384:	9c01      	ldr	r4, [sp, #4]
 8016386:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801638a:	0e22      	lsrs	r2, r4, #24
 801638c:	d016      	beq.n	80163bc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801638e:	9e04      	ldr	r6, [sp, #16]
 8016390:	4372      	muls	r2, r6
 8016392:	1c56      	adds	r6, r2, #1
 8016394:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8016398:	1212      	asrs	r2, r2, #8
 801639a:	2aff      	cmp	r2, #255	; 0xff
 801639c:	ea4f 2614 	mov.w	r6, r4, lsr #8
 80163a0:	d113      	bne.n	80163ca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 80163a2:	0962      	lsrs	r2, r4, #5
 80163a4:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 80163a8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80163ac:	f026 0607 	bic.w	r6, r6, #7
 80163b0:	4316      	orrs	r6, r2
 80163b2:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80163b6:	4326      	orrs	r6, r4
 80163b8:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 80163bc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80163be:	4410      	add	r0, r2
 80163c0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80163c2:	f108 0801 	add.w	r8, r8, #1
 80163c6:	4411      	add	r1, r2
 80163c8:	e7d1      	b.n	801636e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 80163ca:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 80163ce:	fa1f fa82 	uxth.w	sl, r2
 80163d2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80163d6:	f3c4 4707 	ubfx	r7, r4, #16, #8
 80163da:	43d2      	mvns	r2, r2
 80163dc:	b2d2      	uxtb	r2, r2
 80163de:	fb17 f70a 	smulbb	r7, r7, sl
 80163e2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80163e6:	fb0c 7c02 	mla	ip, ip, r2, r7
 80163ea:	b2e4      	uxtb	r4, r4
 80163ec:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80163f0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80163f4:	fa5f fe8e 	uxtb.w	lr, lr
 80163f8:	fb14 f40a 	smulbb	r4, r4, sl
 80163fc:	fb0e 4402 	mla	r4, lr, r2, r4
 8016400:	b2f6      	uxtb	r6, r6
 8016402:	fa1f fc8c 	uxth.w	ip, ip
 8016406:	fb16 f60a 	smulbb	r6, r6, sl
 801640a:	b2a4      	uxth	r4, r4
 801640c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016410:	fb07 6702 	mla	r7, r7, r2, r6
 8016414:	f10c 0201 	add.w	r2, ip, #1
 8016418:	1c66      	adds	r6, r4, #1
 801641a:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801641e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8016422:	b2bf      	uxth	r7, r7
 8016424:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016428:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801642c:	ea46 0c0c 	orr.w	ip, r6, ip
 8016430:	1c7e      	adds	r6, r7, #1
 8016432:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8016436:	0976      	lsrs	r6, r6, #5
 8016438:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801643c:	ea4c 0c06 	orr.w	ip, ip, r6
 8016440:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8016444:	e7ba      	b.n	80163bc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8016446:	b007      	add	sp, #28
 8016448:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801644c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801644c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016450:	b085      	sub	sp, #20
 8016452:	468b      	mov	fp, r1
 8016454:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8016456:	9203      	str	r2, [sp, #12]
 8016458:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801645c:	6841      	ldr	r1, [r0, #4]
 801645e:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8016462:	fb01 2404 	mla	r4, r1, r4, r2
 8016466:	6802      	ldr	r2, [r0, #0]
 8016468:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801646c:	f8d8 2000 	ldr.w	r2, [r8]
 8016470:	9201      	str	r2, [sp, #4]
 8016472:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016476:	f1bb 0f00 	cmp.w	fp, #0
 801647a:	dc03      	bgt.n	8016484 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801647c:	9a03      	ldr	r2, [sp, #12]
 801647e:	2a00      	cmp	r2, #0
 8016480:	f340 814f 	ble.w	8016722 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8016484:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016486:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801648a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801648e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8016492:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016494:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8016498:	2b00      	cmp	r3, #0
 801649a:	dd0e      	ble.n	80164ba <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801649c:	1408      	asrs	r0, r1, #16
 801649e:	d405      	bmi.n	80164ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80164a0:	42b8      	cmp	r0, r7
 80164a2:	da03      	bge.n	80164ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80164a4:	1410      	asrs	r0, r2, #16
 80164a6:	d401      	bmi.n	80164ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80164a8:	42b0      	cmp	r0, r6
 80164aa:	db07      	blt.n	80164bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80164ac:	9811      	ldr	r0, [sp, #68]	; 0x44
 80164ae:	4401      	add	r1, r0
 80164b0:	9812      	ldr	r0, [sp, #72]	; 0x48
 80164b2:	3b01      	subs	r3, #1
 80164b4:	4402      	add	r2, r0
 80164b6:	3402      	adds	r4, #2
 80164b8:	e7ee      	b.n	8016498 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80164ba:	d017      	beq.n	80164ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80164bc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80164be:	1e58      	subs	r0, r3, #1
 80164c0:	fb05 1500 	mla	r5, r5, r0, r1
 80164c4:	142d      	asrs	r5, r5, #16
 80164c6:	d409      	bmi.n	80164dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80164c8:	42bd      	cmp	r5, r7
 80164ca:	da07      	bge.n	80164dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80164cc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80164ce:	fb05 2000 	mla	r0, r5, r0, r2
 80164d2:	1400      	asrs	r0, r0, #16
 80164d4:	d402      	bmi.n	80164dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80164d6:	42b0      	cmp	r0, r6
 80164d8:	f2c0 80ba 	blt.w	8016650 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80164dc:	2600      	movs	r6, #0
 80164de:	1998      	adds	r0, r3, r6
 80164e0:	2800      	cmp	r0, #0
 80164e2:	dc3e      	bgt.n	8016562 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80164e4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80164e8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80164ec:	f1bb 0f00 	cmp.w	fp, #0
 80164f0:	f340 8117 	ble.w	8016722 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80164f4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80164f8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80164fc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016500:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016502:	f1bb 0b01 	subs.w	fp, fp, #1
 8016506:	ee31 1a05 	vadd.f32	s2, s2, s10
 801650a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801650e:	eeb0 6a62 	vmov.f32	s12, s5
 8016512:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016516:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801651a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801651e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8016522:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016526:	eeb0 6a43 	vmov.f32	s12, s6
 801652a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801652e:	ee12 2a90 	vmov	r2, s5
 8016532:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016536:	fb92 f3f3 	sdiv	r3, r2, r3
 801653a:	ee13 2a10 	vmov	r2, s6
 801653e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016542:	9311      	str	r3, [sp, #68]	; 0x44
 8016544:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016546:	fb92 f3f3 	sdiv	r3, r2, r3
 801654a:	9a03      	ldr	r2, [sp, #12]
 801654c:	9312      	str	r3, [sp, #72]	; 0x48
 801654e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8016552:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016554:	eeb0 3a67 	vmov.f32	s6, s15
 8016558:	bf08      	it	eq
 801655a:	4613      	moveq	r3, r2
 801655c:	eef0 2a47 	vmov.f32	s5, s14
 8016560:	e789      	b.n	8016476 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8016562:	140f      	asrs	r7, r1, #16
 8016564:	d424      	bmi.n	80165b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016566:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801656a:	42bd      	cmp	r5, r7
 801656c:	dd20      	ble.n	80165b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801656e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8016572:	d41d      	bmi.n	80165b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016574:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8016578:	4560      	cmp	r0, ip
 801657a:	dd19      	ble.n	80165b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801657c:	b22d      	sxth	r5, r5
 801657e:	fb0c 7505 	mla	r5, ip, r5, r7
 8016582:	9801      	ldr	r0, [sp, #4]
 8016584:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8016588:	0e07      	lsrs	r7, r0, #24
 801658a:	2fff      	cmp	r7, #255	; 0xff
 801658c:	d116      	bne.n	80165bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801658e:	f06f 0501 	mvn.w	r5, #1
 8016592:	fb05 f706 	mul.w	r7, r5, r6
 8016596:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801659a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801659e:	0945      	lsrs	r5, r0, #5
 80165a0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80165a4:	ea4c 0505 	orr.w	r5, ip, r5
 80165a8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80165ac:	4305      	orrs	r5, r0
 80165ae:	53e5      	strh	r5, [r4, r7]
 80165b0:	9811      	ldr	r0, [sp, #68]	; 0x44
 80165b2:	4401      	add	r1, r0
 80165b4:	9812      	ldr	r0, [sp, #72]	; 0x48
 80165b6:	3e01      	subs	r6, #1
 80165b8:	4402      	add	r2, r0
 80165ba:	e790      	b.n	80164de <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80165bc:	b2fd      	uxtb	r5, r7
 80165be:	2f00      	cmp	r7, #0
 80165c0:	d0f6      	beq.n	80165b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80165c2:	f06f 0701 	mvn.w	r7, #1
 80165c6:	4377      	muls	r7, r6
 80165c8:	fa1f f985 	uxth.w	r9, r5
 80165cc:	f834 e007 	ldrh.w	lr, [r4, r7]
 80165d0:	9702      	str	r7, [sp, #8]
 80165d2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80165d6:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80165da:	43ed      	mvns	r5, r5
 80165dc:	b2ed      	uxtb	r5, r5
 80165de:	fb17 f709 	smulbb	r7, r7, r9
 80165e2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80165e6:	fb0c 7c05 	mla	ip, ip, r5, r7
 80165ea:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80165ee:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80165f2:	b2c0      	uxtb	r0, r0
 80165f4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80165f8:	fa5f fe8e 	uxtb.w	lr, lr
 80165fc:	fb10 f009 	smulbb	r0, r0, r9
 8016600:	fb0e 0005 	mla	r0, lr, r5, r0
 8016604:	b280      	uxth	r0, r0
 8016606:	fa1f fc8c 	uxth.w	ip, ip
 801660a:	fb1a fa09 	smulbb	sl, sl, r9
 801660e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016612:	fb07 a705 	mla	r7, r7, r5, sl
 8016616:	f100 0a01 	add.w	sl, r0, #1
 801661a:	f10c 0501 	add.w	r5, ip, #1
 801661e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8016622:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8016626:	b2bf      	uxth	r7, r7
 8016628:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801662c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016630:	ea4a 0c0c 	orr.w	ip, sl, ip
 8016634:	f107 0a01 	add.w	sl, r7, #1
 8016638:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801663c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016640:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016644:	9802      	ldr	r0, [sp, #8]
 8016646:	ea4c 0c0a 	orr.w	ip, ip, sl
 801664a:	f824 c000 	strh.w	ip, [r4, r0]
 801664e:	e7af      	b.n	80165b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016650:	f04f 0e00 	mov.w	lr, #0
 8016654:	eba3 000e 	sub.w	r0, r3, lr
 8016658:	2800      	cmp	r0, #0
 801665a:	f77f af43 	ble.w	80164e4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801665e:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8016662:	140d      	asrs	r5, r1, #16
 8016664:	1410      	asrs	r0, r2, #16
 8016666:	fb06 5000 	mla	r0, r6, r0, r5
 801666a:	9d01      	ldr	r5, [sp, #4]
 801666c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8016670:	0e2e      	lsrs	r6, r5, #24
 8016672:	2eff      	cmp	r6, #255	; 0xff
 8016674:	d112      	bne.n	801669c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8016676:	482c      	ldr	r0, [pc, #176]	; (8016728 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8016678:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801667c:	0968      	lsrs	r0, r5, #5
 801667e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016682:	4330      	orrs	r0, r6
 8016684:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8016688:	4328      	orrs	r0, r5
 801668a:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801668e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016690:	4401      	add	r1, r0
 8016692:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016694:	f10e 0e01 	add.w	lr, lr, #1
 8016698:	4402      	add	r2, r0
 801669a:	e7db      	b.n	8016654 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801669c:	b2f0      	uxtb	r0, r6
 801669e:	2e00      	cmp	r6, #0
 80166a0:	d0f5      	beq.n	801668e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80166a2:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80166a6:	fa1f f980 	uxth.w	r9, r0
 80166aa:	ea4f 272c 	mov.w	r7, ip, asr #8
 80166ae:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80166b2:	43c0      	mvns	r0, r0
 80166b4:	b2c0      	uxtb	r0, r0
 80166b6:	fb16 f609 	smulbb	r6, r6, r9
 80166ba:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80166be:	fb07 6700 	mla	r7, r7, r0, r6
 80166c2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80166c6:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80166ca:	b2ed      	uxtb	r5, r5
 80166cc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80166d0:	fa5f fc8c 	uxtb.w	ip, ip
 80166d4:	fb15 f509 	smulbb	r5, r5, r9
 80166d8:	fb0c 5500 	mla	r5, ip, r0, r5
 80166dc:	b2bf      	uxth	r7, r7
 80166de:	fb1a fa09 	smulbb	sl, sl, r9
 80166e2:	b2ad      	uxth	r5, r5
 80166e4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80166e8:	fb06 a600 	mla	r6, r6, r0, sl
 80166ec:	1c78      	adds	r0, r7, #1
 80166ee:	f105 0a01 	add.w	sl, r5, #1
 80166f2:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80166f6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80166fa:	b2b6      	uxth	r6, r6
 80166fc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016700:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016704:	ea4a 0707 	orr.w	r7, sl, r7
 8016708:	f106 0a01 	add.w	sl, r6, #1
 801670c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016710:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016714:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016718:	ea47 070a 	orr.w	r7, r7, sl
 801671c:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8016720:	e7b5      	b.n	801668e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8016722:	b005      	add	sp, #20
 8016724:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016728:	fffff800 	.word	0xfffff800

0801672c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801672c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016730:	b087      	sub	sp, #28
 8016732:	468b      	mov	fp, r1
 8016734:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016736:	9203      	str	r2, [sp, #12]
 8016738:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801673c:	9204      	str	r2, [sp, #16]
 801673e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8016742:	6841      	ldr	r1, [r0, #4]
 8016744:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8016748:	fb01 2404 	mla	r4, r1, r4, r2
 801674c:	6802      	ldr	r2, [r0, #0]
 801674e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016752:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8016756:	3201      	adds	r2, #1
 8016758:	f022 0201 	bic.w	r2, r2, #1
 801675c:	9200      	str	r2, [sp, #0]
 801675e:	f8d9 2000 	ldr.w	r2, [r9]
 8016762:	9201      	str	r2, [sp, #4]
 8016764:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016768:	f1bb 0f00 	cmp.w	fp, #0
 801676c:	dc03      	bgt.n	8016776 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801676e:	9a03      	ldr	r2, [sp, #12]
 8016770:	2a00      	cmp	r2, #0
 8016772:	f340 8169 	ble.w	8016a48 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8016776:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016778:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801677c:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8016780:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8016784:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016786:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801678a:	2b00      	cmp	r3, #0
 801678c:	dd0e      	ble.n	80167ac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801678e:	1402      	asrs	r2, r0, #16
 8016790:	d405      	bmi.n	801679e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016792:	42ba      	cmp	r2, r7
 8016794:	da03      	bge.n	801679e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016796:	140a      	asrs	r2, r1, #16
 8016798:	d401      	bmi.n	801679e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801679a:	42b2      	cmp	r2, r6
 801679c:	db07      	blt.n	80167ae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801679e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80167a0:	4410      	add	r0, r2
 80167a2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80167a4:	3b01      	subs	r3, #1
 80167a6:	4411      	add	r1, r2
 80167a8:	3402      	adds	r4, #2
 80167aa:	e7ee      	b.n	801678a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80167ac:	d017      	beq.n	80167de <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80167ae:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80167b0:	1e5a      	subs	r2, r3, #1
 80167b2:	fb05 0502 	mla	r5, r5, r2, r0
 80167b6:	142d      	asrs	r5, r5, #16
 80167b8:	d409      	bmi.n	80167ce <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80167ba:	42bd      	cmp	r5, r7
 80167bc:	da07      	bge.n	80167ce <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80167be:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80167c0:	fb05 1202 	mla	r2, r5, r2, r1
 80167c4:	1412      	asrs	r2, r2, #16
 80167c6:	d402      	bmi.n	80167ce <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80167c8:	42b2      	cmp	r2, r6
 80167ca:	f2c0 80c7 	blt.w	801695c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 80167ce:	2700      	movs	r7, #0
 80167d0:	19da      	adds	r2, r3, r7
 80167d2:	2a00      	cmp	r2, #0
 80167d4:	dc3e      	bgt.n	8016854 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80167d6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80167da:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80167de:	f1bb 0f00 	cmp.w	fp, #0
 80167e2:	f340 8131 	ble.w	8016a48 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 80167e6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80167ea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80167ee:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80167f2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80167f4:	f1bb 0b01 	subs.w	fp, fp, #1
 80167f8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80167fc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016800:	eeb0 6a62 	vmov.f32	s12, s5
 8016804:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016808:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801680c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016810:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016814:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016818:	eeb0 6a43 	vmov.f32	s12, s6
 801681c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016820:	ee12 2a90 	vmov	r2, s5
 8016824:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016828:	fb92 f3f3 	sdiv	r3, r2, r3
 801682c:	ee13 2a10 	vmov	r2, s6
 8016830:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016834:	9313      	str	r3, [sp, #76]	; 0x4c
 8016836:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016838:	fb92 f3f3 	sdiv	r3, r2, r3
 801683c:	9a03      	ldr	r2, [sp, #12]
 801683e:	9314      	str	r3, [sp, #80]	; 0x50
 8016840:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8016844:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016846:	eeb0 3a67 	vmov.f32	s6, s15
 801684a:	bf08      	it	eq
 801684c:	4613      	moveq	r3, r2
 801684e:	eef0 2a47 	vmov.f32	s5, s14
 8016852:	e789      	b.n	8016768 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8016854:	1405      	asrs	r5, r0, #16
 8016856:	d435      	bmi.n	80168c4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016858:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801685c:	42aa      	cmp	r2, r5
 801685e:	dd31      	ble.n	80168c4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016860:	140e      	asrs	r6, r1, #16
 8016862:	d42f      	bmi.n	80168c4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016864:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8016868:	42b2      	cmp	r2, r6
 801686a:	dd2b      	ble.n	80168c4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801686c:	9a00      	ldr	r2, [sp, #0]
 801686e:	fb06 5502 	mla	r5, r6, r2, r5
 8016872:	086a      	lsrs	r2, r5, #1
 8016874:	9e01      	ldr	r6, [sp, #4]
 8016876:	5cb2      	ldrb	r2, [r6, r2]
 8016878:	07ee      	lsls	r6, r5, #31
 801687a:	bf54      	ite	pl
 801687c:	f002 020f 	andpl.w	r2, r2, #15
 8016880:	1112      	asrmi	r2, r2, #4
 8016882:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016886:	b2d2      	uxtb	r2, r2
 8016888:	b1e2      	cbz	r2, 80168c4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801688a:	9d04      	ldr	r5, [sp, #16]
 801688c:	436a      	muls	r2, r5
 801688e:	1c55      	adds	r5, r2, #1
 8016890:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8016894:	4d6e      	ldr	r5, [pc, #440]	; (8016a50 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8016896:	682d      	ldr	r5, [r5, #0]
 8016898:	1212      	asrs	r2, r2, #8
 801689a:	0a2e      	lsrs	r6, r5, #8
 801689c:	2aff      	cmp	r2, #255	; 0xff
 801689e:	9605      	str	r6, [sp, #20]
 80168a0:	d116      	bne.n	80168d0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80168a2:	f06f 0201 	mvn.w	r2, #1
 80168a6:	fb02 fc07 	mul.w	ip, r2, r7
 80168aa:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 80168ae:	096a      	lsrs	r2, r5, #5
 80168b0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80168b4:	f026 0607 	bic.w	r6, r6, #7
 80168b8:	4316      	orrs	r6, r2
 80168ba:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80168be:	432e      	orrs	r6, r5
 80168c0:	f824 600c 	strh.w	r6, [r4, ip]
 80168c4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80168c6:	4410      	add	r0, r2
 80168c8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80168ca:	3f01      	subs	r7, #1
 80168cc:	4411      	add	r1, r2
 80168ce:	e77f      	b.n	80167d0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 80168d0:	f06f 0601 	mvn.w	r6, #1
 80168d4:	437e      	muls	r6, r7
 80168d6:	fa1f fa82 	uxth.w	sl, r2
 80168da:	f834 8006 	ldrh.w	r8, [r4, r6]
 80168de:	9602      	str	r6, [sp, #8]
 80168e0:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80168e4:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 80168e8:	43d2      	mvns	r2, r2
 80168ea:	b2d2      	uxtb	r2, r2
 80168ec:	fb1c fc0a 	smulbb	ip, ip, sl
 80168f0:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80168f4:	fb0e ce02 	mla	lr, lr, r2, ip
 80168f8:	b2ed      	uxtb	r5, r5
 80168fa:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 80168fe:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8016902:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8016906:	fa5f f888 	uxtb.w	r8, r8
 801690a:	fb15 f50a 	smulbb	r5, r5, sl
 801690e:	fb08 5502 	mla	r5, r8, r2, r5
 8016912:	fa1f fe8e 	uxth.w	lr, lr
 8016916:	fb16 f60a 	smulbb	r6, r6, sl
 801691a:	b2ad      	uxth	r5, r5
 801691c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8016920:	fb0c 6c02 	mla	ip, ip, r2, r6
 8016924:	f10e 0201 	add.w	r2, lr, #1
 8016928:	1c6e      	adds	r6, r5, #1
 801692a:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801692e:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8016932:	fa1f fc8c 	uxth.w	ip, ip
 8016936:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801693a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801693e:	ea46 0e0e 	orr.w	lr, r6, lr
 8016942:	f10c 0601 	add.w	r6, ip, #1
 8016946:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801694a:	0976      	lsrs	r6, r6, #5
 801694c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016950:	9a02      	ldr	r2, [sp, #8]
 8016952:	ea4e 0e06 	orr.w	lr, lr, r6
 8016956:	f824 e002 	strh.w	lr, [r4, r2]
 801695a:	e7b3      	b.n	80168c4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801695c:	f04f 0800 	mov.w	r8, #0
 8016960:	eba3 0208 	sub.w	r2, r3, r8
 8016964:	2a00      	cmp	r2, #0
 8016966:	f77f af36 	ble.w	80167d6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801696a:	9e00      	ldr	r6, [sp, #0]
 801696c:	1402      	asrs	r2, r0, #16
 801696e:	140d      	asrs	r5, r1, #16
 8016970:	fb06 2505 	mla	r5, r6, r5, r2
 8016974:	086a      	lsrs	r2, r5, #1
 8016976:	9e01      	ldr	r6, [sp, #4]
 8016978:	5cb2      	ldrb	r2, [r6, r2]
 801697a:	07ed      	lsls	r5, r5, #31
 801697c:	bf54      	ite	pl
 801697e:	f002 020f 	andpl.w	r2, r2, #15
 8016982:	1112      	asrmi	r2, r2, #4
 8016984:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016988:	b2d2      	uxtb	r2, r2
 801698a:	b1c2      	cbz	r2, 80169be <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801698c:	9d04      	ldr	r5, [sp, #16]
 801698e:	436a      	muls	r2, r5
 8016990:	1c55      	adds	r5, r2, #1
 8016992:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8016996:	4d2e      	ldr	r5, [pc, #184]	; (8016a50 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8016998:	1212      	asrs	r2, r2, #8
 801699a:	682e      	ldr	r6, [r5, #0]
 801699c:	2aff      	cmp	r2, #255	; 0xff
 801699e:	ea4f 2516 	mov.w	r5, r6, lsr #8
 80169a2:	d113      	bne.n	80169cc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 80169a4:	0972      	lsrs	r2, r6, #5
 80169a6:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 80169aa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80169ae:	f025 0507 	bic.w	r5, r5, #7
 80169b2:	4315      	orrs	r5, r2
 80169b4:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80169b8:	4335      	orrs	r5, r6
 80169ba:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 80169be:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80169c0:	4410      	add	r0, r2
 80169c2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80169c4:	f108 0801 	add.w	r8, r8, #1
 80169c8:	4411      	add	r1, r2
 80169ca:	e7c9      	b.n	8016960 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80169cc:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80169d0:	fa1f fa82 	uxth.w	sl, r2
 80169d4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80169d8:	f3c6 4707 	ubfx	r7, r6, #16, #8
 80169dc:	43d2      	mvns	r2, r2
 80169de:	b2d2      	uxtb	r2, r2
 80169e0:	fb17 f70a 	smulbb	r7, r7, sl
 80169e4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80169e8:	fb0c 7c02 	mla	ip, ip, r2, r7
 80169ec:	b2f6      	uxtb	r6, r6
 80169ee:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80169f2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80169f6:	fa5f fe8e 	uxtb.w	lr, lr
 80169fa:	fb16 f60a 	smulbb	r6, r6, sl
 80169fe:	fb0e 6602 	mla	r6, lr, r2, r6
 8016a02:	b2ed      	uxtb	r5, r5
 8016a04:	fa1f fc8c 	uxth.w	ip, ip
 8016a08:	fb15 f50a 	smulbb	r5, r5, sl
 8016a0c:	b2b6      	uxth	r6, r6
 8016a0e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016a12:	fb07 5702 	mla	r7, r7, r2, r5
 8016a16:	f10c 0201 	add.w	r2, ip, #1
 8016a1a:	1c75      	adds	r5, r6, #1
 8016a1c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8016a20:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8016a24:	b2bf      	uxth	r7, r7
 8016a26:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8016a2a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016a2e:	ea45 0c0c 	orr.w	ip, r5, ip
 8016a32:	1c7d      	adds	r5, r7, #1
 8016a34:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8016a38:	096d      	lsrs	r5, r5, #5
 8016a3a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8016a3e:	ea4c 0c05 	orr.w	ip, ip, r5
 8016a42:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8016a46:	e7ba      	b.n	80169be <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8016a48:	b007      	add	sp, #28
 8016a4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016a4e:	bf00      	nop
 8016a50:	200155bc 	.word	0x200155bc

08016a54 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016a54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016a58:	b087      	sub	sp, #28
 8016a5a:	f8df 830c 	ldr.w	r8, [pc, #780]	; 8016d68 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8016a5e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016a60:	9205      	str	r2, [sp, #20]
 8016a62:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8016a66:	9101      	str	r1, [sp, #4]
 8016a68:	6841      	ldr	r1, [r0, #4]
 8016a6a:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 8016a6e:	fb01 2404 	mla	r4, r1, r4, r2
 8016a72:	6802      	ldr	r2, [r0, #0]
 8016a74:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016a78:	f8db 2008 	ldr.w	r2, [fp, #8]
 8016a7c:	3201      	adds	r2, #1
 8016a7e:	f022 0201 	bic.w	r2, r2, #1
 8016a82:	9202      	str	r2, [sp, #8]
 8016a84:	f8db 2000 	ldr.w	r2, [fp]
 8016a88:	9203      	str	r2, [sp, #12]
 8016a8a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016a8e:	9a01      	ldr	r2, [sp, #4]
 8016a90:	2a00      	cmp	r2, #0
 8016a92:	dc03      	bgt.n	8016a9c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8016a94:	9a05      	ldr	r2, [sp, #20]
 8016a96:	2a00      	cmp	r2, #0
 8016a98:	f340 8162 	ble.w	8016d60 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8016a9c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016a9e:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8016aa2:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8016aa6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8016aaa:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016aac:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8016ab0:	2b00      	cmp	r3, #0
 8016ab2:	dd0e      	ble.n	8016ad2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016ab4:	1402      	asrs	r2, r0, #16
 8016ab6:	d405      	bmi.n	8016ac4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016ab8:	42ba      	cmp	r2, r7
 8016aba:	da03      	bge.n	8016ac4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016abc:	140a      	asrs	r2, r1, #16
 8016abe:	d401      	bmi.n	8016ac4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016ac0:	42b2      	cmp	r2, r6
 8016ac2:	db07      	blt.n	8016ad4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8016ac4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016ac6:	4410      	add	r0, r2
 8016ac8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016aca:	3b01      	subs	r3, #1
 8016acc:	4411      	add	r1, r2
 8016ace:	3402      	adds	r4, #2
 8016ad0:	e7ee      	b.n	8016ab0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8016ad2:	d017      	beq.n	8016b04 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8016ad4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8016ad6:	1e5a      	subs	r2, r3, #1
 8016ad8:	fb05 0502 	mla	r5, r5, r2, r0
 8016adc:	142d      	asrs	r5, r5, #16
 8016ade:	d409      	bmi.n	8016af4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016ae0:	42bd      	cmp	r5, r7
 8016ae2:	da07      	bge.n	8016af4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016ae4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8016ae6:	fb05 1202 	mla	r2, r5, r2, r1
 8016aea:	1412      	asrs	r2, r2, #16
 8016aec:	d402      	bmi.n	8016af4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016aee:	42b2      	cmp	r2, r6
 8016af0:	f2c0 80c3 	blt.w	8016c7a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8016af4:	2500      	movs	r5, #0
 8016af6:	195a      	adds	r2, r3, r5
 8016af8:	2a00      	cmp	r2, #0
 8016afa:	dc3f      	bgt.n	8016b7c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8016afc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016b00:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016b04:	9b01      	ldr	r3, [sp, #4]
 8016b06:	2b00      	cmp	r3, #0
 8016b08:	f340 812a 	ble.w	8016d60 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8016b0c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016b10:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016b14:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016b18:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016b1a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016b1e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016b22:	eeb0 6a62 	vmov.f32	s12, s5
 8016b26:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016b2a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016b2e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016b32:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016b36:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016b3a:	eeb0 6a43 	vmov.f32	s12, s6
 8016b3e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016b42:	ee12 2a90 	vmov	r2, s5
 8016b46:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016b4a:	fb92 f3f3 	sdiv	r3, r2, r3
 8016b4e:	ee13 2a10 	vmov	r2, s6
 8016b52:	9313      	str	r3, [sp, #76]	; 0x4c
 8016b54:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016b56:	fb92 f3f3 	sdiv	r3, r2, r3
 8016b5a:	9314      	str	r3, [sp, #80]	; 0x50
 8016b5c:	9b01      	ldr	r3, [sp, #4]
 8016b5e:	9a05      	ldr	r2, [sp, #20]
 8016b60:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016b64:	3b01      	subs	r3, #1
 8016b66:	9301      	str	r3, [sp, #4]
 8016b68:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8016b6c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016b6e:	eeb0 3a67 	vmov.f32	s6, s15
 8016b72:	bf08      	it	eq
 8016b74:	4613      	moveq	r3, r2
 8016b76:	eef0 2a47 	vmov.f32	s5, s14
 8016b7a:	e788      	b.n	8016a8e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8016b7c:	1406      	asrs	r6, r0, #16
 8016b7e:	d42c      	bmi.n	8016bda <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016b80:	f8db 2008 	ldr.w	r2, [fp, #8]
 8016b84:	42b2      	cmp	r2, r6
 8016b86:	dd28      	ble.n	8016bda <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016b88:	140f      	asrs	r7, r1, #16
 8016b8a:	d426      	bmi.n	8016bda <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016b8c:	f8db 200c 	ldr.w	r2, [fp, #12]
 8016b90:	42ba      	cmp	r2, r7
 8016b92:	dd22      	ble.n	8016bda <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016b94:	9a02      	ldr	r2, [sp, #8]
 8016b96:	fb07 6602 	mla	r6, r7, r2, r6
 8016b9a:	0872      	lsrs	r2, r6, #1
 8016b9c:	9f03      	ldr	r7, [sp, #12]
 8016b9e:	5cba      	ldrb	r2, [r7, r2]
 8016ba0:	07f6      	lsls	r6, r6, #31
 8016ba2:	bf54      	ite	pl
 8016ba4:	f002 020f 	andpl.w	r2, r2, #15
 8016ba8:	1112      	asrmi	r2, r2, #4
 8016baa:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016bae:	b2d2      	uxtb	r2, r2
 8016bb0:	2aff      	cmp	r2, #255	; 0xff
 8016bb2:	d118      	bne.n	8016be6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8016bb4:	f8d8 2000 	ldr.w	r2, [r8]
 8016bb8:	f06f 0601 	mvn.w	r6, #1
 8016bbc:	fb06 f705 	mul.w	r7, r6, r5
 8016bc0:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 8016bc4:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8016bc8:	0956      	lsrs	r6, r2, #5
 8016bca:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016bce:	ea4c 0606 	orr.w	r6, ip, r6
 8016bd2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8016bd6:	4316      	orrs	r6, r2
 8016bd8:	53e6      	strh	r6, [r4, r7]
 8016bda:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016bdc:	4410      	add	r0, r2
 8016bde:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016be0:	3d01      	subs	r5, #1
 8016be2:	4411      	add	r1, r2
 8016be4:	e787      	b.n	8016af6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8016be6:	2a00      	cmp	r2, #0
 8016be8:	d0f7      	beq.n	8016bda <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016bea:	f06f 0601 	mvn.w	r6, #1
 8016bee:	436e      	muls	r6, r5
 8016bf0:	f8d8 c000 	ldr.w	ip, [r8]
 8016bf4:	f834 e006 	ldrh.w	lr, [r4, r6]
 8016bf8:	9604      	str	r6, [sp, #16]
 8016bfa:	fa1f f982 	uxth.w	r9, r2
 8016bfe:	ea4f 272e 	mov.w	r7, lr, asr #8
 8016c02:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8016c06:	43d2      	mvns	r2, r2
 8016c08:	b2d2      	uxtb	r2, r2
 8016c0a:	fb16 f609 	smulbb	r6, r6, r9
 8016c0e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016c12:	fb07 6702 	mla	r7, r7, r2, r6
 8016c16:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8016c1a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8016c1e:	fa5f fc8c 	uxtb.w	ip, ip
 8016c22:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016c26:	fa5f fe8e 	uxtb.w	lr, lr
 8016c2a:	fb1c fc09 	smulbb	ip, ip, r9
 8016c2e:	fb0e cc02 	mla	ip, lr, r2, ip
 8016c32:	b2bf      	uxth	r7, r7
 8016c34:	fb1a fa09 	smulbb	sl, sl, r9
 8016c38:	fa1f fc8c 	uxth.w	ip, ip
 8016c3c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016c40:	fb06 a602 	mla	r6, r6, r2, sl
 8016c44:	1c7a      	adds	r2, r7, #1
 8016c46:	f10c 0a01 	add.w	sl, ip, #1
 8016c4a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8016c4e:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8016c52:	b2b6      	uxth	r6, r6
 8016c54:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016c58:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016c5c:	ea4a 0707 	orr.w	r7, sl, r7
 8016c60:	f106 0a01 	add.w	sl, r6, #1
 8016c64:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016c68:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016c6c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016c70:	9a04      	ldr	r2, [sp, #16]
 8016c72:	ea47 070a 	orr.w	r7, r7, sl
 8016c76:	52a7      	strh	r7, [r4, r2]
 8016c78:	e7af      	b.n	8016bda <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016c7a:	f04f 0e00 	mov.w	lr, #0
 8016c7e:	eba3 020e 	sub.w	r2, r3, lr
 8016c82:	2a00      	cmp	r2, #0
 8016c84:	f77f af3a 	ble.w	8016afc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8016c88:	9e02      	ldr	r6, [sp, #8]
 8016c8a:	1402      	asrs	r2, r0, #16
 8016c8c:	140d      	asrs	r5, r1, #16
 8016c8e:	fb06 2505 	mla	r5, r6, r5, r2
 8016c92:	086a      	lsrs	r2, r5, #1
 8016c94:	9e03      	ldr	r6, [sp, #12]
 8016c96:	5cb2      	ldrb	r2, [r6, r2]
 8016c98:	07ed      	lsls	r5, r5, #31
 8016c9a:	bf54      	ite	pl
 8016c9c:	f002 020f 	andpl.w	r2, r2, #15
 8016ca0:	1112      	asrmi	r2, r2, #4
 8016ca2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016ca6:	b2d2      	uxtb	r2, r2
 8016ca8:	2aff      	cmp	r2, #255	; 0xff
 8016caa:	d115      	bne.n	8016cd8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8016cac:	f8d8 5000 	ldr.w	r5, [r8]
 8016cb0:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 8016cb4:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8016cb8:	096a      	lsrs	r2, r5, #5
 8016cba:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016cbe:	4332      	orrs	r2, r6
 8016cc0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8016cc4:	432a      	orrs	r2, r5
 8016cc6:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8016cca:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016ccc:	4410      	add	r0, r2
 8016cce:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016cd0:	f10e 0e01 	add.w	lr, lr, #1
 8016cd4:	4411      	add	r1, r2
 8016cd6:	e7d2      	b.n	8016c7e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8016cd8:	2a00      	cmp	r2, #0
 8016cda:	d0f6      	beq.n	8016cca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8016cdc:	f8d8 7000 	ldr.w	r7, [r8]
 8016ce0:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8016ce4:	fa1f f982 	uxth.w	r9, r2
 8016ce8:	ea4f 262c 	mov.w	r6, ip, asr #8
 8016cec:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8016cf0:	43d2      	mvns	r2, r2
 8016cf2:	b2d2      	uxtb	r2, r2
 8016cf4:	fb15 f509 	smulbb	r5, r5, r9
 8016cf8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8016cfc:	fb06 5602 	mla	r6, r6, r2, r5
 8016d00:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8016d04:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8016d08:	b2ff      	uxtb	r7, r7
 8016d0a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016d0e:	fa5f fc8c 	uxtb.w	ip, ip
 8016d12:	fb17 f709 	smulbb	r7, r7, r9
 8016d16:	fb0c 7702 	mla	r7, ip, r2, r7
 8016d1a:	b2b6      	uxth	r6, r6
 8016d1c:	fb1a fa09 	smulbb	sl, sl, r9
 8016d20:	b2bf      	uxth	r7, r7
 8016d22:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8016d26:	fb05 a502 	mla	r5, r5, r2, sl
 8016d2a:	1c72      	adds	r2, r6, #1
 8016d2c:	f107 0a01 	add.w	sl, r7, #1
 8016d30:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8016d34:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8016d38:	b2ad      	uxth	r5, r5
 8016d3a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016d3e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8016d42:	ea4a 0606 	orr.w	r6, sl, r6
 8016d46:	f105 0a01 	add.w	sl, r5, #1
 8016d4a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016d4e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016d52:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016d56:	ea46 060a 	orr.w	r6, r6, sl
 8016d5a:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8016d5e:	e7b4      	b.n	8016cca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8016d60:	b007      	add	sp, #28
 8016d62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016d66:	bf00      	nop
 8016d68:	200155bc 	.word	0x200155bc

08016d6c <_ZN8touchgfx8LCD16bppD1Ev>:
 8016d6c:	4770      	bx	lr

08016d6e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8016d6e:	4770      	bx	lr

08016d70 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8016d70:	4770      	bx	lr

08016d72 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8016d72:	4770      	bx	lr

08016d74 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8016d74:	4770      	bx	lr

08016d76 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016d76:	4770      	bx	lr

08016d78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016d78:	4770      	bx	lr

08016d7a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016d7a:	4770      	bx	lr

08016d7c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016d7c:	4770      	bx	lr

08016d7e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016d7e:	4770      	bx	lr

08016d80 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8016d80:	4770      	bx	lr

08016d82 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016d82:	4770      	bx	lr

08016d84 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016d84:	4770      	bx	lr

08016d86 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016d86:	4770      	bx	lr

08016d88 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8016d88:	4770      	bx	lr

08016d8a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016d8a:	4770      	bx	lr

08016d8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016d8c:	4770      	bx	lr

08016d8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016d8e:	4770      	bx	lr

08016d90 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016d90:	4770      	bx	lr

08016d92 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016d92:	4770      	bx	lr

08016d94 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016d94:	4770      	bx	lr

08016d96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016d96:	4770      	bx	lr

08016d98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8016d98:	4770      	bx	lr

08016d9a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016d9a:	4770      	bx	lr

08016d9c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8016d9c:	4770      	bx	lr

08016d9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016d9e:	4770      	bx	lr

08016da0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8016da0:	4770      	bx	lr

08016da2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016da2:	4770      	bx	lr

08016da4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8016da4:	4770      	bx	lr

08016da6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8016da6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016daa:	b088      	sub	sp, #32
 8016dac:	ac08      	add	r4, sp, #32
 8016dae:	4606      	mov	r6, r0
 8016db0:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8016db4:	4620      	mov	r0, r4
 8016db6:	4688      	mov	r8, r1
 8016db8:	4691      	mov	r9, r2
 8016dba:	f7fd fc65 	bl	8014688 <_ZNK8touchgfx6Bitmap7getDataEv>
 8016dbe:	6833      	ldr	r3, [r6, #0]
 8016dc0:	4605      	mov	r5, r0
 8016dc2:	4620      	mov	r0, r4
 8016dc4:	699f      	ldr	r7, [r3, #24]
 8016dc6:	f7fd fb73 	bl	80144b0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8016dca:	4682      	mov	sl, r0
 8016dcc:	4620      	mov	r0, r4
 8016dce:	f7fd fba3 	bl	8014518 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8016dd2:	9500      	str	r5, [sp, #0]
 8016dd4:	e9cd a001 	strd	sl, r0, [sp, #4]
 8016dd8:	464b      	mov	r3, r9
 8016dda:	a806      	add	r0, sp, #24
 8016ddc:	4642      	mov	r2, r8
 8016dde:	4631      	mov	r1, r6
 8016de0:	47b8      	blx	r7
 8016de2:	4628      	mov	r0, r5
 8016de4:	b008      	add	sp, #32
 8016de6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

08016dec <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8016dec:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8016df0:	2300      	movs	r3, #0
 8016df2:	9300      	str	r3, [sp, #0]
 8016df4:	4b3d      	ldr	r3, [pc, #244]	; (8016eec <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8016df6:	781b      	ldrb	r3, [r3, #0]
 8016df8:	2b00      	cmp	r3, #0
 8016dfa:	d137      	bne.n	8016e6c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8016dfc:	4a3c      	ldr	r2, [pc, #240]	; (8016ef0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8016dfe:	f9b2 2000 	ldrsh.w	r2, [r2]
 8016e02:	f8ad 2004 	strh.w	r2, [sp, #4]
 8016e06:	2b00      	cmp	r3, #0
 8016e08:	d132      	bne.n	8016e70 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8016e0a:	4b3a      	ldr	r3, [pc, #232]	; (8016ef4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8016e0c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016e10:	6808      	ldr	r0, [r1, #0]
 8016e12:	6849      	ldr	r1, [r1, #4]
 8016e14:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016e18:	ac02      	add	r4, sp, #8
 8016e1a:	ab02      	add	r3, sp, #8
 8016e1c:	c303      	stmia	r3!, {r0, r1}
 8016e1e:	4669      	mov	r1, sp
 8016e20:	4620      	mov	r0, r4
 8016e22:	f7f9 ff7f 	bl	8010d24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016e26:	4668      	mov	r0, sp
 8016e28:	f7f9 ff54 	bl	8010cd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016e2c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8016e30:	f8bd 2000 	ldrh.w	r2, [sp]
 8016e34:	4d30      	ldr	r5, [pc, #192]	; (8016ef8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8016e36:	4413      	add	r3, r2
 8016e38:	f8ad 3008 	strh.w	r3, [sp, #8]
 8016e3c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8016e40:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8016e44:	6828      	ldr	r0, [r5, #0]
 8016e46:	4413      	add	r3, r2
 8016e48:	f8ad 300a 	strh.w	r3, [sp, #10]
 8016e4c:	6803      	ldr	r3, [r0, #0]
 8016e4e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016e50:	4798      	blx	r3
 8016e52:	f010 0f01 	tst.w	r0, #1
 8016e56:	462f      	mov	r7, r5
 8016e58:	d00c      	beq.n	8016e74 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8016e5a:	6828      	ldr	r0, [r5, #0]
 8016e5c:	6803      	ldr	r3, [r0, #0]
 8016e5e:	e894 0006 	ldmia.w	r4, {r1, r2}
 8016e62:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8016e64:	4798      	blx	r3
 8016e66:	b004      	add	sp, #16
 8016e68:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016e6c:	4a21      	ldr	r2, [pc, #132]	; (8016ef4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8016e6e:	e7c6      	b.n	8016dfe <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8016e70:	4b1f      	ldr	r3, [pc, #124]	; (8016ef0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8016e72:	e7cb      	b.n	8016e0c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8016e74:	6838      	ldr	r0, [r7, #0]
 8016e76:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8016e7a:	6803      	ldr	r3, [r0, #0]
 8016e7c:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8016e80:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8016e82:	4798      	blx	r3
 8016e84:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8016e88:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8016e8c:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8016e90:	fb16 3602 	smlabb	r6, r6, r2, r3
 8016e94:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8016e98:	6838      	ldr	r0, [r7, #0]
 8016e9a:	6803      	ldr	r3, [r0, #0]
 8016e9c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016e9e:	4798      	blx	r3
 8016ea0:	4a13      	ldr	r2, [pc, #76]	; (8016ef0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8016ea2:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8016ea6:	8813      	ldrh	r3, [r2, #0]
 8016ea8:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8016eac:	fb03 1404 	mla	r4, r3, r4, r1
 8016eb0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8016eb4:	435d      	muls	r5, r3
 8016eb6:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8016eba:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8016ebe:	4691      	mov	r9, r2
 8016ec0:	6838      	ldr	r0, [r7, #0]
 8016ec2:	42ac      	cmp	r4, r5
 8016ec4:	6803      	ldr	r3, [r0, #0]
 8016ec6:	d20e      	bcs.n	8016ee6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8016ec8:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 8016ecc:	4632      	mov	r2, r6
 8016ece:	4643      	mov	r3, r8
 8016ed0:	4621      	mov	r1, r4
 8016ed2:	47d0      	blx	sl
 8016ed4:	f8b9 3000 	ldrh.w	r3, [r9]
 8016ed8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016edc:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8016ee0:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8016ee4:	e7ec      	b.n	8016ec0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8016ee6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016ee8:	4798      	blx	r3
 8016eea:	e7bc      	b.n	8016e66 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8016eec:	200155a4 	.word	0x200155a4
 8016ef0:	200155a6 	.word	0x200155a6
 8016ef4:	200155a8 	.word	0x200155a8
 8016ef8:	200155ac 	.word	0x200155ac

08016efc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8016efc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016f00:	b08b      	sub	sp, #44	; 0x2c
 8016f02:	460f      	mov	r7, r1
 8016f04:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 8016f08:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 8016f0c:	4616      	mov	r6, r2
 8016f0e:	f1bb 0f00 	cmp.w	fp, #0
 8016f12:	d049      	beq.n	8016fa8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8016f14:	6810      	ldr	r0, [r2, #0]
 8016f16:	6851      	ldr	r1, [r2, #4]
 8016f18:	ad06      	add	r5, sp, #24
 8016f1a:	c503      	stmia	r5!, {r0, r1}
 8016f1c:	6818      	ldr	r0, [r3, #0]
 8016f1e:	6859      	ldr	r1, [r3, #4]
 8016f20:	ad08      	add	r5, sp, #32
 8016f22:	c503      	stmia	r5!, {r0, r1}
 8016f24:	a806      	add	r0, sp, #24
 8016f26:	f7f9 fed5 	bl	8010cd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016f2a:	4631      	mov	r1, r6
 8016f2c:	a808      	add	r0, sp, #32
 8016f2e:	f7f9 fef9 	bl	8010d24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016f32:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8016f36:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8016f3a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8016f3e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8016f42:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8016f46:	fb16 2103 	smlabb	r1, r6, r3, r2
 8016f4a:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8016f4e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8016f52:	4f5f      	ldr	r7, [pc, #380]	; (80170d0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8016f54:	440a      	add	r2, r1
 8016f56:	f8ad 2020 	strh.w	r2, [sp, #32]
 8016f5a:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8016f5e:	6838      	ldr	r0, [r7, #0]
 8016f60:	4413      	add	r3, r2
 8016f62:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8016f66:	6803      	ldr	r3, [r0, #0]
 8016f68:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016f6a:	4798      	blx	r3
 8016f6c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8016f70:	46b9      	mov	r9, r7
 8016f72:	d01c      	beq.n	8016fae <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
 8016f74:	f010 0f04 	tst.w	r0, #4
 8016f78:	d01d      	beq.n	8016fb6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8016f7a:	f8d9 0000 	ldr.w	r0, [r9]
 8016f7e:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8016f82:	6801      	ldr	r1, [r0, #0]
 8016f84:	f8cd b00c 	str.w	fp, [sp, #12]
 8016f88:	2700      	movs	r7, #0
 8016f8a:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8016f8e:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8016f92:	9402      	str	r4, [sp, #8]
 8016f94:	b2ad      	uxth	r5, r5
 8016f96:	fa1f f488 	uxth.w	r4, r8
 8016f9a:	9501      	str	r5, [sp, #4]
 8016f9c:	9400      	str	r4, [sp, #0]
 8016f9e:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 8016fa0:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8016fa4:	4631      	mov	r1, r6
 8016fa6:	47a0      	blx	r4
 8016fa8:	b00b      	add	sp, #44	; 0x2c
 8016faa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016fae:	b914      	cbnz	r4, 8016fb6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8016fb0:	f010 0f01 	tst.w	r0, #1
 8016fb4:	e7e0      	b.n	8016f78 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 8016fb6:	f8d9 0000 	ldr.w	r0, [r9]
 8016fba:	6803      	ldr	r3, [r0, #0]
 8016fbc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016fbe:	4798      	blx	r3
 8016fc0:	4b44      	ldr	r3, [pc, #272]	; (80170d4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8016fc2:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 8016fc6:	881a      	ldrh	r2, [r3, #0]
 8016fc8:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8016fcc:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8016fd0:	fb02 1404 	mla	r4, r2, r4, r1
 8016fd4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8016fd8:	469a      	mov	sl, r3
 8016fda:	fb05 f502 	mul.w	r5, r5, r2
 8016fde:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8016fe2:	d059      	beq.n	8017098 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8016fe4:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 8016fe8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8016fec:	fa1f f28b 	uxth.w	r2, fp
 8016ff0:	fa1f f989 	uxth.w	r9, r9
 8016ff4:	469e      	mov	lr, r3
 8016ff6:	42ac      	cmp	r4, r5
 8016ff8:	d264      	bcs.n	80170c4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8016ffa:	eb04 0a07 	add.w	sl, r4, r7
 8016ffe:	4554      	cmp	r4, sl
 8017000:	d23d      	bcs.n	801707e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8017002:	8821      	ldrh	r1, [r4, #0]
 8017004:	f836 3b02 	ldrh.w	r3, [r6], #2
 8017008:	1208      	asrs	r0, r1, #8
 801700a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801700e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017012:	fb10 f009 	smulbb	r0, r0, r9
 8017016:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801701a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801701e:	00c9      	lsls	r1, r1, #3
 8017020:	fb0c 0c02 	mla	ip, ip, r2, r0
 8017024:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8017028:	10d8      	asrs	r0, r3, #3
 801702a:	b2c9      	uxtb	r1, r1
 801702c:	00db      	lsls	r3, r3, #3
 801702e:	fa1f fc8c 	uxth.w	ip, ip
 8017032:	fb1b fb09 	smulbb	fp, fp, r9
 8017036:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801703a:	b2db      	uxtb	r3, r3
 801703c:	fb11 f109 	smulbb	r1, r1, r9
 8017040:	fb00 b002 	mla	r0, r0, r2, fp
 8017044:	fb03 1302 	mla	r3, r3, r2, r1
 8017048:	f10c 0b01 	add.w	fp, ip, #1
 801704c:	b29b      	uxth	r3, r3
 801704e:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8017052:	b280      	uxth	r0, r0
 8017054:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8017058:	f103 0c01 	add.w	ip, r3, #1
 801705c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8017060:	1c43      	adds	r3, r0, #1
 8017062:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8017066:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801706a:	0940      	lsrs	r0, r0, #5
 801706c:	ea4c 0c0b 	orr.w	ip, ip, fp
 8017070:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017074:	ea4c 0c00 	orr.w	ip, ip, r0
 8017078:	f824 cb02 	strh.w	ip, [r4], #2
 801707c:	e7bf      	b.n	8016ffe <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801707e:	f8be 3000 	ldrh.w	r3, [lr]
 8017082:	eba3 0308 	sub.w	r3, r3, r8
 8017086:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801708a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801708e:	eba3 0308 	sub.w	r3, r3, r8
 8017092:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8017096:	e7ae      	b.n	8016ff6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8017098:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801709c:	f8d9 0000 	ldr.w	r0, [r9]
 80170a0:	42ac      	cmp	r4, r5
 80170a2:	6803      	ldr	r3, [r0, #0]
 80170a4:	d20e      	bcs.n	80170c4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 80170a6:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 80170aa:	4632      	mov	r2, r6
 80170ac:	463b      	mov	r3, r7
 80170ae:	4621      	mov	r1, r4
 80170b0:	47c0      	blx	r8
 80170b2:	f8ba 3000 	ldrh.w	r3, [sl]
 80170b6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80170ba:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80170be:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80170c2:	e7eb      	b.n	801709c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 80170c4:	4b02      	ldr	r3, [pc, #8]	; (80170d0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80170c6:	6818      	ldr	r0, [r3, #0]
 80170c8:	6803      	ldr	r3, [r0, #0]
 80170ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80170cc:	4798      	blx	r3
 80170ce:	e76b      	b.n	8016fa8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 80170d0:	200155ac 	.word	0x200155ac
 80170d4:	200155a6 	.word	0x200155a6

080170d8 <_ZN8touchgfx8LCD16bppD0Ev>:
 80170d8:	b510      	push	{r4, lr}
 80170da:	2178      	movs	r1, #120	; 0x78
 80170dc:	4604      	mov	r4, r0
 80170de:	f009 fad3 	bl	8020688 <_ZdlPvj>
 80170e2:	4620      	mov	r0, r4
 80170e4:	bd10      	pop	{r4, pc}

080170e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80170e6:	b510      	push	{r4, lr}
 80170e8:	2104      	movs	r1, #4
 80170ea:	4604      	mov	r4, r0
 80170ec:	f009 facc 	bl	8020688 <_ZdlPvj>
 80170f0:	4620      	mov	r0, r4
 80170f2:	bd10      	pop	{r4, pc}

080170f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80170f4:	b510      	push	{r4, lr}
 80170f6:	2104      	movs	r1, #4
 80170f8:	4604      	mov	r4, r0
 80170fa:	f009 fac5 	bl	8020688 <_ZdlPvj>
 80170fe:	4620      	mov	r0, r4
 8017100:	bd10      	pop	{r4, pc}

08017102 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8017102:	b510      	push	{r4, lr}
 8017104:	2104      	movs	r1, #4
 8017106:	4604      	mov	r4, r0
 8017108:	f009 fabe 	bl	8020688 <_ZdlPvj>
 801710c:	4620      	mov	r0, r4
 801710e:	bd10      	pop	{r4, pc}

08017110 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8017110:	b510      	push	{r4, lr}
 8017112:	2104      	movs	r1, #4
 8017114:	4604      	mov	r4, r0
 8017116:	f009 fab7 	bl	8020688 <_ZdlPvj>
 801711a:	4620      	mov	r0, r4
 801711c:	bd10      	pop	{r4, pc}

0801711e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801711e:	b510      	push	{r4, lr}
 8017120:	2104      	movs	r1, #4
 8017122:	4604      	mov	r4, r0
 8017124:	f009 fab0 	bl	8020688 <_ZdlPvj>
 8017128:	4620      	mov	r0, r4
 801712a:	bd10      	pop	{r4, pc}

0801712c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801712c:	b510      	push	{r4, lr}
 801712e:	2104      	movs	r1, #4
 8017130:	4604      	mov	r4, r0
 8017132:	f009 faa9 	bl	8020688 <_ZdlPvj>
 8017136:	4620      	mov	r0, r4
 8017138:	bd10      	pop	{r4, pc}

0801713a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801713a:	b510      	push	{r4, lr}
 801713c:	2104      	movs	r1, #4
 801713e:	4604      	mov	r4, r0
 8017140:	f009 faa2 	bl	8020688 <_ZdlPvj>
 8017144:	4620      	mov	r0, r4
 8017146:	bd10      	pop	{r4, pc}

08017148 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8017148:	b510      	push	{r4, lr}
 801714a:	2104      	movs	r1, #4
 801714c:	4604      	mov	r4, r0
 801714e:	f009 fa9b 	bl	8020688 <_ZdlPvj>
 8017152:	4620      	mov	r0, r4
 8017154:	bd10      	pop	{r4, pc}

08017156 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8017156:	b510      	push	{r4, lr}
 8017158:	2104      	movs	r1, #4
 801715a:	4604      	mov	r4, r0
 801715c:	f009 fa94 	bl	8020688 <_ZdlPvj>
 8017160:	4620      	mov	r0, r4
 8017162:	bd10      	pop	{r4, pc}

08017164 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8017164:	b510      	push	{r4, lr}
 8017166:	2104      	movs	r1, #4
 8017168:	4604      	mov	r4, r0
 801716a:	f009 fa8d 	bl	8020688 <_ZdlPvj>
 801716e:	4620      	mov	r0, r4
 8017170:	bd10      	pop	{r4, pc}

08017172 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8017172:	b510      	push	{r4, lr}
 8017174:	2104      	movs	r1, #4
 8017176:	4604      	mov	r4, r0
 8017178:	f009 fa86 	bl	8020688 <_ZdlPvj>
 801717c:	4620      	mov	r0, r4
 801717e:	bd10      	pop	{r4, pc}

08017180 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8017180:	b510      	push	{r4, lr}
 8017182:	2104      	movs	r1, #4
 8017184:	4604      	mov	r4, r0
 8017186:	f009 fa7f 	bl	8020688 <_ZdlPvj>
 801718a:	4620      	mov	r0, r4
 801718c:	bd10      	pop	{r4, pc}

0801718e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801718e:	b510      	push	{r4, lr}
 8017190:	2104      	movs	r1, #4
 8017192:	4604      	mov	r4, r0
 8017194:	f009 fa78 	bl	8020688 <_ZdlPvj>
 8017198:	4620      	mov	r0, r4
 801719a:	bd10      	pop	{r4, pc}

0801719c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801719c:	b510      	push	{r4, lr}
 801719e:	2104      	movs	r1, #4
 80171a0:	4604      	mov	r4, r0
 80171a2:	f009 fa71 	bl	8020688 <_ZdlPvj>
 80171a6:	4620      	mov	r0, r4
 80171a8:	bd10      	pop	{r4, pc}

080171aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80171aa:	b510      	push	{r4, lr}
 80171ac:	2104      	movs	r1, #4
 80171ae:	4604      	mov	r4, r0
 80171b0:	f009 fa6a 	bl	8020688 <_ZdlPvj>
 80171b4:	4620      	mov	r0, r4
 80171b6:	bd10      	pop	{r4, pc}

080171b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80171b8:	b510      	push	{r4, lr}
 80171ba:	2104      	movs	r1, #4
 80171bc:	4604      	mov	r4, r0
 80171be:	f009 fa63 	bl	8020688 <_ZdlPvj>
 80171c2:	4620      	mov	r0, r4
 80171c4:	bd10      	pop	{r4, pc}

080171c6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80171c6:	b510      	push	{r4, lr}
 80171c8:	2104      	movs	r1, #4
 80171ca:	4604      	mov	r4, r0
 80171cc:	f009 fa5c 	bl	8020688 <_ZdlPvj>
 80171d0:	4620      	mov	r0, r4
 80171d2:	bd10      	pop	{r4, pc}

080171d4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80171d4:	b510      	push	{r4, lr}
 80171d6:	2104      	movs	r1, #4
 80171d8:	4604      	mov	r4, r0
 80171da:	f009 fa55 	bl	8020688 <_ZdlPvj>
 80171de:	4620      	mov	r0, r4
 80171e0:	bd10      	pop	{r4, pc}

080171e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80171e2:	b510      	push	{r4, lr}
 80171e4:	2104      	movs	r1, #4
 80171e6:	4604      	mov	r4, r0
 80171e8:	f009 fa4e 	bl	8020688 <_ZdlPvj>
 80171ec:	4620      	mov	r0, r4
 80171ee:	bd10      	pop	{r4, pc}

080171f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 80171f0:	b510      	push	{r4, lr}
 80171f2:	2104      	movs	r1, #4
 80171f4:	4604      	mov	r4, r0
 80171f6:	f009 fa47 	bl	8020688 <_ZdlPvj>
 80171fa:	4620      	mov	r0, r4
 80171fc:	bd10      	pop	{r4, pc}

080171fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80171fe:	b510      	push	{r4, lr}
 8017200:	2104      	movs	r1, #4
 8017202:	4604      	mov	r4, r0
 8017204:	f009 fa40 	bl	8020688 <_ZdlPvj>
 8017208:	4620      	mov	r0, r4
 801720a:	bd10      	pop	{r4, pc}

0801720c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801720c:	b510      	push	{r4, lr}
 801720e:	2104      	movs	r1, #4
 8017210:	4604      	mov	r4, r0
 8017212:	f009 fa39 	bl	8020688 <_ZdlPvj>
 8017216:	4620      	mov	r0, r4
 8017218:	bd10      	pop	{r4, pc}

0801721a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801721a:	b510      	push	{r4, lr}
 801721c:	2104      	movs	r1, #4
 801721e:	4604      	mov	r4, r0
 8017220:	f009 fa32 	bl	8020688 <_ZdlPvj>
 8017224:	4620      	mov	r0, r4
 8017226:	bd10      	pop	{r4, pc}

08017228 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8017228:	b510      	push	{r4, lr}
 801722a:	2104      	movs	r1, #4
 801722c:	4604      	mov	r4, r0
 801722e:	f009 fa2b 	bl	8020688 <_ZdlPvj>
 8017232:	4620      	mov	r0, r4
 8017234:	bd10      	pop	{r4, pc}

08017236 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8017236:	b510      	push	{r4, lr}
 8017238:	2104      	movs	r1, #4
 801723a:	4604      	mov	r4, r0
 801723c:	f009 fa24 	bl	8020688 <_ZdlPvj>
 8017240:	4620      	mov	r0, r4
 8017242:	bd10      	pop	{r4, pc}

08017244 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8017244:	b510      	push	{r4, lr}
 8017246:	2104      	movs	r1, #4
 8017248:	4604      	mov	r4, r0
 801724a:	f009 fa1d 	bl	8020688 <_ZdlPvj>
 801724e:	4620      	mov	r0, r4
 8017250:	bd10      	pop	{r4, pc}

08017252 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8017252:	b510      	push	{r4, lr}
 8017254:	2104      	movs	r1, #4
 8017256:	4604      	mov	r4, r0
 8017258:	f009 fa16 	bl	8020688 <_ZdlPvj>
 801725c:	4620      	mov	r0, r4
 801725e:	bd10      	pop	{r4, pc}

08017260 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8017260:	b510      	push	{r4, lr}
 8017262:	2104      	movs	r1, #4
 8017264:	4604      	mov	r4, r0
 8017266:	f009 fa0f 	bl	8020688 <_ZdlPvj>
 801726a:	4620      	mov	r0, r4
 801726c:	bd10      	pop	{r4, pc}
	...

08017270 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8017270:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017274:	b091      	sub	sp, #68	; 0x44
 8017276:	469b      	mov	fp, r3
 8017278:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801727c:	4616      	mov	r6, r2
 801727e:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 8017282:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017286:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801728a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801728e:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8017292:	4604      	mov	r4, r0
 8017294:	460d      	mov	r5, r1
 8017296:	4640      	mov	r0, r8
 8017298:	4659      	mov	r1, fp
 801729a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801729e:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 80172a2:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 80172a6:	f7f3 fd41 	bl	800ad2c <_ZN8touchgfx4RectaNERKS0_>
 80172aa:	4631      	mov	r1, r6
 80172ac:	4640      	mov	r0, r8
 80172ae:	f7f3 fd3d 	bl	800ad2c <_ZN8touchgfx4RectaNERKS0_>
 80172b2:	4b74      	ldr	r3, [pc, #464]	; (8017484 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 80172b4:	8818      	ldrh	r0, [r3, #0]
 80172b6:	4b74      	ldr	r3, [pc, #464]	; (8017488 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 80172b8:	8819      	ldrh	r1, [r3, #0]
 80172ba:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80172be:	2b00      	cmp	r3, #0
 80172c0:	b202      	sxth	r2, r0
 80172c2:	b20e      	sxth	r6, r1
 80172c4:	da07      	bge.n	80172d6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 80172c6:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 80172ca:	4463      	add	r3, ip
 80172cc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80172d0:	2300      	movs	r3, #0
 80172d2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80172d6:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80172da:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 80172de:	1ad2      	subs	r2, r2, r3
 80172e0:	4594      	cmp	ip, r2
 80172e2:	bfc4      	itt	gt
 80172e4:	1ac2      	subgt	r2, r0, r3
 80172e6:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 80172ea:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80172ee:	2a00      	cmp	r2, #0
 80172f0:	da07      	bge.n	8017302 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 80172f2:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 80172f6:	4462      	add	r2, ip
 80172f8:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 80172fc:	2200      	movs	r2, #0
 80172fe:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8017302:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 8017306:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801730a:	eba6 060a 	sub.w	r6, r6, sl
 801730e:	42b2      	cmp	r2, r6
 8017310:	bfc4      	itt	gt
 8017312:	eba1 020a 	subgt.w	r2, r1, sl
 8017316:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801731a:	4a5c      	ldr	r2, [pc, #368]	; (801748c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801731c:	7812      	ldrb	r2, [r2, #0]
 801731e:	b9a2      	cbnz	r2, 801734a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8017320:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8017324:	4286      	cmp	r6, r0
 8017326:	4640      	mov	r0, r8
 8017328:	9303      	str	r3, [sp, #12]
 801732a:	bf14      	ite	ne
 801732c:	2600      	movne	r6, #0
 801732e:	2601      	moveq	r6, #1
 8017330:	f7f3 fd3f 	bl	800adb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017334:	9b03      	ldr	r3, [sp, #12]
 8017336:	b160      	cbz	r0, 8017352 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 8017338:	2300      	movs	r3, #0
 801733a:	8023      	strh	r3, [r4, #0]
 801733c:	8063      	strh	r3, [r4, #2]
 801733e:	80a3      	strh	r3, [r4, #4]
 8017340:	4620      	mov	r0, r4
 8017342:	80e3      	strh	r3, [r4, #6]
 8017344:	b011      	add	sp, #68	; 0x44
 8017346:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801734a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801734e:	428e      	cmp	r6, r1
 8017350:	e7e9      	b.n	8017326 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 8017352:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8017356:	9205      	str	r2, [sp, #20]
 8017358:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801735c:	9206      	str	r2, [sp, #24]
 801735e:	f8bb 2000 	ldrh.w	r2, [fp]
 8017362:	900e      	str	r0, [sp, #56]	; 0x38
 8017364:	1a9b      	subs	r3, r3, r2
 8017366:	b21b      	sxth	r3, r3
 8017368:	9303      	str	r3, [sp, #12]
 801736a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801736e:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 8017372:	ebaa 0a03 	sub.w	sl, sl, r3
 8017376:	fa0f f38a 	sxth.w	r3, sl
 801737a:	9304      	str	r3, [sp, #16]
 801737c:	9b03      	ldr	r3, [sp, #12]
 801737e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8017382:	9b04      	ldr	r3, [sp, #16]
 8017384:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8017388:	9b05      	ldr	r3, [sp, #20]
 801738a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801738e:	a90e      	add	r1, sp, #56	; 0x38
 8017390:	9b06      	ldr	r3, [sp, #24]
 8017392:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8017396:	a80c      	add	r0, sp, #48	; 0x30
 8017398:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801739c:	f7f9 fcc2 	bl	8010d24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80173a0:	4640      	mov	r0, r8
 80173a2:	f7f9 fc97 	bl	8010cd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80173a6:	a80e      	add	r0, sp, #56	; 0x38
 80173a8:	f7f9 fc94 	bl	8010cd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80173ac:	4b38      	ldr	r3, [pc, #224]	; (8017490 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 80173ae:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 80173b2:	881b      	ldrh	r3, [r3, #0]
 80173b4:	9307      	str	r3, [sp, #28]
 80173b6:	682b      	ldr	r3, [r5, #0]
 80173b8:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 8017494 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 80173bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80173be:	4628      	mov	r0, r5
 80173c0:	4798      	blx	r3
 80173c2:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 80173c6:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 80173ca:	4681      	mov	r9, r0
 80173cc:	fb1a 3305 	smlabb	r3, sl, r5, r3
 80173d0:	f8db 0000 	ldr.w	r0, [fp]
 80173d4:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80173d6:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80173da:	6803      	ldr	r3, [r0, #0]
 80173dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80173de:	4798      	blx	r3
 80173e0:	4607      	mov	r7, r0
 80173e2:	f8db 0000 	ldr.w	r0, [fp]
 80173e6:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 80173ea:	6803      	ldr	r3, [r0, #0]
 80173ec:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80173f0:	9109      	str	r1, [sp, #36]	; 0x24
 80173f2:	9208      	str	r2, [sp, #32]
 80173f4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80173f6:	4798      	blx	r3
 80173f8:	f010 0f01 	tst.w	r0, #1
 80173fc:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8017400:	d012      	beq.n	8017428 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 8017402:	f8db 0000 	ldr.w	r0, [fp]
 8017406:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801740a:	6803      	ldr	r3, [r0, #0]
 801740c:	9200      	str	r2, [sp, #0]
 801740e:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8017410:	e898 0006 	ldmia.w	r8, {r1, r2}
 8017414:	462b      	mov	r3, r5
 8017416:	47b0      	blx	r6
 8017418:	9b03      	ldr	r3, [sp, #12]
 801741a:	8023      	strh	r3, [r4, #0]
 801741c:	9b04      	ldr	r3, [sp, #16]
 801741e:	8063      	strh	r3, [r4, #2]
 8017420:	9b05      	ldr	r3, [sp, #20]
 8017422:	80a3      	strh	r3, [r4, #4]
 8017424:	9b06      	ldr	r3, [sp, #24]
 8017426:	e78b      	b.n	8017340 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8017428:	fb09 f202 	mul.w	r2, r9, r2
 801742c:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8017430:	440f      	add	r7, r1
 8017432:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 8017436:	b166      	cbz	r6, 8017452 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8017438:	9a07      	ldr	r2, [sp, #28]
 801743a:	4592      	cmp	sl, r2
 801743c:	d109      	bne.n	8017452 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801743e:	f8db 0000 	ldr.w	r0, [fp]
 8017442:	6802      	ldr	r2, [r0, #0]
 8017444:	fb09 f303 	mul.w	r3, r9, r3
 8017448:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801744a:	4629      	mov	r1, r5
 801744c:	463a      	mov	r2, r7
 801744e:	47b0      	blx	r6
 8017450:	e7e2      	b.n	8017418 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8017452:	fb0a f303 	mul.w	r3, sl, r3
 8017456:	f8df b03c 	ldr.w	fp, [pc, #60]	; 8017494 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801745a:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801745e:	ea4f 064a 	mov.w	r6, sl, lsl #1
 8017462:	4545      	cmp	r5, r8
 8017464:	d2d8      	bcs.n	8017418 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8017466:	f8db 0000 	ldr.w	r0, [fp]
 801746a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801746e:	6802      	ldr	r2, [r0, #0]
 8017470:	4629      	mov	r1, r5
 8017472:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 8017476:	005b      	lsls	r3, r3, #1
 8017478:	463a      	mov	r2, r7
 801747a:	47d0      	blx	sl
 801747c:	444f      	add	r7, r9
 801747e:	4435      	add	r5, r6
 8017480:	e7ef      	b.n	8017462 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 8017482:	bf00      	nop
 8017484:	200155a0 	.word	0x200155a0
 8017488:	200155a2 	.word	0x200155a2
 801748c:	200155a4 	.word	0x200155a4
 8017490:	200155a6 	.word	0x200155a6
 8017494:	200155ac 	.word	0x200155ac

08017498 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8017498:	b5f0      	push	{r4, r5, r6, r7, lr}
 801749a:	4606      	mov	r6, r0
 801749c:	b087      	sub	sp, #28
 801749e:	460c      	mov	r4, r1
 80174a0:	4617      	mov	r7, r2
 80174a2:	461d      	mov	r5, r3
 80174a4:	b333      	cbz	r3, 80174f4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80174a6:	4608      	mov	r0, r1
 80174a8:	f7f3 fc83 	bl	800adb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80174ac:	bb10      	cbnz	r0, 80174f4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80174ae:	6820      	ldr	r0, [r4, #0]
 80174b0:	6861      	ldr	r1, [r4, #4]
 80174b2:	4c1c      	ldr	r4, [pc, #112]	; (8017524 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 80174b4:	ab04      	add	r3, sp, #16
 80174b6:	c303      	stmia	r3!, {r0, r1}
 80174b8:	a804      	add	r0, sp, #16
 80174ba:	f7f9 fc0b 	bl	8010cd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80174be:	6820      	ldr	r0, [r4, #0]
 80174c0:	6803      	ldr	r3, [r0, #0]
 80174c2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80174c4:	4798      	blx	r3
 80174c6:	2dff      	cmp	r5, #255	; 0xff
 80174c8:	d016      	beq.n	80174f8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 80174ca:	f010 0f08 	tst.w	r0, #8
 80174ce:	6820      	ldr	r0, [r4, #0]
 80174d0:	d015      	beq.n	80174fe <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 80174d2:	2400      	movs	r4, #0
 80174d4:	6801      	ldr	r1, [r0, #0]
 80174d6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80174da:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80174de:	e9cd 5402 	strd	r5, r4, [sp, #8]
 80174e2:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 80174e6:	9401      	str	r4, [sp, #4]
 80174e8:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 80174ec:	9400      	str	r4, [sp, #0]
 80174ee:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 80174f0:	4639      	mov	r1, r7
 80174f2:	47a0      	blx	r4
 80174f4:	b007      	add	sp, #28
 80174f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80174f8:	f010 0f02 	tst.w	r0, #2
 80174fc:	e7e7      	b.n	80174ce <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 80174fe:	6803      	ldr	r3, [r0, #0]
 8017500:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017502:	4798      	blx	r3
 8017504:	4b08      	ldr	r3, [pc, #32]	; (8017528 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8017506:	881a      	ldrh	r2, [r3, #0]
 8017508:	6833      	ldr	r3, [r6, #0]
 801750a:	e9cd 7500 	strd	r7, r5, [sp]
 801750e:	4601      	mov	r1, r0
 8017510:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8017512:	4630      	mov	r0, r6
 8017514:	ab04      	add	r3, sp, #16
 8017516:	47a8      	blx	r5
 8017518:	6820      	ldr	r0, [r4, #0]
 801751a:	6803      	ldr	r3, [r0, #0]
 801751c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801751e:	4798      	blx	r3
 8017520:	e7e8      	b.n	80174f4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8017522:	bf00      	nop
 8017524:	200155ac 	.word	0x200155ac
 8017528:	200155a6 	.word	0x200155a6

0801752c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801752c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017530:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 8017534:	9e08      	ldr	r6, [sp, #32]
 8017536:	4688      	mov	r8, r1
 8017538:	4614      	mov	r4, r2
 801753a:	461d      	mov	r5, r3
 801753c:	2f00      	cmp	r7, #0
 801753e:	f000 80a9 	beq.w	8017694 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017542:	4618      	mov	r0, r3
 8017544:	f7f3 fc35 	bl	800adb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017548:	2800      	cmp	r0, #0
 801754a:	f040 80a3 	bne.w	8017694 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801754e:	f9b5 1000 	ldrsh.w	r1, [r5]
 8017552:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8017556:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801755a:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801755e:	fb04 1303 	mla	r3, r4, r3, r1
 8017562:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8017566:	4365      	muls	r5, r4
 8017568:	2fff      	cmp	r7, #255	; 0xff
 801756a:	eba4 0200 	sub.w	r2, r4, r0
 801756e:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8017572:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8017576:	d04a      	beq.n	801760e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 8017578:	b2bc      	uxth	r4, r7
 801757a:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801757e:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8017582:	fa5f f788 	uxtb.w	r7, r8
 8017586:	b2f3      	uxtb	r3, r6
 8017588:	0040      	lsls	r0, r0, #1
 801758a:	fb0e fe04 	mul.w	lr, lr, r4
 801758e:	4367      	muls	r7, r4
 8017590:	4363      	muls	r3, r4
 8017592:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8017596:	fa1f fc8c 	uxth.w	ip, ip
 801759a:	42a9      	cmp	r1, r5
 801759c:	d27a      	bcs.n	8017694 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801759e:	eb01 0900 	add.w	r9, r1, r0
 80175a2:	4549      	cmp	r1, r9
 80175a4:	d231      	bcs.n	801760a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 80175a6:	880a      	ldrh	r2, [r1, #0]
 80175a8:	1214      	asrs	r4, r2, #8
 80175aa:	10d6      	asrs	r6, r2, #3
 80175ac:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80175b0:	00d2      	lsls	r2, r2, #3
 80175b2:	b2d2      	uxtb	r2, r2
 80175b4:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80175b8:	fb14 f40c 	smulbb	r4, r4, ip
 80175bc:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80175c0:	4474      	add	r4, lr
 80175c2:	fb12 f20c 	smulbb	r2, r2, ip
 80175c6:	b2a4      	uxth	r4, r4
 80175c8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80175cc:	441a      	add	r2, r3
 80175ce:	b292      	uxth	r2, r2
 80175d0:	f104 0a01 	add.w	sl, r4, #1
 80175d4:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80175d8:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80175dc:	fb16 f60c 	smulbb	r6, r6, ip
 80175e0:	f102 0a01 	add.w	sl, r2, #1
 80175e4:	443e      	add	r6, r7
 80175e6:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 80175ea:	b2b6      	uxth	r6, r6
 80175ec:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80175f0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80175f4:	4322      	orrs	r2, r4
 80175f6:	1c74      	adds	r4, r6, #1
 80175f8:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 80175fc:	0976      	lsrs	r6, r6, #5
 80175fe:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8017602:	4332      	orrs	r2, r6
 8017604:	f821 2b02 	strh.w	r2, [r1], #2
 8017608:	e7cb      	b.n	80175a2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801760a:	4441      	add	r1, r8
 801760c:	e7c5      	b.n	801759a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801760e:	4f22      	ldr	r7, [pc, #136]	; (8017698 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 8017610:	0973      	lsrs	r3, r6, #5
 8017612:	ea08 0707 	and.w	r7, r8, r7
 8017616:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801761a:	433b      	orrs	r3, r7
 801761c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8017620:	4333      	orrs	r3, r6
 8017622:	07e7      	lsls	r7, r4, #31
 8017624:	b29b      	uxth	r3, r3
 8017626:	d50b      	bpl.n	8017640 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8017628:	0040      	lsls	r0, r0, #1
 801762a:	0052      	lsls	r2, r2, #1
 801762c:	42a9      	cmp	r1, r5
 801762e:	d231      	bcs.n	8017694 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017630:	180c      	adds	r4, r1, r0
 8017632:	42a1      	cmp	r1, r4
 8017634:	d202      	bcs.n	801763c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 8017636:	f821 3b02 	strh.w	r3, [r1], #2
 801763a:	e7fa      	b.n	8017632 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801763c:	4411      	add	r1, r2
 801763e:	e7f5      	b.n	801762c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 8017640:	078e      	lsls	r6, r1, #30
 8017642:	d008      	beq.n	8017656 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8017644:	0066      	lsls	r6, r4, #1
 8017646:	460a      	mov	r2, r1
 8017648:	42aa      	cmp	r2, r5
 801764a:	d202      	bcs.n	8017652 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801764c:	8013      	strh	r3, [r2, #0]
 801764e:	4432      	add	r2, r6
 8017650:	e7fa      	b.n	8017648 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 8017652:	3102      	adds	r1, #2
 8017654:	3801      	subs	r0, #1
 8017656:	07c2      	lsls	r2, r0, #31
 8017658:	d50b      	bpl.n	8017672 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801765a:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801765e:	3a01      	subs	r2, #1
 8017660:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8017664:	0066      	lsls	r6, r4, #1
 8017666:	42aa      	cmp	r2, r5
 8017668:	d202      	bcs.n	8017670 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801766a:	8013      	strh	r3, [r2, #0]
 801766c:	4432      	add	r2, r6
 801766e:	e7fa      	b.n	8017666 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 8017670:	3801      	subs	r0, #1
 8017672:	b178      	cbz	r0, 8017694 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017674:	1040      	asrs	r0, r0, #1
 8017676:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801767a:	0080      	lsls	r0, r0, #2
 801767c:	0064      	lsls	r4, r4, #1
 801767e:	42a9      	cmp	r1, r5
 8017680:	d208      	bcs.n	8017694 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017682:	180e      	adds	r6, r1, r0
 8017684:	460a      	mov	r2, r1
 8017686:	42b2      	cmp	r2, r6
 8017688:	d202      	bcs.n	8017690 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801768a:	f842 3b04 	str.w	r3, [r2], #4
 801768e:	e7fa      	b.n	8017686 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 8017690:	4421      	add	r1, r4
 8017692:	e7f4      	b.n	801767e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 8017694:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017698:	00fff800 	.word	0x00fff800

0801769c <_ZN8touchgfx8LCD16bppC1Ev>:
 801769c:	2200      	movs	r2, #0
 801769e:	4910      	ldr	r1, [pc, #64]	; (80176e0 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 80176a0:	6042      	str	r2, [r0, #4]
 80176a2:	6001      	str	r1, [r0, #0]
 80176a4:	e9c0 2202 	strd	r2, r2, [r0, #8]
 80176a8:	e9c0 2204 	strd	r2, r2, [r0, #16]
 80176ac:	e9c0 2206 	strd	r2, r2, [r0, #24]
 80176b0:	e9c0 2208 	strd	r2, r2, [r0, #32]
 80176b4:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 80176b8:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 80176bc:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 80176c0:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 80176c4:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 80176c8:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 80176cc:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 80176d0:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 80176d4:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 80176d8:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 80176dc:	4770      	bx	lr
 80176de:	bf00      	nop
 80176e0:	080245ec 	.word	0x080245ec

080176e4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 80176e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80176e8:	460d      	mov	r5, r1
 80176ea:	b08d      	sub	sp, #52	; 0x34
 80176ec:	4604      	mov	r4, r0
 80176ee:	6808      	ldr	r0, [r1, #0]
 80176f0:	6849      	ldr	r1, [r1, #4]
 80176f2:	4699      	mov	r9, r3
 80176f4:	ab08      	add	r3, sp, #32
 80176f6:	c303      	stmia	r3!, {r0, r1}
 80176f8:	6810      	ldr	r0, [r2, #0]
 80176fa:	6851      	ldr	r1, [r2, #4]
 80176fc:	ab0a      	add	r3, sp, #40	; 0x28
 80176fe:	c303      	stmia	r3!, {r0, r1}
 8017700:	a808      	add	r0, sp, #32
 8017702:	f7f9 fae7 	bl	8010cd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017706:	4629      	mov	r1, r5
 8017708:	a80a      	add	r0, sp, #40	; 0x28
 801770a:	f7f9 fb0b 	bl	8010d24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801770e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8017712:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8017716:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801771a:	4d63      	ldr	r5, [pc, #396]	; (80178a8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801771c:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8017720:	6828      	ldr	r0, [r5, #0]
 8017722:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8017726:	fb11 2103 	smlabb	r1, r1, r3, r2
 801772a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801772e:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8017732:	440a      	add	r2, r1
 8017734:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8017738:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801773c:	4413      	add	r3, r2
 801773e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8017742:	6803      	ldr	r3, [r0, #0]
 8017744:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017746:	4798      	blx	r3
 8017748:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801774c:	d119      	bne.n	8017782 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801774e:	f010 0f20 	tst.w	r0, #32
 8017752:	6828      	ldr	r0, [r5, #0]
 8017754:	d018      	beq.n	8017788 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8017756:	2500      	movs	r5, #0
 8017758:	6801      	ldr	r1, [r0, #0]
 801775a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801775e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8017762:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8017766:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801776a:	9502      	str	r5, [sp, #8]
 801776c:	b2b6      	uxth	r6, r6
 801776e:	fa1f f588 	uxth.w	r5, r8
 8017772:	9601      	str	r6, [sp, #4]
 8017774:	9500      	str	r5, [sp, #0]
 8017776:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 8017778:	4621      	mov	r1, r4
 801777a:	47a8      	blx	r5
 801777c:	b00d      	add	sp, #52	; 0x34
 801777e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017782:	f010 0f40 	tst.w	r0, #64	; 0x40
 8017786:	e7e4      	b.n	8017752 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8017788:	6803      	ldr	r3, [r0, #0]
 801778a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801778c:	4798      	blx	r3
 801778e:	4947      	ldr	r1, [pc, #284]	; (80178ac <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8017790:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8017794:	880b      	ldrh	r3, [r1, #0]
 8017796:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801779a:	fb03 5202 	mla	r2, r3, r2, r5
 801779e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80177a2:	4373      	muls	r3, r6
 80177a4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80177a8:	9307      	str	r3, [sp, #28]
 80177aa:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80177ae:	9306      	str	r3, [sp, #24]
 80177b0:	468a      	mov	sl, r1
 80177b2:	9b07      	ldr	r3, [sp, #28]
 80177b4:	4298      	cmp	r0, r3
 80177b6:	d270      	bcs.n	801789a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 80177b8:	9b06      	ldr	r3, [sp, #24]
 80177ba:	4621      	mov	r1, r4
 80177bc:	eb00 0b03 	add.w	fp, r0, r3
 80177c0:	4558      	cmp	r0, fp
 80177c2:	d25d      	bcs.n	8017880 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 80177c4:	f851 4b04 	ldr.w	r4, [r1], #4
 80177c8:	0e23      	lsrs	r3, r4, #24
 80177ca:	d014      	beq.n	80177f6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 80177cc:	2bff      	cmp	r3, #255	; 0xff
 80177ce:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 80177d2:	d112      	bne.n	80177fa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 80177d4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80177d8:	d10f      	bne.n	80177fa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 80177da:	0963      	lsrs	r3, r4, #5
 80177dc:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80177e0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80177e4:	f02c 0c07 	bic.w	ip, ip, #7
 80177e8:	ea43 0c0c 	orr.w	ip, r3, ip
 80177ec:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80177f0:	ea4c 0404 	orr.w	r4, ip, r4
 80177f4:	8004      	strh	r4, [r0, #0]
 80177f6:	3002      	adds	r0, #2
 80177f8:	e7e2      	b.n	80177c0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 80177fa:	fb09 f303 	mul.w	r3, r9, r3
 80177fe:	8807      	ldrh	r7, [r0, #0]
 8017800:	1c5a      	adds	r2, r3, #1
 8017802:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8017806:	1212      	asrs	r2, r2, #8
 8017808:	123e      	asrs	r6, r7, #8
 801780a:	b293      	uxth	r3, r2
 801780c:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8017810:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8017814:	43d2      	mvns	r2, r2
 8017816:	b2d2      	uxtb	r2, r2
 8017818:	10fd      	asrs	r5, r7, #3
 801781a:	fb1e fe03 	smulbb	lr, lr, r3
 801781e:	00ff      	lsls	r7, r7, #3
 8017820:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017824:	fb06 e602 	mla	r6, r6, r2, lr
 8017828:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801782c:	b2ff      	uxtb	r7, r7
 801782e:	fa5f fc8c 	uxtb.w	ip, ip
 8017832:	b2e4      	uxtb	r4, r4
 8017834:	b2b6      	uxth	r6, r6
 8017836:	fb1c fc03 	smulbb	ip, ip, r3
 801783a:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801783e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8017842:	fb14 f403 	smulbb	r4, r4, r3
 8017846:	fb05 c502 	mla	r5, r5, r2, ip
 801784a:	f106 0e01 	add.w	lr, r6, #1
 801784e:	fb07 4702 	mla	r7, r7, r2, r4
 8017852:	b2ad      	uxth	r5, r5
 8017854:	b2bf      	uxth	r7, r7
 8017856:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801785a:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801785e:	f105 0c01 	add.w	ip, r5, #1
 8017862:	1c7e      	adds	r6, r7, #1
 8017864:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8017868:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801786c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8017870:	096d      	lsrs	r5, r5, #5
 8017872:	ea46 060e 	orr.w	r6, r6, lr
 8017876:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801787a:	432e      	orrs	r6, r5
 801787c:	8006      	strh	r6, [r0, #0]
 801787e:	e7ba      	b.n	80177f6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8017880:	f8ba 3000 	ldrh.w	r3, [sl]
 8017884:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 8017888:	eba3 0308 	sub.w	r3, r3, r8
 801788c:	eba4 0408 	sub.w	r4, r4, r8
 8017890:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017894:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8017898:	e78b      	b.n	80177b2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801789a:	4b03      	ldr	r3, [pc, #12]	; (80178a8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801789c:	6818      	ldr	r0, [r3, #0]
 801789e:	6803      	ldr	r3, [r0, #0]
 80178a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80178a2:	4798      	blx	r3
 80178a4:	e76a      	b.n	801777c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 80178a6:	bf00      	nop
 80178a8:	200155ac 	.word	0x200155ac
 80178ac:	200155a6 	.word	0x200155a6

080178b0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 80178b0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80178b4:	460c      	mov	r4, r1
 80178b6:	b085      	sub	sp, #20
 80178b8:	6810      	ldr	r0, [r2, #0]
 80178ba:	6851      	ldr	r1, [r2, #4]
 80178bc:	466d      	mov	r5, sp
 80178be:	c503      	stmia	r5!, {r0, r1}
 80178c0:	6818      	ldr	r0, [r3, #0]
 80178c2:	6859      	ldr	r1, [r3, #4]
 80178c4:	4616      	mov	r6, r2
 80178c6:	c503      	stmia	r5!, {r0, r1}
 80178c8:	4668      	mov	r0, sp
 80178ca:	f7f9 fa03 	bl	8010cd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80178ce:	4631      	mov	r1, r6
 80178d0:	a802      	add	r0, sp, #8
 80178d2:	f7f9 fa27 	bl	8010d24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80178d6:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 80178da:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 80178de:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 80178e2:	4d28      	ldr	r5, [pc, #160]	; (8017984 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 80178e4:	4e28      	ldr	r6, [pc, #160]	; (8017988 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 80178e6:	6828      	ldr	r0, [r5, #0]
 80178e8:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 80178ec:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 80178f0:	fb11 2103 	smlabb	r1, r1, r3, r2
 80178f4:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80178f8:	f8bd 1000 	ldrh.w	r1, [sp]
 80178fc:	440a      	add	r2, r1
 80178fe:	f8ad 2008 	strh.w	r2, [sp, #8]
 8017902:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8017906:	4413      	add	r3, r2
 8017908:	f8ad 300a 	strh.w	r3, [sp, #10]
 801790c:	6803      	ldr	r3, [r0, #0]
 801790e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017910:	4798      	blx	r3
 8017912:	8833      	ldrh	r3, [r6, #0]
 8017914:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8017918:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801791c:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801798c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8017920:	fb03 1202 	mla	r2, r3, r2, r1
 8017924:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017928:	fb08 f303 	mul.w	r3, r8, r3
 801792c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017930:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8017934:	4298      	cmp	r0, r3
 8017936:	d21d      	bcs.n	8017974 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8017938:	eb00 080c 	add.w	r8, r0, ip
 801793c:	4540      	cmp	r0, r8
 801793e:	d20f      	bcs.n	8017960 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8017940:	f854 1b04 	ldr.w	r1, [r4], #4
 8017944:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8017948:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801794c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017950:	ea42 0209 	orr.w	r2, r2, r9
 8017954:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8017958:	430a      	orrs	r2, r1
 801795a:	f820 2b02 	strh.w	r2, [r0], #2
 801795e:	e7ed      	b.n	801793c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8017960:	8832      	ldrh	r2, [r6, #0]
 8017962:	1bd2      	subs	r2, r2, r7
 8017964:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017968:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801796c:	1bd2      	subs	r2, r2, r7
 801796e:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8017972:	e7df      	b.n	8017934 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8017974:	6828      	ldr	r0, [r5, #0]
 8017976:	6803      	ldr	r3, [r0, #0]
 8017978:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801797a:	4798      	blx	r3
 801797c:	b005      	add	sp, #20
 801797e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017982:	bf00      	nop
 8017984:	200155ac 	.word	0x200155ac
 8017988:	200155a6 	.word	0x200155a6
 801798c:	fffff800 	.word	0xfffff800

08017990 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8017990:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017994:	460e      	mov	r6, r1
 8017996:	b08e      	sub	sp, #56	; 0x38
 8017998:	4604      	mov	r4, r0
 801799a:	6808      	ldr	r0, [r1, #0]
 801799c:	6849      	ldr	r1, [r1, #4]
 801799e:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8017b78 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 80179a2:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 8017b7c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 80179a6:	461d      	mov	r5, r3
 80179a8:	ab0a      	add	r3, sp, #40	; 0x28
 80179aa:	c303      	stmia	r3!, {r0, r1}
 80179ac:	6810      	ldr	r0, [r2, #0]
 80179ae:	6851      	ldr	r1, [r2, #4]
 80179b0:	ab0c      	add	r3, sp, #48	; 0x30
 80179b2:	c303      	stmia	r3!, {r0, r1}
 80179b4:	a80a      	add	r0, sp, #40	; 0x28
 80179b6:	f7f9 f98d 	bl	8010cd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80179ba:	4631      	mov	r1, r6
 80179bc:	a80c      	add	r0, sp, #48	; 0x30
 80179be:	f7f9 f9b1 	bl	8010d24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80179c2:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80179c6:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80179ca:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80179ce:	f8d8 0000 	ldr.w	r0, [r8]
 80179d2:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 80179d6:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 80179da:	fb11 2103 	smlabb	r1, r1, r3, r2
 80179de:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80179e2:	440c      	add	r4, r1
 80179e4:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 80179e8:	440a      	add	r2, r1
 80179ea:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80179ee:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 80179f2:	4413      	add	r3, r2
 80179f4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80179f8:	6803      	ldr	r3, [r0, #0]
 80179fa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80179fc:	4798      	blx	r3
 80179fe:	2dff      	cmp	r5, #255	; 0xff
 8017a00:	d124      	bne.n	8017a4c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8017a02:	f010 0f01 	tst.w	r0, #1
 8017a06:	f8d8 0000 	ldr.w	r0, [r8]
 8017a0a:	d022      	beq.n	8017a52 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8017a0c:	2100      	movs	r1, #0
 8017a0e:	f8d0 c000 	ldr.w	ip, [r0]
 8017a12:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8017a16:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8017a1a:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8017a1e:	f04f 0e01 	mov.w	lr, #1
 8017a22:	f8cd e018 	str.w	lr, [sp, #24]
 8017a26:	f8b9 e000 	ldrh.w	lr, [r9]
 8017a2a:	9503      	str	r5, [sp, #12]
 8017a2c:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8017a30:	b2b6      	uxth	r6, r6
 8017a32:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8017a36:	9102      	str	r1, [sp, #8]
 8017a38:	b2bf      	uxth	r7, r7
 8017a3a:	9601      	str	r6, [sp, #4]
 8017a3c:	9700      	str	r7, [sp, #0]
 8017a3e:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 8017a42:	4621      	mov	r1, r4
 8017a44:	47a8      	blx	r5
 8017a46:	b00e      	add	sp, #56	; 0x38
 8017a48:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017a4c:	f010 0f04 	tst.w	r0, #4
 8017a50:	e7d9      	b.n	8017a06 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8017a52:	6803      	ldr	r3, [r0, #0]
 8017a54:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017a56:	4798      	blx	r3
 8017a58:	f8b9 3000 	ldrh.w	r3, [r9]
 8017a5c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8017a60:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8017a64:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8017a68:	fb03 1202 	mla	r2, r3, r2, r1
 8017a6c:	ebac 0c07 	sub.w	ip, ip, r7
 8017a70:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017a74:	435e      	muls	r6, r3
 8017a76:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8017a7a:	2dff      	cmp	r5, #255	; 0xff
 8017a7c:	eba3 0707 	sub.w	r7, r3, r7
 8017a80:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8017a84:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8017a88:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8017a8c:	d049      	beq.n	8017b22 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8017a8e:	43eb      	mvns	r3, r5
 8017a90:	fa1f f985 	uxth.w	r9, r5
 8017a94:	b2db      	uxtb	r3, r3
 8017a96:	42b0      	cmp	r0, r6
 8017a98:	d266      	bcs.n	8017b68 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8017a9a:	eb00 0a0e 	add.w	sl, r0, lr
 8017a9e:	4550      	cmp	r0, sl
 8017aa0:	4621      	mov	r1, r4
 8017aa2:	f104 0403 	add.w	r4, r4, #3
 8017aa6:	d25b      	bcs.n	8017b60 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8017aa8:	8802      	ldrh	r2, [r0, #0]
 8017aaa:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8017aae:	ea4f 2822 	mov.w	r8, r2, asr #8
 8017ab2:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8017ab6:	fb11 f109 	smulbb	r1, r1, r9
 8017aba:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8017abe:	10d5      	asrs	r5, r2, #3
 8017ac0:	fb08 1803 	mla	r8, r8, r3, r1
 8017ac4:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8017ac8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8017acc:	fb11 f109 	smulbb	r1, r1, r9
 8017ad0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8017ad4:	fb05 1503 	mla	r5, r5, r3, r1
 8017ad8:	00d2      	lsls	r2, r2, #3
 8017ada:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8017ade:	b2d2      	uxtb	r2, r2
 8017ae0:	fb11 f109 	smulbb	r1, r1, r9
 8017ae4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017ae8:	fa1f f888 	uxth.w	r8, r8
 8017aec:	fb02 1203 	mla	r2, r2, r3, r1
 8017af0:	b292      	uxth	r2, r2
 8017af2:	f108 0101 	add.w	r1, r8, #1
 8017af6:	b2ad      	uxth	r5, r5
 8017af8:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8017afc:	1c51      	adds	r1, r2, #1
 8017afe:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8017b02:	1c69      	adds	r1, r5, #1
 8017b04:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8017b08:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8017b0c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017b10:	096d      	lsrs	r5, r5, #5
 8017b12:	ea42 0208 	orr.w	r2, r2, r8
 8017b16:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017b1a:	432a      	orrs	r2, r5
 8017b1c:	f820 2b02 	strh.w	r2, [r0], #2
 8017b20:	e7bd      	b.n	8017a9e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8017b22:	4a14      	ldr	r2, [pc, #80]	; (8017b74 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8017b24:	42b0      	cmp	r0, r6
 8017b26:	d21f      	bcs.n	8017b68 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8017b28:	eb00 050e 	add.w	r5, r0, lr
 8017b2c:	42a8      	cmp	r0, r5
 8017b2e:	4621      	mov	r1, r4
 8017b30:	f104 0403 	add.w	r4, r4, #3
 8017b34:	d210      	bcs.n	8017b58 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8017b36:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8017b3a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8017b3e:	00db      	lsls	r3, r3, #3
 8017b40:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8017b44:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017b48:	430b      	orrs	r3, r1
 8017b4a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8017b4e:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8017b52:	f820 3b02 	strh.w	r3, [r0], #2
 8017b56:	e7e9      	b.n	8017b2c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8017b58:	4438      	add	r0, r7
 8017b5a:	eb01 040c 	add.w	r4, r1, ip
 8017b5e:	e7e1      	b.n	8017b24 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8017b60:	4438      	add	r0, r7
 8017b62:	eb01 040c 	add.w	r4, r1, ip
 8017b66:	e796      	b.n	8017a96 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8017b68:	4b03      	ldr	r3, [pc, #12]	; (8017b78 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8017b6a:	6818      	ldr	r0, [r3, #0]
 8017b6c:	6803      	ldr	r3, [r0, #0]
 8017b6e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017b70:	4798      	blx	r3
 8017b72:	e768      	b.n	8017a46 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8017b74:	fffff800 	.word	0xfffff800
 8017b78:	200155ac 	.word	0x200155ac
 8017b7c:	200155a6 	.word	0x200155a6

08017b80 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8017b80:	b4f0      	push	{r4, r5, r6, r7}
 8017b82:	4616      	mov	r6, r2
 8017b84:	2e01      	cmp	r6, #1
 8017b86:	461c      	mov	r4, r3
 8017b88:	460d      	mov	r5, r1
 8017b8a:	9a04      	ldr	r2, [sp, #16]
 8017b8c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8017b90:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8017b94:	d012      	beq.n	8017bbc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8017b96:	d303      	bcc.n	8017ba0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8017b98:	2e02      	cmp	r6, #2
 8017b9a:	d00a      	beq.n	8017bb2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8017b9c:	bcf0      	pop	{r4, r5, r6, r7}
 8017b9e:	4770      	bx	lr
 8017ba0:	6805      	ldr	r5, [r0, #0]
 8017ba2:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8017ba6:	68ed      	ldr	r5, [r5, #12]
 8017ba8:	4613      	mov	r3, r2
 8017baa:	46ac      	mov	ip, r5
 8017bac:	4622      	mov	r2, r4
 8017bae:	bcf0      	pop	{r4, r5, r6, r7}
 8017bb0:	4760      	bx	ip
 8017bb2:	4621      	mov	r1, r4
 8017bb4:	4628      	mov	r0, r5
 8017bb6:	bcf0      	pop	{r4, r5, r6, r7}
 8017bb8:	f7ff bd94 	b.w	80176e4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8017bbc:	4621      	mov	r1, r4
 8017bbe:	4628      	mov	r0, r5
 8017bc0:	bcf0      	pop	{r4, r5, r6, r7}
 8017bc2:	f7ff bee5 	b.w	8017990 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08017bc8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8017bc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017bcc:	4681      	mov	r9, r0
 8017bce:	b093      	sub	sp, #76	; 0x4c
 8017bd0:	6810      	ldr	r0, [r2, #0]
 8017bd2:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8017bd6:	4f6d      	ldr	r7, [pc, #436]	; (8017d8c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8017bd8:	4688      	mov	r8, r1
 8017bda:	6851      	ldr	r1, [r2, #4]
 8017bdc:	ac0e      	add	r4, sp, #56	; 0x38
 8017bde:	c403      	stmia	r4!, {r0, r1}
 8017be0:	6818      	ldr	r0, [r3, #0]
 8017be2:	6859      	ldr	r1, [r3, #4]
 8017be4:	ac10      	add	r4, sp, #64	; 0x40
 8017be6:	4616      	mov	r6, r2
 8017be8:	c403      	stmia	r4!, {r0, r1}
 8017bea:	a80e      	add	r0, sp, #56	; 0x38
 8017bec:	f7f9 f872 	bl	8010cd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017bf0:	4631      	mov	r1, r6
 8017bf2:	a810      	add	r0, sp, #64	; 0x40
 8017bf4:	f7f9 f896 	bl	8010d24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017bf8:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8017bfc:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8017c00:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8017c04:	4e62      	ldr	r6, [pc, #392]	; (8017d90 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8017c06:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 8017c0a:	6830      	ldr	r0, [r6, #0]
 8017c0c:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8017c10:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017c14:	4489      	add	r9, r1
 8017c16:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8017c1a:	440a      	add	r2, r1
 8017c1c:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8017c20:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8017c24:	4413      	add	r3, r2
 8017c26:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8017c2a:	6803      	ldr	r3, [r0, #0]
 8017c2c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017c2e:	4798      	blx	r3
 8017c30:	f010 0f80 	tst.w	r0, #128	; 0x80
 8017c34:	6830      	ldr	r0, [r6, #0]
 8017c36:	d01d      	beq.n	8017c74 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8017c38:	2200      	movs	r2, #0
 8017c3a:	6801      	ldr	r1, [r0, #0]
 8017c3c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8017c40:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8017c44:	220b      	movs	r2, #11
 8017c46:	9207      	str	r2, [sp, #28]
 8017c48:	883a      	ldrh	r2, [r7, #0]
 8017c4a:	9206      	str	r2, [sp, #24]
 8017c4c:	2201      	movs	r2, #1
 8017c4e:	e9cd a204 	strd	sl, r2, [sp, #16]
 8017c52:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8017c56:	9203      	str	r2, [sp, #12]
 8017c58:	b2a4      	uxth	r4, r4
 8017c5a:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8017c5e:	9200      	str	r2, [sp, #0]
 8017c60:	b2ad      	uxth	r5, r5
 8017c62:	9502      	str	r5, [sp, #8]
 8017c64:	9401      	str	r4, [sp, #4]
 8017c66:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8017c68:	4642      	mov	r2, r8
 8017c6a:	4649      	mov	r1, r9
 8017c6c:	47a0      	blx	r4
 8017c6e:	b013      	add	sp, #76	; 0x4c
 8017c70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017c74:	6803      	ldr	r3, [r0, #0]
 8017c76:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017c78:	4798      	blx	r3
 8017c7a:	883b      	ldrh	r3, [r7, #0]
 8017c7c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8017c80:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8017c84:	fb03 1202 	mla	r2, r3, r2, r1
 8017c88:	435d      	muls	r5, r3
 8017c8a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017c8e:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8017c92:	920c      	str	r2, [sp, #48]	; 0x30
 8017c94:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8017c98:	1b12      	subs	r2, r2, r4
 8017c9a:	920d      	str	r2, [sp, #52]	; 0x34
 8017c9c:	0062      	lsls	r2, r4, #1
 8017c9e:	1b1c      	subs	r4, r3, r4
 8017ca0:	0063      	lsls	r3, r4, #1
 8017ca2:	920a      	str	r2, [sp, #40]	; 0x28
 8017ca4:	930b      	str	r3, [sp, #44]	; 0x2c
 8017ca6:	f04f 0e04 	mov.w	lr, #4
 8017caa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017cac:	4298      	cmp	r0, r3
 8017cae:	d266      	bcs.n	8017d7e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8017cb0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017cb2:	eb00 0b03 	add.w	fp, r0, r3
 8017cb6:	4558      	cmp	r0, fp
 8017cb8:	d25c      	bcs.n	8017d74 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8017cba:	f819 3b01 	ldrb.w	r3, [r9], #1
 8017cbe:	fb1e e303 	smlabb	r3, lr, r3, lr
 8017cc2:	f858 2003 	ldr.w	r2, [r8, r3]
 8017cc6:	0e11      	lsrs	r1, r2, #24
 8017cc8:	d012      	beq.n	8017cf0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8017cca:	29ff      	cmp	r1, #255	; 0xff
 8017ccc:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8017cd0:	d110      	bne.n	8017cf4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8017cd2:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8017cd6:	d10d      	bne.n	8017cf4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8017cd8:	0953      	lsrs	r3, r2, #5
 8017cda:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8017cde:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017ce2:	f027 0707 	bic.w	r7, r7, #7
 8017ce6:	431f      	orrs	r7, r3
 8017ce8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8017cec:	433a      	orrs	r2, r7
 8017cee:	8002      	strh	r2, [r0, #0]
 8017cf0:	3002      	adds	r0, #2
 8017cf2:	e7e0      	b.n	8017cb6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8017cf4:	fb0a f101 	mul.w	r1, sl, r1
 8017cf8:	8806      	ldrh	r6, [r0, #0]
 8017cfa:	1c4b      	adds	r3, r1, #1
 8017cfc:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8017d00:	1235      	asrs	r5, r6, #8
 8017d02:	10f4      	asrs	r4, r6, #3
 8017d04:	121b      	asrs	r3, r3, #8
 8017d06:	00f6      	lsls	r6, r6, #3
 8017d08:	b299      	uxth	r1, r3
 8017d0a:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8017d0e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017d12:	b2f6      	uxtb	r6, r6
 8017d14:	43db      	mvns	r3, r3
 8017d16:	b2d2      	uxtb	r2, r2
 8017d18:	b2db      	uxtb	r3, r3
 8017d1a:	fb1c fc01 	smulbb	ip, ip, r1
 8017d1e:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8017d22:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017d26:	fb12 f201 	smulbb	r2, r2, r1
 8017d2a:	fb05 c503 	mla	r5, r5, r3, ip
 8017d2e:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8017d32:	b2ff      	uxtb	r7, r7
 8017d34:	fb06 2203 	mla	r2, r6, r3, r2
 8017d38:	b2ad      	uxth	r5, r5
 8017d3a:	fb17 f701 	smulbb	r7, r7, r1
 8017d3e:	b292      	uxth	r2, r2
 8017d40:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8017d44:	fb04 7403 	mla	r4, r4, r3, r7
 8017d48:	f105 0c01 	add.w	ip, r5, #1
 8017d4c:	1c57      	adds	r7, r2, #1
 8017d4e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8017d52:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8017d56:	b2a4      	uxth	r4, r4
 8017d58:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8017d5c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8017d60:	433d      	orrs	r5, r7
 8017d62:	1c67      	adds	r7, r4, #1
 8017d64:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8017d68:	0964      	lsrs	r4, r4, #5
 8017d6a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8017d6e:	4325      	orrs	r5, r4
 8017d70:	8005      	strh	r5, [r0, #0]
 8017d72:	e7bd      	b.n	8017cf0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8017d74:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017d76:	4418      	add	r0, r3
 8017d78:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017d7a:	4499      	add	r9, r3
 8017d7c:	e795      	b.n	8017caa <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8017d7e:	4b04      	ldr	r3, [pc, #16]	; (8017d90 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8017d80:	6818      	ldr	r0, [r3, #0]
 8017d82:	6803      	ldr	r3, [r0, #0]
 8017d84:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017d86:	4798      	blx	r3
 8017d88:	e771      	b.n	8017c6e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8017d8a:	bf00      	nop
 8017d8c:	200155a6 	.word	0x200155a6
 8017d90:	200155ac 	.word	0x200155ac

08017d94 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8017d94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017d98:	b087      	sub	sp, #28
 8017d9a:	4680      	mov	r8, r0
 8017d9c:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8017da0:	460d      	mov	r5, r1
 8017da2:	4614      	mov	r4, r2
 8017da4:	2e00      	cmp	r6, #0
 8017da6:	f000 80b9 	beq.w	8017f1c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8017daa:	6810      	ldr	r0, [r2, #0]
 8017dac:	6851      	ldr	r1, [r2, #4]
 8017dae:	af02      	add	r7, sp, #8
 8017db0:	c703      	stmia	r7!, {r0, r1}
 8017db2:	6818      	ldr	r0, [r3, #0]
 8017db4:	6859      	ldr	r1, [r3, #4]
 8017db6:	af04      	add	r7, sp, #16
 8017db8:	c703      	stmia	r7!, {r0, r1}
 8017dba:	a802      	add	r0, sp, #8
 8017dbc:	f7f8 ff8a 	bl	8010cd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017dc0:	4621      	mov	r1, r4
 8017dc2:	a804      	add	r0, sp, #16
 8017dc4:	f7f8 ffae 	bl	8010d24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017dc8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8017dcc:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8017dd0:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8017dd4:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8017dd8:	fb14 2103 	smlabb	r1, r4, r3, r2
 8017ddc:	eb08 0401 	add.w	r4, r8, r1
 8017de0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8017de4:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8017de8:	440a      	add	r2, r1
 8017dea:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017dee:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8017df2:	4413      	add	r3, r2
 8017df4:	f8ad 3012 	strh.w	r3, [sp, #18]
 8017df8:	4b4a      	ldr	r3, [pc, #296]	; (8017f24 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8017dfa:	6818      	ldr	r0, [r3, #0]
 8017dfc:	6803      	ldr	r3, [r0, #0]
 8017dfe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017e00:	4798      	blx	r3
 8017e02:	4b49      	ldr	r3, [pc, #292]	; (8017f28 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8017e04:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8017e08:	881a      	ldrh	r2, [r3, #0]
 8017e0a:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8017e0e:	2eff      	cmp	r6, #255	; 0xff
 8017e10:	fb02 c101 	mla	r1, r2, r1, ip
 8017e14:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8017e18:	fb02 f207 	mul.w	r2, r2, r7
 8017e1c:	f105 0104 	add.w	r1, r5, #4
 8017e20:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8017e24:	461d      	mov	r5, r3
 8017e26:	d05a      	beq.n	8017ede <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8017e28:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 8017e2c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017e30:	b2b6      	uxth	r6, r6
 8017e32:	fa1f fe8e 	uxth.w	lr, lr
 8017e36:	9301      	str	r3, [sp, #4]
 8017e38:	4282      	cmp	r2, r0
 8017e3a:	d96a      	bls.n	8017f12 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8017e3c:	eb00 0b0a 	add.w	fp, r0, sl
 8017e40:	4583      	cmp	fp, r0
 8017e42:	d940      	bls.n	8017ec6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8017e44:	f814 3b01 	ldrb.w	r3, [r4], #1
 8017e48:	8805      	ldrh	r5, [r0, #0]
 8017e4a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8017e4e:	122f      	asrs	r7, r5, #8
 8017e50:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8017e54:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017e58:	fb17 f70e 	smulbb	r7, r7, lr
 8017e5c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8017e60:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017e64:	00ed      	lsls	r5, r5, #3
 8017e66:	fb0c 7c06 	mla	ip, ip, r6, r7
 8017e6a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8017e6e:	10df      	asrs	r7, r3, #3
 8017e70:	b2ed      	uxtb	r5, r5
 8017e72:	00db      	lsls	r3, r3, #3
 8017e74:	fa1f fc8c 	uxth.w	ip, ip
 8017e78:	fb19 f90e 	smulbb	r9, r9, lr
 8017e7c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017e80:	b2db      	uxtb	r3, r3
 8017e82:	fb15 f50e 	smulbb	r5, r5, lr
 8017e86:	fb07 9706 	mla	r7, r7, r6, r9
 8017e8a:	fb03 5306 	mla	r3, r3, r6, r5
 8017e8e:	f10c 0901 	add.w	r9, ip, #1
 8017e92:	b29b      	uxth	r3, r3
 8017e94:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8017e98:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8017e9c:	f103 0c01 	add.w	ip, r3, #1
 8017ea0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8017ea4:	b2bf      	uxth	r7, r7
 8017ea6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8017eaa:	ea4c 0c09 	orr.w	ip, ip, r9
 8017eae:	f107 0901 	add.w	r9, r7, #1
 8017eb2:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8017eb6:	097f      	lsrs	r7, r7, #5
 8017eb8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017ebc:	ea4c 0c07 	orr.w	ip, ip, r7
 8017ec0:	f820 cb02 	strh.w	ip, [r0], #2
 8017ec4:	e7bc      	b.n	8017e40 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8017ec6:	9b01      	ldr	r3, [sp, #4]
 8017ec8:	881b      	ldrh	r3, [r3, #0]
 8017eca:	eba3 0308 	sub.w	r3, r3, r8
 8017ece:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017ed2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8017ed6:	eba3 0308 	sub.w	r3, r3, r8
 8017eda:	441c      	add	r4, r3
 8017edc:	e7ac      	b.n	8017e38 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8017ede:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017ee2:	4282      	cmp	r2, r0
 8017ee4:	d915      	bls.n	8017f12 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8017ee6:	eb00 060a 	add.w	r6, r0, sl
 8017eea:	4286      	cmp	r6, r0
 8017eec:	d906      	bls.n	8017efc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 8017eee:	f814 3b01 	ldrb.w	r3, [r4], #1
 8017ef2:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8017ef6:	f820 3b02 	strh.w	r3, [r0], #2
 8017efa:	e7f6      	b.n	8017eea <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8017efc:	882b      	ldrh	r3, [r5, #0]
 8017efe:	eba3 0308 	sub.w	r3, r3, r8
 8017f02:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017f06:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8017f0a:	eba3 0308 	sub.w	r3, r3, r8
 8017f0e:	441c      	add	r4, r3
 8017f10:	e7e7      	b.n	8017ee2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8017f12:	4b04      	ldr	r3, [pc, #16]	; (8017f24 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8017f14:	6818      	ldr	r0, [r3, #0]
 8017f16:	6803      	ldr	r3, [r0, #0]
 8017f18:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017f1a:	4798      	blx	r3
 8017f1c:	b007      	add	sp, #28
 8017f1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017f22:	bf00      	nop
 8017f24:	200155ac 	.word	0x200155ac
 8017f28:	200155a6 	.word	0x200155a6

08017f2c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8017f2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017f30:	b091      	sub	sp, #68	; 0x44
 8017f32:	4680      	mov	r8, r0
 8017f34:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 8017f38:	460f      	mov	r7, r1
 8017f3a:	4614      	mov	r4, r2
 8017f3c:	2d00      	cmp	r5, #0
 8017f3e:	d051      	beq.n	8017fe4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8017f40:	6810      	ldr	r0, [r2, #0]
 8017f42:	6851      	ldr	r1, [r2, #4]
 8017f44:	f8df 9200 	ldr.w	r9, [pc, #512]	; 8018148 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8017f48:	ae0c      	add	r6, sp, #48	; 0x30
 8017f4a:	c603      	stmia	r6!, {r0, r1}
 8017f4c:	6818      	ldr	r0, [r3, #0]
 8017f4e:	6859      	ldr	r1, [r3, #4]
 8017f50:	ae0e      	add	r6, sp, #56	; 0x38
 8017f52:	c603      	stmia	r6!, {r0, r1}
 8017f54:	a80c      	add	r0, sp, #48	; 0x30
 8017f56:	f7f8 febd 	bl	8010cd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017f5a:	4621      	mov	r1, r4
 8017f5c:	a80e      	add	r0, sp, #56	; 0x38
 8017f5e:	f7f8 fee1 	bl	8010d24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017f62:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8017f66:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8017f6a:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8017f6e:	f8d9 0000 	ldr.w	r0, [r9]
 8017f72:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 8017f76:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 8017f7a:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017f7e:	eb08 0401 	add.w	r4, r8, r1
 8017f82:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8017f86:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801814c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8017f8a:	440a      	add	r2, r1
 8017f8c:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8017f90:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8017f94:	4413      	add	r3, r2
 8017f96:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8017f9a:	6803      	ldr	r3, [r0, #0]
 8017f9c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017f9e:	4798      	blx	r3
 8017fa0:	f010 0f80 	tst.w	r0, #128	; 0x80
 8017fa4:	f8d9 0000 	ldr.w	r0, [r9]
 8017fa8:	d01f      	beq.n	8017fea <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 8017faa:	2200      	movs	r2, #0
 8017fac:	6801      	ldr	r1, [r0, #0]
 8017fae:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8017fb2:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8017fb6:	220b      	movs	r2, #11
 8017fb8:	9207      	str	r2, [sp, #28]
 8017fba:	f8b8 2000 	ldrh.w	r2, [r8]
 8017fbe:	9206      	str	r2, [sp, #24]
 8017fc0:	2201      	movs	r2, #1
 8017fc2:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8017fc6:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 8017fca:	9203      	str	r2, [sp, #12]
 8017fcc:	fa1f f28a 	uxth.w	r2, sl
 8017fd0:	9202      	str	r2, [sp, #8]
 8017fd2:	b2b6      	uxth	r6, r6
 8017fd4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8017fd8:	9200      	str	r2, [sp, #0]
 8017fda:	9601      	str	r6, [sp, #4]
 8017fdc:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 8017fde:	463a      	mov	r2, r7
 8017fe0:	4621      	mov	r1, r4
 8017fe2:	47a8      	blx	r5
 8017fe4:	b011      	add	sp, #68	; 0x44
 8017fe6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017fea:	6803      	ldr	r3, [r0, #0]
 8017fec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017fee:	4798      	blx	r3
 8017ff0:	f8b8 2000 	ldrh.w	r2, [r8]
 8017ff4:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8017ff8:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 8017ffc:	2dff      	cmp	r5, #255	; 0xff
 8017ffe:	fb02 1303 	mla	r3, r2, r3, r1
 8018002:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018006:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801800a:	fb0a fa02 	mul.w	sl, sl, r2
 801800e:	d062      	beq.n	80180d6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8018010:	ea6f 0c05 	mvn.w	ip, r5
 8018014:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8018018:	930a      	str	r3, [sp, #40]	; 0x28
 801801a:	b2ad      	uxth	r5, r5
 801801c:	fa5f fc8c 	uxtb.w	ip, ip
 8018020:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8018024:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018026:	4298      	cmp	r0, r3
 8018028:	f080 8085 	bcs.w	8018136 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801802c:	eb00 0b09 	add.w	fp, r0, r9
 8018030:	4558      	cmp	r0, fp
 8018032:	d246      	bcs.n	80180c2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8018034:	f814 eb01 	ldrb.w	lr, [r4], #1
 8018038:	2303      	movs	r3, #3
 801803a:	2204      	movs	r2, #4
 801803c:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8018040:	eb07 0a0e 	add.w	sl, r7, lr
 8018044:	8803      	ldrh	r3, [r0, #0]
 8018046:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801804a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801804e:	1219      	asrs	r1, r3, #8
 8018050:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8018054:	fb18 f805 	smulbb	r8, r8, r5
 8018058:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801805c:	10da      	asrs	r2, r3, #3
 801805e:	fb01 810c 	mla	r1, r1, ip, r8
 8018062:	00db      	lsls	r3, r3, #3
 8018064:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8018068:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801806c:	b2db      	uxtb	r3, r3
 801806e:	fb18 f805 	smulbb	r8, r8, r5
 8018072:	fb1e fe05 	smulbb	lr, lr, r5
 8018076:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801807a:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801807e:	b289      	uxth	r1, r1
 8018080:	fb02 820c 	mla	r2, r2, ip, r8
 8018084:	fb03 e30c 	mla	r3, r3, ip, lr
 8018088:	b292      	uxth	r2, r2
 801808a:	b29b      	uxth	r3, r3
 801808c:	f101 0801 	add.w	r8, r1, #1
 8018090:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8018094:	f103 0e01 	add.w	lr, r3, #1
 8018098:	f102 0801 	add.w	r8, r2, #1
 801809c:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 80180a0:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 80180a4:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80180a8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80180ac:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80180b0:	ea4e 0101 	orr.w	r1, lr, r1
 80180b4:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80180b8:	ea41 0108 	orr.w	r1, r1, r8
 80180bc:	f820 1b02 	strh.w	r1, [r0], #2
 80180c0:	e7b6      	b.n	8018030 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 80180c2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80180c4:	881b      	ldrh	r3, [r3, #0]
 80180c6:	1b9b      	subs	r3, r3, r6
 80180c8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80180cc:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80180d0:	1b9b      	subs	r3, r3, r6
 80180d2:	441c      	add	r4, r3
 80180d4:	e7a6      	b.n	8018024 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 80180d6:	491b      	ldr	r1, [pc, #108]	; (8018144 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 80180d8:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 80180dc:	2203      	movs	r2, #3
 80180de:	2504      	movs	r5, #4
 80180e0:	4550      	cmp	r0, sl
 80180e2:	d228      	bcs.n	8018136 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 80180e4:	eb00 0c09 	add.w	ip, r0, r9
 80180e8:	4560      	cmp	r0, ip
 80180ea:	4623      	mov	r3, r4
 80180ec:	d219      	bcs.n	8018122 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 80180ee:	f893 e000 	ldrb.w	lr, [r3]
 80180f2:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 80180f6:	eb07 0b0e 	add.w	fp, r7, lr
 80180fa:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80180fe:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8018102:	f89b b001 	ldrb.w	fp, [fp, #1]
 8018106:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801810a:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801810e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8018112:	ea43 030b 	orr.w	r3, r3, fp
 8018116:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801811a:	3401      	adds	r4, #1
 801811c:	f820 3b02 	strh.w	r3, [r0], #2
 8018120:	e7e2      	b.n	80180e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8018122:	f8b8 3000 	ldrh.w	r3, [r8]
 8018126:	1b9b      	subs	r3, r3, r6
 8018128:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801812c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8018130:	1b9b      	subs	r3, r3, r6
 8018132:	441c      	add	r4, r3
 8018134:	e7d4      	b.n	80180e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8018136:	4b04      	ldr	r3, [pc, #16]	; (8018148 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8018138:	6818      	ldr	r0, [r3, #0]
 801813a:	6803      	ldr	r3, [r0, #0]
 801813c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801813e:	4798      	blx	r3
 8018140:	e750      	b.n	8017fe4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8018142:	bf00      	nop
 8018144:	fffff800 	.word	0xfffff800
 8018148:	200155ac 	.word	0x200155ac
 801814c:	200155a6 	.word	0x200155a6

08018150 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8018150:	b430      	push	{r4, r5}
 8018152:	780d      	ldrb	r5, [r1, #0]
 8018154:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8018158:	2d01      	cmp	r5, #1
 801815a:	d00a      	beq.n	8018172 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 801815c:	d305      	bcc.n	801816a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 801815e:	2d02      	cmp	r5, #2
 8018160:	d10b      	bne.n	801817a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 8018162:	9402      	str	r4, [sp, #8]
 8018164:	bc30      	pop	{r4, r5}
 8018166:	f7ff be15 	b.w	8017d94 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801816a:	9402      	str	r4, [sp, #8]
 801816c:	bc30      	pop	{r4, r5}
 801816e:	f7ff bd2b 	b.w	8017bc8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8018172:	9402      	str	r4, [sp, #8]
 8018174:	bc30      	pop	{r4, r5}
 8018176:	f7ff bed9 	b.w	8017f2c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801817a:	bc30      	pop	{r4, r5}
 801817c:	4770      	bx	lr
	...

08018180 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8018180:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018184:	4604      	mov	r4, r0
 8018186:	b087      	sub	sp, #28
 8018188:	6810      	ldr	r0, [r2, #0]
 801818a:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801818e:	f8df 9238 	ldr.w	r9, [pc, #568]	; 80183c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8018192:	460e      	mov	r6, r1
 8018194:	6851      	ldr	r1, [r2, #4]
 8018196:	ad02      	add	r5, sp, #8
 8018198:	c503      	stmia	r5!, {r0, r1}
 801819a:	6818      	ldr	r0, [r3, #0]
 801819c:	6859      	ldr	r1, [r3, #4]
 801819e:	ad04      	add	r5, sp, #16
 80181a0:	4617      	mov	r7, r2
 80181a2:	c503      	stmia	r5!, {r0, r1}
 80181a4:	a802      	add	r0, sp, #8
 80181a6:	f7f8 fd95 	bl	8010cd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80181aa:	4639      	mov	r1, r7
 80181ac:	a804      	add	r0, sp, #16
 80181ae:	f7f8 fdb9 	bl	8010d24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80181b2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80181b6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80181ba:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 80181be:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80181c2:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 80181c6:	fb11 2103 	smlabb	r1, r1, r3, r2
 80181ca:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 80181ce:	440e      	add	r6, r1
 80181d0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80181d4:	440a      	add	r2, r1
 80181d6:	f8ad 2010 	strh.w	r2, [sp, #16]
 80181da:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80181de:	4413      	add	r3, r2
 80181e0:	f8ad 3012 	strh.w	r3, [sp, #18]
 80181e4:	4b77      	ldr	r3, [pc, #476]	; (80183c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80181e6:	6818      	ldr	r0, [r3, #0]
 80181e8:	6803      	ldr	r3, [r0, #0]
 80181ea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80181ec:	4798      	blx	r3
 80181ee:	f8b9 b000 	ldrh.w	fp, [r9]
 80181f2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80181f6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80181fa:	fb0b 2303 	mla	r3, fp, r3, r2
 80181fe:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018202:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8018206:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801820a:	fb05 f50b 	mul.w	r5, r5, fp
 801820e:	9300      	str	r3, [sp, #0]
 8018210:	d069      	beq.n	80182e6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8018212:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8018216:	4558      	cmp	r0, fp
 8018218:	f080 80cc 	bcs.w	80183b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801821c:	9b00      	ldr	r3, [sp, #0]
 801821e:	18c3      	adds	r3, r0, r3
 8018220:	9301      	str	r3, [sp, #4]
 8018222:	4631      	mov	r1, r6
 8018224:	9b01      	ldr	r3, [sp, #4]
 8018226:	4298      	cmp	r0, r3
 8018228:	d24f      	bcs.n	80182ca <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801822a:	f811 2b01 	ldrb.w	r2, [r1], #1
 801822e:	2a00      	cmp	r2, #0
 8018230:	d048      	beq.n	80182c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8018232:	fb0a f202 	mul.w	r2, sl, r2
 8018236:	1c53      	adds	r3, r2, #1
 8018238:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801823c:	121b      	asrs	r3, r3, #8
 801823e:	d041      	beq.n	80182c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8018240:	8802      	ldrh	r2, [r0, #0]
 8018242:	f8b4 c000 	ldrh.w	ip, [r4]
 8018246:	b29e      	uxth	r6, r3
 8018248:	1215      	asrs	r5, r2, #8
 801824a:	43db      	mvns	r3, r3
 801824c:	b2db      	uxtb	r3, r3
 801824e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8018252:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8018256:	fb15 f503 	smulbb	r5, r5, r3
 801825a:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801825e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018262:	00d2      	lsls	r2, r2, #3
 8018264:	fb07 5706 	mla	r7, r7, r6, r5
 8018268:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801826c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8018270:	b2d2      	uxtb	r2, r2
 8018272:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018276:	b2bf      	uxth	r7, r7
 8018278:	fb1e fe03 	smulbb	lr, lr, r3
 801827c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8018280:	fa5f fc8c 	uxtb.w	ip, ip
 8018284:	fb12 f203 	smulbb	r2, r2, r3
 8018288:	fb05 e506 	mla	r5, r5, r6, lr
 801828c:	fb0c 2c06 	mla	ip, ip, r6, r2
 8018290:	f107 0e01 	add.w	lr, r7, #1
 8018294:	fa1f fc8c 	uxth.w	ip, ip
 8018298:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801829c:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 80182a0:	f10c 0701 	add.w	r7, ip, #1
 80182a4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80182a8:	b2ad      	uxth	r5, r5
 80182aa:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80182ae:	ea47 070e 	orr.w	r7, r7, lr
 80182b2:	f105 0e01 	add.w	lr, r5, #1
 80182b6:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 80182ba:	096d      	lsrs	r5, r5, #5
 80182bc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80182c0:	432f      	orrs	r7, r5
 80182c2:	8007      	strh	r7, [r0, #0]
 80182c4:	3002      	adds	r0, #2
 80182c6:	3402      	adds	r4, #2
 80182c8:	e7ac      	b.n	8018224 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 80182ca:	f8b9 3000 	ldrh.w	r3, [r9]
 80182ce:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80182d2:	eba3 0308 	sub.w	r3, r3, r8
 80182d6:	eba6 0608 	sub.w	r6, r6, r8
 80182da:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80182de:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80182e2:	440e      	add	r6, r1
 80182e4:	e797      	b.n	8018216 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 80182e6:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80182ea:	42a8      	cmp	r0, r5
 80182ec:	d262      	bcs.n	80183b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80182ee:	9b00      	ldr	r3, [sp, #0]
 80182f0:	4631      	mov	r1, r6
 80182f2:	eb00 0b03 	add.w	fp, r0, r3
 80182f6:	4558      	cmp	r0, fp
 80182f8:	d24e      	bcs.n	8018398 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 80182fa:	f811 3b01 	ldrb.w	r3, [r1], #1
 80182fe:	b12b      	cbz	r3, 801830c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8018300:	2bff      	cmp	r3, #255	; 0xff
 8018302:	f8b4 e000 	ldrh.w	lr, [r4]
 8018306:	d104      	bne.n	8018312 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8018308:	f8a0 e000 	strh.w	lr, [r0]
 801830c:	3002      	adds	r0, #2
 801830e:	3402      	adds	r4, #2
 8018310:	e7f1      	b.n	80182f6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8018312:	8802      	ldrh	r2, [r0, #0]
 8018314:	b29f      	uxth	r7, r3
 8018316:	1216      	asrs	r6, r2, #8
 8018318:	43db      	mvns	r3, r3
 801831a:	b2db      	uxtb	r3, r3
 801831c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8018320:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8018324:	fb16 f603 	smulbb	r6, r6, r3
 8018328:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801832c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018330:	00d2      	lsls	r2, r2, #3
 8018332:	fb0c 6c07 	mla	ip, ip, r7, r6
 8018336:	b2d2      	uxtb	r2, r2
 8018338:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801833c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8018340:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018344:	fb1a fa03 	smulbb	sl, sl, r3
 8018348:	fa1f fc8c 	uxth.w	ip, ip
 801834c:	fb12 f303 	smulbb	r3, r2, r3
 8018350:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018354:	fa5f fe8e 	uxtb.w	lr, lr
 8018358:	fb06 a607 	mla	r6, r6, r7, sl
 801835c:	f10c 0201 	add.w	r2, ip, #1
 8018360:	fb0e 3307 	mla	r3, lr, r7, r3
 8018364:	b2b6      	uxth	r6, r6
 8018366:	b29b      	uxth	r3, r3
 8018368:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801836c:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 8018370:	f106 0a01 	add.w	sl, r6, #1
 8018374:	f103 0c01 	add.w	ip, r3, #1
 8018378:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801837c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8018380:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8018384:	0976      	lsrs	r6, r6, #5
 8018386:	ea4c 0c02 	orr.w	ip, ip, r2
 801838a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801838e:	ea4c 0c06 	orr.w	ip, ip, r6
 8018392:	f8a0 c000 	strh.w	ip, [r0]
 8018396:	e7b9      	b.n	801830c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8018398:	f8b9 3000 	ldrh.w	r3, [r9]
 801839c:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80183a0:	eba3 0308 	sub.w	r3, r3, r8
 80183a4:	eba6 0608 	sub.w	r6, r6, r8
 80183a8:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80183ac:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80183b0:	440e      	add	r6, r1
 80183b2:	e79a      	b.n	80182ea <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 80183b4:	4b03      	ldr	r3, [pc, #12]	; (80183c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80183b6:	6818      	ldr	r0, [r3, #0]
 80183b8:	6803      	ldr	r3, [r0, #0]
 80183ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80183bc:	4798      	blx	r3
 80183be:	b007      	add	sp, #28
 80183c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80183c4:	200155ac 	.word	0x200155ac
 80183c8:	200155a6 	.word	0x200155a6

080183cc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 80183cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80183d0:	b089      	sub	sp, #36	; 0x24
 80183d2:	4682      	mov	sl, r0
 80183d4:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 80183d8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80183da:	460f      	mov	r7, r1
 80183dc:	4691      	mov	r9, r2
 80183de:	4698      	mov	r8, r3
 80183e0:	2e00      	cmp	r6, #0
 80183e2:	d036      	beq.n	8018452 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80183e4:	4608      	mov	r0, r1
 80183e6:	f7fc f863 	bl	80144b0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80183ea:	4605      	mov	r5, r0
 80183ec:	4638      	mov	r0, r7
 80183ee:	f7fc f893 	bl	8014518 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80183f2:	f8ad 000e 	strh.w	r0, [sp, #14]
 80183f6:	4638      	mov	r0, r7
 80183f8:	f8ad 9008 	strh.w	r9, [sp, #8]
 80183fc:	f8ad 500c 	strh.w	r5, [sp, #12]
 8018400:	f8ad 800a 	strh.w	r8, [sp, #10]
 8018404:	f7fc f940 	bl	8014688 <_ZNK8touchgfx6Bitmap7getDataEv>
 8018408:	4605      	mov	r5, r0
 801840a:	4638      	mov	r0, r7
 801840c:	f7fc f96c 	bl	80146e8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8018410:	4681      	mov	r9, r0
 8018412:	4638      	mov	r0, r7
 8018414:	f7fc f9bc 	bl	8014790 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8018418:	280b      	cmp	r0, #11
 801841a:	d81a      	bhi.n	8018452 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801841c:	e8df f000 	tbb	[pc, r0]
 8018420:	1906aebd 	.word	0x1906aebd
 8018424:	19191919 	.word	0x19191919
 8018428:	b5191919 	.word	0xb5191919
 801842c:	4bb0      	ldr	r3, [pc, #704]	; (80186f0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801842e:	6818      	ldr	r0, [r3, #0]
 8018430:	6803      	ldr	r3, [r0, #0]
 8018432:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018434:	4798      	blx	r3
 8018436:	2eff      	cmp	r6, #255	; 0xff
 8018438:	d121      	bne.n	801847e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 801843a:	0683      	lsls	r3, r0, #26
 801843c:	d41f      	bmi.n	801847e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 801843e:	4638      	mov	r0, r7
 8018440:	f7fc f8ea 	bl	8014618 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8018444:	b940      	cbnz	r0, 8018458 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 8018446:	4623      	mov	r3, r4
 8018448:	aa02      	add	r2, sp, #8
 801844a:	4629      	mov	r1, r5
 801844c:	4650      	mov	r0, sl
 801844e:	f7ff fa2f 	bl	80178b0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8018452:	b009      	add	sp, #36	; 0x24
 8018454:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018458:	f10d 0818 	add.w	r8, sp, #24
 801845c:	4639      	mov	r1, r7
 801845e:	4640      	mov	r0, r8
 8018460:	f7fc f88e 	bl	8014580 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8018464:	e898 0003 	ldmia.w	r8, {r0, r1}
 8018468:	af04      	add	r7, sp, #16
 801846a:	e887 0003 	stmia.w	r7, {r0, r1}
 801846e:	4638      	mov	r0, r7
 8018470:	4621      	mov	r1, r4
 8018472:	f7f2 fc5b 	bl	800ad2c <_ZN8touchgfx4RectaNERKS0_>
 8018476:	4638      	mov	r0, r7
 8018478:	f7f2 fc9b 	bl	800adb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801847c:	b130      	cbz	r0, 801848c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 801847e:	4633      	mov	r3, r6
 8018480:	4622      	mov	r2, r4
 8018482:	a902      	add	r1, sp, #8
 8018484:	4628      	mov	r0, r5
 8018486:	f7ff f92d 	bl	80176e4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801848a:	e7e2      	b.n	8018452 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801848c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018490:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8018494:	4293      	cmp	r3, r2
 8018496:	dd12      	ble.n	80184be <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf2>
 8018498:	1a9b      	subs	r3, r3, r2
 801849a:	f9b4 0000 	ldrsh.w	r0, [r4]
 801849e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80184a2:	f8ad 0018 	strh.w	r0, [sp, #24]
 80184a6:	f8ad 201a 	strh.w	r2, [sp, #26]
 80184aa:	f8ad 101c 	strh.w	r1, [sp, #28]
 80184ae:	f8ad 301e 	strh.w	r3, [sp, #30]
 80184b2:	4642      	mov	r2, r8
 80184b4:	4633      	mov	r3, r6
 80184b6:	a902      	add	r1, sp, #8
 80184b8:	4628      	mov	r0, r5
 80184ba:	f7ff f913 	bl	80176e4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80184be:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80184c2:	f9b4 2000 	ldrsh.w	r2, [r4]
 80184c6:	4293      	cmp	r3, r2
 80184c8:	dd12      	ble.n	80184f0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x124>
 80184ca:	1a9b      	subs	r3, r3, r2
 80184cc:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80184d0:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80184d4:	f8ad 2018 	strh.w	r2, [sp, #24]
 80184d8:	f8ad 001a 	strh.w	r0, [sp, #26]
 80184dc:	f8ad 301c 	strh.w	r3, [sp, #28]
 80184e0:	f8ad 101e 	strh.w	r1, [sp, #30]
 80184e4:	23ff      	movs	r3, #255	; 0xff
 80184e6:	4642      	mov	r2, r8
 80184e8:	a902      	add	r1, sp, #8
 80184ea:	4628      	mov	r0, r5
 80184ec:	f7ff f8fa 	bl	80176e4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80184f0:	463b      	mov	r3, r7
 80184f2:	aa02      	add	r2, sp, #8
 80184f4:	4629      	mov	r1, r5
 80184f6:	4650      	mov	r0, sl
 80184f8:	f7ff f9da 	bl	80178b0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 80184fc:	88a2      	ldrh	r2, [r4, #4]
 80184fe:	8823      	ldrh	r3, [r4, #0]
 8018500:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8018504:	4413      	add	r3, r2
 8018506:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801850a:	440a      	add	r2, r1
 801850c:	b29b      	uxth	r3, r3
 801850e:	b292      	uxth	r2, r2
 8018510:	b211      	sxth	r1, r2
 8018512:	b218      	sxth	r0, r3
 8018514:	4288      	cmp	r0, r1
 8018516:	dd12      	ble.n	801853e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x172>
 8018518:	1a9b      	subs	r3, r3, r2
 801851a:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801851e:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8018522:	f8ad 1018 	strh.w	r1, [sp, #24]
 8018526:	f8ad 301c 	strh.w	r3, [sp, #28]
 801852a:	f8ad 001e 	strh.w	r0, [sp, #30]
 801852e:	23ff      	movs	r3, #255	; 0xff
 8018530:	4642      	mov	r2, r8
 8018532:	a902      	add	r1, sp, #8
 8018534:	4628      	mov	r0, r5
 8018536:	f8ad 601a 	strh.w	r6, [sp, #26]
 801853a:	f7ff f8d3 	bl	80176e4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801853e:	88e2      	ldrh	r2, [r4, #6]
 8018540:	8863      	ldrh	r3, [r4, #2]
 8018542:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8018546:	4413      	add	r3, r2
 8018548:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801854c:	440a      	add	r2, r1
 801854e:	b29b      	uxth	r3, r3
 8018550:	b292      	uxth	r2, r2
 8018552:	b211      	sxth	r1, r2
 8018554:	b218      	sxth	r0, r3
 8018556:	4288      	cmp	r0, r1
 8018558:	f77f af7b 	ble.w	8018452 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801855c:	1a9b      	subs	r3, r3, r2
 801855e:	f9b4 6000 	ldrsh.w	r6, [r4]
 8018562:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018566:	f8ad 301e 	strh.w	r3, [sp, #30]
 801856a:	f8ad 6018 	strh.w	r6, [sp, #24]
 801856e:	f8ad 101a 	strh.w	r1, [sp, #26]
 8018572:	f8ad 001c 	strh.w	r0, [sp, #28]
 8018576:	23ff      	movs	r3, #255	; 0xff
 8018578:	4642      	mov	r2, r8
 801857a:	e782      	b.n	8018482 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb6>
 801857c:	4633      	mov	r3, r6
 801857e:	4622      	mov	r2, r4
 8018580:	a902      	add	r1, sp, #8
 8018582:	4628      	mov	r0, r5
 8018584:	f7ff fa04 	bl	8017990 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8018588:	e763      	b.n	8018452 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801858a:	9600      	str	r6, [sp, #0]
 801858c:	4623      	mov	r3, r4
 801858e:	aa02      	add	r2, sp, #8
 8018590:	4649      	mov	r1, r9
 8018592:	4628      	mov	r0, r5
 8018594:	f7ff fddc 	bl	8018150 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8018598:	e75b      	b.n	8018452 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801859a:	4638      	mov	r0, r7
 801859c:	f7fc f83c 	bl	8014618 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80185a0:	b950      	cbnz	r0, 80185b8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ec>
 80185a2:	e9cd 6000 	strd	r6, r0, [sp]
 80185a6:	f8da 3000 	ldr.w	r3, [sl]
 80185aa:	aa02      	add	r2, sp, #8
 80185ac:	68de      	ldr	r6, [r3, #12]
 80185ae:	4629      	mov	r1, r5
 80185b0:	4623      	mov	r3, r4
 80185b2:	4650      	mov	r0, sl
 80185b4:	47b0      	blx	r6
 80185b6:	e74c      	b.n	8018452 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80185b8:	f10d 0818 	add.w	r8, sp, #24
 80185bc:	4639      	mov	r1, r7
 80185be:	4640      	mov	r0, r8
 80185c0:	f7fb ffde 	bl	8014580 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80185c4:	e898 0003 	ldmia.w	r8, {r0, r1}
 80185c8:	af04      	add	r7, sp, #16
 80185ca:	e887 0003 	stmia.w	r7, {r0, r1}
 80185ce:	4638      	mov	r0, r7
 80185d0:	4621      	mov	r1, r4
 80185d2:	f7f2 fbab 	bl	800ad2c <_ZN8touchgfx4RectaNERKS0_>
 80185d6:	4638      	mov	r0, r7
 80185d8:	f7f2 fbeb 	bl	800adb2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80185dc:	b138      	cbz	r0, 80185ee <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x222>
 80185de:	9600      	str	r6, [sp, #0]
 80185e0:	4623      	mov	r3, r4
 80185e2:	aa02      	add	r2, sp, #8
 80185e4:	4649      	mov	r1, r9
 80185e6:	4628      	mov	r0, r5
 80185e8:	f7ff fdca 	bl	8018180 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80185ec:	e731      	b.n	8018452 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80185ee:	e9cd 6000 	strd	r6, r0, [sp]
 80185f2:	f8da 3000 	ldr.w	r3, [sl]
 80185f6:	aa02      	add	r2, sp, #8
 80185f8:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 80185fc:	4629      	mov	r1, r5
 80185fe:	463b      	mov	r3, r7
 8018600:	4650      	mov	r0, sl
 8018602:	47d8      	blx	fp
 8018604:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018608:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801860c:	4293      	cmp	r3, r2
 801860e:	dd13      	ble.n	8018638 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26c>
 8018610:	f9b4 0000 	ldrsh.w	r0, [r4]
 8018614:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8018618:	f8ad 0018 	strh.w	r0, [sp, #24]
 801861c:	1a9b      	subs	r3, r3, r2
 801861e:	f8ad 201a 	strh.w	r2, [sp, #26]
 8018622:	f8ad 101c 	strh.w	r1, [sp, #28]
 8018626:	f8ad 301e 	strh.w	r3, [sp, #30]
 801862a:	9600      	str	r6, [sp, #0]
 801862c:	4643      	mov	r3, r8
 801862e:	aa02      	add	r2, sp, #8
 8018630:	4649      	mov	r1, r9
 8018632:	4628      	mov	r0, r5
 8018634:	f7ff fda4 	bl	8018180 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018638:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801863c:	f9b4 2000 	ldrsh.w	r2, [r4]
 8018640:	4293      	cmp	r3, r2
 8018642:	dd13      	ble.n	801866c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a0>
 8018644:	1a9b      	subs	r3, r3, r2
 8018646:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801864a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801864e:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018652:	f8ad 001a 	strh.w	r0, [sp, #26]
 8018656:	f8ad 301c 	strh.w	r3, [sp, #28]
 801865a:	f8ad 101e 	strh.w	r1, [sp, #30]
 801865e:	9600      	str	r6, [sp, #0]
 8018660:	4643      	mov	r3, r8
 8018662:	aa02      	add	r2, sp, #8
 8018664:	4649      	mov	r1, r9
 8018666:	4628      	mov	r0, r5
 8018668:	f7ff fd8a 	bl	8018180 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801866c:	88a2      	ldrh	r2, [r4, #4]
 801866e:	8823      	ldrh	r3, [r4, #0]
 8018670:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8018674:	4413      	add	r3, r2
 8018676:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801867a:	440a      	add	r2, r1
 801867c:	b29b      	uxth	r3, r3
 801867e:	b292      	uxth	r2, r2
 8018680:	b211      	sxth	r1, r2
 8018682:	b218      	sxth	r0, r3
 8018684:	4288      	cmp	r0, r1
 8018686:	dd13      	ble.n	80186b0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e4>
 8018688:	1a9b      	subs	r3, r3, r2
 801868a:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801868e:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8018692:	f8ad 1018 	strh.w	r1, [sp, #24]
 8018696:	f8ad 301c 	strh.w	r3, [sp, #28]
 801869a:	f8ad 001e 	strh.w	r0, [sp, #30]
 801869e:	9600      	str	r6, [sp, #0]
 80186a0:	4643      	mov	r3, r8
 80186a2:	aa02      	add	r2, sp, #8
 80186a4:	4649      	mov	r1, r9
 80186a6:	4628      	mov	r0, r5
 80186a8:	f8ad 701a 	strh.w	r7, [sp, #26]
 80186ac:	f7ff fd68 	bl	8018180 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80186b0:	88e2      	ldrh	r2, [r4, #6]
 80186b2:	8863      	ldrh	r3, [r4, #2]
 80186b4:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80186b8:	4413      	add	r3, r2
 80186ba:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80186be:	440a      	add	r2, r1
 80186c0:	b29b      	uxth	r3, r3
 80186c2:	b292      	uxth	r2, r2
 80186c4:	b211      	sxth	r1, r2
 80186c6:	b218      	sxth	r0, r3
 80186c8:	4288      	cmp	r0, r1
 80186ca:	f77f aec2 	ble.w	8018452 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80186ce:	f9b4 7000 	ldrsh.w	r7, [r4]
 80186d2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80186d6:	f8ad 7018 	strh.w	r7, [sp, #24]
 80186da:	1a9b      	subs	r3, r3, r2
 80186dc:	f8ad 301e 	strh.w	r3, [sp, #30]
 80186e0:	f8ad 101a 	strh.w	r1, [sp, #26]
 80186e4:	f8ad 001c 	strh.w	r0, [sp, #28]
 80186e8:	9600      	str	r6, [sp, #0]
 80186ea:	4643      	mov	r3, r8
 80186ec:	e779      	b.n	80185e2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x216>
 80186ee:	bf00      	nop
 80186f0:	200155ac 	.word	0x200155ac

080186f4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 80186f4:	b180      	cbz	r0, 8018718 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 80186f6:	2903      	cmp	r1, #3
 80186f8:	d81c      	bhi.n	8018734 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 80186fa:	e8df f001 	tbb	[pc, r1]
 80186fe:	1d02      	.short	0x1d02
 8018700:	1f08      	.short	0x1f08
 8018702:	4b10      	ldr	r3, [pc, #64]	; (8018744 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8018704:	8818      	ldrh	r0, [r3, #0]
 8018706:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801870a:	4240      	negs	r0, r0
 801870c:	4770      	bx	lr
 801870e:	4b0d      	ldr	r3, [pc, #52]	; (8018744 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8018710:	8818      	ldrh	r0, [r3, #0]
 8018712:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018716:	4770      	bx	lr
 8018718:	2903      	cmp	r1, #3
 801871a:	d80b      	bhi.n	8018734 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801871c:	a301      	add	r3, pc, #4	; (adr r3, 8018724 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801871e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8018722:	bf00      	nop
 8018724:	08018739 	.word	0x08018739
 8018728:	0801870f 	.word	0x0801870f
 801872c:	0801873d 	.word	0x0801873d
 8018730:	08018703 	.word	0x08018703
 8018734:	2000      	movs	r0, #0
 8018736:	4770      	bx	lr
 8018738:	2001      	movs	r0, #1
 801873a:	4770      	bx	lr
 801873c:	f04f 30ff 	mov.w	r0, #4294967295
 8018740:	4770      	bx	lr
 8018742:	bf00      	nop
 8018744:	200155a6 	.word	0x200155a6

08018748 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8018748:	b180      	cbz	r0, 801876c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801874a:	2903      	cmp	r1, #3
 801874c:	d81c      	bhi.n	8018788 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801874e:	e8df f001 	tbb	[pc, r1]
 8018752:	021d      	.short	0x021d
 8018754:	071f      	.short	0x071f
 8018756:	4b10      	ldr	r3, [pc, #64]	; (8018798 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8018758:	8818      	ldrh	r0, [r3, #0]
 801875a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801875e:	4770      	bx	lr
 8018760:	4b0d      	ldr	r3, [pc, #52]	; (8018798 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8018762:	8818      	ldrh	r0, [r3, #0]
 8018764:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018768:	4240      	negs	r0, r0
 801876a:	4770      	bx	lr
 801876c:	2903      	cmp	r1, #3
 801876e:	d80b      	bhi.n	8018788 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8018770:	a301      	add	r3, pc, #4	; (adr r3, 8018778 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 8018772:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8018776:	bf00      	nop
 8018778:	08018757 	.word	0x08018757
 801877c:	08018791 	.word	0x08018791
 8018780:	08018761 	.word	0x08018761
 8018784:	0801878d 	.word	0x0801878d
 8018788:	2000      	movs	r0, #0
 801878a:	4770      	bx	lr
 801878c:	2001      	movs	r0, #1
 801878e:	4770      	bx	lr
 8018790:	f04f 30ff 	mov.w	r0, #4294967295
 8018794:	4770      	bx	lr
 8018796:	bf00      	nop
 8018798:	200155a6 	.word	0x200155a6

0801879c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801879c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80187a0:	b099      	sub	sp, #100	; 0x64
 80187a2:	910b      	str	r1, [sp, #44]	; 0x2c
 80187a4:	a914      	add	r1, sp, #80	; 0x50
 80187a6:	e881 000c 	stmia.w	r1, {r2, r3}
 80187aa:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 80187ae:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 80187b2:	f891 900d 	ldrb.w	r9, [r1, #13]
 80187b6:	9309      	str	r3, [sp, #36]	; 0x24
 80187b8:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80187bc:	9310      	str	r3, [sp, #64]	; 0x40
 80187be:	ea4f 1749 	mov.w	r7, r9, lsl #5
 80187c2:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 80187c6:	930c      	str	r3, [sp, #48]	; 0x30
 80187c8:	f407 7380 	and.w	r3, r7, #256	; 0x100
 80187cc:	798f      	ldrb	r7, [r1, #6]
 80187ce:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 80187d2:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 80187d6:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 80187da:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 80187de:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 80187e2:	431f      	orrs	r7, r3
 80187e4:	f000 8195 	beq.w	8018b12 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80187e8:	ea4f 1909 	mov.w	r9, r9, lsl #4
 80187ec:	f409 7380 	and.w	r3, r9, #256	; 0x100
 80187f0:	f891 9007 	ldrb.w	r9, [r1, #7]
 80187f4:	ea59 0903 	orrs.w	r9, r9, r3
 80187f8:	f000 818b 	beq.w	8018b12 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80187fc:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8018800:	b29b      	uxth	r3, r3
 8018802:	2d00      	cmp	r5, #0
 8018804:	f000 812e 	beq.w	8018a64 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 8018808:	1aed      	subs	r5, r5, r3
 801880a:	b2ad      	uxth	r5, r5
 801880c:	042b      	lsls	r3, r5, #16
 801880e:	d502      	bpl.n	8018816 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8018810:	1b64      	subs	r4, r4, r5
 8018812:	b224      	sxth	r4, r4
 8018814:	2500      	movs	r5, #0
 8018816:	f9b2 1000 	ldrsh.w	r1, [r2]
 801881a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801881e:	428c      	cmp	r4, r1
 8018820:	b28b      	uxth	r3, r1
 8018822:	bfbf      	itttt	lt
 8018824:	18ed      	addlt	r5, r5, r3
 8018826:	1b2c      	sublt	r4, r5, r4
 8018828:	b2a5      	uxthlt	r5, r4
 801882a:	460c      	movlt	r4, r1
 801882c:	8891      	ldrh	r1, [r2, #4]
 801882e:	440b      	add	r3, r1
 8018830:	b21b      	sxth	r3, r3
 8018832:	930f      	str	r3, [sp, #60]	; 0x3c
 8018834:	88d3      	ldrh	r3, [r2, #6]
 8018836:	8852      	ldrh	r2, [r2, #2]
 8018838:	4413      	add	r3, r2
 801883a:	b21b      	sxth	r3, r3
 801883c:	930d      	str	r3, [sp, #52]	; 0x34
 801883e:	4bbe      	ldr	r3, [pc, #760]	; (8018b38 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8018840:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018842:	f893 b000 	ldrb.w	fp, [r3]
 8018846:	f10b 3cff 	add.w	ip, fp, #4294967295
 801884a:	f1dc 0300 	rsbs	r3, ip, #0
 801884e:	eb43 030c 	adc.w	r3, r3, ip
 8018852:	930e      	str	r3, [sp, #56]	; 0x38
 8018854:	4621      	mov	r1, r4
 8018856:	4653      	mov	r3, sl
 8018858:	a814      	add	r0, sp, #80	; 0x50
 801885a:	f7f8 f8b5 	bl	80109c8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801885e:	4621      	mov	r1, r4
 8018860:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8018864:	4653      	mov	r3, sl
 8018866:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018868:	a814      	add	r0, sp, #80	; 0x50
 801886a:	f7f8 f8ca 	bl	8010a02 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801886e:	a918      	add	r1, sp, #96	; 0x60
 8018870:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8018874:	a817      	add	r0, sp, #92	; 0x5c
 8018876:	f7f8 f9eb 	bl	8010c50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801887a:	f1ba 0f00 	cmp.w	sl, #0
 801887e:	f040 80f4 	bne.w	8018a6a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 8018882:	f1bb 0f01 	cmp.w	fp, #1
 8018886:	f040 80f8 	bne.w	8018a7a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801888a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801888c:	2b00      	cmp	r3, #0
 801888e:	f040 8145 	bne.w	8018b1c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 8018892:	b2ba      	uxth	r2, r7
 8018894:	b905      	cbnz	r5, 8018898 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 8018896:	b16e      	cbz	r6, 80188b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 8018898:	fb06 5302 	mla	r3, r6, r2, r5
 801889c:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801889e:	fb08 f303 	mul.w	r3, r8, r3
 80188a2:	4631      	mov	r1, r6
 80188a4:	f003 0607 	and.w	r6, r3, #7
 80188a8:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 80188ac:	9328      	str	r3, [sp, #160]	; 0xa0
 80188ae:	eba9 0301 	sub.w	r3, r9, r1
 80188b2:	930a      	str	r3, [sp, #40]	; 0x28
 80188b4:	4651      	mov	r1, sl
 80188b6:	980e      	ldr	r0, [sp, #56]	; 0x38
 80188b8:	f7ff ff1c 	bl	80186f4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 80188bc:	4681      	mov	r9, r0
 80188be:	980e      	ldr	r0, [sp, #56]	; 0x38
 80188c0:	f7ff ff42 	bl	8018748 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 80188c4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80188c6:	9909      	ldr	r1, [sp, #36]	; 0x24
 80188c8:	eba3 0a01 	sub.w	sl, r3, r1
 80188cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80188ce:	459a      	cmp	sl, r3
 80188d0:	bfa8      	it	ge
 80188d2:	469a      	movge	sl, r3
 80188d4:	f1ba 0f00 	cmp.w	sl, #0
 80188d8:	4683      	mov	fp, r0
 80188da:	f340 811a 	ble.w	8018b12 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80188de:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80188e0:	1b64      	subs	r4, r4, r5
 80188e2:	1b1c      	subs	r4, r3, r4
 80188e4:	42bc      	cmp	r4, r7
 80188e6:	bfd4      	ite	le
 80188e8:	ebc5 0504 	rsble	r5, r5, r4
 80188ec:	ebc5 0507 	rsbgt	r5, r5, r7
 80188f0:	2d00      	cmp	r5, #0
 80188f2:	f340 810e 	ble.w	8018b12 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80188f6:	1b52      	subs	r2, r2, r5
 80188f8:	fb08 f302 	mul.w	r3, r8, r2
 80188fc:	930f      	str	r3, [sp, #60]	; 0x3c
 80188fe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018900:	2b00      	cmp	r3, #0
 8018902:	f040 8116 	bne.w	8018b32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8018906:	4b8d      	ldr	r3, [pc, #564]	; (8018b3c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8018908:	6818      	ldr	r0, [r3, #0]
 801890a:	6803      	ldr	r3, [r0, #0]
 801890c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801890e:	4798      	blx	r3
 8018910:	2301      	movs	r3, #1
 8018912:	fa03 f308 	lsl.w	r3, r3, r8
 8018916:	4a8a      	ldr	r2, [pc, #552]	; (8018b40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8018918:	3b01      	subs	r3, #1
 801891a:	b2db      	uxtb	r3, r3
 801891c:	8811      	ldrh	r1, [r2, #0]
 801891e:	930e      	str	r3, [sp, #56]	; 0x38
 8018920:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8018924:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8018928:	fb01 2303 	mla	r3, r1, r3, r2
 801892c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018930:	930a      	str	r3, [sp, #40]	; 0x28
 8018932:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018934:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8018938:	9313      	str	r3, [sp, #76]	; 0x4c
 801893a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801893c:	0a19      	lsrs	r1, r3, #8
 801893e:	b2cb      	uxtb	r3, r1
 8018940:	9312      	str	r3, [sp, #72]	; 0x48
 8018942:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018944:	b2db      	uxtb	r3, r3
 8018946:	9311      	str	r3, [sp, #68]	; 0x44
 8018948:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801894a:	095a      	lsrs	r2, r3, #5
 801894c:	4b7d      	ldr	r3, [pc, #500]	; (8018b44 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801894e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018952:	400b      	ands	r3, r1
 8018954:	4313      	orrs	r3, r2
 8018956:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8018958:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801895c:	4313      	orrs	r3, r2
 801895e:	b29b      	uxth	r3, r3
 8018960:	9310      	str	r3, [sp, #64]	; 0x40
 8018962:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018964:	781a      	ldrb	r2, [r3, #0]
 8018966:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801896a:	4132      	asrs	r2, r6
 801896c:	fb05 b919 	mls	r9, r5, r9, fp
 8018970:	fb03 fb05 	mul.w	fp, r3, r5
 8018974:	b2d2      	uxtb	r2, r2
 8018976:	930d      	str	r3, [sp, #52]	; 0x34
 8018978:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801897c:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8018980:	f0c0 80f5 	bcc.w	8018b6e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 8018984:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 8018988:	46ae      	mov	lr, r5
 801898a:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801898e:	f0c0 80dd 	bcc.w	8018b4c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 8018992:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018994:	4013      	ands	r3, r2
 8018996:	d055      	beq.n	8018a44 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 8018998:	20ff      	movs	r0, #255	; 0xff
 801899a:	990e      	ldr	r1, [sp, #56]	; 0x38
 801899c:	fb90 f1f1 	sdiv	r1, r0, r1
 80189a0:	434b      	muls	r3, r1
 80189a2:	2bfe      	cmp	r3, #254	; 0xfe
 80189a4:	dd03      	ble.n	80189ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 80189a6:	990c      	ldr	r1, [sp, #48]	; 0x30
 80189a8:	4281      	cmp	r1, r0
 80189aa:	f000 80cd 	beq.w	8018b48 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 80189ae:	990c      	ldr	r1, [sp, #48]	; 0x30
 80189b0:	f8bc 4000 	ldrh.w	r4, [ip]
 80189b4:	fb11 f303 	smulbb	r3, r1, r3
 80189b8:	b29b      	uxth	r3, r3
 80189ba:	1c59      	adds	r1, r3, #1
 80189bc:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80189c0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80189c4:	b29f      	uxth	r7, r3
 80189c6:	43db      	mvns	r3, r3
 80189c8:	b2db      	uxtb	r3, r3
 80189ca:	9309      	str	r3, [sp, #36]	; 0x24
 80189cc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80189ce:	1220      	asrs	r0, r4, #8
 80189d0:	fb13 f907 	smulbb	r9, r3, r7
 80189d4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80189d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80189da:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 80189de:	fb00 9003 	mla	r0, r0, r3, r9
 80189e2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80189e4:	10e1      	asrs	r1, r4, #3
 80189e6:	fb13 f907 	smulbb	r9, r3, r7
 80189ea:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80189ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80189f0:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 80189f4:	fb01 9103 	mla	r1, r1, r3, r9
 80189f8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80189fa:	00e4      	lsls	r4, r4, #3
 80189fc:	fb13 f707 	smulbb	r7, r3, r7
 8018a00:	b2e4      	uxtb	r4, r4
 8018a02:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018a04:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8018a08:	fb04 7403 	mla	r4, r4, r3, r7
 8018a0c:	b280      	uxth	r0, r0
 8018a0e:	b2a4      	uxth	r4, r4
 8018a10:	1c43      	adds	r3, r0, #1
 8018a12:	f104 0901 	add.w	r9, r4, #1
 8018a16:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8018a1a:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8018a1e:	b289      	uxth	r1, r1
 8018a20:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8018a24:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8018a28:	ea49 0000 	orr.w	r0, r9, r0
 8018a2c:	f101 0901 	add.w	r9, r1, #1
 8018a30:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8018a34:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018a38:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018a3c:	ea40 0009 	orr.w	r0, r0, r9
 8018a40:	f8ac 0000 	strh.w	r0, [ip]
 8018a44:	4446      	add	r6, r8
 8018a46:	b2b6      	uxth	r6, r6
 8018a48:	2e07      	cmp	r6, #7
 8018a4a:	bf81      	itttt	hi
 8018a4c:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 8018a4e:	785a      	ldrbhi	r2, [r3, #1]
 8018a50:	3301      	addhi	r3, #1
 8018a52:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8018a54:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018a56:	bf9a      	itte	ls
 8018a58:	fa42 f208 	asrls.w	r2, r2, r8
 8018a5c:	b2d2      	uxtbls	r2, r2
 8018a5e:	2600      	movhi	r6, #0
 8018a60:	449c      	add	ip, r3
 8018a62:	e792      	b.n	801898a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 8018a64:	441c      	add	r4, r3
 8018a66:	b224      	sxth	r4, r4
 8018a68:	e6d5      	b.n	8018816 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8018a6a:	f1ba 0f01 	cmp.w	sl, #1
 8018a6e:	f47f af0c 	bne.w	801888a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018a72:	f1bb 0f01 	cmp.w	fp, #1
 8018a76:	f47f af08 	bne.w	801888a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018a7a:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 8018b3c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 8018a7e:	f8db 0000 	ldr.w	r0, [fp]
 8018a82:	6803      	ldr	r3, [r0, #0]
 8018a84:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018a86:	4798      	blx	r3
 8018a88:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 8018a8c:	465a      	mov	r2, fp
 8018a8e:	d006      	beq.n	8018a9e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8018a90:	f1b8 0f04 	cmp.w	r8, #4
 8018a94:	d140      	bne.n	8018b18 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8018a96:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018a98:	3300      	adds	r3, #0
 8018a9a:	bf18      	it	ne
 8018a9c:	2301      	movne	r3, #1
 8018a9e:	0580      	lsls	r0, r0, #22
 8018aa0:	d56e      	bpl.n	8018b80 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8018aa2:	f1b8 0f08 	cmp.w	r8, #8
 8018aa6:	d16b      	bne.n	8018b80 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8018aa8:	2b00      	cmp	r3, #0
 8018aaa:	bf0c      	ite	eq
 8018aac:	f44f 7100 	moveq.w	r1, #512	; 0x200
 8018ab0:	f44f 7180 	movne.w	r1, #256	; 0x100
 8018ab4:	2d00      	cmp	r5, #0
 8018ab6:	f47f aee8 	bne.w	801888a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018aba:	2e00      	cmp	r6, #0
 8018abc:	f47f aee5 	bne.w	801888a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018ac0:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8018ac2:	19e3      	adds	r3, r4, r7
 8018ac4:	4283      	cmp	r3, r0
 8018ac6:	f73f aee0 	bgt.w	801888a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018aca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018acc:	980d      	ldr	r0, [sp, #52]	; 0x34
 8018ace:	444b      	add	r3, r9
 8018ad0:	4283      	cmp	r3, r0
 8018ad2:	f73f aeda 	bgt.w	801888a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018ad6:	6810      	ldr	r0, [r2, #0]
 8018ad8:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8018adc:	6804      	ldr	r4, [r0, #0]
 8018ade:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8018ae2:	b2bf      	uxth	r7, r7
 8018ae4:	f1b8 0f08 	cmp.w	r8, #8
 8018ae8:	f04f 0500 	mov.w	r5, #0
 8018aec:	bf18      	it	ne
 8018aee:	3701      	addne	r7, #1
 8018af0:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8018af4:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018af6:	9104      	str	r1, [sp, #16]
 8018af8:	bf18      	it	ne
 8018afa:	f027 0701 	bicne.w	r7, r7, #1
 8018afe:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8018b00:	bf18      	it	ne
 8018b02:	b2bf      	uxthne	r7, r7
 8018b04:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8018b08:	e9cd 7900 	strd	r7, r9, [sp]
 8018b0c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8018b0e:	6d64      	ldr	r4, [r4, #84]	; 0x54
 8018b10:	47a0      	blx	r4
 8018b12:	b019      	add	sp, #100	; 0x64
 8018b14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018b18:	2300      	movs	r3, #0
 8018b1a:	e7c0      	b.n	8018a9e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8018b1c:	2208      	movs	r2, #8
 8018b1e:	fb92 f3f8 	sdiv	r3, r2, r8
 8018b22:	1e5a      	subs	r2, r3, #1
 8018b24:	443a      	add	r2, r7
 8018b26:	fb92 f2f3 	sdiv	r2, r2, r3
 8018b2a:	fb12 f203 	smulbb	r2, r2, r3
 8018b2e:	b292      	uxth	r2, r2
 8018b30:	e6b0      	b.n	8018894 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 8018b32:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8018b34:	e6ec      	b.n	8018910 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 8018b36:	bf00      	nop
 8018b38:	200155a4 	.word	0x200155a4
 8018b3c:	200155ac 	.word	0x200155ac
 8018b40:	200155a6 	.word	0x200155a6
 8018b44:	00fff800 	.word	0x00fff800
 8018b48:	9810      	ldr	r0, [sp, #64]	; 0x40
 8018b4a:	e779      	b.n	8018a40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 8018b4c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018b4e:	b153      	cbz	r3, 8018b66 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 8018b50:	441e      	add	r6, r3
 8018b52:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018b54:	b2b6      	uxth	r6, r6
 8018b56:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 8018b5a:	f006 0607 	and.w	r6, r6, #7
 8018b5e:	781a      	ldrb	r2, [r3, #0]
 8018b60:	9328      	str	r3, [sp, #160]	; 0xa0
 8018b62:	4132      	asrs	r2, r6
 8018b64:	b2d2      	uxtb	r2, r2
 8018b66:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018b68:	445b      	add	r3, fp
 8018b6a:	930a      	str	r3, [sp, #40]	; 0x28
 8018b6c:	e706      	b.n	801897c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 8018b6e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018b70:	2b00      	cmp	r3, #0
 8018b72:	d1ce      	bne.n	8018b12 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018b74:	4b05      	ldr	r3, [pc, #20]	; (8018b8c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 8018b76:	6818      	ldr	r0, [r3, #0]
 8018b78:	6803      	ldr	r3, [r0, #0]
 8018b7a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018b7c:	4798      	blx	r3
 8018b7e:	e7c8      	b.n	8018b12 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018b80:	2b00      	cmp	r3, #0
 8018b82:	f43f ae82 	beq.w	801888a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018b86:	f44f 7180 	mov.w	r1, #256	; 0x100
 8018b8a:	e793      	b.n	8018ab4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8018b8c:	200155ac 	.word	0x200155ac

08018b90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8018b90:	b538      	push	{r3, r4, r5, lr}
 8018b92:	4c15      	ldr	r4, [pc, #84]	; (8018be8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8018b94:	7823      	ldrb	r3, [r4, #0]
 8018b96:	f3bf 8f5b 	dmb	ish
 8018b9a:	07da      	lsls	r2, r3, #31
 8018b9c:	4605      	mov	r5, r0
 8018b9e:	d40b      	bmi.n	8018bb8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8018ba0:	4620      	mov	r0, r4
 8018ba2:	f007 fd73 	bl	802068c <__cxa_guard_acquire>
 8018ba6:	b138      	cbz	r0, 8018bb8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8018ba8:	4620      	mov	r0, r4
 8018baa:	f007 fd7b 	bl	80206a4 <__cxa_guard_release>
 8018bae:	4a0f      	ldr	r2, [pc, #60]	; (8018bec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8018bb0:	490f      	ldr	r1, [pc, #60]	; (8018bf0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8018bb2:	4810      	ldr	r0, [pc, #64]	; (8018bf4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8018bb4:	f007 fd63 	bl	802067e <__aeabi_atexit>
 8018bb8:	4c0f      	ldr	r4, [pc, #60]	; (8018bf8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8018bba:	7823      	ldrb	r3, [r4, #0]
 8018bbc:	f3bf 8f5b 	dmb	ish
 8018bc0:	07db      	lsls	r3, r3, #31
 8018bc2:	d40b      	bmi.n	8018bdc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8018bc4:	4620      	mov	r0, r4
 8018bc6:	f007 fd61 	bl	802068c <__cxa_guard_acquire>
 8018bca:	b138      	cbz	r0, 8018bdc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8018bcc:	4620      	mov	r0, r4
 8018bce:	f007 fd69 	bl	80206a4 <__cxa_guard_release>
 8018bd2:	4a06      	ldr	r2, [pc, #24]	; (8018bec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8018bd4:	4909      	ldr	r1, [pc, #36]	; (8018bfc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8018bd6:	480a      	ldr	r0, [pc, #40]	; (8018c00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8018bd8:	f007 fd51 	bl	802067e <__aeabi_atexit>
 8018bdc:	4b05      	ldr	r3, [pc, #20]	; (8018bf4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8018bde:	612b      	str	r3, [r5, #16]
 8018be0:	4b07      	ldr	r3, [pc, #28]	; (8018c00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8018be2:	616b      	str	r3, [r5, #20]
 8018be4:	bd38      	pop	{r3, r4, r5, pc}
 8018be6:	bf00      	nop
 8018be8:	20015680 	.word	0x20015680
 8018bec:	20000000 	.word	0x20000000
 8018bf0:	08016da1 	.word	0x08016da1
 8018bf4:	200000d0 	.word	0x200000d0
 8018bf8:	20015684 	.word	0x20015684
 8018bfc:	08016d9f 	.word	0x08016d9f
 8018c00:	200000d4 	.word	0x200000d4

08018c04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8018c04:	b538      	push	{r3, r4, r5, lr}
 8018c06:	4c15      	ldr	r4, [pc, #84]	; (8018c5c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8018c08:	7823      	ldrb	r3, [r4, #0]
 8018c0a:	f3bf 8f5b 	dmb	ish
 8018c0e:	07da      	lsls	r2, r3, #31
 8018c10:	4605      	mov	r5, r0
 8018c12:	d40b      	bmi.n	8018c2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8018c14:	4620      	mov	r0, r4
 8018c16:	f007 fd39 	bl	802068c <__cxa_guard_acquire>
 8018c1a:	b138      	cbz	r0, 8018c2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8018c1c:	4620      	mov	r0, r4
 8018c1e:	f007 fd41 	bl	80206a4 <__cxa_guard_release>
 8018c22:	4a0f      	ldr	r2, [pc, #60]	; (8018c60 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8018c24:	490f      	ldr	r1, [pc, #60]	; (8018c64 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8018c26:	4810      	ldr	r0, [pc, #64]	; (8018c68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8018c28:	f007 fd29 	bl	802067e <__aeabi_atexit>
 8018c2c:	4c0f      	ldr	r4, [pc, #60]	; (8018c6c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8018c2e:	7823      	ldrb	r3, [r4, #0]
 8018c30:	f3bf 8f5b 	dmb	ish
 8018c34:	07db      	lsls	r3, r3, #31
 8018c36:	d40b      	bmi.n	8018c50 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8018c38:	4620      	mov	r0, r4
 8018c3a:	f007 fd27 	bl	802068c <__cxa_guard_acquire>
 8018c3e:	b138      	cbz	r0, 8018c50 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8018c40:	4620      	mov	r0, r4
 8018c42:	f007 fd2f 	bl	80206a4 <__cxa_guard_release>
 8018c46:	4a06      	ldr	r2, [pc, #24]	; (8018c60 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8018c48:	4909      	ldr	r1, [pc, #36]	; (8018c70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8018c4a:	480a      	ldr	r0, [pc, #40]	; (8018c74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8018c4c:	f007 fd17 	bl	802067e <__aeabi_atexit>
 8018c50:	4b05      	ldr	r3, [pc, #20]	; (8018c68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8018c52:	60ab      	str	r3, [r5, #8]
 8018c54:	4b07      	ldr	r3, [pc, #28]	; (8018c74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8018c56:	60eb      	str	r3, [r5, #12]
 8018c58:	bd38      	pop	{r3, r4, r5, pc}
 8018c5a:	bf00      	nop
 8018c5c:	20015658 	.word	0x20015658
 8018c60:	20000000 	.word	0x20000000
 8018c64:	08016da5 	.word	0x08016da5
 8018c68:	200000a8 	.word	0x200000a8
 8018c6c:	2001565c 	.word	0x2001565c
 8018c70:	08016da3 	.word	0x08016da3
 8018c74:	200000ac 	.word	0x200000ac

08018c78 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8018c78:	b510      	push	{r4, lr}
 8018c7a:	4604      	mov	r4, r0
 8018c7c:	f7ff ff88 	bl	8018b90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8018c80:	4620      	mov	r0, r4
 8018c82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018c86:	f7ff bfbd 	b.w	8018c04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08018c8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8018c8c:	b538      	push	{r3, r4, r5, lr}
 8018c8e:	4c15      	ldr	r4, [pc, #84]	; (8018ce4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8018c90:	7823      	ldrb	r3, [r4, #0]
 8018c92:	f3bf 8f5b 	dmb	ish
 8018c96:	07da      	lsls	r2, r3, #31
 8018c98:	4605      	mov	r5, r0
 8018c9a:	d40b      	bmi.n	8018cb4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8018c9c:	4620      	mov	r0, r4
 8018c9e:	f007 fcf5 	bl	802068c <__cxa_guard_acquire>
 8018ca2:	b138      	cbz	r0, 8018cb4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8018ca4:	4620      	mov	r0, r4
 8018ca6:	f007 fcfd 	bl	80206a4 <__cxa_guard_release>
 8018caa:	4a0f      	ldr	r2, [pc, #60]	; (8018ce8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8018cac:	490f      	ldr	r1, [pc, #60]	; (8018cec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8018cae:	4810      	ldr	r0, [pc, #64]	; (8018cf0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8018cb0:	f007 fce5 	bl	802067e <__aeabi_atexit>
 8018cb4:	4c0f      	ldr	r4, [pc, #60]	; (8018cf4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8018cb6:	7823      	ldrb	r3, [r4, #0]
 8018cb8:	f3bf 8f5b 	dmb	ish
 8018cbc:	07db      	lsls	r3, r3, #31
 8018cbe:	d40b      	bmi.n	8018cd8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8018cc0:	4620      	mov	r0, r4
 8018cc2:	f007 fce3 	bl	802068c <__cxa_guard_acquire>
 8018cc6:	b138      	cbz	r0, 8018cd8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8018cc8:	4620      	mov	r0, r4
 8018cca:	f007 fceb 	bl	80206a4 <__cxa_guard_release>
 8018cce:	4a06      	ldr	r2, [pc, #24]	; (8018ce8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8018cd0:	4909      	ldr	r1, [pc, #36]	; (8018cf8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8018cd2:	480a      	ldr	r0, [pc, #40]	; (8018cfc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8018cd4:	f007 fcd3 	bl	802067e <__aeabi_atexit>
 8018cd8:	4b05      	ldr	r3, [pc, #20]	; (8018cf0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8018cda:	622b      	str	r3, [r5, #32]
 8018cdc:	4b07      	ldr	r3, [pc, #28]	; (8018cfc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8018cde:	626b      	str	r3, [r5, #36]	; 0x24
 8018ce0:	bd38      	pop	{r3, r4, r5, pc}
 8018ce2:	bf00      	nop
 8018ce4:	20015688 	.word	0x20015688
 8018ce8:	20000000 	.word	0x20000000
 8018cec:	08016d99 	.word	0x08016d99
 8018cf0:	200000d8 	.word	0x200000d8
 8018cf4:	2001568c 	.word	0x2001568c
 8018cf8:	08016d97 	.word	0x08016d97
 8018cfc:	200000dc 	.word	0x200000dc

08018d00 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8018d00:	b538      	push	{r3, r4, r5, lr}
 8018d02:	4c15      	ldr	r4, [pc, #84]	; (8018d58 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8018d04:	7823      	ldrb	r3, [r4, #0]
 8018d06:	f3bf 8f5b 	dmb	ish
 8018d0a:	07da      	lsls	r2, r3, #31
 8018d0c:	4605      	mov	r5, r0
 8018d0e:	d40b      	bmi.n	8018d28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8018d10:	4620      	mov	r0, r4
 8018d12:	f007 fcbb 	bl	802068c <__cxa_guard_acquire>
 8018d16:	b138      	cbz	r0, 8018d28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8018d18:	4620      	mov	r0, r4
 8018d1a:	f007 fcc3 	bl	80206a4 <__cxa_guard_release>
 8018d1e:	4a0f      	ldr	r2, [pc, #60]	; (8018d5c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8018d20:	490f      	ldr	r1, [pc, #60]	; (8018d60 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8018d22:	4810      	ldr	r0, [pc, #64]	; (8018d64 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8018d24:	f007 fcab 	bl	802067e <__aeabi_atexit>
 8018d28:	4c0f      	ldr	r4, [pc, #60]	; (8018d68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8018d2a:	7823      	ldrb	r3, [r4, #0]
 8018d2c:	f3bf 8f5b 	dmb	ish
 8018d30:	07db      	lsls	r3, r3, #31
 8018d32:	d40b      	bmi.n	8018d4c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8018d34:	4620      	mov	r0, r4
 8018d36:	f007 fca9 	bl	802068c <__cxa_guard_acquire>
 8018d3a:	b138      	cbz	r0, 8018d4c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8018d3c:	4620      	mov	r0, r4
 8018d3e:	f007 fcb1 	bl	80206a4 <__cxa_guard_release>
 8018d42:	4a06      	ldr	r2, [pc, #24]	; (8018d5c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8018d44:	4909      	ldr	r1, [pc, #36]	; (8018d6c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8018d46:	480a      	ldr	r0, [pc, #40]	; (8018d70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8018d48:	f007 fc99 	bl	802067e <__aeabi_atexit>
 8018d4c:	4b05      	ldr	r3, [pc, #20]	; (8018d64 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8018d4e:	61ab      	str	r3, [r5, #24]
 8018d50:	4b07      	ldr	r3, [pc, #28]	; (8018d70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8018d52:	61eb      	str	r3, [r5, #28]
 8018d54:	bd38      	pop	{r3, r4, r5, pc}
 8018d56:	bf00      	nop
 8018d58:	20015660 	.word	0x20015660
 8018d5c:	20000000 	.word	0x20000000
 8018d60:	08016d9d 	.word	0x08016d9d
 8018d64:	200000b0 	.word	0x200000b0
 8018d68:	20015664 	.word	0x20015664
 8018d6c:	08016d9b 	.word	0x08016d9b
 8018d70:	200000b4 	.word	0x200000b4

08018d74 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8018d74:	b510      	push	{r4, lr}
 8018d76:	4604      	mov	r4, r0
 8018d78:	f7ff ff88 	bl	8018c8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8018d7c:	4620      	mov	r0, r4
 8018d7e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018d82:	f7ff bfbd 	b.w	8018d00 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08018d88 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8018d88:	b538      	push	{r3, r4, r5, lr}
 8018d8a:	4c15      	ldr	r4, [pc, #84]	; (8018de0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8018d8c:	7823      	ldrb	r3, [r4, #0]
 8018d8e:	f3bf 8f5b 	dmb	ish
 8018d92:	07da      	lsls	r2, r3, #31
 8018d94:	4605      	mov	r5, r0
 8018d96:	d40b      	bmi.n	8018db0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8018d98:	4620      	mov	r0, r4
 8018d9a:	f007 fc77 	bl	802068c <__cxa_guard_acquire>
 8018d9e:	b138      	cbz	r0, 8018db0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8018da0:	4620      	mov	r0, r4
 8018da2:	f007 fc7f 	bl	80206a4 <__cxa_guard_release>
 8018da6:	4a0f      	ldr	r2, [pc, #60]	; (8018de4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8018da8:	490f      	ldr	r1, [pc, #60]	; (8018de8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8018daa:	4810      	ldr	r0, [pc, #64]	; (8018dec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8018dac:	f007 fc67 	bl	802067e <__aeabi_atexit>
 8018db0:	4c0f      	ldr	r4, [pc, #60]	; (8018df0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8018db2:	7823      	ldrb	r3, [r4, #0]
 8018db4:	f3bf 8f5b 	dmb	ish
 8018db8:	07db      	lsls	r3, r3, #31
 8018dba:	d40b      	bmi.n	8018dd4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8018dbc:	4620      	mov	r0, r4
 8018dbe:	f007 fc65 	bl	802068c <__cxa_guard_acquire>
 8018dc2:	b138      	cbz	r0, 8018dd4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8018dc4:	4620      	mov	r0, r4
 8018dc6:	f007 fc6d 	bl	80206a4 <__cxa_guard_release>
 8018dca:	4a06      	ldr	r2, [pc, #24]	; (8018de4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8018dcc:	4909      	ldr	r1, [pc, #36]	; (8018df4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8018dce:	480a      	ldr	r0, [pc, #40]	; (8018df8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8018dd0:	f007 fc55 	bl	802067e <__aeabi_atexit>
 8018dd4:	4b05      	ldr	r3, [pc, #20]	; (8018dec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8018dd6:	632b      	str	r3, [r5, #48]	; 0x30
 8018dd8:	4b07      	ldr	r3, [pc, #28]	; (8018df8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8018dda:	636b      	str	r3, [r5, #52]	; 0x34
 8018ddc:	bd38      	pop	{r3, r4, r5, pc}
 8018dde:	bf00      	nop
 8018de0:	20015698 	.word	0x20015698
 8018de4:	20000000 	.word	0x20000000
 8018de8:	08016d91 	.word	0x08016d91
 8018dec:	200000e8 	.word	0x200000e8
 8018df0:	2001569c 	.word	0x2001569c
 8018df4:	08016d8f 	.word	0x08016d8f
 8018df8:	200000ec 	.word	0x200000ec

08018dfc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8018dfc:	b538      	push	{r3, r4, r5, lr}
 8018dfe:	4c15      	ldr	r4, [pc, #84]	; (8018e54 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8018e00:	7823      	ldrb	r3, [r4, #0]
 8018e02:	f3bf 8f5b 	dmb	ish
 8018e06:	07da      	lsls	r2, r3, #31
 8018e08:	4605      	mov	r5, r0
 8018e0a:	d40b      	bmi.n	8018e24 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8018e0c:	4620      	mov	r0, r4
 8018e0e:	f007 fc3d 	bl	802068c <__cxa_guard_acquire>
 8018e12:	b138      	cbz	r0, 8018e24 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8018e14:	4620      	mov	r0, r4
 8018e16:	f007 fc45 	bl	80206a4 <__cxa_guard_release>
 8018e1a:	4a0f      	ldr	r2, [pc, #60]	; (8018e58 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8018e1c:	490f      	ldr	r1, [pc, #60]	; (8018e5c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8018e1e:	4810      	ldr	r0, [pc, #64]	; (8018e60 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8018e20:	f007 fc2d 	bl	802067e <__aeabi_atexit>
 8018e24:	4c0f      	ldr	r4, [pc, #60]	; (8018e64 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8018e26:	7823      	ldrb	r3, [r4, #0]
 8018e28:	f3bf 8f5b 	dmb	ish
 8018e2c:	07db      	lsls	r3, r3, #31
 8018e2e:	d40b      	bmi.n	8018e48 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8018e30:	4620      	mov	r0, r4
 8018e32:	f007 fc2b 	bl	802068c <__cxa_guard_acquire>
 8018e36:	b138      	cbz	r0, 8018e48 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8018e38:	4620      	mov	r0, r4
 8018e3a:	f007 fc33 	bl	80206a4 <__cxa_guard_release>
 8018e3e:	4a06      	ldr	r2, [pc, #24]	; (8018e58 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8018e40:	4909      	ldr	r1, [pc, #36]	; (8018e68 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8018e42:	480a      	ldr	r0, [pc, #40]	; (8018e6c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8018e44:	f007 fc1b 	bl	802067e <__aeabi_atexit>
 8018e48:	4b05      	ldr	r3, [pc, #20]	; (8018e60 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8018e4a:	62ab      	str	r3, [r5, #40]	; 0x28
 8018e4c:	4b07      	ldr	r3, [pc, #28]	; (8018e6c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8018e4e:	62eb      	str	r3, [r5, #44]	; 0x2c
 8018e50:	bd38      	pop	{r3, r4, r5, pc}
 8018e52:	bf00      	nop
 8018e54:	20015668 	.word	0x20015668
 8018e58:	20000000 	.word	0x20000000
 8018e5c:	08016d95 	.word	0x08016d95
 8018e60:	200000b8 	.word	0x200000b8
 8018e64:	2001566c 	.word	0x2001566c
 8018e68:	08016d93 	.word	0x08016d93
 8018e6c:	200000bc 	.word	0x200000bc

08018e70 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8018e70:	b510      	push	{r4, lr}
 8018e72:	4604      	mov	r4, r0
 8018e74:	f7ff ff88 	bl	8018d88 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8018e78:	4620      	mov	r0, r4
 8018e7a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018e7e:	f7ff bfbd 	b.w	8018dfc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08018e84 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8018e84:	b538      	push	{r3, r4, r5, lr}
 8018e86:	4c15      	ldr	r4, [pc, #84]	; (8018edc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8018e88:	7823      	ldrb	r3, [r4, #0]
 8018e8a:	f3bf 8f5b 	dmb	ish
 8018e8e:	07da      	lsls	r2, r3, #31
 8018e90:	4605      	mov	r5, r0
 8018e92:	d40b      	bmi.n	8018eac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8018e94:	4620      	mov	r0, r4
 8018e96:	f007 fbf9 	bl	802068c <__cxa_guard_acquire>
 8018e9a:	b138      	cbz	r0, 8018eac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8018e9c:	4620      	mov	r0, r4
 8018e9e:	f007 fc01 	bl	80206a4 <__cxa_guard_release>
 8018ea2:	4a0f      	ldr	r2, [pc, #60]	; (8018ee0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8018ea4:	490f      	ldr	r1, [pc, #60]	; (8018ee4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8018ea6:	4810      	ldr	r0, [pc, #64]	; (8018ee8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8018ea8:	f007 fbe9 	bl	802067e <__aeabi_atexit>
 8018eac:	4c0f      	ldr	r4, [pc, #60]	; (8018eec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8018eae:	7823      	ldrb	r3, [r4, #0]
 8018eb0:	f3bf 8f5b 	dmb	ish
 8018eb4:	07db      	lsls	r3, r3, #31
 8018eb6:	d40b      	bmi.n	8018ed0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8018eb8:	4620      	mov	r0, r4
 8018eba:	f007 fbe7 	bl	802068c <__cxa_guard_acquire>
 8018ebe:	b138      	cbz	r0, 8018ed0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8018ec0:	4620      	mov	r0, r4
 8018ec2:	f007 fbef 	bl	80206a4 <__cxa_guard_release>
 8018ec6:	4a06      	ldr	r2, [pc, #24]	; (8018ee0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8018ec8:	4909      	ldr	r1, [pc, #36]	; (8018ef0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8018eca:	480a      	ldr	r0, [pc, #40]	; (8018ef4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8018ecc:	f007 fbd7 	bl	802067e <__aeabi_atexit>
 8018ed0:	4b05      	ldr	r3, [pc, #20]	; (8018ee8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8018ed2:	652b      	str	r3, [r5, #80]	; 0x50
 8018ed4:	4b07      	ldr	r3, [pc, #28]	; (8018ef4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8018ed6:	656b      	str	r3, [r5, #84]	; 0x54
 8018ed8:	bd38      	pop	{r3, r4, r5, pc}
 8018eda:	bf00      	nop
 8018edc:	200156a0 	.word	0x200156a0
 8018ee0:	20000000 	.word	0x20000000
 8018ee4:	08016d81 	.word	0x08016d81
 8018ee8:	200000f0 	.word	0x200000f0
 8018eec:	200156a4 	.word	0x200156a4
 8018ef0:	08016d7f 	.word	0x08016d7f
 8018ef4:	200000f4 	.word	0x200000f4

08018ef8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8018ef8:	b538      	push	{r3, r4, r5, lr}
 8018efa:	4c15      	ldr	r4, [pc, #84]	; (8018f50 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8018efc:	7823      	ldrb	r3, [r4, #0]
 8018efe:	f3bf 8f5b 	dmb	ish
 8018f02:	07da      	lsls	r2, r3, #31
 8018f04:	4605      	mov	r5, r0
 8018f06:	d40b      	bmi.n	8018f20 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8018f08:	4620      	mov	r0, r4
 8018f0a:	f007 fbbf 	bl	802068c <__cxa_guard_acquire>
 8018f0e:	b138      	cbz	r0, 8018f20 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8018f10:	4620      	mov	r0, r4
 8018f12:	f007 fbc7 	bl	80206a4 <__cxa_guard_release>
 8018f16:	4a0f      	ldr	r2, [pc, #60]	; (8018f54 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8018f18:	490f      	ldr	r1, [pc, #60]	; (8018f58 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8018f1a:	4810      	ldr	r0, [pc, #64]	; (8018f5c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8018f1c:	f007 fbaf 	bl	802067e <__aeabi_atexit>
 8018f20:	4c0f      	ldr	r4, [pc, #60]	; (8018f60 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8018f22:	7823      	ldrb	r3, [r4, #0]
 8018f24:	f3bf 8f5b 	dmb	ish
 8018f28:	07db      	lsls	r3, r3, #31
 8018f2a:	d40b      	bmi.n	8018f44 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8018f2c:	4620      	mov	r0, r4
 8018f2e:	f007 fbad 	bl	802068c <__cxa_guard_acquire>
 8018f32:	b138      	cbz	r0, 8018f44 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8018f34:	4620      	mov	r0, r4
 8018f36:	f007 fbb5 	bl	80206a4 <__cxa_guard_release>
 8018f3a:	4a06      	ldr	r2, [pc, #24]	; (8018f54 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8018f3c:	4909      	ldr	r1, [pc, #36]	; (8018f64 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8018f3e:	480a      	ldr	r0, [pc, #40]	; (8018f68 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8018f40:	f007 fb9d 	bl	802067e <__aeabi_atexit>
 8018f44:	4b05      	ldr	r3, [pc, #20]	; (8018f5c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8018f46:	64ab      	str	r3, [r5, #72]	; 0x48
 8018f48:	4b07      	ldr	r3, [pc, #28]	; (8018f68 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8018f4a:	64eb      	str	r3, [r5, #76]	; 0x4c
 8018f4c:	bd38      	pop	{r3, r4, r5, pc}
 8018f4e:	bf00      	nop
 8018f50:	200156a8 	.word	0x200156a8
 8018f54:	20000000 	.word	0x20000000
 8018f58:	08016d85 	.word	0x08016d85
 8018f5c:	200000f8 	.word	0x200000f8
 8018f60:	200156ac 	.word	0x200156ac
 8018f64:	08016d83 	.word	0x08016d83
 8018f68:	200000fc 	.word	0x200000fc

08018f6c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8018f6c:	b538      	push	{r3, r4, r5, lr}
 8018f6e:	4c15      	ldr	r4, [pc, #84]	; (8018fc4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8018f70:	7823      	ldrb	r3, [r4, #0]
 8018f72:	f3bf 8f5b 	dmb	ish
 8018f76:	07da      	lsls	r2, r3, #31
 8018f78:	4605      	mov	r5, r0
 8018f7a:	d40b      	bmi.n	8018f94 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8018f7c:	4620      	mov	r0, r4
 8018f7e:	f007 fb85 	bl	802068c <__cxa_guard_acquire>
 8018f82:	b138      	cbz	r0, 8018f94 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8018f84:	4620      	mov	r0, r4
 8018f86:	f007 fb8d 	bl	80206a4 <__cxa_guard_release>
 8018f8a:	4a0f      	ldr	r2, [pc, #60]	; (8018fc8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8018f8c:	490f      	ldr	r1, [pc, #60]	; (8018fcc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8018f8e:	4810      	ldr	r0, [pc, #64]	; (8018fd0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8018f90:	f007 fb75 	bl	802067e <__aeabi_atexit>
 8018f94:	4c0f      	ldr	r4, [pc, #60]	; (8018fd4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8018f96:	7823      	ldrb	r3, [r4, #0]
 8018f98:	f3bf 8f5b 	dmb	ish
 8018f9c:	07db      	lsls	r3, r3, #31
 8018f9e:	d40b      	bmi.n	8018fb8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8018fa0:	4620      	mov	r0, r4
 8018fa2:	f007 fb73 	bl	802068c <__cxa_guard_acquire>
 8018fa6:	b138      	cbz	r0, 8018fb8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8018fa8:	4620      	mov	r0, r4
 8018faa:	f007 fb7b 	bl	80206a4 <__cxa_guard_release>
 8018fae:	4a06      	ldr	r2, [pc, #24]	; (8018fc8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8018fb0:	4909      	ldr	r1, [pc, #36]	; (8018fd8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8018fb2:	480a      	ldr	r0, [pc, #40]	; (8018fdc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8018fb4:	f007 fb63 	bl	802067e <__aeabi_atexit>
 8018fb8:	4b05      	ldr	r3, [pc, #20]	; (8018fd0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8018fba:	642b      	str	r3, [r5, #64]	; 0x40
 8018fbc:	4b07      	ldr	r3, [pc, #28]	; (8018fdc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8018fbe:	646b      	str	r3, [r5, #68]	; 0x44
 8018fc0:	bd38      	pop	{r3, r4, r5, pc}
 8018fc2:	bf00      	nop
 8018fc4:	20015670 	.word	0x20015670
 8018fc8:	20000000 	.word	0x20000000
 8018fcc:	08016d89 	.word	0x08016d89
 8018fd0:	200000c0 	.word	0x200000c0
 8018fd4:	20015674 	.word	0x20015674
 8018fd8:	08016d87 	.word	0x08016d87
 8018fdc:	200000c4 	.word	0x200000c4

08018fe0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8018fe0:	b538      	push	{r3, r4, r5, lr}
 8018fe2:	4c15      	ldr	r4, [pc, #84]	; (8019038 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8018fe4:	7823      	ldrb	r3, [r4, #0]
 8018fe6:	f3bf 8f5b 	dmb	ish
 8018fea:	07da      	lsls	r2, r3, #31
 8018fec:	4605      	mov	r5, r0
 8018fee:	d40b      	bmi.n	8019008 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8018ff0:	4620      	mov	r0, r4
 8018ff2:	f007 fb4b 	bl	802068c <__cxa_guard_acquire>
 8018ff6:	b138      	cbz	r0, 8019008 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8018ff8:	4620      	mov	r0, r4
 8018ffa:	f007 fb53 	bl	80206a4 <__cxa_guard_release>
 8018ffe:	4a0f      	ldr	r2, [pc, #60]	; (801903c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8019000:	490f      	ldr	r1, [pc, #60]	; (8019040 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8019002:	4810      	ldr	r0, [pc, #64]	; (8019044 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8019004:	f007 fb3b 	bl	802067e <__aeabi_atexit>
 8019008:	4c0f      	ldr	r4, [pc, #60]	; (8019048 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801900a:	7823      	ldrb	r3, [r4, #0]
 801900c:	f3bf 8f5b 	dmb	ish
 8019010:	07db      	lsls	r3, r3, #31
 8019012:	d40b      	bmi.n	801902c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8019014:	4620      	mov	r0, r4
 8019016:	f007 fb39 	bl	802068c <__cxa_guard_acquire>
 801901a:	b138      	cbz	r0, 801902c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801901c:	4620      	mov	r0, r4
 801901e:	f007 fb41 	bl	80206a4 <__cxa_guard_release>
 8019022:	4a06      	ldr	r2, [pc, #24]	; (801903c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8019024:	4909      	ldr	r1, [pc, #36]	; (801904c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8019026:	480a      	ldr	r0, [pc, #40]	; (8019050 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8019028:	f007 fb29 	bl	802067e <__aeabi_atexit>
 801902c:	4b05      	ldr	r3, [pc, #20]	; (8019044 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801902e:	63ab      	str	r3, [r5, #56]	; 0x38
 8019030:	4b07      	ldr	r3, [pc, #28]	; (8019050 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8019032:	63eb      	str	r3, [r5, #60]	; 0x3c
 8019034:	bd38      	pop	{r3, r4, r5, pc}
 8019036:	bf00      	nop
 8019038:	20015690 	.word	0x20015690
 801903c:	20000000 	.word	0x20000000
 8019040:	08016d8d 	.word	0x08016d8d
 8019044:	200000e0 	.word	0x200000e0
 8019048:	20015694 	.word	0x20015694
 801904c:	08016d8b 	.word	0x08016d8b
 8019050:	200000e4 	.word	0x200000e4

08019054 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8019054:	b510      	push	{r4, lr}
 8019056:	4604      	mov	r4, r0
 8019058:	f7ff ff14 	bl	8018e84 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801905c:	4620      	mov	r0, r4
 801905e:	f7ff ff85 	bl	8018f6c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8019062:	4620      	mov	r0, r4
 8019064:	f7ff ff48 	bl	8018ef8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8019068:	4620      	mov	r0, r4
 801906a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801906e:	f7ff bfb7 	b.w	8018fe0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08019074 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8019074:	b538      	push	{r3, r4, r5, lr}
 8019076:	4c15      	ldr	r4, [pc, #84]	; (80190cc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8019078:	7823      	ldrb	r3, [r4, #0]
 801907a:	f3bf 8f5b 	dmb	ish
 801907e:	07da      	lsls	r2, r3, #31
 8019080:	4605      	mov	r5, r0
 8019082:	d40b      	bmi.n	801909c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8019084:	4620      	mov	r0, r4
 8019086:	f007 fb01 	bl	802068c <__cxa_guard_acquire>
 801908a:	b138      	cbz	r0, 801909c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801908c:	4620      	mov	r0, r4
 801908e:	f007 fb09 	bl	80206a4 <__cxa_guard_release>
 8019092:	4a0f      	ldr	r2, [pc, #60]	; (80190d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8019094:	490f      	ldr	r1, [pc, #60]	; (80190d4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8019096:	4810      	ldr	r0, [pc, #64]	; (80190d8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8019098:	f007 faf1 	bl	802067e <__aeabi_atexit>
 801909c:	4c0f      	ldr	r4, [pc, #60]	; (80190dc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801909e:	7823      	ldrb	r3, [r4, #0]
 80190a0:	f3bf 8f5b 	dmb	ish
 80190a4:	07db      	lsls	r3, r3, #31
 80190a6:	d40b      	bmi.n	80190c0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80190a8:	4620      	mov	r0, r4
 80190aa:	f007 faef 	bl	802068c <__cxa_guard_acquire>
 80190ae:	b138      	cbz	r0, 80190c0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80190b0:	4620      	mov	r0, r4
 80190b2:	f007 faf7 	bl	80206a4 <__cxa_guard_release>
 80190b6:	4a06      	ldr	r2, [pc, #24]	; (80190d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80190b8:	4909      	ldr	r1, [pc, #36]	; (80190e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 80190ba:	480a      	ldr	r0, [pc, #40]	; (80190e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80190bc:	f007 fadf 	bl	802067e <__aeabi_atexit>
 80190c0:	4b05      	ldr	r3, [pc, #20]	; (80190d8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80190c2:	662b      	str	r3, [r5, #96]	; 0x60
 80190c4:	4b07      	ldr	r3, [pc, #28]	; (80190e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80190c6:	666b      	str	r3, [r5, #100]	; 0x64
 80190c8:	bd38      	pop	{r3, r4, r5, pc}
 80190ca:	bf00      	nop
 80190cc:	20015678 	.word	0x20015678
 80190d0:	20000000 	.word	0x20000000
 80190d4:	08016d79 	.word	0x08016d79
 80190d8:	200000c8 	.word	0x200000c8
 80190dc:	2001567c 	.word	0x2001567c
 80190e0:	08016d77 	.word	0x08016d77
 80190e4:	200000cc 	.word	0x200000cc

080190e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 80190e8:	b538      	push	{r3, r4, r5, lr}
 80190ea:	4c15      	ldr	r4, [pc, #84]	; (8019140 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 80190ec:	7823      	ldrb	r3, [r4, #0]
 80190ee:	f3bf 8f5b 	dmb	ish
 80190f2:	07da      	lsls	r2, r3, #31
 80190f4:	4605      	mov	r5, r0
 80190f6:	d40b      	bmi.n	8019110 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80190f8:	4620      	mov	r0, r4
 80190fa:	f007 fac7 	bl	802068c <__cxa_guard_acquire>
 80190fe:	b138      	cbz	r0, 8019110 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8019100:	4620      	mov	r0, r4
 8019102:	f007 facf 	bl	80206a4 <__cxa_guard_release>
 8019106:	4a0f      	ldr	r2, [pc, #60]	; (8019144 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8019108:	490f      	ldr	r1, [pc, #60]	; (8019148 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801910a:	4810      	ldr	r0, [pc, #64]	; (801914c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801910c:	f007 fab7 	bl	802067e <__aeabi_atexit>
 8019110:	4c0f      	ldr	r4, [pc, #60]	; (8019150 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8019112:	7823      	ldrb	r3, [r4, #0]
 8019114:	f3bf 8f5b 	dmb	ish
 8019118:	07db      	lsls	r3, r3, #31
 801911a:	d40b      	bmi.n	8019134 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801911c:	4620      	mov	r0, r4
 801911e:	f007 fab5 	bl	802068c <__cxa_guard_acquire>
 8019122:	b138      	cbz	r0, 8019134 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8019124:	4620      	mov	r0, r4
 8019126:	f007 fabd 	bl	80206a4 <__cxa_guard_release>
 801912a:	4a06      	ldr	r2, [pc, #24]	; (8019144 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801912c:	4909      	ldr	r1, [pc, #36]	; (8019154 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801912e:	480a      	ldr	r0, [pc, #40]	; (8019158 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8019130:	f007 faa5 	bl	802067e <__aeabi_atexit>
 8019134:	4b05      	ldr	r3, [pc, #20]	; (801914c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8019136:	65ab      	str	r3, [r5, #88]	; 0x58
 8019138:	4b07      	ldr	r3, [pc, #28]	; (8019158 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801913a:	65eb      	str	r3, [r5, #92]	; 0x5c
 801913c:	bd38      	pop	{r3, r4, r5, pc}
 801913e:	bf00      	nop
 8019140:	20015650 	.word	0x20015650
 8019144:	20000000 	.word	0x20000000
 8019148:	08016d7d 	.word	0x08016d7d
 801914c:	200000a0 	.word	0x200000a0
 8019150:	20015654 	.word	0x20015654
 8019154:	08016d7b 	.word	0x08016d7b
 8019158:	200000a4 	.word	0x200000a4

0801915c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801915c:	b510      	push	{r4, lr}
 801915e:	4604      	mov	r4, r0
 8019160:	f7ff ff88 	bl	8019074 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8019164:	4620      	mov	r0, r4
 8019166:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801916a:	f7ff bfbd 	b.w	80190e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08019170 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8019170:	b538      	push	{r3, r4, r5, lr}
 8019172:	4c15      	ldr	r4, [pc, #84]	; (80191c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8019174:	7823      	ldrb	r3, [r4, #0]
 8019176:	f3bf 8f5b 	dmb	ish
 801917a:	07da      	lsls	r2, r3, #31
 801917c:	4605      	mov	r5, r0
 801917e:	d40b      	bmi.n	8019198 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8019180:	4620      	mov	r0, r4
 8019182:	f007 fa83 	bl	802068c <__cxa_guard_acquire>
 8019186:	b138      	cbz	r0, 8019198 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8019188:	4620      	mov	r0, r4
 801918a:	f007 fa8b 	bl	80206a4 <__cxa_guard_release>
 801918e:	4a0f      	ldr	r2, [pc, #60]	; (80191cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8019190:	490f      	ldr	r1, [pc, #60]	; (80191d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8019192:	4810      	ldr	r0, [pc, #64]	; (80191d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8019194:	f007 fa73 	bl	802067e <__aeabi_atexit>
 8019198:	4c0f      	ldr	r4, [pc, #60]	; (80191d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801919a:	7823      	ldrb	r3, [r4, #0]
 801919c:	f3bf 8f5b 	dmb	ish
 80191a0:	07db      	lsls	r3, r3, #31
 80191a2:	d40b      	bmi.n	80191bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80191a4:	4620      	mov	r0, r4
 80191a6:	f007 fa71 	bl	802068c <__cxa_guard_acquire>
 80191aa:	b138      	cbz	r0, 80191bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80191ac:	4620      	mov	r0, r4
 80191ae:	f007 fa79 	bl	80206a4 <__cxa_guard_release>
 80191b2:	4a06      	ldr	r2, [pc, #24]	; (80191cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80191b4:	4909      	ldr	r1, [pc, #36]	; (80191dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 80191b6:	480a      	ldr	r0, [pc, #40]	; (80191e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80191b8:	f007 fa61 	bl	802067e <__aeabi_atexit>
 80191bc:	4b05      	ldr	r3, [pc, #20]	; (80191d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80191be:	672b      	str	r3, [r5, #112]	; 0x70
 80191c0:	4b07      	ldr	r3, [pc, #28]	; (80191e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80191c2:	676b      	str	r3, [r5, #116]	; 0x74
 80191c4:	bd38      	pop	{r3, r4, r5, pc}
 80191c6:	bf00      	nop
 80191c8:	20015648 	.word	0x20015648
 80191cc:	20000000 	.word	0x20000000
 80191d0:	08016d71 	.word	0x08016d71
 80191d4:	20000098 	.word	0x20000098
 80191d8:	2001564c 	.word	0x2001564c
 80191dc:	08016d6f 	.word	0x08016d6f
 80191e0:	2000009c 	.word	0x2000009c

080191e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 80191e4:	b538      	push	{r3, r4, r5, lr}
 80191e6:	4c15      	ldr	r4, [pc, #84]	; (801923c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 80191e8:	7823      	ldrb	r3, [r4, #0]
 80191ea:	f3bf 8f5b 	dmb	ish
 80191ee:	07da      	lsls	r2, r3, #31
 80191f0:	4605      	mov	r5, r0
 80191f2:	d40b      	bmi.n	801920c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80191f4:	4620      	mov	r0, r4
 80191f6:	f007 fa49 	bl	802068c <__cxa_guard_acquire>
 80191fa:	b138      	cbz	r0, 801920c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80191fc:	4620      	mov	r0, r4
 80191fe:	f007 fa51 	bl	80206a4 <__cxa_guard_release>
 8019202:	4a0f      	ldr	r2, [pc, #60]	; (8019240 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8019204:	490f      	ldr	r1, [pc, #60]	; (8019244 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8019206:	4810      	ldr	r0, [pc, #64]	; (8019248 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8019208:	f007 fa39 	bl	802067e <__aeabi_atexit>
 801920c:	4c0f      	ldr	r4, [pc, #60]	; (801924c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801920e:	7823      	ldrb	r3, [r4, #0]
 8019210:	f3bf 8f5b 	dmb	ish
 8019214:	07db      	lsls	r3, r3, #31
 8019216:	d40b      	bmi.n	8019230 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8019218:	4620      	mov	r0, r4
 801921a:	f007 fa37 	bl	802068c <__cxa_guard_acquire>
 801921e:	b138      	cbz	r0, 8019230 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8019220:	4620      	mov	r0, r4
 8019222:	f007 fa3f 	bl	80206a4 <__cxa_guard_release>
 8019226:	4a06      	ldr	r2, [pc, #24]	; (8019240 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8019228:	4909      	ldr	r1, [pc, #36]	; (8019250 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801922a:	480a      	ldr	r0, [pc, #40]	; (8019254 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801922c:	f007 fa27 	bl	802067e <__aeabi_atexit>
 8019230:	4b05      	ldr	r3, [pc, #20]	; (8019248 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8019232:	66ab      	str	r3, [r5, #104]	; 0x68
 8019234:	4b07      	ldr	r3, [pc, #28]	; (8019254 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8019236:	66eb      	str	r3, [r5, #108]	; 0x6c
 8019238:	bd38      	pop	{r3, r4, r5, pc}
 801923a:	bf00      	nop
 801923c:	20015640 	.word	0x20015640
 8019240:	20000000 	.word	0x20000000
 8019244:	08016d75 	.word	0x08016d75
 8019248:	20000090 	.word	0x20000090
 801924c:	20015644 	.word	0x20015644
 8019250:	08016d73 	.word	0x08016d73
 8019254:	20000094 	.word	0x20000094

08019258 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8019258:	b510      	push	{r4, lr}
 801925a:	4604      	mov	r4, r0
 801925c:	f7ff ff88 	bl	8019170 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8019260:	4620      	mov	r0, r4
 8019262:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019266:	f7ff bfbd 	b.w	80191e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801926a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801926a:	b510      	push	{r4, lr}
 801926c:	4604      	mov	r4, r0
 801926e:	f7ff fff3 	bl	8019258 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8019272:	4620      	mov	r0, r4
 8019274:	f7ff ff72 	bl	801915c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8019278:	4620      	mov	r0, r4
 801927a:	f7ff fdf9 	bl	8018e70 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801927e:	4620      	mov	r0, r4
 8019280:	f7ff fcfa 	bl	8018c78 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8019284:	4620      	mov	r0, r4
 8019286:	f7ff fd75 	bl	8018d74 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801928a:	4620      	mov	r0, r4
 801928c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019290:	f7ff bee0 	b.w	8019054 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08019294 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8019294:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019298:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801929c:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 80192a0:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 80192a4:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 80192a8:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 80192ac:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 80192b0:	8808      	ldrh	r0, [r1, #0]
 80192b2:	fb05 4c0e 	mla	ip, r5, lr, r4
 80192b6:	2d00      	cmp	r5, #0
 80192b8:	eb02 0a0c 	add.w	sl, r2, ip
 80192bc:	f2c0 80b0 	blt.w	8019420 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 80192c0:	45ab      	cmp	fp, r5
 80192c2:	f340 80ad 	ble.w	8019420 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 80192c6:	2c00      	cmp	r4, #0
 80192c8:	f2c0 80a8 	blt.w	801941c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 80192cc:	45a6      	cmp	lr, r4
 80192ce:	f340 80a5 	ble.w	801941c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 80192d2:	f812 200c 	ldrb.w	r2, [r2, ip]
 80192d6:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 80192da:	1c62      	adds	r2, r4, #1
 80192dc:	f100 80a3 	bmi.w	8019426 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80192e0:	4596      	cmp	lr, r2
 80192e2:	f340 80a0 	ble.w	8019426 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80192e6:	f1b9 0f00 	cmp.w	r9, #0
 80192ea:	f000 809c 	beq.w	8019426 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80192ee:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80192f2:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 80192f6:	3501      	adds	r5, #1
 80192f8:	f100 8099 	bmi.w	801942e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80192fc:	45ab      	cmp	fp, r5
 80192fe:	f340 8096 	ble.w	801942e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019302:	2f00      	cmp	r7, #0
 8019304:	f000 8093 	beq.w	801942e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019308:	2c00      	cmp	r4, #0
 801930a:	f2c0 808e 	blt.w	801942a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801930e:	45a6      	cmp	lr, r4
 8019310:	f340 808b 	ble.w	801942a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8019314:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8019318:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801931c:	3401      	adds	r4, #1
 801931e:	f100 8089 	bmi.w	8019434 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019322:	45a6      	cmp	lr, r4
 8019324:	f340 8086 	ble.w	8019434 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019328:	f1b9 0f00 	cmp.w	r9, #0
 801932c:	f000 8082 	beq.w	8019434 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019330:	44d6      	add	lr, sl
 8019332:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8019336:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801933a:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801933e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8019342:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8019346:	fb19 fe07 	smulbb	lr, r9, r7
 801934a:	ea44 0808 	orr.w	r8, r4, r8
 801934e:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8019352:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8019356:	f1c7 0210 	rsb	r2, r7, #16
 801935a:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801935e:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019362:	ea44 0c0c 	orr.w	ip, r4, ip
 8019366:	eba2 0209 	sub.w	r2, r2, r9
 801936a:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801936e:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8019372:	fb04 f40c 	mul.w	r4, r4, ip
 8019376:	fb02 4808 	mla	r8, r2, r8, r4
 801937a:	041a      	lsls	r2, r3, #16
 801937c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8019380:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019384:	4313      	orrs	r3, r2
 8019386:	042a      	lsls	r2, r5, #16
 8019388:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801938c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8019390:	fb0e 8303 	mla	r3, lr, r3, r8
 8019394:	432a      	orrs	r2, r5
 8019396:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801939a:	fb07 3202 	mla	r2, r7, r2, r3
 801939e:	0d53      	lsrs	r3, r2, #21
 80193a0:	0952      	lsrs	r2, r2, #5
 80193a2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80193a6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80193aa:	431a      	orrs	r2, r3
 80193ac:	b293      	uxth	r3, r2
 80193ae:	b2b4      	uxth	r4, r6
 80193b0:	1202      	asrs	r2, r0, #8
 80193b2:	43f6      	mvns	r6, r6
 80193b4:	b2f6      	uxtb	r6, r6
 80193b6:	121d      	asrs	r5, r3, #8
 80193b8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80193bc:	fb12 f206 	smulbb	r2, r2, r6
 80193c0:	10c7      	asrs	r7, r0, #3
 80193c2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80193c6:	00c0      	lsls	r0, r0, #3
 80193c8:	fb05 2504 	mla	r5, r5, r4, r2
 80193cc:	b2c0      	uxtb	r0, r0
 80193ce:	10da      	asrs	r2, r3, #3
 80193d0:	00db      	lsls	r3, r3, #3
 80193d2:	b2db      	uxtb	r3, r3
 80193d4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80193d8:	fb10 f006 	smulbb	r0, r0, r6
 80193dc:	b2ad      	uxth	r5, r5
 80193de:	fb03 0004 	mla	r0, r3, r4, r0
 80193e2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80193e6:	fb17 f706 	smulbb	r7, r7, r6
 80193ea:	b280      	uxth	r0, r0
 80193ec:	1c6b      	adds	r3, r5, #1
 80193ee:	fb02 7204 	mla	r2, r2, r4, r7
 80193f2:	b292      	uxth	r2, r2
 80193f4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80193f8:	1c43      	adds	r3, r0, #1
 80193fa:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80193fe:	1c50      	adds	r0, r2, #1
 8019400:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8019404:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8019408:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801940c:	0952      	lsrs	r2, r2, #5
 801940e:	432b      	orrs	r3, r5
 8019410:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019414:	4313      	orrs	r3, r2
 8019416:	800b      	strh	r3, [r1, #0]
 8019418:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801941c:	4680      	mov	r8, r0
 801941e:	e75c      	b.n	80192da <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8019420:	4684      	mov	ip, r0
 8019422:	4680      	mov	r8, r0
 8019424:	e767      	b.n	80192f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8019426:	4684      	mov	ip, r0
 8019428:	e765      	b.n	80192f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801942a:	4605      	mov	r5, r0
 801942c:	e776      	b.n	801931c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801942e:	4603      	mov	r3, r0
 8019430:	4605      	mov	r5, r0
 8019432:	e782      	b.n	801933a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8019434:	4603      	mov	r3, r0
 8019436:	e780      	b.n	801933a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08019438 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019438:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801943c:	b099      	sub	sp, #100	; 0x64
 801943e:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 8019442:	9215      	str	r2, [sp, #84]	; 0x54
 8019444:	9309      	str	r3, [sp, #36]	; 0x24
 8019446:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8019448:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801944c:	930d      	str	r3, [sp, #52]	; 0x34
 801944e:	910c      	str	r1, [sp, #48]	; 0x30
 8019450:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 8019454:	9016      	str	r0, [sp, #88]	; 0x58
 8019456:	6850      	ldr	r0, [r2, #4]
 8019458:	6812      	ldr	r2, [r2, #0]
 801945a:	fb00 1303 	mla	r3, r0, r3, r1
 801945e:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8019462:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019464:	681b      	ldr	r3, [r3, #0]
 8019466:	930b      	str	r3, [sp, #44]	; 0x2c
 8019468:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801946a:	685e      	ldr	r6, [r3, #4]
 801946c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801946e:	43db      	mvns	r3, r3
 8019470:	b2db      	uxtb	r3, r3
 8019472:	3604      	adds	r6, #4
 8019474:	930a      	str	r3, [sp, #40]	; 0x28
 8019476:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019478:	2b00      	cmp	r3, #0
 801947a:	dc03      	bgt.n	8019484 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801947c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801947e:	2b00      	cmp	r3, #0
 8019480:	f340 8225 	ble.w	80198ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8019484:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019486:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801948a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801948e:	1e48      	subs	r0, r1, #1
 8019490:	1e57      	subs	r7, r2, #1
 8019492:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019494:	2b00      	cmp	r3, #0
 8019496:	f340 80e3 	ble.w	8019660 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801949a:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801949e:	ea4f 4325 	mov.w	r3, r5, asr #16
 80194a2:	d406      	bmi.n	80194b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80194a4:	4584      	cmp	ip, r0
 80194a6:	da04      	bge.n	80194b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80194a8:	2b00      	cmp	r3, #0
 80194aa:	db02      	blt.n	80194b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80194ac:	42bb      	cmp	r3, r7
 80194ae:	f2c0 80d8 	blt.w	8019662 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80194b2:	f11c 0c01 	adds.w	ip, ip, #1
 80194b6:	f100 80c9 	bmi.w	801964c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80194ba:	4561      	cmp	r1, ip
 80194bc:	f2c0 80c6 	blt.w	801964c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80194c0:	3301      	adds	r3, #1
 80194c2:	f100 80c3 	bmi.w	801964c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80194c6:	429a      	cmp	r2, r3
 80194c8:	f2c0 80c0 	blt.w	801964c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80194cc:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80194d0:	4647      	mov	r7, r8
 80194d2:	f1bb 0f00 	cmp.w	fp, #0
 80194d6:	f340 80e3 	ble.w	80196a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 80194da:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80194dc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80194de:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80194e2:	689b      	ldr	r3, [r3, #8]
 80194e4:	ea5f 422a 	movs.w	r2, sl, asr #16
 80194e8:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80194ec:	f3ca 3003 	ubfx	r0, sl, #12, #4
 80194f0:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80194f4:	f100 8121 	bmi.w	801973a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80194f8:	f103 39ff 	add.w	r9, r3, #4294967295
 80194fc:	454a      	cmp	r2, r9
 80194fe:	f280 811c 	bge.w	801973a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019502:	f1bc 0f00 	cmp.w	ip, #0
 8019506:	f2c0 8118 	blt.w	801973a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801950a:	f10e 39ff 	add.w	r9, lr, #4294967295
 801950e:	45cc      	cmp	ip, r9
 8019510:	f280 8113 	bge.w	801973a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019514:	b21b      	sxth	r3, r3
 8019516:	fb0c 2203 	mla	r2, ip, r3, r2
 801951a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801951c:	eb04 0902 	add.w	r9, r4, r2
 8019520:	5ca2      	ldrb	r2, [r4, r2]
 8019522:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8019526:	2800      	cmp	r0, #0
 8019528:	f000 80fe 	beq.w	8019728 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801952c:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019530:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8019534:	9211      	str	r2, [sp, #68]	; 0x44
 8019536:	b151      	cbz	r1, 801954e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019538:	eb09 0203 	add.w	r2, r9, r3
 801953c:	f819 3003 	ldrb.w	r3, [r9, r3]
 8019540:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019544:	930f      	str	r3, [sp, #60]	; 0x3c
 8019546:	7853      	ldrb	r3, [r2, #1]
 8019548:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801954c:	9312      	str	r3, [sp, #72]	; 0x48
 801954e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019550:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019552:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019556:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801955a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801955e:	ea4c 0c03 	orr.w	ip, ip, r3
 8019562:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8019564:	041b      	lsls	r3, r3, #16
 8019566:	fb10 f201 	smulbb	r2, r0, r1
 801956a:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801956e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019572:	10d2      	asrs	r2, r2, #3
 8019574:	4323      	orrs	r3, r4
 8019576:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801957a:	4353      	muls	r3, r2
 801957c:	fb09 330c 	mla	r3, r9, ip, r3
 8019580:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8019584:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019588:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801958c:	ea4c 0e0e 	orr.w	lr, ip, lr
 8019590:	f1c1 0c10 	rsb	ip, r1, #16
 8019594:	ebac 0c00 	sub.w	ip, ip, r0
 8019598:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801959c:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80195a0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80195a2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80195a4:	0418      	lsls	r0, r3, #16
 80195a6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80195aa:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80195ae:	4318      	orrs	r0, r3
 80195b0:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80195b4:	fb02 c200 	mla	r2, r2, r0, ip
 80195b8:	0d53      	lsrs	r3, r2, #21
 80195ba:	0952      	lsrs	r2, r2, #5
 80195bc:	8838      	ldrh	r0, [r7, #0]
 80195be:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80195c2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80195c6:	431a      	orrs	r2, r3
 80195c8:	b292      	uxth	r2, r2
 80195ca:	1201      	asrs	r1, r0, #8
 80195cc:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 80195d0:	ea4f 2c22 	mov.w	ip, r2, asr #8
 80195d4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80195d8:	fb11 f104 	smulbb	r1, r1, r4
 80195dc:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 80195e0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80195e4:	00c0      	lsls	r0, r0, #3
 80195e6:	fb0c 1c03 	mla	ip, ip, r3, r1
 80195ea:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80195ee:	10d1      	asrs	r1, r2, #3
 80195f0:	b2c0      	uxtb	r0, r0
 80195f2:	00d2      	lsls	r2, r2, #3
 80195f4:	b2d2      	uxtb	r2, r2
 80195f6:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80195fa:	fb1e fe04 	smulbb	lr, lr, r4
 80195fe:	fb10 f004 	smulbb	r0, r0, r4
 8019602:	fa1f fc8c 	uxth.w	ip, ip
 8019606:	fb01 e103 	mla	r1, r1, r3, lr
 801960a:	fb02 0303 	mla	r3, r2, r3, r0
 801960e:	b29a      	uxth	r2, r3
 8019610:	f10c 0301 	add.w	r3, ip, #1
 8019614:	b289      	uxth	r1, r1
 8019616:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801961a:	1c53      	adds	r3, r2, #1
 801961c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019620:	1c4a      	adds	r2, r1, #1
 8019622:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8019626:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801962a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801962e:	0949      	lsrs	r1, r1, #5
 8019630:	ea43 030c 	orr.w	r3, r3, ip
 8019634:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019638:	430b      	orrs	r3, r1
 801963a:	803b      	strh	r3, [r7, #0]
 801963c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801963e:	449a      	add	sl, r3
 8019640:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019642:	3702      	adds	r7, #2
 8019644:	441d      	add	r5, r3
 8019646:	f10b 3bff 	add.w	fp, fp, #4294967295
 801964a:	e742      	b.n	80194d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801964c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801964e:	449a      	add	sl, r3
 8019650:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019652:	441d      	add	r5, r3
 8019654:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019656:	3b01      	subs	r3, #1
 8019658:	9309      	str	r3, [sp, #36]	; 0x24
 801965a:	f108 0802 	add.w	r8, r8, #2
 801965e:	e718      	b.n	8019492 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8019660:	d023      	beq.n	80196aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8019662:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019664:	9825      	ldr	r0, [sp, #148]	; 0x94
 8019666:	3b01      	subs	r3, #1
 8019668:	fb00 a003 	mla	r0, r0, r3, sl
 801966c:	1400      	asrs	r0, r0, #16
 801966e:	f53f af2d 	bmi.w	80194cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019672:	3901      	subs	r1, #1
 8019674:	4288      	cmp	r0, r1
 8019676:	f6bf af29 	bge.w	80194cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801967a:	9926      	ldr	r1, [sp, #152]	; 0x98
 801967c:	fb01 5303 	mla	r3, r1, r3, r5
 8019680:	141b      	asrs	r3, r3, #16
 8019682:	f53f af23 	bmi.w	80194cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019686:	3a01      	subs	r2, #1
 8019688:	4293      	cmp	r3, r2
 801968a:	f6bf af1f 	bge.w	80194cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801968e:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8019692:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 8019696:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801969a:	f1be 0f00 	cmp.w	lr, #0
 801969e:	dc6c      	bgt.n	801977a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 80196a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80196a2:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80196a6:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 80196aa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80196ac:	2b00      	cmp	r3, #0
 80196ae:	f340 810e 	ble.w	80198ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 80196b2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80196b6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80196ba:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80196be:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80196c0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80196c4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80196c8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80196cc:	eef0 6a62 	vmov.f32	s13, s5
 80196d0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80196d4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80196d8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80196dc:	ee16 aa90 	vmov	sl, s13
 80196e0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80196e4:	eef0 6a43 	vmov.f32	s13, s6
 80196e8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80196ec:	ee12 2a90 	vmov	r2, s5
 80196f0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80196f4:	fb92 f3f3 	sdiv	r3, r2, r3
 80196f8:	ee13 2a10 	vmov	r2, s6
 80196fc:	9325      	str	r3, [sp, #148]	; 0x94
 80196fe:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8019700:	fb92 f3f3 	sdiv	r3, r2, r3
 8019704:	9326      	str	r3, [sp, #152]	; 0x98
 8019706:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019708:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801970a:	3b01      	subs	r3, #1
 801970c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019710:	930c      	str	r3, [sp, #48]	; 0x30
 8019712:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8019714:	bf08      	it	eq
 8019716:	4613      	moveq	r3, r2
 8019718:	ee16 5a90 	vmov	r5, s13
 801971c:	9309      	str	r3, [sp, #36]	; 0x24
 801971e:	eeb0 3a67 	vmov.f32	s6, s15
 8019722:	eef0 2a47 	vmov.f32	s5, s14
 8019726:	e6a6      	b.n	8019476 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019728:	2900      	cmp	r1, #0
 801972a:	f43f af10 	beq.w	801954e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801972e:	f819 3003 	ldrb.w	r3, [r9, r3]
 8019732:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019736:	930f      	str	r3, [sp, #60]	; 0x3c
 8019738:	e709      	b.n	801954e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801973a:	f112 0901 	adds.w	r9, r2, #1
 801973e:	f53f af7d 	bmi.w	801963c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019742:	454b      	cmp	r3, r9
 8019744:	f6ff af7a 	blt.w	801963c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019748:	f11c 0901 	adds.w	r9, ip, #1
 801974c:	f53f af76 	bmi.w	801963c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019750:	45ce      	cmp	lr, r9
 8019752:	f6ff af73 	blt.w	801963c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019756:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8019758:	9202      	str	r2, [sp, #8]
 801975a:	b21b      	sxth	r3, r3
 801975c:	fa0f f28e 	sxth.w	r2, lr
 8019760:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8019764:	e9cd c003 	strd	ip, r0, [sp, #12]
 8019768:	9201      	str	r2, [sp, #4]
 801976a:	9300      	str	r3, [sp, #0]
 801976c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801976e:	9816      	ldr	r0, [sp, #88]	; 0x58
 8019770:	4633      	mov	r3, r6
 8019772:	4639      	mov	r1, r7
 8019774:	f7ff fd8e 	bl	8019294 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8019778:	e760      	b.n	801963c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801977a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801977c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801977e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8019782:	ea4f 422a 	mov.w	r2, sl, asr #16
 8019786:	1429      	asrs	r1, r5, #16
 8019788:	fb03 2101 	mla	r1, r3, r1, r2
 801978c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801978e:	440a      	add	r2, r1
 8019790:	5c61      	ldrb	r1, [r4, r1]
 8019792:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8019796:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801979a:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801979e:	f1bc 0f00 	cmp.w	ip, #0
 80197a2:	f000 808c 	beq.w	80198be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 80197a6:	7857      	ldrb	r7, [r2, #1]
 80197a8:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 80197ac:	9413      	str	r4, [sp, #76]	; 0x4c
 80197ae:	b140      	cbz	r0, 80197c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80197b0:	18d7      	adds	r7, r2, r3
 80197b2:	5cd3      	ldrb	r3, [r2, r3]
 80197b4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80197b8:	9310      	str	r3, [sp, #64]	; 0x40
 80197ba:	787b      	ldrb	r3, [r7, #1]
 80197bc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80197c0:	9314      	str	r3, [sp, #80]	; 0x50
 80197c2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80197c4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80197c6:	fb1c f200 	smulbb	r2, ip, r0
 80197ca:	041f      	lsls	r7, r3, #16
 80197cc:	10d2      	asrs	r2, r2, #3
 80197ce:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80197d2:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 80197d6:	431f      	orrs	r7, r3
 80197d8:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 80197dc:	9317      	str	r3, [sp, #92]	; 0x5c
 80197de:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80197e0:	041b      	lsls	r3, r3, #16
 80197e2:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 80197e6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80197ea:	ea43 030b 	orr.w	r3, r3, fp
 80197ee:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80197f0:	4353      	muls	r3, r2
 80197f2:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80197f6:	fb04 3707 	mla	r7, r4, r7, r3
 80197fa:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80197fe:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8019802:	ea43 0b01 	orr.w	fp, r3, r1
 8019806:	f1c0 0110 	rsb	r1, r0, #16
 801980a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801980c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801980e:	eba1 0c0c 	sub.w	ip, r1, ip
 8019812:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019816:	fb0c 770b 	mla	r7, ip, fp, r7
 801981a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801981e:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8019822:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019826:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801982a:	ea4c 0c0b 	orr.w	ip, ip, fp
 801982e:	fb02 770c 	mla	r7, r2, ip, r7
 8019832:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8019834:	0d79      	lsrs	r1, r7, #21
 8019836:	097f      	lsrs	r7, r7, #5
 8019838:	8812      	ldrh	r2, [r2, #0]
 801983a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801983e:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8019842:	430f      	orrs	r7, r1
 8019844:	b2bb      	uxth	r3, r7
 8019846:	1211      	asrs	r1, r2, #8
 8019848:	1218      	asrs	r0, r3, #8
 801984a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801984e:	fb11 f104 	smulbb	r1, r1, r4
 8019852:	10d7      	asrs	r7, r2, #3
 8019854:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019858:	00d2      	lsls	r2, r2, #3
 801985a:	fb00 1009 	mla	r0, r0, r9, r1
 801985e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019862:	10d9      	asrs	r1, r3, #3
 8019864:	b2d2      	uxtb	r2, r2
 8019866:	00db      	lsls	r3, r3, #3
 8019868:	fb17 f704 	smulbb	r7, r7, r4
 801986c:	fb12 f204 	smulbb	r2, r2, r4
 8019870:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8019874:	b2db      	uxtb	r3, r3
 8019876:	b280      	uxth	r0, r0
 8019878:	fb01 7109 	mla	r1, r1, r9, r7
 801987c:	fb03 2309 	mla	r3, r3, r9, r2
 8019880:	b29b      	uxth	r3, r3
 8019882:	b289      	uxth	r1, r1
 8019884:	1c42      	adds	r2, r0, #1
 8019886:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801988a:	1c4f      	adds	r7, r1, #1
 801988c:	1c5a      	adds	r2, r3, #1
 801988e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8019892:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8019896:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801989a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801989e:	0949      	lsrs	r1, r1, #5
 80198a0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80198a2:	4310      	orrs	r0, r2
 80198a4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80198a8:	4308      	orrs	r0, r1
 80198aa:	f823 0b02 	strh.w	r0, [r3], #2
 80198ae:	930e      	str	r3, [sp, #56]	; 0x38
 80198b0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80198b2:	449a      	add	sl, r3
 80198b4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80198b6:	f10e 3eff 	add.w	lr, lr, #4294967295
 80198ba:	441d      	add	r5, r3
 80198bc:	e6ed      	b.n	801969a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 80198be:	2800      	cmp	r0, #0
 80198c0:	f43f af7f 	beq.w	80197c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80198c4:	5cd3      	ldrb	r3, [r2, r3]
 80198c6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80198ca:	9310      	str	r3, [sp, #64]	; 0x40
 80198cc:	e779      	b.n	80197c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80198ce:	b019      	add	sp, #100	; 0x64
 80198d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080198d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80198d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80198d8:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 80198dc:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 80198e0:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 80198e4:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80198e8:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 80198ec:	8808      	ldrh	r0, [r1, #0]
 80198ee:	fb08 470e 	mla	r7, r8, lr, r4
 80198f2:	f1b8 0f00 	cmp.w	r8, #0
 80198f6:	eb02 0907 	add.w	r9, r2, r7
 80198fa:	db67      	blt.n	80199cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 80198fc:	45c2      	cmp	sl, r8
 80198fe:	dd65      	ble.n	80199cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8019900:	2c00      	cmp	r4, #0
 8019902:	db61      	blt.n	80199c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8019904:	45a6      	cmp	lr, r4
 8019906:	dd5f      	ble.n	80199c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8019908:	5dd2      	ldrb	r2, [r2, r7]
 801990a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801990e:	1c62      	adds	r2, r4, #1
 8019910:	d45f      	bmi.n	80199d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8019912:	4596      	cmp	lr, r2
 8019914:	dd5d      	ble.n	80199d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8019916:	2d00      	cmp	r5, #0
 8019918:	d05b      	beq.n	80199d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801991a:	f899 2001 	ldrb.w	r2, [r9, #1]
 801991e:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8019922:	f118 0801 	adds.w	r8, r8, #1
 8019926:	d458      	bmi.n	80199da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8019928:	45c2      	cmp	sl, r8
 801992a:	dd56      	ble.n	80199da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801992c:	2e00      	cmp	r6, #0
 801992e:	d054      	beq.n	80199da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8019930:	2c00      	cmp	r4, #0
 8019932:	db50      	blt.n	80199d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8019934:	45a6      	cmp	lr, r4
 8019936:	dd4e      	ble.n	80199d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8019938:	f819 200e 	ldrb.w	r2, [r9, lr]
 801993c:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8019940:	3401      	adds	r4, #1
 8019942:	d407      	bmi.n	8019954 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8019944:	45a6      	cmp	lr, r4
 8019946:	dd05      	ble.n	8019954 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8019948:	b125      	cbz	r5, 8019954 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801994a:	44ce      	add	lr, r9
 801994c:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8019950:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8019954:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8019958:	fb15 f406 	smulbb	r4, r5, r6
 801995c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019960:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8019964:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019968:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801996c:	ea43 0c0c 	orr.w	ip, r3, ip
 8019970:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8019974:	f1c6 0310 	rsb	r3, r6, #16
 8019978:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801997c:	1b5b      	subs	r3, r3, r5
 801997e:	ea4e 0707 	orr.w	r7, lr, r7
 8019982:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8019986:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801998a:	437d      	muls	r5, r7
 801998c:	fb03 5c0c 	mla	ip, r3, ip, r5
 8019990:	0403      	lsls	r3, r0, #16
 8019992:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019996:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801999a:	4318      	orrs	r0, r3
 801999c:	0413      	lsls	r3, r2, #16
 801999e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80199a2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80199a6:	4313      	orrs	r3, r2
 80199a8:	fb04 c000 	mla	r0, r4, r0, ip
 80199ac:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 80199b0:	fb06 0003 	mla	r0, r6, r3, r0
 80199b4:	0d43      	lsrs	r3, r0, #21
 80199b6:	0940      	lsrs	r0, r0, #5
 80199b8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80199bc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80199c0:	4318      	orrs	r0, r3
 80199c2:	8008      	strh	r0, [r1, #0]
 80199c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80199c8:	4684      	mov	ip, r0
 80199ca:	e7a0      	b.n	801990e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 80199cc:	4607      	mov	r7, r0
 80199ce:	4684      	mov	ip, r0
 80199d0:	e7a7      	b.n	8019922 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 80199d2:	4607      	mov	r7, r0
 80199d4:	e7a5      	b.n	8019922 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 80199d6:	4602      	mov	r2, r0
 80199d8:	e7b2      	b.n	8019940 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 80199da:	4602      	mov	r2, r0
 80199dc:	e7ba      	b.n	8019954 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

080199de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80199de:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80199e2:	b093      	sub	sp, #76	; 0x4c
 80199e4:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 80199e8:	920f      	str	r2, [sp, #60]	; 0x3c
 80199ea:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80199ec:	9108      	str	r1, [sp, #32]
 80199ee:	9306      	str	r3, [sp, #24]
 80199f0:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 80199f4:	9010      	str	r0, [sp, #64]	; 0x40
 80199f6:	6850      	ldr	r0, [r2, #4]
 80199f8:	6812      	ldr	r2, [r2, #0]
 80199fa:	fb00 1303 	mla	r3, r0, r3, r1
 80199fe:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8019a02:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019a04:	681b      	ldr	r3, [r3, #0]
 8019a06:	9307      	str	r3, [sp, #28]
 8019a08:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019a0a:	685f      	ldr	r7, [r3, #4]
 8019a0c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019a10:	3704      	adds	r7, #4
 8019a12:	9b08      	ldr	r3, [sp, #32]
 8019a14:	2b00      	cmp	r3, #0
 8019a16:	dc03      	bgt.n	8019a20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8019a18:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019a1a:	2b00      	cmp	r3, #0
 8019a1c:	f340 81b2 	ble.w	8019d84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8019a20:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019a22:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019a26:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019a2a:	1e48      	subs	r0, r1, #1
 8019a2c:	f102 3cff 	add.w	ip, r2, #4294967295
 8019a30:	9b06      	ldr	r3, [sp, #24]
 8019a32:	2b00      	cmp	r3, #0
 8019a34:	f340 80a9 	ble.w	8019b8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8019a38:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8019a3c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019a40:	d406      	bmi.n	8019a50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019a42:	4586      	cmp	lr, r0
 8019a44:	da04      	bge.n	8019a50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019a46:	2b00      	cmp	r3, #0
 8019a48:	db02      	blt.n	8019a50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019a4a:	4563      	cmp	r3, ip
 8019a4c:	f2c0 809e 	blt.w	8019b8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8019a50:	f11e 0e01 	adds.w	lr, lr, #1
 8019a54:	f100 808f 	bmi.w	8019b76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019a58:	4571      	cmp	r1, lr
 8019a5a:	f2c0 808c 	blt.w	8019b76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019a5e:	3301      	adds	r3, #1
 8019a60:	f100 8089 	bmi.w	8019b76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019a64:	429a      	cmp	r2, r3
 8019a66:	f2c0 8086 	blt.w	8019b76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019a6a:	f8dd b018 	ldr.w	fp, [sp, #24]
 8019a6e:	46c8      	mov	r8, r9
 8019a70:	f1bb 0f00 	cmp.w	fp, #0
 8019a74:	f340 80a6 	ble.w	8019bc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8019a78:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8019a7a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019a7c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8019a80:	689b      	ldr	r3, [r3, #8]
 8019a82:	1422      	asrs	r2, r4, #16
 8019a84:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8019a88:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8019a8c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8019a90:	f100 80e3 	bmi.w	8019c5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019a94:	f103 3aff 	add.w	sl, r3, #4294967295
 8019a98:	4552      	cmp	r2, sl
 8019a9a:	f280 80de 	bge.w	8019c5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019a9e:	f1bc 0f00 	cmp.w	ip, #0
 8019aa2:	f2c0 80da 	blt.w	8019c5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019aa6:	f10e 3aff 	add.w	sl, lr, #4294967295
 8019aaa:	45d4      	cmp	ip, sl
 8019aac:	f280 80d5 	bge.w	8019c5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019ab0:	b21b      	sxth	r3, r3
 8019ab2:	fb0c 2203 	mla	r2, ip, r3, r2
 8019ab6:	9d07      	ldr	r5, [sp, #28]
 8019ab8:	eb05 0a02 	add.w	sl, r5, r2
 8019abc:	5caa      	ldrb	r2, [r5, r2]
 8019abe:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8019ac2:	2800      	cmp	r0, #0
 8019ac4:	f000 80c0 	beq.w	8019c48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8019ac8:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8019acc:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8019ad0:	920b      	str	r2, [sp, #44]	; 0x2c
 8019ad2:	b151      	cbz	r1, 8019aea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019ad4:	eb0a 0203 	add.w	r2, sl, r3
 8019ad8:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8019adc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019ae0:	9309      	str	r3, [sp, #36]	; 0x24
 8019ae2:	7853      	ldrb	r3, [r2, #1]
 8019ae4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019ae8:	930c      	str	r3, [sp, #48]	; 0x30
 8019aea:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019aec:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019aee:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019af2:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019af6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019afa:	ea4c 0c03 	orr.w	ip, ip, r3
 8019afe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019b00:	041b      	lsls	r3, r3, #16
 8019b02:	fb10 f201 	smulbb	r2, r0, r1
 8019b06:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019b0a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8019b0e:	10d2      	asrs	r2, r2, #3
 8019b10:	432b      	orrs	r3, r5
 8019b12:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8019b16:	4353      	muls	r3, r2
 8019b18:	fb0a 330c 	mla	r3, sl, ip, r3
 8019b1c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8019b20:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019b24:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8019b28:	ea4c 0e0e 	orr.w	lr, ip, lr
 8019b2c:	f1c1 0c10 	rsb	ip, r1, #16
 8019b30:	ebac 0c00 	sub.w	ip, ip, r0
 8019b34:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019b38:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8019b3c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019b3e:	0418      	lsls	r0, r3, #16
 8019b40:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8019b44:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019b48:	4318      	orrs	r0, r3
 8019b4a:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8019b4e:	fb02 c200 	mla	r2, r2, r0, ip
 8019b52:	0d53      	lsrs	r3, r2, #21
 8019b54:	0952      	lsrs	r2, r2, #5
 8019b56:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019b5a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019b5e:	431a      	orrs	r2, r3
 8019b60:	f8a8 2000 	strh.w	r2, [r8]
 8019b64:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019b66:	441c      	add	r4, r3
 8019b68:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019b6a:	f108 0802 	add.w	r8, r8, #2
 8019b6e:	441e      	add	r6, r3
 8019b70:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019b74:	e77c      	b.n	8019a70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019b76:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019b78:	441c      	add	r4, r3
 8019b7a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019b7c:	441e      	add	r6, r3
 8019b7e:	9b06      	ldr	r3, [sp, #24]
 8019b80:	3b01      	subs	r3, #1
 8019b82:	9306      	str	r3, [sp, #24]
 8019b84:	f109 0902 	add.w	r9, r9, #2
 8019b88:	e752      	b.n	8019a30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019b8a:	d020      	beq.n	8019bce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019b8c:	9b06      	ldr	r3, [sp, #24]
 8019b8e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8019b90:	3b01      	subs	r3, #1
 8019b92:	fb00 4003 	mla	r0, r0, r3, r4
 8019b96:	1400      	asrs	r0, r0, #16
 8019b98:	f53f af67 	bmi.w	8019a6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019b9c:	3901      	subs	r1, #1
 8019b9e:	4288      	cmp	r0, r1
 8019ba0:	f6bf af63 	bge.w	8019a6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019ba4:	9920      	ldr	r1, [sp, #128]	; 0x80
 8019ba6:	fb01 6303 	mla	r3, r1, r3, r6
 8019baa:	141b      	asrs	r3, r3, #16
 8019bac:	f53f af5d 	bmi.w	8019a6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019bb0:	3a01      	subs	r2, #1
 8019bb2:	4293      	cmp	r3, r2
 8019bb4:	f6bf af59 	bge.w	8019a6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019bb8:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8019bbc:	46ca      	mov	sl, r9
 8019bbe:	f1b8 0f00 	cmp.w	r8, #0
 8019bc2:	dc67      	bgt.n	8019c94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8019bc4:	9b06      	ldr	r3, [sp, #24]
 8019bc6:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8019bca:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8019bce:	9b08      	ldr	r3, [sp, #32]
 8019bd0:	2b00      	cmp	r3, #0
 8019bd2:	f340 80d7 	ble.w	8019d84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8019bd6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019bda:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019bde:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019be2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019be4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019be8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019bec:	eeb0 6a62 	vmov.f32	s12, s5
 8019bf0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019bf4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019bf8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019bfc:	ee16 4a10 	vmov	r4, s12
 8019c00:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019c04:	eeb0 6a43 	vmov.f32	s12, s6
 8019c08:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019c0c:	ee12 2a90 	vmov	r2, s5
 8019c10:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019c14:	fb92 f3f3 	sdiv	r3, r2, r3
 8019c18:	ee13 2a10 	vmov	r2, s6
 8019c1c:	931f      	str	r3, [sp, #124]	; 0x7c
 8019c1e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019c20:	fb92 f3f3 	sdiv	r3, r2, r3
 8019c24:	9320      	str	r3, [sp, #128]	; 0x80
 8019c26:	9b08      	ldr	r3, [sp, #32]
 8019c28:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019c2a:	3b01      	subs	r3, #1
 8019c2c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019c30:	9308      	str	r3, [sp, #32]
 8019c32:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019c34:	bf08      	it	eq
 8019c36:	4613      	moveq	r3, r2
 8019c38:	ee16 6a10 	vmov	r6, s12
 8019c3c:	9306      	str	r3, [sp, #24]
 8019c3e:	eeb0 3a67 	vmov.f32	s6, s15
 8019c42:	eef0 2a47 	vmov.f32	s5, s14
 8019c46:	e6e4      	b.n	8019a12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8019c48:	2900      	cmp	r1, #0
 8019c4a:	f43f af4e 	beq.w	8019aea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019c4e:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8019c52:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019c56:	9309      	str	r3, [sp, #36]	; 0x24
 8019c58:	e747      	b.n	8019aea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019c5a:	f112 0a01 	adds.w	sl, r2, #1
 8019c5e:	d481      	bmi.n	8019b64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019c60:	4553      	cmp	r3, sl
 8019c62:	f6ff af7f 	blt.w	8019b64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019c66:	f11c 0a01 	adds.w	sl, ip, #1
 8019c6a:	f53f af7b 	bmi.w	8019b64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019c6e:	45d6      	cmp	lr, sl
 8019c70:	f6ff af78 	blt.w	8019b64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019c74:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8019c78:	b21b      	sxth	r3, r3
 8019c7a:	fa0f f28e 	sxth.w	r2, lr
 8019c7e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8019c82:	9201      	str	r2, [sp, #4]
 8019c84:	9300      	str	r3, [sp, #0]
 8019c86:	9a07      	ldr	r2, [sp, #28]
 8019c88:	9810      	ldr	r0, [sp, #64]	; 0x40
 8019c8a:	463b      	mov	r3, r7
 8019c8c:	4641      	mov	r1, r8
 8019c8e:	f7ff fe21 	bl	80198d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8019c92:	e767      	b.n	8019b64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019c94:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019c96:	9d07      	ldr	r5, [sp, #28]
 8019c98:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8019c9c:	1422      	asrs	r2, r4, #16
 8019c9e:	1431      	asrs	r1, r6, #16
 8019ca0:	fb03 2101 	mla	r1, r3, r1, r2
 8019ca4:	9a07      	ldr	r2, [sp, #28]
 8019ca6:	440a      	add	r2, r1
 8019ca8:	5c69      	ldrb	r1, [r5, r1]
 8019caa:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8019cae:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8019cb2:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8019cb6:	f1be 0f00 	cmp.w	lr, #0
 8019cba:	d05c      	beq.n	8019d76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8019cbc:	f892 c001 	ldrb.w	ip, [r2, #1]
 8019cc0:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8019cc4:	950d      	str	r5, [sp, #52]	; 0x34
 8019cc6:	b150      	cbz	r0, 8019cde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019cc8:	eb02 0c03 	add.w	ip, r2, r3
 8019ccc:	5cd3      	ldrb	r3, [r2, r3]
 8019cce:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019cd2:	930a      	str	r3, [sp, #40]	; 0x28
 8019cd4:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8019cd8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019cdc:	930e      	str	r3, [sp, #56]	; 0x38
 8019cde:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019ce0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019ce2:	fb1e f200 	smulbb	r2, lr, r0
 8019ce6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019cea:	10d2      	asrs	r2, r2, #3
 8019cec:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019cf0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019cf4:	ea4c 0c03 	orr.w	ip, ip, r3
 8019cf8:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8019cfc:	9311      	str	r3, [sp, #68]	; 0x44
 8019cfe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019d00:	041b      	lsls	r3, r3, #16
 8019d02:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8019d06:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019d0a:	ea43 030b 	orr.w	r3, r3, fp
 8019d0e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019d10:	4353      	muls	r3, r2
 8019d12:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8019d16:	fb05 3c0c 	mla	ip, r5, ip, r3
 8019d1a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8019d1e:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8019d22:	ea43 0b01 	orr.w	fp, r3, r1
 8019d26:	f1c0 0110 	rsb	r1, r0, #16
 8019d2a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019d2c:	eba1 0e0e 	sub.w	lr, r1, lr
 8019d30:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8019d34:	fb0e cc0b 	mla	ip, lr, fp, ip
 8019d38:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8019d3c:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8019d40:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019d44:	ea4b 0e0e 	orr.w	lr, fp, lr
 8019d48:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8019d4c:	fb02 cc0e 	mla	ip, r2, lr, ip
 8019d50:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8019d54:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8019d58:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019d5c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019d60:	ea43 0c0c 	orr.w	ip, r3, ip
 8019d64:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019d66:	f82a cb02 	strh.w	ip, [sl], #2
 8019d6a:	441c      	add	r4, r3
 8019d6c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019d6e:	f108 38ff 	add.w	r8, r8, #4294967295
 8019d72:	441e      	add	r6, r3
 8019d74:	e723      	b.n	8019bbe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8019d76:	2800      	cmp	r0, #0
 8019d78:	d0b1      	beq.n	8019cde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019d7a:	5cd3      	ldrb	r3, [r2, r3]
 8019d7c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019d80:	930a      	str	r3, [sp, #40]	; 0x28
 8019d82:	e7ac      	b.n	8019cde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019d84:	b013      	add	sp, #76	; 0x4c
 8019d86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019d8a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8019d8a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019d8e:	880d      	ldrh	r5, [r1, #0]
 8019d90:	b087      	sub	sp, #28
 8019d92:	10ef      	asrs	r7, r5, #3
 8019d94:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8019d98:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019d9c:	00ed      	lsls	r5, r5, #3
 8019d9e:	9701      	str	r7, [sp, #4]
 8019da0:	b2ed      	uxtb	r5, r5
 8019da2:	9502      	str	r5, [sp, #8]
 8019da4:	9d01      	ldr	r5, [sp, #4]
 8019da6:	9103      	str	r1, [sp, #12]
 8019da8:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 8019dac:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 8019db0:	9902      	ldr	r1, [sp, #8]
 8019db2:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8019db6:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 8019dba:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 8019dbe:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 8019dc2:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 8019dc6:	022d      	lsls	r5, r5, #8
 8019dc8:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8019dcc:	fb06 0709 	mla	r7, r6, r9, r0
 8019dd0:	430d      	orrs	r5, r1
 8019dd2:	2e00      	cmp	r6, #0
 8019dd4:	eb02 0c07 	add.w	ip, r2, r7
 8019dd8:	9505      	str	r5, [sp, #20]
 8019dda:	f2c0 80b6 	blt.w	8019f4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8019dde:	45b3      	cmp	fp, r6
 8019de0:	f340 80b3 	ble.w	8019f4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8019de4:	2800      	cmp	r0, #0
 8019de6:	f2c0 80ae 	blt.w	8019f46 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8019dea:	4581      	cmp	r9, r0
 8019dec:	f340 80ab 	ble.w	8019f46 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8019df0:	5dd7      	ldrb	r7, [r2, r7]
 8019df2:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8019df6:	441f      	add	r7, r3
 8019df8:	1c42      	adds	r2, r0, #1
 8019dfa:	f100 80a9 	bmi.w	8019f50 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8019dfe:	4591      	cmp	r9, r2
 8019e00:	f340 80a6 	ble.w	8019f50 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8019e04:	2c00      	cmp	r4, #0
 8019e06:	f000 80a3 	beq.w	8019f50 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8019e0a:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8019e0e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8019e12:	441d      	add	r5, r3
 8019e14:	3601      	adds	r6, #1
 8019e16:	f100 809f 	bmi.w	8019f58 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8019e1a:	45b3      	cmp	fp, r6
 8019e1c:	f340 809c 	ble.w	8019f58 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8019e20:	f1be 0f00 	cmp.w	lr, #0
 8019e24:	f000 8098 	beq.w	8019f58 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8019e28:	2800      	cmp	r0, #0
 8019e2a:	f2c0 8093 	blt.w	8019f54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8019e2e:	4581      	cmp	r9, r0
 8019e30:	f340 8090 	ble.w	8019f54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8019e34:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8019e38:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8019e3c:	441e      	add	r6, r3
 8019e3e:	3001      	adds	r0, #1
 8019e40:	f100 808d 	bmi.w	8019f5e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019e44:	4581      	cmp	r9, r0
 8019e46:	f340 808a 	ble.w	8019f5e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019e4a:	2c00      	cmp	r4, #0
 8019e4c:	f000 8087 	beq.w	8019f5e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019e50:	44e1      	add	r9, ip
 8019e52:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019e56:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019e5a:	4413      	add	r3, r2
 8019e5c:	b2a4      	uxth	r4, r4
 8019e5e:	fa1f fe8e 	uxth.w	lr, lr
 8019e62:	fb04 fb0e 	mul.w	fp, r4, lr
 8019e66:	0124      	lsls	r4, r4, #4
 8019e68:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8019e6c:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 8019e70:	eba4 040b 	sub.w	r4, r4, fp
 8019e74:	fa1f f08e 	uxth.w	r0, lr
 8019e78:	b2a2      	uxth	r2, r4
 8019e7a:	78ac      	ldrb	r4, [r5, #2]
 8019e7c:	f897 c002 	ldrb.w	ip, [r7, #2]
 8019e80:	9901      	ldr	r1, [sp, #4]
 8019e82:	eba9 0900 	sub.w	r9, r9, r0
 8019e86:	fa1f f989 	uxth.w	r9, r9
 8019e8a:	4354      	muls	r4, r2
 8019e8c:	fb09 440c 	mla	r4, r9, ip, r4
 8019e90:	f896 c002 	ldrb.w	ip, [r6, #2]
 8019e94:	fb00 440c 	mla	r4, r0, ip, r4
 8019e98:	f893 c002 	ldrb.w	ip, [r3, #2]
 8019e9c:	fa1f fe88 	uxth.w	lr, r8
 8019ea0:	ea6f 0808 	mvn.w	r8, r8
 8019ea4:	fa5f f888 	uxtb.w	r8, r8
 8019ea8:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8019eac:	fb1a fa08 	smulbb	sl, sl, r8
 8019eb0:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8019eb4:	fb0c ac0e 	mla	ip, ip, lr, sl
 8019eb8:	f895 a001 	ldrb.w	sl, [r5, #1]
 8019ebc:	787c      	ldrb	r4, [r7, #1]
 8019ebe:	782d      	ldrb	r5, [r5, #0]
 8019ec0:	783f      	ldrb	r7, [r7, #0]
 8019ec2:	fb02 fa0a 	mul.w	sl, r2, sl
 8019ec6:	fb09 aa04 	mla	sl, r9, r4, sl
 8019eca:	7874      	ldrb	r4, [r6, #1]
 8019ecc:	436a      	muls	r2, r5
 8019ece:	7835      	ldrb	r5, [r6, #0]
 8019ed0:	fb00 aa04 	mla	sl, r0, r4, sl
 8019ed4:	fb09 2207 	mla	r2, r9, r7, r2
 8019ed8:	785c      	ldrb	r4, [r3, #1]
 8019eda:	781b      	ldrb	r3, [r3, #0]
 8019edc:	fb00 2005 	mla	r0, r0, r5, r2
 8019ee0:	fb0b a404 	mla	r4, fp, r4, sl
 8019ee4:	fb0b 0b03 	mla	fp, fp, r3, r0
 8019ee8:	9b02      	ldr	r3, [sp, #8]
 8019eea:	fb11 fa08 	smulbb	sl, r1, r8
 8019eee:	fa1f fc8c 	uxth.w	ip, ip
 8019ef2:	fb13 f808 	smulbb	r8, r3, r8
 8019ef6:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8019efa:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8019efe:	fb04 a40e 	mla	r4, r4, lr, sl
 8019f02:	f10c 0301 	add.w	r3, ip, #1
 8019f06:	fb0b 8e0e 	mla	lr, fp, lr, r8
 8019f0a:	fa1f fe8e 	uxth.w	lr, lr
 8019f0e:	b2a4      	uxth	r4, r4
 8019f10:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8019f14:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 8019f18:	f104 0a01 	add.w	sl, r4, #1
 8019f1c:	f10e 0c01 	add.w	ip, lr, #1
 8019f20:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8019f24:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8019f28:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8019f2c:	0964      	lsrs	r4, r4, #5
 8019f2e:	ea4c 0c03 	orr.w	ip, ip, r3
 8019f32:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8019f36:	9b03      	ldr	r3, [sp, #12]
 8019f38:	ea4c 0c04 	orr.w	ip, ip, r4
 8019f3c:	f8a3 c000 	strh.w	ip, [r3]
 8019f40:	b007      	add	sp, #28
 8019f42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019f46:	af05      	add	r7, sp, #20
 8019f48:	e756      	b.n	8019df8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 8019f4a:	ad05      	add	r5, sp, #20
 8019f4c:	462f      	mov	r7, r5
 8019f4e:	e761      	b.n	8019e14 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8019f50:	ad05      	add	r5, sp, #20
 8019f52:	e75f      	b.n	8019e14 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8019f54:	ae05      	add	r6, sp, #20
 8019f56:	e772      	b.n	8019e3e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8019f58:	ab05      	add	r3, sp, #20
 8019f5a:	461e      	mov	r6, r3
 8019f5c:	e77e      	b.n	8019e5c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 8019f5e:	ab05      	add	r3, sp, #20
 8019f60:	e77c      	b.n	8019e5c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

08019f62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019f62:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019f66:	b095      	sub	sp, #84	; 0x54
 8019f68:	9212      	str	r2, [sp, #72]	; 0x48
 8019f6a:	9309      	str	r3, [sp, #36]	; 0x24
 8019f6c:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8019f6e:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8019f72:	930f      	str	r3, [sp, #60]	; 0x3c
 8019f74:	910e      	str	r1, [sp, #56]	; 0x38
 8019f76:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 8019f7a:	9013      	str	r0, [sp, #76]	; 0x4c
 8019f7c:	6850      	ldr	r0, [r2, #4]
 8019f7e:	6812      	ldr	r2, [r2, #0]
 8019f80:	fb00 1303 	mla	r3, r0, r3, r1
 8019f84:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019f88:	930a      	str	r3, [sp, #40]	; 0x28
 8019f8a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019f8c:	681b      	ldr	r3, [r3, #0]
 8019f8e:	930d      	str	r3, [sp, #52]	; 0x34
 8019f90:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019f92:	685c      	ldr	r4, [r3, #4]
 8019f94:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019f96:	43db      	mvns	r3, r3
 8019f98:	b2db      	uxtb	r3, r3
 8019f9a:	3404      	adds	r4, #4
 8019f9c:	930b      	str	r3, [sp, #44]	; 0x2c
 8019f9e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019fa0:	2b00      	cmp	r3, #0
 8019fa2:	dc03      	bgt.n	8019fac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8019fa4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8019fa6:	2b00      	cmp	r3, #0
 8019fa8:	f340 8255 	ble.w	801a456 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8019fac:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019fae:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019fb2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019fb6:	1e48      	subs	r0, r1, #1
 8019fb8:	1e55      	subs	r5, r2, #1
 8019fba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019fbc:	2b00      	cmp	r3, #0
 8019fbe:	f340 80f9 	ble.w	801a1b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8019fc2:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8019fc4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019fc6:	1436      	asrs	r6, r6, #16
 8019fc8:	ea4f 4323 	mov.w	r3, r3, asr #16
 8019fcc:	d406      	bmi.n	8019fdc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019fce:	4286      	cmp	r6, r0
 8019fd0:	da04      	bge.n	8019fdc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019fd2:	2b00      	cmp	r3, #0
 8019fd4:	db02      	blt.n	8019fdc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019fd6:	42ab      	cmp	r3, r5
 8019fd8:	f2c0 80ed 	blt.w	801a1b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8019fdc:	3601      	adds	r6, #1
 8019fde:	f100 80da 	bmi.w	801a196 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019fe2:	42b1      	cmp	r1, r6
 8019fe4:	f2c0 80d7 	blt.w	801a196 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019fe8:	3301      	adds	r3, #1
 8019fea:	f100 80d4 	bmi.w	801a196 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019fee:	429a      	cmp	r2, r3
 8019ff0:	f2c0 80d1 	blt.w	801a196 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019ff4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019ff6:	9311      	str	r3, [sp, #68]	; 0x44
 8019ff8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019ffa:	930c      	str	r3, [sp, #48]	; 0x30
 8019ffc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019ffe:	2b00      	cmp	r3, #0
 801a000:	f340 80fa 	ble.w	801a1f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801a004:	9826      	ldr	r0, [sp, #152]	; 0x98
 801a006:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a008:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a00a:	68c6      	ldr	r6, [r0, #12]
 801a00c:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801a00e:	141d      	asrs	r5, r3, #16
 801a010:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801a014:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a016:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801a018:	1400      	asrs	r0, r0, #16
 801a01a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801a01e:	6892      	ldr	r2, [r2, #8]
 801a020:	f100 813e 	bmi.w	801a2a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a024:	1e57      	subs	r7, r2, #1
 801a026:	42b8      	cmp	r0, r7
 801a028:	f280 813a 	bge.w	801a2a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a02c:	2d00      	cmp	r5, #0
 801a02e:	f2c0 8137 	blt.w	801a2a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a032:	1e77      	subs	r7, r6, #1
 801a034:	42bd      	cmp	r5, r7
 801a036:	f280 8133 	bge.w	801a2a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a03a:	b212      	sxth	r2, r2
 801a03c:	fb05 0002 	mla	r0, r5, r2, r0
 801a040:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a042:	f815 a000 	ldrb.w	sl, [r5, r0]
 801a046:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801a04a:	182e      	adds	r6, r5, r0
 801a04c:	eb04 050a 	add.w	r5, r4, sl
 801a050:	2b00      	cmp	r3, #0
 801a052:	f000 8117 	beq.w	801a284 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801a056:	f896 c001 	ldrb.w	ip, [r6, #1]
 801a05a:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801a05e:	44a4      	add	ip, r4
 801a060:	2900      	cmp	r1, #0
 801a062:	f000 8117 	beq.w	801a294 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801a066:	18b0      	adds	r0, r6, r2
 801a068:	5cb2      	ldrb	r2, [r6, r2]
 801a06a:	7840      	ldrb	r0, [r0, #1]
 801a06c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a070:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a074:	4422      	add	r2, r4
 801a076:	4420      	add	r0, r4
 801a078:	b29b      	uxth	r3, r3
 801a07a:	b289      	uxth	r1, r1
 801a07c:	fb03 f901 	mul.w	r9, r3, r1
 801a080:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a084:	011b      	lsls	r3, r3, #4
 801a086:	b289      	uxth	r1, r1
 801a088:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801a08c:	f895 b002 	ldrb.w	fp, [r5, #2]
 801a090:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801a092:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801a096:	f8b6 e000 	ldrh.w	lr, [r6]
 801a09a:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801a09e:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801a0a2:	eba3 0309 	sub.w	r3, r3, r9
 801a0a6:	b29b      	uxth	r3, r3
 801a0a8:	eba8 0801 	sub.w	r8, r8, r1
 801a0ac:	fa1f f888 	uxth.w	r8, r8
 801a0b0:	435f      	muls	r7, r3
 801a0b2:	fb08 770b 	mla	r7, r8, fp, r7
 801a0b6:	f892 b002 	ldrb.w	fp, [r2, #2]
 801a0ba:	9310      	str	r3, [sp, #64]	; 0x40
 801a0bc:	fb01 770b 	mla	r7, r1, fp, r7
 801a0c0:	f890 b002 	ldrb.w	fp, [r0, #2]
 801a0c4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a0c6:	fb09 770b 	mla	r7, r9, fp, r7
 801a0ca:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801a0ce:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801a0d2:	fb1b fb03 	smulbb	fp, fp, r3
 801a0d6:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801a0da:	fb07 b706 	mla	r7, r7, r6, fp
 801a0de:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a0e0:	f895 b001 	ldrb.w	fp, [r5, #1]
 801a0e4:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801a0e8:	f89c c000 	ldrb.w	ip, [ip]
 801a0ec:	435d      	muls	r5, r3
 801a0ee:	fb08 550b 	mla	r5, r8, fp, r5
 801a0f2:	f892 b001 	ldrb.w	fp, [r2, #1]
 801a0f6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a0f8:	fb01 550b 	mla	r5, r1, fp, r5
 801a0fc:	f890 b001 	ldrb.w	fp, [r0, #1]
 801a100:	fb09 550b 	mla	r5, r9, fp, r5
 801a104:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801a108:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801a10c:	fb1b fb03 	smulbb	fp, fp, r3
 801a110:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a112:	fb03 f30c 	mul.w	r3, r3, ip
 801a116:	f892 c000 	ldrb.w	ip, [r2]
 801a11a:	fb08 330a 	mla	r3, r8, sl, r3
 801a11e:	fb01 330c 	mla	r3, r1, ip, r3
 801a122:	f890 c000 	ldrb.w	ip, [r0]
 801a126:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a12a:	fb09 3c0c 	mla	ip, r9, ip, r3
 801a12e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a130:	fa5f fe8e 	uxtb.w	lr, lr
 801a134:	b2bf      	uxth	r7, r7
 801a136:	fb1e fe03 	smulbb	lr, lr, r3
 801a13a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801a13e:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801a142:	fb05 b506 	mla	r5, r5, r6, fp
 801a146:	1c7b      	adds	r3, r7, #1
 801a148:	fb0c e606 	mla	r6, ip, r6, lr
 801a14c:	b2ad      	uxth	r5, r5
 801a14e:	b2b6      	uxth	r6, r6
 801a150:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801a154:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801a158:	f105 0b01 	add.w	fp, r5, #1
 801a15c:	1c77      	adds	r7, r6, #1
 801a15e:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801a162:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801a166:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a16a:	096d      	lsrs	r5, r5, #5
 801a16c:	431f      	orrs	r7, r3
 801a16e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a172:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a174:	433d      	orrs	r5, r7
 801a176:	801d      	strh	r5, [r3, #0]
 801a178:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a17a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801a17c:	3302      	adds	r3, #2
 801a17e:	930c      	str	r3, [sp, #48]	; 0x30
 801a180:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a182:	4413      	add	r3, r2
 801a184:	931f      	str	r3, [sp, #124]	; 0x7c
 801a186:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801a188:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a18a:	4413      	add	r3, r2
 801a18c:	9320      	str	r3, [sp, #128]	; 0x80
 801a18e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a190:	3b01      	subs	r3, #1
 801a192:	9311      	str	r3, [sp, #68]	; 0x44
 801a194:	e732      	b.n	8019ffc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a196:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a198:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801a19a:	4433      	add	r3, r6
 801a19c:	931f      	str	r3, [sp, #124]	; 0x7c
 801a19e:	9e22      	ldr	r6, [sp, #136]	; 0x88
 801a1a0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a1a2:	4433      	add	r3, r6
 801a1a4:	9320      	str	r3, [sp, #128]	; 0x80
 801a1a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a1a8:	3b01      	subs	r3, #1
 801a1aa:	9309      	str	r3, [sp, #36]	; 0x24
 801a1ac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a1ae:	3302      	adds	r3, #2
 801a1b0:	930a      	str	r3, [sp, #40]	; 0x28
 801a1b2:	e702      	b.n	8019fba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801a1b4:	d027      	beq.n	801a206 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801a1b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a1b8:	9821      	ldr	r0, [sp, #132]	; 0x84
 801a1ba:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801a1bc:	3b01      	subs	r3, #1
 801a1be:	fb00 5003 	mla	r0, r0, r3, r5
 801a1c2:	1400      	asrs	r0, r0, #16
 801a1c4:	f53f af16 	bmi.w	8019ff4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a1c8:	3901      	subs	r1, #1
 801a1ca:	4288      	cmp	r0, r1
 801a1cc:	f6bf af12 	bge.w	8019ff4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a1d0:	9922      	ldr	r1, [sp, #136]	; 0x88
 801a1d2:	9820      	ldr	r0, [sp, #128]	; 0x80
 801a1d4:	fb01 0303 	mla	r3, r1, r3, r0
 801a1d8:	141b      	asrs	r3, r3, #16
 801a1da:	f53f af0b 	bmi.w	8019ff4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a1de:	3a01      	subs	r2, #1
 801a1e0:	4293      	cmp	r3, r2
 801a1e2:	f6bf af07 	bge.w	8019ff4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a1e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a1e8:	9311      	str	r3, [sp, #68]	; 0x44
 801a1ea:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801a1ee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a1f0:	930c      	str	r3, [sp, #48]	; 0x30
 801a1f2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a1f4:	2b00      	cmp	r3, #0
 801a1f6:	dc70      	bgt.n	801a2da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801a1f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a1fa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801a1fc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a200:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a204:	930a      	str	r3, [sp, #40]	; 0x28
 801a206:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a208:	2b00      	cmp	r3, #0
 801a20a:	f340 8124 	ble.w	801a456 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801a20e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a212:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a216:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a21a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a21c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a220:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a224:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a228:	eef0 6a62 	vmov.f32	s13, s5
 801a22c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a230:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a234:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a238:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801a23c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a240:	eef0 6a43 	vmov.f32	s13, s6
 801a244:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a248:	ee12 2a90 	vmov	r2, s5
 801a24c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a250:	fb92 f3f3 	sdiv	r3, r2, r3
 801a254:	ee13 2a10 	vmov	r2, s6
 801a258:	9321      	str	r3, [sp, #132]	; 0x84
 801a25a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a25c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a260:	9322      	str	r3, [sp, #136]	; 0x88
 801a262:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a264:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a266:	3b01      	subs	r3, #1
 801a268:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a26c:	930e      	str	r3, [sp, #56]	; 0x38
 801a26e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a270:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801a274:	bf08      	it	eq
 801a276:	4613      	moveq	r3, r2
 801a278:	9309      	str	r3, [sp, #36]	; 0x24
 801a27a:	eeb0 3a67 	vmov.f32	s6, s15
 801a27e:	eef0 2a47 	vmov.f32	s5, s14
 801a282:	e68c      	b.n	8019f9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a284:	b149      	cbz	r1, 801a29a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801a286:	5cb2      	ldrb	r2, [r6, r2]
 801a288:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a28c:	4422      	add	r2, r4
 801a28e:	4628      	mov	r0, r5
 801a290:	46ac      	mov	ip, r5
 801a292:	e6f1      	b.n	801a078 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a294:	4628      	mov	r0, r5
 801a296:	462a      	mov	r2, r5
 801a298:	e6ee      	b.n	801a078 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a29a:	4628      	mov	r0, r5
 801a29c:	462a      	mov	r2, r5
 801a29e:	e7f7      	b.n	801a290 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801a2a0:	1c47      	adds	r7, r0, #1
 801a2a2:	f53f af69 	bmi.w	801a178 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a2a6:	42ba      	cmp	r2, r7
 801a2a8:	f6ff af66 	blt.w	801a178 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a2ac:	1c6f      	adds	r7, r5, #1
 801a2ae:	f53f af63 	bmi.w	801a178 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a2b2:	42be      	cmp	r6, r7
 801a2b4:	f6ff af60 	blt.w	801a178 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a2b8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801a2ba:	9002      	str	r0, [sp, #8]
 801a2bc:	b236      	sxth	r6, r6
 801a2be:	b212      	sxth	r2, r2
 801a2c0:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801a2c4:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801a2c8:	9200      	str	r2, [sp, #0]
 801a2ca:	9601      	str	r6, [sp, #4]
 801a2cc:	4623      	mov	r3, r4
 801a2ce:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801a2d2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a2d4:	f7ff fd59 	bl	8019d8a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801a2d8:	e74e      	b.n	801a178 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a2da:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a2dc:	9820      	ldr	r0, [sp, #128]	; 0x80
 801a2de:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801a2e0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a2e2:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801a2e6:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801a2e8:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801a2ec:	142d      	asrs	r5, r5, #16
 801a2ee:	1400      	asrs	r0, r0, #16
 801a2f0:	fb02 5000 	mla	r0, r2, r0, r5
 801a2f4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a2f6:	f815 9000 	ldrb.w	r9, [r5, r0]
 801a2fa:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801a2fe:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801a302:	182e      	adds	r6, r5, r0
 801a304:	eb04 0509 	add.w	r5, r4, r9
 801a308:	2b00      	cmp	r3, #0
 801a30a:	f000 8096 	beq.w	801a43a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801a30e:	7877      	ldrb	r7, [r6, #1]
 801a310:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a314:	4427      	add	r7, r4
 801a316:	2900      	cmp	r1, #0
 801a318:	f000 8097 	beq.w	801a44a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801a31c:	18b0      	adds	r0, r6, r2
 801a31e:	5cb2      	ldrb	r2, [r6, r2]
 801a320:	7840      	ldrb	r0, [r0, #1]
 801a322:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a326:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a32a:	4422      	add	r2, r4
 801a32c:	4420      	add	r0, r4
 801a32e:	b29b      	uxth	r3, r3
 801a330:	b289      	uxth	r1, r1
 801a332:	fb03 f801 	mul.w	r8, r3, r1
 801a336:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801a338:	f895 b002 	ldrb.w	fp, [r5, #2]
 801a33c:	f8b6 c000 	ldrh.w	ip, [r6]
 801a340:	78be      	ldrb	r6, [r7, #2]
 801a342:	f814 9009 	ldrb.w	r9, [r4, r9]
 801a346:	011b      	lsls	r3, r3, #4
 801a348:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801a34c:	b289      	uxth	r1, r1
 801a34e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801a352:	eba3 0308 	sub.w	r3, r3, r8
 801a356:	b29b      	uxth	r3, r3
 801a358:	ebae 0e01 	sub.w	lr, lr, r1
 801a35c:	fa1f fe8e 	uxth.w	lr, lr
 801a360:	435e      	muls	r6, r3
 801a362:	fb0e 660b 	mla	r6, lr, fp, r6
 801a366:	f892 b002 	ldrb.w	fp, [r2, #2]
 801a36a:	9310      	str	r3, [sp, #64]	; 0x40
 801a36c:	fb01 660b 	mla	r6, r1, fp, r6
 801a370:	f890 b002 	ldrb.w	fp, [r0, #2]
 801a374:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a376:	fb08 660b 	mla	r6, r8, fp, r6
 801a37a:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801a37e:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801a382:	fb1b fb03 	smulbb	fp, fp, r3
 801a386:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801a38a:	fb06 b60a 	mla	r6, r6, sl, fp
 801a38e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a390:	f895 b001 	ldrb.w	fp, [r5, #1]
 801a394:	787d      	ldrb	r5, [r7, #1]
 801a396:	783f      	ldrb	r7, [r7, #0]
 801a398:	435d      	muls	r5, r3
 801a39a:	fb0e 550b 	mla	r5, lr, fp, r5
 801a39e:	f892 b001 	ldrb.w	fp, [r2, #1]
 801a3a2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a3a4:	fb01 550b 	mla	r5, r1, fp, r5
 801a3a8:	f890 b001 	ldrb.w	fp, [r0, #1]
 801a3ac:	fb08 550b 	mla	r5, r8, fp, r5
 801a3b0:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801a3b4:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801a3b8:	fb1b fb03 	smulbb	fp, fp, r3
 801a3bc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a3be:	437b      	muls	r3, r7
 801a3c0:	7817      	ldrb	r7, [r2, #0]
 801a3c2:	fb0e 3309 	mla	r3, lr, r9, r3
 801a3c6:	fb01 3307 	mla	r3, r1, r7, r3
 801a3ca:	7807      	ldrb	r7, [r0, #0]
 801a3cc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a3d0:	fb08 3707 	mla	r7, r8, r7, r3
 801a3d4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a3d6:	fa5f fc8c 	uxtb.w	ip, ip
 801a3da:	fb1c fc03 	smulbb	ip, ip, r3
 801a3de:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801a3e2:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801a3e6:	fb05 b50a 	mla	r5, r5, sl, fp
 801a3ea:	fb07 c70a 	mla	r7, r7, sl, ip
 801a3ee:	b2b6      	uxth	r6, r6
 801a3f0:	b2ad      	uxth	r5, r5
 801a3f2:	b2bf      	uxth	r7, r7
 801a3f4:	1c73      	adds	r3, r6, #1
 801a3f6:	1c7a      	adds	r2, r7, #1
 801a3f8:	f105 0b01 	add.w	fp, r5, #1
 801a3fc:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801a400:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801a404:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801a408:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a40c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801a410:	096d      	lsrs	r5, r5, #5
 801a412:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a414:	4316      	orrs	r6, r2
 801a416:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a41a:	432e      	orrs	r6, r5
 801a41c:	f823 6b02 	strh.w	r6, [r3], #2
 801a420:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801a422:	930c      	str	r3, [sp, #48]	; 0x30
 801a424:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a426:	4413      	add	r3, r2
 801a428:	931f      	str	r3, [sp, #124]	; 0x7c
 801a42a:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801a42c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a42e:	4413      	add	r3, r2
 801a430:	9320      	str	r3, [sp, #128]	; 0x80
 801a432:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a434:	3b01      	subs	r3, #1
 801a436:	9311      	str	r3, [sp, #68]	; 0x44
 801a438:	e6db      	b.n	801a1f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801a43a:	b149      	cbz	r1, 801a450 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801a43c:	5cb2      	ldrb	r2, [r6, r2]
 801a43e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a442:	4422      	add	r2, r4
 801a444:	4628      	mov	r0, r5
 801a446:	462f      	mov	r7, r5
 801a448:	e771      	b.n	801a32e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801a44a:	4628      	mov	r0, r5
 801a44c:	462a      	mov	r2, r5
 801a44e:	e76e      	b.n	801a32e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801a450:	4628      	mov	r0, r5
 801a452:	462a      	mov	r2, r5
 801a454:	e7f7      	b.n	801a446 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801a456:	b015      	add	sp, #84	; 0x54
 801a458:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a45c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801a45c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a460:	880f      	ldrh	r7, [r1, #0]
 801a462:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801a466:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801a46a:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801a46e:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801a472:	023c      	lsls	r4, r7, #8
 801a474:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801a478:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801a47c:	017c      	lsls	r4, r7, #5
 801a47e:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801a482:	00ff      	lsls	r7, r7, #3
 801a484:	ea4b 0404 	orr.w	r4, fp, r4
 801a488:	b2ff      	uxtb	r7, r7
 801a48a:	fb05 ca0e 	mla	sl, r5, lr, ip
 801a48e:	4327      	orrs	r7, r4
 801a490:	2d00      	cmp	r5, #0
 801a492:	eb02 080a 	add.w	r8, r2, sl
 801a496:	9701      	str	r7, [sp, #4]
 801a498:	db7e      	blt.n	801a598 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801a49a:	45a9      	cmp	r9, r5
 801a49c:	dd7c      	ble.n	801a598 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801a49e:	f1bc 0f00 	cmp.w	ip, #0
 801a4a2:	db77      	blt.n	801a594 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801a4a4:	45e6      	cmp	lr, ip
 801a4a6:	dd75      	ble.n	801a594 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801a4a8:	f812 700a 	ldrb.w	r7, [r2, sl]
 801a4ac:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a4b0:	441f      	add	r7, r3
 801a4b2:	f11c 0201 	adds.w	r2, ip, #1
 801a4b6:	d472      	bmi.n	801a59e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a4b8:	4596      	cmp	lr, r2
 801a4ba:	dd70      	ble.n	801a59e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a4bc:	2800      	cmp	r0, #0
 801a4be:	d06e      	beq.n	801a59e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a4c0:	f898 4001 	ldrb.w	r4, [r8, #1]
 801a4c4:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801a4c8:	441c      	add	r4, r3
 801a4ca:	3501      	adds	r5, #1
 801a4cc:	d46b      	bmi.n	801a5a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a4ce:	45a9      	cmp	r9, r5
 801a4d0:	dd69      	ble.n	801a5a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a4d2:	2e00      	cmp	r6, #0
 801a4d4:	d067      	beq.n	801a5a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a4d6:	f1bc 0f00 	cmp.w	ip, #0
 801a4da:	db62      	blt.n	801a5a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801a4dc:	45e6      	cmp	lr, ip
 801a4de:	dd60      	ble.n	801a5a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801a4e0:	f818 500e 	ldrb.w	r5, [r8, lr]
 801a4e4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801a4e8:	441d      	add	r5, r3
 801a4ea:	f11c 0201 	adds.w	r2, ip, #1
 801a4ee:	d45d      	bmi.n	801a5ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a4f0:	4596      	cmp	lr, r2
 801a4f2:	dd5b      	ble.n	801a5ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a4f4:	2800      	cmp	r0, #0
 801a4f6:	d059      	beq.n	801a5ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a4f8:	44c6      	add	lr, r8
 801a4fa:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801a4fe:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a502:	4413      	add	r3, r2
 801a504:	b280      	uxth	r0, r0
 801a506:	b2b2      	uxth	r2, r6
 801a508:	fb00 f602 	mul.w	r6, r0, r2
 801a50c:	0100      	lsls	r0, r0, #4
 801a50e:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801a512:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801a516:	1b80      	subs	r0, r0, r6
 801a518:	fa1f fc82 	uxth.w	ip, r2
 801a51c:	b282      	uxth	r2, r0
 801a51e:	78a0      	ldrb	r0, [r4, #2]
 801a520:	f897 e002 	ldrb.w	lr, [r7, #2]
 801a524:	f897 9000 	ldrb.w	r9, [r7]
 801a528:	787f      	ldrb	r7, [r7, #1]
 801a52a:	eba8 080c 	sub.w	r8, r8, ip
 801a52e:	fa1f f888 	uxth.w	r8, r8
 801a532:	4350      	muls	r0, r2
 801a534:	fb08 0e0e 	mla	lr, r8, lr, r0
 801a538:	78a8      	ldrb	r0, [r5, #2]
 801a53a:	fb0c e000 	mla	r0, ip, r0, lr
 801a53e:	f893 e002 	ldrb.w	lr, [r3, #2]
 801a542:	fb06 0e0e 	mla	lr, r6, lr, r0
 801a546:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801a54a:	f894 e000 	ldrb.w	lr, [r4]
 801a54e:	fb02 fe0e 	mul.w	lr, r2, lr
 801a552:	fb08 e909 	mla	r9, r8, r9, lr
 801a556:	f895 e000 	ldrb.w	lr, [r5]
 801a55a:	fb0c 990e 	mla	r9, ip, lr, r9
 801a55e:	f893 e000 	ldrb.w	lr, [r3]
 801a562:	785b      	ldrb	r3, [r3, #1]
 801a564:	fb06 9e0e 	mla	lr, r6, lr, r9
 801a568:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801a56c:	ea4e 0e00 	orr.w	lr, lr, r0
 801a570:	7860      	ldrb	r0, [r4, #1]
 801a572:	4350      	muls	r0, r2
 801a574:	786a      	ldrb	r2, [r5, #1]
 801a576:	fb08 0007 	mla	r0, r8, r7, r0
 801a57a:	fb0c 0202 	mla	r2, ip, r2, r0
 801a57e:	fb06 2303 	mla	r3, r6, r3, r2
 801a582:	095b      	lsrs	r3, r3, #5
 801a584:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a588:	ea4e 0303 	orr.w	r3, lr, r3
 801a58c:	800b      	strh	r3, [r1, #0]
 801a58e:	b003      	add	sp, #12
 801a590:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a594:	af01      	add	r7, sp, #4
 801a596:	e78c      	b.n	801a4b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801a598:	ac01      	add	r4, sp, #4
 801a59a:	4627      	mov	r7, r4
 801a59c:	e795      	b.n	801a4ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801a59e:	ac01      	add	r4, sp, #4
 801a5a0:	e793      	b.n	801a4ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801a5a2:	ad01      	add	r5, sp, #4
 801a5a4:	e7a1      	b.n	801a4ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801a5a6:	ab01      	add	r3, sp, #4
 801a5a8:	461d      	mov	r5, r3
 801a5aa:	e7ab      	b.n	801a504 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801a5ac:	ab01      	add	r3, sp, #4
 801a5ae:	e7a9      	b.n	801a504 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801a5b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a5b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a5b4:	b08f      	sub	sp, #60	; 0x3c
 801a5b6:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801a5ba:	920c      	str	r2, [sp, #48]	; 0x30
 801a5bc:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801a5be:	910a      	str	r1, [sp, #40]	; 0x28
 801a5c0:	9306      	str	r3, [sp, #24]
 801a5c2:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801a5c6:	900d      	str	r0, [sp, #52]	; 0x34
 801a5c8:	6850      	ldr	r0, [r2, #4]
 801a5ca:	6812      	ldr	r2, [r2, #0]
 801a5cc:	fb00 1303 	mla	r3, r0, r3, r1
 801a5d0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a5d4:	9307      	str	r3, [sp, #28]
 801a5d6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a5d8:	681b      	ldr	r3, [r3, #0]
 801a5da:	9308      	str	r3, [sp, #32]
 801a5dc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a5de:	685c      	ldr	r4, [r3, #4]
 801a5e0:	3404      	adds	r4, #4
 801a5e2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a5e4:	2b00      	cmp	r3, #0
 801a5e6:	dc03      	bgt.n	801a5f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801a5e8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a5ea:	2b00      	cmp	r3, #0
 801a5ec:	f340 81d6 	ble.w	801a99c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801a5f0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a5f2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a5f6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a5fa:	1e48      	subs	r0, r1, #1
 801a5fc:	1e56      	subs	r6, r2, #1
 801a5fe:	9b06      	ldr	r3, [sp, #24]
 801a600:	2b00      	cmp	r3, #0
 801a602:	f340 80b7 	ble.w	801a774 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801a606:	ea5f 472b 	movs.w	r7, fp, asr #16
 801a60a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801a60e:	d406      	bmi.n	801a61e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a610:	4287      	cmp	r7, r0
 801a612:	da04      	bge.n	801a61e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a614:	2b00      	cmp	r3, #0
 801a616:	db02      	blt.n	801a61e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a618:	42b3      	cmp	r3, r6
 801a61a:	f2c0 80ac 	blt.w	801a776 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801a61e:	3701      	adds	r7, #1
 801a620:	f100 809d 	bmi.w	801a75e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a624:	42b9      	cmp	r1, r7
 801a626:	f2c0 809a 	blt.w	801a75e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a62a:	3301      	adds	r3, #1
 801a62c:	f100 8097 	bmi.w	801a75e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a630:	429a      	cmp	r2, r3
 801a632:	f2c0 8094 	blt.w	801a75e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a636:	9b06      	ldr	r3, [sp, #24]
 801a638:	930b      	str	r3, [sp, #44]	; 0x2c
 801a63a:	9b07      	ldr	r3, [sp, #28]
 801a63c:	9309      	str	r3, [sp, #36]	; 0x24
 801a63e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a640:	2b00      	cmp	r3, #0
 801a642:	f340 80b5 	ble.w	801a7b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801a646:	9820      	ldr	r0, [sp, #128]	; 0x80
 801a648:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a64a:	68c7      	ldr	r7, [r0, #12]
 801a64c:	6892      	ldr	r2, [r2, #8]
 801a64e:	ea5f 402b 	movs.w	r0, fp, asr #16
 801a652:	ea4f 4625 	mov.w	r6, r5, asr #16
 801a656:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801a65a:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801a65e:	f100 80fb 	bmi.w	801a858 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a662:	f102 3cff 	add.w	ip, r2, #4294967295
 801a666:	4560      	cmp	r0, ip
 801a668:	f280 80f6 	bge.w	801a858 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a66c:	2e00      	cmp	r6, #0
 801a66e:	f2c0 80f3 	blt.w	801a858 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a672:	f107 3cff 	add.w	ip, r7, #4294967295
 801a676:	4566      	cmp	r6, ip
 801a678:	f280 80ee 	bge.w	801a858 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a67c:	b212      	sxth	r2, r2
 801a67e:	fb06 0002 	mla	r0, r6, r2, r0
 801a682:	9e08      	ldr	r6, [sp, #32]
 801a684:	1837      	adds	r7, r6, r0
 801a686:	5c30      	ldrb	r0, [r6, r0]
 801a688:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801a68c:	eb04 0c08 	add.w	ip, r4, r8
 801a690:	2b00      	cmp	r3, #0
 801a692:	f000 80d3 	beq.w	801a83c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a696:	787e      	ldrb	r6, [r7, #1]
 801a698:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a69c:	4426      	add	r6, r4
 801a69e:	2900      	cmp	r1, #0
 801a6a0:	f000 80d4 	beq.w	801a84c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801a6a4:	18b8      	adds	r0, r7, r2
 801a6a6:	5cba      	ldrb	r2, [r7, r2]
 801a6a8:	7840      	ldrb	r0, [r0, #1]
 801a6aa:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a6ae:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a6b2:	4422      	add	r2, r4
 801a6b4:	4420      	add	r0, r4
 801a6b6:	b29b      	uxth	r3, r3
 801a6b8:	b289      	uxth	r1, r1
 801a6ba:	fb03 f901 	mul.w	r9, r3, r1
 801a6be:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a6c2:	011b      	lsls	r3, r3, #4
 801a6c4:	b289      	uxth	r1, r1
 801a6c6:	78b7      	ldrb	r7, [r6, #2]
 801a6c8:	f89c a002 	ldrb.w	sl, [ip, #2]
 801a6cc:	f89c c001 	ldrb.w	ip, [ip, #1]
 801a6d0:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801a6d4:	eba3 0309 	sub.w	r3, r3, r9
 801a6d8:	b29b      	uxth	r3, r3
 801a6da:	ebae 0e01 	sub.w	lr, lr, r1
 801a6de:	fa1f fe8e 	uxth.w	lr, lr
 801a6e2:	435f      	muls	r7, r3
 801a6e4:	fb0e 770a 	mla	r7, lr, sl, r7
 801a6e8:	f892 a002 	ldrb.w	sl, [r2, #2]
 801a6ec:	fb01 770a 	mla	r7, r1, sl, r7
 801a6f0:	f890 a002 	ldrb.w	sl, [r0, #2]
 801a6f4:	fb09 7a0a 	mla	sl, r9, sl, r7
 801a6f8:	f814 7008 	ldrb.w	r7, [r4, r8]
 801a6fc:	f896 8000 	ldrb.w	r8, [r6]
 801a700:	7876      	ldrb	r6, [r6, #1]
 801a702:	fb03 f808 	mul.w	r8, r3, r8
 801a706:	fb0e 8807 	mla	r8, lr, r7, r8
 801a70a:	7817      	ldrb	r7, [r2, #0]
 801a70c:	fb01 8807 	mla	r8, r1, r7, r8
 801a710:	7807      	ldrb	r7, [r0, #0]
 801a712:	fb09 8707 	mla	r7, r9, r7, r8
 801a716:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801a71a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a71e:	ea47 070a 	orr.w	r7, r7, sl
 801a722:	4373      	muls	r3, r6
 801a724:	f892 a001 	ldrb.w	sl, [r2, #1]
 801a728:	fb0e 330c 	mla	r3, lr, ip, r3
 801a72c:	fb01 310a 	mla	r1, r1, sl, r3
 801a730:	f890 a001 	ldrb.w	sl, [r0, #1]
 801a734:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a736:	fb09 1a0a 	mla	sl, r9, sl, r1
 801a73a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a73e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a742:	ea47 070a 	orr.w	r7, r7, sl
 801a746:	801f      	strh	r7, [r3, #0]
 801a748:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a74a:	3302      	adds	r3, #2
 801a74c:	9309      	str	r3, [sp, #36]	; 0x24
 801a74e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a750:	449b      	add	fp, r3
 801a752:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a754:	441d      	add	r5, r3
 801a756:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a758:	3b01      	subs	r3, #1
 801a75a:	930b      	str	r3, [sp, #44]	; 0x2c
 801a75c:	e76f      	b.n	801a63e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801a75e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a760:	449b      	add	fp, r3
 801a762:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a764:	441d      	add	r5, r3
 801a766:	9b06      	ldr	r3, [sp, #24]
 801a768:	3b01      	subs	r3, #1
 801a76a:	9306      	str	r3, [sp, #24]
 801a76c:	9b07      	ldr	r3, [sp, #28]
 801a76e:	3302      	adds	r3, #2
 801a770:	9307      	str	r3, [sp, #28]
 801a772:	e744      	b.n	801a5fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801a774:	d023      	beq.n	801a7be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801a776:	9b06      	ldr	r3, [sp, #24]
 801a778:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801a77a:	3b01      	subs	r3, #1
 801a77c:	fb00 b003 	mla	r0, r0, r3, fp
 801a780:	1400      	asrs	r0, r0, #16
 801a782:	f53f af58 	bmi.w	801a636 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a786:	3901      	subs	r1, #1
 801a788:	4288      	cmp	r0, r1
 801a78a:	f6bf af54 	bge.w	801a636 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a78e:	991c      	ldr	r1, [sp, #112]	; 0x70
 801a790:	fb01 5303 	mla	r3, r1, r3, r5
 801a794:	141b      	asrs	r3, r3, #16
 801a796:	f53f af4e 	bmi.w	801a636 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a79a:	3a01      	subs	r2, #1
 801a79c:	4293      	cmp	r3, r2
 801a79e:	f6bf af4a 	bge.w	801a636 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a7a2:	9b06      	ldr	r3, [sp, #24]
 801a7a4:	9309      	str	r3, [sp, #36]	; 0x24
 801a7a6:	9b07      	ldr	r3, [sp, #28]
 801a7a8:	930b      	str	r3, [sp, #44]	; 0x2c
 801a7aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a7ac:	2b00      	cmp	r3, #0
 801a7ae:	dc70      	bgt.n	801a892 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801a7b0:	9b06      	ldr	r3, [sp, #24]
 801a7b2:	9a07      	ldr	r2, [sp, #28]
 801a7b4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a7b8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a7bc:	9307      	str	r3, [sp, #28]
 801a7be:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a7c0:	2b00      	cmp	r3, #0
 801a7c2:	f340 80eb 	ble.w	801a99c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801a7c6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a7ca:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a7ce:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a7d2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a7d4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a7d8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a7dc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a7e0:	eef0 6a62 	vmov.f32	s13, s5
 801a7e4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a7e8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a7ec:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a7f0:	ee16 ba90 	vmov	fp, s13
 801a7f4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a7f8:	eef0 6a43 	vmov.f32	s13, s6
 801a7fc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a800:	ee12 2a90 	vmov	r2, s5
 801a804:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a808:	fb92 f3f3 	sdiv	r3, r2, r3
 801a80c:	ee13 2a10 	vmov	r2, s6
 801a810:	931b      	str	r3, [sp, #108]	; 0x6c
 801a812:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a814:	fb92 f3f3 	sdiv	r3, r2, r3
 801a818:	931c      	str	r3, [sp, #112]	; 0x70
 801a81a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a81c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801a81e:	3b01      	subs	r3, #1
 801a820:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a824:	930a      	str	r3, [sp, #40]	; 0x28
 801a826:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a828:	bf08      	it	eq
 801a82a:	4613      	moveq	r3, r2
 801a82c:	ee16 5a90 	vmov	r5, s13
 801a830:	9306      	str	r3, [sp, #24]
 801a832:	eeb0 3a67 	vmov.f32	s6, s15
 801a836:	eef0 2a47 	vmov.f32	s5, s14
 801a83a:	e6d2      	b.n	801a5e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801a83c:	b149      	cbz	r1, 801a852 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801a83e:	5cba      	ldrb	r2, [r7, r2]
 801a840:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a844:	4422      	add	r2, r4
 801a846:	4660      	mov	r0, ip
 801a848:	4666      	mov	r6, ip
 801a84a:	e734      	b.n	801a6b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801a84c:	4660      	mov	r0, ip
 801a84e:	4662      	mov	r2, ip
 801a850:	e731      	b.n	801a6b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801a852:	4660      	mov	r0, ip
 801a854:	4662      	mov	r2, ip
 801a856:	e7f7      	b.n	801a848 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801a858:	f110 0c01 	adds.w	ip, r0, #1
 801a85c:	f53f af74 	bmi.w	801a748 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a860:	4562      	cmp	r2, ip
 801a862:	f6ff af71 	blt.w	801a748 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a866:	f116 0c01 	adds.w	ip, r6, #1
 801a86a:	f53f af6d 	bmi.w	801a748 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a86e:	4567      	cmp	r7, ip
 801a870:	f6ff af6a 	blt.w	801a748 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a874:	b23f      	sxth	r7, r7
 801a876:	b212      	sxth	r2, r2
 801a878:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801a87c:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801a880:	9200      	str	r2, [sp, #0]
 801a882:	9701      	str	r7, [sp, #4]
 801a884:	4623      	mov	r3, r4
 801a886:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801a88a:	980d      	ldr	r0, [sp, #52]	; 0x34
 801a88c:	f7ff fde6 	bl	801a45c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801a890:	e75a      	b.n	801a748 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a892:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a894:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801a898:	ea4f 462b 	mov.w	r6, fp, asr #16
 801a89c:	1428      	asrs	r0, r5, #16
 801a89e:	fb02 6000 	mla	r0, r2, r0, r6
 801a8a2:	9e08      	ldr	r6, [sp, #32]
 801a8a4:	f816 8000 	ldrb.w	r8, [r6, r0]
 801a8a8:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801a8ac:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801a8b0:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801a8b4:	1837      	adds	r7, r6, r0
 801a8b6:	eb04 0c08 	add.w	ip, r4, r8
 801a8ba:	2b00      	cmp	r3, #0
 801a8bc:	d060      	beq.n	801a980 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801a8be:	787e      	ldrb	r6, [r7, #1]
 801a8c0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a8c4:	4426      	add	r6, r4
 801a8c6:	2900      	cmp	r1, #0
 801a8c8:	d062      	beq.n	801a990 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801a8ca:	18b8      	adds	r0, r7, r2
 801a8cc:	5cba      	ldrb	r2, [r7, r2]
 801a8ce:	7840      	ldrb	r0, [r0, #1]
 801a8d0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a8d4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a8d8:	4422      	add	r2, r4
 801a8da:	4420      	add	r0, r4
 801a8dc:	b29b      	uxth	r3, r3
 801a8de:	b289      	uxth	r1, r1
 801a8e0:	fb03 f901 	mul.w	r9, r3, r1
 801a8e4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a8e8:	011b      	lsls	r3, r3, #4
 801a8ea:	b289      	uxth	r1, r1
 801a8ec:	78b7      	ldrb	r7, [r6, #2]
 801a8ee:	f89c a002 	ldrb.w	sl, [ip, #2]
 801a8f2:	f89c c001 	ldrb.w	ip, [ip, #1]
 801a8f6:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801a8fa:	eba3 0309 	sub.w	r3, r3, r9
 801a8fe:	b29b      	uxth	r3, r3
 801a900:	ebae 0e01 	sub.w	lr, lr, r1
 801a904:	fa1f fe8e 	uxth.w	lr, lr
 801a908:	435f      	muls	r7, r3
 801a90a:	fb0e 770a 	mla	r7, lr, sl, r7
 801a90e:	f892 a002 	ldrb.w	sl, [r2, #2]
 801a912:	fb01 770a 	mla	r7, r1, sl, r7
 801a916:	f890 a002 	ldrb.w	sl, [r0, #2]
 801a91a:	fb09 7a0a 	mla	sl, r9, sl, r7
 801a91e:	f814 7008 	ldrb.w	r7, [r4, r8]
 801a922:	f896 8000 	ldrb.w	r8, [r6]
 801a926:	7876      	ldrb	r6, [r6, #1]
 801a928:	fb03 f808 	mul.w	r8, r3, r8
 801a92c:	fb0e 8807 	mla	r8, lr, r7, r8
 801a930:	7817      	ldrb	r7, [r2, #0]
 801a932:	fb01 8807 	mla	r8, r1, r7, r8
 801a936:	7807      	ldrb	r7, [r0, #0]
 801a938:	fb09 8707 	mla	r7, r9, r7, r8
 801a93c:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801a940:	4373      	muls	r3, r6
 801a942:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a946:	7856      	ldrb	r6, [r2, #1]
 801a948:	ea47 070a 	orr.w	r7, r7, sl
 801a94c:	fb0e 330c 	mla	r3, lr, ip, r3
 801a950:	f890 a001 	ldrb.w	sl, [r0, #1]
 801a954:	fb01 3306 	mla	r3, r1, r6, r3
 801a958:	fb09 3a0a 	mla	sl, r9, sl, r3
 801a95c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a960:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a962:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a966:	ea47 070a 	orr.w	r7, r7, sl
 801a96a:	f823 7b02 	strh.w	r7, [r3], #2
 801a96e:	930b      	str	r3, [sp, #44]	; 0x2c
 801a970:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a972:	449b      	add	fp, r3
 801a974:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a976:	441d      	add	r5, r3
 801a978:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a97a:	3b01      	subs	r3, #1
 801a97c:	9309      	str	r3, [sp, #36]	; 0x24
 801a97e:	e714      	b.n	801a7aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801a980:	b149      	cbz	r1, 801a996 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801a982:	5cba      	ldrb	r2, [r7, r2]
 801a984:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a988:	4422      	add	r2, r4
 801a98a:	4660      	mov	r0, ip
 801a98c:	4666      	mov	r6, ip
 801a98e:	e7a5      	b.n	801a8dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801a990:	4660      	mov	r0, ip
 801a992:	4662      	mov	r2, ip
 801a994:	e7a2      	b.n	801a8dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801a996:	4660      	mov	r0, ip
 801a998:	4662      	mov	r2, ip
 801a99a:	e7f7      	b.n	801a98c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801a99c:	b00f      	add	sp, #60	; 0x3c
 801a99e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a9a2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801a9a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a9a6:	b085      	sub	sp, #20
 801a9a8:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 801a9ac:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801a9b0:	9102      	str	r1, [sp, #8]
 801a9b2:	2c00      	cmp	r4, #0
 801a9b4:	fb04 710c 	mla	r1, r4, ip, r7
 801a9b8:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801a9bc:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801a9c0:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801a9c4:	eb02 0e01 	add.w	lr, r2, r1
 801a9c8:	f2c0 8122 	blt.w	801ac10 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801a9cc:	45a0      	cmp	r8, r4
 801a9ce:	f340 811f 	ble.w	801ac10 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801a9d2:	2f00      	cmp	r7, #0
 801a9d4:	f2c0 811a 	blt.w	801ac0c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801a9d8:	45bc      	cmp	ip, r7
 801a9da:	f340 8117 	ble.w	801ac0c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801a9de:	5c52      	ldrb	r2, [r2, r1]
 801a9e0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801a9e4:	1c7a      	adds	r2, r7, #1
 801a9e6:	f100 8116 	bmi.w	801ac16 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801a9ea:	4594      	cmp	ip, r2
 801a9ec:	f340 8113 	ble.w	801ac16 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801a9f0:	2e00      	cmp	r6, #0
 801a9f2:	f000 8112 	beq.w	801ac1a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801a9f6:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801a9fa:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801a9fe:	3401      	adds	r4, #1
 801aa00:	f100 810f 	bmi.w	801ac22 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801aa04:	45a0      	cmp	r8, r4
 801aa06:	f340 810c 	ble.w	801ac22 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801aa0a:	2800      	cmp	r0, #0
 801aa0c:	f000 810c 	beq.w	801ac28 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801aa10:	2f00      	cmp	r7, #0
 801aa12:	f2c0 8104 	blt.w	801ac1e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801aa16:	45bc      	cmp	ip, r7
 801aa18:	f340 8101 	ble.w	801ac1e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801aa1c:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801aa20:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801aa24:	3701      	adds	r7, #1
 801aa26:	f100 8102 	bmi.w	801ac2e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801aa2a:	45bc      	cmp	ip, r7
 801aa2c:	f340 80ff 	ble.w	801ac2e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801aa30:	2e00      	cmp	r6, #0
 801aa32:	f000 80fe 	beq.w	801ac32 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801aa36:	44f4      	add	ip, lr
 801aa38:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801aa3c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801aa40:	b2b6      	uxth	r6, r6
 801aa42:	b280      	uxth	r0, r0
 801aa44:	fb00 fe06 	mul.w	lr, r0, r6
 801aa48:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801aa4c:	0136      	lsls	r6, r6, #4
 801aa4e:	eba6 070e 	sub.w	r7, r6, lr
 801aa52:	b280      	uxth	r0, r0
 801aa54:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801aa58:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801aa5c:	b2bf      	uxth	r7, r7
 801aa5e:	1a1b      	subs	r3, r3, r0
 801aa60:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801aa64:	b29b      	uxth	r3, r3
 801aa66:	fb0a f607 	mul.w	r6, sl, r7
 801aa6a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801aa6e:	fb0b 6603 	mla	r6, fp, r3, r6
 801aa72:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801aa76:	fb00 6609 	mla	r6, r0, r9, r6
 801aa7a:	fb0e 6608 	mla	r6, lr, r8, r6
 801aa7e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801aa82:	9600      	str	r6, [sp, #0]
 801aa84:	2e00      	cmp	r6, #0
 801aa86:	f000 80be 	beq.w	801ac06 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801aa8a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801aa8e:	fb0b fc0c 	mul.w	ip, fp, ip
 801aa92:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801aa96:	fb0b f505 	mul.w	r5, fp, r5
 801aa9a:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801aa9e:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801aaa2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801aaa6:	44dc      	add	ip, fp
 801aaa8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801aaac:	9501      	str	r5, [sp, #4]
 801aaae:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801aab2:	9503      	str	r5, [sp, #12]
 801aab4:	9d01      	ldr	r5, [sp, #4]
 801aab6:	9e02      	ldr	r6, [sp, #8]
 801aab8:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801aabc:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801aac0:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801aac4:	fb0a fc0c 	mul.w	ip, sl, ip
 801aac8:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801aacc:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801aad0:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801aad4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801aad8:	4465      	add	r5, ip
 801aada:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801aade:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801aae2:	fb09 fc0c 	mul.w	ip, r9, ip
 801aae6:	fb09 f904 	mul.w	r9, r9, r4
 801aaea:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801aaee:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801aaf2:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801aaf6:	fb08 f404 	mul.w	r4, r8, r4
 801aafa:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801aafe:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ab02:	fb08 f802 	mul.w	r8, r8, r2
 801ab06:	fb0a fa01 	mul.w	sl, sl, r1
 801ab0a:	0a22      	lsrs	r2, r4, #8
 801ab0c:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801ab10:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ab14:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801ab18:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801ab1c:	4414      	add	r4, r2
 801ab1e:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801ab22:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801ab26:	0a2d      	lsrs	r5, r5, #8
 801ab28:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801ab2c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801ab30:	9a03      	ldr	r2, [sp, #12]
 801ab32:	8836      	ldrh	r6, [r6, #0]
 801ab34:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801ab38:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ab3c:	437d      	muls	r5, r7
 801ab3e:	4461      	add	r1, ip
 801ab40:	0a24      	lsrs	r4, r4, #8
 801ab42:	fb02 5503 	mla	r5, r2, r3, r5
 801ab46:	0a09      	lsrs	r1, r1, #8
 801ab48:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801ab4c:	fb04 540e 	mla	r4, r4, lr, r5
 801ab50:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801ab54:	fb01 4100 	mla	r1, r1, r0, r4
 801ab58:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ab5c:	0a09      	lsrs	r1, r1, #8
 801ab5e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ab62:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801ab66:	fb07 f70a 	mul.w	r7, r7, sl
 801ab6a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801ab6e:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801ab72:	fb03 7101 	mla	r1, r3, r1, r7
 801ab76:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ab7a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801ab7e:	fb0e 1e08 	mla	lr, lr, r8, r1
 801ab82:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801ab86:	fb00 e101 	mla	r1, r0, r1, lr
 801ab8a:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801ab8e:	9a00      	ldr	r2, [sp, #0]
 801ab90:	b287      	uxth	r7, r0
 801ab92:	437a      	muls	r2, r7
 801ab94:	0a09      	lsrs	r1, r1, #8
 801ab96:	1c53      	adds	r3, r2, #1
 801ab98:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801ab9c:	4321      	orrs	r1, r4
 801ab9e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801aba2:	1235      	asrs	r5, r6, #8
 801aba4:	0c0a      	lsrs	r2, r1, #16
 801aba6:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801abaa:	b2db      	uxtb	r3, r3
 801abac:	fb12 f207 	smulbb	r2, r2, r7
 801abb0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801abb4:	fb05 2503 	mla	r5, r5, r3, r2
 801abb8:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801abbc:	10f2      	asrs	r2, r6, #3
 801abbe:	b2c8      	uxtb	r0, r1
 801abc0:	00f6      	lsls	r6, r6, #3
 801abc2:	fb14 f407 	smulbb	r4, r4, r7
 801abc6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801abca:	b2f6      	uxtb	r6, r6
 801abcc:	fb10 f007 	smulbb	r0, r0, r7
 801abd0:	fb02 4203 	mla	r2, r2, r3, r4
 801abd4:	b2ad      	uxth	r5, r5
 801abd6:	fb06 0303 	mla	r3, r6, r3, r0
 801abda:	b299      	uxth	r1, r3
 801abdc:	b294      	uxth	r4, r2
 801abde:	1c6b      	adds	r3, r5, #1
 801abe0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801abe4:	1c62      	adds	r2, r4, #1
 801abe6:	1c4b      	adds	r3, r1, #1
 801abe8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801abec:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801abf0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801abf4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801abf8:	0952      	lsrs	r2, r2, #5
 801abfa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801abfe:	432b      	orrs	r3, r5
 801ac00:	4313      	orrs	r3, r2
 801ac02:	9a02      	ldr	r2, [sp, #8]
 801ac04:	8013      	strh	r3, [r2, #0]
 801ac06:	b005      	add	sp, #20
 801ac08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ac0c:	2500      	movs	r5, #0
 801ac0e:	e6e9      	b.n	801a9e4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801ac10:	2100      	movs	r1, #0
 801ac12:	460d      	mov	r5, r1
 801ac14:	e6f3      	b.n	801a9fe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ac16:	2100      	movs	r1, #0
 801ac18:	e6f1      	b.n	801a9fe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ac1a:	4631      	mov	r1, r6
 801ac1c:	e6ef      	b.n	801a9fe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ac1e:	2400      	movs	r4, #0
 801ac20:	e700      	b.n	801aa24 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801ac22:	2200      	movs	r2, #0
 801ac24:	4614      	mov	r4, r2
 801ac26:	e70b      	b.n	801aa40 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ac28:	4602      	mov	r2, r0
 801ac2a:	4604      	mov	r4, r0
 801ac2c:	e708      	b.n	801aa40 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ac2e:	2200      	movs	r2, #0
 801ac30:	e706      	b.n	801aa40 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ac32:	4632      	mov	r2, r6
 801ac34:	e704      	b.n	801aa40 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801ac36 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ac36:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ac3a:	b09f      	sub	sp, #124	; 0x7c
 801ac3c:	921b      	str	r2, [sp, #108]	; 0x6c
 801ac3e:	9309      	str	r3, [sp, #36]	; 0x24
 801ac40:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801ac42:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801ac46:	931c      	str	r3, [sp, #112]	; 0x70
 801ac48:	9119      	str	r1, [sp, #100]	; 0x64
 801ac4a:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801ac4e:	901d      	str	r0, [sp, #116]	; 0x74
 801ac50:	6850      	ldr	r0, [r2, #4]
 801ac52:	6812      	ldr	r2, [r2, #0]
 801ac54:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801ac56:	fb00 1303 	mla	r3, r0, r3, r1
 801ac5a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ac5e:	930c      	str	r3, [sp, #48]	; 0x30
 801ac60:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ac62:	681b      	ldr	r3, [r3, #0]
 801ac64:	9312      	str	r3, [sp, #72]	; 0x48
 801ac66:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ac68:	685e      	ldr	r6, [r3, #4]
 801ac6a:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 801ac6e:	930d      	str	r3, [sp, #52]	; 0x34
 801ac70:	3604      	adds	r6, #4
 801ac72:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801ac74:	2b00      	cmp	r3, #0
 801ac76:	dc03      	bgt.n	801ac80 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801ac78:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801ac7a:	2b00      	cmp	r3, #0
 801ac7c:	f340 8388 	ble.w	801b390 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801ac80:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ac82:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ac86:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ac8a:	1e48      	subs	r0, r1, #1
 801ac8c:	1e57      	subs	r7, r2, #1
 801ac8e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ac90:	2b00      	cmp	r3, #0
 801ac92:	f340 8195 	ble.w	801afc0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ac96:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801ac98:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801ac9c:	ea4f 4325 	mov.w	r3, r5, asr #16
 801aca0:	d406      	bmi.n	801acb0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801aca2:	4584      	cmp	ip, r0
 801aca4:	da04      	bge.n	801acb0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801aca6:	2b00      	cmp	r3, #0
 801aca8:	db02      	blt.n	801acb0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801acaa:	42bb      	cmp	r3, r7
 801acac:	f2c0 8189 	blt.w	801afc2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801acb0:	f11c 0c01 	adds.w	ip, ip, #1
 801acb4:	f100 8177 	bmi.w	801afa6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801acb8:	4561      	cmp	r1, ip
 801acba:	f2c0 8174 	blt.w	801afa6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801acbe:	3301      	adds	r3, #1
 801acc0:	f100 8171 	bmi.w	801afa6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801acc4:	429a      	cmp	r2, r3
 801acc6:	f2c0 816e 	blt.w	801afa6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801acca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801accc:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801acce:	931a      	str	r3, [sp, #104]	; 0x68
 801acd0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801acd2:	2b00      	cmp	r3, #0
 801acd4:	f340 8193 	ble.w	801affe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801acd8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801acda:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801acde:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ace0:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801ace4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801ace6:	141b      	asrs	r3, r3, #16
 801ace8:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801acec:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801acf0:	f100 81d6 	bmi.w	801b0a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801acf4:	f100 38ff 	add.w	r8, r0, #4294967295
 801acf8:	4543      	cmp	r3, r8
 801acfa:	f280 81d1 	bge.w	801b0a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801acfe:	f1bc 0f00 	cmp.w	ip, #0
 801ad02:	f2c0 81cd 	blt.w	801b0a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ad06:	f10e 38ff 	add.w	r8, lr, #4294967295
 801ad0a:	45c4      	cmp	ip, r8
 801ad0c:	f280 81c8 	bge.w	801b0a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ad10:	b200      	sxth	r0, r0
 801ad12:	fb0c 3300 	mla	r3, ip, r0, r3
 801ad16:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ad18:	eb04 0803 	add.w	r8, r4, r3
 801ad1c:	5ce3      	ldrb	r3, [r4, r3]
 801ad1e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801ad22:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801ad26:	2a00      	cmp	r2, #0
 801ad28:	f000 81af 	beq.w	801b08a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801ad2c:	f898 c001 	ldrb.w	ip, [r8, #1]
 801ad30:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801ad34:	940e      	str	r4, [sp, #56]	; 0x38
 801ad36:	0e24      	lsrs	r4, r4, #24
 801ad38:	9415      	str	r4, [sp, #84]	; 0x54
 801ad3a:	b179      	cbz	r1, 801ad5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801ad3c:	eb08 0c00 	add.w	ip, r8, r0
 801ad40:	f818 0000 	ldrb.w	r0, [r8, r0]
 801ad44:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801ad48:	900a      	str	r0, [sp, #40]	; 0x28
 801ad4a:	0e00      	lsrs	r0, r0, #24
 801ad4c:	9013      	str	r0, [sp, #76]	; 0x4c
 801ad4e:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801ad52:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801ad56:	900f      	str	r0, [sp, #60]	; 0x3c
 801ad58:	0e00      	lsrs	r0, r0, #24
 801ad5a:	9016      	str	r0, [sp, #88]	; 0x58
 801ad5c:	b292      	uxth	r2, r2
 801ad5e:	b289      	uxth	r1, r1
 801ad60:	fb02 f901 	mul.w	r9, r2, r1
 801ad64:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801ad68:	0112      	lsls	r2, r2, #4
 801ad6a:	eba2 0809 	sub.w	r8, r2, r9
 801ad6e:	b289      	uxth	r1, r1
 801ad70:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801ad74:	9815      	ldr	r0, [sp, #84]	; 0x54
 801ad76:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ad78:	fa1f f888 	uxth.w	r8, r8
 801ad7c:	1a52      	subs	r2, r2, r1
 801ad7e:	b292      	uxth	r2, r2
 801ad80:	fb08 f000 	mul.w	r0, r8, r0
 801ad84:	fb02 000e 	mla	r0, r2, lr, r0
 801ad88:	fb01 0004 	mla	r0, r1, r4, r0
 801ad8c:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801ad8e:	fb09 0004 	mla	r0, r9, r4, r0
 801ad92:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801ad96:	2800      	cmp	r0, #0
 801ad98:	f000 80fa 	beq.w	801af90 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ad9c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801ada0:	d01b      	beq.n	801adda <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801ada2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801ada6:	fb0e fa0a 	mul.w	sl, lr, sl
 801adaa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801adae:	fb0e fe03 	mul.w	lr, lr, r3
 801adb2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801adb6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801adba:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801adbe:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801adc2:	4453      	add	r3, sl
 801adc4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801adc8:	0a1b      	lsrs	r3, r3, #8
 801adca:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801adce:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801add2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801add6:	ea43 030c 	orr.w	r3, r3, ip
 801adda:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801addc:	2cff      	cmp	r4, #255	; 0xff
 801adde:	d021      	beq.n	801ae24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801ade0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ade2:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801ade6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ade8:	fb04 fb0b 	mul.w	fp, r4, fp
 801adec:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801adee:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801adf2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801adf4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801adf8:	fb04 fa0a 	mul.w	sl, r4, sl
 801adfc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ae00:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ae04:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ae08:	44de      	add	lr, fp
 801ae0a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ae0e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ae12:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ae16:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ae1a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ae1e:	ea4e 040a 	orr.w	r4, lr, sl
 801ae22:	940e      	str	r4, [sp, #56]	; 0x38
 801ae24:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ae26:	2cff      	cmp	r4, #255	; 0xff
 801ae28:	d021      	beq.n	801ae6e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801ae2a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ae2c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801ae30:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ae32:	fb04 fb0b 	mul.w	fp, r4, fp
 801ae36:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ae38:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ae3c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ae3e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ae42:	fb04 fa0a 	mul.w	sl, r4, sl
 801ae46:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ae4a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ae4e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ae52:	44de      	add	lr, fp
 801ae54:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ae58:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ae5c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ae60:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ae64:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ae68:	ea4e 040a 	orr.w	r4, lr, sl
 801ae6c:	940a      	str	r4, [sp, #40]	; 0x28
 801ae6e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801ae70:	2cff      	cmp	r4, #255	; 0xff
 801ae72:	d021      	beq.n	801aeb8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801ae74:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801ae76:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801ae7a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801ae7c:	fb04 fb0b 	mul.w	fp, r4, fp
 801ae80:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801ae82:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ae86:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801ae88:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ae8c:	fb04 fa0a 	mul.w	sl, r4, sl
 801ae90:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ae94:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ae98:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ae9c:	44de      	add	lr, fp
 801ae9e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801aea2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801aea6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801aeaa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801aeae:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801aeb2:	ea4e 040a 	orr.w	r4, lr, sl
 801aeb6:	940f      	str	r4, [sp, #60]	; 0x3c
 801aeb8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801aeba:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801aebe:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801aec0:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801aec4:	fb08 fc0c 	mul.w	ip, r8, ip
 801aec8:	fb02 cc0e 	mla	ip, r2, lr, ip
 801aecc:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801aed0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801aed2:	fb01 cc0e 	mla	ip, r1, lr, ip
 801aed6:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801aeda:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801aedc:	fb09 cc0e 	mla	ip, r9, lr, ip
 801aee0:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801aee4:	fb08 f80e 	mul.w	r8, r8, lr
 801aee8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801aeec:	fb02 8303 	mla	r3, r2, r3, r8
 801aef0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801aef2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801aef4:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801aef8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801aefa:	fb01 330a 	mla	r3, r1, sl, r3
 801aefe:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 801af02:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801af04:	fb09 3901 	mla	r9, r9, r1, r3
 801af08:	4342      	muls	r2, r0
 801af0a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801af0e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801af12:	883b      	ldrh	r3, [r7, #0]
 801af14:	1c50      	adds	r0, r2, #1
 801af16:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801af1a:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801af1e:	ea4c 0c09 	orr.w	ip, ip, r9
 801af22:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801af26:	1219      	asrs	r1, r3, #8
 801af28:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801af2c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801af30:	b2c0      	uxtb	r0, r0
 801af32:	fb12 f204 	smulbb	r2, r2, r4
 801af36:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801af3a:	fb01 2100 	mla	r1, r1, r0, r2
 801af3e:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801af42:	10da      	asrs	r2, r3, #3
 801af44:	fa5f fc8c 	uxtb.w	ip, ip
 801af48:	00db      	lsls	r3, r3, #3
 801af4a:	fb1c fc04 	smulbb	ip, ip, r4
 801af4e:	b2db      	uxtb	r3, r3
 801af50:	b289      	uxth	r1, r1
 801af52:	fb03 c300 	mla	r3, r3, r0, ip
 801af56:	fa1f fc83 	uxth.w	ip, r3
 801af5a:	1c4b      	adds	r3, r1, #1
 801af5c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801af60:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801af64:	fb1e fe04 	smulbb	lr, lr, r4
 801af68:	f10c 0301 	add.w	r3, ip, #1
 801af6c:	fb02 e200 	mla	r2, r2, r0, lr
 801af70:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801af74:	b292      	uxth	r2, r2
 801af76:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801af7a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801af7e:	430b      	orrs	r3, r1
 801af80:	1c51      	adds	r1, r2, #1
 801af82:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801af86:	0952      	lsrs	r2, r2, #5
 801af88:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801af8c:	4313      	orrs	r3, r2
 801af8e:	803b      	strh	r3, [r7, #0]
 801af90:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801af92:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801af94:	441a      	add	r2, r3
 801af96:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801af98:	9229      	str	r2, [sp, #164]	; 0xa4
 801af9a:	441d      	add	r5, r3
 801af9c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801af9e:	3b01      	subs	r3, #1
 801afa0:	3702      	adds	r7, #2
 801afa2:	931a      	str	r3, [sp, #104]	; 0x68
 801afa4:	e694      	b.n	801acd0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801afa6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801afa8:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801afaa:	441c      	add	r4, r3
 801afac:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801afae:	9429      	str	r4, [sp, #164]	; 0xa4
 801afb0:	441d      	add	r5, r3
 801afb2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801afb4:	3b01      	subs	r3, #1
 801afb6:	9309      	str	r3, [sp, #36]	; 0x24
 801afb8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801afba:	3302      	adds	r3, #2
 801afbc:	930c      	str	r3, [sp, #48]	; 0x30
 801afbe:	e666      	b.n	801ac8e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801afc0:	d024      	beq.n	801b00c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801afc2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801afc4:	982b      	ldr	r0, [sp, #172]	; 0xac
 801afc6:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801afc8:	3b01      	subs	r3, #1
 801afca:	fb00 4003 	mla	r0, r0, r3, r4
 801afce:	1400      	asrs	r0, r0, #16
 801afd0:	f53f ae7b 	bmi.w	801acca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801afd4:	3901      	subs	r1, #1
 801afd6:	4288      	cmp	r0, r1
 801afd8:	f6bf ae77 	bge.w	801acca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801afdc:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801afde:	fb01 5303 	mla	r3, r1, r3, r5
 801afe2:	141b      	asrs	r3, r3, #16
 801afe4:	f53f ae71 	bmi.w	801acca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801afe8:	3a01      	subs	r2, #1
 801afea:	4293      	cmp	r3, r2
 801afec:	f6bf ae6d 	bge.w	801acca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801aff0:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801aff4:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801aff8:	f1bb 0f00 	cmp.w	fp, #0
 801affc:	dc70      	bgt.n	801b0e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801affe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b000:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801b004:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b006:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801b00a:	930c      	str	r3, [sp, #48]	; 0x30
 801b00c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801b00e:	2b00      	cmp	r3, #0
 801b010:	f340 81be 	ble.w	801b390 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801b014:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b018:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b01c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b020:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b022:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b026:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b02a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b02e:	eef0 6a62 	vmov.f32	s13, s5
 801b032:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b036:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b03a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b03e:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801b042:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b046:	eef0 6a43 	vmov.f32	s13, s6
 801b04a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b04e:	ee12 2a90 	vmov	r2, s5
 801b052:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b056:	fb92 f3f3 	sdiv	r3, r2, r3
 801b05a:	ee13 2a10 	vmov	r2, s6
 801b05e:	932b      	str	r3, [sp, #172]	; 0xac
 801b060:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b062:	fb92 f3f3 	sdiv	r3, r2, r3
 801b066:	932c      	str	r3, [sp, #176]	; 0xb0
 801b068:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801b06a:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801b06c:	3b01      	subs	r3, #1
 801b06e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b072:	9319      	str	r3, [sp, #100]	; 0x64
 801b074:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b076:	bf08      	it	eq
 801b078:	4613      	moveq	r3, r2
 801b07a:	ee16 5a90 	vmov	r5, s13
 801b07e:	9309      	str	r3, [sp, #36]	; 0x24
 801b080:	eeb0 3a67 	vmov.f32	s6, s15
 801b084:	eef0 2a47 	vmov.f32	s5, s14
 801b088:	e5f3      	b.n	801ac72 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b08a:	2900      	cmp	r1, #0
 801b08c:	f43f ae66 	beq.w	801ad5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b090:	f818 0000 	ldrb.w	r0, [r8, r0]
 801b094:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801b098:	900a      	str	r0, [sp, #40]	; 0x28
 801b09a:	0e00      	lsrs	r0, r0, #24
 801b09c:	9013      	str	r0, [sp, #76]	; 0x4c
 801b09e:	e65d      	b.n	801ad5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b0a0:	f113 0801 	adds.w	r8, r3, #1
 801b0a4:	f53f af74 	bmi.w	801af90 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b0a8:	4540      	cmp	r0, r8
 801b0aa:	f6ff af71 	blt.w	801af90 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b0ae:	f11c 0801 	adds.w	r8, ip, #1
 801b0b2:	f53f af6d 	bmi.w	801af90 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b0b6:	45c6      	cmp	lr, r8
 801b0b8:	f6ff af6a 	blt.w	801af90 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b0bc:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801b0be:	9302      	str	r3, [sp, #8]
 801b0c0:	b200      	sxth	r0, r0
 801b0c2:	fa0f f38e 	sxth.w	r3, lr
 801b0c6:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801b0ca:	e9cd c203 	strd	ip, r2, [sp, #12]
 801b0ce:	9301      	str	r3, [sp, #4]
 801b0d0:	9000      	str	r0, [sp, #0]
 801b0d2:	4633      	mov	r3, r6
 801b0d4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b0d6:	981d      	ldr	r0, [sp, #116]	; 0x74
 801b0d8:	4639      	mov	r1, r7
 801b0da:	f7ff fc62 	bl	801a9a2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801b0de:	e757      	b.n	801af90 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b0e0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b0e2:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801b0e4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b0e8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b0ea:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b0ee:	1427      	asrs	r7, r4, #16
 801b0f0:	142b      	asrs	r3, r5, #16
 801b0f2:	fb01 7303 	mla	r3, r1, r3, r7
 801b0f6:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b0f8:	18e7      	adds	r7, r4, r3
 801b0fa:	5ce3      	ldrb	r3, [r4, r3]
 801b0fc:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b100:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b104:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801b108:	2a00      	cmp	r2, #0
 801b10a:	f000 8137 	beq.w	801b37c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801b10e:	f897 e001 	ldrb.w	lr, [r7, #1]
 801b112:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801b116:	9410      	str	r4, [sp, #64]	; 0x40
 801b118:	0e24      	lsrs	r4, r4, #24
 801b11a:	9417      	str	r4, [sp, #92]	; 0x5c
 801b11c:	b170      	cbz	r0, 801b13c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b11e:	eb07 0e01 	add.w	lr, r7, r1
 801b122:	5c79      	ldrb	r1, [r7, r1]
 801b124:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b128:	910b      	str	r1, [sp, #44]	; 0x2c
 801b12a:	0e09      	lsrs	r1, r1, #24
 801b12c:	9114      	str	r1, [sp, #80]	; 0x50
 801b12e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801b132:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b136:	9111      	str	r1, [sp, #68]	; 0x44
 801b138:	0e09      	lsrs	r1, r1, #24
 801b13a:	9118      	str	r1, [sp, #96]	; 0x60
 801b13c:	b292      	uxth	r2, r2
 801b13e:	b280      	uxth	r0, r0
 801b140:	fb02 f800 	mul.w	r8, r2, r0
 801b144:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801b148:	0112      	lsls	r2, r2, #4
 801b14a:	eba2 0e08 	sub.w	lr, r2, r8
 801b14e:	b280      	uxth	r0, r0
 801b150:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801b154:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801b156:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b158:	fa1f fe8e 	uxth.w	lr, lr
 801b15c:	1a12      	subs	r2, r2, r0
 801b15e:	b292      	uxth	r2, r2
 801b160:	fb0e f101 	mul.w	r1, lr, r1
 801b164:	fb02 110c 	mla	r1, r2, ip, r1
 801b168:	fb00 1104 	mla	r1, r0, r4, r1
 801b16c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b16e:	fb08 1104 	mla	r1, r8, r4, r1
 801b172:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801b176:	2900      	cmp	r1, #0
 801b178:	f000 80f5 	beq.w	801b366 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801b17c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801b180:	d019      	beq.n	801b1b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801b182:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801b186:	fb0c fa0a 	mul.w	sl, ip, sl
 801b18a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b18e:	fb0c fc03 	mul.w	ip, ip, r3
 801b192:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b196:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b19a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b19e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801b1a2:	4453      	add	r3, sl
 801b1a4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801b1a8:	0a1b      	lsrs	r3, r3, #8
 801b1aa:	0a3f      	lsrs	r7, r7, #8
 801b1ac:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b1b0:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801b1b4:	433b      	orrs	r3, r7
 801b1b6:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801b1b8:	2cff      	cmp	r4, #255	; 0xff
 801b1ba:	d020      	beq.n	801b1fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801b1bc:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b1be:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b1c2:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801b1c4:	4367      	muls	r7, r4
 801b1c6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b1c8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b1cc:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801b1ce:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b1d2:	fb04 fa0a 	mul.w	sl, r4, sl
 801b1d6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b1da:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b1de:	44bc      	add	ip, r7
 801b1e0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b1e4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b1e8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b1ec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b1f0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b1f4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b1f8:	ea4c 040a 	orr.w	r4, ip, sl
 801b1fc:	9410      	str	r4, [sp, #64]	; 0x40
 801b1fe:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b200:	2cff      	cmp	r4, #255	; 0xff
 801b202:	d020      	beq.n	801b246 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801b204:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b206:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b20a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b20c:	4367      	muls	r7, r4
 801b20e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b210:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b214:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b216:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b21a:	fb04 fa0a 	mul.w	sl, r4, sl
 801b21e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b222:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b226:	44bc      	add	ip, r7
 801b228:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b22c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b230:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b234:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b238:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b23c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b240:	ea4c 040a 	orr.w	r4, ip, sl
 801b244:	940b      	str	r4, [sp, #44]	; 0x2c
 801b246:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b248:	2cff      	cmp	r4, #255	; 0xff
 801b24a:	d020      	beq.n	801b28e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801b24c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b24e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b252:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b254:	4367      	muls	r7, r4
 801b256:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b258:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b25c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b25e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b262:	fb04 fa0a 	mul.w	sl, r4, sl
 801b266:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b26a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b26e:	44bc      	add	ip, r7
 801b270:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b274:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b278:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b27c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b280:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b284:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b288:	ea4c 040a 	orr.w	r4, ip, sl
 801b28c:	9411      	str	r4, [sp, #68]	; 0x44
 801b28e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b290:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b294:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b296:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801b29a:	fb0e f707 	mul.w	r7, lr, r7
 801b29e:	fb02 770c 	mla	r7, r2, ip, r7
 801b2a2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b2a6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b2a8:	fb00 770c 	mla	r7, r0, ip, r7
 801b2ac:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b2b0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b2b2:	fb08 770c 	mla	r7, r8, ip, r7
 801b2b6:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801b2ba:	fb0e fe0c 	mul.w	lr, lr, ip
 801b2be:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b2c2:	fb02 e303 	mla	r3, r2, r3, lr
 801b2c6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801b2c8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b2ca:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801b2ce:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b2d0:	fb00 330a 	mla	r3, r0, sl, r3
 801b2d4:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801b2d8:	fb08 3c0c 	mla	ip, r8, ip, r3
 801b2dc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b2de:	f8b9 0000 	ldrh.w	r0, [r9]
 801b2e2:	434b      	muls	r3, r1
 801b2e4:	0a3f      	lsrs	r7, r7, #8
 801b2e6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b2ea:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b2ee:	1c59      	adds	r1, r3, #1
 801b2f0:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801b2f4:	ea47 070c 	orr.w	r7, r7, ip
 801b2f8:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801b2fc:	1202      	asrs	r2, r0, #8
 801b2fe:	0c3b      	lsrs	r3, r7, #16
 801b300:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801b304:	b2c9      	uxtb	r1, r1
 801b306:	fb13 f304 	smulbb	r3, r3, r4
 801b30a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801b30e:	fb02 3201 	mla	r2, r2, r1, r3
 801b312:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801b316:	10c3      	asrs	r3, r0, #3
 801b318:	b2ff      	uxtb	r7, r7
 801b31a:	00c0      	lsls	r0, r0, #3
 801b31c:	b292      	uxth	r2, r2
 801b31e:	fb1c fc04 	smulbb	ip, ip, r4
 801b322:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801b326:	b2c0      	uxtb	r0, r0
 801b328:	fb17 f704 	smulbb	r7, r7, r4
 801b32c:	fb03 c301 	mla	r3, r3, r1, ip
 801b330:	fb00 7001 	mla	r0, r0, r1, r7
 801b334:	f102 0c01 	add.w	ip, r2, #1
 801b338:	b280      	uxth	r0, r0
 801b33a:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801b33e:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 801b342:	1c42      	adds	r2, r0, #1
 801b344:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801b348:	b29b      	uxth	r3, r3
 801b34a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b34e:	ea42 020c 	orr.w	r2, r2, ip
 801b352:	f103 0c01 	add.w	ip, r3, #1
 801b356:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801b35a:	095b      	lsrs	r3, r3, #5
 801b35c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b360:	431a      	orrs	r2, r3
 801b362:	f8a9 2000 	strh.w	r2, [r9]
 801b366:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801b368:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b36a:	441a      	add	r2, r3
 801b36c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b36e:	9229      	str	r2, [sp, #164]	; 0xa4
 801b370:	f109 0902 	add.w	r9, r9, #2
 801b374:	441d      	add	r5, r3
 801b376:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b37a:	e63d      	b.n	801aff8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801b37c:	2800      	cmp	r0, #0
 801b37e:	f43f aedd 	beq.w	801b13c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b382:	5c79      	ldrb	r1, [r7, r1]
 801b384:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b388:	910b      	str	r1, [sp, #44]	; 0x2c
 801b38a:	0e09      	lsrs	r1, r1, #24
 801b38c:	9114      	str	r1, [sp, #80]	; 0x50
 801b38e:	e6d5      	b.n	801b13c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b390:	b01f      	add	sp, #124	; 0x7c
 801b392:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b396 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801b396:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b39a:	b089      	sub	sp, #36	; 0x24
 801b39c:	9101      	str	r1, [sp, #4]
 801b39e:	9801      	ldr	r0, [sp, #4]
 801b3a0:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 801b3a4:	8800      	ldrh	r0, [r0, #0]
 801b3a6:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 801b3aa:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801b3ae:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 801b3b2:	1206      	asrs	r6, r0, #8
 801b3b4:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 801b3b8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b3bc:	9602      	str	r6, [sp, #8]
 801b3be:	10c6      	asrs	r6, r0, #3
 801b3c0:	00c0      	lsls	r0, r0, #3
 801b3c2:	b2c0      	uxtb	r0, r0
 801b3c4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b3c8:	9004      	str	r0, [sp, #16]
 801b3ca:	2f00      	cmp	r7, #0
 801b3cc:	fb07 100c 	mla	r0, r7, ip, r1
 801b3d0:	9603      	str	r6, [sp, #12]
 801b3d2:	eb02 0e00 	add.w	lr, r2, r0
 801b3d6:	f2c0 810a 	blt.w	801b5ee <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801b3da:	45b8      	cmp	r8, r7
 801b3dc:	f340 8107 	ble.w	801b5ee <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801b3e0:	2900      	cmp	r1, #0
 801b3e2:	f2c0 8102 	blt.w	801b5ea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801b3e6:	458c      	cmp	ip, r1
 801b3e8:	f340 80ff 	ble.w	801b5ea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801b3ec:	5c12      	ldrb	r2, [r2, r0]
 801b3ee:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801b3f2:	1c4a      	adds	r2, r1, #1
 801b3f4:	f100 80fe 	bmi.w	801b5f4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801b3f8:	4594      	cmp	ip, r2
 801b3fa:	f340 80fb 	ble.w	801b5f4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801b3fe:	2d00      	cmp	r5, #0
 801b400:	f000 80fa 	beq.w	801b5f8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801b404:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801b408:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801b40c:	3701      	adds	r7, #1
 801b40e:	f100 80f7 	bmi.w	801b600 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801b412:	45b8      	cmp	r8, r7
 801b414:	f340 80f4 	ble.w	801b600 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801b418:	2c00      	cmp	r4, #0
 801b41a:	f000 80f4 	beq.w	801b606 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801b41e:	2900      	cmp	r1, #0
 801b420:	eb0e 020c 	add.w	r2, lr, ip
 801b424:	f2c0 80ea 	blt.w	801b5fc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801b428:	458c      	cmp	ip, r1
 801b42a:	f340 80e7 	ble.w	801b5fc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801b42e:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801b432:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801b436:	3101      	adds	r1, #1
 801b438:	f100 80e8 	bmi.w	801b60c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801b43c:	458c      	cmp	ip, r1
 801b43e:	f340 80e5 	ble.w	801b60c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801b442:	2d00      	cmp	r5, #0
 801b444:	f000 80e4 	beq.w	801b610 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801b448:	7852      	ldrb	r2, [r2, #1]
 801b44a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801b44e:	0e0b      	lsrs	r3, r1, #24
 801b450:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801b454:	9300      	str	r3, [sp, #0]
 801b456:	b2a4      	uxth	r4, r4
 801b458:	b2ab      	uxth	r3, r5
 801b45a:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 801b45e:	fb03 f904 	mul.w	r9, r3, r4
 801b462:	fb0a f505 	mul.w	r5, sl, r5
 801b466:	011b      	lsls	r3, r3, #4
 801b468:	eba3 0e09 	sub.w	lr, r3, r9
 801b46c:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 801b470:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 801b474:	0a28      	lsrs	r0, r5, #8
 801b476:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b47a:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 801b47e:	4405      	add	r5, r0
 801b480:	0a2d      	lsrs	r5, r5, #8
 801b482:	fb0a f303 	mul.w	r3, sl, r3
 801b486:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 801b48a:	9005      	str	r0, [sp, #20]
 801b48c:	f503 7080 	add.w	r0, r3, #256	; 0x100
 801b490:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801b494:	0a1b      	lsrs	r3, r3, #8
 801b496:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801b49a:	9306      	str	r3, [sp, #24]
 801b49c:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 801b4a0:	fb0b f303 	mul.w	r3, fp, r3
 801b4a4:	0a1d      	lsrs	r5, r3, #8
 801b4a6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b4aa:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801b4ae:	fb0b f606 	mul.w	r6, fp, r6
 801b4b2:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 801b4b6:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 801b4ba:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b4be:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801b4c2:	fb08 f707 	mul.w	r7, r8, r7
 801b4c6:	441d      	add	r5, r3
 801b4c8:	f506 7380 	add.w	r3, r6, #256	; 0x100
 801b4cc:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801b4d0:	f507 7380 	add.w	r3, r7, #256	; 0x100
 801b4d4:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801b4d8:	fb08 fc0c 	mul.w	ip, r8, ip
 801b4dc:	0a1b      	lsrs	r3, r3, #8
 801b4de:	9307      	str	r3, [sp, #28]
 801b4e0:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801b4e4:	0e0b      	lsrs	r3, r1, #24
 801b4e6:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 801b4ea:	435f      	muls	r7, r3
 801b4ec:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801b4f0:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b4f4:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801b4f8:	4460      	add	r0, ip
 801b4fa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b4fe:	b2a4      	uxth	r4, r4
 801b500:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b504:	0a2d      	lsrs	r5, r5, #8
 801b506:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801b50a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b50e:	fa1f fe8e 	uxth.w	lr, lr
 801b512:	4359      	muls	r1, r3
 801b514:	1b12      	subs	r2, r2, r4
 801b516:	9b05      	ldr	r3, [sp, #20]
 801b518:	44bc      	add	ip, r7
 801b51a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b51e:	b292      	uxth	r2, r2
 801b520:	fb05 f50e 	mul.w	r5, r5, lr
 801b524:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b528:	fb03 5502 	mla	r5, r3, r2, r5
 801b52c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b530:	9b06      	ldr	r3, [sp, #24]
 801b532:	f501 7780 	add.w	r7, r1, #256	; 0x100
 801b536:	0a36      	lsrs	r6, r6, #8
 801b538:	0a00      	lsrs	r0, r0, #8
 801b53a:	fb0c 5509 	mla	r5, ip, r9, r5
 801b53e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b542:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801b546:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b54a:	fb00 5504 	mla	r5, r0, r4, r5
 801b54e:	fb0e f606 	mul.w	r6, lr, r6
 801b552:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801b556:	0a09      	lsrs	r1, r1, #8
 801b558:	9b07      	ldr	r3, [sp, #28]
 801b55a:	fb02 6000 	mla	r0, r2, r0, r6
 801b55e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801b562:	fb09 0001 	mla	r0, r9, r1, r0
 801b566:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b56a:	fb0e fe0b 	mul.w	lr, lr, fp
 801b56e:	fb04 0003 	mla	r0, r4, r3, r0
 801b572:	fb02 e20a 	mla	r2, r2, sl, lr
 801b576:	9b00      	ldr	r3, [sp, #0]
 801b578:	fb04 2408 	mla	r4, r4, r8, r2
 801b57c:	fb09 4903 	mla	r9, r9, r3, r4
 801b580:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801b584:	9b02      	ldr	r3, [sp, #8]
 801b586:	9a04      	ldr	r2, [sp, #16]
 801b588:	fa5f f989 	uxtb.w	r9, r9
 801b58c:	fb03 f109 	mul.w	r1, r3, r9
 801b590:	9b03      	ldr	r3, [sp, #12]
 801b592:	0a2d      	lsrs	r5, r5, #8
 801b594:	0a00      	lsrs	r0, r0, #8
 801b596:	fb03 f309 	mul.w	r3, r3, r9
 801b59a:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801b59e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b5a2:	4305      	orrs	r5, r0
 801b5a4:	fb02 f909 	mul.w	r9, r2, r9
 801b5a8:	1c58      	adds	r0, r3, #1
 801b5aa:	1c4a      	adds	r2, r1, #1
 801b5ac:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801b5b0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b5b4:	0a2b      	lsrs	r3, r5, #8
 801b5b6:	0c2a      	lsrs	r2, r5, #16
 801b5b8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801b5bc:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801b5c0:	00db      	lsls	r3, r3, #3
 801b5c2:	0212      	lsls	r2, r2, #8
 801b5c4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801b5c8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b5cc:	4313      	orrs	r3, r2
 801b5ce:	f109 0201 	add.w	r2, r9, #1
 801b5d2:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801b5d6:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801b5da:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b5de:	431d      	orrs	r5, r3
 801b5e0:	9b01      	ldr	r3, [sp, #4]
 801b5e2:	801d      	strh	r5, [r3, #0]
 801b5e4:	b009      	add	sp, #36	; 0x24
 801b5e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b5ea:	2000      	movs	r0, #0
 801b5ec:	e701      	b.n	801b3f2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801b5ee:	2600      	movs	r6, #0
 801b5f0:	4630      	mov	r0, r6
 801b5f2:	e70b      	b.n	801b40c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b5f4:	2600      	movs	r6, #0
 801b5f6:	e709      	b.n	801b40c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b5f8:	462e      	mov	r6, r5
 801b5fa:	e707      	b.n	801b40c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b5fc:	2700      	movs	r7, #0
 801b5fe:	e71a      	b.n	801b436 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801b600:	2100      	movs	r1, #0
 801b602:	460f      	mov	r7, r1
 801b604:	e723      	b.n	801b44e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b606:	4621      	mov	r1, r4
 801b608:	4627      	mov	r7, r4
 801b60a:	e720      	b.n	801b44e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b60c:	2100      	movs	r1, #0
 801b60e:	e71e      	b.n	801b44e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b610:	4629      	mov	r1, r5
 801b612:	e71c      	b.n	801b44e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801b614 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b614:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b618:	b09b      	sub	sp, #108	; 0x6c
 801b61a:	9218      	str	r2, [sp, #96]	; 0x60
 801b61c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b61e:	9116      	str	r1, [sp, #88]	; 0x58
 801b620:	9307      	str	r3, [sp, #28]
 801b622:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801b626:	9019      	str	r0, [sp, #100]	; 0x64
 801b628:	6850      	ldr	r0, [r2, #4]
 801b62a:	6812      	ldr	r2, [r2, #0]
 801b62c:	9d26      	ldr	r5, [sp, #152]	; 0x98
 801b62e:	fb00 1303 	mla	r3, r0, r3, r1
 801b632:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b636:	930a      	str	r3, [sp, #40]	; 0x28
 801b638:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b63a:	681b      	ldr	r3, [r3, #0]
 801b63c:	930f      	str	r3, [sp, #60]	; 0x3c
 801b63e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b640:	685e      	ldr	r6, [r3, #4]
 801b642:	3604      	adds	r6, #4
 801b644:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b646:	2b00      	cmp	r3, #0
 801b648:	dc03      	bgt.n	801b652 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801b64a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b64c:	2b00      	cmp	r3, #0
 801b64e:	f340 8373 	ble.w	801bd38 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801b652:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b654:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b658:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b65c:	1e48      	subs	r0, r1, #1
 801b65e:	1e57      	subs	r7, r2, #1
 801b660:	9b07      	ldr	r3, [sp, #28]
 801b662:	2b00      	cmp	r3, #0
 801b664:	f340 8190 	ble.w	801b988 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801b668:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801b66a:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801b66e:	ea4f 4325 	mov.w	r3, r5, asr #16
 801b672:	d406      	bmi.n	801b682 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b674:	4584      	cmp	ip, r0
 801b676:	da04      	bge.n	801b682 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b678:	2b00      	cmp	r3, #0
 801b67a:	db02      	blt.n	801b682 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b67c:	42bb      	cmp	r3, r7
 801b67e:	f2c0 8184 	blt.w	801b98a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801b682:	f11c 0c01 	adds.w	ip, ip, #1
 801b686:	f100 8172 	bmi.w	801b96e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b68a:	4561      	cmp	r1, ip
 801b68c:	f2c0 816f 	blt.w	801b96e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b690:	3301      	adds	r3, #1
 801b692:	f100 816c 	bmi.w	801b96e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b696:	429a      	cmp	r2, r3
 801b698:	f2c0 8169 	blt.w	801b96e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b69c:	9b07      	ldr	r3, [sp, #28]
 801b69e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801b6a0:	9317      	str	r3, [sp, #92]	; 0x5c
 801b6a2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b6a4:	2b00      	cmp	r3, #0
 801b6a6:	f340 818e 	ble.w	801b9c6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 801b6aa:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801b6ac:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b6b0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b6b2:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801b6b6:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801b6b8:	141b      	asrs	r3, r3, #16
 801b6ba:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801b6be:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b6c2:	f100 81d1 	bmi.w	801ba68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b6c6:	f101 38ff 	add.w	r8, r1, #4294967295
 801b6ca:	4543      	cmp	r3, r8
 801b6cc:	f280 81cc 	bge.w	801ba68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b6d0:	f1bc 0f00 	cmp.w	ip, #0
 801b6d4:	f2c0 81c8 	blt.w	801ba68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b6d8:	f10e 38ff 	add.w	r8, lr, #4294967295
 801b6dc:	45c4      	cmp	ip, r8
 801b6de:	f280 81c3 	bge.w	801ba68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b6e2:	b209      	sxth	r1, r1
 801b6e4:	fb0c 3301 	mla	r3, ip, r1, r3
 801b6e8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b6ea:	eb04 0803 	add.w	r8, r4, r3
 801b6ee:	5ce3      	ldrb	r3, [r4, r3]
 801b6f0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b6f4:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801b6f8:	2a00      	cmp	r2, #0
 801b6fa:	f000 81aa 	beq.w	801ba52 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801b6fe:	f898 c001 	ldrb.w	ip, [r8, #1]
 801b702:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801b706:	940b      	str	r4, [sp, #44]	; 0x2c
 801b708:	0e24      	lsrs	r4, r4, #24
 801b70a:	9412      	str	r4, [sp, #72]	; 0x48
 801b70c:	b178      	cbz	r0, 801b72e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801b70e:	eb08 0c01 	add.w	ip, r8, r1
 801b712:	f818 1001 	ldrb.w	r1, [r8, r1]
 801b716:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b71a:	9108      	str	r1, [sp, #32]
 801b71c:	0e09      	lsrs	r1, r1, #24
 801b71e:	9110      	str	r1, [sp, #64]	; 0x40
 801b720:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801b724:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b728:	910c      	str	r1, [sp, #48]	; 0x30
 801b72a:	0e09      	lsrs	r1, r1, #24
 801b72c:	9113      	str	r1, [sp, #76]	; 0x4c
 801b72e:	b292      	uxth	r2, r2
 801b730:	b280      	uxth	r0, r0
 801b732:	fb02 f900 	mul.w	r9, r2, r0
 801b736:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801b73a:	0112      	lsls	r2, r2, #4
 801b73c:	eba2 0809 	sub.w	r8, r2, r9
 801b740:	b280      	uxth	r0, r0
 801b742:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801b746:	9912      	ldr	r1, [sp, #72]	; 0x48
 801b748:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b74a:	fa1f f888 	uxth.w	r8, r8
 801b74e:	1a12      	subs	r2, r2, r0
 801b750:	b292      	uxth	r2, r2
 801b752:	fb08 f101 	mul.w	r1, r8, r1
 801b756:	fb02 110e 	mla	r1, r2, lr, r1
 801b75a:	fb00 1104 	mla	r1, r0, r4, r1
 801b75e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b760:	fb09 1104 	mla	r1, r9, r4, r1
 801b764:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801b768:	2900      	cmp	r1, #0
 801b76a:	f000 80f5 	beq.w	801b958 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b76e:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801b772:	d01b      	beq.n	801b7ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b774:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801b778:	fb0e fa0a 	mul.w	sl, lr, sl
 801b77c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b780:	fb0e fe03 	mul.w	lr, lr, r3
 801b784:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b788:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b78c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b790:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801b794:	4453      	add	r3, sl
 801b796:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b79a:	0a1b      	lsrs	r3, r3, #8
 801b79c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b7a0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b7a4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b7a8:	ea43 030c 	orr.w	r3, r3, ip
 801b7ac:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b7ae:	2cff      	cmp	r4, #255	; 0xff
 801b7b0:	d021      	beq.n	801b7f6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801b7b2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b7b4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b7b8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b7ba:	fb04 fb0b 	mul.w	fp, r4, fp
 801b7be:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b7c0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b7c4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b7c6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b7ca:	fb04 fa0a 	mul.w	sl, r4, sl
 801b7ce:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b7d2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b7d6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b7da:	44de      	add	lr, fp
 801b7dc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b7e0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b7e4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b7e8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b7ec:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b7f0:	ea4e 040a 	orr.w	r4, lr, sl
 801b7f4:	940b      	str	r4, [sp, #44]	; 0x2c
 801b7f6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b7f8:	2cff      	cmp	r4, #255	; 0xff
 801b7fa:	d021      	beq.n	801b840 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801b7fc:	9c08      	ldr	r4, [sp, #32]
 801b7fe:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b802:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b804:	fb04 fb0b 	mul.w	fp, r4, fp
 801b808:	9c08      	ldr	r4, [sp, #32]
 801b80a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b80e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b810:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b814:	fb04 fa0a 	mul.w	sl, r4, sl
 801b818:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b81c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b820:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b824:	44de      	add	lr, fp
 801b826:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b82a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b82e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b832:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b836:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b83a:	ea4e 040a 	orr.w	r4, lr, sl
 801b83e:	9408      	str	r4, [sp, #32]
 801b840:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b842:	2cff      	cmp	r4, #255	; 0xff
 801b844:	d021      	beq.n	801b88a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801b846:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b848:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b84c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b84e:	fb04 fb0b 	mul.w	fp, r4, fp
 801b852:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b854:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b858:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b85a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b85e:	fb04 fa0a 	mul.w	sl, r4, sl
 801b862:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b866:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b86a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b86e:	44de      	add	lr, fp
 801b870:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b874:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b878:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b87c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b880:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b884:	ea4e 040a 	orr.w	r4, lr, sl
 801b888:	940c      	str	r4, [sp, #48]	; 0x30
 801b88a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b88c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b890:	9c08      	ldr	r4, [sp, #32]
 801b892:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801b896:	fb08 fc0c 	mul.w	ip, r8, ip
 801b89a:	fb02 cc0e 	mla	ip, r2, lr, ip
 801b89e:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801b8a2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b8a4:	fb00 cc0e 	mla	ip, r0, lr, ip
 801b8a8:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801b8ac:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b8ae:	fb09 cc0e 	mla	ip, r9, lr, ip
 801b8b2:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801b8b6:	fb08 f80e 	mul.w	r8, r8, lr
 801b8ba:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b8be:	fb02 8303 	mla	r3, r2, r3, r8
 801b8c2:	9a08      	ldr	r2, [sp, #32]
 801b8c4:	f8b7 8000 	ldrh.w	r8, [r7]
 801b8c8:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801b8cc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801b8ce:	fb00 330a 	mla	r3, r0, sl, r3
 801b8d2:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801b8d6:	fb09 3900 	mla	r9, r9, r0, r3
 801b8da:	43c9      	mvns	r1, r1
 801b8dc:	ea4f 2228 	mov.w	r2, r8, asr #8
 801b8e0:	fa5f fe81 	uxtb.w	lr, r1
 801b8e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b8e8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b8ec:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801b8f0:	fb02 f20e 	mul.w	r2, r2, lr
 801b8f4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b8f8:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801b8fc:	ea4c 0c09 	orr.w	ip, ip, r9
 801b900:	1c53      	adds	r3, r2, #1
 801b902:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801b906:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801b90a:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801b90e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b912:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b916:	4a63      	ldr	r2, [pc, #396]	; (801baa4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801b918:	fb00 f00e 	mul.w	r0, r0, lr
 801b91c:	b2db      	uxtb	r3, r3
 801b91e:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801b922:	1c43      	adds	r3, r0, #1
 801b924:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801b928:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801b92c:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801b930:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801b934:	b2c9      	uxtb	r1, r1
 801b936:	00db      	lsls	r3, r3, #3
 801b938:	fb01 f10e 	mul.w	r1, r1, lr
 801b93c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b940:	4313      	orrs	r3, r2
 801b942:	1c4a      	adds	r2, r1, #1
 801b944:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b948:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801b94c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801b950:	ea4c 0c03 	orr.w	ip, ip, r3
 801b954:	f8a7 c000 	strh.w	ip, [r7]
 801b958:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b95a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801b95c:	441a      	add	r2, r3
 801b95e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b960:	9225      	str	r2, [sp, #148]	; 0x94
 801b962:	441d      	add	r5, r3
 801b964:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b966:	3b01      	subs	r3, #1
 801b968:	3702      	adds	r7, #2
 801b96a:	9317      	str	r3, [sp, #92]	; 0x5c
 801b96c:	e699      	b.n	801b6a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801b96e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b970:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801b972:	441c      	add	r4, r3
 801b974:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b976:	9425      	str	r4, [sp, #148]	; 0x94
 801b978:	441d      	add	r5, r3
 801b97a:	9b07      	ldr	r3, [sp, #28]
 801b97c:	3b01      	subs	r3, #1
 801b97e:	9307      	str	r3, [sp, #28]
 801b980:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b982:	3302      	adds	r3, #2
 801b984:	930a      	str	r3, [sp, #40]	; 0x28
 801b986:	e66b      	b.n	801b660 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801b988:	d024      	beq.n	801b9d4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801b98a:	9b07      	ldr	r3, [sp, #28]
 801b98c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801b98e:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801b990:	3b01      	subs	r3, #1
 801b992:	fb00 4003 	mla	r0, r0, r3, r4
 801b996:	1400      	asrs	r0, r0, #16
 801b998:	f53f ae80 	bmi.w	801b69c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801b99c:	3901      	subs	r1, #1
 801b99e:	4288      	cmp	r0, r1
 801b9a0:	f6bf ae7c 	bge.w	801b69c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801b9a4:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801b9a6:	fb01 5303 	mla	r3, r1, r3, r5
 801b9aa:	141b      	asrs	r3, r3, #16
 801b9ac:	f53f ae76 	bmi.w	801b69c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801b9b0:	3a01      	subs	r2, #1
 801b9b2:	4293      	cmp	r3, r2
 801b9b4:	f6bf ae72 	bge.w	801b69c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801b9b8:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801b9bc:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801b9c0:	f1bb 0f00 	cmp.w	fp, #0
 801b9c4:	dc70      	bgt.n	801baa8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801b9c6:	9b07      	ldr	r3, [sp, #28]
 801b9c8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801b9cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b9ce:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801b9d2:	930a      	str	r3, [sp, #40]	; 0x28
 801b9d4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b9d6:	2b00      	cmp	r3, #0
 801b9d8:	f340 81ae 	ble.w	801bd38 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801b9dc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b9e0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b9e4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b9e8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b9ea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b9ee:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b9f2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b9f6:	eef0 6a62 	vmov.f32	s13, s5
 801b9fa:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b9fe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ba02:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ba06:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 801ba0a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ba0e:	eef0 6a43 	vmov.f32	s13, s6
 801ba12:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ba16:	ee12 2a90 	vmov	r2, s5
 801ba1a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ba1e:	fb92 f3f3 	sdiv	r3, r2, r3
 801ba22:	ee13 2a10 	vmov	r2, s6
 801ba26:	9327      	str	r3, [sp, #156]	; 0x9c
 801ba28:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ba2a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ba2e:	9328      	str	r3, [sp, #160]	; 0xa0
 801ba30:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801ba32:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801ba34:	3b01      	subs	r3, #1
 801ba36:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ba3a:	9316      	str	r3, [sp, #88]	; 0x58
 801ba3c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ba3e:	bf08      	it	eq
 801ba40:	4613      	moveq	r3, r2
 801ba42:	ee16 5a90 	vmov	r5, s13
 801ba46:	9307      	str	r3, [sp, #28]
 801ba48:	eeb0 3a67 	vmov.f32	s6, s15
 801ba4c:	eef0 2a47 	vmov.f32	s5, s14
 801ba50:	e5f8      	b.n	801b644 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801ba52:	2800      	cmp	r0, #0
 801ba54:	f43f ae6b 	beq.w	801b72e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801ba58:	f818 1001 	ldrb.w	r1, [r8, r1]
 801ba5c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ba60:	9108      	str	r1, [sp, #32]
 801ba62:	0e09      	lsrs	r1, r1, #24
 801ba64:	9110      	str	r1, [sp, #64]	; 0x40
 801ba66:	e662      	b.n	801b72e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801ba68:	f113 0801 	adds.w	r8, r3, #1
 801ba6c:	f53f af74 	bmi.w	801b958 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801ba70:	4541      	cmp	r1, r8
 801ba72:	f6ff af71 	blt.w	801b958 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801ba76:	f11c 0801 	adds.w	r8, ip, #1
 801ba7a:	f53f af6d 	bmi.w	801b958 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801ba7e:	45c6      	cmp	lr, r8
 801ba80:	f6ff af6a 	blt.w	801b958 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801ba84:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801ba88:	b209      	sxth	r1, r1
 801ba8a:	fa0f f38e 	sxth.w	r3, lr
 801ba8e:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801ba92:	9301      	str	r3, [sp, #4]
 801ba94:	9100      	str	r1, [sp, #0]
 801ba96:	4633      	mov	r3, r6
 801ba98:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ba9a:	9819      	ldr	r0, [sp, #100]	; 0x64
 801ba9c:	4639      	mov	r1, r7
 801ba9e:	f7ff fc7a 	bl	801b396 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801baa2:	e759      	b.n	801b958 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801baa4:	fffff800 	.word	0xfffff800
 801baa8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801baaa:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801baac:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801bab0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801bab2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bab6:	1427      	asrs	r7, r4, #16
 801bab8:	142b      	asrs	r3, r5, #16
 801baba:	fb01 7303 	mla	r3, r1, r3, r7
 801babe:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801bac0:	18e7      	adds	r7, r4, r3
 801bac2:	5ce3      	ldrb	r3, [r4, r3]
 801bac4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801bac8:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801bacc:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801bad0:	2a00      	cmp	r2, #0
 801bad2:	f000 8127 	beq.w	801bd24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801bad6:	f897 e001 	ldrb.w	lr, [r7, #1]
 801bada:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801bade:	940d      	str	r4, [sp, #52]	; 0x34
 801bae0:	0e24      	lsrs	r4, r4, #24
 801bae2:	9414      	str	r4, [sp, #80]	; 0x50
 801bae4:	b170      	cbz	r0, 801bb04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801bae6:	eb07 0e01 	add.w	lr, r7, r1
 801baea:	5c79      	ldrb	r1, [r7, r1]
 801baec:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801baf0:	9109      	str	r1, [sp, #36]	; 0x24
 801baf2:	0e09      	lsrs	r1, r1, #24
 801baf4:	9111      	str	r1, [sp, #68]	; 0x44
 801baf6:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801bafa:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bafe:	910e      	str	r1, [sp, #56]	; 0x38
 801bb00:	0e09      	lsrs	r1, r1, #24
 801bb02:	9115      	str	r1, [sp, #84]	; 0x54
 801bb04:	b292      	uxth	r2, r2
 801bb06:	b280      	uxth	r0, r0
 801bb08:	fb02 f800 	mul.w	r8, r2, r0
 801bb0c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801bb10:	0112      	lsls	r2, r2, #4
 801bb12:	eba2 0e08 	sub.w	lr, r2, r8
 801bb16:	b280      	uxth	r0, r0
 801bb18:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801bb1c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bb1e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bb20:	fa1f fe8e 	uxth.w	lr, lr
 801bb24:	1a09      	subs	r1, r1, r0
 801bb26:	b289      	uxth	r1, r1
 801bb28:	fb0e f202 	mul.w	r2, lr, r2
 801bb2c:	fb01 220c 	mla	r2, r1, ip, r2
 801bb30:	fb00 2204 	mla	r2, r0, r4, r2
 801bb34:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bb36:	fb08 2204 	mla	r2, r8, r4, r2
 801bb3a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801bb3e:	2a00      	cmp	r2, #0
 801bb40:	f000 80e5 	beq.w	801bd0e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801bb44:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801bb48:	d019      	beq.n	801bb7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801bb4a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801bb4e:	fb0c fa0a 	mul.w	sl, ip, sl
 801bb52:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801bb56:	fb0c fc03 	mul.w	ip, ip, r3
 801bb5a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801bb5e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801bb62:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801bb66:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801bb6a:	4453      	add	r3, sl
 801bb6c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801bb70:	0a1b      	lsrs	r3, r3, #8
 801bb72:	0a3f      	lsrs	r7, r7, #8
 801bb74:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801bb78:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801bb7c:	433b      	orrs	r3, r7
 801bb7e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bb80:	2cff      	cmp	r4, #255	; 0xff
 801bb82:	d020      	beq.n	801bbc6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801bb84:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bb86:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801bb8a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bb8c:	4367      	muls	r7, r4
 801bb8e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bb90:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801bb94:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bb96:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bb9a:	fb04 fa0a 	mul.w	sl, r4, sl
 801bb9e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801bba2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bba6:	44bc      	add	ip, r7
 801bba8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801bbac:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bbb0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bbb4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bbb8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bbbc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bbc0:	ea4c 040a 	orr.w	r4, ip, sl
 801bbc4:	940d      	str	r4, [sp, #52]	; 0x34
 801bbc6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bbc8:	2cff      	cmp	r4, #255	; 0xff
 801bbca:	d020      	beq.n	801bc0e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801bbcc:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801bbce:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801bbd2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bbd4:	4367      	muls	r7, r4
 801bbd6:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801bbd8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801bbdc:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bbde:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bbe2:	fb04 fa0a 	mul.w	sl, r4, sl
 801bbe6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801bbea:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bbee:	44bc      	add	ip, r7
 801bbf0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801bbf4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bbf8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bbfc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bc00:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bc04:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bc08:	ea4c 040a 	orr.w	r4, ip, sl
 801bc0c:	9409      	str	r4, [sp, #36]	; 0x24
 801bc0e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bc10:	2cff      	cmp	r4, #255	; 0xff
 801bc12:	d020      	beq.n	801bc56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801bc14:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801bc16:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801bc1a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bc1c:	4367      	muls	r7, r4
 801bc1e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801bc20:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801bc24:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bc26:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bc2a:	fb04 fa0a 	mul.w	sl, r4, sl
 801bc2e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801bc32:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bc36:	44bc      	add	ip, r7
 801bc38:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801bc3c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bc40:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bc44:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bc48:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bc4c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bc50:	ea4c 040a 	orr.w	r4, ip, sl
 801bc54:	940e      	str	r4, [sp, #56]	; 0x38
 801bc56:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bc58:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801bc5c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801bc5e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801bc62:	fb0e f707 	mul.w	r7, lr, r7
 801bc66:	fb01 770c 	mla	r7, r1, ip, r7
 801bc6a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801bc6e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801bc70:	fb00 770c 	mla	r7, r0, ip, r7
 801bc74:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801bc78:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bc7a:	fb08 770c 	mla	r7, r8, ip, r7
 801bc7e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801bc82:	fb0e fe0c 	mul.w	lr, lr, ip
 801bc86:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801bc8a:	fb01 e303 	mla	r3, r1, r3, lr
 801bc8e:	9909      	ldr	r1, [sp, #36]	; 0x24
 801bc90:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801bc94:	990e      	ldr	r1, [sp, #56]	; 0x38
 801bc96:	fb00 330a 	mla	r3, r0, sl, r3
 801bc9a:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801bc9e:	fb08 3c0c 	mla	ip, r8, ip, r3
 801bca2:	f8b9 3000 	ldrh.w	r3, [r9]
 801bca6:	43d2      	mvns	r2, r2
 801bca8:	1218      	asrs	r0, r3, #8
 801bcaa:	b2d2      	uxtb	r2, r2
 801bcac:	10d9      	asrs	r1, r3, #3
 801bcae:	0a3f      	lsrs	r7, r7, #8
 801bcb0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bcb4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801bcb8:	00db      	lsls	r3, r3, #3
 801bcba:	4350      	muls	r0, r2
 801bcbc:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801bcc0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801bcc4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801bcc8:	b2db      	uxtb	r3, r3
 801bcca:	ea47 070c 	orr.w	r7, r7, ip
 801bcce:	4351      	muls	r1, r2
 801bcd0:	4353      	muls	r3, r2
 801bcd2:	1c42      	adds	r2, r0, #1
 801bcd4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801bcd8:	0c3a      	lsrs	r2, r7, #16
 801bcda:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801bcde:	4a18      	ldr	r2, [pc, #96]	; (801bd40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801bce0:	b2c0      	uxtb	r0, r0
 801bce2:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801bce6:	1c4a      	adds	r2, r1, #1
 801bce8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bcec:	0a3a      	lsrs	r2, r7, #8
 801bcee:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bcf2:	00c9      	lsls	r1, r1, #3
 801bcf4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801bcf8:	4301      	orrs	r1, r0
 801bcfa:	1c58      	adds	r0, r3, #1
 801bcfc:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801bd00:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801bd04:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801bd08:	4308      	orrs	r0, r1
 801bd0a:	f8a9 0000 	strh.w	r0, [r9]
 801bd0e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801bd10:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801bd12:	441a      	add	r2, r3
 801bd14:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bd16:	9225      	str	r2, [sp, #148]	; 0x94
 801bd18:	f109 0902 	add.w	r9, r9, #2
 801bd1c:	441d      	add	r5, r3
 801bd1e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801bd22:	e64d      	b.n	801b9c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 801bd24:	2800      	cmp	r0, #0
 801bd26:	f43f aeed 	beq.w	801bb04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801bd2a:	5c79      	ldrb	r1, [r7, r1]
 801bd2c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bd30:	9109      	str	r1, [sp, #36]	; 0x24
 801bd32:	0e09      	lsrs	r1, r1, #24
 801bd34:	9111      	str	r1, [sp, #68]	; 0x44
 801bd36:	e6e5      	b.n	801bb04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801bd38:	b01b      	add	sp, #108	; 0x6c
 801bd3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bd3e:	bf00      	nop
 801bd40:	fffff800 	.word	0xfffff800

0801bd44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801bd44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bd48:	b085      	sub	sp, #20
 801bd4a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801bd4e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801bd52:	9103      	str	r1, [sp, #12]
 801bd54:	fb00 7406 	mla	r4, r0, r6, r7
 801bd58:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801bd5c:	2800      	cmp	r0, #0
 801bd5e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801bd62:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801bd66:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801bd6a:	9501      	str	r5, [sp, #4]
 801bd6c:	eb03 0904 	add.w	r9, r3, r4
 801bd70:	f2c0 8150 	blt.w	801c014 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801bd74:	4583      	cmp	fp, r0
 801bd76:	f340 814d 	ble.w	801c014 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801bd7a:	2f00      	cmp	r7, #0
 801bd7c:	f2c0 8146 	blt.w	801c00c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801bd80:	42be      	cmp	r6, r7
 801bd82:	f340 8143 	ble.w	801c00c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801bd86:	f813 c004 	ldrb.w	ip, [r3, r4]
 801bd8a:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801bd8e:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801bd92:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801bd96:	4355      	muls	r5, r2
 801bd98:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bd9c:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801bda0:	fb0c f203 	mul.w	r2, ip, r3
 801bda4:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801bda8:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801bdac:	441d      	add	r5, r3
 801bdae:	f102 0320 	add.w	r3, r2, #32
 801bdb2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801bdb6:	0a1b      	lsrs	r3, r3, #8
 801bdb8:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801bdbc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bdc0:	431c      	orrs	r4, r3
 801bdc2:	1c7b      	adds	r3, r7, #1
 801bdc4:	f100 812b 	bmi.w	801c01e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801bdc8:	429e      	cmp	r6, r3
 801bdca:	f340 8128 	ble.w	801c01e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801bdce:	2900      	cmp	r1, #0
 801bdd0:	f000 8128 	beq.w	801c024 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801bdd4:	9a01      	ldr	r2, [sp, #4]
 801bdd6:	f899 3001 	ldrb.w	r3, [r9, #1]
 801bdda:	8855      	ldrh	r5, [r2, #2]
 801bddc:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801bde0:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801bde4:	fb08 f802 	mul.w	r8, r8, r2
 801bde8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bdec:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801bdf0:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801bdf4:	435d      	muls	r5, r3
 801bdf6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801bdfa:	44d0      	add	r8, sl
 801bdfc:	f105 0a20 	add.w	sl, r5, #32
 801be00:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801be04:	0a2d      	lsrs	r5, r5, #8
 801be06:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801be0a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801be0e:	432a      	orrs	r2, r5
 801be10:	3001      	adds	r0, #1
 801be12:	f100 810d 	bmi.w	801c030 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801be16:	4583      	cmp	fp, r0
 801be18:	f340 810a 	ble.w	801c030 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801be1c:	f1be 0f00 	cmp.w	lr, #0
 801be20:	f000 810b 	beq.w	801c03a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801be24:	2f00      	cmp	r7, #0
 801be26:	f2c0 8100 	blt.w	801c02a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801be2a:	42be      	cmp	r6, r7
 801be2c:	f340 80fd 	ble.w	801c02a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801be30:	9801      	ldr	r0, [sp, #4]
 801be32:	f819 5006 	ldrb.w	r5, [r9, r6]
 801be36:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801be3a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801be3e:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801be42:	fb0a fa00 	mul.w	sl, sl, r0
 801be46:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801be4a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801be4e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801be52:	fb05 f808 	mul.w	r8, r5, r8
 801be56:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801be5a:	4482      	add	sl, r0
 801be5c:	f108 0020 	add.w	r0, r8, #32
 801be60:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801be64:	0a00      	lsrs	r0, r0, #8
 801be66:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801be6a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801be6e:	ea4b 0b00 	orr.w	fp, fp, r0
 801be72:	3701      	adds	r7, #1
 801be74:	f100 80e6 	bmi.w	801c044 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801be78:	42be      	cmp	r6, r7
 801be7a:	f340 80e3 	ble.w	801c044 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801be7e:	2900      	cmp	r1, #0
 801be80:	f000 80e3 	beq.w	801c04a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801be84:	3601      	adds	r6, #1
 801be86:	9801      	ldr	r0, [sp, #4]
 801be88:	f819 7006 	ldrb.w	r7, [r9, r6]
 801be8c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801be90:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801be94:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801be98:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801be9c:	fb09 f906 	mul.w	r9, r9, r6
 801bea0:	fb07 f800 	mul.w	r8, r7, r0
 801bea4:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801bea8:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801beac:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801beb0:	44d1      	add	r9, sl
 801beb2:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801beb6:	f108 0020 	add.w	r0, r8, #32
 801beba:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801bebe:	0a00      	lsrs	r0, r0, #8
 801bec0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bec4:	4330      	orrs	r0, r6
 801bec6:	b28e      	uxth	r6, r1
 801bec8:	fa1f f98e 	uxth.w	r9, lr
 801becc:	fb06 f809 	mul.w	r8, r6, r9
 801bed0:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801bed4:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801bed8:	0136      	lsls	r6, r6, #4
 801beda:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bede:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801bee2:	9601      	str	r6, [sp, #4]
 801bee4:	ea4a 0404 	orr.w	r4, sl, r4
 801bee8:	fa1f f689 	uxth.w	r6, r9
 801beec:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801bef0:	fb11 f90e 	smulbb	r9, r1, lr
 801bef4:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801bef8:	9602      	str	r6, [sp, #8]
 801befa:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801befe:	4626      	mov	r6, r4
 801bf00:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801bf04:	f1ce 0410 	rsb	r4, lr, #16
 801bf08:	1a64      	subs	r4, r4, r1
 801bf0a:	ea4a 0202 	orr.w	r2, sl, r2
 801bf0e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801bf12:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801bf16:	434a      	muls	r2, r1
 801bf18:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801bf1c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bf20:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801bf24:	fb04 2406 	mla	r4, r4, r6, r2
 801bf28:	ea4a 0000 	orr.w	r0, sl, r0
 801bf2c:	fb09 4200 	mla	r2, r9, r0, r4
 801bf30:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801bf34:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801bf38:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801bf3c:	ea44 0b0b 	orr.w	fp, r4, fp
 801bf40:	9c01      	ldr	r4, [sp, #4]
 801bf42:	9e02      	ldr	r6, [sp, #8]
 801bf44:	9903      	ldr	r1, [sp, #12]
 801bf46:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 801bf4a:	1ba4      	subs	r4, r4, r6
 801bf4c:	9e01      	ldr	r6, [sp, #4]
 801bf4e:	8808      	ldrh	r0, [r1, #0]
 801bf50:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 801bf54:	eba6 0608 	sub.w	r6, r6, r8
 801bf58:	b2b6      	uxth	r6, r6
 801bf5a:	b2a4      	uxth	r4, r4
 801bf5c:	4373      	muls	r3, r6
 801bf5e:	fb0c 3304 	mla	r3, ip, r4, r3
 801bf62:	9c02      	ldr	r4, [sp, #8]
 801bf64:	fb04 3505 	mla	r5, r4, r5, r3
 801bf68:	fb08 5707 	mla	r7, r8, r7, r5
 801bf6c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801bf70:	b289      	uxth	r1, r1
 801bf72:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801bf76:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801bf7a:	434f      	muls	r7, r1
 801bf7c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801bf80:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801bf84:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bf88:	1c7b      	adds	r3, r7, #1
 801bf8a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801bf8e:	ea42 0e0e 	orr.w	lr, r2, lr
 801bf92:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801bf96:	fa1f f28e 	uxth.w	r2, lr
 801bf9a:	1203      	asrs	r3, r0, #8
 801bf9c:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801bfa0:	b2ff      	uxtb	r7, r7
 801bfa2:	1215      	asrs	r5, r2, #8
 801bfa4:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801bfa8:	fb13 f307 	smulbb	r3, r3, r7
 801bfac:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801bfb0:	fb05 3501 	mla	r5, r5, r1, r3
 801bfb4:	10c3      	asrs	r3, r0, #3
 801bfb6:	10d4      	asrs	r4, r2, #3
 801bfb8:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801bfbc:	fb13 f307 	smulbb	r3, r3, r7
 801bfc0:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801bfc4:	fb04 3401 	mla	r4, r4, r1, r3
 801bfc8:	00c3      	lsls	r3, r0, #3
 801bfca:	00d2      	lsls	r2, r2, #3
 801bfcc:	b2db      	uxtb	r3, r3
 801bfce:	fb13 f307 	smulbb	r3, r3, r7
 801bfd2:	b2d2      	uxtb	r2, r2
 801bfd4:	fb02 3101 	mla	r1, r2, r1, r3
 801bfd8:	b2ad      	uxth	r5, r5
 801bfda:	b289      	uxth	r1, r1
 801bfdc:	b2a4      	uxth	r4, r4
 801bfde:	1c6b      	adds	r3, r5, #1
 801bfe0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801bfe4:	1c62      	adds	r2, r4, #1
 801bfe6:	1c4b      	adds	r3, r1, #1
 801bfe8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801bfec:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801bff0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801bff4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801bff8:	0964      	lsrs	r4, r4, #5
 801bffa:	432b      	orrs	r3, r5
 801bffc:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801c000:	9a03      	ldr	r2, [sp, #12]
 801c002:	4323      	orrs	r3, r4
 801c004:	8013      	strh	r3, [r2, #0]
 801c006:	b005      	add	sp, #20
 801c008:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c00c:	f04f 0c00 	mov.w	ip, #0
 801c010:	4664      	mov	r4, ip
 801c012:	e6d6      	b.n	801bdc2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801c014:	2300      	movs	r3, #0
 801c016:	469c      	mov	ip, r3
 801c018:	461a      	mov	r2, r3
 801c01a:	461c      	mov	r4, r3
 801c01c:	e6f8      	b.n	801be10 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c01e:	2300      	movs	r3, #0
 801c020:	461a      	mov	r2, r3
 801c022:	e6f5      	b.n	801be10 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c024:	460b      	mov	r3, r1
 801c026:	460a      	mov	r2, r1
 801c028:	e6f2      	b.n	801be10 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c02a:	2500      	movs	r5, #0
 801c02c:	46ab      	mov	fp, r5
 801c02e:	e720      	b.n	801be72 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801c030:	2700      	movs	r7, #0
 801c032:	463d      	mov	r5, r7
 801c034:	4638      	mov	r0, r7
 801c036:	46bb      	mov	fp, r7
 801c038:	e745      	b.n	801bec6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c03a:	4677      	mov	r7, lr
 801c03c:	4675      	mov	r5, lr
 801c03e:	4670      	mov	r0, lr
 801c040:	46f3      	mov	fp, lr
 801c042:	e740      	b.n	801bec6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c044:	2700      	movs	r7, #0
 801c046:	4638      	mov	r0, r7
 801c048:	e73d      	b.n	801bec6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c04a:	460f      	mov	r7, r1
 801c04c:	4608      	mov	r0, r1
 801c04e:	e73a      	b.n	801bec6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801c050 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c050:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c054:	b097      	sub	sp, #92	; 0x5c
 801c056:	9214      	str	r2, [sp, #80]	; 0x50
 801c058:	9308      	str	r3, [sp, #32]
 801c05a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801c05c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801c060:	9312      	str	r3, [sp, #72]	; 0x48
 801c062:	9111      	str	r1, [sp, #68]	; 0x44
 801c064:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801c068:	9015      	str	r0, [sp, #84]	; 0x54
 801c06a:	6850      	ldr	r0, [r2, #4]
 801c06c:	6812      	ldr	r2, [r2, #0]
 801c06e:	fb00 1303 	mla	r3, r0, r3, r1
 801c072:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c076:	9309      	str	r3, [sp, #36]	; 0x24
 801c078:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c07a:	681b      	ldr	r3, [r3, #0]
 801c07c:	930b      	str	r3, [sp, #44]	; 0x2c
 801c07e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c080:	685b      	ldr	r3, [r3, #4]
 801c082:	930c      	str	r3, [sp, #48]	; 0x30
 801c084:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801c088:	930a      	str	r3, [sp, #40]	; 0x28
 801c08a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c08c:	2b00      	cmp	r3, #0
 801c08e:	dc03      	bgt.n	801c098 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801c090:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801c092:	2b00      	cmp	r3, #0
 801c094:	f340 83cb 	ble.w	801c82e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801c098:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c09a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c09e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c0a2:	1e48      	subs	r0, r1, #1
 801c0a4:	1e55      	subs	r5, r2, #1
 801c0a6:	9b08      	ldr	r3, [sp, #32]
 801c0a8:	2b00      	cmp	r3, #0
 801c0aa:	f340 81a3 	ble.w	801c3f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 801c0ae:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801c0b0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c0b2:	1436      	asrs	r6, r6, #16
 801c0b4:	ea4f 4323 	mov.w	r3, r3, asr #16
 801c0b8:	d406      	bmi.n	801c0c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c0ba:	4286      	cmp	r6, r0
 801c0bc:	da04      	bge.n	801c0c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c0be:	2b00      	cmp	r3, #0
 801c0c0:	db02      	blt.n	801c0c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c0c2:	42ab      	cmp	r3, r5
 801c0c4:	f2c0 8197 	blt.w	801c3f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801c0c8:	3601      	adds	r6, #1
 801c0ca:	f100 8184 	bmi.w	801c3d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c0ce:	42b1      	cmp	r1, r6
 801c0d0:	f2c0 8181 	blt.w	801c3d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c0d4:	3301      	adds	r3, #1
 801c0d6:	f100 817e 	bmi.w	801c3d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c0da:	429a      	cmp	r2, r3
 801c0dc:	f2c0 817b 	blt.w	801c3d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c0e0:	9b08      	ldr	r3, [sp, #32]
 801c0e2:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801c0e4:	9313      	str	r3, [sp, #76]	; 0x4c
 801c0e6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801c0ea:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c0ec:	2b00      	cmp	r3, #0
 801c0ee:	f340 81a4 	ble.w	801c43a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801c0f2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c0f4:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801c0f6:	1418      	asrs	r0, r3, #16
 801c0f8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c0fa:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801c0fe:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c100:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801c104:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c106:	142d      	asrs	r5, r5, #16
 801c108:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801c10c:	f100 81f8 	bmi.w	801c500 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c110:	f102 3eff 	add.w	lr, r2, #4294967295
 801c114:	4575      	cmp	r5, lr
 801c116:	f280 81f3 	bge.w	801c500 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c11a:	2800      	cmp	r0, #0
 801c11c:	f2c0 81f0 	blt.w	801c500 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c120:	f103 3eff 	add.w	lr, r3, #4294967295
 801c124:	4570      	cmp	r0, lr
 801c126:	f280 81eb 	bge.w	801c500 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c12a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c12c:	b212      	sxth	r2, r2
 801c12e:	fb00 5002 	mla	r0, r0, r2, r5
 801c132:	fa1f fe81 	uxth.w	lr, r1
 801c136:	eb03 0a00 	add.w	sl, r3, r0
 801c13a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801c13e:	f813 9000 	ldrb.w	r9, [r3, r0]
 801c142:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c146:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801c14a:	b29b      	uxth	r3, r3
 801c14c:	f1bc 0f00 	cmp.w	ip, #0
 801c150:	f000 81b9 	beq.w	801c4c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801c154:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801c158:	940d      	str	r4, [sp, #52]	; 0x34
 801c15a:	eb0a 0b02 	add.w	fp, sl, r2
 801c15e:	fa1f fa8c 	uxth.w	sl, ip
 801c162:	fb0a fe0e 	mul.w	lr, sl, lr
 801c166:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801c16a:	fa1f fa8a 	uxth.w	sl, sl
 801c16e:	eba5 050e 	sub.w	r5, r5, lr
 801c172:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c176:	940e      	str	r4, [sp, #56]	; 0x38
 801c178:	eba3 030a 	sub.w	r3, r3, sl
 801c17c:	b2ad      	uxth	r5, r5
 801c17e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c180:	b29b      	uxth	r3, r3
 801c182:	fb08 f505 	mul.w	r5, r8, r5
 801c186:	fb09 5303 	mla	r3, r9, r3, r5
 801c18a:	fb0a 3304 	mla	r3, sl, r4, r3
 801c18e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c190:	fb0e 3304 	mla	r3, lr, r4, r3
 801c194:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c198:	2b00      	cmp	r3, #0
 801c19a:	f000 810f 	beq.w	801c3bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c19e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c1a0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c1a4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801c1a8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801c1ac:	f000 8190 	beq.w	801c4d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801c1b0:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801c1b4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c1b8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c1bc:	fb09 f000 	mul.w	r0, r9, r0
 801c1c0:	fb0a fe0e 	mul.w	lr, sl, lr
 801c1c4:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801c1c8:	f100 0b20 	add.w	fp, r0, #32
 801c1cc:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801c1d0:	44ce      	add	lr, r9
 801c1d2:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801c1d6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c1da:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c1de:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c1e2:	ea4e 0909 	orr.w	r9, lr, r9
 801c1e6:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801c1ea:	8868      	ldrh	r0, [r5, #2]
 801c1ec:	d019      	beq.n	801c222 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801c1ee:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801c1f2:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c1f6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c1fa:	fb08 f800 	mul.w	r8, r8, r0
 801c1fe:	fb0a fe0e 	mul.w	lr, sl, lr
 801c202:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801c206:	f108 0b20 	add.w	fp, r8, #32
 801c20a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801c20e:	4486      	add	lr, r0
 801c210:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801c214:	0a00      	lsrs	r0, r0, #8
 801c216:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c21a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c21e:	ea4e 0000 	orr.w	r0, lr, r0
 801c222:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801c226:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c22a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801c22e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c232:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c236:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c23a:	ea4e 0909 	orr.w	r9, lr, r9
 801c23e:	ea4a 0000 	orr.w	r0, sl, r0
 801c242:	f1bc 0f00 	cmp.w	ip, #0
 801c246:	f000 8145 	beq.w	801c4d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801c24a:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801c24e:	3a01      	subs	r2, #1
 801c250:	0052      	lsls	r2, r2, #1
 801c252:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c254:	3202      	adds	r2, #2
 801c256:	2cff      	cmp	r4, #255	; 0xff
 801c258:	eb05 0e02 	add.w	lr, r5, r2
 801c25c:	5aaa      	ldrh	r2, [r5, r2]
 801c25e:	d018      	beq.n	801c292 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801c260:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801c264:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c268:	fb04 fa02 	mul.w	sl, r4, r2
 801c26c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c270:	fb08 f805 	mul.w	r8, r8, r5
 801c274:	f10a 0520 	add.w	r5, sl, #32
 801c278:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801c27c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801c280:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c284:	4442      	add	r2, r8
 801c286:	0a2d      	lsrs	r5, r5, #8
 801c288:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801c28c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c290:	432a      	orrs	r2, r5
 801c292:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c294:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801c298:	2cff      	cmp	r4, #255	; 0xff
 801c29a:	d01a      	beq.n	801c2d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801c29c:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801c2a0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c2a4:	fb04 fa05 	mul.w	sl, r4, r5
 801c2a8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c2ac:	fb08 f80e 	mul.w	r8, r8, lr
 801c2b0:	f10a 0e20 	add.w	lr, sl, #32
 801c2b4:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801c2b8:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801c2bc:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c2c0:	4445      	add	r5, r8
 801c2c2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c2c6:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801c2ca:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801c2ce:	ea45 050e 	orr.w	r5, r5, lr
 801c2d2:	fb1c fe01 	smulbb	lr, ip, r1
 801c2d6:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801c2da:	f1cc 0810 	rsb	r8, ip, #16
 801c2de:	eba8 0801 	sub.w	r8, r8, r1
 801c2e2:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c2e6:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801c2ea:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801c2ee:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801c2f2:	4341      	muls	r1, r0
 801c2f4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c2f8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c2fc:	ea4a 0202 	orr.w	r2, sl, r2
 801c300:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801c304:	fb09 1108 	mla	r1, r9, r8, r1
 801c308:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c30c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801c310:	fb0c 1102 	mla	r1, ip, r2, r1
 801c314:	ea4b 0505 	orr.w	r5, fp, r5
 801c318:	fb0e 1e05 	mla	lr, lr, r5, r1
 801c31c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c320:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c324:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c328:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c32c:	ea42 0e0e 	orr.w	lr, r2, lr
 801c330:	fa1f f28e 	uxth.w	r2, lr
 801c334:	2bff      	cmp	r3, #255	; 0xff
 801c336:	d103      	bne.n	801c340 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801c338:	9912      	ldr	r1, [sp, #72]	; 0x48
 801c33a:	29ff      	cmp	r1, #255	; 0xff
 801c33c:	f000 80de 	beq.w	801c4fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801c340:	990a      	ldr	r1, [sp, #40]	; 0x28
 801c342:	8838      	ldrh	r0, [r7, #0]
 801c344:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c346:	434b      	muls	r3, r1
 801c348:	f103 0c01 	add.w	ip, r3, #1
 801c34c:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801c350:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801c354:	fa5f fc83 	uxtb.w	ip, r3
 801c358:	1203      	asrs	r3, r0, #8
 801c35a:	1215      	asrs	r5, r2, #8
 801c35c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801c360:	fb13 f30c 	smulbb	r3, r3, ip
 801c364:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c368:	fb05 3501 	mla	r5, r5, r1, r3
 801c36c:	10c3      	asrs	r3, r0, #3
 801c36e:	10d1      	asrs	r1, r2, #3
 801c370:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801c374:	fb13 f30c 	smulbb	r3, r3, ip
 801c378:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c37c:	fb01 3104 	mla	r1, r1, r4, r3
 801c380:	00c3      	lsls	r3, r0, #3
 801c382:	00d2      	lsls	r2, r2, #3
 801c384:	b2db      	uxtb	r3, r3
 801c386:	b2d2      	uxtb	r2, r2
 801c388:	fb13 f30c 	smulbb	r3, r3, ip
 801c38c:	b2ad      	uxth	r5, r5
 801c38e:	fb02 3304 	mla	r3, r2, r4, r3
 801c392:	b29a      	uxth	r2, r3
 801c394:	1c6b      	adds	r3, r5, #1
 801c396:	b289      	uxth	r1, r1
 801c398:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c39c:	1c53      	adds	r3, r2, #1
 801c39e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c3a2:	1c4a      	adds	r2, r1, #1
 801c3a4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c3a8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c3ac:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c3b0:	0949      	lsrs	r1, r1, #5
 801c3b2:	432b      	orrs	r3, r5
 801c3b4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c3b8:	430b      	orrs	r3, r1
 801c3ba:	803b      	strh	r3, [r7, #0]
 801c3bc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c3be:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801c3c0:	4413      	add	r3, r2
 801c3c2:	9321      	str	r3, [sp, #132]	; 0x84
 801c3c4:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801c3c6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c3c8:	441a      	add	r2, r3
 801c3ca:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c3cc:	9222      	str	r2, [sp, #136]	; 0x88
 801c3ce:	3b01      	subs	r3, #1
 801c3d0:	3702      	adds	r7, #2
 801c3d2:	9313      	str	r3, [sp, #76]	; 0x4c
 801c3d4:	e689      	b.n	801c0ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801c3d6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c3d8:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 801c3da:	9c22      	ldr	r4, [sp, #136]	; 0x88
 801c3dc:	4433      	add	r3, r6
 801c3de:	9321      	str	r3, [sp, #132]	; 0x84
 801c3e0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c3e2:	441c      	add	r4, r3
 801c3e4:	9b08      	ldr	r3, [sp, #32]
 801c3e6:	9422      	str	r4, [sp, #136]	; 0x88
 801c3e8:	3b01      	subs	r3, #1
 801c3ea:	9308      	str	r3, [sp, #32]
 801c3ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c3ee:	3302      	adds	r3, #2
 801c3f0:	9309      	str	r3, [sp, #36]	; 0x24
 801c3f2:	e658      	b.n	801c0a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801c3f4:	d028      	beq.n	801c448 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801c3f6:	9b08      	ldr	r3, [sp, #32]
 801c3f8:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801c3fa:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801c3fc:	3b01      	subs	r3, #1
 801c3fe:	fb00 5003 	mla	r0, r0, r3, r5
 801c402:	1400      	asrs	r0, r0, #16
 801c404:	f53f ae6c 	bmi.w	801c0e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c408:	3901      	subs	r1, #1
 801c40a:	4288      	cmp	r0, r1
 801c40c:	f6bf ae68 	bge.w	801c0e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c410:	9924      	ldr	r1, [sp, #144]	; 0x90
 801c412:	9822      	ldr	r0, [sp, #136]	; 0x88
 801c414:	fb01 0303 	mla	r3, r1, r3, r0
 801c418:	141b      	asrs	r3, r3, #16
 801c41a:	f53f ae61 	bmi.w	801c0e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c41e:	3a01      	subs	r2, #1
 801c420:	4293      	cmp	r3, r2
 801c422:	f6bf ae5d 	bge.w	801c0e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c426:	9b08      	ldr	r3, [sp, #32]
 801c428:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801c42c:	9313      	str	r3, [sp, #76]	; 0x4c
 801c42e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801c432:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c434:	2b00      	cmp	r3, #0
 801c436:	f300 8082 	bgt.w	801c53e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801c43a:	9b08      	ldr	r3, [sp, #32]
 801c43c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c440:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c442:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801c446:	9309      	str	r3, [sp, #36]	; 0x24
 801c448:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c44a:	2b00      	cmp	r3, #0
 801c44c:	f340 81ef 	ble.w	801c82e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801c450:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c454:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c458:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c45c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c45e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c462:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c466:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c46a:	eef0 6a62 	vmov.f32	s13, s5
 801c46e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c472:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c476:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c47a:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 801c47e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c482:	eef0 6a43 	vmov.f32	s13, s6
 801c486:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c48a:	ee12 2a90 	vmov	r2, s5
 801c48e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c492:	fb92 f3f3 	sdiv	r3, r2, r3
 801c496:	ee13 2a10 	vmov	r2, s6
 801c49a:	9323      	str	r3, [sp, #140]	; 0x8c
 801c49c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c49e:	fb92 f3f3 	sdiv	r3, r2, r3
 801c4a2:	9324      	str	r3, [sp, #144]	; 0x90
 801c4a4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c4a6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c4a8:	3b01      	subs	r3, #1
 801c4aa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c4ae:	9311      	str	r3, [sp, #68]	; 0x44
 801c4b0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c4b2:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 801c4b6:	bf08      	it	eq
 801c4b8:	4613      	moveq	r3, r2
 801c4ba:	9308      	str	r3, [sp, #32]
 801c4bc:	eeb0 3a67 	vmov.f32	s6, s15
 801c4c0:	eef0 2a47 	vmov.f32	s5, s14
 801c4c4:	e5e1      	b.n	801c08a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801c4c6:	fb08 f505 	mul.w	r5, r8, r5
 801c4ca:	fb09 5303 	mla	r3, r9, r3, r5
 801c4ce:	e661      	b.n	801c194 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801c4d0:	4681      	mov	r9, r0
 801c4d2:	e688      	b.n	801c1e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801c4d4:	f1c1 0210 	rsb	r2, r1, #16
 801c4d8:	4341      	muls	r1, r0
 801c4da:	fb09 1902 	mla	r9, r9, r2, r1
 801c4de:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c4e2:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801c4e6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c4ea:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c4ee:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c4f2:	ea42 0909 	orr.w	r9, r2, r9
 801c4f6:	fa1f f289 	uxth.w	r2, r9
 801c4fa:	e71b      	b.n	801c334 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801c4fc:	803a      	strh	r2, [r7, #0]
 801c4fe:	e75d      	b.n	801c3bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c500:	f115 0e01 	adds.w	lr, r5, #1
 801c504:	f53f af5a 	bmi.w	801c3bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c508:	4572      	cmp	r2, lr
 801c50a:	f6ff af57 	blt.w	801c3bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c50e:	f110 0e01 	adds.w	lr, r0, #1
 801c512:	f53f af53 	bmi.w	801c3bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c516:	4573      	cmp	r3, lr
 801c518:	f6ff af50 	blt.w	801c3bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c51c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801c51e:	9502      	str	r5, [sp, #8]
 801c520:	b21b      	sxth	r3, r3
 801c522:	b212      	sxth	r2, r2
 801c524:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801c528:	9301      	str	r3, [sp, #4]
 801c52a:	9200      	str	r2, [sp, #0]
 801c52c:	e9cd c405 	strd	ip, r4, [sp, #20]
 801c530:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 801c534:	4639      	mov	r1, r7
 801c536:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c538:	f7ff fc04 	bl	801bd44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801c53c:	e73e      	b.n	801c3bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c53e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c540:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c544:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c546:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801c54a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c54c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c550:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c552:	141f      	asrs	r7, r3, #16
 801c554:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c556:	141b      	asrs	r3, r3, #16
 801c558:	fb01 3707 	mla	r7, r1, r7, r3
 801c55c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c55e:	fa1f fc82 	uxth.w	ip, r2
 801c562:	eb03 0a07 	add.w	sl, r3, r7
 801c566:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801c56a:	f813 9007 	ldrb.w	r9, [r3, r7]
 801c56e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c572:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801c576:	b29b      	uxth	r3, r3
 801c578:	2d00      	cmp	r5, #0
 801c57a:	f000 813d 	beq.w	801c7f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801c57e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801c582:	940f      	str	r4, [sp, #60]	; 0x3c
 801c584:	eb0a 0b01 	add.w	fp, sl, r1
 801c588:	fa1f fa85 	uxth.w	sl, r5
 801c58c:	fb0a fc0c 	mul.w	ip, sl, ip
 801c590:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801c594:	fa1f fa8a 	uxth.w	sl, sl
 801c598:	eba0 000c 	sub.w	r0, r0, ip
 801c59c:	eba3 030a 	sub.w	r3, r3, sl
 801c5a0:	b280      	uxth	r0, r0
 801c5a2:	fb08 f000 	mul.w	r0, r8, r0
 801c5a6:	b29b      	uxth	r3, r3
 801c5a8:	fb09 0303 	mla	r3, r9, r3, r0
 801c5ac:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801c5ae:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c5b2:	9410      	str	r4, [sp, #64]	; 0x40
 801c5b4:	fb0a 3300 	mla	r3, sl, r0, r3
 801c5b8:	fb0c 3304 	mla	r3, ip, r4, r3
 801c5bc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c5c0:	2b00      	cmp	r3, #0
 801c5c2:	f000 810b 	beq.w	801c7dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801c5c6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801c5c8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c5ca:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c5ce:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801c5d2:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801c5d6:	f000 8114 	beq.w	801c802 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 801c5da:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801c5de:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c5e2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c5e6:	fb09 f707 	mul.w	r7, r9, r7
 801c5ea:	fb0a fc0c 	mul.w	ip, sl, ip
 801c5ee:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801c5f2:	f107 0b20 	add.w	fp, r7, #32
 801c5f6:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801c5fa:	44cc      	add	ip, r9
 801c5fc:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801c600:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c604:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801c608:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c60c:	ea4c 0909 	orr.w	r9, ip, r9
 801c610:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801c614:	8847      	ldrh	r7, [r0, #2]
 801c616:	d019      	beq.n	801c64c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 801c618:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801c61c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c620:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c624:	fb08 f807 	mul.w	r8, r8, r7
 801c628:	fb0a fc0c 	mul.w	ip, sl, ip
 801c62c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801c630:	f108 0b20 	add.w	fp, r8, #32
 801c634:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801c638:	44bc      	add	ip, r7
 801c63a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801c63e:	0a3f      	lsrs	r7, r7, #8
 801c640:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801c644:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c648:	ea4c 0707 	orr.w	r7, ip, r7
 801c64c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801c650:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801c654:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801c658:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c65c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c660:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801c664:	ea4c 0909 	orr.w	r9, ip, r9
 801c668:	ea4a 0707 	orr.w	r7, sl, r7
 801c66c:	2d00      	cmp	r5, #0
 801c66e:	f000 80ca 	beq.w	801c806 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801c672:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801c676:	3901      	subs	r1, #1
 801c678:	0049      	lsls	r1, r1, #1
 801c67a:	3102      	adds	r1, #2
 801c67c:	eb00 0c01 	add.w	ip, r0, r1
 801c680:	5a41      	ldrh	r1, [r0, r1]
 801c682:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801c684:	28ff      	cmp	r0, #255	; 0xff
 801c686:	d019      	beq.n	801c6bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 801c688:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801c68a:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801c68e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c692:	fb04 fa01 	mul.w	sl, r4, r1
 801c696:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c69a:	fb08 f800 	mul.w	r8, r8, r0
 801c69e:	f10a 0020 	add.w	r0, sl, #32
 801c6a2:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801c6a6:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801c6aa:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c6ae:	4441      	add	r1, r8
 801c6b0:	0a00      	lsrs	r0, r0, #8
 801c6b2:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801c6b6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c6ba:	4301      	orrs	r1, r0
 801c6bc:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c6be:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801c6c2:	2cff      	cmp	r4, #255	; 0xff
 801c6c4:	d01a      	beq.n	801c6fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801c6c6:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801c6ca:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c6ce:	fb04 fa00 	mul.w	sl, r4, r0
 801c6d2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c6d6:	fb08 f80c 	mul.w	r8, r8, ip
 801c6da:	f10a 0c20 	add.w	ip, sl, #32
 801c6de:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801c6e2:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801c6e6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c6ea:	4440      	add	r0, r8
 801c6ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c6f0:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801c6f4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801c6f8:	ea40 000c 	orr.w	r0, r0, ip
 801c6fc:	fb15 fc02 	smulbb	ip, r5, r2
 801c700:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801c704:	f1c5 0810 	rsb	r8, r5, #16
 801c708:	eba8 0802 	sub.w	r8, r8, r2
 801c70c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801c710:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801c714:	437a      	muls	r2, r7
 801c716:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801c71a:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801c71e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c722:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801c726:	fb09 2208 	mla	r2, r9, r8, r2
 801c72a:	ea4a 0101 	orr.w	r1, sl, r1
 801c72e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801c732:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c736:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c73a:	fb05 2201 	mla	r2, r5, r1, r2
 801c73e:	ea4b 0000 	orr.w	r0, fp, r0
 801c742:	fb0c 2200 	mla	r2, ip, r0, r2
 801c746:	0d57      	lsrs	r7, r2, #21
 801c748:	0952      	lsrs	r2, r2, #5
 801c74a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c74e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c752:	433a      	orrs	r2, r7
 801c754:	2bff      	cmp	r3, #255	; 0xff
 801c756:	b292      	uxth	r2, r2
 801c758:	d102      	bne.n	801c760 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801c75a:	9912      	ldr	r1, [sp, #72]	; 0x48
 801c75c:	29ff      	cmp	r1, #255	; 0xff
 801c75e:	d063      	beq.n	801c828 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 801c760:	980a      	ldr	r0, [sp, #40]	; 0x28
 801c762:	f8be 1000 	ldrh.w	r1, [lr]
 801c766:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c768:	4343      	muls	r3, r0
 801c76a:	1c58      	adds	r0, r3, #1
 801c76c:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801c770:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801c774:	1208      	asrs	r0, r1, #8
 801c776:	b2db      	uxtb	r3, r3
 801c778:	1215      	asrs	r5, r2, #8
 801c77a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c77e:	fb10 f003 	smulbb	r0, r0, r3
 801c782:	10cf      	asrs	r7, r1, #3
 801c784:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c788:	00c9      	lsls	r1, r1, #3
 801c78a:	fb05 0504 	mla	r5, r5, r4, r0
 801c78e:	b2c9      	uxtb	r1, r1
 801c790:	10d0      	asrs	r0, r2, #3
 801c792:	00d2      	lsls	r2, r2, #3
 801c794:	fb11 f103 	smulbb	r1, r1, r3
 801c798:	b2d2      	uxtb	r2, r2
 801c79a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c79e:	fb02 1204 	mla	r2, r2, r4, r1
 801c7a2:	fb17 f703 	smulbb	r7, r7, r3
 801c7a6:	b2ad      	uxth	r5, r5
 801c7a8:	b292      	uxth	r2, r2
 801c7aa:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c7ae:	fb00 7004 	mla	r0, r0, r4, r7
 801c7b2:	1c6b      	adds	r3, r5, #1
 801c7b4:	1c57      	adds	r7, r2, #1
 801c7b6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c7ba:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801c7be:	b280      	uxth	r0, r0
 801c7c0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801c7c4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c7c8:	433d      	orrs	r5, r7
 801c7ca:	1c47      	adds	r7, r0, #1
 801c7cc:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801c7d0:	097f      	lsrs	r7, r7, #5
 801c7d2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c7d6:	433d      	orrs	r5, r7
 801c7d8:	f8ae 5000 	strh.w	r5, [lr]
 801c7dc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c7de:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801c7e0:	4413      	add	r3, r2
 801c7e2:	9321      	str	r3, [sp, #132]	; 0x84
 801c7e4:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801c7e6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c7e8:	441a      	add	r2, r3
 801c7ea:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c7ec:	9222      	str	r2, [sp, #136]	; 0x88
 801c7ee:	3b01      	subs	r3, #1
 801c7f0:	f10e 0e02 	add.w	lr, lr, #2
 801c7f4:	9313      	str	r3, [sp, #76]	; 0x4c
 801c7f6:	e61c      	b.n	801c432 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 801c7f8:	fb08 f000 	mul.w	r0, r8, r0
 801c7fc:	fb09 0303 	mla	r3, r9, r3, r0
 801c800:	e6dc      	b.n	801c5bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 801c802:	46b9      	mov	r9, r7
 801c804:	e704      	b.n	801c610 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 801c806:	f1c2 0110 	rsb	r1, r2, #16
 801c80a:	437a      	muls	r2, r7
 801c80c:	fb09 2901 	mla	r9, r9, r1, r2
 801c810:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c814:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801c818:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801c81c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c820:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c824:	4302      	orrs	r2, r0
 801c826:	e795      	b.n	801c754 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 801c828:	f8ae 2000 	strh.w	r2, [lr]
 801c82c:	e7d6      	b.n	801c7dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801c82e:	b017      	add	sp, #92	; 0x5c
 801c830:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c834 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801c834:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c838:	b085      	sub	sp, #20
 801c83a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801c83e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801c842:	9103      	str	r1, [sp, #12]
 801c844:	fb00 7406 	mla	r4, r0, r6, r7
 801c848:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801c84c:	2800      	cmp	r0, #0
 801c84e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801c852:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801c856:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801c85a:	9501      	str	r5, [sp, #4]
 801c85c:	eb02 0904 	add.w	r9, r2, r4
 801c860:	f2c0 8141 	blt.w	801cae6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801c864:	4583      	cmp	fp, r0
 801c866:	f340 813e 	ble.w	801cae6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801c86a:	2f00      	cmp	r7, #0
 801c86c:	f2c0 8137 	blt.w	801cade <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801c870:	42be      	cmp	r6, r7
 801c872:	f340 8134 	ble.w	801cade <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801c876:	f812 c004 	ldrb.w	ip, [r2, r4]
 801c87a:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801c87e:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801c882:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801c886:	4355      	muls	r5, r2
 801c888:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c88c:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801c890:	fb0c f203 	mul.w	r2, ip, r3
 801c894:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801c898:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801c89c:	441d      	add	r5, r3
 801c89e:	f102 0320 	add.w	r3, r2, #32
 801c8a2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c8a6:	0a1b      	lsrs	r3, r3, #8
 801c8a8:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801c8ac:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c8b0:	431c      	orrs	r4, r3
 801c8b2:	1c7b      	adds	r3, r7, #1
 801c8b4:	f100 811c 	bmi.w	801caf0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801c8b8:	429e      	cmp	r6, r3
 801c8ba:	f340 8119 	ble.w	801caf0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801c8be:	2900      	cmp	r1, #0
 801c8c0:	f000 8119 	beq.w	801caf6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801c8c4:	9a01      	ldr	r2, [sp, #4]
 801c8c6:	f899 3001 	ldrb.w	r3, [r9, #1]
 801c8ca:	8855      	ldrh	r5, [r2, #2]
 801c8cc:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801c8d0:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801c8d4:	fb08 f802 	mul.w	r8, r8, r2
 801c8d8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c8dc:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801c8e0:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801c8e4:	435d      	muls	r5, r3
 801c8e6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c8ea:	44d0      	add	r8, sl
 801c8ec:	f105 0a20 	add.w	sl, r5, #32
 801c8f0:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801c8f4:	0a2d      	lsrs	r5, r5, #8
 801c8f6:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801c8fa:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c8fe:	432a      	orrs	r2, r5
 801c900:	3001      	adds	r0, #1
 801c902:	f100 80fe 	bmi.w	801cb02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801c906:	4583      	cmp	fp, r0
 801c908:	f340 80fb 	ble.w	801cb02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801c90c:	f1be 0f00 	cmp.w	lr, #0
 801c910:	f000 80fc 	beq.w	801cb0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801c914:	2f00      	cmp	r7, #0
 801c916:	f2c0 80f1 	blt.w	801cafc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801c91a:	42be      	cmp	r6, r7
 801c91c:	f340 80ee 	ble.w	801cafc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801c920:	9801      	ldr	r0, [sp, #4]
 801c922:	f819 5006 	ldrb.w	r5, [r9, r6]
 801c926:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801c92a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801c92e:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801c932:	fb0a fa00 	mul.w	sl, sl, r0
 801c936:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801c93a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801c93e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801c942:	fb05 f808 	mul.w	r8, r5, r8
 801c946:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801c94a:	4482      	add	sl, r0
 801c94c:	f108 0020 	add.w	r0, r8, #32
 801c950:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c954:	0a00      	lsrs	r0, r0, #8
 801c956:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801c95a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c95e:	ea4b 0b00 	orr.w	fp, fp, r0
 801c962:	3701      	adds	r7, #1
 801c964:	f100 80d7 	bmi.w	801cb16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801c968:	42be      	cmp	r6, r7
 801c96a:	f340 80d4 	ble.w	801cb16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801c96e:	2900      	cmp	r1, #0
 801c970:	f000 80d4 	beq.w	801cb1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801c974:	3601      	adds	r6, #1
 801c976:	9801      	ldr	r0, [sp, #4]
 801c978:	f819 7006 	ldrb.w	r7, [r9, r6]
 801c97c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801c980:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801c984:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801c988:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c98c:	fb09 f906 	mul.w	r9, r9, r6
 801c990:	fb07 f800 	mul.w	r8, r7, r0
 801c994:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801c998:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801c99c:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801c9a0:	44d1      	add	r9, sl
 801c9a2:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801c9a6:	f108 0020 	add.w	r0, r8, #32
 801c9aa:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c9ae:	0a00      	lsrs	r0, r0, #8
 801c9b0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c9b4:	4330      	orrs	r0, r6
 801c9b6:	b28e      	uxth	r6, r1
 801c9b8:	fa1f f98e 	uxth.w	r9, lr
 801c9bc:	fb06 f809 	mul.w	r8, r6, r9
 801c9c0:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801c9c4:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801c9c8:	0136      	lsls	r6, r6, #4
 801c9ca:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c9ce:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801c9d2:	9601      	str	r6, [sp, #4]
 801c9d4:	ea4a 0404 	orr.w	r4, sl, r4
 801c9d8:	fa1f f689 	uxth.w	r6, r9
 801c9dc:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c9e0:	fb11 f90e 	smulbb	r9, r1, lr
 801c9e4:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801c9e8:	9602      	str	r6, [sp, #8]
 801c9ea:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c9ee:	4626      	mov	r6, r4
 801c9f0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c9f4:	f1ce 0410 	rsb	r4, lr, #16
 801c9f8:	1a64      	subs	r4, r4, r1
 801c9fa:	ea4a 0202 	orr.w	r2, sl, r2
 801c9fe:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801ca02:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801ca06:	434a      	muls	r2, r1
 801ca08:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801ca0c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ca10:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ca14:	fb04 2406 	mla	r4, r4, r6, r2
 801ca18:	ea4a 0000 	orr.w	r0, sl, r0
 801ca1c:	fb09 4200 	mla	r2, r9, r0, r4
 801ca20:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801ca24:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801ca28:	9801      	ldr	r0, [sp, #4]
 801ca2a:	9903      	ldr	r1, [sp, #12]
 801ca2c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801ca30:	ea44 0b0b 	orr.w	fp, r4, fp
 801ca34:	9c02      	ldr	r4, [sp, #8]
 801ca36:	8809      	ldrh	r1, [r1, #0]
 801ca38:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 801ca3c:	1b00      	subs	r0, r0, r4
 801ca3e:	9c01      	ldr	r4, [sp, #4]
 801ca40:	eba4 0608 	sub.w	r6, r4, r8
 801ca44:	b2b6      	uxth	r6, r6
 801ca46:	b280      	uxth	r0, r0
 801ca48:	4373      	muls	r3, r6
 801ca4a:	fb0c 3300 	mla	r3, ip, r0, r3
 801ca4e:	9802      	ldr	r0, [sp, #8]
 801ca50:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801ca54:	fb00 3505 	mla	r5, r0, r5, r3
 801ca58:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801ca5c:	fb08 5707 	mla	r7, r8, r7, r5
 801ca60:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801ca64:	120b      	asrs	r3, r1, #8
 801ca66:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801ca6a:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801ca6e:	b2ff      	uxtb	r7, r7
 801ca70:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ca74:	10c8      	asrs	r0, r1, #3
 801ca76:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801ca7a:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801ca7e:	00c9      	lsls	r1, r1, #3
 801ca80:	437b      	muls	r3, r7
 801ca82:	ea42 0e0e 	orr.w	lr, r2, lr
 801ca86:	b2c9      	uxtb	r1, r1
 801ca88:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ca8c:	fa1f f28e 	uxth.w	r2, lr
 801ca90:	4378      	muls	r0, r7
 801ca92:	434f      	muls	r7, r1
 801ca94:	1c59      	adds	r1, r3, #1
 801ca96:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801ca9a:	1213      	asrs	r3, r2, #8
 801ca9c:	f023 0307 	bic.w	r3, r3, #7
 801caa0:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801caa4:	1c41      	adds	r1, r0, #1
 801caa6:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801caaa:	10d1      	asrs	r1, r2, #3
 801caac:	f021 0103 	bic.w	r1, r1, #3
 801cab0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801cab4:	021b      	lsls	r3, r3, #8
 801cab6:	00c9      	lsls	r1, r1, #3
 801cab8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801cabc:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801cac0:	430b      	orrs	r3, r1
 801cac2:	1c79      	adds	r1, r7, #1
 801cac4:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801cac8:	00d2      	lsls	r2, r2, #3
 801caca:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801cace:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cad2:	431a      	orrs	r2, r3
 801cad4:	9b03      	ldr	r3, [sp, #12]
 801cad6:	801a      	strh	r2, [r3, #0]
 801cad8:	b005      	add	sp, #20
 801cada:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cade:	f04f 0c00 	mov.w	ip, #0
 801cae2:	4664      	mov	r4, ip
 801cae4:	e6e5      	b.n	801c8b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801cae6:	2300      	movs	r3, #0
 801cae8:	469c      	mov	ip, r3
 801caea:	461a      	mov	r2, r3
 801caec:	461c      	mov	r4, r3
 801caee:	e707      	b.n	801c900 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801caf0:	2300      	movs	r3, #0
 801caf2:	461a      	mov	r2, r3
 801caf4:	e704      	b.n	801c900 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801caf6:	460b      	mov	r3, r1
 801caf8:	460a      	mov	r2, r1
 801cafa:	e701      	b.n	801c900 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801cafc:	2500      	movs	r5, #0
 801cafe:	46ab      	mov	fp, r5
 801cb00:	e72f      	b.n	801c962 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801cb02:	2700      	movs	r7, #0
 801cb04:	463d      	mov	r5, r7
 801cb06:	4638      	mov	r0, r7
 801cb08:	46bb      	mov	fp, r7
 801cb0a:	e754      	b.n	801c9b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801cb0c:	4677      	mov	r7, lr
 801cb0e:	4675      	mov	r5, lr
 801cb10:	4670      	mov	r0, lr
 801cb12:	46f3      	mov	fp, lr
 801cb14:	e74f      	b.n	801c9b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801cb16:	2700      	movs	r7, #0
 801cb18:	4638      	mov	r0, r7
 801cb1a:	e74c      	b.n	801c9b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801cb1c:	460f      	mov	r7, r1
 801cb1e:	4608      	mov	r0, r1
 801cb20:	e749      	b.n	801c9b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801cb24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cb24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cb28:	b093      	sub	sp, #76	; 0x4c
 801cb2a:	9210      	str	r2, [sp, #64]	; 0x40
 801cb2c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801cb2e:	910e      	str	r1, [sp, #56]	; 0x38
 801cb30:	9306      	str	r3, [sp, #24]
 801cb32:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801cb36:	9011      	str	r0, [sp, #68]	; 0x44
 801cb38:	6850      	ldr	r0, [r2, #4]
 801cb3a:	6812      	ldr	r2, [r2, #0]
 801cb3c:	fb00 1303 	mla	r3, r0, r3, r1
 801cb40:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801cb44:	9307      	str	r3, [sp, #28]
 801cb46:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cb48:	681b      	ldr	r3, [r3, #0]
 801cb4a:	9308      	str	r3, [sp, #32]
 801cb4c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cb4e:	685b      	ldr	r3, [r3, #4]
 801cb50:	9309      	str	r3, [sp, #36]	; 0x24
 801cb52:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cb54:	2b00      	cmp	r3, #0
 801cb56:	dc03      	bgt.n	801cb60 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801cb58:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cb5a:	2b00      	cmp	r3, #0
 801cb5c:	f340 83b4 	ble.w	801d2c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801cb60:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cb62:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cb66:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801cb6a:	1e48      	subs	r0, r1, #1
 801cb6c:	1e55      	subs	r5, r2, #1
 801cb6e:	9b06      	ldr	r3, [sp, #24]
 801cb70:	2b00      	cmp	r3, #0
 801cb72:	f340 8163 	ble.w	801ce3c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801cb76:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 801cb78:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801cb7a:	1436      	asrs	r6, r6, #16
 801cb7c:	ea4f 4323 	mov.w	r3, r3, asr #16
 801cb80:	d406      	bmi.n	801cb90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801cb82:	4286      	cmp	r6, r0
 801cb84:	da04      	bge.n	801cb90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801cb86:	2b00      	cmp	r3, #0
 801cb88:	db02      	blt.n	801cb90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801cb8a:	42ab      	cmp	r3, r5
 801cb8c:	f2c0 8157 	blt.w	801ce3e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801cb90:	3601      	adds	r6, #1
 801cb92:	f100 8144 	bmi.w	801ce1e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801cb96:	42b1      	cmp	r1, r6
 801cb98:	f2c0 8141 	blt.w	801ce1e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801cb9c:	3301      	adds	r3, #1
 801cb9e:	f100 813e 	bmi.w	801ce1e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801cba2:	429a      	cmp	r2, r3
 801cba4:	f2c0 813b 	blt.w	801ce1e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801cba8:	9b06      	ldr	r3, [sp, #24]
 801cbaa:	9f07      	ldr	r7, [sp, #28]
 801cbac:	930f      	str	r3, [sp, #60]	; 0x3c
 801cbae:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801cbb2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801cbb4:	2b00      	cmp	r3, #0
 801cbb6:	f340 8164 	ble.w	801ce82 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801cbba:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801cbbc:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801cbbe:	1418      	asrs	r0, r3, #16
 801cbc0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801cbc2:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801cbc6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801cbc8:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801cbcc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cbce:	142d      	asrs	r5, r5, #16
 801cbd0:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801cbd4:	f100 81ee 	bmi.w	801cfb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801cbd8:	f102 3eff 	add.w	lr, r2, #4294967295
 801cbdc:	4575      	cmp	r5, lr
 801cbde:	f280 81e9 	bge.w	801cfb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801cbe2:	2800      	cmp	r0, #0
 801cbe4:	f2c0 81e6 	blt.w	801cfb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801cbe8:	f103 3eff 	add.w	lr, r3, #4294967295
 801cbec:	4570      	cmp	r0, lr
 801cbee:	f280 81e1 	bge.w	801cfb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801cbf2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cbf4:	b212      	sxth	r2, r2
 801cbf6:	fb00 5002 	mla	r0, r0, r2, r5
 801cbfa:	fa1f fe81 	uxth.w	lr, r1
 801cbfe:	eb03 0a00 	add.w	sl, r3, r0
 801cc02:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801cc06:	f813 9000 	ldrb.w	r9, [r3, r0]
 801cc0a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801cc0e:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801cc12:	b29b      	uxth	r3, r3
 801cc14:	f1bc 0f00 	cmp.w	ip, #0
 801cc18:	f000 8179 	beq.w	801cf0e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801cc1c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801cc20:	940a      	str	r4, [sp, #40]	; 0x28
 801cc22:	eb0a 0b02 	add.w	fp, sl, r2
 801cc26:	fa1f fa8c 	uxth.w	sl, ip
 801cc2a:	fb0a fe0e 	mul.w	lr, sl, lr
 801cc2e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801cc32:	fa1f fa8a 	uxth.w	sl, sl
 801cc36:	eba5 050e 	sub.w	r5, r5, lr
 801cc3a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801cc3e:	940b      	str	r4, [sp, #44]	; 0x2c
 801cc40:	eba3 030a 	sub.w	r3, r3, sl
 801cc44:	b2ad      	uxth	r5, r5
 801cc46:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801cc48:	b29b      	uxth	r3, r3
 801cc4a:	fb08 f505 	mul.w	r5, r8, r5
 801cc4e:	fb09 5303 	mla	r3, r9, r3, r5
 801cc52:	fb0a 3304 	mla	r3, sl, r4, r3
 801cc56:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801cc58:	fb0e 3304 	mla	r3, lr, r4, r3
 801cc5c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801cc60:	2b00      	cmp	r3, #0
 801cc62:	f000 80cf 	beq.w	801ce04 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801cc66:	9c08      	ldr	r4, [sp, #32]
 801cc68:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801cc6c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801cc70:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801cc74:	f000 8150 	beq.w	801cf18 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801cc78:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801cc7c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801cc80:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cc84:	fb09 f000 	mul.w	r0, r9, r0
 801cc88:	fb0a fe0e 	mul.w	lr, sl, lr
 801cc8c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801cc90:	f100 0b20 	add.w	fp, r0, #32
 801cc94:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801cc98:	44ce      	add	lr, r9
 801cc9a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801cc9e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801cca2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801cca6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801ccaa:	ea4e 0909 	orr.w	r9, lr, r9
 801ccae:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801ccb2:	8868      	ldrh	r0, [r5, #2]
 801ccb4:	d019      	beq.n	801ccea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801ccb6:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801ccba:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801ccbe:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ccc2:	fb08 f800 	mul.w	r8, r8, r0
 801ccc6:	fb0a fe0e 	mul.w	lr, sl, lr
 801ccca:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801ccce:	f108 0b20 	add.w	fp, r8, #32
 801ccd2:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801ccd6:	4486      	add	lr, r0
 801ccd8:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801ccdc:	0a00      	lsrs	r0, r0, #8
 801ccde:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801cce2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cce6:	ea4e 0000 	orr.w	r0, lr, r0
 801ccea:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801ccee:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801ccf2:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801ccf6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801ccfa:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ccfe:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801cd02:	ea4e 0909 	orr.w	r9, lr, r9
 801cd06:	ea4a 0000 	orr.w	r0, sl, r0
 801cd0a:	f1bc 0f00 	cmp.w	ip, #0
 801cd0e:	f000 8105 	beq.w	801cf1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801cd12:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801cd16:	3a01      	subs	r2, #1
 801cd18:	0052      	lsls	r2, r2, #1
 801cd1a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801cd1c:	3202      	adds	r2, #2
 801cd1e:	2cff      	cmp	r4, #255	; 0xff
 801cd20:	eb05 0e02 	add.w	lr, r5, r2
 801cd24:	5aaa      	ldrh	r2, [r5, r2]
 801cd26:	d018      	beq.n	801cd5a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801cd28:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801cd2c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cd30:	fb04 fa02 	mul.w	sl, r4, r2
 801cd34:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801cd38:	fb08 f805 	mul.w	r8, r8, r5
 801cd3c:	f10a 0520 	add.w	r5, sl, #32
 801cd40:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801cd44:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801cd48:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801cd4c:	4442      	add	r2, r8
 801cd4e:	0a2d      	lsrs	r5, r5, #8
 801cd50:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801cd54:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cd58:	432a      	orrs	r2, r5
 801cd5a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801cd5c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801cd60:	2cff      	cmp	r4, #255	; 0xff
 801cd62:	d01a      	beq.n	801cd9a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801cd64:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801cd68:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cd6c:	fb04 fa05 	mul.w	sl, r4, r5
 801cd70:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801cd74:	fb08 f80e 	mul.w	r8, r8, lr
 801cd78:	f10a 0e20 	add.w	lr, sl, #32
 801cd7c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801cd80:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801cd84:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801cd88:	4445      	add	r5, r8
 801cd8a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801cd8e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801cd92:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801cd96:	ea45 050e 	orr.w	r5, r5, lr
 801cd9a:	fb1c fe01 	smulbb	lr, ip, r1
 801cd9e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801cda2:	f1cc 0810 	rsb	r8, ip, #16
 801cda6:	eba8 0801 	sub.w	r8, r8, r1
 801cdaa:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801cdae:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801cdb2:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801cdb6:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801cdba:	4341      	muls	r1, r0
 801cdbc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cdc0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801cdc4:	ea4a 0202 	orr.w	r2, sl, r2
 801cdc8:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801cdcc:	fb09 1108 	mla	r1, r9, r8, r1
 801cdd0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801cdd4:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801cdd8:	fb0c 1102 	mla	r1, ip, r2, r1
 801cddc:	ea4b 0505 	orr.w	r5, fp, r5
 801cde0:	fb0e 1e05 	mla	lr, lr, r5, r1
 801cde4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801cde8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801cdec:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cdf0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801cdf4:	ea42 0e0e 	orr.w	lr, r2, lr
 801cdf8:	fa1f f28e 	uxth.w	r2, lr
 801cdfc:	2bff      	cmp	r3, #255	; 0xff
 801cdfe:	f040 80a1 	bne.w	801cf44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801ce02:	803a      	strh	r2, [r7, #0]
 801ce04:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801ce06:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801ce08:	4413      	add	r3, r2
 801ce0a:	931d      	str	r3, [sp, #116]	; 0x74
 801ce0c:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801ce0e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ce10:	441a      	add	r2, r3
 801ce12:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ce14:	921e      	str	r2, [sp, #120]	; 0x78
 801ce16:	3b01      	subs	r3, #1
 801ce18:	3702      	adds	r7, #2
 801ce1a:	930f      	str	r3, [sp, #60]	; 0x3c
 801ce1c:	e6c9      	b.n	801cbb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ce1e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801ce20:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801ce22:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 801ce24:	4433      	add	r3, r6
 801ce26:	931d      	str	r3, [sp, #116]	; 0x74
 801ce28:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ce2a:	441c      	add	r4, r3
 801ce2c:	9b06      	ldr	r3, [sp, #24]
 801ce2e:	941e      	str	r4, [sp, #120]	; 0x78
 801ce30:	3b01      	subs	r3, #1
 801ce32:	9306      	str	r3, [sp, #24]
 801ce34:	9b07      	ldr	r3, [sp, #28]
 801ce36:	3302      	adds	r3, #2
 801ce38:	9307      	str	r3, [sp, #28]
 801ce3a:	e698      	b.n	801cb6e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801ce3c:	d028      	beq.n	801ce90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801ce3e:	9b06      	ldr	r3, [sp, #24]
 801ce40:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801ce42:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801ce44:	3b01      	subs	r3, #1
 801ce46:	fb00 5003 	mla	r0, r0, r3, r5
 801ce4a:	1400      	asrs	r0, r0, #16
 801ce4c:	f53f aeac 	bmi.w	801cba8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801ce50:	3901      	subs	r1, #1
 801ce52:	4288      	cmp	r0, r1
 801ce54:	f6bf aea8 	bge.w	801cba8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801ce58:	9920      	ldr	r1, [sp, #128]	; 0x80
 801ce5a:	981e      	ldr	r0, [sp, #120]	; 0x78
 801ce5c:	fb01 0303 	mla	r3, r1, r3, r0
 801ce60:	141b      	asrs	r3, r3, #16
 801ce62:	f53f aea1 	bmi.w	801cba8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801ce66:	3a01      	subs	r2, #1
 801ce68:	4293      	cmp	r3, r2
 801ce6a:	f6bf ae9d 	bge.w	801cba8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801ce6e:	9b06      	ldr	r3, [sp, #24]
 801ce70:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801ce74:	930f      	str	r3, [sp, #60]	; 0x3c
 801ce76:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801ce7a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ce7c:	2b00      	cmp	r3, #0
 801ce7e:	f300 80b6 	bgt.w	801cfee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 801ce82:	9b06      	ldr	r3, [sp, #24]
 801ce84:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801ce88:	9b07      	ldr	r3, [sp, #28]
 801ce8a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801ce8e:	9307      	str	r3, [sp, #28]
 801ce90:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ce92:	2b00      	cmp	r3, #0
 801ce94:	f340 8218 	ble.w	801d2c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801ce98:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ce9c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801cea0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801cea4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cea6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ceaa:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ceae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ceb2:	eef0 6a62 	vmov.f32	s13, s5
 801ceb6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ceba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cebe:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cec2:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 801cec6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ceca:	eef0 6a43 	vmov.f32	s13, s6
 801cece:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ced2:	ee12 2a90 	vmov	r2, s5
 801ced6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ceda:	fb92 f3f3 	sdiv	r3, r2, r3
 801cede:	ee13 2a10 	vmov	r2, s6
 801cee2:	931f      	str	r3, [sp, #124]	; 0x7c
 801cee4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cee6:	fb92 f3f3 	sdiv	r3, r2, r3
 801ceea:	9320      	str	r3, [sp, #128]	; 0x80
 801ceec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ceee:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801cef0:	3b01      	subs	r3, #1
 801cef2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cef6:	930e      	str	r3, [sp, #56]	; 0x38
 801cef8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cefa:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 801cefe:	bf08      	it	eq
 801cf00:	4613      	moveq	r3, r2
 801cf02:	9306      	str	r3, [sp, #24]
 801cf04:	eeb0 3a67 	vmov.f32	s6, s15
 801cf08:	eef0 2a47 	vmov.f32	s5, s14
 801cf0c:	e621      	b.n	801cb52 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801cf0e:	fb08 f505 	mul.w	r5, r8, r5
 801cf12:	fb09 5303 	mla	r3, r9, r3, r5
 801cf16:	e6a1      	b.n	801cc5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801cf18:	4681      	mov	r9, r0
 801cf1a:	e6c8      	b.n	801ccae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801cf1c:	f1c1 0210 	rsb	r2, r1, #16
 801cf20:	4341      	muls	r1, r0
 801cf22:	fb09 1902 	mla	r9, r9, r2, r1
 801cf26:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801cf2a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801cf2e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801cf32:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cf36:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801cf3a:	ea42 0909 	orr.w	r9, r2, r9
 801cf3e:	fa1f f289 	uxth.w	r2, r9
 801cf42:	e75b      	b.n	801cdfc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801cf44:	f8b7 c000 	ldrh.w	ip, [r7]
 801cf48:	43db      	mvns	r3, r3
 801cf4a:	ea4f 202c 	mov.w	r0, ip, asr #8
 801cf4e:	fa5f fe83 	uxtb.w	lr, r3
 801cf52:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801cf56:	fb00 f00e 	mul.w	r0, r0, lr
 801cf5a:	1c41      	adds	r1, r0, #1
 801cf5c:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801cf60:	1211      	asrs	r1, r2, #8
 801cf62:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801cf66:	f021 0107 	bic.w	r1, r1, #7
 801cf6a:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801cf6e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801cf72:	48d7      	ldr	r0, [pc, #860]	; (801d2d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801cf74:	fb05 f50e 	mul.w	r5, r5, lr
 801cf78:	b2c9      	uxtb	r1, r1
 801cf7a:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801cf7e:	1c69      	adds	r1, r5, #1
 801cf80:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801cf84:	10d1      	asrs	r1, r2, #3
 801cf86:	f021 0103 	bic.w	r1, r1, #3
 801cf8a:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801cf8e:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801cf92:	b2db      	uxtb	r3, r3
 801cf94:	00c9      	lsls	r1, r1, #3
 801cf96:	fb03 f30e 	mul.w	r3, r3, lr
 801cf9a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801cf9e:	4301      	orrs	r1, r0
 801cfa0:	1c58      	adds	r0, r3, #1
 801cfa2:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801cfa6:	00d2      	lsls	r2, r2, #3
 801cfa8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801cfac:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cfb0:	430a      	orrs	r2, r1
 801cfb2:	e726      	b.n	801ce02 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 801cfb4:	f115 0e01 	adds.w	lr, r5, #1
 801cfb8:	f53f af24 	bmi.w	801ce04 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801cfbc:	4572      	cmp	r2, lr
 801cfbe:	f6ff af21 	blt.w	801ce04 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801cfc2:	f110 0e01 	adds.w	lr, r0, #1
 801cfc6:	f53f af1d 	bmi.w	801ce04 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801cfca:	4573      	cmp	r3, lr
 801cfcc:	f6ff af1a 	blt.w	801ce04 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801cfd0:	b21b      	sxth	r3, r3
 801cfd2:	b212      	sxth	r2, r2
 801cfd4:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801cfd8:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801cfdc:	9301      	str	r3, [sp, #4]
 801cfde:	9200      	str	r2, [sp, #0]
 801cfe0:	4639      	mov	r1, r7
 801cfe2:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801cfe6:	9811      	ldr	r0, [sp, #68]	; 0x44
 801cfe8:	f7ff fc24 	bl	801c834 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801cfec:	e70a      	b.n	801ce04 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801cfee:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801cff0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801cff4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801cff6:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801cffa:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cffc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d000:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801d002:	141f      	asrs	r7, r3, #16
 801d004:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d006:	141b      	asrs	r3, r3, #16
 801d008:	fb01 3707 	mla	r7, r1, r7, r3
 801d00c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d00e:	fa1f fc82 	uxth.w	ip, r2
 801d012:	eb03 0a07 	add.w	sl, r3, r7
 801d016:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801d01a:	f813 9007 	ldrb.w	r9, [r3, r7]
 801d01e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d022:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801d026:	b29b      	uxth	r3, r3
 801d028:	2d00      	cmp	r5, #0
 801d02a:	f000 80fe 	beq.w	801d22a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 801d02e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801d032:	940c      	str	r4, [sp, #48]	; 0x30
 801d034:	eb0a 0b01 	add.w	fp, sl, r1
 801d038:	fa1f fa85 	uxth.w	sl, r5
 801d03c:	fb0a fc0c 	mul.w	ip, sl, ip
 801d040:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801d044:	fa1f fa8a 	uxth.w	sl, sl
 801d048:	eba0 000c 	sub.w	r0, r0, ip
 801d04c:	eba3 030a 	sub.w	r3, r3, sl
 801d050:	b280      	uxth	r0, r0
 801d052:	fb08 f000 	mul.w	r0, r8, r0
 801d056:	b29b      	uxth	r3, r3
 801d058:	fb09 0303 	mla	r3, r9, r3, r0
 801d05c:	980c      	ldr	r0, [sp, #48]	; 0x30
 801d05e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801d062:	940d      	str	r4, [sp, #52]	; 0x34
 801d064:	fb0a 3300 	mla	r3, sl, r0, r3
 801d068:	fb0c 3304 	mla	r3, ip, r4, r3
 801d06c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d070:	2b00      	cmp	r3, #0
 801d072:	f000 80cc 	beq.w	801d20e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801d076:	9808      	ldr	r0, [sp, #32]
 801d078:	9c08      	ldr	r4, [sp, #32]
 801d07a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801d07e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801d082:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801d086:	f000 80d5 	beq.w	801d234 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801d08a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801d08e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801d092:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d096:	fb09 f707 	mul.w	r7, r9, r7
 801d09a:	fb0a fc0c 	mul.w	ip, sl, ip
 801d09e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801d0a2:	f107 0b20 	add.w	fp, r7, #32
 801d0a6:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801d0aa:	44cc      	add	ip, r9
 801d0ac:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801d0b0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d0b4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d0b8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801d0bc:	ea4c 0909 	orr.w	r9, ip, r9
 801d0c0:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801d0c4:	8847      	ldrh	r7, [r0, #2]
 801d0c6:	d019      	beq.n	801d0fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 801d0c8:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801d0cc:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d0d0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d0d4:	fb08 f807 	mul.w	r8, r8, r7
 801d0d8:	fb0a fc0c 	mul.w	ip, sl, ip
 801d0dc:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801d0e0:	f108 0b20 	add.w	fp, r8, #32
 801d0e4:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801d0e8:	44bc      	add	ip, r7
 801d0ea:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801d0ee:	0a3f      	lsrs	r7, r7, #8
 801d0f0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d0f4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d0f8:	ea4c 0707 	orr.w	r7, ip, r7
 801d0fc:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801d100:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801d104:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801d108:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801d10c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d110:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801d114:	ea4c 0909 	orr.w	r9, ip, r9
 801d118:	ea4a 0707 	orr.w	r7, sl, r7
 801d11c:	2d00      	cmp	r5, #0
 801d11e:	f000 808b 	beq.w	801d238 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801d122:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801d126:	3901      	subs	r1, #1
 801d128:	0049      	lsls	r1, r1, #1
 801d12a:	3102      	adds	r1, #2
 801d12c:	eb00 0c01 	add.w	ip, r0, r1
 801d130:	5a41      	ldrh	r1, [r0, r1]
 801d132:	980c      	ldr	r0, [sp, #48]	; 0x30
 801d134:	28ff      	cmp	r0, #255	; 0xff
 801d136:	d019      	beq.n	801d16c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 801d138:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801d13a:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801d13e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d142:	fb04 fa01 	mul.w	sl, r4, r1
 801d146:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d14a:	fb08 f800 	mul.w	r8, r8, r0
 801d14e:	f10a 0020 	add.w	r0, sl, #32
 801d152:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801d156:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801d15a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d15e:	4441      	add	r1, r8
 801d160:	0a00      	lsrs	r0, r0, #8
 801d162:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801d166:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d16a:	4301      	orrs	r1, r0
 801d16c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801d16e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801d172:	2cff      	cmp	r4, #255	; 0xff
 801d174:	d01a      	beq.n	801d1ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 801d176:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801d17a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d17e:	fb04 fa00 	mul.w	sl, r4, r0
 801d182:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d186:	fb08 f80c 	mul.w	r8, r8, ip
 801d18a:	f10a 0c20 	add.w	ip, sl, #32
 801d18e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801d192:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801d196:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d19a:	4440      	add	r0, r8
 801d19c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d1a0:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801d1a4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801d1a8:	ea40 000c 	orr.w	r0, r0, ip
 801d1ac:	fb15 fc02 	smulbb	ip, r5, r2
 801d1b0:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801d1b4:	f1c5 0810 	rsb	r8, r5, #16
 801d1b8:	eba8 0802 	sub.w	r8, r8, r2
 801d1bc:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d1c0:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801d1c4:	437a      	muls	r2, r7
 801d1c6:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801d1ca:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801d1ce:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d1d2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801d1d6:	fb09 2208 	mla	r2, r9, r8, r2
 801d1da:	ea4a 0101 	orr.w	r1, sl, r1
 801d1de:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801d1e2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d1e6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d1ea:	fb05 2201 	mla	r2, r5, r1, r2
 801d1ee:	ea4b 0000 	orr.w	r0, fp, r0
 801d1f2:	fb0c 2200 	mla	r2, ip, r0, r2
 801d1f6:	0d57      	lsrs	r7, r2, #21
 801d1f8:	0952      	lsrs	r2, r2, #5
 801d1fa:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d1fe:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d202:	433a      	orrs	r2, r7
 801d204:	2bff      	cmp	r3, #255	; 0xff
 801d206:	b292      	uxth	r2, r2
 801d208:	d127      	bne.n	801d25a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 801d20a:	f8ae 2000 	strh.w	r2, [lr]
 801d20e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d210:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801d212:	4413      	add	r3, r2
 801d214:	931d      	str	r3, [sp, #116]	; 0x74
 801d216:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801d218:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d21a:	441a      	add	r2, r3
 801d21c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d21e:	921e      	str	r2, [sp, #120]	; 0x78
 801d220:	3b01      	subs	r3, #1
 801d222:	f10e 0e02 	add.w	lr, lr, #2
 801d226:	930f      	str	r3, [sp, #60]	; 0x3c
 801d228:	e627      	b.n	801ce7a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801d22a:	fb08 f000 	mul.w	r0, r8, r0
 801d22e:	fb09 0303 	mla	r3, r9, r3, r0
 801d232:	e71b      	b.n	801d06c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 801d234:	46b9      	mov	r9, r7
 801d236:	e743      	b.n	801d0c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 801d238:	f1c2 0110 	rsb	r1, r2, #16
 801d23c:	437a      	muls	r2, r7
 801d23e:	fb09 2901 	mla	r9, r9, r1, r2
 801d242:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d246:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801d24a:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801d24e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d252:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d256:	4302      	orrs	r2, r0
 801d258:	e7d4      	b.n	801d204 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 801d25a:	f8be 7000 	ldrh.w	r7, [lr]
 801d25e:	4c1c      	ldr	r4, [pc, #112]	; (801d2d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801d260:	43db      	mvns	r3, r3
 801d262:	1238      	asrs	r0, r7, #8
 801d264:	fa5f fc83 	uxtb.w	ip, r3
 801d268:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d26c:	10fd      	asrs	r5, r7, #3
 801d26e:	fb00 f00c 	mul.w	r0, r0, ip
 801d272:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d276:	fb05 f10c 	mul.w	r1, r5, ip
 801d27a:	1c45      	adds	r5, r0, #1
 801d27c:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801d280:	1215      	asrs	r5, r2, #8
 801d282:	f025 0507 	bic.w	r5, r5, #7
 801d286:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801d28a:	1c4d      	adds	r5, r1, #1
 801d28c:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801d290:	10d1      	asrs	r1, r2, #3
 801d292:	f021 0103 	bic.w	r1, r1, #3
 801d296:	00fb      	lsls	r3, r7, #3
 801d298:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801d29c:	b2db      	uxtb	r3, r3
 801d29e:	b2c0      	uxtb	r0, r0
 801d2a0:	00c9      	lsls	r1, r1, #3
 801d2a2:	fb03 f30c 	mul.w	r3, r3, ip
 801d2a6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d2aa:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801d2ae:	4308      	orrs	r0, r1
 801d2b0:	1c59      	adds	r1, r3, #1
 801d2b2:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801d2b6:	00d2      	lsls	r2, r2, #3
 801d2b8:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801d2bc:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801d2c0:	4318      	orrs	r0, r3
 801d2c2:	f8ae 0000 	strh.w	r0, [lr]
 801d2c6:	e7a2      	b.n	801d20e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801d2c8:	b013      	add	sp, #76	; 0x4c
 801d2ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d2ce:	bf00      	nop
 801d2d0:	fffff800 	.word	0xfffff800

0801d2d4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801d2d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d2d8:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 801d2dc:	fb05 4c03 	mla	ip, r5, r3, r4
 801d2e0:	2d00      	cmp	r5, #0
 801d2e2:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801d2e6:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 801d2ea:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801d2ee:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801d2f2:	8808      	ldrh	r0, [r1, #0]
 801d2f4:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801d2f8:	f2c0 80a7 	blt.w	801d44a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801d2fc:	45aa      	cmp	sl, r5
 801d2fe:	f340 80a4 	ble.w	801d44a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801d302:	2c00      	cmp	r4, #0
 801d304:	f2c0 809f 	blt.w	801d446 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801d308:	42a3      	cmp	r3, r4
 801d30a:	f340 809c 	ble.w	801d446 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801d30e:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801d312:	1c62      	adds	r2, r4, #1
 801d314:	f100 809c 	bmi.w	801d450 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d318:	4293      	cmp	r3, r2
 801d31a:	f340 8099 	ble.w	801d450 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d31e:	f1b9 0f00 	cmp.w	r9, #0
 801d322:	f000 8095 	beq.w	801d450 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d326:	f8be c002 	ldrh.w	ip, [lr, #2]
 801d32a:	3501      	adds	r5, #1
 801d32c:	f100 8094 	bmi.w	801d458 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d330:	45aa      	cmp	sl, r5
 801d332:	f340 8091 	ble.w	801d458 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d336:	2f00      	cmp	r7, #0
 801d338:	f000 808e 	beq.w	801d458 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d33c:	2c00      	cmp	r4, #0
 801d33e:	f2c0 8089 	blt.w	801d454 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801d342:	42a3      	cmp	r3, r4
 801d344:	f340 8086 	ble.w	801d454 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801d348:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801d34c:	3401      	adds	r4, #1
 801d34e:	f100 8086 	bmi.w	801d45e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d352:	42a3      	cmp	r3, r4
 801d354:	f340 8083 	ble.w	801d45e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d358:	f1b9 0f00 	cmp.w	r9, #0
 801d35c:	d07f      	beq.n	801d45e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d35e:	3301      	adds	r3, #1
 801d360:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801d364:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801d368:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d36c:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801d370:	fb19 fe07 	smulbb	lr, r9, r7
 801d374:	ea44 0808 	orr.w	r8, r4, r8
 801d378:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801d37c:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801d380:	f1c7 0210 	rsb	r2, r7, #16
 801d384:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d388:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d38c:	ea44 0c0c 	orr.w	ip, r4, ip
 801d390:	eba2 0209 	sub.w	r2, r2, r9
 801d394:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801d398:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801d39c:	fb04 f40c 	mul.w	r4, r4, ip
 801d3a0:	fb02 4808 	mla	r8, r2, r8, r4
 801d3a4:	041a      	lsls	r2, r3, #16
 801d3a6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d3aa:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d3ae:	4313      	orrs	r3, r2
 801d3b0:	042a      	lsls	r2, r5, #16
 801d3b2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d3b6:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801d3ba:	fb0e 8303 	mla	r3, lr, r3, r8
 801d3be:	432a      	orrs	r2, r5
 801d3c0:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801d3c4:	fb07 3202 	mla	r2, r7, r2, r3
 801d3c8:	0d53      	lsrs	r3, r2, #21
 801d3ca:	0952      	lsrs	r2, r2, #5
 801d3cc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d3d0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d3d4:	431a      	orrs	r2, r3
 801d3d6:	b293      	uxth	r3, r2
 801d3d8:	b2b4      	uxth	r4, r6
 801d3da:	1202      	asrs	r2, r0, #8
 801d3dc:	43f6      	mvns	r6, r6
 801d3de:	b2f6      	uxtb	r6, r6
 801d3e0:	121d      	asrs	r5, r3, #8
 801d3e2:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801d3e6:	fb12 f206 	smulbb	r2, r2, r6
 801d3ea:	10c7      	asrs	r7, r0, #3
 801d3ec:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d3f0:	00c0      	lsls	r0, r0, #3
 801d3f2:	fb05 2504 	mla	r5, r5, r4, r2
 801d3f6:	b2c0      	uxtb	r0, r0
 801d3f8:	10da      	asrs	r2, r3, #3
 801d3fa:	00db      	lsls	r3, r3, #3
 801d3fc:	b2db      	uxtb	r3, r3
 801d3fe:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d402:	fb10 f006 	smulbb	r0, r0, r6
 801d406:	b2ad      	uxth	r5, r5
 801d408:	fb03 0004 	mla	r0, r3, r4, r0
 801d40c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d410:	fb17 f706 	smulbb	r7, r7, r6
 801d414:	b280      	uxth	r0, r0
 801d416:	1c6b      	adds	r3, r5, #1
 801d418:	fb02 7204 	mla	r2, r2, r4, r7
 801d41c:	b292      	uxth	r2, r2
 801d41e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d422:	1c43      	adds	r3, r0, #1
 801d424:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801d428:	1c50      	adds	r0, r2, #1
 801d42a:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801d42e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d432:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d436:	0952      	lsrs	r2, r2, #5
 801d438:	432b      	orrs	r3, r5
 801d43a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d43e:	4313      	orrs	r3, r2
 801d440:	800b      	strh	r3, [r1, #0]
 801d442:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d446:	4680      	mov	r8, r0
 801d448:	e763      	b.n	801d312 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801d44a:	4684      	mov	ip, r0
 801d44c:	4680      	mov	r8, r0
 801d44e:	e76c      	b.n	801d32a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801d450:	4684      	mov	ip, r0
 801d452:	e76a      	b.n	801d32a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801d454:	4605      	mov	r5, r0
 801d456:	e779      	b.n	801d34c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801d458:	4603      	mov	r3, r0
 801d45a:	4605      	mov	r5, r0
 801d45c:	e782      	b.n	801d364 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801d45e:	4603      	mov	r3, r0
 801d460:	e780      	b.n	801d364 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801d462 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d462:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d466:	b093      	sub	sp, #76	; 0x4c
 801d468:	461d      	mov	r5, r3
 801d46a:	9210      	str	r2, [sp, #64]	; 0x40
 801d46c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801d46e:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 801d472:	920b      	str	r2, [sp, #44]	; 0x2c
 801d474:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 801d478:	910a      	str	r1, [sp, #40]	; 0x28
 801d47a:	6859      	ldr	r1, [r3, #4]
 801d47c:	681b      	ldr	r3, [r3, #0]
 801d47e:	9011      	str	r0, [sp, #68]	; 0x44
 801d480:	fb01 2707 	mla	r7, r1, r7, r2
 801d484:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801d488:	9307      	str	r3, [sp, #28]
 801d48a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d48c:	681b      	ldr	r3, [r3, #0]
 801d48e:	9309      	str	r3, [sp, #36]	; 0x24
 801d490:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d492:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801d496:	43db      	mvns	r3, r3
 801d498:	b2db      	uxtb	r3, r3
 801d49a:	9308      	str	r3, [sp, #32]
 801d49c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d49e:	2b00      	cmp	r3, #0
 801d4a0:	dc03      	bgt.n	801d4aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801d4a2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d4a4:	2b00      	cmp	r3, #0
 801d4a6:	f340 8203 	ble.w	801d8b0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801d4aa:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d4ac:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d4b0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d4b4:	1e48      	subs	r0, r1, #1
 801d4b6:	f102 3cff 	add.w	ip, r2, #4294967295
 801d4ba:	2d00      	cmp	r5, #0
 801d4bc:	f340 80da 	ble.w	801d674 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801d4c0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801d4c4:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d4c8:	d406      	bmi.n	801d4d8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d4ca:	4586      	cmp	lr, r0
 801d4cc:	da04      	bge.n	801d4d8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d4ce:	2b00      	cmp	r3, #0
 801d4d0:	db02      	blt.n	801d4d8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d4d2:	4563      	cmp	r3, ip
 801d4d4:	f2c0 80cf 	blt.w	801d676 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d4d8:	f11e 0e01 	adds.w	lr, lr, #1
 801d4dc:	f100 80c1 	bmi.w	801d662 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d4e0:	4571      	cmp	r1, lr
 801d4e2:	f2c0 80be 	blt.w	801d662 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d4e6:	3301      	adds	r3, #1
 801d4e8:	f100 80bb 	bmi.w	801d662 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d4ec:	429a      	cmp	r2, r3
 801d4ee:	f2c0 80b8 	blt.w	801d662 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d4f2:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801d4f6:	46a9      	mov	r9, r5
 801d4f8:	f1b9 0f00 	cmp.w	r9, #0
 801d4fc:	f340 80d8 	ble.w	801d6b0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801d500:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d502:	1421      	asrs	r1, r4, #16
 801d504:	ea4f 4026 	mov.w	r0, r6, asr #16
 801d508:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d50c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801d510:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801d514:	f100 8111 	bmi.w	801d73a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d518:	f10e 3aff 	add.w	sl, lr, #4294967295
 801d51c:	4551      	cmp	r1, sl
 801d51e:	f280 810c 	bge.w	801d73a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d522:	2800      	cmp	r0, #0
 801d524:	f2c0 8109 	blt.w	801d73a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d528:	f103 3aff 	add.w	sl, r3, #4294967295
 801d52c:	4550      	cmp	r0, sl
 801d52e:	f280 8104 	bge.w	801d73a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d532:	fa0f f38e 	sxth.w	r3, lr
 801d536:	fb00 1103 	mla	r1, r0, r3, r1
 801d53a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801d53c:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801d540:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801d544:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801d548:	f1bc 0f00 	cmp.w	ip, #0
 801d54c:	d007      	beq.n	801d55e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801d54e:	005b      	lsls	r3, r3, #1
 801d550:	eb0a 0003 	add.w	r0, sl, r3
 801d554:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801d558:	930c      	str	r3, [sp, #48]	; 0x30
 801d55a:	8843      	ldrh	r3, [r0, #2]
 801d55c:	930d      	str	r3, [sp, #52]	; 0x34
 801d55e:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801d562:	fb12 f30c 	smulbb	r3, r2, ip
 801d566:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801d56a:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d56e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d572:	10db      	asrs	r3, r3, #3
 801d574:	ea40 000e 	orr.w	r0, r0, lr
 801d578:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d57c:	f1cc 0e10 	rsb	lr, ip, #16
 801d580:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801d584:	ebae 0e02 	sub.w	lr, lr, r2
 801d588:	ea4a 0101 	orr.w	r1, sl, r1
 801d58c:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801d590:	4351      	muls	r1, r2
 801d592:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801d594:	9f08      	ldr	r7, [sp, #32]
 801d596:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801d59a:	fb0e 1e00 	mla	lr, lr, r0, r1
 801d59e:	0410      	lsls	r0, r2, #16
 801d5a0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d5a4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d5a8:	4310      	orrs	r0, r2
 801d5aa:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d5ac:	990c      	ldr	r1, [sp, #48]	; 0x30
 801d5ae:	0412      	lsls	r2, r2, #16
 801d5b0:	fb03 e000 	mla	r0, r3, r0, lr
 801d5b4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d5b8:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801d5bc:	ea42 020e 	orr.w	r2, r2, lr
 801d5c0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801d5c4:	fb03 0302 	mla	r3, r3, r2, r0
 801d5c8:	0d5a      	lsrs	r2, r3, #21
 801d5ca:	095b      	lsrs	r3, r3, #5
 801d5cc:	f8b8 0000 	ldrh.w	r0, [r8]
 801d5d0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d5d4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d5d8:	4313      	orrs	r3, r2
 801d5da:	b29b      	uxth	r3, r3
 801d5dc:	1201      	asrs	r1, r0, #8
 801d5de:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801d5e2:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801d5e6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d5ea:	fb11 f107 	smulbb	r1, r1, r7
 801d5ee:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801d5f2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d5f6:	00c0      	lsls	r0, r0, #3
 801d5f8:	fb0c 1c02 	mla	ip, ip, r2, r1
 801d5fc:	b2c0      	uxtb	r0, r0
 801d5fe:	10d9      	asrs	r1, r3, #3
 801d600:	00db      	lsls	r3, r3, #3
 801d602:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d606:	b2db      	uxtb	r3, r3
 801d608:	fb10 f007 	smulbb	r0, r0, r7
 801d60c:	fa1f fc8c 	uxth.w	ip, ip
 801d610:	fb03 0302 	mla	r3, r3, r2, r0
 801d614:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d618:	fb1e fe07 	smulbb	lr, lr, r7
 801d61c:	fb01 e102 	mla	r1, r1, r2, lr
 801d620:	b29a      	uxth	r2, r3
 801d622:	f10c 0301 	add.w	r3, ip, #1
 801d626:	b289      	uxth	r1, r1
 801d628:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801d62c:	1c53      	adds	r3, r2, #1
 801d62e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d632:	1c4a      	adds	r2, r1, #1
 801d634:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d638:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d63c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d640:	0949      	lsrs	r1, r1, #5
 801d642:	ea43 030c 	orr.w	r3, r3, ip
 801d646:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d64a:	430b      	orrs	r3, r1
 801d64c:	f8a8 3000 	strh.w	r3, [r8]
 801d650:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d652:	441c      	add	r4, r3
 801d654:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d656:	f108 0802 	add.w	r8, r8, #2
 801d65a:	441e      	add	r6, r3
 801d65c:	f109 39ff 	add.w	r9, r9, #4294967295
 801d660:	e74a      	b.n	801d4f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d662:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d664:	441c      	add	r4, r3
 801d666:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d668:	441e      	add	r6, r3
 801d66a:	9b07      	ldr	r3, [sp, #28]
 801d66c:	3302      	adds	r3, #2
 801d66e:	3d01      	subs	r5, #1
 801d670:	9307      	str	r3, [sp, #28]
 801d672:	e722      	b.n	801d4ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801d674:	d022      	beq.n	801d6bc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801d676:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801d678:	1e6b      	subs	r3, r5, #1
 801d67a:	fb00 4003 	mla	r0, r0, r3, r4
 801d67e:	1400      	asrs	r0, r0, #16
 801d680:	f53f af37 	bmi.w	801d4f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d684:	3901      	subs	r1, #1
 801d686:	4288      	cmp	r0, r1
 801d688:	f6bf af33 	bge.w	801d4f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d68c:	9920      	ldr	r1, [sp, #128]	; 0x80
 801d68e:	fb01 6303 	mla	r3, r1, r3, r6
 801d692:	141b      	asrs	r3, r3, #16
 801d694:	f53f af2d 	bmi.w	801d4f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d698:	3a01      	subs	r2, #1
 801d69a:	4293      	cmp	r3, r2
 801d69c:	f6bf af29 	bge.w	801d4f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d6a0:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801d6a4:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 801d6a8:	46a8      	mov	r8, r5
 801d6aa:	f1b8 0f00 	cmp.w	r8, #0
 801d6ae:	dc5e      	bgt.n	801d76e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801d6b0:	9b07      	ldr	r3, [sp, #28]
 801d6b2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801d6b6:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801d6ba:	9307      	str	r3, [sp, #28]
 801d6bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d6be:	2b00      	cmp	r3, #0
 801d6c0:	f340 80f6 	ble.w	801d8b0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801d6c4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d6c8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d6cc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d6d0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d6d2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d6d6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d6da:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d6de:	eef0 6a62 	vmov.f32	s13, s5
 801d6e2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d6e6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d6ea:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d6ee:	ee16 4a90 	vmov	r4, s13
 801d6f2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d6f6:	eef0 6a43 	vmov.f32	s13, s6
 801d6fa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d6fe:	ee12 2a90 	vmov	r2, s5
 801d702:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d706:	fb92 f3f3 	sdiv	r3, r2, r3
 801d70a:	ee13 2a10 	vmov	r2, s6
 801d70e:	931f      	str	r3, [sp, #124]	; 0x7c
 801d710:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d712:	fb92 f3f3 	sdiv	r3, r2, r3
 801d716:	9320      	str	r3, [sp, #128]	; 0x80
 801d718:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d71a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d71c:	3b01      	subs	r3, #1
 801d71e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d722:	930a      	str	r3, [sp, #40]	; 0x28
 801d724:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d726:	ee16 6a90 	vmov	r6, s13
 801d72a:	bf14      	ite	ne
 801d72c:	461d      	movne	r5, r3
 801d72e:	4615      	moveq	r5, r2
 801d730:	eeb0 3a67 	vmov.f32	s6, s15
 801d734:	eef0 2a47 	vmov.f32	s5, s14
 801d738:	e6b0      	b.n	801d49c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801d73a:	f111 0a01 	adds.w	sl, r1, #1
 801d73e:	d487      	bmi.n	801d650 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d740:	45d6      	cmp	lr, sl
 801d742:	db85      	blt.n	801d650 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d744:	f110 0a01 	adds.w	sl, r0, #1
 801d748:	d482      	bmi.n	801d650 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d74a:	4553      	cmp	r3, sl
 801d74c:	db80      	blt.n	801d650 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d74e:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801d750:	9101      	str	r1, [sp, #4]
 801d752:	b21b      	sxth	r3, r3
 801d754:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801d758:	9300      	str	r3, [sp, #0]
 801d75a:	e9cd c704 	strd	ip, r7, [sp, #16]
 801d75e:	fa0f f38e 	sxth.w	r3, lr
 801d762:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d764:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d766:	4641      	mov	r1, r8
 801d768:	f7ff fdb4 	bl	801d2d4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801d76c:	e770      	b.n	801d650 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d76e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d770:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801d772:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d776:	1430      	asrs	r0, r6, #16
 801d778:	1423      	asrs	r3, r4, #16
 801d77a:	fb01 3000 	mla	r0, r1, r0, r3
 801d77e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d780:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801d784:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801d788:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801d78c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d790:	8858      	ldrh	r0, [r3, #2]
 801d792:	f1be 0f00 	cmp.w	lr, #0
 801d796:	d00b      	beq.n	801d7b0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801d798:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801d79c:	3901      	subs	r1, #1
 801d79e:	0049      	lsls	r1, r1, #1
 801d7a0:	3102      	adds	r1, #2
 801d7a2:	eb03 0b01 	add.w	fp, r3, r1
 801d7a6:	5a5b      	ldrh	r3, [r3, r1]
 801d7a8:	930e      	str	r3, [sp, #56]	; 0x38
 801d7aa:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801d7ae:	930f      	str	r3, [sp, #60]	; 0x3c
 801d7b0:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801d7b4:	fb12 f30e 	smulbb	r3, r2, lr
 801d7b8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d7bc:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801d7c0:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 801d7c4:	10db      	asrs	r3, r3, #3
 801d7c6:	ea41 010c 	orr.w	r1, r1, ip
 801d7ca:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d7ce:	f1ce 0c10 	rsb	ip, lr, #16
 801d7d2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d7d6:	ebac 0c02 	sub.w	ip, ip, r2
 801d7da:	ea4b 0000 	orr.w	r0, fp, r0
 801d7de:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801d7e2:	4350      	muls	r0, r2
 801d7e4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d7e6:	9f08      	ldr	r7, [sp, #32]
 801d7e8:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801d7ec:	fb0c 0c01 	mla	ip, ip, r1, r0
 801d7f0:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801d7f4:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 801d7f8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d7fa:	980e      	ldr	r0, [sp, #56]	; 0x38
 801d7fc:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d800:	0412      	lsls	r2, r2, #16
 801d802:	ea4b 0101 	orr.w	r1, fp, r1
 801d806:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d80a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d80e:	fb03 c101 	mla	r1, r3, r1, ip
 801d812:	4302      	orrs	r2, r0
 801d814:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801d818:	fb03 1202 	mla	r2, r3, r2, r1
 801d81c:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801d820:	0952      	lsrs	r2, r2, #5
 801d822:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 801d826:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801d82a:	f8b9 2000 	ldrh.w	r2, [r9]
 801d82e:	ea4b 0303 	orr.w	r3, fp, r3
 801d832:	b29b      	uxth	r3, r3
 801d834:	1211      	asrs	r1, r2, #8
 801d836:	1218      	asrs	r0, r3, #8
 801d838:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d83c:	fb11 f107 	smulbb	r1, r1, r7
 801d840:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801d844:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d848:	00d2      	lsls	r2, r2, #3
 801d84a:	fb00 100a 	mla	r0, r0, sl, r1
 801d84e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801d852:	10d9      	asrs	r1, r3, #3
 801d854:	b2d2      	uxtb	r2, r2
 801d856:	00db      	lsls	r3, r3, #3
 801d858:	fb1c fc07 	smulbb	ip, ip, r7
 801d85c:	fb12 f207 	smulbb	r2, r2, r7
 801d860:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d864:	b2db      	uxtb	r3, r3
 801d866:	b280      	uxth	r0, r0
 801d868:	fb01 c10a 	mla	r1, r1, sl, ip
 801d86c:	fb03 230a 	mla	r3, r3, sl, r2
 801d870:	b29b      	uxth	r3, r3
 801d872:	b289      	uxth	r1, r1
 801d874:	1c42      	adds	r2, r0, #1
 801d876:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801d87a:	f101 0c01 	add.w	ip, r1, #1
 801d87e:	1c5a      	adds	r2, r3, #1
 801d880:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801d884:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801d888:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d88a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801d88e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d892:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801d896:	4310      	orrs	r0, r2
 801d898:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801d89c:	441c      	add	r4, r3
 801d89e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d8a0:	ea40 000c 	orr.w	r0, r0, ip
 801d8a4:	f829 0b02 	strh.w	r0, [r9], #2
 801d8a8:	441e      	add	r6, r3
 801d8aa:	f108 38ff 	add.w	r8, r8, #4294967295
 801d8ae:	e6fc      	b.n	801d6aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801d8b0:	b013      	add	sp, #76	; 0x4c
 801d8b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d8b6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801d8b6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801d8ba:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801d8be:	fb0e 4703 	mla	r7, lr, r3, r4
 801d8c2:	f1be 0f00 	cmp.w	lr, #0
 801d8c6:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801d8ca:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 801d8ce:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 801d8d2:	8808      	ldrh	r0, [r1, #0]
 801d8d4:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801d8d8:	db60      	blt.n	801d99c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801d8da:	45f1      	cmp	r9, lr
 801d8dc:	dd5e      	ble.n	801d99c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801d8de:	2c00      	cmp	r4, #0
 801d8e0:	db5a      	blt.n	801d998 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801d8e2:	42a3      	cmp	r3, r4
 801d8e4:	dd58      	ble.n	801d998 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801d8e6:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801d8ea:	1c62      	adds	r2, r4, #1
 801d8ec:	d459      	bmi.n	801d9a2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801d8ee:	4293      	cmp	r3, r2
 801d8f0:	dd57      	ble.n	801d9a2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801d8f2:	2d00      	cmp	r5, #0
 801d8f4:	d055      	beq.n	801d9a2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801d8f6:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801d8fa:	f11e 0e01 	adds.w	lr, lr, #1
 801d8fe:	d454      	bmi.n	801d9aa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801d900:	45f1      	cmp	r9, lr
 801d902:	dd52      	ble.n	801d9aa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801d904:	2e00      	cmp	r6, #0
 801d906:	d050      	beq.n	801d9aa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801d908:	2c00      	cmp	r4, #0
 801d90a:	db4c      	blt.n	801d9a6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801d90c:	42a3      	cmp	r3, r4
 801d90e:	dd4a      	ble.n	801d9a6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801d910:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801d914:	3401      	adds	r4, #1
 801d916:	d405      	bmi.n	801d924 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801d918:	42a3      	cmp	r3, r4
 801d91a:	dd03      	ble.n	801d924 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801d91c:	b115      	cbz	r5, 801d924 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801d91e:	3301      	adds	r3, #1
 801d920:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801d924:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801d928:	fb15 f406 	smulbb	r4, r5, r6
 801d92c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801d930:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801d934:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d938:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801d93c:	ea43 0c0c 	orr.w	ip, r3, ip
 801d940:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801d944:	f1c6 0310 	rsb	r3, r6, #16
 801d948:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801d94c:	1b5b      	subs	r3, r3, r5
 801d94e:	ea4e 0707 	orr.w	r7, lr, r7
 801d952:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801d956:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801d95a:	437d      	muls	r5, r7
 801d95c:	fb03 5c0c 	mla	ip, r3, ip, r5
 801d960:	0403      	lsls	r3, r0, #16
 801d962:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801d966:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d96a:	4318      	orrs	r0, r3
 801d96c:	0413      	lsls	r3, r2, #16
 801d96e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801d972:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d976:	4313      	orrs	r3, r2
 801d978:	fb04 c000 	mla	r0, r4, r0, ip
 801d97c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801d980:	fb06 0003 	mla	r0, r6, r3, r0
 801d984:	0d43      	lsrs	r3, r0, #21
 801d986:	0940      	lsrs	r0, r0, #5
 801d988:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d98c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d990:	4318      	orrs	r0, r3
 801d992:	8008      	strh	r0, [r1, #0]
 801d994:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801d998:	4684      	mov	ip, r0
 801d99a:	e7a6      	b.n	801d8ea <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801d99c:	4607      	mov	r7, r0
 801d99e:	4684      	mov	ip, r0
 801d9a0:	e7ab      	b.n	801d8fa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801d9a2:	4607      	mov	r7, r0
 801d9a4:	e7a9      	b.n	801d8fa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801d9a6:	4602      	mov	r2, r0
 801d9a8:	e7b4      	b.n	801d914 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801d9aa:	4602      	mov	r2, r0
 801d9ac:	e7ba      	b.n	801d924 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801d9ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d9ae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d9b2:	b08f      	sub	sp, #60	; 0x3c
 801d9b4:	461d      	mov	r5, r3
 801d9b6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d9b8:	920c      	str	r2, [sp, #48]	; 0x30
 801d9ba:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 801d9be:	9107      	str	r1, [sp, #28]
 801d9c0:	6859      	ldr	r1, [r3, #4]
 801d9c2:	681b      	ldr	r3, [r3, #0]
 801d9c4:	900d      	str	r0, [sp, #52]	; 0x34
 801d9c6:	fb01 2707 	mla	r7, r1, r7, r2
 801d9ca:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801d9ce:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d9d0:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 801d9d4:	f8d3 8000 	ldr.w	r8, [r3]
 801d9d8:	9b07      	ldr	r3, [sp, #28]
 801d9da:	2b00      	cmp	r3, #0
 801d9dc:	dc03      	bgt.n	801d9e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801d9de:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d9e0:	2b00      	cmp	r3, #0
 801d9e2:	f340 8181 	ble.w	801dce8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801d9e6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d9e8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d9ec:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d9f0:	1e48      	subs	r0, r1, #1
 801d9f2:	f102 3cff 	add.w	ip, r2, #4294967295
 801d9f6:	2d00      	cmp	r5, #0
 801d9f8:	f340 809b 	ble.w	801db32 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801d9fc:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801da00:	ea4f 4326 	mov.w	r3, r6, asr #16
 801da04:	d406      	bmi.n	801da14 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801da06:	4586      	cmp	lr, r0
 801da08:	da04      	bge.n	801da14 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801da0a:	2b00      	cmp	r3, #0
 801da0c:	db02      	blt.n	801da14 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801da0e:	4563      	cmp	r3, ip
 801da10:	f2c0 8090 	blt.w	801db34 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801da14:	f11e 0e01 	adds.w	lr, lr, #1
 801da18:	f100 8084 	bmi.w	801db24 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801da1c:	4571      	cmp	r1, lr
 801da1e:	f2c0 8081 	blt.w	801db24 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801da22:	3301      	adds	r3, #1
 801da24:	d47e      	bmi.n	801db24 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801da26:	429a      	cmp	r2, r3
 801da28:	db7c      	blt.n	801db24 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801da2a:	46aa      	mov	sl, r5
 801da2c:	46b9      	mov	r9, r7
 801da2e:	f1ba 0f00 	cmp.w	sl, #0
 801da32:	f340 8099 	ble.w	801db68 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801da36:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801da38:	1421      	asrs	r1, r4, #16
 801da3a:	ea4f 4026 	mov.w	r0, r6, asr #16
 801da3e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801da42:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801da46:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801da4a:	f100 80d0 	bmi.w	801dbee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801da4e:	f10e 3bff 	add.w	fp, lr, #4294967295
 801da52:	4559      	cmp	r1, fp
 801da54:	f280 80cb 	bge.w	801dbee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801da58:	2800      	cmp	r0, #0
 801da5a:	f2c0 80c8 	blt.w	801dbee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801da5e:	f103 3bff 	add.w	fp, r3, #4294967295
 801da62:	4558      	cmp	r0, fp
 801da64:	f280 80c3 	bge.w	801dbee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801da68:	fa0f fe8e 	sxth.w	lr, lr
 801da6c:	fb00 110e 	mla	r1, r0, lr, r1
 801da70:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801da74:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801da78:	8841      	ldrh	r1, [r0, #2]
 801da7a:	f1bc 0f00 	cmp.w	ip, #0
 801da7e:	d00b      	beq.n	801da98 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801da80:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 801da84:	3b01      	subs	r3, #1
 801da86:	005b      	lsls	r3, r3, #1
 801da88:	3302      	adds	r3, #2
 801da8a:	eb00 0e03 	add.w	lr, r0, r3
 801da8e:	5ac3      	ldrh	r3, [r0, r3]
 801da90:	9308      	str	r3, [sp, #32]
 801da92:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801da96:	9309      	str	r3, [sp, #36]	; 0x24
 801da98:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801da9c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801daa0:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801daa4:	ea40 000b 	orr.w	r0, r0, fp
 801daa8:	fb12 f30c 	smulbb	r3, r2, ip
 801daac:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801dab0:	10db      	asrs	r3, r3, #3
 801dab2:	f1cc 0e10 	rsb	lr, ip, #16
 801dab6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801daba:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801dabe:	ebae 0e02 	sub.w	lr, lr, r2
 801dac2:	ea4b 0101 	orr.w	r1, fp, r1
 801dac6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801daca:	4351      	muls	r1, r2
 801dacc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801dace:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801dad2:	fb0e 1e00 	mla	lr, lr, r0, r1
 801dad6:	0410      	lsls	r0, r2, #16
 801dad8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801dadc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801dae0:	4310      	orrs	r0, r2
 801dae2:	9a08      	ldr	r2, [sp, #32]
 801dae4:	9908      	ldr	r1, [sp, #32]
 801dae6:	0412      	lsls	r2, r2, #16
 801dae8:	fb03 e000 	mla	r0, r3, r0, lr
 801daec:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801daf0:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801daf4:	ea42 020e 	orr.w	r2, r2, lr
 801daf8:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801dafc:	fb03 0302 	mla	r3, r3, r2, r0
 801db00:	0d5a      	lsrs	r2, r3, #21
 801db02:	095b      	lsrs	r3, r3, #5
 801db04:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801db08:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801db0c:	4313      	orrs	r3, r2
 801db0e:	f8a9 3000 	strh.w	r3, [r9]
 801db12:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801db14:	441c      	add	r4, r3
 801db16:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801db18:	f109 0902 	add.w	r9, r9, #2
 801db1c:	441e      	add	r6, r3
 801db1e:	f10a 3aff 	add.w	sl, sl, #4294967295
 801db22:	e784      	b.n	801da2e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801db24:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801db26:	441c      	add	r4, r3
 801db28:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801db2a:	3d01      	subs	r5, #1
 801db2c:	441e      	add	r6, r3
 801db2e:	3702      	adds	r7, #2
 801db30:	e761      	b.n	801d9f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801db32:	d01d      	beq.n	801db70 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801db34:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801db36:	1e6b      	subs	r3, r5, #1
 801db38:	fb00 4003 	mla	r0, r0, r3, r4
 801db3c:	1400      	asrs	r0, r0, #16
 801db3e:	f53f af74 	bmi.w	801da2a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801db42:	3901      	subs	r1, #1
 801db44:	4288      	cmp	r0, r1
 801db46:	f6bf af70 	bge.w	801da2a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801db4a:	991c      	ldr	r1, [sp, #112]	; 0x70
 801db4c:	fb01 6303 	mla	r3, r1, r3, r6
 801db50:	141b      	asrs	r3, r3, #16
 801db52:	f53f af6a 	bmi.w	801da2a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801db56:	3a01      	subs	r2, #1
 801db58:	4293      	cmp	r3, r2
 801db5a:	f6bf af66 	bge.w	801da2a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801db5e:	46a9      	mov	r9, r5
 801db60:	46ba      	mov	sl, r7
 801db62:	f1b9 0f00 	cmp.w	r9, #0
 801db66:	dc5a      	bgt.n	801dc1e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 801db68:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801db6c:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801db70:	9b07      	ldr	r3, [sp, #28]
 801db72:	2b00      	cmp	r3, #0
 801db74:	f340 80b8 	ble.w	801dce8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801db78:	ee30 0a04 	vadd.f32	s0, s0, s8
 801db7c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801db80:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801db84:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801db86:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801db8a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801db8e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801db92:	eef0 6a62 	vmov.f32	s13, s5
 801db96:	ee61 7a27 	vmul.f32	s15, s2, s15
 801db9a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801db9e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801dba2:	ee16 4a90 	vmov	r4, s13
 801dba6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801dbaa:	eef0 6a43 	vmov.f32	s13, s6
 801dbae:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801dbb2:	ee12 2a90 	vmov	r2, s5
 801dbb6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801dbba:	fb92 f3f3 	sdiv	r3, r2, r3
 801dbbe:	ee13 2a10 	vmov	r2, s6
 801dbc2:	931b      	str	r3, [sp, #108]	; 0x6c
 801dbc4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801dbc6:	fb92 f3f3 	sdiv	r3, r2, r3
 801dbca:	931c      	str	r3, [sp, #112]	; 0x70
 801dbcc:	9b07      	ldr	r3, [sp, #28]
 801dbce:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801dbd0:	3b01      	subs	r3, #1
 801dbd2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dbd6:	9307      	str	r3, [sp, #28]
 801dbd8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801dbda:	ee16 6a90 	vmov	r6, s13
 801dbde:	bf14      	ite	ne
 801dbe0:	461d      	movne	r5, r3
 801dbe2:	4615      	moveq	r5, r2
 801dbe4:	eeb0 3a67 	vmov.f32	s6, s15
 801dbe8:	eef0 2a47 	vmov.f32	s5, s14
 801dbec:	e6f4      	b.n	801d9d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801dbee:	f111 0b01 	adds.w	fp, r1, #1
 801dbf2:	d48e      	bmi.n	801db12 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801dbf4:	45de      	cmp	lr, fp
 801dbf6:	db8c      	blt.n	801db12 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801dbf8:	f110 0b01 	adds.w	fp, r0, #1
 801dbfc:	d489      	bmi.n	801db12 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801dbfe:	455b      	cmp	r3, fp
 801dc00:	db87      	blt.n	801db12 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801dc02:	b21b      	sxth	r3, r3
 801dc04:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801dc08:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801dc0c:	9300      	str	r3, [sp, #0]
 801dc0e:	4642      	mov	r2, r8
 801dc10:	fa0f f38e 	sxth.w	r3, lr
 801dc14:	4649      	mov	r1, r9
 801dc16:	980d      	ldr	r0, [sp, #52]	; 0x34
 801dc18:	f7ff fe4d 	bl	801d8b6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801dc1c:	e779      	b.n	801db12 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801dc1e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801dc20:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801dc24:	1420      	asrs	r0, r4, #16
 801dc26:	1431      	asrs	r1, r6, #16
 801dc28:	fb03 0101 	mla	r1, r3, r1, r0
 801dc2c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801dc30:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801dc34:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801dc38:	8841      	ldrh	r1, [r0, #2]
 801dc3a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801dc3e:	f1be 0f00 	cmp.w	lr, #0
 801dc42:	d00b      	beq.n	801dc5c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801dc44:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 801dc48:	3b01      	subs	r3, #1
 801dc4a:	005b      	lsls	r3, r3, #1
 801dc4c:	3302      	adds	r3, #2
 801dc4e:	eb00 0b03 	add.w	fp, r0, r3
 801dc52:	5ac3      	ldrh	r3, [r0, r3]
 801dc54:	930a      	str	r3, [sp, #40]	; 0x28
 801dc56:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801dc5a:	930b      	str	r3, [sp, #44]	; 0x2c
 801dc5c:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801dc60:	fb12 f30e 	smulbb	r3, r2, lr
 801dc64:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801dc68:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801dc6c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801dc70:	10db      	asrs	r3, r3, #3
 801dc72:	ea40 000c 	orr.w	r0, r0, ip
 801dc76:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801dc7a:	f1ce 0c10 	rsb	ip, lr, #16
 801dc7e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801dc82:	ebac 0c02 	sub.w	ip, ip, r2
 801dc86:	ea4b 0101 	orr.w	r1, fp, r1
 801dc8a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801dc8e:	4351      	muls	r1, r2
 801dc90:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801dc92:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801dc96:	fb0c 1c00 	mla	ip, ip, r0, r1
 801dc9a:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801dc9e:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 801dca2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801dca4:	990a      	ldr	r1, [sp, #40]	; 0x28
 801dca6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801dcaa:	0412      	lsls	r2, r2, #16
 801dcac:	ea4b 0000 	orr.w	r0, fp, r0
 801dcb0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801dcb4:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 801dcb8:	fb03 c000 	mla	r0, r3, r0, ip
 801dcbc:	ea42 0b0b 	orr.w	fp, r2, fp
 801dcc0:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801dcc4:	fb03 000b 	mla	r0, r3, fp, r0
 801dcc8:	0d43      	lsrs	r3, r0, #21
 801dcca:	0940      	lsrs	r0, r0, #5
 801dccc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801dcd0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801dcd4:	4318      	orrs	r0, r3
 801dcd6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801dcd8:	f82a 0b02 	strh.w	r0, [sl], #2
 801dcdc:	441c      	add	r4, r3
 801dcde:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801dce0:	f109 39ff 	add.w	r9, r9, #4294967295
 801dce4:	441e      	add	r6, r3
 801dce6:	e73c      	b.n	801db62 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801dce8:	b00f      	add	sp, #60	; 0x3c
 801dcea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dcee <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801dcee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dcf2:	b085      	sub	sp, #20
 801dcf4:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801dcf8:	9102      	str	r1, [sp, #8]
 801dcfa:	2c00      	cmp	r4, #0
 801dcfc:	fb04 7103 	mla	r1, r4, r3, r7
 801dd00:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801dd04:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801dd08:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801dd0c:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801dd10:	f2c0 811b 	blt.w	801df4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801dd14:	45a6      	cmp	lr, r4
 801dd16:	f340 8118 	ble.w	801df4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801dd1a:	2f00      	cmp	r7, #0
 801dd1c:	f2c0 8113 	blt.w	801df46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801dd20:	42bb      	cmp	r3, r7
 801dd22:	f340 8110 	ble.w	801df46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801dd26:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801dd2a:	1c7a      	adds	r2, r7, #1
 801dd2c:	f100 8110 	bmi.w	801df50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801dd30:	4293      	cmp	r3, r2
 801dd32:	f340 810d 	ble.w	801df50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801dd36:	2e00      	cmp	r6, #0
 801dd38:	f000 810c 	beq.w	801df54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801dd3c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801dd40:	3401      	adds	r4, #1
 801dd42:	f100 810b 	bmi.w	801df5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801dd46:	45a6      	cmp	lr, r4
 801dd48:	f340 8108 	ble.w	801df5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801dd4c:	2800      	cmp	r0, #0
 801dd4e:	f000 8108 	beq.w	801df62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801dd52:	2f00      	cmp	r7, #0
 801dd54:	f2c0 8100 	blt.w	801df58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801dd58:	42bb      	cmp	r3, r7
 801dd5a:	f340 80fd 	ble.w	801df58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801dd5e:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801dd62:	3701      	adds	r7, #1
 801dd64:	f100 8100 	bmi.w	801df68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801dd68:	42bb      	cmp	r3, r7
 801dd6a:	f340 80fd 	ble.w	801df68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801dd6e:	2e00      	cmp	r6, #0
 801dd70:	f000 80fc 	beq.w	801df6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801dd74:	3301      	adds	r3, #1
 801dd76:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801dd7a:	b2b6      	uxth	r6, r6
 801dd7c:	b280      	uxth	r0, r0
 801dd7e:	fb00 fe06 	mul.w	lr, r0, r6
 801dd82:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801dd86:	0136      	lsls	r6, r6, #4
 801dd88:	eba6 070e 	sub.w	r7, r6, lr
 801dd8c:	b280      	uxth	r0, r0
 801dd8e:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801dd92:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801dd96:	b2bf      	uxth	r7, r7
 801dd98:	1a1b      	subs	r3, r3, r0
 801dd9a:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801dd9e:	b29b      	uxth	r3, r3
 801dda0:	fb0a f607 	mul.w	r6, sl, r7
 801dda4:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801dda8:	fb0b 6603 	mla	r6, fp, r3, r6
 801ddac:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801ddb0:	fb00 6609 	mla	r6, r0, r9, r6
 801ddb4:	fb0e 6608 	mla	r6, lr, r8, r6
 801ddb8:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801ddbc:	9600      	str	r6, [sp, #0]
 801ddbe:	2e00      	cmp	r6, #0
 801ddc0:	f000 80be 	beq.w	801df40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801ddc4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ddc8:	fb0b fc0c 	mul.w	ip, fp, ip
 801ddcc:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801ddd0:	fb0b f505 	mul.w	r5, fp, r5
 801ddd4:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801ddd8:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801dddc:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801dde0:	44dc      	add	ip, fp
 801dde2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dde6:	9501      	str	r5, [sp, #4]
 801dde8:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801ddec:	9503      	str	r5, [sp, #12]
 801ddee:	9d01      	ldr	r5, [sp, #4]
 801ddf0:	9e02      	ldr	r6, [sp, #8]
 801ddf2:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801ddf6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ddfa:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801ddfe:	fb0a fc0c 	mul.w	ip, sl, ip
 801de02:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801de06:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801de0a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801de0e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801de12:	4465      	add	r5, ip
 801de14:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801de18:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801de1c:	fb09 fc0c 	mul.w	ip, r9, ip
 801de20:	fb09 f904 	mul.w	r9, r9, r4
 801de24:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801de28:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801de2c:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801de30:	fb08 f404 	mul.w	r4, r8, r4
 801de34:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801de38:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801de3c:	fb08 f802 	mul.w	r8, r8, r2
 801de40:	fb0a fa01 	mul.w	sl, sl, r1
 801de44:	0a22      	lsrs	r2, r4, #8
 801de46:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801de4a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801de4e:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801de52:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801de56:	4414      	add	r4, r2
 801de58:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801de5c:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801de60:	0a2d      	lsrs	r5, r5, #8
 801de62:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801de66:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801de6a:	9a03      	ldr	r2, [sp, #12]
 801de6c:	8836      	ldrh	r6, [r6, #0]
 801de6e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801de72:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801de76:	437d      	muls	r5, r7
 801de78:	4461      	add	r1, ip
 801de7a:	0a24      	lsrs	r4, r4, #8
 801de7c:	fb02 5503 	mla	r5, r2, r3, r5
 801de80:	0a09      	lsrs	r1, r1, #8
 801de82:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801de86:	fb04 540e 	mla	r4, r4, lr, r5
 801de8a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801de8e:	fb01 4100 	mla	r1, r1, r0, r4
 801de92:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801de96:	0a09      	lsrs	r1, r1, #8
 801de98:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801de9c:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801dea0:	fb07 f70a 	mul.w	r7, r7, sl
 801dea4:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801dea8:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801deac:	fb03 7101 	mla	r1, r3, r1, r7
 801deb0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801deb4:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801deb8:	fb0e 1e08 	mla	lr, lr, r8, r1
 801debc:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801dec0:	fb00 e101 	mla	r1, r0, r1, lr
 801dec4:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801dec8:	9a00      	ldr	r2, [sp, #0]
 801deca:	b287      	uxth	r7, r0
 801decc:	437a      	muls	r2, r7
 801dece:	0a09      	lsrs	r1, r1, #8
 801ded0:	1c53      	adds	r3, r2, #1
 801ded2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801ded6:	4321      	orrs	r1, r4
 801ded8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801dedc:	1235      	asrs	r5, r6, #8
 801dede:	0c0a      	lsrs	r2, r1, #16
 801dee0:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801dee4:	b2db      	uxtb	r3, r3
 801dee6:	fb12 f207 	smulbb	r2, r2, r7
 801deea:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801deee:	fb05 2503 	mla	r5, r5, r3, r2
 801def2:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801def6:	10f2      	asrs	r2, r6, #3
 801def8:	b2c8      	uxtb	r0, r1
 801defa:	00f6      	lsls	r6, r6, #3
 801defc:	fb14 f407 	smulbb	r4, r4, r7
 801df00:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801df04:	b2f6      	uxtb	r6, r6
 801df06:	fb10 f007 	smulbb	r0, r0, r7
 801df0a:	fb02 4203 	mla	r2, r2, r3, r4
 801df0e:	b2ad      	uxth	r5, r5
 801df10:	fb06 0303 	mla	r3, r6, r3, r0
 801df14:	b299      	uxth	r1, r3
 801df16:	b294      	uxth	r4, r2
 801df18:	1c6b      	adds	r3, r5, #1
 801df1a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801df1e:	1c62      	adds	r2, r4, #1
 801df20:	1c4b      	adds	r3, r1, #1
 801df22:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801df26:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801df2a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801df2e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801df32:	0952      	lsrs	r2, r2, #5
 801df34:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801df38:	432b      	orrs	r3, r5
 801df3a:	4313      	orrs	r3, r2
 801df3c:	9a02      	ldr	r2, [sp, #8]
 801df3e:	8013      	strh	r3, [r2, #0]
 801df40:	b005      	add	sp, #20
 801df42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801df46:	2500      	movs	r5, #0
 801df48:	e6ef      	b.n	801dd2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801df4a:	2100      	movs	r1, #0
 801df4c:	460d      	mov	r5, r1
 801df4e:	e6f7      	b.n	801dd40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801df50:	2100      	movs	r1, #0
 801df52:	e6f5      	b.n	801dd40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801df54:	4631      	mov	r1, r6
 801df56:	e6f3      	b.n	801dd40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801df58:	2400      	movs	r4, #0
 801df5a:	e702      	b.n	801dd62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801df5c:	2200      	movs	r2, #0
 801df5e:	4614      	mov	r4, r2
 801df60:	e70b      	b.n	801dd7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801df62:	4602      	mov	r2, r0
 801df64:	4604      	mov	r4, r0
 801df66:	e708      	b.n	801dd7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801df68:	2200      	movs	r2, #0
 801df6a:	e706      	b.n	801dd7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801df6c:	4632      	mov	r2, r6
 801df6e:	e704      	b.n	801dd7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801df70 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801df70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801df74:	b09d      	sub	sp, #116	; 0x74
 801df76:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801df7a:	9219      	str	r2, [sp, #100]	; 0x64
 801df7c:	9307      	str	r3, [sp, #28]
 801df7e:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801df80:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 801df84:	931a      	str	r3, [sp, #104]	; 0x68
 801df86:	9117      	str	r1, [sp, #92]	; 0x5c
 801df88:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801df8c:	901b      	str	r0, [sp, #108]	; 0x6c
 801df8e:	6850      	ldr	r0, [r2, #4]
 801df90:	6812      	ldr	r2, [r2, #0]
 801df92:	fb00 1303 	mla	r3, r0, r3, r1
 801df96:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801df9a:	930a      	str	r3, [sp, #40]	; 0x28
 801df9c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801df9e:	681b      	ldr	r3, [r3, #0]
 801dfa0:	9310      	str	r3, [sp, #64]	; 0x40
 801dfa2:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801dfa6:	930b      	str	r3, [sp, #44]	; 0x2c
 801dfa8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801dfaa:	2b00      	cmp	r3, #0
 801dfac:	dc03      	bgt.n	801dfb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801dfae:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801dfb0:	2b00      	cmp	r3, #0
 801dfb2:	f340 8375 	ble.w	801e6a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801dfb6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801dfb8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801dfbc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801dfc0:	1e48      	subs	r0, r1, #1
 801dfc2:	1e57      	subs	r7, r2, #1
 801dfc4:	9b07      	ldr	r3, [sp, #28]
 801dfc6:	2b00      	cmp	r3, #0
 801dfc8:	f340 818e 	ble.w	801e2e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801dfcc:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801dfd0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801dfd4:	d406      	bmi.n	801dfe4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801dfd6:	4584      	cmp	ip, r0
 801dfd8:	da04      	bge.n	801dfe4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801dfda:	2b00      	cmp	r3, #0
 801dfdc:	db02      	blt.n	801dfe4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801dfde:	42bb      	cmp	r3, r7
 801dfe0:	f2c0 8183 	blt.w	801e2ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801dfe4:	f11c 0c01 	adds.w	ip, ip, #1
 801dfe8:	f100 8173 	bmi.w	801e2d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801dfec:	4561      	cmp	r1, ip
 801dfee:	f2c0 8170 	blt.w	801e2d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801dff2:	3301      	adds	r3, #1
 801dff4:	f100 816d 	bmi.w	801e2d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801dff8:	429a      	cmp	r2, r3
 801dffa:	f2c0 816a 	blt.w	801e2d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801dffe:	9b07      	ldr	r3, [sp, #28]
 801e000:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801e002:	9318      	str	r3, [sp, #96]	; 0x60
 801e004:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e006:	2b00      	cmp	r3, #0
 801e008:	f340 818c 	ble.w	801e324 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801e00c:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801e00e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801e010:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e014:	689b      	ldr	r3, [r3, #8]
 801e016:	1422      	asrs	r2, r4, #16
 801e018:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801e01c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801e020:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801e024:	f100 81cd 	bmi.w	801e3c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e028:	f103 38ff 	add.w	r8, r3, #4294967295
 801e02c:	4542      	cmp	r2, r8
 801e02e:	f280 81c8 	bge.w	801e3c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e032:	f1bc 0f00 	cmp.w	ip, #0
 801e036:	f2c0 81c4 	blt.w	801e3c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e03a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801e03e:	45c4      	cmp	ip, r8
 801e040:	f280 81bf 	bge.w	801e3c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e044:	b21b      	sxth	r3, r3
 801e046:	fb0c 2203 	mla	r2, ip, r3, r2
 801e04a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e04c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801e050:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801e054:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801e058:	2800      	cmp	r0, #0
 801e05a:	f000 81a9 	beq.w	801e3b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801e05e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801e062:	950c      	str	r5, [sp, #48]	; 0x30
 801e064:	0e2d      	lsrs	r5, r5, #24
 801e066:	9513      	str	r5, [sp, #76]	; 0x4c
 801e068:	b181      	cbz	r1, 801e08c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e06a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801e06e:	3b01      	subs	r3, #1
 801e070:	009b      	lsls	r3, r3, #2
 801e072:	3304      	adds	r3, #4
 801e074:	eb08 0c03 	add.w	ip, r8, r3
 801e078:	f858 3003 	ldr.w	r3, [r8, r3]
 801e07c:	9308      	str	r3, [sp, #32]
 801e07e:	0e1b      	lsrs	r3, r3, #24
 801e080:	9311      	str	r3, [sp, #68]	; 0x44
 801e082:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801e086:	930d      	str	r3, [sp, #52]	; 0x34
 801e088:	0e1b      	lsrs	r3, r3, #24
 801e08a:	9314      	str	r3, [sp, #80]	; 0x50
 801e08c:	b280      	uxth	r0, r0
 801e08e:	b289      	uxth	r1, r1
 801e090:	fb00 f901 	mul.w	r9, r0, r1
 801e094:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801e098:	0100      	lsls	r0, r0, #4
 801e09a:	eba0 0809 	sub.w	r8, r0, r9
 801e09e:	b289      	uxth	r1, r1
 801e0a0:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801e0a4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801e0a6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e0a8:	fa1f f888 	uxth.w	r8, r8
 801e0ac:	1a5b      	subs	r3, r3, r1
 801e0ae:	b29b      	uxth	r3, r3
 801e0b0:	fb08 f000 	mul.w	r0, r8, r0
 801e0b4:	fb03 000e 	mla	r0, r3, lr, r0
 801e0b8:	fb01 0005 	mla	r0, r1, r5, r0
 801e0bc:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e0be:	fb09 0005 	mla	r0, r9, r5, r0
 801e0c2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801e0c6:	2800      	cmp	r0, #0
 801e0c8:	f000 80fa 	beq.w	801e2c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e0cc:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801e0d0:	d01b      	beq.n	801e10a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801e0d2:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801e0d6:	fb0e fa0a 	mul.w	sl, lr, sl
 801e0da:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e0de:	fb0e fe02 	mul.w	lr, lr, r2
 801e0e2:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801e0e6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e0ea:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801e0ee:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801e0f2:	4452      	add	r2, sl
 801e0f4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801e0f8:	0a12      	lsrs	r2, r2, #8
 801e0fa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e0fe:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e102:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801e106:	ea42 020c 	orr.w	r2, r2, ip
 801e10a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e10c:	2dff      	cmp	r5, #255	; 0xff
 801e10e:	d021      	beq.n	801e154 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801e110:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e112:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e116:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e118:	fb05 fb0b 	mul.w	fp, r5, fp
 801e11c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e11e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e122:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e124:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e128:	fb05 fa0a 	mul.w	sl, r5, sl
 801e12c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e130:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e134:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e138:	44de      	add	lr, fp
 801e13a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e13e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e142:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e146:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e14a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e14e:	ea4e 050a 	orr.w	r5, lr, sl
 801e152:	950c      	str	r5, [sp, #48]	; 0x30
 801e154:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e156:	2dff      	cmp	r5, #255	; 0xff
 801e158:	d021      	beq.n	801e19e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801e15a:	9d08      	ldr	r5, [sp, #32]
 801e15c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e160:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e162:	fb05 fb0b 	mul.w	fp, r5, fp
 801e166:	9d08      	ldr	r5, [sp, #32]
 801e168:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e16c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e16e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e172:	fb05 fa0a 	mul.w	sl, r5, sl
 801e176:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e17a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e17e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e182:	44de      	add	lr, fp
 801e184:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e188:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e18c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e190:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e194:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e198:	ea4e 050a 	orr.w	r5, lr, sl
 801e19c:	9508      	str	r5, [sp, #32]
 801e19e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e1a0:	2dff      	cmp	r5, #255	; 0xff
 801e1a2:	d021      	beq.n	801e1e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801e1a4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e1a6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e1aa:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e1ac:	fb05 fb0b 	mul.w	fp, r5, fp
 801e1b0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e1b2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e1b6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e1b8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e1bc:	fb05 fa0a 	mul.w	sl, r5, sl
 801e1c0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e1c4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e1c8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e1cc:	44de      	add	lr, fp
 801e1ce:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e1d2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e1d6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e1da:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e1de:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e1e2:	ea4e 050a 	orr.w	r5, lr, sl
 801e1e6:	950d      	str	r5, [sp, #52]	; 0x34
 801e1e8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e1ea:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e1ee:	9d08      	ldr	r5, [sp, #32]
 801e1f0:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801e1f4:	fb08 fc0c 	mul.w	ip, r8, ip
 801e1f8:	fb03 cc0e 	mla	ip, r3, lr, ip
 801e1fc:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801e200:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e202:	fb01 cc0e 	mla	ip, r1, lr, ip
 801e206:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801e20a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e20c:	fb09 cc0e 	mla	ip, r9, lr, ip
 801e210:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801e214:	fb08 f80e 	mul.w	r8, r8, lr
 801e218:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e21c:	fb03 8202 	mla	r2, r3, r2, r8
 801e220:	9b08      	ldr	r3, [sp, #32]
 801e222:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e224:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 801e228:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e22a:	fb01 220a 	mla	r2, r1, sl, r2
 801e22e:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 801e232:	fb09 2901 	mla	r9, r9, r1, r2
 801e236:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e238:	883b      	ldrh	r3, [r7, #0]
 801e23a:	4342      	muls	r2, r0
 801e23c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e240:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e244:	1c50      	adds	r0, r2, #1
 801e246:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e24a:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801e24e:	ea4c 0c09 	orr.w	ip, ip, r9
 801e252:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801e256:	1219      	asrs	r1, r3, #8
 801e258:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801e25c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801e260:	b2c0      	uxtb	r0, r0
 801e262:	fb12 f205 	smulbb	r2, r2, r5
 801e266:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e26a:	fb01 2100 	mla	r1, r1, r0, r2
 801e26e:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801e272:	10da      	asrs	r2, r3, #3
 801e274:	fa5f fc8c 	uxtb.w	ip, ip
 801e278:	00db      	lsls	r3, r3, #3
 801e27a:	fb1c fc05 	smulbb	ip, ip, r5
 801e27e:	b2db      	uxtb	r3, r3
 801e280:	b289      	uxth	r1, r1
 801e282:	fb03 c300 	mla	r3, r3, r0, ip
 801e286:	fa1f fc83 	uxth.w	ip, r3
 801e28a:	1c4b      	adds	r3, r1, #1
 801e28c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801e290:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e294:	fb1e fe05 	smulbb	lr, lr, r5
 801e298:	f10c 0301 	add.w	r3, ip, #1
 801e29c:	fb02 e200 	mla	r2, r2, r0, lr
 801e2a0:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801e2a4:	b292      	uxth	r2, r2
 801e2a6:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801e2aa:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e2ae:	430b      	orrs	r3, r1
 801e2b0:	1c51      	adds	r1, r2, #1
 801e2b2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e2b6:	0952      	lsrs	r2, r2, #5
 801e2b8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e2bc:	4313      	orrs	r3, r2
 801e2be:	803b      	strh	r3, [r7, #0]
 801e2c0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801e2c2:	441c      	add	r4, r3
 801e2c4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e2c6:	441e      	add	r6, r3
 801e2c8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e2ca:	3b01      	subs	r3, #1
 801e2cc:	3702      	adds	r7, #2
 801e2ce:	9318      	str	r3, [sp, #96]	; 0x60
 801e2d0:	e698      	b.n	801e004 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e2d2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801e2d4:	441c      	add	r4, r3
 801e2d6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e2d8:	441e      	add	r6, r3
 801e2da:	9b07      	ldr	r3, [sp, #28]
 801e2dc:	3b01      	subs	r3, #1
 801e2de:	9307      	str	r3, [sp, #28]
 801e2e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e2e2:	3302      	adds	r3, #2
 801e2e4:	930a      	str	r3, [sp, #40]	; 0x28
 801e2e6:	e66d      	b.n	801dfc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801e2e8:	d023      	beq.n	801e332 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801e2ea:	9b07      	ldr	r3, [sp, #28]
 801e2ec:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801e2ee:	3b01      	subs	r3, #1
 801e2f0:	fb00 4003 	mla	r0, r0, r3, r4
 801e2f4:	1400      	asrs	r0, r0, #16
 801e2f6:	f53f ae82 	bmi.w	801dffe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e2fa:	3901      	subs	r1, #1
 801e2fc:	4288      	cmp	r0, r1
 801e2fe:	f6bf ae7e 	bge.w	801dffe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e302:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801e304:	fb01 6303 	mla	r3, r1, r3, r6
 801e308:	141b      	asrs	r3, r3, #16
 801e30a:	f53f ae78 	bmi.w	801dffe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e30e:	3a01      	subs	r2, #1
 801e310:	4293      	cmp	r3, r2
 801e312:	f6bf ae74 	bge.w	801dffe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e316:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801e31a:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801e31e:	f1bb 0f00 	cmp.w	fp, #0
 801e322:	dc6c      	bgt.n	801e3fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801e324:	9b07      	ldr	r3, [sp, #28]
 801e326:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801e32a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e32c:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801e330:	930a      	str	r3, [sp, #40]	; 0x28
 801e332:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e334:	2b00      	cmp	r3, #0
 801e336:	f340 81b3 	ble.w	801e6a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801e33a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e33e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e342:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e346:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e348:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e34c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e350:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e354:	eef0 6a62 	vmov.f32	s13, s5
 801e358:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e35c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e360:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e364:	ee16 4a90 	vmov	r4, s13
 801e368:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e36c:	eef0 6a43 	vmov.f32	s13, s6
 801e370:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e374:	ee12 2a90 	vmov	r2, s5
 801e378:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e37c:	fb92 f3f3 	sdiv	r3, r2, r3
 801e380:	ee13 2a10 	vmov	r2, s6
 801e384:	9329      	str	r3, [sp, #164]	; 0xa4
 801e386:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e388:	fb92 f3f3 	sdiv	r3, r2, r3
 801e38c:	932a      	str	r3, [sp, #168]	; 0xa8
 801e38e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e390:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801e392:	3b01      	subs	r3, #1
 801e394:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e398:	9317      	str	r3, [sp, #92]	; 0x5c
 801e39a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e39c:	bf08      	it	eq
 801e39e:	4613      	moveq	r3, r2
 801e3a0:	ee16 6a90 	vmov	r6, s13
 801e3a4:	9307      	str	r3, [sp, #28]
 801e3a6:	eeb0 3a67 	vmov.f32	s6, s15
 801e3aa:	eef0 2a47 	vmov.f32	s5, s14
 801e3ae:	e5fb      	b.n	801dfa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e3b0:	2900      	cmp	r1, #0
 801e3b2:	f43f ae6b 	beq.w	801e08c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e3b6:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801e3ba:	9308      	str	r3, [sp, #32]
 801e3bc:	0e1b      	lsrs	r3, r3, #24
 801e3be:	9311      	str	r3, [sp, #68]	; 0x44
 801e3c0:	e664      	b.n	801e08c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e3c2:	f112 0801 	adds.w	r8, r2, #1
 801e3c6:	f53f af7b 	bmi.w	801e2c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e3ca:	4543      	cmp	r3, r8
 801e3cc:	f6ff af78 	blt.w	801e2c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e3d0:	f11c 0801 	adds.w	r8, ip, #1
 801e3d4:	f53f af74 	bmi.w	801e2c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e3d8:	45c6      	cmp	lr, r8
 801e3da:	f6ff af71 	blt.w	801e2c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e3de:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801e3e0:	9201      	str	r2, [sp, #4]
 801e3e2:	fa0f f28e 	sxth.w	r2, lr
 801e3e6:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801e3ea:	e9cd c002 	strd	ip, r0, [sp, #8]
 801e3ee:	9200      	str	r2, [sp, #0]
 801e3f0:	b21b      	sxth	r3, r3
 801e3f2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e3f4:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801e3f6:	4639      	mov	r1, r7
 801e3f8:	f7ff fc79 	bl	801dcee <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801e3fc:	e760      	b.n	801e2c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e3fe:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801e400:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e402:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e406:	1427      	asrs	r7, r4, #16
 801e408:	1433      	asrs	r3, r6, #16
 801e40a:	fb01 7303 	mla	r3, r1, r3, r7
 801e40e:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801e412:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801e416:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e41a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801e41e:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801e422:	2a00      	cmp	r2, #0
 801e424:	f000 8133 	beq.w	801e68e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801e428:	687d      	ldr	r5, [r7, #4]
 801e42a:	950e      	str	r5, [sp, #56]	; 0x38
 801e42c:	0e2d      	lsrs	r5, r5, #24
 801e42e:	9515      	str	r5, [sp, #84]	; 0x54
 801e430:	b178      	cbz	r0, 801e452 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e432:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 801e436:	3901      	subs	r1, #1
 801e438:	0089      	lsls	r1, r1, #2
 801e43a:	3104      	adds	r1, #4
 801e43c:	eb07 0e01 	add.w	lr, r7, r1
 801e440:	5879      	ldr	r1, [r7, r1]
 801e442:	9109      	str	r1, [sp, #36]	; 0x24
 801e444:	0e09      	lsrs	r1, r1, #24
 801e446:	9112      	str	r1, [sp, #72]	; 0x48
 801e448:	f8de 1004 	ldr.w	r1, [lr, #4]
 801e44c:	910f      	str	r1, [sp, #60]	; 0x3c
 801e44e:	0e09      	lsrs	r1, r1, #24
 801e450:	9116      	str	r1, [sp, #88]	; 0x58
 801e452:	b292      	uxth	r2, r2
 801e454:	b280      	uxth	r0, r0
 801e456:	fb02 f800 	mul.w	r8, r2, r0
 801e45a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801e45e:	0112      	lsls	r2, r2, #4
 801e460:	eba2 0e08 	sub.w	lr, r2, r8
 801e464:	b280      	uxth	r0, r0
 801e466:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801e46a:	9915      	ldr	r1, [sp, #84]	; 0x54
 801e46c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e46e:	fa1f fe8e 	uxth.w	lr, lr
 801e472:	1a12      	subs	r2, r2, r0
 801e474:	b292      	uxth	r2, r2
 801e476:	fb0e f101 	mul.w	r1, lr, r1
 801e47a:	fb02 110c 	mla	r1, r2, ip, r1
 801e47e:	fb00 1105 	mla	r1, r0, r5, r1
 801e482:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e484:	fb08 1105 	mla	r1, r8, r5, r1
 801e488:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801e48c:	2900      	cmp	r1, #0
 801e48e:	f000 80f5 	beq.w	801e67c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801e492:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801e496:	d019      	beq.n	801e4cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801e498:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801e49c:	fb0c fa0a 	mul.w	sl, ip, sl
 801e4a0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e4a4:	fb0c fc03 	mul.w	ip, ip, r3
 801e4a8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801e4ac:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e4b0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801e4b4:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801e4b8:	4453      	add	r3, sl
 801e4ba:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801e4be:	0a1b      	lsrs	r3, r3, #8
 801e4c0:	0a3f      	lsrs	r7, r7, #8
 801e4c2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e4c6:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801e4ca:	433b      	orrs	r3, r7
 801e4cc:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e4ce:	2dff      	cmp	r5, #255	; 0xff
 801e4d0:	d020      	beq.n	801e514 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801e4d2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e4d4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e4d8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e4da:	436f      	muls	r7, r5
 801e4dc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e4de:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e4e2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e4e4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e4e8:	fb05 fa0a 	mul.w	sl, r5, sl
 801e4ec:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e4f0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e4f4:	44bc      	add	ip, r7
 801e4f6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e4fa:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e4fe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e502:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e506:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e50a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e50e:	ea4c 050a 	orr.w	r5, ip, sl
 801e512:	950e      	str	r5, [sp, #56]	; 0x38
 801e514:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e516:	2dff      	cmp	r5, #255	; 0xff
 801e518:	d020      	beq.n	801e55c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801e51a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e51c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e520:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e522:	436f      	muls	r7, r5
 801e524:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e526:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e52a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e52c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e530:	fb05 fa0a 	mul.w	sl, r5, sl
 801e534:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e538:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e53c:	44bc      	add	ip, r7
 801e53e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e542:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e546:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e54a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e54e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e552:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e556:	ea4c 050a 	orr.w	r5, ip, sl
 801e55a:	9509      	str	r5, [sp, #36]	; 0x24
 801e55c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e55e:	2dff      	cmp	r5, #255	; 0xff
 801e560:	d020      	beq.n	801e5a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801e562:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e564:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e568:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e56a:	436f      	muls	r7, r5
 801e56c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e56e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e572:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e574:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e578:	fb05 fa0a 	mul.w	sl, r5, sl
 801e57c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e580:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e584:	44bc      	add	ip, r7
 801e586:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e58a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e58e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e592:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e596:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e59a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e59e:	ea4c 050a 	orr.w	r5, ip, sl
 801e5a2:	950f      	str	r5, [sp, #60]	; 0x3c
 801e5a4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e5a6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e5aa:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e5ac:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801e5b0:	fb0e f707 	mul.w	r7, lr, r7
 801e5b4:	fb02 770c 	mla	r7, r2, ip, r7
 801e5b8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e5bc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e5be:	fb00 770c 	mla	r7, r0, ip, r7
 801e5c2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e5c6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e5c8:	fb08 770c 	mla	r7, r8, ip, r7
 801e5cc:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801e5d0:	fb0e fe0c 	mul.w	lr, lr, ip
 801e5d4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e5d8:	fb02 e303 	mla	r3, r2, r3, lr
 801e5dc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e5de:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e5e0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801e5e4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e5e6:	fb00 330a 	mla	r3, r0, sl, r3
 801e5ea:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801e5ee:	fb08 3c0c 	mla	ip, r8, ip, r3
 801e5f2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e5f4:	f8b9 0000 	ldrh.w	r0, [r9]
 801e5f8:	4359      	muls	r1, r3
 801e5fa:	0a3f      	lsrs	r7, r7, #8
 801e5fc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e600:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801e604:	1c4b      	adds	r3, r1, #1
 801e606:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801e60a:	ea47 070c 	orr.w	r7, r7, ip
 801e60e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801e612:	1202      	asrs	r2, r0, #8
 801e614:	0c3b      	lsrs	r3, r7, #16
 801e616:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801e61a:	b2c9      	uxtb	r1, r1
 801e61c:	fb13 f305 	smulbb	r3, r3, r5
 801e620:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801e624:	fb02 3201 	mla	r2, r2, r1, r3
 801e628:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801e62c:	10c3      	asrs	r3, r0, #3
 801e62e:	b2ff      	uxtb	r7, r7
 801e630:	00c0      	lsls	r0, r0, #3
 801e632:	b2c0      	uxtb	r0, r0
 801e634:	fb17 f705 	smulbb	r7, r7, r5
 801e638:	fb00 7001 	mla	r0, r0, r1, r7
 801e63c:	b292      	uxth	r2, r2
 801e63e:	fb1c fc05 	smulbb	ip, ip, r5
 801e642:	b280      	uxth	r0, r0
 801e644:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801e648:	fb03 c301 	mla	r3, r3, r1, ip
 801e64c:	1c51      	adds	r1, r2, #1
 801e64e:	f100 0c01 	add.w	ip, r0, #1
 801e652:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e656:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801e65a:	b29b      	uxth	r3, r3
 801e65c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e660:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801e664:	ea4c 0202 	orr.w	r2, ip, r2
 801e668:	f103 0c01 	add.w	ip, r3, #1
 801e66c:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801e670:	095b      	lsrs	r3, r3, #5
 801e672:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e676:	431a      	orrs	r2, r3
 801e678:	f8a9 2000 	strh.w	r2, [r9]
 801e67c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801e67e:	441c      	add	r4, r3
 801e680:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e682:	f109 0902 	add.w	r9, r9, #2
 801e686:	441e      	add	r6, r3
 801e688:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e68c:	e647      	b.n	801e31e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801e68e:	2800      	cmp	r0, #0
 801e690:	f43f aedf 	beq.w	801e452 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e694:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801e698:	9109      	str	r1, [sp, #36]	; 0x24
 801e69a:	0e09      	lsrs	r1, r1, #24
 801e69c:	9112      	str	r1, [sp, #72]	; 0x48
 801e69e:	e6d8      	b.n	801e452 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e6a0:	b01d      	add	sp, #116	; 0x74
 801e6a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e6a6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801e6a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e6aa:	b085      	sub	sp, #20
 801e6ac:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801e6b0:	9102      	str	r1, [sp, #8]
 801e6b2:	2c00      	cmp	r4, #0
 801e6b4:	fb04 7103 	mla	r1, r4, r3, r7
 801e6b8:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801e6bc:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801e6c0:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801e6c4:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801e6c8:	f2c0 810c 	blt.w	801e8e4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801e6cc:	45a6      	cmp	lr, r4
 801e6ce:	f340 8109 	ble.w	801e8e4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801e6d2:	2f00      	cmp	r7, #0
 801e6d4:	f2c0 8104 	blt.w	801e8e0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801e6d8:	42bb      	cmp	r3, r7
 801e6da:	f340 8101 	ble.w	801e8e0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801e6de:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801e6e2:	1c7a      	adds	r2, r7, #1
 801e6e4:	f100 8101 	bmi.w	801e8ea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801e6e8:	4293      	cmp	r3, r2
 801e6ea:	f340 80fe 	ble.w	801e8ea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801e6ee:	2e00      	cmp	r6, #0
 801e6f0:	f000 80fd 	beq.w	801e8ee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801e6f4:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801e6f8:	3401      	adds	r4, #1
 801e6fa:	f100 80fc 	bmi.w	801e8f6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801e6fe:	45a6      	cmp	lr, r4
 801e700:	f340 80f9 	ble.w	801e8f6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801e704:	2800      	cmp	r0, #0
 801e706:	f000 80f9 	beq.w	801e8fc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801e70a:	2f00      	cmp	r7, #0
 801e70c:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801e710:	f2c0 80ef 	blt.w	801e8f2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801e714:	42bb      	cmp	r3, r7
 801e716:	f340 80ec 	ble.w	801e8f2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801e71a:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801e71e:	3701      	adds	r7, #1
 801e720:	f100 80ef 	bmi.w	801e902 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801e724:	42bb      	cmp	r3, r7
 801e726:	f340 80ec 	ble.w	801e902 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801e72a:	2e00      	cmp	r6, #0
 801e72c:	f000 80eb 	beq.w	801e906 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801e730:	6852      	ldr	r2, [r2, #4]
 801e732:	b2b6      	uxth	r6, r6
 801e734:	b280      	uxth	r0, r0
 801e736:	fb00 fe06 	mul.w	lr, r0, r6
 801e73a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801e73e:	0136      	lsls	r6, r6, #4
 801e740:	eba6 070e 	sub.w	r7, r6, lr
 801e744:	b280      	uxth	r0, r0
 801e746:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801e74a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801e74e:	b2bf      	uxth	r7, r7
 801e750:	1a1b      	subs	r3, r3, r0
 801e752:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801e756:	b29b      	uxth	r3, r3
 801e758:	fb07 f60a 	mul.w	r6, r7, sl
 801e75c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801e760:	fb0b 6603 	mla	r6, fp, r3, r6
 801e764:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801e768:	fb00 6609 	mla	r6, r0, r9, r6
 801e76c:	fb0e 6608 	mla	r6, lr, r8, r6
 801e770:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801e774:	9600      	str	r6, [sp, #0]
 801e776:	2e00      	cmp	r6, #0
 801e778:	f000 80af 	beq.w	801e8da <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801e77c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e780:	fb0b fc0c 	mul.w	ip, fp, ip
 801e784:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801e788:	fb0b f505 	mul.w	r5, fp, r5
 801e78c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801e790:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801e794:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e798:	44dc      	add	ip, fp
 801e79a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e79e:	9501      	str	r5, [sp, #4]
 801e7a0:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801e7a4:	9503      	str	r5, [sp, #12]
 801e7a6:	9d01      	ldr	r5, [sp, #4]
 801e7a8:	9e02      	ldr	r6, [sp, #8]
 801e7aa:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801e7ae:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e7b2:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801e7b6:	fb0a fc0c 	mul.w	ip, sl, ip
 801e7ba:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801e7be:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801e7c2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801e7c6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e7ca:	4465      	add	r5, ip
 801e7cc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801e7d0:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801e7d4:	fb09 fc0c 	mul.w	ip, r9, ip
 801e7d8:	fb09 f904 	mul.w	r9, r9, r4
 801e7dc:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801e7e0:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801e7e4:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801e7e8:	fb08 f404 	mul.w	r4, r8, r4
 801e7ec:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801e7f0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e7f4:	fb08 f802 	mul.w	r8, r8, r2
 801e7f8:	fb0a fa01 	mul.w	sl, sl, r1
 801e7fc:	0a22      	lsrs	r2, r4, #8
 801e7fe:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801e802:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e806:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801e80a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801e80e:	4414      	add	r4, r2
 801e810:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801e814:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801e818:	0a2d      	lsrs	r5, r5, #8
 801e81a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801e81e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801e822:	9a03      	ldr	r2, [sp, #12]
 801e824:	8836      	ldrh	r6, [r6, #0]
 801e826:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801e82a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e82e:	437d      	muls	r5, r7
 801e830:	4461      	add	r1, ip
 801e832:	0a24      	lsrs	r4, r4, #8
 801e834:	fb02 5503 	mla	r5, r2, r3, r5
 801e838:	0a09      	lsrs	r1, r1, #8
 801e83a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801e83e:	fb04 540e 	mla	r4, r4, lr, r5
 801e842:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801e846:	fb01 4100 	mla	r1, r1, r0, r4
 801e84a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e84e:	0a09      	lsrs	r1, r1, #8
 801e850:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e854:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801e858:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801e85c:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801e860:	fb07 f70a 	mul.w	r7, r7, sl
 801e864:	fb03 7101 	mla	r1, r3, r1, r7
 801e868:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e86c:	9b00      	ldr	r3, [sp, #0]
 801e86e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801e872:	fb0e 1e08 	mla	lr, lr, r8, r1
 801e876:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801e87a:	fb00 e101 	mla	r1, r0, r1, lr
 801e87e:	43da      	mvns	r2, r3
 801e880:	1233      	asrs	r3, r6, #8
 801e882:	b2d2      	uxtb	r2, r2
 801e884:	10f0      	asrs	r0, r6, #3
 801e886:	0a09      	lsrs	r1, r1, #8
 801e888:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801e88c:	00f6      	lsls	r6, r6, #3
 801e88e:	4353      	muls	r3, r2
 801e890:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801e894:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801e898:	b2f6      	uxtb	r6, r6
 801e89a:	4321      	orrs	r1, r4
 801e89c:	4350      	muls	r0, r2
 801e89e:	4356      	muls	r6, r2
 801e8a0:	1c5a      	adds	r2, r3, #1
 801e8a2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801e8a6:	0c0b      	lsrs	r3, r1, #16
 801e8a8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e8ac:	1c42      	adds	r2, r0, #1
 801e8ae:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e8b2:	0a0a      	lsrs	r2, r1, #8
 801e8b4:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801e8b8:	021b      	lsls	r3, r3, #8
 801e8ba:	00d2      	lsls	r2, r2, #3
 801e8bc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e8c0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801e8c4:	4313      	orrs	r3, r2
 801e8c6:	1c72      	adds	r2, r6, #1
 801e8c8:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801e8cc:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801e8d0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801e8d4:	4319      	orrs	r1, r3
 801e8d6:	9b02      	ldr	r3, [sp, #8]
 801e8d8:	8019      	strh	r1, [r3, #0]
 801e8da:	b005      	add	sp, #20
 801e8dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e8e0:	2500      	movs	r5, #0
 801e8e2:	e6fe      	b.n	801e6e2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801e8e4:	2100      	movs	r1, #0
 801e8e6:	460d      	mov	r5, r1
 801e8e8:	e706      	b.n	801e6f8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801e8ea:	2100      	movs	r1, #0
 801e8ec:	e704      	b.n	801e6f8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801e8ee:	4631      	mov	r1, r6
 801e8f0:	e702      	b.n	801e6f8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801e8f2:	2400      	movs	r4, #0
 801e8f4:	e713      	b.n	801e71e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801e8f6:	2200      	movs	r2, #0
 801e8f8:	4614      	mov	r4, r2
 801e8fa:	e71a      	b.n	801e732 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801e8fc:	4602      	mov	r2, r0
 801e8fe:	4604      	mov	r4, r0
 801e900:	e717      	b.n	801e732 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801e902:	2200      	movs	r2, #0
 801e904:	e715      	b.n	801e732 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801e906:	4632      	mov	r2, r6
 801e908:	e713      	b.n	801e732 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0801e90c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e90c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e910:	b09b      	sub	sp, #108	; 0x6c
 801e912:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801e916:	9218      	str	r2, [sp, #96]	; 0x60
 801e918:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801e91a:	9116      	str	r1, [sp, #88]	; 0x58
 801e91c:	9307      	str	r3, [sp, #28]
 801e91e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801e922:	9019      	str	r0, [sp, #100]	; 0x64
 801e924:	6850      	ldr	r0, [r2, #4]
 801e926:	6812      	ldr	r2, [r2, #0]
 801e928:	fb00 1303 	mla	r3, r0, r3, r1
 801e92c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e930:	930a      	str	r3, [sp, #40]	; 0x28
 801e932:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e934:	681b      	ldr	r3, [r3, #0]
 801e936:	930f      	str	r3, [sp, #60]	; 0x3c
 801e938:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801e93a:	2b00      	cmp	r3, #0
 801e93c:	dc03      	bgt.n	801e946 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801e93e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e940:	2b00      	cmp	r3, #0
 801e942:	f340 8386 	ble.w	801f052 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801e946:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e948:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e94c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e950:	1e48      	subs	r0, r1, #1
 801e952:	1e57      	subs	r7, r2, #1
 801e954:	9b07      	ldr	r3, [sp, #28]
 801e956:	2b00      	cmp	r3, #0
 801e958:	f340 8166 	ble.w	801ec28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801e95c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801e960:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e964:	d406      	bmi.n	801e974 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e966:	4584      	cmp	ip, r0
 801e968:	da04      	bge.n	801e974 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e96a:	2b00      	cmp	r3, #0
 801e96c:	db02      	blt.n	801e974 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e96e:	42bb      	cmp	r3, r7
 801e970:	f2c0 815b 	blt.w	801ec2a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801e974:	f11c 0c01 	adds.w	ip, ip, #1
 801e978:	f100 814b 	bmi.w	801ec12 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e97c:	4561      	cmp	r1, ip
 801e97e:	f2c0 8148 	blt.w	801ec12 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e982:	3301      	adds	r3, #1
 801e984:	f100 8145 	bmi.w	801ec12 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e988:	429a      	cmp	r2, r3
 801e98a:	f2c0 8142 	blt.w	801ec12 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e98e:	9b07      	ldr	r3, [sp, #28]
 801e990:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801e992:	9317      	str	r3, [sp, #92]	; 0x5c
 801e994:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e996:	2b00      	cmp	r3, #0
 801e998:	f340 8165 	ble.w	801ec66 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801e99c:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801e99e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e9a0:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e9a4:	689b      	ldr	r3, [r3, #8]
 801e9a6:	1422      	asrs	r2, r4, #16
 801e9a8:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801e9ac:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801e9b0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801e9b4:	f100 81d5 	bmi.w	801ed62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801e9b8:	f103 38ff 	add.w	r8, r3, #4294967295
 801e9bc:	4542      	cmp	r2, r8
 801e9be:	f280 81d0 	bge.w	801ed62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801e9c2:	f1bc 0f00 	cmp.w	ip, #0
 801e9c6:	f2c0 81cc 	blt.w	801ed62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801e9ca:	f10e 38ff 	add.w	r8, lr, #4294967295
 801e9ce:	45c4      	cmp	ip, r8
 801e9d0:	f280 81c7 	bge.w	801ed62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801e9d4:	b21b      	sxth	r3, r3
 801e9d6:	fb0c 2203 	mla	r2, ip, r3, r2
 801e9da:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e9dc:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801e9e0:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801e9e4:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801e9e8:	2900      	cmp	r1, #0
 801e9ea:	f000 8182 	beq.w	801ecf2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801e9ee:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801e9f2:	950b      	str	r5, [sp, #44]	; 0x2c
 801e9f4:	0e2d      	lsrs	r5, r5, #24
 801e9f6:	9512      	str	r5, [sp, #72]	; 0x48
 801e9f8:	b180      	cbz	r0, 801ea1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801e9fa:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801e9fe:	3b01      	subs	r3, #1
 801ea00:	009b      	lsls	r3, r3, #2
 801ea02:	3304      	adds	r3, #4
 801ea04:	eb08 0c03 	add.w	ip, r8, r3
 801ea08:	f858 3003 	ldr.w	r3, [r8, r3]
 801ea0c:	9308      	str	r3, [sp, #32]
 801ea0e:	0e1b      	lsrs	r3, r3, #24
 801ea10:	9310      	str	r3, [sp, #64]	; 0x40
 801ea12:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801ea16:	930c      	str	r3, [sp, #48]	; 0x30
 801ea18:	0e1b      	lsrs	r3, r3, #24
 801ea1a:	9313      	str	r3, [sp, #76]	; 0x4c
 801ea1c:	b289      	uxth	r1, r1
 801ea1e:	b280      	uxth	r0, r0
 801ea20:	fb01 f900 	mul.w	r9, r1, r0
 801ea24:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801ea28:	0109      	lsls	r1, r1, #4
 801ea2a:	eba1 0809 	sub.w	r8, r1, r9
 801ea2e:	b280      	uxth	r0, r0
 801ea30:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801ea34:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801ea36:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ea38:	fa1f f888 	uxth.w	r8, r8
 801ea3c:	1a09      	subs	r1, r1, r0
 801ea3e:	b289      	uxth	r1, r1
 801ea40:	fb08 f303 	mul.w	r3, r8, r3
 801ea44:	fb01 330e 	mla	r3, r1, lr, r3
 801ea48:	fb00 3305 	mla	r3, r0, r5, r3
 801ea4c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ea4e:	fb09 3305 	mla	r3, r9, r5, r3
 801ea52:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ea56:	2b00      	cmp	r3, #0
 801ea58:	f000 80d2 	beq.w	801ec00 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ea5c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801ea60:	d01b      	beq.n	801ea9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801ea62:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801ea66:	fb0e fa0a 	mul.w	sl, lr, sl
 801ea6a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ea6e:	fb0e fe02 	mul.w	lr, lr, r2
 801ea72:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801ea76:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ea7a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801ea7e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801ea82:	4452      	add	r2, sl
 801ea84:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801ea88:	0a12      	lsrs	r2, r2, #8
 801ea8a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ea8e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ea92:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801ea96:	ea42 020c 	orr.w	r2, r2, ip
 801ea9a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ea9c:	2dff      	cmp	r5, #255	; 0xff
 801ea9e:	d021      	beq.n	801eae4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801eaa0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801eaa2:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801eaa6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801eaa8:	fb05 fb0b 	mul.w	fp, r5, fp
 801eaac:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801eaae:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801eab2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801eab4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801eab8:	fb05 fa0a 	mul.w	sl, r5, sl
 801eabc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801eac0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801eac4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801eac8:	44de      	add	lr, fp
 801eaca:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801eace:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ead2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ead6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801eada:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801eade:	ea4e 050a 	orr.w	r5, lr, sl
 801eae2:	950b      	str	r5, [sp, #44]	; 0x2c
 801eae4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801eae6:	2dff      	cmp	r5, #255	; 0xff
 801eae8:	d021      	beq.n	801eb2e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801eaea:	9d08      	ldr	r5, [sp, #32]
 801eaec:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801eaf0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801eaf2:	fb05 fb0b 	mul.w	fp, r5, fp
 801eaf6:	9d08      	ldr	r5, [sp, #32]
 801eaf8:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801eafc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801eafe:	fb05 fa0e 	mul.w	sl, r5, lr
 801eb02:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801eb06:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801eb0a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801eb0e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801eb12:	44de      	add	lr, fp
 801eb14:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801eb18:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801eb1c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801eb20:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801eb24:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801eb28:	ea4e 050a 	orr.w	r5, lr, sl
 801eb2c:	9508      	str	r5, [sp, #32]
 801eb2e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801eb30:	2dff      	cmp	r5, #255	; 0xff
 801eb32:	d021      	beq.n	801eb78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801eb34:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801eb36:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801eb3a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801eb3c:	fb05 fb0b 	mul.w	fp, r5, fp
 801eb40:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801eb42:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801eb46:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801eb48:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801eb4c:	fb05 fa0a 	mul.w	sl, r5, sl
 801eb50:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801eb54:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801eb58:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801eb5c:	44de      	add	lr, fp
 801eb5e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801eb62:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801eb66:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801eb6a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801eb6e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801eb72:	ea4e 050a 	orr.w	r5, lr, sl
 801eb76:	950c      	str	r5, [sp, #48]	; 0x30
 801eb78:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801eb7a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801eb7e:	9d08      	ldr	r5, [sp, #32]
 801eb80:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801eb84:	fb08 fc0c 	mul.w	ip, r8, ip
 801eb88:	fb01 cc0e 	mla	ip, r1, lr, ip
 801eb8c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801eb90:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801eb92:	fb00 cc0e 	mla	ip, r0, lr, ip
 801eb96:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801eb9a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801eb9c:	fb09 cc0e 	mla	ip, r9, lr, ip
 801eba0:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801eba4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801eba8:	fb08 f80e 	mul.w	r8, r8, lr
 801ebac:	fb01 8202 	mla	r2, r1, r2, r8
 801ebb0:	9908      	ldr	r1, [sp, #32]
 801ebb2:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801ebb6:	990c      	ldr	r1, [sp, #48]	; 0x30
 801ebb8:	fb00 220a 	mla	r2, r0, sl, r2
 801ebbc:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801ebc0:	fb09 2900 	mla	r9, r9, r0, r2
 801ebc4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ebc8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ebcc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ebd0:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801ebd4:	ea4c 0c09 	orr.w	ip, ip, r9
 801ebd8:	2bff      	cmp	r3, #255	; 0xff
 801ebda:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801ebde:	f040 8091 	bne.w	801ed04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801ebe2:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801ebe6:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 801ebea:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ebee:	f022 0207 	bic.w	r2, r2, #7
 801ebf2:	431a      	orrs	r2, r3
 801ebf4:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801ebf8:	ea4c 0c02 	orr.w	ip, ip, r2
 801ebfc:	f8a7 c000 	strh.w	ip, [r7]
 801ec00:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ec02:	441c      	add	r4, r3
 801ec04:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ec06:	441e      	add	r6, r3
 801ec08:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801ec0a:	3b01      	subs	r3, #1
 801ec0c:	3702      	adds	r7, #2
 801ec0e:	9317      	str	r3, [sp, #92]	; 0x5c
 801ec10:	e6c0      	b.n	801e994 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801ec12:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ec14:	441c      	add	r4, r3
 801ec16:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ec18:	441e      	add	r6, r3
 801ec1a:	9b07      	ldr	r3, [sp, #28]
 801ec1c:	3b01      	subs	r3, #1
 801ec1e:	9307      	str	r3, [sp, #28]
 801ec20:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ec22:	3302      	adds	r3, #2
 801ec24:	930a      	str	r3, [sp, #40]	; 0x28
 801ec26:	e695      	b.n	801e954 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ec28:	d024      	beq.n	801ec74 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801ec2a:	9b07      	ldr	r3, [sp, #28]
 801ec2c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801ec2e:	3b01      	subs	r3, #1
 801ec30:	fb00 4003 	mla	r0, r0, r3, r4
 801ec34:	1400      	asrs	r0, r0, #16
 801ec36:	f53f aeaa 	bmi.w	801e98e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ec3a:	3901      	subs	r1, #1
 801ec3c:	4288      	cmp	r0, r1
 801ec3e:	f6bf aea6 	bge.w	801e98e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ec42:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801ec44:	fb01 6303 	mla	r3, r1, r3, r6
 801ec48:	141b      	asrs	r3, r3, #16
 801ec4a:	f53f aea0 	bmi.w	801e98e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ec4e:	3a01      	subs	r2, #1
 801ec50:	4293      	cmp	r3, r2
 801ec52:	f6bf ae9c 	bge.w	801e98e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ec56:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801ec5a:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801ec5e:	f1bb 0f00 	cmp.w	fp, #0
 801ec62:	f300 809a 	bgt.w	801ed9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801ec66:	9b07      	ldr	r3, [sp, #28]
 801ec68:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801ec6c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ec6e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801ec72:	930a      	str	r3, [sp, #40]	; 0x28
 801ec74:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801ec76:	2b00      	cmp	r3, #0
 801ec78:	f340 81eb 	ble.w	801f052 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801ec7c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ec80:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ec84:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ec88:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ec8a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ec8e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ec92:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ec96:	eef0 6a62 	vmov.f32	s13, s5
 801ec9a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ec9e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801eca2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801eca6:	ee16 4a90 	vmov	r4, s13
 801ecaa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ecae:	eef0 6a43 	vmov.f32	s13, s6
 801ecb2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ecb6:	ee12 2a90 	vmov	r2, s5
 801ecba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ecbe:	fb92 f3f3 	sdiv	r3, r2, r3
 801ecc2:	ee13 2a10 	vmov	r2, s6
 801ecc6:	9327      	str	r3, [sp, #156]	; 0x9c
 801ecc8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ecca:	fb92 f3f3 	sdiv	r3, r2, r3
 801ecce:	9328      	str	r3, [sp, #160]	; 0xa0
 801ecd0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801ecd2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801ecd4:	3b01      	subs	r3, #1
 801ecd6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ecda:	9316      	str	r3, [sp, #88]	; 0x58
 801ecdc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ecde:	bf08      	it	eq
 801ece0:	4613      	moveq	r3, r2
 801ece2:	ee16 6a90 	vmov	r6, s13
 801ece6:	9307      	str	r3, [sp, #28]
 801ece8:	eeb0 3a67 	vmov.f32	s6, s15
 801ecec:	eef0 2a47 	vmov.f32	s5, s14
 801ecf0:	e622      	b.n	801e938 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801ecf2:	2800      	cmp	r0, #0
 801ecf4:	f43f ae92 	beq.w	801ea1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801ecf8:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801ecfc:	9308      	str	r3, [sp, #32]
 801ecfe:	0e1b      	lsrs	r3, r3, #24
 801ed00:	9310      	str	r3, [sp, #64]	; 0x40
 801ed02:	e68b      	b.n	801ea1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801ed04:	8839      	ldrh	r1, [r7, #0]
 801ed06:	4dd4      	ldr	r5, [pc, #848]	; (801f058 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801ed08:	43db      	mvns	r3, r3
 801ed0a:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801ed0e:	fa5f f883 	uxtb.w	r8, r3
 801ed12:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801ed16:	fb0e fe08 	mul.w	lr, lr, r8
 801ed1a:	10c8      	asrs	r0, r1, #3
 801ed1c:	00cb      	lsls	r3, r1, #3
 801ed1e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ed22:	f10e 0101 	add.w	r1, lr, #1
 801ed26:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801ed2a:	fb00 f008 	mul.w	r0, r0, r8
 801ed2e:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801ed32:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801ed36:	f100 0e01 	add.w	lr, r0, #1
 801ed3a:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801ed3e:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801ed42:	b2db      	uxtb	r3, r3
 801ed44:	b2c9      	uxtb	r1, r1
 801ed46:	00d2      	lsls	r2, r2, #3
 801ed48:	fb03 f308 	mul.w	r3, r3, r8
 801ed4c:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801ed50:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ed54:	430a      	orrs	r2, r1
 801ed56:	1c59      	adds	r1, r3, #1
 801ed58:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801ed5c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801ed60:	e748      	b.n	801ebf4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801ed62:	f112 0801 	adds.w	r8, r2, #1
 801ed66:	f53f af4b 	bmi.w	801ec00 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ed6a:	4543      	cmp	r3, r8
 801ed6c:	f6ff af48 	blt.w	801ec00 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ed70:	f11c 0801 	adds.w	r8, ip, #1
 801ed74:	f53f af44 	bmi.w	801ec00 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ed78:	45c6      	cmp	lr, r8
 801ed7a:	f6ff af41 	blt.w	801ec00 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ed7e:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801ed82:	fa0f f28e 	sxth.w	r2, lr
 801ed86:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801ed8a:	9200      	str	r2, [sp, #0]
 801ed8c:	b21b      	sxth	r3, r3
 801ed8e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ed90:	9819      	ldr	r0, [sp, #100]	; 0x64
 801ed92:	4639      	mov	r1, r7
 801ed94:	f7ff fc87 	bl	801e6a6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801ed98:	e732      	b.n	801ec00 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ed9a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ed9c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801ed9e:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801eda2:	1421      	asrs	r1, r4, #16
 801eda4:	1433      	asrs	r3, r6, #16
 801eda6:	fb07 1303 	mla	r3, r7, r3, r1
 801edaa:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801edac:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801edb0:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801edb4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801edb8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801edbc:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801edc0:	2a00      	cmp	r2, #0
 801edc2:	f000 8107 	beq.w	801efd4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 801edc6:	684d      	ldr	r5, [r1, #4]
 801edc8:	950d      	str	r5, [sp, #52]	; 0x34
 801edca:	0e2d      	lsrs	r5, r5, #24
 801edcc:	9514      	str	r5, [sp, #80]	; 0x50
 801edce:	b178      	cbz	r0, 801edf0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801edd0:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801edd4:	3f01      	subs	r7, #1
 801edd6:	00bf      	lsls	r7, r7, #2
 801edd8:	3704      	adds	r7, #4
 801edda:	eb01 0e07 	add.w	lr, r1, r7
 801edde:	59c9      	ldr	r1, [r1, r7]
 801ede0:	9109      	str	r1, [sp, #36]	; 0x24
 801ede2:	0e09      	lsrs	r1, r1, #24
 801ede4:	9111      	str	r1, [sp, #68]	; 0x44
 801ede6:	f8de 1004 	ldr.w	r1, [lr, #4]
 801edea:	910e      	str	r1, [sp, #56]	; 0x38
 801edec:	0e09      	lsrs	r1, r1, #24
 801edee:	9115      	str	r1, [sp, #84]	; 0x54
 801edf0:	b292      	uxth	r2, r2
 801edf2:	b280      	uxth	r0, r0
 801edf4:	fb02 f900 	mul.w	r9, r2, r0
 801edf8:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801edfc:	0112      	lsls	r2, r2, #4
 801edfe:	eba2 0e09 	sub.w	lr, r2, r9
 801ee02:	b280      	uxth	r0, r0
 801ee04:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801ee08:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ee0a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ee0c:	fa1f fe8e 	uxth.w	lr, lr
 801ee10:	1a09      	subs	r1, r1, r0
 801ee12:	b289      	uxth	r1, r1
 801ee14:	fb0e f202 	mul.w	r2, lr, r2
 801ee18:	fb01 220c 	mla	r2, r1, ip, r2
 801ee1c:	fb00 2205 	mla	r2, r0, r5, r2
 801ee20:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ee22:	fb09 2205 	mla	r2, r9, r5, r2
 801ee26:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801ee2a:	2a00      	cmp	r2, #0
 801ee2c:	f000 80c9 	beq.w	801efc2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801ee30:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801ee34:	d019      	beq.n	801ee6a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801ee36:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801ee3a:	fb0c fa0a 	mul.w	sl, ip, sl
 801ee3e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ee42:	fb0c fc03 	mul.w	ip, ip, r3
 801ee46:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ee4a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ee4e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801ee52:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801ee56:	4453      	add	r3, sl
 801ee58:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801ee5c:	0a1b      	lsrs	r3, r3, #8
 801ee5e:	0a3f      	lsrs	r7, r7, #8
 801ee60:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ee64:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801ee68:	433b      	orrs	r3, r7
 801ee6a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ee6c:	2dff      	cmp	r5, #255	; 0xff
 801ee6e:	d020      	beq.n	801eeb2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801ee70:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ee72:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ee76:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ee78:	436f      	muls	r7, r5
 801ee7a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ee7c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ee80:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ee82:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ee86:	fb05 fa0a 	mul.w	sl, r5, sl
 801ee8a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ee8e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ee92:	44bc      	add	ip, r7
 801ee94:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ee98:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ee9c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801eea0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801eea4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801eea8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801eeac:	ea4c 050a 	orr.w	r5, ip, sl
 801eeb0:	950d      	str	r5, [sp, #52]	; 0x34
 801eeb2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801eeb4:	2dff      	cmp	r5, #255	; 0xff
 801eeb6:	d020      	beq.n	801eefa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801eeb8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801eeba:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801eebe:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801eec0:	436f      	muls	r7, r5
 801eec2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801eec4:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801eec8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801eeca:	fb05 fa0c 	mul.w	sl, r5, ip
 801eece:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801eed2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801eed6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801eeda:	44bc      	add	ip, r7
 801eedc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801eee0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801eee4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801eee8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801eeec:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801eef0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801eef4:	ea4c 050a 	orr.w	r5, ip, sl
 801eef8:	9509      	str	r5, [sp, #36]	; 0x24
 801eefa:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801eefc:	2dff      	cmp	r5, #255	; 0xff
 801eefe:	d020      	beq.n	801ef42 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801ef00:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ef02:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ef06:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ef08:	436f      	muls	r7, r5
 801ef0a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ef0c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ef10:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ef12:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ef16:	fb05 fa0a 	mul.w	sl, r5, sl
 801ef1a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ef1e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ef22:	44bc      	add	ip, r7
 801ef24:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ef28:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ef2c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ef30:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ef34:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ef38:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ef3c:	ea4c 050a 	orr.w	r5, ip, sl
 801ef40:	950e      	str	r5, [sp, #56]	; 0x38
 801ef42:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ef44:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ef48:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801ef4a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801ef4e:	fb0e f707 	mul.w	r7, lr, r7
 801ef52:	fb01 770c 	mla	r7, r1, ip, r7
 801ef56:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ef5a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ef5c:	fb00 770c 	mla	r7, r0, ip, r7
 801ef60:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ef64:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ef66:	fb09 770c 	mla	r7, r9, ip, r7
 801ef6a:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801ef6e:	fb0e fe0c 	mul.w	lr, lr, ip
 801ef72:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ef76:	fb01 e303 	mla	r3, r1, r3, lr
 801ef7a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801ef7c:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801ef80:	990e      	ldr	r1, [sp, #56]	; 0x38
 801ef82:	fb00 330a 	mla	r3, r0, sl, r3
 801ef86:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801ef8a:	fb09 3c0c 	mla	ip, r9, ip, r3
 801ef8e:	0a3f      	lsrs	r7, r7, #8
 801ef90:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ef94:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801ef98:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801ef9c:	ea47 070c 	orr.w	r7, r7, ip
 801efa0:	2aff      	cmp	r2, #255	; 0xff
 801efa2:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801efa6:	d11e      	bne.n	801efe6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801efa8:	097a      	lsrs	r2, r7, #5
 801efaa:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801efae:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801efb2:	f023 0307 	bic.w	r3, r3, #7
 801efb6:	4313      	orrs	r3, r2
 801efb8:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801efbc:	431f      	orrs	r7, r3
 801efbe:	f8a8 7000 	strh.w	r7, [r8]
 801efc2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801efc4:	441c      	add	r4, r3
 801efc6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801efc8:	f108 0802 	add.w	r8, r8, #2
 801efcc:	441e      	add	r6, r3
 801efce:	f10b 3bff 	add.w	fp, fp, #4294967295
 801efd2:	e644      	b.n	801ec5e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801efd4:	2800      	cmp	r0, #0
 801efd6:	f43f af0b 	beq.w	801edf0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801efda:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801efde:	9109      	str	r1, [sp, #36]	; 0x24
 801efe0:	0e09      	lsrs	r1, r1, #24
 801efe2:	9111      	str	r1, [sp, #68]	; 0x44
 801efe4:	e704      	b.n	801edf0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801efe6:	f8b8 1000 	ldrh.w	r1, [r8]
 801efea:	43d2      	mvns	r2, r2
 801efec:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801eff0:	fa5f fe82 	uxtb.w	lr, r2
 801eff4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801eff8:	fb0c fc0e 	mul.w	ip, ip, lr
 801effc:	10c8      	asrs	r0, r1, #3
 801effe:	00ca      	lsls	r2, r1, #3
 801f000:	f10c 0101 	add.w	r1, ip, #1
 801f004:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f008:	0c39      	lsrs	r1, r7, #16
 801f00a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f00e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f012:	4911      	ldr	r1, [pc, #68]	; (801f058 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801f014:	fb00 f00e 	mul.w	r0, r0, lr
 801f018:	fa5f fc8c 	uxtb.w	ip, ip
 801f01c:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801f020:	b2d2      	uxtb	r2, r2
 801f022:	1c41      	adds	r1, r0, #1
 801f024:	fb02 f20e 	mul.w	r2, r2, lr
 801f028:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801f02c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f030:	1c51      	adds	r1, r2, #1
 801f032:	00c0      	lsls	r0, r0, #3
 801f034:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f038:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f03c:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801f040:	ea4c 0c00 	orr.w	ip, ip, r0
 801f044:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801f048:	ea47 0c0c 	orr.w	ip, r7, ip
 801f04c:	f8a8 c000 	strh.w	ip, [r8]
 801f050:	e7b7      	b.n	801efc2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801f052:	b01b      	add	sp, #108	; 0x6c
 801f054:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f058:	fffff800 	.word	0xfffff800

0801f05c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801f05c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f060:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801f064:	2d00      	cmp	r5, #0
 801f066:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801f06a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801f06e:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801f072:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801f076:	fb05 0e03 	mla	lr, r5, r3, r0
 801f07a:	f2c0 808c 	blt.w	801f196 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801f07e:	45a9      	cmp	r9, r5
 801f080:	f340 8089 	ble.w	801f196 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801f084:	2800      	cmp	r0, #0
 801f086:	f2c0 8084 	blt.w	801f192 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801f08a:	4580      	cmp	r8, r0
 801f08c:	f340 8081 	ble.w	801f192 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801f090:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801f094:	f01e 0f01 	tst.w	lr, #1
 801f098:	5d16      	ldrb	r6, [r2, r4]
 801f09a:	bf0c      	ite	eq
 801f09c:	f006 060f 	andeq.w	r6, r6, #15
 801f0a0:	1136      	asrne	r6, r6, #4
 801f0a2:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801f0a6:	b2f6      	uxtb	r6, r6
 801f0a8:	1c44      	adds	r4, r0, #1
 801f0aa:	d477      	bmi.n	801f19c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801f0ac:	45a0      	cmp	r8, r4
 801f0ae:	dd75      	ble.n	801f19c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801f0b0:	2f00      	cmp	r7, #0
 801f0b2:	d075      	beq.n	801f1a0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801f0b4:	f10e 0a01 	add.w	sl, lr, #1
 801f0b8:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801f0bc:	f01a 0f01 	tst.w	sl, #1
 801f0c0:	5d14      	ldrb	r4, [r2, r4]
 801f0c2:	bf0c      	ite	eq
 801f0c4:	f004 040f 	andeq.w	r4, r4, #15
 801f0c8:	1124      	asrne	r4, r4, #4
 801f0ca:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801f0ce:	b2e4      	uxtb	r4, r4
 801f0d0:	3501      	adds	r5, #1
 801f0d2:	d469      	bmi.n	801f1a8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801f0d4:	45a9      	cmp	r9, r5
 801f0d6:	dd67      	ble.n	801f1a8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801f0d8:	f1bc 0f00 	cmp.w	ip, #0
 801f0dc:	d067      	beq.n	801f1ae <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801f0de:	2800      	cmp	r0, #0
 801f0e0:	db60      	blt.n	801f1a4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801f0e2:	4580      	cmp	r8, r0
 801f0e4:	dd5e      	ble.n	801f1a4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801f0e6:	eb03 090e 	add.w	r9, r3, lr
 801f0ea:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801f0ee:	f019 0f01 	tst.w	r9, #1
 801f0f2:	5d55      	ldrb	r5, [r2, r5]
 801f0f4:	bf0c      	ite	eq
 801f0f6:	f005 050f 	andeq.w	r5, r5, #15
 801f0fa:	112d      	asrne	r5, r5, #4
 801f0fc:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801f100:	b2ed      	uxtb	r5, r5
 801f102:	3001      	adds	r0, #1
 801f104:	d456      	bmi.n	801f1b4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801f106:	4580      	cmp	r8, r0
 801f108:	dd54      	ble.n	801f1b4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801f10a:	2f00      	cmp	r7, #0
 801f10c:	d054      	beq.n	801f1b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801f10e:	3301      	adds	r3, #1
 801f110:	449e      	add	lr, r3
 801f112:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801f116:	f01e 0f01 	tst.w	lr, #1
 801f11a:	5cd0      	ldrb	r0, [r2, r3]
 801f11c:	bf0c      	ite	eq
 801f11e:	f000 000f 	andeq.w	r0, r0, #15
 801f122:	1100      	asrne	r0, r0, #4
 801f124:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f128:	b2c3      	uxtb	r3, r0
 801f12a:	b2ba      	uxth	r2, r7
 801f12c:	fa1f fc8c 	uxth.w	ip, ip
 801f130:	fb02 f00c 	mul.w	r0, r2, ip
 801f134:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801f138:	0112      	lsls	r2, r2, #4
 801f13a:	fa1f fc8c 	uxth.w	ip, ip
 801f13e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801f142:	1a12      	subs	r2, r2, r0
 801f144:	eba7 070c 	sub.w	r7, r7, ip
 801f148:	b292      	uxth	r2, r2
 801f14a:	b2bf      	uxth	r7, r7
 801f14c:	4362      	muls	r2, r4
 801f14e:	fb06 2207 	mla	r2, r6, r7, r2
 801f152:	fb0c 2505 	mla	r5, ip, r5, r2
 801f156:	fb00 5303 	mla	r3, r0, r3, r5
 801f15a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f15e:	b1b3      	cbz	r3, 801f18e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801f160:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 801f164:	435a      	muls	r2, r3
 801f166:	1c53      	adds	r3, r2, #1
 801f168:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f16c:	4a2d      	ldr	r2, [pc, #180]	; (801f224 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801f16e:	121b      	asrs	r3, r3, #8
 801f170:	6812      	ldr	r2, [r2, #0]
 801f172:	2bff      	cmp	r3, #255	; 0xff
 801f174:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801f178:	d120      	bne.n	801f1bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801f17a:	4b2b      	ldr	r3, [pc, #172]	; (801f228 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801f17c:	0950      	lsrs	r0, r2, #5
 801f17e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f182:	4033      	ands	r3, r6
 801f184:	4318      	orrs	r0, r3
 801f186:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f18a:	4302      	orrs	r2, r0
 801f18c:	800a      	strh	r2, [r1, #0]
 801f18e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f192:	2600      	movs	r6, #0
 801f194:	e788      	b.n	801f0a8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801f196:	2400      	movs	r4, #0
 801f198:	4626      	mov	r6, r4
 801f19a:	e799      	b.n	801f0d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f19c:	2400      	movs	r4, #0
 801f19e:	e797      	b.n	801f0d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f1a0:	463c      	mov	r4, r7
 801f1a2:	e795      	b.n	801f0d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f1a4:	2500      	movs	r5, #0
 801f1a6:	e7ac      	b.n	801f102 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801f1a8:	2300      	movs	r3, #0
 801f1aa:	461d      	mov	r5, r3
 801f1ac:	e7bd      	b.n	801f12a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f1ae:	4663      	mov	r3, ip
 801f1b0:	4665      	mov	r5, ip
 801f1b2:	e7ba      	b.n	801f12a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f1b4:	2300      	movs	r3, #0
 801f1b6:	e7b8      	b.n	801f12a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f1b8:	463b      	mov	r3, r7
 801f1ba:	e7b6      	b.n	801f12a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f1bc:	880d      	ldrh	r5, [r1, #0]
 801f1be:	b29f      	uxth	r7, r3
 801f1c0:	122c      	asrs	r4, r5, #8
 801f1c2:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801f1c6:	43db      	mvns	r3, r3
 801f1c8:	b2db      	uxtb	r3, r3
 801f1ca:	fb10 f007 	smulbb	r0, r0, r7
 801f1ce:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801f1d2:	fb04 0403 	mla	r4, r4, r3, r0
 801f1d6:	b2f6      	uxtb	r6, r6
 801f1d8:	10e8      	asrs	r0, r5, #3
 801f1da:	b2d2      	uxtb	r2, r2
 801f1dc:	00ed      	lsls	r5, r5, #3
 801f1de:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f1e2:	fb12 f207 	smulbb	r2, r2, r7
 801f1e6:	fb16 f607 	smulbb	r6, r6, r7
 801f1ea:	b2ed      	uxtb	r5, r5
 801f1ec:	b2a4      	uxth	r4, r4
 801f1ee:	fb00 6603 	mla	r6, r0, r3, r6
 801f1f2:	fb05 2303 	mla	r3, r5, r3, r2
 801f1f6:	b29a      	uxth	r2, r3
 801f1f8:	1c63      	adds	r3, r4, #1
 801f1fa:	b2b0      	uxth	r0, r6
 801f1fc:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801f200:	1c53      	adds	r3, r2, #1
 801f202:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f206:	1c42      	adds	r2, r0, #1
 801f208:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f20c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801f210:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f214:	0940      	lsrs	r0, r0, #5
 801f216:	4323      	orrs	r3, r4
 801f218:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f21c:	4303      	orrs	r3, r0
 801f21e:	800b      	strh	r3, [r1, #0]
 801f220:	e7b5      	b.n	801f18e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801f222:	bf00      	nop
 801f224:	200155bc 	.word	0x200155bc
 801f228:	00fff800 	.word	0x00fff800

0801f22c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f22c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f230:	b097      	sub	sp, #92	; 0x5c
 801f232:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 801f236:	9214      	str	r2, [sp, #80]	; 0x50
 801f238:	9309      	str	r3, [sp, #36]	; 0x24
 801f23a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801f23c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801f240:	910d      	str	r1, [sp, #52]	; 0x34
 801f242:	930f      	str	r3, [sp, #60]	; 0x3c
 801f244:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801f248:	9015      	str	r0, [sp, #84]	; 0x54
 801f24a:	6850      	ldr	r0, [r2, #4]
 801f24c:	6812      	ldr	r2, [r2, #0]
 801f24e:	fb00 1303 	mla	r3, r0, r3, r1
 801f252:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801f256:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f258:	689b      	ldr	r3, [r3, #8]
 801f25a:	3301      	adds	r3, #1
 801f25c:	f023 0301 	bic.w	r3, r3, #1
 801f260:	930a      	str	r3, [sp, #40]	; 0x28
 801f262:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f264:	681f      	ldr	r7, [r3, #0]
 801f266:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f268:	2b00      	cmp	r3, #0
 801f26a:	dc03      	bgt.n	801f274 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801f26c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801f26e:	2b00      	cmp	r3, #0
 801f270:	f340 8287 	ble.w	801f782 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801f274:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f276:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f27a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f27e:	1e48      	subs	r0, r1, #1
 801f280:	f102 3cff 	add.w	ip, r2, #4294967295
 801f284:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f286:	2b00      	cmp	r3, #0
 801f288:	f340 80c4 	ble.w	801f414 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801f28c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f290:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f294:	d406      	bmi.n	801f2a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f296:	4586      	cmp	lr, r0
 801f298:	da04      	bge.n	801f2a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f29a:	2b00      	cmp	r3, #0
 801f29c:	db02      	blt.n	801f2a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f29e:	4563      	cmp	r3, ip
 801f2a0:	f2c0 80b9 	blt.w	801f416 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801f2a4:	f11e 0e01 	adds.w	lr, lr, #1
 801f2a8:	f100 80aa 	bmi.w	801f400 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f2ac:	4571      	cmp	r1, lr
 801f2ae:	f2c0 80a7 	blt.w	801f400 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f2b2:	3301      	adds	r3, #1
 801f2b4:	f100 80a4 	bmi.w	801f400 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f2b8:	429a      	cmp	r2, r3
 801f2ba:	f2c0 80a1 	blt.w	801f400 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f2be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f2c0:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 801f2c4:	930e      	str	r3, [sp, #56]	; 0x38
 801f2c6:	46c8      	mov	r8, r9
 801f2c8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f2ca:	2b00      	cmp	r3, #0
 801f2cc:	f340 80c3 	ble.w	801f456 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801f2d0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f2d2:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801f2d6:	1423      	asrs	r3, r4, #16
 801f2d8:	ea4f 4026 	mov.w	r0, r6, asr #16
 801f2dc:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f2e0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f2e4:	f100 814d 	bmi.w	801f582 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f2e8:	f10c 3bff 	add.w	fp, ip, #4294967295
 801f2ec:	455b      	cmp	r3, fp
 801f2ee:	f280 8148 	bge.w	801f582 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f2f2:	2800      	cmp	r0, #0
 801f2f4:	f2c0 8145 	blt.w	801f582 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f2f8:	f10e 3bff 	add.w	fp, lr, #4294967295
 801f2fc:	4558      	cmp	r0, fp
 801f2fe:	f280 8140 	bge.w	801f582 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f302:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801f304:	fb00 3305 	mla	r3, r0, r5, r3
 801f308:	0858      	lsrs	r0, r3, #1
 801f30a:	07dd      	lsls	r5, r3, #31
 801f30c:	f817 c000 	ldrb.w	ip, [r7, r0]
 801f310:	bf54      	ite	pl
 801f312:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f316:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f31a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f31e:	fa5f fc8c 	uxtb.w	ip, ip
 801f322:	2a00      	cmp	r2, #0
 801f324:	f000 80db 	beq.w	801f4de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 801f328:	1c58      	adds	r0, r3, #1
 801f32a:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801f32e:	07c0      	lsls	r0, r0, #31
 801f330:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f334:	bf54      	ite	pl
 801f336:	f00e 0e0f 	andpl.w	lr, lr, #15
 801f33a:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801f33e:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801f342:	fa5f f08e 	uxtb.w	r0, lr
 801f346:	9010      	str	r0, [sp, #64]	; 0x40
 801f348:	b1c9      	cbz	r1, 801f37e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f34a:	4453      	add	r3, sl
 801f34c:	0858      	lsrs	r0, r3, #1
 801f34e:	07dd      	lsls	r5, r3, #31
 801f350:	5c38      	ldrb	r0, [r7, r0]
 801f352:	bf54      	ite	pl
 801f354:	f000 000f 	andpl.w	r0, r0, #15
 801f358:	1100      	asrmi	r0, r0, #4
 801f35a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f35e:	3301      	adds	r3, #1
 801f360:	b2c0      	uxtb	r0, r0
 801f362:	900b      	str	r0, [sp, #44]	; 0x2c
 801f364:	0858      	lsrs	r0, r3, #1
 801f366:	07dd      	lsls	r5, r3, #31
 801f368:	f817 e000 	ldrb.w	lr, [r7, r0]
 801f36c:	bf54      	ite	pl
 801f36e:	f00e 030f 	andpl.w	r3, lr, #15
 801f372:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801f376:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f37a:	b2db      	uxtb	r3, r3
 801f37c:	9311      	str	r3, [sp, #68]	; 0x44
 801f37e:	b292      	uxth	r2, r2
 801f380:	b289      	uxth	r1, r1
 801f382:	fb02 f301 	mul.w	r3, r2, r1
 801f386:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801f38a:	0112      	lsls	r2, r2, #4
 801f38c:	b289      	uxth	r1, r1
 801f38e:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801f392:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f394:	1ad2      	subs	r2, r2, r3
 801f396:	1a40      	subs	r0, r0, r1
 801f398:	b292      	uxth	r2, r2
 801f39a:	436a      	muls	r2, r5
 801f39c:	b280      	uxth	r0, r0
 801f39e:	fb0c 2c00 	mla	ip, ip, r0, r2
 801f3a2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801f3a4:	fb01 c102 	mla	r1, r1, r2, ip
 801f3a8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801f3aa:	fb03 1302 	mla	r3, r3, r2, r1
 801f3ae:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f3b2:	b1db      	cbz	r3, 801f3ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f3b4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f3b6:	4353      	muls	r3, r2
 801f3b8:	1c5a      	adds	r2, r3, #1
 801f3ba:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801f3be:	4ac6      	ldr	r2, [pc, #792]	; (801f6d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801f3c0:	121b      	asrs	r3, r3, #8
 801f3c2:	6812      	ldr	r2, [r2, #0]
 801f3c4:	2bff      	cmp	r3, #255	; 0xff
 801f3c6:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801f3ca:	f040 8099 	bne.w	801f500 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 801f3ce:	0953      	lsrs	r3, r2, #5
 801f3d0:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801f3d4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f3d8:	f02c 0c07 	bic.w	ip, ip, #7
 801f3dc:	ea43 0c0c 	orr.w	ip, r3, ip
 801f3e0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f3e4:	ea4c 0202 	orr.w	r2, ip, r2
 801f3e8:	f8a8 2000 	strh.w	r2, [r8]
 801f3ec:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801f3ee:	441c      	add	r4, r3
 801f3f0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f3f2:	441e      	add	r6, r3
 801f3f4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f3f6:	3b01      	subs	r3, #1
 801f3f8:	f108 0802 	add.w	r8, r8, #2
 801f3fc:	930e      	str	r3, [sp, #56]	; 0x38
 801f3fe:	e763      	b.n	801f2c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801f400:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801f402:	441c      	add	r4, r3
 801f404:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f406:	441e      	add	r6, r3
 801f408:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f40a:	3b01      	subs	r3, #1
 801f40c:	9309      	str	r3, [sp, #36]	; 0x24
 801f40e:	f109 0902 	add.w	r9, r9, #2
 801f412:	e737      	b.n	801f284 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f414:	d024      	beq.n	801f460 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f416:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f418:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801f41a:	3b01      	subs	r3, #1
 801f41c:	fb00 4003 	mla	r0, r0, r3, r4
 801f420:	1400      	asrs	r0, r0, #16
 801f422:	f53f af4c 	bmi.w	801f2be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f426:	3901      	subs	r1, #1
 801f428:	4288      	cmp	r0, r1
 801f42a:	f6bf af48 	bge.w	801f2be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f42e:	9924      	ldr	r1, [sp, #144]	; 0x90
 801f430:	fb01 6303 	mla	r3, r1, r3, r6
 801f434:	141b      	asrs	r3, r3, #16
 801f436:	f53f af42 	bmi.w	801f2be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f43a:	3a01      	subs	r2, #1
 801f43c:	4293      	cmp	r3, r2
 801f43e:	f6bf af3e 	bge.w	801f2be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f442:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801f446:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801f44a:	930e      	str	r3, [sp, #56]	; 0x38
 801f44c:	46c8      	mov	r8, r9
 801f44e:	f1bb 0f00 	cmp.w	fp, #0
 801f452:	f300 80b7 	bgt.w	801f5c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801f456:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f458:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f45c:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801f460:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f462:	2b00      	cmp	r3, #0
 801f464:	f340 818d 	ble.w	801f782 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801f468:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f46c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f470:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f474:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f476:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f47a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f47e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f482:	eef0 6a62 	vmov.f32	s13, s5
 801f486:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f48a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f48e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f492:	ee16 4a90 	vmov	r4, s13
 801f496:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f49a:	eef0 6a43 	vmov.f32	s13, s6
 801f49e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f4a2:	ee12 2a90 	vmov	r2, s5
 801f4a6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f4aa:	fb92 f3f3 	sdiv	r3, r2, r3
 801f4ae:	ee13 2a10 	vmov	r2, s6
 801f4b2:	9323      	str	r3, [sp, #140]	; 0x8c
 801f4b4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f4b6:	fb92 f3f3 	sdiv	r3, r2, r3
 801f4ba:	9324      	str	r3, [sp, #144]	; 0x90
 801f4bc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f4be:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801f4c0:	3b01      	subs	r3, #1
 801f4c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f4c6:	930d      	str	r3, [sp, #52]	; 0x34
 801f4c8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f4ca:	bf08      	it	eq
 801f4cc:	4613      	moveq	r3, r2
 801f4ce:	ee16 6a90 	vmov	r6, s13
 801f4d2:	9309      	str	r3, [sp, #36]	; 0x24
 801f4d4:	eeb0 3a67 	vmov.f32	s6, s15
 801f4d8:	eef0 2a47 	vmov.f32	s5, s14
 801f4dc:	e6c3      	b.n	801f266 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801f4de:	2900      	cmp	r1, #0
 801f4e0:	f43f af4d 	beq.w	801f37e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f4e4:	eb0a 0003 	add.w	r0, sl, r3
 801f4e8:	0843      	lsrs	r3, r0, #1
 801f4ea:	07c0      	lsls	r0, r0, #31
 801f4ec:	5cfb      	ldrb	r3, [r7, r3]
 801f4ee:	bf54      	ite	pl
 801f4f0:	f003 030f 	andpl.w	r3, r3, #15
 801f4f4:	111b      	asrmi	r3, r3, #4
 801f4f6:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f4fa:	b2db      	uxtb	r3, r3
 801f4fc:	930b      	str	r3, [sp, #44]	; 0x2c
 801f4fe:	e73e      	b.n	801f37e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f500:	f8b8 e000 	ldrh.w	lr, [r8]
 801f504:	fa1f fb83 	uxth.w	fp, r3
 801f508:	ea4f 202e 	mov.w	r0, lr, asr #8
 801f50c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801f510:	43db      	mvns	r3, r3
 801f512:	b2db      	uxtb	r3, r3
 801f514:	fb11 f10b 	smulbb	r1, r1, fp
 801f518:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f51c:	fb00 1003 	mla	r0, r0, r3, r1
 801f520:	fa5f fc8c 	uxtb.w	ip, ip
 801f524:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801f528:	b2d2      	uxtb	r2, r2
 801f52a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f52e:	b280      	uxth	r0, r0
 801f530:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f534:	fb1c fc0b 	smulbb	ip, ip, fp
 801f538:	fa5f fe8e 	uxtb.w	lr, lr
 801f53c:	fb12 fb0b 	smulbb	fp, r2, fp
 801f540:	fb01 cc03 	mla	ip, r1, r3, ip
 801f544:	fb0e bb03 	mla	fp, lr, r3, fp
 801f548:	1c43      	adds	r3, r0, #1
 801f54a:	fa1f fc8c 	uxth.w	ip, ip
 801f54e:	fa1f fb8b 	uxth.w	fp, fp
 801f552:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f556:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 801f55a:	f10c 0101 	add.w	r1, ip, #1
 801f55e:	f10b 0001 	add.w	r0, fp, #1
 801f562:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801f566:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f56a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801f56e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f572:	4318      	orrs	r0, r3
 801f574:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801f578:	ea40 000c 	orr.w	r0, r0, ip
 801f57c:	f8a8 0000 	strh.w	r0, [r8]
 801f580:	e734      	b.n	801f3ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f582:	f113 0b01 	adds.w	fp, r3, #1
 801f586:	f53f af31 	bmi.w	801f3ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f58a:	45dc      	cmp	ip, fp
 801f58c:	f6ff af2e 	blt.w	801f3ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f590:	f110 0b01 	adds.w	fp, r0, #1
 801f594:	f53f af2a 	bmi.w	801f3ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f598:	45de      	cmp	lr, fp
 801f59a:	f6ff af27 	blt.w	801f3ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f59e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801f5a0:	9302      	str	r3, [sp, #8]
 801f5a2:	fa0f f38e 	sxth.w	r3, lr
 801f5a6:	9301      	str	r3, [sp, #4]
 801f5a8:	fa0f f38c 	sxth.w	r3, ip
 801f5ac:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801f5b0:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801f5b4:	9300      	str	r3, [sp, #0]
 801f5b6:	463a      	mov	r2, r7
 801f5b8:	4653      	mov	r3, sl
 801f5ba:	4641      	mov	r1, r8
 801f5bc:	9815      	ldr	r0, [sp, #84]	; 0x54
 801f5be:	f7ff fd4d 	bl	801f05c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801f5c2:	e713      	b.n	801f3ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f5c4:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801f5c6:	1422      	asrs	r2, r4, #16
 801f5c8:	1433      	asrs	r3, r6, #16
 801f5ca:	fb05 2303 	mla	r3, r5, r3, r2
 801f5ce:	085a      	lsrs	r2, r3, #1
 801f5d0:	07dd      	lsls	r5, r3, #31
 801f5d2:	5cba      	ldrb	r2, [r7, r2]
 801f5d4:	bf54      	ite	pl
 801f5d6:	f002 020f 	andpl.w	r2, r2, #15
 801f5da:	1112      	asrmi	r2, r2, #4
 801f5dc:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801f5e0:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801f5e4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f5e8:	b2d2      	uxtb	r2, r2
 801f5ea:	2900      	cmp	r1, #0
 801f5ec:	d076      	beq.n	801f6dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801f5ee:	f103 0e01 	add.w	lr, r3, #1
 801f5f2:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801f5f6:	f01e 0f01 	tst.w	lr, #1
 801f5fa:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f5fe:	bf0c      	ite	eq
 801f600:	f00c 0c0f 	andeq.w	ip, ip, #15
 801f604:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801f608:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f60c:	fa5f f58c 	uxtb.w	r5, ip
 801f610:	9512      	str	r5, [sp, #72]	; 0x48
 801f612:	b300      	cbz	r0, 801f656 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801f614:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f616:	442b      	add	r3, r5
 801f618:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f61c:	07dd      	lsls	r5, r3, #31
 801f61e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f622:	bf54      	ite	pl
 801f624:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f628:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f62c:	3301      	adds	r3, #1
 801f62e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f632:	fa5f f58c 	uxtb.w	r5, ip
 801f636:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f63a:	950c      	str	r5, [sp, #48]	; 0x30
 801f63c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f640:	07dd      	lsls	r5, r3, #31
 801f642:	bf54      	ite	pl
 801f644:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f648:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f64c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f650:	fa5f f38c 	uxtb.w	r3, ip
 801f654:	9313      	str	r3, [sp, #76]	; 0x4c
 801f656:	b289      	uxth	r1, r1
 801f658:	b280      	uxth	r0, r0
 801f65a:	fb01 f300 	mul.w	r3, r1, r0
 801f65e:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801f662:	0109      	lsls	r1, r1, #4
 801f664:	b280      	uxth	r0, r0
 801f666:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801f66a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801f66c:	1ac9      	subs	r1, r1, r3
 801f66e:	ebac 0c00 	sub.w	ip, ip, r0
 801f672:	b289      	uxth	r1, r1
 801f674:	4369      	muls	r1, r5
 801f676:	fa1f fc8c 	uxth.w	ip, ip
 801f67a:	fb02 120c 	mla	r2, r2, ip, r1
 801f67e:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f680:	fb00 2001 	mla	r0, r0, r1, r2
 801f684:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801f686:	fb03 0302 	mla	r3, r3, r2, r0
 801f68a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f68e:	b1d3      	cbz	r3, 801f6c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801f690:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f692:	4353      	muls	r3, r2
 801f694:	1c5a      	adds	r2, r3, #1
 801f696:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801f69a:	4a0f      	ldr	r2, [pc, #60]	; (801f6d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801f69c:	121b      	asrs	r3, r3, #8
 801f69e:	6812      	ldr	r2, [r2, #0]
 801f6a0:	2bff      	cmp	r3, #255	; 0xff
 801f6a2:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801f6a6:	d12d      	bne.n	801f704 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801f6a8:	0953      	lsrs	r3, r2, #5
 801f6aa:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801f6ae:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f6b2:	f02c 0c07 	bic.w	ip, ip, #7
 801f6b6:	ea43 0c0c 	orr.w	ip, r3, ip
 801f6ba:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f6be:	ea4c 0202 	orr.w	r2, ip, r2
 801f6c2:	f8a8 2000 	strh.w	r2, [r8]
 801f6c6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801f6c8:	441c      	add	r4, r3
 801f6ca:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f6cc:	f108 0802 	add.w	r8, r8, #2
 801f6d0:	441e      	add	r6, r3
 801f6d2:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f6d6:	e6ba      	b.n	801f44e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801f6d8:	200155bc 	.word	0x200155bc
 801f6dc:	2800      	cmp	r0, #0
 801f6de:	d0ba      	beq.n	801f656 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801f6e0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f6e2:	442b      	add	r3, r5
 801f6e4:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f6e8:	07db      	lsls	r3, r3, #31
 801f6ea:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f6ee:	bf54      	ite	pl
 801f6f0:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f6f4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f6f8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f6fc:	fa5f f38c 	uxtb.w	r3, ip
 801f700:	930c      	str	r3, [sp, #48]	; 0x30
 801f702:	e7a8      	b.n	801f656 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801f704:	f8b8 e000 	ldrh.w	lr, [r8]
 801f708:	fa1f fa83 	uxth.w	sl, r3
 801f70c:	ea4f 202e 	mov.w	r0, lr, asr #8
 801f710:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801f714:	43db      	mvns	r3, r3
 801f716:	b2db      	uxtb	r3, r3
 801f718:	fb11 f10a 	smulbb	r1, r1, sl
 801f71c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f720:	fb00 1003 	mla	r0, r0, r3, r1
 801f724:	b2d2      	uxtb	r2, r2
 801f726:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801f72a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f72e:	fa5f fe8e 	uxtb.w	lr, lr
 801f732:	fb12 f20a 	smulbb	r2, r2, sl
 801f736:	fb0e 2203 	mla	r2, lr, r3, r2
 801f73a:	fa5f fc8c 	uxtb.w	ip, ip
 801f73e:	b280      	uxth	r0, r0
 801f740:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f744:	b292      	uxth	r2, r2
 801f746:	fb1c fc0a 	smulbb	ip, ip, sl
 801f74a:	fb01 cc03 	mla	ip, r1, r3, ip
 801f74e:	1c43      	adds	r3, r0, #1
 801f750:	1c51      	adds	r1, r2, #1
 801f752:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f756:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801f75a:	fa1f fc8c 	uxth.w	ip, ip
 801f75e:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801f762:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801f766:	4308      	orrs	r0, r1
 801f768:	f10c 0101 	add.w	r1, ip, #1
 801f76c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f770:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f774:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801f778:	ea40 000c 	orr.w	r0, r0, ip
 801f77c:	f8a8 0000 	strh.w	r0, [r8]
 801f780:	e7a1      	b.n	801f6c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801f782:	b017      	add	sp, #92	; 0x5c
 801f784:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f788 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801f788:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f78c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801f790:	2d00      	cmp	r5, #0
 801f792:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801f796:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801f79a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801f79e:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801f7a2:	fb05 0e03 	mla	lr, r5, r3, r0
 801f7a6:	f2c0 80b0 	blt.w	801f90a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801f7aa:	45a9      	cmp	r9, r5
 801f7ac:	f340 80ad 	ble.w	801f90a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801f7b0:	2800      	cmp	r0, #0
 801f7b2:	f2c0 80a8 	blt.w	801f906 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801f7b6:	4580      	cmp	r8, r0
 801f7b8:	f340 80a5 	ble.w	801f906 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801f7bc:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801f7c0:	f01e 0f01 	tst.w	lr, #1
 801f7c4:	5d16      	ldrb	r6, [r2, r4]
 801f7c6:	bf0c      	ite	eq
 801f7c8:	f006 060f 	andeq.w	r6, r6, #15
 801f7cc:	1136      	asrne	r6, r6, #4
 801f7ce:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801f7d2:	b2f6      	uxtb	r6, r6
 801f7d4:	1c44      	adds	r4, r0, #1
 801f7d6:	f100 809b 	bmi.w	801f910 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801f7da:	45a0      	cmp	r8, r4
 801f7dc:	f340 8098 	ble.w	801f910 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801f7e0:	2f00      	cmp	r7, #0
 801f7e2:	f000 8097 	beq.w	801f914 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 801f7e6:	f10e 0a01 	add.w	sl, lr, #1
 801f7ea:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801f7ee:	f01a 0f01 	tst.w	sl, #1
 801f7f2:	5d14      	ldrb	r4, [r2, r4]
 801f7f4:	bf0c      	ite	eq
 801f7f6:	f004 040f 	andeq.w	r4, r4, #15
 801f7fa:	1124      	asrne	r4, r4, #4
 801f7fc:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801f800:	b2e4      	uxtb	r4, r4
 801f802:	3501      	adds	r5, #1
 801f804:	f100 808a 	bmi.w	801f91c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801f808:	45a9      	cmp	r9, r5
 801f80a:	f340 8087 	ble.w	801f91c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801f80e:	f1bc 0f00 	cmp.w	ip, #0
 801f812:	f000 8086 	beq.w	801f922 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 801f816:	2800      	cmp	r0, #0
 801f818:	db7e      	blt.n	801f918 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801f81a:	4580      	cmp	r8, r0
 801f81c:	dd7c      	ble.n	801f918 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801f81e:	eb03 090e 	add.w	r9, r3, lr
 801f822:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801f826:	f019 0f01 	tst.w	r9, #1
 801f82a:	5d55      	ldrb	r5, [r2, r5]
 801f82c:	bf0c      	ite	eq
 801f82e:	f005 050f 	andeq.w	r5, r5, #15
 801f832:	112d      	asrne	r5, r5, #4
 801f834:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801f838:	b2ed      	uxtb	r5, r5
 801f83a:	3001      	adds	r0, #1
 801f83c:	d474      	bmi.n	801f928 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801f83e:	4580      	cmp	r8, r0
 801f840:	dd72      	ble.n	801f928 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801f842:	2f00      	cmp	r7, #0
 801f844:	d072      	beq.n	801f92c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801f846:	3301      	adds	r3, #1
 801f848:	449e      	add	lr, r3
 801f84a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801f84e:	f01e 0f01 	tst.w	lr, #1
 801f852:	5cd0      	ldrb	r0, [r2, r3]
 801f854:	bf0c      	ite	eq
 801f856:	f000 000f 	andeq.w	r0, r0, #15
 801f85a:	1100      	asrne	r0, r0, #4
 801f85c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f860:	b2c3      	uxtb	r3, r0
 801f862:	b2ba      	uxth	r2, r7
 801f864:	fa1f fc8c 	uxth.w	ip, ip
 801f868:	fb02 f00c 	mul.w	r0, r2, ip
 801f86c:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801f870:	0112      	lsls	r2, r2, #4
 801f872:	fa1f fc8c 	uxth.w	ip, ip
 801f876:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801f87a:	1a12      	subs	r2, r2, r0
 801f87c:	eba7 070c 	sub.w	r7, r7, ip
 801f880:	b292      	uxth	r2, r2
 801f882:	b2bf      	uxth	r7, r7
 801f884:	4362      	muls	r2, r4
 801f886:	fb06 2207 	mla	r2, r6, r7, r2
 801f88a:	fb0c 2505 	mla	r5, ip, r5, r2
 801f88e:	fb00 5303 	mla	r3, r0, r3, r5
 801f892:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f896:	b3a3      	cbz	r3, 801f902 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 801f898:	4a25      	ldr	r2, [pc, #148]	; (801f930 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 801f89a:	880e      	ldrh	r6, [r1, #0]
 801f89c:	6815      	ldr	r5, [r2, #0]
 801f89e:	1234      	asrs	r4, r6, #8
 801f8a0:	b29a      	uxth	r2, r3
 801f8a2:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801f8a6:	43db      	mvns	r3, r3
 801f8a8:	b2db      	uxtb	r3, r3
 801f8aa:	fb10 f002 	smulbb	r0, r0, r2
 801f8ae:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801f8b2:	fb04 0403 	mla	r4, r4, r3, r0
 801f8b6:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801f8ba:	10f0      	asrs	r0, r6, #3
 801f8bc:	b2ed      	uxtb	r5, r5
 801f8be:	00f6      	lsls	r6, r6, #3
 801f8c0:	fb17 f702 	smulbb	r7, r7, r2
 801f8c4:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f8c8:	fb15 f202 	smulbb	r2, r5, r2
 801f8cc:	b2f6      	uxtb	r6, r6
 801f8ce:	b2a4      	uxth	r4, r4
 801f8d0:	fb00 7003 	mla	r0, r0, r3, r7
 801f8d4:	fb06 2303 	mla	r3, r6, r3, r2
 801f8d8:	b29a      	uxth	r2, r3
 801f8da:	1c63      	adds	r3, r4, #1
 801f8dc:	b280      	uxth	r0, r0
 801f8de:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801f8e2:	1c53      	adds	r3, r2, #1
 801f8e4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f8e8:	1c42      	adds	r2, r0, #1
 801f8ea:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f8ee:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801f8f2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f8f6:	0940      	lsrs	r0, r0, #5
 801f8f8:	4323      	orrs	r3, r4
 801f8fa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f8fe:	4303      	orrs	r3, r0
 801f900:	800b      	strh	r3, [r1, #0]
 801f902:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f906:	2600      	movs	r6, #0
 801f908:	e764      	b.n	801f7d4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 801f90a:	2400      	movs	r4, #0
 801f90c:	4626      	mov	r6, r4
 801f90e:	e778      	b.n	801f802 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801f910:	2400      	movs	r4, #0
 801f912:	e776      	b.n	801f802 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801f914:	463c      	mov	r4, r7
 801f916:	e774      	b.n	801f802 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801f918:	2500      	movs	r5, #0
 801f91a:	e78e      	b.n	801f83a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 801f91c:	2300      	movs	r3, #0
 801f91e:	461d      	mov	r5, r3
 801f920:	e79f      	b.n	801f862 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f922:	4663      	mov	r3, ip
 801f924:	4665      	mov	r5, ip
 801f926:	e79c      	b.n	801f862 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f928:	2300      	movs	r3, #0
 801f92a:	e79a      	b.n	801f862 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f92c:	463b      	mov	r3, r7
 801f92e:	e798      	b.n	801f862 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f930:	200155bc 	.word	0x200155bc

0801f934 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f934:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f938:	b093      	sub	sp, #76	; 0x4c
 801f93a:	461d      	mov	r5, r3
 801f93c:	920c      	str	r2, [sp, #48]	; 0x30
 801f93e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801f940:	9107      	str	r1, [sp, #28]
 801f942:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801f946:	9011      	str	r0, [sp, #68]	; 0x44
 801f948:	6850      	ldr	r0, [r2, #4]
 801f94a:	6812      	ldr	r2, [r2, #0]
 801f94c:	fb00 1303 	mla	r3, r0, r3, r1
 801f950:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801f954:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f956:	689b      	ldr	r3, [r3, #8]
 801f958:	3301      	adds	r3, #1
 801f95a:	f023 0301 	bic.w	r3, r3, #1
 801f95e:	9306      	str	r3, [sp, #24]
 801f960:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f962:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801f966:	681f      	ldr	r7, [r3, #0]
 801f968:	9b07      	ldr	r3, [sp, #28]
 801f96a:	2b00      	cmp	r3, #0
 801f96c:	dc03      	bgt.n	801f976 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801f96e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f970:	2b00      	cmp	r3, #0
 801f972:	f340 8267 	ble.w	801fe44 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801f976:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f978:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f97c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f980:	1e48      	subs	r0, r1, #1
 801f982:	f102 3cff 	add.w	ip, r2, #4294967295
 801f986:	2d00      	cmp	r5, #0
 801f988:	f340 80b8 	ble.w	801fafc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801f98c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f990:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f994:	d406      	bmi.n	801f9a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801f996:	4586      	cmp	lr, r0
 801f998:	da04      	bge.n	801f9a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801f99a:	2b00      	cmp	r3, #0
 801f99c:	db02      	blt.n	801f9a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801f99e:	4563      	cmp	r3, ip
 801f9a0:	f2c0 80ad 	blt.w	801fafe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 801f9a4:	f11e 0e01 	adds.w	lr, lr, #1
 801f9a8:	f100 80a0 	bmi.w	801faec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801f9ac:	4571      	cmp	r1, lr
 801f9ae:	f2c0 809d 	blt.w	801faec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801f9b2:	3301      	adds	r3, #1
 801f9b4:	f100 809a 	bmi.w	801faec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801f9b8:	429a      	cmp	r2, r3
 801f9ba:	f2c0 8097 	blt.w	801faec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801f9be:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801f9c2:	9509      	str	r5, [sp, #36]	; 0x24
 801f9c4:	46c8      	mov	r8, r9
 801f9c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f9c8:	2b00      	cmp	r3, #0
 801f9ca:	f340 80b6 	ble.w	801fb3a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801f9ce:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801f9d2:	9308      	str	r3, [sp, #32]
 801f9d4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f9d6:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801f9da:	1423      	asrs	r3, r4, #16
 801f9dc:	ea4f 4026 	mov.w	r0, r6, asr #16
 801f9e0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f9e4:	f100 813e 	bmi.w	801fc64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801f9e8:	f10c 3bff 	add.w	fp, ip, #4294967295
 801f9ec:	455b      	cmp	r3, fp
 801f9ee:	f280 8139 	bge.w	801fc64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801f9f2:	2800      	cmp	r0, #0
 801f9f4:	f2c0 8136 	blt.w	801fc64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801f9f8:	f10e 3bff 	add.w	fp, lr, #4294967295
 801f9fc:	4558      	cmp	r0, fp
 801f9fe:	f280 8131 	bge.w	801fc64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801fa02:	9a06      	ldr	r2, [sp, #24]
 801fa04:	fb00 3302 	mla	r3, r0, r2, r3
 801fa08:	0858      	lsrs	r0, r3, #1
 801fa0a:	07da      	lsls	r2, r3, #31
 801fa0c:	f817 c000 	ldrb.w	ip, [r7, r0]
 801fa10:	9a08      	ldr	r2, [sp, #32]
 801fa12:	bf54      	ite	pl
 801fa14:	f00c 0c0f 	andpl.w	ip, ip, #15
 801fa18:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801fa1c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fa20:	fa5f fc8c 	uxtb.w	ip, ip
 801fa24:	2a00      	cmp	r2, #0
 801fa26:	f000 80cb 	beq.w	801fbc0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801fa2a:	1c58      	adds	r0, r3, #1
 801fa2c:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801fa30:	07c0      	lsls	r0, r0, #31
 801fa32:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801fa36:	bf54      	ite	pl
 801fa38:	f00e 0e0f 	andpl.w	lr, lr, #15
 801fa3c:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801fa40:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801fa44:	fa5f fe8e 	uxtb.w	lr, lr
 801fa48:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801fa4c:	b1b9      	cbz	r1, 801fa7e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801fa4e:	4453      	add	r3, sl
 801fa50:	0858      	lsrs	r0, r3, #1
 801fa52:	07da      	lsls	r2, r3, #31
 801fa54:	5c38      	ldrb	r0, [r7, r0]
 801fa56:	bf54      	ite	pl
 801fa58:	f000 000f 	andpl.w	r0, r0, #15
 801fa5c:	1100      	asrmi	r0, r0, #4
 801fa5e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801fa62:	b2c0      	uxtb	r0, r0
 801fa64:	900a      	str	r0, [sp, #40]	; 0x28
 801fa66:	1c58      	adds	r0, r3, #1
 801fa68:	0843      	lsrs	r3, r0, #1
 801fa6a:	07c2      	lsls	r2, r0, #31
 801fa6c:	5cfb      	ldrb	r3, [r7, r3]
 801fa6e:	bf54      	ite	pl
 801fa70:	f003 030f 	andpl.w	r3, r3, #15
 801fa74:	111b      	asrmi	r3, r3, #4
 801fa76:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801fa7a:	b2db      	uxtb	r3, r3
 801fa7c:	930e      	str	r3, [sp, #56]	; 0x38
 801fa7e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801fa82:	b289      	uxth	r1, r1
 801fa84:	fb02 f301 	mul.w	r3, r2, r1
 801fa88:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801fa8c:	0112      	lsls	r2, r2, #4
 801fa8e:	b289      	uxth	r1, r1
 801fa90:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801fa94:	1a40      	subs	r0, r0, r1
 801fa96:	fa1f fe80 	uxth.w	lr, r0
 801fa9a:	1ad2      	subs	r2, r2, r3
 801fa9c:	980d      	ldr	r0, [sp, #52]	; 0x34
 801fa9e:	b292      	uxth	r2, r2
 801faa0:	4342      	muls	r2, r0
 801faa2:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801faa6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801faa8:	fb01 c102 	mla	r1, r1, r2, ip
 801faac:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801faae:	fb03 1302 	mla	r3, r3, r2, r1
 801fab2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fab6:	2bff      	cmp	r3, #255	; 0xff
 801fab8:	f040 8093 	bne.w	801fbe2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801fabc:	4bbe      	ldr	r3, [pc, #760]	; (801fdb8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801fabe:	681a      	ldr	r2, [r3, #0]
 801fac0:	4bbe      	ldr	r3, [pc, #760]	; (801fdbc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801fac2:	0951      	lsrs	r1, r2, #5
 801fac4:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801fac8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801facc:	430b      	orrs	r3, r1
 801face:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fad2:	4313      	orrs	r3, r2
 801fad4:	f8a8 3000 	strh.w	r3, [r8]
 801fad8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fada:	441c      	add	r4, r3
 801fadc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fade:	441e      	add	r6, r3
 801fae0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fae2:	3b01      	subs	r3, #1
 801fae4:	f108 0802 	add.w	r8, r8, #2
 801fae8:	9309      	str	r3, [sp, #36]	; 0x24
 801faea:	e76c      	b.n	801f9c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801faec:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801faee:	441c      	add	r4, r3
 801faf0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801faf2:	3d01      	subs	r5, #1
 801faf4:	441e      	add	r6, r3
 801faf6:	f109 0902 	add.w	r9, r9, #2
 801fafa:	e744      	b.n	801f986 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801fafc:	d021      	beq.n	801fb42 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801fafe:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801fb00:	1e6b      	subs	r3, r5, #1
 801fb02:	fb00 4003 	mla	r0, r0, r3, r4
 801fb06:	1400      	asrs	r0, r0, #16
 801fb08:	f53f af59 	bmi.w	801f9be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fb0c:	3901      	subs	r1, #1
 801fb0e:	4288      	cmp	r0, r1
 801fb10:	f6bf af55 	bge.w	801f9be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fb14:	9920      	ldr	r1, [sp, #128]	; 0x80
 801fb16:	fb01 6303 	mla	r3, r1, r3, r6
 801fb1a:	141b      	asrs	r3, r3, #16
 801fb1c:	f53f af4f 	bmi.w	801f9be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fb20:	3a01      	subs	r2, #1
 801fb22:	4293      	cmp	r3, r2
 801fb24:	f6bf af4b 	bge.w	801f9be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fb28:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801fb2c:	9308      	str	r3, [sp, #32]
 801fb2e:	46a8      	mov	r8, r5
 801fb30:	46ce      	mov	lr, r9
 801fb32:	f1b8 0f00 	cmp.w	r8, #0
 801fb36:	f300 80b5 	bgt.w	801fca4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801fb3a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801fb3e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801fb42:	9b07      	ldr	r3, [sp, #28]
 801fb44:	2b00      	cmp	r3, #0
 801fb46:	f340 817d 	ble.w	801fe44 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801fb4a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fb4e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801fb52:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fb56:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fb58:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fb5c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fb60:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fb64:	eef0 6a62 	vmov.f32	s13, s5
 801fb68:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fb6c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fb70:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fb74:	ee16 4a90 	vmov	r4, s13
 801fb78:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fb7c:	eef0 6a43 	vmov.f32	s13, s6
 801fb80:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fb84:	ee12 2a90 	vmov	r2, s5
 801fb88:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fb8c:	fb92 f3f3 	sdiv	r3, r2, r3
 801fb90:	ee13 2a10 	vmov	r2, s6
 801fb94:	931f      	str	r3, [sp, #124]	; 0x7c
 801fb96:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fb98:	fb92 f3f3 	sdiv	r3, r2, r3
 801fb9c:	9320      	str	r3, [sp, #128]	; 0x80
 801fb9e:	9b07      	ldr	r3, [sp, #28]
 801fba0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801fba2:	3b01      	subs	r3, #1
 801fba4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fba8:	9307      	str	r3, [sp, #28]
 801fbaa:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fbac:	ee16 6a90 	vmov	r6, s13
 801fbb0:	bf14      	ite	ne
 801fbb2:	461d      	movne	r5, r3
 801fbb4:	4615      	moveq	r5, r2
 801fbb6:	eeb0 3a67 	vmov.f32	s6, s15
 801fbba:	eef0 2a47 	vmov.f32	s5, s14
 801fbbe:	e6d3      	b.n	801f968 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801fbc0:	2900      	cmp	r1, #0
 801fbc2:	f43f af5c 	beq.w	801fa7e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801fbc6:	eb0a 0003 	add.w	r0, sl, r3
 801fbca:	0843      	lsrs	r3, r0, #1
 801fbcc:	07c0      	lsls	r0, r0, #31
 801fbce:	5cfb      	ldrb	r3, [r7, r3]
 801fbd0:	bf54      	ite	pl
 801fbd2:	f003 030f 	andpl.w	r3, r3, #15
 801fbd6:	111b      	asrmi	r3, r3, #4
 801fbd8:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801fbdc:	b2db      	uxtb	r3, r3
 801fbde:	930a      	str	r3, [sp, #40]	; 0x28
 801fbe0:	e74d      	b.n	801fa7e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801fbe2:	2b00      	cmp	r3, #0
 801fbe4:	f43f af78 	beq.w	801fad8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fbe8:	4a73      	ldr	r2, [pc, #460]	; (801fdb8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801fbea:	f8b8 c000 	ldrh.w	ip, [r8]
 801fbee:	6810      	ldr	r0, [r2, #0]
 801fbf0:	fa1f fe83 	uxth.w	lr, r3
 801fbf4:	ea4f 212c 	mov.w	r1, ip, asr #8
 801fbf8:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801fbfc:	43db      	mvns	r3, r3
 801fbfe:	b2db      	uxtb	r3, r3
 801fc00:	fb12 f20e 	smulbb	r2, r2, lr
 801fc04:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801fc08:	fb01 2103 	mla	r1, r1, r3, r2
 801fc0c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801fc10:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801fc14:	b2c0      	uxtb	r0, r0
 801fc16:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801fc1a:	fb1b fb0e 	smulbb	fp, fp, lr
 801fc1e:	b289      	uxth	r1, r1
 801fc20:	fb10 fe0e 	smulbb	lr, r0, lr
 801fc24:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801fc28:	fa5f fc8c 	uxtb.w	ip, ip
 801fc2c:	fb02 b203 	mla	r2, r2, r3, fp
 801fc30:	1c48      	adds	r0, r1, #1
 801fc32:	fb0c e303 	mla	r3, ip, r3, lr
 801fc36:	b292      	uxth	r2, r2
 801fc38:	b29b      	uxth	r3, r3
 801fc3a:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801fc3e:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 801fc42:	f102 0b01 	add.w	fp, r2, #1
 801fc46:	1c59      	adds	r1, r3, #1
 801fc48:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801fc4c:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801fc50:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801fc54:	0952      	lsrs	r2, r2, #5
 801fc56:	4301      	orrs	r1, r0
 801fc58:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fc5c:	4311      	orrs	r1, r2
 801fc5e:	f8a8 1000 	strh.w	r1, [r8]
 801fc62:	e739      	b.n	801fad8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fc64:	f113 0b01 	adds.w	fp, r3, #1
 801fc68:	f53f af36 	bmi.w	801fad8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fc6c:	45dc      	cmp	ip, fp
 801fc6e:	f6ff af33 	blt.w	801fad8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fc72:	f110 0b01 	adds.w	fp, r0, #1
 801fc76:	f53f af2f 	bmi.w	801fad8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fc7a:	45de      	cmp	lr, fp
 801fc7c:	f6ff af2c 	blt.w	801fad8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fc80:	9a08      	ldr	r2, [sp, #32]
 801fc82:	9302      	str	r3, [sp, #8]
 801fc84:	fa0f f38e 	sxth.w	r3, lr
 801fc88:	9301      	str	r3, [sp, #4]
 801fc8a:	fa0f f38c 	sxth.w	r3, ip
 801fc8e:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801fc92:	9105      	str	r1, [sp, #20]
 801fc94:	9300      	str	r3, [sp, #0]
 801fc96:	463a      	mov	r2, r7
 801fc98:	4653      	mov	r3, sl
 801fc9a:	4641      	mov	r1, r8
 801fc9c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801fc9e:	f7ff fd73 	bl	801f788 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801fca2:	e719      	b.n	801fad8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fca4:	9906      	ldr	r1, [sp, #24]
 801fca6:	1422      	asrs	r2, r4, #16
 801fca8:	1433      	asrs	r3, r6, #16
 801fcaa:	fb01 2303 	mla	r3, r1, r3, r2
 801fcae:	085a      	lsrs	r2, r3, #1
 801fcb0:	07d9      	lsls	r1, r3, #31
 801fcb2:	5cba      	ldrb	r2, [r7, r2]
 801fcb4:	bf54      	ite	pl
 801fcb6:	f002 020f 	andpl.w	r2, r2, #15
 801fcba:	1112      	asrmi	r2, r2, #4
 801fcbc:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801fcc0:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801fcc4:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801fcc8:	b2d2      	uxtb	r2, r2
 801fcca:	2800      	cmp	r0, #0
 801fccc:	d062      	beq.n	801fd94 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 801fcce:	f103 0a01 	add.w	sl, r3, #1
 801fcd2:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801fcd6:	f01a 0f01 	tst.w	sl, #1
 801fcda:	5c79      	ldrb	r1, [r7, r1]
 801fcdc:	bf0c      	ite	eq
 801fcde:	f001 010f 	andeq.w	r1, r1, #15
 801fce2:	1109      	asrne	r1, r1, #4
 801fce4:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fce8:	b2c9      	uxtb	r1, r1
 801fcea:	910f      	str	r1, [sp, #60]	; 0x3c
 801fcec:	f1bc 0f00 	cmp.w	ip, #0
 801fcf0:	d019      	beq.n	801fd26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801fcf2:	9908      	ldr	r1, [sp, #32]
 801fcf4:	440b      	add	r3, r1
 801fcf6:	0859      	lsrs	r1, r3, #1
 801fcf8:	f013 0f01 	tst.w	r3, #1
 801fcfc:	5c79      	ldrb	r1, [r7, r1]
 801fcfe:	bf0c      	ite	eq
 801fd00:	f001 010f 	andeq.w	r1, r1, #15
 801fd04:	1109      	asrne	r1, r1, #4
 801fd06:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fd0a:	b2c9      	uxtb	r1, r1
 801fd0c:	3301      	adds	r3, #1
 801fd0e:	910b      	str	r1, [sp, #44]	; 0x2c
 801fd10:	0859      	lsrs	r1, r3, #1
 801fd12:	07db      	lsls	r3, r3, #31
 801fd14:	5c79      	ldrb	r1, [r7, r1]
 801fd16:	bf54      	ite	pl
 801fd18:	f001 010f 	andpl.w	r1, r1, #15
 801fd1c:	1109      	asrmi	r1, r1, #4
 801fd1e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fd22:	b2c9      	uxtb	r1, r1
 801fd24:	9110      	str	r1, [sp, #64]	; 0x40
 801fd26:	b280      	uxth	r0, r0
 801fd28:	fa1f fc8c 	uxth.w	ip, ip
 801fd2c:	fb00 f30c 	mul.w	r3, r0, ip
 801fd30:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801fd34:	0100      	lsls	r0, r0, #4
 801fd36:	fa1f fc8c 	uxth.w	ip, ip
 801fd3a:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801fd3e:	eba1 010c 	sub.w	r1, r1, ip
 801fd42:	fa1f fa81 	uxth.w	sl, r1
 801fd46:	1ac0      	subs	r0, r0, r3
 801fd48:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801fd4a:	b280      	uxth	r0, r0
 801fd4c:	4348      	muls	r0, r1
 801fd4e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801fd50:	fb02 020a 	mla	r2, r2, sl, r0
 801fd54:	fb0c 2c01 	mla	ip, ip, r1, r2
 801fd58:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801fd5a:	fb03 c302 	mla	r3, r3, r2, ip
 801fd5e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fd62:	2bff      	cmp	r3, #255	; 0xff
 801fd64:	d12c      	bne.n	801fdc0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 801fd66:	4b14      	ldr	r3, [pc, #80]	; (801fdb8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801fd68:	681a      	ldr	r2, [r3, #0]
 801fd6a:	4b14      	ldr	r3, [pc, #80]	; (801fdbc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801fd6c:	0951      	lsrs	r1, r2, #5
 801fd6e:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801fd72:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fd76:	430b      	orrs	r3, r1
 801fd78:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fd7c:	4313      	orrs	r3, r2
 801fd7e:	f8ae 3000 	strh.w	r3, [lr]
 801fd82:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fd84:	441c      	add	r4, r3
 801fd86:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fd88:	f10e 0e02 	add.w	lr, lr, #2
 801fd8c:	441e      	add	r6, r3
 801fd8e:	f108 38ff 	add.w	r8, r8, #4294967295
 801fd92:	e6ce      	b.n	801fb32 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801fd94:	f1bc 0f00 	cmp.w	ip, #0
 801fd98:	d0c5      	beq.n	801fd26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801fd9a:	9908      	ldr	r1, [sp, #32]
 801fd9c:	440b      	add	r3, r1
 801fd9e:	0859      	lsrs	r1, r3, #1
 801fda0:	07db      	lsls	r3, r3, #31
 801fda2:	5c79      	ldrb	r1, [r7, r1]
 801fda4:	bf54      	ite	pl
 801fda6:	f001 010f 	andpl.w	r1, r1, #15
 801fdaa:	1109      	asrmi	r1, r1, #4
 801fdac:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fdb0:	b2c9      	uxtb	r1, r1
 801fdb2:	910b      	str	r1, [sp, #44]	; 0x2c
 801fdb4:	e7b7      	b.n	801fd26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801fdb6:	bf00      	nop
 801fdb8:	200155bc 	.word	0x200155bc
 801fdbc:	fffff800 	.word	0xfffff800
 801fdc0:	2b00      	cmp	r3, #0
 801fdc2:	d0de      	beq.n	801fd82 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801fdc4:	4a21      	ldr	r2, [pc, #132]	; (801fe4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 801fdc6:	f8be c000 	ldrh.w	ip, [lr]
 801fdca:	6810      	ldr	r0, [r2, #0]
 801fdcc:	fa1f fa83 	uxth.w	sl, r3
 801fdd0:	ea4f 212c 	mov.w	r1, ip, asr #8
 801fdd4:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801fdd8:	43db      	mvns	r3, r3
 801fdda:	b2db      	uxtb	r3, r3
 801fddc:	fb12 f20a 	smulbb	r2, r2, sl
 801fde0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801fde4:	fb01 2103 	mla	r1, r1, r3, r2
 801fde8:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801fdec:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801fdf0:	b2c0      	uxtb	r0, r0
 801fdf2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801fdf6:	fa5f fc8c 	uxtb.w	ip, ip
 801fdfa:	fb10 f00a 	smulbb	r0, r0, sl
 801fdfe:	fb0c 0003 	mla	r0, ip, r3, r0
 801fe02:	b289      	uxth	r1, r1
 801fe04:	fb1b fb0a 	smulbb	fp, fp, sl
 801fe08:	b280      	uxth	r0, r0
 801fe0a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801fe0e:	fb02 b203 	mla	r2, r2, r3, fp
 801fe12:	1c4b      	adds	r3, r1, #1
 801fe14:	f100 0b01 	add.w	fp, r0, #1
 801fe18:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801fe1c:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801fe20:	b292      	uxth	r2, r2
 801fe22:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801fe26:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801fe2a:	ea4b 0101 	orr.w	r1, fp, r1
 801fe2e:	f102 0b01 	add.w	fp, r2, #1
 801fe32:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801fe36:	0952      	lsrs	r2, r2, #5
 801fe38:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fe3c:	4311      	orrs	r1, r2
 801fe3e:	f8ae 1000 	strh.w	r1, [lr]
 801fe42:	e79e      	b.n	801fd82 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801fe44:	b013      	add	sp, #76	; 0x4c
 801fe46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fe4a:	bf00      	nop
 801fe4c:	200155bc 	.word	0x200155bc

0801fe50 <CRC_Lock>:
 801fe50:	b530      	push	{r4, r5, lr}
 801fe52:	4a20      	ldr	r2, [pc, #128]	; (801fed4 <CRC_Lock+0x84>)
 801fe54:	6813      	ldr	r3, [r2, #0]
 801fe56:	f023 0301 	bic.w	r3, r3, #1
 801fe5a:	6013      	str	r3, [r2, #0]
 801fe5c:	4b1e      	ldr	r3, [pc, #120]	; (801fed8 <CRC_Lock+0x88>)
 801fe5e:	681a      	ldr	r2, [r3, #0]
 801fe60:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801fe64:	4022      	ands	r2, r4
 801fe66:	f24c 2540 	movw	r5, #49728	; 0xc240
 801fe6a:	42aa      	cmp	r2, r5
 801fe6c:	d005      	beq.n	801fe7a <CRC_Lock+0x2a>
 801fe6e:	681b      	ldr	r3, [r3, #0]
 801fe70:	f24c 2270 	movw	r2, #49776	; 0xc270
 801fe74:	4023      	ands	r3, r4
 801fe76:	4293      	cmp	r3, r2
 801fe78:	d124      	bne.n	801fec4 <CRC_Lock+0x74>
 801fe7a:	4b18      	ldr	r3, [pc, #96]	; (801fedc <CRC_Lock+0x8c>)
 801fe7c:	681b      	ldr	r3, [r3, #0]
 801fe7e:	bb0b      	cbnz	r3, 801fec4 <CRC_Lock+0x74>
 801fe80:	4b17      	ldr	r3, [pc, #92]	; (801fee0 <CRC_Lock+0x90>)
 801fe82:	681a      	ldr	r2, [r3, #0]
 801fe84:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801fe88:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 801fe8c:	d00d      	beq.n	801feaa <CRC_Lock+0x5a>
 801fe8e:	681a      	ldr	r2, [r3, #0]
 801fe90:	f240 4483 	movw	r4, #1155	; 0x483
 801fe94:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801fe98:	42a2      	cmp	r2, r4
 801fe9a:	d006      	beq.n	801feaa <CRC_Lock+0x5a>
 801fe9c:	681b      	ldr	r3, [r3, #0]
 801fe9e:	f240 4285 	movw	r2, #1157	; 0x485
 801fea2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801fea6:	4293      	cmp	r3, r2
 801fea8:	d10c      	bne.n	801fec4 <CRC_Lock+0x74>
 801feaa:	4b0e      	ldr	r3, [pc, #56]	; (801fee4 <CRC_Lock+0x94>)
 801feac:	2201      	movs	r2, #1
 801feae:	601a      	str	r2, [r3, #0]
 801feb0:	681a      	ldr	r2, [r3, #0]
 801feb2:	2a00      	cmp	r2, #0
 801feb4:	d1fc      	bne.n	801feb0 <CRC_Lock+0x60>
 801feb6:	4b0c      	ldr	r3, [pc, #48]	; (801fee8 <CRC_Lock+0x98>)
 801feb8:	6018      	str	r0, [r3, #0]
 801feba:	6818      	ldr	r0, [r3, #0]
 801febc:	1a43      	subs	r3, r0, r1
 801febe:	4258      	negs	r0, r3
 801fec0:	4158      	adcs	r0, r3
 801fec2:	bd30      	pop	{r4, r5, pc}
 801fec4:	4b09      	ldr	r3, [pc, #36]	; (801feec <CRC_Lock+0x9c>)
 801fec6:	2201      	movs	r2, #1
 801fec8:	601a      	str	r2, [r3, #0]
 801feca:	681a      	ldr	r2, [r3, #0]
 801fecc:	2a00      	cmp	r2, #0
 801fece:	d1fc      	bne.n	801feca <CRC_Lock+0x7a>
 801fed0:	4b07      	ldr	r3, [pc, #28]	; (801fef0 <CRC_Lock+0xa0>)
 801fed2:	e7f1      	b.n	801feb8 <CRC_Lock+0x68>
 801fed4:	e0002000 	.word	0xe0002000
 801fed8:	e000ed00 	.word	0xe000ed00
 801fedc:	e0042000 	.word	0xe0042000
 801fee0:	5c001000 	.word	0x5c001000
 801fee4:	58024c08 	.word	0x58024c08
 801fee8:	58024c00 	.word	0x58024c00
 801feec:	40023008 	.word	0x40023008
 801fef0:	40023000 	.word	0x40023000

0801fef4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801fef4:	6101      	str	r1, [r0, #16]
 801fef6:	4770      	bx	lr

0801fef8 <_ZN8touchgfx8Gestures4tickEv>:
 801fef8:	7b83      	ldrb	r3, [r0, #14]
 801fefa:	b14b      	cbz	r3, 801ff10 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801fefc:	8903      	ldrh	r3, [r0, #8]
 801fefe:	3301      	adds	r3, #1
 801ff00:	b29b      	uxth	r3, r3
 801ff02:	2b07      	cmp	r3, #7
 801ff04:	8103      	strh	r3, [r0, #8]
 801ff06:	bf81      	itttt	hi
 801ff08:	2300      	movhi	r3, #0
 801ff0a:	8143      	strhhi	r3, [r0, #10]
 801ff0c:	8183      	strhhi	r3, [r0, #12]
 801ff0e:	7383      	strbhi	r3, [r0, #14]
 801ff10:	4770      	bx	lr
	...

0801ff14 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801ff14:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801ff18:	4698      	mov	r8, r3
 801ff1a:	8883      	ldrh	r3, [r0, #4]
 801ff1c:	f8ad 3006 	strh.w	r3, [sp, #6]
 801ff20:	eba8 0303 	sub.w	r3, r8, r3
 801ff24:	b21b      	sxth	r3, r3
 801ff26:	4604      	mov	r4, r0
 801ff28:	2b00      	cmp	r3, #0
 801ff2a:	4617      	mov	r7, r2
 801ff2c:	4a18      	ldr	r2, [pc, #96]	; (801ff90 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 801ff2e:	9200      	str	r2, [sp, #0]
 801ff30:	bfb8      	it	lt
 801ff32:	425b      	neglt	r3, r3
 801ff34:	8aa2      	ldrh	r2, [r4, #20]
 801ff36:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801ff3a:	f8ad 800a 	strh.w	r8, [sp, #10]
 801ff3e:	b21b      	sxth	r3, r3
 801ff40:	460e      	mov	r6, r1
 801ff42:	4293      	cmp	r3, r2
 801ff44:	88c1      	ldrh	r1, [r0, #6]
 801ff46:	f8ad 1008 	strh.w	r1, [sp, #8]
 801ff4a:	f04f 0000 	mov.w	r0, #0
 801ff4e:	f88d 0004 	strb.w	r0, [sp, #4]
 801ff52:	f8ad 500c 	strh.w	r5, [sp, #12]
 801ff56:	dc07      	bgt.n	801ff68 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 801ff58:	1a69      	subs	r1, r5, r1
 801ff5a:	b209      	sxth	r1, r1
 801ff5c:	2900      	cmp	r1, #0
 801ff5e:	bfb8      	it	lt
 801ff60:	4249      	neglt	r1, r1
 801ff62:	b209      	sxth	r1, r1
 801ff64:	428a      	cmp	r2, r1
 801ff66:	da10      	bge.n	801ff8a <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 801ff68:	6920      	ldr	r0, [r4, #16]
 801ff6a:	6803      	ldr	r3, [r0, #0]
 801ff6c:	4669      	mov	r1, sp
 801ff6e:	685b      	ldr	r3, [r3, #4]
 801ff70:	4798      	blx	r3
 801ff72:	eba8 0606 	sub.w	r6, r8, r6
 801ff76:	2300      	movs	r3, #0
 801ff78:	1bef      	subs	r7, r5, r7
 801ff7a:	2001      	movs	r0, #1
 801ff7c:	8123      	strh	r3, [r4, #8]
 801ff7e:	8166      	strh	r6, [r4, #10]
 801ff80:	81a7      	strh	r7, [r4, #12]
 801ff82:	f8a4 8004 	strh.w	r8, [r4, #4]
 801ff86:	80e5      	strh	r5, [r4, #6]
 801ff88:	73a0      	strb	r0, [r4, #14]
 801ff8a:	b004      	add	sp, #16
 801ff8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801ff90:	08024360 	.word	0x08024360

0801ff94 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801ff94:	b5f0      	push	{r4, r5, r6, r7, lr}
 801ff96:	461e      	mov	r6, r3
 801ff98:	1e4b      	subs	r3, r1, #1
 801ff9a:	2b01      	cmp	r3, #1
 801ff9c:	b085      	sub	sp, #20
 801ff9e:	4604      	mov	r4, r0
 801ffa0:	460d      	mov	r5, r1
 801ffa2:	4617      	mov	r7, r2
 801ffa4:	d84b      	bhi.n	802003e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801ffa6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801ffaa:	1cd3      	adds	r3, r2, #3
 801ffac:	b29b      	uxth	r3, r3
 801ffae:	2b06      	cmp	r3, #6
 801ffb0:	d916      	bls.n	801ffe0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801ffb2:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8020054 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801ffb6:	f8cd c004 	str.w	ip, [sp, #4]
 801ffba:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801ffbe:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801ffc2:	6900      	ldr	r0, [r0, #16]
 801ffc4:	f8ad 100c 	strh.w	r1, [sp, #12]
 801ffc8:	f04f 0c00 	mov.w	ip, #0
 801ffcc:	f88d c008 	strb.w	ip, [sp, #8]
 801ffd0:	f8ad 200a 	strh.w	r2, [sp, #10]
 801ffd4:	f8ad 300e 	strh.w	r3, [sp, #14]
 801ffd8:	6803      	ldr	r3, [r0, #0]
 801ffda:	a901      	add	r1, sp, #4
 801ffdc:	689b      	ldr	r3, [r3, #8]
 801ffde:	4798      	blx	r3
 801ffe0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801ffe4:	1cd3      	adds	r3, r2, #3
 801ffe6:	b29b      	uxth	r3, r3
 801ffe8:	2b06      	cmp	r3, #6
 801ffea:	d916      	bls.n	802001a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801ffec:	f8df c064 	ldr.w	ip, [pc, #100]	; 8020054 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801fff0:	f8cd c004 	str.w	ip, [sp, #4]
 801fff4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801fff8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801fffc:	6920      	ldr	r0, [r4, #16]
 801fffe:	f8ad 100c 	strh.w	r1, [sp, #12]
 8020002:	f04f 0c01 	mov.w	ip, #1
 8020006:	f88d c008 	strb.w	ip, [sp, #8]
 802000a:	f8ad 200a 	strh.w	r2, [sp, #10]
 802000e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020012:	6803      	ldr	r3, [r0, #0]
 8020014:	a901      	add	r1, sp, #4
 8020016:	689b      	ldr	r3, [r3, #8]
 8020018:	4798      	blx	r3
 802001a:	4b0d      	ldr	r3, [pc, #52]	; (8020050 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 802001c:	9301      	str	r3, [sp, #4]
 802001e:	6920      	ldr	r0, [r4, #16]
 8020020:	f88d 5008 	strb.w	r5, [sp, #8]
 8020024:	2300      	movs	r3, #0
 8020026:	f8ad 700a 	strh.w	r7, [sp, #10]
 802002a:	f8ad 600c 	strh.w	r6, [sp, #12]
 802002e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020032:	6803      	ldr	r3, [r0, #0]
 8020034:	a901      	add	r1, sp, #4
 8020036:	681b      	ldr	r3, [r3, #0]
 8020038:	4798      	blx	r3
 802003a:	b005      	add	sp, #20
 802003c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802003e:	2900      	cmp	r1, #0
 8020040:	d1eb      	bne.n	802001a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8020042:	80a2      	strh	r2, [r4, #4]
 8020044:	80c6      	strh	r6, [r0, #6]
 8020046:	60a1      	str	r1, [r4, #8]
 8020048:	81a1      	strh	r1, [r4, #12]
 802004a:	73a1      	strb	r1, [r4, #14]
 802004c:	e7e5      	b.n	802001a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802004e:	bf00      	nop
 8020050:	0802434c 	.word	0x0802434c
 8020054:	08024374 	.word	0x08024374

08020058 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8020058:	10c9      	asrs	r1, r1, #3
 802005a:	2900      	cmp	r1, #0
 802005c:	bfb8      	it	lt
 802005e:	4249      	neglt	r1, r1
 8020060:	2801      	cmp	r0, #1
 8020062:	d108      	bne.n	8020076 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8020064:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8020068:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 802006c:	4601      	mov	r1, r0
 802006e:	dd02      	ble.n	8020076 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8020070:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8020074:	4770      	bx	lr
 8020076:	29ff      	cmp	r1, #255	; 0xff
 8020078:	bfa8      	it	ge
 802007a:	21ff      	movge	r1, #255	; 0xff
 802007c:	4608      	mov	r0, r1
 802007e:	4770      	bx	lr

08020080 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8020080:	b410      	push	{r4}
 8020082:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8020086:	429c      	cmp	r4, r3
 8020088:	d803      	bhi.n	8020092 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 802008a:	f85d 4b04 	ldr.w	r4, [sp], #4
 802008e:	f7ef b97d 	b.w	800f38c <_ZN8touchgfx7Outline6lineToEii>
 8020092:	f85d 4b04 	ldr.w	r4, [sp], #4
 8020096:	4770      	bx	lr

08020098 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8020098:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802009c:	b08b      	sub	sp, #44	; 0x2c
 802009e:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80200a2:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 80200a6:	9308      	str	r3, [sp, #32]
 80200a8:	4606      	mov	r6, r0
 80200aa:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 80200ae:	9309      	str	r3, [sp, #36]	; 0x24
 80200b0:	468a      	mov	sl, r1
 80200b2:	f7ef fad8 	bl	800f666 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 80200b6:	68b5      	ldr	r5, [r6, #8]
 80200b8:	4604      	mov	r4, r0
 80200ba:	2d00      	cmp	r5, #0
 80200bc:	d044      	beq.n	8020148 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80200be:	6873      	ldr	r3, [r6, #4]
 80200c0:	42ab      	cmp	r3, r5
 80200c2:	d33d      	bcc.n	8020140 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 80200c4:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80200c8:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 80200cc:	eb02 0b03 	add.w	fp, r2, r3
 80200d0:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 80200d4:	fb02 1203 	mla	r2, r2, r3, r1
 80200d8:	9205      	str	r2, [sp, #20]
 80200da:	1e6a      	subs	r2, r5, #1
 80200dc:	9204      	str	r2, [sp, #16]
 80200de:	f04f 0800 	mov.w	r8, #0
 80200e2:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 80200e6:	f9b4 7000 	ldrsh.w	r7, [r4]
 80200ea:	454b      	cmp	r3, r9
 80200ec:	463a      	mov	r2, r7
 80200ee:	d008      	beq.n	8020102 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 80200f0:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 80200f4:	eb03 0b09 	add.w	fp, r3, r9
 80200f8:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 80200fc:	fb03 1309 	mla	r3, r3, r9, r1
 8020100:	9305      	str	r3, [sp, #20]
 8020102:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8020106:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 802010a:	4498      	add	r8, r3
 802010c:	9b04      	ldr	r3, [sp, #16]
 802010e:	3b01      	subs	r3, #1
 8020110:	9304      	str	r3, [sp, #16]
 8020112:	9b04      	ldr	r3, [sp, #16]
 8020114:	3301      	adds	r3, #1
 8020116:	d015      	beq.n	8020144 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8020118:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 802011c:	42bb      	cmp	r3, r7
 802011e:	d117      	bne.n	8020150 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8020120:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8020124:	9b04      	ldr	r3, [sp, #16]
 8020126:	4548      	cmp	r0, r9
 8020128:	f103 33ff 	add.w	r3, r3, #4294967295
 802012c:	d17f      	bne.n	802022e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 802012e:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8020132:	4401      	add	r1, r0
 8020134:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8020138:	4480      	add	r8, r0
 802013a:	e7e9      	b.n	8020110 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 802013c:	461f      	mov	r7, r3
 802013e:	e044      	b.n	80201ca <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8020140:	2000      	movs	r0, #0
 8020142:	e002      	b.n	802014a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8020144:	2900      	cmp	r1, #0
 8020146:	d16f      	bne.n	8020228 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8020148:	2001      	movs	r0, #1
 802014a:	b00b      	add	sp, #44	; 0x2c
 802014c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020150:	2900      	cmp	r1, #0
 8020152:	d030      	beq.n	80201b6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8020154:	2f00      	cmp	r7, #0
 8020156:	db29      	blt.n	80201ac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8020158:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 802015c:	42bb      	cmp	r3, r7
 802015e:	dd25      	ble.n	80201ac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8020160:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8020164:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8020168:	f7ff ff76 	bl	8020058 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 802016c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802016e:	fb10 f003 	smulbb	r0, r0, r3
 8020172:	b280      	uxth	r0, r0
 8020174:	1c41      	adds	r1, r0, #1
 8020176:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802017a:	1209      	asrs	r1, r1, #8
 802017c:	f011 0fff 	tst.w	r1, #255	; 0xff
 8020180:	d014      	beq.n	80201ac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8020182:	9808      	ldr	r0, [sp, #32]
 8020184:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8020186:	b2c9      	uxtb	r1, r1
 8020188:	b2ba      	uxth	r2, r7
 802018a:	9102      	str	r1, [sp, #8]
 802018c:	2101      	movs	r1, #1
 802018e:	4413      	add	r3, r2
 8020190:	9101      	str	r1, [sp, #4]
 8020192:	4402      	add	r2, r0
 8020194:	fa0f f18b 	sxth.w	r1, fp
 8020198:	f8da 0000 	ldr.w	r0, [sl]
 802019c:	9100      	str	r1, [sp, #0]
 802019e:	6941      	ldr	r1, [r0, #20]
 80201a0:	b21b      	sxth	r3, r3
 80201a2:	460d      	mov	r5, r1
 80201a4:	b212      	sxth	r2, r2
 80201a6:	9905      	ldr	r1, [sp, #20]
 80201a8:	4650      	mov	r0, sl
 80201aa:	47a8      	blx	r5
 80201ac:	9b04      	ldr	r3, [sp, #16]
 80201ae:	3301      	adds	r3, #1
 80201b0:	f107 0201 	add.w	r2, r7, #1
 80201b4:	d0c8      	beq.n	8020148 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80201b6:	f9b4 7000 	ldrsh.w	r7, [r4]
 80201ba:	1abb      	subs	r3, r7, r2
 80201bc:	2b00      	cmp	r3, #0
 80201be:	dd31      	ble.n	8020224 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80201c0:	2a00      	cmp	r2, #0
 80201c2:	dabb      	bge.n	802013c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 80201c4:	2f00      	cmp	r7, #0
 80201c6:	dd2d      	ble.n	8020224 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80201c8:	2200      	movs	r2, #0
 80201ca:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 80201ce:	19d1      	adds	r1, r2, r7
 80201d0:	4299      	cmp	r1, r3
 80201d2:	db02      	blt.n	80201da <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 80201d4:	1a9f      	subs	r7, r3, r2
 80201d6:	2f00      	cmp	r7, #0
 80201d8:	dd24      	ble.n	8020224 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80201da:	ea4f 1188 	mov.w	r1, r8, lsl #6
 80201de:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 80201e2:	f7ff ff39 	bl	8020058 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 80201e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80201e8:	fb10 f003 	smulbb	r0, r0, r3
 80201ec:	b280      	uxth	r0, r0
 80201ee:	1c41      	adds	r1, r0, #1
 80201f0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80201f4:	1209      	asrs	r1, r1, #8
 80201f6:	f011 0fff 	tst.w	r1, #255	; 0xff
 80201fa:	d013      	beq.n	8020224 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80201fc:	9808      	ldr	r0, [sp, #32]
 80201fe:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8020200:	b292      	uxth	r2, r2
 8020202:	b2c9      	uxtb	r1, r1
 8020204:	4413      	add	r3, r2
 8020206:	9102      	str	r1, [sp, #8]
 8020208:	4402      	add	r2, r0
 802020a:	b23f      	sxth	r7, r7
 802020c:	f8da 0000 	ldr.w	r0, [sl]
 8020210:	9701      	str	r7, [sp, #4]
 8020212:	fa0f f18b 	sxth.w	r1, fp
 8020216:	9100      	str	r1, [sp, #0]
 8020218:	6947      	ldr	r7, [r0, #20]
 802021a:	9905      	ldr	r1, [sp, #20]
 802021c:	b21b      	sxth	r3, r3
 802021e:	b212      	sxth	r2, r2
 8020220:	4650      	mov	r0, sl
 8020222:	47b8      	blx	r7
 8020224:	464b      	mov	r3, r9
 8020226:	e75c      	b.n	80200e2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8020228:	2f00      	cmp	r7, #0
 802022a:	da95      	bge.n	8020158 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 802022c:	e78c      	b.n	8020148 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802022e:	2900      	cmp	r1, #0
 8020230:	d0f8      	beq.n	8020224 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8020232:	e78f      	b.n	8020154 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08020234 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8020234:	4b4c      	ldr	r3, [pc, #304]	; (8020368 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x134>)
 8020236:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 802023a:	2500      	movs	r5, #0
 802023c:	f100 0620 	add.w	r6, r0, #32
 8020240:	4604      	mov	r4, r0
 8020242:	e9c0 3100 	strd	r3, r1, [r0]
 8020246:	e9c0 5502 	strd	r5, r5, [r0, #8]
 802024a:	e9c0 5504 	strd	r5, r5, [r0, #16]
 802024e:	e9c0 5506 	strd	r5, r5, [r0, #24]
 8020252:	f100 0718 	add.w	r7, r0, #24
 8020256:	4630      	mov	r0, r6
 8020258:	4690      	mov	r8, r2
 802025a:	f7ee fbcf 	bl	800e9fc <_ZN8touchgfx7OutlineC1Ev>
 802025e:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8020262:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8020266:	2301      	movs	r3, #1
 8020268:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 802026c:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 8020270:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8020274:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8020278:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802027c:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 8020280:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8020284:	f9b8 2000 	ldrsh.w	r2, [r8]
 8020288:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 802028c:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8020290:	9500      	str	r5, [sp, #0]
 8020292:	4410      	add	r0, r2
 8020294:	b280      	uxth	r0, r0
 8020296:	fa0f fa80 	sxth.w	sl, r0
 802029a:	45aa      	cmp	sl, r5
 802029c:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 80202a0:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 80202a4:	dd5c      	ble.n	8020360 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 80202a6:	4591      	cmp	r9, r2
 80202a8:	dd5a      	ble.n	8020360 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 80202aa:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 80202ae:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 80202b2:	440b      	add	r3, r1
 80202b4:	b29b      	uxth	r3, r3
 80202b6:	b21d      	sxth	r5, r3
 80202b8:	2d00      	cmp	r5, #0
 80202ba:	dd51      	ble.n	8020360 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 80202bc:	458e      	cmp	lr, r1
 80202be:	dd4f      	ble.n	8020360 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 80202c0:	45d1      	cmp	r9, sl
 80202c2:	bfb8      	it	lt
 80202c4:	fa1f f089 	uxthlt.w	r0, r9
 80202c8:	45ae      	cmp	lr, r5
 80202ca:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 80202ce:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 80202d2:	bfb8      	it	lt
 80202d4:	fa1f f38e 	uxthlt.w	r3, lr
 80202d8:	1a80      	subs	r0, r0, r2
 80202da:	1a5b      	subs	r3, r3, r1
 80202dc:	f8ad 0004 	strh.w	r0, [sp, #4]
 80202e0:	f8ad 3006 	strh.w	r3, [sp, #6]
 80202e4:	f8ad 2000 	strh.w	r2, [sp]
 80202e8:	f8ad 1002 	strh.w	r1, [sp, #2]
 80202ec:	466d      	mov	r5, sp
 80202ee:	e895 0003 	ldmia.w	r5, {r0, r1}
 80202f2:	e887 0003 	stmia.w	r7, {r0, r1}
 80202f6:	f8dc 3000 	ldr.w	r3, [ip]
 80202fa:	4660      	mov	r0, ip
 80202fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80202fe:	4639      	mov	r1, r7
 8020300:	4798      	blx	r3
 8020302:	6861      	ldr	r1, [r4, #4]
 8020304:	4628      	mov	r0, r5
 8020306:	3104      	adds	r1, #4
 8020308:	f7f0 fd0c 	bl	8010d24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802030c:	4638      	mov	r0, r7
 802030e:	f7f0 fce1 	bl	8010cd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020312:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8020316:	f8bd 2000 	ldrh.w	r2, [sp]
 802031a:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 802031e:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8020322:	4630      	mov	r0, r6
 8020324:	f7ee fb4e 	bl	800e9c4 <_ZN8touchgfx7Outline5resetEv>
 8020328:	f9bd 3000 	ldrsh.w	r3, [sp]
 802032c:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 8020330:	015b      	lsls	r3, r3, #5
 8020332:	60a3      	str	r3, [r4, #8]
 8020334:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8020338:	015b      	lsls	r3, r3, #5
 802033a:	60e3      	str	r3, [r4, #12]
 802033c:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8020340:	015b      	lsls	r3, r3, #5
 8020342:	6123      	str	r3, [r4, #16]
 8020344:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8020348:	015b      	lsls	r3, r3, #5
 802034a:	6163      	str	r3, [r4, #20]
 802034c:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 8020350:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8020354:	4620      	mov	r0, r4
 8020356:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 802035a:	b002      	add	sp, #8
 802035c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020360:	2300      	movs	r3, #0
 8020362:	9301      	str	r3, [sp, #4]
 8020364:	e7c2      	b.n	80202ec <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb8>
 8020366:	bf00      	nop
 8020368:	08023b74 	.word	0x08023b74

0802036c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 802036c:	b510      	push	{r4, lr}
 802036e:	4b07      	ldr	r3, [pc, #28]	; (802038c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 8020370:	781b      	ldrb	r3, [r3, #0]
 8020372:	2b01      	cmp	r3, #1
 8020374:	d108      	bne.n	8020388 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 8020376:	6843      	ldr	r3, [r0, #4]
 8020378:	6814      	ldr	r4, [r2, #0]
 802037a:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 802037e:	680b      	ldr	r3, [r1, #0]
 8020380:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8020384:	6013      	str	r3, [r2, #0]
 8020386:	600c      	str	r4, [r1, #0]
 8020388:	bd10      	pop	{r4, pc}
 802038a:	bf00      	nop
 802038c:	200155a4 	.word	0x200155a4

08020390 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 8020390:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8020392:	ab02      	add	r3, sp, #8
 8020394:	4604      	mov	r4, r0
 8020396:	f843 2d08 	str.w	r2, [r3, #-8]!
 802039a:	9101      	str	r1, [sp, #4]
 802039c:	461a      	mov	r2, r3
 802039e:	a901      	add	r1, sp, #4
 80203a0:	f7ff ffe4 	bl	802036c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80203a4:	68a3      	ldr	r3, [r4, #8]
 80203a6:	9901      	ldr	r1, [sp, #4]
 80203a8:	9a00      	ldr	r2, [sp, #0]
 80203aa:	1ac9      	subs	r1, r1, r3
 80203ac:	68e3      	ldr	r3, [r4, #12]
 80203ae:	9101      	str	r1, [sp, #4]
 80203b0:	1ad2      	subs	r2, r2, r3
 80203b2:	2a00      	cmp	r2, #0
 80203b4:	9200      	str	r2, [sp, #0]
 80203b6:	db1c      	blt.n	80203f2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 80203b8:	6963      	ldr	r3, [r4, #20]
 80203ba:	429a      	cmp	r2, r3
 80203bc:	bfac      	ite	ge
 80203be:	2002      	movge	r0, #2
 80203c0:	2000      	movlt	r0, #0
 80203c2:	2900      	cmp	r1, #0
 80203c4:	db17      	blt.n	80203f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 80203c6:	6923      	ldr	r3, [r4, #16]
 80203c8:	4299      	cmp	r1, r3
 80203ca:	bfac      	ite	ge
 80203cc:	2308      	movge	r3, #8
 80203ce:	2300      	movlt	r3, #0
 80203d0:	4303      	orrs	r3, r0
 80203d2:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 80203d6:	b2dd      	uxtb	r5, r3
 80203d8:	b978      	cbnz	r0, 80203fa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 80203da:	f104 0020 	add.w	r0, r4, #32
 80203de:	f7ff fe4f 	bl	8020080 <_ZN8touchgfx10Rasterizer6lineToEii>
 80203e2:	9b01      	ldr	r3, [sp, #4]
 80203e4:	65e3      	str	r3, [r4, #92]	; 0x5c
 80203e6:	9b00      	ldr	r3, [sp, #0]
 80203e8:	6623      	str	r3, [r4, #96]	; 0x60
 80203ea:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 80203ee:	b002      	add	sp, #8
 80203f0:	bd70      	pop	{r4, r5, r6, pc}
 80203f2:	2001      	movs	r0, #1
 80203f4:	e7e5      	b.n	80203c2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 80203f6:	2304      	movs	r3, #4
 80203f8:	e7ea      	b.n	80203d0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 80203fa:	b113      	cbz	r3, 8020402 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 80203fc:	ea10 0305 	ands.w	r3, r0, r5
 8020400:	d11d      	bne.n	802043e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xae>
 8020402:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 8020406:	f104 0620 	add.w	r6, r4, #32
 802040a:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 802040e:	b193      	cbz	r3, 8020436 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa6>
 8020410:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8020414:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8020418:	4298      	cmp	r0, r3
 802041a:	d802      	bhi.n	8020422 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 802041c:	4630      	mov	r0, r6
 802041e:	f7ee ffcf 	bl	800f3c0 <_ZN8touchgfx7Outline6moveToEii>
 8020422:	2300      	movs	r3, #0
 8020424:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8020428:	2301      	movs	r3, #1
 802042a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802042e:	e9dd 2100 	ldrd	r2, r1, [sp]
 8020432:	4630      	mov	r0, r6
 8020434:	e7d3      	b.n	80203de <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 8020436:	4630      	mov	r0, r6
 8020438:	f7ff fe22 	bl	8020080 <_ZN8touchgfx10Rasterizer6lineToEii>
 802043c:	e7f7      	b.n	802042e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9e>
 802043e:	461d      	mov	r5, r3
 8020440:	e7cf      	b.n	80203e2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>

08020442 <_ZN8touchgfx6Canvas5closeEv>:
 8020442:	b538      	push	{r3, r4, r5, lr}
 8020444:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8020448:	4604      	mov	r4, r0
 802044a:	b993      	cbnz	r3, 8020472 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802044c:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 8020450:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 8020454:	4213      	tst	r3, r2
 8020456:	d10c      	bne.n	8020472 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8020458:	f100 0520 	add.w	r5, r0, #32
 802045c:	b123      	cbz	r3, 8020468 <_ZN8touchgfx6Canvas5closeEv+0x26>
 802045e:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 8020462:	4628      	mov	r0, r5
 8020464:	f7ff fe0c 	bl	8020080 <_ZN8touchgfx10Rasterizer6lineToEii>
 8020468:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 802046c:	4628      	mov	r0, r5
 802046e:	f7ff fe07 	bl	8020080 <_ZN8touchgfx10Rasterizer6lineToEii>
 8020472:	2300      	movs	r3, #0
 8020474:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8020478:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 802047c:	4298      	cmp	r0, r3
 802047e:	bf34      	ite	cc
 8020480:	2000      	movcc	r0, #0
 8020482:	2001      	movcs	r0, #1
 8020484:	bd38      	pop	{r3, r4, r5, pc}
	...

08020488 <_ZN8touchgfx6Canvas6renderEh>:
 8020488:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 802048c:	4604      	mov	r4, r0
 802048e:	6840      	ldr	r0, [r0, #4]
 8020490:	6803      	ldr	r3, [r0, #0]
 8020492:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8020494:	460d      	mov	r5, r1
 8020496:	4798      	blx	r3
 8020498:	fb10 f105 	smulbb	r1, r0, r5
 802049c:	b289      	uxth	r1, r1
 802049e:	1c4d      	adds	r5, r1, #1
 80204a0:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 80204a4:	122d      	asrs	r5, r5, #8
 80204a6:	f000 8098 	beq.w	80205da <_ZN8touchgfx6Canvas6renderEh+0x152>
 80204aa:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 80204ae:	2b00      	cmp	r3, #0
 80204b0:	f000 8093 	beq.w	80205da <_ZN8touchgfx6Canvas6renderEh+0x152>
 80204b4:	4620      	mov	r0, r4
 80204b6:	f7ff ffc4 	bl	8020442 <_ZN8touchgfx6Canvas5closeEv>
 80204ba:	4607      	mov	r7, r0
 80204bc:	2800      	cmp	r0, #0
 80204be:	d043      	beq.n	8020548 <_ZN8touchgfx6Canvas6renderEh+0xc0>
 80204c0:	6863      	ldr	r3, [r4, #4]
 80204c2:	4e47      	ldr	r6, [pc, #284]	; (80205e0 <_ZN8touchgfx6Canvas6renderEh+0x158>)
 80204c4:	6a98      	ldr	r0, [r3, #40]	; 0x28
 80204c6:	6837      	ldr	r7, [r6, #0]
 80204c8:	6803      	ldr	r3, [r0, #0]
 80204ca:	689b      	ldr	r3, [r3, #8]
 80204cc:	4798      	blx	r3
 80204ce:	4601      	mov	r1, r0
 80204d0:	4638      	mov	r0, r7
 80204d2:	f7eb fb11 	bl	800baf8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 80204d6:	4607      	mov	r7, r0
 80204d8:	f7e2 f8fe 	bl	80026d8 <_ZN8touchgfx3HAL3lcdEv>
 80204dc:	6803      	ldr	r3, [r0, #0]
 80204de:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80204e0:	4798      	blx	r3
 80204e2:	4680      	mov	r8, r0
 80204e4:	f7e2 f8f8 	bl	80026d8 <_ZN8touchgfx3HAL3lcdEv>
 80204e8:	6803      	ldr	r3, [r0, #0]
 80204ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80204ec:	4798      	blx	r3
 80204ee:	280b      	cmp	r0, #11
 80204f0:	d858      	bhi.n	80205a4 <_ZN8touchgfx6Canvas6renderEh+0x11c>
 80204f2:	e8df f000 	tbb	[pc, r0]
 80204f6:	594e      	.short	0x594e
 80204f8:	2d570669 	.word	0x2d570669
 80204fc:	6262623d 	.word	0x6262623d
 8020500:	6262      	.short	0x6262
 8020502:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020506:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 802050a:	2208      	movs	r2, #8
 802050c:	fb91 f2f2 	sdiv	r2, r1, r2
 8020510:	fb08 2303 	mla	r3, r8, r3, r2
 8020514:	441f      	add	r7, r3
 8020516:	424b      	negs	r3, r1
 8020518:	f003 0307 	and.w	r3, r3, #7
 802051c:	f001 0107 	and.w	r1, r1, #7
 8020520:	bf58      	it	pl
 8020522:	4259      	negpl	r1, r3
 8020524:	b2c9      	uxtb	r1, r1
 8020526:	b2ed      	uxtb	r5, r5
 8020528:	e9cd 1500 	strd	r1, r5, [sp]
 802052c:	6860      	ldr	r0, [r4, #4]
 802052e:	fa0f f388 	sxth.w	r3, r8
 8020532:	463a      	mov	r2, r7
 8020534:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8020536:	f104 0020 	add.w	r0, r4, #32
 802053a:	f7ff fdad 	bl	8020098 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 802053e:	4607      	mov	r7, r0
 8020540:	6830      	ldr	r0, [r6, #0]
 8020542:	6803      	ldr	r3, [r0, #0]
 8020544:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020546:	4798      	blx	r3
 8020548:	4638      	mov	r0, r7
 802054a:	b002      	add	sp, #8
 802054c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8020550:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020554:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8020558:	2204      	movs	r2, #4
 802055a:	fb91 f2f2 	sdiv	r2, r1, r2
 802055e:	fb08 2303 	mla	r3, r8, r3, r2
 8020562:	441f      	add	r7, r3
 8020564:	424b      	negs	r3, r1
 8020566:	f003 0303 	and.w	r3, r3, #3
 802056a:	f001 0103 	and.w	r1, r1, #3
 802056e:	e7d7      	b.n	8020520 <_ZN8touchgfx6Canvas6renderEh+0x98>
 8020570:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8020574:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020578:	2900      	cmp	r1, #0
 802057a:	f04f 0202 	mov.w	r2, #2
 802057e:	fb91 f2f2 	sdiv	r2, r1, r2
 8020582:	f001 0101 	and.w	r1, r1, #1
 8020586:	fb08 2303 	mla	r3, r8, r3, r2
 802058a:	441f      	add	r7, r3
 802058c:	bfb8      	it	lt
 802058e:	4249      	neglt	r1, r1
 8020590:	e7c8      	b.n	8020524 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 8020592:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020596:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 802059a:	fb08 f303 	mul.w	r3, r8, r3
 802059e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80205a2:	441f      	add	r7, r3
 80205a4:	2100      	movs	r1, #0
 80205a6:	e7be      	b.n	8020526 <_ZN8touchgfx6Canvas6renderEh+0x9e>
 80205a8:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80205ac:	fb08 f203 	mul.w	r2, r8, r3
 80205b0:	8b23      	ldrh	r3, [r4, #24]
 80205b2:	2103      	movs	r1, #3
 80205b4:	fb13 2301 	smlabb	r3, r3, r1, r2
 80205b8:	e7f3      	b.n	80205a2 <_ZN8touchgfx6Canvas6renderEh+0x11a>
 80205ba:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80205be:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80205c2:	fb08 2303 	mla	r3, r8, r3, r2
 80205c6:	e7ec      	b.n	80205a2 <_ZN8touchgfx6Canvas6renderEh+0x11a>
 80205c8:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80205cc:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80205d0:	fb08 f303 	mul.w	r3, r8, r3
 80205d4:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80205d8:	e7e3      	b.n	80205a2 <_ZN8touchgfx6Canvas6renderEh+0x11a>
 80205da:	2701      	movs	r7, #1
 80205dc:	e7b4      	b.n	8020548 <_ZN8touchgfx6Canvas6renderEh+0xc0>
 80205de:	bf00      	nop
 80205e0:	200155ac 	.word	0x200155ac

080205e4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 80205e4:	b513      	push	{r0, r1, r4, lr}
 80205e6:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 80205ea:	4604      	mov	r4, r0
 80205ec:	e9cd 2100 	strd	r2, r1, [sp]
 80205f0:	b1a3      	cbz	r3, 802061c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 80205f2:	466a      	mov	r2, sp
 80205f4:	a901      	add	r1, sp, #4
 80205f6:	4620      	mov	r0, r4
 80205f8:	f7ff feb8 	bl	802036c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80205fc:	68a3      	ldr	r3, [r4, #8]
 80205fe:	9901      	ldr	r1, [sp, #4]
 8020600:	9a00      	ldr	r2, [sp, #0]
 8020602:	1ac9      	subs	r1, r1, r3
 8020604:	68e3      	ldr	r3, [r4, #12]
 8020606:	9101      	str	r1, [sp, #4]
 8020608:	1ad2      	subs	r2, r2, r3
 802060a:	2a00      	cmp	r2, #0
 802060c:	9200      	str	r2, [sp, #0]
 802060e:	da0b      	bge.n	8020628 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8020610:	2301      	movs	r3, #1
 8020612:	2900      	cmp	r1, #0
 8020614:	da0e      	bge.n	8020634 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8020616:	f043 0304 	orr.w	r3, r3, #4
 802061a:	e013      	b.n	8020644 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 802061c:	f7ff ff11 	bl	8020442 <_ZN8touchgfx6Canvas5closeEv>
 8020620:	2800      	cmp	r0, #0
 8020622:	d1e6      	bne.n	80205f2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8020624:	b002      	add	sp, #8
 8020626:	bd10      	pop	{r4, pc}
 8020628:	6963      	ldr	r3, [r4, #20]
 802062a:	429a      	cmp	r2, r3
 802062c:	bfac      	ite	ge
 802062e:	2302      	movge	r3, #2
 8020630:	2300      	movlt	r3, #0
 8020632:	e7ee      	b.n	8020612 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8020634:	6920      	ldr	r0, [r4, #16]
 8020636:	4281      	cmp	r1, r0
 8020638:	bfac      	ite	ge
 802063a:	2008      	movge	r0, #8
 802063c:	2000      	movlt	r0, #0
 802063e:	4318      	orrs	r0, r3
 8020640:	b2c3      	uxtb	r3, r0
 8020642:	b158      	cbz	r0, 802065c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8020644:	2201      	movs	r2, #1
 8020646:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 802064a:	9901      	ldr	r1, [sp, #4]
 802064c:	9a00      	ldr	r2, [sp, #0]
 802064e:	66a1      	str	r1, [r4, #104]	; 0x68
 8020650:	66e2      	str	r2, [r4, #108]	; 0x6c
 8020652:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 8020656:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 802065a:	e7e3      	b.n	8020624 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 802065c:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8020660:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8020664:	4298      	cmp	r0, r3
 8020666:	d803      	bhi.n	8020670 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8020668:	f104 0020 	add.w	r0, r4, #32
 802066c:	f7ee fea8 	bl	800f3c0 <_ZN8touchgfx7Outline6moveToEii>
 8020670:	2300      	movs	r3, #0
 8020672:	2201      	movs	r2, #1
 8020674:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8020678:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 802067c:	e7e5      	b.n	802064a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

0802067e <__aeabi_atexit>:
 802067e:	460b      	mov	r3, r1
 8020680:	4601      	mov	r1, r0
 8020682:	4618      	mov	r0, r3
 8020684:	f000 b8d8 	b.w	8020838 <__cxa_atexit>

08020688 <_ZdlPvj>:
 8020688:	f000 b812 	b.w	80206b0 <_ZdlPv>

0802068c <__cxa_guard_acquire>:
 802068c:	6803      	ldr	r3, [r0, #0]
 802068e:	07db      	lsls	r3, r3, #31
 8020690:	d406      	bmi.n	80206a0 <__cxa_guard_acquire+0x14>
 8020692:	7843      	ldrb	r3, [r0, #1]
 8020694:	b103      	cbz	r3, 8020698 <__cxa_guard_acquire+0xc>
 8020696:	deff      	udf	#255	; 0xff
 8020698:	2301      	movs	r3, #1
 802069a:	7043      	strb	r3, [r0, #1]
 802069c:	4618      	mov	r0, r3
 802069e:	4770      	bx	lr
 80206a0:	2000      	movs	r0, #0
 80206a2:	4770      	bx	lr

080206a4 <__cxa_guard_release>:
 80206a4:	2301      	movs	r3, #1
 80206a6:	6003      	str	r3, [r0, #0]
 80206a8:	4770      	bx	lr

080206aa <__cxa_pure_virtual>:
 80206aa:	b508      	push	{r3, lr}
 80206ac:	f000 f80e 	bl	80206cc <_ZSt9terminatev>

080206b0 <_ZdlPv>:
 80206b0:	f000 ba0e 	b.w	8020ad0 <free>

080206b4 <_ZN10__cxxabiv111__terminateEPFvvE>:
 80206b4:	b508      	push	{r3, lr}
 80206b6:	4780      	blx	r0
 80206b8:	f000 f892 	bl	80207e0 <abort>

080206bc <_ZSt13get_terminatev>:
 80206bc:	4b02      	ldr	r3, [pc, #8]	; (80206c8 <_ZSt13get_terminatev+0xc>)
 80206be:	6818      	ldr	r0, [r3, #0]
 80206c0:	f3bf 8f5b 	dmb	ish
 80206c4:	4770      	bx	lr
 80206c6:	bf00      	nop
 80206c8:	20000100 	.word	0x20000100

080206cc <_ZSt9terminatev>:
 80206cc:	b508      	push	{r3, lr}
 80206ce:	f7ff fff5 	bl	80206bc <_ZSt13get_terminatev>
 80206d2:	f7ff ffef 	bl	80206b4 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

080206d8 <ceilf>:
 80206d8:	ee10 3a10 	vmov	r3, s0
 80206dc:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 80206e0:	3a7f      	subs	r2, #127	; 0x7f
 80206e2:	2a16      	cmp	r2, #22
 80206e4:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 80206e8:	dc2a      	bgt.n	8020740 <ceilf+0x68>
 80206ea:	2a00      	cmp	r2, #0
 80206ec:	da11      	bge.n	8020712 <ceilf+0x3a>
 80206ee:	eddf 7a19 	vldr	s15, [pc, #100]	; 8020754 <ceilf+0x7c>
 80206f2:	ee30 0a27 	vadd.f32	s0, s0, s15
 80206f6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80206fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80206fe:	dd05      	ble.n	802070c <ceilf+0x34>
 8020700:	2b00      	cmp	r3, #0
 8020702:	db23      	blt.n	802074c <ceilf+0x74>
 8020704:	2900      	cmp	r1, #0
 8020706:	bf18      	it	ne
 8020708:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 802070c:	ee00 3a10 	vmov	s0, r3
 8020710:	4770      	bx	lr
 8020712:	4911      	ldr	r1, [pc, #68]	; (8020758 <ceilf+0x80>)
 8020714:	4111      	asrs	r1, r2
 8020716:	420b      	tst	r3, r1
 8020718:	d0fa      	beq.n	8020710 <ceilf+0x38>
 802071a:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8020754 <ceilf+0x7c>
 802071e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8020722:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8020726:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802072a:	ddef      	ble.n	802070c <ceilf+0x34>
 802072c:	2b00      	cmp	r3, #0
 802072e:	bfc2      	ittt	gt
 8020730:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 8020734:	fa40 f202 	asrgt.w	r2, r0, r2
 8020738:	189b      	addgt	r3, r3, r2
 802073a:	ea23 0301 	bic.w	r3, r3, r1
 802073e:	e7e5      	b.n	802070c <ceilf+0x34>
 8020740:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8020744:	d3e4      	bcc.n	8020710 <ceilf+0x38>
 8020746:	ee30 0a00 	vadd.f32	s0, s0, s0
 802074a:	4770      	bx	lr
 802074c:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8020750:	e7dc      	b.n	802070c <ceilf+0x34>
 8020752:	bf00      	nop
 8020754:	7149f2ca 	.word	0x7149f2ca
 8020758:	007fffff 	.word	0x007fffff

0802075c <floorf>:
 802075c:	ee10 3a10 	vmov	r3, s0
 8020760:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8020764:	3a7f      	subs	r2, #127	; 0x7f
 8020766:	2a16      	cmp	r2, #22
 8020768:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802076c:	dc2a      	bgt.n	80207c4 <floorf+0x68>
 802076e:	2a00      	cmp	r2, #0
 8020770:	da11      	bge.n	8020796 <floorf+0x3a>
 8020772:	eddf 7a18 	vldr	s15, [pc, #96]	; 80207d4 <floorf+0x78>
 8020776:	ee30 0a27 	vadd.f32	s0, s0, s15
 802077a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802077e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020782:	dd05      	ble.n	8020790 <floorf+0x34>
 8020784:	2b00      	cmp	r3, #0
 8020786:	da23      	bge.n	80207d0 <floorf+0x74>
 8020788:	4a13      	ldr	r2, [pc, #76]	; (80207d8 <floorf+0x7c>)
 802078a:	2900      	cmp	r1, #0
 802078c:	bf18      	it	ne
 802078e:	4613      	movne	r3, r2
 8020790:	ee00 3a10 	vmov	s0, r3
 8020794:	4770      	bx	lr
 8020796:	4911      	ldr	r1, [pc, #68]	; (80207dc <floorf+0x80>)
 8020798:	4111      	asrs	r1, r2
 802079a:	420b      	tst	r3, r1
 802079c:	d0fa      	beq.n	8020794 <floorf+0x38>
 802079e:	eddf 7a0d 	vldr	s15, [pc, #52]	; 80207d4 <floorf+0x78>
 80207a2:	ee30 0a27 	vadd.f32	s0, s0, s15
 80207a6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80207aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80207ae:	ddef      	ble.n	8020790 <floorf+0x34>
 80207b0:	2b00      	cmp	r3, #0
 80207b2:	bfbe      	ittt	lt
 80207b4:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 80207b8:	fa40 f202 	asrlt.w	r2, r0, r2
 80207bc:	189b      	addlt	r3, r3, r2
 80207be:	ea23 0301 	bic.w	r3, r3, r1
 80207c2:	e7e5      	b.n	8020790 <floorf+0x34>
 80207c4:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 80207c8:	d3e4      	bcc.n	8020794 <floorf+0x38>
 80207ca:	ee30 0a00 	vadd.f32	s0, s0, s0
 80207ce:	4770      	bx	lr
 80207d0:	2300      	movs	r3, #0
 80207d2:	e7dd      	b.n	8020790 <floorf+0x34>
 80207d4:	7149f2ca 	.word	0x7149f2ca
 80207d8:	bf800000 	.word	0xbf800000
 80207dc:	007fffff 	.word	0x007fffff

080207e0 <abort>:
 80207e0:	b508      	push	{r3, lr}
 80207e2:	2006      	movs	r0, #6
 80207e4:	f000 fe02 	bl	80213ec <raise>
 80207e8:	2001      	movs	r0, #1
 80207ea:	f7e1 fc9d 	bl	8002128 <_exit>
	...

080207f0 <__assert_func>:
 80207f0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80207f2:	4614      	mov	r4, r2
 80207f4:	461a      	mov	r2, r3
 80207f6:	4b09      	ldr	r3, [pc, #36]	; (802081c <__assert_func+0x2c>)
 80207f8:	681b      	ldr	r3, [r3, #0]
 80207fa:	4605      	mov	r5, r0
 80207fc:	68d8      	ldr	r0, [r3, #12]
 80207fe:	b14c      	cbz	r4, 8020814 <__assert_func+0x24>
 8020800:	4b07      	ldr	r3, [pc, #28]	; (8020820 <__assert_func+0x30>)
 8020802:	9100      	str	r1, [sp, #0]
 8020804:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8020808:	4906      	ldr	r1, [pc, #24]	; (8020824 <__assert_func+0x34>)
 802080a:	462b      	mov	r3, r5
 802080c:	f000 f8fe 	bl	8020a0c <fiprintf>
 8020810:	f7ff ffe6 	bl	80207e0 <abort>
 8020814:	4b04      	ldr	r3, [pc, #16]	; (8020828 <__assert_func+0x38>)
 8020816:	461c      	mov	r4, r3
 8020818:	e7f3      	b.n	8020802 <__assert_func+0x12>
 802081a:	bf00      	nop
 802081c:	20000104 	.word	0x20000104
 8020820:	0802463c 	.word	0x0802463c
 8020824:	08024649 	.word	0x08024649
 8020828:	080235bf 	.word	0x080235bf

0802082c <atexit>:
 802082c:	2300      	movs	r3, #0
 802082e:	4601      	mov	r1, r0
 8020830:	461a      	mov	r2, r3
 8020832:	4618      	mov	r0, r3
 8020834:	f000 bf0c 	b.w	8021650 <__register_exitproc>

08020838 <__cxa_atexit>:
 8020838:	b510      	push	{r4, lr}
 802083a:	4c05      	ldr	r4, [pc, #20]	; (8020850 <__cxa_atexit+0x18>)
 802083c:	4613      	mov	r3, r2
 802083e:	b12c      	cbz	r4, 802084c <__cxa_atexit+0x14>
 8020840:	460a      	mov	r2, r1
 8020842:	4601      	mov	r1, r0
 8020844:	2002      	movs	r0, #2
 8020846:	f000 ff03 	bl	8021650 <__register_exitproc>
 802084a:	bd10      	pop	{r4, pc}
 802084c:	4620      	mov	r0, r4
 802084e:	e7fc      	b.n	802084a <__cxa_atexit+0x12>
 8020850:	08021651 	.word	0x08021651

08020854 <__errno>:
 8020854:	4b01      	ldr	r3, [pc, #4]	; (802085c <__errno+0x8>)
 8020856:	6818      	ldr	r0, [r3, #0]
 8020858:	4770      	bx	lr
 802085a:	bf00      	nop
 802085c:	20000104 	.word	0x20000104

08020860 <std>:
 8020860:	2300      	movs	r3, #0
 8020862:	b510      	push	{r4, lr}
 8020864:	4604      	mov	r4, r0
 8020866:	e9c0 3300 	strd	r3, r3, [r0]
 802086a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802086e:	6083      	str	r3, [r0, #8]
 8020870:	8181      	strh	r1, [r0, #12]
 8020872:	6643      	str	r3, [r0, #100]	; 0x64
 8020874:	81c2      	strh	r2, [r0, #14]
 8020876:	6183      	str	r3, [r0, #24]
 8020878:	4619      	mov	r1, r3
 802087a:	2208      	movs	r2, #8
 802087c:	305c      	adds	r0, #92	; 0x5c
 802087e:	f000 f93d 	bl	8020afc <memset>
 8020882:	4b05      	ldr	r3, [pc, #20]	; (8020898 <std+0x38>)
 8020884:	6263      	str	r3, [r4, #36]	; 0x24
 8020886:	4b05      	ldr	r3, [pc, #20]	; (802089c <std+0x3c>)
 8020888:	62a3      	str	r3, [r4, #40]	; 0x28
 802088a:	4b05      	ldr	r3, [pc, #20]	; (80208a0 <std+0x40>)
 802088c:	62e3      	str	r3, [r4, #44]	; 0x2c
 802088e:	4b05      	ldr	r3, [pc, #20]	; (80208a4 <std+0x44>)
 8020890:	6224      	str	r4, [r4, #32]
 8020892:	6323      	str	r3, [r4, #48]	; 0x30
 8020894:	bd10      	pop	{r4, pc}
 8020896:	bf00      	nop
 8020898:	08021425 	.word	0x08021425
 802089c:	08021447 	.word	0x08021447
 80208a0:	0802147f 	.word	0x0802147f
 80208a4:	080214a3 	.word	0x080214a3

080208a8 <_cleanup_r>:
 80208a8:	4901      	ldr	r1, [pc, #4]	; (80208b0 <_cleanup_r+0x8>)
 80208aa:	f000 b8c1 	b.w	8020a30 <_fwalk_reent>
 80208ae:	bf00      	nop
 80208b0:	08021841 	.word	0x08021841

080208b4 <__sfmoreglue>:
 80208b4:	b570      	push	{r4, r5, r6, lr}
 80208b6:	2268      	movs	r2, #104	; 0x68
 80208b8:	1e4d      	subs	r5, r1, #1
 80208ba:	4355      	muls	r5, r2
 80208bc:	460e      	mov	r6, r1
 80208be:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80208c2:	f000 f98f 	bl	8020be4 <_malloc_r>
 80208c6:	4604      	mov	r4, r0
 80208c8:	b140      	cbz	r0, 80208dc <__sfmoreglue+0x28>
 80208ca:	2100      	movs	r1, #0
 80208cc:	e9c0 1600 	strd	r1, r6, [r0]
 80208d0:	300c      	adds	r0, #12
 80208d2:	60a0      	str	r0, [r4, #8]
 80208d4:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80208d8:	f000 f910 	bl	8020afc <memset>
 80208dc:	4620      	mov	r0, r4
 80208de:	bd70      	pop	{r4, r5, r6, pc}

080208e0 <__sfp_lock_acquire>:
 80208e0:	4801      	ldr	r0, [pc, #4]	; (80208e8 <__sfp_lock_acquire+0x8>)
 80208e2:	f000 b8ea 	b.w	8020aba <__retarget_lock_acquire_recursive>
 80208e6:	bf00      	nop
 80208e8:	200156b2 	.word	0x200156b2

080208ec <__sfp_lock_release>:
 80208ec:	4801      	ldr	r0, [pc, #4]	; (80208f4 <__sfp_lock_release+0x8>)
 80208ee:	f000 b8e6 	b.w	8020abe <__retarget_lock_release_recursive>
 80208f2:	bf00      	nop
 80208f4:	200156b2 	.word	0x200156b2

080208f8 <__sinit_lock_acquire>:
 80208f8:	4801      	ldr	r0, [pc, #4]	; (8020900 <__sinit_lock_acquire+0x8>)
 80208fa:	f000 b8de 	b.w	8020aba <__retarget_lock_acquire_recursive>
 80208fe:	bf00      	nop
 8020900:	200156b3 	.word	0x200156b3

08020904 <__sinit_lock_release>:
 8020904:	4801      	ldr	r0, [pc, #4]	; (802090c <__sinit_lock_release+0x8>)
 8020906:	f000 b8da 	b.w	8020abe <__retarget_lock_release_recursive>
 802090a:	bf00      	nop
 802090c:	200156b3 	.word	0x200156b3

08020910 <__sinit>:
 8020910:	b510      	push	{r4, lr}
 8020912:	4604      	mov	r4, r0
 8020914:	f7ff fff0 	bl	80208f8 <__sinit_lock_acquire>
 8020918:	69a3      	ldr	r3, [r4, #24]
 802091a:	b11b      	cbz	r3, 8020924 <__sinit+0x14>
 802091c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020920:	f7ff bff0 	b.w	8020904 <__sinit_lock_release>
 8020924:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8020928:	6523      	str	r3, [r4, #80]	; 0x50
 802092a:	4b13      	ldr	r3, [pc, #76]	; (8020978 <__sinit+0x68>)
 802092c:	4a13      	ldr	r2, [pc, #76]	; (802097c <__sinit+0x6c>)
 802092e:	681b      	ldr	r3, [r3, #0]
 8020930:	62a2      	str	r2, [r4, #40]	; 0x28
 8020932:	42a3      	cmp	r3, r4
 8020934:	bf04      	itt	eq
 8020936:	2301      	moveq	r3, #1
 8020938:	61a3      	streq	r3, [r4, #24]
 802093a:	4620      	mov	r0, r4
 802093c:	f000 f820 	bl	8020980 <__sfp>
 8020940:	6060      	str	r0, [r4, #4]
 8020942:	4620      	mov	r0, r4
 8020944:	f000 f81c 	bl	8020980 <__sfp>
 8020948:	60a0      	str	r0, [r4, #8]
 802094a:	4620      	mov	r0, r4
 802094c:	f000 f818 	bl	8020980 <__sfp>
 8020950:	2200      	movs	r2, #0
 8020952:	60e0      	str	r0, [r4, #12]
 8020954:	2104      	movs	r1, #4
 8020956:	6860      	ldr	r0, [r4, #4]
 8020958:	f7ff ff82 	bl	8020860 <std>
 802095c:	68a0      	ldr	r0, [r4, #8]
 802095e:	2201      	movs	r2, #1
 8020960:	2109      	movs	r1, #9
 8020962:	f7ff ff7d 	bl	8020860 <std>
 8020966:	68e0      	ldr	r0, [r4, #12]
 8020968:	2202      	movs	r2, #2
 802096a:	2112      	movs	r1, #18
 802096c:	f7ff ff78 	bl	8020860 <std>
 8020970:	2301      	movs	r3, #1
 8020972:	61a3      	str	r3, [r4, #24]
 8020974:	e7d2      	b.n	802091c <__sinit+0xc>
 8020976:	bf00      	nop
 8020978:	080246d8 	.word	0x080246d8
 802097c:	080208a9 	.word	0x080208a9

08020980 <__sfp>:
 8020980:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8020982:	4607      	mov	r7, r0
 8020984:	f7ff ffac 	bl	80208e0 <__sfp_lock_acquire>
 8020988:	4b1e      	ldr	r3, [pc, #120]	; (8020a04 <__sfp+0x84>)
 802098a:	681e      	ldr	r6, [r3, #0]
 802098c:	69b3      	ldr	r3, [r6, #24]
 802098e:	b913      	cbnz	r3, 8020996 <__sfp+0x16>
 8020990:	4630      	mov	r0, r6
 8020992:	f7ff ffbd 	bl	8020910 <__sinit>
 8020996:	3648      	adds	r6, #72	; 0x48
 8020998:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 802099c:	3b01      	subs	r3, #1
 802099e:	d503      	bpl.n	80209a8 <__sfp+0x28>
 80209a0:	6833      	ldr	r3, [r6, #0]
 80209a2:	b30b      	cbz	r3, 80209e8 <__sfp+0x68>
 80209a4:	6836      	ldr	r6, [r6, #0]
 80209a6:	e7f7      	b.n	8020998 <__sfp+0x18>
 80209a8:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80209ac:	b9d5      	cbnz	r5, 80209e4 <__sfp+0x64>
 80209ae:	4b16      	ldr	r3, [pc, #88]	; (8020a08 <__sfp+0x88>)
 80209b0:	60e3      	str	r3, [r4, #12]
 80209b2:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80209b6:	6665      	str	r5, [r4, #100]	; 0x64
 80209b8:	f000 f87e 	bl	8020ab8 <__retarget_lock_init_recursive>
 80209bc:	f7ff ff96 	bl	80208ec <__sfp_lock_release>
 80209c0:	e9c4 5501 	strd	r5, r5, [r4, #4]
 80209c4:	e9c4 5504 	strd	r5, r5, [r4, #16]
 80209c8:	6025      	str	r5, [r4, #0]
 80209ca:	61a5      	str	r5, [r4, #24]
 80209cc:	2208      	movs	r2, #8
 80209ce:	4629      	mov	r1, r5
 80209d0:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80209d4:	f000 f892 	bl	8020afc <memset>
 80209d8:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80209dc:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80209e0:	4620      	mov	r0, r4
 80209e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80209e4:	3468      	adds	r4, #104	; 0x68
 80209e6:	e7d9      	b.n	802099c <__sfp+0x1c>
 80209e8:	2104      	movs	r1, #4
 80209ea:	4638      	mov	r0, r7
 80209ec:	f7ff ff62 	bl	80208b4 <__sfmoreglue>
 80209f0:	4604      	mov	r4, r0
 80209f2:	6030      	str	r0, [r6, #0]
 80209f4:	2800      	cmp	r0, #0
 80209f6:	d1d5      	bne.n	80209a4 <__sfp+0x24>
 80209f8:	f7ff ff78 	bl	80208ec <__sfp_lock_release>
 80209fc:	230c      	movs	r3, #12
 80209fe:	603b      	str	r3, [r7, #0]
 8020a00:	e7ee      	b.n	80209e0 <__sfp+0x60>
 8020a02:	bf00      	nop
 8020a04:	080246d8 	.word	0x080246d8
 8020a08:	ffff0001 	.word	0xffff0001

08020a0c <fiprintf>:
 8020a0c:	b40e      	push	{r1, r2, r3}
 8020a0e:	b503      	push	{r0, r1, lr}
 8020a10:	4601      	mov	r1, r0
 8020a12:	ab03      	add	r3, sp, #12
 8020a14:	4805      	ldr	r0, [pc, #20]	; (8020a2c <fiprintf+0x20>)
 8020a16:	f853 2b04 	ldr.w	r2, [r3], #4
 8020a1a:	6800      	ldr	r0, [r0, #0]
 8020a1c:	9301      	str	r3, [sp, #4]
 8020a1e:	f000 f97f 	bl	8020d20 <_vfiprintf_r>
 8020a22:	b002      	add	sp, #8
 8020a24:	f85d eb04 	ldr.w	lr, [sp], #4
 8020a28:	b003      	add	sp, #12
 8020a2a:	4770      	bx	lr
 8020a2c:	20000104 	.word	0x20000104

08020a30 <_fwalk_reent>:
 8020a30:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8020a34:	4606      	mov	r6, r0
 8020a36:	4688      	mov	r8, r1
 8020a38:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8020a3c:	2700      	movs	r7, #0
 8020a3e:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8020a42:	f1b9 0901 	subs.w	r9, r9, #1
 8020a46:	d505      	bpl.n	8020a54 <_fwalk_reent+0x24>
 8020a48:	6824      	ldr	r4, [r4, #0]
 8020a4a:	2c00      	cmp	r4, #0
 8020a4c:	d1f7      	bne.n	8020a3e <_fwalk_reent+0xe>
 8020a4e:	4638      	mov	r0, r7
 8020a50:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8020a54:	89ab      	ldrh	r3, [r5, #12]
 8020a56:	2b01      	cmp	r3, #1
 8020a58:	d907      	bls.n	8020a6a <_fwalk_reent+0x3a>
 8020a5a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8020a5e:	3301      	adds	r3, #1
 8020a60:	d003      	beq.n	8020a6a <_fwalk_reent+0x3a>
 8020a62:	4629      	mov	r1, r5
 8020a64:	4630      	mov	r0, r6
 8020a66:	47c0      	blx	r8
 8020a68:	4307      	orrs	r7, r0
 8020a6a:	3568      	adds	r5, #104	; 0x68
 8020a6c:	e7e9      	b.n	8020a42 <_fwalk_reent+0x12>
	...

08020a70 <__libc_init_array>:
 8020a70:	b570      	push	{r4, r5, r6, lr}
 8020a72:	4d0d      	ldr	r5, [pc, #52]	; (8020aa8 <__libc_init_array+0x38>)
 8020a74:	4c0d      	ldr	r4, [pc, #52]	; (8020aac <__libc_init_array+0x3c>)
 8020a76:	1b64      	subs	r4, r4, r5
 8020a78:	10a4      	asrs	r4, r4, #2
 8020a7a:	2600      	movs	r6, #0
 8020a7c:	42a6      	cmp	r6, r4
 8020a7e:	d109      	bne.n	8020a94 <__libc_init_array+0x24>
 8020a80:	4d0b      	ldr	r5, [pc, #44]	; (8020ab0 <__libc_init_array+0x40>)
 8020a82:	4c0c      	ldr	r4, [pc, #48]	; (8020ab4 <__libc_init_array+0x44>)
 8020a84:	f000 ffd0 	bl	8021a28 <_init>
 8020a88:	1b64      	subs	r4, r4, r5
 8020a8a:	10a4      	asrs	r4, r4, #2
 8020a8c:	2600      	movs	r6, #0
 8020a8e:	42a6      	cmp	r6, r4
 8020a90:	d105      	bne.n	8020a9e <__libc_init_array+0x2e>
 8020a92:	bd70      	pop	{r4, r5, r6, pc}
 8020a94:	f855 3b04 	ldr.w	r3, [r5], #4
 8020a98:	4798      	blx	r3
 8020a9a:	3601      	adds	r6, #1
 8020a9c:	e7ee      	b.n	8020a7c <__libc_init_array+0xc>
 8020a9e:	f855 3b04 	ldr.w	r3, [r5], #4
 8020aa2:	4798      	blx	r3
 8020aa4:	3601      	adds	r6, #1
 8020aa6:	e7f2      	b.n	8020a8e <__libc_init_array+0x1e>
 8020aa8:	080c32ac 	.word	0x080c32ac
 8020aac:	080c32ac 	.word	0x080c32ac
 8020ab0:	080c32ac 	.word	0x080c32ac
 8020ab4:	080c32c0 	.word	0x080c32c0

08020ab8 <__retarget_lock_init_recursive>:
 8020ab8:	4770      	bx	lr

08020aba <__retarget_lock_acquire_recursive>:
 8020aba:	4770      	bx	lr

08020abc <__retarget_lock_release>:
 8020abc:	4770      	bx	lr

08020abe <__retarget_lock_release_recursive>:
 8020abe:	4770      	bx	lr

08020ac0 <malloc>:
 8020ac0:	4b02      	ldr	r3, [pc, #8]	; (8020acc <malloc+0xc>)
 8020ac2:	4601      	mov	r1, r0
 8020ac4:	6818      	ldr	r0, [r3, #0]
 8020ac6:	f000 b88d 	b.w	8020be4 <_malloc_r>
 8020aca:	bf00      	nop
 8020acc:	20000104 	.word	0x20000104

08020ad0 <free>:
 8020ad0:	4b02      	ldr	r3, [pc, #8]	; (8020adc <free+0xc>)
 8020ad2:	4601      	mov	r1, r0
 8020ad4:	6818      	ldr	r0, [r3, #0]
 8020ad6:	f000 b819 	b.w	8020b0c <_free_r>
 8020ada:	bf00      	nop
 8020adc:	20000104 	.word	0x20000104

08020ae0 <memcpy>:
 8020ae0:	440a      	add	r2, r1
 8020ae2:	4291      	cmp	r1, r2
 8020ae4:	f100 33ff 	add.w	r3, r0, #4294967295
 8020ae8:	d100      	bne.n	8020aec <memcpy+0xc>
 8020aea:	4770      	bx	lr
 8020aec:	b510      	push	{r4, lr}
 8020aee:	f811 4b01 	ldrb.w	r4, [r1], #1
 8020af2:	f803 4f01 	strb.w	r4, [r3, #1]!
 8020af6:	4291      	cmp	r1, r2
 8020af8:	d1f9      	bne.n	8020aee <memcpy+0xe>
 8020afa:	bd10      	pop	{r4, pc}

08020afc <memset>:
 8020afc:	4402      	add	r2, r0
 8020afe:	4603      	mov	r3, r0
 8020b00:	4293      	cmp	r3, r2
 8020b02:	d100      	bne.n	8020b06 <memset+0xa>
 8020b04:	4770      	bx	lr
 8020b06:	f803 1b01 	strb.w	r1, [r3], #1
 8020b0a:	e7f9      	b.n	8020b00 <memset+0x4>

08020b0c <_free_r>:
 8020b0c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8020b0e:	2900      	cmp	r1, #0
 8020b10:	d044      	beq.n	8020b9c <_free_r+0x90>
 8020b12:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8020b16:	9001      	str	r0, [sp, #4]
 8020b18:	2b00      	cmp	r3, #0
 8020b1a:	f1a1 0404 	sub.w	r4, r1, #4
 8020b1e:	bfb8      	it	lt
 8020b20:	18e4      	addlt	r4, r4, r3
 8020b22:	f000 ff41 	bl	80219a8 <__malloc_lock>
 8020b26:	4a1e      	ldr	r2, [pc, #120]	; (8020ba0 <_free_r+0x94>)
 8020b28:	9801      	ldr	r0, [sp, #4]
 8020b2a:	6813      	ldr	r3, [r2, #0]
 8020b2c:	b933      	cbnz	r3, 8020b3c <_free_r+0x30>
 8020b2e:	6063      	str	r3, [r4, #4]
 8020b30:	6014      	str	r4, [r2, #0]
 8020b32:	b003      	add	sp, #12
 8020b34:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8020b38:	f000 bf3c 	b.w	80219b4 <__malloc_unlock>
 8020b3c:	42a3      	cmp	r3, r4
 8020b3e:	d908      	bls.n	8020b52 <_free_r+0x46>
 8020b40:	6825      	ldr	r5, [r4, #0]
 8020b42:	1961      	adds	r1, r4, r5
 8020b44:	428b      	cmp	r3, r1
 8020b46:	bf01      	itttt	eq
 8020b48:	6819      	ldreq	r1, [r3, #0]
 8020b4a:	685b      	ldreq	r3, [r3, #4]
 8020b4c:	1949      	addeq	r1, r1, r5
 8020b4e:	6021      	streq	r1, [r4, #0]
 8020b50:	e7ed      	b.n	8020b2e <_free_r+0x22>
 8020b52:	461a      	mov	r2, r3
 8020b54:	685b      	ldr	r3, [r3, #4]
 8020b56:	b10b      	cbz	r3, 8020b5c <_free_r+0x50>
 8020b58:	42a3      	cmp	r3, r4
 8020b5a:	d9fa      	bls.n	8020b52 <_free_r+0x46>
 8020b5c:	6811      	ldr	r1, [r2, #0]
 8020b5e:	1855      	adds	r5, r2, r1
 8020b60:	42a5      	cmp	r5, r4
 8020b62:	d10b      	bne.n	8020b7c <_free_r+0x70>
 8020b64:	6824      	ldr	r4, [r4, #0]
 8020b66:	4421      	add	r1, r4
 8020b68:	1854      	adds	r4, r2, r1
 8020b6a:	42a3      	cmp	r3, r4
 8020b6c:	6011      	str	r1, [r2, #0]
 8020b6e:	d1e0      	bne.n	8020b32 <_free_r+0x26>
 8020b70:	681c      	ldr	r4, [r3, #0]
 8020b72:	685b      	ldr	r3, [r3, #4]
 8020b74:	6053      	str	r3, [r2, #4]
 8020b76:	4421      	add	r1, r4
 8020b78:	6011      	str	r1, [r2, #0]
 8020b7a:	e7da      	b.n	8020b32 <_free_r+0x26>
 8020b7c:	d902      	bls.n	8020b84 <_free_r+0x78>
 8020b7e:	230c      	movs	r3, #12
 8020b80:	6003      	str	r3, [r0, #0]
 8020b82:	e7d6      	b.n	8020b32 <_free_r+0x26>
 8020b84:	6825      	ldr	r5, [r4, #0]
 8020b86:	1961      	adds	r1, r4, r5
 8020b88:	428b      	cmp	r3, r1
 8020b8a:	bf04      	itt	eq
 8020b8c:	6819      	ldreq	r1, [r3, #0]
 8020b8e:	685b      	ldreq	r3, [r3, #4]
 8020b90:	6063      	str	r3, [r4, #4]
 8020b92:	bf04      	itt	eq
 8020b94:	1949      	addeq	r1, r1, r5
 8020b96:	6021      	streq	r1, [r4, #0]
 8020b98:	6054      	str	r4, [r2, #4]
 8020b9a:	e7ca      	b.n	8020b32 <_free_r+0x26>
 8020b9c:	b003      	add	sp, #12
 8020b9e:	bd30      	pop	{r4, r5, pc}
 8020ba0:	200156b4 	.word	0x200156b4

08020ba4 <sbrk_aligned>:
 8020ba4:	b570      	push	{r4, r5, r6, lr}
 8020ba6:	4e0e      	ldr	r6, [pc, #56]	; (8020be0 <sbrk_aligned+0x3c>)
 8020ba8:	460c      	mov	r4, r1
 8020baa:	6831      	ldr	r1, [r6, #0]
 8020bac:	4605      	mov	r5, r0
 8020bae:	b911      	cbnz	r1, 8020bb6 <sbrk_aligned+0x12>
 8020bb0:	f000 fbe4 	bl	802137c <_sbrk_r>
 8020bb4:	6030      	str	r0, [r6, #0]
 8020bb6:	4621      	mov	r1, r4
 8020bb8:	4628      	mov	r0, r5
 8020bba:	f000 fbdf 	bl	802137c <_sbrk_r>
 8020bbe:	1c43      	adds	r3, r0, #1
 8020bc0:	d00a      	beq.n	8020bd8 <sbrk_aligned+0x34>
 8020bc2:	1cc4      	adds	r4, r0, #3
 8020bc4:	f024 0403 	bic.w	r4, r4, #3
 8020bc8:	42a0      	cmp	r0, r4
 8020bca:	d007      	beq.n	8020bdc <sbrk_aligned+0x38>
 8020bcc:	1a21      	subs	r1, r4, r0
 8020bce:	4628      	mov	r0, r5
 8020bd0:	f000 fbd4 	bl	802137c <_sbrk_r>
 8020bd4:	3001      	adds	r0, #1
 8020bd6:	d101      	bne.n	8020bdc <sbrk_aligned+0x38>
 8020bd8:	f04f 34ff 	mov.w	r4, #4294967295
 8020bdc:	4620      	mov	r0, r4
 8020bde:	bd70      	pop	{r4, r5, r6, pc}
 8020be0:	200156b8 	.word	0x200156b8

08020be4 <_malloc_r>:
 8020be4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8020be8:	1ccd      	adds	r5, r1, #3
 8020bea:	f025 0503 	bic.w	r5, r5, #3
 8020bee:	3508      	adds	r5, #8
 8020bf0:	2d0c      	cmp	r5, #12
 8020bf2:	bf38      	it	cc
 8020bf4:	250c      	movcc	r5, #12
 8020bf6:	2d00      	cmp	r5, #0
 8020bf8:	4607      	mov	r7, r0
 8020bfa:	db01      	blt.n	8020c00 <_malloc_r+0x1c>
 8020bfc:	42a9      	cmp	r1, r5
 8020bfe:	d905      	bls.n	8020c0c <_malloc_r+0x28>
 8020c00:	230c      	movs	r3, #12
 8020c02:	603b      	str	r3, [r7, #0]
 8020c04:	2600      	movs	r6, #0
 8020c06:	4630      	mov	r0, r6
 8020c08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8020c0c:	4e2e      	ldr	r6, [pc, #184]	; (8020cc8 <_malloc_r+0xe4>)
 8020c0e:	f000 fecb 	bl	80219a8 <__malloc_lock>
 8020c12:	6833      	ldr	r3, [r6, #0]
 8020c14:	461c      	mov	r4, r3
 8020c16:	bb34      	cbnz	r4, 8020c66 <_malloc_r+0x82>
 8020c18:	4629      	mov	r1, r5
 8020c1a:	4638      	mov	r0, r7
 8020c1c:	f7ff ffc2 	bl	8020ba4 <sbrk_aligned>
 8020c20:	1c43      	adds	r3, r0, #1
 8020c22:	4604      	mov	r4, r0
 8020c24:	d14d      	bne.n	8020cc2 <_malloc_r+0xde>
 8020c26:	6834      	ldr	r4, [r6, #0]
 8020c28:	4626      	mov	r6, r4
 8020c2a:	2e00      	cmp	r6, #0
 8020c2c:	d140      	bne.n	8020cb0 <_malloc_r+0xcc>
 8020c2e:	6823      	ldr	r3, [r4, #0]
 8020c30:	4631      	mov	r1, r6
 8020c32:	4638      	mov	r0, r7
 8020c34:	eb04 0803 	add.w	r8, r4, r3
 8020c38:	f000 fba0 	bl	802137c <_sbrk_r>
 8020c3c:	4580      	cmp	r8, r0
 8020c3e:	d13a      	bne.n	8020cb6 <_malloc_r+0xd2>
 8020c40:	6821      	ldr	r1, [r4, #0]
 8020c42:	3503      	adds	r5, #3
 8020c44:	1a6d      	subs	r5, r5, r1
 8020c46:	f025 0503 	bic.w	r5, r5, #3
 8020c4a:	3508      	adds	r5, #8
 8020c4c:	2d0c      	cmp	r5, #12
 8020c4e:	bf38      	it	cc
 8020c50:	250c      	movcc	r5, #12
 8020c52:	4629      	mov	r1, r5
 8020c54:	4638      	mov	r0, r7
 8020c56:	f7ff ffa5 	bl	8020ba4 <sbrk_aligned>
 8020c5a:	3001      	adds	r0, #1
 8020c5c:	d02b      	beq.n	8020cb6 <_malloc_r+0xd2>
 8020c5e:	6823      	ldr	r3, [r4, #0]
 8020c60:	442b      	add	r3, r5
 8020c62:	6023      	str	r3, [r4, #0]
 8020c64:	e00e      	b.n	8020c84 <_malloc_r+0xa0>
 8020c66:	6822      	ldr	r2, [r4, #0]
 8020c68:	1b52      	subs	r2, r2, r5
 8020c6a:	d41e      	bmi.n	8020caa <_malloc_r+0xc6>
 8020c6c:	2a0b      	cmp	r2, #11
 8020c6e:	d916      	bls.n	8020c9e <_malloc_r+0xba>
 8020c70:	1961      	adds	r1, r4, r5
 8020c72:	42a3      	cmp	r3, r4
 8020c74:	6025      	str	r5, [r4, #0]
 8020c76:	bf18      	it	ne
 8020c78:	6059      	strne	r1, [r3, #4]
 8020c7a:	6863      	ldr	r3, [r4, #4]
 8020c7c:	bf08      	it	eq
 8020c7e:	6031      	streq	r1, [r6, #0]
 8020c80:	5162      	str	r2, [r4, r5]
 8020c82:	604b      	str	r3, [r1, #4]
 8020c84:	4638      	mov	r0, r7
 8020c86:	f104 060b 	add.w	r6, r4, #11
 8020c8a:	f000 fe93 	bl	80219b4 <__malloc_unlock>
 8020c8e:	f026 0607 	bic.w	r6, r6, #7
 8020c92:	1d23      	adds	r3, r4, #4
 8020c94:	1af2      	subs	r2, r6, r3
 8020c96:	d0b6      	beq.n	8020c06 <_malloc_r+0x22>
 8020c98:	1b9b      	subs	r3, r3, r6
 8020c9a:	50a3      	str	r3, [r4, r2]
 8020c9c:	e7b3      	b.n	8020c06 <_malloc_r+0x22>
 8020c9e:	6862      	ldr	r2, [r4, #4]
 8020ca0:	42a3      	cmp	r3, r4
 8020ca2:	bf0c      	ite	eq
 8020ca4:	6032      	streq	r2, [r6, #0]
 8020ca6:	605a      	strne	r2, [r3, #4]
 8020ca8:	e7ec      	b.n	8020c84 <_malloc_r+0xa0>
 8020caa:	4623      	mov	r3, r4
 8020cac:	6864      	ldr	r4, [r4, #4]
 8020cae:	e7b2      	b.n	8020c16 <_malloc_r+0x32>
 8020cb0:	4634      	mov	r4, r6
 8020cb2:	6876      	ldr	r6, [r6, #4]
 8020cb4:	e7b9      	b.n	8020c2a <_malloc_r+0x46>
 8020cb6:	230c      	movs	r3, #12
 8020cb8:	603b      	str	r3, [r7, #0]
 8020cba:	4638      	mov	r0, r7
 8020cbc:	f000 fe7a 	bl	80219b4 <__malloc_unlock>
 8020cc0:	e7a1      	b.n	8020c06 <_malloc_r+0x22>
 8020cc2:	6025      	str	r5, [r4, #0]
 8020cc4:	e7de      	b.n	8020c84 <_malloc_r+0xa0>
 8020cc6:	bf00      	nop
 8020cc8:	200156b4 	.word	0x200156b4

08020ccc <__sfputc_r>:
 8020ccc:	6893      	ldr	r3, [r2, #8]
 8020cce:	3b01      	subs	r3, #1
 8020cd0:	2b00      	cmp	r3, #0
 8020cd2:	b410      	push	{r4}
 8020cd4:	6093      	str	r3, [r2, #8]
 8020cd6:	da08      	bge.n	8020cea <__sfputc_r+0x1e>
 8020cd8:	6994      	ldr	r4, [r2, #24]
 8020cda:	42a3      	cmp	r3, r4
 8020cdc:	db01      	blt.n	8020ce2 <__sfputc_r+0x16>
 8020cde:	290a      	cmp	r1, #10
 8020ce0:	d103      	bne.n	8020cea <__sfputc_r+0x1e>
 8020ce2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8020ce6:	f000 bbe1 	b.w	80214ac <__swbuf_r>
 8020cea:	6813      	ldr	r3, [r2, #0]
 8020cec:	1c58      	adds	r0, r3, #1
 8020cee:	6010      	str	r0, [r2, #0]
 8020cf0:	7019      	strb	r1, [r3, #0]
 8020cf2:	4608      	mov	r0, r1
 8020cf4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8020cf8:	4770      	bx	lr

08020cfa <__sfputs_r>:
 8020cfa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8020cfc:	4606      	mov	r6, r0
 8020cfe:	460f      	mov	r7, r1
 8020d00:	4614      	mov	r4, r2
 8020d02:	18d5      	adds	r5, r2, r3
 8020d04:	42ac      	cmp	r4, r5
 8020d06:	d101      	bne.n	8020d0c <__sfputs_r+0x12>
 8020d08:	2000      	movs	r0, #0
 8020d0a:	e007      	b.n	8020d1c <__sfputs_r+0x22>
 8020d0c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8020d10:	463a      	mov	r2, r7
 8020d12:	4630      	mov	r0, r6
 8020d14:	f7ff ffda 	bl	8020ccc <__sfputc_r>
 8020d18:	1c43      	adds	r3, r0, #1
 8020d1a:	d1f3      	bne.n	8020d04 <__sfputs_r+0xa>
 8020d1c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08020d20 <_vfiprintf_r>:
 8020d20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020d24:	460d      	mov	r5, r1
 8020d26:	b09d      	sub	sp, #116	; 0x74
 8020d28:	4614      	mov	r4, r2
 8020d2a:	4698      	mov	r8, r3
 8020d2c:	4606      	mov	r6, r0
 8020d2e:	b118      	cbz	r0, 8020d38 <_vfiprintf_r+0x18>
 8020d30:	6983      	ldr	r3, [r0, #24]
 8020d32:	b90b      	cbnz	r3, 8020d38 <_vfiprintf_r+0x18>
 8020d34:	f7ff fdec 	bl	8020910 <__sinit>
 8020d38:	4b89      	ldr	r3, [pc, #548]	; (8020f60 <_vfiprintf_r+0x240>)
 8020d3a:	429d      	cmp	r5, r3
 8020d3c:	d11b      	bne.n	8020d76 <_vfiprintf_r+0x56>
 8020d3e:	6875      	ldr	r5, [r6, #4]
 8020d40:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8020d42:	07d9      	lsls	r1, r3, #31
 8020d44:	d405      	bmi.n	8020d52 <_vfiprintf_r+0x32>
 8020d46:	89ab      	ldrh	r3, [r5, #12]
 8020d48:	059a      	lsls	r2, r3, #22
 8020d4a:	d402      	bmi.n	8020d52 <_vfiprintf_r+0x32>
 8020d4c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8020d4e:	f7ff feb4 	bl	8020aba <__retarget_lock_acquire_recursive>
 8020d52:	89ab      	ldrh	r3, [r5, #12]
 8020d54:	071b      	lsls	r3, r3, #28
 8020d56:	d501      	bpl.n	8020d5c <_vfiprintf_r+0x3c>
 8020d58:	692b      	ldr	r3, [r5, #16]
 8020d5a:	b9eb      	cbnz	r3, 8020d98 <_vfiprintf_r+0x78>
 8020d5c:	4629      	mov	r1, r5
 8020d5e:	4630      	mov	r0, r6
 8020d60:	f000 fc08 	bl	8021574 <__swsetup_r>
 8020d64:	b1c0      	cbz	r0, 8020d98 <_vfiprintf_r+0x78>
 8020d66:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8020d68:	07dc      	lsls	r4, r3, #31
 8020d6a:	d50e      	bpl.n	8020d8a <_vfiprintf_r+0x6a>
 8020d6c:	f04f 30ff 	mov.w	r0, #4294967295
 8020d70:	b01d      	add	sp, #116	; 0x74
 8020d72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020d76:	4b7b      	ldr	r3, [pc, #492]	; (8020f64 <_vfiprintf_r+0x244>)
 8020d78:	429d      	cmp	r5, r3
 8020d7a:	d101      	bne.n	8020d80 <_vfiprintf_r+0x60>
 8020d7c:	68b5      	ldr	r5, [r6, #8]
 8020d7e:	e7df      	b.n	8020d40 <_vfiprintf_r+0x20>
 8020d80:	4b79      	ldr	r3, [pc, #484]	; (8020f68 <_vfiprintf_r+0x248>)
 8020d82:	429d      	cmp	r5, r3
 8020d84:	bf08      	it	eq
 8020d86:	68f5      	ldreq	r5, [r6, #12]
 8020d88:	e7da      	b.n	8020d40 <_vfiprintf_r+0x20>
 8020d8a:	89ab      	ldrh	r3, [r5, #12]
 8020d8c:	0598      	lsls	r0, r3, #22
 8020d8e:	d4ed      	bmi.n	8020d6c <_vfiprintf_r+0x4c>
 8020d90:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8020d92:	f7ff fe94 	bl	8020abe <__retarget_lock_release_recursive>
 8020d96:	e7e9      	b.n	8020d6c <_vfiprintf_r+0x4c>
 8020d98:	2300      	movs	r3, #0
 8020d9a:	9309      	str	r3, [sp, #36]	; 0x24
 8020d9c:	2320      	movs	r3, #32
 8020d9e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8020da2:	f8cd 800c 	str.w	r8, [sp, #12]
 8020da6:	2330      	movs	r3, #48	; 0x30
 8020da8:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8020f6c <_vfiprintf_r+0x24c>
 8020dac:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8020db0:	f04f 0901 	mov.w	r9, #1
 8020db4:	4623      	mov	r3, r4
 8020db6:	469a      	mov	sl, r3
 8020db8:	f813 2b01 	ldrb.w	r2, [r3], #1
 8020dbc:	b10a      	cbz	r2, 8020dc2 <_vfiprintf_r+0xa2>
 8020dbe:	2a25      	cmp	r2, #37	; 0x25
 8020dc0:	d1f9      	bne.n	8020db6 <_vfiprintf_r+0x96>
 8020dc2:	ebba 0b04 	subs.w	fp, sl, r4
 8020dc6:	d00b      	beq.n	8020de0 <_vfiprintf_r+0xc0>
 8020dc8:	465b      	mov	r3, fp
 8020dca:	4622      	mov	r2, r4
 8020dcc:	4629      	mov	r1, r5
 8020dce:	4630      	mov	r0, r6
 8020dd0:	f7ff ff93 	bl	8020cfa <__sfputs_r>
 8020dd4:	3001      	adds	r0, #1
 8020dd6:	f000 80aa 	beq.w	8020f2e <_vfiprintf_r+0x20e>
 8020dda:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8020ddc:	445a      	add	r2, fp
 8020dde:	9209      	str	r2, [sp, #36]	; 0x24
 8020de0:	f89a 3000 	ldrb.w	r3, [sl]
 8020de4:	2b00      	cmp	r3, #0
 8020de6:	f000 80a2 	beq.w	8020f2e <_vfiprintf_r+0x20e>
 8020dea:	2300      	movs	r3, #0
 8020dec:	f04f 32ff 	mov.w	r2, #4294967295
 8020df0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8020df4:	f10a 0a01 	add.w	sl, sl, #1
 8020df8:	9304      	str	r3, [sp, #16]
 8020dfa:	9307      	str	r3, [sp, #28]
 8020dfc:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8020e00:	931a      	str	r3, [sp, #104]	; 0x68
 8020e02:	4654      	mov	r4, sl
 8020e04:	2205      	movs	r2, #5
 8020e06:	f814 1b01 	ldrb.w	r1, [r4], #1
 8020e0a:	4858      	ldr	r0, [pc, #352]	; (8020f6c <_vfiprintf_r+0x24c>)
 8020e0c:	f7df f9f0 	bl	80001f0 <memchr>
 8020e10:	9a04      	ldr	r2, [sp, #16]
 8020e12:	b9d8      	cbnz	r0, 8020e4c <_vfiprintf_r+0x12c>
 8020e14:	06d1      	lsls	r1, r2, #27
 8020e16:	bf44      	itt	mi
 8020e18:	2320      	movmi	r3, #32
 8020e1a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8020e1e:	0713      	lsls	r3, r2, #28
 8020e20:	bf44      	itt	mi
 8020e22:	232b      	movmi	r3, #43	; 0x2b
 8020e24:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8020e28:	f89a 3000 	ldrb.w	r3, [sl]
 8020e2c:	2b2a      	cmp	r3, #42	; 0x2a
 8020e2e:	d015      	beq.n	8020e5c <_vfiprintf_r+0x13c>
 8020e30:	9a07      	ldr	r2, [sp, #28]
 8020e32:	4654      	mov	r4, sl
 8020e34:	2000      	movs	r0, #0
 8020e36:	f04f 0c0a 	mov.w	ip, #10
 8020e3a:	4621      	mov	r1, r4
 8020e3c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8020e40:	3b30      	subs	r3, #48	; 0x30
 8020e42:	2b09      	cmp	r3, #9
 8020e44:	d94e      	bls.n	8020ee4 <_vfiprintf_r+0x1c4>
 8020e46:	b1b0      	cbz	r0, 8020e76 <_vfiprintf_r+0x156>
 8020e48:	9207      	str	r2, [sp, #28]
 8020e4a:	e014      	b.n	8020e76 <_vfiprintf_r+0x156>
 8020e4c:	eba0 0308 	sub.w	r3, r0, r8
 8020e50:	fa09 f303 	lsl.w	r3, r9, r3
 8020e54:	4313      	orrs	r3, r2
 8020e56:	9304      	str	r3, [sp, #16]
 8020e58:	46a2      	mov	sl, r4
 8020e5a:	e7d2      	b.n	8020e02 <_vfiprintf_r+0xe2>
 8020e5c:	9b03      	ldr	r3, [sp, #12]
 8020e5e:	1d19      	adds	r1, r3, #4
 8020e60:	681b      	ldr	r3, [r3, #0]
 8020e62:	9103      	str	r1, [sp, #12]
 8020e64:	2b00      	cmp	r3, #0
 8020e66:	bfbb      	ittet	lt
 8020e68:	425b      	neglt	r3, r3
 8020e6a:	f042 0202 	orrlt.w	r2, r2, #2
 8020e6e:	9307      	strge	r3, [sp, #28]
 8020e70:	9307      	strlt	r3, [sp, #28]
 8020e72:	bfb8      	it	lt
 8020e74:	9204      	strlt	r2, [sp, #16]
 8020e76:	7823      	ldrb	r3, [r4, #0]
 8020e78:	2b2e      	cmp	r3, #46	; 0x2e
 8020e7a:	d10c      	bne.n	8020e96 <_vfiprintf_r+0x176>
 8020e7c:	7863      	ldrb	r3, [r4, #1]
 8020e7e:	2b2a      	cmp	r3, #42	; 0x2a
 8020e80:	d135      	bne.n	8020eee <_vfiprintf_r+0x1ce>
 8020e82:	9b03      	ldr	r3, [sp, #12]
 8020e84:	1d1a      	adds	r2, r3, #4
 8020e86:	681b      	ldr	r3, [r3, #0]
 8020e88:	9203      	str	r2, [sp, #12]
 8020e8a:	2b00      	cmp	r3, #0
 8020e8c:	bfb8      	it	lt
 8020e8e:	f04f 33ff 	movlt.w	r3, #4294967295
 8020e92:	3402      	adds	r4, #2
 8020e94:	9305      	str	r3, [sp, #20]
 8020e96:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8020f7c <_vfiprintf_r+0x25c>
 8020e9a:	7821      	ldrb	r1, [r4, #0]
 8020e9c:	2203      	movs	r2, #3
 8020e9e:	4650      	mov	r0, sl
 8020ea0:	f7df f9a6 	bl	80001f0 <memchr>
 8020ea4:	b140      	cbz	r0, 8020eb8 <_vfiprintf_r+0x198>
 8020ea6:	2340      	movs	r3, #64	; 0x40
 8020ea8:	eba0 000a 	sub.w	r0, r0, sl
 8020eac:	fa03 f000 	lsl.w	r0, r3, r0
 8020eb0:	9b04      	ldr	r3, [sp, #16]
 8020eb2:	4303      	orrs	r3, r0
 8020eb4:	3401      	adds	r4, #1
 8020eb6:	9304      	str	r3, [sp, #16]
 8020eb8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8020ebc:	482c      	ldr	r0, [pc, #176]	; (8020f70 <_vfiprintf_r+0x250>)
 8020ebe:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8020ec2:	2206      	movs	r2, #6
 8020ec4:	f7df f994 	bl	80001f0 <memchr>
 8020ec8:	2800      	cmp	r0, #0
 8020eca:	d03f      	beq.n	8020f4c <_vfiprintf_r+0x22c>
 8020ecc:	4b29      	ldr	r3, [pc, #164]	; (8020f74 <_vfiprintf_r+0x254>)
 8020ece:	bb1b      	cbnz	r3, 8020f18 <_vfiprintf_r+0x1f8>
 8020ed0:	9b03      	ldr	r3, [sp, #12]
 8020ed2:	3307      	adds	r3, #7
 8020ed4:	f023 0307 	bic.w	r3, r3, #7
 8020ed8:	3308      	adds	r3, #8
 8020eda:	9303      	str	r3, [sp, #12]
 8020edc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020ede:	443b      	add	r3, r7
 8020ee0:	9309      	str	r3, [sp, #36]	; 0x24
 8020ee2:	e767      	b.n	8020db4 <_vfiprintf_r+0x94>
 8020ee4:	fb0c 3202 	mla	r2, ip, r2, r3
 8020ee8:	460c      	mov	r4, r1
 8020eea:	2001      	movs	r0, #1
 8020eec:	e7a5      	b.n	8020e3a <_vfiprintf_r+0x11a>
 8020eee:	2300      	movs	r3, #0
 8020ef0:	3401      	adds	r4, #1
 8020ef2:	9305      	str	r3, [sp, #20]
 8020ef4:	4619      	mov	r1, r3
 8020ef6:	f04f 0c0a 	mov.w	ip, #10
 8020efa:	4620      	mov	r0, r4
 8020efc:	f810 2b01 	ldrb.w	r2, [r0], #1
 8020f00:	3a30      	subs	r2, #48	; 0x30
 8020f02:	2a09      	cmp	r2, #9
 8020f04:	d903      	bls.n	8020f0e <_vfiprintf_r+0x1ee>
 8020f06:	2b00      	cmp	r3, #0
 8020f08:	d0c5      	beq.n	8020e96 <_vfiprintf_r+0x176>
 8020f0a:	9105      	str	r1, [sp, #20]
 8020f0c:	e7c3      	b.n	8020e96 <_vfiprintf_r+0x176>
 8020f0e:	fb0c 2101 	mla	r1, ip, r1, r2
 8020f12:	4604      	mov	r4, r0
 8020f14:	2301      	movs	r3, #1
 8020f16:	e7f0      	b.n	8020efa <_vfiprintf_r+0x1da>
 8020f18:	ab03      	add	r3, sp, #12
 8020f1a:	9300      	str	r3, [sp, #0]
 8020f1c:	462a      	mov	r2, r5
 8020f1e:	4b16      	ldr	r3, [pc, #88]	; (8020f78 <_vfiprintf_r+0x258>)
 8020f20:	a904      	add	r1, sp, #16
 8020f22:	4630      	mov	r0, r6
 8020f24:	f3af 8000 	nop.w
 8020f28:	4607      	mov	r7, r0
 8020f2a:	1c78      	adds	r0, r7, #1
 8020f2c:	d1d6      	bne.n	8020edc <_vfiprintf_r+0x1bc>
 8020f2e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8020f30:	07d9      	lsls	r1, r3, #31
 8020f32:	d405      	bmi.n	8020f40 <_vfiprintf_r+0x220>
 8020f34:	89ab      	ldrh	r3, [r5, #12]
 8020f36:	059a      	lsls	r2, r3, #22
 8020f38:	d402      	bmi.n	8020f40 <_vfiprintf_r+0x220>
 8020f3a:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8020f3c:	f7ff fdbf 	bl	8020abe <__retarget_lock_release_recursive>
 8020f40:	89ab      	ldrh	r3, [r5, #12]
 8020f42:	065b      	lsls	r3, r3, #25
 8020f44:	f53f af12 	bmi.w	8020d6c <_vfiprintf_r+0x4c>
 8020f48:	9809      	ldr	r0, [sp, #36]	; 0x24
 8020f4a:	e711      	b.n	8020d70 <_vfiprintf_r+0x50>
 8020f4c:	ab03      	add	r3, sp, #12
 8020f4e:	9300      	str	r3, [sp, #0]
 8020f50:	462a      	mov	r2, r5
 8020f52:	4b09      	ldr	r3, [pc, #36]	; (8020f78 <_vfiprintf_r+0x258>)
 8020f54:	a904      	add	r1, sp, #16
 8020f56:	4630      	mov	r0, r6
 8020f58:	f000 f880 	bl	802105c <_printf_i>
 8020f5c:	e7e4      	b.n	8020f28 <_vfiprintf_r+0x208>
 8020f5e:	bf00      	nop
 8020f60:	08024698 	.word	0x08024698
 8020f64:	080246b8 	.word	0x080246b8
 8020f68:	08024678 	.word	0x08024678
 8020f6c:	080246dc 	.word	0x080246dc
 8020f70:	080246e6 	.word	0x080246e6
 8020f74:	00000000 	.word	0x00000000
 8020f78:	08020cfb 	.word	0x08020cfb
 8020f7c:	080246e2 	.word	0x080246e2

08020f80 <_printf_common>:
 8020f80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020f84:	4616      	mov	r6, r2
 8020f86:	4699      	mov	r9, r3
 8020f88:	688a      	ldr	r2, [r1, #8]
 8020f8a:	690b      	ldr	r3, [r1, #16]
 8020f8c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8020f90:	4293      	cmp	r3, r2
 8020f92:	bfb8      	it	lt
 8020f94:	4613      	movlt	r3, r2
 8020f96:	6033      	str	r3, [r6, #0]
 8020f98:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8020f9c:	4607      	mov	r7, r0
 8020f9e:	460c      	mov	r4, r1
 8020fa0:	b10a      	cbz	r2, 8020fa6 <_printf_common+0x26>
 8020fa2:	3301      	adds	r3, #1
 8020fa4:	6033      	str	r3, [r6, #0]
 8020fa6:	6823      	ldr	r3, [r4, #0]
 8020fa8:	0699      	lsls	r1, r3, #26
 8020faa:	bf42      	ittt	mi
 8020fac:	6833      	ldrmi	r3, [r6, #0]
 8020fae:	3302      	addmi	r3, #2
 8020fb0:	6033      	strmi	r3, [r6, #0]
 8020fb2:	6825      	ldr	r5, [r4, #0]
 8020fb4:	f015 0506 	ands.w	r5, r5, #6
 8020fb8:	d106      	bne.n	8020fc8 <_printf_common+0x48>
 8020fba:	f104 0a19 	add.w	sl, r4, #25
 8020fbe:	68e3      	ldr	r3, [r4, #12]
 8020fc0:	6832      	ldr	r2, [r6, #0]
 8020fc2:	1a9b      	subs	r3, r3, r2
 8020fc4:	42ab      	cmp	r3, r5
 8020fc6:	dc26      	bgt.n	8021016 <_printf_common+0x96>
 8020fc8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8020fcc:	1e13      	subs	r3, r2, #0
 8020fce:	6822      	ldr	r2, [r4, #0]
 8020fd0:	bf18      	it	ne
 8020fd2:	2301      	movne	r3, #1
 8020fd4:	0692      	lsls	r2, r2, #26
 8020fd6:	d42b      	bmi.n	8021030 <_printf_common+0xb0>
 8020fd8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8020fdc:	4649      	mov	r1, r9
 8020fde:	4638      	mov	r0, r7
 8020fe0:	47c0      	blx	r8
 8020fe2:	3001      	adds	r0, #1
 8020fe4:	d01e      	beq.n	8021024 <_printf_common+0xa4>
 8020fe6:	6823      	ldr	r3, [r4, #0]
 8020fe8:	68e5      	ldr	r5, [r4, #12]
 8020fea:	6832      	ldr	r2, [r6, #0]
 8020fec:	f003 0306 	and.w	r3, r3, #6
 8020ff0:	2b04      	cmp	r3, #4
 8020ff2:	bf08      	it	eq
 8020ff4:	1aad      	subeq	r5, r5, r2
 8020ff6:	68a3      	ldr	r3, [r4, #8]
 8020ff8:	6922      	ldr	r2, [r4, #16]
 8020ffa:	bf0c      	ite	eq
 8020ffc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8021000:	2500      	movne	r5, #0
 8021002:	4293      	cmp	r3, r2
 8021004:	bfc4      	itt	gt
 8021006:	1a9b      	subgt	r3, r3, r2
 8021008:	18ed      	addgt	r5, r5, r3
 802100a:	2600      	movs	r6, #0
 802100c:	341a      	adds	r4, #26
 802100e:	42b5      	cmp	r5, r6
 8021010:	d11a      	bne.n	8021048 <_printf_common+0xc8>
 8021012:	2000      	movs	r0, #0
 8021014:	e008      	b.n	8021028 <_printf_common+0xa8>
 8021016:	2301      	movs	r3, #1
 8021018:	4652      	mov	r2, sl
 802101a:	4649      	mov	r1, r9
 802101c:	4638      	mov	r0, r7
 802101e:	47c0      	blx	r8
 8021020:	3001      	adds	r0, #1
 8021022:	d103      	bne.n	802102c <_printf_common+0xac>
 8021024:	f04f 30ff 	mov.w	r0, #4294967295
 8021028:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802102c:	3501      	adds	r5, #1
 802102e:	e7c6      	b.n	8020fbe <_printf_common+0x3e>
 8021030:	18e1      	adds	r1, r4, r3
 8021032:	1c5a      	adds	r2, r3, #1
 8021034:	2030      	movs	r0, #48	; 0x30
 8021036:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802103a:	4422      	add	r2, r4
 802103c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8021040:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8021044:	3302      	adds	r3, #2
 8021046:	e7c7      	b.n	8020fd8 <_printf_common+0x58>
 8021048:	2301      	movs	r3, #1
 802104a:	4622      	mov	r2, r4
 802104c:	4649      	mov	r1, r9
 802104e:	4638      	mov	r0, r7
 8021050:	47c0      	blx	r8
 8021052:	3001      	adds	r0, #1
 8021054:	d0e6      	beq.n	8021024 <_printf_common+0xa4>
 8021056:	3601      	adds	r6, #1
 8021058:	e7d9      	b.n	802100e <_printf_common+0x8e>
	...

0802105c <_printf_i>:
 802105c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8021060:	7e0f      	ldrb	r7, [r1, #24]
 8021062:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8021064:	2f78      	cmp	r7, #120	; 0x78
 8021066:	4691      	mov	r9, r2
 8021068:	4680      	mov	r8, r0
 802106a:	460c      	mov	r4, r1
 802106c:	469a      	mov	sl, r3
 802106e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8021072:	d807      	bhi.n	8021084 <_printf_i+0x28>
 8021074:	2f62      	cmp	r7, #98	; 0x62
 8021076:	d80a      	bhi.n	802108e <_printf_i+0x32>
 8021078:	2f00      	cmp	r7, #0
 802107a:	f000 80d8 	beq.w	802122e <_printf_i+0x1d2>
 802107e:	2f58      	cmp	r7, #88	; 0x58
 8021080:	f000 80a3 	beq.w	80211ca <_printf_i+0x16e>
 8021084:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8021088:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802108c:	e03a      	b.n	8021104 <_printf_i+0xa8>
 802108e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8021092:	2b15      	cmp	r3, #21
 8021094:	d8f6      	bhi.n	8021084 <_printf_i+0x28>
 8021096:	a101      	add	r1, pc, #4	; (adr r1, 802109c <_printf_i+0x40>)
 8021098:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802109c:	080210f5 	.word	0x080210f5
 80210a0:	08021109 	.word	0x08021109
 80210a4:	08021085 	.word	0x08021085
 80210a8:	08021085 	.word	0x08021085
 80210ac:	08021085 	.word	0x08021085
 80210b0:	08021085 	.word	0x08021085
 80210b4:	08021109 	.word	0x08021109
 80210b8:	08021085 	.word	0x08021085
 80210bc:	08021085 	.word	0x08021085
 80210c0:	08021085 	.word	0x08021085
 80210c4:	08021085 	.word	0x08021085
 80210c8:	08021215 	.word	0x08021215
 80210cc:	08021139 	.word	0x08021139
 80210d0:	080211f7 	.word	0x080211f7
 80210d4:	08021085 	.word	0x08021085
 80210d8:	08021085 	.word	0x08021085
 80210dc:	08021237 	.word	0x08021237
 80210e0:	08021085 	.word	0x08021085
 80210e4:	08021139 	.word	0x08021139
 80210e8:	08021085 	.word	0x08021085
 80210ec:	08021085 	.word	0x08021085
 80210f0:	080211ff 	.word	0x080211ff
 80210f4:	682b      	ldr	r3, [r5, #0]
 80210f6:	1d1a      	adds	r2, r3, #4
 80210f8:	681b      	ldr	r3, [r3, #0]
 80210fa:	602a      	str	r2, [r5, #0]
 80210fc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8021100:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8021104:	2301      	movs	r3, #1
 8021106:	e0a3      	b.n	8021250 <_printf_i+0x1f4>
 8021108:	6820      	ldr	r0, [r4, #0]
 802110a:	6829      	ldr	r1, [r5, #0]
 802110c:	0606      	lsls	r6, r0, #24
 802110e:	f101 0304 	add.w	r3, r1, #4
 8021112:	d50a      	bpl.n	802112a <_printf_i+0xce>
 8021114:	680e      	ldr	r6, [r1, #0]
 8021116:	602b      	str	r3, [r5, #0]
 8021118:	2e00      	cmp	r6, #0
 802111a:	da03      	bge.n	8021124 <_printf_i+0xc8>
 802111c:	232d      	movs	r3, #45	; 0x2d
 802111e:	4276      	negs	r6, r6
 8021120:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8021124:	485e      	ldr	r0, [pc, #376]	; (80212a0 <_printf_i+0x244>)
 8021126:	230a      	movs	r3, #10
 8021128:	e019      	b.n	802115e <_printf_i+0x102>
 802112a:	680e      	ldr	r6, [r1, #0]
 802112c:	602b      	str	r3, [r5, #0]
 802112e:	f010 0f40 	tst.w	r0, #64	; 0x40
 8021132:	bf18      	it	ne
 8021134:	b236      	sxthne	r6, r6
 8021136:	e7ef      	b.n	8021118 <_printf_i+0xbc>
 8021138:	682b      	ldr	r3, [r5, #0]
 802113a:	6820      	ldr	r0, [r4, #0]
 802113c:	1d19      	adds	r1, r3, #4
 802113e:	6029      	str	r1, [r5, #0]
 8021140:	0601      	lsls	r1, r0, #24
 8021142:	d501      	bpl.n	8021148 <_printf_i+0xec>
 8021144:	681e      	ldr	r6, [r3, #0]
 8021146:	e002      	b.n	802114e <_printf_i+0xf2>
 8021148:	0646      	lsls	r6, r0, #25
 802114a:	d5fb      	bpl.n	8021144 <_printf_i+0xe8>
 802114c:	881e      	ldrh	r6, [r3, #0]
 802114e:	4854      	ldr	r0, [pc, #336]	; (80212a0 <_printf_i+0x244>)
 8021150:	2f6f      	cmp	r7, #111	; 0x6f
 8021152:	bf0c      	ite	eq
 8021154:	2308      	moveq	r3, #8
 8021156:	230a      	movne	r3, #10
 8021158:	2100      	movs	r1, #0
 802115a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802115e:	6865      	ldr	r5, [r4, #4]
 8021160:	60a5      	str	r5, [r4, #8]
 8021162:	2d00      	cmp	r5, #0
 8021164:	bfa2      	ittt	ge
 8021166:	6821      	ldrge	r1, [r4, #0]
 8021168:	f021 0104 	bicge.w	r1, r1, #4
 802116c:	6021      	strge	r1, [r4, #0]
 802116e:	b90e      	cbnz	r6, 8021174 <_printf_i+0x118>
 8021170:	2d00      	cmp	r5, #0
 8021172:	d04d      	beq.n	8021210 <_printf_i+0x1b4>
 8021174:	4615      	mov	r5, r2
 8021176:	fbb6 f1f3 	udiv	r1, r6, r3
 802117a:	fb03 6711 	mls	r7, r3, r1, r6
 802117e:	5dc7      	ldrb	r7, [r0, r7]
 8021180:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8021184:	4637      	mov	r7, r6
 8021186:	42bb      	cmp	r3, r7
 8021188:	460e      	mov	r6, r1
 802118a:	d9f4      	bls.n	8021176 <_printf_i+0x11a>
 802118c:	2b08      	cmp	r3, #8
 802118e:	d10b      	bne.n	80211a8 <_printf_i+0x14c>
 8021190:	6823      	ldr	r3, [r4, #0]
 8021192:	07de      	lsls	r6, r3, #31
 8021194:	d508      	bpl.n	80211a8 <_printf_i+0x14c>
 8021196:	6923      	ldr	r3, [r4, #16]
 8021198:	6861      	ldr	r1, [r4, #4]
 802119a:	4299      	cmp	r1, r3
 802119c:	bfde      	ittt	le
 802119e:	2330      	movle	r3, #48	; 0x30
 80211a0:	f805 3c01 	strble.w	r3, [r5, #-1]
 80211a4:	f105 35ff 	addle.w	r5, r5, #4294967295
 80211a8:	1b52      	subs	r2, r2, r5
 80211aa:	6122      	str	r2, [r4, #16]
 80211ac:	f8cd a000 	str.w	sl, [sp]
 80211b0:	464b      	mov	r3, r9
 80211b2:	aa03      	add	r2, sp, #12
 80211b4:	4621      	mov	r1, r4
 80211b6:	4640      	mov	r0, r8
 80211b8:	f7ff fee2 	bl	8020f80 <_printf_common>
 80211bc:	3001      	adds	r0, #1
 80211be:	d14c      	bne.n	802125a <_printf_i+0x1fe>
 80211c0:	f04f 30ff 	mov.w	r0, #4294967295
 80211c4:	b004      	add	sp, #16
 80211c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80211ca:	4835      	ldr	r0, [pc, #212]	; (80212a0 <_printf_i+0x244>)
 80211cc:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 80211d0:	6829      	ldr	r1, [r5, #0]
 80211d2:	6823      	ldr	r3, [r4, #0]
 80211d4:	f851 6b04 	ldr.w	r6, [r1], #4
 80211d8:	6029      	str	r1, [r5, #0]
 80211da:	061d      	lsls	r5, r3, #24
 80211dc:	d514      	bpl.n	8021208 <_printf_i+0x1ac>
 80211de:	07df      	lsls	r7, r3, #31
 80211e0:	bf44      	itt	mi
 80211e2:	f043 0320 	orrmi.w	r3, r3, #32
 80211e6:	6023      	strmi	r3, [r4, #0]
 80211e8:	b91e      	cbnz	r6, 80211f2 <_printf_i+0x196>
 80211ea:	6823      	ldr	r3, [r4, #0]
 80211ec:	f023 0320 	bic.w	r3, r3, #32
 80211f0:	6023      	str	r3, [r4, #0]
 80211f2:	2310      	movs	r3, #16
 80211f4:	e7b0      	b.n	8021158 <_printf_i+0xfc>
 80211f6:	6823      	ldr	r3, [r4, #0]
 80211f8:	f043 0320 	orr.w	r3, r3, #32
 80211fc:	6023      	str	r3, [r4, #0]
 80211fe:	2378      	movs	r3, #120	; 0x78
 8021200:	4828      	ldr	r0, [pc, #160]	; (80212a4 <_printf_i+0x248>)
 8021202:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8021206:	e7e3      	b.n	80211d0 <_printf_i+0x174>
 8021208:	0659      	lsls	r1, r3, #25
 802120a:	bf48      	it	mi
 802120c:	b2b6      	uxthmi	r6, r6
 802120e:	e7e6      	b.n	80211de <_printf_i+0x182>
 8021210:	4615      	mov	r5, r2
 8021212:	e7bb      	b.n	802118c <_printf_i+0x130>
 8021214:	682b      	ldr	r3, [r5, #0]
 8021216:	6826      	ldr	r6, [r4, #0]
 8021218:	6961      	ldr	r1, [r4, #20]
 802121a:	1d18      	adds	r0, r3, #4
 802121c:	6028      	str	r0, [r5, #0]
 802121e:	0635      	lsls	r5, r6, #24
 8021220:	681b      	ldr	r3, [r3, #0]
 8021222:	d501      	bpl.n	8021228 <_printf_i+0x1cc>
 8021224:	6019      	str	r1, [r3, #0]
 8021226:	e002      	b.n	802122e <_printf_i+0x1d2>
 8021228:	0670      	lsls	r0, r6, #25
 802122a:	d5fb      	bpl.n	8021224 <_printf_i+0x1c8>
 802122c:	8019      	strh	r1, [r3, #0]
 802122e:	2300      	movs	r3, #0
 8021230:	6123      	str	r3, [r4, #16]
 8021232:	4615      	mov	r5, r2
 8021234:	e7ba      	b.n	80211ac <_printf_i+0x150>
 8021236:	682b      	ldr	r3, [r5, #0]
 8021238:	1d1a      	adds	r2, r3, #4
 802123a:	602a      	str	r2, [r5, #0]
 802123c:	681d      	ldr	r5, [r3, #0]
 802123e:	6862      	ldr	r2, [r4, #4]
 8021240:	2100      	movs	r1, #0
 8021242:	4628      	mov	r0, r5
 8021244:	f7de ffd4 	bl	80001f0 <memchr>
 8021248:	b108      	cbz	r0, 802124e <_printf_i+0x1f2>
 802124a:	1b40      	subs	r0, r0, r5
 802124c:	6060      	str	r0, [r4, #4]
 802124e:	6863      	ldr	r3, [r4, #4]
 8021250:	6123      	str	r3, [r4, #16]
 8021252:	2300      	movs	r3, #0
 8021254:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8021258:	e7a8      	b.n	80211ac <_printf_i+0x150>
 802125a:	6923      	ldr	r3, [r4, #16]
 802125c:	462a      	mov	r2, r5
 802125e:	4649      	mov	r1, r9
 8021260:	4640      	mov	r0, r8
 8021262:	47d0      	blx	sl
 8021264:	3001      	adds	r0, #1
 8021266:	d0ab      	beq.n	80211c0 <_printf_i+0x164>
 8021268:	6823      	ldr	r3, [r4, #0]
 802126a:	079b      	lsls	r3, r3, #30
 802126c:	d413      	bmi.n	8021296 <_printf_i+0x23a>
 802126e:	68e0      	ldr	r0, [r4, #12]
 8021270:	9b03      	ldr	r3, [sp, #12]
 8021272:	4298      	cmp	r0, r3
 8021274:	bfb8      	it	lt
 8021276:	4618      	movlt	r0, r3
 8021278:	e7a4      	b.n	80211c4 <_printf_i+0x168>
 802127a:	2301      	movs	r3, #1
 802127c:	4632      	mov	r2, r6
 802127e:	4649      	mov	r1, r9
 8021280:	4640      	mov	r0, r8
 8021282:	47d0      	blx	sl
 8021284:	3001      	adds	r0, #1
 8021286:	d09b      	beq.n	80211c0 <_printf_i+0x164>
 8021288:	3501      	adds	r5, #1
 802128a:	68e3      	ldr	r3, [r4, #12]
 802128c:	9903      	ldr	r1, [sp, #12]
 802128e:	1a5b      	subs	r3, r3, r1
 8021290:	42ab      	cmp	r3, r5
 8021292:	dcf2      	bgt.n	802127a <_printf_i+0x21e>
 8021294:	e7eb      	b.n	802126e <_printf_i+0x212>
 8021296:	2500      	movs	r5, #0
 8021298:	f104 0619 	add.w	r6, r4, #25
 802129c:	e7f5      	b.n	802128a <_printf_i+0x22e>
 802129e:	bf00      	nop
 80212a0:	080246ed 	.word	0x080246ed
 80212a4:	080246fe 	.word	0x080246fe

080212a8 <cleanup_glue>:
 80212a8:	b538      	push	{r3, r4, r5, lr}
 80212aa:	460c      	mov	r4, r1
 80212ac:	6809      	ldr	r1, [r1, #0]
 80212ae:	4605      	mov	r5, r0
 80212b0:	b109      	cbz	r1, 80212b6 <cleanup_glue+0xe>
 80212b2:	f7ff fff9 	bl	80212a8 <cleanup_glue>
 80212b6:	4621      	mov	r1, r4
 80212b8:	4628      	mov	r0, r5
 80212ba:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80212be:	f7ff bc25 	b.w	8020b0c <_free_r>
	...

080212c4 <_reclaim_reent>:
 80212c4:	4b2c      	ldr	r3, [pc, #176]	; (8021378 <_reclaim_reent+0xb4>)
 80212c6:	681b      	ldr	r3, [r3, #0]
 80212c8:	4283      	cmp	r3, r0
 80212ca:	b570      	push	{r4, r5, r6, lr}
 80212cc:	4604      	mov	r4, r0
 80212ce:	d051      	beq.n	8021374 <_reclaim_reent+0xb0>
 80212d0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80212d2:	b143      	cbz	r3, 80212e6 <_reclaim_reent+0x22>
 80212d4:	68db      	ldr	r3, [r3, #12]
 80212d6:	2b00      	cmp	r3, #0
 80212d8:	d14a      	bne.n	8021370 <_reclaim_reent+0xac>
 80212da:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80212dc:	6819      	ldr	r1, [r3, #0]
 80212de:	b111      	cbz	r1, 80212e6 <_reclaim_reent+0x22>
 80212e0:	4620      	mov	r0, r4
 80212e2:	f7ff fc13 	bl	8020b0c <_free_r>
 80212e6:	6961      	ldr	r1, [r4, #20]
 80212e8:	b111      	cbz	r1, 80212f0 <_reclaim_reent+0x2c>
 80212ea:	4620      	mov	r0, r4
 80212ec:	f7ff fc0e 	bl	8020b0c <_free_r>
 80212f0:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80212f2:	b111      	cbz	r1, 80212fa <_reclaim_reent+0x36>
 80212f4:	4620      	mov	r0, r4
 80212f6:	f7ff fc09 	bl	8020b0c <_free_r>
 80212fa:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80212fc:	b111      	cbz	r1, 8021304 <_reclaim_reent+0x40>
 80212fe:	4620      	mov	r0, r4
 8021300:	f7ff fc04 	bl	8020b0c <_free_r>
 8021304:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 8021306:	b111      	cbz	r1, 802130e <_reclaim_reent+0x4a>
 8021308:	4620      	mov	r0, r4
 802130a:	f7ff fbff 	bl	8020b0c <_free_r>
 802130e:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8021310:	b111      	cbz	r1, 8021318 <_reclaim_reent+0x54>
 8021312:	4620      	mov	r0, r4
 8021314:	f7ff fbfa 	bl	8020b0c <_free_r>
 8021318:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 802131a:	b111      	cbz	r1, 8021322 <_reclaim_reent+0x5e>
 802131c:	4620      	mov	r0, r4
 802131e:	f7ff fbf5 	bl	8020b0c <_free_r>
 8021322:	6da1      	ldr	r1, [r4, #88]	; 0x58
 8021324:	b111      	cbz	r1, 802132c <_reclaim_reent+0x68>
 8021326:	4620      	mov	r0, r4
 8021328:	f7ff fbf0 	bl	8020b0c <_free_r>
 802132c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802132e:	b111      	cbz	r1, 8021336 <_reclaim_reent+0x72>
 8021330:	4620      	mov	r0, r4
 8021332:	f7ff fbeb 	bl	8020b0c <_free_r>
 8021336:	69a3      	ldr	r3, [r4, #24]
 8021338:	b1e3      	cbz	r3, 8021374 <_reclaim_reent+0xb0>
 802133a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 802133c:	4620      	mov	r0, r4
 802133e:	4798      	blx	r3
 8021340:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8021342:	b1b9      	cbz	r1, 8021374 <_reclaim_reent+0xb0>
 8021344:	4620      	mov	r0, r4
 8021346:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802134a:	f7ff bfad 	b.w	80212a8 <cleanup_glue>
 802134e:	5949      	ldr	r1, [r1, r5]
 8021350:	b941      	cbnz	r1, 8021364 <_reclaim_reent+0xa0>
 8021352:	3504      	adds	r5, #4
 8021354:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8021356:	2d80      	cmp	r5, #128	; 0x80
 8021358:	68d9      	ldr	r1, [r3, #12]
 802135a:	d1f8      	bne.n	802134e <_reclaim_reent+0x8a>
 802135c:	4620      	mov	r0, r4
 802135e:	f7ff fbd5 	bl	8020b0c <_free_r>
 8021362:	e7ba      	b.n	80212da <_reclaim_reent+0x16>
 8021364:	680e      	ldr	r6, [r1, #0]
 8021366:	4620      	mov	r0, r4
 8021368:	f7ff fbd0 	bl	8020b0c <_free_r>
 802136c:	4631      	mov	r1, r6
 802136e:	e7ef      	b.n	8021350 <_reclaim_reent+0x8c>
 8021370:	2500      	movs	r5, #0
 8021372:	e7ef      	b.n	8021354 <_reclaim_reent+0x90>
 8021374:	bd70      	pop	{r4, r5, r6, pc}
 8021376:	bf00      	nop
 8021378:	20000104 	.word	0x20000104

0802137c <_sbrk_r>:
 802137c:	b538      	push	{r3, r4, r5, lr}
 802137e:	4d06      	ldr	r5, [pc, #24]	; (8021398 <_sbrk_r+0x1c>)
 8021380:	2300      	movs	r3, #0
 8021382:	4604      	mov	r4, r0
 8021384:	4608      	mov	r0, r1
 8021386:	602b      	str	r3, [r5, #0]
 8021388:	f7e0 fefc 	bl	8002184 <_sbrk>
 802138c:	1c43      	adds	r3, r0, #1
 802138e:	d102      	bne.n	8021396 <_sbrk_r+0x1a>
 8021390:	682b      	ldr	r3, [r5, #0]
 8021392:	b103      	cbz	r3, 8021396 <_sbrk_r+0x1a>
 8021394:	6023      	str	r3, [r4, #0]
 8021396:	bd38      	pop	{r3, r4, r5, pc}
 8021398:	200157c4 	.word	0x200157c4

0802139c <_raise_r>:
 802139c:	291f      	cmp	r1, #31
 802139e:	b538      	push	{r3, r4, r5, lr}
 80213a0:	4604      	mov	r4, r0
 80213a2:	460d      	mov	r5, r1
 80213a4:	d904      	bls.n	80213b0 <_raise_r+0x14>
 80213a6:	2316      	movs	r3, #22
 80213a8:	6003      	str	r3, [r0, #0]
 80213aa:	f04f 30ff 	mov.w	r0, #4294967295
 80213ae:	bd38      	pop	{r3, r4, r5, pc}
 80213b0:	6c42      	ldr	r2, [r0, #68]	; 0x44
 80213b2:	b112      	cbz	r2, 80213ba <_raise_r+0x1e>
 80213b4:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80213b8:	b94b      	cbnz	r3, 80213ce <_raise_r+0x32>
 80213ba:	4620      	mov	r0, r4
 80213bc:	f000 f830 	bl	8021420 <_getpid_r>
 80213c0:	462a      	mov	r2, r5
 80213c2:	4601      	mov	r1, r0
 80213c4:	4620      	mov	r0, r4
 80213c6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80213ca:	f000 b817 	b.w	80213fc <_kill_r>
 80213ce:	2b01      	cmp	r3, #1
 80213d0:	d00a      	beq.n	80213e8 <_raise_r+0x4c>
 80213d2:	1c59      	adds	r1, r3, #1
 80213d4:	d103      	bne.n	80213de <_raise_r+0x42>
 80213d6:	2316      	movs	r3, #22
 80213d8:	6003      	str	r3, [r0, #0]
 80213da:	2001      	movs	r0, #1
 80213dc:	e7e7      	b.n	80213ae <_raise_r+0x12>
 80213de:	2400      	movs	r4, #0
 80213e0:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 80213e4:	4628      	mov	r0, r5
 80213e6:	4798      	blx	r3
 80213e8:	2000      	movs	r0, #0
 80213ea:	e7e0      	b.n	80213ae <_raise_r+0x12>

080213ec <raise>:
 80213ec:	4b02      	ldr	r3, [pc, #8]	; (80213f8 <raise+0xc>)
 80213ee:	4601      	mov	r1, r0
 80213f0:	6818      	ldr	r0, [r3, #0]
 80213f2:	f7ff bfd3 	b.w	802139c <_raise_r>
 80213f6:	bf00      	nop
 80213f8:	20000104 	.word	0x20000104

080213fc <_kill_r>:
 80213fc:	b538      	push	{r3, r4, r5, lr}
 80213fe:	4d07      	ldr	r5, [pc, #28]	; (802141c <_kill_r+0x20>)
 8021400:	2300      	movs	r3, #0
 8021402:	4604      	mov	r4, r0
 8021404:	4608      	mov	r0, r1
 8021406:	4611      	mov	r1, r2
 8021408:	602b      	str	r3, [r5, #0]
 802140a:	f7e0 fe85 	bl	8002118 <_kill>
 802140e:	1c43      	adds	r3, r0, #1
 8021410:	d102      	bne.n	8021418 <_kill_r+0x1c>
 8021412:	682b      	ldr	r3, [r5, #0]
 8021414:	b103      	cbz	r3, 8021418 <_kill_r+0x1c>
 8021416:	6023      	str	r3, [r4, #0]
 8021418:	bd38      	pop	{r3, r4, r5, pc}
 802141a:	bf00      	nop
 802141c:	200157c4 	.word	0x200157c4

08021420 <_getpid_r>:
 8021420:	f7e0 be78 	b.w	8002114 <_getpid>

08021424 <__sread>:
 8021424:	b510      	push	{r4, lr}
 8021426:	460c      	mov	r4, r1
 8021428:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802142c:	f000 fac8 	bl	80219c0 <_read_r>
 8021430:	2800      	cmp	r0, #0
 8021432:	bfab      	itete	ge
 8021434:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8021436:	89a3      	ldrhlt	r3, [r4, #12]
 8021438:	181b      	addge	r3, r3, r0
 802143a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802143e:	bfac      	ite	ge
 8021440:	6563      	strge	r3, [r4, #84]	; 0x54
 8021442:	81a3      	strhlt	r3, [r4, #12]
 8021444:	bd10      	pop	{r4, pc}

08021446 <__swrite>:
 8021446:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802144a:	461f      	mov	r7, r3
 802144c:	898b      	ldrh	r3, [r1, #12]
 802144e:	05db      	lsls	r3, r3, #23
 8021450:	4605      	mov	r5, r0
 8021452:	460c      	mov	r4, r1
 8021454:	4616      	mov	r6, r2
 8021456:	d505      	bpl.n	8021464 <__swrite+0x1e>
 8021458:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802145c:	2302      	movs	r3, #2
 802145e:	2200      	movs	r2, #0
 8021460:	f000 fa2a 	bl	80218b8 <_lseek_r>
 8021464:	89a3      	ldrh	r3, [r4, #12]
 8021466:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802146a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802146e:	81a3      	strh	r3, [r4, #12]
 8021470:	4632      	mov	r2, r6
 8021472:	463b      	mov	r3, r7
 8021474:	4628      	mov	r0, r5
 8021476:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802147a:	f000 b869 	b.w	8021550 <_write_r>

0802147e <__sseek>:
 802147e:	b510      	push	{r4, lr}
 8021480:	460c      	mov	r4, r1
 8021482:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021486:	f000 fa17 	bl	80218b8 <_lseek_r>
 802148a:	1c43      	adds	r3, r0, #1
 802148c:	89a3      	ldrh	r3, [r4, #12]
 802148e:	bf15      	itete	ne
 8021490:	6560      	strne	r0, [r4, #84]	; 0x54
 8021492:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8021496:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802149a:	81a3      	strheq	r3, [r4, #12]
 802149c:	bf18      	it	ne
 802149e:	81a3      	strhne	r3, [r4, #12]
 80214a0:	bd10      	pop	{r4, pc}

080214a2 <__sclose>:
 80214a2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80214a6:	f000 b935 	b.w	8021714 <_close_r>
	...

080214ac <__swbuf_r>:
 80214ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80214ae:	460e      	mov	r6, r1
 80214b0:	4614      	mov	r4, r2
 80214b2:	4605      	mov	r5, r0
 80214b4:	b118      	cbz	r0, 80214be <__swbuf_r+0x12>
 80214b6:	6983      	ldr	r3, [r0, #24]
 80214b8:	b90b      	cbnz	r3, 80214be <__swbuf_r+0x12>
 80214ba:	f7ff fa29 	bl	8020910 <__sinit>
 80214be:	4b21      	ldr	r3, [pc, #132]	; (8021544 <__swbuf_r+0x98>)
 80214c0:	429c      	cmp	r4, r3
 80214c2:	d12b      	bne.n	802151c <__swbuf_r+0x70>
 80214c4:	686c      	ldr	r4, [r5, #4]
 80214c6:	69a3      	ldr	r3, [r4, #24]
 80214c8:	60a3      	str	r3, [r4, #8]
 80214ca:	89a3      	ldrh	r3, [r4, #12]
 80214cc:	071a      	lsls	r2, r3, #28
 80214ce:	d52f      	bpl.n	8021530 <__swbuf_r+0x84>
 80214d0:	6923      	ldr	r3, [r4, #16]
 80214d2:	b36b      	cbz	r3, 8021530 <__swbuf_r+0x84>
 80214d4:	6923      	ldr	r3, [r4, #16]
 80214d6:	6820      	ldr	r0, [r4, #0]
 80214d8:	1ac0      	subs	r0, r0, r3
 80214da:	6963      	ldr	r3, [r4, #20]
 80214dc:	b2f6      	uxtb	r6, r6
 80214de:	4283      	cmp	r3, r0
 80214e0:	4637      	mov	r7, r6
 80214e2:	dc04      	bgt.n	80214ee <__swbuf_r+0x42>
 80214e4:	4621      	mov	r1, r4
 80214e6:	4628      	mov	r0, r5
 80214e8:	f000 f9aa 	bl	8021840 <_fflush_r>
 80214ec:	bb30      	cbnz	r0, 802153c <__swbuf_r+0x90>
 80214ee:	68a3      	ldr	r3, [r4, #8]
 80214f0:	3b01      	subs	r3, #1
 80214f2:	60a3      	str	r3, [r4, #8]
 80214f4:	6823      	ldr	r3, [r4, #0]
 80214f6:	1c5a      	adds	r2, r3, #1
 80214f8:	6022      	str	r2, [r4, #0]
 80214fa:	701e      	strb	r6, [r3, #0]
 80214fc:	6963      	ldr	r3, [r4, #20]
 80214fe:	3001      	adds	r0, #1
 8021500:	4283      	cmp	r3, r0
 8021502:	d004      	beq.n	802150e <__swbuf_r+0x62>
 8021504:	89a3      	ldrh	r3, [r4, #12]
 8021506:	07db      	lsls	r3, r3, #31
 8021508:	d506      	bpl.n	8021518 <__swbuf_r+0x6c>
 802150a:	2e0a      	cmp	r6, #10
 802150c:	d104      	bne.n	8021518 <__swbuf_r+0x6c>
 802150e:	4621      	mov	r1, r4
 8021510:	4628      	mov	r0, r5
 8021512:	f000 f995 	bl	8021840 <_fflush_r>
 8021516:	b988      	cbnz	r0, 802153c <__swbuf_r+0x90>
 8021518:	4638      	mov	r0, r7
 802151a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802151c:	4b0a      	ldr	r3, [pc, #40]	; (8021548 <__swbuf_r+0x9c>)
 802151e:	429c      	cmp	r4, r3
 8021520:	d101      	bne.n	8021526 <__swbuf_r+0x7a>
 8021522:	68ac      	ldr	r4, [r5, #8]
 8021524:	e7cf      	b.n	80214c6 <__swbuf_r+0x1a>
 8021526:	4b09      	ldr	r3, [pc, #36]	; (802154c <__swbuf_r+0xa0>)
 8021528:	429c      	cmp	r4, r3
 802152a:	bf08      	it	eq
 802152c:	68ec      	ldreq	r4, [r5, #12]
 802152e:	e7ca      	b.n	80214c6 <__swbuf_r+0x1a>
 8021530:	4621      	mov	r1, r4
 8021532:	4628      	mov	r0, r5
 8021534:	f000 f81e 	bl	8021574 <__swsetup_r>
 8021538:	2800      	cmp	r0, #0
 802153a:	d0cb      	beq.n	80214d4 <__swbuf_r+0x28>
 802153c:	f04f 37ff 	mov.w	r7, #4294967295
 8021540:	e7ea      	b.n	8021518 <__swbuf_r+0x6c>
 8021542:	bf00      	nop
 8021544:	08024698 	.word	0x08024698
 8021548:	080246b8 	.word	0x080246b8
 802154c:	08024678 	.word	0x08024678

08021550 <_write_r>:
 8021550:	b538      	push	{r3, r4, r5, lr}
 8021552:	4d07      	ldr	r5, [pc, #28]	; (8021570 <_write_r+0x20>)
 8021554:	4604      	mov	r4, r0
 8021556:	4608      	mov	r0, r1
 8021558:	4611      	mov	r1, r2
 802155a:	2200      	movs	r2, #0
 802155c:	602a      	str	r2, [r5, #0]
 802155e:	461a      	mov	r2, r3
 8021560:	f7e0 fdf6 	bl	8002150 <_write>
 8021564:	1c43      	adds	r3, r0, #1
 8021566:	d102      	bne.n	802156e <_write_r+0x1e>
 8021568:	682b      	ldr	r3, [r5, #0]
 802156a:	b103      	cbz	r3, 802156e <_write_r+0x1e>
 802156c:	6023      	str	r3, [r4, #0]
 802156e:	bd38      	pop	{r3, r4, r5, pc}
 8021570:	200157c4 	.word	0x200157c4

08021574 <__swsetup_r>:
 8021574:	4b32      	ldr	r3, [pc, #200]	; (8021640 <__swsetup_r+0xcc>)
 8021576:	b570      	push	{r4, r5, r6, lr}
 8021578:	681d      	ldr	r5, [r3, #0]
 802157a:	4606      	mov	r6, r0
 802157c:	460c      	mov	r4, r1
 802157e:	b125      	cbz	r5, 802158a <__swsetup_r+0x16>
 8021580:	69ab      	ldr	r3, [r5, #24]
 8021582:	b913      	cbnz	r3, 802158a <__swsetup_r+0x16>
 8021584:	4628      	mov	r0, r5
 8021586:	f7ff f9c3 	bl	8020910 <__sinit>
 802158a:	4b2e      	ldr	r3, [pc, #184]	; (8021644 <__swsetup_r+0xd0>)
 802158c:	429c      	cmp	r4, r3
 802158e:	d10f      	bne.n	80215b0 <__swsetup_r+0x3c>
 8021590:	686c      	ldr	r4, [r5, #4]
 8021592:	89a3      	ldrh	r3, [r4, #12]
 8021594:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8021598:	0719      	lsls	r1, r3, #28
 802159a:	d42c      	bmi.n	80215f6 <__swsetup_r+0x82>
 802159c:	06dd      	lsls	r5, r3, #27
 802159e:	d411      	bmi.n	80215c4 <__swsetup_r+0x50>
 80215a0:	2309      	movs	r3, #9
 80215a2:	6033      	str	r3, [r6, #0]
 80215a4:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80215a8:	81a3      	strh	r3, [r4, #12]
 80215aa:	f04f 30ff 	mov.w	r0, #4294967295
 80215ae:	e03e      	b.n	802162e <__swsetup_r+0xba>
 80215b0:	4b25      	ldr	r3, [pc, #148]	; (8021648 <__swsetup_r+0xd4>)
 80215b2:	429c      	cmp	r4, r3
 80215b4:	d101      	bne.n	80215ba <__swsetup_r+0x46>
 80215b6:	68ac      	ldr	r4, [r5, #8]
 80215b8:	e7eb      	b.n	8021592 <__swsetup_r+0x1e>
 80215ba:	4b24      	ldr	r3, [pc, #144]	; (802164c <__swsetup_r+0xd8>)
 80215bc:	429c      	cmp	r4, r3
 80215be:	bf08      	it	eq
 80215c0:	68ec      	ldreq	r4, [r5, #12]
 80215c2:	e7e6      	b.n	8021592 <__swsetup_r+0x1e>
 80215c4:	0758      	lsls	r0, r3, #29
 80215c6:	d512      	bpl.n	80215ee <__swsetup_r+0x7a>
 80215c8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80215ca:	b141      	cbz	r1, 80215de <__swsetup_r+0x6a>
 80215cc:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80215d0:	4299      	cmp	r1, r3
 80215d2:	d002      	beq.n	80215da <__swsetup_r+0x66>
 80215d4:	4630      	mov	r0, r6
 80215d6:	f7ff fa99 	bl	8020b0c <_free_r>
 80215da:	2300      	movs	r3, #0
 80215dc:	6363      	str	r3, [r4, #52]	; 0x34
 80215de:	89a3      	ldrh	r3, [r4, #12]
 80215e0:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80215e4:	81a3      	strh	r3, [r4, #12]
 80215e6:	2300      	movs	r3, #0
 80215e8:	6063      	str	r3, [r4, #4]
 80215ea:	6923      	ldr	r3, [r4, #16]
 80215ec:	6023      	str	r3, [r4, #0]
 80215ee:	89a3      	ldrh	r3, [r4, #12]
 80215f0:	f043 0308 	orr.w	r3, r3, #8
 80215f4:	81a3      	strh	r3, [r4, #12]
 80215f6:	6923      	ldr	r3, [r4, #16]
 80215f8:	b94b      	cbnz	r3, 802160e <__swsetup_r+0x9a>
 80215fa:	89a3      	ldrh	r3, [r4, #12]
 80215fc:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8021600:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8021604:	d003      	beq.n	802160e <__swsetup_r+0x9a>
 8021606:	4621      	mov	r1, r4
 8021608:	4630      	mov	r0, r6
 802160a:	f000 f98d 	bl	8021928 <__smakebuf_r>
 802160e:	89a0      	ldrh	r0, [r4, #12]
 8021610:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8021614:	f010 0301 	ands.w	r3, r0, #1
 8021618:	d00a      	beq.n	8021630 <__swsetup_r+0xbc>
 802161a:	2300      	movs	r3, #0
 802161c:	60a3      	str	r3, [r4, #8]
 802161e:	6963      	ldr	r3, [r4, #20]
 8021620:	425b      	negs	r3, r3
 8021622:	61a3      	str	r3, [r4, #24]
 8021624:	6923      	ldr	r3, [r4, #16]
 8021626:	b943      	cbnz	r3, 802163a <__swsetup_r+0xc6>
 8021628:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802162c:	d1ba      	bne.n	80215a4 <__swsetup_r+0x30>
 802162e:	bd70      	pop	{r4, r5, r6, pc}
 8021630:	0781      	lsls	r1, r0, #30
 8021632:	bf58      	it	pl
 8021634:	6963      	ldrpl	r3, [r4, #20]
 8021636:	60a3      	str	r3, [r4, #8]
 8021638:	e7f4      	b.n	8021624 <__swsetup_r+0xb0>
 802163a:	2000      	movs	r0, #0
 802163c:	e7f7      	b.n	802162e <__swsetup_r+0xba>
 802163e:	bf00      	nop
 8021640:	20000104 	.word	0x20000104
 8021644:	08024698 	.word	0x08024698
 8021648:	080246b8 	.word	0x080246b8
 802164c:	08024678 	.word	0x08024678

08021650 <__register_exitproc>:
 8021650:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8021654:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 8021710 <__register_exitproc+0xc0>
 8021658:	4606      	mov	r6, r0
 802165a:	f8d8 0000 	ldr.w	r0, [r8]
 802165e:	461f      	mov	r7, r3
 8021660:	460d      	mov	r5, r1
 8021662:	4691      	mov	r9, r2
 8021664:	f7ff fa29 	bl	8020aba <__retarget_lock_acquire_recursive>
 8021668:	4b25      	ldr	r3, [pc, #148]	; (8021700 <__register_exitproc+0xb0>)
 802166a:	681c      	ldr	r4, [r3, #0]
 802166c:	b934      	cbnz	r4, 802167c <__register_exitproc+0x2c>
 802166e:	4c25      	ldr	r4, [pc, #148]	; (8021704 <__register_exitproc+0xb4>)
 8021670:	601c      	str	r4, [r3, #0]
 8021672:	4b25      	ldr	r3, [pc, #148]	; (8021708 <__register_exitproc+0xb8>)
 8021674:	b113      	cbz	r3, 802167c <__register_exitproc+0x2c>
 8021676:	681b      	ldr	r3, [r3, #0]
 8021678:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802167c:	6863      	ldr	r3, [r4, #4]
 802167e:	2b1f      	cmp	r3, #31
 8021680:	dd07      	ble.n	8021692 <__register_exitproc+0x42>
 8021682:	f8d8 0000 	ldr.w	r0, [r8]
 8021686:	f7ff fa1a 	bl	8020abe <__retarget_lock_release_recursive>
 802168a:	f04f 30ff 	mov.w	r0, #4294967295
 802168e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8021692:	b34e      	cbz	r6, 80216e8 <__register_exitproc+0x98>
 8021694:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8021698:	b988      	cbnz	r0, 80216be <__register_exitproc+0x6e>
 802169a:	4b1c      	ldr	r3, [pc, #112]	; (802170c <__register_exitproc+0xbc>)
 802169c:	b923      	cbnz	r3, 80216a8 <__register_exitproc+0x58>
 802169e:	f8d8 0000 	ldr.w	r0, [r8]
 80216a2:	f7ff fa0b 	bl	8020abc <__retarget_lock_release>
 80216a6:	e7f0      	b.n	802168a <__register_exitproc+0x3a>
 80216a8:	f44f 7084 	mov.w	r0, #264	; 0x108
 80216ac:	f7ff fa08 	bl	8020ac0 <malloc>
 80216b0:	2800      	cmp	r0, #0
 80216b2:	d0f4      	beq.n	802169e <__register_exitproc+0x4e>
 80216b4:	2300      	movs	r3, #0
 80216b6:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 80216ba:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 80216be:	6863      	ldr	r3, [r4, #4]
 80216c0:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 80216c4:	2201      	movs	r2, #1
 80216c6:	409a      	lsls	r2, r3
 80216c8:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 80216cc:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 80216d0:	4313      	orrs	r3, r2
 80216d2:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 80216d6:	2e02      	cmp	r6, #2
 80216d8:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 80216dc:	bf02      	ittt	eq
 80216de:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 80216e2:	4313      	orreq	r3, r2
 80216e4:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 80216e8:	6863      	ldr	r3, [r4, #4]
 80216ea:	f8d8 0000 	ldr.w	r0, [r8]
 80216ee:	1c5a      	adds	r2, r3, #1
 80216f0:	3302      	adds	r3, #2
 80216f2:	6062      	str	r2, [r4, #4]
 80216f4:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 80216f8:	f7ff f9e1 	bl	8020abe <__retarget_lock_release_recursive>
 80216fc:	2000      	movs	r0, #0
 80216fe:	e7c6      	b.n	802168e <__register_exitproc+0x3e>
 8021700:	20015854 	.word	0x20015854
 8021704:	200157c8 	.word	0x200157c8
 8021708:	08024710 	.word	0x08024710
 802170c:	08020ac1 	.word	0x08020ac1
 8021710:	20000168 	.word	0x20000168

08021714 <_close_r>:
 8021714:	b538      	push	{r3, r4, r5, lr}
 8021716:	4d06      	ldr	r5, [pc, #24]	; (8021730 <_close_r+0x1c>)
 8021718:	2300      	movs	r3, #0
 802171a:	4604      	mov	r4, r0
 802171c:	4608      	mov	r0, r1
 802171e:	602b      	str	r3, [r5, #0]
 8021720:	f7e0 fd24 	bl	800216c <_close>
 8021724:	1c43      	adds	r3, r0, #1
 8021726:	d102      	bne.n	802172e <_close_r+0x1a>
 8021728:	682b      	ldr	r3, [r5, #0]
 802172a:	b103      	cbz	r3, 802172e <_close_r+0x1a>
 802172c:	6023      	str	r3, [r4, #0]
 802172e:	bd38      	pop	{r3, r4, r5, pc}
 8021730:	200157c4 	.word	0x200157c4

08021734 <__sflush_r>:
 8021734:	898a      	ldrh	r2, [r1, #12]
 8021736:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802173a:	4605      	mov	r5, r0
 802173c:	0710      	lsls	r0, r2, #28
 802173e:	460c      	mov	r4, r1
 8021740:	d458      	bmi.n	80217f4 <__sflush_r+0xc0>
 8021742:	684b      	ldr	r3, [r1, #4]
 8021744:	2b00      	cmp	r3, #0
 8021746:	dc05      	bgt.n	8021754 <__sflush_r+0x20>
 8021748:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802174a:	2b00      	cmp	r3, #0
 802174c:	dc02      	bgt.n	8021754 <__sflush_r+0x20>
 802174e:	2000      	movs	r0, #0
 8021750:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8021754:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8021756:	2e00      	cmp	r6, #0
 8021758:	d0f9      	beq.n	802174e <__sflush_r+0x1a>
 802175a:	2300      	movs	r3, #0
 802175c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8021760:	682f      	ldr	r7, [r5, #0]
 8021762:	602b      	str	r3, [r5, #0]
 8021764:	d032      	beq.n	80217cc <__sflush_r+0x98>
 8021766:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8021768:	89a3      	ldrh	r3, [r4, #12]
 802176a:	075a      	lsls	r2, r3, #29
 802176c:	d505      	bpl.n	802177a <__sflush_r+0x46>
 802176e:	6863      	ldr	r3, [r4, #4]
 8021770:	1ac0      	subs	r0, r0, r3
 8021772:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8021774:	b10b      	cbz	r3, 802177a <__sflush_r+0x46>
 8021776:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8021778:	1ac0      	subs	r0, r0, r3
 802177a:	2300      	movs	r3, #0
 802177c:	4602      	mov	r2, r0
 802177e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8021780:	6a21      	ldr	r1, [r4, #32]
 8021782:	4628      	mov	r0, r5
 8021784:	47b0      	blx	r6
 8021786:	1c43      	adds	r3, r0, #1
 8021788:	89a3      	ldrh	r3, [r4, #12]
 802178a:	d106      	bne.n	802179a <__sflush_r+0x66>
 802178c:	6829      	ldr	r1, [r5, #0]
 802178e:	291d      	cmp	r1, #29
 8021790:	d82c      	bhi.n	80217ec <__sflush_r+0xb8>
 8021792:	4a2a      	ldr	r2, [pc, #168]	; (802183c <__sflush_r+0x108>)
 8021794:	40ca      	lsrs	r2, r1
 8021796:	07d6      	lsls	r6, r2, #31
 8021798:	d528      	bpl.n	80217ec <__sflush_r+0xb8>
 802179a:	2200      	movs	r2, #0
 802179c:	6062      	str	r2, [r4, #4]
 802179e:	04d9      	lsls	r1, r3, #19
 80217a0:	6922      	ldr	r2, [r4, #16]
 80217a2:	6022      	str	r2, [r4, #0]
 80217a4:	d504      	bpl.n	80217b0 <__sflush_r+0x7c>
 80217a6:	1c42      	adds	r2, r0, #1
 80217a8:	d101      	bne.n	80217ae <__sflush_r+0x7a>
 80217aa:	682b      	ldr	r3, [r5, #0]
 80217ac:	b903      	cbnz	r3, 80217b0 <__sflush_r+0x7c>
 80217ae:	6560      	str	r0, [r4, #84]	; 0x54
 80217b0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80217b2:	602f      	str	r7, [r5, #0]
 80217b4:	2900      	cmp	r1, #0
 80217b6:	d0ca      	beq.n	802174e <__sflush_r+0x1a>
 80217b8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80217bc:	4299      	cmp	r1, r3
 80217be:	d002      	beq.n	80217c6 <__sflush_r+0x92>
 80217c0:	4628      	mov	r0, r5
 80217c2:	f7ff f9a3 	bl	8020b0c <_free_r>
 80217c6:	2000      	movs	r0, #0
 80217c8:	6360      	str	r0, [r4, #52]	; 0x34
 80217ca:	e7c1      	b.n	8021750 <__sflush_r+0x1c>
 80217cc:	6a21      	ldr	r1, [r4, #32]
 80217ce:	2301      	movs	r3, #1
 80217d0:	4628      	mov	r0, r5
 80217d2:	47b0      	blx	r6
 80217d4:	1c41      	adds	r1, r0, #1
 80217d6:	d1c7      	bne.n	8021768 <__sflush_r+0x34>
 80217d8:	682b      	ldr	r3, [r5, #0]
 80217da:	2b00      	cmp	r3, #0
 80217dc:	d0c4      	beq.n	8021768 <__sflush_r+0x34>
 80217de:	2b1d      	cmp	r3, #29
 80217e0:	d001      	beq.n	80217e6 <__sflush_r+0xb2>
 80217e2:	2b16      	cmp	r3, #22
 80217e4:	d101      	bne.n	80217ea <__sflush_r+0xb6>
 80217e6:	602f      	str	r7, [r5, #0]
 80217e8:	e7b1      	b.n	802174e <__sflush_r+0x1a>
 80217ea:	89a3      	ldrh	r3, [r4, #12]
 80217ec:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80217f0:	81a3      	strh	r3, [r4, #12]
 80217f2:	e7ad      	b.n	8021750 <__sflush_r+0x1c>
 80217f4:	690f      	ldr	r7, [r1, #16]
 80217f6:	2f00      	cmp	r7, #0
 80217f8:	d0a9      	beq.n	802174e <__sflush_r+0x1a>
 80217fa:	0793      	lsls	r3, r2, #30
 80217fc:	680e      	ldr	r6, [r1, #0]
 80217fe:	bf08      	it	eq
 8021800:	694b      	ldreq	r3, [r1, #20]
 8021802:	600f      	str	r7, [r1, #0]
 8021804:	bf18      	it	ne
 8021806:	2300      	movne	r3, #0
 8021808:	eba6 0807 	sub.w	r8, r6, r7
 802180c:	608b      	str	r3, [r1, #8]
 802180e:	f1b8 0f00 	cmp.w	r8, #0
 8021812:	dd9c      	ble.n	802174e <__sflush_r+0x1a>
 8021814:	6a21      	ldr	r1, [r4, #32]
 8021816:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8021818:	4643      	mov	r3, r8
 802181a:	463a      	mov	r2, r7
 802181c:	4628      	mov	r0, r5
 802181e:	47b0      	blx	r6
 8021820:	2800      	cmp	r0, #0
 8021822:	dc06      	bgt.n	8021832 <__sflush_r+0xfe>
 8021824:	89a3      	ldrh	r3, [r4, #12]
 8021826:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802182a:	81a3      	strh	r3, [r4, #12]
 802182c:	f04f 30ff 	mov.w	r0, #4294967295
 8021830:	e78e      	b.n	8021750 <__sflush_r+0x1c>
 8021832:	4407      	add	r7, r0
 8021834:	eba8 0800 	sub.w	r8, r8, r0
 8021838:	e7e9      	b.n	802180e <__sflush_r+0xda>
 802183a:	bf00      	nop
 802183c:	20400001 	.word	0x20400001

08021840 <_fflush_r>:
 8021840:	b538      	push	{r3, r4, r5, lr}
 8021842:	690b      	ldr	r3, [r1, #16]
 8021844:	4605      	mov	r5, r0
 8021846:	460c      	mov	r4, r1
 8021848:	b913      	cbnz	r3, 8021850 <_fflush_r+0x10>
 802184a:	2500      	movs	r5, #0
 802184c:	4628      	mov	r0, r5
 802184e:	bd38      	pop	{r3, r4, r5, pc}
 8021850:	b118      	cbz	r0, 802185a <_fflush_r+0x1a>
 8021852:	6983      	ldr	r3, [r0, #24]
 8021854:	b90b      	cbnz	r3, 802185a <_fflush_r+0x1a>
 8021856:	f7ff f85b 	bl	8020910 <__sinit>
 802185a:	4b14      	ldr	r3, [pc, #80]	; (80218ac <_fflush_r+0x6c>)
 802185c:	429c      	cmp	r4, r3
 802185e:	d11b      	bne.n	8021898 <_fflush_r+0x58>
 8021860:	686c      	ldr	r4, [r5, #4]
 8021862:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021866:	2b00      	cmp	r3, #0
 8021868:	d0ef      	beq.n	802184a <_fflush_r+0xa>
 802186a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802186c:	07d0      	lsls	r0, r2, #31
 802186e:	d404      	bmi.n	802187a <_fflush_r+0x3a>
 8021870:	0599      	lsls	r1, r3, #22
 8021872:	d402      	bmi.n	802187a <_fflush_r+0x3a>
 8021874:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8021876:	f7ff f920 	bl	8020aba <__retarget_lock_acquire_recursive>
 802187a:	4628      	mov	r0, r5
 802187c:	4621      	mov	r1, r4
 802187e:	f7ff ff59 	bl	8021734 <__sflush_r>
 8021882:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8021884:	07da      	lsls	r2, r3, #31
 8021886:	4605      	mov	r5, r0
 8021888:	d4e0      	bmi.n	802184c <_fflush_r+0xc>
 802188a:	89a3      	ldrh	r3, [r4, #12]
 802188c:	059b      	lsls	r3, r3, #22
 802188e:	d4dd      	bmi.n	802184c <_fflush_r+0xc>
 8021890:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8021892:	f7ff f914 	bl	8020abe <__retarget_lock_release_recursive>
 8021896:	e7d9      	b.n	802184c <_fflush_r+0xc>
 8021898:	4b05      	ldr	r3, [pc, #20]	; (80218b0 <_fflush_r+0x70>)
 802189a:	429c      	cmp	r4, r3
 802189c:	d101      	bne.n	80218a2 <_fflush_r+0x62>
 802189e:	68ac      	ldr	r4, [r5, #8]
 80218a0:	e7df      	b.n	8021862 <_fflush_r+0x22>
 80218a2:	4b04      	ldr	r3, [pc, #16]	; (80218b4 <_fflush_r+0x74>)
 80218a4:	429c      	cmp	r4, r3
 80218a6:	bf08      	it	eq
 80218a8:	68ec      	ldreq	r4, [r5, #12]
 80218aa:	e7da      	b.n	8021862 <_fflush_r+0x22>
 80218ac:	08024698 	.word	0x08024698
 80218b0:	080246b8 	.word	0x080246b8
 80218b4:	08024678 	.word	0x08024678

080218b8 <_lseek_r>:
 80218b8:	b538      	push	{r3, r4, r5, lr}
 80218ba:	4d07      	ldr	r5, [pc, #28]	; (80218d8 <_lseek_r+0x20>)
 80218bc:	4604      	mov	r4, r0
 80218be:	4608      	mov	r0, r1
 80218c0:	4611      	mov	r1, r2
 80218c2:	2200      	movs	r2, #0
 80218c4:	602a      	str	r2, [r5, #0]
 80218c6:	461a      	mov	r2, r3
 80218c8:	f7e0 fc5a 	bl	8002180 <_lseek>
 80218cc:	1c43      	adds	r3, r0, #1
 80218ce:	d102      	bne.n	80218d6 <_lseek_r+0x1e>
 80218d0:	682b      	ldr	r3, [r5, #0]
 80218d2:	b103      	cbz	r3, 80218d6 <_lseek_r+0x1e>
 80218d4:	6023      	str	r3, [r4, #0]
 80218d6:	bd38      	pop	{r3, r4, r5, pc}
 80218d8:	200157c4 	.word	0x200157c4

080218dc <__swhatbuf_r>:
 80218dc:	b570      	push	{r4, r5, r6, lr}
 80218de:	460e      	mov	r6, r1
 80218e0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80218e4:	2900      	cmp	r1, #0
 80218e6:	b096      	sub	sp, #88	; 0x58
 80218e8:	4614      	mov	r4, r2
 80218ea:	461d      	mov	r5, r3
 80218ec:	da08      	bge.n	8021900 <__swhatbuf_r+0x24>
 80218ee:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 80218f2:	2200      	movs	r2, #0
 80218f4:	602a      	str	r2, [r5, #0]
 80218f6:	061a      	lsls	r2, r3, #24
 80218f8:	d410      	bmi.n	802191c <__swhatbuf_r+0x40>
 80218fa:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80218fe:	e00e      	b.n	802191e <__swhatbuf_r+0x42>
 8021900:	466a      	mov	r2, sp
 8021902:	f000 f86f 	bl	80219e4 <_fstat_r>
 8021906:	2800      	cmp	r0, #0
 8021908:	dbf1      	blt.n	80218ee <__swhatbuf_r+0x12>
 802190a:	9a01      	ldr	r2, [sp, #4]
 802190c:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8021910:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8021914:	425a      	negs	r2, r3
 8021916:	415a      	adcs	r2, r3
 8021918:	602a      	str	r2, [r5, #0]
 802191a:	e7ee      	b.n	80218fa <__swhatbuf_r+0x1e>
 802191c:	2340      	movs	r3, #64	; 0x40
 802191e:	2000      	movs	r0, #0
 8021920:	6023      	str	r3, [r4, #0]
 8021922:	b016      	add	sp, #88	; 0x58
 8021924:	bd70      	pop	{r4, r5, r6, pc}
	...

08021928 <__smakebuf_r>:
 8021928:	898b      	ldrh	r3, [r1, #12]
 802192a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802192c:	079d      	lsls	r5, r3, #30
 802192e:	4606      	mov	r6, r0
 8021930:	460c      	mov	r4, r1
 8021932:	d507      	bpl.n	8021944 <__smakebuf_r+0x1c>
 8021934:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8021938:	6023      	str	r3, [r4, #0]
 802193a:	6123      	str	r3, [r4, #16]
 802193c:	2301      	movs	r3, #1
 802193e:	6163      	str	r3, [r4, #20]
 8021940:	b002      	add	sp, #8
 8021942:	bd70      	pop	{r4, r5, r6, pc}
 8021944:	ab01      	add	r3, sp, #4
 8021946:	466a      	mov	r2, sp
 8021948:	f7ff ffc8 	bl	80218dc <__swhatbuf_r>
 802194c:	9900      	ldr	r1, [sp, #0]
 802194e:	4605      	mov	r5, r0
 8021950:	4630      	mov	r0, r6
 8021952:	f7ff f947 	bl	8020be4 <_malloc_r>
 8021956:	b948      	cbnz	r0, 802196c <__smakebuf_r+0x44>
 8021958:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802195c:	059a      	lsls	r2, r3, #22
 802195e:	d4ef      	bmi.n	8021940 <__smakebuf_r+0x18>
 8021960:	f023 0303 	bic.w	r3, r3, #3
 8021964:	f043 0302 	orr.w	r3, r3, #2
 8021968:	81a3      	strh	r3, [r4, #12]
 802196a:	e7e3      	b.n	8021934 <__smakebuf_r+0xc>
 802196c:	4b0d      	ldr	r3, [pc, #52]	; (80219a4 <__smakebuf_r+0x7c>)
 802196e:	62b3      	str	r3, [r6, #40]	; 0x28
 8021970:	89a3      	ldrh	r3, [r4, #12]
 8021972:	6020      	str	r0, [r4, #0]
 8021974:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8021978:	81a3      	strh	r3, [r4, #12]
 802197a:	9b00      	ldr	r3, [sp, #0]
 802197c:	6163      	str	r3, [r4, #20]
 802197e:	9b01      	ldr	r3, [sp, #4]
 8021980:	6120      	str	r0, [r4, #16]
 8021982:	b15b      	cbz	r3, 802199c <__smakebuf_r+0x74>
 8021984:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8021988:	4630      	mov	r0, r6
 802198a:	f000 f83d 	bl	8021a08 <_isatty_r>
 802198e:	b128      	cbz	r0, 802199c <__smakebuf_r+0x74>
 8021990:	89a3      	ldrh	r3, [r4, #12]
 8021992:	f023 0303 	bic.w	r3, r3, #3
 8021996:	f043 0301 	orr.w	r3, r3, #1
 802199a:	81a3      	strh	r3, [r4, #12]
 802199c:	89a0      	ldrh	r0, [r4, #12]
 802199e:	4305      	orrs	r5, r0
 80219a0:	81a5      	strh	r5, [r4, #12]
 80219a2:	e7cd      	b.n	8021940 <__smakebuf_r+0x18>
 80219a4:	080208a9 	.word	0x080208a9

080219a8 <__malloc_lock>:
 80219a8:	4801      	ldr	r0, [pc, #4]	; (80219b0 <__malloc_lock+0x8>)
 80219aa:	f7ff b886 	b.w	8020aba <__retarget_lock_acquire_recursive>
 80219ae:	bf00      	nop
 80219b0:	200156b1 	.word	0x200156b1

080219b4 <__malloc_unlock>:
 80219b4:	4801      	ldr	r0, [pc, #4]	; (80219bc <__malloc_unlock+0x8>)
 80219b6:	f7ff b882 	b.w	8020abe <__retarget_lock_release_recursive>
 80219ba:	bf00      	nop
 80219bc:	200156b1 	.word	0x200156b1

080219c0 <_read_r>:
 80219c0:	b538      	push	{r3, r4, r5, lr}
 80219c2:	4d07      	ldr	r5, [pc, #28]	; (80219e0 <_read_r+0x20>)
 80219c4:	4604      	mov	r4, r0
 80219c6:	4608      	mov	r0, r1
 80219c8:	4611      	mov	r1, r2
 80219ca:	2200      	movs	r2, #0
 80219cc:	602a      	str	r2, [r5, #0]
 80219ce:	461a      	mov	r2, r3
 80219d0:	f7e0 fbb0 	bl	8002134 <_read>
 80219d4:	1c43      	adds	r3, r0, #1
 80219d6:	d102      	bne.n	80219de <_read_r+0x1e>
 80219d8:	682b      	ldr	r3, [r5, #0]
 80219da:	b103      	cbz	r3, 80219de <_read_r+0x1e>
 80219dc:	6023      	str	r3, [r4, #0]
 80219de:	bd38      	pop	{r3, r4, r5, pc}
 80219e0:	200157c4 	.word	0x200157c4

080219e4 <_fstat_r>:
 80219e4:	b538      	push	{r3, r4, r5, lr}
 80219e6:	4d07      	ldr	r5, [pc, #28]	; (8021a04 <_fstat_r+0x20>)
 80219e8:	2300      	movs	r3, #0
 80219ea:	4604      	mov	r4, r0
 80219ec:	4608      	mov	r0, r1
 80219ee:	4611      	mov	r1, r2
 80219f0:	602b      	str	r3, [r5, #0]
 80219f2:	f7e0 fbbe 	bl	8002172 <_fstat>
 80219f6:	1c43      	adds	r3, r0, #1
 80219f8:	d102      	bne.n	8021a00 <_fstat_r+0x1c>
 80219fa:	682b      	ldr	r3, [r5, #0]
 80219fc:	b103      	cbz	r3, 8021a00 <_fstat_r+0x1c>
 80219fe:	6023      	str	r3, [r4, #0]
 8021a00:	bd38      	pop	{r3, r4, r5, pc}
 8021a02:	bf00      	nop
 8021a04:	200157c4 	.word	0x200157c4

08021a08 <_isatty_r>:
 8021a08:	b538      	push	{r3, r4, r5, lr}
 8021a0a:	4d06      	ldr	r5, [pc, #24]	; (8021a24 <_isatty_r+0x1c>)
 8021a0c:	2300      	movs	r3, #0
 8021a0e:	4604      	mov	r4, r0
 8021a10:	4608      	mov	r0, r1
 8021a12:	602b      	str	r3, [r5, #0]
 8021a14:	f7e0 fbb2 	bl	800217c <_isatty>
 8021a18:	1c43      	adds	r3, r0, #1
 8021a1a:	d102      	bne.n	8021a22 <_isatty_r+0x1a>
 8021a1c:	682b      	ldr	r3, [r5, #0]
 8021a1e:	b103      	cbz	r3, 8021a22 <_isatty_r+0x1a>
 8021a20:	6023      	str	r3, [r4, #0]
 8021a22:	bd38      	pop	{r3, r4, r5, pc}
 8021a24:	200157c4 	.word	0x200157c4

08021a28 <_init>:
 8021a28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021a2a:	bf00      	nop
 8021a2c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8021a2e:	bc08      	pop	{r3}
 8021a30:	469e      	mov	lr, r3
 8021a32:	4770      	bx	lr

08021a34 <_fini>:
 8021a34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021a36:	bf00      	nop
 8021a38:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8021a3a:	bc08      	pop	{r3}
 8021a3c:	469e      	mov	lr, r3
 8021a3e:	4770      	bx	lr
