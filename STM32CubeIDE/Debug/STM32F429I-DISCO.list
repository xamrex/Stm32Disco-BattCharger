
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00021c2c  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000028f0  08021ddc  08021ddc  00031ddc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 0000103a  080246cc  080246cc  000346cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000003c  08025708  08025708  00035708  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 000000ac  08025744  08025744  00035744  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 0003f6b8  080257f0  080257f0  000357f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  08064ea8  08064ea8  0008016c  2**0
                  CONTENTS
  8 .ARM          00000008  08064ea8  08064ea8  00074ea8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  08064eb0  08064eb0  0008016c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  08064eb0  08064eb0  00074eb0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  08064ec4  08064ec4  00074ec4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         0000016c  20000000  08064ecc  00080000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00017590  2000016c  08065038  0008016c  2**2
                  ALLOC
 14 ._user_heap_stack 00001404  200176fc  08065038  000876fc  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  0008016c  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 0004b000  d0000000  d0000000  00090000  2**2
                  ALLOC
 17 .debug_line   0004e91a  00000000  00000000  0008019c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_info   000df75b  00000000  00000000  000ceab6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 00014b2d  00000000  00000000  001ae211  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_aranges 00002e90  00000000  00000000  001c2d40  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_str    00117a1c  00000000  00000000  001c5bd0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 00007548  00000000  00000000  002dd5f0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_loc    00032fb1  00000000  00000000  002e4b38  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_macro  000303cc  00000000  00000000  00317ae9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .comment      000000cf  00000000  00000000  00347eb5  2**0
                  CONTENTS, READONLY
 26 .debug_frame  00008980  00000000  00000000  00347f84  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	2000016c 	.word	0x2000016c
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08021dc4 	.word	0x08021dc4

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000170 	.word	0x20000170
 80001ec:	08021dc4 	.word	0x08021dc4

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b974 	b.w	8000590 <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9d08      	ldr	r5, [sp, #32]
 80002c6:	4604      	mov	r4, r0
 80002c8:	468e      	mov	lr, r1
 80002ca:	2b00      	cmp	r3, #0
 80002cc:	d14d      	bne.n	800036a <__udivmoddi4+0xaa>
 80002ce:	428a      	cmp	r2, r1
 80002d0:	4694      	mov	ip, r2
 80002d2:	d969      	bls.n	80003a8 <__udivmoddi4+0xe8>
 80002d4:	fab2 f282 	clz	r2, r2
 80002d8:	b152      	cbz	r2, 80002f0 <__udivmoddi4+0x30>
 80002da:	fa01 f302 	lsl.w	r3, r1, r2
 80002de:	f1c2 0120 	rsb	r1, r2, #32
 80002e2:	fa20 f101 	lsr.w	r1, r0, r1
 80002e6:	fa0c fc02 	lsl.w	ip, ip, r2
 80002ea:	ea41 0e03 	orr.w	lr, r1, r3
 80002ee:	4094      	lsls	r4, r2
 80002f0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80002f4:	0c21      	lsrs	r1, r4, #16
 80002f6:	fbbe f6f8 	udiv	r6, lr, r8
 80002fa:	fa1f f78c 	uxth.w	r7, ip
 80002fe:	fb08 e316 	mls	r3, r8, r6, lr
 8000302:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000306:	fb06 f107 	mul.w	r1, r6, r7
 800030a:	4299      	cmp	r1, r3
 800030c:	d90a      	bls.n	8000324 <__udivmoddi4+0x64>
 800030e:	eb1c 0303 	adds.w	r3, ip, r3
 8000312:	f106 30ff 	add.w	r0, r6, #4294967295
 8000316:	f080 811f 	bcs.w	8000558 <__udivmoddi4+0x298>
 800031a:	4299      	cmp	r1, r3
 800031c:	f240 811c 	bls.w	8000558 <__udivmoddi4+0x298>
 8000320:	3e02      	subs	r6, #2
 8000322:	4463      	add	r3, ip
 8000324:	1a5b      	subs	r3, r3, r1
 8000326:	b2a4      	uxth	r4, r4
 8000328:	fbb3 f0f8 	udiv	r0, r3, r8
 800032c:	fb08 3310 	mls	r3, r8, r0, r3
 8000330:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000334:	fb00 f707 	mul.w	r7, r0, r7
 8000338:	42a7      	cmp	r7, r4
 800033a:	d90a      	bls.n	8000352 <__udivmoddi4+0x92>
 800033c:	eb1c 0404 	adds.w	r4, ip, r4
 8000340:	f100 33ff 	add.w	r3, r0, #4294967295
 8000344:	f080 810a 	bcs.w	800055c <__udivmoddi4+0x29c>
 8000348:	42a7      	cmp	r7, r4
 800034a:	f240 8107 	bls.w	800055c <__udivmoddi4+0x29c>
 800034e:	4464      	add	r4, ip
 8000350:	3802      	subs	r0, #2
 8000352:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000356:	1be4      	subs	r4, r4, r7
 8000358:	2600      	movs	r6, #0
 800035a:	b11d      	cbz	r5, 8000364 <__udivmoddi4+0xa4>
 800035c:	40d4      	lsrs	r4, r2
 800035e:	2300      	movs	r3, #0
 8000360:	e9c5 4300 	strd	r4, r3, [r5]
 8000364:	4631      	mov	r1, r6
 8000366:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800036a:	428b      	cmp	r3, r1
 800036c:	d909      	bls.n	8000382 <__udivmoddi4+0xc2>
 800036e:	2d00      	cmp	r5, #0
 8000370:	f000 80ef 	beq.w	8000552 <__udivmoddi4+0x292>
 8000374:	2600      	movs	r6, #0
 8000376:	e9c5 0100 	strd	r0, r1, [r5]
 800037a:	4630      	mov	r0, r6
 800037c:	4631      	mov	r1, r6
 800037e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000382:	fab3 f683 	clz	r6, r3
 8000386:	2e00      	cmp	r6, #0
 8000388:	d14a      	bne.n	8000420 <__udivmoddi4+0x160>
 800038a:	428b      	cmp	r3, r1
 800038c:	d302      	bcc.n	8000394 <__udivmoddi4+0xd4>
 800038e:	4282      	cmp	r2, r0
 8000390:	f200 80f9 	bhi.w	8000586 <__udivmoddi4+0x2c6>
 8000394:	1a84      	subs	r4, r0, r2
 8000396:	eb61 0303 	sbc.w	r3, r1, r3
 800039a:	2001      	movs	r0, #1
 800039c:	469e      	mov	lr, r3
 800039e:	2d00      	cmp	r5, #0
 80003a0:	d0e0      	beq.n	8000364 <__udivmoddi4+0xa4>
 80003a2:	e9c5 4e00 	strd	r4, lr, [r5]
 80003a6:	e7dd      	b.n	8000364 <__udivmoddi4+0xa4>
 80003a8:	b902      	cbnz	r2, 80003ac <__udivmoddi4+0xec>
 80003aa:	deff      	udf	#255	; 0xff
 80003ac:	fab2 f282 	clz	r2, r2
 80003b0:	2a00      	cmp	r2, #0
 80003b2:	f040 8092 	bne.w	80004da <__udivmoddi4+0x21a>
 80003b6:	eba1 010c 	sub.w	r1, r1, ip
 80003ba:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003be:	fa1f fe8c 	uxth.w	lr, ip
 80003c2:	2601      	movs	r6, #1
 80003c4:	0c20      	lsrs	r0, r4, #16
 80003c6:	fbb1 f3f7 	udiv	r3, r1, r7
 80003ca:	fb07 1113 	mls	r1, r7, r3, r1
 80003ce:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80003d2:	fb0e f003 	mul.w	r0, lr, r3
 80003d6:	4288      	cmp	r0, r1
 80003d8:	d908      	bls.n	80003ec <__udivmoddi4+0x12c>
 80003da:	eb1c 0101 	adds.w	r1, ip, r1
 80003de:	f103 38ff 	add.w	r8, r3, #4294967295
 80003e2:	d202      	bcs.n	80003ea <__udivmoddi4+0x12a>
 80003e4:	4288      	cmp	r0, r1
 80003e6:	f200 80cb 	bhi.w	8000580 <__udivmoddi4+0x2c0>
 80003ea:	4643      	mov	r3, r8
 80003ec:	1a09      	subs	r1, r1, r0
 80003ee:	b2a4      	uxth	r4, r4
 80003f0:	fbb1 f0f7 	udiv	r0, r1, r7
 80003f4:	fb07 1110 	mls	r1, r7, r0, r1
 80003f8:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 80003fc:	fb0e fe00 	mul.w	lr, lr, r0
 8000400:	45a6      	cmp	lr, r4
 8000402:	d908      	bls.n	8000416 <__udivmoddi4+0x156>
 8000404:	eb1c 0404 	adds.w	r4, ip, r4
 8000408:	f100 31ff 	add.w	r1, r0, #4294967295
 800040c:	d202      	bcs.n	8000414 <__udivmoddi4+0x154>
 800040e:	45a6      	cmp	lr, r4
 8000410:	f200 80bb 	bhi.w	800058a <__udivmoddi4+0x2ca>
 8000414:	4608      	mov	r0, r1
 8000416:	eba4 040e 	sub.w	r4, r4, lr
 800041a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800041e:	e79c      	b.n	800035a <__udivmoddi4+0x9a>
 8000420:	f1c6 0720 	rsb	r7, r6, #32
 8000424:	40b3      	lsls	r3, r6
 8000426:	fa22 fc07 	lsr.w	ip, r2, r7
 800042a:	ea4c 0c03 	orr.w	ip, ip, r3
 800042e:	fa20 f407 	lsr.w	r4, r0, r7
 8000432:	fa01 f306 	lsl.w	r3, r1, r6
 8000436:	431c      	orrs	r4, r3
 8000438:	40f9      	lsrs	r1, r7
 800043a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800043e:	fa00 f306 	lsl.w	r3, r0, r6
 8000442:	fbb1 f8f9 	udiv	r8, r1, r9
 8000446:	0c20      	lsrs	r0, r4, #16
 8000448:	fa1f fe8c 	uxth.w	lr, ip
 800044c:	fb09 1118 	mls	r1, r9, r8, r1
 8000450:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000454:	fb08 f00e 	mul.w	r0, r8, lr
 8000458:	4288      	cmp	r0, r1
 800045a:	fa02 f206 	lsl.w	r2, r2, r6
 800045e:	d90b      	bls.n	8000478 <__udivmoddi4+0x1b8>
 8000460:	eb1c 0101 	adds.w	r1, ip, r1
 8000464:	f108 3aff 	add.w	sl, r8, #4294967295
 8000468:	f080 8088 	bcs.w	800057c <__udivmoddi4+0x2bc>
 800046c:	4288      	cmp	r0, r1
 800046e:	f240 8085 	bls.w	800057c <__udivmoddi4+0x2bc>
 8000472:	f1a8 0802 	sub.w	r8, r8, #2
 8000476:	4461      	add	r1, ip
 8000478:	1a09      	subs	r1, r1, r0
 800047a:	b2a4      	uxth	r4, r4
 800047c:	fbb1 f0f9 	udiv	r0, r1, r9
 8000480:	fb09 1110 	mls	r1, r9, r0, r1
 8000484:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000488:	fb00 fe0e 	mul.w	lr, r0, lr
 800048c:	458e      	cmp	lr, r1
 800048e:	d908      	bls.n	80004a2 <__udivmoddi4+0x1e2>
 8000490:	eb1c 0101 	adds.w	r1, ip, r1
 8000494:	f100 34ff 	add.w	r4, r0, #4294967295
 8000498:	d26c      	bcs.n	8000574 <__udivmoddi4+0x2b4>
 800049a:	458e      	cmp	lr, r1
 800049c:	d96a      	bls.n	8000574 <__udivmoddi4+0x2b4>
 800049e:	3802      	subs	r0, #2
 80004a0:	4461      	add	r1, ip
 80004a2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80004a6:	fba0 9402 	umull	r9, r4, r0, r2
 80004aa:	eba1 010e 	sub.w	r1, r1, lr
 80004ae:	42a1      	cmp	r1, r4
 80004b0:	46c8      	mov	r8, r9
 80004b2:	46a6      	mov	lr, r4
 80004b4:	d356      	bcc.n	8000564 <__udivmoddi4+0x2a4>
 80004b6:	d053      	beq.n	8000560 <__udivmoddi4+0x2a0>
 80004b8:	b15d      	cbz	r5, 80004d2 <__udivmoddi4+0x212>
 80004ba:	ebb3 0208 	subs.w	r2, r3, r8
 80004be:	eb61 010e 	sbc.w	r1, r1, lr
 80004c2:	fa01 f707 	lsl.w	r7, r1, r7
 80004c6:	fa22 f306 	lsr.w	r3, r2, r6
 80004ca:	40f1      	lsrs	r1, r6
 80004cc:	431f      	orrs	r7, r3
 80004ce:	e9c5 7100 	strd	r7, r1, [r5]
 80004d2:	2600      	movs	r6, #0
 80004d4:	4631      	mov	r1, r6
 80004d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004da:	f1c2 0320 	rsb	r3, r2, #32
 80004de:	40d8      	lsrs	r0, r3
 80004e0:	fa0c fc02 	lsl.w	ip, ip, r2
 80004e4:	fa21 f303 	lsr.w	r3, r1, r3
 80004e8:	4091      	lsls	r1, r2
 80004ea:	4301      	orrs	r1, r0
 80004ec:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80004f0:	fa1f fe8c 	uxth.w	lr, ip
 80004f4:	fbb3 f0f7 	udiv	r0, r3, r7
 80004f8:	fb07 3610 	mls	r6, r7, r0, r3
 80004fc:	0c0b      	lsrs	r3, r1, #16
 80004fe:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000502:	fb00 f60e 	mul.w	r6, r0, lr
 8000506:	429e      	cmp	r6, r3
 8000508:	fa04 f402 	lsl.w	r4, r4, r2
 800050c:	d908      	bls.n	8000520 <__udivmoddi4+0x260>
 800050e:	eb1c 0303 	adds.w	r3, ip, r3
 8000512:	f100 38ff 	add.w	r8, r0, #4294967295
 8000516:	d22f      	bcs.n	8000578 <__udivmoddi4+0x2b8>
 8000518:	429e      	cmp	r6, r3
 800051a:	d92d      	bls.n	8000578 <__udivmoddi4+0x2b8>
 800051c:	3802      	subs	r0, #2
 800051e:	4463      	add	r3, ip
 8000520:	1b9b      	subs	r3, r3, r6
 8000522:	b289      	uxth	r1, r1
 8000524:	fbb3 f6f7 	udiv	r6, r3, r7
 8000528:	fb07 3316 	mls	r3, r7, r6, r3
 800052c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000530:	fb06 f30e 	mul.w	r3, r6, lr
 8000534:	428b      	cmp	r3, r1
 8000536:	d908      	bls.n	800054a <__udivmoddi4+0x28a>
 8000538:	eb1c 0101 	adds.w	r1, ip, r1
 800053c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000540:	d216      	bcs.n	8000570 <__udivmoddi4+0x2b0>
 8000542:	428b      	cmp	r3, r1
 8000544:	d914      	bls.n	8000570 <__udivmoddi4+0x2b0>
 8000546:	3e02      	subs	r6, #2
 8000548:	4461      	add	r1, ip
 800054a:	1ac9      	subs	r1, r1, r3
 800054c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000550:	e738      	b.n	80003c4 <__udivmoddi4+0x104>
 8000552:	462e      	mov	r6, r5
 8000554:	4628      	mov	r0, r5
 8000556:	e705      	b.n	8000364 <__udivmoddi4+0xa4>
 8000558:	4606      	mov	r6, r0
 800055a:	e6e3      	b.n	8000324 <__udivmoddi4+0x64>
 800055c:	4618      	mov	r0, r3
 800055e:	e6f8      	b.n	8000352 <__udivmoddi4+0x92>
 8000560:	454b      	cmp	r3, r9
 8000562:	d2a9      	bcs.n	80004b8 <__udivmoddi4+0x1f8>
 8000564:	ebb9 0802 	subs.w	r8, r9, r2
 8000568:	eb64 0e0c 	sbc.w	lr, r4, ip
 800056c:	3801      	subs	r0, #1
 800056e:	e7a3      	b.n	80004b8 <__udivmoddi4+0x1f8>
 8000570:	4646      	mov	r6, r8
 8000572:	e7ea      	b.n	800054a <__udivmoddi4+0x28a>
 8000574:	4620      	mov	r0, r4
 8000576:	e794      	b.n	80004a2 <__udivmoddi4+0x1e2>
 8000578:	4640      	mov	r0, r8
 800057a:	e7d1      	b.n	8000520 <__udivmoddi4+0x260>
 800057c:	46d0      	mov	r8, sl
 800057e:	e77b      	b.n	8000478 <__udivmoddi4+0x1b8>
 8000580:	3b02      	subs	r3, #2
 8000582:	4461      	add	r1, ip
 8000584:	e732      	b.n	80003ec <__udivmoddi4+0x12c>
 8000586:	4630      	mov	r0, r6
 8000588:	e709      	b.n	800039e <__udivmoddi4+0xde>
 800058a:	4464      	add	r4, ip
 800058c:	3802      	subs	r0, #2
 800058e:	e742      	b.n	8000416 <__udivmoddi4+0x156>

08000590 <__aeabi_idiv0>:
 8000590:	4770      	bx	lr
 8000592:	bf00      	nop

08000594 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000594:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005cc <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000598:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800059a:	e003      	b.n	80005a4 <LoopCopyDataInit>

0800059c <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 800059c:	4b0c      	ldr	r3, [pc, #48]	; (80005d0 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 800059e:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005a0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005a2:	3104      	adds	r1, #4

080005a4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005a4:	480b      	ldr	r0, [pc, #44]	; (80005d4 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005a6:	4b0c      	ldr	r3, [pc, #48]	; (80005d8 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005a8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005aa:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005ac:	d3f6      	bcc.n	800059c <CopyDataInit>
  ldr  r2, =_sbss
 80005ae:	4a0b      	ldr	r2, [pc, #44]	; (80005dc <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005b0:	e002      	b.n	80005b8 <LoopFillZerobss>

080005b2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005b2:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005b4:	f842 3b04 	str.w	r3, [r2], #4

080005b8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005b8:	4b09      	ldr	r3, [pc, #36]	; (80005e0 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005ba:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005bc:	d3f9      	bcc.n	80005b2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005be:	f005 fec3 	bl	8006348 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005c2:	f020 fc23 	bl	8020e0c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005c6:	f000 febb 	bl	8001340 <main>
  bx  lr    
 80005ca:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80005cc:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80005d0:	08064ecc 	.word	0x08064ecc
  ldr  r0, =_sdata
 80005d4:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005d8:	2000016c 	.word	0x2000016c
  ldr  r2, =_sbss
 80005dc:	2000016c 	.word	0x2000016c
  ldr  r3, = _ebss
 80005e0:	200176fc 	.word	0x200176fc

080005e4 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005e4:	e7fe      	b.n	80005e4 <ADC_IRQHandler>

080005e6 <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_init();
 80005e6:	f000 bc39 	b.w	8000e5c <touchgfx_init>

080005ea <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005ea:	f000 bcab 	b.w	8000f44 <touchgfx_taskEntry>

080005ee <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80005ee:	4770      	bx	lr

080005f0 <_ZN20STM32TouchControllerD0Ev>:
 80005f0:	b510      	push	{r4, lr}
 80005f2:	2104      	movs	r1, #4
 80005f4:	4604      	mov	r4, r0
 80005f6:	f020 fa9a 	bl	8020b2e <_ZdlPvj>
 80005fa:	4620      	mov	r0, r4
 80005fc:	bd10      	pop	{r4, pc}
	...

08000600 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8000600:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8000602:	4b0c      	ldr	r3, [pc, #48]	; (8000634 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000604:	4c0c      	ldr	r4, [pc, #48]	; (8000638 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8000606:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000608:	4b0c      	ldr	r3, [pc, #48]	; (800063c <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060a:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 800060c:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060e:	6863      	ldr	r3, [r4, #4]
 8000610:	4798      	blx	r3
 8000612:	f640 0311 	movw	r3, #2065	; 0x811
 8000616:	4298      	cmp	r0, r3
 8000618:	d10a      	bne.n	8000630 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 800061a:	4d09      	ldr	r5, [pc, #36]	; (8000640 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 800061c:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 800061e:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000620:	2082      	movs	r0, #130	; 0x82
 8000622:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000624:	682b      	ldr	r3, [r5, #0]
 8000626:	2082      	movs	r0, #130	; 0x82
 8000628:	68db      	ldr	r3, [r3, #12]
 800062a:	4798      	blx	r3
 800062c:	2000      	movs	r0, #0
    }

    return ret;
}
 800062e:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000630:	2001      	movs	r0, #1
 8000632:	e7fc      	b.n	800062e <_Z11BSP_TS_Inittt+0x2e>
 8000634:	20000188 	.word	0x20000188
 8000638:	20000054 	.word	0x20000054
 800063c:	2000018a 	.word	0x2000018a
 8000640:	2000018c 	.word	0x2000018c

08000644 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000644:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000648:	20f0      	movs	r0, #240	; 0xf0
 800064a:	f7ff bfd9 	b.w	8000600 <_Z11BSP_TS_Inittt>
	...

08000650 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000650:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000652:	4d2d      	ldr	r5, [pc, #180]	; (8000708 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb8>)
 8000654:	682b      	ldr	r3, [r5, #0]
{
 8000656:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000658:	691b      	ldr	r3, [r3, #16]
 800065a:	2082      	movs	r0, #130	; 0x82
 800065c:	4798      	blx	r3
 800065e:	b280      	uxth	r0, r0
 8000660:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000662:	2800      	cmp	r0, #0
 8000664:	d043      	beq.n	80006ee <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x9e>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000666:	682b      	ldr	r3, [r5, #0]
 8000668:	f10d 0206 	add.w	r2, sp, #6
 800066c:	695b      	ldr	r3, [r3, #20]
 800066e:	a901      	add	r1, sp, #4
 8000670:	2082      	movs	r0, #130	; 0x82
 8000672:	4798      	blx	r3

        /* Y value first correction */
        y -= 360;
 8000674:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8000678:	f5a2 72b4 	sub.w	r2, r2, #360	; 0x168
 800067c:	b292      	uxth	r2, r2

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 800067e:	2a0a      	cmp	r2, #10
 8000680:	d937      	bls.n	80006f2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa2>
        yr = y / 11;
 8000682:	230b      	movs	r3, #11
 8000684:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8000688:	4b20      	ldr	r3, [pc, #128]	; (800070c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>)
 800068a:	881b      	ldrh	r3, [r3, #0]
 800068c:	429a      	cmp	r2, r3
 800068e:	d901      	bls.n	8000694 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
        {
            yr = TsYBoundary - 1;
 8000690:	3b01      	subs	r3, #1
 8000692:	b29a      	uxth	r2, r3
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8000694:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000698:	f640 31b8 	movw	r1, #3000	; 0xbb8
 800069c:	428b      	cmp	r3, r1
 800069e:	d82a      	bhi.n	80006f6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa6>
        {
            x = 3870 - x;
 80006a0:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 80006a4:	330e      	adds	r3, #14
 80006a6:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 80006a8:	210f      	movs	r1, #15
 80006aa:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 80006ae:	4918      	ldr	r1, [pc, #96]	; (8000710 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>)
 80006b0:	8809      	ldrh	r1, [r1, #0]
 80006b2:	428b      	cmp	r3, r1
 80006b4:	d901      	bls.n	80006ba <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
        {
            xr = TsXBoundary - 1;
 80006b6:	1e4b      	subs	r3, r1, #1
 80006b8:	b29b      	uxth	r3, r3
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006ba:	4e16      	ldr	r6, [pc, #88]	; (8000714 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc4>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006bc:	4d16      	ldr	r5, [pc, #88]	; (8000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc8>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006be:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006c0:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006c2:	4283      	cmp	r3, r0
 80006c4:	b281      	uxth	r1, r0
 80006c6:	bf8c      	ite	hi
 80006c8:	1a59      	subhi	r1, r3, r1
 80006ca:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006cc:	b2b8      	uxth	r0, r7
 80006ce:	42ba      	cmp	r2, r7
 80006d0:	bf8c      	ite	hi
 80006d2:	1a10      	subhi	r0, r2, r0
 80006d4:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d6:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006d8:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80006da:	4401      	add	r1, r0
 80006dc:	2905      	cmp	r1, #5
        {
            _x = x;
 80006de:	bfc8      	it	gt
 80006e0:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80006e2:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80006e4:	bfc8      	it	gt
 80006e6:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80006e8:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80006ea:	682b      	ldr	r3, [r5, #0]
 80006ec:	80a3      	strh	r3, [r4, #4]
    }
}
 80006ee:	b003      	add	sp, #12
 80006f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
            yr = 0;
 80006f2:	2200      	movs	r2, #0
 80006f4:	e7ce      	b.n	8000694 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
            x = 3800 - x;
 80006f6:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 80006fa:	3308      	adds	r3, #8
 80006fc:	b29b      	uxth	r3, r3
        if (xr <= 0)
 80006fe:	2b0e      	cmp	r3, #14
 8000700:	d8d2      	bhi.n	80006a8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
            xr = 0;
 8000702:	2300      	movs	r3, #0
 8000704:	e7d9      	b.n	80006ba <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
 8000706:	bf00      	nop
 8000708:	2000018c 	.word	0x2000018c
 800070c:	2000018a 	.word	0x2000018a
 8000710:	20000188 	.word	0x20000188
 8000714:	20000190 	.word	0x20000190
 8000718:	20000194 	.word	0x20000194

0800071c <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 800071c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 800071e:	4668      	mov	r0, sp
{
 8000720:	460d      	mov	r5, r1
 8000722:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000724:	f7ff ff94 	bl	8000650 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000728:	f8bd 0000 	ldrh.w	r0, [sp]
 800072c:	b130      	cbz	r0, 800073c <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 800072e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000732:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000734:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000738:	6023      	str	r3, [r4, #0]
        return true;
 800073a:	2001      	movs	r0, #1
}
 800073c:	b003      	add	sp, #12
 800073e:	bd30      	pop	{r4, r5, pc}

08000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{

}
 8000740:	4770      	bx	lr

08000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
 8000742:	4770      	bx	lr

08000744 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
 8000744:	4770      	bx	lr

08000746 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000746:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000748:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 800074c:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000750:	4770      	bx	lr

08000752 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8000752:	2000      	movs	r0, #0
 8000754:	4770      	bx	lr
	...

08000758 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000758:	4b03      	ldr	r3, [pc, #12]	; (8000768 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800075a:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800075c:	3900      	subs	r1, #0
 800075e:	bf18      	it	ne
 8000760:	2101      	movne	r1, #1
 8000762:	7019      	strb	r1, [r3, #0]
    }
 8000764:	4770      	bx	lr
 8000766:	bf00      	nop
 8000768:	2001744f 	.word	0x2001744f

0800076c <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 800076c:	2000      	movs	r0, #0
 800076e:	4770      	bx	lr

08000770 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000770:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8000772:	b10b      	cbz	r3, 8000778 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000774:	4608      	mov	r0, r1
 8000776:	4718      	bx	r3
        }
    }
 8000778:	4770      	bx	lr

0800077a <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 800077a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800077e:	4770      	bx	lr

08000780 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000780:	6840      	ldr	r0, [r0, #4]
 8000782:	6803      	ldr	r3, [r0, #0]
 8000784:	699b      	ldr	r3, [r3, #24]
 8000786:	4718      	bx	r3

08000788 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000788:	4770      	bx	lr

0800078a <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 800078a:	4770      	bx	lr

0800078c <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800078c:	4770      	bx	lr

0800078e <_ZN11TouchGFXHAL10initializeEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800078e:	f000 bc79 	b.w	8001084 <_ZN20TouchGFXGeneratedHAL10initializeEv>

08000792 <_ZN11TouchGFXHAL9taskEntryEv>:
}

void TouchGFXHAL::taskEntry()
{
 8000792:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000794:	6803      	ldr	r3, [r0, #0]
{
 8000796:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8000798:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800079c:	4798      	blx	r3
    enableInterrupts();
 800079e:	6823      	ldr	r3, [r4, #0]
 80007a0:	4620      	mov	r0, r4
 80007a2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80007a4:	4798      	blx	r3

    OSWrappers::waitForVSync();
 80007a6:	f000 f8eb 	bl	8000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80007aa:	6823      	ldr	r3, [r4, #0]
 80007ac:	4620      	mov	r0, r4
 80007ae:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80007b0:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 80007b2:	2029      	movs	r0, #41	; 0x29
 80007b4:	f001 f860 	bl	8001878 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 80007b8:	f000 f8e2 	bl	8000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80007bc:	6823      	ldr	r3, [r4, #0]
 80007be:	4620      	mov	r0, r4
 80007c0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80007c2:	4798      	blx	r3
    for (;;)
 80007c4:	e7f8      	b.n	80007b8 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

080007c6 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80007c6:	b510      	push	{r4, lr}
 80007c8:	4604      	mov	r4, r0
        swapFrameBuffers();
 80007ca:	f00b fbc3 	bl	800bf54 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80007ce:	6823      	ldr	r3, [r4, #0]
 80007d0:	4620      	mov	r0, r4
 80007d2:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 80007d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80007da:	4718      	bx	r3

080007dc <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80007dc:	f000 bc44 	b.w	8001068 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080007e0 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80007e0:	f000 bc48 	b.w	8001074 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080007e4 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80007e4:	f000 bc74 	b.w	80010d0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080007e8 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80007e8:	f000 bc1a 	b.w	8001020 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080007ec <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80007ec:	f000 bc74 	b.w	80010d8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080007f0 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80007f0:	f000 bc7c 	b.w	80010ec <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080007f4 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80007f4:	f000 bc1e 	b.w	8001034 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080007f8 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80007f8:	f00a be20 	b.w	800b43c <_ZN8touchgfx3HAL16flushFrameBufferEv>

080007fc <_ZN11TouchGFXHALD0Ev>:
 80007fc:	b510      	push	{r4, lr}
 80007fe:	217c      	movs	r1, #124	; 0x7c
 8000800:	4604      	mov	r4, r0
 8000802:	f020 f994 	bl	8020b2e <_ZdlPvj>
 8000806:	4620      	mov	r0, r4
 8000808:	bd10      	pop	{r4, pc}

0800080a <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 800080a:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 800080e:	b11b      	cbz	r3, 8000818 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8000810:	6840      	ldr	r0, [r0, #4]
 8000812:	6803      	ldr	r3, [r0, #0]
 8000814:	681b      	ldr	r3, [r3, #0]
 8000816:	4718      	bx	r3
    }
 8000818:	4618      	mov	r0, r3
 800081a:	4770      	bx	lr

0800081c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 800081c:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 800081e:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8000822:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
            if (DISPLAY_ROTATION == rotate0)
 8000826:	4b0c      	ldr	r3, [pc, #48]	; (8000858 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8000828:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 800082a:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 800082c:	d009      	beq.n	8000842 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 800082e:	b93a      	cbnz	r2, 8000840 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000830:	4a0a      	ldr	r2, [pc, #40]	; (800085c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000832:	490b      	ldr	r1, [pc, #44]	; (8000860 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000834:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000836:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8000838:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800083a:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 800083c:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 800083e:	701a      	strb	r2, [r3, #0]
    }
 8000840:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000842:	2a00      	cmp	r2, #0
 8000844:	d0fc      	beq.n	8000840 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000846:	4a05      	ldr	r2, [pc, #20]	; (800085c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000848:	4905      	ldr	r1, [pc, #20]	; (8000860 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800084a:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 800084c:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 800084e:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000850:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000852:	2200      	movs	r2, #0
 8000854:	e7f3      	b.n	800083e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8000856:	bf00      	nop
 8000858:	20017448 	.word	0x20017448
 800085c:	20017444 	.word	0x20017444
 8000860:	20017446 	.word	0x20017446

08000864 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000864:	b570      	push	{r4, r5, r6, lr}
 8000866:	460d      	mov	r5, r1
 8000868:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800086a:	b935      	cbnz	r5, 800087a <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 800086c:	4b09      	ldr	r3, [pc, #36]	; (8000894 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 800086e:	4a0a      	ldr	r2, [pc, #40]	; (8000898 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000870:	480a      	ldr	r0, [pc, #40]	; (800089c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000872:	f240 21d2 	movw	r1, #722	; 0x2d2
 8000876:	f020 f989 	bl	8020b8c <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800087a:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800087e:	4b08      	ldr	r3, [pc, #32]	; (80008a0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000880:	3a00      	subs	r2, #0
 8000882:	bf18      	it	ne
 8000884:	2201      	movne	r2, #1
 8000886:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000888:	6803      	ldr	r3, [r0, #0]
    }
 800088a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 800088e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000892:	4718      	bx	r3
 8000894:	08021e34 	.word	0x08021e34
 8000898:	08021e6c 	.word	0x08021e6c
 800089c:	08021eba 	.word	0x08021eba
 80008a0:	2001744e 	.word	0x2001744e

080008a4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80008a4:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80008a6:	4b09      	ldr	r3, [pc, #36]	; (80008cc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 80008a8:	881b      	ldrh	r3, [r3, #0]
 80008aa:	428b      	cmp	r3, r1
 80008ac:	d803      	bhi.n	80008b6 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 80008ae:	4b08      	ldr	r3, [pc, #32]	; (80008d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 80008b0:	881b      	ldrh	r3, [r3, #0]
 80008b2:	4293      	cmp	r3, r2
 80008b4:	d905      	bls.n	80008c2 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80008b6:	4b07      	ldr	r3, [pc, #28]	; (80008d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80008b8:	4a07      	ldr	r2, [pc, #28]	; (80008d8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80008ba:	4808      	ldr	r0, [pc, #32]	; (80008dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80008bc:	219e      	movs	r1, #158	; 0x9e
 80008be:	f020 f965 	bl	8020b8c <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80008c2:	4b07      	ldr	r3, [pc, #28]	; (80008e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80008c4:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80008c6:	4b07      	ldr	r3, [pc, #28]	; (80008e4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80008c8:	801a      	strh	r2, [r3, #0]
    }
 80008ca:	bd08      	pop	{r3, pc}
 80008cc:	20017444 	.word	0x20017444
 80008d0:	20017446 	.word	0x20017446
 80008d4:	08021eff 	.word	0x08021eff
 80008d8:	08021f62 	.word	0x08021f62
 80008dc:	08021eba 	.word	0x08021eba
 80008e0:	2001744a 	.word	0x2001744a
 80008e4:	2001744c 	.word	0x2001744c

080008e8 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80008e8:	2101      	movs	r1, #1
{
 80008ea:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80008ec:	2200      	movs	r2, #0
 80008ee:	4608      	mov	r0, r1
 80008f0:	f008 f9fc 	bl	8008cec <osSemaphoreNew>
 80008f4:	4b0a      	ldr	r3, [pc, #40]	; (8000920 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 80008f6:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80008f8:	b928      	cbnz	r0, 8000906 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80008fa:	4b0a      	ldr	r3, [pc, #40]	; (8000924 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 80008fc:	4a0a      	ldr	r2, [pc, #40]	; (8000928 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80008fe:	2129      	movs	r1, #41	; 0x29

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000900:	480a      	ldr	r0, [pc, #40]	; (800092c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000902:	f020 f943 	bl	8020b8c <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000906:	2200      	movs	r2, #0
 8000908:	2104      	movs	r1, #4
 800090a:	2001      	movs	r0, #1
 800090c:	f008 fab4 	bl	8008e78 <osMessageQueueNew>
 8000910:	4b07      	ldr	r3, [pc, #28]	; (8000930 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000912:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000914:	b918      	cbnz	r0, 800091e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000916:	4b07      	ldr	r3, [pc, #28]	; (8000934 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000918:	4a03      	ldr	r2, [pc, #12]	; (8000928 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800091a:	212d      	movs	r1, #45	; 0x2d
 800091c:	e7f0      	b.n	8000900 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 800091e:	bd08      	pop	{r3, pc}
 8000920:	2000019c 	.word	0x2000019c
 8000924:	08022080 	.word	0x08022080
 8000928:	080220c9 	.word	0x080220c9
 800092c:	080220f8 	.word	0x080220f8
 8000930:	20000198 	.word	0x20000198
 8000934:	08022146 	.word	0x08022146

08000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000938:	4b02      	ldr	r3, [pc, #8]	; (8000944 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 800093a:	f04f 31ff 	mov.w	r1, #4294967295
 800093e:	6818      	ldr	r0, [r3, #0]
 8000940:	f008 ba2a 	b.w	8008d98 <osSemaphoreAcquire>
 8000944:	2000019c 	.word	0x2000019c

08000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000948:	4b01      	ldr	r3, [pc, #4]	; (8000950 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 800094a:	6818      	ldr	r0, [r3, #0]
 800094c:	f008 ba5e 	b.w	8008e0c <osSemaphoreRelease>
 8000950:	2000019c 	.word	0x2000019c

08000954 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000954:	4b02      	ldr	r3, [pc, #8]	; (8000960 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000956:	2100      	movs	r1, #0
 8000958:	6818      	ldr	r0, [r3, #0]
 800095a:	f008 ba1d 	b.w	8008d98 <osSemaphoreAcquire>
 800095e:	bf00      	nop
 8000960:	2000019c 	.word	0x2000019c

08000964 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000964:	f7ff bff0 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000968 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000968:	4803      	ldr	r0, [pc, #12]	; (8000978 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 800096a:	4904      	ldr	r1, [pc, #16]	; (800097c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800096c:	6800      	ldr	r0, [r0, #0]
 800096e:	2300      	movs	r3, #0
 8000970:	461a      	mov	r2, r3
 8000972:	f008 bac7 	b.w	8008f04 <osMessageQueuePut>
 8000976:	bf00      	nop
 8000978:	20000198 	.word	0x20000198
 800097c:	20000004 	.word	0x20000004

08000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000980:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000982:	4c08      	ldr	r4, [pc, #32]	; (80009a4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000984:	2300      	movs	r3, #0
 8000986:	461a      	mov	r2, r3
 8000988:	a901      	add	r1, sp, #4
 800098a:	6820      	ldr	r0, [r4, #0]
 800098c:	f008 fafc 	bl	8008f88 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000990:	6820      	ldr	r0, [r4, #0]
 8000992:	f04f 33ff 	mov.w	r3, #4294967295
 8000996:	2200      	movs	r2, #0
 8000998:	a901      	add	r1, sp, #4
 800099a:	f008 faf5 	bl	8008f88 <osMessageQueueGet>
}
 800099e:	b002      	add	sp, #8
 80009a0:	bd10      	pop	{r4, pc}
 80009a2:	bf00      	nop
 80009a4:	20000198 	.word	0x20000198

080009a8 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 80009a8:	6803      	ldr	r3, [r0, #0]
 80009aa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80009ac:	4718      	bx	r3

080009ae <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 80009ae:	2001      	movs	r0, #1
 80009b0:	4770      	bx	lr

080009b2 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 80009b2:	6803      	ldr	r3, [r0, #0]
 80009b4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80009b6:	4718      	bx	r3

080009b8 <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 80009b8:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80009ba:	2300      	movs	r3, #0
 80009bc:	9301      	str	r3, [sp, #4]
 80009be:	4b0d      	ldr	r3, [pc, #52]	; (80009f4 <_ZN8STM32DMA10initializeEv+0x3c>)
 80009c0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009c2:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80009c6:	631a      	str	r2, [r3, #48]	; 0x30
 80009c8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009ca:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 80009ce:	9201      	str	r2, [sp, #4]
 80009d0:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 80009d2:	691a      	ldr	r2, [r3, #16]
 80009d4:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80009d8:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 80009da:	691a      	ldr	r2, [r3, #16]
 80009dc:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 80009e0:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 80009e2:	4b05      	ldr	r3, [pc, #20]	; (80009f8 <_ZN8STM32DMA10initializeEv+0x40>)
 80009e4:	4a05      	ldr	r2, [pc, #20]	; (80009fc <_ZN8STM32DMA10initializeEv+0x44>)
 80009e6:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80009e8:	4b05      	ldr	r3, [pc, #20]	; (8000a00 <_ZN8STM32DMA10initializeEv+0x48>)
 80009ea:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80009ee:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 80009f0:	b002      	add	sp, #8
 80009f2:	4770      	bx	lr
 80009f4:	40023800 	.word	0x40023800
 80009f8:	20006340 	.word	0x20006340
 80009fc:	08000a45 	.word	0x08000a45
 8000a00:	e000e100 	.word	0xe000e100

08000a04 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000a04:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000a08:	4770      	bx	lr
	...

08000a0c <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000a0c:	4b05      	ldr	r3, [pc, #20]	; (8000a24 <_ZN8STM32DMAD1Ev+0x18>)
 8000a0e:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000a10:	4b05      	ldr	r3, [pc, #20]	; (8000a28 <_ZN8STM32DMAD1Ev+0x1c>)
 8000a12:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000a16:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000a1a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000a1e:	f3bf 8f6f 	isb	sy
}
 8000a22:	4770      	bx	lr
 8000a24:	080222e4 	.word	0x080222e4
 8000a28:	e000e100 	.word	0xe000e100

08000a2c <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000a2c:	b510      	push	{r4, lr}
 8000a2e:	4604      	mov	r4, r0
}
 8000a30:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8000a34:	f7ff ffea 	bl	8000a0c <_ZN8STM32DMAD1Ev>
 8000a38:	4620      	mov	r0, r4
 8000a3a:	f020 f878 	bl	8020b2e <_ZdlPvj>
 8000a3e:	4620      	mov	r0, r4
 8000a40:	bd10      	pop	{r4, pc}
	...

08000a44 <DMA2D_XferCpltCallback>:
        return instance;
 8000a44:	4b02      	ldr	r3, [pc, #8]	; (8000a50 <DMA2D_XferCpltCallback+0xc>)
 8000a46:	681b      	ldr	r3, [r3, #0]
 8000a48:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000a4a:	6803      	ldr	r3, [r0, #0]
 8000a4c:	695b      	ldr	r3, [r3, #20]
 8000a4e:	4718      	bx	r3
 8000a50:	20017450 	.word	0x20017450

08000a54 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000a54:	b570      	push	{r4, r5, r6, lr}
 8000a56:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000a58:	4625      	mov	r5, r4
 8000a5a:	4b0a      	ldr	r3, [pc, #40]	; (8000a84 <_ZN8STM32DMAC1Ev+0x30>)
 8000a5c:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000a5e:	2600      	movs	r6, #0
 8000a60:	6060      	str	r0, [r4, #4]
 8000a62:	7226      	strb	r6, [r4, #8]
 8000a64:	7266      	strb	r6, [r4, #9]
 8000a66:	f845 3b20 	str.w	r3, [r5], #32
 8000a6a:	2260      	movs	r2, #96	; 0x60
 8000a6c:	4629      	mov	r1, r5
 8000a6e:	f00b fbc7 	bl	800c200 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000a72:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000a76:	60ee      	str	r6, [r5, #12]
 8000a78:	3524      	adds	r5, #36	; 0x24
 8000a7a:	42ab      	cmp	r3, r5
 8000a7c:	d1fb      	bne.n	8000a76 <_ZN8STM32DMAC1Ev+0x22>
}
 8000a7e:	4620      	mov	r0, r4
 8000a80:	bd70      	pop	{r4, r5, r6, pc}
 8000a82:	bf00      	nop
 8000a84:	080222e4 	.word	0x080222e4

08000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000a88:	b508      	push	{r3, lr}
    switch (format)
 8000a8a:	290b      	cmp	r1, #11
 8000a8c:	d80b      	bhi.n	8000aa6 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8000a8e:	e8df f001 	tbb	[pc, r1]
 8000a92:	0612      	.short	0x0612
 8000a94:	0a0a0a10 	.word	0x0a0a0a10
 8000a98:	0808080a 	.word	0x0808080a
 8000a9c:	0808      	.short	0x0808
 8000a9e:	2001      	movs	r0, #1
}
 8000aa0:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000aa2:	2005      	movs	r0, #5
        break;
 8000aa4:	e7fc      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8000aa6:	4b05      	ldr	r3, [pc, #20]	; (8000abc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000aa8:	4a05      	ldr	r2, [pc, #20]	; (8000ac0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000aaa:	4806      	ldr	r0, [pc, #24]	; (8000ac4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8000aac:	2167      	movs	r1, #103	; 0x67
 8000aae:	f020 f86d 	bl	8020b8c <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000ab2:	2000      	movs	r0, #0
 8000ab4:	e7f4      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000ab6:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000ab8:	e7f2      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000aba:	bf00      	nop
 8000abc:	08022188 	.word	0x08022188
 8000ac0:	080221a3 	.word	0x080221a3
 8000ac4:	080221ed 	.word	0x080221ed

08000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000ac8:	b508      	push	{r3, lr}
    switch (format)
 8000aca:	290a      	cmp	r1, #10
 8000acc:	d809      	bhi.n	8000ae2 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8000ace:	e8df f001 	tbb	[pc, r1]
 8000ad2:	0610      	.short	0x0610
 8000ad4:	0808080e 	.word	0x0808080e
 8000ad8:	06060608 	.word	0x06060608
 8000adc:	06          	.byte	0x06
 8000add:	00          	.byte	0x00
 8000ade:	2001      	movs	r0, #1
}
 8000ae0:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000ae2:	4b05      	ldr	r3, [pc, #20]	; (8000af8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8000ae4:	4a05      	ldr	r2, [pc, #20]	; (8000afc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000ae6:	4806      	ldr	r0, [pc, #24]	; (8000b00 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000ae8:	2188      	movs	r1, #136	; 0x88
 8000aea:	f020 f84f 	bl	8020b8c <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000aee:	2000      	movs	r0, #0
 8000af0:	e7f6      	b.n	8000ae0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000af2:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000af4:	e7f4      	b.n	8000ae0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000af6:	bf00      	nop
 8000af8:	08022188 	.word	0x08022188
 8000afc:	08022239 	.word	0x08022239
 8000b00:	080221ed 	.word	0x080221ed

08000b04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000b04:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b08:	7f4f      	ldrb	r7, [r1, #29]
{
 8000b0a:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b0c:	4639      	mov	r1, r7
{
 8000b0e:	4681      	mov	r9, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b10:	f7ff ffba 	bl	8000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b14:	f894 801e 	ldrb.w	r8, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b18:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b1a:	4641      	mov	r1, r8
 8000b1c:	4648      	mov	r0, r9
 8000b1e:	f7ff ffb3 	bl	8000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b22:	4641      	mov	r1, r8
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b24:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b26:	4648      	mov	r0, r9
 8000b28:	f7ff ffce 	bl	8000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000b2c:	8aa1      	ldrh	r1, [r4, #20]
 8000b2e:	8b62      	ldrh	r2, [r4, #26]
 8000b30:	4b42      	ldr	r3, [pc, #264]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000b32:	1a52      	subs	r2, r2, r1
 8000b34:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000b36:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000b38:	8b22      	ldrh	r2, [r4, #24]
 8000b3a:	1a52      	subs	r2, r2, r1
 8000b3c:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000b3e:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000b40:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000b42:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000b46:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b48:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000b4a:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b4c:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000b4e:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000b50:	6821      	ldr	r1, [r4, #0]
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b52:	f894 c01c 	ldrb.w	ip, [r4, #28]
    switch (blitOp.operation)
 8000b56:	2980      	cmp	r1, #128	; 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b58:	ea4f 620c 	mov.w	r2, ip, lsl #24
    switch (blitOp.operation)
 8000b5c:	d026      	beq.n	8000bac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa8>
 8000b5e:	d810      	bhi.n	8000b82 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7e>
 8000b60:	2920      	cmp	r1, #32
 8000b62:	ea45 0402 	orr.w	r4, r5, r2
 8000b66:	d061      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000b68:	2940      	cmp	r1, #64	; 0x40
 8000b6a:	d05f      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000b6c:	2904      	cmp	r1, #4
 8000b6e:	d05d      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b70:	4b32      	ldr	r3, [pc, #200]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000b72:	432a      	orrs	r2, r5
 8000b74:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000b78:	4547      	cmp	r7, r8
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b7a:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000b7c:	d05a      	beq.n	8000c34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000b7e:	4a30      	ldr	r2, [pc, #192]	; (8000c40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000b80:	e040      	b.n	8000c04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
    switch (blitOp.operation)
 8000b82:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8000b86:	d007      	beq.n	8000b98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
 8000b88:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8000b8c:	d1f0      	bne.n	8000b70 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b8e:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000b92:	f042 0209 	orr.w	r2, r2, #9
 8000b96:	e003      	b.n	8000ba0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b98:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000b9c:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ba0:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000ba2:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000ba4:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000ba6:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ba8:	6158      	str	r0, [r3, #20]
 8000baa:	e02a      	b.n	8000c02 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000bac:	68a4      	ldr	r4, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bae:	432a      	orrs	r2, r5
 8000bb0:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000bb4:	1d21      	adds	r1, r4, #4
 8000bb6:	62d9      	str	r1, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bb8:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000bba:	7822      	ldrb	r2, [r4, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000bbc:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000bbe:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000bc0:	b142      	cbz	r2, 8000bd4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 8000bc2:	2a01      	cmp	r2, #1
 8000bc4:	d021      	beq.n	8000c0a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x106>
                assert(0 && "Unsupported format");
 8000bc6:	4b1f      	ldr	r3, [pc, #124]	; (8000c44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000bc8:	4a1f      	ldr	r2, [pc, #124]	; (8000c48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8000bca:	4820      	ldr	r0, [pc, #128]	; (8000c4c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8000bcc:	f44f 7189 	mov.w	r1, #274	; 0x112
 8000bd0:	f01f ffdc 	bl	8020b8c <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000bd4:	69da      	ldr	r2, [r3, #28]
 8000bd6:	8861      	ldrh	r1, [r4, #2]
 8000bd8:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000bdc:	3901      	subs	r1, #1
 8000bde:	f022 0210 	bic.w	r2, r2, #16
 8000be2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000be6:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000be8:	2001      	movs	r0, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000bea:	4b14      	ldr	r3, [pc, #80]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000bec:	69da      	ldr	r2, [r3, #28]
 8000bee:	f042 0220 	orr.w	r2, r2, #32
 8000bf2:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000bf4:	69da      	ldr	r2, [r3, #28]
 8000bf6:	0692      	lsls	r2, r2, #26
 8000bf8:	d4fc      	bmi.n	8000bf4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf0>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000bfa:	2210      	movs	r2, #16
 8000bfc:	609a      	str	r2, [r3, #8]
            if(blend)
 8000bfe:	2800      	cmp	r0, #0
 8000c00:	d0bd      	beq.n	8000b7e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7a>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000c02:	4a13      	ldr	r2, [pc, #76]	; (8000c50 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000c04:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000c06:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c0a:	8862      	ldrh	r2, [r4, #2]
 8000c0c:	69d9      	ldr	r1, [r3, #28]
 8000c0e:	1e54      	subs	r4, r2, #1
 8000c10:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000c14:	f022 0210 	bic.w	r2, r2, #16
 8000c18:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
                if(blitOp.alpha == 255)
 8000c1c:	f1bc 00ff 	subs.w	r0, ip, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c20:	f042 0210 	orr.w	r2, r2, #16
                if(blitOp.alpha == 255)
 8000c24:	bf18      	it	ne
 8000c26:	2001      	movne	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c28:	61da      	str	r2, [r3, #28]
                break;
 8000c2a:	e7de      	b.n	8000bea <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c2c:	f444 3400 	orr.w	r4, r4, #131072	; 0x20000
 8000c30:	61dc      	str	r4, [r3, #28]
 8000c32:	e7b8      	b.n	8000ba6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000c34:	f240 2201 	movw	r2, #513	; 0x201
 8000c38:	e7e4      	b.n	8000c04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
 8000c3a:	bf00      	nop
 8000c3c:	4002b000 	.word	0x4002b000
 8000c40:	00010201 	.word	0x00010201
 8000c44:	08022284 	.word	0x08022284
 8000c48:	0802229e 	.word	0x0802229e
 8000c4c:	080221ed 	.word	0x080221ed
 8000c50:	00020201 	.word	0x00020201

08000c54 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000c54:	b570      	push	{r4, r5, r6, lr}
 8000c56:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c58:	7f89      	ldrb	r1, [r1, #30]
 8000c5a:	f7ff ff35 	bl	8000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c5e:	8aa6      	ldrh	r6, [r4, #20]
 8000c60:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c62:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c64:	4b15      	ldr	r3, [pc, #84]	; (8000cbc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c66:	6925      	ldr	r5, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c68:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c6a:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c6e:	1b92      	subs	r2, r2, r6
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c70:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c72:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c74:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000c76:	6826      	ldr	r6, [r4, #0]
 8000c78:	68e1      	ldr	r1, [r4, #12]
 8000c7a:	2e08      	cmp	r6, #8
 8000c7c:	d10d      	bne.n	8000c9a <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c7e:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c80:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000c82:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000c84:	7f20      	ldrb	r0, [r4, #28]
 8000c86:	4a0e      	ldr	r2, [pc, #56]	; (8000cc0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000c88:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000c8c:	61da      	str	r2, [r3, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000c8e:	4a0d      	ldr	r2, [pc, #52]	; (8000cc4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000c90:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c92:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c94:	60dd      	str	r5, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000c96:	601a      	str	r2, [r3, #0]
    }
}
 8000c98:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000c9a:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000c9c:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000c9e:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000ca0:	0948      	lsrs	r0, r1, #5
 8000ca2:	0a0a      	lsrs	r2, r1, #8
 8000ca4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8000ca8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8000cac:	4302      	orrs	r2, r0
 8000cae:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000cb2:	430a      	orrs	r2, r1
 8000cb4:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000cb6:	4a04      	ldr	r2, [pc, #16]	; (8000cc8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000cb8:	e7ed      	b.n	8000c96 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000cba:	bf00      	nop
 8000cbc:	4002b000 	.word	0x4002b000
 8000cc0:	00010009 	.word	0x00010009
 8000cc4:	00020201 	.word	0x00020201
 8000cc8:	00030201 	.word	0x00030201

08000ccc <_ZN8touchgfx5paint6rgb5658tearDownEv>:
    * @brief Waits until previous DMA drawing operation has finished
    */
    void tearDown()
    {
        /* Wait for DMA2D to finish last run */
        while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000ccc:	4b03      	ldr	r3, [pc, #12]	; (8000cdc <_ZN8touchgfx5paint6rgb5658tearDownEv+0x10>)
 8000cce:	681a      	ldr	r2, [r3, #0]
 8000cd0:	07d2      	lsls	r2, r2, #31
 8000cd2:	d4fc      	bmi.n	8000cce <_ZN8touchgfx5paint6rgb5658tearDownEv+0x2>

        /* Clear transfer flags */
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cd4:	2223      	movs	r2, #35	; 0x23
 8000cd6:	609a      	str	r2, [r3, #8]
    }
 8000cd8:	4770      	bx	lr
 8000cda:	bf00      	nop
 8000cdc:	4002b000 	.word	0x4002b000

08000ce0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
    *
    * @brief Renders Canvas Widget chunks using DMA.
    * This functions will not generate an interrupt, and will not affect the DMA queue.
    */
    void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
    {
 8000ce0:	b530      	push	{r4, r5, lr}
        /* Wait for DMA2D to finish last run */
        while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000ce2:	4c0f      	ldr	r4, [pc, #60]	; (8000d20 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8000ce4:	6825      	ldr	r5, [r4, #0]
 8000ce6:	07ed      	lsls	r5, r5, #31
 8000ce8:	d4fc      	bmi.n	8000ce4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

        /* Clear transfer flags */
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cea:	2523      	movs	r5, #35	; 0x23

        /* DMA2D OPFCCR register configuration */
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

        /* Configure DMA2D data size */
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cec:	0409      	lsls	r1, r1, #16
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cee:	60a5      	str	r5, [r4, #8]
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cf0:	f041 0101 	orr.w	r1, r1, #1
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000cf4:	2502      	movs	r5, #2

        /* Configure DMA2D destination address */
        WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

        if (alpha < 0xFF)
 8000cf6:	2bff      	cmp	r3, #255	; 0xff
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000cf8:	6365      	str	r5, [r4, #52]	; 0x34
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cfa:	6461      	str	r1, [r4, #68]	; 0x44
        WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000cfc:	63e0      	str	r0, [r4, #60]	; 0x3c
        if (alpha < 0xFF)
 8000cfe:	d00a      	beq.n	8000d16 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
        {
            /* Write DMA2D BGPFCCR register */
            WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

            /* Write DMA2D FGPFCCR register */
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d00:	4908      	ldr	r1, [pc, #32]	; (8000d24 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
            WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000d02:	6265      	str	r5, [r4, #36]	; 0x24
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d04:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8000d08:	61e3      	str	r3, [r4, #28]

            /* Configure DMA2D source address */
            WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

            /* Enable the Peripheral and Enable the transfer complete interrupt */
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000d0a:	4b07      	ldr	r3, [pc, #28]	; (8000d28 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
            WRITE_REG(DMA2D->FGCOLR, color);
 8000d0c:	6222      	str	r2, [r4, #32]
            WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8000d0e:	6160      	str	r0, [r4, #20]
            WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8000d10:	60e0      	str	r0, [r4, #12]

            /* Set color */
            WRITE_REG(DMA2D->OCOLR, color565);

            /* Enable the Peripheral and Enable the transfer complete interrupt */
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000d12:	6023      	str	r3, [r4, #0]
        }
    }
 8000d14:	bd30      	pop	{r4, r5, pc}
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000d16:	61e5      	str	r5, [r4, #28]
            WRITE_REG(DMA2D->OCOLR, color565);
 8000d18:	9b03      	ldr	r3, [sp, #12]
 8000d1a:	63a3      	str	r3, [r4, #56]	; 0x38
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000d1c:	4b03      	ldr	r3, [pc, #12]	; (8000d2c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 8000d1e:	e7f8      	b.n	8000d12 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 8000d20:	4002b000 	.word	0x4002b000
 8000d24:	00010009 	.word	0x00010009
 8000d28:	00020001 	.word	0x00020001
 8000d2c:	00030001 	.word	0x00030001

08000d30 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000d30:	2001      	movs	r0, #1
 8000d32:	4770      	bx	lr

08000d34 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000d34:	2038      	movs	r0, #56	; 0x38
 8000d36:	4770      	bx	lr

08000d38 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000d38:	2338      	movs	r3, #56	; 0x38
 8000d3a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d3e:	3008      	adds	r0, #8
 8000d40:	4770      	bx	lr

08000d42 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000d42:	2338      	movs	r3, #56	; 0x38
 8000d44:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d48:	3008      	adds	r0, #8
 8000d4a:	4770      	bx	lr

08000d4c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d4c:	2001      	movs	r0, #1
 8000d4e:	4770      	bx	lr

08000d50 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d50:	f241 7074 	movw	r0, #6004	; 0x1774
 8000d54:	4770      	bx	lr

08000d56 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d56:	f241 7374 	movw	r3, #6004	; 0x1774
 8000d5a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d5e:	3008      	adds	r0, #8
 8000d60:	4770      	bx	lr

08000d62 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d62:	f241 7374 	movw	r3, #6004	; 0x1774
 8000d66:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d6a:	3008      	adds	r0, #8
 8000d6c:	4770      	bx	lr

08000d6e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d6e:	2001      	movs	r0, #1
 8000d70:	4770      	bx	lr

08000d72 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d72:	2010      	movs	r0, #16
 8000d74:	4770      	bx	lr

08000d76 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d76:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d7a:	3008      	adds	r0, #8
 8000d7c:	4770      	bx	lr

08000d7e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d7e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d82:	3008      	adds	r0, #8
 8000d84:	4770      	bx	lr

08000d86 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 8000d86:	4608      	mov	r0, r1
 8000d88:	f001 bb90 	b.w	80024ac <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000d8c:	b510      	push	{r4, lr}
 8000d8e:	4b03      	ldr	r3, [pc, #12]	; (8000d9c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8000d90:	6003      	str	r3, [r0, #0]
 8000d92:	4604      	mov	r4, r0
 8000d94:	f00a f89f 	bl	800aed6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000d98:	4620      	mov	r0, r4
 8000d9a:	bd10      	pop	{r4, pc}
 8000d9c:	0802239c 	.word	0x0802239c

08000da0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8000da0:	b510      	push	{r4, lr}
 8000da2:	4604      	mov	r4, r0
 8000da4:	f7ff fff2 	bl	8000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000da8:	4620      	mov	r0, r4
 8000daa:	2140      	movs	r1, #64	; 0x40
 8000dac:	f01f febf 	bl	8020b2e <_ZdlPvj>
 8000db0:	4620      	mov	r0, r4
 8000db2:	bd10      	pop	{r4, pc}

08000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000db4:	b510      	push	{r4, lr}
 8000db6:	4b03      	ldr	r3, [pc, #12]	; (8000dc4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000db8:	6003      	str	r3, [r0, #0]
 8000dba:	4604      	mov	r4, r0
 8000dbc:	f00a f88b 	bl	800aed6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000dc0:	4620      	mov	r0, r4
 8000dc2:	bd10      	pop	{r4, pc}
 8000dc4:	08022368 	.word	0x08022368

08000dc8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000dc8:	b510      	push	{r4, lr}
 8000dca:	4604      	mov	r4, r0
 8000dcc:	f7ff fff2 	bl	8000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dd0:	4620      	mov	r0, r4
 8000dd2:	f241 717c 	movw	r1, #6012	; 0x177c
 8000dd6:	f01f feaa 	bl	8020b2e <_ZdlPvj>
 8000dda:	4620      	mov	r0, r4
 8000ddc:	bd10      	pop	{r4, pc}
	...

08000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000de0:	b510      	push	{r4, lr}
 8000de2:	4b03      	ldr	r3, [pc, #12]	; (8000df0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000de4:	6003      	str	r3, [r0, #0]
 8000de6:	4604      	mov	r4, r0
 8000de8:	f00a f875 	bl	800aed6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000dec:	4620      	mov	r0, r4
 8000dee:	bd10      	pop	{r4, pc}
 8000df0:	08022334 	.word	0x08022334

08000df4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000df4:	b510      	push	{r4, lr}
 8000df6:	4604      	mov	r4, r0
 8000df8:	f7ff fff2 	bl	8000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dfc:	4620      	mov	r0, r4
 8000dfe:	2118      	movs	r1, #24
 8000e00:	f01f fe95 	bl	8020b2e <_ZdlPvj>
 8000e04:	4620      	mov	r0, r4
 8000e06:	bd10      	pop	{r4, pc}

08000e08 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000e08:	b510      	push	{r4, lr}
 8000e0a:	4b09      	ldr	r3, [pc, #36]	; (8000e30 <_ZN12FrontendHeapD1Ev+0x28>)
 8000e0c:	6003      	str	r3, [r0, #0]
 8000e0e:	4604      	mov	r4, r0
 8000e10:	f500 50bd 	add.w	r0, r0, #6048	; 0x17a0
 8000e14:	3008      	adds	r0, #8
 8000e16:	f7ff ffb9 	bl	8000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000e1a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000e1e:	f7ff ffc9 	bl	8000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e22:	f104 0014 	add.w	r0, r4, #20
 8000e26:	f7ff ffdb 	bl	8000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e2a:	4620      	mov	r0, r4
 8000e2c:	bd10      	pop	{r4, pc}
 8000e2e:	bf00      	nop
 8000e30:	080223d0 	.word	0x080223d0

08000e34 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000e34:	b508      	push	{r3, lr}
 8000e36:	4802      	ldr	r0, [pc, #8]	; (8000e40 <__tcf_0+0xc>)
 8000e38:	f7ff ffe6 	bl	8000e08 <_ZN12FrontendHeapD1Ev>
 8000e3c:	bd08      	pop	{r3, pc}
 8000e3e:	bf00      	nop
 8000e40:	200001a4 	.word	0x200001a4

08000e44 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000e44:	b510      	push	{r4, lr}
 8000e46:	4604      	mov	r4, r0
 8000e48:	f7ff ffde 	bl	8000e08 <_ZN12FrontendHeapD1Ev>
 8000e4c:	4620      	mov	r0, r4
 8000e4e:	f641 1144 	movw	r1, #6468	; 0x1944
 8000e52:	f01f fe6c 	bl	8020b2e <_ZdlPvj>
 8000e56:	4620      	mov	r0, r4
 8000e58:	bd10      	pop	{r4, pc}
	...

08000e5c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000e5c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000e60:	f001 f8de 	bl	8002020 <_ZN14BitmapDatabase11getInstanceEv>
 8000e64:	4605      	mov	r5, r0
 8000e66:	f001 f8df 	bl	8002028 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000e6a:	2400      	movs	r4, #0
 8000e6c:	4601      	mov	r1, r0
 8000e6e:	4623      	mov	r3, r4
 8000e70:	4628      	mov	r0, r5
 8000e72:	4622      	mov	r2, r4
 8000e74:	9400      	str	r4, [sp, #0]
 8000e76:	f013 fd3b 	bl	80148f0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000e7a:	4b26      	ldr	r3, [pc, #152]	; (8000f14 <touchgfx_init+0xb8>)
 8000e7c:	4a26      	ldr	r2, [pc, #152]	; (8000f18 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8000e7e:	4d27      	ldr	r5, [pc, #156]	; (8000f1c <touchgfx_init+0xc0>)
 8000e80:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000e82:	4620      	mov	r0, r4
 8000e84:	f004 fd3a 	bl	80058fc <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000e88:	4825      	ldr	r0, [pc, #148]	; (8000f20 <touchgfx_init+0xc4>)
 8000e8a:	f013 fc99 	bl	80147c0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000e8e:	782b      	ldrb	r3, [r5, #0]
 8000e90:	f3bf 8f5b 	dmb	ish
 8000e94:	07db      	lsls	r3, r3, #31
 8000e96:	d436      	bmi.n	8000f06 <touchgfx_init+0xaa>
 8000e98:	4628      	mov	r0, r5
 8000e9a:	f01f fe4a 	bl	8020b32 <__cxa_guard_acquire>
 8000e9e:	b390      	cbz	r0, 8000f06 <touchgfx_init+0xaa>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8000ea0:	4c20      	ldr	r4, [pc, #128]	; (8000f24 <touchgfx_init+0xc8>)
 8000ea2:	4f21      	ldr	r7, [pc, #132]	; (8000f28 <touchgfx_init+0xcc>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000ea4:	4b21      	ldr	r3, [pc, #132]	; (8000f2c <touchgfx_init+0xd0>)
 8000ea6:	6023      	str	r3, [r4, #0]
 8000ea8:	f107 0644 	add.w	r6, r7, #68	; 0x44
 8000eac:	f104 0014 	add.w	r0, r4, #20
 8000eb0:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8000eb4:	6060      	str	r0, [r4, #4]
 8000eb6:	f8c4 8008 	str.w	r8, [r4, #8]
 8000eba:	60e7      	str	r7, [r4, #12]
 8000ebc:	6126      	str	r6, [r4, #16]
 8000ebe:	f00a f80b 	bl	800aed8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ec2:	4b1b      	ldr	r3, [pc, #108]	; (8000f30 <touchgfx_init+0xd4>)
 8000ec4:	6163      	str	r3, [r4, #20]
 8000ec6:	4640      	mov	r0, r8
 8000ec8:	f00a f806 	bl	800aed8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ecc:	4b19      	ldr	r3, [pc, #100]	; (8000f34 <touchgfx_init+0xd8>)
 8000ece:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000ed0:	4638      	mov	r0, r7
 8000ed2:	f00a f801 	bl	800aed8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ed6:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8000eda:	4a17      	ldr	r2, [pc, #92]	; (8000f38 <touchgfx_init+0xdc>)
 8000edc:	f8c3 27a8 	str.w	r2, [r3, #1960]	; 0x7a8
 8000ee0:	f503 60fd 	add.w	r0, r3, #2024	; 0x7e8
 8000ee4:	f004 fd86 	bl	80059f4 <_ZN5ModelC1Ev>
 8000ee8:	4622      	mov	r2, r4
 8000eea:	f107 0140 	add.w	r1, r7, #64	; 0x40
 8000eee:	4630      	mov	r0, r6
 8000ef0:	f004 fd76 	bl	80059e0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8000ef4:	4630      	mov	r0, r6
 8000ef6:	f001 fad9 	bl	80024ac <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8000efa:	4810      	ldr	r0, [pc, #64]	; (8000f3c <touchgfx_init+0xe0>)
 8000efc:	f01f fe64 	bl	8020bc8 <atexit>
 8000f00:	4628      	mov	r0, r5
 8000f02:	f01f fe22 	bl	8020b4a <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8000f06:	480e      	ldr	r0, [pc, #56]	; (8000f40 <touchgfx_init+0xe4>)
}
 8000f08:	b002      	add	sp, #8
 8000f0a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8000f0e:	f7ff bc3e 	b.w	800078e <_ZN11TouchGFXHAL10initializeEv>
 8000f12:	bf00      	nop
 8000f14:	200174b4 	.word	0x200174b4
 8000f18:	20002908 	.word	0x20002908
 8000f1c:	200001a0 	.word	0x200001a0
 8000f20:	20000008 	.word	0x20000008
 8000f24:	200001a4 	.word	0x200001a4
 8000f28:	2000194c 	.word	0x2000194c
 8000f2c:	080223d0 	.word	0x080223d0
 8000f30:	08022334 	.word	0x08022334
 8000f34:	08022368 	.word	0x08022368
 8000f38:	0802239c 	.word	0x0802239c
 8000f3c:	08000e35 	.word	0x08000e35
 8000f40:	2000288c 	.word	0x2000288c

08000f44 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8000f44:	4801      	ldr	r0, [pc, #4]	; (8000f4c <touchgfx_taskEntry+0x8>)
 8000f46:	f7ff bc24 	b.w	8000792 <_ZN11TouchGFXHAL9taskEntryEv>
 8000f4a:	bf00      	nop
 8000f4c:	2000288c 	.word	0x2000288c

08000f50 <_GLOBAL__sub_I_touchgfx_init>:
}
 8000f50:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
 8000f52:	4c23      	ldr	r4, [pc, #140]	; (8000fe0 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static STM32DMA dma;
 8000f54:	4e23      	ldr	r6, [pc, #140]	; (8000fe4 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8000f56:	4b24      	ldr	r3, [pc, #144]	; (8000fe8 <_GLOBAL__sub_I_touchgfx_init+0x98>)
static LCD16bpp display;
 8000f58:	4d24      	ldr	r5, [pc, #144]	; (8000fec <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 8000f5a:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8000f5c:	4630      	mov	r0, r6
 8000f5e:	f7ff fd79 	bl	8000a54 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8000f62:	4628      	mov	r0, r5
 8000f64:	f016 fdce 	bl	8017b04 <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 8000f68:	4b21      	ldr	r3, [pc, #132]	; (8000ff0 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
        instance = this;
 8000f6a:	4822      	ldr	r0, [pc, #136]	; (8000ff4 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
          lastRenderMethod(HARDWARE)
 8000f6c:	60dc      	str	r4, [r3, #12]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f6e:	4c22      	ldr	r4, [pc, #136]	; (8000ff8 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
        instance = this;
 8000f70:	6003      	str	r3, [r0, #0]
          lastRenderMethod(HARDWARE)
 8000f72:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f74:	20f0      	movs	r0, #240	; 0xf0
          lastRenderMethod(HARDWARE)
 8000f76:	f44f 7180 	mov.w	r1, #256	; 0x100
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f7a:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 8000f7c:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f80:	4c1e      	ldr	r4, [pc, #120]	; (8000ffc <_GLOBAL__sub_I_touchgfx_init+0xac>)
          lastRenderMethod(HARDWARE)
 8000f82:	491f      	ldr	r1, [pc, #124]	; (8001000 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f84:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 8000f86:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f8a:	4c1e      	ldr	r4, [pc, #120]	; (8001004 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8000f8c:	861a      	strh	r2, [r3, #48]	; 0x30
          lastRenderMethod(HARDWARE)
 8000f8e:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f92:	f44f 70a0 	mov.w	r0, #320	; 0x140
          lastRenderMethod(HARDWARE)
 8000f96:	6759      	str	r1, [r3, #116]	; 0x74
 8000f98:	2101      	movs	r1, #1
 8000f9a:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8000f9e:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8000fa2:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8000fa6:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8000faa:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8000fae:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8000fb2:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 8000fb6:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
 8000fba:	661a      	str	r2, [r3, #96]	; 0x60
 8000fbc:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 8000fc0:	671a      	str	r2, [r3, #112]	; 0x70
 8000fc2:	e9c3 6501 	strd	r6, r5, [r3, #4]
 8000fc6:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000fca:	8020      	strh	r0, [r4, #0]
 8000fcc:	4c0e      	ldr	r4, [pc, #56]	; (8001008 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8000fce:	f883 1034 	strb.w	r1, [r3, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000fd2:	8020      	strh	r0, [r4, #0]
        DISPLAY_ROTATION = rotate0;
 8000fd4:	480d      	ldr	r0, [pc, #52]	; (800100c <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8000fd6:	7002      	strb	r2, [r0, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8000fd8:	4a0d      	ldr	r2, [pc, #52]	; (8001010 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8000fda:	601a      	str	r2, [r3, #0]
}
 8000fdc:	bd70      	pop	{r4, r5, r6, pc}
 8000fde:	bf00      	nop
 8000fe0:	20001ae8 	.word	0x20001ae8
 8000fe4:	20001aec 	.word	0x20001aec
 8000fe8:	08021e24 	.word	0x08021e24
 8000fec:	2000290c 	.word	0x2000290c
 8000ff0:	2000288c 	.word	0x2000288c
 8000ff4:	20017450 	.word	0x20017450
 8000ff8:	20017444 	.word	0x20017444
 8000ffc:	2001744a 	.word	0x2001744a
 8001000:	01000001 	.word	0x01000001
 8001004:	20017446 	.word	0x20017446
 8001008:	2001744c 	.word	0x2001744c
 800100c:	20017448 	.word	0x20017448
 8001010:	08021fb0 	.word	0x08021fb0

08001014 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001014:	4801      	ldr	r0, [pc, #4]	; (800101c <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001016:	f7ff bcf9 	b.w	8000a0c <_ZN8STM32DMAD1Ev>
 800101a:	bf00      	nop
 800101c:	20001aec 	.word	0x20001aec

08001020 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001020:	4b03      	ldr	r3, [pc, #12]	; (8001030 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 8001022:	2290      	movs	r2, #144	; 0x90
 8001024:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 8001028:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 800102c:	4770      	bx	lr
 800102e:	bf00      	nop
 8001030:	e000e100 	.word	0xe000e100

08001034 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001034:	4a09      	ldr	r2, [pc, #36]	; (800105c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8001036:	490a      	ldr	r1, [pc, #40]	; (8001060 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001038:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800103a:	480a      	ldr	r0, [pc, #40]	; (8001064 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800103c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001040:	3b01      	subs	r3, #1
 8001042:	b29b      	uxth	r3, r3
 8001044:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001046:	6911      	ldr	r1, [r2, #16]
 8001048:	f3c1 010a 	ubfx	r1, r1, #0, #11
 800104c:	3901      	subs	r1, #1
 800104e:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8001050:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8001052:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001054:	f043 0301 	orr.w	r3, r3, #1
 8001058:	6353      	str	r3, [r2, #52]	; 0x34
}
 800105a:	4770      	bx	lr
 800105c:	40016800 	.word	0x40016800
 8001060:	20002988 	.word	0x20002988
 8001064:	20002986 	.word	0x20002986

08001068 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001068:	4b01      	ldr	r3, [pc, #4]	; (8001070 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 800106a:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 800106e:	4770      	bx	lr
 8001070:	40016800 	.word	0x40016800

08001074 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001074:	4b02      	ldr	r3, [pc, #8]	; (8001080 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001076:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001078:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800107c:	625a      	str	r2, [r3, #36]	; 0x24
}
 800107e:	4770      	bx	lr
 8001080:	40016800 	.word	0x40016800

08001084 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001084:	b570      	push	{r4, r5, r6, lr}
 8001086:	4604      	mov	r4, r0
    HAL::initialize();
 8001088:	f00a fa2d 	bl	800b4e6 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800108c:	6823      	ldr	r3, [r4, #0]
 800108e:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8001090:	f010 fa12 	bl	80114b8 <_ZN8touchgfx11Application11getInstanceEv>
 8001094:	4601      	mov	r1, r0
 8001096:	4620      	mov	r0, r4
 8001098:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800109a:	6823      	ldr	r3, [r4, #0]
 800109c:	4a05      	ldr	r2, [pc, #20]	; (80010b4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800109e:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 80010a2:	4620      	mov	r0, r4
 80010a4:	46ac      	mov	ip, r5
 80010a6:	2300      	movs	r3, #0
}
 80010a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80010ac:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 80010b0:	4760      	bx	ip
 80010b2:	bf00      	nop
 80010b4:	d0025800 	.word	0xd0025800

080010b8 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 80010b8:	f00a b9fc 	b.w	800b4b4 <_ZN8touchgfx3HAL10beginFrameEv>

080010bc <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    if (frameBufferUpdatedThisFrame)
 80010bc:	f890 304b 	ldrb.w	r3, [r0, #75]	; 0x4b
 80010c0:	b113      	cbz	r3, 80010c8 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xc>
        refreshRequested = true;
 80010c2:	4b02      	ldr	r3, [pc, #8]	; (80010cc <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x10>)
 80010c4:	2201      	movs	r2, #1
 80010c6:	701a      	strb	r2, [r3, #0]
    HAL::endFrame();
 80010c8:	f00a ba00 	b.w	800b4cc <_ZN8touchgfx3HAL8endFrameEv>
 80010cc:	20002984 	.word	0x20002984

080010d0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80010d0:	f00a b9ba 	b.w	800b448 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080010d4 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80010d4:	f00a bb13 	b.w	800b6fe <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080010d8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010d8:	4b03      	ldr	r3, [pc, #12]	; (80010e8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 80010da:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80010de:	609a      	str	r2, [r3, #8]
 80010e0:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80010e4:	609a      	str	r2, [r3, #8]
}
 80010e6:	4770      	bx	lr
 80010e8:	e000e100 	.word	0xe000e100

080010ec <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010ec:	4b08      	ldr	r3, [pc, #32]	; (8001110 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 80010ee:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80010f2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80010f6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80010fa:	f3bf 8f6f 	isb	sy
 80010fe:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001102:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001106:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800110a:	f3bf 8f6f 	isb	sy
}
 800110e:	4770      	bx	lr
 8001110:	e000e100 	.word	0xe000e100

08001114 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001114:	b510      	push	{r4, lr}
        return instance;
 8001116:	4c14      	ldr	r4, [pc, #80]	; (8001168 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001118:	6823      	ldr	r3, [r4, #0]
 800111a:	b323      	cbz	r3, 8001166 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 800111c:	4b13      	ldr	r3, [pc, #76]	; (800116c <HAL_LTDC_LineEventCallback+0x58>)
 800111e:	4a14      	ldr	r2, [pc, #80]	; (8001170 <HAL_LTDC_LineEventCallback+0x5c>)
 8001120:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001122:	8811      	ldrh	r1, [r2, #0]
 8001124:	428b      	cmp	r3, r1
 8001126:	d113      	bne.n	8001150 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001128:	4b12      	ldr	r3, [pc, #72]	; (8001174 <HAL_LTDC_LineEventCallback+0x60>)
 800112a:	8819      	ldrh	r1, [r3, #0]
 800112c:	f006 fbcc 	bl	80078c8 <HAL_LTDC_ProgramLineEvent>
 8001130:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8001132:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8001136:	3301      	adds	r3, #1
 8001138:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 800113c:	f7ff fc14 	bl	8000968 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001140:	6820      	ldr	r0, [r4, #0]
 8001142:	f00a ff07 	bl	800bf54 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001146:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 800114a:	2000      	movs	r0, #0
 800114c:	f7ff baf8 	b.w	8000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001150:	f006 fbba 	bl	80078c8 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001154:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8001156:	6803      	ldr	r3, [r0, #0]
 8001158:	6a1b      	ldr	r3, [r3, #32]
 800115a:	4798      	blx	r3
    }
 800115c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001160:	2000      	movs	r0, #0
 8001162:	f7ff baee 	b.w	8000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001166:	bd10      	pop	{r4, pc}
 8001168:	20017450 	.word	0x20017450
 800116c:	40016800 	.word	0x40016800
 8001170:	20002988 	.word	0x20002988
 8001174:	20002986 	.word	0x20002986

08001178 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8001178:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;
  
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800117a:	4b06      	ldr	r3, [pc, #24]	; (8001194 <SPI5_Write+0x1c>)
{
 800117c:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001180:	681b      	ldr	r3, [r3, #0]
 8001182:	4805      	ldr	r0, [pc, #20]	; (8001198 <SPI5_Write+0x20>)
 8001184:	2201      	movs	r2, #1
 8001186:	f10d 0106 	add.w	r1, sp, #6
 800118a:	f007 f8ae 	bl	80082ea <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 800118e:	b003      	add	sp, #12
 8001190:	f85d fb04 	ldr.w	pc, [sp], #4
 8001194:	20000014 	.word	0x20000014
 8001198:	200064b0 	.word	0x200064b0

0800119c <ZadanieDwa>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_ZadanieDwa */
 void ZadanieDwa(void *argument)
{
 800119c:	b583      	push	{r0, r1, r7, lr}
  /* USER CODE BEGIN ZadanieDwa */

  /* Infinite loop */
  for(;;)
  {
		if(Minelasekunda){ //jesli zostalo wykryte przerwanie z liniczka7
 800119e:	4d2e      	ldr	r5, [pc, #184]	; (8001258 <ZadanieDwa+0xbc>)

					//pomiar napiecia
					HAL_ADC_Start(&hadc1);
					HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
					volatile uint32_t value = HAL_ADC_GetValue(&hadc1);
					BatteryVoltage= 2.84f *value / 4096.0f;
 80011a0:	4c2e      	ldr	r4, [pc, #184]	; (800125c <ZadanieDwa+0xc0>)
		if(Minelasekunda){ //jesli zostalo wykryte przerwanie z liniczka7
 80011a2:	782b      	ldrb	r3, [r5, #0]
 80011a4:	2b00      	cmp	r3, #0
 80011a6:	d053      	beq.n	8001250 <ZadanieDwa+0xb4>
			Minelasekunda=0; //kasuj flage
 80011a8:	2300      	movs	r3, #0
					HAL_ADC_Start(&hadc1);
 80011aa:	482d      	ldr	r0, [pc, #180]	; (8001260 <ZadanieDwa+0xc4>)
			Minelasekunda=0; //kasuj flage
 80011ac:	702b      	strb	r3, [r5, #0]
					HAL_ADC_Start(&hadc1);
 80011ae:	f005 f9bf 	bl	8006530 <HAL_ADC_Start>
					HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 80011b2:	f04f 31ff 	mov.w	r1, #4294967295
 80011b6:	482a      	ldr	r0, [pc, #168]	; (8001260 <ZadanieDwa+0xc4>)
 80011b8:	f005 fa2e 	bl	8006618 <HAL_ADC_PollForConversion>
					volatile uint32_t value = HAL_ADC_GetValue(&hadc1);
 80011bc:	4828      	ldr	r0, [pc, #160]	; (8001260 <ZadanieDwa+0xc4>)
 80011be:	f005 fa7a 	bl	80066b6 <HAL_ADC_GetValue>
 80011c2:	9001      	str	r0, [sp, #4]
					BatteryVoltage= 2.84f *value / 4096.0f;
 80011c4:	eddd 7a01 	vldr	s15, [sp, #4]
 80011c8:	ed9f 7a26 	vldr	s14, [pc, #152]	; 8001264 <ZadanieDwa+0xc8>


					if (ChargeStarted) { //jesli zostal kliniety button na GUI, i chcemy ladowac baterie.
 80011cc:	4926      	ldr	r1, [pc, #152]	; (8001268 <ZadanieDwa+0xcc>)
 80011ce:	4b27      	ldr	r3, [pc, #156]	; (800126c <ZadanieDwa+0xd0>)
					BatteryVoltage= 2.84f *value / 4096.0f;
 80011d0:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80011d4:	ee67 7a87 	vmul.f32	s15, s15, s14
 80011d8:	ed9f 7a25 	vldr	s14, [pc, #148]	; 8001270 <ZadanieDwa+0xd4>
 80011dc:	ee67 7a87 	vmul.f32	s15, s15, s14
 80011e0:	edc4 7a00 	vstr	s15, [r4]
					if (ChargeStarted) { //jesli zostal kliniety button na GUI, i chcemy ladowac baterie.
 80011e4:	680a      	ldr	r2, [r1, #0]
 80011e6:	b1a2      	cbz	r2, 8001212 <ZadanieDwa+0x76>
						NapiecieBateriilast60Sec[CzsasLadowaniaWSec] =BatteryVoltage;
 80011e8:	881a      	ldrh	r2, [r3, #0]
 80011ea:	6826      	ldr	r6, [r4, #0]
 80011ec:	b290      	uxth	r0, r2
 80011ee:	4a21      	ldr	r2, [pc, #132]	; (8001274 <ZadanieDwa+0xd8>)
 80011f0:	eb02 0280 	add.w	r2, r2, r0, lsl #2
 80011f4:	6016      	str	r6, [r2, #0]
						if (CzsasLadowaniaWMin==0 && CzsasLadowaniaWSec==0)NapiecieBaterii[0]=BatteryVoltage; //jesli dopiero co rozpoczety pomiar dodaj pierwsza wartosc do tabeli minut
 80011f6:	4a20      	ldr	r2, [pc, #128]	; (8001278 <ZadanieDwa+0xdc>)
 80011f8:	8812      	ldrh	r2, [r2, #0]
 80011fa:	b292      	uxth	r2, r2
 80011fc:	b92a      	cbnz	r2, 800120a <ZadanieDwa+0x6e>
 80011fe:	881a      	ldrh	r2, [r3, #0]
 8001200:	b292      	uxth	r2, r2
 8001202:	b912      	cbnz	r2, 800120a <ZadanieDwa+0x6e>
 8001204:	4a1d      	ldr	r2, [pc, #116]	; (800127c <ZadanieDwa+0xe0>)
 8001206:	6820      	ldr	r0, [r4, #0]
 8001208:	6010      	str	r0, [r2, #0]
						CzsasLadowaniaWSec++;
 800120a:	881a      	ldrh	r2, [r3, #0]
 800120c:	3201      	adds	r2, #1
 800120e:	b292      	uxth	r2, r2
 8001210:	801a      	strh	r2, [r3, #0]
					}

					//jesli uplynela minuta dodaj dane do tabel
					if (CzsasLadowaniaWSec >59 ) {
 8001212:	881a      	ldrh	r2, [r3, #0]
 8001214:	b292      	uxth	r2, r2
 8001216:	2a3b      	cmp	r2, #59	; 0x3b
 8001218:	d90d      	bls.n	8001236 <ZadanieDwa+0x9a>
						CzsasLadowaniaWSec=0;
 800121a:	2200      	movs	r2, #0
 800121c:	801a      	strh	r2, [r3, #0]
						CzsasLadowaniaWMin++;
 800121e:	4a16      	ldr	r2, [pc, #88]	; (8001278 <ZadanieDwa+0xdc>)
 8001220:	8813      	ldrh	r3, [r2, #0]
 8001222:	3301      	adds	r3, #1
 8001224:	b29b      	uxth	r3, r3
 8001226:	8013      	strh	r3, [r2, #0]
						NapiecieBaterii[CzsasLadowaniaWMin]=BatteryVoltage; //napiecie aktaalizowane co min jest odczytem ostatniego napiecia
 8001228:	8813      	ldrh	r3, [r2, #0]
 800122a:	6820      	ldr	r0, [r4, #0]
 800122c:	b29a      	uxth	r2, r3
 800122e:	4b13      	ldr	r3, [pc, #76]	; (800127c <ZadanieDwa+0xe0>)
 8001230:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8001234:	6018      	str	r0, [r3, #0]
					}
					//generowanie napiecia
					if(ChargeStarted==1 && UstawioneNapiecieNaopAmpie==0 ) { //jesli kliknieto przycik na GUI START   i nie ustawiono jeszce napiecia na op ampie
 8001236:	680f      	ldr	r7, [r1, #0]
 8001238:	2f01      	cmp	r7, #1
 800123a:	d109      	bne.n	8001250 <ZadanieDwa+0xb4>
 800123c:	4e10      	ldr	r6, [pc, #64]	; (8001280 <ZadanieDwa+0xe4>)
 800123e:	6832      	ldr	r2, [r6, #0]
 8001240:	b932      	cbnz	r2, 8001250 <ZadanieDwa+0xb4>
							HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, 4096/2);  //ustaw poprawne napiece tutaj
 8001242:	4810      	ldr	r0, [pc, #64]	; (8001284 <ZadanieDwa+0xe8>)
 8001244:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8001248:	2110      	movs	r1, #16
 800124a:	f005 fb69 	bl	8006920 <HAL_DAC_SetValue>
							UstawioneNapiecieNaopAmpie=1;
 800124e:	6037      	str	r7, [r6, #0]
					}

		}

    osDelay(1); //to chyba ma zostac?
 8001250:	2001      	movs	r0, #1
 8001252:	f007 fd31 	bl	8008cb8 <osDelay>
		if(Minelasekunda){ //jesli zostalo wykryte przerwanie z liniczka7
 8001256:	e7a4      	b.n	80011a2 <ZadanieDwa+0x6>
 8001258:	200029a0 	.word	0x200029a0
 800125c:	2000000c 	.word	0x2000000c
 8001260:	200062dc 	.word	0x200062dc
 8001264:	4035c28f 	.word	0x4035c28f
 8001268:	2000298c 	.word	0x2000298c
 800126c:	20002992 	.word	0x20002992
 8001270:	39800000 	.word	0x39800000
 8001274:	200061e4 	.word	0x200061e4
 8001278:	20002990 	.word	0x20002990
 800127c:	200029a4 	.word	0x200029a4
 8001280:	200062d8 	.word	0x200062d8
 8001284:	2000632c 	.word	0x2000632c

08001288 <SystemClock_Config>:
{
 8001288:	b5f0      	push	{r4, r5, r6, r7, lr}
 800128a:	b0a1      	sub	sp, #132	; 0x84
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800128c:	2210      	movs	r2, #16
 800128e:	2100      	movs	r1, #0
 8001290:	a80a      	add	r0, sp, #40	; 0x28
 8001292:	f01f fe01 	bl	8020e98 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001296:	2214      	movs	r2, #20
 8001298:	2100      	movs	r1, #0
 800129a:	a803      	add	r0, sp, #12
 800129c:	f01f fdfc 	bl	8020e98 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80012a0:	2100      	movs	r1, #0
 80012a2:	2230      	movs	r2, #48	; 0x30
 80012a4:	a814      	add	r0, sp, #80	; 0x50
 80012a6:	f01f fdf7 	bl	8020e98 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 80012aa:	2400      	movs	r4, #0
 80012ac:	4b22      	ldr	r3, [pc, #136]	; (8001338 <SystemClock_Config+0xb0>)
 80012ae:	9401      	str	r4, [sp, #4]
 80012b0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80012b2:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80012b6:	641a      	str	r2, [r3, #64]	; 0x40
 80012b8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80012ba:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80012be:	9301      	str	r3, [sp, #4]
 80012c0:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80012c2:	4b1e      	ldr	r3, [pc, #120]	; (800133c <SystemClock_Config+0xb4>)
 80012c4:	9402      	str	r4, [sp, #8]
 80012c6:	681a      	ldr	r2, [r3, #0]
 80012c8:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 80012cc:	601a      	str	r2, [r3, #0]
 80012ce:	681b      	ldr	r3, [r3, #0]
 80012d0:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80012d4:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80012d6:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80012d8:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80012da:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80012de:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80012e2:	2502      	movs	r5, #2
 80012e4:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 80012e8:	e9cd 530e 	strd	r5, r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 80012ec:	2708      	movs	r7, #8
 80012ee:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLQ = 4;
 80012f2:	2604      	movs	r6, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80012f4:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLN = 336;
 80012f6:	e9cd 7310 	strd	r7, r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80012fa:	9512      	str	r5, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 80012fc:	9613      	str	r6, [sp, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80012fe:	f006 fb01 	bl	8007904 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001302:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001304:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001308:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 800130c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001310:	e9cd 1306 	strd	r1, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001314:	a803      	add	r0, sp, #12
 8001316:	2105      	movs	r1, #5
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001318:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800131a:	f006 fccb 	bl	8007cb4 <HAL_RCC_ClockConfig>
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 800131e:	23c0      	movs	r3, #192	; 0xc0
 8001320:	9318      	str	r3, [sp, #96]	; 0x60
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001322:	a814      	add	r0, sp, #80	; 0x50
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001324:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001328:	9714      	str	r7, [sp, #80]	; 0x50
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 800132a:	961a      	str	r6, [sp, #104]	; 0x68
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 800132c:	931d      	str	r3, [sp, #116]	; 0x74
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800132e:	f006 fd9b 	bl	8007e68 <HAL_RCCEx_PeriphCLKConfig>
}
 8001332:	b021      	add	sp, #132	; 0x84
 8001334:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001336:	bf00      	nop
 8001338:	40023800 	.word	0x40023800
 800133c:	40007000 	.word	0x40007000

08001340 <main>:
{
 8001340:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8001344:	b09b      	sub	sp, #108	; 0x6c
  HAL_Init();
 8001346:	f005 f80d 	bl	8006364 <HAL_Init>
  SystemClock_Config();
 800134a:	f7ff ff9d 	bl	8001288 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800134e:	2214      	movs	r2, #20
 8001350:	2100      	movs	r1, #0
 8001352:	a80d      	add	r0, sp, #52	; 0x34
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001354:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001356:	f01f fd9f 	bl	8020e98 <memset>
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800135a:	4bc4      	ldr	r3, [pc, #784]	; (800166c <main+0x32c>)
 800135c:	9400      	str	r4, [sp, #0]
 800135e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001360:	48c3      	ldr	r0, [pc, #780]	; (8001670 <main+0x330>)
  hi2c3.Instance = I2C3;
 8001362:	4dc4      	ldr	r5, [pc, #784]	; (8001674 <main+0x334>)
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001364:	f042 0220 	orr.w	r2, r2, #32
 8001368:	631a      	str	r2, [r3, #48]	; 0x30
 800136a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800136c:	f002 0220 	and.w	r2, r2, #32
 8001370:	9200      	str	r2, [sp, #0]
 8001372:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001374:	9401      	str	r4, [sp, #4]
 8001376:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001378:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800137c:	631a      	str	r2, [r3, #48]	; 0x30
 800137e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001380:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8001384:	9201      	str	r2, [sp, #4]
 8001386:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001388:	9402      	str	r4, [sp, #8]
 800138a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800138c:	f042 0204 	orr.w	r2, r2, #4
 8001390:	631a      	str	r2, [r3, #48]	; 0x30
 8001392:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001394:	f002 0204 	and.w	r2, r2, #4
 8001398:	9202      	str	r2, [sp, #8]
 800139a:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800139c:	9403      	str	r4, [sp, #12]
 800139e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013a0:	f042 0201 	orr.w	r2, r2, #1
 80013a4:	631a      	str	r2, [r3, #48]	; 0x30
 80013a6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013a8:	f002 0201 	and.w	r2, r2, #1
 80013ac:	9203      	str	r2, [sp, #12]
 80013ae:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80013b0:	9404      	str	r4, [sp, #16]
 80013b2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013b4:	f042 0202 	orr.w	r2, r2, #2
 80013b8:	631a      	str	r2, [r3, #48]	; 0x30
 80013ba:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013bc:	f002 0202 	and.w	r2, r2, #2
 80013c0:	9204      	str	r2, [sp, #16]
 80013c2:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80013c4:	9405      	str	r4, [sp, #20]
 80013c6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013c8:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80013cc:	631a      	str	r2, [r3, #48]	; 0x30
 80013ce:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013d0:	f002 0240 	and.w	r2, r2, #64	; 0x40
 80013d4:	9205      	str	r2, [sp, #20]
 80013d6:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80013d8:	9406      	str	r4, [sp, #24]
 80013da:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013dc:	f042 0210 	orr.w	r2, r2, #16
 80013e0:	631a      	str	r2, [r3, #48]	; 0x30
 80013e2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013e4:	f002 0210 	and.w	r2, r2, #16
 80013e8:	9206      	str	r2, [sp, #24]
 80013ea:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80013ec:	9407      	str	r4, [sp, #28]
 80013ee:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013f0:	f042 0208 	orr.w	r2, r2, #8
 80013f4:	631a      	str	r2, [r3, #48]	; 0x30
 80013f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80013f8:	f003 0308 	and.w	r3, r3, #8
 80013fc:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80013fe:	4622      	mov	r2, r4
 8001400:	2104      	movs	r1, #4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001402:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001404:	f005 fc82 	bl	8006d0c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 8001408:	489b      	ldr	r0, [pc, #620]	; (8001678 <main+0x338>)
 800140a:	4622      	mov	r2, r4
 800140c:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001410:	f005 fc7c 	bl	8006d0c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001414:	4622      	mov	r2, r4
 8001416:	4899      	ldr	r0, [pc, #612]	; (800167c <main+0x33c>)
 8001418:	f44f 5140 	mov.w	r1, #12288	; 0x3000
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800141c:	2601      	movs	r6, #1
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 800141e:	f005 fc75 	bl	8006d0c <HAL_GPIO_WritePin>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001422:	2702      	movs	r7, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001424:	f04f 0804 	mov.w	r8, #4
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001428:	4891      	ldr	r0, [pc, #580]	; (8001670 <main+0x330>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800142a:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800142c:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800142e:	e9cd 860d 	strd	r8, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001432:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001434:	f005 fb82 	bl	8006b3c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8001438:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800143c:	488e      	ldr	r0, [pc, #568]	; (8001678 <main+0x338>)
 800143e:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001440:	e9cd 360d 	strd	r3, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001444:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001448:	f005 fb78 	bl	8006b3c <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800144c:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 800144e:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001452:	488a      	ldr	r0, [pc, #552]	; (800167c <main+0x33c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001454:	e9cd 360d 	strd	r3, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001458:	e9cd 470f 	strd	r4, r7, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800145c:	f005 fb6e 	bl	8006b3c <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001460:	4887      	ldr	r0, [pc, #540]	; (8001680 <main+0x340>)
 8001462:	4b88      	ldr	r3, [pc, #544]	; (8001684 <main+0x344>)
 8001464:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001466:	f005 fa17 	bl	8006898 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 800146a:	4a87      	ldr	r2, [pc, #540]	; (8001688 <main+0x348>)
 800146c:	4b87      	ldr	r3, [pc, #540]	; (800168c <main+0x34c>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800146e:	622c      	str	r4, [r5, #32]
  hi2c3.Init.ClockSpeed = 100000;
 8001470:	e9c5 2300 	strd	r2, r3, [r5]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001474:	4628      	mov	r0, r5
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001476:	f44f 4380 	mov.w	r3, #16384	; 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800147a:	e9c5 3404 	strd	r3, r4, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 800147e:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001482:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001486:	f005 fe23 	bl	80070d0 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 800148a:	2110      	movs	r1, #16
 800148c:	4628      	mov	r0, r5
 800148e:	f006 f85f 	bl	8007550 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001492:	4621      	mov	r1, r4
 8001494:	4628      	mov	r0, r5
 8001496:	f006 f87a 	bl	800758e <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 800149a:	487d      	ldr	r0, [pc, #500]	; (8001690 <main+0x350>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800149c:	497d      	ldr	r1, [pc, #500]	; (8001694 <main+0x354>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800149e:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 80014a0:	f44f 7382 	mov.w	r3, #260	; 0x104
 80014a4:	e9c0 1300 	strd	r1, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 80014a8:	f44f 7500 	mov.w	r5, #512	; 0x200
 80014ac:	2318      	movs	r3, #24
 80014ae:	e9c0 5306 	strd	r5, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 80014b2:	230a      	movs	r3, #10
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80014b4:	4d78      	ldr	r5, [pc, #480]	; (8001698 <main+0x358>)
  hspi5.Init.CRCPolynomial = 10;
 80014b6:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 80014b8:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 80014bc:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 80014c0:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 80014c4:	f006 fed4 	bl	8008270 <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80014c8:	4b74      	ldr	r3, [pc, #464]	; (800169c <main+0x35c>)
  SdramTiming.LoadToActiveDelay = 2;
 80014ca:	970d      	str	r7, [sp, #52]	; 0x34
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 80014cc:	e9c5 3600 	strd	r3, r6, [r5]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80014d0:	f04f 0910 	mov.w	r9, #16
 80014d4:	2340      	movs	r3, #64	; 0x40
 80014d6:	e9c5 9304 	strd	r9, r3, [r5, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 80014da:	f44f 73c0 	mov.w	r3, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80014de:	e9c5 3406 	strd	r3, r4, [r5, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80014e2:	f44f 6300 	mov.w	r3, #2048	; 0x800
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 80014e6:	e9c5 3408 	strd	r3, r4, [r5, #32]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 80014ea:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  SdramTiming.ExitSelfRefreshDelay = 7;
 80014ee:	f04f 0a07 	mov.w	sl, #7
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 80014f2:	62ab      	str	r3, [r5, #40]	; 0x28
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80014f4:	a90d      	add	r1, sp, #52	; 0x34
  SdramTiming.WriteRecoveryTime = 3;
 80014f6:	2303      	movs	r3, #3
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80014f8:	4628      	mov	r0, r5
  SdramTiming.RPDelay = 2;
 80014fa:	e9cd 3711 	strd	r3, r7, [sp, #68]	; 0x44
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80014fe:	f04f 0b08 	mov.w	fp, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001502:	e9c5 4802 	strd	r4, r8, [r5, #8]
  SdramTiming.SelfRefreshTime = 4;
 8001506:	e9cd a80e 	strd	sl, r8, [sp, #56]	; 0x38
  SdramTiming.RowCycleDelay = 7;
 800150a:	f8cd a040 	str.w	sl, [sp, #64]	; 0x40
  SdramTiming.RCDDelay = 2;
 800150e:	9713      	str	r7, [sp, #76]	; 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001510:	f006 fdd4 	bl	80080bc <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001514:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001518:	a909      	add	r1, sp, #36	; 0x24
 800151a:	4628      	mov	r0, r5
  Command->AutoRefreshNumber       = 1;
 800151c:	e9cd b60a 	strd	fp, r6, [sp, #40]	; 0x28
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 8001520:	9609      	str	r6, [sp, #36]	; 0x24
 __IO uint32_t tmpmrd =0;
 8001522:	9408      	str	r4, [sp, #32]
  Command->ModeRegisterDefinition  = 0;
 8001524:	940c      	str	r4, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001526:	f006 fde9 	bl	80080fc <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 800152a:	4630      	mov	r0, r6
 800152c:	f004 ff46 	bl	80063bc <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 8001530:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001534:	a909      	add	r1, sp, #36	; 0x24
 8001536:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001538:	e9cd 7b09 	strd	r7, fp, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 800153c:	e9cd 640b 	strd	r6, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 8001540:	f006 fddc 	bl	80080fc <HAL_SDRAM_SendCommand>
  Command->CommandMode             = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 8001544:	2303      	movs	r3, #3
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001546:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800154a:	a909      	add	r1, sp, #36	; 0x24
 800154c:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800154e:	e9cd 3b09 	strd	r3, fp, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 8001552:	e9cd 840b 	strd	r8, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001556:	f006 fdd1 	bl	80080fc <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 800155a:	f44f 720c 	mov.w	r2, #560	; 0x230
 800155e:	9208      	str	r2, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8001560:	9a08      	ldr	r2, [sp, #32]
 8001562:	920c      	str	r2, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001564:	a909      	add	r1, sp, #36	; 0x24
 8001566:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800156a:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800156c:	e9cd 8b09 	strd	r8, fp, [sp, #36]	; 0x24
  Command->AutoRefreshNumber       = 1;
 8001570:	960b      	str	r6, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001572:	f006 fdc3 	bl	80080fc <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT); 
 8001576:	f240 516a 	movw	r1, #1386	; 0x56a
 800157a:	4628      	mov	r0, r5
 800157c:	f006 fdd5 	bl	800812a <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001580:	2234      	movs	r2, #52	; 0x34
 8001582:	4621      	mov	r1, r4
 8001584:	eb0d 0002 	add.w	r0, sp, r2
 8001588:	f01f fc86 	bl	8020e98 <memset>
  hltdc.Instance = LTDC;
 800158c:	4d44      	ldr	r5, [pc, #272]	; (80016a0 <main+0x360>)
 800158e:	4a45      	ldr	r2, [pc, #276]	; (80016a4 <main+0x364>)
  hltdc.Init.Backcolor.Blue = 0;
 8001590:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8001592:	e9c5 2400 	strd	r2, r4, [r5]
  hltdc.Init.HorizontalSync = 9;
 8001596:	2209      	movs	r2, #9
  hltdc.Init.VerticalSync = 1;
 8001598:	e9c5 2605 	strd	r2, r6, [r5, #20]
  hltdc.Init.AccumulatedVBP = 3;
 800159c:	2303      	movs	r3, #3
 800159e:	221d      	movs	r2, #29
  hltdc.Init.AccumulatedActiveH = 323;
 80015a0:	f240 1c0d 	movw	ip, #269	; 0x10d
  hltdc.Init.AccumulatedVBP = 3;
 80015a4:	e9c5 2307 	strd	r2, r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 80015a8:	f240 1343 	movw	r3, #323	; 0x143
 80015ac:	e9c5 c309 	strd	ip, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 327;
 80015b0:	f240 1e17 	movw	lr, #279	; 0x117
 80015b4:	f240 1347 	movw	r3, #327	; 0x147
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80015b8:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 80015ba:	e9c5 e30b 	strd	lr, r3, [r5, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 80015be:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 80015c2:	612c      	str	r4, [r5, #16]
  hltdc.Init.Backcolor.Red = 0;
 80015c4:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80015c8:	f006 f886 	bl	80076d8 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 80015cc:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowX1 = 240;
 80015ce:	22f0      	movs	r2, #240	; 0xf0
  pLayerCfg.Alpha0 = 0;
 80015d0:	e9cd 1412 	strd	r1, r4, [sp, #72]	; 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80015d4:	f44f 6880 	mov.w	r8, #1024	; 0x400
 80015d8:	2105      	movs	r1, #5
  pLayerCfg.WindowY1 = 320;
 80015da:	f44f 73a0 	mov.w	r3, #320	; 0x140
  pLayerCfg.WindowY0 = 0;
 80015de:	e9cd 240e 	strd	r2, r4, [sp, #56]	; 0x38
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80015e2:	e9cd 8114 	strd	r8, r1, [sp, #80]	; 0x50
  pLayerCfg.ImageWidth = 240;
 80015e6:	e9cd 4216 	strd	r4, r2, [sp, #88]	; 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80015ea:	a90d      	add	r1, sp, #52	; 0x34
 80015ec:	4622      	mov	r2, r4
 80015ee:	4628      	mov	r0, r5
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 80015f0:	e9cd 3710 	strd	r3, r7, [sp, #64]	; 0x40
  LcdDrv = &ili9341_drv;
 80015f4:	4d2c      	ldr	r5, [pc, #176]	; (80016a8 <main+0x368>)
  pLayerCfg.ImageHeight = 320;
 80015f6:	9318      	str	r3, [sp, #96]	; 0x60
  pLayerCfg.WindowX0 = 0;
 80015f8:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.Backcolor.Blue = 0;
 80015fa:	f8ad 4064 	strh.w	r4, [sp, #100]	; 0x64
  pLayerCfg.Backcolor.Red = 0;
 80015fe:	f88d 4066 	strb.w	r4, [sp, #102]	; 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001602:	f006 f934 	bl	800786e <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8001606:	4b29      	ldr	r3, [pc, #164]	; (80016ac <main+0x36c>)
 8001608:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 800160a:	681b      	ldr	r3, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 800160c:	f8df b0b0 	ldr.w	fp, [pc, #176]	; 80016c0 <main+0x380>
  LcdDrv->Init();
 8001610:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001612:	682b      	ldr	r3, [r5, #0]
  hdma2d.Instance = DMA2D;
 8001614:	4d26      	ldr	r5, [pc, #152]	; (80016b0 <main+0x370>)
  LcdDrv->DisplayOff();
 8001616:	68db      	ldr	r3, [r3, #12]
 8001618:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 800161a:	4b26      	ldr	r3, [pc, #152]	; (80016b4 <main+0x374>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 800161c:	e9c5 470a 	strd	r4, r7, [r5, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001620:	e9c5 440c 	strd	r4, r4, [r5, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001624:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 8001626:	e9c5 3400 	strd	r3, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 800162a:	e9c5 7402 	strd	r7, r4, [r5, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800162e:	f005 f989 	bl	8006944 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001632:	4631      	mov	r1, r6
 8001634:	4628      	mov	r0, r5
 8001636:	f005 fa3d 	bl	8006ab4 <HAL_DMA2D_ConfigLayer>
  hadc1.Instance = ADC1;
 800163a:	4d1f      	ldr	r5, [pc, #124]	; (80016b8 <main+0x378>)
  ADC_ChannelConfTypeDef sConfig = {0};
 800163c:	464a      	mov	r2, r9
 800163e:	4621      	mov	r1, r4
 8001640:	a80d      	add	r0, sp, #52	; 0x34
 8001642:	f01f fc29 	bl	8020e98 <memset>
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8001646:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800164a:	e9c5 b300 	strd	fp, r3, [r5]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 800164e:	4628      	mov	r0, r5
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8001650:	4b1a      	ldr	r3, [pc, #104]	; (80016bc <main+0x37c>)
 8001652:	62ab      	str	r3, [r5, #40]	; 0x28
  hadc1.Init.NbrOfConversion = 1;
 8001654:	61ee      	str	r6, [r5, #28]
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8001656:	616e      	str	r6, [r5, #20]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8001658:	60ac      	str	r4, [r5, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 800165a:	612c      	str	r4, [r5, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 800165c:	762c      	strb	r4, [r5, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 800165e:	f885 4020 	strb.w	r4, [r5, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8001662:	62ec      	str	r4, [r5, #44]	; 0x2c
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8001664:	60ec      	str	r4, [r5, #12]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8001666:	f885 4030 	strb.w	r4, [r5, #48]	; 0x30
 800166a:	e02b      	b.n	80016c4 <main+0x384>
 800166c:	40023800 	.word	0x40023800
 8001670:	40020800 	.word	0x40020800
 8001674:	20006380 	.word	0x20006380
 8001678:	40020400 	.word	0x40020400
 800167c:	40020c00 	.word	0x40020c00
 8001680:	20006324 	.word	0x20006324
 8001684:	40023000 	.word	0x40023000
 8001688:	40005c00 	.word	0x40005c00
 800168c:	000186a0 	.word	0x000186a0
 8001690:	200064b0 	.word	0x200064b0
 8001694:	40015000 	.word	0x40015000
 8001698:	2000647c 	.word	0x2000647c
 800169c:	a0000140 	.word	0xa0000140
 80016a0:	200063d4 	.word	0x200063d4
 80016a4:	40016800 	.word	0x40016800
 80016a8:	20002998 	.word	0x20002998
 80016ac:	2000001c 	.word	0x2000001c
 80016b0:	20006340 	.word	0x20006340
 80016b4:	4002b000 	.word	0x4002b000
 80016b8:	200062dc 	.word	0x200062dc
 80016bc:	0f000001 	.word	0x0f000001
 80016c0:	40012000 	.word	0x40012000
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 80016c4:	f004 fe8e 	bl	80063e4 <HAL_ADC_Init>
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80016c8:	a90d      	add	r1, sp, #52	; 0x34
 80016ca:	4628      	mov	r0, r5
  sConfig.Rank = 1;
 80016cc:	e9cd a60d 	strd	sl, r6, [sp, #52]	; 0x34
  htim7.Instance = TIM7;
 80016d0:	4d23      	ldr	r5, [pc, #140]	; (8001760 <main+0x420>)
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 80016d2:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80016d6:	f004 fff1 	bl	80066bc <HAL_ADC_ConfigChannel>
  htim7.Init.Prescaler = 8400-1;
 80016da:	4a22      	ldr	r2, [pc, #136]	; (8001764 <main+0x424>)
  hdac.Instance = DAC;
 80016dc:	4e22      	ldr	r6, [pc, #136]	; (8001768 <main+0x428>)
  htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 80016de:	60ac      	str	r4, [r5, #8]
  htim7.Init.Prescaler = 8400-1;
 80016e0:	f242 03cf 	movw	r3, #8399	; 0x20cf
 80016e4:	e9c5 2300 	strd	r2, r3, [r5]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 80016e8:	4628      	mov	r0, r5
  htim7.Init.Period = 10000-1;
 80016ea:	f242 730f 	movw	r3, #9999	; 0x270f
 80016ee:	60eb      	str	r3, [r5, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80016f0:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80016f4:	61ac      	str	r4, [r5, #24]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 80016f6:	f007 f955 	bl	80089a4 <HAL_TIM_Base_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 80016fa:	a90d      	add	r1, sp, #52	; 0x34
 80016fc:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80016fe:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 8001702:	f007 f969 	bl	80089d8 <HAL_TIMEx_MasterConfigSynchronization>
  hdac.Instance = DAC;
 8001706:	4b19      	ldr	r3, [pc, #100]	; (800176c <main+0x42c>)
 8001708:	6033      	str	r3, [r6, #0]
  if (HAL_DAC_Init(&hdac) != HAL_OK)
 800170a:	4630      	mov	r0, r6
  DAC_ChannelConfTypeDef sConfig = {0};
 800170c:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_DAC_Init(&hdac) != HAL_OK)
 8001710:	f005 f8d2 	bl	80068b8 <HAL_DAC_Init>
  if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 8001714:	464a      	mov	r2, r9
 8001716:	a90d      	add	r1, sp, #52	; 0x34
 8001718:	4630      	mov	r0, r6
  sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 800171a:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 800171e:	f005 f8de 	bl	80068de <HAL_DAC_ConfigChannel>
  MX_TouchGFX_Init();
 8001722:	f7fe ff60 	bl	80005e6 <MX_TouchGFX_Init>
  HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, 4096); //ustaw max napiecie na ADC, zeby nie plynal zaden prad
 8001726:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800172a:	4622      	mov	r2, r4
 800172c:	4649      	mov	r1, r9
 800172e:	4630      	mov	r0, r6
 8001730:	f005 f8f6 	bl	8006920 <HAL_DAC_SetValue>
  HAL_TIM_Base_Start_IT(&htim7); //uruchomienie timera 7 (przerwanie co 1 sek)
 8001734:	4628      	mov	r0, r5
 8001736:	f007 f818 	bl	800876a <HAL_TIM_Base_Start_IT>
  osKernelInitialize();
 800173a:	f007 fa2d 	bl	8008b98 <osKernelInitialize>
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800173e:	4a0c      	ldr	r2, [pc, #48]	; (8001770 <main+0x430>)
 8001740:	480c      	ldr	r0, [pc, #48]	; (8001774 <main+0x434>)
 8001742:	4621      	mov	r1, r4
 8001744:	f007 fa62 	bl	8008c0c <osThreadNew>
 8001748:	4b0b      	ldr	r3, [pc, #44]	; (8001778 <main+0x438>)
  TaskDwaHandle = osThreadNew(ZadanieDwa, NULL, &TaskDwa_attributes);
 800174a:	4a0c      	ldr	r2, [pc, #48]	; (800177c <main+0x43c>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800174c:	6018      	str	r0, [r3, #0]
  TaskDwaHandle = osThreadNew(ZadanieDwa, NULL, &TaskDwa_attributes);
 800174e:	4621      	mov	r1, r4
 8001750:	480b      	ldr	r0, [pc, #44]	; (8001780 <main+0x440>)
 8001752:	f007 fa5b 	bl	8008c0c <osThreadNew>
 8001756:	4b0b      	ldr	r3, [pc, #44]	; (8001784 <main+0x444>)
 8001758:	6018      	str	r0, [r3, #0]
  osKernelStart();
 800175a:	f007 fa37 	bl	8008bcc <osKernelStart>
  while (1)
 800175e:	e7fe      	b.n	800175e <main+0x41e>
 8001760:	20006508 	.word	0x20006508
 8001764:	40001400 	.word	0x40001400
 8001768:	2000632c 	.word	0x2000632c
 800176c:	40007400 	.word	0x40007400
 8001770:	080223f0 	.word	0x080223f0
 8001774:	080005eb 	.word	0x080005eb
 8001778:	20002994 	.word	0x20002994
 800177c:	08022414 	.word	0x08022414
 8001780:	0800119d 	.word	0x0800119d
 8001784:	200062d4 	.word	0x200062d4

08001788 <IOE_Init>:
 8001788:	4770      	bx	lr

0800178a <IOE_ITConfig>:
 800178a:	4770      	bx	lr

0800178c <IOE_Write>:
{
 800178c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout); 
 800178e:	4b09      	ldr	r3, [pc, #36]	; (80017b4 <IOE_Write+0x28>)
 8001790:	f88d 2017 	strb.w	r2, [sp, #23]
 8001794:	681b      	ldr	r3, [r3, #0]
 8001796:	9302      	str	r3, [sp, #8]
 8001798:	f10d 0217 	add.w	r2, sp, #23
 800179c:	2301      	movs	r3, #1
 800179e:	9200      	str	r2, [sp, #0]
 80017a0:	9301      	str	r3, [sp, #4]
 80017a2:	460a      	mov	r2, r1
 80017a4:	4601      	mov	r1, r0
 80017a6:	4804      	ldr	r0, [pc, #16]	; (80017b8 <IOE_Write+0x2c>)
 80017a8:	f005 fd3a 	bl	8007220 <HAL_I2C_Mem_Write>
}
 80017ac:	b007      	add	sp, #28
 80017ae:	f85d fb04 	ldr.w	pc, [sp], #4
 80017b2:	bf00      	nop
 80017b4:	20000010 	.word	0x20000010
 80017b8:	20006380 	.word	0x20006380

080017bc <IOE_Read>:
{
 80017bc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 80017be:	2300      	movs	r3, #0
 80017c0:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80017c4:	4b08      	ldr	r3, [pc, #32]	; (80017e8 <IOE_Read+0x2c>)
 80017c6:	681b      	ldr	r3, [r3, #0]
 80017c8:	9302      	str	r3, [sp, #8]
{
 80017ca:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80017cc:	2301      	movs	r3, #1
 80017ce:	f10d 0117 	add.w	r1, sp, #23
 80017d2:	9100      	str	r1, [sp, #0]
 80017d4:	9301      	str	r3, [sp, #4]
 80017d6:	4601      	mov	r1, r0
 80017d8:	4804      	ldr	r0, [pc, #16]	; (80017ec <IOE_Read+0x30>)
 80017da:	f005 fdb1 	bl	8007340 <HAL_I2C_Mem_Read>
}
 80017de:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80017e2:	b007      	add	sp, #28
 80017e4:	f85d fb04 	ldr.w	pc, [sp], #4
 80017e8:	20000010 	.word	0x20000010
 80017ec:	20006380 	.word	0x20006380

080017f0 <IOE_ReadMultiple>:
{
 80017f0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 80017f2:	4c08      	ldr	r4, [pc, #32]	; (8001814 <IOE_ReadMultiple+0x24>)
 80017f4:	6824      	ldr	r4, [r4, #0]
 80017f6:	9200      	str	r2, [sp, #0]
 80017f8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80017fc:	460a      	mov	r2, r1
 80017fe:	2301      	movs	r3, #1
 8001800:	4601      	mov	r1, r0
 8001802:	4805      	ldr	r0, [pc, #20]	; (8001818 <IOE_ReadMultiple+0x28>)
 8001804:	f005 fd9c 	bl	8007340 <HAL_I2C_Mem_Read>
}
 8001808:	3800      	subs	r0, #0
 800180a:	bf18      	it	ne
 800180c:	2001      	movne	r0, #1
 800180e:	b004      	add	sp, #16
 8001810:	bd10      	pop	{r4, pc}
 8001812:	bf00      	nop
 8001814:	20000010 	.word	0x20000010
 8001818:	20006380 	.word	0x20006380

0800181c <IOE_Delay>:
 800181c:	f004 bdce 	b.w	80063bc <HAL_Delay>

08001820 <LCD_IO_Init>:
{
 8001820:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001822:	4806      	ldr	r0, [pc, #24]	; (800183c <LCD_IO_Init+0x1c>)
 8001824:	2200      	movs	r2, #0
 8001826:	2104      	movs	r1, #4
 8001828:	f005 fa70 	bl	8006d0c <HAL_GPIO_WritePin>
}
 800182c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001830:	4802      	ldr	r0, [pc, #8]	; (800183c <LCD_IO_Init+0x1c>)
 8001832:	2201      	movs	r2, #1
 8001834:	2104      	movs	r1, #4
 8001836:	f005 ba69 	b.w	8006d0c <HAL_GPIO_WritePin>
 800183a:	bf00      	nop
 800183c:	40020800 	.word	0x40020800

08001840 <LCD_IO_WriteData>:
{
 8001840:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001842:	4d0b      	ldr	r5, [pc, #44]	; (8001870 <LCD_IO_WriteData+0x30>)
{
 8001844:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001846:	2201      	movs	r2, #1
 8001848:	480a      	ldr	r0, [pc, #40]	; (8001874 <LCD_IO_WriteData+0x34>)
 800184a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800184e:	f005 fa5d 	bl	8006d0c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001852:	2200      	movs	r2, #0
 8001854:	2104      	movs	r1, #4
 8001856:	4628      	mov	r0, r5
 8001858:	f005 fa58 	bl	8006d0c <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 800185c:	4620      	mov	r0, r4
 800185e:	f7ff fc8b 	bl	8001178 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001862:	4628      	mov	r0, r5
 8001864:	2201      	movs	r2, #1
}
 8001866:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800186a:	2104      	movs	r1, #4
 800186c:	f005 ba4e 	b.w	8006d0c <HAL_GPIO_WritePin>
 8001870:	40020800 	.word	0x40020800
 8001874:	40020c00 	.word	0x40020c00

08001878 <LCD_IO_WriteReg>:
{
 8001878:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800187a:	4d0b      	ldr	r5, [pc, #44]	; (80018a8 <LCD_IO_WriteReg+0x30>)
{
 800187c:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 800187e:	2200      	movs	r2, #0
 8001880:	480a      	ldr	r0, [pc, #40]	; (80018ac <LCD_IO_WriteReg+0x34>)
 8001882:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001886:	f005 fa41 	bl	8006d0c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800188a:	2200      	movs	r2, #0
 800188c:	2104      	movs	r1, #4
 800188e:	4628      	mov	r0, r5
 8001890:	f005 fa3c 	bl	8006d0c <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 8001894:	4620      	mov	r0, r4
 8001896:	f7ff fc6f 	bl	8001178 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800189a:	4628      	mov	r0, r5
 800189c:	2201      	movs	r2, #1
}
 800189e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80018a2:	2104      	movs	r1, #4
 80018a4:	f005 ba32 	b.w	8006d0c <HAL_GPIO_WritePin>
 80018a8:	40020800 	.word	0x40020800
 80018ac:	40020c00 	.word	0x40020c00

080018b0 <LCD_IO_ReadData>:
{
 80018b0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80018b2:	4e14      	ldr	r6, [pc, #80]	; (8001904 <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80018b4:	4f14      	ldr	r7, [pc, #80]	; (8001908 <LCD_IO_ReadData+0x58>)
{
 80018b6:	4605      	mov	r5, r0
 80018b8:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80018ba:	4630      	mov	r0, r6
 80018bc:	2200      	movs	r2, #0
 80018be:	2104      	movs	r1, #4
 80018c0:	f005 fa24 	bl	8006d0c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80018c4:	2200      	movs	r2, #0
 80018c6:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80018ca:	4638      	mov	r0, r7
 80018cc:	f005 fa1e 	bl	8006d0c <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 80018d0:	4628      	mov	r0, r5
 80018d2:	f7ff fc51 	bl	8001178 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 80018d6:	4b0d      	ldr	r3, [pc, #52]	; (800190c <LCD_IO_ReadData+0x5c>)
 80018d8:	480d      	ldr	r0, [pc, #52]	; (8001910 <LCD_IO_ReadData+0x60>)
 80018da:	681b      	ldr	r3, [r3, #0]
 80018dc:	4622      	mov	r2, r4
 80018de:	a901      	add	r1, sp, #4
 80018e0:	f006 fea1 	bl	8008626 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80018e4:	4638      	mov	r0, r7
 80018e6:	2201      	movs	r2, #1
 80018e8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 80018ec:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80018ee:	f005 fa0d 	bl	8006d0c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80018f2:	4630      	mov	r0, r6
 80018f4:	2201      	movs	r2, #1
 80018f6:	2104      	movs	r1, #4
 80018f8:	f005 fa08 	bl	8006d0c <HAL_GPIO_WritePin>
}
 80018fc:	4620      	mov	r0, r4
 80018fe:	b003      	add	sp, #12
 8001900:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001902:	bf00      	nop
 8001904:	40020800 	.word	0x40020800
 8001908:	40020c00 	.word	0x40020c00
 800190c:	20000014 	.word	0x20000014
 8001910:	200064b0 	.word	0x200064b0

08001914 <LCD_Delay>:
  HAL_Delay(Delay);
 8001914:	f004 bd52 	b.w	80063bc <HAL_Delay>

08001918 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM8) {
 8001918:	6802      	ldr	r2, [r0, #0]
 800191a:	4b07      	ldr	r3, [pc, #28]	; (8001938 <HAL_TIM_PeriodElapsedCallback+0x20>)
 800191c:	429a      	cmp	r2, r3
{
 800191e:	b510      	push	{r4, lr}
 8001920:	4604      	mov	r4, r0
  if (htim->Instance == TIM8) {
 8001922:	d101      	bne.n	8001928 <HAL_TIM_PeriodElapsedCallback+0x10>
    HAL_IncTick();
 8001924:	f004 fd38 	bl	8006398 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */
  if (htim->Instance == TIM7){ //timer co 1000ms
 8001928:	6822      	ldr	r2, [r4, #0]
 800192a:	4b04      	ldr	r3, [pc, #16]	; (800193c <HAL_TIM_PeriodElapsedCallback+0x24>)
 800192c:	429a      	cmp	r2, r3
	  Minelasekunda=1;
 800192e:	bf02      	ittt	eq
 8001930:	4b03      	ldreq	r3, [pc, #12]	; (8001940 <HAL_TIM_PeriodElapsedCallback+0x28>)
 8001932:	2201      	moveq	r2, #1
 8001934:	701a      	strbeq	r2, [r3, #0]
  }

  /* USER CODE END Callback 1 */
}
 8001936:	bd10      	pop	{r4, pc}
 8001938:	40010400 	.word	0x40010400
 800193c:	40001400 	.word	0x40001400
 8001940:	200029a0 	.word	0x200029a0

08001944 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001944:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001946:	4b0e      	ldr	r3, [pc, #56]	; (8001980 <HAL_MspInit+0x3c>)
 8001948:	2200      	movs	r2, #0
 800194a:	9200      	str	r2, [sp, #0]
 800194c:	6c59      	ldr	r1, [r3, #68]	; 0x44
 800194e:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001952:	6459      	str	r1, [r3, #68]	; 0x44
 8001954:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001956:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 800195a:	9100      	str	r1, [sp, #0]
 800195c:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 800195e:	9201      	str	r2, [sp, #4]
 8001960:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001962:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8001966:	6419      	str	r1, [r3, #64]	; 0x40
 8001968:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800196a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800196e:	9301      	str	r3, [sp, #4]
 8001970:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001972:	210f      	movs	r1, #15
 8001974:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001978:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800197a:	f004 bf4d 	b.w	8006818 <HAL_NVIC_SetPriority>
 800197e:	bf00      	nop
 8001980:	40023800 	.word	0x40023800

08001984 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8001984:	b510      	push	{r4, lr}
 8001986:	4604      	mov	r4, r0
 8001988:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800198a:	2214      	movs	r2, #20
 800198c:	2100      	movs	r1, #0
 800198e:	a803      	add	r0, sp, #12
 8001990:	f01f fa82 	bl	8020e98 <memset>
  if(hadc->Instance==ADC1)
 8001994:	6822      	ldr	r2, [r4, #0]
 8001996:	4b12      	ldr	r3, [pc, #72]	; (80019e0 <HAL_ADC_MspInit+0x5c>)
 8001998:	429a      	cmp	r2, r3
 800199a:	d11e      	bne.n	80019da <HAL_ADC_MspInit+0x56>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 800199c:	f503 338c 	add.w	r3, r3, #71680	; 0x11800
 80019a0:	2100      	movs	r1, #0
 80019a2:	9101      	str	r1, [sp, #4]
 80019a4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    PA7     ------> ADC1_IN7
    */
    GPIO_InitStruct.Pin = GPIO_PIN_7;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80019a6:	480f      	ldr	r0, [pc, #60]	; (80019e4 <HAL_ADC_MspInit+0x60>)
    __HAL_RCC_ADC1_CLK_ENABLE();
 80019a8:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80019ac:	645a      	str	r2, [r3, #68]	; 0x44
 80019ae:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80019b0:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80019b4:	9201      	str	r2, [sp, #4]
 80019b6:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80019b8:	9102      	str	r1, [sp, #8]
 80019ba:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019bc:	f042 0201 	orr.w	r2, r2, #1
 80019c0:	631a      	str	r2, [r3, #48]	; 0x30
 80019c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80019c4:	f003 0301 	and.w	r3, r3, #1
 80019c8:	9302      	str	r3, [sp, #8]
 80019ca:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80019cc:	2280      	movs	r2, #128	; 0x80
 80019ce:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80019d0:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80019d2:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80019d6:	f005 f8b1 	bl	8006b3c <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 80019da:	b008      	add	sp, #32
 80019dc:	bd10      	pop	{r4, pc}
 80019de:	bf00      	nop
 80019e0:	40012000 	.word	0x40012000
 80019e4:	40020000 	.word	0x40020000

080019e8 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 80019e8:	6802      	ldr	r2, [r0, #0]
 80019ea:	4b09      	ldr	r3, [pc, #36]	; (8001a10 <HAL_CRC_MspInit+0x28>)
 80019ec:	429a      	cmp	r2, r3
{
 80019ee:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 80019f0:	d10b      	bne.n	8001a0a <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80019f2:	2300      	movs	r3, #0
 80019f4:	9301      	str	r3, [sp, #4]
 80019f6:	4b07      	ldr	r3, [pc, #28]	; (8001a14 <HAL_CRC_MspInit+0x2c>)
 80019f8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019fa:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80019fe:	631a      	str	r2, [r3, #48]	; 0x30
 8001a00:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a02:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001a06:	9301      	str	r3, [sp, #4]
 8001a08:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001a0a:	b002      	add	sp, #8
 8001a0c:	4770      	bx	lr
 8001a0e:	bf00      	nop
 8001a10:	40023000 	.word	0x40023000
 8001a14:	40023800 	.word	0x40023800

08001a18 <HAL_DAC_MspInit>:
* This function configures the hardware resources used in this example
* @param hdac: DAC handle pointer
* @retval None
*/
void HAL_DAC_MspInit(DAC_HandleTypeDef* hdac)
{
 8001a18:	b510      	push	{r4, lr}
 8001a1a:	4604      	mov	r4, r0
 8001a1c:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a1e:	2214      	movs	r2, #20
 8001a20:	2100      	movs	r1, #0
 8001a22:	a803      	add	r0, sp, #12
 8001a24:	f01f fa38 	bl	8020e98 <memset>
  if(hdac->Instance==DAC)
 8001a28:	6822      	ldr	r2, [r4, #0]
 8001a2a:	4b12      	ldr	r3, [pc, #72]	; (8001a74 <HAL_DAC_MspInit+0x5c>)
 8001a2c:	429a      	cmp	r2, r3
 8001a2e:	d11e      	bne.n	8001a6e <HAL_DAC_MspInit+0x56>
  {
  /* USER CODE BEGIN DAC_MspInit 0 */

  /* USER CODE END DAC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DAC_CLK_ENABLE();
 8001a30:	f503 33e2 	add.w	r3, r3, #115712	; 0x1c400
 8001a34:	2100      	movs	r1, #0
 8001a36:	9101      	str	r1, [sp, #4]
 8001a38:	6c1a      	ldr	r2, [r3, #64]	; 0x40
    PA5     ------> DAC_OUT2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a3a:	480f      	ldr	r0, [pc, #60]	; (8001a78 <HAL_DAC_MspInit+0x60>)
    __HAL_RCC_DAC_CLK_ENABLE();
 8001a3c:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 8001a40:	641a      	str	r2, [r3, #64]	; 0x40
 8001a42:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001a44:	f002 5200 	and.w	r2, r2, #536870912	; 0x20000000
 8001a48:	9201      	str	r2, [sp, #4]
 8001a4a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001a4c:	9102      	str	r1, [sp, #8]
 8001a4e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a50:	f042 0201 	orr.w	r2, r2, #1
 8001a54:	631a      	str	r2, [r3, #48]	; 0x30
 8001a56:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a58:	f003 0301 	and.w	r3, r3, #1
 8001a5c:	9302      	str	r3, [sp, #8]
 8001a5e:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001a60:	2220      	movs	r2, #32
 8001a62:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a64:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001a66:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a6a:	f005 f867 	bl	8006b3c <HAL_GPIO_Init>
  /* USER CODE BEGIN DAC_MspInit 1 */

  /* USER CODE END DAC_MspInit 1 */
  }

}
 8001a6e:	b008      	add	sp, #32
 8001a70:	bd10      	pop	{r4, pc}
 8001a72:	bf00      	nop
 8001a74:	40007400 	.word	0x40007400
 8001a78:	40020000 	.word	0x40020000

08001a7c <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001a7c:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001a7e:	4b0f      	ldr	r3, [pc, #60]	; (8001abc <HAL_DMA2D_MspInit+0x40>)
 8001a80:	6802      	ldr	r2, [r0, #0]
 8001a82:	429a      	cmp	r2, r3
 8001a84:	d116      	bne.n	8001ab4 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001a86:	2200      	movs	r2, #0
 8001a88:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001a8c:	9201      	str	r2, [sp, #4]
 8001a8e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001a90:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001a94:	6319      	str	r1, [r3, #48]	; 0x30
 8001a96:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a98:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001a9c:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001a9e:	2105      	movs	r1, #5
 8001aa0:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001aa2:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001aa4:	f004 feb8 	bl	8006818 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001aa8:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001aaa:	b003      	add	sp, #12
 8001aac:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001ab0:	f004 bee4 	b.w	800687c <HAL_NVIC_EnableIRQ>
}
 8001ab4:	b003      	add	sp, #12
 8001ab6:	f85d fb04 	ldr.w	pc, [sp], #4
 8001aba:	bf00      	nop
 8001abc:	4002b000 	.word	0x4002b000

08001ac0 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001ac0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001ac4:	4604      	mov	r4, r0
 8001ac6:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ac8:	2214      	movs	r2, #20
 8001aca:	2100      	movs	r1, #0
 8001acc:	a803      	add	r0, sp, #12
 8001ace:	f01f f9e3 	bl	8020e98 <memset>
  if(hi2c->Instance==I2C3)
 8001ad2:	6822      	ldr	r2, [r4, #0]
 8001ad4:	4b24      	ldr	r3, [pc, #144]	; (8001b68 <HAL_I2C_MspInit+0xa8>)
 8001ad6:	429a      	cmp	r2, r3
 8001ad8:	d143      	bne.n	8001b62 <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001ada:	4c24      	ldr	r4, [pc, #144]	; (8001b6c <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001adc:	4824      	ldr	r0, [pc, #144]	; (8001b70 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001ade:	2500      	movs	r5, #0
 8001ae0:	9500      	str	r5, [sp, #0]
 8001ae2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001ae4:	f043 0304 	orr.w	r3, r3, #4
 8001ae8:	6323      	str	r3, [r4, #48]	; 0x30
 8001aea:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001aec:	f003 0304 	and.w	r3, r3, #4
 8001af0:	9300      	str	r3, [sp, #0]
 8001af2:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001af4:	9501      	str	r5, [sp, #4]
 8001af6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001af8:	f043 0301 	orr.w	r3, r3, #1
 8001afc:	6323      	str	r3, [r4, #48]	; 0x30
 8001afe:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b00:	f003 0301 	and.w	r3, r3, #1
 8001b04:	9301      	str	r3, [sp, #4]
 8001b06:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001b08:	f04f 0912 	mov.w	r9, #18
 8001b0c:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b10:	f04f 0801 	mov.w	r8, #1
 8001b14:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001b16:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001b18:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001b1a:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b1e:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001b22:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001b24:	f005 f80a 	bl	8006b3c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001b28:	f44f 7380 	mov.w	r3, #256	; 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b2c:	4811      	ldr	r0, [pc, #68]	; (8001b74 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001b2e:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b30:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001b32:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b36:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b3a:	f004 ffff 	bl	8006b3c <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001b3e:	9502      	str	r5, [sp, #8]
 8001b40:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001b42:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001b46:	6423      	str	r3, [r4, #64]	; 0x40
 8001b48:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001b4a:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001b4e:	9302      	str	r3, [sp, #8]
 8001b50:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 8001b52:	6a23      	ldr	r3, [r4, #32]
 8001b54:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001b58:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001b5a:	6a23      	ldr	r3, [r4, #32]
 8001b5c:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001b60:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001b62:	b009      	add	sp, #36	; 0x24
 8001b64:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001b68:	40005c00 	.word	0x40005c00
 8001b6c:	40023800 	.word	0x40023800
 8001b70:	40020800 	.word	0x40020800
 8001b74:	40020000 	.word	0x40020000

08001b78 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001b78:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001b7a:	4604      	mov	r4, r0
 8001b7c:	b08d      	sub	sp, #52	; 0x34
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b7e:	2214      	movs	r2, #20
 8001b80:	2100      	movs	r1, #0
 8001b82:	a807      	add	r0, sp, #28
 8001b84:	f01f f988 	bl	8020e98 <memset>
  if(hltdc->Instance==LTDC)
 8001b88:	6822      	ldr	r2, [r4, #0]
 8001b8a:	4b57      	ldr	r3, [pc, #348]	; (8001ce8 <HAL_LTDC_MspInit+0x170>)
 8001b8c:	429a      	cmp	r2, r3
 8001b8e:	f040 80a8 	bne.w	8001ce2 <HAL_LTDC_MspInit+0x16a>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001b92:	f503 4350 	add.w	r3, r3, #53248	; 0xd000
 8001b96:	2500      	movs	r5, #0
 8001b98:	9500      	str	r5, [sp, #0]
 8001b9a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001b9c:	4853      	ldr	r0, [pc, #332]	; (8001cec <HAL_LTDC_MspInit+0x174>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001b9e:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001ba2:	645a      	str	r2, [r3, #68]	; 0x44
 8001ba4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001ba6:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001baa:	9200      	str	r2, [sp, #0]
 8001bac:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001bae:	9501      	str	r5, [sp, #4]
 8001bb0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001bb2:	f042 0220 	orr.w	r2, r2, #32
 8001bb6:	631a      	str	r2, [r3, #48]	; 0x30
 8001bb8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001bba:	f002 0220 	and.w	r2, r2, #32
 8001bbe:	9201      	str	r2, [sp, #4]
 8001bc0:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001bc2:	9502      	str	r5, [sp, #8]
 8001bc4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001bc6:	f042 0201 	orr.w	r2, r2, #1
 8001bca:	631a      	str	r2, [r3, #48]	; 0x30
 8001bcc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001bce:	f002 0201 	and.w	r2, r2, #1
 8001bd2:	9202      	str	r2, [sp, #8]
 8001bd4:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001bd6:	9503      	str	r5, [sp, #12]
 8001bd8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001bda:	f042 0202 	orr.w	r2, r2, #2
 8001bde:	631a      	str	r2, [r3, #48]	; 0x30
 8001be0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001be2:	f002 0202 	and.w	r2, r2, #2
 8001be6:	9203      	str	r2, [sp, #12]
 8001be8:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001bea:	9504      	str	r5, [sp, #16]
 8001bec:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001bee:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001bf2:	631a      	str	r2, [r3, #48]	; 0x30
 8001bf4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001bf6:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001bfa:	9204      	str	r2, [sp, #16]
 8001bfc:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001bfe:	9505      	str	r5, [sp, #20]
 8001c00:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c02:	f042 0204 	orr.w	r2, r2, #4
 8001c06:	631a      	str	r2, [r3, #48]	; 0x30
 8001c08:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c0a:	f002 0204 	and.w	r2, r2, #4
 8001c0e:	9205      	str	r2, [sp, #20]
 8001c10:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001c12:	9506      	str	r5, [sp, #24]
 8001c14:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c16:	f042 0208 	orr.w	r2, r2, #8
 8001c1a:	631a      	str	r2, [r3, #48]	; 0x30
 8001c1c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c1e:	f003 0308 	and.w	r3, r3, #8
 8001c22:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c24:	2402      	movs	r4, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001c26:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001c28:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c2a:	940a      	str	r4, [sp, #40]	; 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c2c:	f44f 6380 	mov.w	r3, #1024	; 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c30:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c32:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001c36:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c38:	f004 ff80 	bl	8006b3c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001c3c:	f641 0358 	movw	r3, #6232	; 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c40:	482b      	ldr	r0, [pc, #172]	; (8001cf0 <HAL_LTDC_MspInit+0x178>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001c42:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c44:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c46:	e9cd 3407 	strd	r3, r4, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001c4a:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c4c:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c50:	f004 ff74 	bl	8006b3c <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001c54:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c56:	4827      	ldr	r0, [pc, #156]	; (8001cf4 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001c58:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c5a:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c5c:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c60:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c64:	f004 ff6a 	bl	8006b3c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001c68:	f44f 6370 	mov.w	r3, #3840	; 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c6c:	4821      	ldr	r0, [pc, #132]	; (8001cf4 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001c6e:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c70:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c72:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c76:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c7a:	f004 ff5f 	bl	8006b3c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001c7e:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001c82:	481d      	ldr	r0, [pc, #116]	; (8001cf8 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001c84:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001c86:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c88:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c8c:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001c90:	f004 ff54 	bl	8006b3c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001c94:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c96:	4819      	ldr	r0, [pc, #100]	; (8001cfc <HAL_LTDC_MspInit+0x184>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001c98:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c9a:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c9c:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001ca0:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ca4:	f004 ff4a 	bl	8006b3c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001ca8:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001caa:	4815      	ldr	r0, [pc, #84]	; (8001d00 <HAL_LTDC_MspInit+0x188>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001cac:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001cae:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cb0:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001cb4:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001cb8:	f004 ff40 	bl	8006b3c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001cbc:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001cc0:	480d      	ldr	r0, [pc, #52]	; (8001cf8 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001cc2:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001cc4:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cc6:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001cca:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001cce:	f004 ff35 	bl	8006b3c <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001cd2:	2058      	movs	r0, #88	; 0x58
 8001cd4:	462a      	mov	r2, r5
 8001cd6:	2105      	movs	r1, #5
 8001cd8:	f004 fd9e 	bl	8006818 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001cdc:	2058      	movs	r0, #88	; 0x58
 8001cde:	f004 fdcd 	bl	800687c <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001ce2:	b00d      	add	sp, #52	; 0x34
 8001ce4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001ce6:	bf00      	nop
 8001ce8:	40016800 	.word	0x40016800
 8001cec:	40021400 	.word	0x40021400
 8001cf0:	40020000 	.word	0x40020000
 8001cf4:	40020400 	.word	0x40020400
 8001cf8:	40021800 	.word	0x40021800
 8001cfc:	40020800 	.word	0x40020800
 8001d00:	40020c00 	.word	0x40020c00

08001d04 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001d04:	b510      	push	{r4, lr}
 8001d06:	4604      	mov	r4, r0
 8001d08:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d0a:	2214      	movs	r2, #20
 8001d0c:	2100      	movs	r1, #0
 8001d0e:	a803      	add	r0, sp, #12
 8001d10:	f01f f8c2 	bl	8020e98 <memset>
  if(hspi->Instance==SPI5)
 8001d14:	6822      	ldr	r2, [r4, #0]
 8001d16:	4b14      	ldr	r3, [pc, #80]	; (8001d68 <HAL_SPI_MspInit+0x64>)
 8001d18:	429a      	cmp	r2, r3
 8001d1a:	d123      	bne.n	8001d64 <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001d1c:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8001d20:	2100      	movs	r1, #0
 8001d22:	9101      	str	r1, [sp, #4]
 8001d24:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d26:	4811      	ldr	r0, [pc, #68]	; (8001d6c <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001d28:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8001d2c:	645a      	str	r2, [r3, #68]	; 0x44
 8001d2e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001d30:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 8001d34:	9201      	str	r2, [sp, #4]
 8001d36:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001d38:	9102      	str	r1, [sp, #8]
 8001d3a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d3c:	f042 0220 	orr.w	r2, r2, #32
 8001d40:	631a      	str	r2, [r3, #48]	; 0x30
 8001d42:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d44:	f003 0320 	and.w	r3, r3, #32
 8001d48:	9302      	str	r3, [sp, #8]
 8001d4a:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d4c:	f44f 7260 	mov.w	r2, #896	; 0x380
 8001d50:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001d52:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d54:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001d58:	2305      	movs	r3, #5
 8001d5a:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d5e:	a903      	add	r1, sp, #12
 8001d60:	f004 feec 	bl	8006b3c <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001d64:	b008      	add	sp, #32
 8001d66:	bd10      	pop	{r4, pc}
 8001d68:	40015000 	.word	0x40015000
 8001d6c:	40021400 	.word	0x40021400

08001d70 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001d70:	b507      	push	{r0, r1, r2, lr}
  if(htim_base->Instance==TIM7)
 8001d72:	4b0f      	ldr	r3, [pc, #60]	; (8001db0 <HAL_TIM_Base_MspInit+0x40>)
 8001d74:	6802      	ldr	r2, [r0, #0]
 8001d76:	429a      	cmp	r2, r3
 8001d78:	d116      	bne.n	8001da8 <HAL_TIM_Base_MspInit+0x38>
  {
  /* USER CODE BEGIN TIM7_MspInit 0 */

  /* USER CODE END TIM7_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM7_CLK_ENABLE();
 8001d7a:	2200      	movs	r2, #0
 8001d7c:	f503 3309 	add.w	r3, r3, #140288	; 0x22400
 8001d80:	9201      	str	r2, [sp, #4]
 8001d82:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001d84:	f041 0120 	orr.w	r1, r1, #32
 8001d88:	6419      	str	r1, [r3, #64]	; 0x40
 8001d8a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001d8c:	f003 0320 	and.w	r3, r3, #32
 8001d90:	9301      	str	r3, [sp, #4]
    /* TIM7 interrupt Init */
    HAL_NVIC_SetPriority(TIM7_IRQn, 5, 0);
 8001d92:	2105      	movs	r1, #5
 8001d94:	2037      	movs	r0, #55	; 0x37
    __HAL_RCC_TIM7_CLK_ENABLE();
 8001d96:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(TIM7_IRQn, 5, 0);
 8001d98:	f004 fd3e 	bl	8006818 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 8001d9c:	2037      	movs	r0, #55	; 0x37
  /* USER CODE BEGIN TIM7_MspInit 1 */

  /* USER CODE END TIM7_MspInit 1 */
  }

}
 8001d9e:	b003      	add	sp, #12
 8001da0:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 8001da4:	f004 bd6a 	b.w	800687c <HAL_NVIC_EnableIRQ>
}
 8001da8:	b003      	add	sp, #12
 8001daa:	f85d fb04 	ldr.w	pc, [sp], #4
 8001dae:	bf00      	nop
 8001db0:	40001400 	.word	0x40001400

08001db4 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001db4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001db8:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001dba:	2300      	movs	r3, #0
 8001dbc:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8001dbe:	4b2b      	ldr	r3, [pc, #172]	; (8001e6c <HAL_SDRAM_MspInit+0xb8>)
 8001dc0:	681c      	ldr	r4, [r3, #0]
 8001dc2:	2c00      	cmp	r4, #0
 8001dc4:	d14f      	bne.n	8001e66 <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 8001dc6:	f04f 0801 	mov.w	r8, #1
 8001dca:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001dce:	4b28      	ldr	r3, [pc, #160]	; (8001e70 <HAL_SDRAM_MspInit+0xbc>)
 8001dd0:	9400      	str	r4, [sp, #0]
 8001dd2:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001dd4:	4827      	ldr	r0, [pc, #156]	; (8001e74 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001dd6:	ea42 0208 	orr.w	r2, r2, r8
 8001dda:	639a      	str	r2, [r3, #56]	; 0x38
 8001ddc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001dde:	ea03 0308 	and.w	r3, r3, r8
 8001de2:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001de4:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001de6:	2603      	movs	r6, #3
 8001de8:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001dea:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001dec:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dee:	f64f 033f 	movw	r3, #63551	; 0xf83f
 8001df2:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001df6:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001dfa:	f004 fe9f 	bl	8006b3c <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001dfe:	481e      	ldr	r0, [pc, #120]	; (8001e78 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e00:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e02:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e04:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e08:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e0c:	f004 fe96 	bl	8006b3c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001e10:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e14:	4819      	ldr	r0, [pc, #100]	; (8001e7c <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e16:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e18:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e1a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e1e:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e22:	f004 fe8b 	bl	8006b3c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8001e26:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001e2a:	4815      	ldr	r0, [pc, #84]	; (8001e80 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e2c:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001e2e:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e30:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e34:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001e38:	f004 fe80 	bl	8006b3c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8001e3c:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e40:	4810      	ldr	r0, [pc, #64]	; (8001e84 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e42:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e44:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e46:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e4a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e4e:	f004 fe75 	bl	8006b3c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001e52:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e54:	480c      	ldr	r0, [pc, #48]	; (8001e88 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e56:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e58:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e5a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e5e:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e62:	f004 fe6b 	bl	8006b3c <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001e66:	b006      	add	sp, #24
 8001e68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001e6c:	20006548 	.word	0x20006548
 8001e70:	40023800 	.word	0x40023800
 8001e74:	40021400 	.word	0x40021400
 8001e78:	40020800 	.word	0x40020800
 8001e7c:	40021800 	.word	0x40021800
 8001e80:	40021000 	.word	0x40021000
 8001e84:	40020c00 	.word	0x40020c00
 8001e88:	40020400 	.word	0x40020400

08001e8c <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001e8c:	b530      	push	{r4, r5, lr}
 8001e8e:	4601      	mov	r1, r0
 8001e90:	b089      	sub	sp, #36	; 0x24
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;

  /*Configure the TIM8 IRQ priority */
  HAL_NVIC_SetPriority(TIM8_UP_TIM13_IRQn, TickPriority ,0);
 8001e92:	2200      	movs	r2, #0
 8001e94:	202c      	movs	r0, #44	; 0x2c
 8001e96:	f004 fcbf 	bl	8006818 <HAL_NVIC_SetPriority>

  /* Enable the TIM8 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM8_UP_TIM13_IRQn);
 8001e9a:	202c      	movs	r0, #44	; 0x2c
 8001e9c:	f004 fcee 	bl	800687c <HAL_NVIC_EnableIRQ>

  /* Enable TIM8 clock */
  __HAL_RCC_TIM8_CLK_ENABLE();
 8001ea0:	2500      	movs	r5, #0
 8001ea2:	4b15      	ldr	r3, [pc, #84]	; (8001ef8 <HAL_InitTick+0x6c>)
 8001ea4:	9502      	str	r5, [sp, #8]
 8001ea6:	6c5a      	ldr	r2, [r3, #68]	; 0x44

  /* Compute the prescaler value to have TIM8 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);

  /* Initialize TIM8 */
  htim8.Instance = TIM8;
 8001ea8:	4c14      	ldr	r4, [pc, #80]	; (8001efc <HAL_InitTick+0x70>)
  __HAL_RCC_TIM8_CLK_ENABLE();
 8001eaa:	f042 0202 	orr.w	r2, r2, #2
 8001eae:	645a      	str	r2, [r3, #68]	; 0x44
 8001eb0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001eb2:	f003 0302 	and.w	r3, r3, #2
 8001eb6:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001eb8:	a901      	add	r1, sp, #4
 8001eba:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM8_CLK_ENABLE();
 8001ebc:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001ebe:	f005 ffb5 	bl	8007e2c <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK2Freq();
 8001ec2:	f005 ffa3 	bl	8007e0c <HAL_RCC_GetPCLK2Freq>
  htim8.Instance = TIM8;
 8001ec6:	4b0e      	ldr	r3, [pc, #56]	; (8001f00 <HAL_InitTick+0x74>)
 8001ec8:	6023      	str	r3, [r4, #0]
  + Period = [(TIM8CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim8.Init.Period = (1000000 / 1000) - 1;
 8001eca:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001ece:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK2Freq();
 8001ed0:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
 8001ed2:	4b0c      	ldr	r3, [pc, #48]	; (8001f04 <HAL_InitTick+0x78>)
 8001ed4:	fbb0 f0f3 	udiv	r0, r0, r3
 8001ed8:	3801      	subs	r0, #1
  htim8.Init.Prescaler = uwPrescalerValue;
 8001eda:	6060      	str	r0, [r4, #4]
  htim8.Init.ClockDivision = 0;
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
  if(HAL_TIM_Base_Init(&htim8) == HAL_OK)
 8001edc:	4620      	mov	r0, r4
  htim8.Init.ClockDivision = 0;
 8001ede:	6125      	str	r5, [r4, #16]
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001ee0:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim8) == HAL_OK)
 8001ee2:	f006 fd5f 	bl	80089a4 <HAL_TIM_Base_Init>
 8001ee6:	b920      	cbnz	r0, 8001ef2 <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim8);
 8001ee8:	4620      	mov	r0, r4
 8001eea:	f006 fc3e 	bl	800876a <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 8001eee:	b009      	add	sp, #36	; 0x24
 8001ef0:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 8001ef2:	2001      	movs	r0, #1
 8001ef4:	e7fb      	b.n	8001eee <HAL_InitTick+0x62>
 8001ef6:	bf00      	nop
 8001ef8:	40023800 	.word	0x40023800
 8001efc:	2000654c 	.word	0x2000654c
 8001f00:	40010400 	.word	0x40010400
 8001f04:	000f4240 	.word	0x000f4240

08001f08 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001f08:	4770      	bx	lr

08001f0a <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001f0a:	e7fe      	b.n	8001f0a <HardFault_Handler>

08001f0c <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001f0c:	e7fe      	b.n	8001f0c <MemManage_Handler>

08001f0e <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001f0e:	e7fe      	b.n	8001f0e <BusFault_Handler>

08001f10 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001f10:	e7fe      	b.n	8001f10 <UsageFault_Handler>

08001f12 <DebugMon_Handler>:
 8001f12:	4770      	bx	lr

08001f14 <TIM8_UP_TIM13_IRQHandler>:
void TIM8_UP_TIM13_IRQHandler(void)
{
  /* USER CODE BEGIN TIM8_UP_TIM13_IRQn 0 */

  /* USER CODE END TIM8_UP_TIM13_IRQn 0 */
  HAL_TIM_IRQHandler(&htim8);
 8001f14:	4801      	ldr	r0, [pc, #4]	; (8001f1c <TIM8_UP_TIM13_IRQHandler+0x8>)
 8001f16:	f006 bc3c 	b.w	8008792 <HAL_TIM_IRQHandler>
 8001f1a:	bf00      	nop
 8001f1c:	2000654c 	.word	0x2000654c

08001f20 <TIM7_IRQHandler>:
void TIM7_IRQHandler(void)
{
  /* USER CODE BEGIN TIM7_IRQn 0 */

  /* USER CODE END TIM7_IRQn 0 */
  HAL_TIM_IRQHandler(&htim7);
 8001f20:	4801      	ldr	r0, [pc, #4]	; (8001f28 <TIM7_IRQHandler+0x8>)
 8001f22:	f006 bc36 	b.w	8008792 <HAL_TIM_IRQHandler>
 8001f26:	bf00      	nop
 8001f28:	20006508 	.word	0x20006508

08001f2c <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001f2c:	4801      	ldr	r0, [pc, #4]	; (8001f34 <LTDC_IRQHandler+0x8>)
 8001f2e:	f005 bc41 	b.w	80077b4 <HAL_LTDC_IRQHandler>
 8001f32:	bf00      	nop
 8001f34:	200063d4 	.word	0x200063d4

08001f38 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001f38:	4801      	ldr	r0, [pc, #4]	; (8001f40 <DMA2D_IRQHandler+0x8>)
 8001f3a:	f004 bd31 	b.w	80069a0 <HAL_DMA2D_IRQHandler>
 8001f3e:	bf00      	nop
 8001f40:	20006340 	.word	0x20006340

08001f44 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001f44:	2001      	movs	r0, #1
 8001f46:	4770      	bx	lr

08001f48 <_kill>:

int _kill(int pid, int sig)
{
 8001f48:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001f4a:	f01e fe51 	bl	8020bf0 <__errno>
 8001f4e:	2316      	movs	r3, #22
 8001f50:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001f52:	f04f 30ff 	mov.w	r0, #4294967295
 8001f56:	bd08      	pop	{r3, pc}

08001f58 <_exit>:

void _exit (int status)
{
 8001f58:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001f5a:	f01e fe49 	bl	8020bf0 <__errno>
 8001f5e:	2316      	movs	r3, #22
 8001f60:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001f62:	e7fe      	b.n	8001f62 <_exit+0xa>

08001f64 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001f64:	b570      	push	{r4, r5, r6, lr}
 8001f66:	460d      	mov	r5, r1
 8001f68:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f6a:	460e      	mov	r6, r1
 8001f6c:	1b73      	subs	r3, r6, r5
 8001f6e:	429c      	cmp	r4, r3
 8001f70:	dc01      	bgt.n	8001f76 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8001f72:	4620      	mov	r0, r4
 8001f74:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8001f76:	f3af 8000 	nop.w
 8001f7a:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f7e:	e7f5      	b.n	8001f6c <_read+0x8>

08001f80 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001f80:	b570      	push	{r4, r5, r6, lr}
 8001f82:	460d      	mov	r5, r1
 8001f84:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f86:	460e      	mov	r6, r1
 8001f88:	1b73      	subs	r3, r6, r5
 8001f8a:	429c      	cmp	r4, r3
 8001f8c:	dc01      	bgt.n	8001f92 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8001f8e:	4620      	mov	r0, r4
 8001f90:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8001f92:	f816 0b01 	ldrb.w	r0, [r6], #1
 8001f96:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f9a:	e7f5      	b.n	8001f88 <_write+0x8>

08001f9c <_close>:

int _close(int file)
{
	return -1;
}
 8001f9c:	f04f 30ff 	mov.w	r0, #4294967295
 8001fa0:	4770      	bx	lr

08001fa2 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001fa2:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001fa6:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001fa8:	2000      	movs	r0, #0
 8001faa:	4770      	bx	lr

08001fac <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001fac:	2001      	movs	r0, #1
 8001fae:	4770      	bx	lr

08001fb0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001fb0:	2000      	movs	r0, #0
 8001fb2:	4770      	bx	lr

08001fb4 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001fb4:	4a0a      	ldr	r2, [pc, #40]	; (8001fe0 <_sbrk+0x2c>)
 8001fb6:	6811      	ldr	r1, [r2, #0]
{
 8001fb8:	b508      	push	{r3, lr}
 8001fba:	4603      	mov	r3, r0
	if (heap_end == 0)
 8001fbc:	b909      	cbnz	r1, 8001fc2 <_sbrk+0xe>
		heap_end = &end;
 8001fbe:	4909      	ldr	r1, [pc, #36]	; (8001fe4 <_sbrk+0x30>)
 8001fc0:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 8001fc2:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8001fc4:	4669      	mov	r1, sp
 8001fc6:	4403      	add	r3, r0
 8001fc8:	428b      	cmp	r3, r1
 8001fca:	d906      	bls.n	8001fda <_sbrk+0x26>
	{
		errno = ENOMEM;
 8001fcc:	f01e fe10 	bl	8020bf0 <__errno>
 8001fd0:	230c      	movs	r3, #12
 8001fd2:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8001fd4:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8001fd8:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8001fda:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 8001fdc:	e7fc      	b.n	8001fd8 <_sbrk+0x24>
 8001fde:	bf00      	nop
 8001fe0:	2000658c 	.word	0x2000658c
 8001fe4:	20017700 	.word	0x20017700

08001fe8 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8001fe8:	4770      	bx	lr

08001fea <_ZN23ApplicationFontProviderD0Ev>:
 8001fea:	b510      	push	{r4, lr}
 8001fec:	2104      	movs	r1, #4
 8001fee:	4604      	mov	r4, r0
 8001ff0:	f01e fd9d 	bl	8020b2e <_ZdlPvj>
 8001ff4:	4620      	mov	r0, r4
 8001ff6:	bd10      	pop	{r4, pc}

08001ff8 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 8001ff8:	2901      	cmp	r1, #1
{
 8001ffa:	b508      	push	{r3, lr}
    switch (typography)
 8001ffc:	d006      	beq.n	800200c <_ZN23ApplicationFontProvider7getFontEt+0x14>
 8001ffe:	2902      	cmp	r1, #2
 8002000:	d008      	beq.n	8002014 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 8002002:	b959      	cbnz	r1, 800201c <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_15_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002004:	f003 fcc6 	bl	8005994 <_ZN17TypedTextDatabase8getFontsEv>
 8002008:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 800200a:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800200c:	f003 fcc2 	bl	8005994 <_ZN17TypedTextDatabase8getFontsEv>
 8002010:	6840      	ldr	r0, [r0, #4]
 8002012:	e7fa      	b.n	800200a <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002014:	f003 fcbe 	bl	8005994 <_ZN17TypedTextDatabase8getFontsEv>
 8002018:	6880      	ldr	r0, [r0, #8]
 800201a:	e7f6      	b.n	800200a <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 800201c:	2000      	movs	r0, #0
 800201e:	e7f4      	b.n	800200a <_ZN23ApplicationFontProvider7getFontEt+0x12>

08002020 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002020:	4800      	ldr	r0, [pc, #0]	; (8002024 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002022:	4770      	bx	lr
 8002024:	0802244c 	.word	0x0802244c

08002028 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002028:	2006      	movs	r0, #6
 800202a:	4770      	bx	lr

0800202c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800202c:	b513      	push	{r0, r1, r4, lr}
 800202e:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002030:	b151      	cbz	r1, 8002048 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002032:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002034:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002036:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800203a:	aa01      	add	r2, sp, #4
 800203c:	689c      	ldr	r4, [r3, #8]
 800203e:	f10d 0303 	add.w	r3, sp, #3
 8002042:	47a0      	blx	r4
        return glyph;
    }
 8002044:	b002      	add	sp, #8
 8002046:	bd10      	pop	{r4, pc}
            return 0;
 8002048:	4608      	mov	r0, r1
 800204a:	e7fb      	b.n	8002044 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

0800204c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 800204c:	8940      	ldrh	r0, [r0, #10]
 800204e:	4770      	bx	lr

08002050 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002050:	8980      	ldrh	r0, [r0, #12]
 8002052:	4770      	bx	lr

08002054 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 8002054:	8880      	ldrh	r0, [r0, #4]
 8002056:	4770      	bx	lr

08002058 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 8002058:	7983      	ldrb	r3, [r0, #6]
 800205a:	8880      	ldrh	r0, [r0, #4]
 800205c:	4418      	add	r0, r3
    }
 800205e:	b280      	uxth	r0, r0
 8002060:	4770      	bx	lr

08002062 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002062:	79c0      	ldrb	r0, [r0, #7]
    }
 8002064:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002068:	4770      	bx	lr

0800206a <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 800206a:	79c0      	ldrb	r0, [r0, #7]
    }
 800206c:	09c0      	lsrs	r0, r0, #7
 800206e:	4770      	bx	lr

08002070 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002070:	4770      	bx	lr

08002072 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002072:	b510      	push	{r4, lr}
    }
 8002074:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002076:	4604      	mov	r4, r0
    }
 8002078:	f01e fd59 	bl	8020b2e <_ZdlPvj>
 800207c:	4620      	mov	r0, r4
 800207e:	bd10      	pop	{r4, pc}

08002080 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8002080:	4770      	bx	lr

08002082 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8002082:	4770      	bx	lr

08002084 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002084:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 8002088:	6808      	ldr	r0, [r1, #0]
 800208a:	6849      	ldr	r1, [r1, #4]
 800208c:	c303      	stmia	r3!, {r0, r1}
    }
 800208e:	4770      	bx	lr

08002090 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002090:	2000      	movs	r0, #0
 8002092:	4770      	bx	lr

08002094 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002094:	8081      	strh	r1, [r0, #4]
    }
 8002096:	4770      	bx	lr

08002098 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002098:	80c1      	strh	r1, [r0, #6]
    }
 800209a:	4770      	bx	lr

0800209c <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 800209c:	8101      	strh	r1, [r0, #8]
    }
 800209e:	4770      	bx	lr

080020a0 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 80020a0:	8141      	strh	r1, [r0, #10]
    }
 80020a2:	4770      	bx	lr

080020a4 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 80020a4:	4770      	bx	lr

080020a6 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 80020a6:	4770      	bx	lr

080020a8 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 80020a8:	4770      	bx	lr

080020aa <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 80020aa:	4770      	bx	lr

080020ac <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 80020ac:	4770      	bx	lr

080020ae <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 80020ae:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 80020b0:	88c4      	ldrh	r4, [r0, #6]
 80020b2:	6803      	ldr	r3, [r0, #0]
 80020b4:	1b12      	subs	r2, r2, r4
 80020b6:	8884      	ldrh	r4, [r0, #4]
 80020b8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80020ba:	1b09      	subs	r1, r1, r4
 80020bc:	b212      	sxth	r2, r2
    }
 80020be:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 80020c2:	b209      	sxth	r1, r1
 80020c4:	4718      	bx	r3

080020c6 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 80020c6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80020ca:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 80020cc:	f04f 33ff 	mov.w	r3, #4294967295
 80020d0:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 80020d2:	6813      	ldr	r3, [r2, #0]
 80020d4:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 80020d6:	6010      	str	r0, [r2, #0]
    }
 80020d8:	4770      	bx	lr

080020da <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80020da:	4770      	bx	lr

080020dc <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80020dc:	4770      	bx	lr

080020de <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80020de:	6041      	str	r1, [r0, #4]
    }
 80020e0:	4770      	bx	lr

080020e2 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80020e2:	4770      	bx	lr

080020e4 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80020e4:	4b06      	ldr	r3, [pc, #24]	; (8002100 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80020e6:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 80020ea:	2300      	movs	r3, #0
 80020ec:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80020f0:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 80020f4:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 80020f8:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
 80020fc:	4770      	bx	lr
 80020fe:	bf00      	nop
 8002100:	08002215 	.word	0x08002215

08002104 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002104:	2301      	movs	r3, #1
 8002106:	7203      	strb	r3, [r0, #8]
    }
 8002108:	4770      	bx	lr

0800210a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 800210a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800210e:	b11a      	cbz	r2, 8002118 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8002110:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8002114:	b102      	cbz	r2, 8002118 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8002116:	6018      	str	r0, [r3, #0]
        }
    }
 8002118:	4770      	bx	lr

0800211a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD1Ev>:
{
public:
    /**
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
 800211a:	4770      	bx	lr

0800211c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
class WipeTransition : public Transition
 800211c:	4770      	bx	lr

0800211e <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 800211e:	4770      	bx	lr

08002120 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8002120:	4770      	bx	lr

08002122 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
            // Copy rect from tft to client framebuffer
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
        }
    }

    virtual void tearDown()
 8002122:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 8002124:	6840      	ldr	r0, [r0, #4]
 8002126:	6803      	ldr	r3, [r0, #0]
 8002128:	3110      	adds	r1, #16
 800212a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800212c:	4718      	bx	r3

0800212e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    }

    virtual void init()
 800212e:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 8002130:	6840      	ldr	r0, [r0, #4]
 8002132:	6803      	ldr	r3, [r0, #0]
 8002134:	3110      	adds	r1, #16
 8002136:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002138:	4718      	bx	r3

0800213a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 800213a:	4770      	bx	lr

0800213c <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect4drawERKNS_4RectE>:
        }
 800213c:	4770      	bx	lr

0800213e <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect12getSolidRectEv>:
        virtual Rect getSolidRect() const
 800213e:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002140:	2200      	movs	r2, #0
            return Rect(0U, 0U, rect.width, rect.height);
 8002142:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8002146:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 800214a:	8002      	strh	r2, [r0, #0]
 800214c:	8042      	strh	r2, [r0, #2]
 800214e:	8084      	strh	r4, [r0, #4]
 8002150:	80c1      	strh	r1, [r0, #6]
        }
 8002152:	bd10      	pop	{r4, pc}

08002154 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002154:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8002156:	68c2      	ldr	r2, [r0, #12]
 8002158:	6841      	ldr	r1, [r0, #4]
 800215a:	1054      	asrs	r4, r2, #1
    virtual void execute()
 800215c:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 800215e:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002162:	07d2      	lsls	r2, r2, #31
 8002164:	bf48      	it	mi
 8002166:	590a      	ldrmi	r2, [r1, r4]
 8002168:	689b      	ldr	r3, [r3, #8]
    }
 800216a:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 800216e:	bf48      	it	mi
 8002170:	58d3      	ldrmi	r3, [r2, r3]
 8002172:	4718      	bx	r3

08002174 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002174:	6843      	ldr	r3, [r0, #4]
 8002176:	b12b      	cbz	r3, 8002184 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8002178:	6883      	ldr	r3, [r0, #8]
 800217a:	b92b      	cbnz	r3, 8002188 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 800217c:	68c0      	ldr	r0, [r0, #12]
 800217e:	f000 0001 	and.w	r0, r0, #1
 8002182:	4770      	bx	lr
 8002184:	4618      	mov	r0, r3
 8002186:	4770      	bx	lr
 8002188:	2001      	movs	r0, #1
    }
 800218a:	4770      	bx	lr

0800218c <_ZN8touchgfx12NoTransitionD0Ev>:
 800218c:	b510      	push	{r4, lr}
 800218e:	210c      	movs	r1, #12
 8002190:	4604      	mov	r4, r0
 8002192:	f01e fccc 	bl	8020b2e <_ZdlPvj>
 8002196:	4620      	mov	r0, r4
 8002198:	bd10      	pop	{r4, pc}

0800219a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800219a:	b510      	push	{r4, lr}
 800219c:	2110      	movs	r1, #16
 800219e:	4604      	mov	r4, r0
 80021a0:	f01e fcc5 	bl	8020b2e <_ZdlPvj>
 80021a4:	4620      	mov	r0, r4
 80021a6:	bd10      	pop	{r4, pc}

080021a8 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 80021a8:	b510      	push	{r4, lr}
 80021aa:	f44f 71ac 	mov.w	r1, #344	; 0x158
 80021ae:	4604      	mov	r4, r0
 80021b0:	f01e fcbd 	bl	8020b2e <_ZdlPvj>
 80021b4:	4620      	mov	r0, r4
 80021b6:	bd10      	pop	{r4, pc}

080021b8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
class WipeTransition : public Transition
 80021b8:	b510      	push	{r4, lr}
 80021ba:	2138      	movs	r1, #56	; 0x38
 80021bc:	4604      	mov	r4, r0
 80021be:	f01e fcb6 	bl	8020b2e <_ZdlPvj>
 80021c2:	4620      	mov	r0, r4
 80021c4:	bd10      	pop	{r4, pc}

080021c6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD0Ev>:
    class FullSolidRect : public Widget
 80021c6:	b510      	push	{r4, lr}
 80021c8:	2128      	movs	r1, #40	; 0x28
 80021ca:	4604      	mov	r4, r0
 80021cc:	f01e fcaf 	bl	8020b2e <_ZdlPvj>
 80021d0:	4620      	mov	r0, r4
 80021d2:	bd10      	pop	{r4, pc}

080021d4 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80021d4:	b508      	push	{r3, lr}
        Application::getInstance()->invalidate();
 80021d6:	f00f f96f 	bl	80114b8 <_ZN8touchgfx11Application11getInstanceEv>
    }
 80021da:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        Application::getInstance()->invalidate();
 80021de:	f00f bd0f 	b.w	8011c00 <_ZN8touchgfx11Application10invalidateEv>

080021e2 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 80021e2:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80021e6:	b112      	cbz	r2, 80021ee <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 80021e8:	6803      	ldr	r3, [r0, #0]
 80021ea:	695b      	ldr	r3, [r3, #20]
 80021ec:	4718      	bx	r3
    }
 80021ee:	4770      	bx	lr

080021f0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80021f0:	b510      	push	{r4, lr}
 80021f2:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80021f4:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 80021f8:	b158      	cbz	r0, 8002212 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80021fa:	6803      	ldr	r3, [r0, #0]
 80021fc:	68db      	ldr	r3, [r3, #12]
 80021fe:	4798      	blx	r3
 8002200:	b138      	cbz	r0, 8002212 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8002202:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8002206:	6803      	ldr	r3, [r0, #0]
 8002208:	689b      	ldr	r3, [r3, #8]
 800220a:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 800220c:	2300      	movs	r3, #0
 800220e:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 8002212:	bd10      	pop	{r4, pc}

08002214 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 8002214:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002218:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 800221c:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800221e:	68a8      	ldr	r0, [r5, #8]
 8002220:	6803      	ldr	r3, [r0, #0]
 8002222:	6a1b      	ldr	r3, [r3, #32]
 8002224:	4798      	blx	r3
 8002226:	f5b0 7f7e 	cmp.w	r0, #1016	; 0x3f8
 800222a:	d205      	bcs.n	8002238 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>
 800222c:	4b45      	ldr	r3, [pc, #276]	; (8002344 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 800222e:	4a46      	ldr	r2, [pc, #280]	; (8002348 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002230:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002232:	4846      	ldr	r0, [pc, #280]	; (800234c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 8002234:	f01e fcaa 	bl	8020b8c <__assert_func>
 8002238:	6868      	ldr	r0, [r5, #4]
 800223a:	6803      	ldr	r3, [r0, #0]
 800223c:	6a1b      	ldr	r3, [r3, #32]
 800223e:	4798      	blx	r3
 8002240:	280f      	cmp	r0, #15
 8002242:	d803      	bhi.n	800224c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x38>
 8002244:	4b42      	ldr	r3, [pc, #264]	; (8002350 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 8002246:	4a40      	ldr	r2, [pc, #256]	; (8002348 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002248:	21a4      	movs	r1, #164	; 0xa4
 800224a:	e7f2      	b.n	8002232 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800224c:	68e8      	ldr	r0, [r5, #12]
 800224e:	6803      	ldr	r3, [r0, #0]
 8002250:	6a1b      	ldr	r3, [r3, #32]
 8002252:	4798      	blx	r3
 8002254:	280b      	cmp	r0, #11
 8002256:	d803      	bhi.n	8002260 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4c>
 8002258:	4b3e      	ldr	r3, [pc, #248]	; (8002354 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 800225a:	4a3b      	ldr	r2, [pc, #236]	; (8002348 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 800225c:	21a5      	movs	r1, #165	; 0xa5
 800225e:	e7e8      	b.n	8002232 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    if (*currentTrans)
 8002260:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 800235c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
    Application::getInstance()->clearAllTimerWidgets();
 8002264:	f00f f928 	bl	80114b8 <_ZN8touchgfx11Application11getInstanceEv>
 8002268:	f00f f92c 	bl	80114c4 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800226c:	f8d9 0000 	ldr.w	r0, [r9]
 8002270:	b110      	cbz	r0, 8002278 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 8002272:	6803      	ldr	r3, [r0, #0]
 8002274:	68db      	ldr	r3, [r3, #12]
 8002276:	4798      	blx	r3
    if (*currentTrans)
 8002278:	f8d9 0000 	ldr.w	r0, [r9]
 800227c:	b110      	cbz	r0, 8002284 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 800227e:	6803      	ldr	r3, [r0, #0]
 8002280:	681b      	ldr	r3, [r3, #0]
 8002282:	4798      	blx	r3
    if (*currentScreen)
 8002284:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8002360 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x14c>
 8002288:	f8d8 0000 	ldr.w	r0, [r8]
 800228c:	b110      	cbz	r0, 8002294 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 800228e:	6803      	ldr	r3, [r0, #0]
 8002290:	695b      	ldr	r3, [r3, #20]
 8002292:	4798      	blx	r3
    if (*currentPresenter)
 8002294:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002298:	b110      	cbz	r0, 80022a0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 800229a:	6803      	ldr	r3, [r0, #0]
 800229c:	685b      	ldr	r3, [r3, #4]
 800229e:	4798      	blx	r3
    if (*currentScreen)
 80022a0:	f8d8 0000 	ldr.w	r0, [r8]
 80022a4:	b110      	cbz	r0, 80022ac <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 80022a6:	6803      	ldr	r3, [r0, #0]
 80022a8:	681b      	ldr	r3, [r3, #0]
 80022aa:	4798      	blx	r3
    if (*currentPresenter)
 80022ac:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80022b0:	b110      	cbz	r0, 80022b8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 80022b2:	6803      	ldr	r3, [r0, #0]
 80022b4:	689b      	ldr	r3, [r3, #8]
 80022b6:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80022b8:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80022ba:	6803      	ldr	r3, [r0, #0]
 80022bc:	2100      	movs	r1, #0
 80022be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80022c0:	4798      	blx	r3
        : screenContainer(0), done(false)
 80022c2:	f04f 0b00 	mov.w	fp, #0
 80022c6:	4b24      	ldr	r3, [pc, #144]	; (8002358 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>)
 80022c8:	6003      	str	r3, [r0, #0]
 80022ca:	4604      	mov	r4, r0
 80022cc:	f8c0 b004 	str.w	fp, [r0, #4]
 80022d0:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80022d4:	68a8      	ldr	r0, [r5, #8]
 80022d6:	6803      	ldr	r3, [r0, #0]
 80022d8:	4659      	mov	r1, fp
 80022da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80022dc:	4798      	blx	r3
 80022de:	4606      	mov	r6, r0
 80022e0:	f003 fc1c 	bl	8005b1c <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80022e4:	6868      	ldr	r0, [r5, #4]
 80022e6:	6803      	ldr	r3, [r0, #0]
 80022e8:	4659      	mov	r1, fp
 80022ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80022ec:	4798      	blx	r3
 80022ee:	4631      	mov	r1, r6
 80022f0:	4605      	mov	r5, r0
 80022f2:	f003 fb9d 	bl	8005a30 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 80022f6:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80022fa:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 80022fe:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002302:	b1e5      	cbz	r5, 800233e <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12a>
 8002304:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002306:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800230a:	6833      	ldr	r3, [r6, #0]
    virtual void UpdateBatteryVoltage () {};


    void bind(Model* m)
    {
        model = m;
 800230c:	f8c5 a008 	str.w	sl, [r5, #8]
 8002310:	4630      	mov	r0, r6
 8002312:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8002314:	63f5      	str	r5, [r6, #60]	; 0x3c
 8002316:	4798      	blx	r3
    newPresenter->activate();
 8002318:	682b      	ldr	r3, [r5, #0]
 800231a:	4628      	mov	r0, r5
 800231c:	681b      	ldr	r3, [r3, #0]
 800231e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002320:	4621      	mov	r1, r4
 8002322:	4630      	mov	r0, r6
 8002324:	f010 fd76 	bl	8012e14 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002328:	6823      	ldr	r3, [r4, #0]
 800232a:	4620      	mov	r0, r4
 800232c:	691b      	ldr	r3, [r3, #16]
 800232e:	4798      	blx	r3
    newTransition->invalidate();
 8002330:	6823      	ldr	r3, [r4, #0]
 8002332:	695b      	ldr	r3, [r3, #20]
 8002334:	4620      	mov	r0, r4
}
 8002336:	b001      	add	sp, #4
 8002338:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800233c:	4718      	bx	r3
    model->bind(newPresenter);
 800233e:	462b      	mov	r3, r5
 8002340:	e7e1      	b.n	8002306 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xf2>
 8002342:	bf00      	nop
 8002344:	080224d4 	.word	0x080224d4
 8002348:	08022562 	.word	0x08022562
 800234c:	08022666 	.word	0x08022666
 8002350:	080226ad 	.word	0x080226ad
 8002354:	08022750 	.word	0x08022750
 8002358:	08022a94 	.word	0x08022a94
 800235c:	20017498 	.word	0x20017498
 8002360:	20017494 	.word	0x20017494

08002364 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002364:	4b04      	ldr	r3, [pc, #16]	; (8002378 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8002366:	681b      	ldr	r3, [r3, #0]
 8002368:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800236c:	b10a      	cbz	r2, 8002372 <_ZN8touchgfx3HAL3lcdEv+0xe>
 800236e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002370:	b900      	cbnz	r0, 8002374 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 8002372:	6898      	ldr	r0, [r3, #8]
    }
 8002374:	4770      	bx	lr
 8002376:	bf00      	nop
 8002378:	20017450 	.word	0x20017450

0800237c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 800237c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800237e:	4604      	mov	r4, r0
        animationCounter++;
 8002380:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter <= (animationSteps))
 8002382:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8002384:	3001      	adds	r0, #1
 8002386:	b2c0      	uxtb	r0, r0
        if (animationCounter <= (animationSteps))
 8002388:	4298      	cmp	r0, r3
    virtual void handleTickEvent()
 800238a:	b089      	sub	sp, #36	; 0x24
        animationCounter++;
 800238c:	72a0      	strb	r0, [r4, #10]
        if (animationCounter <= (animationSteps))
 800238e:	d850      	bhi.n	8002432 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xb6>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002390:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8002394:	2100      	movs	r1, #0
 8002396:	f010 fd43 	bl	8012e20 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
            if (calculatedValue % 2)
 800239a:	f010 0201 	ands.w	r2, r0, #1
 800239e:	b283      	uxth	r3, r0
 80023a0:	d04d      	beq.n	800243e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xc2>
                calculatedValue += (calculatedValue > 0 ? 1 : -1);
 80023a2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80023a6:	2800      	cmp	r0, #0
 80023a8:	bfd8      	it	le
 80023aa:	460a      	movle	r2, r1
 80023ac:	4413      	add	r3, r2
 80023ae:	81e3      	strh	r3, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80023b0:	4e24      	ldr	r6, [pc, #144]	; (8002444 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xc8>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 80023b2:	4f25      	ldr	r7, [pc, #148]	; (8002448 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xcc>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80023b4:	8831      	ldrh	r1, [r6, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 80023b6:	f8b4 c018 	ldrh.w	ip, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80023ba:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 80023bc:	f9b7 0000 	ldrsh.w	r0, [r7]
 80023c0:	f8ad 001e 	strh.w	r0, [sp, #30]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80023c4:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 80023c6:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 80023c8:	4463      	add	r3, ip
 80023ca:	1a5b      	subs	r3, r3, r1
 80023cc:	f8ad 301c 	strh.w	r3, [sp, #28]
                screenContainer->invalidateRect(r);
 80023d0:	6803      	ldr	r3, [r0, #0]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80023d2:	b212      	sxth	r2, r2
 80023d4:	2500      	movs	r5, #0
                screenContainer->invalidateRect(r);
 80023d6:	691b      	ldr	r3, [r3, #16]
        rect.width = width;
 80023d8:	8322      	strh	r2, [r4, #24]
 80023da:	f8ad 2018 	strh.w	r2, [sp, #24]
 80023de:	f8ad 501a 	strh.w	r5, [sp, #26]
 80023e2:	a906      	add	r1, sp, #24
 80023e4:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 80023e6:	7aa3      	ldrb	r3, [r4, #10]
 80023e8:	2b01      	cmp	r3, #1
 80023ea:	d126      	bne.n	800243a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
 80023ec:	4b17      	ldr	r3, [pc, #92]	; (800244c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xd0>)
 80023ee:	781b      	ldrb	r3, [r3, #0]
 80023f0:	b31b      	cbz	r3, 800243a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
            Rect rect = solid.getRect(); // Part to copy between buffers
 80023f2:	69a1      	ldr	r1, [r4, #24]
 80023f4:	6960      	ldr	r0, [r4, #20]
 80023f6:	ab04      	add	r3, sp, #16
 80023f8:	c303      	stmia	r3!, {r0, r1}
        return instance;
 80023fa:	4b15      	ldr	r3, [pc, #84]	; (8002450 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xd4>)
 80023fc:	6818      	ldr	r0, [r3, #0]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 80023fe:	6803      	ldr	r3, [r0, #0]
 8002400:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002402:	4798      	blx	r3
            source.width = HAL::DISPLAY_WIDTH;
 8002404:	8833      	ldrh	r3, [r6, #0]
 8002406:	f8ad 301c 	strh.w	r3, [sp, #28]
            source.height = HAL::DISPLAY_HEIGHT;
 800240a:	883b      	ldrh	r3, [r7, #0]
 800240c:	f8ad 301e 	strh.w	r3, [sp, #30]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 8002410:	9003      	str	r0, [sp, #12]
        : x(0), y(0), width(0), height(0)
 8002412:	f8ad 5018 	strh.w	r5, [sp, #24]
 8002416:	f8ad 501a 	strh.w	r5, [sp, #26]
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
 800241a:	f7ff ffa3 	bl	8002364 <_ZN8touchgfx3HAL3lcdEv>
 800241e:	22ff      	movs	r2, #255	; 0xff
 8002420:	6803      	ldr	r3, [r0, #0]
 8002422:	9200      	str	r2, [sp, #0]
 8002424:	9501      	str	r5, [sp, #4]
 8002426:	68dc      	ldr	r4, [r3, #12]
 8002428:	9903      	ldr	r1, [sp, #12]
 800242a:	ab04      	add	r3, sp, #16
 800242c:	aa06      	add	r2, sp, #24
 800242e:	47a0      	blx	r4
 8002430:	e003      	b.n	800243a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
            done = true;
 8002432:	2301      	movs	r3, #1
 8002434:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8002436:	2300      	movs	r3, #0
 8002438:	72a3      	strb	r3, [r4, #10]
    }
 800243a:	b009      	add	sp, #36	; 0x24
 800243c:	bdf0      	pop	{r4, r5, r6, r7, pc}
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800243e:	81e0      	strh	r0, [r4, #14]
 8002440:	e7b6      	b.n	80023b0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x34>
 8002442:	bf00      	nop
 8002444:	20017444 	.word	0x20017444
 8002448:	20017446 	.word	0x20017446
 800244c:	2001744e 	.word	0x2001744e
 8002450:	20017450 	.word	0x20017450

08002454 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002454:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002456:	4604      	mov	r4, r0
 8002458:	4617      	mov	r7, r2
 800245a:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 800245c:	f00f f84c 	bl	80114f8 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002460:	4b0e      	ldr	r3, [pc, #56]	; (800249c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>)
 8002462:	601c      	str	r4, [r3, #0]
      model(m)
 8002464:	4b0e      	ldr	r3, [pc, #56]	; (80024a0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x4c>)
 8002466:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8002468:	4b0e      	ldr	r3, [pc, #56]	; (80024a4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 800246a:	2500      	movs	r5, #0
 800246c:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
 8002470:	4b0d      	ldr	r3, [pc, #52]	; (80024a8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 8002472:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 8002476:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8002478:	6803      	ldr	r3, [r0, #0]
 800247a:	4629      	mov	r1, r5
 800247c:	689b      	ldr	r3, [r3, #8]
 800247e:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
      model(m)
 8002482:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8002486:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8002488:	4628      	mov	r0, r5
 800248a:	f003 fa37 	bl	80058fc <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800248e:	f7ff ff69 	bl	8002364 <_ZN8touchgfx3HAL3lcdEv>
 8002492:	f017 f91e 	bl	80196d2 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8002496:	4620      	mov	r0, r4
 8002498:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800249a:	bf00      	nop
 800249c:	200174a4 	.word	0x200174a4
 80024a0:	08022a48 	.word	0x08022a48
 80024a4:	08022a30 	.word	0x08022a30
 80024a8:	20017450 	.word	0x20017450

080024ac <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80024ac:	4b06      	ldr	r3, [pc, #24]	; (80024c8 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 80024ae:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 80024b2:	2300      	movs	r3, #0
 80024b4:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 80024b8:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 80024bc:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 80024c0:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 80024c4:	4770      	bx	lr
 80024c6:	bf00      	nop
 80024c8:	08002215 	.word	0x08002215

080024cc <_ZN23FrontendApplicationBase35gotoScreen1ScreenWipeTransitionEastEv>:
 80024cc:	4b06      	ldr	r3, [pc, #24]	; (80024e8 <_ZN23FrontendApplicationBase35gotoScreen1ScreenWipeTransitionEastEv+0x1c>)
 80024ce:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 80024d2:	2300      	movs	r3, #0
 80024d4:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c

void FrontendApplicationBase::gotoScreen1ScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80024d8:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 80024dc:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 80024e0:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 80024e4:	4770      	bx	lr
 80024e6:	bf00      	nop
 80024e8:	080026b1 	.word	0x080026b1

080024ec <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv>:
 80024ec:	4b06      	ldr	r3, [pc, #24]	; (8002508 <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv+0x1c>)
 80024ee:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 80024f2:	2300      	movs	r3, #0
 80024f4:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// ScreenGraph

void FrontendApplicationBase::gotoScreenGraphScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreenGraphScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80024f8:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 80024fc:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002500:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002504:	4770      	bx	lr
 8002506:	bf00      	nop
 8002508:	08002571 	.word	0x08002571

0800250c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
    WipeTransition(const uint8_t transitionSteps = 20)
 800250c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800250e:	4604      	mov	r4, r0
 8002510:	2300      	movs	r3, #0
          solid()
 8002512:	4a13      	ldr	r2, [pc, #76]	; (8002560 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
 8002514:	6002      	str	r2, [r0, #0]
 8002516:	6043      	str	r3, [r0, #4]
 8002518:	7203      	strb	r3, [r0, #8]
 800251a:	7241      	strb	r1, [r0, #9]
 800251c:	7283      	strb	r3, [r0, #10]
 800251e:	e9c4 3305 	strd	r3, r3, [r4, #20]
 8002522:	e9c4 3307 	strd	r3, r3, [r4, #28]
 8002526:	e9c4 3309 	strd	r3, r3, [r4, #36]	; 0x24
 800252a:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 800252e:	81e3      	strh	r3, [r4, #14]
 8002530:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002534:	6363      	str	r3, [r4, #52]	; 0x34
    class FullSolidRect : public Widget
 8002536:	4b0b      	ldr	r3, [pc, #44]	; (8002564 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
 8002538:	6123      	str	r3, [r4, #16]
            targetValue = HAL::DISPLAY_WIDTH;
 800253a:	4b0b      	ldr	r3, [pc, #44]	; (8002568 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x5c>)
 800253c:	f9b3 1000 	ldrsh.w	r1, [r3]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8002540:	4b0a      	ldr	r3, [pc, #40]	; (800256c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x60>)
            targetValue = HAL::DISPLAY_WIDTH;
 8002542:	81a1      	strh	r1, [r4, #12]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8002544:	f9b3 5000 	ldrsh.w	r5, [r3]
          solid()
 8002548:	3010      	adds	r0, #16
        setWidth(width);
 800254a:	9001      	str	r0, [sp, #4]
 800254c:	f7ff fda6 	bl	800209c <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8002550:	9801      	ldr	r0, [sp, #4]
 8002552:	4629      	mov	r1, r5
 8002554:	f7ff fda4 	bl	80020a0 <_ZN8touchgfx8Drawable9setHeightEs>
    }
 8002558:	4620      	mov	r0, r4
 800255a:	b003      	add	sp, #12
 800255c:	bd30      	pop	{r4, r5, pc}
 800255e:	bf00      	nop
 8002560:	08022b20 	.word	0x08022b20
 8002564:	08022ab8 	.word	0x08022ab8
 8002568:	20017444 	.word	0x20017444
 800256c:	20017446 	.word	0x20017446

08002570 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv>:

void FrontendApplicationBase::gotoScreenGraphScreenWipeTransitionEastImpl()
{
 8002570:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<ScreenGraphView, ScreenGraphPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002574:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 8002578:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800257a:	68a0      	ldr	r0, [r4, #8]
 800257c:	6803      	ldr	r3, [r0, #0]
 800257e:	6a1b      	ldr	r3, [r3, #32]
 8002580:	4798      	blx	r3
 8002582:	f241 7373 	movw	r3, #6003	; 0x1773
 8002586:	4298      	cmp	r0, r3
 8002588:	d805      	bhi.n	8002596 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x26>
 800258a:	4b42      	ldr	r3, [pc, #264]	; (8002694 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x124>)
 800258c:	4a42      	ldr	r2, [pc, #264]	; (8002698 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x128>)
 800258e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002590:	4842      	ldr	r0, [pc, #264]	; (800269c <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x12c>)
 8002592:	f01e fafb 	bl	8020b8c <__assert_func>
 8002596:	6860      	ldr	r0, [r4, #4]
 8002598:	6803      	ldr	r3, [r0, #0]
 800259a:	6a1b      	ldr	r3, [r3, #32]
 800259c:	4798      	blx	r3
 800259e:	280f      	cmp	r0, #15
 80025a0:	d803      	bhi.n	80025aa <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x3a>
 80025a2:	4b3f      	ldr	r3, [pc, #252]	; (80026a0 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x130>)
 80025a4:	4a3c      	ldr	r2, [pc, #240]	; (8002698 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x128>)
 80025a6:	21a4      	movs	r1, #164	; 0xa4
 80025a8:	e7f2      	b.n	8002590 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80025aa:	68e0      	ldr	r0, [r4, #12]
 80025ac:	6803      	ldr	r3, [r0, #0]
 80025ae:	6a1b      	ldr	r3, [r3, #32]
 80025b0:	4798      	blx	r3
 80025b2:	2837      	cmp	r0, #55	; 0x37
 80025b4:	d803      	bhi.n	80025be <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x4e>
 80025b6:	4b3b      	ldr	r3, [pc, #236]	; (80026a4 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x134>)
 80025b8:	4a37      	ldr	r2, [pc, #220]	; (8002698 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x128>)
 80025ba:	21a5      	movs	r1, #165	; 0xa5
 80025bc:	e7e8      	b.n	8002590 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x20>
    if (*currentTrans)
 80025be:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 80026a8 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x138>
    Application::getInstance()->clearAllTimerWidgets();
 80025c2:	f00e ff79 	bl	80114b8 <_ZN8touchgfx11Application11getInstanceEv>
 80025c6:	f00e ff7d 	bl	80114c4 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80025ca:	f8d9 0000 	ldr.w	r0, [r9]
 80025ce:	b110      	cbz	r0, 80025d6 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 80025d0:	6803      	ldr	r3, [r0, #0]
 80025d2:	68db      	ldr	r3, [r3, #12]
 80025d4:	4798      	blx	r3
    if (*currentTrans)
 80025d6:	f8d9 0000 	ldr.w	r0, [r9]
 80025da:	b110      	cbz	r0, 80025e2 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 80025dc:	6803      	ldr	r3, [r0, #0]
 80025de:	681b      	ldr	r3, [r3, #0]
 80025e0:	4798      	blx	r3
    if (*currentScreen)
 80025e2:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80026ac <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x13c>
 80025e6:	f8d8 0000 	ldr.w	r0, [r8]
 80025ea:	b110      	cbz	r0, 80025f2 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80025ec:	6803      	ldr	r3, [r0, #0]
 80025ee:	695b      	ldr	r3, [r3, #20]
 80025f0:	4798      	blx	r3
    if (*currentPresenter)
 80025f2:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80025f6:	b110      	cbz	r0, 80025fe <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80025f8:	6803      	ldr	r3, [r0, #0]
 80025fa:	685b      	ldr	r3, [r3, #4]
 80025fc:	4798      	blx	r3
    if (*currentScreen)
 80025fe:	f8d8 0000 	ldr.w	r0, [r8]
 8002602:	b110      	cbz	r0, 800260a <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8002604:	6803      	ldr	r3, [r0, #0]
 8002606:	681b      	ldr	r3, [r3, #0]
 8002608:	4798      	blx	r3
    if (*currentPresenter)
 800260a:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 800260e:	b110      	cbz	r0, 8002616 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8002610:	6803      	ldr	r3, [r0, #0]
 8002612:	689b      	ldr	r3, [r3, #8]
 8002614:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002616:	68e0      	ldr	r0, [r4, #12]
 8002618:	6803      	ldr	r3, [r0, #0]
 800261a:	2100      	movs	r1, #0
 800261c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800261e:	4798      	blx	r3
 8002620:	2114      	movs	r1, #20
 8002622:	4605      	mov	r5, r0
 8002624:	f7ff ff72 	bl	800250c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002628:	68a0      	ldr	r0, [r4, #8]
 800262a:	6803      	ldr	r3, [r0, #0]
 800262c:	2100      	movs	r1, #0
 800262e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002630:	4798      	blx	r3
 8002632:	4606      	mov	r6, r0
 8002634:	f003 fb4c 	bl	8005cd0 <_ZN15ScreenGraphViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002638:	6860      	ldr	r0, [r4, #4]
 800263a:	6803      	ldr	r3, [r0, #0]
 800263c:	2100      	movs	r1, #0
 800263e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002640:	4798      	blx	r3
 8002642:	4631      	mov	r1, r6
 8002644:	4604      	mov	r4, r0
 8002646:	f003 fa93 	bl	8005b70 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView>
    *currentTrans = newTransition;
 800264a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800264e:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8002652:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002656:	b1dc      	cbz	r4, 8002690 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x120>
 8002658:	1d23      	adds	r3, r4, #4
 800265a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800265e:	6833      	ldr	r3, [r6, #0]
 8002660:	f8c4 a008 	str.w	sl, [r4, #8]
 8002664:	4630      	mov	r0, r6
 8002666:	68db      	ldr	r3, [r3, #12]
 8002668:	63f4      	str	r4, [r6, #60]	; 0x3c
 800266a:	4798      	blx	r3
    newPresenter->activate();
 800266c:	6823      	ldr	r3, [r4, #0]
 800266e:	4620      	mov	r0, r4
 8002670:	681b      	ldr	r3, [r3, #0]
 8002672:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002674:	4629      	mov	r1, r5
 8002676:	4630      	mov	r0, r6
 8002678:	f010 fbcc 	bl	8012e14 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800267c:	682b      	ldr	r3, [r5, #0]
 800267e:	4628      	mov	r0, r5
 8002680:	691b      	ldr	r3, [r3, #16]
 8002682:	4798      	blx	r3
    newTransition->invalidate();
 8002684:	682b      	ldr	r3, [r5, #0]
 8002686:	4628      	mov	r0, r5
 8002688:	695b      	ldr	r3, [r3, #20]
}
 800268a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800268e:	4718      	bx	r3
    model->bind(newPresenter);
 8002690:	4623      	mov	r3, r4
 8002692:	e7e2      	b.n	800265a <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0xea>
 8002694:	080224d4 	.word	0x080224d4
 8002698:	080227f3 	.word	0x080227f3
 800269c:	08022666 	.word	0x08022666
 80026a0:	080226ad 	.word	0x080226ad
 80026a4:	08022750 	.word	0x08022750
 80026a8:	20017498 	.word	0x20017498
 80026ac:	20017494 	.word	0x20017494

080026b0 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv>:
{
 80026b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80026b4:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 80026b8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80026ba:	68a0      	ldr	r0, [r4, #8]
 80026bc:	6803      	ldr	r3, [r0, #0]
 80026be:	6a1b      	ldr	r3, [r3, #32]
 80026c0:	4798      	blx	r3
 80026c2:	f5b0 7f7e 	cmp.w	r0, #1016	; 0x3f8
 80026c6:	d205      	bcs.n	80026d4 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x24>
 80026c8:	4b42      	ldr	r3, [pc, #264]	; (80027d4 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x124>)
 80026ca:	4a43      	ldr	r2, [pc, #268]	; (80027d8 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x128>)
 80026cc:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80026ce:	4843      	ldr	r0, [pc, #268]	; (80027dc <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x12c>)
 80026d0:	f01e fa5c 	bl	8020b8c <__assert_func>
 80026d4:	6860      	ldr	r0, [r4, #4]
 80026d6:	6803      	ldr	r3, [r0, #0]
 80026d8:	6a1b      	ldr	r3, [r3, #32]
 80026da:	4798      	blx	r3
 80026dc:	280f      	cmp	r0, #15
 80026de:	d803      	bhi.n	80026e8 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x38>
 80026e0:	4b3f      	ldr	r3, [pc, #252]	; (80027e0 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x130>)
 80026e2:	4a3d      	ldr	r2, [pc, #244]	; (80027d8 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x128>)
 80026e4:	21a4      	movs	r1, #164	; 0xa4
 80026e6:	e7f2      	b.n	80026ce <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80026e8:	68e0      	ldr	r0, [r4, #12]
 80026ea:	6803      	ldr	r3, [r0, #0]
 80026ec:	6a1b      	ldr	r3, [r3, #32]
 80026ee:	4798      	blx	r3
 80026f0:	2837      	cmp	r0, #55	; 0x37
 80026f2:	d803      	bhi.n	80026fc <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x4c>
 80026f4:	4b3b      	ldr	r3, [pc, #236]	; (80027e4 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x134>)
 80026f6:	4a38      	ldr	r2, [pc, #224]	; (80027d8 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x128>)
 80026f8:	21a5      	movs	r1, #165	; 0xa5
 80026fa:	e7e8      	b.n	80026ce <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x1e>
    if (*currentTrans)
 80026fc:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 80027e8 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x138>
    Application::getInstance()->clearAllTimerWidgets();
 8002700:	f00e feda 	bl	80114b8 <_ZN8touchgfx11Application11getInstanceEv>
 8002704:	f00e fede 	bl	80114c4 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002708:	f8d9 0000 	ldr.w	r0, [r9]
 800270c:	b110      	cbz	r0, 8002714 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x64>
        (*currentTrans)->tearDown();
 800270e:	6803      	ldr	r3, [r0, #0]
 8002710:	68db      	ldr	r3, [r3, #12]
 8002712:	4798      	blx	r3
    if (*currentTrans)
 8002714:	f8d9 0000 	ldr.w	r0, [r9]
 8002718:	b110      	cbz	r0, 8002720 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x70>
        (*currentTrans)->~Transition();
 800271a:	6803      	ldr	r3, [r0, #0]
 800271c:	681b      	ldr	r3, [r3, #0]
 800271e:	4798      	blx	r3
    if (*currentScreen)
 8002720:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80027ec <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x13c>
 8002724:	f8d8 0000 	ldr.w	r0, [r8]
 8002728:	b110      	cbz	r0, 8002730 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 800272a:	6803      	ldr	r3, [r0, #0]
 800272c:	695b      	ldr	r3, [r3, #20]
 800272e:	4798      	blx	r3
    if (*currentPresenter)
 8002730:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002734:	b110      	cbz	r0, 800273c <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8002736:	6803      	ldr	r3, [r0, #0]
 8002738:	685b      	ldr	r3, [r3, #4]
 800273a:	4798      	blx	r3
    if (*currentScreen)
 800273c:	f8d8 0000 	ldr.w	r0, [r8]
 8002740:	b110      	cbz	r0, 8002748 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x98>
        (*currentScreen)->~Screen();
 8002742:	6803      	ldr	r3, [r0, #0]
 8002744:	681b      	ldr	r3, [r3, #0]
 8002746:	4798      	blx	r3
    if (*currentPresenter)
 8002748:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 800274c:	b110      	cbz	r0, 8002754 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 800274e:	6803      	ldr	r3, [r0, #0]
 8002750:	689b      	ldr	r3, [r3, #8]
 8002752:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002754:	68e0      	ldr	r0, [r4, #12]
 8002756:	6803      	ldr	r3, [r0, #0]
 8002758:	2100      	movs	r1, #0
 800275a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800275c:	4798      	blx	r3
 800275e:	2114      	movs	r1, #20
 8002760:	4605      	mov	r5, r0
 8002762:	f7ff fed3 	bl	800250c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002766:	68a0      	ldr	r0, [r4, #8]
 8002768:	6803      	ldr	r3, [r0, #0]
 800276a:	2100      	movs	r1, #0
 800276c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800276e:	4798      	blx	r3
 8002770:	4606      	mov	r6, r0
 8002772:	f003 f9d3 	bl	8005b1c <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002776:	6860      	ldr	r0, [r4, #4]
 8002778:	6803      	ldr	r3, [r0, #0]
 800277a:	2100      	movs	r1, #0
 800277c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800277e:	4798      	blx	r3
 8002780:	4631      	mov	r1, r6
 8002782:	4604      	mov	r4, r0
 8002784:	f003 f954 	bl	8005a30 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 8002788:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800278c:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8002790:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002794:	b1dc      	cbz	r4, 80027ce <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x11e>
 8002796:	1d23      	adds	r3, r4, #4
 8002798:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800279c:	6833      	ldr	r3, [r6, #0]
 800279e:	f8c4 a008 	str.w	sl, [r4, #8]
 80027a2:	4630      	mov	r0, r6
 80027a4:	68db      	ldr	r3, [r3, #12]
 80027a6:	63f4      	str	r4, [r6, #60]	; 0x3c
 80027a8:	4798      	blx	r3
    newPresenter->activate();
 80027aa:	6823      	ldr	r3, [r4, #0]
 80027ac:	4620      	mov	r0, r4
 80027ae:	681b      	ldr	r3, [r3, #0]
 80027b0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80027b2:	4629      	mov	r1, r5
 80027b4:	4630      	mov	r0, r6
 80027b6:	f010 fb2d 	bl	8012e14 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80027ba:	682b      	ldr	r3, [r5, #0]
 80027bc:	4628      	mov	r0, r5
 80027be:	691b      	ldr	r3, [r3, #16]
 80027c0:	4798      	blx	r3
    newTransition->invalidate();
 80027c2:	682b      	ldr	r3, [r5, #0]
 80027c4:	4628      	mov	r0, r5
 80027c6:	695b      	ldr	r3, [r3, #20]
}
 80027c8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80027cc:	4718      	bx	r3
    model->bind(newPresenter);
 80027ce:	4623      	mov	r3, r4
 80027d0:	e7e2      	b.n	8002798 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0xe8>
 80027d2:	bf00      	nop
 80027d4:	080224d4 	.word	0x080224d4
 80027d8:	08022911 	.word	0x08022911
 80027dc:	08022666 	.word	0x08022666
 80027e0:	080226ad 	.word	0x080226ad
 80027e4:	08022750 	.word	0x08022750
 80027e8:	20017498 	.word	0x20017498
 80027ec:	20017494 	.word	0x20017494

080027f0 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 80027f0:	6a00      	ldr	r0, [r0, #32]
 80027f2:	4770      	bx	lr

080027f4 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 80027f4:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80027f6:	4770      	bx	lr

080027f8 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 80027f8:	4770      	bx	lr

080027fa <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 80027fa:	888b      	ldrh	r3, [r1, #4]
 80027fc:	6980      	ldr	r0, [r0, #24]
 80027fe:	680a      	ldr	r2, [r1, #0]
 8002800:	0adb      	lsrs	r3, r3, #11
 8002802:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8002806:	4410      	add	r0, r2
 8002808:	4770      	bx	lr

0800280a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800280a:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 800280c:	b1c2      	cbz	r2, 8002840 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 800280e:	7b13      	ldrb	r3, [r2, #12]
 8002810:	b1b3      	cbz	r3, 8002840 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8002812:	7b54      	ldrb	r4, [r2, #13]
 8002814:	7ad2      	ldrb	r2, [r2, #11]
 8002816:	0224      	lsls	r4, r4, #8
 8002818:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800281c:	4314      	orrs	r4, r2
 800281e:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002820:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002822:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8002826:	8813      	ldrh	r3, [r2, #0]
 8002828:	428b      	cmp	r3, r1
 800282a:	d102      	bne.n	8002832 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 800282c:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8002830:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8002832:	d805      	bhi.n	8002840 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002834:	3801      	subs	r0, #1
 8002836:	b280      	uxth	r0, r0
 8002838:	3204      	adds	r2, #4
 800283a:	2800      	cmp	r0, #0
 800283c:	d1f3      	bne.n	8002826 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800283e:	e7f7      	b.n	8002830 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8002840:	2000      	movs	r0, #0
 8002842:	e7f5      	b.n	8002830 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08002844 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8002844:	b510      	push	{r4, lr}
 8002846:	2128      	movs	r1, #40	; 0x28
 8002848:	4604      	mov	r4, r0
 800284a:	f01e f970 	bl	8020b2e <_ZdlPvj>
 800284e:	4620      	mov	r0, r4
 8002850:	bd10      	pop	{r4, pc}
	...

08002854 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8002854:	b530      	push	{r4, r5, lr}
 8002856:	b089      	sub	sp, #36	; 0x24
 8002858:	4604      	mov	r4, r0
      arabicTable(formsTable)
 800285a:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 800285e:	9506      	str	r5, [sp, #24]
 8002860:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8002864:	9505      	str	r5, [sp, #20]
 8002866:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 800286a:	9504      	str	r5, [sp, #16]
 800286c:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8002870:	9503      	str	r5, [sp, #12]
 8002872:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 8002876:	9502      	str	r5, [sp, #8]
 8002878:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 800287c:	9501      	str	r5, [sp, #4]
 800287e:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8002882:	9500      	str	r5, [sp, #0]
 8002884:	f00f fe5c 	bl	8012540 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 8002888:	4b06      	ldr	r3, [pc, #24]	; (80028a4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
 800288a:	6023      	str	r3, [r4, #0]
 800288c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800288e:	61a3      	str	r3, [r4, #24]
 8002890:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002892:	61e3      	str	r3, [r4, #28]
 8002894:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8002896:	6223      	str	r3, [r4, #32]
 8002898:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800289a:	6263      	str	r3, [r4, #36]	; 0x24
}
 800289c:	4620      	mov	r0, r4
 800289e:	b009      	add	sp, #36	; 0x24
 80028a0:	bd30      	pop	{r4, r5, pc}
 80028a2:	bf00      	nop
 80028a4:	08022b44 	.word	0x08022b44

080028a8 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 80028a8:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80028aa:	4770      	bx	lr

080028ac <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80028ac:	4770      	bx	lr

080028ae <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80028ae:	4770      	bx	lr

080028b0 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80028b0:	4770      	bx	lr

080028b2 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80028b2:	4770      	bx	lr

080028b4 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 80028b4:	4770      	bx	lr

080028b6 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 80028b6:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 80028b8:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 80028ba:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 80028bc:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80028be:	466d      	mov	r5, sp
 80028c0:	4601      	mov	r1, r0
 80028c2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 80028c6:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80028c8:	4628      	mov	r0, r5
 80028ca:	4798      	blx	r3
 80028cc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80028d0:	343c      	adds	r4, #60	; 0x3c
 80028d2:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80028d6:	b005      	add	sp, #20
 80028d8:	bd30      	pop	{r4, r5, pc}

080028da <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 80028da:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 80028dc:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 80028de:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 80028e0:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80028e2:	466d      	mov	r5, sp
 80028e4:	4601      	mov	r1, r0
 80028e6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 80028ea:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80028ec:	4628      	mov	r0, r5
 80028ee:	4798      	blx	r3
 80028f0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80028f4:	343c      	adds	r4, #60	; 0x3c
 80028f6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80028fa:	b005      	add	sp, #20
 80028fc:	bd30      	pop	{r4, r5, pc}

080028fe <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 80028fe:	2200      	movs	r2, #0
 8002900:	8002      	strh	r2, [r0, #0]
 8002902:	8042      	strh	r2, [r0, #2]
 8002904:	8082      	strh	r2, [r0, #4]
 8002906:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002908:	4770      	bx	lr

0800290a <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800290a:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 800290e:	4770      	bx	lr

08002910 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002910:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 8002912:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002914:	4604      	mov	r4, r0
        setX(x);
 8002916:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002918:	4615      	mov	r5, r2
        setX(x);
 800291a:	4798      	blx	r3
        setBaselineY(baselineY);
 800291c:	6823      	ldr	r3, [r4, #0]
 800291e:	4629      	mov	r1, r5
 8002920:	4620      	mov	r0, r4
 8002922:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 8002924:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002928:	4718      	bx	r3

0800292a <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 800292a:	2000      	movs	r0, #0
 800292c:	4770      	bx	lr

0800292e <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 800292e:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8002930:	4770      	bx	lr

08002932 <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 8002932:	4770      	bx	lr

08002934 <_ZN15Screen1ViewBase17ButtonDownClickedEv>:
     * Virtual Action Handlers
     */
    virtual void ButtonDownClicked()
    {
        // Override and implement this function in Screen1
    }
 8002934:	4770      	bx	lr

08002936 <_ZN15Screen1ViewBase15ButtonUpClickedEv>:

    virtual void ButtonUpClicked()
    {
        // Override and implement this function in Screen1
    }
 8002936:	4770      	bx	lr

08002938 <_ZN15Screen1ViewBase18ButtonStartClickedEv>:

    virtual void ButtonStartClicked()
    {
        // Override and implement this function in Screen1
    }
 8002938:	4770      	bx	lr

0800293a <_ZN15Screen1ViewBase11setupScreenEv>:
}

void Screen1ViewBase::setupScreen()
{

}
 800293a:	4770      	bx	lr

0800293c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
 * @tparam T Generic type parameter. Typically a AbstractButtonContainer subclass.
 *
 * @see AbstractButtonContainer, BoxWithBorder
 */
template <class T>
class BoxWithBorderButtonStyle : public T
 800293c:	4770      	bx	lr

0800293e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
     *
     * @see setPressed
     */
    bool getPressed()
    {
        return pressed;
 800293e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
 8002942:	b14b      	cbz	r3, 8002958 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x1a>
 8002944:	f100 026c 	add.w	r2, r0, #108	; 0x6c
 8002948:	6812      	ldr	r2, [r2, #0]
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 800294a:	65c2      	str	r2, [r0, #92]	; 0x5c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 800294c:	b13b      	cbz	r3, 800295e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x20>
 800294e:	f100 0374 	add.w	r3, r0, #116	; 0x74
 8002952:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
 8002954:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
 8002956:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 8002958:	f100 0268 	add.w	r2, r0, #104	; 0x68
 800295c:	e7f4      	b.n	8002948 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xa>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 800295e:	f100 0370 	add.w	r3, r0, #112	; 0x70
 8002962:	e7f6      	b.n	8002952 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>

08002964 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002964:	4770      	bx	lr

08002966 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 8002966:	4770      	bx	lr

08002968 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
 * The position of the icon can be adjusted with setIconXY.
 *
 * @see AbstractButtonContainer
 */
template <class T>
class IconButtonStyle : public T
 8002968:	4770      	bx	lr

0800296a <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 800296a:	4770      	bx	lr

0800296c <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800296c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800296e:	68c2      	ldr	r2, [r0, #12]
 8002970:	6844      	ldr	r4, [r0, #4]
 8002972:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002974:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002976:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800297a:	07d2      	lsls	r2, r2, #31
 800297c:	bf48      	it	mi
 800297e:	5962      	ldrmi	r2, [r4, r5]
 8002980:	689b      	ldr	r3, [r3, #8]
    }
 8002982:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002984:	bf48      	it	mi
 8002986:	58d3      	ldrmi	r3, [r2, r3]
 8002988:	4718      	bx	r3

0800298a <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800298a:	6843      	ldr	r3, [r0, #4]
 800298c:	b12b      	cbz	r3, 800299a <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 800298e:	6883      	ldr	r3, [r0, #8]
 8002990:	b92b      	cbnz	r3, 800299e <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8002992:	68c0      	ldr	r0, [r0, #12]
 8002994:	f000 0001 	and.w	r0, r0, #1
 8002998:	4770      	bx	lr
 800299a:	4618      	mov	r0, r3
 800299c:	4770      	bx	lr
 800299e:	2001      	movs	r0, #1
    }
 80029a0:	4770      	bx	lr

080029a2 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80029a2:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80029a4:	68c2      	ldr	r2, [r0, #12]
 80029a6:	6844      	ldr	r4, [r0, #4]
 80029a8:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80029aa:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80029ac:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80029b0:	07d2      	lsls	r2, r2, #31
 80029b2:	bf48      	it	mi
 80029b4:	5962      	ldrmi	r2, [r4, r5]
 80029b6:	689b      	ldr	r3, [r3, #8]
    }
 80029b8:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80029ba:	bf48      	it	mi
 80029bc:	58d3      	ldrmi	r3, [r2, r3]
 80029be:	4718      	bx	r3

080029c0 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80029c0:	6843      	ldr	r3, [r0, #4]
 80029c2:	b12b      	cbz	r3, 80029d0 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80029c4:	6883      	ldr	r3, [r0, #8]
 80029c6:	b92b      	cbnz	r3, 80029d4 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80029c8:	68c0      	ldr	r0, [r0, #12]
 80029ca:	f000 0001 	and.w	r0, r0, #1
 80029ce:	4770      	bx	lr
 80029d0:	4618      	mov	r0, r3
 80029d2:	4770      	bx	lr
 80029d4:	2001      	movs	r0, #1
    }
 80029d6:	4770      	bx	lr

080029d8 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:
    }

    /** @copydoc Image::getAlpha() */
    uint8_t getAlpha() const
    {
        return alpha;
 80029d8:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
     *
     * @note The user code must call invalidate() in order to update the display.
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80029dc:	f880 30a4 	strb.w	r3, [r0, #164]	; 0xa4
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80029e0:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        iconImage.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 80029e4:	4770      	bx	lr

080029e6 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
 80029e6:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 80029ea:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 80029ee:	4770      	bx	lr

080029f0 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    virtual void handlePressedUpdated()
 80029f0:	b510      	push	{r4, lr}
 80029f2:	4604      	mov	r4, r0
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 80029f4:	307c      	adds	r0, #124	; 0x7c
 80029f6:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 80029fa:	b13b      	cbz	r3, 8002a0c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x1c>
 80029fc:	f104 017a 	add.w	r1, r4, #122	; 0x7a
 8002a00:	f00c f8ac 	bl	800eb5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::handlePressedUpdated();
 8002a04:	4620      	mov	r0, r4
 8002a06:	f7ff ff9a 	bl	800293e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 8002a0a:	bd10      	pop	{r4, pc}
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 8002a0c:	f104 0178 	add.w	r1, r4, #120	; 0x78
 8002a10:	e7f6      	b.n	8002a00 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x10>

08002a12 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002a12:	b510      	push	{r4, lr}
 8002a14:	214c      	movs	r1, #76	; 0x4c
 8002a16:	4604      	mov	r4, r0
 8002a18:	f01e f889 	bl	8020b2e <_ZdlPvj>
 8002a1c:	4620      	mov	r0, r4
 8002a1e:	bd10      	pop	{r4, pc}

08002a20 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
 8002a20:	b510      	push	{r4, lr}
 8002a22:	2178      	movs	r1, #120	; 0x78
 8002a24:	4604      	mov	r4, r0
 8002a26:	f01e f882 	bl	8020b2e <_ZdlPvj>
 8002a2a:	4620      	mov	r0, r4
 8002a2c:	bd10      	pop	{r4, pc}

08002a2e <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class IconButtonStyle : public T
 8002a2e:	b510      	push	{r4, lr}
 8002a30:	21a8      	movs	r1, #168	; 0xa8
 8002a32:	4604      	mov	r4, r0
 8002a34:	f01e f87b 	bl	8020b2e <_ZdlPvj>
 8002a38:	4620      	mov	r0, r4
 8002a3a:	bd10      	pop	{r4, pc}

08002a3c <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002a3c:	b510      	push	{r4, lr}
 8002a3e:	2110      	movs	r1, #16
 8002a40:	4604      	mov	r4, r0
 8002a42:	f01e f874 	bl	8020b2e <_ZdlPvj>
 8002a46:	4620      	mov	r0, r4
 8002a48:	bd10      	pop	{r4, pc}

08002a4a <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 8002a4a:	b510      	push	{r4, lr}
 8002a4c:	2110      	movs	r1, #16
 8002a4e:	4604      	mov	r4, r0
 8002a50:	f01e f86d 	bl	8020b2e <_ZdlPvj>
 8002a54:	4620      	mov	r0, r4
 8002a56:	bd10      	pop	{r4, pc}

08002a58 <_ZN15Screen1ViewBaseD0Ev>:
    virtual ~Screen1ViewBase() {}
 8002a58:	b510      	push	{r4, lr}
 8002a5a:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 8002a5e:	4604      	mov	r4, r0
 8002a60:	f01e f865 	bl	8020b2e <_ZdlPvj>
 8002a64:	4620      	mov	r0, r4
 8002a66:	bd10      	pop	{r4, pc}

08002a68 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 8002a68:	b510      	push	{r4, lr}
 8002a6a:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
 8002a6c:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8002a6e:	b150      	cbz	r0, 8002a86 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 8002a70:	6803      	ldr	r3, [r0, #0]
 8002a72:	68db      	ldr	r3, [r3, #12]
 8002a74:	4798      	blx	r3
 8002a76:	b130      	cbz	r0, 8002a86 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
        {
            action->execute(*this);
 8002a78:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8002a7a:	6803      	ldr	r3, [r0, #0]
 8002a7c:	4621      	mov	r1, r4
 8002a7e:	689b      	ldr	r3, [r3, #8]
        }
    }
 8002a80:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 8002a84:	4718      	bx	r3
    }
 8002a86:	bd10      	pop	{r4, pc}

08002a88 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:
    }
}

void Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &ButtonDown)
 8002a88:	f100 02c4 	add.w	r2, r0, #196	; 0xc4
 8002a8c:	4291      	cmp	r1, r2
 8002a8e:	d102      	bne.n	8002a96 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
    {
        //ButtonUpInteraction
        //When ButtonDown clicked call virtual function
        //Call ButtonDownClicked
        ButtonDownClicked();
 8002a90:	6803      	ldr	r3, [r0, #0]
 8002a92:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    else if (&src == &ButtonUp)
    {
        //ButtownDownInteraction
        //When ButtonUp clicked call virtual function
        //Call ButtonUpClicked
        ButtonUpClicked();
 8002a94:	4718      	bx	r3
    else if (&src == &ButtonUp)
 8002a96:	f500 72b6 	add.w	r2, r0, #364	; 0x16c
 8002a9a:	4291      	cmp	r1, r2
 8002a9c:	d102      	bne.n	8002aa4 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1c>
        ButtonUpClicked();
 8002a9e:	6803      	ldr	r3, [r0, #0]
 8002aa0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002aa2:	e7f7      	b.n	8002a94 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    }
}
 8002aa4:	4770      	bx	lr

08002aa6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
 8002aa6:	790b      	ldrb	r3, [r1, #4]
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8002aa8:	b570      	push	{r4, r5, r6, lr}
        return pressed;
 8002aaa:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
 8002aae:	4604      	mov	r4, r0
 8002ab0:	460d      	mov	r5, r1
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002ab2:	b99b      	cbnz	r3, 8002adc <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x36>
 8002ab4:	b98e      	cbnz	r6, 8002ada <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 8002ab6:	fab3 f383 	clz	r3, r3
 8002aba:	095b      	lsrs	r3, r3, #5
 8002abc:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        handlePressedUpdated();
 8002ac0:	6823      	ldr	r3, [r4, #0]
 8002ac2:	4620      	mov	r0, r4
 8002ac4:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002ac8:	4798      	blx	r3
        {
            setPressed(newPressedValue);
            invalidate();
 8002aca:	6823      	ldr	r3, [r4, #0]
 8002acc:	4620      	mov	r0, r4
 8002ace:	695b      	ldr	r3, [r3, #20]
 8002ad0:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 8002ad2:	b116      	cbz	r6, 8002ada <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002ad4:	792b      	ldrb	r3, [r5, #4]
 8002ad6:	2b01      	cmp	r3, #1
 8002ad8:	d003      	beq.n	8002ae2 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
 8002ada:	bd70      	pop	{r4, r5, r6, pc}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002adc:	2e00      	cmp	r6, #0
 8002ade:	d0fc      	beq.n	8002ada <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002ae0:	e7e9      	b.n	8002ab6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            executeAction();
 8002ae2:	6823      	ldr	r3, [r4, #0]
 8002ae4:	4620      	mov	r0, r4
 8002ae6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    }
 8002aea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 8002aee:	4718      	bx	r3

08002af0 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002af0:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002af2:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002af4:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002af6:	4b12      	ldr	r3, [pc, #72]	; (8002b40 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8002af8:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002afa:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002afc:	b28d      	uxth	r5, r1
 8002afe:	b92b      	cbnz	r3, 8002b0c <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8002b00:	4b10      	ldr	r3, [pc, #64]	; (8002b44 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8002b02:	4a11      	ldr	r2, [pc, #68]	; (8002b48 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002b04:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002b06:	4811      	ldr	r0, [pc, #68]	; (8002b4c <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8002b08:	f01e f840 	bl	8020b8c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002b0c:	4910      	ldr	r1, [pc, #64]	; (8002b50 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8002b0e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002b10:	8809      	ldrh	r1, [r1, #0]
 8002b12:	4291      	cmp	r1, r2
 8002b14:	d803      	bhi.n	8002b1e <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8002b16:	4b0f      	ldr	r3, [pc, #60]	; (8002b54 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8002b18:	4a0b      	ldr	r2, [pc, #44]	; (8002b48 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002b1a:	216d      	movs	r1, #109	; 0x6d
 8002b1c:	e7f3      	b.n	8002b06 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002b1e:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8002b22:	4b0d      	ldr	r3, [pc, #52]	; (8002b58 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8002b24:	681b      	ldr	r3, [r3, #0]
 8002b26:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8002b2a:	6803      	ldr	r3, [r0, #0]
 8002b2c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002b2e:	4798      	blx	r3
 8002b30:	1a28      	subs	r0, r5, r0
 8002b32:	b201      	sxth	r1, r0
 8002b34:	4633      	mov	r3, r6
 8002b36:	4620      	mov	r0, r4
    }
 8002b38:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002b3c:	4718      	bx	r3
 8002b3e:	bf00      	nop
 8002b40:	200174a8 	.word	0x200174a8
 8002b44:	08022b94 	.word	0x08022b94
 8002b48:	08022bd6 	.word	0x08022bd6
 8002b4c:	08022c11 	.word	0x08022c11
 8002b50:	200174ac 	.word	0x200174ac
 8002b54:	08022c58 	.word	0x08022c58
 8002b58:	200174b0 	.word	0x200174b0

08002b5c <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonStart)
 8002b5c:	f500 732a 	add.w	r3, r0, #680	; 0x2a8
 8002b60:	428b      	cmp	r3, r1
{
 8002b62:	b510      	push	{r4, lr}
 8002b64:	4604      	mov	r4, r0
    if (&src == &buttonStart)
 8002b66:	d109      	bne.n	8002b7c <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x20>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002b68:	f00e fca6 	bl	80114b8 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoScreenGraphScreenWipeTransitionEast();
 8002b6c:	f7ff fcbe 	bl	80024ec <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv>
        ButtonStartClicked();
 8002b70:	6823      	ldr	r3, [r4, #0]
 8002b72:	4620      	mov	r0, r4
 8002b74:	6b5b      	ldr	r3, [r3, #52]	; 0x34
}
 8002b76:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        ButtonStartClicked();
 8002b7a:	4718      	bx	r3
}
 8002b7c:	bd10      	pop	{r4, pc}

08002b7e <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8002b7e:	2200      	movs	r2, #0
 8002b80:	f04f 31ff 	mov.w	r1, #4294967295
 8002b84:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8002b88:	6082      	str	r2, [r0, #8]
    }
 8002b8a:	4770      	bx	lr

08002b8c <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002b8c:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002b8e:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002b90:	4604      	mov	r4, r0
        setX(x);
 8002b92:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002b94:	4615      	mov	r5, r2
        setX(x);
 8002b96:	4798      	blx	r3
        setY(y);
 8002b98:	6823      	ldr	r3, [r4, #0]
 8002b9a:	4629      	mov	r1, r5
 8002b9c:	4620      	mov	r0, r4
 8002b9e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8002ba0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002ba4:	4718      	bx	r3

08002ba6 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>:
        iconReleased = newIconReleased;
 8002ba6:	880b      	ldrh	r3, [r1, #0]
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002ba8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        iconReleased = newIconReleased;
 8002bac:	f8a0 3078 	strh.w	r3, [r0, #120]	; 0x78
        iconPressed = newIconPressed;
 8002bb0:	8813      	ldrh	r3, [r2, #0]
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002bb2:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
        iconPressed = newIconPressed;
 8002bb6:	f8a0 307a 	strh.w	r3, [r0, #122]	; 0x7a
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002bba:	4604      	mov	r4, r0
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002bbc:	4610      	mov	r0, r2
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002bbe:	4690      	mov	r8, r2
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002bc0:	f011 feaa 	bl	8014918 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8002bc4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8002bc8:	4607      	mov	r7, r0
 8002bca:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8002bce:	4640      	mov	r0, r8
 8002bd0:	f3c3 064f 	ubfx	r6, r3, #1, #16
 8002bd4:	f011 fed4 	bl	8014980 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8002bd8:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8002bdc:	f3c5 054f 	ubfx	r5, r5, #1, #16
 8002be0:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8002be4:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
 8002be8:	eba6 0260 	sub.w	r2, r6, r0, asr #1
 8002bec:	eba5 0767 	sub.w	r7, r5, r7, asr #1
 8002bf0:	f104 007c 	add.w	r0, r4, #124	; 0x7c
 8002bf4:	b239      	sxth	r1, r7
 8002bf6:	b212      	sxth	r2, r2
 8002bf8:	f7ff ffc8 	bl	8002b8c <_ZN8touchgfx8Drawable5setXYEss>
        handlePressedUpdated();
 8002bfc:	6823      	ldr	r3, [r4, #0]
 8002bfe:	4620      	mov	r0, r4
 8002c00:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
    }
 8002c04:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        handlePressedUpdated();
 8002c08:	4718      	bx	r3

08002c0a <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002c0a:	b570      	push	{r4, r5, r6, lr}
 8002c0c:	4604      	mov	r4, r0
 8002c0e:	461d      	mov	r5, r3
 8002c10:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002c14:	f7ff ffba 	bl	8002b8c <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002c18:	6823      	ldr	r3, [r4, #0]
 8002c1a:	4629      	mov	r1, r5
 8002c1c:	4620      	mov	r0, r4
 8002c1e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002c20:	4798      	blx	r3
        setHeight(height);
 8002c22:	6823      	ldr	r3, [r4, #0]
 8002c24:	4631      	mov	r1, r6
 8002c26:	4620      	mov	r0, r4
 8002c28:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002c2a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002c2e:	4718      	bx	r3

08002c30 <_ZN8touchgfx6WidgetC1Ev>:
 8002c30:	2200      	movs	r2, #0
 8002c32:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002c36:	e9c0 2203 	strd	r2, r2, [r0, #12]
          visible(true)
 8002c3a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8002c3e:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8002c42:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002c46:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8002c48:	4a01      	ldr	r2, [pc, #4]	; (8002c50 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8002c4a:	6002      	str	r2, [r0, #0]
 8002c4c:	4770      	bx	lr
 8002c4e:	bf00      	nop
 8002c50:	08022ca0 	.word	0x08022ca0

08002c54 <_ZN8touchgfx3BoxC1Ev>:
    Box()
 8002c54:	b510      	push	{r4, lr}
        : Widget(), alpha(255), color(0)
 8002c56:	2226      	movs	r2, #38	; 0x26
    Box()
 8002c58:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 8002c5a:	2100      	movs	r1, #0
 8002c5c:	f01e f91c 	bl	8020e98 <memset>
 8002c60:	4620      	mov	r0, r4
 8002c62:	f7ff ffe5 	bl	8002c30 <_ZN8touchgfx6WidgetC1Ev>
 8002c66:	4b04      	ldr	r3, [pc, #16]	; (8002c78 <_ZN8touchgfx3BoxC1Ev+0x24>)
 8002c68:	6023      	str	r3, [r4, #0]
 8002c6a:	23ff      	movs	r3, #255	; 0xff
 8002c6c:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
        : color(col)
 8002c70:	2300      	movs	r3, #0
 8002c72:	62a3      	str	r3, [r4, #40]	; 0x28
    }
 8002c74:	4620      	mov	r0, r4
 8002c76:	bd10      	pop	{r4, pc}
 8002c78:	0802402c 	.word	0x0802402c

08002c7c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
    Image(const Bitmap& bmp = Bitmap())
 8002c7c:	b538      	push	{r3, r4, r5, lr}
        : Widget(), bitmap(bmp), alpha(255)
 8002c7e:	2226      	movs	r2, #38	; 0x26
    Image(const Bitmap& bmp = Bitmap())
 8002c80:	4604      	mov	r4, r0
 8002c82:	460d      	mov	r5, r1
        : Widget(), bitmap(bmp), alpha(255)
 8002c84:	2100      	movs	r1, #0
 8002c86:	f01e f907 	bl	8020e98 <memset>
 8002c8a:	4620      	mov	r0, r4
 8002c8c:	f7ff ffd0 	bl	8002c30 <_ZN8touchgfx6WidgetC1Ev>
 8002c90:	4b06      	ldr	r3, [pc, #24]	; (8002cac <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 8002c92:	6023      	str	r3, [r4, #0]
 8002c94:	882b      	ldrh	r3, [r5, #0]
 8002c96:	84e3      	strh	r3, [r4, #38]	; 0x26
 8002c98:	23ff      	movs	r3, #255	; 0xff
        Image::setBitmap(bmp);
 8002c9a:	4620      	mov	r0, r4
        : Widget(), bitmap(bmp), alpha(255)
 8002c9c:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
        Image::setBitmap(bmp);
 8002ca0:	4629      	mov	r1, r5
 8002ca2:	f00b ff5b 	bl	800eb5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 8002ca6:	4620      	mov	r0, r4
 8002ca8:	bd38      	pop	{r3, r4, r5, pc}
 8002caa:	bf00      	nop
 8002cac:	08024170 	.word	0x08024170

08002cb0 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8002cb0:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002cb2:	2226      	movs	r2, #38	; 0x26
    TextArea()
 8002cb4:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002cb6:	2100      	movs	r1, #0
 8002cb8:	f01e f8ee 	bl	8020e98 <memset>
 8002cbc:	4620      	mov	r0, r4
 8002cbe:	f7ff ffb7 	bl	8002c30 <_ZN8touchgfx6WidgetC1Ev>
 8002cc2:	4b0a      	ldr	r3, [pc, #40]	; (8002cec <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8002cc4:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8002cc6:	4b0a      	ldr	r3, [pc, #40]	; (8002cf0 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 8002cc8:	62a3      	str	r3, [r4, #40]	; 0x28
 8002cca:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002cce:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002cd0:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002cd4:	2300      	movs	r3, #0
 8002cd6:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002cda:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 8002cde:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002ce2:	8723      	strh	r3, [r4, #56]	; 0x38
 8002ce4:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8002ce6:	4620      	mov	r0, r4
 8002ce8:	bd10      	pop	{r4, pc}
 8002cea:	bf00      	nop
 8002cec:	08023f9c 	.word	0x08023f9c
 8002cf0:	080224cc 	.word	0x080224cc

08002cf4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8002cf4:	4b1b      	ldr	r3, [pc, #108]	; (8002d64 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8002cf6:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8002cf8:	881b      	ldrh	r3, [r3, #0]
 8002cfa:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8002cfc:	428b      	cmp	r3, r1
    void updateTextPosition()
 8002cfe:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8002d00:	d92b      	bls.n	8002d5a <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002d02:	4b19      	ldr	r3, [pc, #100]	; (8002d68 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8002d04:	681b      	ldr	r3, [r3, #0]
 8002d06:	b92b      	cbnz	r3, 8002d14 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8002d08:	4b18      	ldr	r3, [pc, #96]	; (8002d6c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8002d0a:	4a19      	ldr	r2, [pc, #100]	; (8002d70 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8002d0c:	4819      	ldr	r0, [pc, #100]	; (8002d74 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8002d0e:	216c      	movs	r1, #108	; 0x6c
 8002d10:	f01d ff3c 	bl	8020b8c <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002d14:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002d18:	4b17      	ldr	r3, [pc, #92]	; (8002d78 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8002d1a:	681b      	ldr	r3, [r3, #0]
 8002d1c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002d20:	4b16      	ldr	r3, [pc, #88]	; (8002d7c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x88>)
 8002d22:	6818      	ldr	r0, [r3, #0]
 8002d24:	f002 fe26 	bl	8005974 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002d28:	682b      	ldr	r3, [r5, #0]
 8002d2a:	9001      	str	r0, [sp, #4]
 8002d2c:	4601      	mov	r1, r0
 8002d2e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002d30:	4628      	mov	r0, r5
 8002d32:	4798      	blx	r3
 8002d34:	682b      	ldr	r3, [r5, #0]
 8002d36:	9901      	ldr	r1, [sp, #4]
 8002d38:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002d3a:	4604      	mov	r4, r0
 8002d3c:	4628      	mov	r0, r5
 8002d3e:	4798      	blx	r3
 8002d40:	682b      	ldr	r3, [r5, #0]
 8002d42:	9901      	ldr	r1, [sp, #4]
 8002d44:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002d46:	fb14 f400 	smulbb	r4, r4, r0
 8002d4a:	4628      	mov	r0, r5
 8002d4c:	4798      	blx	r3
 8002d4e:	b2e4      	uxtb	r4, r4
 8002d50:	4404      	add	r4, r0
 8002d52:	f886 4045 	strb.w	r4, [r6, #69]	; 0x45
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002d56:	b002      	add	sp, #8
 8002d58:	bd70      	pop	{r4, r5, r6, pc}
            textHeightIncludingSpacing = 0;
 8002d5a:	2300      	movs	r3, #0
 8002d5c:	f880 3045 	strb.w	r3, [r0, #69]	; 0x45
    }
 8002d60:	e7f9      	b.n	8002d56 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x62>
 8002d62:	bf00      	nop
 8002d64:	200174ac 	.word	0x200174ac
 8002d68:	200174a8 	.word	0x200174a8
 8002d6c:	08022b94 	.word	0x08022b94
 8002d70:	08022bd6 	.word	0x08022bd6
 8002d74:	08022c11 	.word	0x08022c11
 8002d78:	200174b0 	.word	0x200174b0
 8002d7c:	200174b4 	.word	0x200174b4

08002d80 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>:
        : pressed(false), alpha(255), action(0)
 8002d80:	f44f 437f 	mov.w	r3, #65280	; 0xff00
    IconButtonStyle()
 8002d84:	b573      	push	{r0, r1, r4, r5, r6, lr}
        : T(), up(), down()
 8002d86:	4606      	mov	r6, r0
 8002d88:	8583      	strh	r3, [r0, #44]	; 0x2c
        touchable = touch;
 8002d8a:	f240 1301 	movw	r3, #257	; 0x101
          firstChild(0)
 8002d8e:	2500      	movs	r5, #0
 8002d90:	8483      	strh	r3, [r0, #36]	; 0x24
 8002d92:	4b1d      	ldr	r3, [pc, #116]	; (8002e08 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x88>)
 8002d94:	6285      	str	r5, [r0, #40]	; 0x28
        : x(0), y(0), width(0), height(0)
 8002d96:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8002d9a:	e9c0 5503 	strd	r5, r5, [r0, #12]
          visible(true)
 8002d9e:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8002da2:	e9c0 5507 	strd	r5, r5, [r0, #28]
 8002da6:	6305      	str	r5, [r0, #48]	; 0x30
 8002da8:	f846 3b34 	str.w	r3, [r6], #52
 8002dac:	4604      	mov	r4, r0
        : Box(), borderColor(0), borderSize(0)
 8002dae:	4630      	mov	r0, r6
 8002db0:	f7ff ff50 	bl	8002c54 <_ZN8touchgfx3BoxC1Ev>
 8002db4:	4b15      	ldr	r3, [pc, #84]	; (8002e0c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x8c>)
 8002db6:	6363      	str	r3, [r4, #52]	; 0x34
        borderBox.setXY(0, 0);
 8002db8:	462a      	mov	r2, r5
        : color(0)
 8002dba:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8002dbe:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
        : color(col)
 8002dc2:	6625      	str	r5, [r4, #96]	; 0x60
 8002dc4:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8002dc8:	4629      	mov	r1, r5
 8002dca:	4630      	mov	r0, r6
 8002dcc:	f7ff fede 	bl	8002b8c <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 8002dd0:	4631      	mov	r1, r6
 8002dd2:	4620      	mov	r0, r4
 8002dd4:	f008 f892 	bl	800aefc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : T()
 8002dd8:	4b0d      	ldr	r3, [pc, #52]	; (8002e10 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x90>)
 8002dda:	6023      	str	r3, [r4, #0]
 8002ddc:	f104 057c 	add.w	r5, r4, #124	; 0x7c
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002de0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002de4:	f8a4 3078 	strh.w	r3, [r4, #120]	; 0x78
 8002de8:	f8a4 307a 	strh.w	r3, [r4, #122]	; 0x7a
 8002dec:	a901      	add	r1, sp, #4
 8002dee:	4628      	mov	r0, r5
 8002df0:	f8ad 3004 	strh.w	r3, [sp, #4]
 8002df4:	f7ff ff42 	bl	8002c7c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
        T::add(iconImage);
 8002df8:	4620      	mov	r0, r4
 8002dfa:	4629      	mov	r1, r5
 8002dfc:	f008 f87e 	bl	800aefc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8002e00:	4620      	mov	r0, r4
 8002e02:	b002      	add	sp, #8
 8002e04:	bd70      	pop	{r4, r5, r6, pc}
 8002e06:	bf00      	nop
 8002e08:	08022d98 	.word	0x08022d98
 8002e0c:	08024108 	.word	0x08024108
 8002e10:	08022e34 	.word	0x08022e34

08002e14 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 8002e14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002e18:	ed2d 8b08 	vpush	{d8-d11}
 8002e1c:	4604      	mov	r4, r0
 8002e1e:	b08b      	sub	sp, #44	; 0x2c
        : presenter(0)
 8002e20:	f00f fe4c 	bl	8012abc <_ZN8touchgfx6ScreenC1Ev>
    flexButtonCallback(this, &Screen1ViewBase::flexButtonCallbackHandler)
 8002e24:	4622      	mov	r2, r4
 8002e26:	2500      	movs	r5, #0
 8002e28:	4be5      	ldr	r3, [pc, #916]	; (80031c0 <_ZN15Screen1ViewBaseC1Ev+0x3ac>)
 8002e2a:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002e2c:	f842 3b40 	str.w	r3, [r2], #64
 8002e30:	4610      	mov	r0, r2
 8002e32:	ee08 2a10 	vmov	s16, r2
 8002e36:	f7ff ff0d 	bl	8002c54 <_ZN8touchgfx3BoxC1Ev>
 8002e3a:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 8002e3e:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8002e42:	a908      	add	r1, sp, #32
 8002e44:	4618      	mov	r0, r3
 8002e46:	ee0a 3a10 	vmov	s20, r3
 8002e4a:	f8ad 6020 	strh.w	r6, [sp, #32]
 8002e4e:	f7ff ff15 	bl	8002c7c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002e52:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8002e56:	a908      	add	r1, sp, #32
 8002e58:	4618      	mov	r0, r3
 8002e5a:	ee0a 3a90 	vmov	s21, r3
 8002e5e:	f8ad 6020 	strh.w	r6, [sp, #32]
 8002e62:	f7ff ff0b 	bl	8002c7c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002e66:	f104 03c4 	add.w	r3, r4, #196	; 0xc4
 8002e6a:	4618      	mov	r0, r3
 8002e6c:	ee08 3a90 	vmov	s17, r3
 8002e70:	f7ff ff86 	bl	8002d80 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002e74:	f504 73b6 	add.w	r3, r4, #364	; 0x16c
 8002e78:	4618      	mov	r0, r3
 8002e7a:	ee09 3a10 	vmov	s18, r3
 8002e7e:	f7ff ff7f 	bl	8002d80 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002e82:	f504 7305 	add.w	r3, r4, #532	; 0x214
 8002e86:	f504 7917 	add.w	r9, r4, #604	; 0x25c
 8002e8a:	4618      	mov	r0, r3
 8002e8c:	ee09 3a90 	vmov	s19, r3
 8002e90:	f504 782a 	add.w	r8, r4, #680	; 0x2a8
 8002e94:	f7ff ff0c 	bl	8002cb0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8002e98:	4fca      	ldr	r7, [pc, #808]	; (80031c4 <_ZN15Screen1ViewBaseC1Ev+0x3b0>)
        : TextArea()
 8002e9a:	4648      	mov	r0, r9
 8002e9c:	f7ff ff08 	bl	8002cb0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8002ea0:	f8c4 725c 	str.w	r7, [r4, #604]	; 0x25c
 8002ea4:	f8c4 52a4 	str.w	r5, [r4, #676]	; 0x2a4
 8002ea8:	4640      	mov	r0, r8
 8002eaa:	f00b ff89 	bl	800edc0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002eae:	f504 733c 	add.w	r3, r4, #752	; 0x2f0
 8002eb2:	f504 7a47 	add.w	sl, r4, #796	; 0x31c
 8002eb6:	a908      	add	r1, sp, #32
 8002eb8:	4618      	mov	r0, r3
 8002eba:	ee0b 3a10 	vmov	s22, r3
 8002ebe:	f504 7b59 	add.w	fp, r4, #868	; 0x364
 8002ec2:	f8ad 6020 	strh.w	r6, [sp, #32]
 8002ec6:	f7ff fed9 	bl	8002c7c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002eca:	4650      	mov	r0, sl
 8002ecc:	f7ff fef0 	bl	8002cb0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextArea()
 8002ed0:	4658      	mov	r0, fp
 8002ed2:	f7ff feed 	bl	8002cb0 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002ed6:	4bbc      	ldr	r3, [pc, #752]	; (80031c8 <_ZN15Screen1ViewBaseC1Ev+0x3b4>)
        : TextAreaWithWildcardBase(), wc1(0)
 8002ed8:	f8c4 7364 	str.w	r7, [r4, #868]	; 0x364
 8002edc:	e9c4 34f6 	strd	r3, r4, [r4, #984]	; 0x3d8
 8002ee0:	4bba      	ldr	r3, [pc, #744]	; (80031cc <_ZN15Screen1ViewBaseC1Ev+0x3b8>)
 8002ee2:	f8c4 53ac 	str.w	r5, [r4, #940]	; 0x3ac
 8002ee6:	e9c4 35f8 	strd	r3, r5, [r4, #992]	; 0x3e0
 8002eea:	4bb9      	ldr	r3, [pc, #740]	; (80031d0 <_ZN15Screen1ViewBaseC1Ev+0x3bc>)
 8002eec:	e9c4 34fa 	strd	r3, r4, [r4, #1000]	; 0x3e8
 8002ef0:	4bb8      	ldr	r3, [pc, #736]	; (80031d4 <_ZN15Screen1ViewBaseC1Ev+0x3c0>)
 8002ef2:	e9c4 35fc 	strd	r3, r5, [r4, #1008]	; 0x3f0
    __background.setPosition(0, 0, 320, 240);
 8002ef6:	23f0      	movs	r3, #240	; 0xf0
 8002ef8:	ee18 0a10 	vmov	r0, s16
 8002efc:	9300      	str	r3, [sp, #0]
 8002efe:	462a      	mov	r2, r5
 8002f00:	4629      	mov	r1, r5
 8002f02:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8002f06:	f7ff fe80 	bl	8002c0a <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8002f0a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002f0e:	66a3      	str	r3, [r4, #104]	; 0x68
    image2.setXY(0, 0);
 8002f10:	462a      	mov	r2, r5
 8002f12:	ee1a 0a10 	vmov	r0, s20
 8002f16:	4629      	mov	r1, r5
 8002f18:	f7ff fe38 	bl	8002b8c <_ZN8touchgfx8Drawable5setXYEss>
    image2.setBitmap(touchgfx::Bitmap(BITMAP_BG_ID));
 8002f1c:	ee1a 0a10 	vmov	r0, s20
 8002f20:	a908      	add	r1, sp, #32
 8002f22:	f8ad 5020 	strh.w	r5, [sp, #32]
 8002f26:	f00b fe19 	bl	800eb5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    image3.setXY(118, 25);
 8002f2a:	ee1a 0a90 	vmov	r0, s21
 8002f2e:	2219      	movs	r2, #25
 8002f30:	2176      	movs	r1, #118	; 0x76
 8002f32:	f7ff fe2b 	bl	8002b8c <_ZN8touchgfx8Drawable5setXYEss>
        borderBox.setPosition(x, y, width, height);
 8002f36:	2617      	movs	r6, #23
    image3.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 8002f38:	ee1a 0a90 	vmov	r0, s21
 8002f3c:	f04f 0303 	mov.w	r3, #3
 8002f40:	a908      	add	r1, sp, #32
 8002f42:	f8ad 3020 	strh.w	r3, [sp, #32]
 8002f46:	f00b fe09 	bl	800eb5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002f4a:	9600      	str	r6, [sp, #0]
 8002f4c:	462a      	mov	r2, r5
 8002f4e:	4629      	mov	r1, r5
 8002f50:	f104 00f8 	add.w	r0, r4, #248	; 0xf8
 8002f54:	232b      	movs	r3, #43	; 0x2b
 8002f56:	f7ff fe58 	bl	8002c0a <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 8002f5a:	f04f 0305 	mov.w	r3, #5
        down = colorPressed;
 8002f5e:	4a9e      	ldr	r2, [pc, #632]	; (80031d8 <_ZN15Screen1ViewBaseC1Ev+0x3c4>)
 8002f60:	f8a4 3128 	strh.w	r3, [r4, #296]	; 0x128
 8002f64:	4b9d      	ldr	r3, [pc, #628]	; (80031dc <_ZN15Screen1ViewBaseC1Ev+0x3c8>)
        borderDown = borderColorPressed;
 8002f66:	499e      	ldr	r1, [pc, #632]	; (80031e0 <_ZN15Screen1ViewBaseC1Ev+0x3cc>)
 8002f68:	489e      	ldr	r0, [pc, #632]	; (80031e4 <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
        down = colorPressed;
 8002f6a:	e9c4 324b 	strd	r3, r2, [r4, #300]	; 0x12c
        handlePressedUpdated();
 8002f6e:	f8d4 30c4 	ldr.w	r3, [r4, #196]	; 0xc4
        borderDown = borderColorPressed;
 8002f72:	e9c4 104d 	strd	r1, r0, [r4, #308]	; 0x134
        handlePressedUpdated();
 8002f76:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002f7a:	ee18 0a90 	vmov	r0, s17
 8002f7e:	4798      	blx	r3
    ButtonDown.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID));
 8002f80:	f10d 0e20 	add.w	lr, sp, #32
 8002f84:	4672      	mov	r2, lr
 8002f86:	f10d 0e1c 	add.w	lr, sp, #28
 8002f8a:	ee18 0a90 	vmov	r0, s17
 8002f8e:	f04f 0704 	mov.w	r7, #4
 8002f92:	4671      	mov	r1, lr
 8002f94:	f8ad 701c 	strh.w	r7, [sp, #28]
 8002f98:	f8ad 7020 	strh.w	r7, [sp, #32]
 8002f9c:	f7ff fe03 	bl	8002ba6 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
        rect.x = x;
 8002fa0:	f04f 0e05 	mov.w	lr, #5
 8002fa4:	f8c4 e144 	str.w	lr, [r4, #324]	; 0x144
    ButtonDown.setAction(flexButtonCallback);
 8002fa8:	f504 777a 	add.w	r7, r4, #1000	; 0x3e8
    ButtonDown.setPosition(273, 49, 43, 23);
 8002fac:	ee18 0a90 	vmov	r0, s17
 8002fb0:	9600      	str	r6, [sp, #0]
 8002fb2:	232b      	movs	r3, #43	; 0x2b
 8002fb4:	2231      	movs	r2, #49	; 0x31
 8002fb6:	f240 1111 	movw	r1, #273	; 0x111
 8002fba:	f7ff fe26 	bl	8002c0a <_ZN8touchgfx8Drawable11setPositionEssss>
        action = &callback;
 8002fbe:	f8c4 70f4 	str.w	r7, [r4, #244]	; 0xf4
        borderBox.setPosition(x, y, width, height);
 8002fc2:	9600      	str	r6, [sp, #0]
 8002fc4:	462a      	mov	r2, r5
 8002fc6:	4629      	mov	r1, r5
 8002fc8:	f504 70d0 	add.w	r0, r4, #416	; 0x1a0
 8002fcc:	232b      	movs	r3, #43	; 0x2b
 8002fce:	f7ff fe1c 	bl	8002c0a <_ZN8touchgfx8Drawable11setPositionEssss>
        down = colorPressed;
 8002fd2:	4a81      	ldr	r2, [pc, #516]	; (80031d8 <_ZN15Screen1ViewBaseC1Ev+0x3c4>)
 8002fd4:	4b81      	ldr	r3, [pc, #516]	; (80031dc <_ZN15Screen1ViewBaseC1Ev+0x3c8>)
        borderDown = borderColorPressed;
 8002fd6:	4982      	ldr	r1, [pc, #520]	; (80031e0 <_ZN15Screen1ViewBaseC1Ev+0x3cc>)
 8002fd8:	4882      	ldr	r0, [pc, #520]	; (80031e4 <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
        down = colorPressed;
 8002fda:	e9c4 3275 	strd	r3, r2, [r4, #468]	; 0x1d4
        handlePressedUpdated();
 8002fde:	f8d4 316c 	ldr.w	r3, [r4, #364]	; 0x16c
 8002fe2:	f04f 0c05 	mov.w	ip, #5
        borderDown = borderColorPressed;
 8002fe6:	e9c4 1077 	strd	r1, r0, [r4, #476]	; 0x1dc
        handlePressedUpdated();
 8002fea:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002fee:	f8a4 c1d0 	strh.w	ip, [r4, #464]	; 0x1d0
 8002ff2:	ee19 0a10 	vmov	r0, s18
 8002ff6:	4798      	blx	r3
 8002ff8:	f04f 0c05 	mov.w	ip, #5
    ButtonUp.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID));
 8002ffc:	ee19 0a10 	vmov	r0, s18
 8003000:	aa08      	add	r2, sp, #32
 8003002:	a907      	add	r1, sp, #28
 8003004:	f8ad c01c 	strh.w	ip, [sp, #28]
 8003008:	f8ad c020 	strh.w	ip, [sp, #32]
 800300c:	f7ff fdcb 	bl	8002ba6 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
 8003010:	2306      	movs	r3, #6
    ButtonUp.setPosition(273, 25, 43, 23);
 8003012:	ee19 0a10 	vmov	r0, s18
 8003016:	f8c4 31ec 	str.w	r3, [r4, #492]	; 0x1ec
 800301a:	9600      	str	r6, [sp, #0]
 800301c:	232b      	movs	r3, #43	; 0x2b
 800301e:	2219      	movs	r2, #25
 8003020:	f240 1111 	movw	r1, #273	; 0x111
 8003024:	f7ff fdf1 	bl	8002c0a <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 8003028:	ae02      	add	r6, sp, #8
    LabelPradLadowania.setXY(25, 28);
 800302a:	ee19 0a90 	vmov	r0, s19
 800302e:	f8c4 719c 	str.w	r7, [r4, #412]	; 0x19c
 8003032:	221c      	movs	r2, #28
        color = newColor;
 8003034:	f04f 37ff 	mov.w	r7, #4294967295
 8003038:	2119      	movs	r1, #25
 800303a:	f7ff fda7 	bl	8002b8c <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800303e:	ee19 1a90 	vmov	r1, s19
        linespace = space;
 8003042:	f8a4 5248 	strh.w	r5, [r4, #584]	; 0x248
        boundingArea = calculateBoundingArea();
 8003046:	4630      	mov	r0, r6
        color = newColor;
 8003048:	f8c4 7244 	str.w	r7, [r4, #580]	; 0x244
        boundingArea = calculateBoundingArea();
 800304c:	f00b f85a 	bl	800e104 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003050:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003054:	f504 7314 	add.w	r3, r4, #592	; 0x250
 8003058:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800305c:	f04f 0006 	mov.w	r0, #6
 8003060:	4b61      	ldr	r3, [pc, #388]	; (80031e8 <_ZN15Screen1ViewBaseC1Ev+0x3d4>)
 8003062:	f8ad 0024 	strh.w	r0, [sp, #36]	; 0x24
    LabelPradLadowania.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OQ6C));
 8003066:	a908      	add	r1, sp, #32
 8003068:	ee19 0a90 	vmov	r0, s19
 800306c:	9308      	str	r3, [sp, #32]
 800306e:	f00b fad9 	bl	800e624 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtPradLadowania.setPosition(143, 36, 124, 24);
 8003072:	2218      	movs	r2, #24
 8003074:	9200      	str	r2, [sp, #0]
 8003076:	4648      	mov	r0, r9
 8003078:	2224      	movs	r2, #36	; 0x24
 800307a:	237c      	movs	r3, #124	; 0x7c
 800307c:	218f      	movs	r1, #143	; 0x8f
 800307e:	f7ff fdc4 	bl	8002c0a <_ZN8touchgfx8Drawable11setPositionEssss>
 8003082:	f8d4 325c 	ldr.w	r3, [r4, #604]	; 0x25c
        linespace = space;
 8003086:	f8a4 5290 	strh.w	r5, [r4, #656]	; 0x290
        boundingArea = calculateBoundingArea();
 800308a:	4649      	mov	r1, r9
 800308c:	4630      	mov	r0, r6
 800308e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8003092:	f8c4 728c 	str.w	r7, [r4, #652]	; 0x28c
        boundingArea = calculateBoundingArea();
 8003096:	4798      	blx	r3
 8003098:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800309c:	f504 7326 	add.w	r3, r4, #664	; 0x298
 80030a0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    txtPradLadowania.setWildcard(txtPradLadowaniaBuffer);
 80030a4:	f504 736c 	add.w	r3, r4, #944	; 0x3b0
 80030a8:	f04f 0c05 	mov.w	ip, #5
    txtPradLadowaniaBuffer[0] = 0;
 80030ac:	f8a4 53b0 	strh.w	r5, [r4, #944]	; 0x3b0
        wc1 = value;
 80030b0:	f8c4 32a4 	str.w	r3, [r4, #676]	; 0x2a4
    txtPradLadowania.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9VFQ));
 80030b4:	a908      	add	r1, sp, #32
 80030b6:	4b4c      	ldr	r3, [pc, #304]	; (80031e8 <_ZN15Screen1ViewBaseC1Ev+0x3d4>)
 80030b8:	f8ad c024 	strh.w	ip, [sp, #36]	; 0x24
 80030bc:	4648      	mov	r0, r9
 80030be:	9308      	str	r3, [sp, #32]
 80030c0:	f00b fab0 	bl	800e624 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    buttonStart.setXY(78, 180);
 80030c4:	4640      	mov	r0, r8
 80030c6:	22b4      	movs	r2, #180	; 0xb4
 80030c8:	214e      	movs	r1, #78	; 0x4e
 80030ca:	f7ff fd5f 	bl	8002b8c <_ZN8touchgfx8Drawable5setXYEss>
 80030ce:	f04f 0002 	mov.w	r0, #2
 80030d2:	2301      	movs	r3, #1
    buttonStart.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 80030d4:	aa08      	add	r2, sp, #32
 80030d6:	f8ad 0020 	strh.w	r0, [sp, #32]
 80030da:	a907      	add	r1, sp, #28
 80030dc:	4640      	mov	r0, r8
 80030de:	f8ad 301c 	strh.w	r3, [sp, #28]
 80030e2:	f00b fafd 	bl	800e6e0 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80030e6:	f04f 0104 	mov.w	r1, #4
 80030ea:	f8a4 12e0 	strh.w	r1, [r4, #736]	; 0x2e0
        updateTextPosition();
 80030ee:	4640      	mov	r0, r8
 80030f0:	f7ff fe00 	bl	8002cf4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonStart.setAction(buttonCallback);
 80030f4:	f504 7376 	add.w	r3, r4, #984	; 0x3d8
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 80030f8:	f8c4 32d0 	str.w	r3, [r4, #720]	; 0x2d0
    image3_1.setXY(118, 79);
 80030fc:	ee1b 0a10 	vmov	r0, s22
        colorPressed = col;
 8003100:	e9c4 77b9 	strd	r7, r7, [r4, #740]	; 0x2e4
 8003104:	224f      	movs	r2, #79	; 0x4f
 8003106:	2176      	movs	r1, #118	; 0x76
 8003108:	f7ff fd40 	bl	8002b8c <_ZN8touchgfx8Drawable5setXYEss>
    image3_1.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 800310c:	ee1b 0a10 	vmov	r0, s22
 8003110:	f04f 0203 	mov.w	r2, #3
 8003114:	a908      	add	r1, sp, #32
 8003116:	f8ad 2020 	strh.w	r2, [sp, #32]
 800311a:	f00b fd1f 	bl	800eb5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    LabelNapiecieBaterii.setXY(41, 82);
 800311e:	2252      	movs	r2, #82	; 0x52
 8003120:	4650      	mov	r0, sl
 8003122:	2129      	movs	r1, #41	; 0x29
 8003124:	f7ff fd32 	bl	8002b8c <_ZN8touchgfx8Drawable5setXYEss>
        linespace = space;
 8003128:	f8a4 5350 	strh.w	r5, [r4, #848]	; 0x350
        boundingArea = calculateBoundingArea();
 800312c:	4651      	mov	r1, sl
 800312e:	4630      	mov	r0, r6
        color = newColor;
 8003130:	f8c4 734c 	str.w	r7, [r4, #844]	; 0x34c
        boundingArea = calculateBoundingArea();
 8003134:	f00a ffe6 	bl	800e104 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003138:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800313c:	f504 7356 	add.w	r3, r4, #856	; 0x358
 8003140:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8003144:	4b28      	ldr	r3, [pc, #160]	; (80031e8 <_ZN15Screen1ViewBaseC1Ev+0x3d4>)
 8003146:	9308      	str	r3, [sp, #32]
 8003148:	f04f 0203 	mov.w	r2, #3
    LabelNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_O6MQ));
 800314c:	a908      	add	r1, sp, #32
 800314e:	4650      	mov	r0, sl
 8003150:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8003154:	f00b fa66 	bl	800e624 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtNapiecieBaterii.setPosition(143, 88, 124, 24);
 8003158:	2218      	movs	r2, #24
 800315a:	9200      	str	r2, [sp, #0]
 800315c:	4658      	mov	r0, fp
 800315e:	2258      	movs	r2, #88	; 0x58
 8003160:	237c      	movs	r3, #124	; 0x7c
 8003162:	218f      	movs	r1, #143	; 0x8f
 8003164:	f7ff fd51 	bl	8002c0a <_ZN8touchgfx8Drawable11setPositionEssss>
 8003168:	f8d4 3364 	ldr.w	r3, [r4, #868]	; 0x364
        linespace = space;
 800316c:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        boundingArea = calculateBoundingArea();
 8003170:	4659      	mov	r1, fp
 8003172:	4630      	mov	r0, r6
 8003174:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8003178:	f8c4 7394 	str.w	r7, [r4, #916]	; 0x394
        boundingArea = calculateBoundingArea();
 800317c:	4798      	blx	r3
 800317e:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003182:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 8003186:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    txtNapiecieBaterii.setWildcard(txtNapiecieBateriiBuffer);
 800318a:	f504 7371 	add.w	r3, r4, #964	; 0x3c4
 800318e:	f04f 0002 	mov.w	r0, #2
    txtNapiecieBateriiBuffer[0] = 0;
 8003192:	f8a4 53c4 	strh.w	r5, [r4, #964]	; 0x3c4
 8003196:	f8c4 33ac 	str.w	r3, [r4, #940]	; 0x3ac
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 800319a:	1d25      	adds	r5, r4, #4
 800319c:	4b12      	ldr	r3, [pc, #72]	; (80031e8 <_ZN15Screen1ViewBaseC1Ev+0x3d4>)
 800319e:	f8ad 0024 	strh.w	r0, [sp, #36]	; 0x24
    txtNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JY89));
 80031a2:	a908      	add	r1, sp, #32
 80031a4:	4658      	mov	r0, fp
 80031a6:	9308      	str	r3, [sp, #32]
 80031a8:	f00b fa3c 	bl	800e624 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80031ac:	ee18 1a10 	vmov	r1, s16
 80031b0:	4628      	mov	r0, r5
 80031b2:	f007 fea3 	bl	800aefc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80031b6:	ee1a 1a10 	vmov	r1, s20
 80031ba:	4628      	mov	r0, r5
 80031bc:	e016      	b.n	80031ec <_ZN15Screen1ViewBaseC1Ev+0x3d8>
 80031be:	bf00      	nop
 80031c0:	08022f04 	.word	0x08022f04
 80031c4:	08022d08 	.word	0x08022d08
 80031c8:	08022ed4 	.word	0x08022ed4
 80031cc:	08002b5d 	.word	0x08002b5d
 80031d0:	08022eec 	.word	0x08022eec
 80031d4:	08002a89 	.word	0x08002a89
 80031d8:	ff0099cc 	.word	0xff0099cc
 80031dc:	ff006699 	.word	0xff006699
 80031e0:	ff003366 	.word	0xff003366
 80031e4:	ff336699 	.word	0xff336699
 80031e8:	080224cc 	.word	0x080224cc
 80031ec:	f007 fe86 	bl	800aefc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80031f0:	ee1a 1a90 	vmov	r1, s21
 80031f4:	4628      	mov	r0, r5
 80031f6:	f007 fe81 	bl	800aefc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80031fa:	ee18 1a90 	vmov	r1, s17
 80031fe:	4628      	mov	r0, r5
 8003200:	f007 fe7c 	bl	800aefc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003204:	ee19 1a10 	vmov	r1, s18
 8003208:	4628      	mov	r0, r5
 800320a:	f007 fe77 	bl	800aefc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800320e:	ee19 1a90 	vmov	r1, s19
 8003212:	4628      	mov	r0, r5
 8003214:	f007 fe72 	bl	800aefc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003218:	4649      	mov	r1, r9
 800321a:	4628      	mov	r0, r5
 800321c:	f007 fe6e 	bl	800aefc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003220:	4641      	mov	r1, r8
 8003222:	4628      	mov	r0, r5
 8003224:	f007 fe6a 	bl	800aefc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003228:	ee1b 1a10 	vmov	r1, s22
 800322c:	4628      	mov	r0, r5
 800322e:	f007 fe65 	bl	800aefc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003232:	4651      	mov	r1, sl
 8003234:	4628      	mov	r0, r5
 8003236:	f007 fe61 	bl	800aefc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800323a:	4628      	mov	r0, r5
 800323c:	4659      	mov	r1, fp
 800323e:	f007 fe5d 	bl	800aefc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003242:	4620      	mov	r0, r4
 8003244:	b00b      	add	sp, #44	; 0x2c
 8003246:	ecbd 8b08 	vpop	{d8-d11}
 800324a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800324e:	bf00      	nop

08003250 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8003250:	2000      	movs	r0, #0
 8003252:	4770      	bx	lr

08003254 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8003254:	888b      	ldrh	r3, [r1, #4]
 8003256:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8003258:	2001      	movs	r0, #1
 800325a:	4770      	bx	lr

0800325c <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 800325c:	4770      	bx	lr

0800325e <_ZN8touchgfx17AbstractDataGraph8setAlphaEh>:
     *
     * @note All graph elements have to take this alpha into consideration.
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800325e:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
    }
 8003262:	4770      	bx	lr

08003264 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>:
     * @param  min The minimum x value.
     * @param  max The maximum x value.
     *
     * @note The graph as well as the area above and below are automatically redrawn (invalidated).
     */
    virtual void setGraphRangeX(int min, int max)
 8003264:	b410      	push	{r4}
    {
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 8003266:	6803      	ldr	r3, [r0, #0]
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int int2scaledX(int i) const
    {
        return int2scaled(i, xScale);
 8003268:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 800326a:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800326e:	4362      	muls	r2, r4
 8003270:	4361      	muls	r1, r4
    }
 8003272:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 8003276:	4718      	bx	r3

08003278 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff>:
     *
     * @return The product of the two numbers, rounded to nearest integer value.
     */
    FORCE_INLINE_FUNCTION static int float2scaled(float f, int scale)
    {
        const float fs = f * (float)scale;
 8003278:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 800327c:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 800327e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 8003282:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
        const float fs = f * (float)scale;
 8003286:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 800328a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800328e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003292:	db17      	blt.n	80032c4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4c>
        {
            return (int)(fs + 0.5f);
 8003294:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8003298:	ee30 0a07 	vadd.f32	s0, s0, s14
 800329c:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80032a0:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 80032a4:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 80032a8:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 80032ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80032b0:	db1c      	blt.n	80032ec <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x74>
            return (int)(fs + 0.5f);
 80032b2:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80032b6:	ee70 0aa7 	vadd.f32	s1, s1, s15
 80032ba:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 80032be:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 80032c2:	4718      	bx	r3
        }
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80032c4:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80032c8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80032cc:	ee17 2a10 	vmov	r2, s14
 80032d0:	ee30 0a66 	vsub.f32	s0, s0, s13
 80032d4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80032d8:	ee30 0a26 	vadd.f32	s0, s0, s13
 80032dc:	1e51      	subs	r1, r2, #1
 80032de:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80032e2:	ee10 2a10 	vmov	r2, s0
 80032e6:	440a      	add	r2, r1
 80032e8:	4611      	mov	r1, r2
 80032ea:	e7db      	b.n	80032a4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x2c>
 80032ec:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 80032f0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80032f4:	ee17 2a90 	vmov	r2, s15
 80032f8:	ee70 0ac7 	vsub.f32	s1, s1, s14
 80032fc:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003300:	ee70 0a87 	vadd.f32	s1, s1, s14
 8003304:	3a01      	subs	r2, #1
 8003306:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 800330a:	ee10 ca90 	vmov	ip, s1
 800330e:	4494      	add	ip, r2
 8003310:	4662      	mov	r2, ip
 8003312:	e7d6      	b.n	80032c2 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4a>

08003314 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbi>:
    virtual void setGraphRangeXAuto(bool showYaxis = true, int margin = 0)
 8003314:	b410      	push	{r4}
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8003316:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 8003318:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 800331a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800331e:	4362      	muls	r2, r4
    }
 8003320:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8003324:	4718      	bx	r3

08003326 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf>:
        const float fs = f * (float)scale;
 8003326:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 800332a:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 800332c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8003330:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
        const float fs = f * (float)scale;
 8003334:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003338:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800333c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003340:	db08      	blt.n	8003354 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2e>
            return (int)(fs + 0.5f);
 8003342:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003346:	ee30 0a27 	vadd.f32	s0, s0, s15
 800334a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800334e:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8003352:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003354:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003358:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800335c:	ee17 2a90 	vmov	r2, s15
 8003360:	ee30 0a47 	vsub.f32	s0, s0, s14
 8003364:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003368:	ee30 0a07 	vadd.f32	s0, s0, s14
 800336c:	3a01      	subs	r2, #1
 800336e:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003372:	ee10 ca10 	vmov	ip, s0
 8003376:	4494      	add	ip, r2
 8003378:	4662      	mov	r2, ip
 800337a:	e7ea      	b.n	8003352 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2c>

0800337c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii>:
    virtual void setGraphRangeY(int min, int max)
 800337c:	b410      	push	{r4}
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 800337e:	6803      	ldr	r3, [r0, #0]
        return int2scaled(i, yScale);
 8003380:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 8003382:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8003386:	4362      	muls	r2, r4
 8003388:	4361      	muls	r1, r4
    }
 800338a:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 800338e:	4718      	bx	r3

08003390 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>:
        const float fs = f * (float)scale;
 8003390:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 8003394:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003396:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 800339a:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
        const float fs = f * (float)scale;
 800339e:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 80033a2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80033a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80033aa:	db17      	blt.n	80033dc <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4c>
            return (int)(fs + 0.5f);
 80033ac:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80033b0:	ee30 0a07 	vadd.f32	s0, s0, s14
 80033b4:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80033b8:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 80033bc:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 80033c0:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 80033c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80033c8:	db1c      	blt.n	8003404 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x74>
            return (int)(fs + 0.5f);
 80033ca:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80033ce:	ee70 0aa7 	vadd.f32	s1, s1, s15
 80033d2:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 80033d6:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 80033da:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80033dc:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80033e0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80033e4:	ee17 2a10 	vmov	r2, s14
 80033e8:	ee30 0a66 	vsub.f32	s0, s0, s13
 80033ec:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80033f0:	ee30 0a26 	vadd.f32	s0, s0, s13
 80033f4:	1e51      	subs	r1, r2, #1
 80033f6:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80033fa:	ee10 2a10 	vmov	r2, s0
 80033fe:	440a      	add	r2, r1
 8003400:	4611      	mov	r1, r2
 8003402:	e7db      	b.n	80033bc <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x2c>
 8003404:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8003408:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800340c:	ee17 2a90 	vmov	r2, s15
 8003410:	ee70 0ac7 	vsub.f32	s1, s1, s14
 8003414:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003418:	ee70 0a87 	vadd.f32	s1, s1, s14
 800341c:	3a01      	subs	r2, #1
 800341e:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 8003422:	ee10 ca90 	vmov	ip, s1
 8003426:	4494      	add	ip, r2
 8003428:	4662      	mov	r2, ip
 800342a:	e7d6      	b.n	80033da <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4a>

0800342c <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbi>:
    virtual void setGraphRangeYAuto(bool showXaxis = true, int margin = 0)
 800342c:	b410      	push	{r4}
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 800342e:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 8003430:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 8003432:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8003436:	4362      	muls	r2, r4
    }
 8003438:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 800343c:	4718      	bx	r3

0800343e <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf>:
        const float fs = f * (float)scale;
 800343e:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 8003442:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003444:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 8003448:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
        const float fs = f * (float)scale;
 800344c:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003450:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003454:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003458:	db08      	blt.n	800346c <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2e>
            return (int)(fs + 0.5f);
 800345a:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800345e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8003462:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003466:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 800346a:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800346c:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003470:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003474:	ee17 2a90 	vmov	r2, s15
 8003478:	ee30 0a47 	vsub.f32	s0, s0, s14
 800347c:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003480:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003484:	3a01      	subs	r2, #1
 8003486:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800348a:	ee10 ca10 	vmov	ip, s0
 800348e:	4494      	add	ip, r2
 8003490:	4662      	mov	r2, ip
 8003492:	e7ea      	b.n	800346a <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2c>

08003494 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv>:
        return scaled2intX(graphRangeMinX);
 8003494:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int scaled2intX(int i) const
    {
        return scaled2int(i, xScale);
 8003498:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 800349a:	2b00      	cmp	r3, #0
 800349c:	db07      	blt.n	80034ae <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 800349e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80034a2:	fb93 f0f2 	sdiv	r0, r3, r2
 80034a6:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80034aa:	1040      	asrs	r0, r0, #1
 80034ac:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80034ae:	f06f 0001 	mvn.w	r0, #1
 80034b2:	fb00 2003 	mla	r0, r0, r3, r2
 80034b6:	3801      	subs	r0, #1
 80034b8:	fb90 f0f2 	sdiv	r0, r0, r2
 80034bc:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80034c0:	1040      	asrs	r0, r0, #1
 80034c2:	4240      	negs	r0, r0
    }
 80034c4:	4770      	bx	lr

080034c6 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMinAsFloatEv>:
     *
     * @return The number divided by the scale.
     */
    FORCE_INLINE_FUNCTION static float scaled2float(int i, int scale)
    {
        return (float)i / (float)scale;
 80034c6:	edd0 7a4b 	vldr	s15, [r0, #300]	; 0x12c
 80034ca:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80034ce:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 80034d2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 80034d6:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80034da:	4770      	bx	lr

080034dc <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMinScaledEv>:
    }
 80034dc:	f8d0 012c 	ldr.w	r0, [r0, #300]	; 0x12c
 80034e0:	4770      	bx	lr

080034e2 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv>:
        return scaled2intX(graphRangeMaxX);
 80034e2:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
        return scaled2int(i, xScale);
 80034e6:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 80034e8:	2b00      	cmp	r3, #0
 80034ea:	db07      	blt.n	80034fc <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 80034ec:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80034f0:	fb93 f0f2 	sdiv	r0, r3, r2
 80034f4:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80034f8:	1040      	asrs	r0, r0, #1
 80034fa:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80034fc:	f06f 0001 	mvn.w	r0, #1
 8003500:	fb00 2003 	mla	r0, r0, r3, r2
 8003504:	3801      	subs	r0, #1
 8003506:	fb90 f0f2 	sdiv	r0, r0, r2
 800350a:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800350e:	1040      	asrs	r0, r0, #1
 8003510:	4240      	negs	r0, r0
    }
 8003512:	4770      	bx	lr

08003514 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMaxAsFloatEv>:
        return (float)i / (float)scale;
 8003514:	edd0 7a4c 	vldr	s15, [r0, #304]	; 0x130
 8003518:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 800351c:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 8003520:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003524:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003528:	4770      	bx	lr

0800352a <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMaxScaledEv>:
    }
 800352a:	f8d0 0130 	ldr.w	r0, [r0, #304]	; 0x130
 800352e:	4770      	bx	lr

08003530 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv>:
        return scaled2intY(graphRangeMinY);
 8003530:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
        return scaled2int(i, yScale);
 8003534:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 8003536:	2b00      	cmp	r3, #0
 8003538:	db07      	blt.n	800354a <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 800353a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800353e:	fb93 f0f2 	sdiv	r0, r3, r2
 8003542:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003546:	1040      	asrs	r0, r0, #1
 8003548:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 800354a:	f06f 0001 	mvn.w	r0, #1
 800354e:	fb00 2003 	mla	r0, r0, r3, r2
 8003552:	3801      	subs	r0, #1
 8003554:	fb90 f0f2 	sdiv	r0, r0, r2
 8003558:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800355c:	1040      	asrs	r0, r0, #1
 800355e:	4240      	negs	r0, r0
    }
 8003560:	4770      	bx	lr

08003562 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMinAsFloatEv>:
        return (float)i / (float)scale;
 8003562:	edd0 7a4d 	vldr	s15, [r0, #308]	; 0x134
 8003566:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 800356a:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 800356e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003572:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003576:	4770      	bx	lr

08003578 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMinScaledEv>:
    }
 8003578:	f8d0 0134 	ldr.w	r0, [r0, #308]	; 0x134
 800357c:	4770      	bx	lr

0800357e <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv>:
        return scaled2intY(graphRangeMaxY);
 800357e:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
        return scaled2int(i, yScale);
 8003582:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 8003584:	2b00      	cmp	r3, #0
 8003586:	db07      	blt.n	8003598 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 8003588:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800358c:	fb93 f0f2 	sdiv	r0, r3, r2
 8003590:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003594:	1040      	asrs	r0, r0, #1
 8003596:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003598:	f06f 0001 	mvn.w	r0, #1
 800359c:	fb00 2003 	mla	r0, r0, r3, r2
 80035a0:	3801      	subs	r0, #1
 80035a2:	fb90 f0f2 	sdiv	r0, r0, r2
 80035a6:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80035aa:	1040      	asrs	r0, r0, #1
 80035ac:	4240      	negs	r0, r0
    }
 80035ae:	4770      	bx	lr

080035b0 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMaxAsFloatEv>:
        return (float)i / (float)scale;
 80035b0:	edd0 7a4e 	vldr	s15, [r0, #312]	; 0x138
 80035b4:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80035b8:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 80035bc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 80035c0:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80035c4:	4770      	bx	lr

080035c6 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMaxScaledEv>:
    }
 80035c6:	f8d0 0138 	ldr.w	r0, [r0, #312]	; 0x138
 80035ca:	4770      	bx	lr

080035cc <_ZN8touchgfx16DynamicDataGraph8setScaleEib>:
     * @see getScale
     *
     * @note The current xAxisFactor, xAxisOffet and xGraphRange values are updated to reflect the
     *       new scale being set.
     */
    virtual void setScale(int scale, bool updateData = false)
 80035cc:	b570      	push	{r4, r5, r6, lr}
    {
        setScaleX(scale, updateData);
 80035ce:	6803      	ldr	r3, [r0, #0]
    virtual void setScale(int scale, bool updateData = false)
 80035d0:	4604      	mov	r4, r0
        setScaleX(scale, updateData);
 80035d2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    virtual void setScale(int scale, bool updateData = false)
 80035d6:	460d      	mov	r5, r1
 80035d8:	4616      	mov	r6, r2
        setScaleX(scale, updateData);
 80035da:	4798      	blx	r3
        setScaleY(scale, updateData);
 80035dc:	6823      	ldr	r3, [r4, #0]
 80035de:	4632      	mov	r2, r6
 80035e0:	4629      	mov	r1, r5
 80035e2:	4620      	mov	r0, r4
 80035e4:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    }
 80035e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setScaleY(scale, updateData);
 80035ec:	4718      	bx	r3

080035ee <_ZNK8touchgfx16DynamicDataGraph8getScaleEv>:
     *
     * @see setScale
     */
    virtual int getScale() const
    {
        return getScaleY();
 80035ee:	6803      	ldr	r3, [r0, #0]
 80035f0:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 80035f4:	4718      	bx	r3

080035f6 <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMinEv>:
     *
     * @return The minimum x coordinate .
     */
    virtual int getGraphRangeXMin() const
    {
        return getGraphRangeXMinScaled();
 80035f6:	6803      	ldr	r3, [r0, #0]
 80035f8:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 80035fc:	4718      	bx	r3

080035fe <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMaxEv>:
     *
     * @return The maximum x coordinate .
     */
    virtual int getGraphRangeXMax() const
    {
        return getGraphRangeXMaxScaled();
 80035fe:	6803      	ldr	r3, [r0, #0]
 8003600:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8003604:	4718      	bx	r3

08003606 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi>:

    virtual void setGraphRangeYAutoScaled(bool showXaxis, int margin);

    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
    {
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003606:	6803      	ldr	r3, [r0, #0]
        if (i >= 0)
 8003608:	2a00      	cmp	r2, #0
    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
 800360a:	b410      	push	{r4}
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 800360c:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
        return scaled2int(i, xScale);
 8003610:	6b04      	ldr	r4, [r0, #48]	; 0x30
        if (i >= 0)
 8003612:	db0e      	blt.n	8003632 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x2c>
            return ((i * 2 + scale) / scale) / 2;
 8003614:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8003618:	fb92 f1f4 	sdiv	r1, r2, r4
 800361c:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003620:	1049      	asrs	r1, r1, #1
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003622:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
    }
 8003626:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 800362a:	3a01      	subs	r2, #1
 800362c:	440a      	add	r2, r1
 800362e:	4249      	negs	r1, r1
 8003630:	4718      	bx	r3
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003632:	f06f 0101 	mvn.w	r1, #1
 8003636:	fb01 4102 	mla	r1, r1, r2, r4
 800363a:	3901      	subs	r1, #1
 800363c:	fb91 f1f4 	sdiv	r1, r1, r4
 8003640:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003644:	1049      	asrs	r1, r1, #1
 8003646:	4249      	negs	r1, r1
 8003648:	e7eb      	b.n	8003622 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x1c>

0800364a <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(int scale))
    {
        setXAxisFactor(scale);
 800364a:	6803      	ldr	r3, [r0, #0]
 800364c:	f8d3 313c 	ldr.w	r3, [r3, #316]	; 0x13c
 8003650:	4718      	bx	r3

08003652 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEi>:
        return i * scale;
 8003652:	6b02      	ldr	r2, [r0, #48]	; 0x30
     *
     * @param  factor The x axis factor.
     */
    virtual void setXAxisFactor(int factor)
    {
        setXAxisFactorScaled(int2scaledX(factor));
 8003654:	6803      	ldr	r3, [r0, #0]
 8003656:	4351      	muls	r1, r2
 8003658:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 800365c:	4718      	bx	r3

0800365e <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEf>:
    }

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(float scale))
    {
        setXAxisFactor(scale);
 800365e:	6803      	ldr	r3, [r0, #0]
 8003660:	f8d3 3144 	ldr.w	r3, [r3, #324]	; 0x144
 8003664:	4718      	bx	r3

08003666 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf>:
        const float fs = f * (float)scale;
 8003666:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
    /// @endcond

    /** @copydoc setXAxisFactor(int) */
    virtual void setXAxisFactor(float factor)
    {
        setXAxisFactorScaled(float2scaledX(factor));
 800366a:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 800366c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisFactorScaled(float2scaledX(factor));
 8003670:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
        const float fs = f * (float)scale;
 8003674:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003678:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800367c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003680:	db08      	blt.n	8003694 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2e>
            return (int)(fs + 0.5f);
 8003682:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003686:	ee30 0a27 	vadd.f32	s0, s0, s15
 800368a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800368e:	ee17 1a90 	vmov	r1, s15
        setXAxisFactorScaled(float2scaledX(factor));
 8003692:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003694:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003698:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800369c:	ee17 2a90 	vmov	r2, s15
 80036a0:	ee30 0a47 	vsub.f32	s0, s0, s14
 80036a4:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 80036a8:	ee30 0a07 	vadd.f32	s0, s0, s14
 80036ac:	1e51      	subs	r1, r2, #1
 80036ae:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80036b2:	ee10 2a10 	vmov	r2, s0
 80036b6:	440a      	add	r2, r1
 80036b8:	4611      	mov	r1, r2
 80036ba:	e7ea      	b.n	8003692 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2c>

080036bc <_ZN8touchgfx16DynamicDataGraph20setXAxisFactorScaledEi>:
     *
     * @see setXAxisFactorScaled,setXAxisFactor
     */
    virtual void setXAxisFactorScaled(int factor)
    {
        xAxisFactor = factor;
 80036bc:	f8c0 113c 	str.w	r1, [r0, #316]	; 0x13c
    }
 80036c0:	4770      	bx	lr

080036c2 <_ZNK8touchgfx16DynamicDataGraph18getXAxisScaleAsIntEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsInt()", virtual int getXAxisScaleAsInt() const)
    {
        return getXAxisFactorAsInt();
 80036c2:	6803      	ldr	r3, [r0, #0]
 80036c4:	f8d3 3150 	ldr.w	r3, [r3, #336]	; 0x150
 80036c8:	4718      	bx	r3

080036ca <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv>:
     *
     * @return The x axis factor.
     */
    virtual int getXAxisFactorAsInt() const
    {
        return scaled2intX(getXAxisFactorScaled());
 80036ca:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisFactorAsInt() const
 80036cc:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisFactorScaled());
 80036ce:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
    virtual int getXAxisFactorAsInt() const
 80036d2:	4604      	mov	r4, r0
        return scaled2intX(getXAxisFactorScaled());
 80036d4:	4798      	blx	r3
        if (i >= 0)
 80036d6:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 80036d8:	6b23      	ldr	r3, [r4, #48]	; 0x30
        if (i >= 0)
 80036da:	db07      	blt.n	80036ec <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 80036dc:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 80036e0:	fb90 f0f3 	sdiv	r0, r0, r3
 80036e4:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80036e8:	1040      	asrs	r0, r0, #1
    }
 80036ea:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80036ec:	f06f 0201 	mvn.w	r2, #1
 80036f0:	fb02 3000 	mla	r0, r2, r0, r3
 80036f4:	3801      	subs	r0, #1
 80036f6:	fb90 f0f3 	sdiv	r0, r0, r3
 80036fa:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80036fe:	1040      	asrs	r0, r0, #1
 8003700:	4240      	negs	r0, r0
        return scaled2intX(getXAxisFactorScaled());
 8003702:	e7f2      	b.n	80036ea <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x20>

08003704 <_ZNK8touchgfx16DynamicDataGraph20getXAxisScaleAsFloatEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsFloat()", virtual float getXAxisScaleAsFloat() const)
    {
        return getXAxisFactorAsFloat();
 8003704:	6803      	ldr	r3, [r0, #0]
 8003706:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 800370a:	4718      	bx	r3

0800370c <_ZNK8touchgfx16DynamicDataGraph21getXAxisFactorAsFloatEv>:
    /// @endcond

    /** @copydoc getXAxisFactorAsInt() */
    virtual float getXAxisFactorAsFloat() const
    {
        return scaled2floatX(getXAxisFactorScaled());
 800370c:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisFactorAsFloat() const
 800370e:	b510      	push	{r4, lr}
        return scaled2floatX(getXAxisFactorScaled());
 8003710:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
    virtual float getXAxisFactorAsFloat() const
 8003714:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisFactorScaled());
 8003716:	4798      	blx	r3
        return (float)i / (float)scale;
 8003718:	ee07 0a90 	vmov	s15, r0
 800371c:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003720:	edd4 7a0c 	vldr	s15, [r4, #48]	; 0x30
 8003724:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003728:	ee80 0a27 	vdiv.f32	s0, s0, s15
 800372c:	bd10      	pop	{r4, pc}

0800372e <_ZNK8touchgfx16DynamicDataGraph20getXAxisFactorScaledEv>:
     * @see getXAxisFactorAsInt, getXAxisFactorAsFloat, setXAxisFactor
     */
    virtual int getXAxisFactorScaled() const
    {
        return xAxisFactor;
    }
 800372e:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8003732:	4770      	bx	lr

08003734 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEi>:
        return i * scale;
 8003734:	6b02      	ldr	r2, [r0, #48]	; 0x30
     *
     * @param  offset The x axis offset.
     */
    virtual void setXAxisOffset(int offset)
    {
        setXAxisOffsetScaled(int2scaledX(offset));
 8003736:	6803      	ldr	r3, [r0, #0]
 8003738:	4351      	muls	r1, r2
 800373a:	f8d3 3168 	ldr.w	r3, [r3, #360]	; 0x168
 800373e:	4718      	bx	r3

08003740 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf>:
        const float fs = f * (float)scale;
 8003740:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
    }

    /** @copydoc setXAxisOffset(int) */
    virtual void setXAxisOffset(float offset)
    {
        setXAxisOffsetScaled(float2scaledX(offset));
 8003744:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003746:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 800374a:	f8d3 3168 	ldr.w	r3, [r3, #360]	; 0x168
        const float fs = f * (float)scale;
 800374e:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003752:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003756:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800375a:	db08      	blt.n	800376e <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2e>
            return (int)(fs + 0.5f);
 800375c:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003760:	ee30 0a27 	vadd.f32	s0, s0, s15
 8003764:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003768:	ee17 1a90 	vmov	r1, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 800376c:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800376e:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003772:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003776:	ee17 2a90 	vmov	r2, s15
 800377a:	ee30 0a47 	vsub.f32	s0, s0, s14
 800377e:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003782:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003786:	1e51      	subs	r1, r2, #1
 8003788:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800378c:	ee10 2a10 	vmov	r2, s0
 8003790:	440a      	add	r2, r1
 8003792:	4611      	mov	r1, r2
 8003794:	e7ea      	b.n	800376c <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2c>

08003796 <_ZN8touchgfx16DynamicDataGraph20setXAxisOffsetScaledEi>:
     *
     * @see setXAxisOffset, getXAxisOffsetScaled
     */
    virtual void setXAxisOffsetScaled(int offset)
    {
        xAxisOffset = offset;
 8003796:	f8c0 1140 	str.w	r1, [r0, #320]	; 0x140
    }
 800379a:	4770      	bx	lr

0800379c <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv>:
     *
     * @return The x axis offset.
     */
    virtual int getXAxisOffsetAsInt() const
    {
        return scaled2intX(getXAxisOffsetScaled());
 800379c:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisOffsetAsInt() const
 800379e:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisOffsetScaled());
 80037a0:	f8d3 3174 	ldr.w	r3, [r3, #372]	; 0x174
    virtual int getXAxisOffsetAsInt() const
 80037a4:	4604      	mov	r4, r0
        return scaled2intX(getXAxisOffsetScaled());
 80037a6:	4798      	blx	r3
        if (i >= 0)
 80037a8:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 80037aa:	6b23      	ldr	r3, [r4, #48]	; 0x30
        if (i >= 0)
 80037ac:	db07      	blt.n	80037be <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 80037ae:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 80037b2:	fb90 f0f3 	sdiv	r0, r0, r3
 80037b6:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80037ba:	1040      	asrs	r0, r0, #1
    }
 80037bc:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80037be:	f06f 0201 	mvn.w	r2, #1
 80037c2:	fb02 3000 	mla	r0, r2, r0, r3
 80037c6:	3801      	subs	r0, #1
 80037c8:	fb90 f0f3 	sdiv	r0, r0, r3
 80037cc:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80037d0:	1040      	asrs	r0, r0, #1
 80037d2:	4240      	negs	r0, r0
        return scaled2intX(getXAxisOffsetScaled());
 80037d4:	e7f2      	b.n	80037bc <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x20>

080037d6 <_ZNK8touchgfx16DynamicDataGraph21getXAxisOffsetAsFloatEv>:

    /** @copydoc getXAxisOffsetAsInt() */
    virtual float getXAxisOffsetAsFloat() const
    {
        return scaled2floatX(getXAxisOffsetScaled());
 80037d6:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisOffsetAsFloat() const
 80037d8:	b510      	push	{r4, lr}
        return scaled2floatX(getXAxisOffsetScaled());
 80037da:	f8d3 3174 	ldr.w	r3, [r3, #372]	; 0x174
    virtual float getXAxisOffsetAsFloat() const
 80037de:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisOffsetScaled());
 80037e0:	4798      	blx	r3
        return (float)i / (float)scale;
 80037e2:	ee07 0a90 	vmov	s15, r0
 80037e6:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80037ea:	edd4 7a0c 	vldr	s15, [r4, #48]	; 0x30
 80037ee:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 80037f2:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80037f6:	bd10      	pop	{r4, pc}

080037f8 <_ZNK8touchgfx16DynamicDataGraph20getXAxisOffsetScaledEv>:
     * @see getXAxisOffsetAsInt, getXAxisOffsetAsFloat, setXAxisOffsetScaled, setXAxisOffset
     */
    virtual int getXAxisOffsetScaled() const
    {
        return xAxisOffset;
    }
 80037f8:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 80037fc:	4770      	bx	lr

080037fe <_ZNK8touchgfx16DynamicDataGraph9dataIndexEs>:
     * @return The index in the yValues array.
     */
    virtual int16_t dataIndex(int16_t screenIndex) const
    {
        return screenIndex;
    }
 80037fe:	4608      	mov	r0, r1
 8003800:	4770      	bx	lr

08003802 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii>:
    }

    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
    {
        // Value is also index for these types of graphs.
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003802:	6803      	ldr	r3, [r0, #0]
        return scaled2int(i, xScale);
 8003804:	6b02      	ldr	r2, [r0, #48]	; 0x30
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003806:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
        if (i >= 0)
 800380a:	2900      	cmp	r1, #0
    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
 800380c:	b510      	push	{r4, lr}
 800380e:	4604      	mov	r4, r0
        if (i >= 0)
 8003810:	db0e      	blt.n	8003830 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x2e>
            return ((i * 2 + scale) / scale) / 2;
 8003812:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8003816:	fb91 f1f2 	sdiv	r1, r1, r2
 800381a:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 800381e:	1049      	asrs	r1, r1, #1
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003820:	b209      	sxth	r1, r1
 8003822:	4620      	mov	r0, r4
 8003824:	4798      	blx	r3
 8003826:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	; 0x13c
    }
 800382a:	fb02 3000 	mla	r0, r2, r0, r3
 800382e:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003830:	f06f 0001 	mvn.w	r0, #1
 8003834:	fb00 2101 	mla	r1, r0, r1, r2
 8003838:	3901      	subs	r1, #1
 800383a:	fb91 f1f2 	sdiv	r1, r1, r2
 800383e:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003842:	1049      	asrs	r1, r1, #1
 8003844:	4249      	negs	r1, r1
 8003846:	e7eb      	b.n	8003820 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x1e>

08003848 <_ZNK8touchgfx16DynamicDataGraph9getScaleXEv>:
    virtual void setScaleX(int scale, bool updateData = false);

    virtual int getScaleX() const
    {
        return AbstractDataGraph::getScaleX();
    }
 8003848:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800384a:	4770      	bx	lr

0800384c <_ZNK8touchgfx16DynamicDataGraph9getScaleYEv>:
    virtual void setScaleY(int scale, bool updateData = false);

    virtual int getScaleY() const
    {
        return AbstractDataGraph::getScaleY();
    }
 800384c:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800384e:	4770      	bx	lr

08003850 <_ZN8touchgfx16DynamicDataGraph19setXAxisScaleScaledEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactorScaled()", virtual void setXAxisScaleScaled(int scale))
    {
        setXAxisFactorScaled(scale);
 8003850:	6803      	ldr	r3, [r0, #0]
 8003852:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 8003856:	4718      	bx	r3

08003858 <_ZNK8touchgfx16DynamicDataGraph19getXAxisScaleScaledEv>:
    /// @endcond

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorScaled()", virtual int getXAxisScaleScaled() const)
    {
        return getXAxisFactorScaled();
 8003858:	6803      	ldr	r3, [r0, #0]
 800385a:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
 800385e:	4718      	bx	r3

08003860 <_ZNK8touchgfx16DynamicDataGraph16indexToScreenXQ5Es>:
        return i * scale;
 8003860:	6b02      	ldr	r2, [r0, #48]	; 0x30
    }
    /// @endcond

    virtual CWRUtil::Q5 indexToScreenXQ5(int16_t index) const
    {
        return valueToScreenXQ5(int2scaledX(index));
 8003862:	6803      	ldr	r3, [r0, #0]
 8003864:	4351      	muls	r1, r2
 8003866:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800386a:	4718      	bx	r3

0800386c <_ZNK8touchgfx16DynamicDataGraph16indexToScreenYQ5Es>:
    }

    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
    {
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 800386c:	6803      	ldr	r3, [r0, #0]
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 800386e:	b570      	push	{r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003870:	f8d3 5118 	ldr.w	r5, [r3, #280]	; 0x118
 8003874:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 8003878:	f8d0 6144 	ldr.w	r6, [r0, #324]	; 0x144
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 800387c:	4604      	mov	r4, r0
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 800387e:	4798      	blx	r3
 8003880:	462b      	mov	r3, r5
 8003882:	f856 1020 	ldr.w	r1, [r6, r0, lsl #2]
 8003886:	4620      	mov	r0, r4
    }
 8003888:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 800388c:	4718      	bx	r3

0800388e <_ZNK8touchgfx21GraphWrapAndClearData18indexToGlobalIndexEs>:

    virtual void clear();

    virtual int32_t indexToGlobalIndex(int16_t index) const
    {
        return (this->dataCounter - this->usedCapacity) + index;
 800388e:	f8d0 3148 	ldr.w	r3, [r0, #328]	; 0x148
 8003892:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 8003896:	4419      	add	r1, r3
    }
 8003898:	1a08      	subs	r0, r1, r0
 800389a:	4770      	bx	lr

0800389c <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800389c:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 80038a0:	4770      	bx	lr

080038a2 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 80038a2:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 80038a6:	4770      	bx	lr

080038a8 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 80038a8:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80038aa:	2200      	movs	r2, #0
        return rect.width;
 80038ac:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 80038b0:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80038b4:	8002      	strh	r2, [r0, #0]
 80038b6:	8042      	strh	r2, [r0, #2]
 80038b8:	8084      	strh	r4, [r0, #4]
 80038ba:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 80038bc:	bd10      	pop	{r4, pc}

080038be <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 80038be:	2200      	movs	r2, #0
 80038c0:	8002      	strh	r2, [r0, #0]
 80038c2:	8042      	strh	r2, [r0, #2]
 80038c4:	8082      	strh	r2, [r0, #4]
 80038c6:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80038c8:	4770      	bx	lr

080038ca <_ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE>:
     *
     * @see getColor
     */
    virtual void setColor(colortype newColor)
    {
        color = newColor;
 80038ca:	62c1      	str	r1, [r0, #44]	; 0x2c
    }
 80038cc:	4770      	bx	lr

080038ce <_ZNK8touchgfx25AbstractGraphElementNoCWR8getColorEv>:
     * @see setColor
     */
    virtual colortype getColor() const
    {
        return color;
    }
 80038ce:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 80038d0:	4770      	bx	lr

080038d2 <_ZNK8touchgfx25AbstractGraphElementNoCWR16drawCanvasWidgetERKNS_4RectE>:

    virtual bool drawCanvasWidget(const Rect&) const
    {
        return true;
    }
 80038d2:	2001      	movs	r0, #1
 80038d4:	4770      	bx	lr

080038d6 <_ZN8touchgfx25AbstractGraphElementNoCWR10setPainterERNS_15AbstractPainterE>:
    void normalizeRect(Rect& r) const;

private:
    virtual void setPainter(AbstractPainter& /*painter*/)
    {
    }
 80038d6:	4770      	bx	lr

080038d8 <_ZN8touchgfx20GraphElementGridBase22invalidateGraphPointAtEs>:
        return lineWidth;
    }

    virtual void invalidateGraphPointAt(int16_t)
    {
    }
 80038d8:	4770      	bx	lr

080038da <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
     *
     * @return The correctly scaled major interval.
     */
    virtual int getCorrectlyScaledMajorInterval(const AbstractDataGraph* graph) const
    {
        return majorGrid == 0 ? 0 : majorGrid->getCorrectlyScaledGridInterval(graph);
 80038da:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80038dc:	b118      	cbz	r0, 80038e6 <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 80038de:	6803      	ldr	r3, [r0, #0]
 80038e0:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80038e4:	4718      	bx	r3
    }
 80038e6:	4770      	bx	lr

080038e8 <_ZNK8touchgfx17GraphElementGridX13enclosingAreaEPKNS_17AbstractDataGraphE>:
    {
        return convertToGraphScaleX(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 80038e8:	b530      	push	{r4, r5, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 80038ea:	f8b2 111a 	ldrh.w	r1, [r2, #282]	; 0x11a
        return topPadding;
 80038ee:	f9b2 4114 	ldrsh.w	r4, [r2, #276]	; 0x114
        return rect.width;
 80038f2:	f9b2 5040 	ldrsh.w	r5, [r2, #64]	; 0x40
        return graphArea.getHeight() - (topPadding + bottomPadding);
 80038f6:	f8b2 2042 	ldrh.w	r2, [r2, #66]	; 0x42
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80038fa:	8044      	strh	r4, [r0, #2]
 80038fc:	4421      	add	r1, r4
 80038fe:	1a52      	subs	r2, r2, r1
 8003900:	2100      	movs	r1, #0
 8003902:	8001      	strh	r1, [r0, #0]
 8003904:	8085      	strh	r5, [r0, #4]
 8003906:	80c2      	strh	r2, [r0, #6]
    {
        return Rect(0, graph->getGraphAreaPaddingTop(), graph->getGraphAreaWidthIncludingPadding(), graph->getGraphAreaHeight());
    }
 8003908:	bd30      	pop	{r4, r5, pc}

0800390a <_ZNK8touchgfx17GraphElementGridX8lineRectEssss>:

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
 800390a:	b510      	push	{r4, lr}
 800390c:	8042      	strh	r2, [r0, #2]
 800390e:	f9bd 4008 	ldrsh.w	r4, [sp, #8]
 8003912:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8003916:	8004      	strh	r4, [r0, #0]
 8003918:	8082      	strh	r2, [r0, #4]
 800391a:	80c3      	strh	r3, [r0, #6]
    {
        return Rect(pos, start, width, length);
    }
 800391c:	bd10      	pop	{r4, pc}

0800391e <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMinScaled();
 800391e:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 8003920:	4608      	mov	r0, r1
        return graph->getGraphRangeXMinScaled();
 8003922:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8003926:	4718      	bx	r3

08003928 <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMaxScaled();
 8003928:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 800392a:	4608      	mov	r0, r1
        return graph->getGraphRangeXMaxScaled();
 800392c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8003930:	4718      	bx	r3

08003932 <_ZNK8touchgfx17GraphElementGridX17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 8003932:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 8003936:	4770      	bx	lr

08003938 <_ZNK8touchgfx17GraphElementGridX18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 8003938:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 800393c:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 8003940:	4403      	add	r3, r0
 8003942:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 8003946:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 8003948:	b200      	sxth	r0, r0
 800394a:	4770      	bx	lr

0800394c <_ZNK8touchgfx17GraphElementGridX20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 800394c:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 8003950:	4770      	bx	lr

08003952 <_ZNK8touchgfx17GraphElementGridX18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003952:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 8003956:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 800395a:	4403      	add	r3, r0
 800395c:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 8003960:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 8003962:	b200      	sxth	r0, r0
 8003964:	4770      	bx	lr

08003966 <_ZNK8touchgfx17GraphElementGridX15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenXQ5(x);
 8003966:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 8003968:	4608      	mov	r0, r1
        return graph->valueToScreenXQ5(x);
 800396a:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800396e:	4611      	mov	r1, r2
 8003970:	4718      	bx	r3

08003972 <_ZNK8touchgfx17GraphElementGridY13enclosingAreaEPKNS_17AbstractDataGraphE>:
 8003972:	f8b2 1118 	ldrh.w	r1, [r2, #280]	; 0x118
    {
        return convertToGraphScaleY(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 8003976:	b530      	push	{r4, r5, lr}
        return leftPadding;
 8003978:	f9b2 5116 	ldrsh.w	r5, [r2, #278]	; 0x116
 800397c:	8005      	strh	r5, [r0, #0]
        return graphArea.getWidth() - (leftPadding + rightPadding);
 800397e:	186c      	adds	r4, r5, r1
 8003980:	f8b2 1040 	ldrh.w	r1, [r2, #64]	; 0x40
        return rect.height;
 8003984:	f9b2 2042 	ldrsh.w	r2, [r2, #66]	; 0x42
 8003988:	80c2      	strh	r2, [r0, #6]
 800398a:	1b09      	subs	r1, r1, r4
 800398c:	2400      	movs	r4, #0
 800398e:	8044      	strh	r4, [r0, #2]
 8003990:	8081      	strh	r1, [r0, #4]
    {
        return Rect(graph->getGraphAreaPaddingLeft(), 0, graph->getGraphAreaWidth(), graph->getGraphAreaHeightIncludingPadding());
    }
 8003992:	bd30      	pop	{r4, r5, pc}

08003994 <_ZNK8touchgfx17GraphElementGridY8lineRectEssss>:
 8003994:	8002      	strh	r2, [r0, #0]
 8003996:	8083      	strh	r3, [r0, #4]
 8003998:	f9bd 2000 	ldrsh.w	r2, [sp]
 800399c:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80039a0:	8042      	strh	r2, [r0, #2]
 80039a2:	80c3      	strh	r3, [r0, #6]

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
    {
        return Rect(start, pos, length, width);
    }
 80039a4:	4770      	bx	lr

080039a6 <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMinScaled();
 80039a6:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 80039a8:	4608      	mov	r0, r1
        return graph->getGraphRangeYMinScaled();
 80039aa:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 80039ae:	4718      	bx	r3

080039b0 <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMaxScaled();
 80039b0:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 80039b2:	4608      	mov	r0, r1
        return graph->getGraphRangeYMaxScaled();
 80039b4:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 80039b8:	4718      	bx	r3

080039ba <_ZNK8touchgfx17GraphElementGridY17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 80039ba:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 80039be:	4770      	bx	lr

080039c0 <_ZNK8touchgfx17GraphElementGridY18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 80039c0:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 80039c4:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 80039c8:	4403      	add	r3, r0
 80039ca:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 80039ce:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 80039d0:	b200      	sxth	r0, r0
 80039d2:	4770      	bx	lr

080039d4 <_ZNK8touchgfx17GraphElementGridY20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 80039d4:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 80039d8:	4770      	bx	lr

080039da <_ZNK8touchgfx17GraphElementGridY18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getHeight() - (topPadding + bottomPadding);
 80039da:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 80039de:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 80039e2:	4403      	add	r3, r0
 80039e4:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 80039e8:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 80039ea:	b200      	sxth	r0, r0
 80039ec:	4770      	bx	lr

080039ee <_ZNK8touchgfx17GraphElementGridY15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenYQ5(y);
 80039ee:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 80039f0:	4608      	mov	r0, r1
        return graph->valueToScreenYQ5(y);
 80039f2:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 80039f6:	4611      	mov	r1, r2
 80039f8:	4718      	bx	r3

080039fa <_ZN19ScreenGraphViewBaseD1Ev>:

class ScreenGraphViewBase : public touchgfx::View<ScreenGraphPresenter>
{
public:
    ScreenGraphViewBase();
    virtual ~ScreenGraphViewBase() {}
 80039fa:	4770      	bx	lr

080039fc <_ZN19ScreenGraphViewBase11setupScreenEv>:
}

void ScreenGraphViewBase::setupScreen()
{

}
 80039fc:	4770      	bx	lr

080039fe <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80039fe:	4770      	bx	lr

08003a00 <_ZN8touchgfx17GraphWrapAndClearILs60EED1Ev>:
 * be created as new values are added.
 *
 * @tparam CAPACITY The maximum number of data points on the graph.
 */
template <int16_t CAPACITY>
class GraphWrapAndClear : public GraphWrapAndClearData
 8003a00:	4770      	bx	lr

08003a02 <_ZN8touchgfx17GraphElementGridYD1Ev>:
class GraphElementGridY : public GraphElementGridBase
 8003a02:	4770      	bx	lr

08003a04 <_ZN8touchgfx17GraphElementGridXD1Ev>:
class GraphElementGridX : public GraphElementGridBase
 8003a04:	4770      	bx	lr

08003a06 <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003a06:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003a08:	68c2      	ldr	r2, [r0, #12]
 8003a0a:	6844      	ldr	r4, [r0, #4]
 8003a0c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003a0e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003a10:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003a14:	07d2      	lsls	r2, r2, #31
 8003a16:	bf48      	it	mi
 8003a18:	5962      	ldrmi	r2, [r4, r5]
 8003a1a:	689b      	ldr	r3, [r3, #8]
    }
 8003a1c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003a1e:	bf48      	it	mi
 8003a20:	58d3      	ldrmi	r3, [r2, r3]
 8003a22:	4718      	bx	r3

08003a24 <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8003a24:	6843      	ldr	r3, [r0, #4]
 8003a26:	b12b      	cbz	r3, 8003a34 <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8003a28:	6883      	ldr	r3, [r0, #8]
 8003a2a:	b92b      	cbnz	r3, 8003a38 <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003a2c:	68c0      	ldr	r0, [r0, #12]
 8003a2e:	f000 0001 	and.w	r0, r0, #1
 8003a32:	4770      	bx	lr
 8003a34:	4618      	mov	r0, r3
 8003a36:	4770      	bx	lr
 8003a38:	2001      	movs	r0, #1
    }
 8003a3a:	4770      	bx	lr

08003a3c <_ZN8touchgfx17GraphElementGridXD0Ev>:
 8003a3c:	b510      	push	{r4, lr}
 8003a3e:	2140      	movs	r1, #64	; 0x40
 8003a40:	4604      	mov	r4, r0
 8003a42:	f01d f874 	bl	8020b2e <_ZdlPvj>
 8003a46:	4620      	mov	r0, r4
 8003a48:	bd10      	pop	{r4, pc}

08003a4a <_ZN8touchgfx17GraphElementGridYD0Ev>:
class GraphElementGridY : public GraphElementGridBase
 8003a4a:	b510      	push	{r4, lr}
 8003a4c:	2140      	movs	r1, #64	; 0x40
 8003a4e:	4604      	mov	r4, r0
 8003a50:	f01d f86d 	bl	8020b2e <_ZdlPvj>
 8003a54:	4620      	mov	r0, r4
 8003a56:	bd10      	pop	{r4, pc}

08003a58 <_ZN8touchgfx17GraphWrapAndClearILs60EED0Ev>:
 8003a58:	b510      	push	{r4, lr}
 8003a5a:	f44f 710f 	mov.w	r1, #572	; 0x23c
 8003a5e:	4604      	mov	r4, r0
 8003a60:	f01d f865 	bl	8020b2e <_ZdlPvj>
 8003a64:	4620      	mov	r0, r4
 8003a66:	bd10      	pop	{r4, pc}

08003a68 <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003a68:	b510      	push	{r4, lr}
 8003a6a:	2110      	movs	r1, #16
 8003a6c:	4604      	mov	r4, r0
 8003a6e:	f01d f85e 	bl	8020b2e <_ZdlPvj>
 8003a72:	4620      	mov	r0, r4
 8003a74:	bd10      	pop	{r4, pc}

08003a76 <_ZN19ScreenGraphViewBaseD0Ev>:
 8003a76:	b510      	push	{r4, lr}
 8003a78:	f241 7174 	movw	r1, #6004	; 0x1774
 8003a7c:	4604      	mov	r4, r0
 8003a7e:	f01d f856 	bl	8020b2e <_ZdlPvj>
 8003a82:	4620      	mov	r0, r4
 8003a84:	bd10      	pop	{r4, pc}

08003a86 <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv>:
        if (alpha > 0)
 8003a86:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8003a8a:	b10b      	cbz	r3, 8003a90 <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv+0xa>
            Container::invalidateContent();
 8003a8c:	f007 ba6f 	b.w	800af6e <_ZNK8touchgfx9Container17invalidateContentEv>
    }
 8003a90:	4770      	bx	lr

08003a92 <_ZNK8touchgfx17GraphElementGridX30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 8003a92:	b513      	push	{r0, r1, r4, lr}
 8003a94:	4603      	mov	r3, r0
 8003a96:	4608      	mov	r0, r1
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 8003a98:	e9d3 140c 	ldrd	r1, r4, [r3, #48]	; 0x30
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003a9c:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 8003a9e:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003aa0:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8003aa4:	4798      	blx	r3
 8003aa6:	9901      	ldr	r1, [sp, #4]
 8003aa8:	4602      	mov	r2, r0
 8003aaa:	4620      	mov	r0, r4
    }
 8003aac:	b002      	add	sp, #8
 8003aae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003ab2:	f009 b8a3 	b.w	800cbfc <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

08003ab6 <_ZNK8touchgfx17GraphElementGridY30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 8003ab6:	b513      	push	{r0, r1, r4, lr}
 8003ab8:	4603      	mov	r3, r0
 8003aba:	4608      	mov	r0, r1
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 8003abc:	e9d3 140c 	ldrd	r1, r4, [r3, #48]	; 0x30
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003ac0:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 8003ac2:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003ac4:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003ac8:	4798      	blx	r3
 8003aca:	9901      	ldr	r1, [sp, #4]
 8003acc:	4602      	mov	r2, r0
 8003ace:	4620      	mov	r0, r4
    }
 8003ad0:	b002      	add	sp, #8
 8003ad2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003ad6:	f009 b891 	b.w	800cbfc <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
	...

08003adc <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 8003adc:	1e0a      	subs	r2, r1, #0
    virtual int indexToDataPointYScaled(int16_t index) const
 8003ade:	b510      	push	{r4, lr}
        assert(index >= 0 && index < usedCapacity);
 8003ae0:	db03      	blt.n	8003aea <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0xe>
 8003ae2:	f9b0 411e 	ldrsh.w	r4, [r0, #286]	; 0x11e
 8003ae6:	4294      	cmp	r4, r2
 8003ae8:	dc06      	bgt.n	8003af8 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x1c>
 8003aea:	4b08      	ldr	r3, [pc, #32]	; (8003b0c <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x30>)
 8003aec:	4a08      	ldr	r2, [pc, #32]	; (8003b10 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x34>)
 8003aee:	4809      	ldr	r0, [pc, #36]	; (8003b14 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x38>)
 8003af0:	f240 6133 	movw	r1, #1587	; 0x633
 8003af4:	f01d f84a 	bl	8020b8c <__assert_func>
        return yValues[dataIndex(index)];
 8003af8:	6803      	ldr	r3, [r0, #0]
 8003afa:	f8d0 4144 	ldr.w	r4, [r0, #324]	; 0x144
 8003afe:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 8003b02:	4798      	blx	r3
    }
 8003b04:	f854 0020 	ldr.w	r0, [r4, r0, lsl #2]
 8003b08:	bd10      	pop	{r4, pc}
 8003b0a:	bf00      	nop
 8003b0c:	08022f3c 	.word	0x08022f3c
 8003b10:	08022f5f 	.word	0x08022f5f
 8003b14:	08022fae 	.word	0x08022fae

08003b18 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 8003b18:	1e0b      	subs	r3, r1, #0
    virtual int indexToDataPointXScaled(int16_t index) const
 8003b1a:	b510      	push	{r4, lr}
 8003b1c:	4604      	mov	r4, r0
        assert(index >= 0 && index < usedCapacity);
 8003b1e:	db03      	blt.n	8003b28 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x10>
 8003b20:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
 8003b24:	429a      	cmp	r2, r3
 8003b26:	dc06      	bgt.n	8003b36 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x1e>
 8003b28:	4b07      	ldr	r3, [pc, #28]	; (8003b48 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x30>)
 8003b2a:	4a08      	ldr	r2, [pc, #32]	; (8003b4c <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x34>)
 8003b2c:	4808      	ldr	r0, [pc, #32]	; (8003b50 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x38>)
 8003b2e:	f240 612d 	movw	r1, #1581	; 0x62d
 8003b32:	f01d f82b 	bl	8020b8c <__assert_func>
        return (indexToGlobalIndex(index) * xAxisFactor) + xAxisOffset;
 8003b36:	6803      	ldr	r3, [r0, #0]
 8003b38:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8003b3c:	4798      	blx	r3
 8003b3e:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	; 0x13c
    }
 8003b42:	fb02 3000 	mla	r0, r2, r0, r3
 8003b46:	bd10      	pop	{r4, pc}
 8003b48:	08022f3c 	.word	0x08022f3c
 8003b4c:	0802300b 	.word	0x0802300b
 8003b50:	08022fae 	.word	0x08022fae

08003b54 <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

}

void ScreenGraphViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button1)
 8003b54:	3098      	adds	r0, #152	; 0x98
 8003b56:	4288      	cmp	r0, r1
{
 8003b58:	b508      	push	{r3, lr}
    if (&src == &button1)
 8003b5a:	d105      	bne.n	8003b68 <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
     */
    virtual void action1();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003b5c:	f00d fcac 	bl	80114b8 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When button1 clicked change screen to Screen1
        //Go to Screen1 with screen transition towards East
        application().gotoScreen1ScreenWipeTransitionEast();
    }
}
 8003b60:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen1ScreenWipeTransitionEast();
 8003b64:	f7fe bcb2 	b.w	80024cc <_ZN23FrontendApplicationBase35gotoScreen1ScreenWipeTransitionEastEv>
}
 8003b68:	bd08      	pop	{r3, pc}

08003b6a <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>:
     * @param  factor2 The second factor.
     * @param  divisor The divisor.
     *
     * @return factor1 * factor2 / divisor as a Q5
     */
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8003b6a:	b537      	push	{r0, r1, r2, r4, r5, lr}
    {
        int32_t remainder;
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8003b6c:	ab01      	add	r3, sp, #4
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8003b6e:	4615      	mov	r5, r2
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8003b70:	f00e fddb 	bl	801272a <_ZN8touchgfx6muldivElllRl>
        if (result >= 0)
 8003b74:	2800      	cmp	r0, #0
 8003b76:	ea4f 1440 	mov.w	r4, r0, lsl #5
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8003b7a:	9901      	ldr	r1, [sp, #4]
 8003b7c:	462a      	mov	r2, r5
 8003b7e:	f04f 0020 	mov.w	r0, #32
        if (result >= 0)
 8003b82:	db04      	blt.n	8003b8e <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x24>
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8003b84:	f00e fdf0 	bl	8012768 <_ZN8touchgfx6muldivElll>
            return Q5(v + q5.v);
 8003b88:	4420      	add	r0, r4
        {
            return toQ5(result) + muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
        }
        return toQ5(result) - muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
    }
 8003b8a:	b003      	add	sp, #12
 8003b8c:	bd30      	pop	{r4, r5, pc}
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8003b8e:	f00e fdeb 	bl	8012768 <_ZN8touchgfx6muldivElll>
            return Q5(v - q5.v);
 8003b92:	1a20      	subs	r0, r4, r0
 8003b94:	e7f9      	b.n	8003b8a <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x20>

08003b96 <_ZNK8touchgfx17AbstractDataGraph16valueToScreenYQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 8003b96:	b570      	push	{r4, r5, r6, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003b98:	f9b0 4114 	ldrsh.w	r4, [r0, #276]	; 0x114
 8003b9c:	f8b0 511a 	ldrh.w	r5, [r0, #282]	; 0x11a
 8003ba0:	1963      	adds	r3, r4, r5
 8003ba2:	f8b0 5042 	ldrh.w	r5, [r0, #66]	; 0x42
 8003ba6:	1aed      	subs	r5, r5, r3
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 8003ba8:	e9d0 324d 	ldrd	r3, r2, [r0, #308]	; 0x134
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 8003bac:	460e      	mov	r6, r1
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 8003bae:	b22d      	sxth	r5, r5
 8003bb0:	1ad2      	subs	r2, r2, r3
 8003bb2:	1e69      	subs	r1, r5, #1
 8003bb4:	1af0      	subs	r0, r6, r3
 8003bb6:	f7ff ffd8 	bl	8003b6a <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
 8003bba:	442c      	add	r4, r5
 8003bbc:	3c01      	subs	r4, #1
    }
 8003bbe:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
 8003bc2:	bd70      	pop	{r4, r5, r6, pc}

08003bc4 <_ZNK8touchgfx17AbstractDataGraph16valueToScreenXQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenXQ5(int x) const
 8003bc4:	b538      	push	{r3, r4, r5, lr}
 8003bc6:	4604      	mov	r4, r0
 8003bc8:	4608      	mov	r0, r1
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003bca:	f8b4 3118 	ldrh.w	r3, [r4, #280]	; 0x118
 8003bce:	f8b4 1116 	ldrh.w	r1, [r4, #278]	; 0x116
 8003bd2:	440b      	add	r3, r1
 8003bd4:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 8003bd8:	e9d4 524b 	ldrd	r5, r2, [r4, #300]	; 0x12c
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003bdc:	1ac9      	subs	r1, r1, r3
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 8003bde:	b209      	sxth	r1, r1
 8003be0:	1b52      	subs	r2, r2, r5
 8003be2:	3901      	subs	r1, #1
 8003be4:	1b40      	subs	r0, r0, r5
 8003be6:	f7ff ffc0 	bl	8003b6a <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
            return Q5(v + q5.v);
 8003bea:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	; 0x116
    }
 8003bee:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 8003bf2:	bd38      	pop	{r3, r4, r5, pc}

08003bf4 <_ZN8touchgfx20GraphElementGridBaseC1Ev>:
    GraphElementGridBase()
 8003bf4:	b510      	push	{r4, lr}
 8003bf6:	4604      	mov	r4, r0
        : CanvasWidget()
 8003bf8:	f008 fbea 	bl	800c3d0 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8003bfc:	4a06      	ldr	r2, [pc, #24]	; (8003c18 <_ZN8touchgfx20GraphElementGridBaseC1Ev+0x24>)
 8003bfe:	6022      	str	r2, [r4, #0]
        : color(col)
 8003c00:	2300      	movs	r3, #0
 8003c02:	2201      	movs	r2, #1
 8003c04:	210a      	movs	r1, #10
 8003c06:	e9c4 210c 	strd	r2, r1, [r4, #48]	; 0x30
 8003c0a:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003c0c:	f884 2038 	strb.w	r2, [r4, #56]	; 0x38
 8003c10:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8003c12:	4620      	mov	r0, r4
 8003c14:	bd10      	pop	{r4, pc}
 8003c16:	bf00      	nop
 8003c18:	08023d04 	.word	0x08023d04

08003c1c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8003c1c:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 8003c1e:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8003c20:	4e12      	ldr	r6, [pc, #72]	; (8003c6c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 8003c22:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8003c24:	4b12      	ldr	r3, [pc, #72]	; (8003c70 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8003c26:	6003      	str	r3, [r0, #0]
 8003c28:	6833      	ldr	r3, [r6, #0]
 8003c2a:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
    AbstractPainterRGB565()
 8003c2e:	4605      	mov	r5, r0
 8003c30:	b10a      	cbz	r2, 8003c36 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 8003c32:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003c34:	b900      	cbnz	r0, 8003c38 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 8003c36:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8003c38:	6803      	ldr	r3, [r0, #0]
 8003c3a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003c3c:	4798      	blx	r3
        return auxiliaryLCD;
 8003c3e:	6833      	ldr	r3, [r6, #0]
 8003c40:	fab0 f480 	clz	r4, r0
 8003c44:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003c46:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8003c48:	b130      	cbz	r0, 8003c58 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8003c4a:	6803      	ldr	r3, [r0, #0]
 8003c4c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003c4e:	4798      	blx	r3
 8003c50:	2800      	cmp	r0, #0
 8003c52:	bf08      	it	eq
 8003c54:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8003c58:	b92c      	cbnz	r4, 8003c66 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8003c5a:	4b06      	ldr	r3, [pc, #24]	; (8003c74 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8003c5c:	4a06      	ldr	r2, [pc, #24]	; (8003c78 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8003c5e:	4807      	ldr	r0, [pc, #28]	; (8003c7c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8003c60:	212c      	movs	r1, #44	; 0x2c
 8003c62:	f01c ff93 	bl	8020b8c <__assert_func>
    }
 8003c66:	4628      	mov	r0, r5
 8003c68:	bd70      	pop	{r4, r5, r6, pc}
 8003c6a:	bf00      	nop
 8003c6c:	20017450 	.word	0x20017450
 8003c70:	080232cc 	.word	0x080232cc
 8003c74:	0802305a 	.word	0x0802305a
 8003c78:	080230b8 	.word	0x080230b8
 8003c7c:	080230f1 	.word	0x080230f1

08003c80 <_ZN8touchgfx15GraphLabelsBaseC1Ev>:
 * @see GraphLabelsX, GraphLabelsY
 */
class GraphLabelsBase : public AbstractGraphDecoration
{
public:
    GraphLabelsBase()
 8003c80:	b510      	push	{r4, lr}
 8003c82:	4604      	mov	r4, r0
        : CanvasWidget()
 8003c84:	f008 fba4 	bl	800c3d0 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : AbstractGraphDecoration(),
          dataScale(1), labelInterval(0), labelTypedText(TYPED_TEXT_INVALID), labelRotation(TEXT_ROTATE_0), labelDecimals(0), labelDecimalPoint('.'), majorLabel(0)
 8003c88:	4a0a      	ldr	r2, [pc, #40]	; (8003cb4 <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x34>)
 8003c8a:	6022      	str	r2, [r4, #0]
 8003c8c:	2300      	movs	r3, #0
 8003c8e:	2201      	movs	r2, #1
 8003c90:	e9c4 230c 	strd	r2, r3, [r4, #48]	; 0x30
 8003c94:	4a08      	ldr	r2, [pc, #32]	; (8003cb8 <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x38>)
 8003c96:	63a2      	str	r2, [r4, #56]	; 0x38
 8003c98:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003c9c:	87a2      	strh	r2, [r4, #60]	; 0x3c
 8003c9e:	222e      	movs	r2, #46	; 0x2e
 8003ca0:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003ca2:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8003ca6:	f8a4 3042 	strh.w	r3, [r4, #66]	; 0x42
 8003caa:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 8003cae:	64a3      	str	r3, [r4, #72]	; 0x48
    {
    }
 8003cb0:	4620      	mov	r0, r4
 8003cb2:	bd10      	pop	{r4, pc}
 8003cb4:	08023efc 	.word	0x08023efc
 8003cb8:	080224cc 	.word	0x080224cc

08003cbc <_ZN19ScreenGraphViewBaseC1Ev>:
ScreenGraphViewBase::ScreenGraphViewBase() :
 8003cbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003cc0:	ed2d 8b06 	vpush	{d8-d10}
 8003cc4:	4604      	mov	r4, r0
 8003cc6:	b087      	sub	sp, #28
    buttonCallback(this, &ScreenGraphViewBase::buttonCallbackHandler)
 8003cc8:	46a1      	mov	r9, r4
 8003cca:	2600      	movs	r6, #0
 8003ccc:	f00e fef6 	bl	8012abc <_ZN8touchgfx6ScreenC1Ev>
 8003cd0:	4bed      	ldr	r3, [pc, #948]	; (8004088 <_ZN19ScreenGraphViewBaseC1Ev+0x3cc>)
 8003cd2:	63e6      	str	r6, [r4, #60]	; 0x3c
 8003cd4:	f849 3b40 	str.w	r3, [r9], #64
 8003cd8:	4648      	mov	r0, r9
 8003cda:	f7fe ffbb 	bl	8002c54 <_ZN8touchgfx3BoxC1Ev>
 8003cde:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 8003ce2:	4618      	mov	r0, r3
 8003ce4:	ee08 3a10 	vmov	s16, r3
 8003ce8:	f7fe ffb4 	bl	8002c54 <_ZN8touchgfx3BoxC1Ev>
        touchable = touch;
 8003cec:	f240 1301 	movw	r3, #257	; 0x101
 8003cf0:	f8a4 30bc 	strh.w	r3, [r4, #188]	; 0xbc
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 8003cf4:	4be5      	ldr	r3, [pc, #916]	; (800408c <_ZN19ScreenGraphViewBaseC1Ev+0x3d0>)
 8003cf6:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8003cfa:	f104 05cc 	add.w	r5, r4, #204	; 0xcc
 8003cfe:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : x(0), y(0), width(0), height(0)
 8003d02:	e9c4 6627 	strd	r6, r6, [r4, #156]	; 0x9c
 8003d06:	e9c4 6629 	strd	r6, r6, [r4, #164]	; 0xa4
          visible(true)
 8003d0a:	e9c4 662b 	strd	r6, r6, [r4, #172]	; 0xac
 8003d0e:	e9c4 662d 	strd	r6, r6, [r4, #180]	; 0xb4
        : Widget(), action(), pressed(false)
 8003d12:	f8c4 60c0 	str.w	r6, [r4, #192]	; 0xc0
 8003d16:	f884 60c4 	strb.w	r6, [r4, #196]	; 0xc4
 8003d1a:	f8a4 30c6 	strh.w	r3, [r4, #198]	; 0xc6
 8003d1e:	f8a4 30c8 	strh.w	r3, [r4, #200]	; 0xc8
 8003d22:	f884 30ca 	strb.w	r3, [r4, #202]	; 0xca
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8003d26:	213c      	movs	r1, #60	; 0x3c
 8003d28:	4628      	mov	r0, r5
 8003d2a:	f008 ff03 	bl	800cb34 <_ZN8touchgfx17AbstractDataGraphC1Es>
 8003d2e:	4bd8      	ldr	r3, [pc, #864]	; (8004090 <_ZN19ScreenGraphViewBaseC1Ev+0x3d4>)
 8003d30:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
 8003d34:	f04f 0801 	mov.w	r8, #1
{
public:
    GraphWrapAndClear()
        : GraphWrapAndClearData(CAPACITY, y)
 8003d38:	f504 7306 	add.w	r3, r4, #536	; 0x218
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8003d3c:	223b      	movs	r2, #59	; 0x3b
 8003d3e:	4631      	mov	r1, r6
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8003d40:	e9c4 3684 	strd	r3, r6, [r4, #528]	; 0x210
 8003d44:	e9c4 8682 	strd	r8, r6, [r4, #520]	; 0x208
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8003d48:	4628      	mov	r0, r5
 8003d4a:	f7ff fa8b 	bl	8003264 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
 8003d4e:	4bd1      	ldr	r3, [pc, #836]	; (8004094 <_ZN19ScreenGraphViewBaseC1Ev+0x3d8>)
 8003d50:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
 8003d54:	f504 7342 	add.w	r3, r4, #776	; 0x308
 8003d58:	4618      	mov	r0, r3
 8003d5a:	ee09 3a10 	vmov	s18, r3
 8003d5e:	f008 fb37 	bl	800c3d0 <_ZN8touchgfx12CanvasWidgetC1Ev>
 */
class GraphElementLine : public AbstractGraphElement
{
public:
    GraphElementLine()
        : lineWidth(2)
 8003d62:	4bcd      	ldr	r3, [pc, #820]	; (8004098 <_ZN19ScreenGraphViewBaseC1Ev+0x3dc>)
 8003d64:	f8c4 3308 	str.w	r3, [r4, #776]	; 0x308
 8003d68:	f04f 0302 	mov.w	r3, #2
 8003d6c:	f884 3334 	strb.w	r3, [r4, #820]	; 0x334
 8003d70:	f504 734e 	add.w	r3, r4, #824	; 0x338
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8003d74:	4618      	mov	r0, r3
 8003d76:	9303      	str	r3, [sp, #12]
 8003d78:	f7ff ff50 	bl	8003c1c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003d7c:	4bc7      	ldr	r3, [pc, #796]	; (800409c <_ZN19ScreenGraphViewBaseC1Ev+0x3e0>)
 8003d7e:	f8c4 3338 	str.w	r3, [r4, #824]	; 0x338
 8003d82:	f504 7b53 	add.w	fp, r4, #844	; 0x34c
 8003d86:	3324      	adds	r3, #36	; 0x24
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8003d88:	f8c4 6344 	str.w	r6, [r4, #836]	; 0x344
 8003d8c:	f8c4 3340 	str.w	r3, [r4, #832]	; 0x340
class GraphElementGridY : public GraphElementGridBase
 8003d90:	4658      	mov	r0, fp
 8003d92:	f7ff ff2f 	bl	8003bf4 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8003d96:	4fc2      	ldr	r7, [pc, #776]	; (80040a0 <_ZN19ScreenGraphViewBaseC1Ev+0x3e4>)
 8003d98:	f8c4 734c 	str.w	r7, [r4, #844]	; 0x34c
 8003d9c:	f504 7363 	add.w	r3, r4, #908	; 0x38c
class GraphElementGridX : public GraphElementGridBase
 8003da0:	4618      	mov	r0, r3
 8003da2:	ee09 3a90 	vmov	s19, r3
 8003da6:	f7ff ff25 	bl	8003bf4 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8003daa:	4bbe      	ldr	r3, [pc, #760]	; (80040a4 <_ZN19ScreenGraphViewBaseC1Ev+0x3e8>)
 8003dac:	f8c4 338c 	str.w	r3, [r4, #908]	; 0x38c
 8003db0:	f504 7373 	add.w	r3, r4, #972	; 0x3cc
class GraphElementGridY : public GraphElementGridBase
 8003db4:	4618      	mov	r0, r3
 8003db6:	ee08 3a90 	vmov	s17, r3
 8003dba:	f7ff ff1b 	bl	8003bf4 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8003dbe:	f204 430c 	addw	r3, r4, #1036	; 0x40c
 8003dc2:	f8c4 73cc 	str.w	r7, [r4, #972]	; 0x3cc

/**
 * GraphLabelsX will draw labels along the X axis at given intervals. By combining two
 * GraphLabelsX it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsX : public GraphLabelsBase
 8003dc6:	4618      	mov	r0, r3
 8003dc8:	ee0a 3a10 	vmov	s20, r3
 8003dcc:	f7ff ff58 	bl	8003c80 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 8003dd0:	4bb5      	ldr	r3, [pc, #724]	; (80040a8 <_ZN19ScreenGraphViewBaseC1Ev+0x3ec>)
 8003dd2:	f8c4 340c 	str.w	r3, [r4, #1036]	; 0x40c
 8003dd6:	f504 638b 	add.w	r3, r4, #1112	; 0x458

/**
 * GraphLabelsY will draw labels along the Y axis at given intervals. By combining two
 * GraphLabelsY it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsY : public GraphLabelsBase
 8003dda:	4618      	mov	r0, r3
 8003ddc:	ee0a 3a90 	vmov	s21, r3
 8003de0:	f7ff ff4e 	bl	8003c80 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 8003de4:	4bb1      	ldr	r3, [pc, #708]	; (80040ac <_ZN19ScreenGraphViewBaseC1Ev+0x3f0>)
 8003de6:	f8c4 3458 	str.w	r3, [r4, #1112]	; 0x458
        : pobject(pObject), pmemfun(pmemfun_1)
 8003dea:	4bb1      	ldr	r3, [pc, #708]	; (80040b0 <_ZN19ScreenGraphViewBaseC1Ev+0x3f4>)
 8003dec:	f8c4 34a4 	str.w	r3, [r4, #1188]	; 0x4a4
 8003df0:	4bb0      	ldr	r3, [pc, #704]	; (80040b4 <_ZN19ScreenGraphViewBaseC1Ev+0x3f8>)
 8003df2:	f8c4 34ac 	str.w	r3, [r4, #1196]	; 0x4ac
    __background.setPosition(0, 0, 320, 240);
 8003df6:	27f0      	movs	r7, #240	; 0xf0
 8003df8:	f8c4 64b0 	str.w	r6, [r4, #1200]	; 0x4b0
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8003dfc:	f44f 5196 	mov.w	r1, #4800	; 0x12c0
 8003e00:	f204 40b4 	addw	r0, r4, #1204	; 0x4b4
 8003e04:	f8c4 44a8 	str.w	r4, [r4, #1192]	; 0x4a8
 8003e08:	f00b fe96 	bl	800fb38 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 8003e0c:	4632      	mov	r2, r6
 8003e0e:	4631      	mov	r1, r6
 8003e10:	9700      	str	r7, [sp, #0]
 8003e12:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8003e16:	4648      	mov	r0, r9
 8003e18:	f7fe fef7 	bl	8002c0a <_ZN8touchgfx8Drawable11setPositionEssss>
 8003e1c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
    box1.setPosition(0, 0, 320, 240);
 8003e20:	4632      	mov	r2, r6
 8003e22:	4631      	mov	r1, r6
 8003e24:	ee18 0a10 	vmov	r0, s16
 8003e28:	66a3      	str	r3, [r4, #104]	; 0x68
 8003e2a:	9700      	str	r7, [sp, #0]
 8003e2c:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8003e30:	f7fe feeb 	bl	8002c0a <_ZN8touchgfx8Drawable11setPositionEssss>
    buttonCallback(this, &ScreenGraphViewBase::buttonCallbackHandler)
 8003e34:	f104 0a98 	add.w	sl, r4, #152	; 0x98
 8003e38:	f04f 33ff 	mov.w	r3, #4294967295
 8003e3c:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
    button1.setXY(75, 180);
 8003e40:	22b4      	movs	r2, #180	; 0xb4
 8003e42:	214b      	movs	r1, #75	; 0x4b
 8003e44:	4650      	mov	r0, sl
 8003e46:	f7fe fea1 	bl	8002b8c <_ZN8touchgfx8Drawable5setXYEss>
 8003e4a:	f04f 0302 	mov.w	r3, #2
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 8003e4e:	aa05      	add	r2, sp, #20
 8003e50:	a904      	add	r1, sp, #16
 8003e52:	4650      	mov	r0, sl
 8003e54:	f8ad 3014 	strh.w	r3, [sp, #20]
 8003e58:	f8ad 8010 	strh.w	r8, [sp, #16]
 8003e5c:	f00a fc40 	bl	800e6e0 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    button1.setAction(buttonCallback);
 8003e60:	f204 43a4 	addw	r3, r4, #1188	; 0x4a4
    dynamicGraph1.setScale(1000);
 8003e64:	4632      	mov	r2, r6
        action = &callback;
 8003e66:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8003e6a:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8003e6e:	4628      	mov	r0, r5
 8003e70:	f7ff fbac 	bl	80035cc <_ZN8touchgfx16DynamicDataGraph8setScaleEib>
    dynamicGraph1.setXAxisFactor(1);
 8003e74:	4641      	mov	r1, r8
 8003e76:	4628      	mov	r0, r5
 8003e78:	f7ff fbeb 	bl	8003652 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEi>
    dynamicGraph1.setXAxisOffset(0);
 8003e7c:	4631      	mov	r1, r6
 8003e7e:	4628      	mov	r0, r5
 8003e80:	f7ff fc58 	bl	8003734 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEi>
    dynamicGraph1.setPosition(0, 2, 320, 178);
 8003e84:	23b2      	movs	r3, #178	; 0xb2
 8003e86:	4631      	mov	r1, r6
 8003e88:	9300      	str	r3, [sp, #0]
 8003e8a:	2202      	movs	r2, #2
 8003e8c:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8003e90:	4628      	mov	r0, r5
 8003e92:	f7fe feba 	bl	8002c0a <_ZN8touchgfx8Drawable11setPositionEssss>
    dynamicGraph1.setGraphAreaMargin(10, 30, 0, 20);
 8003e96:	2314      	movs	r3, #20
 8003e98:	9300      	str	r3, [sp, #0]
 8003e9a:	221e      	movs	r2, #30
 8003e9c:	4633      	mov	r3, r6
 8003e9e:	210a      	movs	r1, #10
 8003ea0:	4628      	mov	r0, r5
 8003ea2:	f008 fdf9 	bl	800ca98 <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    dynamicGraph1.setGraphAreaPadding(0, 0, 0, 0);
 8003ea6:	4633      	mov	r3, r6
 8003ea8:	4632      	mov	r2, r6
 8003eaa:	4631      	mov	r1, r6
 8003eac:	9600      	str	r6, [sp, #0]
 8003eae:	4628      	mov	r0, r5
 8003eb0:	f008 fcf5 	bl	800c89e <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
    dynamicGraph1.setGraphRangeY(1.0f, 1.5f);
 8003eb4:	eef7 0a08 	vmov.f32	s1, #120	; 0x3fc00000  1.5
 8003eb8:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8003ebc:	4628      	mov	r0, r5
 8003ebe:	f7ff fa67 	bl	8003390 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8003ec2:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8003ec6:	e9d4 10df 	ldrd	r1, r0, [r4, #892]	; 0x37c
 8003eca:	f008 fe97 	bl	800cbfc <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        color = newColor;
 8003ece:	4b7a      	ldr	r3, [pc, #488]	; (80040b8 <_ZN19ScreenGraphViewBaseC1Ev+0x3fc>)
        lineWidth = width;
 8003ed0:	f884 8384 	strb.w	r8, [r4, #900]	; 0x384
        color = newColor;
 8003ed4:	f44f 777a 	mov.w	r7, #1000	; 0x3e8
 8003ed8:	e9c4 37de 	strd	r3, r7, [r4, #888]	; 0x378
        gridInterval = abs(interval);
 8003edc:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8003ee0:	f8c4 3380 	str.w	r3, [r4, #896]	; 0x380
    dynamicGraph1.addGraphElement(dynamicGraph1MinorYAxisGrid);
 8003ee4:	4659      	mov	r1, fp
 8003ee6:	4628      	mov	r0, r5
        majorGrid = &major;
 8003ee8:	edc4 8ae2 	vstr	s17, [r4, #904]	; 0x388
 8003eec:	f008 fce2 	bl	800c8b4 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8003ef0:	463a      	mov	r2, r7
 8003ef2:	e9d4 10ef 	ldrd	r1, r0, [r4, #956]	; 0x3bc
 8003ef6:	f008 fe81 	bl	800cbfc <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 8003efa:	f242 7b10 	movw	fp, #10000	; 0x2710
        color = newColor;
 8003efe:	4b6e      	ldr	r3, [pc, #440]	; (80040b8 <_ZN19ScreenGraphViewBaseC1Ev+0x3fc>)
 8003f00:	f8c4 33b8 	str.w	r3, [r4, #952]	; 0x3b8
    dynamicGraph1.addGraphElement(dynamicGraph1MajorXAxisGrid);
 8003f04:	ee19 1a90 	vmov	r1, s19
 8003f08:	4628      	mov	r0, r5
        dataScale = scale;
 8003f0a:	f8c4 73bc 	str.w	r7, [r4, #956]	; 0x3bc
        gridInterval = abs(interval);
 8003f0e:	f8c4 b3c0 	str.w	fp, [r4, #960]	; 0x3c0
        lineWidth = width;
 8003f12:	f884 83c4 	strb.w	r8, [r4, #964]	; 0x3c4
 8003f16:	f008 fccd 	bl	800c8b4 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8003f1a:	463a      	mov	r2, r7
 8003f1c:	f8d4 13fc 	ldr.w	r1, [r4, #1020]	; 0x3fc
 8003f20:	f8d4 0400 	ldr.w	r0, [r4, #1024]	; 0x400
 8003f24:	f008 fe6a 	bl	800cbfc <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        color = newColor;
 8003f28:	4b63      	ldr	r3, [pc, #396]	; (80040b8 <_ZN19ScreenGraphViewBaseC1Ev+0x3fc>)
 8003f2a:	f8c4 33f8 	str.w	r3, [r4, #1016]	; 0x3f8
    dynamicGraph1.addGraphElement(dynamicGraph1MajorYAxisGrid);
 8003f2e:	ee18 1a90 	vmov	r1, s17
 8003f32:	4628      	mov	r0, r5
        dataScale = scale;
 8003f34:	f8c4 73fc 	str.w	r7, [r4, #1020]	; 0x3fc
        gridInterval = abs(interval);
 8003f38:	f8c4 7400 	str.w	r7, [r4, #1024]	; 0x400
        lineWidth = width;
 8003f3c:	f884 8404 	strb.w	r8, [r4, #1028]	; 0x404
 8003f40:	f008 fcb8 	bl	800c8b4 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 8003f44:	463a      	mov	r2, r7
 8003f46:	f8d4 143c 	ldr.w	r1, [r4, #1084]	; 0x43c
 8003f4a:	f8d4 0440 	ldr.w	r0, [r4, #1088]	; 0x440
 8003f4e:	f008 fe55 	bl	800cbfc <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        color = newColor;
 8003f52:	4b59      	ldr	r3, [pc, #356]	; (80040b8 <_ZN19ScreenGraphViewBaseC1Ev+0x3fc>)
 8003f54:	f8c4 3438 	str.w	r3, [r4, #1080]	; 0x438
    dynamicGraph1.addBottomElement(dynamicGraph1MajorXAxisLabel);
 8003f58:	ee1a 1a10 	vmov	r1, s20
 8003f5c:	4628      	mov	r0, r5
        dataScale = scale;
 8003f5e:	f8c4 743c 	str.w	r7, [r4, #1084]	; 0x43c
        labelInterval = abs(interval);
 8003f62:	f8c4 b440 	str.w	fp, [r4, #1088]	; 0x440
class TypedText
 8003f66:	f8a4 8448 	strh.w	r8, [r4, #1096]	; 0x448
 8003f6a:	f008 fcc7 	bl	800c8fc <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 8003f6e:	463a      	mov	r2, r7
 8003f70:	f8d4 1488 	ldr.w	r1, [r4, #1160]	; 0x488
 8003f74:	f8d4 048c 	ldr.w	r0, [r4, #1164]	; 0x48c
 8003f78:	f008 fe40 	bl	800cbfc <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        labelInterval = abs(interval);
 8003f7c:	2396      	movs	r3, #150	; 0x96
 8003f7e:	f8c4 348c 	str.w	r3, [r4, #1164]	; 0x48c
 8003f82:	4b4d      	ldr	r3, [pc, #308]	; (80040b8 <_ZN19ScreenGraphViewBaseC1Ev+0x3fc>)
 8003f84:	f8a4 6494 	strh.w	r6, [r4, #1172]	; 0x494
    dynamicGraph1.addLeftElement(dynamicGraph1MajorYAxisLabel);
 8003f88:	ee1a 1a90 	vmov	r1, s21
 8003f8c:	f8c4 3484 	str.w	r3, [r4, #1156]	; 0x484
 8003f90:	4628      	mov	r0, r5
        dataScale = scale;
 8003f92:	f8c4 7488 	str.w	r7, [r4, #1160]	; 0x488
        labelDecimals = decimals;
 8003f96:	f8a4 849a 	strh.w	r8, [r4, #1178]	; 0x49a
 8003f9a:	461e      	mov	r6, r3
 8003f9c:	f008 fc9c 	bl	800c8d8 <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 8003fa0:	f241 43b8 	movw	r3, #5304	; 0x14b8
 8003fa4:	f8a4 3348 	strh.w	r3, [r4, #840]	; 0x348
        canvasPainter = &painter;
 8003fa8:	9b03      	ldr	r3, [sp, #12]
 8003faa:	f8c4 3330 	str.w	r3, [r4, #816]	; 0x330
     *
     * @see getLineWidth
     */
    FORCE_INLINE_FUNCTION void setLineWidth(uint8_t width)
    {
        lineWidth = width;
 8003fae:	f04f 0302 	mov.w	r3, #2
    dynamicGraph1.addGraphElement(dynamicGraph1Line1);
 8003fb2:	ee19 1a10 	vmov	r1, s18
 8003fb6:	f8c4 6344 	str.w	r6, [r4, #836]	; 0x344
 8003fba:	f884 3334 	strb.w	r3, [r4, #820]	; 0x334
 8003fbe:	4628      	mov	r0, r5
 8003fc0:	f008 fc78 	bl	800c8b4 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        const float fs = f * (float)scale;
 8003fc4:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 8003fc8:	ed9f 7a3c 	vldr	s14, [pc, #240]	; 80040bc <_ZN19ScreenGraphViewBaseC1Ev+0x400>
 8003fcc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8003fd0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8003fd4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8003fd8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003fdc:	f2c0 867b 	blt.w	8004cd6 <_ZN19ScreenGraphViewBaseC1Ev+0x101a>
            return (int)(fs + 0.5f);
 8003fe0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8003fe4:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003fe8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003fec:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8003ff0:	4628      	mov	r0, r5
 8003ff2:	f008 fe5d 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8003ff6:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 8003ffa:	ed9f 7a31 	vldr	s14, [pc, #196]	; 80040c0 <_ZN19ScreenGraphViewBaseC1Ev+0x404>
 8003ffe:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004002:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004006:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800400a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800400e:	f2c0 8677 	blt.w	8004d00 <_ZN19ScreenGraphViewBaseC1Ev+0x1044>
            return (int)(fs + 0.5f);
 8004012:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004016:	ee77 7a87 	vadd.f32	s15, s15, s14
 800401a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800401e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004022:	4628      	mov	r0, r5
 8004024:	f008 fe44 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004028:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 800402c:	ed9f 7a25 	vldr	s14, [pc, #148]	; 80040c4 <_ZN19ScreenGraphViewBaseC1Ev+0x408>
 8004030:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004034:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004038:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800403c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004040:	f2c0 8673 	blt.w	8004d2a <_ZN19ScreenGraphViewBaseC1Ev+0x106e>
            return (int)(fs + 0.5f);
 8004044:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004048:	ee77 7a87 	vadd.f32	s15, s15, s14
 800404c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004050:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004054:	4628      	mov	r0, r5
 8004056:	f008 fe2b 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800405a:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 800405e:	ed9f 7a1a 	vldr	s14, [pc, #104]	; 80040c8 <_ZN19ScreenGraphViewBaseC1Ev+0x40c>
 8004062:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004066:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800406a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800406e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004072:	f2c0 866f 	blt.w	8004d54 <_ZN19ScreenGraphViewBaseC1Ev+0x1098>
            return (int)(fs + 0.5f);
 8004076:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800407a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800407e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004082:	ee17 1a90 	vmov	r1, s15
 8004086:	e049      	b.n	800411c <_ZN19ScreenGraphViewBaseC1Ev+0x460>
 8004088:	0802349c 	.word	0x0802349c
 800408c:	08024094 	.word	0x08024094
 8004090:	080239b0 	.word	0x080239b0
 8004094:	080232ec 	.word	0x080232ec
 8004098:	08023c88 	.word	0x08023c88
 800409c:	08023900 	.word	0x08023900
 80040a0:	08023214 	.word	0x08023214
 80040a4:	0802315c 	.word	0x0802315c
 80040a8:	08023dbc 	.word	0x08023dbc
 80040ac:	08023e5c 	.word	0x08023e5c
 80040b0:	08023484 	.word	0x08023484
 80040b4:	08003b55 	.word	0x08003b55
 80040b8:	ff1497c5 	.word	0xff1497c5
 80040bc:	3f9081c3 	.word	0x3f9081c3
 80040c0:	3f98826b 	.word	0x3f98826b
 80040c4:	3f9fcf2d 	.word	0x3f9fcf2d
 80040c8:	3f9fbfc6 	.word	0x3f9fbfc6
 80040cc:	3f97505d 	.word	0x3f97505d
 80040d0:	3f8bebaf 	.word	0x3f8bebaf
 80040d4:	3f85df11 	.word	0x3f85df11
 80040d8:	3f8ad528 	.word	0x3f8ad528
 80040dc:	3f99ec81 	.word	0x3f99ec81
 80040e0:	3fac0ad0 	.word	0x3fac0ad0
 80040e4:	3fb83516 	.word	0x3fb83516
 80040e8:	3fb91fb4 	.word	0x3fb91fb4
 80040ec:	3fb05bc0 	.word	0x3fb05bc0
 80040f0:	3fa513e8 	.word	0x3fa513e8
 80040f4:	3f9f30e8 	.word	0x3f9f30e8
 80040f8:	3fa21d00 	.word	0x3fa21d00
 80040fc:	3faa93f3 	.word	0x3faa93f3
 8004100:	3fb0ecea 	.word	0x3fb0ecea
 8004104:	3fae599f 	.word	0x3fae599f
 8004108:	3fa1a858 	.word	0x3fa1a858
 800410c:	3f905bc0 	.word	0x3f905bc0
 8004110:	3f835ec8 	.word	0x3f835ec8
 8004114:	3f817050 	.word	0x3f817050
 8004118:	3f8ae9cd 	.word	0x3f8ae9cd
        return addDataPointScaled(float2scaledY(y));
 800411c:	4628      	mov	r0, r5
 800411e:	f008 fdc7 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004122:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 8004126:	ed1f 7a17 	vldr	s14, [pc, #-92]	; 80040cc <_ZN19ScreenGraphViewBaseC1Ev+0x410>
 800412a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800412e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004132:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004136:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800413a:	f2c0 8620 	blt.w	8004d7e <_ZN19ScreenGraphViewBaseC1Ev+0x10c2>
            return (int)(fs + 0.5f);
 800413e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004142:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004146:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800414a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800414e:	4628      	mov	r0, r5
 8004150:	f008 fdae 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004154:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 8004158:	ed1f 7a23 	vldr	s14, [pc, #-140]	; 80040d0 <_ZN19ScreenGraphViewBaseC1Ev+0x414>
 800415c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004160:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004164:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004168:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800416c:	f2c0 861c 	blt.w	8004da8 <_ZN19ScreenGraphViewBaseC1Ev+0x10ec>
            return (int)(fs + 0.5f);
 8004170:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004174:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004178:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800417c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004180:	4628      	mov	r0, r5
 8004182:	f008 fd95 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004186:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 800418a:	ed1f 7a2e 	vldr	s14, [pc, #-184]	; 80040d4 <_ZN19ScreenGraphViewBaseC1Ev+0x418>
 800418e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004192:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004196:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800419a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800419e:	f2c0 8618 	blt.w	8004dd2 <_ZN19ScreenGraphViewBaseC1Ev+0x1116>
            return (int)(fs + 0.5f);
 80041a2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80041a6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80041aa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80041ae:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80041b2:	4628      	mov	r0, r5
 80041b4:	f008 fd7c 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80041b8:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 80041bc:	ed1f 7a3a 	vldr	s14, [pc, #-232]	; 80040d8 <_ZN19ScreenGraphViewBaseC1Ev+0x41c>
 80041c0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80041c4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80041c8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80041cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80041d0:	f2c0 8614 	blt.w	8004dfc <_ZN19ScreenGraphViewBaseC1Ev+0x1140>
            return (int)(fs + 0.5f);
 80041d4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80041d8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80041dc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80041e0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80041e4:	4628      	mov	r0, r5
 80041e6:	f008 fd63 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80041ea:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 80041ee:	ed1f 7a45 	vldr	s14, [pc, #-276]	; 80040dc <_ZN19ScreenGraphViewBaseC1Ev+0x420>
 80041f2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80041f6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80041fa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80041fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004202:	f2c0 8610 	blt.w	8004e26 <_ZN19ScreenGraphViewBaseC1Ev+0x116a>
            return (int)(fs + 0.5f);
 8004206:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800420a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800420e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004212:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004216:	4628      	mov	r0, r5
 8004218:	f008 fd4a 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800421c:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 8004220:	ed1f 7a51 	vldr	s14, [pc, #-324]	; 80040e0 <_ZN19ScreenGraphViewBaseC1Ev+0x424>
 8004224:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004228:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800422c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004230:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004234:	f2c0 860c 	blt.w	8004e50 <_ZN19ScreenGraphViewBaseC1Ev+0x1194>
            return (int)(fs + 0.5f);
 8004238:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800423c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004240:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004244:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004248:	4628      	mov	r0, r5
 800424a:	f008 fd31 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800424e:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 8004252:	ed1f 7a5c 	vldr	s14, [pc, #-368]	; 80040e4 <_ZN19ScreenGraphViewBaseC1Ev+0x428>
 8004256:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800425a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800425e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004262:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004266:	f2c0 8608 	blt.w	8004e7a <_ZN19ScreenGraphViewBaseC1Ev+0x11be>
            return (int)(fs + 0.5f);
 800426a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800426e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004272:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004276:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800427a:	4628      	mov	r0, r5
 800427c:	f008 fd18 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004280:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 8004284:	ed1f 7a68 	vldr	s14, [pc, #-416]	; 80040e8 <_ZN19ScreenGraphViewBaseC1Ev+0x42c>
 8004288:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800428c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004290:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004294:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004298:	f2c0 8604 	blt.w	8004ea4 <_ZN19ScreenGraphViewBaseC1Ev+0x11e8>
            return (int)(fs + 0.5f);
 800429c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80042a0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80042a4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80042a8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80042ac:	4628      	mov	r0, r5
 80042ae:	f008 fcff 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80042b2:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 80042b6:	ed1f 7a73 	vldr	s14, [pc, #-460]	; 80040ec <_ZN19ScreenGraphViewBaseC1Ev+0x430>
 80042ba:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80042be:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80042c2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80042c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80042ca:	f2c0 8600 	blt.w	8004ece <_ZN19ScreenGraphViewBaseC1Ev+0x1212>
            return (int)(fs + 0.5f);
 80042ce:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80042d2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80042d6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80042da:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80042de:	4628      	mov	r0, r5
 80042e0:	f008 fce6 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80042e4:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 80042e8:	ed1f 7a7f 	vldr	s14, [pc, #-508]	; 80040f0 <_ZN19ScreenGraphViewBaseC1Ev+0x434>
 80042ec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80042f0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80042f4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80042f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80042fc:	f2c0 85fc 	blt.w	8004ef8 <_ZN19ScreenGraphViewBaseC1Ev+0x123c>
            return (int)(fs + 0.5f);
 8004300:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004304:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004308:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800430c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004310:	4628      	mov	r0, r5
 8004312:	f008 fccd 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004316:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 800431a:	ed1f 7a8a 	vldr	s14, [pc, #-552]	; 80040f4 <_ZN19ScreenGraphViewBaseC1Ev+0x438>
 800431e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004322:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004326:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800432a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800432e:	f2c0 85f8 	blt.w	8004f22 <_ZN19ScreenGraphViewBaseC1Ev+0x1266>
            return (int)(fs + 0.5f);
 8004332:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004336:	ee77 7a87 	vadd.f32	s15, s15, s14
 800433a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800433e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004342:	4628      	mov	r0, r5
 8004344:	f008 fcb4 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004348:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 800434c:	ed1f 7a96 	vldr	s14, [pc, #-600]	; 80040f8 <_ZN19ScreenGraphViewBaseC1Ev+0x43c>
 8004350:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004354:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004358:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800435c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004360:	f2c0 85f4 	blt.w	8004f4c <_ZN19ScreenGraphViewBaseC1Ev+0x1290>
            return (int)(fs + 0.5f);
 8004364:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004368:	ee77 7a87 	vadd.f32	s15, s15, s14
 800436c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004370:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004374:	4628      	mov	r0, r5
 8004376:	f008 fc9b 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800437a:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 800437e:	ed1f 7aa1 	vldr	s14, [pc, #-644]	; 80040fc <_ZN19ScreenGraphViewBaseC1Ev+0x440>
 8004382:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004386:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800438a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800438e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004392:	f2c0 85f0 	blt.w	8004f76 <_ZN19ScreenGraphViewBaseC1Ev+0x12ba>
            return (int)(fs + 0.5f);
 8004396:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800439a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800439e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80043a2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80043a6:	4628      	mov	r0, r5
 80043a8:	f008 fc82 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80043ac:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 80043b0:	ed1f 7aad 	vldr	s14, [pc, #-692]	; 8004100 <_ZN19ScreenGraphViewBaseC1Ev+0x444>
 80043b4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80043b8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80043bc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80043c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80043c4:	f2c0 85ec 	blt.w	8004fa0 <_ZN19ScreenGraphViewBaseC1Ev+0x12e4>
            return (int)(fs + 0.5f);
 80043c8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80043cc:	ee77 7a87 	vadd.f32	s15, s15, s14
 80043d0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80043d4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80043d8:	4628      	mov	r0, r5
 80043da:	f008 fc69 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80043de:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 80043e2:	ed1f 7ab8 	vldr	s14, [pc, #-736]	; 8004104 <_ZN19ScreenGraphViewBaseC1Ev+0x448>
 80043e6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80043ea:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80043ee:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80043f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80043f6:	f2c0 85e8 	blt.w	8004fca <_ZN19ScreenGraphViewBaseC1Ev+0x130e>
            return (int)(fs + 0.5f);
 80043fa:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80043fe:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004402:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004406:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800440a:	4628      	mov	r0, r5
 800440c:	f008 fc50 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004410:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 8004414:	ed1f 7ac4 	vldr	s14, [pc, #-784]	; 8004108 <_ZN19ScreenGraphViewBaseC1Ev+0x44c>
 8004418:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800441c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004420:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004424:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004428:	f2c0 85e4 	blt.w	8004ff4 <_ZN19ScreenGraphViewBaseC1Ev+0x1338>
            return (int)(fs + 0.5f);
 800442c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004430:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004434:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004438:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800443c:	4628      	mov	r0, r5
 800443e:	f008 fc37 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004442:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 8004446:	ed1f 7acf 	vldr	s14, [pc, #-828]	; 800410c <_ZN19ScreenGraphViewBaseC1Ev+0x450>
 800444a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800444e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004452:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004456:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800445a:	f2c0 85e0 	blt.w	800501e <_ZN19ScreenGraphViewBaseC1Ev+0x1362>
            return (int)(fs + 0.5f);
 800445e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004462:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004466:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800446a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800446e:	4628      	mov	r0, r5
 8004470:	f008 fc1e 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004474:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 8004478:	ed1f 7adb 	vldr	s14, [pc, #-876]	; 8004110 <_ZN19ScreenGraphViewBaseC1Ev+0x454>
 800447c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004480:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004484:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004488:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800448c:	f2c0 85dc 	blt.w	8005048 <_ZN19ScreenGraphViewBaseC1Ev+0x138c>
            return (int)(fs + 0.5f);
 8004490:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004494:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004498:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800449c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80044a0:	4628      	mov	r0, r5
 80044a2:	f008 fc05 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80044a6:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 80044aa:	ed1f 7ae6 	vldr	s14, [pc, #-920]	; 8004114 <_ZN19ScreenGraphViewBaseC1Ev+0x458>
 80044ae:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80044b2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80044b6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80044ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80044be:	f2c0 85d8 	blt.w	8005072 <_ZN19ScreenGraphViewBaseC1Ev+0x13b6>
            return (int)(fs + 0.5f);
 80044c2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80044c6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80044ca:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80044ce:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80044d2:	4628      	mov	r0, r5
 80044d4:	f008 fbec 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80044d8:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 80044dc:	ed1f 7af2 	vldr	s14, [pc, #-968]	; 8004118 <_ZN19ScreenGraphViewBaseC1Ev+0x45c>
 80044e0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80044e4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80044e8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80044ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80044f0:	f2c0 85d4 	blt.w	800509c <_ZN19ScreenGraphViewBaseC1Ev+0x13e0>
            return (int)(fs + 0.5f);
 80044f4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80044f8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80044fc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004500:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004504:	4628      	mov	r0, r5
 8004506:	f008 fbd3 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800450a:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 800450e:	ed9f 7af4 	vldr	s14, [pc, #976]	; 80048e0 <_ZN19ScreenGraphViewBaseC1Ev+0xc24>
 8004512:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004516:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800451a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800451e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004522:	f2c0 85d0 	blt.w	80050c6 <_ZN19ScreenGraphViewBaseC1Ev+0x140a>
            return (int)(fs + 0.5f);
 8004526:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800452a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800452e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004532:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004536:	4628      	mov	r0, r5
 8004538:	f008 fbba 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800453c:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 8004540:	ed9f 7ae8 	vldr	s14, [pc, #928]	; 80048e4 <_ZN19ScreenGraphViewBaseC1Ev+0xc28>
 8004544:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004548:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800454c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004550:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004554:	f2c0 85cc 	blt.w	80050f0 <_ZN19ScreenGraphViewBaseC1Ev+0x1434>
            return (int)(fs + 0.5f);
 8004558:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800455c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004560:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004564:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004568:	4628      	mov	r0, r5
 800456a:	f008 fba1 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800456e:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 8004572:	ed9f 7add 	vldr	s14, [pc, #884]	; 80048e8 <_ZN19ScreenGraphViewBaseC1Ev+0xc2c>
 8004576:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800457a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800457e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004582:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004586:	f2c0 85c8 	blt.w	800511a <_ZN19ScreenGraphViewBaseC1Ev+0x145e>
            return (int)(fs + 0.5f);
 800458a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800458e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004592:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004596:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800459a:	4628      	mov	r0, r5
 800459c:	f008 fb88 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80045a0:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 80045a4:	ed9f 7ad1 	vldr	s14, [pc, #836]	; 80048ec <_ZN19ScreenGraphViewBaseC1Ev+0xc30>
 80045a8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80045ac:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80045b0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80045b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80045b8:	f2c0 85c4 	blt.w	8005144 <_ZN19ScreenGraphViewBaseC1Ev+0x1488>
            return (int)(fs + 0.5f);
 80045bc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80045c0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80045c4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80045c8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80045cc:	4628      	mov	r0, r5
 80045ce:	f008 fb6f 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80045d2:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 80045d6:	ed9f 7ac6 	vldr	s14, [pc, #792]	; 80048f0 <_ZN19ScreenGraphViewBaseC1Ev+0xc34>
 80045da:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80045de:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80045e2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80045e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80045ea:	f2c0 85c0 	blt.w	800516e <_ZN19ScreenGraphViewBaseC1Ev+0x14b2>
            return (int)(fs + 0.5f);
 80045ee:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80045f2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80045f6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80045fa:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80045fe:	4628      	mov	r0, r5
 8004600:	f008 fb56 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004604:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 8004608:	ed9f 7aba 	vldr	s14, [pc, #744]	; 80048f4 <_ZN19ScreenGraphViewBaseC1Ev+0xc38>
 800460c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004610:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004614:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004618:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800461c:	f2c0 85bc 	blt.w	8005198 <_ZN19ScreenGraphViewBaseC1Ev+0x14dc>
            return (int)(fs + 0.5f);
 8004620:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004624:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004628:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800462c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004630:	4628      	mov	r0, r5
 8004632:	f008 fb3d 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004636:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 800463a:	ed9f 7aaf 	vldr	s14, [pc, #700]	; 80048f8 <_ZN19ScreenGraphViewBaseC1Ev+0xc3c>
 800463e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004642:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004646:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800464a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800464e:	f2c0 85b8 	blt.w	80051c2 <_ZN19ScreenGraphViewBaseC1Ev+0x1506>
            return (int)(fs + 0.5f);
 8004652:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004656:	ee77 7a87 	vadd.f32	s15, s15, s14
 800465a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800465e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004662:	4628      	mov	r0, r5
 8004664:	f008 fb24 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004668:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 800466c:	ed9f 7aa3 	vldr	s14, [pc, #652]	; 80048fc <_ZN19ScreenGraphViewBaseC1Ev+0xc40>
 8004670:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004674:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004678:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800467c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004680:	f2c0 85b4 	blt.w	80051ec <_ZN19ScreenGraphViewBaseC1Ev+0x1530>
            return (int)(fs + 0.5f);
 8004684:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004688:	ee77 7a87 	vadd.f32	s15, s15, s14
 800468c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004690:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004694:	4628      	mov	r0, r5
 8004696:	f008 fb0b 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800469a:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 800469e:	ed9f 7a98 	vldr	s14, [pc, #608]	; 8004900 <_ZN19ScreenGraphViewBaseC1Ev+0xc44>
 80046a2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80046a6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80046aa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80046ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80046b2:	f2c0 85b0 	blt.w	8005216 <_ZN19ScreenGraphViewBaseC1Ev+0x155a>
            return (int)(fs + 0.5f);
 80046b6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80046ba:	ee77 7a87 	vadd.f32	s15, s15, s14
 80046be:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80046c2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80046c6:	4628      	mov	r0, r5
 80046c8:	f008 faf2 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80046cc:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 80046d0:	ed9f 7a8c 	vldr	s14, [pc, #560]	; 8004904 <_ZN19ScreenGraphViewBaseC1Ev+0xc48>
 80046d4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80046d8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80046dc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80046e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80046e4:	f2c0 85ac 	blt.w	8005240 <_ZN19ScreenGraphViewBaseC1Ev+0x1584>
            return (int)(fs + 0.5f);
 80046e8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80046ec:	ee77 7a87 	vadd.f32	s15, s15, s14
 80046f0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80046f4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80046f8:	4628      	mov	r0, r5
 80046fa:	f008 fad9 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80046fe:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 8004702:	ed9f 7a81 	vldr	s14, [pc, #516]	; 8004908 <_ZN19ScreenGraphViewBaseC1Ev+0xc4c>
 8004706:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800470a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800470e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004712:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004716:	f2c0 85a8 	blt.w	800526a <_ZN19ScreenGraphViewBaseC1Ev+0x15ae>
            return (int)(fs + 0.5f);
 800471a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800471e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004722:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004726:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800472a:	4628      	mov	r0, r5
 800472c:	f008 fac0 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004730:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 8004734:	ed9f 7a75 	vldr	s14, [pc, #468]	; 800490c <_ZN19ScreenGraphViewBaseC1Ev+0xc50>
 8004738:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800473c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004740:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004744:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004748:	f2c0 85a4 	blt.w	8005294 <_ZN19ScreenGraphViewBaseC1Ev+0x15d8>
            return (int)(fs + 0.5f);
 800474c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004750:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004754:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004758:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800475c:	4628      	mov	r0, r5
 800475e:	f008 faa7 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004762:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 8004766:	ed9f 7a6a 	vldr	s14, [pc, #424]	; 8004910 <_ZN19ScreenGraphViewBaseC1Ev+0xc54>
 800476a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800476e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004772:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004776:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800477a:	f2c0 85a0 	blt.w	80052be <_ZN19ScreenGraphViewBaseC1Ev+0x1602>
            return (int)(fs + 0.5f);
 800477e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004782:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004786:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800478a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800478e:	4628      	mov	r0, r5
 8004790:	f008 fa8e 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004794:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 8004798:	ed9f 7a5e 	vldr	s14, [pc, #376]	; 8004914 <_ZN19ScreenGraphViewBaseC1Ev+0xc58>
 800479c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80047a0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80047a4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80047a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80047ac:	f2c0 859c 	blt.w	80052e8 <_ZN19ScreenGraphViewBaseC1Ev+0x162c>
            return (int)(fs + 0.5f);
 80047b0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80047b4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80047b8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80047bc:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80047c0:	4628      	mov	r0, r5
 80047c2:	f008 fa75 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80047c6:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 80047ca:	ed9f 7a53 	vldr	s14, [pc, #332]	; 8004918 <_ZN19ScreenGraphViewBaseC1Ev+0xc5c>
 80047ce:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80047d2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80047d6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80047da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80047de:	f2c0 8598 	blt.w	8005312 <_ZN19ScreenGraphViewBaseC1Ev+0x1656>
            return (int)(fs + 0.5f);
 80047e2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80047e6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80047ea:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80047ee:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80047f2:	4628      	mov	r0, r5
 80047f4:	f008 fa5c 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80047f8:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 80047fc:	ed9f 7a47 	vldr	s14, [pc, #284]	; 800491c <_ZN19ScreenGraphViewBaseC1Ev+0xc60>
 8004800:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004804:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004808:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800480c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004810:	f2c0 8594 	blt.w	800533c <_ZN19ScreenGraphViewBaseC1Ev+0x1680>
            return (int)(fs + 0.5f);
 8004814:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004818:	ee77 7a87 	vadd.f32	s15, s15, s14
 800481c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004820:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004824:	4628      	mov	r0, r5
 8004826:	f008 fa43 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800482a:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 800482e:	ed9f 7a3c 	vldr	s14, [pc, #240]	; 8004920 <_ZN19ScreenGraphViewBaseC1Ev+0xc64>
 8004832:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004836:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800483a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800483e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004842:	f2c0 8590 	blt.w	8005366 <_ZN19ScreenGraphViewBaseC1Ev+0x16aa>
            return (int)(fs + 0.5f);
 8004846:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800484a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800484e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004852:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004856:	4628      	mov	r0, r5
 8004858:	f008 fa2a 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800485c:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 8004860:	ed9f 7a30 	vldr	s14, [pc, #192]	; 8004924 <_ZN19ScreenGraphViewBaseC1Ev+0xc68>
 8004864:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004868:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800486c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004870:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004874:	f2c0 858c 	blt.w	8005390 <_ZN19ScreenGraphViewBaseC1Ev+0x16d4>
            return (int)(fs + 0.5f);
 8004878:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800487c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004880:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004884:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004888:	4628      	mov	r0, r5
 800488a:	f008 fa11 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800488e:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 8004892:	ed9f 7a25 	vldr	s14, [pc, #148]	; 8004928 <_ZN19ScreenGraphViewBaseC1Ev+0xc6c>
 8004896:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800489a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800489e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80048a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80048a6:	f2c0 8588 	blt.w	80053ba <_ZN19ScreenGraphViewBaseC1Ev+0x16fe>
            return (int)(fs + 0.5f);
 80048aa:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80048ae:	ee77 7a87 	vadd.f32	s15, s15, s14
 80048b2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80048b6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80048ba:	4628      	mov	r0, r5
 80048bc:	f008 f9f8 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80048c0:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 80048c4:	ed9f 7a19 	vldr	s14, [pc, #100]	; 800492c <_ZN19ScreenGraphViewBaseC1Ev+0xc70>
 80048c8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80048cc:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80048d0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80048d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80048d8:	f2c0 8584 	blt.w	80053e4 <_ZN19ScreenGraphViewBaseC1Ev+0x1728>
 80048dc:	e048      	b.n	8004970 <_ZN19ScreenGraphViewBaseC1Ev+0xcb4>
 80048de:	bf00      	nop
 80048e0:	3f999ed8 	.word	0x3f999ed8
 80048e4:	3fa4e6b0 	.word	0x3fa4e6b0
 80048e8:	3fa72e49 	.word	0x3fa72e49
 80048ec:	3fa16abe 	.word	0x3fa16abe
 80048f0:	3f9a353f 	.word	0x3f9a353f
 80048f4:	3f9926e9 	.word	0x3f9926e9
 80048f8:	3fa18f71 	.word	0x3fa18f71
 80048fc:	3faffe09 	.word	0x3faffe09
 8004900:	3fbc4966 	.word	0x3fbc4966
 8004904:	3fbec376 	.word	0x3fbec376
 8004908:	3fb537a0 	.word	0x3fb537a0
 800490c:	3fa46c22 	.word	0x3fa46c22
 8004910:	3f952c28 	.word	0x3f952c28
 8004914:	3f8ec17f 	.word	0x3f8ec17f
 8004918:	3f927caf 	.word	0x3f927caf
 800491c:	3f9b27bb 	.word	0x3f9b27bb
 8004920:	3fa0bf5d 	.word	0x3fa0bf5d
 8004924:	3f9df40a 	.word	0x3f9df40a
 8004928:	3f93d36f 	.word	0x3f93d36f
 800492c:	3f892e1f 	.word	0x3f892e1f
 8004930:	3f861a61 	.word	0x3f861a61
 8004934:	3f8e8976 	.word	0x3f8e8976
 8004938:	3f9f7b4a 	.word	0x3f9f7b4a
 800493c:	3fb0afa3 	.word	0x3fb0afa3
 8004940:	3fb9bc02 	.word	0x3fb9bc02
 8004944:	3fb740a3 	.word	0x3fb740a3
 8004948:	3facd4aa 	.word	0x3facd4aa
 800494c:	3fa275cd 	.word	0x3fa275cd
 8004950:	3f9f2aae 	.word	0x3f9f2aae
 8004954:	3fa461fa 	.word	0x3fa461fa
 8004958:	3fad16db 	.word	0x3fad16db
 800495c:	3fb147ae 	.word	0x3fb147ae
 8004960:	3fab75b8 	.word	0x3fab75b8
 8004964:	3f9c8c93 	.word	0x3f9c8c93
 8004968:	3f8b98c8 	.word	0x3f8b98c8
 800496c:	3f817732 	.word	0x3f817732
            return (int)(fs + 0.5f);
 8004970:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004974:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004978:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800497c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004980:	4628      	mov	r0, r5
 8004982:	f008 f995 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004986:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 800498a:	ed1f 7a17 	vldr	s14, [pc, #-92]	; 8004930 <_ZN19ScreenGraphViewBaseC1Ev+0xc74>
 800498e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004992:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004996:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800499a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800499e:	f2c0 8536 	blt.w	800540e <_ZN19ScreenGraphViewBaseC1Ev+0x1752>
            return (int)(fs + 0.5f);
 80049a2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80049a6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80049aa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80049ae:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80049b2:	4628      	mov	r0, r5
 80049b4:	f008 f97c 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80049b8:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 80049bc:	ed1f 7a23 	vldr	s14, [pc, #-140]	; 8004934 <_ZN19ScreenGraphViewBaseC1Ev+0xc78>
 80049c0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80049c4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80049c8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80049cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80049d0:	f2c0 8532 	blt.w	8005438 <_ZN19ScreenGraphViewBaseC1Ev+0x177c>
            return (int)(fs + 0.5f);
 80049d4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80049d8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80049dc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80049e0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80049e4:	4628      	mov	r0, r5
 80049e6:	f008 f963 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80049ea:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 80049ee:	ed1f 7a2e 	vldr	s14, [pc, #-184]	; 8004938 <_ZN19ScreenGraphViewBaseC1Ev+0xc7c>
 80049f2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80049f6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80049fa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80049fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004a02:	f2c0 852e 	blt.w	8005462 <_ZN19ScreenGraphViewBaseC1Ev+0x17a6>
            return (int)(fs + 0.5f);
 8004a06:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004a0a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004a0e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004a12:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004a16:	4628      	mov	r0, r5
 8004a18:	f008 f94a 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004a1c:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 8004a20:	ed1f 7a3a 	vldr	s14, [pc, #-232]	; 800493c <_ZN19ScreenGraphViewBaseC1Ev+0xc80>
 8004a24:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004a28:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004a2c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004a30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004a34:	f2c0 852a 	blt.w	800548c <_ZN19ScreenGraphViewBaseC1Ev+0x17d0>
            return (int)(fs + 0.5f);
 8004a38:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004a3c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004a40:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004a44:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004a48:	4628      	mov	r0, r5
 8004a4a:	f008 f931 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004a4e:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 8004a52:	ed1f 7a45 	vldr	s14, [pc, #-276]	; 8004940 <_ZN19ScreenGraphViewBaseC1Ev+0xc84>
 8004a56:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004a5a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004a5e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004a62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004a66:	f2c0 8526 	blt.w	80054b6 <_ZN19ScreenGraphViewBaseC1Ev+0x17fa>
            return (int)(fs + 0.5f);
 8004a6a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004a6e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004a72:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004a76:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004a7a:	4628      	mov	r0, r5
 8004a7c:	f008 f918 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004a80:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 8004a84:	ed1f 7a51 	vldr	s14, [pc, #-324]	; 8004944 <_ZN19ScreenGraphViewBaseC1Ev+0xc88>
 8004a88:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004a8c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004a90:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004a94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004a98:	f2c0 8522 	blt.w	80054e0 <_ZN19ScreenGraphViewBaseC1Ev+0x1824>
            return (int)(fs + 0.5f);
 8004a9c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004aa0:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004aa4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004aa8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004aac:	4628      	mov	r0, r5
 8004aae:	f008 f8ff 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004ab2:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 8004ab6:	ed1f 7a5c 	vldr	s14, [pc, #-368]	; 8004948 <_ZN19ScreenGraphViewBaseC1Ev+0xc8c>
 8004aba:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004abe:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004ac2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004ac6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004aca:	f2c0 851e 	blt.w	800550a <_ZN19ScreenGraphViewBaseC1Ev+0x184e>
            return (int)(fs + 0.5f);
 8004ace:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004ad2:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004ad6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004ada:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004ade:	4628      	mov	r0, r5
 8004ae0:	f008 f8e6 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004ae4:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 8004ae8:	ed1f 7a68 	vldr	s14, [pc, #-416]	; 800494c <_ZN19ScreenGraphViewBaseC1Ev+0xc90>
 8004aec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004af0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004af4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004af8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004afc:	f2c0 851a 	blt.w	8005534 <_ZN19ScreenGraphViewBaseC1Ev+0x1878>
            return (int)(fs + 0.5f);
 8004b00:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004b04:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004b08:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004b0c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004b10:	4628      	mov	r0, r5
 8004b12:	f008 f8cd 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004b16:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 8004b1a:	ed1f 7a73 	vldr	s14, [pc, #-460]	; 8004950 <_ZN19ScreenGraphViewBaseC1Ev+0xc94>
 8004b1e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004b22:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004b26:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004b2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004b2e:	f2c0 8516 	blt.w	800555e <_ZN19ScreenGraphViewBaseC1Ev+0x18a2>
            return (int)(fs + 0.5f);
 8004b32:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004b36:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004b3a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004b3e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004b42:	4628      	mov	r0, r5
 8004b44:	f008 f8b4 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004b48:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 8004b4c:	ed1f 7a7f 	vldr	s14, [pc, #-508]	; 8004954 <_ZN19ScreenGraphViewBaseC1Ev+0xc98>
 8004b50:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004b54:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004b58:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004b5c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004b60:	f2c0 8512 	blt.w	8005588 <_ZN19ScreenGraphViewBaseC1Ev+0x18cc>
            return (int)(fs + 0.5f);
 8004b64:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004b68:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004b6c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004b70:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004b74:	4628      	mov	r0, r5
 8004b76:	f008 f89b 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004b7a:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 8004b7e:	ed1f 7a8a 	vldr	s14, [pc, #-552]	; 8004958 <_ZN19ScreenGraphViewBaseC1Ev+0xc9c>
 8004b82:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004b86:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004b8a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004b8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004b92:	f2c0 850e 	blt.w	80055b2 <_ZN19ScreenGraphViewBaseC1Ev+0x18f6>
            return (int)(fs + 0.5f);
 8004b96:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004b9a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004b9e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004ba2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004ba6:	4628      	mov	r0, r5
 8004ba8:	f008 f882 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004bac:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 8004bb0:	ed1f 7a96 	vldr	s14, [pc, #-600]	; 800495c <_ZN19ScreenGraphViewBaseC1Ev+0xca0>
 8004bb4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004bb8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004bbc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004bc0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004bc4:	f2c0 850a 	blt.w	80055dc <_ZN19ScreenGraphViewBaseC1Ev+0x1920>
            return (int)(fs + 0.5f);
 8004bc8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004bcc:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004bd0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004bd4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004bd8:	4628      	mov	r0, r5
 8004bda:	f008 f869 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004bde:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 8004be2:	ed1f 7aa1 	vldr	s14, [pc, #-644]	; 8004960 <_ZN19ScreenGraphViewBaseC1Ev+0xca4>
 8004be6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004bea:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004bee:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004bf2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004bf6:	f2c0 8506 	blt.w	8005606 <_ZN19ScreenGraphViewBaseC1Ev+0x194a>
            return (int)(fs + 0.5f);
 8004bfa:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004bfe:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004c02:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004c06:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004c0a:	4628      	mov	r0, r5
 8004c0c:	f008 f850 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004c10:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 8004c14:	ed1f 7aad 	vldr	s14, [pc, #-692]	; 8004964 <_ZN19ScreenGraphViewBaseC1Ev+0xca8>
 8004c18:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004c1c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004c20:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004c24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004c28:	f2c0 8502 	blt.w	8005630 <_ZN19ScreenGraphViewBaseC1Ev+0x1974>
            return (int)(fs + 0.5f);
 8004c2c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004c30:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004c34:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004c38:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004c3c:	4628      	mov	r0, r5
 8004c3e:	f008 f837 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004c42:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 8004c46:	ed1f 7ab8 	vldr	s14, [pc, #-736]	; 8004968 <_ZN19ScreenGraphViewBaseC1Ev+0xcac>
 8004c4a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004c4e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004c52:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004c56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004c5a:	f2c0 84fe 	blt.w	800565a <_ZN19ScreenGraphViewBaseC1Ev+0x199e>
            return (int)(fs + 0.5f);
 8004c5e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004c62:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004c66:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004c6a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004c6e:	4628      	mov	r0, r5
 8004c70:	f008 f81e 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004c74:	edd4 7a40 	vldr	s15, [r4, #256]	; 0x100
 8004c78:	ed1f 7ac4 	vldr	s14, [pc, #-784]	; 800496c <_ZN19ScreenGraphViewBaseC1Ev+0xcb0>
 8004c7c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004c80:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004c84:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004c88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004c8c:	f2c0 84fa 	blt.w	8005684 <_ZN19ScreenGraphViewBaseC1Ev+0x19c8>
            return (int)(fs + 0.5f);
 8004c90:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004c94:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004c98:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004c9c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004ca0:	4628      	mov	r0, r5
 8004ca2:	f008 f805 	bl	800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
 8004ca6:	1d20      	adds	r0, r4, #4
 8004ca8:	4649      	mov	r1, r9
 8004caa:	9003      	str	r0, [sp, #12]
 8004cac:	f006 f926 	bl	800aefc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004cb0:	ee18 1a10 	vmov	r1, s16
 8004cb4:	9803      	ldr	r0, [sp, #12]
 8004cb6:	f006 f921 	bl	800aefc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004cba:	9803      	ldr	r0, [sp, #12]
 8004cbc:	4651      	mov	r1, sl
 8004cbe:	f006 f91d 	bl	800aefc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004cc2:	9803      	ldr	r0, [sp, #12]
 8004cc4:	4629      	mov	r1, r5
 8004cc6:	f006 f919 	bl	800aefc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004cca:	4620      	mov	r0, r4
 8004ccc:	b007      	add	sp, #28
 8004cce:	ecbd 8b06 	vpop	{d8-d10}
 8004cd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8004cd6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8004cda:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8004cde:	ee17 3a10 	vmov	r3, s14
 8004ce2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8004ce6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8004cea:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8004cee:	1e59      	subs	r1, r3, #1
 8004cf0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004cf4:	ee17 3a90 	vmov	r3, s15
 8004cf8:	440b      	add	r3, r1
 8004cfa:	4619      	mov	r1, r3
 8004cfc:	f7ff b978 	b.w	8003ff0 <_ZN19ScreenGraphViewBaseC1Ev+0x334>
 8004d00:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8004d04:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8004d08:	ee17 3a10 	vmov	r3, s14
 8004d0c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8004d10:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8004d14:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8004d18:	1e59      	subs	r1, r3, #1
 8004d1a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004d1e:	ee17 3a90 	vmov	r3, s15
 8004d22:	440b      	add	r3, r1
 8004d24:	4619      	mov	r1, r3
 8004d26:	f7ff b97c 	b.w	8004022 <_ZN19ScreenGraphViewBaseC1Ev+0x366>
 8004d2a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8004d2e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8004d32:	ee17 3a10 	vmov	r3, s14
 8004d36:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8004d3a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8004d3e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8004d42:	1e59      	subs	r1, r3, #1
 8004d44:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004d48:	ee17 3a90 	vmov	r3, s15
 8004d4c:	440b      	add	r3, r1
 8004d4e:	4619      	mov	r1, r3
 8004d50:	f7ff b980 	b.w	8004054 <_ZN19ScreenGraphViewBaseC1Ev+0x398>
 8004d54:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8004d58:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8004d5c:	ee17 3a10 	vmov	r3, s14
 8004d60:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8004d64:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8004d68:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8004d6c:	1e59      	subs	r1, r3, #1
 8004d6e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004d72:	ee17 3a90 	vmov	r3, s15
 8004d76:	440b      	add	r3, r1
 8004d78:	4619      	mov	r1, r3
 8004d7a:	f7ff b9cf 	b.w	800411c <_ZN19ScreenGraphViewBaseC1Ev+0x460>
 8004d7e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8004d82:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8004d86:	ee17 3a10 	vmov	r3, s14
 8004d8a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8004d8e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8004d92:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8004d96:	1e59      	subs	r1, r3, #1
 8004d98:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004d9c:	ee17 3a90 	vmov	r3, s15
 8004da0:	440b      	add	r3, r1
 8004da2:	4619      	mov	r1, r3
 8004da4:	f7ff b9d3 	b.w	800414e <_ZN19ScreenGraphViewBaseC1Ev+0x492>
 8004da8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8004dac:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8004db0:	ee17 3a10 	vmov	r3, s14
 8004db4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8004db8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8004dbc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8004dc0:	1e59      	subs	r1, r3, #1
 8004dc2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004dc6:	ee17 3a90 	vmov	r3, s15
 8004dca:	440b      	add	r3, r1
 8004dcc:	4619      	mov	r1, r3
 8004dce:	f7ff b9d7 	b.w	8004180 <_ZN19ScreenGraphViewBaseC1Ev+0x4c4>
 8004dd2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8004dd6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8004dda:	ee17 3a10 	vmov	r3, s14
 8004dde:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8004de2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8004de6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8004dea:	1e59      	subs	r1, r3, #1
 8004dec:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004df0:	ee17 3a90 	vmov	r3, s15
 8004df4:	440b      	add	r3, r1
 8004df6:	4619      	mov	r1, r3
 8004df8:	f7ff b9db 	b.w	80041b2 <_ZN19ScreenGraphViewBaseC1Ev+0x4f6>
 8004dfc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8004e00:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8004e04:	ee17 3a10 	vmov	r3, s14
 8004e08:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8004e0c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8004e10:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8004e14:	1e59      	subs	r1, r3, #1
 8004e16:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004e1a:	ee17 3a90 	vmov	r3, s15
 8004e1e:	440b      	add	r3, r1
 8004e20:	4619      	mov	r1, r3
 8004e22:	f7ff b9df 	b.w	80041e4 <_ZN19ScreenGraphViewBaseC1Ev+0x528>
 8004e26:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8004e2a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8004e2e:	ee17 3a10 	vmov	r3, s14
 8004e32:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8004e36:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8004e3a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8004e3e:	1e59      	subs	r1, r3, #1
 8004e40:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004e44:	ee17 3a90 	vmov	r3, s15
 8004e48:	440b      	add	r3, r1
 8004e4a:	4619      	mov	r1, r3
 8004e4c:	f7ff b9e3 	b.w	8004216 <_ZN19ScreenGraphViewBaseC1Ev+0x55a>
 8004e50:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8004e54:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8004e58:	ee17 3a10 	vmov	r3, s14
 8004e5c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8004e60:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8004e64:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8004e68:	1e59      	subs	r1, r3, #1
 8004e6a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004e6e:	ee17 3a90 	vmov	r3, s15
 8004e72:	440b      	add	r3, r1
 8004e74:	4619      	mov	r1, r3
 8004e76:	f7ff b9e7 	b.w	8004248 <_ZN19ScreenGraphViewBaseC1Ev+0x58c>
 8004e7a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8004e7e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8004e82:	ee17 3a10 	vmov	r3, s14
 8004e86:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8004e8a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8004e8e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8004e92:	1e59      	subs	r1, r3, #1
 8004e94:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004e98:	ee17 3a90 	vmov	r3, s15
 8004e9c:	440b      	add	r3, r1
 8004e9e:	4619      	mov	r1, r3
 8004ea0:	f7ff b9eb 	b.w	800427a <_ZN19ScreenGraphViewBaseC1Ev+0x5be>
 8004ea4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8004ea8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8004eac:	ee17 3a10 	vmov	r3, s14
 8004eb0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8004eb4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8004eb8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8004ebc:	1e59      	subs	r1, r3, #1
 8004ebe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004ec2:	ee17 3a90 	vmov	r3, s15
 8004ec6:	440b      	add	r3, r1
 8004ec8:	4619      	mov	r1, r3
 8004eca:	f7ff b9ef 	b.w	80042ac <_ZN19ScreenGraphViewBaseC1Ev+0x5f0>
 8004ece:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8004ed2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8004ed6:	ee17 3a10 	vmov	r3, s14
 8004eda:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8004ede:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8004ee2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8004ee6:	1e59      	subs	r1, r3, #1
 8004ee8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004eec:	ee17 3a90 	vmov	r3, s15
 8004ef0:	440b      	add	r3, r1
 8004ef2:	4619      	mov	r1, r3
 8004ef4:	f7ff b9f3 	b.w	80042de <_ZN19ScreenGraphViewBaseC1Ev+0x622>
 8004ef8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8004efc:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8004f00:	ee17 3a10 	vmov	r3, s14
 8004f04:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8004f08:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8004f0c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8004f10:	1e59      	subs	r1, r3, #1
 8004f12:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004f16:	ee17 3a90 	vmov	r3, s15
 8004f1a:	440b      	add	r3, r1
 8004f1c:	4619      	mov	r1, r3
 8004f1e:	f7ff b9f7 	b.w	8004310 <_ZN19ScreenGraphViewBaseC1Ev+0x654>
 8004f22:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8004f26:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8004f2a:	ee17 3a10 	vmov	r3, s14
 8004f2e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8004f32:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8004f36:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8004f3a:	1e59      	subs	r1, r3, #1
 8004f3c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004f40:	ee17 3a90 	vmov	r3, s15
 8004f44:	440b      	add	r3, r1
 8004f46:	4619      	mov	r1, r3
 8004f48:	f7ff b9fb 	b.w	8004342 <_ZN19ScreenGraphViewBaseC1Ev+0x686>
 8004f4c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8004f50:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8004f54:	ee17 3a10 	vmov	r3, s14
 8004f58:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8004f5c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8004f60:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8004f64:	1e59      	subs	r1, r3, #1
 8004f66:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004f6a:	ee17 3a90 	vmov	r3, s15
 8004f6e:	440b      	add	r3, r1
 8004f70:	4619      	mov	r1, r3
 8004f72:	f7ff b9ff 	b.w	8004374 <_ZN19ScreenGraphViewBaseC1Ev+0x6b8>
 8004f76:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8004f7a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8004f7e:	ee17 3a10 	vmov	r3, s14
 8004f82:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8004f86:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8004f8a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8004f8e:	1e59      	subs	r1, r3, #1
 8004f90:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004f94:	ee17 3a90 	vmov	r3, s15
 8004f98:	440b      	add	r3, r1
 8004f9a:	4619      	mov	r1, r3
 8004f9c:	f7ff ba03 	b.w	80043a6 <_ZN19ScreenGraphViewBaseC1Ev+0x6ea>
 8004fa0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8004fa4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8004fa8:	ee17 3a10 	vmov	r3, s14
 8004fac:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8004fb0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8004fb4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8004fb8:	1e59      	subs	r1, r3, #1
 8004fba:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004fbe:	ee17 3a90 	vmov	r3, s15
 8004fc2:	440b      	add	r3, r1
 8004fc4:	4619      	mov	r1, r3
 8004fc6:	f7ff ba07 	b.w	80043d8 <_ZN19ScreenGraphViewBaseC1Ev+0x71c>
 8004fca:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8004fce:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8004fd2:	ee17 3a10 	vmov	r3, s14
 8004fd6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8004fda:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8004fde:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8004fe2:	1e59      	subs	r1, r3, #1
 8004fe4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004fe8:	ee17 3a90 	vmov	r3, s15
 8004fec:	440b      	add	r3, r1
 8004fee:	4619      	mov	r1, r3
 8004ff0:	f7ff ba0b 	b.w	800440a <_ZN19ScreenGraphViewBaseC1Ev+0x74e>
 8004ff4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8004ff8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8004ffc:	ee17 3a10 	vmov	r3, s14
 8005000:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005004:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005008:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800500c:	1e59      	subs	r1, r3, #1
 800500e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005012:	ee17 3a90 	vmov	r3, s15
 8005016:	440b      	add	r3, r1
 8005018:	4619      	mov	r1, r3
 800501a:	f7ff ba0f 	b.w	800443c <_ZN19ScreenGraphViewBaseC1Ev+0x780>
 800501e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005022:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005026:	ee17 3a10 	vmov	r3, s14
 800502a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800502e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005032:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005036:	1e59      	subs	r1, r3, #1
 8005038:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800503c:	ee17 3a90 	vmov	r3, s15
 8005040:	440b      	add	r3, r1
 8005042:	4619      	mov	r1, r3
 8005044:	f7ff ba13 	b.w	800446e <_ZN19ScreenGraphViewBaseC1Ev+0x7b2>
 8005048:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800504c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005050:	ee17 3a10 	vmov	r3, s14
 8005054:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005058:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800505c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005060:	1e59      	subs	r1, r3, #1
 8005062:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005066:	ee17 3a90 	vmov	r3, s15
 800506a:	440b      	add	r3, r1
 800506c:	4619      	mov	r1, r3
 800506e:	f7ff ba17 	b.w	80044a0 <_ZN19ScreenGraphViewBaseC1Ev+0x7e4>
 8005072:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005076:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800507a:	ee17 3a10 	vmov	r3, s14
 800507e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005082:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005086:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800508a:	1e59      	subs	r1, r3, #1
 800508c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005090:	ee17 3a90 	vmov	r3, s15
 8005094:	440b      	add	r3, r1
 8005096:	4619      	mov	r1, r3
 8005098:	f7ff ba1b 	b.w	80044d2 <_ZN19ScreenGraphViewBaseC1Ev+0x816>
 800509c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80050a0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80050a4:	ee17 3a10 	vmov	r3, s14
 80050a8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80050ac:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80050b0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80050b4:	1e59      	subs	r1, r3, #1
 80050b6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80050ba:	ee17 3a90 	vmov	r3, s15
 80050be:	440b      	add	r3, r1
 80050c0:	4619      	mov	r1, r3
 80050c2:	f7ff ba1f 	b.w	8004504 <_ZN19ScreenGraphViewBaseC1Ev+0x848>
 80050c6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80050ca:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80050ce:	ee17 3a10 	vmov	r3, s14
 80050d2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80050d6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80050da:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80050de:	1e59      	subs	r1, r3, #1
 80050e0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80050e4:	ee17 3a90 	vmov	r3, s15
 80050e8:	440b      	add	r3, r1
 80050ea:	4619      	mov	r1, r3
 80050ec:	f7ff ba23 	b.w	8004536 <_ZN19ScreenGraphViewBaseC1Ev+0x87a>
 80050f0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80050f4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80050f8:	ee17 3a10 	vmov	r3, s14
 80050fc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005100:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005104:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005108:	1e59      	subs	r1, r3, #1
 800510a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800510e:	ee17 3a90 	vmov	r3, s15
 8005112:	440b      	add	r3, r1
 8005114:	4619      	mov	r1, r3
 8005116:	f7ff ba27 	b.w	8004568 <_ZN19ScreenGraphViewBaseC1Ev+0x8ac>
 800511a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800511e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005122:	ee17 3a10 	vmov	r3, s14
 8005126:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800512a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800512e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005132:	1e59      	subs	r1, r3, #1
 8005134:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005138:	ee17 3a90 	vmov	r3, s15
 800513c:	440b      	add	r3, r1
 800513e:	4619      	mov	r1, r3
 8005140:	f7ff ba2b 	b.w	800459a <_ZN19ScreenGraphViewBaseC1Ev+0x8de>
 8005144:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005148:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800514c:	ee17 3a10 	vmov	r3, s14
 8005150:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005154:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005158:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800515c:	1e59      	subs	r1, r3, #1
 800515e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005162:	ee17 3a90 	vmov	r3, s15
 8005166:	440b      	add	r3, r1
 8005168:	4619      	mov	r1, r3
 800516a:	f7ff ba2f 	b.w	80045cc <_ZN19ScreenGraphViewBaseC1Ev+0x910>
 800516e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005172:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005176:	ee17 3a10 	vmov	r3, s14
 800517a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800517e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005182:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005186:	1e59      	subs	r1, r3, #1
 8005188:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800518c:	ee17 3a90 	vmov	r3, s15
 8005190:	440b      	add	r3, r1
 8005192:	4619      	mov	r1, r3
 8005194:	f7ff ba33 	b.w	80045fe <_ZN19ScreenGraphViewBaseC1Ev+0x942>
 8005198:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800519c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80051a0:	ee17 3a10 	vmov	r3, s14
 80051a4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80051a8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80051ac:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80051b0:	1e59      	subs	r1, r3, #1
 80051b2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80051b6:	ee17 3a90 	vmov	r3, s15
 80051ba:	440b      	add	r3, r1
 80051bc:	4619      	mov	r1, r3
 80051be:	f7ff ba37 	b.w	8004630 <_ZN19ScreenGraphViewBaseC1Ev+0x974>
 80051c2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80051c6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80051ca:	ee17 3a10 	vmov	r3, s14
 80051ce:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80051d2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80051d6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80051da:	1e59      	subs	r1, r3, #1
 80051dc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80051e0:	ee17 3a90 	vmov	r3, s15
 80051e4:	440b      	add	r3, r1
 80051e6:	4619      	mov	r1, r3
 80051e8:	f7ff ba3b 	b.w	8004662 <_ZN19ScreenGraphViewBaseC1Ev+0x9a6>
 80051ec:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80051f0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80051f4:	ee17 3a10 	vmov	r3, s14
 80051f8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80051fc:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005200:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005204:	1e59      	subs	r1, r3, #1
 8005206:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800520a:	ee17 3a90 	vmov	r3, s15
 800520e:	440b      	add	r3, r1
 8005210:	4619      	mov	r1, r3
 8005212:	f7ff ba3f 	b.w	8004694 <_ZN19ScreenGraphViewBaseC1Ev+0x9d8>
 8005216:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800521a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800521e:	ee17 3a10 	vmov	r3, s14
 8005222:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005226:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800522a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800522e:	1e59      	subs	r1, r3, #1
 8005230:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005234:	ee17 3a90 	vmov	r3, s15
 8005238:	440b      	add	r3, r1
 800523a:	4619      	mov	r1, r3
 800523c:	f7ff ba43 	b.w	80046c6 <_ZN19ScreenGraphViewBaseC1Ev+0xa0a>
 8005240:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005244:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005248:	ee17 3a10 	vmov	r3, s14
 800524c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005250:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005254:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005258:	1e59      	subs	r1, r3, #1
 800525a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800525e:	ee17 3a90 	vmov	r3, s15
 8005262:	440b      	add	r3, r1
 8005264:	4619      	mov	r1, r3
 8005266:	f7ff ba47 	b.w	80046f8 <_ZN19ScreenGraphViewBaseC1Ev+0xa3c>
 800526a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800526e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005272:	ee17 3a10 	vmov	r3, s14
 8005276:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800527a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800527e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005282:	1e59      	subs	r1, r3, #1
 8005284:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005288:	ee17 3a90 	vmov	r3, s15
 800528c:	440b      	add	r3, r1
 800528e:	4619      	mov	r1, r3
 8005290:	f7ff ba4b 	b.w	800472a <_ZN19ScreenGraphViewBaseC1Ev+0xa6e>
 8005294:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005298:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800529c:	ee17 3a10 	vmov	r3, s14
 80052a0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80052a4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80052a8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80052ac:	1e59      	subs	r1, r3, #1
 80052ae:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80052b2:	ee17 3a90 	vmov	r3, s15
 80052b6:	440b      	add	r3, r1
 80052b8:	4619      	mov	r1, r3
 80052ba:	f7ff ba4f 	b.w	800475c <_ZN19ScreenGraphViewBaseC1Ev+0xaa0>
 80052be:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80052c2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80052c6:	ee17 3a10 	vmov	r3, s14
 80052ca:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80052ce:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80052d2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80052d6:	1e59      	subs	r1, r3, #1
 80052d8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80052dc:	ee17 3a90 	vmov	r3, s15
 80052e0:	440b      	add	r3, r1
 80052e2:	4619      	mov	r1, r3
 80052e4:	f7ff ba53 	b.w	800478e <_ZN19ScreenGraphViewBaseC1Ev+0xad2>
 80052e8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80052ec:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80052f0:	ee17 3a10 	vmov	r3, s14
 80052f4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80052f8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80052fc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005300:	1e59      	subs	r1, r3, #1
 8005302:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005306:	ee17 3a90 	vmov	r3, s15
 800530a:	440b      	add	r3, r1
 800530c:	4619      	mov	r1, r3
 800530e:	f7ff ba57 	b.w	80047c0 <_ZN19ScreenGraphViewBaseC1Ev+0xb04>
 8005312:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005316:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800531a:	ee17 3a10 	vmov	r3, s14
 800531e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005322:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005326:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800532a:	1e59      	subs	r1, r3, #1
 800532c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005330:	ee17 3a90 	vmov	r3, s15
 8005334:	440b      	add	r3, r1
 8005336:	4619      	mov	r1, r3
 8005338:	f7ff ba5b 	b.w	80047f2 <_ZN19ScreenGraphViewBaseC1Ev+0xb36>
 800533c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005340:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005344:	ee17 3a10 	vmov	r3, s14
 8005348:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800534c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005350:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005354:	1e59      	subs	r1, r3, #1
 8005356:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800535a:	ee17 3a90 	vmov	r3, s15
 800535e:	440b      	add	r3, r1
 8005360:	4619      	mov	r1, r3
 8005362:	f7ff ba5f 	b.w	8004824 <_ZN19ScreenGraphViewBaseC1Ev+0xb68>
 8005366:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800536a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800536e:	ee17 3a10 	vmov	r3, s14
 8005372:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005376:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800537a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800537e:	1e59      	subs	r1, r3, #1
 8005380:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005384:	ee17 3a90 	vmov	r3, s15
 8005388:	440b      	add	r3, r1
 800538a:	4619      	mov	r1, r3
 800538c:	f7ff ba63 	b.w	8004856 <_ZN19ScreenGraphViewBaseC1Ev+0xb9a>
 8005390:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005394:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005398:	ee17 3a10 	vmov	r3, s14
 800539c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80053a0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80053a4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80053a8:	1e59      	subs	r1, r3, #1
 80053aa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80053ae:	ee17 3a90 	vmov	r3, s15
 80053b2:	440b      	add	r3, r1
 80053b4:	4619      	mov	r1, r3
 80053b6:	f7ff ba67 	b.w	8004888 <_ZN19ScreenGraphViewBaseC1Ev+0xbcc>
 80053ba:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80053be:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80053c2:	ee17 3a10 	vmov	r3, s14
 80053c6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80053ca:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80053ce:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80053d2:	1e59      	subs	r1, r3, #1
 80053d4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80053d8:	ee17 3a90 	vmov	r3, s15
 80053dc:	440b      	add	r3, r1
 80053de:	4619      	mov	r1, r3
 80053e0:	f7ff ba6b 	b.w	80048ba <_ZN19ScreenGraphViewBaseC1Ev+0xbfe>
 80053e4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80053e8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80053ec:	ee17 3a10 	vmov	r3, s14
 80053f0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80053f4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80053f8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80053fc:	1e59      	subs	r1, r3, #1
 80053fe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005402:	ee17 3a90 	vmov	r3, s15
 8005406:	440b      	add	r3, r1
 8005408:	4619      	mov	r1, r3
 800540a:	f7ff bab9 	b.w	8004980 <_ZN19ScreenGraphViewBaseC1Ev+0xcc4>
 800540e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005412:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005416:	ee17 3a10 	vmov	r3, s14
 800541a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800541e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005422:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005426:	1e59      	subs	r1, r3, #1
 8005428:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800542c:	ee17 3a90 	vmov	r3, s15
 8005430:	440b      	add	r3, r1
 8005432:	4619      	mov	r1, r3
 8005434:	f7ff babd 	b.w	80049b2 <_ZN19ScreenGraphViewBaseC1Ev+0xcf6>
 8005438:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800543c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005440:	ee17 3a10 	vmov	r3, s14
 8005444:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005448:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800544c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005450:	1e59      	subs	r1, r3, #1
 8005452:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005456:	ee17 3a90 	vmov	r3, s15
 800545a:	440b      	add	r3, r1
 800545c:	4619      	mov	r1, r3
 800545e:	f7ff bac1 	b.w	80049e4 <_ZN19ScreenGraphViewBaseC1Ev+0xd28>
 8005462:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005466:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800546a:	ee17 3a10 	vmov	r3, s14
 800546e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005472:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005476:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800547a:	1e59      	subs	r1, r3, #1
 800547c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005480:	ee17 3a90 	vmov	r3, s15
 8005484:	440b      	add	r3, r1
 8005486:	4619      	mov	r1, r3
 8005488:	f7ff bac5 	b.w	8004a16 <_ZN19ScreenGraphViewBaseC1Ev+0xd5a>
 800548c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005490:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005494:	ee17 3a10 	vmov	r3, s14
 8005498:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800549c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80054a0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80054a4:	1e59      	subs	r1, r3, #1
 80054a6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80054aa:	ee17 3a90 	vmov	r3, s15
 80054ae:	440b      	add	r3, r1
 80054b0:	4619      	mov	r1, r3
 80054b2:	f7ff bac9 	b.w	8004a48 <_ZN19ScreenGraphViewBaseC1Ev+0xd8c>
 80054b6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80054ba:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80054be:	ee17 3a10 	vmov	r3, s14
 80054c2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80054c6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80054ca:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80054ce:	1e59      	subs	r1, r3, #1
 80054d0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80054d4:	ee17 3a90 	vmov	r3, s15
 80054d8:	440b      	add	r3, r1
 80054da:	4619      	mov	r1, r3
 80054dc:	f7ff bacd 	b.w	8004a7a <_ZN19ScreenGraphViewBaseC1Ev+0xdbe>
 80054e0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80054e4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80054e8:	ee17 3a10 	vmov	r3, s14
 80054ec:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80054f0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80054f4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80054f8:	1e59      	subs	r1, r3, #1
 80054fa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80054fe:	ee17 3a90 	vmov	r3, s15
 8005502:	440b      	add	r3, r1
 8005504:	4619      	mov	r1, r3
 8005506:	f7ff bad1 	b.w	8004aac <_ZN19ScreenGraphViewBaseC1Ev+0xdf0>
 800550a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800550e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005512:	ee17 3a10 	vmov	r3, s14
 8005516:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800551a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800551e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005522:	1e59      	subs	r1, r3, #1
 8005524:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005528:	ee17 3a90 	vmov	r3, s15
 800552c:	440b      	add	r3, r1
 800552e:	4619      	mov	r1, r3
 8005530:	f7ff bad5 	b.w	8004ade <_ZN19ScreenGraphViewBaseC1Ev+0xe22>
 8005534:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005538:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800553c:	ee17 3a10 	vmov	r3, s14
 8005540:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005544:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005548:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800554c:	1e59      	subs	r1, r3, #1
 800554e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005552:	ee17 3a90 	vmov	r3, s15
 8005556:	440b      	add	r3, r1
 8005558:	4619      	mov	r1, r3
 800555a:	f7ff bad9 	b.w	8004b10 <_ZN19ScreenGraphViewBaseC1Ev+0xe54>
 800555e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005562:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005566:	ee17 3a10 	vmov	r3, s14
 800556a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800556e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005572:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005576:	1e59      	subs	r1, r3, #1
 8005578:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800557c:	ee17 3a90 	vmov	r3, s15
 8005580:	440b      	add	r3, r1
 8005582:	4619      	mov	r1, r3
 8005584:	f7ff badd 	b.w	8004b42 <_ZN19ScreenGraphViewBaseC1Ev+0xe86>
 8005588:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800558c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005590:	ee17 3a10 	vmov	r3, s14
 8005594:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005598:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800559c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80055a0:	1e59      	subs	r1, r3, #1
 80055a2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80055a6:	ee17 3a90 	vmov	r3, s15
 80055aa:	440b      	add	r3, r1
 80055ac:	4619      	mov	r1, r3
 80055ae:	f7ff bae1 	b.w	8004b74 <_ZN19ScreenGraphViewBaseC1Ev+0xeb8>
 80055b2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80055b6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80055ba:	ee17 3a10 	vmov	r3, s14
 80055be:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80055c2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80055c6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80055ca:	1e59      	subs	r1, r3, #1
 80055cc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80055d0:	ee17 3a90 	vmov	r3, s15
 80055d4:	440b      	add	r3, r1
 80055d6:	4619      	mov	r1, r3
 80055d8:	f7ff bae5 	b.w	8004ba6 <_ZN19ScreenGraphViewBaseC1Ev+0xeea>
 80055dc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80055e0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80055e4:	ee17 3a10 	vmov	r3, s14
 80055e8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80055ec:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80055f0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80055f4:	1e59      	subs	r1, r3, #1
 80055f6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80055fa:	ee17 3a90 	vmov	r3, s15
 80055fe:	440b      	add	r3, r1
 8005600:	4619      	mov	r1, r3
 8005602:	f7ff bae9 	b.w	8004bd8 <_ZN19ScreenGraphViewBaseC1Ev+0xf1c>
 8005606:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800560a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800560e:	ee17 3a10 	vmov	r3, s14
 8005612:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005616:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800561a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800561e:	1e59      	subs	r1, r3, #1
 8005620:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005624:	ee17 3a90 	vmov	r3, s15
 8005628:	440b      	add	r3, r1
 800562a:	4619      	mov	r1, r3
 800562c:	f7ff baed 	b.w	8004c0a <_ZN19ScreenGraphViewBaseC1Ev+0xf4e>
 8005630:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005634:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005638:	ee17 3a10 	vmov	r3, s14
 800563c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005640:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005644:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005648:	1e59      	subs	r1, r3, #1
 800564a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800564e:	ee17 3a90 	vmov	r3, s15
 8005652:	440b      	add	r3, r1
 8005654:	4619      	mov	r1, r3
 8005656:	f7ff baf1 	b.w	8004c3c <_ZN19ScreenGraphViewBaseC1Ev+0xf80>
 800565a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800565e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005662:	ee17 3a10 	vmov	r3, s14
 8005666:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800566a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800566e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005672:	1e59      	subs	r1, r3, #1
 8005674:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005678:	ee17 3a90 	vmov	r3, s15
 800567c:	440b      	add	r3, r1
 800567e:	4619      	mov	r1, r3
 8005680:	f7ff baf5 	b.w	8004c6e <_ZN19ScreenGraphViewBaseC1Ev+0xfb2>
 8005684:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005688:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800568c:	ee17 3a10 	vmov	r3, s14
 8005690:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005694:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005698:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800569c:	1e59      	subs	r1, r3, #1
 800569e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80056a2:	ee17 3a90 	vmov	r3, s15
 80056a6:	440b      	add	r3, r1
 80056a8:	4619      	mov	r1, r3
 80056aa:	f7ff baf9 	b.w	8004ca0 <_ZN19ScreenGraphViewBaseC1Ev+0xfe4>
 80056ae:	bf00      	nop

080056b0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80056b0:	4770      	bx	lr
	...

080056b4 <_Z23getFont_verdana_10_4bppv>:
{
 80056b4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80056b6:	4d15      	ldr	r5, [pc, #84]	; (800570c <_Z23getFont_verdana_10_4bppv+0x58>)
 80056b8:	782c      	ldrb	r4, [r5, #0]
 80056ba:	f3bf 8f5b 	dmb	ish
 80056be:	f014 0401 	ands.w	r4, r4, #1
{
 80056c2:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80056c4:	d11e      	bne.n	8005704 <_Z23getFont_verdana_10_4bppv+0x50>
 80056c6:	4628      	mov	r0, r5
 80056c8:	f01b fa33 	bl	8020b32 <__cxa_guard_acquire>
 80056cc:	b1d0      	cbz	r0, 8005704 <_Z23getFont_verdana_10_4bppv+0x50>
 80056ce:	233f      	movs	r3, #63	; 0x3f
 80056d0:	9307      	str	r3, [sp, #28]
 80056d2:	4b0f      	ldr	r3, [pc, #60]	; (8005710 <_Z23getFont_verdana_10_4bppv+0x5c>)
 80056d4:	9306      	str	r3, [sp, #24]
 80056d6:	4b0f      	ldr	r3, [pc, #60]	; (8005714 <_Z23getFont_verdana_10_4bppv+0x60>)
 80056d8:	490f      	ldr	r1, [pc, #60]	; (8005718 <_Z23getFont_verdana_10_4bppv+0x64>)
 80056da:	4810      	ldr	r0, [pc, #64]	; (800571c <_Z23getFont_verdana_10_4bppv+0x68>)
 80056dc:	9408      	str	r4, [sp, #32]
 80056de:	2201      	movs	r2, #1
 80056e0:	e9cd 4304 	strd	r4, r3, [sp, #16]
 80056e4:	2304      	movs	r3, #4
 80056e6:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80056ea:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 80056ee:	230a      	movs	r3, #10
 80056f0:	9403      	str	r4, [sp, #12]
 80056f2:	9400      	str	r4, [sp, #0]
 80056f4:	f7fd f8ae 	bl	8002854 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80056f8:	4809      	ldr	r0, [pc, #36]	; (8005720 <_Z23getFont_verdana_10_4bppv+0x6c>)
 80056fa:	f01b fa65 	bl	8020bc8 <atexit>
 80056fe:	4628      	mov	r0, r5
 8005700:	f01b fa23 	bl	8020b4a <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8005704:	4805      	ldr	r0, [pc, #20]	; (800571c <_Z23getFont_verdana_10_4bppv+0x68>)
 8005706:	b00d      	add	sp, #52	; 0x34
 8005708:	bd30      	pop	{r4, r5, pc}
 800570a:	bf00      	nop
 800570c:	20006590 	.word	0x20006590
 8005710:	08025708 	.word	0x08025708
 8005714:	08025738 	.word	0x08025738
 8005718:	0802549c 	.word	0x0802549c
 800571c:	20006594 	.word	0x20006594
 8005720:	080056b1 	.word	0x080056b1

08005724 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_15_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_15_4bpp();

touchgfx::GeneratedFont& getFont_verdana_15_4bpp()
{
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 38, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8005724:	4770      	bx	lr
	...

08005728 <_Z23getFont_verdana_15_4bppv>:
{
 8005728:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 38, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 800572a:	4d16      	ldr	r5, [pc, #88]	; (8005784 <_Z23getFont_verdana_15_4bppv+0x5c>)
 800572c:	782c      	ldrb	r4, [r5, #0]
 800572e:	f3bf 8f5b 	dmb	ish
 8005732:	f014 0401 	ands.w	r4, r4, #1
{
 8005736:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 38, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8005738:	d120      	bne.n	800577c <_Z23getFont_verdana_15_4bppv+0x54>
 800573a:	4628      	mov	r0, r5
 800573c:	f01b f9f9 	bl	8020b32 <__cxa_guard_acquire>
 8005740:	b1e0      	cbz	r0, 800577c <_Z23getFont_verdana_15_4bppv+0x54>
 8005742:	233f      	movs	r3, #63	; 0x3f
 8005744:	9307      	str	r3, [sp, #28]
 8005746:	4b10      	ldr	r3, [pc, #64]	; (8005788 <_Z23getFont_verdana_15_4bppv+0x60>)
 8005748:	9306      	str	r3, [sp, #24]
 800574a:	4b10      	ldr	r3, [pc, #64]	; (800578c <_Z23getFont_verdana_15_4bppv+0x64>)
 800574c:	9305      	str	r3, [sp, #20]
 800574e:	2301      	movs	r3, #1
 8005750:	e9cd 4303 	strd	r4, r3, [sp, #12]
 8005754:	9302      	str	r3, [sp, #8]
 8005756:	2204      	movs	r2, #4
 8005758:	2303      	movs	r3, #3
 800575a:	e9cd 3200 	strd	r3, r2, [sp]
 800575e:	490c      	ldr	r1, [pc, #48]	; (8005790 <_Z23getFont_verdana_15_4bppv+0x68>)
 8005760:	480c      	ldr	r0, [pc, #48]	; (8005794 <_Z23getFont_verdana_15_4bppv+0x6c>)
 8005762:	9408      	str	r4, [sp, #32]
 8005764:	230f      	movs	r3, #15
 8005766:	2226      	movs	r2, #38	; 0x26
 8005768:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 800576c:	f7fd f872 	bl	8002854 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8005770:	4809      	ldr	r0, [pc, #36]	; (8005798 <_Z23getFont_verdana_15_4bppv+0x70>)
 8005772:	f01b fa29 	bl	8020bc8 <atexit>
 8005776:	4628      	mov	r0, r5
 8005778:	f01b f9e7 	bl	8020b4a <__cxa_guard_release>
    return verdana_15_4bpp;
}
 800577c:	4805      	ldr	r0, [pc, #20]	; (8005794 <_Z23getFont_verdana_15_4bppv+0x6c>)
 800577e:	b00d      	add	sp, #52	; 0x34
 8005780:	bd30      	pop	{r4, r5, pc}
 8005782:	bf00      	nop
 8005784:	200065bc 	.word	0x200065bc
 8005788:	0802570c 	.word	0x0802570c
 800578c:	0802573c 	.word	0x0802573c
 8005790:	080254ac 	.word	0x080254ac
 8005794:	200065c0 	.word	0x200065c0
 8005798:	08005725 	.word	0x08005725

0800579c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800579c:	4770      	bx	lr
	...

080057a0 <_Z23getFont_verdana_40_4bppv>:
{
 80057a0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80057a2:	4d15      	ldr	r5, [pc, #84]	; (80057f8 <_Z23getFont_verdana_40_4bppv+0x58>)
 80057a4:	782c      	ldrb	r4, [r5, #0]
 80057a6:	f3bf 8f5b 	dmb	ish
 80057aa:	f014 0401 	ands.w	r4, r4, #1
{
 80057ae:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80057b0:	d11f      	bne.n	80057f2 <_Z23getFont_verdana_40_4bppv+0x52>
 80057b2:	4628      	mov	r0, r5
 80057b4:	f01b f9bd 	bl	8020b32 <__cxa_guard_acquire>
 80057b8:	b1d8      	cbz	r0, 80057f2 <_Z23getFont_verdana_40_4bppv+0x52>
 80057ba:	233f      	movs	r3, #63	; 0x3f
 80057bc:	9307      	str	r3, [sp, #28]
 80057be:	4b0f      	ldr	r3, [pc, #60]	; (80057fc <_Z23getFont_verdana_40_4bppv+0x5c>)
 80057c0:	9306      	str	r3, [sp, #24]
 80057c2:	4b0f      	ldr	r3, [pc, #60]	; (8005800 <_Z23getFont_verdana_40_4bppv+0x60>)
 80057c4:	490f      	ldr	r1, [pc, #60]	; (8005804 <_Z23getFont_verdana_40_4bppv+0x64>)
 80057c6:	4810      	ldr	r0, [pc, #64]	; (8005808 <_Z23getFont_verdana_40_4bppv+0x68>)
 80057c8:	9408      	str	r4, [sp, #32]
 80057ca:	e9cd 4304 	strd	r4, r3, [sp, #16]
 80057ce:	2204      	movs	r2, #4
 80057d0:	2301      	movs	r3, #1
 80057d2:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80057d6:	9300      	str	r3, [sp, #0]
 80057d8:	2205      	movs	r2, #5
 80057da:	2328      	movs	r3, #40	; 0x28
 80057dc:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 80057e0:	9403      	str	r4, [sp, #12]
 80057e2:	f7fd f837 	bl	8002854 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80057e6:	4809      	ldr	r0, [pc, #36]	; (800580c <_Z23getFont_verdana_40_4bppv+0x6c>)
 80057e8:	f01b f9ee 	bl	8020bc8 <atexit>
 80057ec:	4628      	mov	r0, r5
 80057ee:	f01b f9ac 	bl	8020b4a <__cxa_guard_release>
    return verdana_40_4bpp;
}
 80057f2:	4805      	ldr	r0, [pc, #20]	; (8005808 <_Z23getFont_verdana_40_4bppv+0x68>)
 80057f4:	b00d      	add	sp, #52	; 0x34
 80057f6:	bd30      	pop	{r4, r5, pc}
 80057f8:	200065e8 	.word	0x200065e8
 80057fc:	08025724 	.word	0x08025724
 8005800:	08025740 	.word	0x08025740
 8005804:	080256c0 	.word	0x080256c0
 8005808:	200065ec 	.word	0x200065ec
 800580c:	0800579d 	.word	0x0800579d

08005810 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8005810:	2000      	movs	r0, #0
 8005812:	4770      	bx	lr

08005814 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8005814:	2000      	movs	r0, #0
 8005816:	4770      	bx	lr

08005818 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8005818:	b40e      	push	{r1, r2, r3}
 800581a:	b503      	push	{r0, r1, lr}
 800581c:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800581e:	2100      	movs	r1, #0
{
 8005820:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8005824:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8005826:	f00c fcbd 	bl	80121a4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800582a:	b002      	add	sp, #8
 800582c:	f85d eb04 	ldr.w	lr, [sp], #4
 8005830:	b003      	add	sp, #12
 8005832:	4770      	bx	lr

08005834 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8005834:	b40c      	push	{r2, r3}
 8005836:	b507      	push	{r0, r1, r2, lr}
 8005838:	ab04      	add	r3, sp, #16
 800583a:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 800583e:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8005840:	f00c fcb0 	bl	80121a4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8005844:	b003      	add	sp, #12
 8005846:	f85d eb04 	ldr.w	lr, [sp], #4
 800584a:	b002      	add	sp, #8
 800584c:	4770      	bx	lr
	...

08005850 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8005850:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8005852:	b510      	push	{r4, lr}
 8005854:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8005856:	b373      	cbz	r3, 80058b6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8005858:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800585a:	b92b      	cbnz	r3, 8005868 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 800585c:	4b18      	ldr	r3, [pc, #96]	; (80058c0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 800585e:	4a19      	ldr	r2, [pc, #100]	; (80058c4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8005860:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8005862:	4819      	ldr	r0, [pc, #100]	; (80058c8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8005864:	f01b f992 	bl	8020b8c <__assert_func>
            return buffer[pos];
 8005868:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800586a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800586e:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8005870:	b30b      	cbz	r3, 80058b6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8005872:	f00e f830 	bl	80138d6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8005876:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8005878:	2b01      	cmp	r3, #1
 800587a:	d803      	bhi.n	8005884 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 800587c:	4b13      	ldr	r3, [pc, #76]	; (80058cc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 800587e:	4a14      	ldr	r2, [pc, #80]	; (80058d0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8005880:	21c5      	movs	r1, #197	; 0xc5
 8005882:	e7ee      	b.n	8005862 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8005884:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8005886:	1c53      	adds	r3, r2, #1
 8005888:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 800588a:	2b09      	cmp	r3, #9
 800588c:	4619      	mov	r1, r3
 800588e:	bf88      	it	hi
 8005890:	f1a3 010a 	subhi.w	r1, r3, #10
 8005894:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8005898:	f640 103f 	movw	r0, #2367	; 0x93f
 800589c:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 800589e:	4281      	cmp	r1, r0
 80058a0:	d109      	bne.n	80058b6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 80058a2:	2b0a      	cmp	r3, #10
 80058a4:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 80058a8:	bf28      	it	cs
 80058aa:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 80058ac:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 80058b0:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 80058b2:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 80058b4:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 80058b6:	4620      	mov	r0, r4
}
 80058b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 80058bc:	f00d bf0e 	b.w	80136dc <_ZN8touchgfx12TextProvider11getNextCharEv>
 80058c0:	080234cc 	.word	0x080234cc
 80058c4:	080234d5 	.word	0x080234d5
 80058c8:	08023580 	.word	0x08023580
 80058cc:	080235ca 	.word	0x080235ca
 80058d0:	080235d8 	.word	0x080235d8

080058d4 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 80058d4:	f00d bec9 	b.w	801366a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080058d8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 80058d8:	b510      	push	{r4, lr}
 80058da:	b086      	sub	sp, #24
 80058dc:	ac02      	add	r4, sp, #8
 80058de:	e884 0006 	stmia.w	r4, {r1, r2}
 80058e2:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 80058e4:	ab0a      	add	r3, sp, #40	; 0x28
 80058e6:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 80058e8:	9301      	str	r3, [sp, #4]
 80058ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80058ec:	9300      	str	r3, [sp, #0]
 80058ee:	4621      	mov	r1, r4
 80058f0:	9b08      	ldr	r3, [sp, #32]
 80058f2:	f00b f95c 	bl	8010bae <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 80058f6:	b006      	add	sp, #24
 80058f8:	bd10      	pop	{r4, pc}
	...

080058fc <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 80058fc:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 80058fe:	bb18      	cbnz	r0, 8005948 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8005900:	4b12      	ldr	r3, [pc, #72]	; (800594c <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8005902:	4813      	ldr	r0, [pc, #76]	; (8005950 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8005904:	681b      	ldr	r3, [r3, #0]
 8005906:	4913      	ldr	r1, [pc, #76]	; (8005954 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8005908:	b1b3      	cbz	r3, 8005938 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800590a:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800590c:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800590e:	441a      	add	r2, r3
 8005910:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8005912:	685a      	ldr	r2, [r3, #4]
 8005914:	441a      	add	r2, r3
 8005916:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8005918:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 800591a:	4b0f      	ldr	r3, [pc, #60]	; (8005958 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 800591c:	2200      	movs	r2, #0
 800591e:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8005920:	f000 f838 	bl	8005994 <_ZN17TypedTextDatabase8getFontsEv>
 8005924:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8005926:	f000 f833 	bl	8005990 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 800592a:	4b0c      	ldr	r3, [pc, #48]	; (800595c <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 800592c:	601c      	str	r4, [r3, #0]
        fonts = f;
 800592e:	4b0c      	ldr	r3, [pc, #48]	; (8005960 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8005930:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8005932:	4b0c      	ldr	r3, [pc, #48]	; (8005964 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8005934:	8018      	strh	r0, [r3, #0]
    }
}
 8005936:	e007      	b.n	8005948 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8005938:	4b0b      	ldr	r3, [pc, #44]	; (8005968 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 800593a:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800593c:	4b0b      	ldr	r3, [pc, #44]	; (800596c <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 800593e:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8005940:	4b0b      	ldr	r3, [pc, #44]	; (8005970 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8005942:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8005944:	2c00      	cmp	r4, #0
 8005946:	d1e8      	bne.n	800591a <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8005948:	bd38      	pop	{r3, r4, r5, pc}
 800594a:	bf00      	nop
 800594c:	20006614 	.word	0x20006614
 8005950:	20006618 	.word	0x20006618
 8005954:	2000661c 	.word	0x2000661c
 8005958:	20006620 	.word	0x20006620
 800595c:	200174a8 	.word	0x200174a8
 8005960:	200174b0 	.word	0x200174b0
 8005964:	200174ac 	.word	0x200174ac
 8005968:	08025760 	.word	0x08025760
 800596c:	08025744 	.word	0x08025744
 8005970:	080257ec 	.word	0x080257ec

08005974 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8005974:	4b04      	ldr	r3, [pc, #16]	; (8005988 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8005976:	681b      	ldr	r3, [r3, #0]
 8005978:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800597c:	4b03      	ldr	r3, [pc, #12]	; (800598c <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 800597e:	681b      	ldr	r3, [r3, #0]
}
 8005980:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8005984:	4770      	bx	lr
 8005986:	bf00      	nop
 8005988:	2000661c 	.word	0x2000661c
 800598c:	20006618 	.word	0x20006618

08005990 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8005990:	2007      	movs	r0, #7
 8005992:	4770      	bx	lr

08005994 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8005994:	4800      	ldr	r0, [pc, #0]	; (8005998 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8005996:	4770      	bx	lr
 8005998:	20006624 	.word	0x20006624

0800599c <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800599c:	b510      	push	{r4, lr}
    &(getFont_verdana_15_4bpp()),
 800599e:	f7ff fec3 	bl	8005728 <_Z23getFont_verdana_15_4bppv>
};
 80059a2:	4c04      	ldr	r4, [pc, #16]	; (80059b4 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 80059a4:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 80059a6:	f7ff fefb 	bl	80057a0 <_Z23getFont_verdana_40_4bppv>
};
 80059aa:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 80059ac:	f7ff fe82 	bl	80056b4 <_Z23getFont_verdana_10_4bppv>
};
 80059b0:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 80059b2:	bd10      	pop	{r4, pc}
 80059b4:	20006624 	.word	0x20006624

080059b8 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 80059b8:	4770      	bx	lr

080059ba <_ZN19FrontendApplicationD0Ev>:
 80059ba:	b510      	push	{r4, lr}
 80059bc:	f44f 71ac 	mov.w	r1, #344	; 0x158
 80059c0:	4604      	mov	r4, r0
 80059c2:	f01b f8b4 	bl	8020b2e <_ZdlPvj>
 80059c6:	4620      	mov	r0, r4
 80059c8:	bd10      	pop	{r4, pc}

080059ca <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 80059ca:	b510      	push	{r4, lr}
 80059cc:	4604      	mov	r4, r0
    {
        model.tick();
 80059ce:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 80059d2:	f000 f812 	bl	80059fa <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 80059d6:	4620      	mov	r0, r4
    }
 80059d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 80059dc:	f00b bc60 	b.w	80112a0 <_ZN8touchgfx11Application15handleTickEventEv>

080059e0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 80059e0:	b510      	push	{r4, lr}
 80059e2:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 80059e4:	f7fc fd36 	bl	8002454 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80059e8:	4b01      	ldr	r3, [pc, #4]	; (80059f0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 80059ea:	6023      	str	r3, [r4, #0]
{

}
 80059ec:	4620      	mov	r0, r4
 80059ee:	bd10      	pop	{r4, pc}
 80059f0:	080236b4 	.word	0x080236b4

080059f4 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>
int PradLadowania=400; //ustawienie na sztywno pradu ladowania
extern int LoadingCurrent;
int licznik;
Model::Model() : modelListener(0)
 80059f4:	2200      	movs	r2, #0
 80059f6:	6002      	str	r2, [r0, #0]
{

}
 80059f8:	4770      	bx	lr

080059fa <_ZN5Model4tickEv>:
//	licznik++;
//	if (licznik>1000 )licznik =0;
//
//	if (licznik%100) modelListener->UpdateBatteryVoltage();

modelListener->UpdateBatteryVoltage();
 80059fa:	6800      	ldr	r0, [r0, #0]
 80059fc:	6803      	ldr	r3, [r0, #0]
 80059fe:	689b      	ldr	r3, [r3, #8]
 8005a00:	4718      	bx	r3

08005a02 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 8005a02:	4770      	bx	lr

08005a04 <_ZThn4_N16Screen1PresenterD1Ev>:
 8005a04:	3804      	subs	r0, #4
 8005a06:	4770      	bx	lr

08005a08 <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8005a08:	4770      	bx	lr

08005a0a <_ZN16Screen1Presenter20UpdateBatteryVoltageEv>:
{

}

void Screen1Presenter:: UpdateBatteryVoltage(){
view.DisplayBatteryVoltage();
 8005a0a:	68c0      	ldr	r0, [r0, #12]
 8005a0c:	6803      	ldr	r3, [r0, #0]
 8005a0e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005a10:	4718      	bx	r3

08005a12 <_ZThn4_N16Screen1Presenter20UpdateBatteryVoltageEv>:
    virtual void UpdateBatteryVoltage();
 8005a12:	f1a0 0004 	sub.w	r0, r0, #4
 8005a16:	f7ff bff8 	b.w	8005a0a <_ZN16Screen1Presenter20UpdateBatteryVoltageEv>

08005a1a <_ZN16Screen1PresenterD0Ev>:
    virtual ~Screen1Presenter() {};
 8005a1a:	b510      	push	{r4, lr}
 8005a1c:	2110      	movs	r1, #16
 8005a1e:	4604      	mov	r4, r0
 8005a20:	f01b f885 	bl	8020b2e <_ZdlPvj>
 8005a24:	4620      	mov	r0, r4
 8005a26:	bd10      	pop	{r4, pc}

08005a28 <_ZThn4_N16Screen1PresenterD0Ev>:
 8005a28:	f1a0 0004 	sub.w	r0, r0, #4
 8005a2c:	e7f5      	b.n	8005a1a <_ZN16Screen1PresenterD0Ev>
	...

08005a30 <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 8005a30:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8005a32:	2200      	movs	r2, #0
 8005a34:	6082      	str	r2, [r0, #8]
    : view(v)
 8005a36:	4a04      	ldr	r2, [pc, #16]	; (8005a48 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 8005a38:	60c1      	str	r1, [r0, #12]
 8005a3a:	f102 0408 	add.w	r4, r2, #8
 8005a3e:	3224      	adds	r2, #36	; 0x24
 8005a40:	6004      	str	r4, [r0, #0]
 8005a42:	6042      	str	r2, [r0, #4]
}
 8005a44:	bd10      	pop	{r4, pc}
 8005a46:	bf00      	nop
 8005a48:	080236f8 	.word	0x080236f8

08005a4c <_ZN11Screen1ViewD1Ev>:
#include <gui/screen1_screen/Screen1Presenter.hpp>
class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8005a4c:	4770      	bx	lr

08005a4e <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 8005a4e:	4770      	bx	lr

08005a50 <_ZN11Screen1View18ButtonStartClickedEv>:
}

void Screen1View::ButtonStartClicked()
{
#ifndef SIMULATOR
 LoadingCurrent=PradLadowania;
 8005a50:	4b03      	ldr	r3, [pc, #12]	; (8005a60 <_ZN11Screen1View18ButtonStartClickedEv+0x10>)
 8005a52:	681a      	ldr	r2, [r3, #0]
 8005a54:	4b03      	ldr	r3, [pc, #12]	; (8005a64 <_ZN11Screen1View18ButtonStartClickedEv+0x14>)
 8005a56:	601a      	str	r2, [r3, #0]
 ChargeStarted=1;
 8005a58:	4b03      	ldr	r3, [pc, #12]	; (8005a68 <_ZN11Screen1View18ButtonStartClickedEv+0x18>)
 8005a5a:	2201      	movs	r2, #1
 8005a5c:	601a      	str	r2, [r3, #0]
#endif
}
 8005a5e:	4770      	bx	lr
 8005a60:	20000018 	.word	0x20000018
 8005a64:	2000299c 	.word	0x2000299c
 8005a68:	2000298c 	.word	0x2000298c

08005a6c <_ZN11Screen1View15ButtonUpClickedEv>:
	PradLadowania=PradLadowania+10;
 8005a6c:	4b0b      	ldr	r3, [pc, #44]	; (8005a9c <_ZN11Screen1View15ButtonUpClickedEv+0x30>)
 8005a6e:	681a      	ldr	r2, [r3, #0]
{
 8005a70:	b510      	push	{r4, lr}
	PradLadowania=PradLadowania+10;
 8005a72:	320a      	adds	r2, #10
	if (PradLadowania >400){
 8005a74:	f5b2 7fc8 	cmp.w	r2, #400	; 0x190
	PradLadowania=400;}
 8005a78:	bfc8      	it	gt
 8005a7a:	f44f 72c8 	movgt.w	r2, #400	; 0x190
 8005a7e:	601a      	str	r2, [r3, #0]
{
 8005a80:	4604      	mov	r4, r0
	Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 8005a82:	681b      	ldr	r3, [r3, #0]
 8005a84:	4a06      	ldr	r2, [pc, #24]	; (8005aa0 <_ZN11Screen1View15ButtonUpClickedEv+0x34>)
 8005a86:	210a      	movs	r1, #10
 8005a88:	f500 706c 	add.w	r0, r0, #944	; 0x3b0
 8005a8c:	f00e fcd2 	bl	8014434 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 8005a90:	f504 7017 	add.w	r0, r4, #604	; 0x25c
}
 8005a94:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtPradLadowania.invalidate();
 8005a98:	f00c bca5 	b.w	80123e6 <_ZNK8touchgfx8Drawable10invalidateEv>
 8005a9c:	20000018 	.word	0x20000018
 8005aa0:	08023728 	.word	0x08023728

08005aa4 <_ZN11Screen1View17ButtonDownClickedEv>:
	PradLadowania=PradLadowania-10;
 8005aa4:	4b0a      	ldr	r3, [pc, #40]	; (8005ad0 <_ZN11Screen1View17ButtonDownClickedEv+0x2c>)
 8005aa6:	681a      	ldr	r2, [r3, #0]
{
 8005aa8:	b510      	push	{r4, lr}
	PradLadowania=PradLadowania-10;
 8005aaa:	3a0a      	subs	r2, #10
    if (PradLadowania <10){
 8005aac:	2a09      	cmp	r2, #9
	PradLadowania=10;}
 8005aae:	bfd8      	it	le
 8005ab0:	220a      	movle	r2, #10
 8005ab2:	601a      	str	r2, [r3, #0]
{
 8005ab4:	4604      	mov	r4, r0
	Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 8005ab6:	681b      	ldr	r3, [r3, #0]
 8005ab8:	4a06      	ldr	r2, [pc, #24]	; (8005ad4 <_ZN11Screen1View17ButtonDownClickedEv+0x30>)
 8005aba:	210a      	movs	r1, #10
 8005abc:	f500 706c 	add.w	r0, r0, #944	; 0x3b0
 8005ac0:	f00e fcb8 	bl	8014434 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 8005ac4:	f504 7017 	add.w	r0, r4, #604	; 0x25c
}
 8005ac8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtPradLadowania.invalidate();
 8005acc:	f00c bc8b 	b.w	80123e6 <_ZNK8touchgfx8Drawable10invalidateEv>
 8005ad0:	20000018 	.word	0x20000018
 8005ad4:	08023728 	.word	0x08023728

08005ad8 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 8005ad8:	f7fc bf2f 	b.w	800293a <_ZN15Screen1ViewBase11setupScreenEv>

08005adc <_ZN11Screen1View21DisplayBatteryVoltageEv>:
void Screen1View::DisplayBatteryVoltage(){
 8005adc:	b513      	push	{r0, r1, r4, lr}
	Unicode::snprintfFloat(txtNapiecieBateriiBuffer,TXTNAPIECIEBATERII_SIZE,"%.3f",BatteryVoltage);
 8005ade:	4b09      	ldr	r3, [pc, #36]	; (8005b04 <_ZN11Screen1View21DisplayBatteryVoltageEv+0x28>)
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 8005ae0:	4a09      	ldr	r2, [pc, #36]	; (8005b08 <_ZN11Screen1View21DisplayBatteryVoltageEv+0x2c>)
 8005ae2:	681b      	ldr	r3, [r3, #0]
 8005ae4:	9301      	str	r3, [sp, #4]
void Screen1View::DisplayBatteryVoltage(){
 8005ae6:	4604      	mov	r4, r0
 8005ae8:	ab01      	add	r3, sp, #4
 8005aea:	210a      	movs	r1, #10
 8005aec:	f500 7071 	add.w	r0, r0, #964	; 0x3c4
 8005af0:	f00e fe5c 	bl	80147ac <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	txtNapiecieBaterii.invalidate();
 8005af4:	f504 7059 	add.w	r0, r4, #868	; 0x364
}
 8005af8:	b002      	add	sp, #8
 8005afa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtNapiecieBaterii.invalidate();
 8005afe:	f00c bc72 	b.w	80123e6 <_ZNK8touchgfx8Drawable10invalidateEv>
 8005b02:	bf00      	nop
 8005b04:	2000000c 	.word	0x2000000c
 8005b08:	0802372b 	.word	0x0802372b

08005b0c <_ZN11Screen1ViewD0Ev>:
 8005b0c:	b510      	push	{r4, lr}
 8005b0e:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 8005b12:	4604      	mov	r4, r0
 8005b14:	f01b f80b 	bl	8020b2e <_ZdlPvj>
 8005b18:	4620      	mov	r0, r4
 8005b1a:	bd10      	pop	{r4, pc}

08005b1c <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8005b1c:	b510      	push	{r4, lr}
 8005b1e:	4604      	mov	r4, r0
 8005b20:	f7fd f978 	bl	8002e14 <_ZN15Screen1ViewBaseC1Ev>
 8005b24:	4b07      	ldr	r3, [pc, #28]	; (8005b44 <_ZN11Screen1ViewC1Ev+0x28>)
 8005b26:	6023      	str	r3, [r4, #0]
Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 8005b28:	4b07      	ldr	r3, [pc, #28]	; (8005b48 <_ZN11Screen1ViewC1Ev+0x2c>)
 8005b2a:	4a08      	ldr	r2, [pc, #32]	; (8005b4c <_ZN11Screen1ViewC1Ev+0x30>)
 8005b2c:	681b      	ldr	r3, [r3, #0]
 8005b2e:	210a      	movs	r1, #10
 8005b30:	f504 706c 	add.w	r0, r4, #944	; 0x3b0
 8005b34:	f00e fc7e 	bl	8014434 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 8005b38:	f504 7017 	add.w	r0, r4, #604	; 0x25c
 8005b3c:	f00c fc53 	bl	80123e6 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 8005b40:	4620      	mov	r0, r4
 8005b42:	bd10      	pop	{r4, pc}
 8005b44:	08023738 	.word	0x08023738
 8005b48:	20000018 	.word	0x20000018
 8005b4c:	08023728 	.word	0x08023728

08005b50 <_ZN13ModelListener20UpdateBatteryVoltageEv>:
    virtual void UpdateBatteryVoltage () {};
 8005b50:	4770      	bx	lr

08005b52 <_ZN20ScreenGraphPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~ScreenGraphPresenter() {};
 8005b52:	4770      	bx	lr

08005b54 <_ZThn4_N20ScreenGraphPresenterD1Ev>:
 8005b54:	3804      	subs	r0, #4
 8005b56:	4770      	bx	lr

08005b58 <_ZN20ScreenGraphPresenter10deactivateEv>:
}

void ScreenGraphPresenter::activate()
{

}
 8005b58:	4770      	bx	lr

08005b5a <_ZN20ScreenGraphPresenterD0Ev>:
 8005b5a:	b510      	push	{r4, lr}
 8005b5c:	2110      	movs	r1, #16
 8005b5e:	4604      	mov	r4, r0
 8005b60:	f01a ffe5 	bl	8020b2e <_ZdlPvj>
 8005b64:	4620      	mov	r0, r4
 8005b66:	bd10      	pop	{r4, pc}

08005b68 <_ZThn4_N20ScreenGraphPresenterD0Ev>:
 8005b68:	f1a0 0004 	sub.w	r0, r0, #4
 8005b6c:	e7f5      	b.n	8005b5a <_ZN20ScreenGraphPresenterD0Ev>
	...

08005b70 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView>:
ScreenGraphPresenter::ScreenGraphPresenter(ScreenGraphView& v)
 8005b70:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8005b72:	2200      	movs	r2, #0
 8005b74:	6082      	str	r2, [r0, #8]
    : view(v)
 8005b76:	4a04      	ldr	r2, [pc, #16]	; (8005b88 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView+0x18>)
 8005b78:	60c1      	str	r1, [r0, #12]
 8005b7a:	f102 0408 	add.w	r4, r2, #8
 8005b7e:	3220      	adds	r2, #32
 8005b80:	6004      	str	r4, [r0, #0]
 8005b82:	6042      	str	r2, [r0, #4]
}
 8005b84:	bd10      	pop	{r4, pc}
 8005b86:	bf00      	nop
 8005b88:	08023774 	.word	0x08023774

08005b8c <_ZN15ScreenGraphViewD1Ev>:

class ScreenGraphView : public ScreenGraphViewBase
{
public:
    ScreenGraphView();
    virtual ~ScreenGraphView() {}
 8005b8c:	4770      	bx	lr

08005b8e <_ZN15ScreenGraphView14tearDownScreenEv>:
}

void ScreenGraphView::tearDownScreen()
{
    ScreenGraphViewBase::tearDownScreen();
}
 8005b8e:	4770      	bx	lr

08005b90 <_ZN15ScreenGraphViewD0Ev>:
 8005b90:	b510      	push	{r4, lr}
 8005b92:	f241 7174 	movw	r1, #6004	; 0x1774
 8005b96:	4604      	mov	r4, r0
 8005b98:	f01a ffc9 	bl	8020b2e <_ZdlPvj>
 8005b9c:	4620      	mov	r0, r4
 8005b9e:	bd10      	pop	{r4, pc}

08005ba0 <_ZN15ScreenGraphView11setupScreenEv>:
{
 8005ba0:	b510      	push	{r4, lr}
 8005ba2:	4604      	mov	r4, r0
    ScreenGraphViewBase::setupScreen();
 8005ba4:	f7fd ff2a 	bl	80039fc <_ZN19ScreenGraphViewBase11setupScreenEv>
        const float fs = f * (float)scale;
 8005ba8:	f8d4 3488 	ldr.w	r3, [r4, #1160]	; 0x488
 8005bac:	ed9f 6a46 	vldr	s12, [pc, #280]	; 8005cc8 <_ZN15ScreenGraphView11setupScreenEv+0x128>
 8005bb0:	ee07 3a90 	vmov	s15, r3
 8005bb4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8005bb8:	ee27 7a06 	vmul.f32	s14, s14, s12
        if (fs >= 0)
 8005bbc:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8005bc0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005bc4:	db44      	blt.n	8005c50 <_ZN15ScreenGraphView11setupScreenEv+0xb0>
            return (int)(fs + 0.5f);
 8005bc6:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8005bca:	ee37 7a27 	vadd.f32	s14, s14, s15
 8005bce:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 8005bd2:	ee17 3a90 	vmov	r3, s15
        const float fs = f * (float)scale;
 8005bd6:	edd4 7aff 	vldr	s15, [r4, #1020]	; 0x3fc
 8005bda:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 * @return The absolute (non-negative) value of d.
 */
template <typename T>
T abs(T d)
{
    return (d < 0) ? -d : d;
 8005bde:	2b00      	cmp	r3, #0
 8005be0:	ee67 7a86 	vmul.f32	s15, s15, s12
 8005be4:	bfb8      	it	lt
 8005be6:	425b      	neglt	r3, r3
        if (fs >= 0)
 8005be8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005bec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
        labelInterval = abs(interval);
 8005bf0:	f8c4 348c 	str.w	r3, [r4, #1164]	; 0x48c
 8005bf4:	db40      	blt.n	8005c78 <_ZN15ScreenGraphView11setupScreenEv+0xd8>
            return (int)(fs + 0.5f);
 8005bf6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005bfa:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005bfe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005c02:	ee17 3a90 	vmov	r3, s15
        const float fs = f * (float)scale;
 8005c06:	edd4 7adf 	vldr	s15, [r4, #892]	; 0x37c
 8005c0a:	ed9f 7a30 	vldr	s14, [pc, #192]	; 8005ccc <_ZN15ScreenGraphView11setupScreenEv+0x12c>
 8005c0e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005c12:	2b00      	cmp	r3, #0
 8005c14:	ee67 7a87 	vmul.f32	s15, s15, s14
 8005c18:	bfb8      	it	lt
 8005c1a:	425b      	neglt	r3, r3
        if (fs >= 0)
 8005c1c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005c20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
        gridInterval = abs(interval);
 8005c24:	f8c4 3400 	str.w	r3, [r4, #1024]	; 0x400
 8005c28:	db3a      	blt.n	8005ca0 <_ZN15ScreenGraphView11setupScreenEv+0x100>
            return (int)(fs + 0.5f);
 8005c2a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005c2e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005c32:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005c36:	ee17 3a90 	vmov	r3, s15
 8005c3a:	2b00      	cmp	r3, #0
 8005c3c:	bfb8      	it	lt
 8005c3e:	425b      	neglt	r3, r3
 8005c40:	f8c4 3380 	str.w	r3, [r4, #896]	; 0x380
     dynamicGraph1.invalidate();
 8005c44:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
}
 8005c48:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     dynamicGraph1.invalidate();
 8005c4c:	f00c bbcb 	b.w	80123e6 <_ZNK8touchgfx8Drawable10invalidateEv>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8005c50:	eefd 6ac7 	vcvt.s32.f32	s13, s14
 8005c54:	eef8 7ae6 	vcvt.f32.s32	s15, s13
 8005c58:	ee16 3a90 	vmov	r3, s13
 8005c5c:	ee37 7a67 	vsub.f32	s14, s14, s15
 8005c60:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 8005c64:	ee37 7a27 	vadd.f32	s14, s14, s15
 8005c68:	3b01      	subs	r3, #1
 8005c6a:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8005c6e:	ee17 2a10 	vmov	r2, s14
 8005c72:	441a      	add	r2, r3
 8005c74:	4613      	mov	r3, r2
 8005c76:	e7ae      	b.n	8005bd6 <_ZN15ScreenGraphView11setupScreenEv+0x36>
 8005c78:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005c7c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005c80:	ee17 3a10 	vmov	r3, s14
 8005c84:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005c88:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005c8c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005c90:	3b01      	subs	r3, #1
 8005c92:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005c96:	ee17 2a90 	vmov	r2, s15
 8005c9a:	441a      	add	r2, r3
 8005c9c:	4613      	mov	r3, r2
 8005c9e:	e7b2      	b.n	8005c06 <_ZN15ScreenGraphView11setupScreenEv+0x66>
 8005ca0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005ca4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005ca8:	ee17 3a10 	vmov	r3, s14
 8005cac:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005cb0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005cb4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005cb8:	3b01      	subs	r3, #1
 8005cba:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005cbe:	ee17 2a90 	vmov	r2, s15
 8005cc2:	441a      	add	r2, r3
 8005cc4:	4613      	mov	r3, r2
 8005cc6:	e7b8      	b.n	8005c3a <_ZN15ScreenGraphView11setupScreenEv+0x9a>
 8005cc8:	3dcccccd 	.word	0x3dcccccd
 8005ccc:	3d4ccccd 	.word	0x3d4ccccd

08005cd0 <_ZN15ScreenGraphViewC1Ev>:
ScreenGraphView::ScreenGraphView()
 8005cd0:	b510      	push	{r4, lr}
 8005cd2:	4604      	mov	r4, r0
 8005cd4:	f7fd fff2 	bl	8003cbc <_ZN19ScreenGraphViewBaseC1Ev>
 8005cd8:	4b48      	ldr	r3, [pc, #288]	; (8005dfc <_ZN15ScreenGraphViewC1Ev+0x12c>)
 8005cda:	6023      	str	r3, [r4, #0]
        const float fs = f * (float)scale;
 8005cdc:	f8d4 3488 	ldr.w	r3, [r4, #1160]	; 0x488
 8005ce0:	ed9f 6a47 	vldr	s12, [pc, #284]	; 8005e00 <_ZN15ScreenGraphViewC1Ev+0x130>
 8005ce4:	ee07 3a90 	vmov	s15, r3
 8005ce8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8005cec:	ee27 7a06 	vmul.f32	s14, s14, s12
        if (fs >= 0)
 8005cf0:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8005cf4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005cf8:	db44      	blt.n	8005d84 <_ZN15ScreenGraphViewC1Ev+0xb4>
            return (int)(fs + 0.5f);
 8005cfa:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8005cfe:	ee37 7a27 	vadd.f32	s14, s14, s15
 8005d02:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 8005d06:	ee17 3a90 	vmov	r3, s15
        const float fs = f * (float)scale;
 8005d0a:	edd4 7aff 	vldr	s15, [r4, #1020]	; 0x3fc
 8005d0e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005d12:	2b00      	cmp	r3, #0
 8005d14:	ee67 7a86 	vmul.f32	s15, s15, s12
 8005d18:	bfb8      	it	lt
 8005d1a:	425b      	neglt	r3, r3
        if (fs >= 0)
 8005d1c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005d20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005d24:	f8c4 348c 	str.w	r3, [r4, #1164]	; 0x48c
 8005d28:	db40      	blt.n	8005dac <_ZN15ScreenGraphViewC1Ev+0xdc>
            return (int)(fs + 0.5f);
 8005d2a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005d2e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005d32:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005d36:	ee17 3a90 	vmov	r3, s15
        const float fs = f * (float)scale;
 8005d3a:	edd4 7adf 	vldr	s15, [r4, #892]	; 0x37c
 8005d3e:	ed9f 7a31 	vldr	s14, [pc, #196]	; 8005e04 <_ZN15ScreenGraphViewC1Ev+0x134>
 8005d42:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005d46:	2b00      	cmp	r3, #0
 8005d48:	ee67 7a87 	vmul.f32	s15, s15, s14
 8005d4c:	bfb8      	it	lt
 8005d4e:	425b      	neglt	r3, r3
        if (fs >= 0)
 8005d50:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005d54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005d58:	f8c4 3400 	str.w	r3, [r4, #1024]	; 0x400
 8005d5c:	db3a      	blt.n	8005dd4 <_ZN15ScreenGraphViewC1Ev+0x104>
            return (int)(fs + 0.5f);
 8005d5e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005d62:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005d66:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005d6a:	ee17 3a90 	vmov	r3, s15
 8005d6e:	2b00      	cmp	r3, #0
 8005d70:	bfb8      	it	lt
 8005d72:	425b      	neglt	r3, r3
	  dynamicGraph1.invalidate();
 8005d74:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 8005d78:	f8c4 3380 	str.w	r3, [r4, #896]	; 0x380
 8005d7c:	f00c fb33 	bl	80123e6 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 8005d80:	4620      	mov	r0, r4
 8005d82:	bd10      	pop	{r4, pc}
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8005d84:	eefd 6ac7 	vcvt.s32.f32	s13, s14
 8005d88:	eef8 7ae6 	vcvt.f32.s32	s15, s13
 8005d8c:	ee16 3a90 	vmov	r3, s13
 8005d90:	ee37 7a67 	vsub.f32	s14, s14, s15
 8005d94:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 8005d98:	ee37 7a27 	vadd.f32	s14, s14, s15
 8005d9c:	3b01      	subs	r3, #1
 8005d9e:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8005da2:	ee17 2a10 	vmov	r2, s14
 8005da6:	441a      	add	r2, r3
 8005da8:	4613      	mov	r3, r2
 8005daa:	e7ae      	b.n	8005d0a <_ZN15ScreenGraphViewC1Ev+0x3a>
 8005dac:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005db0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005db4:	ee17 3a10 	vmov	r3, s14
 8005db8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005dbc:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005dc0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005dc4:	3b01      	subs	r3, #1
 8005dc6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005dca:	ee17 2a90 	vmov	r2, s15
 8005dce:	441a      	add	r2, r3
 8005dd0:	4613      	mov	r3, r2
 8005dd2:	e7b2      	b.n	8005d3a <_ZN15ScreenGraphViewC1Ev+0x6a>
 8005dd4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005dd8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005ddc:	ee17 3a10 	vmov	r3, s14
 8005de0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005de4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005de8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005dec:	3b01      	subs	r3, #1
 8005dee:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005df2:	ee17 2a90 	vmov	r2, s15
 8005df6:	441a      	add	r2, r3
 8005df8:	4613      	mov	r3, r2
 8005dfa:	e7b8      	b.n	8005d6e <_ZN15ScreenGraphViewC1Ev+0x9e>
 8005dfc:	080237a8 	.word	0x080237a8
 8005e00:	3dcccccd 	.word	0x3dcccccd
 8005e04:	3d4ccccd 	.word	0x3d4ccccd

08005e08 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8005e08:	20f0      	movs	r0, #240	; 0xf0
 8005e0a:	4770      	bx	lr

08005e0c <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8005e0c:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8005e10:	4770      	bx	lr

08005e12 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8005e12:	2029      	movs	r0, #41	; 0x29
 8005e14:	f7fb bd30 	b.w	8001878 <LCD_IO_WriteReg>

08005e18 <ili9341_DisplayOff>:
 8005e18:	2028      	movs	r0, #40	; 0x28
 8005e1a:	f7fb bd2d 	b.w	8001878 <LCD_IO_WriteReg>

08005e1e <ili9341_Init>:
{
 8005e1e:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8005e20:	f7fb fcfe 	bl	8001820 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8005e24:	20ca      	movs	r0, #202	; 0xca
 8005e26:	f7fb fd27 	bl	8001878 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005e2a:	20c3      	movs	r0, #195	; 0xc3
 8005e2c:	f7fb fd08 	bl	8001840 <LCD_IO_WriteData>
 8005e30:	2008      	movs	r0, #8
 8005e32:	f7fb fd05 	bl	8001840 <LCD_IO_WriteData>
 8005e36:	2050      	movs	r0, #80	; 0x50
 8005e38:	f7fb fd02 	bl	8001840 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005e3c:	20cf      	movs	r0, #207	; 0xcf
 8005e3e:	f7fb fd1b 	bl	8001878 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005e42:	2000      	movs	r0, #0
 8005e44:	f7fb fcfc 	bl	8001840 <LCD_IO_WriteData>
 8005e48:	20c1      	movs	r0, #193	; 0xc1
 8005e4a:	f7fb fcf9 	bl	8001840 <LCD_IO_WriteData>
 8005e4e:	2030      	movs	r0, #48	; 0x30
 8005e50:	f7fb fcf6 	bl	8001840 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005e54:	20ed      	movs	r0, #237	; 0xed
 8005e56:	f7fb fd0f 	bl	8001878 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005e5a:	2064      	movs	r0, #100	; 0x64
 8005e5c:	f7fb fcf0 	bl	8001840 <LCD_IO_WriteData>
 8005e60:	2003      	movs	r0, #3
 8005e62:	f7fb fced 	bl	8001840 <LCD_IO_WriteData>
 8005e66:	2012      	movs	r0, #18
 8005e68:	f7fb fcea 	bl	8001840 <LCD_IO_WriteData>
 8005e6c:	2081      	movs	r0, #129	; 0x81
 8005e6e:	f7fb fce7 	bl	8001840 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005e72:	20e8      	movs	r0, #232	; 0xe8
 8005e74:	f7fb fd00 	bl	8001878 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005e78:	2085      	movs	r0, #133	; 0x85
 8005e7a:	f7fb fce1 	bl	8001840 <LCD_IO_WriteData>
 8005e7e:	2000      	movs	r0, #0
 8005e80:	f7fb fcde 	bl	8001840 <LCD_IO_WriteData>
 8005e84:	2078      	movs	r0, #120	; 0x78
 8005e86:	f7fb fcdb 	bl	8001840 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005e8a:	20cb      	movs	r0, #203	; 0xcb
 8005e8c:	f7fb fcf4 	bl	8001878 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005e90:	2039      	movs	r0, #57	; 0x39
 8005e92:	f7fb fcd5 	bl	8001840 <LCD_IO_WriteData>
 8005e96:	202c      	movs	r0, #44	; 0x2c
 8005e98:	f7fb fcd2 	bl	8001840 <LCD_IO_WriteData>
 8005e9c:	2000      	movs	r0, #0
 8005e9e:	f7fb fccf 	bl	8001840 <LCD_IO_WriteData>
 8005ea2:	2034      	movs	r0, #52	; 0x34
 8005ea4:	f7fb fccc 	bl	8001840 <LCD_IO_WriteData>
 8005ea8:	2002      	movs	r0, #2
 8005eaa:	f7fb fcc9 	bl	8001840 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005eae:	20f7      	movs	r0, #247	; 0xf7
 8005eb0:	f7fb fce2 	bl	8001878 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005eb4:	2020      	movs	r0, #32
 8005eb6:	f7fb fcc3 	bl	8001840 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005eba:	20ea      	movs	r0, #234	; 0xea
 8005ebc:	f7fb fcdc 	bl	8001878 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005ec0:	2000      	movs	r0, #0
 8005ec2:	f7fb fcbd 	bl	8001840 <LCD_IO_WriteData>
 8005ec6:	2000      	movs	r0, #0
 8005ec8:	f7fb fcba 	bl	8001840 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005ecc:	20b1      	movs	r0, #177	; 0xb1
 8005ece:	f7fb fcd3 	bl	8001878 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005ed2:	2000      	movs	r0, #0
 8005ed4:	f7fb fcb4 	bl	8001840 <LCD_IO_WriteData>
 8005ed8:	201b      	movs	r0, #27
 8005eda:	f7fb fcb1 	bl	8001840 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005ede:	20b6      	movs	r0, #182	; 0xb6
 8005ee0:	f7fb fcca 	bl	8001878 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005ee4:	200a      	movs	r0, #10
 8005ee6:	f7fb fcab 	bl	8001840 <LCD_IO_WriteData>
 8005eea:	20a2      	movs	r0, #162	; 0xa2
 8005eec:	f7fb fca8 	bl	8001840 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005ef0:	20c0      	movs	r0, #192	; 0xc0
 8005ef2:	f7fb fcc1 	bl	8001878 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005ef6:	2010      	movs	r0, #16
 8005ef8:	f7fb fca2 	bl	8001840 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005efc:	20c1      	movs	r0, #193	; 0xc1
 8005efe:	f7fb fcbb 	bl	8001878 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005f02:	2010      	movs	r0, #16
 8005f04:	f7fb fc9c 	bl	8001840 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005f08:	20c5      	movs	r0, #197	; 0xc5
 8005f0a:	f7fb fcb5 	bl	8001878 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005f0e:	2045      	movs	r0, #69	; 0x45
 8005f10:	f7fb fc96 	bl	8001840 <LCD_IO_WriteData>
 8005f14:	2015      	movs	r0, #21
 8005f16:	f7fb fc93 	bl	8001840 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005f1a:	20c7      	movs	r0, #199	; 0xc7
 8005f1c:	f7fb fcac 	bl	8001878 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005f20:	2090      	movs	r0, #144	; 0x90
 8005f22:	f7fb fc8d 	bl	8001840 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005f26:	2036      	movs	r0, #54	; 0x36
 8005f28:	f7fb fca6 	bl	8001878 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005f2c:	20c8      	movs	r0, #200	; 0xc8
 8005f2e:	f7fb fc87 	bl	8001840 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005f32:	20f2      	movs	r0, #242	; 0xf2
 8005f34:	f7fb fca0 	bl	8001878 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005f38:	2000      	movs	r0, #0
 8005f3a:	f7fb fc81 	bl	8001840 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005f3e:	20b0      	movs	r0, #176	; 0xb0
 8005f40:	f7fb fc9a 	bl	8001878 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005f44:	20c2      	movs	r0, #194	; 0xc2
 8005f46:	f7fb fc7b 	bl	8001840 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005f4a:	20b6      	movs	r0, #182	; 0xb6
 8005f4c:	f7fb fc94 	bl	8001878 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005f50:	200a      	movs	r0, #10
 8005f52:	f7fb fc75 	bl	8001840 <LCD_IO_WriteData>
 8005f56:	20a7      	movs	r0, #167	; 0xa7
 8005f58:	f7fb fc72 	bl	8001840 <LCD_IO_WriteData>
 8005f5c:	2027      	movs	r0, #39	; 0x27
 8005f5e:	f7fb fc6f 	bl	8001840 <LCD_IO_WriteData>
 8005f62:	2004      	movs	r0, #4
 8005f64:	f7fb fc6c 	bl	8001840 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005f68:	202a      	movs	r0, #42	; 0x2a
 8005f6a:	f7fb fc85 	bl	8001878 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005f6e:	2000      	movs	r0, #0
 8005f70:	f7fb fc66 	bl	8001840 <LCD_IO_WriteData>
 8005f74:	2000      	movs	r0, #0
 8005f76:	f7fb fc63 	bl	8001840 <LCD_IO_WriteData>
 8005f7a:	2000      	movs	r0, #0
 8005f7c:	f7fb fc60 	bl	8001840 <LCD_IO_WriteData>
 8005f80:	20ef      	movs	r0, #239	; 0xef
 8005f82:	f7fb fc5d 	bl	8001840 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005f86:	202b      	movs	r0, #43	; 0x2b
 8005f88:	f7fb fc76 	bl	8001878 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005f8c:	2000      	movs	r0, #0
 8005f8e:	f7fb fc57 	bl	8001840 <LCD_IO_WriteData>
 8005f92:	2000      	movs	r0, #0
 8005f94:	f7fb fc54 	bl	8001840 <LCD_IO_WriteData>
 8005f98:	2001      	movs	r0, #1
 8005f9a:	f7fb fc51 	bl	8001840 <LCD_IO_WriteData>
 8005f9e:	203f      	movs	r0, #63	; 0x3f
 8005fa0:	f7fb fc4e 	bl	8001840 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005fa4:	20f6      	movs	r0, #246	; 0xf6
 8005fa6:	f7fb fc67 	bl	8001878 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005faa:	2001      	movs	r0, #1
 8005fac:	f7fb fc48 	bl	8001840 <LCD_IO_WriteData>
 8005fb0:	2000      	movs	r0, #0
 8005fb2:	f7fb fc45 	bl	8001840 <LCD_IO_WriteData>
 8005fb6:	2006      	movs	r0, #6
 8005fb8:	f7fb fc42 	bl	8001840 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005fbc:	202c      	movs	r0, #44	; 0x2c
 8005fbe:	f7fb fc5b 	bl	8001878 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8005fc2:	20c8      	movs	r0, #200	; 0xc8
 8005fc4:	f7fb fca6 	bl	8001914 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8005fc8:	2026      	movs	r0, #38	; 0x26
 8005fca:	f7fb fc55 	bl	8001878 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005fce:	2001      	movs	r0, #1
 8005fd0:	f7fb fc36 	bl	8001840 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005fd4:	20e0      	movs	r0, #224	; 0xe0
 8005fd6:	f7fb fc4f 	bl	8001878 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005fda:	200f      	movs	r0, #15
 8005fdc:	f7fb fc30 	bl	8001840 <LCD_IO_WriteData>
 8005fe0:	2029      	movs	r0, #41	; 0x29
 8005fe2:	f7fb fc2d 	bl	8001840 <LCD_IO_WriteData>
 8005fe6:	2024      	movs	r0, #36	; 0x24
 8005fe8:	f7fb fc2a 	bl	8001840 <LCD_IO_WriteData>
 8005fec:	200c      	movs	r0, #12
 8005fee:	f7fb fc27 	bl	8001840 <LCD_IO_WriteData>
 8005ff2:	200e      	movs	r0, #14
 8005ff4:	f7fb fc24 	bl	8001840 <LCD_IO_WriteData>
 8005ff8:	2009      	movs	r0, #9
 8005ffa:	f7fb fc21 	bl	8001840 <LCD_IO_WriteData>
 8005ffe:	204e      	movs	r0, #78	; 0x4e
 8006000:	f7fb fc1e 	bl	8001840 <LCD_IO_WriteData>
 8006004:	2078      	movs	r0, #120	; 0x78
 8006006:	f7fb fc1b 	bl	8001840 <LCD_IO_WriteData>
 800600a:	203c      	movs	r0, #60	; 0x3c
 800600c:	f7fb fc18 	bl	8001840 <LCD_IO_WriteData>
 8006010:	2009      	movs	r0, #9
 8006012:	f7fb fc15 	bl	8001840 <LCD_IO_WriteData>
 8006016:	2013      	movs	r0, #19
 8006018:	f7fb fc12 	bl	8001840 <LCD_IO_WriteData>
 800601c:	2005      	movs	r0, #5
 800601e:	f7fb fc0f 	bl	8001840 <LCD_IO_WriteData>
 8006022:	2017      	movs	r0, #23
 8006024:	f7fb fc0c 	bl	8001840 <LCD_IO_WriteData>
 8006028:	2011      	movs	r0, #17
 800602a:	f7fb fc09 	bl	8001840 <LCD_IO_WriteData>
 800602e:	2000      	movs	r0, #0
 8006030:	f7fb fc06 	bl	8001840 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8006034:	20e1      	movs	r0, #225	; 0xe1
 8006036:	f7fb fc1f 	bl	8001878 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800603a:	2000      	movs	r0, #0
 800603c:	f7fb fc00 	bl	8001840 <LCD_IO_WriteData>
 8006040:	2016      	movs	r0, #22
 8006042:	f7fb fbfd 	bl	8001840 <LCD_IO_WriteData>
 8006046:	201b      	movs	r0, #27
 8006048:	f7fb fbfa 	bl	8001840 <LCD_IO_WriteData>
 800604c:	2004      	movs	r0, #4
 800604e:	f7fb fbf7 	bl	8001840 <LCD_IO_WriteData>
 8006052:	2011      	movs	r0, #17
 8006054:	f7fb fbf4 	bl	8001840 <LCD_IO_WriteData>
 8006058:	2007      	movs	r0, #7
 800605a:	f7fb fbf1 	bl	8001840 <LCD_IO_WriteData>
 800605e:	2031      	movs	r0, #49	; 0x31
 8006060:	f7fb fbee 	bl	8001840 <LCD_IO_WriteData>
 8006064:	2033      	movs	r0, #51	; 0x33
 8006066:	f7fb fbeb 	bl	8001840 <LCD_IO_WriteData>
 800606a:	2042      	movs	r0, #66	; 0x42
 800606c:	f7fb fbe8 	bl	8001840 <LCD_IO_WriteData>
 8006070:	2005      	movs	r0, #5
 8006072:	f7fb fbe5 	bl	8001840 <LCD_IO_WriteData>
 8006076:	200c      	movs	r0, #12
 8006078:	f7fb fbe2 	bl	8001840 <LCD_IO_WriteData>
 800607c:	200a      	movs	r0, #10
 800607e:	f7fb fbdf 	bl	8001840 <LCD_IO_WriteData>
 8006082:	2028      	movs	r0, #40	; 0x28
 8006084:	f7fb fbdc 	bl	8001840 <LCD_IO_WriteData>
 8006088:	202f      	movs	r0, #47	; 0x2f
 800608a:	f7fb fbd9 	bl	8001840 <LCD_IO_WriteData>
 800608e:	200f      	movs	r0, #15
 8006090:	f7fb fbd6 	bl	8001840 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8006094:	2011      	movs	r0, #17
 8006096:	f7fb fbef 	bl	8001878 <LCD_IO_WriteReg>
  LCD_Delay(200);
 800609a:	20c8      	movs	r0, #200	; 0xc8
 800609c:	f7fb fc3a 	bl	8001914 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80060a0:	2029      	movs	r0, #41	; 0x29
 80060a2:	f7fb fbe9 	bl	8001878 <LCD_IO_WriteReg>
}
 80060a6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 80060aa:	202c      	movs	r0, #44	; 0x2c
 80060ac:	f7fb bbe4 	b.w	8001878 <LCD_IO_WriteReg>

080060b0 <ili9341_ReadID>:
{
 80060b0:	b508      	push	{r3, lr}
  LCD_IO_Init();
 80060b2:	f7fb fbb5 	bl	8001820 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 80060b6:	2103      	movs	r1, #3
 80060b8:	20d3      	movs	r0, #211	; 0xd3
 80060ba:	f7fb fbf9 	bl	80018b0 <LCD_IO_ReadData>
}
 80060be:	b280      	uxth	r0, r0
 80060c0:	bd08      	pop	{r3, pc}

080060c2 <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 80060c2:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 80060c4:	b2c4      	uxtb	r4, r0
 80060c6:	2202      	movs	r2, #2
 80060c8:	2103      	movs	r1, #3
 80060ca:	4620      	mov	r0, r4
 80060cc:	f7fb fb5e 	bl	800178c <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 80060d0:	200a      	movs	r0, #10
 80060d2:	f7fb fba3 	bl	800181c <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 80060d6:	4620      	mov	r0, r4
 80060d8:	2200      	movs	r2, #0
 80060da:	2103      	movs	r1, #3
 80060dc:	f7fb fb56 	bl	800178c <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 80060e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 80060e4:	2002      	movs	r0, #2
 80060e6:	f7fb bb99 	b.w	800181c <IOE_Delay>

080060ea <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 80060ea:	b538      	push	{r3, r4, r5, lr}
 80060ec:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80060ee:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 80060f0:	f7fb fb4a 	bl	8001788 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80060f4:	2100      	movs	r1, #0
 80060f6:	4620      	mov	r0, r4
 80060f8:	f7fb fb60 	bl	80017bc <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80060fc:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80060fe:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8006100:	4620      	mov	r0, r4
 8006102:	f7fb fb5b 	bl	80017bc <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8006106:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 800610a:	b280      	uxth	r0, r0
 800610c:	bd38      	pop	{r3, r4, r5, pc}

0800610e <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 800610e:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8006110:	b2c4      	uxtb	r4, r0
 8006112:	2140      	movs	r1, #64	; 0x40
 8006114:	4620      	mov	r0, r4
 8006116:	f7fb fb51 	bl	80017bc <IOE_Read>
  
  if(state > 0)
 800611a:	0603      	lsls	r3, r0, #24
 800611c:	d507      	bpl.n	800612e <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 800611e:	214c      	movs	r1, #76	; 0x4c
 8006120:	4620      	mov	r0, r4
 8006122:	f7fb fb4b 	bl	80017bc <IOE_Read>
    {
      ret = 1;
 8006126:	3800      	subs	r0, #0
 8006128:	bf18      	it	ne
 800612a:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 800612c:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800612e:	2201      	movs	r2, #1
 8006130:	214b      	movs	r1, #75	; 0x4b
 8006132:	4620      	mov	r0, r4
 8006134:	f7fb fb2a 	bl	800178c <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8006138:	4620      	mov	r0, r4
 800613a:	2200      	movs	r2, #0
 800613c:	214b      	movs	r1, #75	; 0x4b
 800613e:	f7fb fb25 	bl	800178c <IOE_Write>
  uint8_t ret = 0;
 8006142:	2000      	movs	r0, #0
 8006144:	e7f2      	b.n	800612c <stmpe811_TS_DetectTouch+0x1e>

08006146 <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 8006146:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8006148:	2304      	movs	r3, #4
 800614a:	b2c4      	uxtb	r4, r0
{
 800614c:	460e      	mov	r6, r1
 800614e:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8006150:	21d7      	movs	r1, #215	; 0xd7
 8006152:	eb0d 0203 	add.w	r2, sp, r3
 8006156:	4620      	mov	r0, r4
 8006158:	f7fb fb4a 	bl	80017f0 <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 800615c:	9b01      	ldr	r3, [sp, #4]
 800615e:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8006160:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8006162:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8006166:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8006168:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800616a:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800616c:	2201      	movs	r2, #1
 800616e:	214b      	movs	r1, #75	; 0x4b
 8006170:	f7fb fb0c 	bl	800178c <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8006174:	2200      	movs	r2, #0
 8006176:	214b      	movs	r1, #75	; 0x4b
 8006178:	4620      	mov	r0, r4
 800617a:	f7fb fb07 	bl	800178c <IOE_Write>
}
 800617e:	b002      	add	sp, #8
 8006180:	bd70      	pop	{r4, r5, r6, pc}
	...

08006184 <stmpe811_Init>:
{
 8006184:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8006186:	4b0a      	ldr	r3, [pc, #40]	; (80061b0 <stmpe811_Init+0x2c>)
 8006188:	781a      	ldrb	r2, [r3, #0]
 800618a:	4290      	cmp	r0, r2
{
 800618c:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 800618e:	d00d      	beq.n	80061ac <stmpe811_Init+0x28>
 8006190:	7859      	ldrb	r1, [r3, #1]
 8006192:	4288      	cmp	r0, r1
 8006194:	d00a      	beq.n	80061ac <stmpe811_Init+0x28>
 8006196:	b10a      	cbz	r2, 800619c <stmpe811_Init+0x18>
 8006198:	b941      	cbnz	r1, 80061ac <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 800619a:	2201      	movs	r2, #1
      stmpe811[empty] = DeviceAddr;
 800619c:	549c      	strb	r4, [r3, r2]
      IOE_Init(); 
 800619e:	f7fb faf3 	bl	8001788 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 80061a2:	4620      	mov	r0, r4
}
 80061a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 80061a8:	f7ff bf8b 	b.w	80060c2 <stmpe811_Reset>
}
 80061ac:	bd10      	pop	{r4, pc}
 80061ae:	bf00      	nop
 80061b0:	20006630 	.word	0x20006630

080061b4 <stmpe811_EnableGlobalIT>:
{
 80061b4:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 80061b6:	b2c4      	uxtb	r4, r0
 80061b8:	2109      	movs	r1, #9
 80061ba:	4620      	mov	r0, r4
 80061bc:	f7fb fafe 	bl	80017bc <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 80061c0:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 80061c4:	b2c2      	uxtb	r2, r0
 80061c6:	2109      	movs	r1, #9
 80061c8:	4620      	mov	r0, r4
}
 80061ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 80061ce:	f7fb badd 	b.w	800178c <IOE_Write>

080061d2 <stmpe811_DisableGlobalIT>:
{
 80061d2:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 80061d4:	b2c4      	uxtb	r4, r0
 80061d6:	2109      	movs	r1, #9
 80061d8:	4620      	mov	r0, r4
 80061da:	f7fb faef 	bl	80017bc <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 80061de:	2109      	movs	r1, #9
 80061e0:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 80061e4:	4620      	mov	r0, r4
}
 80061e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 80061ea:	f7fb bacf 	b.w	800178c <IOE_Write>

080061ee <stmpe811_EnableITSource>:
{
 80061ee:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80061f0:	b2c4      	uxtb	r4, r0
{
 80061f2:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80061f4:	4620      	mov	r0, r4
 80061f6:	210a      	movs	r1, #10
 80061f8:	f7fb fae0 	bl	80017bc <IOE_Read>
  tmp |= Source; 
 80061fc:	4328      	orrs	r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80061fe:	b2c2      	uxtb	r2, r0
 8006200:	210a      	movs	r1, #10
 8006202:	4620      	mov	r0, r4
}
 8006204:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8006208:	f7fb bac0 	b.w	800178c <IOE_Write>

0800620c <stmpe811_TS_EnableIT>:
{
 800620c:	b507      	push	{r0, r1, r2, lr}
 800620e:	9001      	str	r0, [sp, #4]
  IOE_ITConfig();
 8006210:	f7fb fabb 	bl	800178a <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 8006214:	9801      	ldr	r0, [sp, #4]
 8006216:	211f      	movs	r1, #31
 8006218:	f7ff ffe9 	bl	80061ee <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 800621c:	9801      	ldr	r0, [sp, #4]
}
 800621e:	b003      	add	sp, #12
 8006220:	f85d eb04 	ldr.w	lr, [sp], #4
  stmpe811_EnableGlobalIT(DeviceAddr);
 8006224:	f7ff bfc6 	b.w	80061b4 <stmpe811_EnableGlobalIT>

08006228 <stmpe811_DisableITSource>:
{
 8006228:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800622a:	b2c4      	uxtb	r4, r0
{
 800622c:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800622e:	4620      	mov	r0, r4
 8006230:	210a      	movs	r1, #10
 8006232:	f7fb fac3 	bl	80017bc <IOE_Read>
  tmp &= ~Source; 
 8006236:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800623a:	b2c2      	uxtb	r2, r0
 800623c:	210a      	movs	r1, #10
 800623e:	4620      	mov	r0, r4
}
 8006240:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8006244:	f7fb baa2 	b.w	800178c <IOE_Write>

08006248 <stmpe811_TS_DisableIT>:
{
 8006248:	b510      	push	{r4, lr}
 800624a:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 800624c:	f7ff ffc1 	bl	80061d2 <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8006250:	4620      	mov	r0, r4
 8006252:	211f      	movs	r1, #31
}
 8006254:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8006258:	f7ff bfe6 	b.w	8006228 <stmpe811_DisableITSource>

0800625c <stmpe811_ReadGITStatus>:
{
 800625c:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 800625e:	b2c0      	uxtb	r0, r0
{
 8006260:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8006262:	210b      	movs	r1, #11
 8006264:	f7fb faaa 	bl	80017bc <IOE_Read>
}
 8006268:	4020      	ands	r0, r4
 800626a:	bd10      	pop	{r4, pc}

0800626c <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 800626c:	211f      	movs	r1, #31
 800626e:	f7ff bff5 	b.w	800625c <stmpe811_ReadGITStatus>

08006272 <stmpe811_ClearGlobalIT>:
{
 8006272:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8006274:	b2c0      	uxtb	r0, r0
 8006276:	210b      	movs	r1, #11
 8006278:	f7fb ba88 	b.w	800178c <IOE_Write>

0800627c <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 800627c:	211f      	movs	r1, #31
 800627e:	f7ff bff8 	b.w	8006272 <stmpe811_ClearGlobalIT>

08006282 <stmpe811_IO_EnableAF>:
{
 8006282:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8006284:	b2c4      	uxtb	r4, r0
{
 8006286:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8006288:	4620      	mov	r0, r4
 800628a:	2117      	movs	r1, #23
 800628c:	f7fb fa96 	bl	80017bc <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 8006290:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8006294:	b2c2      	uxtb	r2, r0
 8006296:	2117      	movs	r1, #23
 8006298:	4620      	mov	r0, r4
}
 800629a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 800629e:	f7fb ba75 	b.w	800178c <IOE_Write>

080062a2 <stmpe811_TS_Start>:
{
 80062a2:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80062a4:	b2c4      	uxtb	r4, r0
{
 80062a6:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80062a8:	2104      	movs	r1, #4
 80062aa:	4620      	mov	r0, r4
 80062ac:	f7fb fa86 	bl	80017bc <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80062b0:	2104      	movs	r1, #4
 80062b2:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80062b6:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80062b8:	4620      	mov	r0, r4
 80062ba:	f7fb fa67 	bl	800178c <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 80062be:	4630      	mov	r0, r6
 80062c0:	21f0      	movs	r1, #240	; 0xf0
 80062c2:	f7ff ffde 	bl	8006282 <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80062c6:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 80062ca:	4620      	mov	r0, r4
 80062cc:	2104      	movs	r1, #4
 80062ce:	f7fb fa5d 	bl	800178c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 80062d2:	2249      	movs	r2, #73	; 0x49
 80062d4:	2120      	movs	r1, #32
 80062d6:	4620      	mov	r0, r4
 80062d8:	f7fb fa58 	bl	800178c <IOE_Write>
  IOE_Delay(2); 
 80062dc:	2002      	movs	r0, #2
 80062de:	f7fb fa9d 	bl	800181c <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 80062e2:	4620      	mov	r0, r4
 80062e4:	2201      	movs	r2, #1
 80062e6:	2121      	movs	r1, #33	; 0x21
 80062e8:	f7fb fa50 	bl	800178c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 80062ec:	4620      	mov	r0, r4
 80062ee:	229a      	movs	r2, #154	; 0x9a
 80062f0:	2141      	movs	r1, #65	; 0x41
 80062f2:	f7fb fa4b 	bl	800178c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 80062f6:	4620      	mov	r0, r4
 80062f8:	2201      	movs	r2, #1
 80062fa:	214a      	movs	r1, #74	; 0x4a
 80062fc:	f7fb fa46 	bl	800178c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8006300:	4620      	mov	r0, r4
 8006302:	2201      	movs	r2, #1
 8006304:	214b      	movs	r1, #75	; 0x4b
 8006306:	f7fb fa41 	bl	800178c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800630a:	4620      	mov	r0, r4
 800630c:	2200      	movs	r2, #0
 800630e:	214b      	movs	r1, #75	; 0x4b
 8006310:	f7fb fa3c 	bl	800178c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8006314:	4620      	mov	r0, r4
 8006316:	2201      	movs	r2, #1
 8006318:	2156      	movs	r1, #86	; 0x56
 800631a:	f7fb fa37 	bl	800178c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 800631e:	4620      	mov	r0, r4
 8006320:	2201      	movs	r2, #1
 8006322:	2158      	movs	r1, #88	; 0x58
 8006324:	f7fb fa32 	bl	800178c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8006328:	4620      	mov	r0, r4
 800632a:	2201      	movs	r2, #1
 800632c:	2140      	movs	r1, #64	; 0x40
 800632e:	f7fb fa2d 	bl	800178c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8006332:	4620      	mov	r0, r4
 8006334:	22ff      	movs	r2, #255	; 0xff
 8006336:	210b      	movs	r1, #11
 8006338:	f7fb fa28 	bl	800178c <IOE_Write>
}
 800633c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 8006340:	2002      	movs	r0, #2
 8006342:	f7fb ba6b 	b.w	800181c <IOE_Delay>
	...

08006348 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8006348:	4b05      	ldr	r3, [pc, #20]	; (8006360 <SystemInit+0x18>)
 800634a:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 800634e:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8006352:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8006356:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800635a:	609a      	str	r2, [r3, #8]
#endif
}
 800635c:	4770      	bx	lr
 800635e:	bf00      	nop
 8006360:	e000ed00 	.word	0xe000ed00

08006364 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8006364:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8006366:	4b0b      	ldr	r3, [pc, #44]	; (8006394 <HAL_Init+0x30>)
 8006368:	681a      	ldr	r2, [r3, #0]
 800636a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800636e:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8006370:	681a      	ldr	r2, [r3, #0]
 8006372:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8006376:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8006378:	681a      	ldr	r2, [r3, #0]
 800637a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800637e:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8006380:	2003      	movs	r0, #3
 8006382:	f000 fa37 	bl	80067f4 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8006386:	2000      	movs	r0, #0
 8006388:	f7fb fd80 	bl	8001e8c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800638c:	f7fb fada 	bl	8001944 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8006390:	2000      	movs	r0, #0
 8006392:	bd08      	pop	{r3, pc}
 8006394:	40023c00 	.word	0x40023c00

08006398 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8006398:	4a03      	ldr	r2, [pc, #12]	; (80063a8 <HAL_IncTick+0x10>)
 800639a:	4b04      	ldr	r3, [pc, #16]	; (80063ac <HAL_IncTick+0x14>)
 800639c:	6811      	ldr	r1, [r2, #0]
 800639e:	781b      	ldrb	r3, [r3, #0]
 80063a0:	440b      	add	r3, r1
 80063a2:	6013      	str	r3, [r2, #0]
}
 80063a4:	4770      	bx	lr
 80063a6:	bf00      	nop
 80063a8:	20006634 	.word	0x20006634
 80063ac:	20000080 	.word	0x20000080

080063b0 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 80063b0:	4b01      	ldr	r3, [pc, #4]	; (80063b8 <HAL_GetTick+0x8>)
 80063b2:	6818      	ldr	r0, [r3, #0]
}
 80063b4:	4770      	bx	lr
 80063b6:	bf00      	nop
 80063b8:	20006634 	.word	0x20006634

080063bc <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80063bc:	b538      	push	{r3, r4, r5, lr}
 80063be:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80063c0:	f7ff fff6 	bl	80063b0 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80063c4:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 80063c6:	bf1c      	itt	ne
 80063c8:	4b05      	ldrne	r3, [pc, #20]	; (80063e0 <HAL_Delay+0x24>)
 80063ca:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 80063cc:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 80063ce:	bf18      	it	ne
 80063d0:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 80063d2:	f7ff ffed 	bl	80063b0 <HAL_GetTick>
 80063d6:	1b43      	subs	r3, r0, r5
 80063d8:	42a3      	cmp	r3, r4
 80063da:	d3fa      	bcc.n	80063d2 <HAL_Delay+0x16>
  {
  }
}
 80063dc:	bd38      	pop	{r3, r4, r5, pc}
 80063de:	bf00      	nop
 80063e0:	20000080 	.word	0x20000080

080063e4 <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
{
 80063e4:	b538      	push	{r3, r4, r5, lr}
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  
  /* Check ADC handle */
  if(hadc == NULL)
 80063e6:	4604      	mov	r4, r0
 80063e8:	2800      	cmp	r0, #0
 80063ea:	f000 809b 	beq.w	8006524 <HAL_ADC_Init+0x140>
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }
  
  if(hadc->State == HAL_ADC_STATE_RESET)
 80063ee:	6c05      	ldr	r5, [r0, #64]	; 0x40
 80063f0:	b925      	cbnz	r5, 80063fc <HAL_ADC_Init+0x18>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 80063f2:	f7fb fac7 	bl	8001984 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 80063f6:	6465      	str	r5, [r4, #68]	; 0x44
    
    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 80063f8:	f884 503c 	strb.w	r5, [r4, #60]	; 0x3c
  }
  
  /* Configuration of ADC parameters if previous preliminary actions are      */ 
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 80063fc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80063fe:	06db      	lsls	r3, r3, #27
 8006400:	f100 808e 	bmi.w	8006520 <HAL_ADC_Init+0x13c>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8006404:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006406:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 800640a:	f023 0302 	bic.w	r3, r3, #2
 800640e:	f043 0302 	orr.w	r3, r3, #2
 8006412:	6423      	str	r3, [r4, #64]	; 0x40
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
  
  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 8006414:	4b44      	ldr	r3, [pc, #272]	; (8006528 <HAL_ADC_Init+0x144>)
 8006416:	685a      	ldr	r2, [r3, #4]
 8006418:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 800641c:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 800641e:	685a      	ldr	r2, [r3, #4]
 8006420:	6861      	ldr	r1, [r4, #4]
 8006422:	430a      	orrs	r2, r1
 8006424:	605a      	str	r2, [r3, #4]
  
  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8006426:	6823      	ldr	r3, [r4, #0]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8006428:	6921      	ldr	r1, [r4, #16]
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 800642a:	685a      	ldr	r2, [r3, #4]
 800642c:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8006430:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8006432:	685a      	ldr	r2, [r3, #4]
 8006434:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8006438:	605a      	str	r2, [r3, #4]
  
  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 800643a:	685a      	ldr	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 800643c:	68a1      	ldr	r1, [r4, #8]
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 800643e:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8006442:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8006444:	685a      	ldr	r2, [r3, #4]
 8006446:	430a      	orrs	r2, r1
 8006448:	605a      	str	r2, [r3, #4]
  
  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 800644a:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 800644c:	68e1      	ldr	r1, [r4, #12]
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 800644e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8006452:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8006454:	689a      	ldr	r2, [r3, #8]
 8006456:	430a      	orrs	r2, r1
 8006458:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 800645a:	4934      	ldr	r1, [pc, #208]	; (800652c <HAL_ADC_Init+0x148>)
 800645c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800645e:	428a      	cmp	r2, r1
 8006460:	d052      	beq.n	8006508 <HAL_ADC_Init+0x124>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8006462:	6899      	ldr	r1, [r3, #8]
 8006464:	f021 6170 	bic.w	r1, r1, #251658240	; 0xf000000
 8006468:	6099      	str	r1, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 800646a:	6899      	ldr	r1, [r3, #8]
 800646c:	430a      	orrs	r2, r1
 800646e:	609a      	str	r2, [r3, #8]
    
    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8006470:	689a      	ldr	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 8006472:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8006474:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8006478:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 800647a:	689a      	ldr	r2, [r3, #8]
 800647c:	430a      	orrs	r2, r1
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800647e:	609a      	str	r2, [r3, #8]
  }
  
  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 8006480:	689a      	ldr	r2, [r3, #8]
 8006482:	f022 0202 	bic.w	r2, r2, #2
 8006486:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 8006488:	689a      	ldr	r2, [r3, #8]
 800648a:	7e21      	ldrb	r1, [r4, #24]
 800648c:	ea42 0241 	orr.w	r2, r2, r1, lsl #1
 8006490:	609a      	str	r2, [r3, #8]
  
  if(hadc->Init.DiscontinuousConvMode != DISABLE)
 8006492:	f894 2020 	ldrb.w	r2, [r4, #32]
 8006496:	2a00      	cmp	r2, #0
 8006498:	d03e      	beq.n	8006518 <HAL_ADC_Init+0x134>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
  
    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 800649a:	685a      	ldr	r2, [r3, #4]
    
    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 800649c:	6a61      	ldr	r1, [r4, #36]	; 0x24
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 800649e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80064a2:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 80064a4:	685a      	ldr	r2, [r3, #4]
 80064a6:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 80064aa:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 80064ac:	685a      	ldr	r2, [r3, #4]
 80064ae:	3901      	subs	r1, #1
 80064b0:	ea42 3241 	orr.w	r2, r2, r1, lsl #13
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 80064b4:	605a      	str	r2, [r3, #4]
  }
  
  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 80064b6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 80064b8:	69e1      	ldr	r1, [r4, #28]
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 80064ba:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 80064be:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 80064c0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80064c2:	3901      	subs	r1, #1
 80064c4:	ea42 5201 	orr.w	r2, r2, r1, lsl #20
 80064c8:	62da      	str	r2, [r3, #44]	; 0x2c
  
  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 80064ca:	689a      	ldr	r2, [r3, #8]
 80064cc:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 80064d0:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 80064d2:	689a      	ldr	r2, [r3, #8]
 80064d4:	f894 1030 	ldrb.w	r1, [r4, #48]	; 0x30
 80064d8:	ea42 2241 	orr.w	r2, r2, r1, lsl #9
 80064dc:	609a      	str	r2, [r3, #8]
  
  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 80064de:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 80064e0:	6961      	ldr	r1, [r4, #20]
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 80064e2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80064e6:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 80064e8:	689a      	ldr	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 80064ea:	2000      	movs	r0, #0
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 80064ec:	ea42 2281 	orr.w	r2, r2, r1, lsl #10
 80064f0:	609a      	str	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 80064f2:	6460      	str	r0, [r4, #68]	; 0x44
    ADC_STATE_CLR_SET(hadc->State,
 80064f4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80064f6:	f023 0303 	bic.w	r3, r3, #3
 80064fa:	f043 0301 	orr.w	r3, r3, #1
 80064fe:	6423      	str	r3, [r4, #64]	; 0x40
  __HAL_UNLOCK(hadc);
 8006500:	2300      	movs	r3, #0
 8006502:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
}
 8006506:	bd38      	pop	{r3, r4, r5, pc}
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8006508:	689a      	ldr	r2, [r3, #8]
 800650a:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 800650e:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8006510:	689a      	ldr	r2, [r3, #8]
 8006512:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8006516:	e7b2      	b.n	800647e <HAL_ADC_Init+0x9a>
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8006518:	685a      	ldr	r2, [r3, #4]
 800651a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800651e:	e7c9      	b.n	80064b4 <HAL_ADC_Init+0xd0>
    tmp_hal_status = HAL_ERROR;
 8006520:	2001      	movs	r0, #1
 8006522:	e7ed      	b.n	8006500 <HAL_ADC_Init+0x11c>
    return HAL_ERROR;
 8006524:	2001      	movs	r0, #1
 8006526:	e7ee      	b.n	8006506 <HAL_ADC_Init+0x122>
 8006528:	40012300 	.word	0x40012300
 800652c:	0f000001 	.word	0x0f000001

08006530 <HAL_ADC_Start>:
{
 8006530:	b082      	sub	sp, #8
  __IO uint32_t counter = 0U;
 8006532:	2300      	movs	r3, #0
 8006534:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 8006536:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800653a:	2b01      	cmp	r3, #1
 800653c:	d060      	beq.n	8006600 <HAL_ADC_Start+0xd0>
 800653e:	2301      	movs	r3, #1
 8006540:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 8006544:	6803      	ldr	r3, [r0, #0]
 8006546:	689a      	ldr	r2, [r3, #8]
 8006548:	07d2      	lsls	r2, r2, #31
 800654a:	d505      	bpl.n	8006558 <HAL_ADC_Start+0x28>
  if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 800654c:	689a      	ldr	r2, [r3, #8]
 800654e:	07d1      	lsls	r1, r2, #31
 8006550:	d414      	bmi.n	800657c <HAL_ADC_Start+0x4c>
  return HAL_OK;
 8006552:	2000      	movs	r0, #0
}
 8006554:	b002      	add	sp, #8
 8006556:	4770      	bx	lr
    __HAL_ADC_ENABLE(hadc);
 8006558:	689a      	ldr	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 800655a:	492a      	ldr	r1, [pc, #168]	; (8006604 <HAL_ADC_Start+0xd4>)
    __HAL_ADC_ENABLE(hadc);
 800655c:	f042 0201 	orr.w	r2, r2, #1
 8006560:	609a      	str	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8006562:	4a29      	ldr	r2, [pc, #164]	; (8006608 <HAL_ADC_Start+0xd8>)
 8006564:	6812      	ldr	r2, [r2, #0]
 8006566:	fbb2 f2f1 	udiv	r2, r2, r1
 800656a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
      counter--;
 800656e:	9201      	str	r2, [sp, #4]
    while(counter != 0U)
 8006570:	9a01      	ldr	r2, [sp, #4]
 8006572:	2a00      	cmp	r2, #0
 8006574:	d0ea      	beq.n	800654c <HAL_ADC_Start+0x1c>
      counter--;
 8006576:	9a01      	ldr	r2, [sp, #4]
 8006578:	3a01      	subs	r2, #1
 800657a:	e7f8      	b.n	800656e <HAL_ADC_Start+0x3e>
    ADC_STATE_CLR_SET(hadc->State,
 800657c:	6c02      	ldr	r2, [r0, #64]	; 0x40
 800657e:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8006582:	f022 0201 	bic.w	r2, r2, #1
 8006586:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800658a:	6402      	str	r2, [r0, #64]	; 0x40
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 800658c:	685a      	ldr	r2, [r3, #4]
 800658e:	0552      	lsls	r2, r2, #21
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 8006590:	bf41      	itttt	mi
 8006592:	6c02      	ldrmi	r2, [r0, #64]	; 0x40
 8006594:	f422 5240 	bicmi.w	r2, r2, #12288	; 0x3000
 8006598:	f442 5280 	orrmi.w	r2, r2, #4096	; 0x1000
 800659c:	6402      	strmi	r2, [r0, #64]	; 0x40
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 800659e:	6c02      	ldr	r2, [r0, #64]	; 0x40
 80065a0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 80065a4:	bf1c      	itt	ne
 80065a6:	6c42      	ldrne	r2, [r0, #68]	; 0x44
 80065a8:	f022 0206 	bicne.w	r2, r2, #6
      ADC_CLEAR_ERRORCODE(hadc);
 80065ac:	6442      	str	r2, [r0, #68]	; 0x44
    __HAL_UNLOCK(hadc);
 80065ae:	2200      	movs	r2, #0
 80065b0:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 80065b4:	f06f 0222 	mvn.w	r2, #34	; 0x22
 80065b8:	601a      	str	r2, [r3, #0]
    if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 80065ba:	4a14      	ldr	r2, [pc, #80]	; (800660c <HAL_ADC_Start+0xdc>)
 80065bc:	6851      	ldr	r1, [r2, #4]
 80065be:	f011 0f1f 	tst.w	r1, #31
 80065c2:	4913      	ldr	r1, [pc, #76]	; (8006610 <HAL_ADC_Start+0xe0>)
 80065c4:	d119      	bne.n	80065fa <HAL_ADC_Start+0xca>
      if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 80065c6:	428b      	cmp	r3, r1
 80065c8:	d007      	beq.n	80065da <HAL_ADC_Start+0xaa>
 80065ca:	f501 7180 	add.w	r1, r1, #256	; 0x100
 80065ce:	428b      	cmp	r3, r1
 80065d0:	d10c      	bne.n	80065ec <HAL_ADC_Start+0xbc>
 80065d2:	6852      	ldr	r2, [r2, #4]
 80065d4:	f012 0f1f 	tst.w	r2, #31
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 80065d8:	d1bb      	bne.n	8006552 <HAL_ADC_Start+0x22>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 80065da:	6898      	ldr	r0, [r3, #8]
 80065dc:	f010 5040 	ands.w	r0, r0, #805306368	; 0x30000000
 80065e0:	d1b7      	bne.n	8006552 <HAL_ADC_Start+0x22>
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 80065e2:	689a      	ldr	r2, [r3, #8]
 80065e4:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80065e8:	609a      	str	r2, [r3, #8]
 80065ea:	e7b3      	b.n	8006554 <HAL_ADC_Start+0x24>
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 80065ec:	4909      	ldr	r1, [pc, #36]	; (8006614 <HAL_ADC_Start+0xe4>)
 80065ee:	428b      	cmp	r3, r1
 80065f0:	d1af      	bne.n	8006552 <HAL_ADC_Start+0x22>
 80065f2:	6852      	ldr	r2, [r2, #4]
 80065f4:	f012 0f10 	tst.w	r2, #16
 80065f8:	e7ee      	b.n	80065d8 <HAL_ADC_Start+0xa8>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 80065fa:	428b      	cmp	r3, r1
 80065fc:	d1a9      	bne.n	8006552 <HAL_ADC_Start+0x22>
 80065fe:	e7ec      	b.n	80065da <HAL_ADC_Start+0xaa>
  __HAL_LOCK(hadc);
 8006600:	2002      	movs	r0, #2
 8006602:	e7a7      	b.n	8006554 <HAL_ADC_Start+0x24>
 8006604:	000f4240 	.word	0x000f4240
 8006608:	2000007c 	.word	0x2000007c
 800660c:	40012300 	.word	0x40012300
 8006610:	40012000 	.word	0x40012000
 8006614:	40012200 	.word	0x40012200

08006618 <HAL_ADC_PollForConversion>:
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 8006618:	6803      	ldr	r3, [r0, #0]
 800661a:	689a      	ldr	r2, [r3, #8]
 800661c:	0552      	lsls	r2, r2, #21
{
 800661e:	b570      	push	{r4, r5, r6, lr}
 8006620:	4604      	mov	r4, r0
 8006622:	460d      	mov	r5, r1
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 8006624:	d50b      	bpl.n	800663e <HAL_ADC_PollForConversion+0x26>
      HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 8006626:	689b      	ldr	r3, [r3, #8]
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 8006628:	05de      	lsls	r6, r3, #23
 800662a:	d508      	bpl.n	800663e <HAL_ADC_PollForConversion+0x26>
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 800662c:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800662e:	f043 0320 	orr.w	r3, r3, #32
 8006632:	6403      	str	r3, [r0, #64]	; 0x40
    __HAL_UNLOCK(hadc);
 8006634:	2300      	movs	r3, #0
 8006636:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
    return HAL_ERROR;
 800663a:	2001      	movs	r0, #1
}
 800663c:	bd70      	pop	{r4, r5, r6, pc}
  tickstart = HAL_GetTick();
 800663e:	f7ff feb7 	bl	80063b0 <HAL_GetTick>
 8006642:	4606      	mov	r6, r0
  while(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 8006644:	6823      	ldr	r3, [r4, #0]
 8006646:	681a      	ldr	r2, [r3, #0]
 8006648:	0791      	lsls	r1, r2, #30
 800664a:	d50c      	bpl.n	8006666 <HAL_ADC_PollForConversion+0x4e>
  __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 800664c:	f06f 0212 	mvn.w	r2, #18
 8006650:	601a      	str	r2, [r3, #0]
  SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 8006652:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8006654:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006658:	6422      	str	r2, [r4, #64]	; 0x40
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 800665a:	689a      	ldr	r2, [r3, #8]
 800665c:	f012 5f40 	tst.w	r2, #805306368	; 0x30000000
 8006660:	d013      	beq.n	800668a <HAL_ADC_PollForConversion+0x72>
  return HAL_OK;
 8006662:	2000      	movs	r0, #0
 8006664:	e7ea      	b.n	800663c <HAL_ADC_PollForConversion+0x24>
    if(Timeout != HAL_MAX_DELAY)
 8006666:	1c68      	adds	r0, r5, #1
 8006668:	d0ed      	beq.n	8006646 <HAL_ADC_PollForConversion+0x2e>
      if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 800666a:	b945      	cbnz	r5, 800667e <HAL_ADC_PollForConversion+0x66>
        SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 800666c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800666e:	f043 0304 	orr.w	r3, r3, #4
 8006672:	6423      	str	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hadc);
 8006674:	2300      	movs	r3, #0
 8006676:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_TIMEOUT;
 800667a:	2003      	movs	r0, #3
 800667c:	e7de      	b.n	800663c <HAL_ADC_PollForConversion+0x24>
      if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 800667e:	f7ff fe97 	bl	80063b0 <HAL_GetTick>
 8006682:	1b80      	subs	r0, r0, r6
 8006684:	42a8      	cmp	r0, r5
 8006686:	d9dd      	bls.n	8006644 <HAL_ADC_PollForConversion+0x2c>
 8006688:	e7f0      	b.n	800666c <HAL_ADC_PollForConversion+0x54>
     (hadc->Init.ContinuousConvMode == DISABLE)            &&
 800668a:	7e20      	ldrb	r0, [r4, #24]
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 800668c:	2800      	cmp	r0, #0
 800668e:	d1e8      	bne.n	8006662 <HAL_ADC_PollForConversion+0x4a>
     (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8006690:	6ada      	ldr	r2, [r3, #44]	; 0x2c
     (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8006692:	f412 0f70 	tst.w	r2, #15728640	; 0xf00000
 8006696:	d002      	beq.n	800669e <HAL_ADC_PollForConversion+0x86>
      HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 8006698:	689b      	ldr	r3, [r3, #8]
     (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 800669a:	055a      	lsls	r2, r3, #21
 800669c:	d4e1      	bmi.n	8006662 <HAL_ADC_PollForConversion+0x4a>
    CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 800669e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80066a0:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80066a4:	6423      	str	r3, [r4, #64]	; 0x40
    if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 80066a6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80066a8:	04db      	lsls	r3, r3, #19
 80066aa:	d4da      	bmi.n	8006662 <HAL_ADC_PollForConversion+0x4a>
      SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 80066ac:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80066ae:	f043 0301 	orr.w	r3, r3, #1
 80066b2:	6423      	str	r3, [r4, #64]	; 0x40
 80066b4:	e7c2      	b.n	800663c <HAL_ADC_PollForConversion+0x24>

080066b6 <HAL_ADC_GetValue>:
  return hadc->Instance->DR;
 80066b6:	6803      	ldr	r3, [r0, #0]
 80066b8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
}
 80066ba:	4770      	bx	lr

080066bc <HAL_ADC_ConfigChannel>:
{
 80066bc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  __IO uint32_t counter = 0U;
 80066be:	2300      	movs	r3, #0
 80066c0:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 80066c2:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 80066c6:	2b01      	cmp	r3, #1
 80066c8:	d069      	beq.n	800679e <HAL_ADC_ConfigChannel+0xe2>
 80066ca:	2301      	movs	r3, #1
 80066cc:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  if (sConfig->Channel > ADC_CHANNEL_9)
 80066d0:	680d      	ldr	r5, [r1, #0]
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 80066d2:	6803      	ldr	r3, [r0, #0]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 80066d4:	688e      	ldr	r6, [r1, #8]
  if (sConfig->Channel > ADC_CHANNEL_9)
 80066d6:	2d09      	cmp	r5, #9
 80066d8:	b2ac      	uxth	r4, r5
 80066da:	d934      	bls.n	8006746 <HAL_ADC_ConfigChannel+0x8a>
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 80066dc:	eb04 0244 	add.w	r2, r4, r4, lsl #1
 80066e0:	68df      	ldr	r7, [r3, #12]
 80066e2:	3a1e      	subs	r2, #30
 80066e4:	f04f 0c07 	mov.w	ip, #7
 80066e8:	fa0c fc02 	lsl.w	ip, ip, r2
 80066ec:	ea27 070c 	bic.w	r7, r7, ip
 80066f0:	60df      	str	r7, [r3, #12]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 80066f2:	68df      	ldr	r7, [r3, #12]
 80066f4:	fa06 f202 	lsl.w	r2, r6, r2
 80066f8:	433a      	orrs	r2, r7
 80066fa:	60da      	str	r2, [r3, #12]
  if (sConfig->Rank < 7U)
 80066fc:	6849      	ldr	r1, [r1, #4]
 80066fe:	2906      	cmp	r1, #6
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8006700:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  if (sConfig->Rank < 7U)
 8006704:	d82f      	bhi.n	8006766 <HAL_ADC_ConfigChannel+0xaa>
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8006706:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8006708:	3a05      	subs	r2, #5
 800670a:	261f      	movs	r6, #31
 800670c:	4096      	lsls	r6, r2
 800670e:	ea21 0106 	bic.w	r1, r1, r6
 8006712:	6359      	str	r1, [r3, #52]	; 0x34
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 8006714:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8006716:	fa04 f202 	lsl.w	r2, r4, r2
 800671a:	430a      	orrs	r2, r1
 800671c:	635a      	str	r2, [r3, #52]	; 0x34
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 800671e:	4a30      	ldr	r2, [pc, #192]	; (80067e0 <HAL_ADC_ConfigChannel+0x124>)
 8006720:	4293      	cmp	r3, r2
 8006722:	d10a      	bne.n	800673a <HAL_ADC_ConfigChannel+0x7e>
 8006724:	2d12      	cmp	r5, #18
 8006726:	d13c      	bne.n	80067a2 <HAL_ADC_ConfigChannel+0xe6>
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 8006728:	4b2e      	ldr	r3, [pc, #184]	; (80067e4 <HAL_ADC_ConfigChannel+0x128>)
 800672a:	685a      	ldr	r2, [r3, #4]
 800672c:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8006730:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 8006732:	685a      	ldr	r2, [r3, #4]
 8006734:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8006738:	605a      	str	r2, [r3, #4]
  __HAL_UNLOCK(hadc);
 800673a:	2300      	movs	r3, #0
 800673c:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  return HAL_OK;
 8006740:	4618      	mov	r0, r3
}
 8006742:	b003      	add	sp, #12
 8006744:	bdf0      	pop	{r4, r5, r6, r7, pc}
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 8006746:	691f      	ldr	r7, [r3, #16]
 8006748:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800674c:	f04f 0c07 	mov.w	ip, #7
 8006750:	fa0c fc02 	lsl.w	ip, ip, r2
 8006754:	ea27 070c 	bic.w	r7, r7, ip
 8006758:	611f      	str	r7, [r3, #16]
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 800675a:	691f      	ldr	r7, [r3, #16]
 800675c:	fa06 f202 	lsl.w	r2, r6, r2
 8006760:	433a      	orrs	r2, r7
 8006762:	611a      	str	r2, [r3, #16]
 8006764:	e7ca      	b.n	80066fc <HAL_ADC_ConfigChannel+0x40>
  else if (sConfig->Rank < 13U)
 8006766:	290c      	cmp	r1, #12
 8006768:	f04f 011f 	mov.w	r1, #31
 800676c:	d80b      	bhi.n	8006786 <HAL_ADC_ConfigChannel+0xca>
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 800676e:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 8006770:	3a23      	subs	r2, #35	; 0x23
 8006772:	4091      	lsls	r1, r2
 8006774:	ea26 0101 	bic.w	r1, r6, r1
 8006778:	6319      	str	r1, [r3, #48]	; 0x30
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 800677a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800677c:	fa04 f202 	lsl.w	r2, r4, r2
 8006780:	430a      	orrs	r2, r1
 8006782:	631a      	str	r2, [r3, #48]	; 0x30
 8006784:	e7cb      	b.n	800671e <HAL_ADC_ConfigChannel+0x62>
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 8006786:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8006788:	3a41      	subs	r2, #65	; 0x41
 800678a:	4091      	lsls	r1, r2
 800678c:	ea26 0101 	bic.w	r1, r6, r1
 8006790:	62d9      	str	r1, [r3, #44]	; 0x2c
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 8006792:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8006794:	fa04 f202 	lsl.w	r2, r4, r2
 8006798:	430a      	orrs	r2, r1
 800679a:	62da      	str	r2, [r3, #44]	; 0x2c
 800679c:	e7bf      	b.n	800671e <HAL_ADC_ConfigChannel+0x62>
  __HAL_LOCK(hadc);
 800679e:	2002      	movs	r0, #2
 80067a0:	e7cf      	b.n	8006742 <HAL_ADC_ConfigChannel+0x86>
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 80067a2:	4b11      	ldr	r3, [pc, #68]	; (80067e8 <HAL_ADC_ConfigChannel+0x12c>)
 80067a4:	429d      	cmp	r5, r3
 80067a6:	d001      	beq.n	80067ac <HAL_ADC_ConfigChannel+0xf0>
 80067a8:	2d11      	cmp	r5, #17
 80067aa:	d1c6      	bne.n	800673a <HAL_ADC_ConfigChannel+0x7e>
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 80067ac:	4b0d      	ldr	r3, [pc, #52]	; (80067e4 <HAL_ADC_ConfigChannel+0x128>)
 80067ae:	685a      	ldr	r2, [r3, #4]
 80067b0:	f422 0280 	bic.w	r2, r2, #4194304	; 0x400000
 80067b4:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 80067b6:	685a      	ldr	r2, [r3, #4]
 80067b8:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80067bc:	605a      	str	r2, [r3, #4]
    if((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR))
 80067be:	4b0a      	ldr	r3, [pc, #40]	; (80067e8 <HAL_ADC_ConfigChannel+0x12c>)
 80067c0:	429d      	cmp	r5, r3
 80067c2:	d1ba      	bne.n	800673a <HAL_ADC_ConfigChannel+0x7e>
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 80067c4:	4b09      	ldr	r3, [pc, #36]	; (80067ec <HAL_ADC_ConfigChannel+0x130>)
 80067c6:	4a0a      	ldr	r2, [pc, #40]	; (80067f0 <HAL_ADC_ConfigChannel+0x134>)
 80067c8:	681b      	ldr	r3, [r3, #0]
 80067ca:	fbb3 f3f2 	udiv	r3, r3, r2
 80067ce:	220a      	movs	r2, #10
 80067d0:	4353      	muls	r3, r2
        counter--;
 80067d2:	9301      	str	r3, [sp, #4]
      while(counter != 0U)
 80067d4:	9b01      	ldr	r3, [sp, #4]
 80067d6:	2b00      	cmp	r3, #0
 80067d8:	d0af      	beq.n	800673a <HAL_ADC_ConfigChannel+0x7e>
        counter--;
 80067da:	9b01      	ldr	r3, [sp, #4]
 80067dc:	3b01      	subs	r3, #1
 80067de:	e7f8      	b.n	80067d2 <HAL_ADC_ConfigChannel+0x116>
 80067e0:	40012000 	.word	0x40012000
 80067e4:	40012300 	.word	0x40012300
 80067e8:	10000012 	.word	0x10000012
 80067ec:	2000007c 	.word	0x2000007c
 80067f0:	000f4240 	.word	0x000f4240

080067f4 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80067f4:	4907      	ldr	r1, [pc, #28]	; (8006814 <HAL_NVIC_SetPriorityGrouping+0x20>)
 80067f6:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80067f8:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80067fc:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80067fe:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8006800:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8006804:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8006806:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8006808:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800680c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8006810:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8006812:	4770      	bx	lr
 8006814:	e000ed00 	.word	0xe000ed00

08006818 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8006818:	4b16      	ldr	r3, [pc, #88]	; (8006874 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800681a:	b530      	push	{r4, r5, lr}
 800681c:	68dc      	ldr	r4, [r3, #12]
 800681e:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8006822:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8006826:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8006828:	2d04      	cmp	r5, #4
 800682a:	bf28      	it	cs
 800682c:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800682e:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8006830:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8006834:	bf8c      	ite	hi
 8006836:	3c03      	subhi	r4, #3
 8006838:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800683a:	fa03 f505 	lsl.w	r5, r3, r5
 800683e:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8006842:	40a3      	lsls	r3, r4
 8006844:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8006848:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 800684a:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800684c:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006850:	bfac      	ite	ge
 8006852:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006856:	4a08      	ldrlt	r2, [pc, #32]	; (8006878 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006858:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800685c:	bfb8      	it	lt
 800685e:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006862:	b2db      	uxtb	r3, r3
 8006864:	bfaa      	itet	ge
 8006866:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800686a:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800686c:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8006870:	bd30      	pop	{r4, r5, pc}
 8006872:	bf00      	nop
 8006874:	e000ed00 	.word	0xe000ed00
 8006878:	e000ed14 	.word	0xe000ed14

0800687c <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 800687c:	2800      	cmp	r0, #0
 800687e:	db08      	blt.n	8006892 <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8006880:	0942      	lsrs	r2, r0, #5
 8006882:	2301      	movs	r3, #1
 8006884:	f000 001f 	and.w	r0, r0, #31
 8006888:	fa03 f000 	lsl.w	r0, r3, r0
 800688c:	4b01      	ldr	r3, [pc, #4]	; (8006894 <HAL_NVIC_EnableIRQ+0x18>)
 800688e:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8006892:	4770      	bx	lr
 8006894:	e000e100 	.word	0xe000e100

08006898 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8006898:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800689a:	4604      	mov	r4, r0
 800689c:	b150      	cbz	r0, 80068b4 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800689e:	7943      	ldrb	r3, [r0, #5]
 80068a0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80068a4:	b913      	cbnz	r3, 80068ac <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 80068a6:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 80068a8:	f7fb f89e 	bl	80019e8 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 80068ac:	2301      	movs	r3, #1
 80068ae:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 80068b0:	2000      	movs	r0, #0
}
 80068b2:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80068b4:	2001      	movs	r0, #1
 80068b6:	e7fc      	b.n	80068b2 <HAL_CRC_Init+0x1a>

080068b8 <HAL_DAC_Init>:
  * @param  hdac pointer to a DAC_HandleTypeDef structure that contains
  *         the configuration information for the specified DAC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_Init(DAC_HandleTypeDef* hdac)
{ 
 80068b8:	b510      	push	{r4, lr}
  /* Check DAC handle */
  if(hdac == NULL)
 80068ba:	4604      	mov	r4, r0
 80068bc:	b168      	cbz	r0, 80068da <HAL_DAC_Init+0x22>
     return HAL_ERROR;
  }
  /* Check the parameters */
  assert_param(IS_DAC_ALL_INSTANCE(hdac->Instance));
  
  if(hdac->State == HAL_DAC_STATE_RESET)
 80068be:	7903      	ldrb	r3, [r0, #4]
 80068c0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80068c4:	b913      	cbnz	r3, 80068cc <HAL_DAC_Init+0x14>
    {
      hdac->MspInitCallback               = HAL_DAC_MspInit;
    }
#endif /* USE_HAL_DAC_REGISTER_CALLBACKS */
    /* Allocate lock resource and initialize it */
    hdac->Lock = HAL_UNLOCKED;
 80068c6:	7142      	strb	r2, [r0, #5]
#if (USE_HAL_DAC_REGISTER_CALLBACKS == 1)
    /* Init the low level hardware */
    hdac->MspInitCallback(hdac);
#else
    /* Init the low level hardware */
    HAL_DAC_MspInit(hdac);
 80068c8:	f7fb f8a6 	bl	8001a18 <HAL_DAC_MspInit>
#endif /* USE_HAL_DAC_REGISTER_CALLBACKS */
  }
  
  /* Initialize the DAC state*/
  hdac->State = HAL_DAC_STATE_BUSY;
 80068cc:	2302      	movs	r3, #2
 80068ce:	7123      	strb	r3, [r4, #4]
  
  /* Set DAC error code to none */
  hdac->ErrorCode = HAL_DAC_ERROR_NONE;
 80068d0:	2000      	movs	r0, #0
  
  /* Initialize the DAC state*/
  hdac->State = HAL_DAC_STATE_READY;
 80068d2:	2301      	movs	r3, #1
  hdac->ErrorCode = HAL_DAC_ERROR_NONE;
 80068d4:	6120      	str	r0, [r4, #16]
  hdac->State = HAL_DAC_STATE_READY;
 80068d6:	7123      	strb	r3, [r4, #4]
  
  /* Return function status */
  return HAL_OK;
}
 80068d8:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 80068da:	2001      	movs	r0, #1
 80068dc:	e7fc      	b.n	80068d8 <HAL_DAC_Init+0x20>

080068de <HAL_DAC_ConfigChannel>:
  *            @arg DAC_CHANNEL_1: DAC Channel1 selected
  *            @arg DAC_CHANNEL_2: DAC Channel2 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_ConfigChannel(DAC_HandleTypeDef* hdac, DAC_ChannelConfTypeDef* sConfig, uint32_t Channel)
{
 80068de:	b530      	push	{r4, r5, lr}
  assert_param(IS_DAC_TRIGGER(sConfig->DAC_Trigger));
  assert_param(IS_DAC_OUTPUT_BUFFER_STATE(sConfig->DAC_OutputBuffer));
  assert_param(IS_DAC_CHANNEL(Channel));
  
  /* Process locked */
  __HAL_LOCK(hdac);
 80068e0:	7943      	ldrb	r3, [r0, #5]
 80068e2:	2b01      	cmp	r3, #1
 80068e4:	f04f 0302 	mov.w	r3, #2
 80068e8:	d018      	beq.n	800691c <HAL_DAC_ConfigChannel+0x3e>
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_BUSY;
  
  /* Get the DAC CR value */
  tmpreg1 = hdac->Instance->CR;
 80068ea:	6804      	ldr	r4, [r0, #0]
  hdac->State = HAL_DAC_STATE_BUSY;
 80068ec:	7103      	strb	r3, [r0, #4]
  tmpreg1 = hdac->Instance->CR;
 80068ee:	6823      	ldr	r3, [r4, #0]
  /* Clear BOFFx, TENx, TSELx, WAVEx and MAMPx bits */
  tmpreg1 &= ~(((uint32_t)(DAC_CR_MAMP1 | DAC_CR_WAVE1 | DAC_CR_TSEL1 | DAC_CR_TEN1 | DAC_CR_BOFF1)) << Channel);
 80068f0:	f640 75fe 	movw	r5, #4094	; 0xffe
 80068f4:	4095      	lsls	r5, r2
 80068f6:	ea23 0505 	bic.w	r5, r3, r5
  /* Configure for the selected DAC channel: buffer output, trigger */
  /* Set TSELx and TENx bits according to DAC_Trigger value */
  /* Set BOFFx bit according to DAC_OutputBuffer value */   
  tmpreg2 = (sConfig->DAC_Trigger | sConfig->DAC_OutputBuffer);
 80068fa:	e9d1 3100 	ldrd	r3, r1, [r1]
 80068fe:	430b      	orrs	r3, r1
  /* Calculate CR register value depending on DAC_Channel */
  tmpreg1 |= tmpreg2 << Channel;
 8006900:	4093      	lsls	r3, r2
 8006902:	432b      	orrs	r3, r5
  /* Write to DAC CR */
  hdac->Instance->CR = tmpreg1;
 8006904:	6023      	str	r3, [r4, #0]
  /* Disable wave generation */
  hdac->Instance->CR &= ~(DAC_CR_WAVE1 << Channel);
 8006906:	6823      	ldr	r3, [r4, #0]
 8006908:	21c0      	movs	r1, #192	; 0xc0
 800690a:	fa01 f202 	lsl.w	r2, r1, r2
 800690e:	ea23 0202 	bic.w	r2, r3, r2
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_READY;
 8006912:	2301      	movs	r3, #1
  hdac->Instance->CR &= ~(DAC_CR_WAVE1 << Channel);
 8006914:	6022      	str	r2, [r4, #0]
  hdac->State = HAL_DAC_STATE_READY;
 8006916:	7103      	strb	r3, [r0, #4]
  
  /* Process unlocked */
  __HAL_UNLOCK(hdac);
 8006918:	2300      	movs	r3, #0
 800691a:	7143      	strb	r3, [r0, #5]
  __HAL_LOCK(hdac);
 800691c:	4618      	mov	r0, r3
  
  /* Return function status */
  return HAL_OK;
}
 800691e:	bd30      	pop	{r4, r5, pc}

08006920 <HAL_DAC_SetValue>:
  *            @arg DAC_ALIGN_12B_R: 12bit right data alignment selected
  * @param  Data Data to be loaded in the selected data holding register.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_SetValue(DAC_HandleTypeDef* hdac, uint32_t Channel, uint32_t Alignment, uint32_t Data)
{  
 8006920:	b513      	push	{r0, r1, r4, lr}
  /* Check the parameters */
  assert_param(IS_DAC_CHANNEL(Channel));
  assert_param(IS_DAC_ALIGN(Alignment));
  assert_param(IS_DAC_DATA(Data));
  
  tmp = (uint32_t)hdac->Instance; 
 8006922:	6800      	ldr	r0, [r0, #0]
  __IO uint32_t tmp = 0U;
 8006924:	2400      	movs	r4, #0
 8006926:	9401      	str	r4, [sp, #4]
  tmp = (uint32_t)hdac->Instance; 
 8006928:	9001      	str	r0, [sp, #4]
  if(Channel == DAC_CHANNEL_1)
 800692a:	b941      	cbnz	r1, 800693e <HAL_DAC_SetValue+0x1e>
  {
    tmp += DAC_DHR12R1_ALIGNMENT(Alignment);
 800692c:	9901      	ldr	r1, [sp, #4]
 800692e:	3108      	adds	r1, #8
  }
  else
  {
    tmp += DAC_DHR12R2_ALIGNMENT(Alignment);
 8006930:	440a      	add	r2, r1
 8006932:	9201      	str	r2, [sp, #4]
  }

  /* Set the DAC channel1 selected data holding register */
  *(__IO uint32_t *) tmp = Data;
 8006934:	9a01      	ldr	r2, [sp, #4]
  
  /* Return function status */
  return HAL_OK;
}
 8006936:	2000      	movs	r0, #0
  *(__IO uint32_t *) tmp = Data;
 8006938:	6013      	str	r3, [r2, #0]
}
 800693a:	b002      	add	sp, #8
 800693c:	bd10      	pop	{r4, pc}
    tmp += DAC_DHR12R2_ALIGNMENT(Alignment);
 800693e:	9901      	ldr	r1, [sp, #4]
 8006940:	3114      	adds	r1, #20
 8006942:	e7f5      	b.n	8006930 <HAL_DAC_SetValue+0x10>

08006944 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8006944:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if(hdma2d == NULL)
 8006946:	4604      	mov	r4, r0
 8006948:	b330      	cbz	r0, 8006998 <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 800694a:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800694e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006952:	b91b      	cbnz	r3, 800695c <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8006954:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8006958:	f7fb f890 	bl	8001a7c <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800695c:	6822      	ldr	r2, [r4, #0]
 800695e:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8006960:	2302      	movs	r3, #2
 8006962:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8006966:	6813      	ldr	r3, [r2, #0]
 8006968:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800696c:	430b      	orrs	r3, r1
 800696e:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8006970:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8006972:	68a1      	ldr	r1, [r4, #8]
 8006974:	f023 0307 	bic.w	r3, r3, #7
 8006978:	430b      	orrs	r3, r1
 800697a:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 800697c:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800697e:	68e1      	ldr	r1, [r4, #12]
 8006980:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8006984:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8006988:	430b      	orrs	r3, r1
 800698a:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800698c:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800698e:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8006990:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8006992:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 8006996:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 8006998:	2001      	movs	r0, #1
 800699a:	e7fc      	b.n	8006996 <HAL_DMA2D_Init+0x52>

0800699c <HAL_DMA2D_LineEventCallback>:
 800699c:	4770      	bx	lr

0800699e <HAL_DMA2D_CLUTLoadingCpltCallback>:
 800699e:	4770      	bx	lr

080069a0 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80069a0:	6803      	ldr	r3, [r0, #0]
{
 80069a2:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80069a4:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 80069a6:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80069a8:	07f2      	lsls	r2, r6, #31
{
 80069aa:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80069ac:	d514      	bpl.n	80069d8 <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 80069ae:	05e9      	lsls	r1, r5, #23
 80069b0:	d512      	bpl.n	80069d8 <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 80069b2:	681a      	ldr	r2, [r3, #0]
 80069b4:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80069b8:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 80069ba:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 80069bc:	f042 0201 	orr.w	r2, r2, #1
 80069c0:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 80069c2:	2201      	movs	r2, #1
 80069c4:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80069c6:	2304      	movs	r3, #4
 80069c8:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80069cc:	2300      	movs	r3, #0
 80069ce:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 80069d2:	6943      	ldr	r3, [r0, #20]
 80069d4:	b103      	cbz	r3, 80069d8 <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80069d6:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 80069d8:	06b2      	lsls	r2, r6, #26
 80069da:	d516      	bpl.n	8006a0a <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 80069dc:	04ab      	lsls	r3, r5, #18
 80069de:	d514      	bpl.n	8006a0a <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 80069e0:	6823      	ldr	r3, [r4, #0]
 80069e2:	681a      	ldr	r2, [r3, #0]
 80069e4:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80069e8:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 80069ea:	2220      	movs	r2, #32
 80069ec:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 80069ee:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80069f0:	f043 0302 	orr.w	r3, r3, #2
 80069f4:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80069f6:	2304      	movs	r3, #4
 80069f8:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80069fc:	2300      	movs	r3, #0
 80069fe:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 8006a02:	6963      	ldr	r3, [r4, #20]
 8006a04:	b10b      	cbz	r3, 8006a0a <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8006a06:	4620      	mov	r0, r4
 8006a08:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8006a0a:	0730      	lsls	r0, r6, #28
 8006a0c:	d516      	bpl.n	8006a3c <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8006a0e:	0529      	lsls	r1, r5, #20
 8006a10:	d514      	bpl.n	8006a3c <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8006a12:	6823      	ldr	r3, [r4, #0]
 8006a14:	681a      	ldr	r2, [r3, #0]
 8006a16:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8006a1a:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8006a1c:	2208      	movs	r2, #8
 8006a1e:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8006a20:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006a22:	f043 0304 	orr.w	r3, r3, #4
 8006a26:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8006a28:	2304      	movs	r3, #4
 8006a2a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8006a2e:	2300      	movs	r3, #0
 8006a30:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 8006a34:	6963      	ldr	r3, [r4, #20]
 8006a36:	b10b      	cbz	r3, 8006a3c <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8006a38:	4620      	mov	r0, r4
 8006a3a:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8006a3c:	0772      	lsls	r2, r6, #29
 8006a3e:	d50b      	bpl.n	8006a58 <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8006a40:	056b      	lsls	r3, r5, #21
 8006a42:	d509      	bpl.n	8006a58 <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8006a44:	6823      	ldr	r3, [r4, #0]
 8006a46:	681a      	ldr	r2, [r3, #0]
 8006a48:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006a4c:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8006a4e:	2204      	movs	r2, #4
 8006a50:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 8006a52:	4620      	mov	r0, r4
 8006a54:	f7ff ffa2 	bl	800699c <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8006a58:	07b0      	lsls	r0, r6, #30
 8006a5a:	d514      	bpl.n	8006a86 <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8006a5c:	05a9      	lsls	r1, r5, #22
 8006a5e:	d512      	bpl.n	8006a86 <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8006a60:	6823      	ldr	r3, [r4, #0]
 8006a62:	681a      	ldr	r2, [r3, #0]
 8006a64:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8006a68:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8006a6a:	2202      	movs	r2, #2
 8006a6c:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8006a6e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006a70:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8006a72:	2301      	movs	r3, #1
 8006a74:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8006a78:	2300      	movs	r3, #0
 8006a7a:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferCpltCallback != NULL)
 8006a7e:	6923      	ldr	r3, [r4, #16]
 8006a80:	b10b      	cbz	r3, 8006a86 <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 8006a82:	4620      	mov	r0, r4
 8006a84:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8006a86:	06f2      	lsls	r2, r6, #27
 8006a88:	d513      	bpl.n	8006ab2 <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8006a8a:	04eb      	lsls	r3, r5, #19
 8006a8c:	d511      	bpl.n	8006ab2 <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8006a8e:	6823      	ldr	r3, [r4, #0]
 8006a90:	681a      	ldr	r2, [r3, #0]
 8006a92:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8006a96:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8006a98:	2210      	movs	r2, #16
 8006a9a:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8006a9c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006a9e:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8006aa0:	2301      	movs	r3, #1
 8006aa2:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8006aa6:	2300      	movs	r3, #0
 8006aa8:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8006aac:	4620      	mov	r0, r4
 8006aae:	f7ff ff76 	bl	800699e <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 8006ab2:	bd70      	pop	{r4, r5, r6, pc}

08006ab4 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8006ab4:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8006ab6:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8006aba:	2b01      	cmp	r3, #1
 8006abc:	f04f 0302 	mov.w	r3, #2
 8006ac0:	d02b      	beq.n	8006b1a <HAL_DMA2D_ConfigLayer+0x66>
 8006ac2:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8006ac4:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 8006ac8:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8006acc:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 8006ad0:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 8006ad4:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8006ad6:	4f18      	ldr	r7, [pc, #96]	; (8006b38 <HAL_DMA2D_ConfigLayer+0x84>)
 8006ad8:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8006adc:	3c09      	subs	r4, #9
 8006ade:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8006ae0:	bf9c      	itt	ls
 8006ae2:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 8006ae6:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8006ae8:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8006aec:	6803      	ldr	r3, [r0, #0]
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8006aee:	bf88      	it	hi
 8006af0:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 8006af4:	b999      	cbnz	r1, 8006b1e <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8006af6:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8006af8:	4039      	ands	r1, r7
 8006afa:	430a      	orrs	r2, r1
 8006afc:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8006afe:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8006b00:	6982      	ldr	r2, [r0, #24]
 8006b02:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8006b04:	d803      	bhi.n	8006b0e <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 8006b06:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8006b08:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8006b0c:	629a      	str	r2, [r3, #40]	; 0x28
    {
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8006b0e:	2301      	movs	r3, #1
 8006b10:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8006b14:	2300      	movs	r3, #0
 8006b16:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 8006b1a:	4618      	mov	r0, r3

  return HAL_OK;
}
 8006b1c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8006b1e:	69d9      	ldr	r1, [r3, #28]
 8006b20:	4039      	ands	r1, r7
 8006b22:	430a      	orrs	r2, r1
 8006b24:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8006b26:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8006b28:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8006b2a:	6992      	ldr	r2, [r2, #24]
 8006b2c:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 8006b2e:	bf9c      	itt	ls
 8006b30:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 8006b34:	621d      	strls	r5, [r3, #32]
 8006b36:	e7ea      	b.n	8006b0e <HAL_DMA2D_ConfigLayer+0x5a>
 8006b38:	00fcfff0 	.word	0x00fcfff0

08006b3c <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8006b3c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8006b40:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8006d04 <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8006b44:	4a6d      	ldr	r2, [pc, #436]	; (8006cfc <HAL_GPIO_Init+0x1c0>)
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8006b46:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 8006d08 <HAL_GPIO_Init+0x1cc>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8006b4a:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8006b4c:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 8006b4e:	2401      	movs	r4, #1
 8006b50:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8006b52:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 8006b56:	43ac      	bics	r4, r5
 8006b58:	f040 80b7 	bne.w	8006cca <HAL_GPIO_Init+0x18e>
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8006b5c:	684c      	ldr	r4, [r1, #4]
 8006b5e:	f024 0c10 	bic.w	ip, r4, #16
 8006b62:	ea4f 0e43 	mov.w	lr, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8006b66:	2503      	movs	r5, #3
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8006b68:	f10c 37ff 	add.w	r7, ip, #4294967295
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8006b6c:	fa05 f50e 	lsl.w	r5, r5, lr
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8006b70:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8006b72:	ea6f 0505 	mvn.w	r5, r5
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8006b76:	d811      	bhi.n	8006b9c <HAL_GPIO_Init+0x60>
        temp = GPIOx->OSPEEDR; 
 8006b78:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8006b7a:	ea07 0a05 	and.w	sl, r7, r5
        temp |= (GPIO_Init->Speed << (position * 2U));
 8006b7e:	68cf      	ldr	r7, [r1, #12]
 8006b80:	fa07 f70e 	lsl.w	r7, r7, lr
 8006b84:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 8006b88:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8006b8a:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8006b8c:	ea27 0a06 	bic.w	sl, r7, r6
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 8006b90:	f3c4 1700 	ubfx	r7, r4, #4, #1
 8006b94:	409f      	lsls	r7, r3
 8006b96:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OTYPER = temp;
 8006b9a:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 8006b9c:	68c7      	ldr	r7, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8006b9e:	ea07 0a05 	and.w	sl, r7, r5
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 8006ba2:	688f      	ldr	r7, [r1, #8]
 8006ba4:	fa07 f70e 	lsl.w	r7, r7, lr
 8006ba8:	ea47 070a 	orr.w	r7, r7, sl
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8006bac:	f1bc 0f02 	cmp.w	ip, #2
      GPIOx->PUPDR = temp;
 8006bb0:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8006bb2:	d116      	bne.n	8006be2 <HAL_GPIO_Init+0xa6>
        temp = GPIOx->AFR[position >> 3U];
 8006bb4:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 8006bb8:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8006bbc:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8006bc0:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8006bc4:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8006bc8:	f04f 0c0f 	mov.w	ip, #15
 8006bcc:	fa0c fc0b 	lsl.w	ip, ip, fp
 8006bd0:	ea27 0c0c 	bic.w	ip, r7, ip
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8006bd4:	690f      	ldr	r7, [r1, #16]
 8006bd6:	fa07 f70b 	lsl.w	r7, r7, fp
 8006bda:	ea47 070c 	orr.w	r7, r7, ip
        GPIOx->AFR[position >> 3U] = temp;
 8006bde:	f8ca 7020 	str.w	r7, [sl, #32]
      temp = GPIOx->MODER;
 8006be2:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8006be4:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8006be6:	f004 0703 	and.w	r7, r4, #3
 8006bea:	fa07 f70e 	lsl.w	r7, r7, lr
 8006bee:	433d      	orrs	r5, r7
      GPIOx->MODER = temp;
 8006bf0:	6005      	str	r5, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8006bf2:	00e5      	lsls	r5, r4, #3
 8006bf4:	d569      	bpl.n	8006cca <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8006bf6:	f04f 0b00 	mov.w	fp, #0
 8006bfa:	f8cd b004 	str.w	fp, [sp, #4]
 8006bfe:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8006c02:	4d3f      	ldr	r5, [pc, #252]	; (8006d00 <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8006c04:	f447 4780 	orr.w	r7, r7, #16384	; 0x4000
 8006c08:	f8c8 7044 	str.w	r7, [r8, #68]	; 0x44
 8006c0c:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 8006c10:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 8006c14:	9701      	str	r7, [sp, #4]
 8006c16:	9f01      	ldr	r7, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8006c18:	f023 0703 	bic.w	r7, r3, #3
 8006c1c:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8006c20:	f507 379c 	add.w	r7, r7, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8006c24:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8006c28:	f8d7 a008 	ldr.w	sl, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8006c2c:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8006c30:	f04f 0c0f 	mov.w	ip, #15
 8006c34:	fa0c fc0e 	lsl.w	ip, ip, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8006c38:	42a8      	cmp	r0, r5
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8006c3a:	ea2a 0c0c 	bic.w	ip, sl, ip
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8006c3e:	d04b      	beq.n	8006cd8 <HAL_GPIO_Init+0x19c>
 8006c40:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006c44:	42a8      	cmp	r0, r5
 8006c46:	d049      	beq.n	8006cdc <HAL_GPIO_Init+0x1a0>
 8006c48:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006c4c:	42a8      	cmp	r0, r5
 8006c4e:	d047      	beq.n	8006ce0 <HAL_GPIO_Init+0x1a4>
 8006c50:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006c54:	42a8      	cmp	r0, r5
 8006c56:	d045      	beq.n	8006ce4 <HAL_GPIO_Init+0x1a8>
 8006c58:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006c5c:	42a8      	cmp	r0, r5
 8006c5e:	d043      	beq.n	8006ce8 <HAL_GPIO_Init+0x1ac>
 8006c60:	4548      	cmp	r0, r9
 8006c62:	d043      	beq.n	8006cec <HAL_GPIO_Init+0x1b0>
 8006c64:	f505 6500 	add.w	r5, r5, #2048	; 0x800
 8006c68:	42a8      	cmp	r0, r5
 8006c6a:	d041      	beq.n	8006cf0 <HAL_GPIO_Init+0x1b4>
 8006c6c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006c70:	42a8      	cmp	r0, r5
 8006c72:	d03f      	beq.n	8006cf4 <HAL_GPIO_Init+0x1b8>
 8006c74:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006c78:	42a8      	cmp	r0, r5
 8006c7a:	d03d      	beq.n	8006cf8 <HAL_GPIO_Init+0x1bc>
 8006c7c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006c80:	42a8      	cmp	r0, r5
 8006c82:	bf0c      	ite	eq
 8006c84:	2509      	moveq	r5, #9
 8006c86:	250a      	movne	r5, #10
 8006c88:	fa05 f50e 	lsl.w	r5, r5, lr
 8006c8c:	ea45 050c 	orr.w	r5, r5, ip
        SYSCFG->EXTICR[position >> 2U] = temp;
 8006c90:	60bd      	str	r5, [r7, #8]
        temp = EXTI->IMR;
 8006c92:	6815      	ldr	r5, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 8006c94:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8006c96:	f414 3f80 	tst.w	r4, #65536	; 0x10000
        temp &= ~((uint32_t)iocurrent);
 8006c9a:	bf0c      	ite	eq
 8006c9c:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 8006c9e:	4335      	orrne	r5, r6
        }
        EXTI->IMR = temp;
 8006ca0:	6015      	str	r5, [r2, #0]

        temp = EXTI->EMR;
 8006ca2:	6855      	ldr	r5, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8006ca4:	f414 3f00 	tst.w	r4, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 8006ca8:	bf0c      	ite	eq
 8006caa:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 8006cac:	4335      	orrne	r5, r6
        }
        EXTI->EMR = temp;
 8006cae:	6055      	str	r5, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8006cb0:	6895      	ldr	r5, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8006cb2:	f414 1f80 	tst.w	r4, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 8006cb6:	bf0c      	ite	eq
 8006cb8:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 8006cba:	4335      	orrne	r5, r6
        }
        EXTI->RTSR = temp;
 8006cbc:	6095      	str	r5, [r2, #8]

        temp = EXTI->FTSR;
 8006cbe:	68d5      	ldr	r5, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8006cc0:	02a4      	lsls	r4, r4, #10
        temp &= ~((uint32_t)iocurrent);
 8006cc2:	bf54      	ite	pl
 8006cc4:	403d      	andpl	r5, r7
        {
          temp |= iocurrent;
 8006cc6:	4335      	orrmi	r5, r6
        }
        EXTI->FTSR = temp;
 8006cc8:	60d5      	str	r5, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8006cca:	3301      	adds	r3, #1
 8006ccc:	2b10      	cmp	r3, #16
 8006cce:	f47f af3d 	bne.w	8006b4c <HAL_GPIO_Init+0x10>
      }
    }
  }
}
 8006cd2:	b003      	add	sp, #12
 8006cd4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8006cd8:	465d      	mov	r5, fp
 8006cda:	e7d5      	b.n	8006c88 <HAL_GPIO_Init+0x14c>
 8006cdc:	2501      	movs	r5, #1
 8006cde:	e7d3      	b.n	8006c88 <HAL_GPIO_Init+0x14c>
 8006ce0:	2502      	movs	r5, #2
 8006ce2:	e7d1      	b.n	8006c88 <HAL_GPIO_Init+0x14c>
 8006ce4:	2503      	movs	r5, #3
 8006ce6:	e7cf      	b.n	8006c88 <HAL_GPIO_Init+0x14c>
 8006ce8:	2504      	movs	r5, #4
 8006cea:	e7cd      	b.n	8006c88 <HAL_GPIO_Init+0x14c>
 8006cec:	2505      	movs	r5, #5
 8006cee:	e7cb      	b.n	8006c88 <HAL_GPIO_Init+0x14c>
 8006cf0:	2506      	movs	r5, #6
 8006cf2:	e7c9      	b.n	8006c88 <HAL_GPIO_Init+0x14c>
 8006cf4:	2507      	movs	r5, #7
 8006cf6:	e7c7      	b.n	8006c88 <HAL_GPIO_Init+0x14c>
 8006cf8:	2508      	movs	r5, #8
 8006cfa:	e7c5      	b.n	8006c88 <HAL_GPIO_Init+0x14c>
 8006cfc:	40013c00 	.word	0x40013c00
 8006d00:	40020000 	.word	0x40020000
 8006d04:	40023800 	.word	0x40023800
 8006d08:	40021400 	.word	0x40021400

08006d0c <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8006d0c:	b10a      	cbz	r2, 8006d12 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8006d0e:	6181      	str	r1, [r0, #24]
  }
}
 8006d10:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8006d12:	0409      	lsls	r1, r1, #16
 8006d14:	e7fb      	b.n	8006d0e <HAL_GPIO_WritePin+0x2>

08006d16 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8006d16:	6801      	ldr	r1, [r0, #0]
 8006d18:	694b      	ldr	r3, [r1, #20]
 8006d1a:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 8006d1e:	f04f 0200 	mov.w	r2, #0
 8006d22:	d010      	beq.n	8006d46 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8006d24:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8006d28:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8006d2a:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8006d2c:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8006d2e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006d32:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8006d36:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8006d38:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8006d3c:	f043 0304 	orr.w	r3, r3, #4
 8006d40:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 8006d42:	2001      	movs	r0, #1
 8006d44:	4770      	bx	lr
  }
  return HAL_OK;
 8006d46:	4618      	mov	r0, r3
}
 8006d48:	4770      	bx	lr

08006d4a <I2C_WaitOnFlagUntilTimeout>:
{
 8006d4a:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 8006d4e:	4606      	mov	r6, r0
 8006d50:	460f      	mov	r7, r1
 8006d52:	4691      	mov	r9, r2
 8006d54:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8006d56:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8006d5a:	6833      	ldr	r3, [r6, #0]
 8006d5c:	f1ba 0f01 	cmp.w	sl, #1
 8006d60:	bf0c      	ite	eq
 8006d62:	695c      	ldreq	r4, [r3, #20]
 8006d64:	699c      	ldrne	r4, [r3, #24]
 8006d66:	ea27 0404 	bic.w	r4, r7, r4
 8006d6a:	b2a4      	uxth	r4, r4
 8006d6c:	fab4 f484 	clz	r4, r4
 8006d70:	0964      	lsrs	r4, r4, #5
 8006d72:	45a1      	cmp	r9, r4
 8006d74:	d001      	beq.n	8006d7a <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8006d76:	2000      	movs	r0, #0
 8006d78:	e017      	b.n	8006daa <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 8006d7a:	1c6a      	adds	r2, r5, #1
 8006d7c:	d0ee      	beq.n	8006d5c <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006d7e:	f7ff fb17 	bl	80063b0 <HAL_GetTick>
 8006d82:	9b08      	ldr	r3, [sp, #32]
 8006d84:	1ac0      	subs	r0, r0, r3
 8006d86:	42a8      	cmp	r0, r5
 8006d88:	d801      	bhi.n	8006d8e <I2C_WaitOnFlagUntilTimeout+0x44>
 8006d8a:	2d00      	cmp	r5, #0
 8006d8c:	d1e5      	bne.n	8006d5a <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8006d8e:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8006d90:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8006d92:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8006d94:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8006d98:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8006d9c:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8006d9e:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8006da2:	f042 0220 	orr.w	r2, r2, #32
 8006da6:	6432      	str	r2, [r6, #64]	; 0x40
        return HAL_ERROR;
 8006da8:	2001      	movs	r0, #1
}
 8006daa:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

08006dae <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 8006dae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006db2:	4604      	mov	r4, r0
 8006db4:	460f      	mov	r7, r1
 8006db6:	4616      	mov	r6, r2
 8006db8:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8006dba:	6825      	ldr	r5, [r4, #0]
 8006dbc:	6968      	ldr	r0, [r5, #20]
 8006dbe:	ea27 0000 	bic.w	r0, r7, r0
 8006dc2:	b280      	uxth	r0, r0
 8006dc4:	b1b8      	cbz	r0, 8006df6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8006dc6:	696b      	ldr	r3, [r5, #20]
 8006dc8:	055a      	lsls	r2, r3, #21
 8006dca:	d516      	bpl.n	8006dfa <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006dcc:	682b      	ldr	r3, [r5, #0]
 8006dce:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8006dd2:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8006dd4:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8006dd8:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8006dda:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8006ddc:	2300      	movs	r3, #0
 8006dde:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8006de0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006de4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8006de8:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8006dea:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006dee:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8006df0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 8006df4:	2001      	movs	r0, #1
}
 8006df6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8006dfa:	1c73      	adds	r3, r6, #1
 8006dfc:	d0de      	beq.n	8006dbc <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006dfe:	f7ff fad7 	bl	80063b0 <HAL_GetTick>
 8006e02:	eba0 0008 	sub.w	r0, r0, r8
 8006e06:	42b0      	cmp	r0, r6
 8006e08:	d801      	bhi.n	8006e0e <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 8006e0a:	2e00      	cmp	r6, #0
 8006e0c:	d1d5      	bne.n	8006dba <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006e0e:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8006e10:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006e12:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8006e14:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006e18:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006e1c:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8006e1e:	f042 0220 	orr.w	r2, r2, #32
 8006e22:	e7e4      	b.n	8006dee <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08006e24 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8006e24:	b570      	push	{r4, r5, r6, lr}
 8006e26:	4604      	mov	r4, r0
 8006e28:	460d      	mov	r5, r1
 8006e2a:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8006e2c:	6821      	ldr	r1, [r4, #0]
 8006e2e:	694b      	ldr	r3, [r1, #20]
 8006e30:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 8006e34:	d001      	beq.n	8006e3a <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8006e36:	2000      	movs	r0, #0
 8006e38:	e010      	b.n	8006e5c <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8006e3a:	694a      	ldr	r2, [r1, #20]
 8006e3c:	06d2      	lsls	r2, r2, #27
 8006e3e:	d50e      	bpl.n	8006e5e <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8006e40:	f06f 0210 	mvn.w	r2, #16
 8006e44:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8006e46:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8006e48:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8006e4a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006e4e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8006e52:	6c22      	ldr	r2, [r4, #64]	; 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006e54:	6422      	str	r2, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8006e56:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      return HAL_ERROR;
 8006e5a:	2001      	movs	r0, #1
}
 8006e5c:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006e5e:	f7ff faa7 	bl	80063b0 <HAL_GetTick>
 8006e62:	1b80      	subs	r0, r0, r6
 8006e64:	42a8      	cmp	r0, r5
 8006e66:	d801      	bhi.n	8006e6c <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 8006e68:	2d00      	cmp	r5, #0
 8006e6a:	d1df      	bne.n	8006e2c <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->PreviousState       = I2C_STATE_NONE;
 8006e6c:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 8006e6e:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8006e70:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8006e72:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006e76:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006e7a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8006e7c:	f042 0220 	orr.w	r2, r2, #32
 8006e80:	e7e8      	b.n	8006e54 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

08006e82 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 8006e82:	b570      	push	{r4, r5, r6, lr}
 8006e84:	4604      	mov	r4, r0
 8006e86:	460d      	mov	r5, r1
 8006e88:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8006e8a:	6823      	ldr	r3, [r4, #0]
 8006e8c:	695b      	ldr	r3, [r3, #20]
 8006e8e:	075b      	lsls	r3, r3, #29
 8006e90:	d501      	bpl.n	8006e96 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 8006e92:	2000      	movs	r0, #0
}
 8006e94:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8006e96:	4620      	mov	r0, r4
 8006e98:	f7ff ff3d 	bl	8006d16 <I2C_IsAcknowledgeFailed>
 8006e9c:	b9a8      	cbnz	r0, 8006eca <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8006e9e:	1c6a      	adds	r2, r5, #1
 8006ea0:	d0f3      	beq.n	8006e8a <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006ea2:	f7ff fa85 	bl	80063b0 <HAL_GetTick>
 8006ea6:	1b80      	subs	r0, r0, r6
 8006ea8:	42a8      	cmp	r0, r5
 8006eaa:	d801      	bhi.n	8006eb0 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8006eac:	2d00      	cmp	r5, #0
 8006eae:	d1ec      	bne.n	8006e8a <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006eb0:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8006eb2:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006eb4:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8006eb6:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006eba:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006ebe:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8006ec0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006ec4:	f042 0220 	orr.w	r2, r2, #32
 8006ec8:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8006eca:	2001      	movs	r0, #1
 8006ecc:	e7e2      	b.n	8006e94 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

08006ece <I2C_WaitOnTXEFlagUntilTimeout>:
{
 8006ece:	b570      	push	{r4, r5, r6, lr}
 8006ed0:	4604      	mov	r4, r0
 8006ed2:	460d      	mov	r5, r1
 8006ed4:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8006ed6:	6823      	ldr	r3, [r4, #0]
 8006ed8:	695b      	ldr	r3, [r3, #20]
 8006eda:	061b      	lsls	r3, r3, #24
 8006edc:	d501      	bpl.n	8006ee2 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8006ede:	2000      	movs	r0, #0
}
 8006ee0:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8006ee2:	4620      	mov	r0, r4
 8006ee4:	f7ff ff17 	bl	8006d16 <I2C_IsAcknowledgeFailed>
 8006ee8:	b9a8      	cbnz	r0, 8006f16 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8006eea:	1c6a      	adds	r2, r5, #1
 8006eec:	d0f3      	beq.n	8006ed6 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006eee:	f7ff fa5f 	bl	80063b0 <HAL_GetTick>
 8006ef2:	1b80      	subs	r0, r0, r6
 8006ef4:	42a8      	cmp	r0, r5
 8006ef6:	d801      	bhi.n	8006efc <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8006ef8:	2d00      	cmp	r5, #0
 8006efa:	d1ec      	bne.n	8006ed6 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006efc:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8006efe:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006f00:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8006f02:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006f06:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006f0a:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8006f0c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006f10:	f042 0220 	orr.w	r2, r2, #32
 8006f14:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8006f16:	2001      	movs	r0, #1
 8006f18:	e7e2      	b.n	8006ee0 <I2C_WaitOnTXEFlagUntilTimeout+0x12>
	...

08006f1c <I2C_RequestMemoryWrite>:
{
 8006f1c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006f20:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006f22:	6802      	ldr	r2, [r0, #0]
{
 8006f24:	b085      	sub	sp, #20
 8006f26:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 8006f2a:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006f2c:	6813      	ldr	r3, [r2, #0]
 8006f2e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006f32:	6013      	str	r3, [r2, #0]
{
 8006f34:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006f36:	463b      	mov	r3, r7
 8006f38:	f8cd 8000 	str.w	r8, [sp]
 8006f3c:	2200      	movs	r2, #0
 8006f3e:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8006f42:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006f44:	f7ff ff01 	bl	8006d4a <I2C_WaitOnFlagUntilTimeout>
 8006f48:	6823      	ldr	r3, [r4, #0]
 8006f4a:	b138      	cbz	r0, 8006f5c <I2C_RequestMemoryWrite+0x40>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8006f4c:	681b      	ldr	r3, [r3, #0]
 8006f4e:	05db      	lsls	r3, r3, #23
 8006f50:	d502      	bpl.n	8006f58 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8006f52:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006f56:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8006f58:	2003      	movs	r0, #3
 8006f5a:	e00a      	b.n	8006f72 <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8006f5c:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8006f60:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8006f62:	4919      	ldr	r1, [pc, #100]	; (8006fc8 <I2C_RequestMemoryWrite+0xac>)
 8006f64:	4643      	mov	r3, r8
 8006f66:	463a      	mov	r2, r7
 8006f68:	4620      	mov	r0, r4
 8006f6a:	f7ff ff20 	bl	8006dae <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006f6e:	b118      	cbz	r0, 8006f78 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 8006f70:	2001      	movs	r0, #1
}
 8006f72:	b005      	add	sp, #20
 8006f74:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006f78:	6823      	ldr	r3, [r4, #0]
 8006f7a:	9003      	str	r0, [sp, #12]
 8006f7c:	695a      	ldr	r2, [r3, #20]
 8006f7e:	9203      	str	r2, [sp, #12]
 8006f80:	699b      	ldr	r3, [r3, #24]
 8006f82:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006f84:	4642      	mov	r2, r8
 8006f86:	4639      	mov	r1, r7
 8006f88:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006f8a:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006f8c:	f7ff ff9f 	bl	8006ece <I2C_WaitOnTXEFlagUntilTimeout>
 8006f90:	b140      	cbz	r0, 8006fa4 <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8006f92:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006f94:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006f96:	bf01      	itttt	eq
 8006f98:	6822      	ldreq	r2, [r4, #0]
 8006f9a:	6813      	ldreq	r3, [r2, #0]
 8006f9c:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8006fa0:	6013      	streq	r3, [r2, #0]
 8006fa2:	e7e5      	b.n	8006f70 <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006fa4:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006fa8:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006faa:	d102      	bne.n	8006fb2 <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8006fac:	b2ed      	uxtb	r5, r5
 8006fae:	611d      	str	r5, [r3, #16]
 8006fb0:	e7df      	b.n	8006f72 <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8006fb2:	0a2a      	lsrs	r2, r5, #8
 8006fb4:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006fb6:	4639      	mov	r1, r7
 8006fb8:	4642      	mov	r2, r8
 8006fba:	4620      	mov	r0, r4
 8006fbc:	f7ff ff87 	bl	8006ece <I2C_WaitOnTXEFlagUntilTimeout>
 8006fc0:	2800      	cmp	r0, #0
 8006fc2:	d1e6      	bne.n	8006f92 <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8006fc4:	6823      	ldr	r3, [r4, #0]
 8006fc6:	e7f1      	b.n	8006fac <I2C_RequestMemoryWrite+0x90>
 8006fc8:	00010002 	.word	0x00010002

08006fcc <I2C_RequestMemoryRead>:
{
 8006fcc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8006fd0:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006fd2:	6803      	ldr	r3, [r0, #0]
{
 8006fd4:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006fd6:	681a      	ldr	r2, [r3, #0]
 8006fd8:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8006fdc:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006fde:	681a      	ldr	r2, [r3, #0]
{
 8006fe0:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006fe4:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8006fe8:	601a      	str	r2, [r3, #0]
{
 8006fea:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006fec:	463b      	mov	r3, r7
 8006fee:	f8cd 8000 	str.w	r8, [sp]
 8006ff2:	2200      	movs	r2, #0
 8006ff4:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8006ff8:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006ffa:	f7ff fea6 	bl	8006d4a <I2C_WaitOnFlagUntilTimeout>
 8006ffe:	6823      	ldr	r3, [r4, #0]
 8007000:	b148      	cbz	r0, 8007016 <I2C_RequestMemoryRead+0x4a>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8007002:	681b      	ldr	r3, [r3, #0]
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8007004:	05db      	lsls	r3, r3, #23
 8007006:	d502      	bpl.n	800700e <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8007008:	f44f 7300 	mov.w	r3, #512	; 0x200
 800700c:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 800700e:	2003      	movs	r0, #3
}
 8007010:	b004      	add	sp, #16
 8007012:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8007016:	fa5f f986 	uxtb.w	r9, r6
 800701a:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 800701e:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8007020:	492a      	ldr	r1, [pc, #168]	; (80070cc <I2C_RequestMemoryRead+0x100>)
 8007022:	4643      	mov	r3, r8
 8007024:	463a      	mov	r2, r7
 8007026:	4620      	mov	r0, r4
 8007028:	f7ff fec1 	bl	8006dae <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800702c:	b108      	cbz	r0, 8007032 <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 800702e:	2001      	movs	r0, #1
 8007030:	e7ee      	b.n	8007010 <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8007032:	6823      	ldr	r3, [r4, #0]
 8007034:	9003      	str	r0, [sp, #12]
 8007036:	695a      	ldr	r2, [r3, #20]
 8007038:	9203      	str	r2, [sp, #12]
 800703a:	699b      	ldr	r3, [r3, #24]
 800703c:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800703e:	4642      	mov	r2, r8
 8007040:	4639      	mov	r1, r7
 8007042:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8007044:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8007046:	f7ff ff42 	bl	8006ece <I2C_WaitOnTXEFlagUntilTimeout>
 800704a:	b140      	cbz	r0, 800705e <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800704c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800704e:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8007050:	bf01      	itttt	eq
 8007052:	6822      	ldreq	r2, [r4, #0]
 8007054:	6813      	ldreq	r3, [r2, #0]
 8007056:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800705a:	6013      	streq	r3, [r2, #0]
 800705c:	e7e7      	b.n	800702e <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800705e:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8007062:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8007064:	d11a      	bne.n	800709c <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8007066:	b2ed      	uxtb	r5, r5
 8007068:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800706a:	4642      	mov	r2, r8
 800706c:	4639      	mov	r1, r7
 800706e:	4620      	mov	r0, r4
 8007070:	f7ff ff2d 	bl	8006ece <I2C_WaitOnTXEFlagUntilTimeout>
 8007074:	2800      	cmp	r0, #0
 8007076:	d1e9      	bne.n	800704c <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8007078:	6822      	ldr	r2, [r4, #0]
 800707a:	6813      	ldr	r3, [r2, #0]
 800707c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8007080:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8007082:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8007086:	4602      	mov	r2, r0
 8007088:	f8cd 8000 	str.w	r8, [sp]
 800708c:	463b      	mov	r3, r7
 800708e:	4620      	mov	r0, r4
 8007090:	f7ff fe5b 	bl	8006d4a <I2C_WaitOnFlagUntilTimeout>
 8007094:	6822      	ldr	r2, [r4, #0]
 8007096:	b160      	cbz	r0, 80070b2 <I2C_RequestMemoryRead+0xe6>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8007098:	6813      	ldr	r3, [r2, #0]
 800709a:	e7b3      	b.n	8007004 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800709c:	0a2a      	lsrs	r2, r5, #8
 800709e:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80070a0:	4639      	mov	r1, r7
 80070a2:	4642      	mov	r2, r8
 80070a4:	4620      	mov	r0, r4
 80070a6:	f7ff ff12 	bl	8006ece <I2C_WaitOnTXEFlagUntilTimeout>
 80070aa:	2800      	cmp	r0, #0
 80070ac:	d1ce      	bne.n	800704c <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80070ae:	6823      	ldr	r3, [r4, #0]
 80070b0:	e7d9      	b.n	8007066 <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 80070b2:	f049 0301 	orr.w	r3, r9, #1
 80070b6:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80070b8:	4904      	ldr	r1, [pc, #16]	; (80070cc <I2C_RequestMemoryRead+0x100>)
 80070ba:	4643      	mov	r3, r8
 80070bc:	463a      	mov	r2, r7
 80070be:	4620      	mov	r0, r4
 80070c0:	f7ff fe75 	bl	8006dae <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 80070c4:	3800      	subs	r0, #0
 80070c6:	bf18      	it	ne
 80070c8:	2001      	movne	r0, #1
 80070ca:	e7a1      	b.n	8007010 <I2C_RequestMemoryRead+0x44>
 80070cc:	00010002 	.word	0x00010002

080070d0 <HAL_I2C_Init>:
{
 80070d0:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 80070d2:	4604      	mov	r4, r0
 80070d4:	b908      	cbnz	r0, 80070da <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 80070d6:	2001      	movs	r0, #1
}
 80070d8:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 80070da:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80070de:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80070e2:	b91b      	cbnz	r3, 80070ec <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 80070e4:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 80070e8:	f7fa fcea 	bl	8001ac0 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 80070ec:	2324      	movs	r3, #36	; 0x24
 80070ee:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 80070f2:	6823      	ldr	r3, [r4, #0]
 80070f4:	681a      	ldr	r2, [r3, #0]
 80070f6:	f022 0201 	bic.w	r2, r2, #1
 80070fa:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 80070fc:	681a      	ldr	r2, [r3, #0]
 80070fe:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8007102:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8007104:	681a      	ldr	r2, [r3, #0]
 8007106:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800710a:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800710c:	f000 fe6e 	bl	8007dec <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8007110:	4b3f      	ldr	r3, [pc, #252]	; (8007210 <HAL_I2C_Init+0x140>)
 8007112:	6865      	ldr	r5, [r4, #4]
 8007114:	429d      	cmp	r5, r3
 8007116:	bf94      	ite	ls
 8007118:	4b3e      	ldrls	r3, [pc, #248]	; (8007214 <HAL_I2C_Init+0x144>)
 800711a:	4b3f      	ldrhi	r3, [pc, #252]	; (8007218 <HAL_I2C_Init+0x148>)
 800711c:	4298      	cmp	r0, r3
 800711e:	bf8c      	ite	hi
 8007120:	2300      	movhi	r3, #0
 8007122:	2301      	movls	r3, #1
 8007124:	2b00      	cmp	r3, #0
 8007126:	d1d6      	bne.n	80070d6 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8007128:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800712a:	4e39      	ldr	r6, [pc, #228]	; (8007210 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800712c:	6853      	ldr	r3, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800712e:	493b      	ldr	r1, [pc, #236]	; (800721c <HAL_I2C_Init+0x14c>)
 8007130:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8007134:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8007138:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800713a:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800713c:	6053      	str	r3, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800713e:	bf88      	it	hi
 8007140:	f44f 7696 	movhi.w	r6, #300	; 0x12c
 8007144:	6a13      	ldr	r3, [r2, #32]
 8007146:	bf88      	it	hi
 8007148:	4371      	mulhi	r1, r6
 800714a:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800714e:	bf84      	itt	hi
 8007150:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 8007154:	fbb1 f1f6 	udivhi	r1, r1, r6
 8007158:	3101      	adds	r1, #1
 800715a:	4319      	orrs	r1, r3
 800715c:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800715e:	69d1      	ldr	r1, [r2, #28]
 8007160:	1e43      	subs	r3, r0, #1
 8007162:	482b      	ldr	r0, [pc, #172]	; (8007210 <HAL_I2C_Init+0x140>)
 8007164:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8007168:	4285      	cmp	r5, r0
 800716a:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800716e:	d832      	bhi.n	80071d6 <HAL_I2C_Init+0x106>
 8007170:	006d      	lsls	r5, r5, #1
 8007172:	f640 70fc 	movw	r0, #4092	; 0xffc
 8007176:	fbb3 f3f5 	udiv	r3, r3, r5
 800717a:	3301      	adds	r3, #1
 800717c:	4203      	tst	r3, r0
 800717e:	d042      	beq.n	8007206 <HAL_I2C_Init+0x136>
 8007180:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8007184:	430b      	orrs	r3, r1
 8007186:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8007188:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800718c:	6811      	ldr	r1, [r2, #0]
 800718e:	4303      	orrs	r3, r0
 8007190:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8007194:	430b      	orrs	r3, r1
 8007196:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8007198:	6891      	ldr	r1, [r2, #8]
 800719a:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800719e:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 80071a2:	4303      	orrs	r3, r0
 80071a4:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 80071a8:	430b      	orrs	r3, r1
 80071aa:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 80071ac:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 80071b0:	68d1      	ldr	r1, [r2, #12]
 80071b2:	4303      	orrs	r3, r0
 80071b4:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 80071b8:	430b      	orrs	r3, r1
 80071ba:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 80071bc:	6813      	ldr	r3, [r2, #0]
 80071be:	f043 0301 	orr.w	r3, r3, #1
 80071c2:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80071c4:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 80071c6:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80071c8:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 80071ca:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 80071ce:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 80071d0:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 80071d4:	e780      	b.n	80070d8 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80071d6:	68a0      	ldr	r0, [r4, #8]
 80071d8:	b950      	cbnz	r0, 80071f0 <HAL_I2C_Init+0x120>
 80071da:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80071de:	fbb3 f3f5 	udiv	r3, r3, r5
 80071e2:	3301      	adds	r3, #1
 80071e4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80071e8:	b17b      	cbz	r3, 800720a <HAL_I2C_Init+0x13a>
 80071ea:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80071ee:	e7c9      	b.n	8007184 <HAL_I2C_Init+0xb4>
 80071f0:	2019      	movs	r0, #25
 80071f2:	4345      	muls	r5, r0
 80071f4:	fbb3 f3f5 	udiv	r3, r3, r5
 80071f8:	3301      	adds	r3, #1
 80071fa:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80071fe:	b123      	cbz	r3, 800720a <HAL_I2C_Init+0x13a>
 8007200:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8007204:	e7be      	b.n	8007184 <HAL_I2C_Init+0xb4>
 8007206:	2304      	movs	r3, #4
 8007208:	e7bc      	b.n	8007184 <HAL_I2C_Init+0xb4>
 800720a:	2301      	movs	r3, #1
 800720c:	e7ba      	b.n	8007184 <HAL_I2C_Init+0xb4>
 800720e:	bf00      	nop
 8007210:	000186a0 	.word	0x000186a0
 8007214:	001e847f 	.word	0x001e847f
 8007218:	003d08ff 	.word	0x003d08ff
 800721c:	000f4240 	.word	0x000f4240

08007220 <HAL_I2C_Mem_Write>:
{
 8007220:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007224:	4604      	mov	r4, r0
 8007226:	4699      	mov	r9, r3
 8007228:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 800722a:	460f      	mov	r7, r1
 800722c:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800722e:	f7ff f8bf 	bl	80063b0 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8007232:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8007236:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8007238:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800723a:	d003      	beq.n	8007244 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 800723c:	2002      	movs	r0, #2
}
 800723e:	b003      	add	sp, #12
 8007240:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8007244:	9000      	str	r0, [sp, #0]
 8007246:	493c      	ldr	r1, [pc, #240]	; (8007338 <HAL_I2C_Mem_Write+0x118>)
 8007248:	2319      	movs	r3, #25
 800724a:	2201      	movs	r2, #1
 800724c:	4620      	mov	r0, r4
 800724e:	f7ff fd7c 	bl	8006d4a <I2C_WaitOnFlagUntilTimeout>
 8007252:	2800      	cmp	r0, #0
 8007254:	d1f2      	bne.n	800723c <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8007256:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800725a:	2b01      	cmp	r3, #1
 800725c:	d0ee      	beq.n	800723c <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800725e:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8007260:	2301      	movs	r3, #1
 8007262:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8007266:	6803      	ldr	r3, [r0, #0]
 8007268:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800726a:	bf5e      	ittt	pl
 800726c:	6803      	ldrpl	r3, [r0, #0]
 800726e:	f043 0301 	orrpl.w	r3, r3, #1
 8007272:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8007274:	6803      	ldr	r3, [r0, #0]
 8007276:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800727a:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800727c:	2321      	movs	r3, #33	; 0x21
 800727e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8007282:	2340      	movs	r3, #64	; 0x40
 8007284:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8007288:	2300      	movs	r3, #0
 800728a:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 800728c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800728e:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8007290:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8007294:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8007296:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8007298:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800729a:	4b28      	ldr	r3, [pc, #160]	; (800733c <HAL_I2C_Mem_Write+0x11c>)
 800729c:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800729e:	e9cd 6500 	strd	r6, r5, [sp]
 80072a2:	464b      	mov	r3, r9
 80072a4:	4642      	mov	r2, r8
 80072a6:	4639      	mov	r1, r7
 80072a8:	4620      	mov	r0, r4
 80072aa:	f7ff fe37 	bl	8006f1c <I2C_RequestMemoryWrite>
 80072ae:	2800      	cmp	r0, #0
 80072b0:	d02a      	beq.n	8007308 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 80072b2:	2001      	movs	r0, #1
 80072b4:	e7c3      	b.n	800723e <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80072b6:	f7ff fe0a 	bl	8006ece <I2C_WaitOnTXEFlagUntilTimeout>
 80072ba:	b140      	cbz	r0, 80072ce <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80072bc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80072be:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80072c0:	bf01      	itttt	eq
 80072c2:	6822      	ldreq	r2, [r4, #0]
 80072c4:	6813      	ldreq	r3, [r2, #0]
 80072c6:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 80072ca:	6013      	streq	r3, [r2, #0]
 80072cc:	e7f1      	b.n	80072b2 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 80072ce:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80072d0:	6827      	ldr	r7, [r4, #0]
 80072d2:	461a      	mov	r2, r3
 80072d4:	f812 1b01 	ldrb.w	r1, [r2], #1
 80072d8:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 80072da:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 80072dc:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 80072de:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 80072e0:	3a01      	subs	r2, #1
 80072e2:	b292      	uxth	r2, r2
 80072e4:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80072e6:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 80072e8:	1e48      	subs	r0, r1, #1
 80072ea:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80072ec:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 80072ee:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80072f0:	d50a      	bpl.n	8007308 <HAL_I2C_Mem_Write+0xe8>
 80072f2:	b148      	cbz	r0, 8007308 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 80072f4:	785a      	ldrb	r2, [r3, #1]
 80072f6:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 80072f8:	3302      	adds	r3, #2
 80072fa:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 80072fc:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80072fe:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8007300:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8007302:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8007304:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8007306:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8007308:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800730a:	462a      	mov	r2, r5
 800730c:	4631      	mov	r1, r6
 800730e:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8007310:	2b00      	cmp	r3, #0
 8007312:	d1d0      	bne.n	80072b6 <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8007314:	f7ff fdb5 	bl	8006e82 <I2C_WaitOnBTFFlagUntilTimeout>
 8007318:	2800      	cmp	r0, #0
 800731a:	d1cf      	bne.n	80072bc <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800731c:	6822      	ldr	r2, [r4, #0]
 800731e:	6813      	ldr	r3, [r2, #0]
 8007320:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8007324:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8007326:	2320      	movs	r3, #32
 8007328:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800732c:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8007330:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 8007334:	e783      	b.n	800723e <HAL_I2C_Mem_Write+0x1e>
 8007336:	bf00      	nop
 8007338:	00100002 	.word	0x00100002
 800733c:	ffff0000 	.word	0xffff0000

08007340 <HAL_I2C_Mem_Read>:
{
 8007340:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007344:	4604      	mov	r4, r0
 8007346:	b087      	sub	sp, #28
 8007348:	4699      	mov	r9, r3
 800734a:	9f10      	ldr	r7, [sp, #64]	; 0x40
 800734c:	460d      	mov	r5, r1
 800734e:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8007350:	f7ff f82e 	bl	80063b0 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8007354:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8007358:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800735a:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800735c:	d004      	beq.n	8007368 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 800735e:	2502      	movs	r5, #2
}
 8007360:	4628      	mov	r0, r5
 8007362:	b007      	add	sp, #28
 8007364:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8007368:	9000      	str	r0, [sp, #0]
 800736a:	4976      	ldr	r1, [pc, #472]	; (8007544 <HAL_I2C_Mem_Read+0x204>)
 800736c:	2319      	movs	r3, #25
 800736e:	2201      	movs	r2, #1
 8007370:	4620      	mov	r0, r4
 8007372:	f7ff fcea 	bl	8006d4a <I2C_WaitOnFlagUntilTimeout>
 8007376:	2800      	cmp	r0, #0
 8007378:	d1f1      	bne.n	800735e <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 800737a:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800737e:	2b01      	cmp	r3, #1
 8007380:	d0ed      	beq.n	800735e <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8007382:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8007384:	2301      	movs	r3, #1
 8007386:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800738a:	6803      	ldr	r3, [r0, #0]
 800738c:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800738e:	bf5e      	ittt	pl
 8007390:	6803      	ldrpl	r3, [r0, #0]
 8007392:	f043 0301 	orrpl.w	r3, r3, #1
 8007396:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8007398:	6803      	ldr	r3, [r0, #0]
 800739a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800739e:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 80073a0:	2322      	movs	r3, #34	; 0x22
 80073a2:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80073a6:	2340      	movs	r3, #64	; 0x40
 80073a8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80073ac:	2300      	movs	r3, #0
 80073ae:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 80073b0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80073b2:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 80073b4:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 80073b8:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80073ba:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80073bc:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80073be:	4b62      	ldr	r3, [pc, #392]	; (8007548 <HAL_I2C_Mem_Read+0x208>)
 80073c0:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80073c2:	4629      	mov	r1, r5
 80073c4:	e9cd 7600 	strd	r7, r6, [sp]
 80073c8:	464b      	mov	r3, r9
 80073ca:	4642      	mov	r2, r8
 80073cc:	4620      	mov	r0, r4
 80073ce:	f7ff fdfd 	bl	8006fcc <I2C_RequestMemoryRead>
 80073d2:	4605      	mov	r5, r0
 80073d4:	b108      	cbz	r0, 80073da <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 80073d6:	2501      	movs	r5, #1
 80073d8:	e7c2      	b.n	8007360 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 80073da:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80073dc:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 80073de:	b9b2      	cbnz	r2, 800740e <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80073e0:	9002      	str	r0, [sp, #8]
 80073e2:	695a      	ldr	r2, [r3, #20]
 80073e4:	9202      	str	r2, [sp, #8]
 80073e6:	699a      	ldr	r2, [r3, #24]
 80073e8:	9202      	str	r2, [sp, #8]
 80073ea:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80073ec:	681a      	ldr	r2, [r3, #0]
 80073ee:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80073f2:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80073f4:	f8df 8154 	ldr.w	r8, [pc, #340]	; 800754c <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 80073f8:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80073fa:	2b00      	cmp	r3, #0
 80073fc:	d12c      	bne.n	8007458 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 80073fe:	2220      	movs	r2, #32
 8007400:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8007404:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8007408:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800740c:	e7a8      	b.n	8007360 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 800740e:	2a01      	cmp	r2, #1
 8007410:	d10a      	bne.n	8007428 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8007412:	681a      	ldr	r2, [r3, #0]
 8007414:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007418:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800741a:	9003      	str	r0, [sp, #12]
 800741c:	695a      	ldr	r2, [r3, #20]
 800741e:	9203      	str	r2, [sp, #12]
 8007420:	699a      	ldr	r2, [r3, #24]
 8007422:	9203      	str	r2, [sp, #12]
 8007424:	9a03      	ldr	r2, [sp, #12]
 8007426:	e7e1      	b.n	80073ec <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8007428:	2a02      	cmp	r2, #2
 800742a:	d10e      	bne.n	800744a <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800742c:	681a      	ldr	r2, [r3, #0]
 800742e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007432:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8007434:	681a      	ldr	r2, [r3, #0]
 8007436:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800743a:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800743c:	9004      	str	r0, [sp, #16]
 800743e:	695a      	ldr	r2, [r3, #20]
 8007440:	9204      	str	r2, [sp, #16]
 8007442:	699b      	ldr	r3, [r3, #24]
 8007444:	9304      	str	r3, [sp, #16]
 8007446:	9b04      	ldr	r3, [sp, #16]
 8007448:	e7d4      	b.n	80073f4 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800744a:	9005      	str	r0, [sp, #20]
 800744c:	695a      	ldr	r2, [r3, #20]
 800744e:	9205      	str	r2, [sp, #20]
 8007450:	699b      	ldr	r3, [r3, #24]
 8007452:	9305      	str	r3, [sp, #20]
 8007454:	9b05      	ldr	r3, [sp, #20]
 8007456:	e7cd      	b.n	80073f4 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8007458:	2b03      	cmp	r3, #3
 800745a:	d856      	bhi.n	800750a <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 800745c:	2b01      	cmp	r3, #1
 800745e:	d115      	bne.n	800748c <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8007460:	4632      	mov	r2, r6
 8007462:	4639      	mov	r1, r7
 8007464:	4620      	mov	r0, r4
 8007466:	f7ff fcdd 	bl	8006e24 <I2C_WaitOnRXNEFlagUntilTimeout>
 800746a:	2800      	cmp	r0, #0
 800746c:	d1b3      	bne.n	80073d6 <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800746e:	6823      	ldr	r3, [r4, #0]
 8007470:	691a      	ldr	r2, [r3, #16]
 8007472:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007474:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8007476:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007478:	3301      	adds	r3, #1
 800747a:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800747c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800747e:	3b01      	subs	r3, #1
 8007480:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8007482:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8007484:	3b01      	subs	r3, #1
 8007486:	b29b      	uxth	r3, r3
 8007488:	8563      	strh	r3, [r4, #42]	; 0x2a
 800748a:	e7b5      	b.n	80073f8 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 800748c:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800748e:	9600      	str	r6, [sp, #0]
 8007490:	463b      	mov	r3, r7
 8007492:	f04f 0200 	mov.w	r2, #0
 8007496:	4641      	mov	r1, r8
 8007498:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 800749a:	d119      	bne.n	80074d0 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800749c:	f7ff fc55 	bl	8006d4a <I2C_WaitOnFlagUntilTimeout>
 80074a0:	2800      	cmp	r0, #0
 80074a2:	d198      	bne.n	80073d6 <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80074a4:	6823      	ldr	r3, [r4, #0]
 80074a6:	681a      	ldr	r2, [r3, #0]
 80074a8:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80074ac:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80074ae:	691a      	ldr	r2, [r3, #16]
 80074b0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80074b2:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80074b4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80074b6:	1c53      	adds	r3, r2, #1
 80074b8:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 80074ba:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80074bc:	3b01      	subs	r3, #1
 80074be:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 80074c0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80074c2:	3b01      	subs	r3, #1
 80074c4:	b29b      	uxth	r3, r3
 80074c6:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80074c8:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80074ca:	691b      	ldr	r3, [r3, #16]
 80074cc:	7053      	strb	r3, [r2, #1]
 80074ce:	e7d2      	b.n	8007476 <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80074d0:	f7ff fc3b 	bl	8006d4a <I2C_WaitOnFlagUntilTimeout>
 80074d4:	2800      	cmp	r0, #0
 80074d6:	f47f af7e 	bne.w	80073d6 <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80074da:	6823      	ldr	r3, [r4, #0]
 80074dc:	681a      	ldr	r2, [r3, #0]
 80074de:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80074e2:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80074e4:	691a      	ldr	r2, [r3, #16]
 80074e6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80074e8:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80074ea:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80074ec:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 80074ee:	3301      	adds	r3, #1
 80074f0:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 80074f2:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80074f4:	3b01      	subs	r3, #1
 80074f6:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 80074f8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80074fa:	3b01      	subs	r3, #1
 80074fc:	b29b      	uxth	r3, r3
 80074fe:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8007500:	4602      	mov	r2, r0
 8007502:	463b      	mov	r3, r7
 8007504:	4641      	mov	r1, r8
 8007506:	4620      	mov	r0, r4
 8007508:	e7c8      	b.n	800749c <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800750a:	4632      	mov	r2, r6
 800750c:	4639      	mov	r1, r7
 800750e:	4620      	mov	r0, r4
 8007510:	f7ff fc88 	bl	8006e24 <I2C_WaitOnRXNEFlagUntilTimeout>
 8007514:	2800      	cmp	r0, #0
 8007516:	f47f af5e 	bne.w	80073d6 <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800751a:	6823      	ldr	r3, [r4, #0]
 800751c:	691a      	ldr	r2, [r3, #16]
 800751e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007520:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 8007522:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8007524:	1c53      	adds	r3, r2, #1
 8007526:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 8007528:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800752a:	3b01      	subs	r3, #1
 800752c:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800752e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8007530:	3b01      	subs	r3, #1
 8007532:	b29b      	uxth	r3, r3
 8007534:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8007536:	6823      	ldr	r3, [r4, #0]
 8007538:	6959      	ldr	r1, [r3, #20]
 800753a:	0749      	lsls	r1, r1, #29
 800753c:	f57f af5c 	bpl.w	80073f8 <HAL_I2C_Mem_Read+0xb8>
 8007540:	e7c3      	b.n	80074ca <HAL_I2C_Mem_Read+0x18a>
 8007542:	bf00      	nop
 8007544:	00100002 	.word	0x00100002
 8007548:	ffff0000 	.word	0xffff0000
 800754c:	00010004 	.word	0x00010004

08007550 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8007550:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8007552:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8007556:	2b20      	cmp	r3, #32
 8007558:	b2dc      	uxtb	r4, r3
 800755a:	d116      	bne.n	800758a <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 800755c:	2324      	movs	r3, #36	; 0x24
 800755e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8007562:	6803      	ldr	r3, [r0, #0]
 8007564:	681a      	ldr	r2, [r3, #0]
 8007566:	f022 0201 	bic.w	r2, r2, #1
 800756a:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800756c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800756e:	f022 0210 	bic.w	r2, r2, #16
 8007572:	625a      	str	r2, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 8007574:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8007576:	4311      	orrs	r1, r2
 8007578:	6259      	str	r1, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 800757a:	681a      	ldr	r2, [r3, #0]
 800757c:	f042 0201 	orr.w	r2, r2, #1
 8007580:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8007582:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8007586:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8007588:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 800758a:	2002      	movs	r0, #2
 800758c:	e7fc      	b.n	8007588 <HAL_I2CEx_ConfigAnalogFilter+0x38>

0800758e <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 800758e:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8007590:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8007594:	2b20      	cmp	r3, #32
 8007596:	b2dc      	uxtb	r4, r3
 8007598:	d116      	bne.n	80075c8 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 800759a:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800759c:	2324      	movs	r3, #36	; 0x24
 800759e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 80075a2:	6813      	ldr	r3, [r2, #0]
 80075a4:	f023 0301 	bic.w	r3, r3, #1
 80075a8:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 80075aa:	6a55      	ldr	r5, [r2, #36]	; 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 80075ac:	f64f 73f0 	movw	r3, #65520	; 0xfff0
 80075b0:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 80075b2:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 80075b4:	b29b      	uxth	r3, r3
 80075b6:	6253      	str	r3, [r2, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 80075b8:	6813      	ldr	r3, [r2, #0]
 80075ba:	f043 0301 	orr.w	r3, r3, #1
 80075be:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80075c0:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 80075c4:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 80075c6:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 80075c8:	2002      	movs	r0, #2
 80075ca:	e7fc      	b.n	80075c6 <HAL_I2CEx_ConfigDigitalFilter+0x38>

080075cc <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80075cc:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80075ce:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80075d2:	01d2      	lsls	r2, r2, #7
 80075d4:	3284      	adds	r2, #132	; 0x84
 80075d6:	1883      	adds	r3, r0, r2
{
 80075d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80075dc:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80075de:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80075e0:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 80075e2:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80075e6:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 80075ea:	605d      	str	r5, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80075ec:	68c5      	ldr	r5, [r0, #12]
 80075ee:	f10c 0701 	add.w	r7, ip, #1
 80075f2:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80075f6:	f3c6 460b 	ubfx	r6, r6, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80075fa:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80075fc:	4426      	add	r6, r4
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80075fe:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8007602:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8007604:	68c5      	ldr	r5, [r0, #12]
 8007606:	68ce      	ldr	r6, [r1, #12]
 8007608:	f3c5 050a 	ubfx	r5, r5, #0, #11
 800760c:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800760e:	689d      	ldr	r5, [r3, #8]
 8007610:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8007614:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8007616:	68c7      	ldr	r7, [r0, #12]
 8007618:	688d      	ldr	r5, [r1, #8]
 800761a:	f3c7 070a 	ubfx	r7, r7, #0, #11
 800761e:	3501      	adds	r5, #1
 8007620:	443d      	add	r5, r7
 8007622:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8007626:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8007628:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800762a:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800762c:	f025 0507 	bic.w	r5, r5, #7
 8007630:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8007632:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8007636:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8007638:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800763a:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800763e:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8007642:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8007646:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 800764a:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 800764e:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8007652:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8007656:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8007658:	695d      	ldr	r5, [r3, #20]
 800765a:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 800765e:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8007660:	694d      	ldr	r5, [r1, #20]
 8007662:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8007664:	69dd      	ldr	r5, [r3, #28]
 8007666:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 800766a:	f025 0507 	bic.w	r5, r5, #7
 800766e:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8007670:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8007674:	433d      	orrs	r5, r7
 8007676:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8007678:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800767a:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800767c:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8007680:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8007682:	b31e      	cbz	r6, 80076cc <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8007684:	2e01      	cmp	r6, #1
 8007686:	d023      	beq.n	80076d0 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8007688:	1eb5      	subs	r5, r6, #2
 800768a:	2d02      	cmp	r5, #2
 800768c:	d922      	bls.n	80076d4 <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 800768e:	2e07      	cmp	r6, #7
 8007690:	bf0c      	ite	eq
 8007692:	2502      	moveq	r5, #2
 8007694:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8007696:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8007698:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
 800769c:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800769e:	eba4 040c 	sub.w	r4, r4, ip
 80076a2:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80076a4:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80076a6:	436c      	muls	r4, r5
 80076a8:	436e      	muls	r6, r5
 80076aa:	3403      	adds	r4, #3
 80076ac:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 80076b0:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 80076b2:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 80076b4:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 80076b8:	f024 0407 	bic.w	r4, r4, #7
 80076bc:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80076be:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 80076c0:	5883      	ldr	r3, [r0, r2]
 80076c2:	f043 0301 	orr.w	r3, r3, #1
 80076c6:	5083      	str	r3, [r0, r2]
}
 80076c8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 80076cc:	2504      	movs	r5, #4
 80076ce:	e7e2      	b.n	8007696 <LTDC_SetConfig+0xca>
    tmp = 3U;
 80076d0:	2503      	movs	r5, #3
 80076d2:	e7e0      	b.n	8007696 <LTDC_SetConfig+0xca>
    tmp = 2U;
 80076d4:	2502      	movs	r5, #2
 80076d6:	e7de      	b.n	8007696 <LTDC_SetConfig+0xca>

080076d8 <HAL_LTDC_Init>:
{
 80076d8:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 80076da:	4604      	mov	r4, r0
 80076dc:	2800      	cmp	r0, #0
 80076de:	d063      	beq.n	80077a8 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 80076e0:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 80076e4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80076e8:	b91b      	cbnz	r3, 80076f2 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 80076ea:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 80076ee:	f7fa fa43 	bl	8001b78 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80076f2:	2302      	movs	r3, #2
 80076f4:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 80076f8:	6823      	ldr	r3, [r4, #0]
 80076fa:	699a      	ldr	r2, [r3, #24]
 80076fc:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8007700:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8007702:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8007706:	4302      	orrs	r2, r0
 8007708:	68e0      	ldr	r0, [r4, #12]
 800770a:	6999      	ldr	r1, [r3, #24]
 800770c:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800770e:	6920      	ldr	r0, [r4, #16]
 8007710:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8007712:	430a      	orrs	r2, r1
 8007714:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8007716:	689a      	ldr	r2, [r3, #8]
 8007718:	4924      	ldr	r1, [pc, #144]	; (80077ac <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800771a:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800771c:	400a      	ands	r2, r1
 800771e:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8007720:	689a      	ldr	r2, [r3, #8]
 8007722:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8007726:	69a0      	ldr	r0, [r4, #24]
 8007728:	4302      	orrs	r2, r0
 800772a:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800772c:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800772e:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8007730:	400a      	ands	r2, r1
 8007732:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8007734:	68da      	ldr	r2, [r3, #12]
 8007736:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800773a:	6a20      	ldr	r0, [r4, #32]
 800773c:	4302      	orrs	r2, r0
 800773e:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8007740:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8007742:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8007744:	400a      	ands	r2, r1
 8007746:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8007748:	691a      	ldr	r2, [r3, #16]
 800774a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800774e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8007750:	4302      	orrs	r2, r0
 8007752:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8007754:	695a      	ldr	r2, [r3, #20]
 8007756:	4011      	ands	r1, r2
 8007758:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800775a:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800775c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800775e:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8007762:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8007764:	430a      	orrs	r2, r1
 8007766:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8007768:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800776a:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800776e:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8007772:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 8007776:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8007778:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800777a:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800777e:	430a      	orrs	r2, r1
 8007780:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8007784:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8007788:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800778a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800778c:	f042 0206 	orr.w	r2, r2, #6
 8007790:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8007792:	699a      	ldr	r2, [r3, #24]
 8007794:	f042 0201 	orr.w	r2, r2, #1
 8007798:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800779a:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 800779c:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800779e:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 80077a2:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 80077a6:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80077a8:	2001      	movs	r0, #1
 80077aa:	e7fc      	b.n	80077a6 <HAL_LTDC_Init+0xce>
 80077ac:	f000f800 	.word	0xf000f800

080077b0 <HAL_LTDC_ErrorCallback>:
 80077b0:	4770      	bx	lr

080077b2 <HAL_LTDC_ReloadEventCallback>:
 80077b2:	4770      	bx	lr

080077b4 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80077b4:	6803      	ldr	r3, [r0, #0]
{
 80077b6:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80077b8:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 80077ba:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80077bc:	0772      	lsls	r2, r6, #29
{
 80077be:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80077c0:	d514      	bpl.n	80077ec <HAL_LTDC_IRQHandler+0x38>
 80077c2:	0769      	lsls	r1, r5, #29
 80077c4:	d512      	bpl.n	80077ec <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 80077c6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80077c8:	f022 0204 	bic.w	r2, r2, #4
 80077cc:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 80077ce:	2204      	movs	r2, #4
 80077d0:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 80077d2:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 80077d6:	f043 0301 	orr.w	r3, r3, #1
 80077da:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 80077de:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80077e0:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80077e4:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 80077e8:	f7ff ffe2 	bl	80077b0 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 80077ec:	07b2      	lsls	r2, r6, #30
 80077ee:	d516      	bpl.n	800781e <HAL_LTDC_IRQHandler+0x6a>
 80077f0:	07ab      	lsls	r3, r5, #30
 80077f2:	d514      	bpl.n	800781e <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 80077f4:	6823      	ldr	r3, [r4, #0]
 80077f6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80077f8:	f022 0202 	bic.w	r2, r2, #2
 80077fc:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 80077fe:	2202      	movs	r2, #2
 8007800:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8007802:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8007806:	4313      	orrs	r3, r2
 8007808:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800780c:	2304      	movs	r3, #4
 800780e:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8007812:	2300      	movs	r3, #0
 8007814:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8007818:	4620      	mov	r0, r4
 800781a:	f7ff ffc9 	bl	80077b0 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800781e:	07f0      	lsls	r0, r6, #31
 8007820:	d510      	bpl.n	8007844 <HAL_LTDC_IRQHandler+0x90>
 8007822:	07e9      	lsls	r1, r5, #31
 8007824:	d50e      	bpl.n	8007844 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8007826:	6823      	ldr	r3, [r4, #0]
 8007828:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800782a:	f022 0201 	bic.w	r2, r2, #1
 800782e:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8007830:	2201      	movs	r2, #1
 8007832:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 8007834:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8007836:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800783a:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800783e:	4620      	mov	r0, r4
 8007840:	f7f9 fc68 	bl	8001114 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8007844:	0732      	lsls	r2, r6, #28
 8007846:	d511      	bpl.n	800786c <HAL_LTDC_IRQHandler+0xb8>
 8007848:	072b      	lsls	r3, r5, #28
 800784a:	d50f      	bpl.n	800786c <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800784c:	6823      	ldr	r3, [r4, #0]
 800784e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007850:	f022 0208 	bic.w	r2, r2, #8
 8007854:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8007856:	2208      	movs	r2, #8
 8007858:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 800785a:	2301      	movs	r3, #1
 800785c:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8007860:	2300      	movs	r3, #0
 8007862:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8007866:	4620      	mov	r0, r4
 8007868:	f7ff ffa3 	bl	80077b2 <HAL_LTDC_ReloadEventCallback>
}
 800786c:	bd70      	pop	{r4, r5, r6, pc}

0800786e <HAL_LTDC_ConfigLayer>:
{
 800786e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 8007872:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8007876:	2b01      	cmp	r3, #1
{
 8007878:	4606      	mov	r6, r0
 800787a:	460f      	mov	r7, r1
 800787c:	4694      	mov	ip, r2
 800787e:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8007882:	d01f      	beq.n	80078c4 <HAL_LTDC_ConfigLayer+0x56>
 8007884:	f04f 0801 	mov.w	r8, #1
 8007888:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800788c:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8007890:	2434      	movs	r4, #52	; 0x34
 8007892:	460d      	mov	r5, r1
 8007894:	fb04 6402 	mla	r4, r4, r2, r6
 8007898:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800789a:	3438      	adds	r4, #56	; 0x38
 800789c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800789e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80078a0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80078a2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80078a4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80078a6:	682b      	ldr	r3, [r5, #0]
 80078a8:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 80078aa:	4630      	mov	r0, r6
 80078ac:	4662      	mov	r2, ip
 80078ae:	4639      	mov	r1, r7
 80078b0:	f7ff fe8c 	bl	80075cc <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80078b4:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 80078b6:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80078b8:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 80078bc:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80078c0:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 80078c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080078c8 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 80078c8:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 80078cc:	2b01      	cmp	r3, #1
 80078ce:	f04f 0302 	mov.w	r3, #2
 80078d2:	d012      	beq.n	80078fa <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80078d4:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80078d8:	6803      	ldr	r3, [r0, #0]
 80078da:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80078dc:	f022 0201 	bic.w	r2, r2, #1
 80078e0:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 80078e2:	4a07      	ldr	r2, [pc, #28]	; (8007900 <HAL_LTDC_ProgramLineEvent+0x38>)
 80078e4:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 80078e6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80078e8:	f042 0201 	orr.w	r2, r2, #1
 80078ec:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 80078ee:	2301      	movs	r3, #1
 80078f0:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80078f4:	2300      	movs	r3, #0
 80078f6:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 80078fa:	4618      	mov	r0, r3
}
 80078fc:	4770      	bx	lr
 80078fe:	bf00      	nop
 8007900:	40016800 	.word	0x40016800

08007904 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8007904:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8007908:	4604      	mov	r4, r0
 800790a:	b340      	cbz	r0, 800795e <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800790c:	6803      	ldr	r3, [r0, #0]
 800790e:	07dd      	lsls	r5, r3, #31
 8007910:	d410      	bmi.n	8007934 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8007912:	6823      	ldr	r3, [r4, #0]
 8007914:	0798      	lsls	r0, r3, #30
 8007916:	d45e      	bmi.n	80079d6 <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8007918:	6823      	ldr	r3, [r4, #0]
 800791a:	071a      	lsls	r2, r3, #28
 800791c:	f100 80a0 	bmi.w	8007a60 <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8007920:	6823      	ldr	r3, [r4, #0]
 8007922:	075b      	lsls	r3, r3, #29
 8007924:	f100 80c0 	bmi.w	8007aa8 <HAL_RCC_OscConfig+0x1a4>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8007928:	69a0      	ldr	r0, [r4, #24]
 800792a:	2800      	cmp	r0, #0
 800792c:	f040 8128 	bne.w	8007b80 <HAL_RCC_OscConfig+0x27c>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8007930:	2000      	movs	r0, #0
 8007932:	e02b      	b.n	800798c <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8007934:	4b8f      	ldr	r3, [pc, #572]	; (8007b74 <HAL_RCC_OscConfig+0x270>)
 8007936:	689a      	ldr	r2, [r3, #8]
 8007938:	f002 020c 	and.w	r2, r2, #12
 800793c:	2a04      	cmp	r2, #4
 800793e:	d007      	beq.n	8007950 <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8007940:	689a      	ldr	r2, [r3, #8]
 8007942:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8007946:	2a08      	cmp	r2, #8
 8007948:	d10b      	bne.n	8007962 <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800794a:	685a      	ldr	r2, [r3, #4]
 800794c:	0251      	lsls	r1, r2, #9
 800794e:	d508      	bpl.n	8007962 <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8007950:	4b88      	ldr	r3, [pc, #544]	; (8007b74 <HAL_RCC_OscConfig+0x270>)
 8007952:	681b      	ldr	r3, [r3, #0]
 8007954:	039a      	lsls	r2, r3, #14
 8007956:	d5dc      	bpl.n	8007912 <HAL_RCC_OscConfig+0xe>
 8007958:	6863      	ldr	r3, [r4, #4]
 800795a:	2b00      	cmp	r3, #0
 800795c:	d1d9      	bne.n	8007912 <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 800795e:	2001      	movs	r0, #1
 8007960:	e014      	b.n	800798c <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8007962:	6862      	ldr	r2, [r4, #4]
 8007964:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8007968:	d113      	bne.n	8007992 <HAL_RCC_OscConfig+0x8e>
 800796a:	681a      	ldr	r2, [r3, #0]
 800796c:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8007970:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8007972:	f7fe fd1d 	bl	80063b0 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8007976:	4e7f      	ldr	r6, [pc, #508]	; (8007b74 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8007978:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800797a:	6833      	ldr	r3, [r6, #0]
 800797c:	039b      	lsls	r3, r3, #14
 800797e:	d4c8      	bmi.n	8007912 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8007980:	f7fe fd16 	bl	80063b0 <HAL_GetTick>
 8007984:	1b40      	subs	r0, r0, r5
 8007986:	2864      	cmp	r0, #100	; 0x64
 8007988:	d9f7      	bls.n	800797a <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 800798a:	2003      	movs	r0, #3
}
 800798c:	b002      	add	sp, #8
 800798e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8007992:	4d78      	ldr	r5, [pc, #480]	; (8007b74 <HAL_RCC_OscConfig+0x270>)
 8007994:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 8007998:	682b      	ldr	r3, [r5, #0]
 800799a:	d107      	bne.n	80079ac <HAL_RCC_OscConfig+0xa8>
 800799c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80079a0:	602b      	str	r3, [r5, #0]
 80079a2:	682b      	ldr	r3, [r5, #0]
 80079a4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80079a8:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80079aa:	e7e2      	b.n	8007972 <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80079ac:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80079b0:	602b      	str	r3, [r5, #0]
 80079b2:	682b      	ldr	r3, [r5, #0]
 80079b4:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80079b8:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80079ba:	2a00      	cmp	r2, #0
 80079bc:	d1d9      	bne.n	8007972 <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 80079be:	f7fe fcf7 	bl	80063b0 <HAL_GetTick>
 80079c2:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80079c4:	682b      	ldr	r3, [r5, #0]
 80079c6:	039f      	lsls	r7, r3, #14
 80079c8:	d5a3      	bpl.n	8007912 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80079ca:	f7fe fcf1 	bl	80063b0 <HAL_GetTick>
 80079ce:	1b80      	subs	r0, r0, r6
 80079d0:	2864      	cmp	r0, #100	; 0x64
 80079d2:	d9f7      	bls.n	80079c4 <HAL_RCC_OscConfig+0xc0>
 80079d4:	e7d9      	b.n	800798a <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80079d6:	4b67      	ldr	r3, [pc, #412]	; (8007b74 <HAL_RCC_OscConfig+0x270>)
 80079d8:	689a      	ldr	r2, [r3, #8]
 80079da:	f012 0f0c 	tst.w	r2, #12
 80079de:	d007      	beq.n	80079f0 <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80079e0:	689a      	ldr	r2, [r3, #8]
 80079e2:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80079e6:	2a08      	cmp	r2, #8
 80079e8:	d111      	bne.n	8007a0e <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80079ea:	685b      	ldr	r3, [r3, #4]
 80079ec:	025e      	lsls	r6, r3, #9
 80079ee:	d40e      	bmi.n	8007a0e <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80079f0:	4a60      	ldr	r2, [pc, #384]	; (8007b74 <HAL_RCC_OscConfig+0x270>)
 80079f2:	6813      	ldr	r3, [r2, #0]
 80079f4:	079d      	lsls	r5, r3, #30
 80079f6:	d502      	bpl.n	80079fe <HAL_RCC_OscConfig+0xfa>
 80079f8:	68e3      	ldr	r3, [r4, #12]
 80079fa:	2b01      	cmp	r3, #1
 80079fc:	d1af      	bne.n	800795e <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80079fe:	6813      	ldr	r3, [r2, #0]
 8007a00:	6921      	ldr	r1, [r4, #16]
 8007a02:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8007a06:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8007a0a:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8007a0c:	e784      	b.n	8007918 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8007a0e:	68e2      	ldr	r2, [r4, #12]
 8007a10:	4b59      	ldr	r3, [pc, #356]	; (8007b78 <HAL_RCC_OscConfig+0x274>)
 8007a12:	b1b2      	cbz	r2, 8007a42 <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 8007a14:	2201      	movs	r2, #1
 8007a16:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8007a18:	f7fe fcca 	bl	80063b0 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007a1c:	4d55      	ldr	r5, [pc, #340]	; (8007b74 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8007a1e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007a20:	682b      	ldr	r3, [r5, #0]
 8007a22:	0798      	lsls	r0, r3, #30
 8007a24:	d507      	bpl.n	8007a36 <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8007a26:	682b      	ldr	r3, [r5, #0]
 8007a28:	6922      	ldr	r2, [r4, #16]
 8007a2a:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8007a2e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8007a32:	602b      	str	r3, [r5, #0]
 8007a34:	e770      	b.n	8007918 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8007a36:	f7fe fcbb 	bl	80063b0 <HAL_GetTick>
 8007a3a:	1b80      	subs	r0, r0, r6
 8007a3c:	2802      	cmp	r0, #2
 8007a3e:	d9ef      	bls.n	8007a20 <HAL_RCC_OscConfig+0x11c>
 8007a40:	e7a3      	b.n	800798a <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 8007a42:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8007a44:	f7fe fcb4 	bl	80063b0 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8007a48:	4e4a      	ldr	r6, [pc, #296]	; (8007b74 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8007a4a:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8007a4c:	6833      	ldr	r3, [r6, #0]
 8007a4e:	0799      	lsls	r1, r3, #30
 8007a50:	f57f af62 	bpl.w	8007918 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8007a54:	f7fe fcac 	bl	80063b0 <HAL_GetTick>
 8007a58:	1b40      	subs	r0, r0, r5
 8007a5a:	2802      	cmp	r0, #2
 8007a5c:	d9f6      	bls.n	8007a4c <HAL_RCC_OscConfig+0x148>
 8007a5e:	e794      	b.n	800798a <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8007a60:	6962      	ldr	r2, [r4, #20]
 8007a62:	4b45      	ldr	r3, [pc, #276]	; (8007b78 <HAL_RCC_OscConfig+0x274>)
 8007a64:	b182      	cbz	r2, 8007a88 <HAL_RCC_OscConfig+0x184>
      __HAL_RCC_LSI_ENABLE();
 8007a66:	2201      	movs	r2, #1
 8007a68:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8007a6c:	f7fe fca0 	bl	80063b0 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8007a70:	4e40      	ldr	r6, [pc, #256]	; (8007b74 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 8007a72:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8007a74:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8007a76:	079f      	lsls	r7, r3, #30
 8007a78:	f53f af52 	bmi.w	8007920 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8007a7c:	f7fe fc98 	bl	80063b0 <HAL_GetTick>
 8007a80:	1b40      	subs	r0, r0, r5
 8007a82:	2802      	cmp	r0, #2
 8007a84:	d9f6      	bls.n	8007a74 <HAL_RCC_OscConfig+0x170>
 8007a86:	e780      	b.n	800798a <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 8007a88:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8007a8c:	f7fe fc90 	bl	80063b0 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8007a90:	4e38      	ldr	r6, [pc, #224]	; (8007b74 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 8007a92:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8007a94:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8007a96:	0798      	lsls	r0, r3, #30
 8007a98:	f57f af42 	bpl.w	8007920 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8007a9c:	f7fe fc88 	bl	80063b0 <HAL_GetTick>
 8007aa0:	1b40      	subs	r0, r0, r5
 8007aa2:	2802      	cmp	r0, #2
 8007aa4:	d9f6      	bls.n	8007a94 <HAL_RCC_OscConfig+0x190>
 8007aa6:	e770      	b.n	800798a <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8007aa8:	4b32      	ldr	r3, [pc, #200]	; (8007b74 <HAL_RCC_OscConfig+0x270>)
 8007aaa:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8007aac:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 8007ab0:	d128      	bne.n	8007b04 <HAL_RCC_OscConfig+0x200>
      __HAL_RCC_PWR_CLK_ENABLE();
 8007ab2:	9201      	str	r2, [sp, #4]
 8007ab4:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8007ab6:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8007aba:	641a      	str	r2, [r3, #64]	; 0x40
 8007abc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007abe:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8007ac2:	9301      	str	r3, [sp, #4]
 8007ac4:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8007ac6:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8007ac8:	4d2c      	ldr	r5, [pc, #176]	; (8007b7c <HAL_RCC_OscConfig+0x278>)
 8007aca:	682b      	ldr	r3, [r5, #0]
 8007acc:	05d9      	lsls	r1, r3, #23
 8007ace:	d51b      	bpl.n	8007b08 <HAL_RCC_OscConfig+0x204>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8007ad0:	68a3      	ldr	r3, [r4, #8]
 8007ad2:	4d28      	ldr	r5, [pc, #160]	; (8007b74 <HAL_RCC_OscConfig+0x270>)
 8007ad4:	2b01      	cmp	r3, #1
 8007ad6:	d127      	bne.n	8007b28 <HAL_RCC_OscConfig+0x224>
 8007ad8:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007ada:	f043 0301 	orr.w	r3, r3, #1
 8007ade:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 8007ae0:	f7fe fc66 	bl	80063b0 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8007ae4:	4e23      	ldr	r6, [pc, #140]	; (8007b74 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 8007ae6:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007ae8:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8007aec:	6f33      	ldr	r3, [r6, #112]	; 0x70
 8007aee:	079b      	lsls	r3, r3, #30
 8007af0:	d539      	bpl.n	8007b66 <HAL_RCC_OscConfig+0x262>
    if(pwrclkchanged == SET)
 8007af2:	2f00      	cmp	r7, #0
 8007af4:	f43f af18 	beq.w	8007928 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 8007af8:	4a1e      	ldr	r2, [pc, #120]	; (8007b74 <HAL_RCC_OscConfig+0x270>)
 8007afa:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8007afc:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8007b00:	6413      	str	r3, [r2, #64]	; 0x40
 8007b02:	e711      	b.n	8007928 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 8007b04:	2700      	movs	r7, #0
 8007b06:	e7df      	b.n	8007ac8 <HAL_RCC_OscConfig+0x1c4>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8007b08:	682b      	ldr	r3, [r5, #0]
 8007b0a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8007b0e:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8007b10:	f7fe fc4e 	bl	80063b0 <HAL_GetTick>
 8007b14:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8007b16:	682b      	ldr	r3, [r5, #0]
 8007b18:	05da      	lsls	r2, r3, #23
 8007b1a:	d4d9      	bmi.n	8007ad0 <HAL_RCC_OscConfig+0x1cc>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8007b1c:	f7fe fc48 	bl	80063b0 <HAL_GetTick>
 8007b20:	1b80      	subs	r0, r0, r6
 8007b22:	2802      	cmp	r0, #2
 8007b24:	d9f7      	bls.n	8007b16 <HAL_RCC_OscConfig+0x212>
 8007b26:	e730      	b.n	800798a <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8007b28:	2b05      	cmp	r3, #5
 8007b2a:	d104      	bne.n	8007b36 <HAL_RCC_OscConfig+0x232>
 8007b2c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007b2e:	f043 0304 	orr.w	r3, r3, #4
 8007b32:	672b      	str	r3, [r5, #112]	; 0x70
 8007b34:	e7d0      	b.n	8007ad8 <HAL_RCC_OscConfig+0x1d4>
 8007b36:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8007b38:	f022 0201 	bic.w	r2, r2, #1
 8007b3c:	672a      	str	r2, [r5, #112]	; 0x70
 8007b3e:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8007b40:	f022 0204 	bic.w	r2, r2, #4
 8007b44:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8007b46:	2b00      	cmp	r3, #0
 8007b48:	d1ca      	bne.n	8007ae0 <HAL_RCC_OscConfig+0x1dc>
      tickstart = HAL_GetTick();
 8007b4a:	f7fe fc31 	bl	80063b0 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007b4e:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 8007b52:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8007b54:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007b56:	0798      	lsls	r0, r3, #30
 8007b58:	d5cb      	bpl.n	8007af2 <HAL_RCC_OscConfig+0x1ee>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007b5a:	f7fe fc29 	bl	80063b0 <HAL_GetTick>
 8007b5e:	1b80      	subs	r0, r0, r6
 8007b60:	4540      	cmp	r0, r8
 8007b62:	d9f7      	bls.n	8007b54 <HAL_RCC_OscConfig+0x250>
 8007b64:	e711      	b.n	800798a <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007b66:	f7fe fc23 	bl	80063b0 <HAL_GetTick>
 8007b6a:	1b40      	subs	r0, r0, r5
 8007b6c:	4540      	cmp	r0, r8
 8007b6e:	d9bd      	bls.n	8007aec <HAL_RCC_OscConfig+0x1e8>
 8007b70:	e70b      	b.n	800798a <HAL_RCC_OscConfig+0x86>
 8007b72:	bf00      	nop
 8007b74:	40023800 	.word	0x40023800
 8007b78:	42470000 	.word	0x42470000
 8007b7c:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8007b80:	4d33      	ldr	r5, [pc, #204]	; (8007c50 <HAL_RCC_OscConfig+0x34c>)
 8007b82:	68ab      	ldr	r3, [r5, #8]
 8007b84:	f003 030c 	and.w	r3, r3, #12
 8007b88:	2b08      	cmp	r3, #8
 8007b8a:	d03d      	beq.n	8007c08 <HAL_RCC_OscConfig+0x304>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8007b8c:	4b31      	ldr	r3, [pc, #196]	; (8007c54 <HAL_RCC_OscConfig+0x350>)
 8007b8e:	2200      	movs	r2, #0
 8007b90:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 8007b92:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8007b94:	d12b      	bne.n	8007bee <HAL_RCC_OscConfig+0x2ea>
        tickstart = HAL_GetTick();
 8007b96:	f7fe fc0b 	bl	80063b0 <HAL_GetTick>
 8007b9a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8007b9c:	682b      	ldr	r3, [r5, #0]
 8007b9e:	0199      	lsls	r1, r3, #6
 8007ba0:	d41f      	bmi.n	8007be2 <HAL_RCC_OscConfig+0x2de>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8007ba2:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8007ba6:	4313      	orrs	r3, r2
 8007ba8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8007baa:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8007bae:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8007bb0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8007bb4:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8007bb6:	0852      	lsrs	r2, r2, #1
 8007bb8:	3a01      	subs	r2, #1
 8007bba:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8007bbe:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8007bc0:	4b24      	ldr	r3, [pc, #144]	; (8007c54 <HAL_RCC_OscConfig+0x350>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8007bc2:	4d23      	ldr	r5, [pc, #140]	; (8007c50 <HAL_RCC_OscConfig+0x34c>)
        __HAL_RCC_PLL_ENABLE();
 8007bc4:	2201      	movs	r2, #1
 8007bc6:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 8007bc8:	f7fe fbf2 	bl	80063b0 <HAL_GetTick>
 8007bcc:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8007bce:	682b      	ldr	r3, [r5, #0]
 8007bd0:	019a      	lsls	r2, r3, #6
 8007bd2:	f53f aead 	bmi.w	8007930 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8007bd6:	f7fe fbeb 	bl	80063b0 <HAL_GetTick>
 8007bda:	1b00      	subs	r0, r0, r4
 8007bdc:	2802      	cmp	r0, #2
 8007bde:	d9f6      	bls.n	8007bce <HAL_RCC_OscConfig+0x2ca>
 8007be0:	e6d3      	b.n	800798a <HAL_RCC_OscConfig+0x86>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8007be2:	f7fe fbe5 	bl	80063b0 <HAL_GetTick>
 8007be6:	1b80      	subs	r0, r0, r6
 8007be8:	2802      	cmp	r0, #2
 8007bea:	d9d7      	bls.n	8007b9c <HAL_RCC_OscConfig+0x298>
 8007bec:	e6cd      	b.n	800798a <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 8007bee:	f7fe fbdf 	bl	80063b0 <HAL_GetTick>
 8007bf2:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8007bf4:	682b      	ldr	r3, [r5, #0]
 8007bf6:	019b      	lsls	r3, r3, #6
 8007bf8:	f57f ae9a 	bpl.w	8007930 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8007bfc:	f7fe fbd8 	bl	80063b0 <HAL_GetTick>
 8007c00:	1b00      	subs	r0, r0, r4
 8007c02:	2802      	cmp	r0, #2
 8007c04:	d9f6      	bls.n	8007bf4 <HAL_RCC_OscConfig+0x2f0>
 8007c06:	e6c0      	b.n	800798a <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8007c08:	2801      	cmp	r0, #1
 8007c0a:	f43f aebf 	beq.w	800798c <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 8007c0e:	686b      	ldr	r3, [r5, #4]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8007c10:	69e2      	ldr	r2, [r4, #28]
 8007c12:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
 8007c16:	4291      	cmp	r1, r2
 8007c18:	f47f aea1 	bne.w	800795e <HAL_RCC_OscConfig+0x5a>
 8007c1c:	6a21      	ldr	r1, [r4, #32]
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8007c1e:	f003 023f 	and.w	r2, r3, #63	; 0x3f
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8007c22:	428a      	cmp	r2, r1
 8007c24:	f47f ae9b 	bne.w	800795e <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8007c28:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8007c2a:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 8007c2e:	401a      	ands	r2, r3
 8007c30:	428a      	cmp	r2, r1
 8007c32:	f47f ae94 	bne.w	800795e <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8007c36:	6aa1      	ldr	r1, [r4, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8007c38:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8007c3c:	428a      	cmp	r2, r1
 8007c3e:	f47f ae8e 	bne.w	800795e <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8007c42:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 8007c44:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8007c48:	4293      	cmp	r3, r2
 8007c4a:	f43f ae71 	beq.w	8007930 <HAL_RCC_OscConfig+0x2c>
 8007c4e:	e686      	b.n	800795e <HAL_RCC_OscConfig+0x5a>
 8007c50:	40023800 	.word	0x40023800
 8007c54:	42470000 	.word	0x42470000

08007c58 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007c58:	4913      	ldr	r1, [pc, #76]	; (8007ca8 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8007c5a:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007c5c:	688b      	ldr	r3, [r1, #8]
 8007c5e:	f003 030c 	and.w	r3, r3, #12
 8007c62:	2b04      	cmp	r3, #4
 8007c64:	d01c      	beq.n	8007ca0 <HAL_RCC_GetSysClockFreq+0x48>
 8007c66:	2b08      	cmp	r3, #8
 8007c68:	d11c      	bne.n	8007ca4 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8007c6a:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8007c6c:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007c6e:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8007c70:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007c74:	bf14      	ite	ne
 8007c76:	480d      	ldrne	r0, [pc, #52]	; (8007cac <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007c78:	480d      	ldreq	r0, [pc, #52]	; (8007cb0 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007c7a:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8007c7e:	bf18      	it	ne
 8007c80:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8007c82:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007c86:	fba1 0100 	umull	r0, r1, r1, r0
 8007c8a:	f7f8 fb01 	bl	8000290 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8007c8e:	4b06      	ldr	r3, [pc, #24]	; (8007ca8 <HAL_RCC_GetSysClockFreq+0x50>)
 8007c90:	685b      	ldr	r3, [r3, #4]
 8007c92:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8007c96:	3301      	adds	r3, #1
 8007c98:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 8007c9a:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8007c9e:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007ca0:	4802      	ldr	r0, [pc, #8]	; (8007cac <HAL_RCC_GetSysClockFreq+0x54>)
 8007ca2:	e7fc      	b.n	8007c9e <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8007ca4:	4802      	ldr	r0, [pc, #8]	; (8007cb0 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8007ca6:	e7fa      	b.n	8007c9e <HAL_RCC_GetSysClockFreq+0x46>
 8007ca8:	40023800 	.word	0x40023800
 8007cac:	007a1200 	.word	0x007a1200
 8007cb0:	00f42400 	.word	0x00f42400

08007cb4 <HAL_RCC_ClockConfig>:
{
 8007cb4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007cb8:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 8007cba:	4604      	mov	r4, r0
 8007cbc:	b910      	cbnz	r0, 8007cc4 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8007cbe:	2001      	movs	r0, #1
}
 8007cc0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8007cc4:	4b44      	ldr	r3, [pc, #272]	; (8007dd8 <HAL_RCC_ClockConfig+0x124>)
 8007cc6:	681a      	ldr	r2, [r3, #0]
 8007cc8:	f002 020f 	and.w	r2, r2, #15
 8007ccc:	428a      	cmp	r2, r1
 8007cce:	d328      	bcc.n	8007d22 <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8007cd0:	6822      	ldr	r2, [r4, #0]
 8007cd2:	0797      	lsls	r7, r2, #30
 8007cd4:	d42d      	bmi.n	8007d32 <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8007cd6:	07d0      	lsls	r0, r2, #31
 8007cd8:	d441      	bmi.n	8007d5e <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8007cda:	4b3f      	ldr	r3, [pc, #252]	; (8007dd8 <HAL_RCC_ClockConfig+0x124>)
 8007cdc:	681a      	ldr	r2, [r3, #0]
 8007cde:	f002 020f 	and.w	r2, r2, #15
 8007ce2:	42aa      	cmp	r2, r5
 8007ce4:	d866      	bhi.n	8007db4 <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8007ce6:	6822      	ldr	r2, [r4, #0]
 8007ce8:	0751      	lsls	r1, r2, #29
 8007cea:	d46c      	bmi.n	8007dc6 <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8007cec:	0713      	lsls	r3, r2, #28
 8007cee:	d507      	bpl.n	8007d00 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8007cf0:	4a3a      	ldr	r2, [pc, #232]	; (8007ddc <HAL_RCC_ClockConfig+0x128>)
 8007cf2:	6921      	ldr	r1, [r4, #16]
 8007cf4:	6893      	ldr	r3, [r2, #8]
 8007cf6:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8007cfa:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8007cfe:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8007d00:	f7ff ffaa 	bl	8007c58 <HAL_RCC_GetSysClockFreq>
 8007d04:	4b35      	ldr	r3, [pc, #212]	; (8007ddc <HAL_RCC_ClockConfig+0x128>)
 8007d06:	4a36      	ldr	r2, [pc, #216]	; (8007de0 <HAL_RCC_ClockConfig+0x12c>)
 8007d08:	689b      	ldr	r3, [r3, #8]
 8007d0a:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8007d0e:	5cd3      	ldrb	r3, [r2, r3]
 8007d10:	40d8      	lsrs	r0, r3
 8007d12:	4b34      	ldr	r3, [pc, #208]	; (8007de4 <HAL_RCC_ClockConfig+0x130>)
 8007d14:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 8007d16:	4b34      	ldr	r3, [pc, #208]	; (8007de8 <HAL_RCC_ClockConfig+0x134>)
 8007d18:	6818      	ldr	r0, [r3, #0]
 8007d1a:	f7fa f8b7 	bl	8001e8c <HAL_InitTick>
  return HAL_OK;
 8007d1e:	2000      	movs	r0, #0
 8007d20:	e7ce      	b.n	8007cc0 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8007d22:	b2ca      	uxtb	r2, r1
 8007d24:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8007d26:	681b      	ldr	r3, [r3, #0]
 8007d28:	f003 030f 	and.w	r3, r3, #15
 8007d2c:	428b      	cmp	r3, r1
 8007d2e:	d1c6      	bne.n	8007cbe <HAL_RCC_ClockConfig+0xa>
 8007d30:	e7ce      	b.n	8007cd0 <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8007d32:	4b2a      	ldr	r3, [pc, #168]	; (8007ddc <HAL_RCC_ClockConfig+0x128>)
 8007d34:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8007d38:	bf1e      	ittt	ne
 8007d3a:	6899      	ldrne	r1, [r3, #8]
 8007d3c:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 8007d40:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8007d42:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8007d44:	bf42      	ittt	mi
 8007d46:	6899      	ldrmi	r1, [r3, #8]
 8007d48:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 8007d4c:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8007d4e:	4923      	ldr	r1, [pc, #140]	; (8007ddc <HAL_RCC_ClockConfig+0x128>)
 8007d50:	68a0      	ldr	r0, [r4, #8]
 8007d52:	688b      	ldr	r3, [r1, #8]
 8007d54:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8007d58:	4303      	orrs	r3, r0
 8007d5a:	608b      	str	r3, [r1, #8]
 8007d5c:	e7bb      	b.n	8007cd6 <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8007d5e:	6862      	ldr	r2, [r4, #4]
 8007d60:	4b1e      	ldr	r3, [pc, #120]	; (8007ddc <HAL_RCC_ClockConfig+0x128>)
 8007d62:	2a01      	cmp	r2, #1
 8007d64:	d11c      	bne.n	8007da0 <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8007d66:	681b      	ldr	r3, [r3, #0]
 8007d68:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007d6c:	d0a7      	beq.n	8007cbe <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8007d6e:	4e1b      	ldr	r6, [pc, #108]	; (8007ddc <HAL_RCC_ClockConfig+0x128>)
 8007d70:	68b3      	ldr	r3, [r6, #8]
 8007d72:	f023 0303 	bic.w	r3, r3, #3
 8007d76:	4313      	orrs	r3, r2
 8007d78:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8007d7a:	f7fe fb19 	bl	80063b0 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8007d7e:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 8007d82:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8007d84:	68b3      	ldr	r3, [r6, #8]
 8007d86:	6862      	ldr	r2, [r4, #4]
 8007d88:	f003 030c 	and.w	r3, r3, #12
 8007d8c:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8007d90:	d0a3      	beq.n	8007cda <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8007d92:	f7fe fb0d 	bl	80063b0 <HAL_GetTick>
 8007d96:	1bc0      	subs	r0, r0, r7
 8007d98:	4540      	cmp	r0, r8
 8007d9a:	d9f3      	bls.n	8007d84 <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 8007d9c:	2003      	movs	r0, #3
 8007d9e:	e78f      	b.n	8007cc0 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8007da0:	1e91      	subs	r1, r2, #2
 8007da2:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8007da4:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8007da6:	d802      	bhi.n	8007dae <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8007da8:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8007dac:	e7de      	b.n	8007d6c <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007dae:	f013 0f02 	tst.w	r3, #2
 8007db2:	e7db      	b.n	8007d6c <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8007db4:	b2ea      	uxtb	r2, r5
 8007db6:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8007db8:	681b      	ldr	r3, [r3, #0]
 8007dba:	f003 030f 	and.w	r3, r3, #15
 8007dbe:	42ab      	cmp	r3, r5
 8007dc0:	f47f af7d 	bne.w	8007cbe <HAL_RCC_ClockConfig+0xa>
 8007dc4:	e78f      	b.n	8007ce6 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8007dc6:	4905      	ldr	r1, [pc, #20]	; (8007ddc <HAL_RCC_ClockConfig+0x128>)
 8007dc8:	68e0      	ldr	r0, [r4, #12]
 8007dca:	688b      	ldr	r3, [r1, #8]
 8007dcc:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8007dd0:	4303      	orrs	r3, r0
 8007dd2:	608b      	str	r3, [r1, #8]
 8007dd4:	e78a      	b.n	8007cec <HAL_RCC_ClockConfig+0x38>
 8007dd6:	bf00      	nop
 8007dd8:	40023c00 	.word	0x40023c00
 8007ddc:	40023800 	.word	0x40023800
 8007de0:	080237d8 	.word	0x080237d8
 8007de4:	2000007c 	.word	0x2000007c
 8007de8:	20000084 	.word	0x20000084

08007dec <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8007dec:	4b04      	ldr	r3, [pc, #16]	; (8007e00 <HAL_RCC_GetPCLK1Freq+0x14>)
 8007dee:	4a05      	ldr	r2, [pc, #20]	; (8007e04 <HAL_RCC_GetPCLK1Freq+0x18>)
 8007df0:	689b      	ldr	r3, [r3, #8]
 8007df2:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8007df6:	5cd3      	ldrb	r3, [r2, r3]
 8007df8:	4a03      	ldr	r2, [pc, #12]	; (8007e08 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8007dfa:	6810      	ldr	r0, [r2, #0]
}
 8007dfc:	40d8      	lsrs	r0, r3
 8007dfe:	4770      	bx	lr
 8007e00:	40023800 	.word	0x40023800
 8007e04:	080237e8 	.word	0x080237e8
 8007e08:	2000007c 	.word	0x2000007c

08007e0c <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 8007e0c:	4b04      	ldr	r3, [pc, #16]	; (8007e20 <HAL_RCC_GetPCLK2Freq+0x14>)
 8007e0e:	4a05      	ldr	r2, [pc, #20]	; (8007e24 <HAL_RCC_GetPCLK2Freq+0x18>)
 8007e10:	689b      	ldr	r3, [r3, #8]
 8007e12:	f3c3 3342 	ubfx	r3, r3, #13, #3
 8007e16:	5cd3      	ldrb	r3, [r2, r3]
 8007e18:	4a03      	ldr	r2, [pc, #12]	; (8007e28 <HAL_RCC_GetPCLK2Freq+0x1c>)
 8007e1a:	6810      	ldr	r0, [r2, #0]
}
 8007e1c:	40d8      	lsrs	r0, r3
 8007e1e:	4770      	bx	lr
 8007e20:	40023800 	.word	0x40023800
 8007e24:	080237e8 	.word	0x080237e8
 8007e28:	2000007c 	.word	0x2000007c

08007e2c <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8007e2c:	230f      	movs	r3, #15
 8007e2e:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8007e30:	4b0b      	ldr	r3, [pc, #44]	; (8007e60 <HAL_RCC_GetClockConfig+0x34>)
 8007e32:	689a      	ldr	r2, [r3, #8]
 8007e34:	f002 0203 	and.w	r2, r2, #3
 8007e38:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8007e3a:	689a      	ldr	r2, [r3, #8]
 8007e3c:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8007e40:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 8007e42:	689a      	ldr	r2, [r3, #8]
 8007e44:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8007e48:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8007e4a:	689b      	ldr	r3, [r3, #8]
 8007e4c:	08db      	lsrs	r3, r3, #3
 8007e4e:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8007e52:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8007e54:	4b03      	ldr	r3, [pc, #12]	; (8007e64 <HAL_RCC_GetClockConfig+0x38>)
 8007e56:	681b      	ldr	r3, [r3, #0]
 8007e58:	f003 030f 	and.w	r3, r3, #15
 8007e5c:	600b      	str	r3, [r1, #0]
}
 8007e5e:	4770      	bx	lr
 8007e60:	40023800 	.word	0x40023800
 8007e64:	40023c00 	.word	0x40023c00

08007e68 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8007e68:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8007e6a:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 8007e6e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007e70:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8007e72:	f040 808c 	bne.w	8007f8e <HAL_RCCEx_PeriphCLKConfig+0x126>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8007e76:	6823      	ldr	r3, [r4, #0]
 8007e78:	f013 0f0c 	tst.w	r3, #12
 8007e7c:	d045      	beq.n	8007f0a <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8007e7e:	4b8b      	ldr	r3, [pc, #556]	; (80080ac <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8007e80:	4d8b      	ldr	r5, [pc, #556]	; (80080b0 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_DISABLE();
 8007e82:	2200      	movs	r2, #0
 8007e84:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 8007e86:	f7fe fa93 	bl	80063b0 <HAL_GetTick>
 8007e8a:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8007e8c:	682b      	ldr	r3, [r5, #0]
 8007e8e:	009f      	lsls	r7, r3, #2
 8007e90:	f100 80cf 	bmi.w	8008032 <HAL_RCCEx_PeriphCLKConfig+0x1ca>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8007e94:	6821      	ldr	r1, [r4, #0]
 8007e96:	074e      	lsls	r6, r1, #29
 8007e98:	d515      	bpl.n	8007ec6 <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8007e9a:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8007e9e:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8007ea2:	061b      	lsls	r3, r3, #24
 8007ea4:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 8007ea8:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8007eac:	4313      	orrs	r3, r2
 8007eae:	f8c5 3088 	str.w	r3, [r5, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8007eb2:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 8007eb6:	6a22      	ldr	r2, [r4, #32]
 8007eb8:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 8007ebc:	3a01      	subs	r2, #1
 8007ebe:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8007ec2:	f8c5 308c 	str.w	r3, [r5, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8007ec6:	070d      	lsls	r5, r1, #28
 8007ec8:	d514      	bpl.n	8007ef4 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8007eca:	4a79      	ldr	r2, [pc, #484]	; (80080b0 <HAL_RCCEx_PeriphCLKConfig+0x248>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8007ecc:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8007ece:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8007ed2:	6920      	ldr	r0, [r4, #16]
 8007ed4:	071b      	lsls	r3, r3, #28
 8007ed6:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 8007eda:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8007ede:	430b      	orrs	r3, r1
 8007ee0:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8007ee4:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8007ee8:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8007eea:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8007eee:	430b      	orrs	r3, r1
 8007ef0:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8007ef4:	4b6d      	ldr	r3, [pc, #436]	; (80080ac <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8007ef6:	4e6e      	ldr	r6, [pc, #440]	; (80080b0 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_ENABLE();
 8007ef8:	2201      	movs	r2, #1
 8007efa:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 8007efc:	f7fe fa58 	bl	80063b0 <HAL_GetTick>
 8007f00:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8007f02:	6833      	ldr	r3, [r6, #0]
 8007f04:	0098      	lsls	r0, r3, #2
 8007f06:	f140 809b 	bpl.w	8008040 <HAL_RCCEx_PeriphCLKConfig+0x1d8>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8007f0a:	6823      	ldr	r3, [r4, #0]
 8007f0c:	069b      	lsls	r3, r3, #26
 8007f0e:	d533      	bpl.n	8007f78 <HAL_RCCEx_PeriphCLKConfig+0x110>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8007f10:	2300      	movs	r3, #0
 8007f12:	9301      	str	r3, [sp, #4]
 8007f14:	4b66      	ldr	r3, [pc, #408]	; (80080b0 <HAL_RCCEx_PeriphCLKConfig+0x248>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 8007f16:	4d67      	ldr	r5, [pc, #412]	; (80080b4 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8007f18:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8007f1a:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8007f1e:	641a      	str	r2, [r3, #64]	; 0x40
 8007f20:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007f22:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8007f26:	9301      	str	r3, [sp, #4]
 8007f28:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8007f2a:	682b      	ldr	r3, [r5, #0]
 8007f2c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8007f30:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 8007f32:	f7fe fa3d 	bl	80063b0 <HAL_GetTick>
 8007f36:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 8007f38:	682b      	ldr	r3, [r5, #0]
 8007f3a:	05d9      	lsls	r1, r3, #23
 8007f3c:	f140 8087 	bpl.w	800804e <HAL_RCCEx_PeriphCLKConfig+0x1e6>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8007f40:	4d5b      	ldr	r5, [pc, #364]	; (80080b0 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8007f42:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8007f44:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8007f48:	f040 8088 	bne.w	800805c <HAL_RCCEx_PeriphCLKConfig+0x1f4>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8007f4c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8007f4e:	f403 7240 	and.w	r2, r3, #768	; 0x300
 8007f52:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8007f56:	4a56      	ldr	r2, [pc, #344]	; (80080b0 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8007f58:	f040 80a4 	bne.w	80080a4 <HAL_RCCEx_PeriphCLKConfig+0x23c>
 8007f5c:	6891      	ldr	r1, [r2, #8]
 8007f5e:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 8007f62:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8007f66:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 8007f6a:	4301      	orrs	r1, r0
 8007f6c:	6091      	str	r1, [r2, #8]
 8007f6e:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8007f70:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8007f74:	430b      	orrs	r3, r1
 8007f76:	6713      	str	r3, [r2, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8007f78:	6820      	ldr	r0, [r4, #0]
 8007f7a:	f010 0010 	ands.w	r0, r0, #16
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8007f7e:	bf1f      	itttt	ne
 8007f80:	4b4d      	ldrne	r3, [pc, #308]	; (80080b8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 8007f82:	f894 202c 	ldrbne.w	r2, [r4, #44]	; 0x2c
 8007f86:	f8c3 21e0 	strne.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 8007f8a:	2000      	movne	r0, #0
 8007f8c:	e04f      	b.n	800802e <HAL_RCCEx_PeriphCLKConfig+0x1c6>
    __HAL_RCC_PLLI2S_DISABLE();
 8007f8e:	4b47      	ldr	r3, [pc, #284]	; (80080ac <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8007f90:	4e47      	ldr	r6, [pc, #284]	; (80080b0 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_DISABLE();
 8007f92:	2200      	movs	r2, #0
 8007f94:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 8007f96:	f7fe fa0b 	bl	80063b0 <HAL_GetTick>
 8007f9a:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8007f9c:	6833      	ldr	r3, [r6, #0]
 8007f9e:	011f      	lsls	r7, r3, #4
 8007fa0:	d43f      	bmi.n	8008022 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8007fa2:	6821      	ldr	r1, [r4, #0]
 8007fa4:	07cd      	lsls	r5, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 8007fa6:	bf41      	itttt	mi
 8007fa8:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8007fac:	071b      	lslmi	r3, r3, #28
 8007fae:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 8007fb2:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8007fb6:	0788      	lsls	r0, r1, #30
 8007fb8:	d515      	bpl.n	8007fe6 <HAL_RCCEx_PeriphCLKConfig+0x17e>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8007fba:	4a3d      	ldr	r2, [pc, #244]	; (80080b0 <HAL_RCCEx_PeriphCLKConfig+0x248>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8007fbc:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8007fbe:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8007fc2:	6865      	ldr	r5, [r4, #4]
 8007fc4:	061b      	lsls	r3, r3, #24
 8007fc6:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 8007fca:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 8007fce:	4303      	orrs	r3, r0
 8007fd0:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8007fd4:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 8007fd8:	69e3      	ldr	r3, [r4, #28]
 8007fda:	f020 001f 	bic.w	r0, r0, #31
 8007fde:	3b01      	subs	r3, #1
 8007fe0:	4303      	orrs	r3, r0
 8007fe2:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8007fe6:	0649      	lsls	r1, r1, #25
 8007fe8:	d50a      	bpl.n	8008000 <HAL_RCCEx_PeriphCLKConfig+0x198>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8007fea:	68e3      	ldr	r3, [r4, #12]
 8007fec:	6862      	ldr	r2, [r4, #4]
 8007fee:	061b      	lsls	r3, r3, #24
 8007ff0:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8007ff4:	68a2      	ldr	r2, [r4, #8]
 8007ff6:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8007ffa:	4a2d      	ldr	r2, [pc, #180]	; (80080b0 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8007ffc:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8008000:	4b2a      	ldr	r3, [pc, #168]	; (80080ac <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8008002:	4e2b      	ldr	r6, [pc, #172]	; (80080b0 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_ENABLE();
 8008004:	2201      	movs	r2, #1
 8008006:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 8008008:	f7fe f9d2 	bl	80063b0 <HAL_GetTick>
 800800c:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800800e:	6833      	ldr	r3, [r6, #0]
 8008010:	011a      	lsls	r2, r3, #4
 8008012:	f53f af30 	bmi.w	8007e76 <HAL_RCCEx_PeriphCLKConfig+0xe>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8008016:	f7fe f9cb 	bl	80063b0 <HAL_GetTick>
 800801a:	1b40      	subs	r0, r0, r5
 800801c:	2802      	cmp	r0, #2
 800801e:	d9f6      	bls.n	800800e <HAL_RCCEx_PeriphCLKConfig+0x1a6>
 8008020:	e004      	b.n	800802c <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8008022:	f7fe f9c5 	bl	80063b0 <HAL_GetTick>
 8008026:	1b40      	subs	r0, r0, r5
 8008028:	2802      	cmp	r0, #2
 800802a:	d9b7      	bls.n	8007f9c <HAL_RCCEx_PeriphCLKConfig+0x134>
        return HAL_TIMEOUT;
 800802c:	2003      	movs	r0, #3
}
 800802e:	b003      	add	sp, #12
 8008030:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8008032:	f7fe f9bd 	bl	80063b0 <HAL_GetTick>
 8008036:	1b80      	subs	r0, r0, r6
 8008038:	2802      	cmp	r0, #2
 800803a:	f67f af27 	bls.w	8007e8c <HAL_RCCEx_PeriphCLKConfig+0x24>
 800803e:	e7f5      	b.n	800802c <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8008040:	f7fe f9b6 	bl	80063b0 <HAL_GetTick>
 8008044:	1b40      	subs	r0, r0, r5
 8008046:	2802      	cmp	r0, #2
 8008048:	f67f af5b 	bls.w	8007f02 <HAL_RCCEx_PeriphCLKConfig+0x9a>
 800804c:	e7ee      	b.n	800802c <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800804e:	f7fe f9af 	bl	80063b0 <HAL_GetTick>
 8008052:	1b80      	subs	r0, r0, r6
 8008054:	2802      	cmp	r0, #2
 8008056:	f67f af6f 	bls.w	8007f38 <HAL_RCCEx_PeriphCLKConfig+0xd0>
 800805a:	e7e7      	b.n	800802c <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800805c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800805e:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8008062:	4293      	cmp	r3, r2
 8008064:	f43f af72 	beq.w	8007f4c <HAL_RCCEx_PeriphCLKConfig+0xe4>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8008068:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800806a:	4a10      	ldr	r2, [pc, #64]	; (80080ac <HAL_RCCEx_PeriphCLKConfig+0x244>)
 800806c:	2101      	movs	r1, #1
 800806e:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8008072:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8008076:	2100      	movs	r1, #0
 8008078:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800807c:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800807e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8008080:	07da      	lsls	r2, r3, #31
 8008082:	f57f af63 	bpl.w	8007f4c <HAL_RCCEx_PeriphCLKConfig+0xe4>
        tickstart = HAL_GetTick();
 8008086:	f7fe f993 	bl	80063b0 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800808a:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800808e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8008090:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8008092:	079b      	lsls	r3, r3, #30
 8008094:	f53f af5a 	bmi.w	8007f4c <HAL_RCCEx_PeriphCLKConfig+0xe4>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8008098:	f7fe f98a 	bl	80063b0 <HAL_GetTick>
 800809c:	1b80      	subs	r0, r0, r6
 800809e:	42b8      	cmp	r0, r7
 80080a0:	d9f6      	bls.n	8008090 <HAL_RCCEx_PeriphCLKConfig+0x228>
 80080a2:	e7c3      	b.n	800802c <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80080a4:	6891      	ldr	r1, [r2, #8]
 80080a6:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 80080aa:	e75f      	b.n	8007f6c <HAL_RCCEx_PeriphCLKConfig+0x104>
 80080ac:	42470000 	.word	0x42470000
 80080b0:	40023800 	.word	0x40023800
 80080b4:	40007000 	.word	0x40007000
 80080b8:	42471000 	.word	0x42471000

080080bc <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 80080bc:	b538      	push	{r3, r4, r5, lr}
 80080be:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 80080c0:	4604      	mov	r4, r0
 80080c2:	b1c8      	cbz	r0, 80080f8 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 80080c4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80080c8:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80080cc:	b91b      	cbnz	r3, 80080d6 <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 80080ce:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 80080d2:	f7f9 fe6f 	bl	8001db4 <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80080d6:	2302      	movs	r3, #2
 80080d8:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 80080dc:	1d21      	adds	r1, r4, #4
 80080de:	6820      	ldr	r0, [r4, #0]
 80080e0:	f000 fcba 	bl	8008a58 <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 80080e4:	6862      	ldr	r2, [r4, #4]
 80080e6:	6820      	ldr	r0, [r4, #0]
 80080e8:	4629      	mov	r1, r5
 80080ea:	f000 fceb 	bl	8008ac4 <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 80080ee:	2301      	movs	r3, #1
 80080f0:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 80080f4:	2000      	movs	r0, #0
}
 80080f6:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80080f8:	2001      	movs	r0, #1
 80080fa:	e7fc      	b.n	80080f6 <HAL_SDRAM_Init+0x3a>

080080fc <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 80080fc:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80080fe:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8008102:	2b02      	cmp	r3, #2
{
 8008104:	4604      	mov	r4, r0
 8008106:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8008108:	b2d8      	uxtb	r0, r3
 800810a:	d00d      	beq.n	8008128 <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800810c:	2302      	movs	r3, #2
 800810e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8008112:	6820      	ldr	r0, [r4, #0]
 8008114:	f000 fd12 	bl	8008b3c <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8008118:	682b      	ldr	r3, [r5, #0]
 800811a:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800811c:	bf0c      	ite	eq
 800811e:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 8008120:	2301      	movne	r3, #1
 8008122:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 8008126:	2000      	movs	r0, #0
}
 8008128:	bd38      	pop	{r3, r4, r5, pc}

0800812a <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800812a:	b510      	push	{r4, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 800812c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8008130:	2b02      	cmp	r3, #2
{
 8008132:	4604      	mov	r4, r0
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8008134:	b2d8      	uxtb	r0, r3
 8008136:	d009      	beq.n	800814c <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8008138:	2302      	movs	r3, #2
 800813a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 800813e:	6820      	ldr	r0, [r4, #0]
 8008140:	f000 fd23 	bl	8008b8a <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8008144:	2301      	movs	r3, #1
 8008146:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 800814a:	2000      	movs	r0, #0
}
 800814c:	bd10      	pop	{r4, pc}

0800814e <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800814e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008150:	4604      	mov	r4, r0
 8008152:	460e      	mov	r6, r1
 8008154:	4615      	mov	r5, r2
 8008156:	461f      	mov	r7, r3
                                                       uint32_t Timeout, uint32_t Tickstart)
{
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8008158:	6822      	ldr	r2, [r4, #0]
 800815a:	6893      	ldr	r3, [r2, #8]
 800815c:	ea36 0303 	bics.w	r3, r6, r3
 8008160:	d001      	beq.n	8008166 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x18>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8008162:	2000      	movs	r0, #0
 8008164:	e02d      	b.n	80081c2 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x74>
    if (Timeout != HAL_MAX_DELAY)
 8008166:	1c6b      	adds	r3, r5, #1
 8008168:	d0f7      	beq.n	800815a <SPI_WaitFlagStateUntilTimeout.constprop.0+0xc>
      if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
 800816a:	f7fe f921 	bl	80063b0 <HAL_GetTick>
 800816e:	1bc0      	subs	r0, r0, r7
 8008170:	4285      	cmp	r5, r0
 8008172:	d8f1      	bhi.n	8008158 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8008174:	6823      	ldr	r3, [r4, #0]
 8008176:	685a      	ldr	r2, [r3, #4]
 8008178:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800817c:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800817e:	6862      	ldr	r2, [r4, #4]
 8008180:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8008184:	d10a      	bne.n	800819c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4e>
 8008186:	68a2      	ldr	r2, [r4, #8]
 8008188:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800818c:	d002      	beq.n	8008194 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x46>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800818e:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8008192:	d103      	bne.n	800819c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4e>
          __HAL_SPI_DISABLE(hspi);
 8008194:	681a      	ldr	r2, [r3, #0]
 8008196:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800819a:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800819c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800819e:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 80081a2:	d107      	bne.n	80081b4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
          SPI_RESET_CRC(hspi);
 80081a4:	681a      	ldr	r2, [r3, #0]
 80081a6:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80081aa:	601a      	str	r2, [r3, #0]
 80081ac:	681a      	ldr	r2, [r3, #0]
 80081ae:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80081b2:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 80081b4:	2301      	movs	r3, #1
 80081b6:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 80081ba:	2300      	movs	r3, #0
 80081bc:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 80081c0:	2003      	movs	r0, #3
}
 80081c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080081c4 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 80081c4:	b538      	push	{r3, r4, r5, lr}
 80081c6:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80081c8:	6842      	ldr	r2, [r0, #4]
 80081ca:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 80081ce:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80081d0:	d11f      	bne.n	8008212 <SPI_EndRxTransaction+0x4e>
 80081d2:	6882      	ldr	r2, [r0, #8]
 80081d4:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 80081d8:	d002      	beq.n	80081e0 <SPI_EndRxTransaction+0x1c>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 80081da:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 80081de:	d107      	bne.n	80081f0 <SPI_EndRxTransaction+0x2c>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 80081e0:	6825      	ldr	r5, [r4, #0]
 80081e2:	6828      	ldr	r0, [r5, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 80081e4:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
    __HAL_SPI_DISABLE(hspi);
 80081e8:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 80081ec:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 80081ee:	d007      	beq.n	8008200 <SPI_EndRxTransaction+0x3c>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 80081f0:	460a      	mov	r2, r1
 80081f2:	2180      	movs	r1, #128	; 0x80
 80081f4:	4620      	mov	r0, r4
 80081f6:	f7ff ffaa 	bl	800814e <SPI_WaitFlagStateUntilTimeout.constprop.0>
 80081fa:	b920      	cbnz	r0, 8008206 <SPI_EndRxTransaction+0x42>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 80081fc:	2000      	movs	r0, #0
}
 80081fe:	bd38      	pop	{r3, r4, r5, pc}
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8008200:	460a      	mov	r2, r1
 8008202:	2101      	movs	r1, #1
 8008204:	e7f6      	b.n	80081f4 <SPI_EndRxTransaction+0x30>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8008206:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8008208:	f043 0320 	orr.w	r3, r3, #32
 800820c:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 800820e:	2003      	movs	r0, #3
 8008210:	e7f5      	b.n	80081fe <SPI_EndRxTransaction+0x3a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8008212:	460a      	mov	r2, r1
 8008214:	2101      	movs	r1, #1
 8008216:	e7ee      	b.n	80081f6 <SPI_EndRxTransaction+0x32>

08008218 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8008218:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800821a:	4613      	mov	r3, r2
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800821c:	4a12      	ldr	r2, [pc, #72]	; (8008268 <SPI_EndRxTxTransaction+0x50>)
 800821e:	6815      	ldr	r5, [r2, #0]
 8008220:	4a12      	ldr	r2, [pc, #72]	; (800826c <SPI_EndRxTxTransaction+0x54>)
 8008222:	fbb5 f5f2 	udiv	r5, r5, r2
 8008226:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800822a:	4355      	muls	r5, r2
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800822c:	6842      	ldr	r2, [r0, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800822e:	9501      	str	r5, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8008230:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8008234:	4604      	mov	r4, r0
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8008236:	d10b      	bne.n	8008250 <SPI_EndRxTxTransaction+0x38>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8008238:	460a      	mov	r2, r1
 800823a:	2180      	movs	r1, #128	; 0x80
 800823c:	f7ff ff87 	bl	800814e <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8008240:	b178      	cbz	r0, 8008262 <SPI_EndRxTxTransaction+0x4a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8008242:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8008244:	f043 0320 	orr.w	r3, r3, #32
 8008248:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 800824a:	2003      	movs	r0, #3
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 800824c:	b003      	add	sp, #12
 800824e:	bd30      	pop	{r4, r5, pc}
      if (count == 0U)
 8008250:	9b01      	ldr	r3, [sp, #4]
 8008252:	b133      	cbz	r3, 8008262 <SPI_EndRxTxTransaction+0x4a>
      count--;
 8008254:	9b01      	ldr	r3, [sp, #4]
 8008256:	3b01      	subs	r3, #1
 8008258:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800825a:	6823      	ldr	r3, [r4, #0]
 800825c:	689b      	ldr	r3, [r3, #8]
 800825e:	061b      	lsls	r3, r3, #24
 8008260:	d4f6      	bmi.n	8008250 <SPI_EndRxTxTransaction+0x38>
  return HAL_OK;
 8008262:	2000      	movs	r0, #0
 8008264:	e7f2      	b.n	800824c <SPI_EndRxTxTransaction+0x34>
 8008266:	bf00      	nop
 8008268:	2000007c 	.word	0x2000007c
 800826c:	016e3600 	.word	0x016e3600

08008270 <HAL_SPI_Init>:
{
 8008270:	b510      	push	{r4, lr}
  if (hspi == NULL)
 8008272:	4604      	mov	r4, r0
 8008274:	2800      	cmp	r0, #0
 8008276:	d036      	beq.n	80082e6 <HAL_SPI_Init+0x76>
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8008278:	2300      	movs	r3, #0
 800827a:	6283      	str	r3, [r0, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800827c:	f890 3051 	ldrb.w	r3, [r0, #81]	; 0x51
 8008280:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8008284:	b91b      	cbnz	r3, 800828e <HAL_SPI_Init+0x1e>
    hspi->Lock = HAL_UNLOCKED;
 8008286:	f880 2050 	strb.w	r2, [r0, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800828a:	f7f9 fd3b 	bl	8001d04 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 800828e:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8008290:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 8008292:	2302      	movs	r3, #2
 8008294:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 8008298:	680b      	ldr	r3, [r1, #0]
 800829a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800829e:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 80082a0:	e9d4 3001 	ldrd	r3, r0, [r4, #4]
 80082a4:	4303      	orrs	r3, r0
 80082a6:	68e0      	ldr	r0, [r4, #12]
 80082a8:	4303      	orrs	r3, r0
 80082aa:	6920      	ldr	r0, [r4, #16]
 80082ac:	4303      	orrs	r3, r0
 80082ae:	6960      	ldr	r0, [r4, #20]
 80082b0:	4303      	orrs	r3, r0
 80082b2:	69e0      	ldr	r0, [r4, #28]
 80082b4:	4303      	orrs	r3, r0
 80082b6:	6a20      	ldr	r0, [r4, #32]
 80082b8:	4303      	orrs	r3, r0
 80082ba:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80082bc:	4303      	orrs	r3, r0
 80082be:	f402 7000 	and.w	r0, r2, #512	; 0x200
 80082c2:	4303      	orrs	r3, r0
 80082c4:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 80082c6:	0c12      	lsrs	r2, r2, #16
 80082c8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80082ca:	f002 0204 	and.w	r2, r2, #4
 80082ce:	431a      	orrs	r2, r3
 80082d0:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 80082d2:	69cb      	ldr	r3, [r1, #28]
 80082d4:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80082d8:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 80082da:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 80082dc:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 80082de:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 80082e0:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
}
 80082e4:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80082e6:	2001      	movs	r0, #1
 80082e8:	e7fc      	b.n	80082e4 <HAL_SPI_Init+0x74>

080082ea <HAL_SPI_Transmit>:
{
 80082ea:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80082ee:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 80082f0:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 80082f4:	2b01      	cmp	r3, #1
{
 80082f6:	4604      	mov	r4, r0
 80082f8:	460d      	mov	r5, r1
 80082fa:	4617      	mov	r7, r2
  __HAL_LOCK(hspi);
 80082fc:	f000 809d 	beq.w	800843a <HAL_SPI_Transmit+0x150>
 8008300:	2301      	movs	r3, #1
 8008302:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8008306:	f7fe f853 	bl	80063b0 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800830a:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800830e:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8008310:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8008312:	b2d8      	uxtb	r0, r3
 8008314:	f040 808f 	bne.w	8008436 <HAL_SPI_Transmit+0x14c>
  if ((pData == NULL) || (Size == 0U))
 8008318:	2d00      	cmp	r5, #0
 800831a:	d05a      	beq.n	80083d2 <HAL_SPI_Transmit+0xe8>
 800831c:	2f00      	cmp	r7, #0
 800831e:	d058      	beq.n	80083d2 <HAL_SPI_Transmit+0xe8>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8008320:	2303      	movs	r3, #3
 8008322:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8008326:	68a2      	ldr	r2, [r4, #8]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8008328:	6325      	str	r5, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800832a:	2300      	movs	r3, #0
 800832c:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->RxISR       = NULL;
 800832e:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->TxXferCount = Size;
 8008332:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8008334:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferCount = 0U;
 8008336:	87e3      	strh	r3, [r4, #62]	; 0x3e
  hspi->RxXferSize  = 0U;
 8008338:	87a3      	strh	r3, [r4, #60]	; 0x3c
    SPI_1LINE_TX(hspi);
 800833a:	6823      	ldr	r3, [r4, #0]
  hspi->TxXferSize  = Size;
 800833c:	86a7      	strh	r7, [r4, #52]	; 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800833e:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    SPI_1LINE_TX(hspi);
 8008342:	bf08      	it	eq
 8008344:	681a      	ldreq	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8008346:	68e1      	ldr	r1, [r4, #12]
    SPI_1LINE_TX(hspi);
 8008348:	bf04      	itt	eq
 800834a:	f442 4280 	orreq.w	r2, r2, #16384	; 0x4000
 800834e:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8008350:	681a      	ldr	r2, [r3, #0]
 8008352:	0652      	lsls	r2, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8008354:	bf5e      	ittt	pl
 8008356:	681a      	ldrpl	r2, [r3, #0]
 8008358:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 800835c:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800835e:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8008362:	6862      	ldr	r2, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8008364:	d141      	bne.n	80083ea <HAL_SPI_Transmit+0x100>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8008366:	b10a      	cbz	r2, 800836c <HAL_SPI_Transmit+0x82>
 8008368:	2f01      	cmp	r7, #1
 800836a:	d107      	bne.n	800837c <HAL_SPI_Transmit+0x92>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800836c:	f835 2b02 	ldrh.w	r2, [r5], #2
 8008370:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8008372:	6325      	str	r5, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8008374:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008376:	3b01      	subs	r3, #1
 8008378:	b29b      	uxth	r3, r3
 800837a:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800837c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800837e:	b29b      	uxth	r3, r3
 8008380:	b9a3      	cbnz	r3, 80083ac <HAL_SPI_Transmit+0xc2>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8008382:	4642      	mov	r2, r8
 8008384:	4631      	mov	r1, r6
 8008386:	4620      	mov	r0, r4
 8008388:	f7ff ff46 	bl	8008218 <SPI_EndRxTxTransaction>
 800838c:	2800      	cmp	r0, #0
 800838e:	d14f      	bne.n	8008430 <HAL_SPI_Transmit+0x146>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8008390:	68a3      	ldr	r3, [r4, #8]
 8008392:	b933      	cbnz	r3, 80083a2 <HAL_SPI_Transmit+0xb8>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8008394:	9301      	str	r3, [sp, #4]
 8008396:	6823      	ldr	r3, [r4, #0]
 8008398:	68da      	ldr	r2, [r3, #12]
 800839a:	9201      	str	r2, [sp, #4]
 800839c:	689b      	ldr	r3, [r3, #8]
 800839e:	9301      	str	r3, [sp, #4]
 80083a0:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80083a2:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 80083a4:	3800      	subs	r0, #0
 80083a6:	bf18      	it	ne
 80083a8:	2001      	movne	r0, #1
error:
 80083aa:	e012      	b.n	80083d2 <HAL_SPI_Transmit+0xe8>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 80083ac:	6822      	ldr	r2, [r4, #0]
 80083ae:	6893      	ldr	r3, [r2, #8]
 80083b0:	0798      	lsls	r0, r3, #30
 80083b2:	d505      	bpl.n	80083c0 <HAL_SPI_Transmit+0xd6>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80083b4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80083b6:	f833 1b02 	ldrh.w	r1, [r3], #2
 80083ba:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 80083bc:	6323      	str	r3, [r4, #48]	; 0x30
 80083be:	e7d9      	b.n	8008374 <HAL_SPI_Transmit+0x8a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80083c0:	f7fd fff6 	bl	80063b0 <HAL_GetTick>
 80083c4:	eba0 0008 	sub.w	r0, r0, r8
 80083c8:	42b0      	cmp	r0, r6
 80083ca:	d30b      	bcc.n	80083e4 <HAL_SPI_Transmit+0xfa>
 80083cc:	1c71      	adds	r1, r6, #1
 80083ce:	d0d5      	beq.n	800837c <HAL_SPI_Transmit+0x92>
          errorcode = HAL_TIMEOUT;
 80083d0:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 80083d2:	2301      	movs	r3, #1
 80083d4:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 80083d8:	2300      	movs	r3, #0
 80083da:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 80083de:	b002      	add	sp, #8
 80083e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80083e4:	2e00      	cmp	r6, #0
 80083e6:	d1c9      	bne.n	800837c <HAL_SPI_Transmit+0x92>
 80083e8:	e7f2      	b.n	80083d0 <HAL_SPI_Transmit+0xe6>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80083ea:	b10a      	cbz	r2, 80083f0 <HAL_SPI_Transmit+0x106>
 80083ec:	2f01      	cmp	r7, #1
 80083ee:	d108      	bne.n	8008402 <HAL_SPI_Transmit+0x118>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80083f0:	782a      	ldrb	r2, [r5, #0]
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80083f2:	731a      	strb	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 80083f4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80083f6:	3301      	adds	r3, #1
 80083f8:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 80083fa:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80083fc:	3b01      	subs	r3, #1
 80083fe:	b29b      	uxth	r3, r3
 8008400:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8008402:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008404:	b29b      	uxth	r3, r3
 8008406:	2b00      	cmp	r3, #0
 8008408:	d0bb      	beq.n	8008382 <HAL_SPI_Transmit+0x98>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800840a:	6823      	ldr	r3, [r4, #0]
 800840c:	689a      	ldr	r2, [r3, #8]
 800840e:	0792      	lsls	r2, r2, #30
 8008410:	d502      	bpl.n	8008418 <HAL_SPI_Transmit+0x12e>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8008412:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8008414:	7812      	ldrb	r2, [r2, #0]
 8008416:	e7ec      	b.n	80083f2 <HAL_SPI_Transmit+0x108>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8008418:	f7fd ffca 	bl	80063b0 <HAL_GetTick>
 800841c:	eba0 0008 	sub.w	r0, r0, r8
 8008420:	42b0      	cmp	r0, r6
 8008422:	d302      	bcc.n	800842a <HAL_SPI_Transmit+0x140>
 8008424:	1c73      	adds	r3, r6, #1
 8008426:	d0ec      	beq.n	8008402 <HAL_SPI_Transmit+0x118>
 8008428:	e7d2      	b.n	80083d0 <HAL_SPI_Transmit+0xe6>
 800842a:	2e00      	cmp	r6, #0
 800842c:	d1e9      	bne.n	8008402 <HAL_SPI_Transmit+0x118>
 800842e:	e7cf      	b.n	80083d0 <HAL_SPI_Transmit+0xe6>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8008430:	2320      	movs	r3, #32
 8008432:	6563      	str	r3, [r4, #84]	; 0x54
 8008434:	e7ac      	b.n	8008390 <HAL_SPI_Transmit+0xa6>
    errorcode = HAL_BUSY;
 8008436:	2002      	movs	r0, #2
 8008438:	e7cb      	b.n	80083d2 <HAL_SPI_Transmit+0xe8>
  __HAL_LOCK(hspi);
 800843a:	2002      	movs	r0, #2
 800843c:	e7cf      	b.n	80083de <HAL_SPI_Transmit+0xf4>

0800843e <HAL_SPI_TransmitReceive>:
{
 800843e:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8008442:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8008444:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
{
 8008448:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  __HAL_LOCK(hspi);
 800844a:	2b01      	cmp	r3, #1
{
 800844c:	4604      	mov	r4, r0
 800844e:	460d      	mov	r5, r1
 8008450:	4691      	mov	r9, r2
  __HAL_LOCK(hspi);
 8008452:	f000 80e6 	beq.w	8008622 <HAL_SPI_TransmitReceive+0x1e4>
 8008456:	2301      	movs	r3, #1
 8008458:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 800845c:	f7fd ffa8 	bl	80063b0 <HAL_GetTick>
  tmp_state           = hspi->State;
 8008460:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 8008464:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8008466:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8008468:	4680      	mov	r8, r0
  tmp_state           = hspi->State;
 800846a:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800846c:	d00a      	beq.n	8008484 <HAL_SPI_TransmitReceive+0x46>
 800846e:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8008472:	f040 80d4 	bne.w	800861e <HAL_SPI_TransmitReceive+0x1e0>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8008476:	68a3      	ldr	r3, [r4, #8]
 8008478:	2b00      	cmp	r3, #0
 800847a:	f040 80d0 	bne.w	800861e <HAL_SPI_TransmitReceive+0x1e0>
 800847e:	2904      	cmp	r1, #4
 8008480:	f040 80cd 	bne.w	800861e <HAL_SPI_TransmitReceive+0x1e0>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8008484:	2d00      	cmp	r5, #0
 8008486:	d040      	beq.n	800850a <HAL_SPI_TransmitReceive+0xcc>
 8008488:	f1b9 0f00 	cmp.w	r9, #0
 800848c:	d03d      	beq.n	800850a <HAL_SPI_TransmitReceive+0xcc>
 800848e:	2e00      	cmp	r6, #0
 8008490:	d03b      	beq.n	800850a <HAL_SPI_TransmitReceive+0xcc>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8008492:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8008496:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800849a:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800849c:	bf1c      	itt	ne
 800849e:	2305      	movne	r3, #5
 80084a0:	f884 3051 	strbne.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80084a4:	2300      	movs	r3, #0
 80084a6:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 80084a8:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80084ac:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 80084ae:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 80084b0:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80084b2:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 80084b4:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80084b6:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 80084b8:	bf58      	it	pl
 80084ba:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 80084bc:	6325      	str	r5, [r4, #48]	; 0x30
    __HAL_SPI_ENABLE(hspi);
 80084be:	bf58      	it	pl
 80084c0:	f041 0140 	orrpl.w	r1, r1, #64	; 0x40
  hspi->TxXferSize  = Size;
 80084c4:	86a6      	strh	r6, [r4, #52]	; 0x34
    __HAL_SPI_ENABLE(hspi);
 80084c6:	bf58      	it	pl
 80084c8:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80084ca:	68e1      	ldr	r1, [r4, #12]
 80084cc:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 80084d0:	d152      	bne.n	8008578 <HAL_SPI_TransmitReceive+0x13a>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80084d2:	b10a      	cbz	r2, 80084d8 <HAL_SPI_TransmitReceive+0x9a>
 80084d4:	2e01      	cmp	r6, #1
 80084d6:	d107      	bne.n	80084e8 <HAL_SPI_TransmitReceive+0xaa>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80084d8:	f835 2b02 	ldrh.w	r2, [r5], #2
 80084dc:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 80084de:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 80084e0:	6325      	str	r5, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 80084e2:	3b01      	subs	r3, #1
 80084e4:	b29b      	uxth	r3, r3
 80084e6:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 80084e8:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80084ea:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80084ec:	b29b      	uxth	r3, r3
 80084ee:	b973      	cbnz	r3, 800850e <HAL_SPI_TransmitReceive+0xd0>
 80084f0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80084f2:	b29b      	uxth	r3, r3
 80084f4:	b95b      	cbnz	r3, 800850e <HAL_SPI_TransmitReceive+0xd0>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80084f6:	4642      	mov	r2, r8
 80084f8:	4639      	mov	r1, r7
 80084fa:	4620      	mov	r0, r4
 80084fc:	f7ff fe8c 	bl	8008218 <SPI_EndRxTxTransaction>
 8008500:	2800      	cmp	r0, #0
 8008502:	f000 8081 	beq.w	8008608 <HAL_SPI_TransmitReceive+0x1ca>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8008506:	2320      	movs	r3, #32
 8008508:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800850a:	2001      	movs	r0, #1
 800850c:	e02b      	b.n	8008566 <HAL_SPI_TransmitReceive+0x128>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800850e:	6821      	ldr	r1, [r4, #0]
 8008510:	688b      	ldr	r3, [r1, #8]
 8008512:	079e      	lsls	r6, r3, #30
 8008514:	d50d      	bpl.n	8008532 <HAL_SPI_TransmitReceive+0xf4>
 8008516:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008518:	b29b      	uxth	r3, r3
 800851a:	b153      	cbz	r3, 8008532 <HAL_SPI_TransmitReceive+0xf4>
 800851c:	b14d      	cbz	r5, 8008532 <HAL_SPI_TransmitReceive+0xf4>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800851e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8008520:	f833 2b02 	ldrh.w	r2, [r3], #2
 8008524:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8008526:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8008528:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800852a:	3b01      	subs	r3, #1
 800852c:	b29b      	uxth	r3, r3
 800852e:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8008530:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8008532:	688a      	ldr	r2, [r1, #8]
 8008534:	f012 0201 	ands.w	r2, r2, #1
 8008538:	d00c      	beq.n	8008554 <HAL_SPI_TransmitReceive+0x116>
 800853a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800853c:	b29b      	uxth	r3, r3
 800853e:	b14b      	cbz	r3, 8008554 <HAL_SPI_TransmitReceive+0x116>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8008540:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8008542:	68c9      	ldr	r1, [r1, #12]
 8008544:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8008548:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800854a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800854c:	3b01      	subs	r3, #1
 800854e:	b29b      	uxth	r3, r3
 8008550:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8008552:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8008554:	f7fd ff2c 	bl	80063b0 <HAL_GetTick>
 8008558:	eba0 0008 	sub.w	r0, r0, r8
 800855c:	42b8      	cmp	r0, r7
 800855e:	d3c4      	bcc.n	80084ea <HAL_SPI_TransmitReceive+0xac>
 8008560:	1c78      	adds	r0, r7, #1
 8008562:	d0c2      	beq.n	80084ea <HAL_SPI_TransmitReceive+0xac>
        errorcode = HAL_TIMEOUT;
 8008564:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8008566:	2301      	movs	r3, #1
 8008568:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800856c:	2300      	movs	r3, #0
 800856e:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8008572:	b003      	add	sp, #12
 8008574:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8008578:	b10a      	cbz	r2, 800857e <HAL_SPI_TransmitReceive+0x140>
 800857a:	2e01      	cmp	r6, #1
 800857c:	d108      	bne.n	8008590 <HAL_SPI_TransmitReceive+0x152>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800857e:	782a      	ldrb	r2, [r5, #0]
 8008580:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8008582:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8008584:	3301      	adds	r3, #1
 8008586:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8008588:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800858a:	3b01      	subs	r3, #1
 800858c:	b29b      	uxth	r3, r3
 800858e:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8008590:	2501      	movs	r5, #1
 8008592:	e02d      	b.n	80085f0 <HAL_SPI_TransmitReceive+0x1b2>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8008594:	6822      	ldr	r2, [r4, #0]
 8008596:	6893      	ldr	r3, [r2, #8]
 8008598:	0799      	lsls	r1, r3, #30
 800859a:	d50e      	bpl.n	80085ba <HAL_SPI_TransmitReceive+0x17c>
 800859c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800859e:	b29b      	uxth	r3, r3
 80085a0:	b15b      	cbz	r3, 80085ba <HAL_SPI_TransmitReceive+0x17c>
 80085a2:	b155      	cbz	r5, 80085ba <HAL_SPI_TransmitReceive+0x17c>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 80085a4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80085a6:	781b      	ldrb	r3, [r3, #0]
 80085a8:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 80085aa:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80085ac:	3301      	adds	r3, #1
 80085ae:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 80085b0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80085b2:	3b01      	subs	r3, #1
 80085b4:	b29b      	uxth	r3, r3
 80085b6:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 80085b8:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 80085ba:	6822      	ldr	r2, [r4, #0]
 80085bc:	6891      	ldr	r1, [r2, #8]
 80085be:	f011 0101 	ands.w	r1, r1, #1
 80085c2:	d00d      	beq.n	80085e0 <HAL_SPI_TransmitReceive+0x1a2>
 80085c4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80085c6:	b29b      	uxth	r3, r3
 80085c8:	b153      	cbz	r3, 80085e0 <HAL_SPI_TransmitReceive+0x1a2>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 80085ca:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80085cc:	68d2      	ldr	r2, [r2, #12]
 80085ce:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 80085d0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80085d2:	3301      	adds	r3, #1
 80085d4:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 80085d6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80085d8:	3b01      	subs	r3, #1
 80085da:	b29b      	uxth	r3, r3
 80085dc:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 80085de:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 80085e0:	f7fd fee6 	bl	80063b0 <HAL_GetTick>
 80085e4:	eba0 0008 	sub.w	r0, r0, r8
 80085e8:	42b8      	cmp	r0, r7
 80085ea:	d30a      	bcc.n	8008602 <HAL_SPI_TransmitReceive+0x1c4>
 80085ec:	1c7b      	adds	r3, r7, #1
 80085ee:	d1b9      	bne.n	8008564 <HAL_SPI_TransmitReceive+0x126>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80085f0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80085f2:	b29b      	uxth	r3, r3
 80085f4:	2b00      	cmp	r3, #0
 80085f6:	d1cd      	bne.n	8008594 <HAL_SPI_TransmitReceive+0x156>
 80085f8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80085fa:	b29b      	uxth	r3, r3
 80085fc:	2b00      	cmp	r3, #0
 80085fe:	d1c9      	bne.n	8008594 <HAL_SPI_TransmitReceive+0x156>
 8008600:	e779      	b.n	80084f6 <HAL_SPI_TransmitReceive+0xb8>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8008602:	2f00      	cmp	r7, #0
 8008604:	d1f4      	bne.n	80085f0 <HAL_SPI_TransmitReceive+0x1b2>
 8008606:	e7ad      	b.n	8008564 <HAL_SPI_TransmitReceive+0x126>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8008608:	68a3      	ldr	r3, [r4, #8]
 800860a:	2b00      	cmp	r3, #0
 800860c:	d1ab      	bne.n	8008566 <HAL_SPI_TransmitReceive+0x128>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800860e:	6823      	ldr	r3, [r4, #0]
 8008610:	9001      	str	r0, [sp, #4]
 8008612:	68da      	ldr	r2, [r3, #12]
 8008614:	9201      	str	r2, [sp, #4]
 8008616:	689b      	ldr	r3, [r3, #8]
 8008618:	9301      	str	r3, [sp, #4]
 800861a:	9b01      	ldr	r3, [sp, #4]
 800861c:	e7a3      	b.n	8008566 <HAL_SPI_TransmitReceive+0x128>
    errorcode = HAL_BUSY;
 800861e:	2002      	movs	r0, #2
 8008620:	e7a1      	b.n	8008566 <HAL_SPI_TransmitReceive+0x128>
  __HAL_LOCK(hspi);
 8008622:	2002      	movs	r0, #2
 8008624:	e7a5      	b.n	8008572 <HAL_SPI_TransmitReceive+0x134>

08008626 <HAL_SPI_Receive>:
{
 8008626:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800862a:	461d      	mov	r5, r3
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800862c:	6843      	ldr	r3, [r0, #4]
 800862e:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
{
 8008632:	4604      	mov	r4, r0
 8008634:	4689      	mov	r9, r1
 8008636:	4617      	mov	r7, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8008638:	d10c      	bne.n	8008654 <HAL_SPI_Receive+0x2e>
 800863a:	6883      	ldr	r3, [r0, #8]
 800863c:	b953      	cbnz	r3, 8008654 <HAL_SPI_Receive+0x2e>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800863e:	2304      	movs	r3, #4
 8008640:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8008644:	4613      	mov	r3, r2
 8008646:	9500      	str	r5, [sp, #0]
 8008648:	460a      	mov	r2, r1
 800864a:	f7ff fef8 	bl	800843e <HAL_SPI_TransmitReceive>
}
 800864e:	b003      	add	sp, #12
 8008650:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(hspi);
 8008654:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8008658:	2b01      	cmp	r3, #1
 800865a:	f000 8084 	beq.w	8008766 <HAL_SPI_Receive+0x140>
 800865e:	2301      	movs	r3, #1
 8008660:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 8008664:	f7fd fea4 	bl	80063b0 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8008668:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800866c:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800866e:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8008670:	b2d8      	uxtb	r0, r3
 8008672:	d176      	bne.n	8008762 <HAL_SPI_Receive+0x13c>
  if ((pData == NULL) || (Size == 0U))
 8008674:	f1b9 0f00 	cmp.w	r9, #0
 8008678:	d05a      	beq.n	8008730 <HAL_SPI_Receive+0x10a>
 800867a:	2f00      	cmp	r7, #0
 800867c:	d058      	beq.n	8008730 <HAL_SPI_Receive+0x10a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800867e:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 8008680:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8008684:	2304      	movs	r3, #4
 8008686:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800868a:	2600      	movs	r6, #0
    SPI_1LINE_RX(hspi);
 800868c:	6823      	ldr	r3, [r4, #0]
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800868e:	6566      	str	r6, [r4, #84]	; 0x54
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8008690:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->RxXferCount = Size;
 8008694:	87e7      	strh	r7, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 8008696:	86e6      	strh	r6, [r4, #54]	; 0x36
    SPI_1LINE_RX(hspi);
 8008698:	bf08      	it	eq
 800869a:	681a      	ldreq	r2, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800869c:	6326      	str	r6, [r4, #48]	; 0x30
    SPI_1LINE_RX(hspi);
 800869e:	bf08      	it	eq
 80086a0:	f422 4280 	biceq.w	r2, r2, #16384	; 0x4000
  hspi->TxISR       = NULL;
 80086a4:	e9c4 6610 	strd	r6, r6, [r4, #64]	; 0x40
  hspi->TxXferSize  = 0U;
 80086a8:	86a6      	strh	r6, [r4, #52]	; 0x34
  hspi->RxXferSize  = Size;
 80086aa:	87a7      	strh	r7, [r4, #60]	; 0x3c
    SPI_1LINE_RX(hspi);
 80086ac:	bf08      	it	eq
 80086ae:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80086b0:	681a      	ldr	r2, [r3, #0]
 80086b2:	0656      	lsls	r6, r2, #25
    __HAL_SPI_ENABLE(hspi);
 80086b4:	bf5e      	ittt	pl
 80086b6:	681a      	ldrpl	r2, [r3, #0]
 80086b8:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 80086bc:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 80086be:	68e3      	ldr	r3, [r4, #12]
 80086c0:	b1f3      	cbz	r3, 8008700 <HAL_SPI_Receive+0xda>
    while (hspi->RxXferCount > 0U)
 80086c2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80086c4:	b29b      	uxth	r3, r3
 80086c6:	b1fb      	cbz	r3, 8008708 <HAL_SPI_Receive+0xe2>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 80086c8:	6823      	ldr	r3, [r4, #0]
 80086ca:	689a      	ldr	r2, [r3, #8]
 80086cc:	07d2      	lsls	r2, r2, #31
 80086ce:	d539      	bpl.n	8008744 <HAL_SPI_Receive+0x11e>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 80086d0:	68da      	ldr	r2, [r3, #12]
 80086d2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80086d4:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 80086d8:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 80086da:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80086dc:	3b01      	subs	r3, #1
 80086de:	b29b      	uxth	r3, r3
 80086e0:	87e3      	strh	r3, [r4, #62]	; 0x3e
 80086e2:	e7ee      	b.n	80086c2 <HAL_SPI_Receive+0x9c>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 80086e4:	6823      	ldr	r3, [r4, #0]
 80086e6:	689a      	ldr	r2, [r3, #8]
 80086e8:	07d0      	lsls	r0, r2, #31
 80086ea:	d518      	bpl.n	800871e <HAL_SPI_Receive+0xf8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 80086ec:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80086ee:	7b1b      	ldrb	r3, [r3, #12]
 80086f0:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 80086f2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80086f4:	3301      	adds	r3, #1
 80086f6:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 80086f8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80086fa:	3b01      	subs	r3, #1
 80086fc:	b29b      	uxth	r3, r3
 80086fe:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 8008700:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008702:	b29b      	uxth	r3, r3
 8008704:	2b00      	cmp	r3, #0
 8008706:	d1ed      	bne.n	80086e4 <HAL_SPI_Receive+0xbe>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8008708:	4642      	mov	r2, r8
 800870a:	4629      	mov	r1, r5
 800870c:	4620      	mov	r0, r4
 800870e:	f7ff fd59 	bl	80081c4 <SPI_EndRxTransaction>
 8008712:	bb18      	cbnz	r0, 800875c <HAL_SPI_Receive+0x136>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8008714:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8008716:	3800      	subs	r0, #0
 8008718:	bf18      	it	ne
 800871a:	2001      	movne	r0, #1
error :
 800871c:	e008      	b.n	8008730 <HAL_SPI_Receive+0x10a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800871e:	f7fd fe47 	bl	80063b0 <HAL_GetTick>
 8008722:	eba0 0008 	sub.w	r0, r0, r8
 8008726:	42a8      	cmp	r0, r5
 8008728:	d309      	bcc.n	800873e <HAL_SPI_Receive+0x118>
 800872a:	1c69      	adds	r1, r5, #1
 800872c:	d0e8      	beq.n	8008700 <HAL_SPI_Receive+0xda>
          errorcode = HAL_TIMEOUT;
 800872e:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8008730:	2301      	movs	r3, #1
 8008732:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8008736:	2300      	movs	r3, #0
 8008738:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  return errorcode;
 800873c:	e787      	b.n	800864e <HAL_SPI_Receive+0x28>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800873e:	2d00      	cmp	r5, #0
 8008740:	d1de      	bne.n	8008700 <HAL_SPI_Receive+0xda>
 8008742:	e7f4      	b.n	800872e <HAL_SPI_Receive+0x108>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8008744:	f7fd fe34 	bl	80063b0 <HAL_GetTick>
 8008748:	eba0 0008 	sub.w	r0, r0, r8
 800874c:	42a8      	cmp	r0, r5
 800874e:	d302      	bcc.n	8008756 <HAL_SPI_Receive+0x130>
 8008750:	1c6b      	adds	r3, r5, #1
 8008752:	d0b6      	beq.n	80086c2 <HAL_SPI_Receive+0x9c>
 8008754:	e7eb      	b.n	800872e <HAL_SPI_Receive+0x108>
 8008756:	2d00      	cmp	r5, #0
 8008758:	d1b3      	bne.n	80086c2 <HAL_SPI_Receive+0x9c>
 800875a:	e7e8      	b.n	800872e <HAL_SPI_Receive+0x108>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800875c:	2320      	movs	r3, #32
 800875e:	6563      	str	r3, [r4, #84]	; 0x54
 8008760:	e7d8      	b.n	8008714 <HAL_SPI_Receive+0xee>
    errorcode = HAL_BUSY;
 8008762:	2002      	movs	r0, #2
 8008764:	e7e4      	b.n	8008730 <HAL_SPI_Receive+0x10a>
  __HAL_LOCK(hspi);
 8008766:	2002      	movs	r0, #2
 8008768:	e771      	b.n	800864e <HAL_SPI_Receive+0x28>

0800876a <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800876a:	6803      	ldr	r3, [r0, #0]
 800876c:	68da      	ldr	r2, [r3, #12]
 800876e:	f042 0201 	orr.w	r2, r2, #1
 8008772:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8008774:	689a      	ldr	r2, [r3, #8]
 8008776:	f002 0207 	and.w	r2, r2, #7
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800877a:	2a06      	cmp	r2, #6
  {
    __HAL_TIM_ENABLE(htim);
 800877c:	bf1e      	ittt	ne
 800877e:	681a      	ldrne	r2, [r3, #0]
 8008780:	f042 0201 	orrne.w	r2, r2, #1
 8008784:	601a      	strne	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
}
 8008786:	2000      	movs	r0, #0
 8008788:	4770      	bx	lr

0800878a <HAL_TIM_OC_DelayElapsedCallback>:
 800878a:	4770      	bx	lr

0800878c <HAL_TIM_IC_CaptureCallback>:
 800878c:	4770      	bx	lr

0800878e <HAL_TIM_PWM_PulseFinishedCallback>:
 800878e:	4770      	bx	lr

08008790 <HAL_TIM_TriggerCallback>:
 8008790:	4770      	bx	lr

08008792 <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8008792:	6803      	ldr	r3, [r0, #0]
 8008794:	691a      	ldr	r2, [r3, #16]
 8008796:	0791      	lsls	r1, r2, #30
{
 8008798:	b510      	push	{r4, lr}
 800879a:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800879c:	d50e      	bpl.n	80087bc <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800879e:	68da      	ldr	r2, [r3, #12]
 80087a0:	0792      	lsls	r2, r2, #30
 80087a2:	d50b      	bpl.n	80087bc <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 80087a4:	f06f 0202 	mvn.w	r2, #2
 80087a8:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 80087aa:	2201      	movs	r2, #1
 80087ac:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 80087ae:	699b      	ldr	r3, [r3, #24]
 80087b0:	079b      	lsls	r3, r3, #30
 80087b2:	d077      	beq.n	80088a4 <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 80087b4:	f7ff ffea 	bl	800878c <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80087b8:	2300      	movs	r3, #0
 80087ba:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 80087bc:	6823      	ldr	r3, [r4, #0]
 80087be:	691a      	ldr	r2, [r3, #16]
 80087c0:	0750      	lsls	r0, r2, #29
 80087c2:	d510      	bpl.n	80087e6 <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 80087c4:	68da      	ldr	r2, [r3, #12]
 80087c6:	0751      	lsls	r1, r2, #29
 80087c8:	d50d      	bpl.n	80087e6 <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 80087ca:	f06f 0204 	mvn.w	r2, #4
 80087ce:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80087d0:	2202      	movs	r2, #2
 80087d2:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80087d4:	699b      	ldr	r3, [r3, #24]
 80087d6:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80087da:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80087dc:	d068      	beq.n	80088b0 <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 80087de:	f7ff ffd5 	bl	800878c <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80087e2:	2300      	movs	r3, #0
 80087e4:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 80087e6:	6823      	ldr	r3, [r4, #0]
 80087e8:	691a      	ldr	r2, [r3, #16]
 80087ea:	0712      	lsls	r2, r2, #28
 80087ec:	d50f      	bpl.n	800880e <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 80087ee:	68da      	ldr	r2, [r3, #12]
 80087f0:	0710      	lsls	r0, r2, #28
 80087f2:	d50c      	bpl.n	800880e <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80087f4:	f06f 0208 	mvn.w	r2, #8
 80087f8:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80087fa:	2204      	movs	r2, #4
 80087fc:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80087fe:	69db      	ldr	r3, [r3, #28]
 8008800:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8008802:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8008804:	d05a      	beq.n	80088bc <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 8008806:	f7ff ffc1 	bl	800878c <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800880a:	2300      	movs	r3, #0
 800880c:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800880e:	6823      	ldr	r3, [r4, #0]
 8008810:	691a      	ldr	r2, [r3, #16]
 8008812:	06d2      	lsls	r2, r2, #27
 8008814:	d510      	bpl.n	8008838 <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 8008816:	68da      	ldr	r2, [r3, #12]
 8008818:	06d0      	lsls	r0, r2, #27
 800881a:	d50d      	bpl.n	8008838 <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800881c:	f06f 0210 	mvn.w	r2, #16
 8008820:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8008822:	2208      	movs	r2, #8
 8008824:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8008826:	69db      	ldr	r3, [r3, #28]
 8008828:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800882c:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800882e:	d04b      	beq.n	80088c8 <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 8008830:	f7ff ffac 	bl	800878c <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8008834:	2300      	movs	r3, #0
 8008836:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8008838:	6823      	ldr	r3, [r4, #0]
 800883a:	691a      	ldr	r2, [r3, #16]
 800883c:	07d1      	lsls	r1, r2, #31
 800883e:	d508      	bpl.n	8008852 <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8008840:	68da      	ldr	r2, [r3, #12]
 8008842:	07d2      	lsls	r2, r2, #31
 8008844:	d505      	bpl.n	8008852 <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8008846:	f06f 0201 	mvn.w	r2, #1
 800884a:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 800884c:	4620      	mov	r0, r4
 800884e:	f7f9 f863 	bl	8001918 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8008852:	6823      	ldr	r3, [r4, #0]
 8008854:	691a      	ldr	r2, [r3, #16]
 8008856:	0610      	lsls	r0, r2, #24
 8008858:	d508      	bpl.n	800886c <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800885a:	68da      	ldr	r2, [r3, #12]
 800885c:	0611      	lsls	r1, r2, #24
 800885e:	d505      	bpl.n	800886c <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8008860:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8008864:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 8008866:	4620      	mov	r0, r4
 8008868:	f000 f8f5 	bl	8008a56 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800886c:	6823      	ldr	r3, [r4, #0]
 800886e:	691a      	ldr	r2, [r3, #16]
 8008870:	0652      	lsls	r2, r2, #25
 8008872:	d508      	bpl.n	8008886 <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8008874:	68da      	ldr	r2, [r3, #12]
 8008876:	0650      	lsls	r0, r2, #25
 8008878:	d505      	bpl.n	8008886 <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800887a:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800887e:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8008880:	4620      	mov	r0, r4
 8008882:	f7ff ff85 	bl	8008790 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8008886:	6823      	ldr	r3, [r4, #0]
 8008888:	691a      	ldr	r2, [r3, #16]
 800888a:	0691      	lsls	r1, r2, #26
 800888c:	d522      	bpl.n	80088d4 <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800888e:	68da      	ldr	r2, [r3, #12]
 8008890:	0692      	lsls	r2, r2, #26
 8008892:	d51f      	bpl.n	80088d4 <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8008894:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 8008898:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800889a:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 800889c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 80088a0:	f000 b8d8 	b.w	8008a54 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 80088a4:	f7ff ff71 	bl	800878a <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 80088a8:	4620      	mov	r0, r4
 80088aa:	f7ff ff70 	bl	800878e <HAL_TIM_PWM_PulseFinishedCallback>
 80088ae:	e783      	b.n	80087b8 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80088b0:	f7ff ff6b 	bl	800878a <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80088b4:	4620      	mov	r0, r4
 80088b6:	f7ff ff6a 	bl	800878e <HAL_TIM_PWM_PulseFinishedCallback>
 80088ba:	e792      	b.n	80087e2 <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80088bc:	f7ff ff65 	bl	800878a <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80088c0:	4620      	mov	r0, r4
 80088c2:	f7ff ff64 	bl	800878e <HAL_TIM_PWM_PulseFinishedCallback>
 80088c6:	e7a0      	b.n	800880a <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80088c8:	f7ff ff5f 	bl	800878a <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80088cc:	4620      	mov	r0, r4
 80088ce:	f7ff ff5e 	bl	800878e <HAL_TIM_PWM_PulseFinishedCallback>
 80088d2:	e7af      	b.n	8008834 <HAL_TIM_IRQHandler+0xa2>
}
 80088d4:	bd10      	pop	{r4, pc}
	...

080088d8 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80088d8:	4a30      	ldr	r2, [pc, #192]	; (800899c <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 80088da:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80088dc:	4290      	cmp	r0, r2
 80088de:	d012      	beq.n	8008906 <TIM_Base_SetConfig+0x2e>
 80088e0:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80088e4:	d00f      	beq.n	8008906 <TIM_Base_SetConfig+0x2e>
 80088e6:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80088ea:	4290      	cmp	r0, r2
 80088ec:	d00b      	beq.n	8008906 <TIM_Base_SetConfig+0x2e>
 80088ee:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80088f2:	4290      	cmp	r0, r2
 80088f4:	d007      	beq.n	8008906 <TIM_Base_SetConfig+0x2e>
 80088f6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80088fa:	4290      	cmp	r0, r2
 80088fc:	d003      	beq.n	8008906 <TIM_Base_SetConfig+0x2e>
 80088fe:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8008902:	4290      	cmp	r0, r2
 8008904:	d119      	bne.n	800893a <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8008906:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8008908:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800890c:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800890e:	4a23      	ldr	r2, [pc, #140]	; (800899c <TIM_Base_SetConfig+0xc4>)
 8008910:	4290      	cmp	r0, r2
 8008912:	d029      	beq.n	8008968 <TIM_Base_SetConfig+0x90>
 8008914:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8008918:	d026      	beq.n	8008968 <TIM_Base_SetConfig+0x90>
 800891a:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800891e:	4290      	cmp	r0, r2
 8008920:	d022      	beq.n	8008968 <TIM_Base_SetConfig+0x90>
 8008922:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008926:	4290      	cmp	r0, r2
 8008928:	d01e      	beq.n	8008968 <TIM_Base_SetConfig+0x90>
 800892a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800892e:	4290      	cmp	r0, r2
 8008930:	d01a      	beq.n	8008968 <TIM_Base_SetConfig+0x90>
 8008932:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8008936:	4290      	cmp	r0, r2
 8008938:	d016      	beq.n	8008968 <TIM_Base_SetConfig+0x90>
 800893a:	4a19      	ldr	r2, [pc, #100]	; (80089a0 <TIM_Base_SetConfig+0xc8>)
 800893c:	4290      	cmp	r0, r2
 800893e:	d013      	beq.n	8008968 <TIM_Base_SetConfig+0x90>
 8008940:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008944:	4290      	cmp	r0, r2
 8008946:	d00f      	beq.n	8008968 <TIM_Base_SetConfig+0x90>
 8008948:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800894c:	4290      	cmp	r0, r2
 800894e:	d00b      	beq.n	8008968 <TIM_Base_SetConfig+0x90>
 8008950:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 8008954:	4290      	cmp	r0, r2
 8008956:	d007      	beq.n	8008968 <TIM_Base_SetConfig+0x90>
 8008958:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800895c:	4290      	cmp	r0, r2
 800895e:	d003      	beq.n	8008968 <TIM_Base_SetConfig+0x90>
 8008960:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008964:	4290      	cmp	r0, r2
 8008966:	d103      	bne.n	8008970 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8008968:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 800896a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800896e:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8008970:	694a      	ldr	r2, [r1, #20]
 8008972:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8008976:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8008978:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800897a:	688b      	ldr	r3, [r1, #8]
 800897c:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800897e:	680b      	ldr	r3, [r1, #0]
 8008980:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8008982:	4b06      	ldr	r3, [pc, #24]	; (800899c <TIM_Base_SetConfig+0xc4>)
 8008984:	4298      	cmp	r0, r3
 8008986:	d003      	beq.n	8008990 <TIM_Base_SetConfig+0xb8>
 8008988:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800898c:	4298      	cmp	r0, r3
 800898e:	d101      	bne.n	8008994 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8008990:	690b      	ldr	r3, [r1, #16]
 8008992:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8008994:	2301      	movs	r3, #1
 8008996:	6143      	str	r3, [r0, #20]
}
 8008998:	4770      	bx	lr
 800899a:	bf00      	nop
 800899c:	40010000 	.word	0x40010000
 80089a0:	40014000 	.word	0x40014000

080089a4 <HAL_TIM_Base_Init>:
{
 80089a4:	b510      	push	{r4, lr}
  if (htim == NULL)
 80089a6:	4604      	mov	r4, r0
 80089a8:	b1a0      	cbz	r0, 80089d4 <HAL_TIM_Base_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 80089aa:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80089ae:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80089b2:	b91b      	cbnz	r3, 80089bc <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 80089b4:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 80089b8:	f7f9 f9da 	bl	8001d70 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 80089bc:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80089be:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 80089c0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80089c4:	1d21      	adds	r1, r4, #4
 80089c6:	f7ff ff87 	bl	80088d8 <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 80089ca:	2301      	movs	r3, #1
 80089cc:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 80089d0:	2000      	movs	r0, #0
}
 80089d2:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80089d4:	2001      	movs	r0, #1
 80089d6:	e7fc      	b.n	80089d2 <HAL_TIM_Base_Init+0x2e>

080089d8 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        TIM_MasterConfigTypeDef *sMasterConfig)
{
 80089d8:	b530      	push	{r4, r5, lr}
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 80089da:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 80089de:	2b01      	cmp	r3, #1
 80089e0:	f04f 0302 	mov.w	r3, #2
 80089e4:	d032      	beq.n	8008a4c <HAL_TIMEx_MasterConfigSynchronization+0x74>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 80089e6:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 80089ea:	6803      	ldr	r3, [r0, #0]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 80089ec:	680d      	ldr	r5, [r1, #0]
  tmpcr2 = htim->Instance->CR2;
 80089ee:	685c      	ldr	r4, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;
 80089f0:	689a      	ldr	r2, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 80089f2:	f024 0470 	bic.w	r4, r4, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 80089f6:	432c      	orrs	r4, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 80089f8:	605c      	str	r4, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80089fa:	4c15      	ldr	r4, [pc, #84]	; (8008a50 <HAL_TIMEx_MasterConfigSynchronization+0x78>)
 80089fc:	42a3      	cmp	r3, r4
 80089fe:	d01a      	beq.n	8008a36 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008a00:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008a04:	d017      	beq.n	8008a36 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008a06:	f5a4 447c 	sub.w	r4, r4, #64512	; 0xfc00
 8008a0a:	42a3      	cmp	r3, r4
 8008a0c:	d013      	beq.n	8008a36 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008a0e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8008a12:	42a3      	cmp	r3, r4
 8008a14:	d00f      	beq.n	8008a36 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008a16:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8008a1a:	42a3      	cmp	r3, r4
 8008a1c:	d00b      	beq.n	8008a36 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008a1e:	f504 4478 	add.w	r4, r4, #63488	; 0xf800
 8008a22:	42a3      	cmp	r3, r4
 8008a24:	d007      	beq.n	8008a36 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008a26:	f504 5470 	add.w	r4, r4, #15360	; 0x3c00
 8008a2a:	42a3      	cmp	r3, r4
 8008a2c:	d003      	beq.n	8008a36 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008a2e:	f5a4 3494 	sub.w	r4, r4, #75776	; 0x12800
 8008a32:	42a3      	cmp	r3, r4
 8008a34:	d104      	bne.n	8008a40 <HAL_TIMEx_MasterConfigSynchronization+0x68>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8008a36:	6849      	ldr	r1, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 8008a38:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8008a3c:	430a      	orrs	r2, r1

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8008a3e:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8008a40:	2301      	movs	r3, #1
 8008a42:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8008a46:	2300      	movs	r3, #0
 8008a48:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  __HAL_LOCK(htim);
 8008a4c:	4618      	mov	r0, r3

  return HAL_OK;
}
 8008a4e:	bd30      	pop	{r4, r5, pc}
 8008a50:	40010000 	.word	0x40010000

08008a54 <HAL_TIMEx_CommutCallback>:
 8008a54:	4770      	bx	lr

08008a56 <HAL_TIMEx_BreakCallback>:
 8008a56:	4770      	bx	lr

08008a58 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8008a58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
                                               Init->InternalBankNumber |\
                                               Init->CASLatency         |\
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
 8008a5c:	6a4a      	ldr	r2, [r1, #36]	; 0x24
                                               Init->ReadBurst          |\
 8008a5e:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
                                               Init->RowBitsNumber      |\
 8008a62:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
                                               Init->InternalBankNumber |\
 8008a66:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
                                               Init->WriteProtection    |\
 8008a6a:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8008a6e:	6809      	ldr	r1, [r1, #0]
 8008a70:	2901      	cmp	r1, #1
 8008a72:	ea43 0304 	orr.w	r3, r3, r4
 8008a76:	4912      	ldr	r1, [pc, #72]	; (8008ac0 <FMC_SDRAM_Init+0x68>)
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 8008a78:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8008a7a:	d00f      	beq.n	8008a9c <FMC_SDRAM_Init+0x44>
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8008a7c:	431a      	orrs	r2, r3
 8008a7e:	432a      	orrs	r2, r5
 8008a80:	ea42 0308 	orr.w	r3, r2, r8
 8008a84:	ea43 030e 	orr.w	r3, r3, lr
 8008a88:	ea43 030c 	orr.w	r3, r3, ip
 8008a8c:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8008a8e:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8008a90:	4333      	orrs	r3, r6
 8008a92:	430b      	orrs	r3, r1
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8008a94:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 8008a96:	2000      	movs	r0, #0
 8008a98:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8008a9c:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 8008a9e:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8008aa0:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8008aa2:	ea45 0208 	orr.w	r2, r5, r8
 8008aa6:	ea42 020e 	orr.w	r2, r2, lr
 8008aaa:	ea42 020c 	orr.w	r2, r2, ip
 8008aae:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 8008ab0:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8008ab4:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8008ab6:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8008ab8:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8008aba:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 8008abc:	6042      	str	r2, [r0, #4]
 8008abe:	e7ea      	b.n	8008a96 <FMC_SDRAM_Init+0x3e>
 8008ac0:	ffff8000 	.word	0xffff8000

08008ac4 <FMC_SDRAM_Timing_Init>:
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 8008ac4:	68cb      	ldr	r3, [r1, #12]
{
 8008ac6:	b5f0      	push	{r4, r5, r6, r7, lr}
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8008ac8:	680c      	ldr	r4, [r1, #0]
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 8008aca:	688e      	ldr	r6, [r1, #8]
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 8008acc:	690d      	ldr	r5, [r1, #16]
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 8008ace:	1e5f      	subs	r7, r3, #1
                       (((Timing->RPDelay)-1U) << 20U)             |\
 8008ad0:	694b      	ldr	r3, [r1, #20]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8008ad2:	f104 3cff 	add.w	ip, r4, #4294967295
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 8008ad6:	684c      	ldr	r4, [r1, #4]
                       (((Timing->RCDDelay)-1U) << 24U));
 8008ad8:	6989      	ldr	r1, [r1, #24]
                       (((Timing->RPDelay)-1U) << 20U)             |\
 8008ada:	3b01      	subs	r3, #1
 8008adc:	051b      	lsls	r3, r3, #20
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 8008ade:	3c01      	subs	r4, #1
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 8008ae0:	3e01      	subs	r6, #1
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 8008ae2:	3d01      	subs	r5, #1
                       (((Timing->RCDDelay)-1U) << 24U));
 8008ae4:	3901      	subs	r1, #1
  if (Bank != FMC_SDRAM_BANK2) 
 8008ae6:	2a01      	cmp	r2, #1
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 8008ae8:	ea4f 1404 	mov.w	r4, r4, lsl #4
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 8008aec:	ea4f 2606 	mov.w	r6, r6, lsl #8
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 8008af0:	ea4f 4505 	mov.w	r5, r5, lsl #16
                       (((Timing->RCDDelay)-1U) << 24U));
 8008af4:	ea4f 6101 	mov.w	r1, r1, lsl #24
 8008af8:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
  if (Bank != FMC_SDRAM_BANK2) 
 8008afc:	d00c      	beq.n	8008b18 <FMC_SDRAM_Timing_Init+0x54>
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8008afe:	ea43 030c 	orr.w	r3, r3, ip
 8008b02:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8008b04:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8008b06:	4333      	orrs	r3, r6
 8008b08:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8008b0a:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8008b0e:	430b      	orrs	r3, r1
 8008b10:	4313      	orrs	r3, r2
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8008b12:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 8008b14:	2000      	movs	r0, #0
 8008b16:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8008b18:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 8008b1a:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 8008b1e:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8008b22:	4334      	orrs	r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 8008b24:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8008b26:	ea44 020c 	orr.w	r2, r4, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 8008b2a:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8008b2c:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8008b2e:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8008b30:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8008b34:	430a      	orrs	r2, r1
 8008b36:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 8008b38:	60c2      	str	r2, [r0, #12]
 8008b3a:	e7eb      	b.n	8008b14 <FMC_SDRAM_Timing_Init+0x50>

08008b3c <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8008b3c:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 8008b3e:	2300      	movs	r3, #0
 8008b40:	9301      	str	r3, [sp, #4]
{
 8008b42:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8008b44:	e9d1 3200 	ldrd	r3, r2, [r1]
 8008b48:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 8008b4a:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8008b4c:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 8008b50:	688a      	ldr	r2, [r1, #8]
 8008b52:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8008b54:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8008b58:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 8008b5a:	9b01      	ldr	r3, [sp, #4]
 8008b5c:	6103      	str	r3, [r0, #16]
{
 8008b5e:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 8008b60:	f7fd fc26 	bl	80063b0 <HAL_GetTick>
 8008b64:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8008b66:	69a3      	ldr	r3, [r4, #24]
 8008b68:	f013 0320 	ands.w	r3, r3, #32
 8008b6c:	d101      	bne.n	8008b72 <FMC_SDRAM_SendCommand+0x36>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8008b6e:	4618      	mov	r0, r3
 8008b70:	e003      	b.n	8008b7a <FMC_SDRAM_SendCommand+0x3e>
    if(Timeout != HAL_MAX_DELAY)
 8008b72:	1c6b      	adds	r3, r5, #1
 8008b74:	d0f7      	beq.n	8008b66 <FMC_SDRAM_SendCommand+0x2a>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8008b76:	b915      	cbnz	r5, 8008b7e <FMC_SDRAM_SendCommand+0x42>
        return HAL_TIMEOUT;
 8008b78:	2003      	movs	r0, #3
}
 8008b7a:	b002      	add	sp, #8
 8008b7c:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8008b7e:	f7fd fc17 	bl	80063b0 <HAL_GetTick>
 8008b82:	1b80      	subs	r0, r0, r6
 8008b84:	42a8      	cmp	r0, r5
 8008b86:	d9ee      	bls.n	8008b66 <FMC_SDRAM_SendCommand+0x2a>
 8008b88:	e7f6      	b.n	8008b78 <FMC_SDRAM_SendCommand+0x3c>

08008b8a <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 8008b8a:	6943      	ldr	r3, [r0, #20]
 8008b8c:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 8008b90:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 8008b92:	2000      	movs	r0, #0
 8008b94:	4770      	bx	lr
	...

08008b98 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008b98:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8008b9c:	b113      	cbz	r3, 8008ba4 <osKernelInitialize+0xc>
    stat = osErrorISR;
 8008b9e:	f06f 0005 	mvn.w	r0, #5
 8008ba2:	4770      	bx	lr
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008ba4:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 8008ba8:	4b07      	ldr	r3, [pc, #28]	; (8008bc8 <osKernelInitialize+0x30>)
  if (IS_IRQ()) {
 8008baa:	b912      	cbnz	r2, 8008bb2 <osKernelInitialize+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008bac:	f3ef 8211 	mrs	r2, BASEPRI
 8008bb0:	b112      	cbz	r2, 8008bb8 <osKernelInitialize+0x20>
 8008bb2:	681a      	ldr	r2, [r3, #0]
 8008bb4:	2a02      	cmp	r2, #2
 8008bb6:	d0f2      	beq.n	8008b9e <osKernelInitialize+0x6>
  }
  else {
    if (KernelState == osKernelInactive) {
 8008bb8:	6818      	ldr	r0, [r3, #0]
 8008bba:	b910      	cbnz	r0, 8008bc2 <osKernelInitialize+0x2a>
      #if defined(USE_FREERTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8008bbc:	2201      	movs	r2, #1
 8008bbe:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8008bc0:	4770      	bx	lr
    } else {
      stat = osError;
 8008bc2:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8008bc6:	4770      	bx	lr
 8008bc8:	200068f8 	.word	0x200068f8

08008bcc <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8008bcc:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008bce:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8008bd2:	b113      	cbz	r3, 8008bda <osKernelStart+0xe>
    stat = osErrorISR;
 8008bd4:	f06f 0005 	mvn.w	r0, #5
      stat = osError;
    }
  }

  return (stat);
}
 8008bd8:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008bda:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 8008bde:	4b0a      	ldr	r3, [pc, #40]	; (8008c08 <osKernelStart+0x3c>)
  if (IS_IRQ()) {
 8008be0:	b912      	cbnz	r2, 8008be8 <osKernelStart+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008be2:	f3ef 8211 	mrs	r2, BASEPRI
 8008be6:	b112      	cbz	r2, 8008bee <osKernelStart+0x22>
 8008be8:	681a      	ldr	r2, [r3, #0]
 8008bea:	2a02      	cmp	r2, #2
 8008bec:	d0f2      	beq.n	8008bd4 <osKernelStart+0x8>
    if (KernelState == osKernelReady) {
 8008bee:	681a      	ldr	r2, [r3, #0]
 8008bf0:	2a01      	cmp	r2, #1
 8008bf2:	d105      	bne.n	8008c00 <osKernelStart+0x34>
      KernelState = osKernelRunning;
 8008bf4:	2202      	movs	r2, #2
 8008bf6:	601a      	str	r2, [r3, #0]
      vTaskStartScheduler();
 8008bf8:	f001 fbd4 	bl	800a3a4 <vTaskStartScheduler>
      stat = osOK;
 8008bfc:	2000      	movs	r0, #0
 8008bfe:	e7eb      	b.n	8008bd8 <osKernelStart+0xc>
      stat = osError;
 8008c00:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8008c04:	e7e8      	b.n	8008bd8 <osKernelStart+0xc>
 8008c06:	bf00      	nop
 8008c08:	200068f8 	.word	0x200068f8

08008c0c <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8008c0c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008c0e:	b087      	sub	sp, #28
 8008c10:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8008c12:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8008c14:	460b      	mov	r3, r1
  hTask = NULL;
 8008c16:	9205      	str	r2, [sp, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008c18:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8008c1c:	bb22      	cbnz	r2, 8008c68 <osThreadNew+0x5c>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008c1e:	f3ef 8210 	mrs	r2, PRIMASK
 8008c22:	b912      	cbnz	r2, 8008c2a <osThreadNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008c24:	f3ef 8211 	mrs	r2, BASEPRI
 8008c28:	b11a      	cbz	r2, 8008c32 <osThreadNew+0x26>
 8008c2a:	4a22      	ldr	r2, [pc, #136]	; (8008cb4 <osThreadNew+0xa8>)
 8008c2c:	6812      	ldr	r2, [r2, #0]
 8008c2e:	2a02      	cmp	r2, #2
 8008c30:	d01a      	beq.n	8008c68 <osThreadNew+0x5c>
 8008c32:	b1c8      	cbz	r0, 8008c68 <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8008c34:	2c00      	cmp	r4, #0
 8008c36:	d02f      	beq.n	8008c98 <osThreadNew+0x8c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8008c38:	69a5      	ldr	r5, [r4, #24]
 8008c3a:	2d00      	cmp	r5, #0
 8008c3c:	bf08      	it	eq
 8008c3e:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8008c40:	1e6a      	subs	r2, r5, #1
 8008c42:	2a37      	cmp	r2, #55	; 0x37
 8008c44:	46ac      	mov	ip, r5
 8008c46:	d82b      	bhi.n	8008ca0 <osThreadNew+0x94>
 8008c48:	6862      	ldr	r2, [r4, #4]
 8008c4a:	07d2      	lsls	r2, r2, #31
 8008c4c:	d428      	bmi.n	8008ca0 <osThreadNew+0x94>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8008c4e:	6966      	ldr	r6, [r4, #20]
 8008c50:	b16e      	cbz	r6, 8008c6e <osThreadNew+0x62>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8008c52:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008c54:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 8008c58:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008c5a:	b157      	cbz	r7, 8008c72 <osThreadNew+0x66>
 8008c5c:	f1be 0fbf 	cmp.w	lr, #191	; 0xbf
 8008c60:	d902      	bls.n	8008c68 <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8008c62:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008c64:	b104      	cbz	r4, 8008c68 <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8008c66:	b9ee      	cbnz	r6, 8008ca4 <osThreadNew+0x98>
        }
      }
    }
  }

  return ((osThreadId_t)hTask);
 8008c68:	9805      	ldr	r0, [sp, #20]
}
 8008c6a:	b007      	add	sp, #28
 8008c6c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8008c6e:	2280      	movs	r2, #128	; 0x80
 8008c70:	e7f0      	b.n	8008c54 <osThreadNew+0x48>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8008c72:	f1be 0f00 	cmp.w	lr, #0
 8008c76:	d1f7      	bne.n	8008c68 <osThreadNew+0x5c>
      if (mem == 0) {
 8008c78:	6924      	ldr	r4, [r4, #16]
 8008c7a:	2c00      	cmp	r4, #0
 8008c7c:	d1f4      	bne.n	8008c68 <osThreadNew+0x5c>
 8008c7e:	460c      	mov	r4, r1
        if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8008c80:	a905      	add	r1, sp, #20
 8008c82:	e9cd c100 	strd	ip, r1, [sp]
 8008c86:	b292      	uxth	r2, r2
 8008c88:	4621      	mov	r1, r4
 8008c8a:	f001 fb5d 	bl	800a348 <xTaskCreate>
 8008c8e:	2801      	cmp	r0, #1
          hTask = NULL;
 8008c90:	bf1c      	itt	ne
 8008c92:	2300      	movne	r3, #0
 8008c94:	9305      	strne	r3, [sp, #20]
 8008c96:	e7e7      	b.n	8008c68 <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;
 8008c98:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 8008c9c:	2280      	movs	r2, #128	; 0x80
 8008c9e:	e7ef      	b.n	8008c80 <osThreadNew+0x74>
        return (NULL);
 8008ca0:	2000      	movs	r0, #0
 8008ca2:	e7e2      	b.n	8008c6a <osThreadNew+0x5e>
      hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8008ca4:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8008ca8:	9500      	str	r5, [sp, #0]
 8008caa:	f001 fb15 	bl	800a2d8 <xTaskCreateStatic>
 8008cae:	9005      	str	r0, [sp, #20]
 8008cb0:	e7da      	b.n	8008c68 <osThreadNew+0x5c>
 8008cb2:	bf00      	nop
 8008cb4:	200068f8 	.word	0x200068f8

08008cb8 <osDelay>:

  /* Return flags before clearing */
  return (rflags);
}

osStatus_t osDelay (uint32_t ticks) {
 8008cb8:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008cba:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8008cbe:	b113      	cbz	r3, 8008cc6 <osDelay+0xe>
    stat = osErrorISR;
 8008cc0:	f06f 0005 	mvn.w	r0, #5
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 8008cc4:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008cc6:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8008cca:	b913      	cbnz	r3, 8008cd2 <osDelay+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008ccc:	f3ef 8311 	mrs	r3, BASEPRI
 8008cd0:	b11b      	cbz	r3, 8008cda <osDelay+0x22>
 8008cd2:	4b05      	ldr	r3, [pc, #20]	; (8008ce8 <osDelay+0x30>)
 8008cd4:	681b      	ldr	r3, [r3, #0]
 8008cd6:	2b02      	cmp	r3, #2
 8008cd8:	d0f2      	beq.n	8008cc0 <osDelay+0x8>
    if (ticks != 0U) {
 8008cda:	2800      	cmp	r0, #0
 8008cdc:	d0f2      	beq.n	8008cc4 <osDelay+0xc>
      vTaskDelay(ticks);
 8008cde:	f001 fcc9 	bl	800a674 <vTaskDelay>
    stat = osOK;
 8008ce2:	2000      	movs	r0, #0
 8008ce4:	e7ee      	b.n	8008cc4 <osDelay+0xc>
 8008ce6:	bf00      	nop
 8008ce8:	200068f8 	.word	0x200068f8

08008cec <osSemaphoreNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8008cec:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008cee:	460e      	mov	r6, r1
 8008cf0:	4615      	mov	r5, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008cf2:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8008cf6:	b11b      	cbz	r3, 8008d00 <osSemaphoreNew+0x14>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 8008cf8:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8008cfa:	4620      	mov	r0, r4
 8008cfc:	b002      	add	sp, #8
 8008cfe:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008d00:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8008d04:	b913      	cbnz	r3, 8008d0c <osSemaphoreNew+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008d06:	f3ef 8311 	mrs	r3, BASEPRI
 8008d0a:	b11b      	cbz	r3, 8008d14 <osSemaphoreNew+0x28>
 8008d0c:	4b21      	ldr	r3, [pc, #132]	; (8008d94 <osSemaphoreNew+0xa8>)
 8008d0e:	681b      	ldr	r3, [r3, #0]
 8008d10:	2b02      	cmp	r3, #2
 8008d12:	d0f1      	beq.n	8008cf8 <osSemaphoreNew+0xc>
 8008d14:	2800      	cmp	r0, #0
 8008d16:	d0ef      	beq.n	8008cf8 <osSemaphoreNew+0xc>
 8008d18:	42b0      	cmp	r0, r6
 8008d1a:	d3ed      	bcc.n	8008cf8 <osSemaphoreNew+0xc>
    if (attr != NULL) {
 8008d1c:	b1ed      	cbz	r5, 8008d5a <osSemaphoreNew+0x6e>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8008d1e:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
 8008d22:	b1c3      	cbz	r3, 8008d56 <osSemaphoreNew+0x6a>
 8008d24:	2a4f      	cmp	r2, #79	; 0x4f
 8008d26:	d9e7      	bls.n	8008cf8 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8008d28:	2801      	cmp	r0, #1
 8008d2a:	d129      	bne.n	8008d80 <osSemaphoreNew+0x94>
          hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8008d2c:	2203      	movs	r2, #3
 8008d2e:	9200      	str	r2, [sp, #0]
 8008d30:	2200      	movs	r2, #0
 8008d32:	4611      	mov	r1, r2
 8008d34:	f000 fd27 	bl	8009786 <xQueueGenericCreateStatic>
          hSemaphore = xSemaphoreCreateBinary();
 8008d38:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8008d3a:	2800      	cmp	r0, #0
 8008d3c:	d0dc      	beq.n	8008cf8 <osSemaphoreNew+0xc>
 8008d3e:	b1ce      	cbz	r6, 8008d74 <osSemaphoreNew+0x88>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8008d40:	2300      	movs	r3, #0
 8008d42:	461a      	mov	r2, r3
 8008d44:	4619      	mov	r1, r3
 8008d46:	f000 fdd3 	bl	80098f0 <xQueueGenericSend>
 8008d4a:	2801      	cmp	r0, #1
 8008d4c:	d012      	beq.n	8008d74 <osSemaphoreNew+0x88>
            vSemaphoreDelete (hSemaphore);
 8008d4e:	4620      	mov	r0, r4
 8008d50:	f001 f90e 	bl	8009f70 <vQueueDelete>
 8008d54:	e7d0      	b.n	8008cf8 <osSemaphoreNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8008d56:	2a00      	cmp	r2, #0
 8008d58:	d1ce      	bne.n	8008cf8 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8008d5a:	2801      	cmp	r0, #1
 8008d5c:	d104      	bne.n	8008d68 <osSemaphoreNew+0x7c>
          hSemaphore = xSemaphoreCreateBinary();
 8008d5e:	2203      	movs	r2, #3
 8008d60:	2100      	movs	r1, #0
 8008d62:	f000 fd5e 	bl	8009822 <xQueueGenericCreate>
 8008d66:	e7e7      	b.n	8008d38 <osSemaphoreNew+0x4c>
          hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8008d68:	4631      	mov	r1, r6
 8008d6a:	f000 fda3 	bl	80098b4 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8008d6e:	4604      	mov	r4, r0
 8008d70:	2800      	cmp	r0, #0
 8008d72:	d0c1      	beq.n	8008cf8 <osSemaphoreNew+0xc>
        if (attr != NULL) {
 8008d74:	b95d      	cbnz	r5, 8008d8e <osSemaphoreNew+0xa2>
        vQueueAddToRegistry (hSemaphore, name);
 8008d76:	4629      	mov	r1, r5
 8008d78:	4620      	mov	r0, r4
 8008d7a:	f001 f8d3 	bl	8009f24 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8008d7e:	e7bc      	b.n	8008cfa <osSemaphoreNew+0xe>
          hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8008d80:	461a      	mov	r2, r3
 8008d82:	4631      	mov	r1, r6
 8008d84:	f000 fd74 	bl	8009870 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8008d88:	4604      	mov	r4, r0
 8008d8a:	2800      	cmp	r0, #0
 8008d8c:	d0b4      	beq.n	8008cf8 <osSemaphoreNew+0xc>
          name = attr->name;
 8008d8e:	682d      	ldr	r5, [r5, #0]
 8008d90:	e7f1      	b.n	8008d76 <osSemaphoreNew+0x8a>
 8008d92:	bf00      	nop
 8008d94:	200068f8 	.word	0x200068f8

08008d98 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8008d98:	b513      	push	{r0, r1, r4, lr}
 8008d9a:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8008d9c:	b918      	cbnz	r0, 8008da6 <osSemaphoreAcquire+0xe>
    stat = osErrorParameter;
 8008d9e:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8008da2:	b002      	add	sp, #8
 8008da4:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008da6:	f3ef 8305 	mrs	r3, IPSR
  else if (IS_IRQ()) {
 8008daa:	b163      	cbz	r3, 8008dc6 <osSemaphoreAcquire+0x2e>
    if (timeout != 0U) {
 8008dac:	2c00      	cmp	r4, #0
 8008dae:	d1f6      	bne.n	8008d9e <osSemaphoreAcquire+0x6>
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8008db0:	aa01      	add	r2, sp, #4
 8008db2:	4621      	mov	r1, r4
      yield = pdFALSE;
 8008db4:	9401      	str	r4, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8008db6:	f001 f865 	bl	8009e84 <xQueueReceiveFromISR>
 8008dba:	2801      	cmp	r0, #1
 8008dbc:	d113      	bne.n	8008de6 <osSemaphoreAcquire+0x4e>
        portYIELD_FROM_ISR (yield);
 8008dbe:	9b01      	ldr	r3, [sp, #4]
 8008dc0:	b9a3      	cbnz	r3, 8008dec <osSemaphoreAcquire+0x54>
  stat = osOK;
 8008dc2:	2000      	movs	r0, #0
 8008dc4:	e7ed      	b.n	8008da2 <osSemaphoreAcquire+0xa>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008dc6:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 8008dca:	b913      	cbnz	r3, 8008dd2 <osSemaphoreAcquire+0x3a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008dcc:	f3ef 8311 	mrs	r3, BASEPRI
 8008dd0:	b11b      	cbz	r3, 8008dda <osSemaphoreAcquire+0x42>
 8008dd2:	4b0d      	ldr	r3, [pc, #52]	; (8008e08 <osSemaphoreAcquire+0x70>)
 8008dd4:	681b      	ldr	r3, [r3, #0]
 8008dd6:	2b02      	cmp	r3, #2
 8008dd8:	d0e8      	beq.n	8008dac <osSemaphoreAcquire+0x14>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8008dda:	4621      	mov	r1, r4
 8008ddc:	f000 ff8f 	bl	8009cfe <xQueueSemaphoreTake>
 8008de0:	2801      	cmp	r0, #1
 8008de2:	d0ee      	beq.n	8008dc2 <osSemaphoreAcquire+0x2a>
      if (timeout != 0U) {
 8008de4:	b96c      	cbnz	r4, 8008e02 <osSemaphoreAcquire+0x6a>
        stat = osErrorResource;
 8008de6:	f06f 0002 	mvn.w	r0, #2
 8008dea:	e7da      	b.n	8008da2 <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 8008dec:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008df0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008df4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008df8:	f3bf 8f4f 	dsb	sy
 8008dfc:	f3bf 8f6f 	isb	sy
 8008e00:	e7df      	b.n	8008dc2 <osSemaphoreAcquire+0x2a>
        stat = osErrorTimeout;
 8008e02:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008e06:	e7cc      	b.n	8008da2 <osSemaphoreAcquire+0xa>
 8008e08:	200068f8 	.word	0x200068f8

08008e0c <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8008e0c:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8008e0e:	b370      	cbz	r0, 8008e6e <osSemaphoreRelease+0x62>
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008e10:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8008e14:	b14b      	cbz	r3, 8008e2a <osSemaphoreRelease+0x1e>
    yield = pdFALSE;
 8008e16:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008e18:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8008e1a:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008e1c:	f000 fe7c 	bl	8009b18 <xQueueGiveFromISR>
 8008e20:	2801      	cmp	r0, #1
 8008e22:	d014      	beq.n	8008e4e <osSemaphoreRelease+0x42>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 8008e24:	f06f 0002 	mvn.w	r0, #2
 8008e28:	e014      	b.n	8008e54 <osSemaphoreRelease+0x48>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008e2a:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 8008e2e:	b913      	cbnz	r3, 8008e36 <osSemaphoreRelease+0x2a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008e30:	f3ef 8311 	mrs	r3, BASEPRI
 8008e34:	b11b      	cbz	r3, 8008e3e <osSemaphoreRelease+0x32>
 8008e36:	4b0f      	ldr	r3, [pc, #60]	; (8008e74 <osSemaphoreRelease+0x68>)
 8008e38:	681b      	ldr	r3, [r3, #0]
 8008e3a:	2b02      	cmp	r3, #2
 8008e3c:	d0eb      	beq.n	8008e16 <osSemaphoreRelease+0xa>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8008e3e:	2300      	movs	r3, #0
 8008e40:	461a      	mov	r2, r3
 8008e42:	4619      	mov	r1, r3
 8008e44:	f000 fd54 	bl	80098f0 <xQueueGenericSend>
 8008e48:	2801      	cmp	r0, #1
 8008e4a:	d002      	beq.n	8008e52 <osSemaphoreRelease+0x46>
 8008e4c:	e7ea      	b.n	8008e24 <osSemaphoreRelease+0x18>
      portYIELD_FROM_ISR (yield);
 8008e4e:	9b01      	ldr	r3, [sp, #4]
 8008e50:	b913      	cbnz	r3, 8008e58 <osSemaphoreRelease+0x4c>
  stat = osOK;
 8008e52:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 8008e54:	b002      	add	sp, #8
 8008e56:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8008e58:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008e5c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008e60:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008e64:	f3bf 8f4f 	dsb	sy
 8008e68:	f3bf 8f6f 	isb	sy
 8008e6c:	e7f1      	b.n	8008e52 <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 8008e6e:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8008e72:	e7ef      	b.n	8008e54 <osSemaphoreRelease+0x48>
 8008e74:	200068f8 	.word	0x200068f8

08008e78 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8008e78:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008e7a:	4614      	mov	r4, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008e7c:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8008e80:	b11b      	cbz	r3, 8008e8a <osMessageQueueNew+0x12>
  hQueue = NULL;
 8008e82:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8008e84:	4628      	mov	r0, r5
 8008e86:	b002      	add	sp, #8
 8008e88:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008e8a:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8008e8e:	b913      	cbnz	r3, 8008e96 <osMessageQueueNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008e90:	f3ef 8311 	mrs	r3, BASEPRI
 8008e94:	b11b      	cbz	r3, 8008e9e <osMessageQueueNew+0x26>
 8008e96:	4b1a      	ldr	r3, [pc, #104]	; (8008f00 <osMessageQueueNew+0x88>)
 8008e98:	681b      	ldr	r3, [r3, #0]
 8008e9a:	2b02      	cmp	r3, #2
 8008e9c:	d0f1      	beq.n	8008e82 <osMessageQueueNew+0xa>
 8008e9e:	2800      	cmp	r0, #0
 8008ea0:	d0ef      	beq.n	8008e82 <osMessageQueueNew+0xa>
 8008ea2:	2900      	cmp	r1, #0
 8008ea4:	d0ed      	beq.n	8008e82 <osMessageQueueNew+0xa>
    if (attr != NULL) {
 8008ea6:	b1ec      	cbz	r4, 8008ee4 <osMessageQueueNew+0x6c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8008ea8:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
 8008eac:	b193      	cbz	r3, 8008ed4 <osMessageQueueNew+0x5c>
 8008eae:	2a4f      	cmp	r2, #79	; 0x4f
 8008eb0:	d9e7      	bls.n	8008e82 <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8008eb2:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8008eb4:	2a00      	cmp	r2, #0
 8008eb6:	d0e4      	beq.n	8008e82 <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8008eb8:	6966      	ldr	r6, [r4, #20]
 8008eba:	fb01 f500 	mul.w	r5, r1, r0
 8008ebe:	42ae      	cmp	r6, r5
 8008ec0:	d3df      	bcc.n	8008e82 <osMessageQueueNew+0xa>
      hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8008ec2:	2500      	movs	r5, #0
 8008ec4:	9500      	str	r5, [sp, #0]
 8008ec6:	f000 fc5e 	bl	8009786 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8008eca:	4605      	mov	r5, r0
 8008ecc:	2800      	cmp	r0, #0
 8008ece:	d0d8      	beq.n	8008e82 <osMessageQueueNew+0xa>
        name = attr->name;
 8008ed0:	6824      	ldr	r4, [r4, #0]
 8008ed2:	e00f      	b.n	8008ef4 <osMessageQueueNew+0x7c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8008ed4:	2a00      	cmp	r2, #0
 8008ed6:	d1d4      	bne.n	8008e82 <osMessageQueueNew+0xa>
 8008ed8:	6923      	ldr	r3, [r4, #16]
 8008eda:	2b00      	cmp	r3, #0
 8008edc:	d1d1      	bne.n	8008e82 <osMessageQueueNew+0xa>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8008ede:	6963      	ldr	r3, [r4, #20]
 8008ee0:	2b00      	cmp	r3, #0
 8008ee2:	d1ce      	bne.n	8008e82 <osMessageQueueNew+0xa>
        hQueue = xQueueCreate (msg_count, msg_size);
 8008ee4:	2200      	movs	r2, #0
 8008ee6:	f000 fc9c 	bl	8009822 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8008eea:	4605      	mov	r5, r0
 8008eec:	2800      	cmp	r0, #0
 8008eee:	d0c8      	beq.n	8008e82 <osMessageQueueNew+0xa>
      if (attr != NULL) {
 8008ef0:	2c00      	cmp	r4, #0
 8008ef2:	d1ed      	bne.n	8008ed0 <osMessageQueueNew+0x58>
      vQueueAddToRegistry (hQueue, name);
 8008ef4:	4621      	mov	r1, r4
 8008ef6:	4628      	mov	r0, r5
 8008ef8:	f001 f814 	bl	8009f24 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8008efc:	e7c2      	b.n	8008e84 <osMessageQueueNew+0xc>
 8008efe:	bf00      	nop
 8008f00:	200068f8 	.word	0x200068f8

08008f04 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8008f04:	b513      	push	{r0, r1, r4, lr}
 8008f06:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008f08:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8008f0c:	b123      	cbz	r3, 8008f18 <osMessageQueuePut+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008f0e:	b9d8      	cbnz	r0, 8008f48 <osMessageQueuePut+0x44>
      stat = osErrorParameter;
 8008f10:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8008f14:	b002      	add	sp, #8
 8008f16:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008f18:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8008f1c:	b913      	cbnz	r3, 8008f24 <osMessageQueuePut+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008f1e:	f3ef 8311 	mrs	r3, BASEPRI
 8008f22:	b11b      	cbz	r3, 8008f2c <osMessageQueuePut+0x28>
 8008f24:	4b17      	ldr	r3, [pc, #92]	; (8008f84 <osMessageQueuePut+0x80>)
 8008f26:	681b      	ldr	r3, [r3, #0]
 8008f28:	2b02      	cmp	r3, #2
 8008f2a:	d0f0      	beq.n	8008f0e <osMessageQueuePut+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008f2c:	2800      	cmp	r0, #0
 8008f2e:	d0ef      	beq.n	8008f10 <osMessageQueuePut+0xc>
 8008f30:	2900      	cmp	r1, #0
 8008f32:	d0ed      	beq.n	8008f10 <osMessageQueuePut+0xc>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8008f34:	2300      	movs	r3, #0
 8008f36:	4622      	mov	r2, r4
 8008f38:	f000 fcda 	bl	80098f0 <xQueueGenericSend>
 8008f3c:	2801      	cmp	r0, #1
 8008f3e:	d010      	beq.n	8008f62 <osMessageQueuePut+0x5e>
        if (timeout != 0U) {
 8008f40:	b9e4      	cbnz	r4, 8008f7c <osMessageQueuePut+0x78>
          stat = osErrorResource;
 8008f42:	f06f 0002 	mvn.w	r0, #2
 8008f46:	e7e5      	b.n	8008f14 <osMessageQueuePut+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008f48:	2900      	cmp	r1, #0
 8008f4a:	d0e1      	beq.n	8008f10 <osMessageQueuePut+0xc>
 8008f4c:	2c00      	cmp	r4, #0
 8008f4e:	d1df      	bne.n	8008f10 <osMessageQueuePut+0xc>
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8008f50:	4623      	mov	r3, r4
 8008f52:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008f54:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8008f56:	f000 fd7e 	bl	8009a56 <xQueueGenericSendFromISR>
 8008f5a:	2801      	cmp	r0, #1
 8008f5c:	d1f1      	bne.n	8008f42 <osMessageQueuePut+0x3e>
        portYIELD_FROM_ISR (yield);
 8008f5e:	9b01      	ldr	r3, [sp, #4]
 8008f60:	b90b      	cbnz	r3, 8008f66 <osMessageQueuePut+0x62>
  stat = osOK;
 8008f62:	2000      	movs	r0, #0
 8008f64:	e7d6      	b.n	8008f14 <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 8008f66:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008f6a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008f6e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008f72:	f3bf 8f4f 	dsb	sy
 8008f76:	f3bf 8f6f 	isb	sy
 8008f7a:	e7f2      	b.n	8008f62 <osMessageQueuePut+0x5e>
          stat = osErrorTimeout;
 8008f7c:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008f80:	e7c8      	b.n	8008f14 <osMessageQueuePut+0x10>
 8008f82:	bf00      	nop
 8008f84:	200068f8 	.word	0x200068f8

08008f88 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8008f88:	b513      	push	{r0, r1, r4, lr}
 8008f8a:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008f8c:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8008f90:	b123      	cbz	r3, 8008f9c <osMessageQueueGet+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008f92:	b9d0      	cbnz	r0, 8008fca <osMessageQueueGet+0x42>
      stat = osErrorParameter;
 8008f94:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8008f98:	b002      	add	sp, #8
 8008f9a:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008f9c:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8008fa0:	b913      	cbnz	r3, 8008fa8 <osMessageQueueGet+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008fa2:	f3ef 8311 	mrs	r3, BASEPRI
 8008fa6:	b11b      	cbz	r3, 8008fb0 <osMessageQueueGet+0x28>
 8008fa8:	4b16      	ldr	r3, [pc, #88]	; (8009004 <osMessageQueueGet+0x7c>)
 8008faa:	681b      	ldr	r3, [r3, #0]
 8008fac:	2b02      	cmp	r3, #2
 8008fae:	d0f0      	beq.n	8008f92 <osMessageQueueGet+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008fb0:	2800      	cmp	r0, #0
 8008fb2:	d0ef      	beq.n	8008f94 <osMessageQueueGet+0xc>
 8008fb4:	2900      	cmp	r1, #0
 8008fb6:	d0ed      	beq.n	8008f94 <osMessageQueueGet+0xc>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8008fb8:	4622      	mov	r2, r4
 8008fba:	f000 fe01 	bl	8009bc0 <xQueueReceive>
 8008fbe:	2801      	cmp	r0, #1
 8008fc0:	d00f      	beq.n	8008fe2 <osMessageQueueGet+0x5a>
        if (timeout != 0U) {
 8008fc2:	b9dc      	cbnz	r4, 8008ffc <osMessageQueueGet+0x74>
          stat = osErrorResource;
 8008fc4:	f06f 0002 	mvn.w	r0, #2
 8008fc8:	e7e6      	b.n	8008f98 <osMessageQueueGet+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008fca:	2900      	cmp	r1, #0
 8008fcc:	d0e2      	beq.n	8008f94 <osMessageQueueGet+0xc>
 8008fce:	2c00      	cmp	r4, #0
 8008fd0:	d1e0      	bne.n	8008f94 <osMessageQueueGet+0xc>
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8008fd2:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008fd4:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8008fd6:	f000 ff55 	bl	8009e84 <xQueueReceiveFromISR>
 8008fda:	2801      	cmp	r0, #1
 8008fdc:	d1f2      	bne.n	8008fc4 <osMessageQueueGet+0x3c>
        portYIELD_FROM_ISR (yield);
 8008fde:	9b01      	ldr	r3, [sp, #4]
 8008fe0:	b90b      	cbnz	r3, 8008fe6 <osMessageQueueGet+0x5e>
  stat = osOK;
 8008fe2:	2000      	movs	r0, #0
 8008fe4:	e7d8      	b.n	8008f98 <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 8008fe6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008fea:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008fee:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008ff2:	f3bf 8f4f 	dsb	sy
 8008ff6:	f3bf 8f6f 	isb	sy
 8008ffa:	e7f2      	b.n	8008fe2 <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 8008ffc:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8009000:	e7ca      	b.n	8008f98 <osMessageQueueGet+0x10>
 8009002:	bf00      	nop
 8009004:	200068f8 	.word	0x200068f8

08009008 <vApplicationGetIdleTaskMemory>:
/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8009008:	4b03      	ldr	r3, [pc, #12]	; (8009018 <vApplicationGetIdleTaskMemory+0x10>)
 800900a:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800900c:	4b03      	ldr	r3, [pc, #12]	; (800901c <vApplicationGetIdleTaskMemory+0x14>)
 800900e:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8009010:	2380      	movs	r3, #128	; 0x80
 8009012:	6013      	str	r3, [r2, #0]
}
 8009014:	4770      	bx	lr
 8009016:	bf00      	nop
 8009018:	20006838 	.word	0x20006838
 800901c:	20006638 	.word	0x20006638

08009020 <vApplicationGetTimerTaskMemory>:
/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8009020:	4b03      	ldr	r3, [pc, #12]	; (8009030 <vApplicationGetTimerTaskMemory+0x10>)
 8009022:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8009024:	4b03      	ldr	r3, [pc, #12]	; (8009034 <vApplicationGetTimerTaskMemory+0x14>)
 8009026:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8009028:	f44f 7380 	mov.w	r3, #256	; 0x100
 800902c:	6013      	str	r3, [r2, #0]
}
 800902e:	4770      	bx	lr
 8009030:	20006cfc 	.word	0x20006cfc
 8009034:	200068fc 	.word	0x200068fc

08009038 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 8009038:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800903a:	4b0f      	ldr	r3, [pc, #60]	; (8009078 <prvInsertBlockIntoFreeList+0x40>)
 800903c:	461a      	mov	r2, r3
 800903e:	681b      	ldr	r3, [r3, #0]
 8009040:	4283      	cmp	r3, r0
 8009042:	d3fb      	bcc.n	800903c <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8009044:	6854      	ldr	r4, [r2, #4]
 8009046:	1911      	adds	r1, r2, r4
 8009048:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800904a:	bf01      	itttt	eq
 800904c:	6841      	ldreq	r1, [r0, #4]
 800904e:	4610      	moveq	r0, r2
 8009050:	1909      	addeq	r1, r1, r4
 8009052:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8009054:	6844      	ldr	r4, [r0, #4]
 8009056:	1901      	adds	r1, r0, r4
 8009058:	428b      	cmp	r3, r1
 800905a:	d107      	bne.n	800906c <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800905c:	4907      	ldr	r1, [pc, #28]	; (800907c <prvInsertBlockIntoFreeList+0x44>)
 800905e:	6809      	ldr	r1, [r1, #0]
 8009060:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8009062:	bf1f      	itttt	ne
 8009064:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8009066:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8009068:	1909      	addne	r1, r1, r4
 800906a:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800906c:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 800906e:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8009070:	bf18      	it	ne
 8009072:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8009074:	bd10      	pop	{r4, pc}
 8009076:	bf00      	nop
 8009078:	20016dcc 	.word	0x20016dcc
 800907c:	20006dbc 	.word	0x20006dbc

08009080 <pvPortMalloc>:
{
 8009080:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009084:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8009086:	f001 f9dd 	bl	800a444 <vTaskSuspendAll>
		if( pxEnd == NULL )
 800908a:	4840      	ldr	r0, [pc, #256]	; (800918c <pvPortMalloc+0x10c>)
 800908c:	4d40      	ldr	r5, [pc, #256]	; (8009190 <pvPortMalloc+0x110>)
 800908e:	6803      	ldr	r3, [r0, #0]
 8009090:	bb0b      	cbnz	r3, 80090d6 <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 8009092:	4940      	ldr	r1, [pc, #256]	; (8009194 <pvPortMalloc+0x114>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8009094:	074e      	lsls	r6, r1, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8009096:	bf1f      	itttt	ne
 8009098:	1dcb      	addne	r3, r1, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800909a:	f023 0307 	bicne.w	r3, r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800909e:	f501 3280 	addne.w	r2, r1, #65536	; 0x10000
 80090a2:	1ad2      	subne	r2, r2, r3
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80090a4:	bf14      	ite	ne
 80090a6:	4619      	movne	r1, r3
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 80090a8:	f44f 3280 	moveq.w	r2, #65536	; 0x10000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 80090ac:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 80090ae:	4e3a      	ldr	r6, [pc, #232]	; (8009198 <pvPortMalloc+0x118>)
	uxAddress -= xHeapStructSize;
 80090b0:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80090b2:	f022 0207 	bic.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 80090b6:	2300      	movs	r3, #0
 80090b8:	6073      	str	r3, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 80090ba:	6031      	str	r1, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 80090bc:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 80090c0:	1a53      	subs	r3, r2, r1
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 80090c2:	e9c1 2300 	strd	r2, r3, [r1]
	pxEnd = ( void * ) uxAddress;
 80090c6:	6002      	str	r2, [r0, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 80090c8:	4a34      	ldr	r2, [pc, #208]	; (800919c <pvPortMalloc+0x11c>)
 80090ca:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 80090cc:	4a34      	ldr	r2, [pc, #208]	; (80091a0 <pvPortMalloc+0x120>)
 80090ce:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 80090d0:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 80090d4:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 80090d6:	682f      	ldr	r7, [r5, #0]
 80090d8:	4227      	tst	r7, r4
 80090da:	d151      	bne.n	8009180 <pvPortMalloc+0x100>
			if( xWantedSize > 0 )
 80090dc:	2c00      	cmp	r4, #0
 80090de:	d042      	beq.n	8009166 <pvPortMalloc+0xe6>
				xWantedSize += xHeapStructSize;
 80090e0:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 80090e4:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 80090e6:	bf1c      	itt	ne
 80090e8:	f023 0307 	bicne.w	r3, r3, #7
 80090ec:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 80090ee:	2b00      	cmp	r3, #0
 80090f0:	d046      	beq.n	8009180 <pvPortMalloc+0x100>
 80090f2:	4c2b      	ldr	r4, [pc, #172]	; (80091a0 <pvPortMalloc+0x120>)
 80090f4:	6826      	ldr	r6, [r4, #0]
 80090f6:	429e      	cmp	r6, r3
 80090f8:	d342      	bcc.n	8009180 <pvPortMalloc+0x100>
				pxBlock = xStart.pxNextFreeBlock;
 80090fa:	4a27      	ldr	r2, [pc, #156]	; (8009198 <pvPortMalloc+0x118>)
 80090fc:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 80090fe:	6869      	ldr	r1, [r5, #4]
 8009100:	4299      	cmp	r1, r3
 8009102:	d204      	bcs.n	800910e <pvPortMalloc+0x8e>
 8009104:	f8d5 c000 	ldr.w	ip, [r5]
 8009108:	f1bc 0f00 	cmp.w	ip, #0
 800910c:	d115      	bne.n	800913a <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 800910e:	6800      	ldr	r0, [r0, #0]
 8009110:	42a8      	cmp	r0, r5
 8009112:	d035      	beq.n	8009180 <pvPortMalloc+0x100>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8009114:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8009116:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8009118:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800911c:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800911e:	2910      	cmp	r1, #16
 8009120:	d912      	bls.n	8009148 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8009122:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8009124:	0742      	lsls	r2, r0, #29
 8009126:	d00b      	beq.n	8009140 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8009128:	f04f 0350 	mov.w	r3, #80	; 0x50
 800912c:	f383 8811 	msr	BASEPRI, r3
 8009130:	f3bf 8f6f 	isb	sy
 8009134:	f3bf 8f4f 	dsb	sy
 8009138:	e7fe      	b.n	8009138 <pvPortMalloc+0xb8>
 800913a:	462a      	mov	r2, r5
 800913c:	4665      	mov	r5, ip
 800913e:	e7de      	b.n	80090fe <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8009140:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8009142:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8009144:	f7ff ff78 	bl	8009038 <prvInsertBlockIntoFreeList>
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8009148:	4914      	ldr	r1, [pc, #80]	; (800919c <pvPortMalloc+0x11c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800914a:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800914c:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800914e:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8009150:	431f      	orrs	r7, r3
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8009152:	4286      	cmp	r6, r0
					pxBlock->pxNextFreeBlock = NULL;
 8009154:	f04f 0300 	mov.w	r3, #0
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8009158:	6026      	str	r6, [r4, #0]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800915a:	bf38      	it	cc
 800915c:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800915e:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8009162:	606f      	str	r7, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 8009164:	602b      	str	r3, [r5, #0]
	( void ) xTaskResumeAll();
 8009166:	f001 fa11 	bl	800a58c <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800916a:	0763      	lsls	r3, r4, #29
 800916c:	d00a      	beq.n	8009184 <pvPortMalloc+0x104>
 800916e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009172:	f383 8811 	msr	BASEPRI, r3
 8009176:	f3bf 8f6f 	isb	sy
 800917a:	f3bf 8f4f 	dsb	sy
 800917e:	e7fe      	b.n	800917e <pvPortMalloc+0xfe>
void *pvReturn = NULL;
 8009180:	2400      	movs	r4, #0
 8009182:	e7f0      	b.n	8009166 <pvPortMalloc+0xe6>
}
 8009184:	4620      	mov	r0, r4
 8009186:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800918a:	bf00      	nop
 800918c:	20006dbc 	.word	0x20006dbc
 8009190:	20016dc0 	.word	0x20016dc0
 8009194:	20006dc0 	.word	0x20006dc0
 8009198:	20016dcc 	.word	0x20016dcc
 800919c:	20016dc8 	.word	0x20016dc8
 80091a0:	20016dc4 	.word	0x20016dc4

080091a4 <vPortFree>:
{
 80091a4:	b510      	push	{r4, lr}
	if( pv != NULL )
 80091a6:	4604      	mov	r4, r0
 80091a8:	b370      	cbz	r0, 8009208 <vPortFree+0x64>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 80091aa:	4a18      	ldr	r2, [pc, #96]	; (800920c <vPortFree+0x68>)
 80091ac:	f850 3c04 	ldr.w	r3, [r0, #-4]
 80091b0:	6812      	ldr	r2, [r2, #0]
 80091b2:	4213      	tst	r3, r2
 80091b4:	d108      	bne.n	80091c8 <vPortFree+0x24>
 80091b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091ba:	f383 8811 	msr	BASEPRI, r3
 80091be:	f3bf 8f6f 	isb	sy
 80091c2:	f3bf 8f4f 	dsb	sy
 80091c6:	e7fe      	b.n	80091c6 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 80091c8:	f850 1c08 	ldr.w	r1, [r0, #-8]
 80091cc:	b141      	cbz	r1, 80091e0 <vPortFree+0x3c>
 80091ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091d2:	f383 8811 	msr	BASEPRI, r3
 80091d6:	f3bf 8f6f 	isb	sy
 80091da:	f3bf 8f4f 	dsb	sy
 80091de:	e7fe      	b.n	80091de <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 80091e0:	ea23 0302 	bic.w	r3, r3, r2
 80091e4:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 80091e8:	f001 f92c 	bl	800a444 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 80091ec:	4a08      	ldr	r2, [pc, #32]	; (8009210 <vPortFree+0x6c>)
 80091ee:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80091f2:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80091f4:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 80091f8:	440b      	add	r3, r1
 80091fa:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80091fc:	f7ff ff1c 	bl	8009038 <prvInsertBlockIntoFreeList>
}
 8009200:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 8009204:	f001 b9c2 	b.w	800a58c <xTaskResumeAll>
}
 8009208:	bd10      	pop	{r4, pc}
 800920a:	bf00      	nop
 800920c:	20016dc0 	.word	0x20016dc0
 8009210:	20016dc4 	.word	0x20016dc4

08009214 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8009214:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8009218:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800921c:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8009220:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8009222:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8009224:	2300      	movs	r3, #0
 8009226:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8009228:	4770      	bx	lr

0800922a <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800922a:	2300      	movs	r3, #0
 800922c:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800922e:	4770      	bx	lr

08009230 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8009230:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 8009232:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8009234:	689a      	ldr	r2, [r3, #8]
 8009236:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8009238:	689a      	ldr	r2, [r3, #8]
 800923a:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800923c:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800923e:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8009240:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8009242:	3301      	adds	r3, #1
 8009244:	6003      	str	r3, [r0, #0]
}
 8009246:	4770      	bx	lr

08009248 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8009248:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800924a:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800924c:	1c63      	adds	r3, r4, #1
 800924e:	d10a      	bne.n	8009266 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8009250:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8009252:	685a      	ldr	r2, [r3, #4]
 8009254:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8009256:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8009258:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800925a:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800925c:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800925e:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8009260:	3301      	adds	r3, #1
 8009262:	6003      	str	r3, [r0, #0]
}
 8009264:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8009266:	f100 0208 	add.w	r2, r0, #8
 800926a:	4613      	mov	r3, r2
 800926c:	6852      	ldr	r2, [r2, #4]
 800926e:	6815      	ldr	r5, [r2, #0]
 8009270:	42a5      	cmp	r5, r4
 8009272:	d9fa      	bls.n	800926a <vListInsert+0x22>
 8009274:	e7ed      	b.n	8009252 <vListInsert+0xa>

08009276 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8009276:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 800927a:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800927c:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800927e:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8009280:	6859      	ldr	r1, [r3, #4]
 8009282:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8009284:	bf08      	it	eq
 8009286:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8009288:	2200      	movs	r2, #0
 800928a:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800928c:	681a      	ldr	r2, [r3, #0]
 800928e:	3a01      	subs	r2, #1
 8009290:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8009292:	6818      	ldr	r0, [r3, #0]
}
 8009294:	4770      	bx	lr
	...

08009298 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8009298:	4808      	ldr	r0, [pc, #32]	; (80092bc <prvPortStartFirstTask+0x24>)
 800929a:	6800      	ldr	r0, [r0, #0]
 800929c:	6800      	ldr	r0, [r0, #0]
 800929e:	f380 8808 	msr	MSP, r0
 80092a2:	f04f 0000 	mov.w	r0, #0
 80092a6:	f380 8814 	msr	CONTROL, r0
 80092aa:	b662      	cpsie	i
 80092ac:	b661      	cpsie	f
 80092ae:	f3bf 8f4f 	dsb	sy
 80092b2:	f3bf 8f6f 	isb	sy
 80092b6:	df00      	svc	0
 80092b8:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 80092ba:	0000      	.short	0x0000
 80092bc:	e000ed08 	.word	0xe000ed08

080092c0 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 80092c0:	f8df 000c 	ldr.w	r0, [pc, #12]	; 80092d0 <vPortEnableVFP+0x10>
 80092c4:	6801      	ldr	r1, [r0, #0]
 80092c6:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80092ca:	6001      	str	r1, [r0, #0]
 80092cc:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 80092ce:	0000      	.short	0x0000
 80092d0:	e000ed88 	.word	0xe000ed88

080092d4 <prvTaskExitError>:
{
 80092d4:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 80092d6:	2300      	movs	r3, #0
 80092d8:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 80092da:	4b0d      	ldr	r3, [pc, #52]	; (8009310 <prvTaskExitError+0x3c>)
 80092dc:	681b      	ldr	r3, [r3, #0]
 80092de:	3301      	adds	r3, #1
 80092e0:	d008      	beq.n	80092f4 <prvTaskExitError+0x20>
 80092e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80092e6:	f383 8811 	msr	BASEPRI, r3
 80092ea:	f3bf 8f6f 	isb	sy
 80092ee:	f3bf 8f4f 	dsb	sy
 80092f2:	e7fe      	b.n	80092f2 <prvTaskExitError+0x1e>
 80092f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80092f8:	f383 8811 	msr	BASEPRI, r3
 80092fc:	f3bf 8f6f 	isb	sy
 8009300:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8009304:	9b01      	ldr	r3, [sp, #4]
 8009306:	2b00      	cmp	r3, #0
 8009308:	d0fc      	beq.n	8009304 <prvTaskExitError+0x30>
}
 800930a:	b002      	add	sp, #8
 800930c:	4770      	bx	lr
 800930e:	bf00      	nop
 8009310:	20000088 	.word	0x20000088

08009314 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8009314:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8009318:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800931c:	4b07      	ldr	r3, [pc, #28]	; (800933c <pxPortInitialiseStack+0x28>)
 800931e:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8009322:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8009326:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800932a:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 800932e:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8009332:	f840 3c24 	str.w	r3, [r0, #-36]
}
 8009336:	3844      	subs	r0, #68	; 0x44
 8009338:	4770      	bx	lr
 800933a:	bf00      	nop
 800933c:	080092d5 	.word	0x080092d5

08009340 <SVC_Handler>:
	__asm volatile (
 8009340:	4b07      	ldr	r3, [pc, #28]	; (8009360 <pxCurrentTCBConst2>)
 8009342:	6819      	ldr	r1, [r3, #0]
 8009344:	6808      	ldr	r0, [r1, #0]
 8009346:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800934a:	f380 8809 	msr	PSP, r0
 800934e:	f3bf 8f6f 	isb	sy
 8009352:	f04f 0000 	mov.w	r0, #0
 8009356:	f380 8811 	msr	BASEPRI, r0
 800935a:	4770      	bx	lr
 800935c:	f3af 8000 	nop.w

08009360 <pxCurrentTCBConst2>:
 8009360:	20016e1c 	.word	0x20016e1c

08009364 <vPortEnterCritical>:
 8009364:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009368:	f383 8811 	msr	BASEPRI, r3
 800936c:	f3bf 8f6f 	isb	sy
 8009370:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8009374:	4a0a      	ldr	r2, [pc, #40]	; (80093a0 <vPortEnterCritical+0x3c>)
 8009376:	6813      	ldr	r3, [r2, #0]
 8009378:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800937a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800937c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800937e:	d10e      	bne.n	800939e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8009380:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009384:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 8009388:	b2db      	uxtb	r3, r3
 800938a:	b143      	cbz	r3, 800939e <vPortEnterCritical+0x3a>
 800938c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009390:	f383 8811 	msr	BASEPRI, r3
 8009394:	f3bf 8f6f 	isb	sy
 8009398:	f3bf 8f4f 	dsb	sy
 800939c:	e7fe      	b.n	800939c <vPortEnterCritical+0x38>
}
 800939e:	4770      	bx	lr
 80093a0:	20000088 	.word	0x20000088

080093a4 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 80093a4:	4a08      	ldr	r2, [pc, #32]	; (80093c8 <vPortExitCritical+0x24>)
 80093a6:	6813      	ldr	r3, [r2, #0]
 80093a8:	b943      	cbnz	r3, 80093bc <vPortExitCritical+0x18>
 80093aa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093ae:	f383 8811 	msr	BASEPRI, r3
 80093b2:	f3bf 8f6f 	isb	sy
 80093b6:	f3bf 8f4f 	dsb	sy
 80093ba:	e7fe      	b.n	80093ba <vPortExitCritical+0x16>
	uxCriticalNesting--;
 80093bc:	3b01      	subs	r3, #1
 80093be:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 80093c0:	b90b      	cbnz	r3, 80093c6 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 80093c2:	f383 8811 	msr	BASEPRI, r3
}
 80093c6:	4770      	bx	lr
 80093c8:	20000088 	.word	0x20000088
 80093cc:	00000000 	.word	0x00000000

080093d0 <PendSV_Handler>:
	__asm volatile
 80093d0:	f3ef 8009 	mrs	r0, PSP
 80093d4:	f3bf 8f6f 	isb	sy
 80093d8:	4b15      	ldr	r3, [pc, #84]	; (8009430 <pxCurrentTCBConst>)
 80093da:	681a      	ldr	r2, [r3, #0]
 80093dc:	f01e 0f10 	tst.w	lr, #16
 80093e0:	bf08      	it	eq
 80093e2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 80093e6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80093ea:	6010      	str	r0, [r2, #0]
 80093ec:	e92d 0009 	stmdb	sp!, {r0, r3}
 80093f0:	f04f 0050 	mov.w	r0, #80	; 0x50
 80093f4:	f380 8811 	msr	BASEPRI, r0
 80093f8:	f3bf 8f4f 	dsb	sy
 80093fc:	f3bf 8f6f 	isb	sy
 8009400:	f001 f95c 	bl	800a6bc <vTaskSwitchContext>
 8009404:	f04f 0000 	mov.w	r0, #0
 8009408:	f380 8811 	msr	BASEPRI, r0
 800940c:	bc09      	pop	{r0, r3}
 800940e:	6819      	ldr	r1, [r3, #0]
 8009410:	6808      	ldr	r0, [r1, #0]
 8009412:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009416:	f01e 0f10 	tst.w	lr, #16
 800941a:	bf08      	it	eq
 800941c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8009420:	f380 8809 	msr	PSP, r0
 8009424:	f3bf 8f6f 	isb	sy
 8009428:	4770      	bx	lr
 800942a:	bf00      	nop
 800942c:	f3af 8000 	nop.w

08009430 <pxCurrentTCBConst>:
 8009430:	20016e1c 	.word	0x20016e1c

08009434 <SysTick_Handler>:
{
 8009434:	b508      	push	{r3, lr}
	__asm volatile
 8009436:	f04f 0350 	mov.w	r3, #80	; 0x50
 800943a:	f383 8811 	msr	BASEPRI, r3
 800943e:	f3bf 8f6f 	isb	sy
 8009442:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8009446:	f001 f80b 	bl	800a460 <xTaskIncrementTick>
 800944a:	b128      	cbz	r0, 8009458 <SysTick_Handler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800944c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009450:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009454:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 8009458:	2300      	movs	r3, #0
 800945a:	f383 8811 	msr	BASEPRI, r3
}
 800945e:	bd08      	pop	{r3, pc}

08009460 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8009460:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8009464:	2300      	movs	r3, #0
 8009466:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8009468:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800946a:	4b05      	ldr	r3, [pc, #20]	; (8009480 <vPortSetupTimerInterrupt+0x20>)
 800946c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8009470:	681b      	ldr	r3, [r3, #0]
 8009472:	fbb3 f3f1 	udiv	r3, r3, r1
 8009476:	3b01      	subs	r3, #1
 8009478:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800947a:	2307      	movs	r3, #7
 800947c:	6113      	str	r3, [r2, #16]
}
 800947e:	4770      	bx	lr
 8009480:	2000007c 	.word	0x2000007c

08009484 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8009484:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 8009488:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800948a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800948e:	4a3a      	ldr	r2, [pc, #232]	; (8009578 <xPortStartScheduler+0xf4>)
 8009490:	4291      	cmp	r1, r2
 8009492:	d108      	bne.n	80094a6 <xPortStartScheduler+0x22>
	__asm volatile
 8009494:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009498:	f383 8811 	msr	BASEPRI, r3
 800949c:	f3bf 8f6f 	isb	sy
 80094a0:	f3bf 8f4f 	dsb	sy
 80094a4:	e7fe      	b.n	80094a4 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 80094a6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 80094aa:	4b34      	ldr	r3, [pc, #208]	; (800957c <xPortStartScheduler+0xf8>)
 80094ac:	429a      	cmp	r2, r3
 80094ae:	d108      	bne.n	80094c2 <xPortStartScheduler+0x3e>
 80094b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80094b4:	f383 8811 	msr	BASEPRI, r3
 80094b8:	f3bf 8f6f 	isb	sy
 80094bc:	f3bf 8f4f 	dsb	sy
 80094c0:	e7fe      	b.n	80094c0 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 80094c2:	4b2f      	ldr	r3, [pc, #188]	; (8009580 <xPortStartScheduler+0xfc>)
 80094c4:	781a      	ldrb	r2, [r3, #0]
 80094c6:	b2d2      	uxtb	r2, r2
 80094c8:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 80094ca:	22ff      	movs	r2, #255	; 0xff
 80094cc:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 80094ce:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 80094d0:	4a2c      	ldr	r2, [pc, #176]	; (8009584 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 80094d2:	b2db      	uxtb	r3, r3
 80094d4:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 80094d8:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80094dc:	f003 0350 	and.w	r3, r3, #80	; 0x50
 80094e0:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 80094e2:	4a29      	ldr	r2, [pc, #164]	; (8009588 <xPortStartScheduler+0x104>)
 80094e4:	2307      	movs	r3, #7
 80094e6:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 80094e8:	2100      	movs	r1, #0
 80094ea:	f89d 0003 	ldrb.w	r0, [sp, #3]
 80094ee:	0600      	lsls	r0, r0, #24
 80094f0:	f103 34ff 	add.w	r4, r3, #4294967295
 80094f4:	d40c      	bmi.n	8009510 <xPortStartScheduler+0x8c>
 80094f6:	b111      	cbz	r1, 80094fe <xPortStartScheduler+0x7a>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 80094f8:	2b03      	cmp	r3, #3
 80094fa:	6013      	str	r3, [r2, #0]
 80094fc:	d011      	beq.n	8009522 <xPortStartScheduler+0x9e>
 80094fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009502:	f383 8811 	msr	BASEPRI, r3
 8009506:	f3bf 8f6f 	isb	sy
 800950a:	f3bf 8f4f 	dsb	sy
 800950e:	e7fe      	b.n	800950e <xPortStartScheduler+0x8a>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8009510:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8009514:	005b      	lsls	r3, r3, #1
 8009516:	b2db      	uxtb	r3, r3
 8009518:	f88d 3003 	strb.w	r3, [sp, #3]
 800951c:	2101      	movs	r1, #1
 800951e:	4623      	mov	r3, r4
 8009520:	e7e3      	b.n	80094ea <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8009522:	f44f 7340 	mov.w	r3, #768	; 0x300
 8009526:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8009528:	9b01      	ldr	r3, [sp, #4]
 800952a:	4a15      	ldr	r2, [pc, #84]	; (8009580 <xPortStartScheduler+0xfc>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800952c:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8009530:	b2db      	uxtb	r3, r3
 8009532:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8009534:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8009538:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800953c:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8009540:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8009544:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8009548:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 800954c:	f7ff ff88 	bl	8009460 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8009550:	4b0e      	ldr	r3, [pc, #56]	; (800958c <xPortStartScheduler+0x108>)
 8009552:	2500      	movs	r5, #0
 8009554:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 8009556:	f7ff feb3 	bl	80092c0 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800955a:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 800955e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8009562:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 8009566:	f7ff fe97 	bl	8009298 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800956a:	f001 f8a7 	bl	800a6bc <vTaskSwitchContext>
	prvTaskExitError();
 800956e:	f7ff feb1 	bl	80092d4 <prvTaskExitError>
}
 8009572:	4628      	mov	r0, r5
 8009574:	b003      	add	sp, #12
 8009576:	bd30      	pop	{r4, r5, pc}
 8009578:	410fc271 	.word	0x410fc271
 800957c:	410fc270 	.word	0x410fc270
 8009580:	e000e400 	.word	0xe000e400
 8009584:	20016dd4 	.word	0x20016dd4
 8009588:	20016dd8 	.word	0x20016dd8
 800958c:	20000088 	.word	0x20000088

08009590 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8009590:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8009594:	2b0f      	cmp	r3, #15
 8009596:	d90e      	bls.n	80095b6 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8009598:	4a11      	ldr	r2, [pc, #68]	; (80095e0 <vPortValidateInterruptPriority+0x50>)
 800959a:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800959c:	4a11      	ldr	r2, [pc, #68]	; (80095e4 <vPortValidateInterruptPriority+0x54>)
 800959e:	7812      	ldrb	r2, [r2, #0]
 80095a0:	429a      	cmp	r2, r3
 80095a2:	d908      	bls.n	80095b6 <vPortValidateInterruptPriority+0x26>
 80095a4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80095a8:	f383 8811 	msr	BASEPRI, r3
 80095ac:	f3bf 8f6f 	isb	sy
 80095b0:	f3bf 8f4f 	dsb	sy
 80095b4:	e7fe      	b.n	80095b4 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 80095b6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80095ba:	4a0b      	ldr	r2, [pc, #44]	; (80095e8 <vPortValidateInterruptPriority+0x58>)
 80095bc:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 80095c0:	6812      	ldr	r2, [r2, #0]
 80095c2:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80095c6:	4293      	cmp	r3, r2
 80095c8:	d908      	bls.n	80095dc <vPortValidateInterruptPriority+0x4c>
 80095ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 80095ce:	f383 8811 	msr	BASEPRI, r3
 80095d2:	f3bf 8f6f 	isb	sy
 80095d6:	f3bf 8f4f 	dsb	sy
 80095da:	e7fe      	b.n	80095da <vPortValidateInterruptPriority+0x4a>
	}
 80095dc:	4770      	bx	lr
 80095de:	bf00      	nop
 80095e0:	e000e3f0 	.word	0xe000e3f0
 80095e4:	20016dd4 	.word	0x20016dd4
 80095e8:	20016dd8 	.word	0x20016dd8

080095ec <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 80095ec:	b510      	push	{r4, lr}
 80095ee:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80095f0:	f7ff feb8 	bl	8009364 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 80095f4:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80095f6:	f7ff fed5 	bl	80093a4 <vPortExitCritical>

	return xReturn;
}
 80095fa:	fab4 f084 	clz	r0, r4
 80095fe:	0940      	lsrs	r0, r0, #5
 8009600:	bd10      	pop	{r4, pc}

08009602 <prvCopyDataToQueue>:
{
 8009602:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009604:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8009606:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009608:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 800960a:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800960c:	b952      	cbnz	r2, 8009624 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800960e:	6807      	ldr	r7, [r0, #0]
 8009610:	bb47      	cbnz	r7, 8009664 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8009612:	6880      	ldr	r0, [r0, #8]
 8009614:	f001 f9ae 	bl	800a974 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8009618:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800961a:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800961c:	3601      	adds	r6, #1
 800961e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 8009620:	4628      	mov	r0, r5
 8009622:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8009624:	b965      	cbnz	r5, 8009640 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8009626:	6840      	ldr	r0, [r0, #4]
 8009628:	f017 fc28 	bl	8020e7c <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800962c:	6863      	ldr	r3, [r4, #4]
 800962e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8009630:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8009632:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8009634:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8009636:	4293      	cmp	r3, r2
 8009638:	d3f0      	bcc.n	800961c <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800963a:	6823      	ldr	r3, [r4, #0]
 800963c:	6063      	str	r3, [r4, #4]
 800963e:	e7ed      	b.n	800961c <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8009640:	68c0      	ldr	r0, [r0, #12]
 8009642:	f017 fc1b 	bl	8020e7c <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8009646:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8009648:	68e3      	ldr	r3, [r4, #12]
 800964a:	4251      	negs	r1, r2
 800964c:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800964e:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8009650:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8009652:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8009654:	bf3e      	ittt	cc
 8009656:	68a3      	ldrcc	r3, [r4, #8]
 8009658:	185b      	addcc	r3, r3, r1
 800965a:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800965c:	2d02      	cmp	r5, #2
 800965e:	d101      	bne.n	8009664 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8009660:	b116      	cbz	r6, 8009668 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 8009662:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 8009664:	2500      	movs	r5, #0
 8009666:	e7d9      	b.n	800961c <prvCopyDataToQueue+0x1a>
 8009668:	4635      	mov	r5, r6
 800966a:	e7d7      	b.n	800961c <prvCopyDataToQueue+0x1a>

0800966c <prvCopyDataFromQueue>:
{
 800966c:	4603      	mov	r3, r0
 800966e:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8009670:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 8009672:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8009674:	b16a      	cbz	r2, 8009692 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8009676:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8009678:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800967a:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800967c:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800967e:	bf28      	it	cs
 8009680:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8009682:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8009684:	bf28      	it	cs
 8009686:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8009688:	68d9      	ldr	r1, [r3, #12]
}
 800968a:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800968e:	f017 bbf5 	b.w	8020e7c <memcpy>
}
 8009692:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009696:	4770      	bx	lr

08009698 <prvUnlockQueue>:
{
 8009698:	b570      	push	{r4, r5, r6, lr}
 800969a:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800969c:	f7ff fe62 	bl	8009364 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 80096a0:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80096a4:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 80096a8:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 80096aa:	2d00      	cmp	r5, #0
 80096ac:	dc14      	bgt.n	80096d8 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 80096ae:	23ff      	movs	r3, #255	; 0xff
 80096b0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 80096b4:	f7ff fe76 	bl	80093a4 <vPortExitCritical>
	taskENTER_CRITICAL();
 80096b8:	f7ff fe54 	bl	8009364 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 80096bc:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80096c0:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 80096c4:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80096c6:	2d00      	cmp	r5, #0
 80096c8:	dc12      	bgt.n	80096f0 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 80096ca:	23ff      	movs	r3, #255	; 0xff
 80096cc:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 80096d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 80096d4:	f7ff be66 	b.w	80093a4 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80096d8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80096da:	2b00      	cmp	r3, #0
 80096dc:	d0e7      	beq.n	80096ae <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80096de:	4630      	mov	r0, r6
 80096e0:	f001 f864 	bl	800a7ac <xTaskRemoveFromEventList>
 80096e4:	b108      	cbz	r0, 80096ea <prvUnlockQueue+0x52>
						vTaskMissedYield();
 80096e6:	f001 f8ed 	bl	800a8c4 <vTaskMissedYield>
			--cTxLock;
 80096ea:	3d01      	subs	r5, #1
 80096ec:	b26d      	sxtb	r5, r5
 80096ee:	e7dc      	b.n	80096aa <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80096f0:	6923      	ldr	r3, [r4, #16]
 80096f2:	2b00      	cmp	r3, #0
 80096f4:	d0e9      	beq.n	80096ca <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80096f6:	4630      	mov	r0, r6
 80096f8:	f001 f858 	bl	800a7ac <xTaskRemoveFromEventList>
 80096fc:	b108      	cbz	r0, 8009702 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 80096fe:	f001 f8e1 	bl	800a8c4 <vTaskMissedYield>
				--cRxLock;
 8009702:	3d01      	subs	r5, #1
 8009704:	b26d      	sxtb	r5, r5
 8009706:	e7de      	b.n	80096c6 <prvUnlockQueue+0x2e>

08009708 <xQueueGenericReset>:
{
 8009708:	b538      	push	{r3, r4, r5, lr}
 800970a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800970c:	4604      	mov	r4, r0
 800970e:	b940      	cbnz	r0, 8009722 <xQueueGenericReset+0x1a>
 8009710:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009714:	f383 8811 	msr	BASEPRI, r3
 8009718:	f3bf 8f6f 	isb	sy
 800971c:	f3bf 8f4f 	dsb	sy
 8009720:	e7fe      	b.n	8009720 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8009722:	f7ff fe1f 	bl	8009364 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009726:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 800972a:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800972c:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800972e:	434b      	muls	r3, r1
 8009730:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009732:	1a5b      	subs	r3, r3, r1
 8009734:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009736:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009738:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800973a:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 800973c:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800973e:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8009740:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8009744:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8009748:	b9a5      	cbnz	r5, 8009774 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800974a:	6923      	ldr	r3, [r4, #16]
 800974c:	b173      	cbz	r3, 800976c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800974e:	f104 0010 	add.w	r0, r4, #16
 8009752:	f001 f82b 	bl	800a7ac <xTaskRemoveFromEventList>
 8009756:	b148      	cbz	r0, 800976c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8009758:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800975c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009760:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009764:	f3bf 8f4f 	dsb	sy
 8009768:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800976c:	f7ff fe1a 	bl	80093a4 <vPortExitCritical>
}
 8009770:	2001      	movs	r0, #1
 8009772:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8009774:	f104 0010 	add.w	r0, r4, #16
 8009778:	f7ff fd4c 	bl	8009214 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800977c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009780:	f7ff fd48 	bl	8009214 <vListInitialise>
 8009784:	e7f2      	b.n	800976c <xQueueGenericReset+0x64>

08009786 <xQueueGenericCreateStatic>:
	{
 8009786:	b513      	push	{r0, r1, r4, lr}
 8009788:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800978a:	b940      	cbnz	r0, 800979e <xQueueGenericCreateStatic+0x18>
 800978c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009790:	f383 8811 	msr	BASEPRI, r3
 8009794:	f3bf 8f6f 	isb	sy
 8009798:	f3bf 8f4f 	dsb	sy
 800979c:	e7fe      	b.n	800979c <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 800979e:	b943      	cbnz	r3, 80097b2 <xQueueGenericCreateStatic+0x2c>
 80097a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80097a4:	f383 8811 	msr	BASEPRI, r3
 80097a8:	f3bf 8f6f 	isb	sy
 80097ac:	f3bf 8f4f 	dsb	sy
 80097b0:	e7fe      	b.n	80097b0 <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 80097b2:	b14a      	cbz	r2, 80097c8 <xQueueGenericCreateStatic+0x42>
 80097b4:	b991      	cbnz	r1, 80097dc <xQueueGenericCreateStatic+0x56>
 80097b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80097ba:	f383 8811 	msr	BASEPRI, r3
 80097be:	f3bf 8f6f 	isb	sy
 80097c2:	f3bf 8f4f 	dsb	sy
 80097c6:	e7fe      	b.n	80097c6 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 80097c8:	b141      	cbz	r1, 80097dc <xQueueGenericCreateStatic+0x56>
 80097ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 80097ce:	f383 8811 	msr	BASEPRI, r3
 80097d2:	f3bf 8f6f 	isb	sy
 80097d6:	f3bf 8f4f 	dsb	sy
 80097da:	e7fe      	b.n	80097da <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 80097dc:	2350      	movs	r3, #80	; 0x50
 80097de:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 80097e0:	9b01      	ldr	r3, [sp, #4]
 80097e2:	2b50      	cmp	r3, #80	; 0x50
 80097e4:	d008      	beq.n	80097f8 <xQueueGenericCreateStatic+0x72>
 80097e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80097ea:	f383 8811 	msr	BASEPRI, r3
 80097ee:	f3bf 8f6f 	isb	sy
 80097f2:	f3bf 8f4f 	dsb	sy
 80097f6:	e7fe      	b.n	80097f6 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 80097f8:	2900      	cmp	r1, #0
 80097fa:	bf08      	it	eq
 80097fc:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 80097fe:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8009800:	6022      	str	r2, [r4, #0]
 8009802:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 8009804:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8009808:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800980c:	4619      	mov	r1, r3
 800980e:	4620      	mov	r0, r4
 8009810:	f7ff ff7a 	bl	8009708 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8009814:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8009818:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 800981c:	4620      	mov	r0, r4
 800981e:	b002      	add	sp, #8
 8009820:	bd10      	pop	{r4, pc}

08009822 <xQueueGenericCreate>:
	{
 8009822:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009824:	460d      	mov	r5, r1
 8009826:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8009828:	4606      	mov	r6, r0
 800982a:	b940      	cbnz	r0, 800983e <xQueueGenericCreate+0x1c>
 800982c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009830:	f383 8811 	msr	BASEPRI, r3
 8009834:	f3bf 8f6f 	isb	sy
 8009838:	f3bf 8f4f 	dsb	sy
 800983c:	e7fe      	b.n	800983c <xQueueGenericCreate+0x1a>
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800983e:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8009840:	3050      	adds	r0, #80	; 0x50
 8009842:	f7ff fc1d 	bl	8009080 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8009846:	4604      	mov	r4, r0
 8009848:	b170      	cbz	r0, 8009868 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800984a:	2300      	movs	r3, #0
 800984c:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8009850:	b165      	cbz	r5, 800986c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009852:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8009856:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 800985a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800985c:	2101      	movs	r1, #1
 800985e:	4620      	mov	r0, r4
 8009860:	f7ff ff52 	bl	8009708 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8009864:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8009868:	4620      	mov	r0, r4
 800986a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800986c:	4603      	mov	r3, r0
 800986e:	e7f2      	b.n	8009856 <xQueueGenericCreate+0x34>

08009870 <xQueueCreateCountingSemaphoreStatic>:
	{
 8009870:	b513      	push	{r0, r1, r4, lr}
 8009872:	4613      	mov	r3, r2
 8009874:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8009876:	b940      	cbnz	r0, 800988a <xQueueCreateCountingSemaphoreStatic+0x1a>
 8009878:	f04f 0350 	mov.w	r3, #80	; 0x50
 800987c:	f383 8811 	msr	BASEPRI, r3
 8009880:	f3bf 8f6f 	isb	sy
 8009884:	f3bf 8f4f 	dsb	sy
 8009888:	e7fe      	b.n	8009888 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800988a:	4288      	cmp	r0, r1
 800988c:	d208      	bcs.n	80098a0 <xQueueCreateCountingSemaphoreStatic+0x30>
 800988e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009892:	f383 8811 	msr	BASEPRI, r3
 8009896:	f3bf 8f6f 	isb	sy
 800989a:	f3bf 8f4f 	dsb	sy
 800989e:	e7fe      	b.n	800989e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80098a0:	2202      	movs	r2, #2
 80098a2:	9200      	str	r2, [sp, #0]
 80098a4:	2200      	movs	r2, #0
 80098a6:	4611      	mov	r1, r2
 80098a8:	f7ff ff6d 	bl	8009786 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 80098ac:	b100      	cbz	r0, 80098b0 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80098ae:	6384      	str	r4, [r0, #56]	; 0x38
	}
 80098b0:	b002      	add	sp, #8
 80098b2:	bd10      	pop	{r4, pc}

080098b4 <xQueueCreateCountingSemaphore>:
	{
 80098b4:	b510      	push	{r4, lr}
 80098b6:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 80098b8:	b940      	cbnz	r0, 80098cc <xQueueCreateCountingSemaphore+0x18>
 80098ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 80098be:	f383 8811 	msr	BASEPRI, r3
 80098c2:	f3bf 8f6f 	isb	sy
 80098c6:	f3bf 8f4f 	dsb	sy
 80098ca:	e7fe      	b.n	80098ca <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 80098cc:	4288      	cmp	r0, r1
 80098ce:	d208      	bcs.n	80098e2 <xQueueCreateCountingSemaphore+0x2e>
 80098d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80098d4:	f383 8811 	msr	BASEPRI, r3
 80098d8:	f3bf 8f6f 	isb	sy
 80098dc:	f3bf 8f4f 	dsb	sy
 80098e0:	e7fe      	b.n	80098e0 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80098e2:	2202      	movs	r2, #2
 80098e4:	2100      	movs	r1, #0
 80098e6:	f7ff ff9c 	bl	8009822 <xQueueGenericCreate>
		if( xHandle != NULL )
 80098ea:	b100      	cbz	r0, 80098ee <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80098ec:	6384      	str	r4, [r0, #56]	; 0x38
	}
 80098ee:	bd10      	pop	{r4, pc}

080098f0 <xQueueGenericSend>:
{
 80098f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80098f4:	b085      	sub	sp, #20
 80098f6:	4688      	mov	r8, r1
 80098f8:	9201      	str	r2, [sp, #4]
 80098fa:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 80098fc:	4604      	mov	r4, r0
 80098fe:	b940      	cbnz	r0, 8009912 <xQueueGenericSend+0x22>
 8009900:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009904:	f383 8811 	msr	BASEPRI, r3
 8009908:	f3bf 8f6f 	isb	sy
 800990c:	f3bf 8f4f 	dsb	sy
 8009910:	e7fe      	b.n	8009910 <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009912:	b951      	cbnz	r1, 800992a <xQueueGenericSend+0x3a>
 8009914:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009916:	b143      	cbz	r3, 800992a <xQueueGenericSend+0x3a>
 8009918:	f04f 0350 	mov.w	r3, #80	; 0x50
 800991c:	f383 8811 	msr	BASEPRI, r3
 8009920:	f3bf 8f6f 	isb	sy
 8009924:	f3bf 8f4f 	dsb	sy
 8009928:	e7fe      	b.n	8009928 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800992a:	2f02      	cmp	r7, #2
 800992c:	d10b      	bne.n	8009946 <xQueueGenericSend+0x56>
 800992e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009930:	2b01      	cmp	r3, #1
 8009932:	d008      	beq.n	8009946 <xQueueGenericSend+0x56>
 8009934:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009938:	f383 8811 	msr	BASEPRI, r3
 800993c:	f3bf 8f6f 	isb	sy
 8009940:	f3bf 8f4f 	dsb	sy
 8009944:	e7fe      	b.n	8009944 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009946:	f000 ffc3 	bl	800a8d0 <xTaskGetSchedulerState>
 800994a:	4606      	mov	r6, r0
 800994c:	b950      	cbnz	r0, 8009964 <xQueueGenericSend+0x74>
 800994e:	9b01      	ldr	r3, [sp, #4]
 8009950:	b14b      	cbz	r3, 8009966 <xQueueGenericSend+0x76>
 8009952:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009956:	f383 8811 	msr	BASEPRI, r3
 800995a:	f3bf 8f6f 	isb	sy
 800995e:	f3bf 8f4f 	dsb	sy
 8009962:	e7fe      	b.n	8009962 <xQueueGenericSend+0x72>
 8009964:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8009966:	f04f 0900 	mov.w	r9, #0
 800996a:	e037      	b.n	80099dc <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 800996c:	9d01      	ldr	r5, [sp, #4]
 800996e:	b91d      	cbnz	r5, 8009978 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 8009970:	f7ff fd18 	bl	80093a4 <vPortExitCritical>
			return errQUEUE_FULL;
 8009974:	2000      	movs	r0, #0
 8009976:	e052      	b.n	8009a1e <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 8009978:	b916      	cbnz	r6, 8009980 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800997a:	a802      	add	r0, sp, #8
 800997c:	f000 ff5a 	bl	800a834 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8009980:	f7ff fd10 	bl	80093a4 <vPortExitCritical>
		vTaskSuspendAll();
 8009984:	f000 fd5e 	bl	800a444 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009988:	f7ff fcec 	bl	8009364 <vPortEnterCritical>
 800998c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8009990:	2bff      	cmp	r3, #255	; 0xff
 8009992:	bf08      	it	eq
 8009994:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 8009998:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800999c:	2bff      	cmp	r3, #255	; 0xff
 800999e:	bf08      	it	eq
 80099a0:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 80099a4:	f7ff fcfe 	bl	80093a4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80099a8:	a901      	add	r1, sp, #4
 80099aa:	a802      	add	r0, sp, #8
 80099ac:	f000 ff4e 	bl	800a84c <xTaskCheckForTimeOut>
 80099b0:	2800      	cmp	r0, #0
 80099b2:	d14a      	bne.n	8009a4a <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80099b4:	f7ff fcd6 	bl	8009364 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 80099b8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80099ba:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80099bc:	429a      	cmp	r2, r3
 80099be:	d131      	bne.n	8009a24 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80099c0:	f7ff fcf0 	bl	80093a4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 80099c4:	9901      	ldr	r1, [sp, #4]
 80099c6:	f104 0010 	add.w	r0, r4, #16
 80099ca:	f000 feb7 	bl	800a73c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80099ce:	4620      	mov	r0, r4
 80099d0:	f7ff fe62 	bl	8009698 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80099d4:	f000 fdda 	bl	800a58c <xTaskResumeAll>
 80099d8:	b360      	cbz	r0, 8009a34 <xQueueGenericSend+0x144>
 80099da:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80099dc:	f7ff fcc2 	bl	8009364 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80099e0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80099e2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80099e4:	429a      	cmp	r2, r3
 80099e6:	d301      	bcc.n	80099ec <xQueueGenericSend+0xfc>
 80099e8:	2f02      	cmp	r7, #2
 80099ea:	d1bf      	bne.n	800996c <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80099ec:	463a      	mov	r2, r7
 80099ee:	4641      	mov	r1, r8
 80099f0:	4620      	mov	r0, r4
 80099f2:	f7ff fe06 	bl	8009602 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80099f6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80099f8:	b11b      	cbz	r3, 8009a02 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80099fa:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80099fe:	f000 fed5 	bl	800a7ac <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8009a02:	b148      	cbz	r0, 8009a18 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 8009a04:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009a08:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009a0c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009a10:	f3bf 8f4f 	dsb	sy
 8009a14:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009a18:	f7ff fcc4 	bl	80093a4 <vPortExitCritical>
				return pdPASS;
 8009a1c:	2001      	movs	r0, #1
}
 8009a1e:	b005      	add	sp, #20
 8009a20:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 8009a24:	f7ff fcbe 	bl	80093a4 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8009a28:	4620      	mov	r0, r4
 8009a2a:	f7ff fe35 	bl	8009698 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8009a2e:	f000 fdad 	bl	800a58c <xTaskResumeAll>
 8009a32:	e7d2      	b.n	80099da <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 8009a34:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009a38:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009a3c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009a40:	f3bf 8f4f 	dsb	sy
 8009a44:	f3bf 8f6f 	isb	sy
 8009a48:	e7c7      	b.n	80099da <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 8009a4a:	4620      	mov	r0, r4
 8009a4c:	f7ff fe24 	bl	8009698 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009a50:	f000 fd9c 	bl	800a58c <xTaskResumeAll>
 8009a54:	e78e      	b.n	8009974 <xQueueGenericSend+0x84>

08009a56 <xQueueGenericSendFromISR>:
{
 8009a56:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009a5a:	4689      	mov	r9, r1
 8009a5c:	4690      	mov	r8, r2
 8009a5e:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8009a60:	4604      	mov	r4, r0
 8009a62:	b940      	cbnz	r0, 8009a76 <xQueueGenericSendFromISR+0x20>
 8009a64:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009a68:	f383 8811 	msr	BASEPRI, r3
 8009a6c:	f3bf 8f6f 	isb	sy
 8009a70:	f3bf 8f4f 	dsb	sy
 8009a74:	e7fe      	b.n	8009a74 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009a76:	b951      	cbnz	r1, 8009a8e <xQueueGenericSendFromISR+0x38>
 8009a78:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009a7a:	b143      	cbz	r3, 8009a8e <xQueueGenericSendFromISR+0x38>
 8009a7c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009a80:	f383 8811 	msr	BASEPRI, r3
 8009a84:	f3bf 8f6f 	isb	sy
 8009a88:	f3bf 8f4f 	dsb	sy
 8009a8c:	e7fe      	b.n	8009a8c <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8009a8e:	2f02      	cmp	r7, #2
 8009a90:	d10b      	bne.n	8009aaa <xQueueGenericSendFromISR+0x54>
 8009a92:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009a94:	2b01      	cmp	r3, #1
 8009a96:	d008      	beq.n	8009aaa <xQueueGenericSendFromISR+0x54>
 8009a98:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009a9c:	f383 8811 	msr	BASEPRI, r3
 8009aa0:	f3bf 8f6f 	isb	sy
 8009aa4:	f3bf 8f4f 	dsb	sy
 8009aa8:	e7fe      	b.n	8009aa8 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8009aaa:	f7ff fd71 	bl	8009590 <vPortValidateInterruptPriority>
	__asm volatile
 8009aae:	f3ef 8611 	mrs	r6, BASEPRI
 8009ab2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009ab6:	f383 8811 	msr	BASEPRI, r3
 8009aba:	f3bf 8f6f 	isb	sy
 8009abe:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8009ac2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8009ac4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009ac6:	429a      	cmp	r2, r3
 8009ac8:	d301      	bcc.n	8009ace <xQueueGenericSendFromISR+0x78>
 8009aca:	2f02      	cmp	r7, #2
 8009acc:	d122      	bne.n	8009b14 <xQueueGenericSendFromISR+0xbe>
			const int8_t cTxLock = pxQueue->cTxLock;
 8009ace:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8009ad2:	463a      	mov	r2, r7
			const int8_t cTxLock = pxQueue->cTxLock;
 8009ad4:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8009ad6:	4649      	mov	r1, r9
 8009ad8:	4620      	mov	r0, r4
 8009ada:	f7ff fd92 	bl	8009602 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 8009ade:	1c6b      	adds	r3, r5, #1
 8009ae0:	d113      	bne.n	8009b0a <xQueueGenericSendFromISR+0xb4>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009ae2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009ae4:	b90b      	cbnz	r3, 8009aea <xQueueGenericSendFromISR+0x94>
			xReturn = pdPASS;
 8009ae6:	2001      	movs	r0, #1
 8009ae8:	e00b      	b.n	8009b02 <xQueueGenericSendFromISR+0xac>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009aea:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009aee:	f000 fe5d 	bl	800a7ac <xTaskRemoveFromEventList>
 8009af2:	2800      	cmp	r0, #0
 8009af4:	d0f7      	beq.n	8009ae6 <xQueueGenericSendFromISR+0x90>
							if( pxHigherPriorityTaskWoken != NULL )
 8009af6:	f1b8 0f00 	cmp.w	r8, #0
 8009afa:	d0f4      	beq.n	8009ae6 <xQueueGenericSendFromISR+0x90>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8009afc:	2001      	movs	r0, #1
 8009afe:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8009b02:	f386 8811 	msr	BASEPRI, r6
}
 8009b06:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8009b0a:	3501      	adds	r5, #1
 8009b0c:	b26d      	sxtb	r5, r5
 8009b0e:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 8009b12:	e7e8      	b.n	8009ae6 <xQueueGenericSendFromISR+0x90>
			xReturn = errQUEUE_FULL;
 8009b14:	2000      	movs	r0, #0
 8009b16:	e7f4      	b.n	8009b02 <xQueueGenericSendFromISR+0xac>

08009b18 <xQueueGiveFromISR>:
{
 8009b18:	b570      	push	{r4, r5, r6, lr}
 8009b1a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8009b1c:	4604      	mov	r4, r0
 8009b1e:	b940      	cbnz	r0, 8009b32 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8009b20:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009b24:	f383 8811 	msr	BASEPRI, r3
 8009b28:	f3bf 8f6f 	isb	sy
 8009b2c:	f3bf 8f4f 	dsb	sy
 8009b30:	e7fe      	b.n	8009b30 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8009b32:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009b34:	b143      	cbz	r3, 8009b48 <xQueueGiveFromISR+0x30>
 8009b36:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009b3a:	f383 8811 	msr	BASEPRI, r3
 8009b3e:	f3bf 8f6f 	isb	sy
 8009b42:	f3bf 8f4f 	dsb	sy
 8009b46:	e7fe      	b.n	8009b46 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8009b48:	6803      	ldr	r3, [r0, #0]
 8009b4a:	b953      	cbnz	r3, 8009b62 <xQueueGiveFromISR+0x4a>
 8009b4c:	6883      	ldr	r3, [r0, #8]
 8009b4e:	b143      	cbz	r3, 8009b62 <xQueueGiveFromISR+0x4a>
 8009b50:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009b54:	f383 8811 	msr	BASEPRI, r3
 8009b58:	f3bf 8f6f 	isb	sy
 8009b5c:	f3bf 8f4f 	dsb	sy
 8009b60:	e7fe      	b.n	8009b60 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8009b62:	f7ff fd15 	bl	8009590 <vPortValidateInterruptPriority>
	__asm volatile
 8009b66:	f3ef 8611 	mrs	r6, BASEPRI
 8009b6a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009b6e:	f383 8811 	msr	BASEPRI, r3
 8009b72:	f3bf 8f6f 	isb	sy
 8009b76:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009b7a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 8009b7c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009b7e:	4293      	cmp	r3, r2
 8009b80:	d91c      	bls.n	8009bbc <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8009b82:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8009b86:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8009b88:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 8009b8a:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8009b8c:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 8009b8e:	d110      	bne.n	8009bb2 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009b90:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009b92:	b90b      	cbnz	r3, 8009b98 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 8009b94:	2001      	movs	r0, #1
 8009b96:	e009      	b.n	8009bac <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009b98:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009b9c:	f000 fe06 	bl	800a7ac <xTaskRemoveFromEventList>
 8009ba0:	2800      	cmp	r0, #0
 8009ba2:	d0f7      	beq.n	8009b94 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 8009ba4:	2d00      	cmp	r5, #0
 8009ba6:	d0f5      	beq.n	8009b94 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8009ba8:	2001      	movs	r0, #1
 8009baa:	6028      	str	r0, [r5, #0]
	__asm volatile
 8009bac:	f386 8811 	msr	BASEPRI, r6
}
 8009bb0:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8009bb2:	3301      	adds	r3, #1
 8009bb4:	b25b      	sxtb	r3, r3
 8009bb6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8009bba:	e7eb      	b.n	8009b94 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 8009bbc:	2000      	movs	r0, #0
 8009bbe:	e7f5      	b.n	8009bac <xQueueGiveFromISR+0x94>

08009bc0 <xQueueReceive>:
{
 8009bc0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8009bc4:	460f      	mov	r7, r1
 8009bc6:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8009bc8:	4604      	mov	r4, r0
 8009bca:	b940      	cbnz	r0, 8009bde <xQueueReceive+0x1e>
	__asm volatile
 8009bcc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009bd0:	f383 8811 	msr	BASEPRI, r3
 8009bd4:	f3bf 8f6f 	isb	sy
 8009bd8:	f3bf 8f4f 	dsb	sy
 8009bdc:	e7fe      	b.n	8009bdc <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009bde:	b951      	cbnz	r1, 8009bf6 <xQueueReceive+0x36>
 8009be0:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009be2:	b143      	cbz	r3, 8009bf6 <xQueueReceive+0x36>
 8009be4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009be8:	f383 8811 	msr	BASEPRI, r3
 8009bec:	f3bf 8f6f 	isb	sy
 8009bf0:	f3bf 8f4f 	dsb	sy
 8009bf4:	e7fe      	b.n	8009bf4 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009bf6:	f000 fe6b 	bl	800a8d0 <xTaskGetSchedulerState>
 8009bfa:	4606      	mov	r6, r0
 8009bfc:	b950      	cbnz	r0, 8009c14 <xQueueReceive+0x54>
 8009bfe:	9b01      	ldr	r3, [sp, #4]
 8009c00:	b14b      	cbz	r3, 8009c16 <xQueueReceive+0x56>
 8009c02:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c06:	f383 8811 	msr	BASEPRI, r3
 8009c0a:	f3bf 8f6f 	isb	sy
 8009c0e:	f3bf 8f4f 	dsb	sy
 8009c12:	e7fe      	b.n	8009c12 <xQueueReceive+0x52>
 8009c14:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8009c16:	f04f 0800 	mov.w	r8, #0
 8009c1a:	e03d      	b.n	8009c98 <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 8009c1c:	9d01      	ldr	r5, [sp, #4]
 8009c1e:	b91d      	cbnz	r5, 8009c28 <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 8009c20:	f7ff fbc0 	bl	80093a4 <vPortExitCritical>
				return errQUEUE_EMPTY;
 8009c24:	2000      	movs	r0, #0
 8009c26:	e056      	b.n	8009cd6 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 8009c28:	b916      	cbnz	r6, 8009c30 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8009c2a:	a802      	add	r0, sp, #8
 8009c2c:	f000 fe02 	bl	800a834 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8009c30:	f7ff fbb8 	bl	80093a4 <vPortExitCritical>
		vTaskSuspendAll();
 8009c34:	f000 fc06 	bl	800a444 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009c38:	f7ff fb94 	bl	8009364 <vPortEnterCritical>
 8009c3c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8009c40:	2bff      	cmp	r3, #255	; 0xff
 8009c42:	bf08      	it	eq
 8009c44:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 8009c48:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8009c4c:	2bff      	cmp	r3, #255	; 0xff
 8009c4e:	bf08      	it	eq
 8009c50:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8009c54:	f7ff fba6 	bl	80093a4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009c58:	a901      	add	r1, sp, #4
 8009c5a:	a802      	add	r0, sp, #8
 8009c5c:	f000 fdf6 	bl	800a84c <xTaskCheckForTimeOut>
 8009c60:	2800      	cmp	r0, #0
 8009c62:	d141      	bne.n	8009ce8 <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009c64:	4620      	mov	r0, r4
 8009c66:	f7ff fcc1 	bl	80095ec <prvIsQueueEmpty>
 8009c6a:	b3b8      	cbz	r0, 8009cdc <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8009c6c:	9901      	ldr	r1, [sp, #4]
 8009c6e:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009c72:	f000 fd63 	bl	800a73c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8009c76:	4620      	mov	r0, r4
 8009c78:	f7ff fd0e 	bl	8009698 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8009c7c:	f000 fc86 	bl	800a58c <xTaskResumeAll>
 8009c80:	b948      	cbnz	r0, 8009c96 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 8009c82:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009c86:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009c8a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009c8e:	f3bf 8f4f 	dsb	sy
 8009c92:	f3bf 8f6f 	isb	sy
 8009c96:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8009c98:	f7ff fb64 	bl	8009364 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009c9c:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8009c9e:	2d00      	cmp	r5, #0
 8009ca0:	d0bc      	beq.n	8009c1c <xQueueReceive+0x5c>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009ca2:	4639      	mov	r1, r7
 8009ca4:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009ca6:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009ca8:	f7ff fce0 	bl	800966c <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009cac:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009cae:	6923      	ldr	r3, [r4, #16]
 8009cb0:	b173      	cbz	r3, 8009cd0 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009cb2:	f104 0010 	add.w	r0, r4, #16
 8009cb6:	f000 fd79 	bl	800a7ac <xTaskRemoveFromEventList>
 8009cba:	b148      	cbz	r0, 8009cd0 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 8009cbc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009cc0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009cc4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009cc8:	f3bf 8f4f 	dsb	sy
 8009ccc:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009cd0:	f7ff fb68 	bl	80093a4 <vPortExitCritical>
				return pdPASS;
 8009cd4:	2001      	movs	r0, #1
}
 8009cd6:	b004      	add	sp, #16
 8009cd8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 8009cdc:	4620      	mov	r0, r4
 8009cde:	f7ff fcdb 	bl	8009698 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8009ce2:	f000 fc53 	bl	800a58c <xTaskResumeAll>
 8009ce6:	e7d6      	b.n	8009c96 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 8009ce8:	4620      	mov	r0, r4
 8009cea:	f7ff fcd5 	bl	8009698 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009cee:	f000 fc4d 	bl	800a58c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009cf2:	4620      	mov	r0, r4
 8009cf4:	f7ff fc7a 	bl	80095ec <prvIsQueueEmpty>
 8009cf8:	2800      	cmp	r0, #0
 8009cfa:	d0cc      	beq.n	8009c96 <xQueueReceive+0xd6>
 8009cfc:	e792      	b.n	8009c24 <xQueueReceive+0x64>

08009cfe <xQueueSemaphoreTake>:
{
 8009cfe:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009d00:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 8009d02:	4604      	mov	r4, r0
{
 8009d04:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8009d06:	b940      	cbnz	r0, 8009d1a <xQueueSemaphoreTake+0x1c>
 8009d08:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d0c:	f383 8811 	msr	BASEPRI, r3
 8009d10:	f3bf 8f6f 	isb	sy
 8009d14:	f3bf 8f4f 	dsb	sy
 8009d18:	e7fe      	b.n	8009d18 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 8009d1a:	6c05      	ldr	r5, [r0, #64]	; 0x40
 8009d1c:	b145      	cbz	r5, 8009d30 <xQueueSemaphoreTake+0x32>
 8009d1e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d22:	f383 8811 	msr	BASEPRI, r3
 8009d26:	f3bf 8f6f 	isb	sy
 8009d2a:	f3bf 8f4f 	dsb	sy
 8009d2e:	e7fe      	b.n	8009d2e <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009d30:	f000 fdce 	bl	800a8d0 <xTaskGetSchedulerState>
 8009d34:	4606      	mov	r6, r0
 8009d36:	b950      	cbnz	r0, 8009d4e <xQueueSemaphoreTake+0x50>
 8009d38:	9b01      	ldr	r3, [sp, #4]
 8009d3a:	b15b      	cbz	r3, 8009d54 <xQueueSemaphoreTake+0x56>
 8009d3c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d40:	f383 8811 	msr	BASEPRI, r3
 8009d44:	f3bf 8f6f 	isb	sy
 8009d48:	f3bf 8f4f 	dsb	sy
 8009d4c:	e7fe      	b.n	8009d4c <xQueueSemaphoreTake+0x4e>
 8009d4e:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8009d50:	2700      	movs	r7, #0
 8009d52:	e053      	b.n	8009dfc <xQueueSemaphoreTake+0xfe>
 8009d54:	4605      	mov	r5, r0
 8009d56:	e7fb      	b.n	8009d50 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 8009d58:	9b01      	ldr	r3, [sp, #4]
 8009d5a:	b963      	cbnz	r3, 8009d76 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 8009d5c:	b145      	cbz	r5, 8009d70 <xQueueSemaphoreTake+0x72>
 8009d5e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d62:	f383 8811 	msr	BASEPRI, r3
 8009d66:	f3bf 8f6f 	isb	sy
 8009d6a:	f3bf 8f4f 	dsb	sy
 8009d6e:	e7fe      	b.n	8009d6e <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 8009d70:	f7ff fb18 	bl	80093a4 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8009d74:	e062      	b.n	8009e3c <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 8009d76:	b916      	cbnz	r6, 8009d7e <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8009d78:	a802      	add	r0, sp, #8
 8009d7a:	f000 fd5b 	bl	800a834 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8009d7e:	f7ff fb11 	bl	80093a4 <vPortExitCritical>
		vTaskSuspendAll();
 8009d82:	f000 fb5f 	bl	800a444 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009d86:	f7ff faed 	bl	8009364 <vPortEnterCritical>
 8009d8a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8009d8e:	2bff      	cmp	r3, #255	; 0xff
 8009d90:	bf08      	it	eq
 8009d92:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 8009d96:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8009d9a:	2bff      	cmp	r3, #255	; 0xff
 8009d9c:	bf08      	it	eq
 8009d9e:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 8009da2:	f7ff faff 	bl	80093a4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009da6:	a901      	add	r1, sp, #4
 8009da8:	a802      	add	r0, sp, #8
 8009daa:	f000 fd4f 	bl	800a84c <xTaskCheckForTimeOut>
 8009dae:	2800      	cmp	r0, #0
 8009db0:	d14d      	bne.n	8009e4e <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009db2:	4620      	mov	r0, r4
 8009db4:	f7ff fc1a 	bl	80095ec <prvIsQueueEmpty>
 8009db8:	2800      	cmp	r0, #0
 8009dba:	d042      	beq.n	8009e42 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8009dbc:	6823      	ldr	r3, [r4, #0]
 8009dbe:	b93b      	cbnz	r3, 8009dd0 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 8009dc0:	f7ff fad0 	bl	8009364 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8009dc4:	68a0      	ldr	r0, [r4, #8]
 8009dc6:	f000 fd93 	bl	800a8f0 <xTaskPriorityInherit>
 8009dca:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 8009dcc:	f7ff faea 	bl	80093a4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8009dd0:	9901      	ldr	r1, [sp, #4]
 8009dd2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009dd6:	f000 fcb1 	bl	800a73c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8009dda:	4620      	mov	r0, r4
 8009ddc:	f7ff fc5c 	bl	8009698 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8009de0:	f000 fbd4 	bl	800a58c <xTaskResumeAll>
 8009de4:	b948      	cbnz	r0, 8009dfa <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 8009de6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009dea:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009dee:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009df2:	f3bf 8f4f 	dsb	sy
 8009df6:	f3bf 8f6f 	isb	sy
 8009dfa:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8009dfc:	f7ff fab2 	bl	8009364 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8009e00:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8009e02:	2b00      	cmp	r3, #0
 8009e04:	d0a8      	beq.n	8009d58 <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8009e06:	3b01      	subs	r3, #1
 8009e08:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8009e0a:	6823      	ldr	r3, [r4, #0]
 8009e0c:	b913      	cbnz	r3, 8009e14 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 8009e0e:	f000 fe47 	bl	800aaa0 <pvTaskIncrementMutexHeldCount>
 8009e12:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009e14:	6923      	ldr	r3, [r4, #16]
 8009e16:	b173      	cbz	r3, 8009e36 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009e18:	f104 0010 	add.w	r0, r4, #16
 8009e1c:	f000 fcc6 	bl	800a7ac <xTaskRemoveFromEventList>
 8009e20:	b148      	cbz	r0, 8009e36 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 8009e22:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009e26:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009e2a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009e2e:	f3bf 8f4f 	dsb	sy
 8009e32:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009e36:	f7ff fab5 	bl	80093a4 <vPortExitCritical>
				return pdPASS;
 8009e3a:	2501      	movs	r5, #1
}
 8009e3c:	4628      	mov	r0, r5
 8009e3e:	b005      	add	sp, #20
 8009e40:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 8009e42:	4620      	mov	r0, r4
 8009e44:	f7ff fc28 	bl	8009698 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8009e48:	f000 fba0 	bl	800a58c <xTaskResumeAll>
 8009e4c:	e7d5      	b.n	8009dfa <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 8009e4e:	4620      	mov	r0, r4
 8009e50:	f7ff fc22 	bl	8009698 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009e54:	f000 fb9a 	bl	800a58c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009e58:	4620      	mov	r0, r4
 8009e5a:	f7ff fbc7 	bl	80095ec <prvIsQueueEmpty>
 8009e5e:	2800      	cmp	r0, #0
 8009e60:	d0cb      	beq.n	8009dfa <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 8009e62:	2d00      	cmp	r5, #0
 8009e64:	d0ea      	beq.n	8009e3c <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 8009e66:	f7ff fa7d 	bl	8009364 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 8009e6a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8009e6c:	b119      	cbz	r1, 8009e76 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8009e6e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8009e70:	6819      	ldr	r1, [r3, #0]
 8009e72:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8009e76:	68a0      	ldr	r0, [r4, #8]
 8009e78:	f000 fdc0 	bl	800a9fc <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 8009e7c:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 8009e7e:	f7ff fa91 	bl	80093a4 <vPortExitCritical>
 8009e82:	e7db      	b.n	8009e3c <xQueueSemaphoreTake+0x13e>

08009e84 <xQueueReceiveFromISR>:
{
 8009e84:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009e88:	4689      	mov	r9, r1
 8009e8a:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 8009e8c:	4605      	mov	r5, r0
 8009e8e:	b940      	cbnz	r0, 8009ea2 <xQueueReceiveFromISR+0x1e>
 8009e90:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009e94:	f383 8811 	msr	BASEPRI, r3
 8009e98:	f3bf 8f6f 	isb	sy
 8009e9c:	f3bf 8f4f 	dsb	sy
 8009ea0:	e7fe      	b.n	8009ea0 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009ea2:	b951      	cbnz	r1, 8009eba <xQueueReceiveFromISR+0x36>
 8009ea4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009ea6:	b143      	cbz	r3, 8009eba <xQueueReceiveFromISR+0x36>
 8009ea8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009eac:	f383 8811 	msr	BASEPRI, r3
 8009eb0:	f3bf 8f6f 	isb	sy
 8009eb4:	f3bf 8f4f 	dsb	sy
 8009eb8:	e7fe      	b.n	8009eb8 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8009eba:	f7ff fb69 	bl	8009590 <vPortValidateInterruptPriority>
	__asm volatile
 8009ebe:	f3ef 8711 	mrs	r7, BASEPRI
 8009ec2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009ec6:	f383 8811 	msr	BASEPRI, r3
 8009eca:	f3bf 8f6f 	isb	sy
 8009ece:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009ed2:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8009ed4:	b31c      	cbz	r4, 8009f1e <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 8009ed6:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009eda:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 8009edc:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009ede:	4628      	mov	r0, r5
 8009ee0:	f7ff fbc4 	bl	800966c <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009ee4:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 8009ee6:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009ee8:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 8009eea:	d113      	bne.n	8009f14 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009eec:	692b      	ldr	r3, [r5, #16]
 8009eee:	b90b      	cbnz	r3, 8009ef4 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 8009ef0:	2001      	movs	r0, #1
 8009ef2:	e00b      	b.n	8009f0c <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009ef4:	f105 0010 	add.w	r0, r5, #16
 8009ef8:	f000 fc58 	bl	800a7ac <xTaskRemoveFromEventList>
 8009efc:	2800      	cmp	r0, #0
 8009efe:	d0f7      	beq.n	8009ef0 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 8009f00:	f1b8 0f00 	cmp.w	r8, #0
 8009f04:	d0f4      	beq.n	8009ef0 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8009f06:	2001      	movs	r0, #1
 8009f08:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8009f0c:	f387 8811 	msr	BASEPRI, r7
}
 8009f10:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8009f14:	3601      	adds	r6, #1
 8009f16:	b276      	sxtb	r6, r6
 8009f18:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 8009f1c:	e7e8      	b.n	8009ef0 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 8009f1e:	4620      	mov	r0, r4
 8009f20:	e7f4      	b.n	8009f0c <xQueueReceiveFromISR+0x88>
	...

08009f24 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8009f24:	b510      	push	{r4, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8009f26:	4a07      	ldr	r2, [pc, #28]	; (8009f44 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009f28:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8009f2a:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 8009f2e:	b92c      	cbnz	r4, 8009f3c <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8009f30:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8009f34:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8009f38:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 8009f3a:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009f3c:	3301      	adds	r3, #1
 8009f3e:	2b08      	cmp	r3, #8
 8009f40:	d1f3      	bne.n	8009f2a <vQueueAddToRegistry+0x6>
 8009f42:	e7fa      	b.n	8009f3a <vQueueAddToRegistry+0x16>
 8009f44:	20016ddc 	.word	0x20016ddc

08009f48 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8009f48:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8009f4a:	4a08      	ldr	r2, [pc, #32]	; (8009f6c <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009f4c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8009f4e:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 8009f52:	684c      	ldr	r4, [r1, #4]
 8009f54:	4284      	cmp	r4, r0
 8009f56:	d104      	bne.n	8009f62 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8009f58:	2000      	movs	r0, #0
 8009f5a:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 8009f5e:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8009f60:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009f62:	3301      	adds	r3, #1
 8009f64:	2b08      	cmp	r3, #8
 8009f66:	d1f2      	bne.n	8009f4e <vQueueUnregisterQueue+0x6>
 8009f68:	e7fa      	b.n	8009f60 <vQueueUnregisterQueue+0x18>
 8009f6a:	bf00      	nop
 8009f6c:	20016ddc 	.word	0x20016ddc

08009f70 <vQueueDelete>:
{
 8009f70:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8009f72:	4604      	mov	r4, r0
 8009f74:	b940      	cbnz	r0, 8009f88 <vQueueDelete+0x18>
	__asm volatile
 8009f76:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009f7a:	f383 8811 	msr	BASEPRI, r3
 8009f7e:	f3bf 8f6f 	isb	sy
 8009f82:	f3bf 8f4f 	dsb	sy
 8009f86:	e7fe      	b.n	8009f86 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 8009f88:	f7ff ffde 	bl	8009f48 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8009f8c:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8009f90:	b923      	cbnz	r3, 8009f9c <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 8009f92:	4620      	mov	r0, r4
}
 8009f94:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8009f98:	f7ff b904 	b.w	80091a4 <vPortFree>
}
 8009f9c:	bd10      	pop	{r4, pc}

08009f9e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 8009f9e:	b570      	push	{r4, r5, r6, lr}
 8009fa0:	4604      	mov	r4, r0
 8009fa2:	460d      	mov	r5, r1
 8009fa4:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8009fa6:	f7ff f9dd 	bl	8009364 <vPortEnterCritical>
 8009faa:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8009fae:	2bff      	cmp	r3, #255	; 0xff
 8009fb0:	bf04      	itt	eq
 8009fb2:	2300      	moveq	r3, #0
 8009fb4:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8009fb8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8009fbc:	2bff      	cmp	r3, #255	; 0xff
 8009fbe:	bf04      	itt	eq
 8009fc0:	2300      	moveq	r3, #0
 8009fc2:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 8009fc6:	f7ff f9ed 	bl	80093a4 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 8009fca:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8009fcc:	b92b      	cbnz	r3, 8009fda <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 8009fce:	4632      	mov	r2, r6
 8009fd0:	4629      	mov	r1, r5
 8009fd2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009fd6:	f000 fbcb 	bl	800a770 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 8009fda:	4620      	mov	r0, r4
	}
 8009fdc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8009fe0:	f7ff bb5a 	b.w	8009698 <prvUnlockQueue>

08009fe4 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8009fe4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009fe8:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 8009fea:	f7ff f9bb 	bl	8009364 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 8009fee:	4b30      	ldr	r3, [pc, #192]	; (800a0b0 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 8009ff0:	4e30      	ldr	r6, [pc, #192]	; (800a0b4 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 8009ff2:	681a      	ldr	r2, [r3, #0]
 8009ff4:	4f30      	ldr	r7, [pc, #192]	; (800a0b8 <prvAddNewTaskToReadyList+0xd4>)
 8009ff6:	3201      	adds	r2, #1
 8009ff8:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 8009ffa:	6835      	ldr	r5, [r6, #0]
 8009ffc:	2d00      	cmp	r5, #0
 8009ffe:	d14b      	bne.n	800a098 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 800a000:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800a002:	681b      	ldr	r3, [r3, #0]
 800a004:	2b01      	cmp	r3, #1
 800a006:	d11f      	bne.n	800a048 <prvAddNewTaskToReadyList+0x64>
 800a008:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800a00a:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800a00c:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800a00e:	f7ff f901 	bl	8009214 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800a012:	2d38      	cmp	r5, #56	; 0x38
 800a014:	f108 0814 	add.w	r8, r8, #20
 800a018:	d1f7      	bne.n	800a00a <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 800a01a:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800a0e0 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 800a01e:	4d27      	ldr	r5, [pc, #156]	; (800a0bc <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 800a020:	4640      	mov	r0, r8
 800a022:	f7ff f8f7 	bl	8009214 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800a026:	4628      	mov	r0, r5
 800a028:	f7ff f8f4 	bl	8009214 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800a02c:	4824      	ldr	r0, [pc, #144]	; (800a0c0 <prvAddNewTaskToReadyList+0xdc>)
 800a02e:	f7ff f8f1 	bl	8009214 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800a032:	4824      	ldr	r0, [pc, #144]	; (800a0c4 <prvAddNewTaskToReadyList+0xe0>)
 800a034:	f7ff f8ee 	bl	8009214 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800a038:	4823      	ldr	r0, [pc, #140]	; (800a0c8 <prvAddNewTaskToReadyList+0xe4>)
 800a03a:	f7ff f8eb 	bl	8009214 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800a03e:	4b23      	ldr	r3, [pc, #140]	; (800a0cc <prvAddNewTaskToReadyList+0xe8>)
 800a040:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800a044:	4b22      	ldr	r3, [pc, #136]	; (800a0d0 <prvAddNewTaskToReadyList+0xec>)
 800a046:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 800a048:	4a22      	ldr	r2, [pc, #136]	; (800a0d4 <prvAddNewTaskToReadyList+0xf0>)
 800a04a:	6813      	ldr	r3, [r2, #0]
 800a04c:	3301      	adds	r3, #1
 800a04e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 800a050:	4a21      	ldr	r2, [pc, #132]	; (800a0d8 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800a052:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800a054:	6811      	ldr	r1, [r2, #0]
 800a056:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a058:	2014      	movs	r0, #20
 800a05a:	428b      	cmp	r3, r1
 800a05c:	fb00 7003 	mla	r0, r0, r3, r7
 800a060:	f104 0104 	add.w	r1, r4, #4
 800a064:	bf88      	it	hi
 800a066:	6013      	strhi	r3, [r2, #0]
 800a068:	f7ff f8e2 	bl	8009230 <vListInsertEnd>
	taskEXIT_CRITICAL();
 800a06c:	f7ff f99a 	bl	80093a4 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 800a070:	4b1a      	ldr	r3, [pc, #104]	; (800a0dc <prvAddNewTaskToReadyList+0xf8>)
 800a072:	681b      	ldr	r3, [r3, #0]
 800a074:	b173      	cbz	r3, 800a094 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800a076:	6833      	ldr	r3, [r6, #0]
 800a078:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800a07a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a07c:	429a      	cmp	r2, r3
 800a07e:	d209      	bcs.n	800a094 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 800a080:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a084:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a088:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a08c:	f3bf 8f4f 	dsb	sy
 800a090:	f3bf 8f6f 	isb	sy
}
 800a094:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 800a098:	4b10      	ldr	r3, [pc, #64]	; (800a0dc <prvAddNewTaskToReadyList+0xf8>)
 800a09a:	681b      	ldr	r3, [r3, #0]
 800a09c:	2b00      	cmp	r3, #0
 800a09e:	d1d3      	bne.n	800a048 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800a0a0:	6833      	ldr	r3, [r6, #0]
 800a0a2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800a0a4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a0a6:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 800a0a8:	bf98      	it	ls
 800a0aa:	6034      	strls	r4, [r6, #0]
 800a0ac:	e7cc      	b.n	800a048 <prvAddNewTaskToReadyList+0x64>
 800a0ae:	bf00      	nop
 800a0b0:	20017288 	.word	0x20017288
 800a0b4:	20016e1c 	.word	0x20016e1c
 800a0b8:	20016e28 	.word	0x20016e28
 800a0bc:	200172b4 	.word	0x200172b4
 800a0c0:	200172d0 	.word	0x200172d0
 800a0c4:	200172fc 	.word	0x200172fc
 800a0c8:	200172e8 	.word	0x200172e8
 800a0cc:	20016e20 	.word	0x20016e20
 800a0d0:	20016e24 	.word	0x20016e24
 800a0d4:	20017298 	.word	0x20017298
 800a0d8:	2001729c 	.word	0x2001729c
 800a0dc:	200172e4 	.word	0x200172e4
 800a0e0:	200172a0 	.word	0x200172a0

0800a0e4 <prvAddCurrentTaskToDelayedList>:
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 800a0e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800a0e6:	4b15      	ldr	r3, [pc, #84]	; (800a13c <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a0e8:	4e15      	ldr	r6, [pc, #84]	; (800a140 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 800a0ea:	681d      	ldr	r5, [r3, #0]
{
 800a0ec:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a0ee:	6830      	ldr	r0, [r6, #0]
 800a0f0:	3004      	adds	r0, #4
{
 800a0f2:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a0f4:	f7ff f8bf 	bl	8009276 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800a0f8:	1c63      	adds	r3, r4, #1
 800a0fa:	d107      	bne.n	800a10c <prvAddCurrentTaskToDelayedList+0x28>
 800a0fc:	b137      	cbz	r7, 800a10c <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800a0fe:	6831      	ldr	r1, [r6, #0]
 800a100:	4810      	ldr	r0, [pc, #64]	; (800a144 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 800a102:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800a106:	3104      	adds	r1, #4
 800a108:	f7ff b892 	b.w	8009230 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800a10c:	6833      	ldr	r3, [r6, #0]
 800a10e:	192c      	adds	r4, r5, r4
 800a110:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800a112:	d307      	bcc.n	800a124 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800a114:	4b0c      	ldr	r3, [pc, #48]	; (800a148 <prvAddCurrentTaskToDelayedList+0x64>)
 800a116:	6818      	ldr	r0, [r3, #0]
 800a118:	6831      	ldr	r1, [r6, #0]
}
 800a11a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800a11e:	3104      	adds	r1, #4
 800a120:	f7ff b892 	b.w	8009248 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800a124:	4b09      	ldr	r3, [pc, #36]	; (800a14c <prvAddCurrentTaskToDelayedList+0x68>)
 800a126:	6818      	ldr	r0, [r3, #0]
 800a128:	6831      	ldr	r1, [r6, #0]
 800a12a:	3104      	adds	r1, #4
 800a12c:	f7ff f88c 	bl	8009248 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800a130:	4b07      	ldr	r3, [pc, #28]	; (800a150 <prvAddCurrentTaskToDelayedList+0x6c>)
 800a132:	681a      	ldr	r2, [r3, #0]
 800a134:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 800a136:	bf88      	it	hi
 800a138:	601c      	strhi	r4, [r3, #0]
}
 800a13a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a13c:	20017310 	.word	0x20017310
 800a140:	20016e1c 	.word	0x20016e1c
 800a144:	200172e8 	.word	0x200172e8
 800a148:	20016e24 	.word	0x20016e24
 800a14c:	20016e20 	.word	0x20016e20
 800a150:	200172c8 	.word	0x200172c8

0800a154 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800a154:	4a06      	ldr	r2, [pc, #24]	; (800a170 <prvResetNextTaskUnblockTime+0x1c>)
 800a156:	6813      	ldr	r3, [r2, #0]
 800a158:	6819      	ldr	r1, [r3, #0]
 800a15a:	4b06      	ldr	r3, [pc, #24]	; (800a174 <prvResetNextTaskUnblockTime+0x20>)
 800a15c:	b919      	cbnz	r1, 800a166 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 800a15e:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800a162:	601a      	str	r2, [r3, #0]
}
 800a164:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a166:	6812      	ldr	r2, [r2, #0]
 800a168:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800a16a:	68d2      	ldr	r2, [r2, #12]
 800a16c:	6852      	ldr	r2, [r2, #4]
 800a16e:	e7f8      	b.n	800a162 <prvResetNextTaskUnblockTime+0xe>
 800a170:	20016e20 	.word	0x20016e20
 800a174:	200172c8 	.word	0x200172c8

0800a178 <prvDeleteTCB>:
	{
 800a178:	b510      	push	{r4, lr}
 800a17a:	4604      	mov	r4, r0
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800a17c:	3058      	adds	r0, #88	; 0x58
 800a17e:	f017 fa6f 	bl	8021660 <_reclaim_reent>
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800a182:	f894 30bd 	ldrb.w	r3, [r4, #189]	; 0xbd
 800a186:	b93b      	cbnz	r3, 800a198 <prvDeleteTCB+0x20>
				vPortFree( pxTCB->pxStack );
 800a188:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800a18a:	f7ff f80b 	bl	80091a4 <vPortFree>
				vPortFree( pxTCB );
 800a18e:	4620      	mov	r0, r4
	}
 800a190:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 800a194:	f7ff b806 	b.w	80091a4 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800a198:	2b01      	cmp	r3, #1
 800a19a:	d0f8      	beq.n	800a18e <prvDeleteTCB+0x16>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800a19c:	2b02      	cmp	r3, #2
 800a19e:	d008      	beq.n	800a1b2 <prvDeleteTCB+0x3a>
 800a1a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a1a4:	f383 8811 	msr	BASEPRI, r3
 800a1a8:	f3bf 8f6f 	isb	sy
 800a1ac:	f3bf 8f4f 	dsb	sy
 800a1b0:	e7fe      	b.n	800a1b0 <prvDeleteTCB+0x38>
	}
 800a1b2:	bd10      	pop	{r4, pc}

0800a1b4 <prvIdleTask>:
{
 800a1b4:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800a1b6:	4c13      	ldr	r4, [pc, #76]	; (800a204 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a1b8:	4f13      	ldr	r7, [pc, #76]	; (800a208 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 800a1ba:	4d14      	ldr	r5, [pc, #80]	; (800a20c <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800a1bc:	6823      	ldr	r3, [r4, #0]
 800a1be:	b973      	cbnz	r3, 800a1de <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800a1c0:	4b13      	ldr	r3, [pc, #76]	; (800a210 <prvIdleTask+0x5c>)
 800a1c2:	681b      	ldr	r3, [r3, #0]
 800a1c4:	2b01      	cmp	r3, #1
 800a1c6:	d9f8      	bls.n	800a1ba <prvIdleTask+0x6>
				taskYIELD();
 800a1c8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a1cc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a1d0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a1d4:	f3bf 8f4f 	dsb	sy
 800a1d8:	f3bf 8f6f 	isb	sy
 800a1dc:	e7ed      	b.n	800a1ba <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 800a1de:	f7ff f8c1 	bl	8009364 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a1e2:	68fb      	ldr	r3, [r7, #12]
 800a1e4:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800a1e6:	1d30      	adds	r0, r6, #4
 800a1e8:	f7ff f845 	bl	8009276 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800a1ec:	682b      	ldr	r3, [r5, #0]
 800a1ee:	3b01      	subs	r3, #1
 800a1f0:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 800a1f2:	6823      	ldr	r3, [r4, #0]
 800a1f4:	3b01      	subs	r3, #1
 800a1f6:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 800a1f8:	f7ff f8d4 	bl	80093a4 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 800a1fc:	4630      	mov	r0, r6
 800a1fe:	f7ff ffbb 	bl	800a178 <prvDeleteTCB>
 800a202:	e7db      	b.n	800a1bc <prvIdleTask+0x8>
 800a204:	2001728c 	.word	0x2001728c
 800a208:	200172fc 	.word	0x200172fc
 800a20c:	20017288 	.word	0x20017288
 800a210:	20016e28 	.word	0x20016e28

0800a214 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800a214:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a218:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800a21c:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800a220:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800a222:	4606      	mov	r6, r0
 800a224:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800a226:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800a228:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800a22a:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800a22c:	f016 fe34 	bl	8020e98 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800a230:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800a232:	f1a9 0904 	sub.w	r9, r9, #4
 800a236:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800a238:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 800a23c:	2d00      	cmp	r5, #0
 800a23e:	d042      	beq.n	800a2c6 <prvInitialiseNewTask.constprop.0+0xb2>
 800a240:	1e6b      	subs	r3, r5, #1
 800a242:	f104 0234 	add.w	r2, r4, #52	; 0x34
 800a246:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800a248:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800a24c:	f802 0b01 	strb.w	r0, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 800a250:	b108      	cbz	r0, 800a256 <prvInitialiseNewTask.constprop.0+0x42>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 800a252:	42ab      	cmp	r3, r5
 800a254:	d1f8      	bne.n	800a248 <prvInitialiseNewTask.constprop.0+0x34>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800a256:	2300      	movs	r3, #0
 800a258:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800a25c:	9d08      	ldr	r5, [sp, #32]
 800a25e:	2d37      	cmp	r5, #55	; 0x37
 800a260:	bf28      	it	cs
 800a262:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800a264:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800a268:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800a26a:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800a26c:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800a26e:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800a272:	f7fe ffda 	bl	800922a <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a276:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800a27a:	f104 0018 	add.w	r0, r4, #24
 800a27e:	f7fe ffd4 	bl	800922a <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 800a282:	f8c4 a0b8 	str.w	sl, [r4, #184]	; 0xb8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800a286:	2260      	movs	r2, #96	; 0x60
 800a288:	4651      	mov	r1, sl
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800a28a:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a28c:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800a28e:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800a290:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800a294:	f884 a0bc 	strb.w	sl, [r4, #188]	; 0xbc
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800a298:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800a29c:	f016 fdfc 	bl	8020e98 <memset>
 800a2a0:	4b0a      	ldr	r3, [pc, #40]	; (800a2cc <prvInitialiseNewTask.constprop.0+0xb8>)
 800a2a2:	65e3      	str	r3, [r4, #92]	; 0x5c
 800a2a4:	4b0a      	ldr	r3, [pc, #40]	; (800a2d0 <prvInitialiseNewTask.constprop.0+0xbc>)
 800a2a6:	6623      	str	r3, [r4, #96]	; 0x60
 800a2a8:	4b0a      	ldr	r3, [pc, #40]	; (800a2d4 <prvInitialiseNewTask.constprop.0+0xc0>)
 800a2aa:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800a2ac:	463a      	mov	r2, r7
 800a2ae:	4631      	mov	r1, r6
 800a2b0:	4648      	mov	r0, r9
 800a2b2:	f7ff f82f 	bl	8009314 <pxPortInitialiseStack>
 800a2b6:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800a2b8:	f1b8 0f00 	cmp.w	r8, #0
 800a2bc:	d001      	beq.n	800a2c2 <prvInitialiseNewTask.constprop.0+0xae>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800a2be:	f8c8 4000 	str.w	r4, [r8]
}
 800a2c2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800a2c6:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800a2ca:	e7c7      	b.n	800a25c <prvInitialiseNewTask.constprop.0+0x48>
 800a2cc:	08024650 	.word	0x08024650
 800a2d0:	08024670 	.word	0x08024670
 800a2d4:	08024630 	.word	0x08024630

0800a2d8 <xTaskCreateStatic>:
	{
 800a2d8:	b570      	push	{r4, r5, r6, lr}
 800a2da:	b086      	sub	sp, #24
 800a2dc:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800a2e0:	b945      	cbnz	r5, 800a2f4 <xTaskCreateStatic+0x1c>
 800a2e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a2e6:	f383 8811 	msr	BASEPRI, r3
 800a2ea:	f3bf 8f6f 	isb	sy
 800a2ee:	f3bf 8f4f 	dsb	sy
 800a2f2:	e7fe      	b.n	800a2f2 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 800a2f4:	b944      	cbnz	r4, 800a308 <xTaskCreateStatic+0x30>
 800a2f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a2fa:	f383 8811 	msr	BASEPRI, r3
 800a2fe:	f3bf 8f6f 	isb	sy
 800a302:	f3bf 8f4f 	dsb	sy
 800a306:	e7fe      	b.n	800a306 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 800a308:	26c0      	movs	r6, #192	; 0xc0
 800a30a:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800a30c:	9e05      	ldr	r6, [sp, #20]
 800a30e:	2ec0      	cmp	r6, #192	; 0xc0
 800a310:	d008      	beq.n	800a324 <xTaskCreateStatic+0x4c>
 800a312:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a316:	f383 8811 	msr	BASEPRI, r3
 800a31a:	f3bf 8f6f 	isb	sy
 800a31e:	f3bf 8f4f 	dsb	sy
 800a322:	e7fe      	b.n	800a322 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800a324:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800a326:	2502      	movs	r5, #2
 800a328:	f884 50bd 	strb.w	r5, [r4, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800a32c:	ad04      	add	r5, sp, #16
 800a32e:	9501      	str	r5, [sp, #4]
 800a330:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800a332:	9402      	str	r4, [sp, #8]
 800a334:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800a336:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800a338:	f7ff ff6c 	bl	800a214 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800a33c:	4620      	mov	r0, r4
 800a33e:	f7ff fe51 	bl	8009fe4 <prvAddNewTaskToReadyList>
	}
 800a342:	9804      	ldr	r0, [sp, #16]
 800a344:	b006      	add	sp, #24
 800a346:	bd70      	pop	{r4, r5, r6, pc}

0800a348 <xTaskCreate>:
	{
 800a348:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a34c:	4607      	mov	r7, r0
 800a34e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800a350:	0090      	lsls	r0, r2, #2
	{
 800a352:	4688      	mov	r8, r1
 800a354:	4616      	mov	r6, r2
 800a356:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800a358:	f7fe fe92 	bl	8009080 <pvPortMalloc>
			if( pxStack != NULL )
 800a35c:	4605      	mov	r5, r0
 800a35e:	b1e8      	cbz	r0, 800a39c <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800a360:	20c0      	movs	r0, #192	; 0xc0
 800a362:	f7fe fe8d 	bl	8009080 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800a366:	4604      	mov	r4, r0
 800a368:	b1a8      	cbz	r0, 800a396 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800a36a:	2300      	movs	r3, #0
 800a36c:	f880 30bd 	strb.w	r3, [r0, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800a370:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 800a372:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800a374:	9301      	str	r3, [sp, #4]
 800a376:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800a378:	9002      	str	r0, [sp, #8]
 800a37a:	9300      	str	r3, [sp, #0]
 800a37c:	4632      	mov	r2, r6
 800a37e:	464b      	mov	r3, r9
 800a380:	4641      	mov	r1, r8
 800a382:	4638      	mov	r0, r7
 800a384:	f7ff ff46 	bl	800a214 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800a388:	4620      	mov	r0, r4
 800a38a:	f7ff fe2b 	bl	8009fe4 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800a38e:	2001      	movs	r0, #1
	}
 800a390:	b005      	add	sp, #20
 800a392:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800a396:	4628      	mov	r0, r5
 800a398:	f7fe ff04 	bl	80091a4 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800a39c:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 800a3a0:	e7f6      	b.n	800a390 <xTaskCreate+0x48>
	...

0800a3a4 <vTaskStartScheduler>:
{
 800a3a4:	b510      	push	{r4, lr}
 800a3a6:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800a3a8:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800a3aa:	aa07      	add	r2, sp, #28
 800a3ac:	a906      	add	r1, sp, #24
 800a3ae:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800a3b0:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800a3b4:	f7fe fe28 	bl	8009008 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800a3b8:	9b05      	ldr	r3, [sp, #20]
 800a3ba:	9302      	str	r3, [sp, #8]
 800a3bc:	9b06      	ldr	r3, [sp, #24]
 800a3be:	9a07      	ldr	r2, [sp, #28]
 800a3c0:	4919      	ldr	r1, [pc, #100]	; (800a428 <vTaskStartScheduler+0x84>)
 800a3c2:	481a      	ldr	r0, [pc, #104]	; (800a42c <vTaskStartScheduler+0x88>)
 800a3c4:	e9cd 4300 	strd	r4, r3, [sp]
 800a3c8:	4623      	mov	r3, r4
 800a3ca:	f7ff ff85 	bl	800a2d8 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 800a3ce:	b340      	cbz	r0, 800a422 <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 800a3d0:	f000 fbc4 	bl	800ab5c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800a3d4:	2801      	cmp	r0, #1
 800a3d6:	d119      	bne.n	800a40c <vTaskStartScheduler+0x68>
 800a3d8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a3dc:	f383 8811 	msr	BASEPRI, r3
 800a3e0:	f3bf 8f6f 	isb	sy
 800a3e4:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800a3e8:	4b11      	ldr	r3, [pc, #68]	; (800a430 <vTaskStartScheduler+0x8c>)
 800a3ea:	4a12      	ldr	r2, [pc, #72]	; (800a434 <vTaskStartScheduler+0x90>)
 800a3ec:	681b      	ldr	r3, [r3, #0]
 800a3ee:	3358      	adds	r3, #88	; 0x58
 800a3f0:	6013      	str	r3, [r2, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800a3f2:	4b11      	ldr	r3, [pc, #68]	; (800a438 <vTaskStartScheduler+0x94>)
 800a3f4:	f04f 32ff 	mov.w	r2, #4294967295
 800a3f8:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 800a3fa:	4b10      	ldr	r3, [pc, #64]	; (800a43c <vTaskStartScheduler+0x98>)
 800a3fc:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800a3fe:	4b10      	ldr	r3, [pc, #64]	; (800a440 <vTaskStartScheduler+0x9c>)
 800a400:	601c      	str	r4, [r3, #0]
}
 800a402:	b008      	add	sp, #32
 800a404:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 800a408:	f7ff b83c 	b.w	8009484 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800a40c:	3001      	adds	r0, #1
 800a40e:	d108      	bne.n	800a422 <vTaskStartScheduler+0x7e>
 800a410:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a414:	f383 8811 	msr	BASEPRI, r3
 800a418:	f3bf 8f6f 	isb	sy
 800a41c:	f3bf 8f4f 	dsb	sy
 800a420:	e7fe      	b.n	800a420 <vTaskStartScheduler+0x7c>
}
 800a422:	b008      	add	sp, #32
 800a424:	bd10      	pop	{r4, pc}
 800a426:	bf00      	nop
 800a428:	080237f0 	.word	0x080237f0
 800a42c:	0800a1b5 	.word	0x0800a1b5
 800a430:	20016e1c 	.word	0x20016e1c
 800a434:	20000104 	.word	0x20000104
 800a438:	200172c8 	.word	0x200172c8
 800a43c:	200172e4 	.word	0x200172e4
 800a440:	20017310 	.word	0x20017310

0800a444 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800a444:	4a02      	ldr	r2, [pc, #8]	; (800a450 <vTaskSuspendAll+0xc>)
 800a446:	6813      	ldr	r3, [r2, #0]
 800a448:	3301      	adds	r3, #1
 800a44a:	6013      	str	r3, [r2, #0]
}
 800a44c:	4770      	bx	lr
 800a44e:	bf00      	nop
 800a450:	20017294 	.word	0x20017294

0800a454 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800a454:	4b01      	ldr	r3, [pc, #4]	; (800a45c <xTaskGetTickCount+0x8>)
 800a456:	6818      	ldr	r0, [r3, #0]
}
 800a458:	4770      	bx	lr
 800a45a:	bf00      	nop
 800a45c:	20017310 	.word	0x20017310

0800a460 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a460:	4b3f      	ldr	r3, [pc, #252]	; (800a560 <xTaskIncrementTick+0x100>)
 800a462:	681b      	ldr	r3, [r3, #0]
{
 800a464:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a468:	2b00      	cmp	r3, #0
 800a46a:	d173      	bne.n	800a554 <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800a46c:	4b3d      	ldr	r3, [pc, #244]	; (800a564 <xTaskIncrementTick+0x104>)
 800a46e:	681d      	ldr	r5, [r3, #0]
 800a470:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 800a472:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800a474:	b9bd      	cbnz	r5, 800a4a6 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 800a476:	4b3c      	ldr	r3, [pc, #240]	; (800a568 <xTaskIncrementTick+0x108>)
 800a478:	681a      	ldr	r2, [r3, #0]
 800a47a:	6812      	ldr	r2, [r2, #0]
 800a47c:	b142      	cbz	r2, 800a490 <xTaskIncrementTick+0x30>
 800a47e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a482:	f383 8811 	msr	BASEPRI, r3
 800a486:	f3bf 8f6f 	isb	sy
 800a48a:	f3bf 8f4f 	dsb	sy
 800a48e:	e7fe      	b.n	800a48e <xTaskIncrementTick+0x2e>
 800a490:	4a36      	ldr	r2, [pc, #216]	; (800a56c <xTaskIncrementTick+0x10c>)
 800a492:	6819      	ldr	r1, [r3, #0]
 800a494:	6810      	ldr	r0, [r2, #0]
 800a496:	6018      	str	r0, [r3, #0]
 800a498:	6011      	str	r1, [r2, #0]
 800a49a:	4a35      	ldr	r2, [pc, #212]	; (800a570 <xTaskIncrementTick+0x110>)
 800a49c:	6813      	ldr	r3, [r2, #0]
 800a49e:	3301      	adds	r3, #1
 800a4a0:	6013      	str	r3, [r2, #0]
 800a4a2:	f7ff fe57 	bl	800a154 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800a4a6:	4e33      	ldr	r6, [pc, #204]	; (800a574 <xTaskIncrementTick+0x114>)
 800a4a8:	4f33      	ldr	r7, [pc, #204]	; (800a578 <xTaskIncrementTick+0x118>)
 800a4aa:	6833      	ldr	r3, [r6, #0]
 800a4ac:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 800a584 <xTaskIncrementTick+0x124>
 800a4b0:	42ab      	cmp	r3, r5
BaseType_t xSwitchRequired = pdFALSE;
 800a4b2:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 800a4b6:	d911      	bls.n	800a4dc <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800a4b8:	f8d8 3000 	ldr.w	r3, [r8]
 800a4bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a4be:	2214      	movs	r2, #20
 800a4c0:	4353      	muls	r3, r2
 800a4c2:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 800a4c4:	2b02      	cmp	r3, #2
 800a4c6:	bf28      	it	cs
 800a4c8:	2401      	movcs	r4, #1
		if( xYieldPending != pdFALSE )
 800a4ca:	4b2c      	ldr	r3, [pc, #176]	; (800a57c <xTaskIncrementTick+0x11c>)
 800a4cc:	681b      	ldr	r3, [r3, #0]
			xSwitchRequired = pdTRUE;
 800a4ce:	2b00      	cmp	r3, #0
}
 800a4d0:	bf0c      	ite	eq
 800a4d2:	4620      	moveq	r0, r4
 800a4d4:	2001      	movne	r0, #1
 800a4d6:	b003      	add	sp, #12
 800a4d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800a4dc:	f8df 9088 	ldr.w	r9, [pc, #136]	; 800a568 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 800a4e0:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 800a588 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800a4e4:	f8d9 3000 	ldr.w	r3, [r9]
 800a4e8:	681b      	ldr	r3, [r3, #0]
 800a4ea:	b91b      	cbnz	r3, 800a4f4 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a4ec:	f04f 33ff 	mov.w	r3, #4294967295
 800a4f0:	6033      	str	r3, [r6, #0]
					break;
 800a4f2:	e7e1      	b.n	800a4b8 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a4f4:	f8d9 3000 	ldr.w	r3, [r9]
 800a4f8:	68db      	ldr	r3, [r3, #12]
 800a4fa:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800a4fe:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 800a502:	4295      	cmp	r5, r2
 800a504:	d201      	bcs.n	800a50a <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 800a506:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800a508:	e7d6      	b.n	800a4b8 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800a50a:	f10b 0104 	add.w	r1, fp, #4
 800a50e:	4608      	mov	r0, r1
 800a510:	9101      	str	r1, [sp, #4]
 800a512:	f7fe feb0 	bl	8009276 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800a516:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 800a51a:	9901      	ldr	r1, [sp, #4]
 800a51c:	b122      	cbz	r2, 800a528 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800a51e:	f10b 0018 	add.w	r0, fp, #24
 800a522:	f7fe fea8 	bl	8009276 <uxListRemove>
 800a526:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800a528:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 800a52c:	f8da 2000 	ldr.w	r2, [sl]
 800a530:	2314      	movs	r3, #20
 800a532:	4290      	cmp	r0, r2
 800a534:	bf88      	it	hi
 800a536:	f8ca 0000 	strhi.w	r0, [sl]
 800a53a:	fb03 7000 	mla	r0, r3, r0, r7
 800a53e:	f7fe fe77 	bl	8009230 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800a542:	f8d8 1000 	ldr.w	r1, [r8]
 800a546:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 800a54a:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 800a54c:	429a      	cmp	r2, r3
 800a54e:	bf28      	it	cs
 800a550:	2401      	movcs	r4, #1
 800a552:	e7c7      	b.n	800a4e4 <xTaskIncrementTick+0x84>
		++uxPendedTicks;
 800a554:	4a0a      	ldr	r2, [pc, #40]	; (800a580 <xTaskIncrementTick+0x120>)
 800a556:	6813      	ldr	r3, [r2, #0]
 800a558:	3301      	adds	r3, #1
 800a55a:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 800a55c:	2400      	movs	r4, #0
 800a55e:	e7b4      	b.n	800a4ca <xTaskIncrementTick+0x6a>
 800a560:	20017294 	.word	0x20017294
 800a564:	20017310 	.word	0x20017310
 800a568:	20016e20 	.word	0x20016e20
 800a56c:	20016e24 	.word	0x20016e24
 800a570:	200172cc 	.word	0x200172cc
 800a574:	200172c8 	.word	0x200172c8
 800a578:	20016e28 	.word	0x20016e28
 800a57c:	20017314 	.word	0x20017314
 800a580:	20017290 	.word	0x20017290
 800a584:	20016e1c 	.word	0x20016e1c
 800a588:	2001729c 	.word	0x2001729c

0800a58c <xTaskResumeAll>:
{
 800a58c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 800a58e:	4c31      	ldr	r4, [pc, #196]	; (800a654 <xTaskResumeAll+0xc8>)
 800a590:	6823      	ldr	r3, [r4, #0]
 800a592:	b943      	cbnz	r3, 800a5a6 <xTaskResumeAll+0x1a>
 800a594:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a598:	f383 8811 	msr	BASEPRI, r3
 800a59c:	f3bf 8f6f 	isb	sy
 800a5a0:	f3bf 8f4f 	dsb	sy
 800a5a4:	e7fe      	b.n	800a5a4 <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 800a5a6:	f7fe fedd 	bl	8009364 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800a5aa:	6823      	ldr	r3, [r4, #0]
 800a5ac:	3b01      	subs	r3, #1
 800a5ae:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a5b0:	6824      	ldr	r4, [r4, #0]
 800a5b2:	b12c      	cbz	r4, 800a5c0 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 800a5b4:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800a5b6:	f7fe fef5 	bl	80093a4 <vPortExitCritical>
}
 800a5ba:	4620      	mov	r0, r4
 800a5bc:	b003      	add	sp, #12
 800a5be:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800a5c0:	4b25      	ldr	r3, [pc, #148]	; (800a658 <xTaskResumeAll+0xcc>)
 800a5c2:	681b      	ldr	r3, [r3, #0]
 800a5c4:	2b00      	cmp	r3, #0
 800a5c6:	d0f5      	beq.n	800a5b4 <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800a5c8:	4d24      	ldr	r5, [pc, #144]	; (800a65c <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 800a5ca:	4e25      	ldr	r6, [pc, #148]	; (800a660 <xTaskResumeAll+0xd4>)
 800a5cc:	4f25      	ldr	r7, [pc, #148]	; (800a664 <xTaskResumeAll+0xd8>)
 800a5ce:	e01e      	b.n	800a60e <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a5d0:	68eb      	ldr	r3, [r5, #12]
 800a5d2:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800a5d4:	f104 0018 	add.w	r0, r4, #24
 800a5d8:	f7fe fe4d 	bl	8009276 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800a5dc:	1d21      	adds	r1, r4, #4
 800a5de:	4608      	mov	r0, r1
 800a5e0:	9101      	str	r1, [sp, #4]
 800a5e2:	f7fe fe48 	bl	8009276 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800a5e6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a5e8:	6832      	ldr	r2, [r6, #0]
 800a5ea:	9901      	ldr	r1, [sp, #4]
 800a5ec:	2014      	movs	r0, #20
 800a5ee:	4293      	cmp	r3, r2
 800a5f0:	fb00 7003 	mla	r0, r0, r3, r7
 800a5f4:	bf88      	it	hi
 800a5f6:	6033      	strhi	r3, [r6, #0]
 800a5f8:	f7fe fe1a 	bl	8009230 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800a5fc:	4b1a      	ldr	r3, [pc, #104]	; (800a668 <xTaskResumeAll+0xdc>)
 800a5fe:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a600:	681b      	ldr	r3, [r3, #0]
 800a602:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a604:	429a      	cmp	r2, r3
 800a606:	d302      	bcc.n	800a60e <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 800a608:	4b18      	ldr	r3, [pc, #96]	; (800a66c <xTaskResumeAll+0xe0>)
 800a60a:	2201      	movs	r2, #1
 800a60c:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800a60e:	682b      	ldr	r3, [r5, #0]
 800a610:	2b00      	cmp	r3, #0
 800a612:	d1dd      	bne.n	800a5d0 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 800a614:	b10c      	cbz	r4, 800a61a <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 800a616:	f7ff fd9d 	bl	800a154 <prvResetNextTaskUnblockTime>
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 800a61a:	4d15      	ldr	r5, [pc, #84]	; (800a670 <xTaskResumeAll+0xe4>)
 800a61c:	682c      	ldr	r4, [r5, #0]
					if( uxPendedCounts > ( UBaseType_t ) 0U )
 800a61e:	b144      	cbz	r4, 800a632 <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 800a620:	4e12      	ldr	r6, [pc, #72]	; (800a66c <xTaskResumeAll+0xe0>)
 800a622:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 800a624:	f7ff ff1c 	bl	800a460 <xTaskIncrementTick>
 800a628:	b100      	cbz	r0, 800a62c <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 800a62a:	6037      	str	r7, [r6, #0]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 800a62c:	3c01      	subs	r4, #1
 800a62e:	d1f9      	bne.n	800a624 <xTaskResumeAll+0x98>
						uxPendedTicks = 0;
 800a630:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800a632:	4b0e      	ldr	r3, [pc, #56]	; (800a66c <xTaskResumeAll+0xe0>)
 800a634:	681b      	ldr	r3, [r3, #0]
 800a636:	2b00      	cmp	r3, #0
 800a638:	d0bc      	beq.n	800a5b4 <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 800a63a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a63e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a642:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a646:	f3bf 8f4f 	dsb	sy
 800a64a:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800a64e:	2401      	movs	r4, #1
 800a650:	e7b1      	b.n	800a5b6 <xTaskResumeAll+0x2a>
 800a652:	bf00      	nop
 800a654:	20017294 	.word	0x20017294
 800a658:	20017288 	.word	0x20017288
 800a65c:	200172d0 	.word	0x200172d0
 800a660:	2001729c 	.word	0x2001729c
 800a664:	20016e28 	.word	0x20016e28
 800a668:	20016e1c 	.word	0x20016e1c
 800a66c:	20017314 	.word	0x20017314
 800a670:	20017290 	.word	0x20017290

0800a674 <vTaskDelay>:
	{
 800a674:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800a676:	b950      	cbnz	r0, 800a68e <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800a678:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a67c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a680:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a684:	f3bf 8f4f 	dsb	sy
 800a688:	f3bf 8f6f 	isb	sy
	}
 800a68c:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800a68e:	4b0a      	ldr	r3, [pc, #40]	; (800a6b8 <vTaskDelay+0x44>)
 800a690:	6819      	ldr	r1, [r3, #0]
 800a692:	b141      	cbz	r1, 800a6a6 <vTaskDelay+0x32>
 800a694:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a698:	f383 8811 	msr	BASEPRI, r3
 800a69c:	f3bf 8f6f 	isb	sy
 800a6a0:	f3bf 8f4f 	dsb	sy
 800a6a4:	e7fe      	b.n	800a6a4 <vTaskDelay+0x30>
			vTaskSuspendAll();
 800a6a6:	f7ff fecd 	bl	800a444 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 800a6aa:	f7ff fd1b 	bl	800a0e4 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 800a6ae:	f7ff ff6d 	bl	800a58c <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 800a6b2:	2800      	cmp	r0, #0
 800a6b4:	d0e0      	beq.n	800a678 <vTaskDelay+0x4>
 800a6b6:	e7e9      	b.n	800a68c <vTaskDelay+0x18>
 800a6b8:	20017294 	.word	0x20017294

0800a6bc <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800a6bc:	4b19      	ldr	r3, [pc, #100]	; (800a724 <vTaskSwitchContext+0x68>)
 800a6be:	681a      	ldr	r2, [r3, #0]
 800a6c0:	4b19      	ldr	r3, [pc, #100]	; (800a728 <vTaskSwitchContext+0x6c>)
{
 800a6c2:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800a6c4:	b112      	cbz	r2, 800a6cc <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 800a6c6:	2201      	movs	r2, #1
 800a6c8:	601a      	str	r2, [r3, #0]
}
 800a6ca:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a6cc:	4d17      	ldr	r5, [pc, #92]	; (800a72c <vTaskSwitchContext+0x70>)
		xYieldPending = pdFALSE;
 800a6ce:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a6d0:	682a      	ldr	r2, [r5, #0]
 800a6d2:	4917      	ldr	r1, [pc, #92]	; (800a730 <vTaskSwitchContext+0x74>)
 800a6d4:	2614      	movs	r6, #20
 800a6d6:	fb06 f302 	mul.w	r3, r6, r2
 800a6da:	18c8      	adds	r0, r1, r3
 800a6dc:	58cc      	ldr	r4, [r1, r3]
 800a6de:	b1ac      	cbz	r4, 800a70c <vTaskSwitchContext+0x50>
 800a6e0:	6844      	ldr	r4, [r0, #4]
 800a6e2:	3308      	adds	r3, #8
 800a6e4:	6864      	ldr	r4, [r4, #4]
 800a6e6:	6044      	str	r4, [r0, #4]
 800a6e8:	440b      	add	r3, r1
 800a6ea:	429c      	cmp	r4, r3
 800a6ec:	bf04      	itt	eq
 800a6ee:	6863      	ldreq	r3, [r4, #4]
 800a6f0:	6043      	streq	r3, [r0, #4]
 800a6f2:	2314      	movs	r3, #20
 800a6f4:	fb03 1102 	mla	r1, r3, r2, r1
 800a6f8:	684b      	ldr	r3, [r1, #4]
 800a6fa:	68d9      	ldr	r1, [r3, #12]
 800a6fc:	4b0d      	ldr	r3, [pc, #52]	; (800a734 <vTaskSwitchContext+0x78>)
 800a6fe:	6019      	str	r1, [r3, #0]
 800a700:	602a      	str	r2, [r5, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800a702:	681b      	ldr	r3, [r3, #0]
 800a704:	4a0c      	ldr	r2, [pc, #48]	; (800a738 <vTaskSwitchContext+0x7c>)
 800a706:	3358      	adds	r3, #88	; 0x58
 800a708:	6013      	str	r3, [r2, #0]
}
 800a70a:	e7de      	b.n	800a6ca <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a70c:	b942      	cbnz	r2, 800a720 <vTaskSwitchContext+0x64>
 800a70e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a712:	f383 8811 	msr	BASEPRI, r3
 800a716:	f3bf 8f6f 	isb	sy
 800a71a:	f3bf 8f4f 	dsb	sy
 800a71e:	e7fe      	b.n	800a71e <vTaskSwitchContext+0x62>
 800a720:	3a01      	subs	r2, #1
 800a722:	e7d8      	b.n	800a6d6 <vTaskSwitchContext+0x1a>
 800a724:	20017294 	.word	0x20017294
 800a728:	20017314 	.word	0x20017314
 800a72c:	2001729c 	.word	0x2001729c
 800a730:	20016e28 	.word	0x20016e28
 800a734:	20016e1c 	.word	0x20016e1c
 800a738:	20000104 	.word	0x20000104

0800a73c <vTaskPlaceOnEventList>:
{
 800a73c:	b510      	push	{r4, lr}
 800a73e:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 800a740:	b940      	cbnz	r0, 800a754 <vTaskPlaceOnEventList+0x18>
 800a742:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a746:	f383 8811 	msr	BASEPRI, r3
 800a74a:	f3bf 8f6f 	isb	sy
 800a74e:	f3bf 8f4f 	dsb	sy
 800a752:	e7fe      	b.n	800a752 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a754:	4b05      	ldr	r3, [pc, #20]	; (800a76c <vTaskPlaceOnEventList+0x30>)
 800a756:	6819      	ldr	r1, [r3, #0]
 800a758:	3118      	adds	r1, #24
 800a75a:	f7fe fd75 	bl	8009248 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a75e:	4620      	mov	r0, r4
 800a760:	2101      	movs	r1, #1
}
 800a762:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a766:	f7ff bcbd 	b.w	800a0e4 <prvAddCurrentTaskToDelayedList>
 800a76a:	bf00      	nop
 800a76c:	20016e1c 	.word	0x20016e1c

0800a770 <vTaskPlaceOnEventListRestricted>:
	{
 800a770:	b538      	push	{r3, r4, r5, lr}
 800a772:	460d      	mov	r5, r1
 800a774:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800a776:	b940      	cbnz	r0, 800a78a <vTaskPlaceOnEventListRestricted+0x1a>
 800a778:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a77c:	f383 8811 	msr	BASEPRI, r3
 800a780:	f3bf 8f6f 	isb	sy
 800a784:	f3bf 8f4f 	dsb	sy
 800a788:	e7fe      	b.n	800a788 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a78a:	4b07      	ldr	r3, [pc, #28]	; (800a7a8 <vTaskPlaceOnEventListRestricted+0x38>)
 800a78c:	6819      	ldr	r1, [r3, #0]
 800a78e:	3118      	adds	r1, #24
 800a790:	f7fe fd4e 	bl	8009230 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800a794:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a796:	4621      	mov	r1, r4
 800a798:	bf0c      	ite	eq
 800a79a:	4628      	moveq	r0, r5
 800a79c:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800a7a0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a7a4:	f7ff bc9e 	b.w	800a0e4 <prvAddCurrentTaskToDelayedList>
 800a7a8:	20016e1c 	.word	0x20016e1c

0800a7ac <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a7ac:	68c3      	ldr	r3, [r0, #12]
{
 800a7ae:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a7b0:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800a7b2:	b944      	cbnz	r4, 800a7c6 <xTaskRemoveFromEventList+0x1a>
 800a7b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a7b8:	f383 8811 	msr	BASEPRI, r3
 800a7bc:	f3bf 8f6f 	isb	sy
 800a7c0:	f3bf 8f4f 	dsb	sy
 800a7c4:	e7fe      	b.n	800a7c4 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800a7c6:	f104 0118 	add.w	r1, r4, #24
 800a7ca:	4608      	mov	r0, r1
 800a7cc:	9101      	str	r1, [sp, #4]
 800a7ce:	f7fe fd52 	bl	8009276 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a7d2:	4b12      	ldr	r3, [pc, #72]	; (800a81c <xTaskRemoveFromEventList+0x70>)
 800a7d4:	9901      	ldr	r1, [sp, #4]
 800a7d6:	681b      	ldr	r3, [r3, #0]
 800a7d8:	b9eb      	cbnz	r3, 800a816 <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800a7da:	1d21      	adds	r1, r4, #4
 800a7dc:	4608      	mov	r0, r1
 800a7de:	9101      	str	r1, [sp, #4]
 800a7e0:	f7fe fd49 	bl	8009276 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800a7e4:	4a0e      	ldr	r2, [pc, #56]	; (800a820 <xTaskRemoveFromEventList+0x74>)
 800a7e6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a7e8:	6810      	ldr	r0, [r2, #0]
 800a7ea:	9901      	ldr	r1, [sp, #4]
 800a7ec:	4283      	cmp	r3, r0
 800a7ee:	bf88      	it	hi
 800a7f0:	6013      	strhi	r3, [r2, #0]
 800a7f2:	4a0c      	ldr	r2, [pc, #48]	; (800a824 <xTaskRemoveFromEventList+0x78>)
 800a7f4:	2014      	movs	r0, #20
 800a7f6:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800a7fa:	f7fe fd19 	bl	8009230 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800a7fe:	4b0a      	ldr	r3, [pc, #40]	; (800a828 <xTaskRemoveFromEventList+0x7c>)
 800a800:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a802:	681b      	ldr	r3, [r3, #0]
 800a804:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a806:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800a808:	bf85      	ittet	hi
 800a80a:	4b08      	ldrhi	r3, [pc, #32]	; (800a82c <xTaskRemoveFromEventList+0x80>)
 800a80c:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800a80e:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800a810:	6018      	strhi	r0, [r3, #0]
}
 800a812:	b002      	add	sp, #8
 800a814:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800a816:	4806      	ldr	r0, [pc, #24]	; (800a830 <xTaskRemoveFromEventList+0x84>)
 800a818:	e7ef      	b.n	800a7fa <xTaskRemoveFromEventList+0x4e>
 800a81a:	bf00      	nop
 800a81c:	20017294 	.word	0x20017294
 800a820:	2001729c 	.word	0x2001729c
 800a824:	20016e28 	.word	0x20016e28
 800a828:	20016e1c 	.word	0x20016e1c
 800a82c:	20017314 	.word	0x20017314
 800a830:	200172d0 	.word	0x200172d0

0800a834 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800a834:	4b03      	ldr	r3, [pc, #12]	; (800a844 <vTaskInternalSetTimeOutState+0x10>)
 800a836:	681b      	ldr	r3, [r3, #0]
 800a838:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800a83a:	4b03      	ldr	r3, [pc, #12]	; (800a848 <vTaskInternalSetTimeOutState+0x14>)
 800a83c:	681b      	ldr	r3, [r3, #0]
 800a83e:	6043      	str	r3, [r0, #4]
}
 800a840:	4770      	bx	lr
 800a842:	bf00      	nop
 800a844:	200172cc 	.word	0x200172cc
 800a848:	20017310 	.word	0x20017310

0800a84c <xTaskCheckForTimeOut>:
{
 800a84c:	b570      	push	{r4, r5, r6, lr}
 800a84e:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 800a850:	4605      	mov	r5, r0
 800a852:	b940      	cbnz	r0, 800a866 <xTaskCheckForTimeOut+0x1a>
 800a854:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a858:	f383 8811 	msr	BASEPRI, r3
 800a85c:	f3bf 8f6f 	isb	sy
 800a860:	f3bf 8f4f 	dsb	sy
 800a864:	e7fe      	b.n	800a864 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800a866:	b941      	cbnz	r1, 800a87a <xTaskCheckForTimeOut+0x2e>
 800a868:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a86c:	f383 8811 	msr	BASEPRI, r3
 800a870:	f3bf 8f6f 	isb	sy
 800a874:	f3bf 8f4f 	dsb	sy
 800a878:	e7fe      	b.n	800a878 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800a87a:	f7fe fd73 	bl	8009364 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800a87e:	4b0f      	ldr	r3, [pc, #60]	; (800a8bc <xTaskCheckForTimeOut+0x70>)
 800a880:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800a882:	6823      	ldr	r3, [r4, #0]
 800a884:	1c5a      	adds	r2, r3, #1
 800a886:	d010      	beq.n	800a8aa <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a888:	480d      	ldr	r0, [pc, #52]	; (800a8c0 <xTaskCheckForTimeOut+0x74>)
 800a88a:	682e      	ldr	r6, [r5, #0]
 800a88c:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a88e:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a890:	4286      	cmp	r6, r0
 800a892:	d001      	beq.n	800a898 <xTaskCheckForTimeOut+0x4c>
 800a894:	428a      	cmp	r2, r1
 800a896:	d90f      	bls.n	800a8b8 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a898:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800a89a:	4283      	cmp	r3, r0
 800a89c:	d90a      	bls.n	800a8b4 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 800a89e:	1a5b      	subs	r3, r3, r1
 800a8a0:	4413      	add	r3, r2
 800a8a2:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800a8a4:	4628      	mov	r0, r5
 800a8a6:	f7ff ffc5 	bl	800a834 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800a8aa:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800a8ac:	f7fe fd7a 	bl	80093a4 <vPortExitCritical>
}
 800a8b0:	4620      	mov	r0, r4
 800a8b2:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 800a8b4:	2300      	movs	r3, #0
 800a8b6:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800a8b8:	2401      	movs	r4, #1
 800a8ba:	e7f7      	b.n	800a8ac <xTaskCheckForTimeOut+0x60>
 800a8bc:	20017310 	.word	0x20017310
 800a8c0:	200172cc 	.word	0x200172cc

0800a8c4 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800a8c4:	4b01      	ldr	r3, [pc, #4]	; (800a8cc <vTaskMissedYield+0x8>)
 800a8c6:	2201      	movs	r2, #1
 800a8c8:	601a      	str	r2, [r3, #0]
}
 800a8ca:	4770      	bx	lr
 800a8cc:	20017314 	.word	0x20017314

0800a8d0 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800a8d0:	4b05      	ldr	r3, [pc, #20]	; (800a8e8 <xTaskGetSchedulerState+0x18>)
 800a8d2:	681b      	ldr	r3, [r3, #0]
 800a8d4:	b133      	cbz	r3, 800a8e4 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a8d6:	4b05      	ldr	r3, [pc, #20]	; (800a8ec <xTaskGetSchedulerState+0x1c>)
 800a8d8:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
 800a8da:	2b00      	cmp	r3, #0
 800a8dc:	bf0c      	ite	eq
 800a8de:	2002      	moveq	r0, #2
 800a8e0:	2000      	movne	r0, #0
 800a8e2:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800a8e4:	2001      	movs	r0, #1
	}
 800a8e6:	4770      	bx	lr
 800a8e8:	200172e4 	.word	0x200172e4
 800a8ec:	20017294 	.word	0x20017294

0800a8f0 <xTaskPriorityInherit>:
	{
 800a8f0:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800a8f2:	4604      	mov	r4, r0
 800a8f4:	b348      	cbz	r0, 800a94a <xTaskPriorityInherit+0x5a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800a8f6:	4d1c      	ldr	r5, [pc, #112]	; (800a968 <xTaskPriorityInherit+0x78>)
 800a8f8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800a8fa:	682a      	ldr	r2, [r5, #0]
 800a8fc:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800a8fe:	4293      	cmp	r3, r2
 800a900:	d229      	bcs.n	800a956 <xTaskPriorityInherit+0x66>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a902:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a904:	4e19      	ldr	r6, [pc, #100]	; (800a96c <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a906:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a908:	bfa1      	itttt	ge
 800a90a:	682a      	ldrge	r2, [r5, #0]
 800a90c:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 800a90e:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 800a912:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a914:	2214      	movs	r2, #20
 800a916:	fb02 6303 	mla	r3, r2, r3, r6
 800a91a:	6942      	ldr	r2, [r0, #20]
 800a91c:	429a      	cmp	r2, r3
 800a91e:	d116      	bne.n	800a94e <xTaskPriorityInherit+0x5e>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a920:	1d01      	adds	r1, r0, #4
 800a922:	4608      	mov	r0, r1
 800a924:	9101      	str	r1, [sp, #4]
 800a926:	f7fe fca6 	bl	8009276 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a92a:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a92c:	4a10      	ldr	r2, [pc, #64]	; (800a970 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a92e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a930:	6810      	ldr	r0, [r2, #0]
 800a932:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a934:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a936:	4283      	cmp	r3, r0
 800a938:	f04f 0014 	mov.w	r0, #20
 800a93c:	fb00 6003 	mla	r0, r0, r3, r6
 800a940:	bf88      	it	hi
 800a942:	6013      	strhi	r3, [r2, #0]
 800a944:	f7fe fc74 	bl	8009230 <vListInsertEnd>
				xReturn = pdTRUE;
 800a948:	2001      	movs	r0, #1
	}
 800a94a:	b002      	add	sp, #8
 800a94c:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a94e:	682b      	ldr	r3, [r5, #0]
 800a950:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a952:	62c3      	str	r3, [r0, #44]	; 0x2c
 800a954:	e7f8      	b.n	800a948 <xTaskPriorityInherit+0x58>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800a956:	682b      	ldr	r3, [r5, #0]
 800a958:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800a95a:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 800a95c:	42a0      	cmp	r0, r4
 800a95e:	bf2c      	ite	cs
 800a960:	2000      	movcs	r0, #0
 800a962:	2001      	movcc	r0, #1
 800a964:	e7f1      	b.n	800a94a <xTaskPriorityInherit+0x5a>
 800a966:	bf00      	nop
 800a968:	20016e1c 	.word	0x20016e1c
 800a96c:	20016e28 	.word	0x20016e28
 800a970:	2001729c 	.word	0x2001729c

0800a974 <xTaskPriorityDisinherit>:
	{
 800a974:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 800a976:	b910      	cbnz	r0, 800a97e <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 800a978:	2000      	movs	r0, #0
	}
 800a97a:	b002      	add	sp, #8
 800a97c:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800a97e:	4b1c      	ldr	r3, [pc, #112]	; (800a9f0 <xTaskPriorityDisinherit+0x7c>)
 800a980:	681c      	ldr	r4, [r3, #0]
 800a982:	4284      	cmp	r4, r0
 800a984:	d008      	beq.n	800a998 <xTaskPriorityDisinherit+0x24>
 800a986:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a98a:	f383 8811 	msr	BASEPRI, r3
 800a98e:	f3bf 8f6f 	isb	sy
 800a992:	f3bf 8f4f 	dsb	sy
 800a996:	e7fe      	b.n	800a996 <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 800a998:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800a99a:	b943      	cbnz	r3, 800a9ae <xTaskPriorityDisinherit+0x3a>
 800a99c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a9a0:	f383 8811 	msr	BASEPRI, r3
 800a9a4:	f3bf 8f6f 	isb	sy
 800a9a8:	f3bf 8f4f 	dsb	sy
 800a9ac:	e7fe      	b.n	800a9ac <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a9ae:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800a9b0:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800a9b2:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a9b4:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800a9b6:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a9b8:	d0de      	beq.n	800a978 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800a9ba:	2b00      	cmp	r3, #0
 800a9bc:	d1dc      	bne.n	800a978 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a9be:	1d21      	adds	r1, r4, #4
 800a9c0:	4608      	mov	r0, r1
 800a9c2:	9101      	str	r1, [sp, #4]
 800a9c4:	f7fe fc57 	bl	8009276 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a9c8:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800a9ca:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a9cc:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a9ce:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 800a9d2:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800a9d4:	4a07      	ldr	r2, [pc, #28]	; (800a9f4 <xTaskPriorityDisinherit+0x80>)
 800a9d6:	6810      	ldr	r0, [r2, #0]
 800a9d8:	4283      	cmp	r3, r0
 800a9da:	bf88      	it	hi
 800a9dc:	6013      	strhi	r3, [r2, #0]
 800a9de:	4a06      	ldr	r2, [pc, #24]	; (800a9f8 <xTaskPriorityDisinherit+0x84>)
 800a9e0:	2014      	movs	r0, #20
 800a9e2:	fb00 2003 	mla	r0, r0, r3, r2
 800a9e6:	f7fe fc23 	bl	8009230 <vListInsertEnd>
					xReturn = pdTRUE;
 800a9ea:	2001      	movs	r0, #1
		return xReturn;
 800a9ec:	e7c5      	b.n	800a97a <xTaskPriorityDisinherit+0x6>
 800a9ee:	bf00      	nop
 800a9f0:	20016e1c 	.word	0x20016e1c
 800a9f4:	2001729c 	.word	0x2001729c
 800a9f8:	20016e28 	.word	0x20016e28

0800a9fc <vTaskPriorityDisinheritAfterTimeout>:
	{
 800a9fc:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800a9fe:	4604      	mov	r4, r0
 800aa00:	2800      	cmp	r0, #0
 800aa02:	d044      	beq.n	800aa8e <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 800aa04:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800aa06:	b942      	cbnz	r2, 800aa1a <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800aa08:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aa0c:	f383 8811 	msr	BASEPRI, r3
 800aa10:	f3bf 8f6f 	isb	sy
 800aa14:	f3bf 8f4f 	dsb	sy
 800aa18:	e7fe      	b.n	800aa18 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800aa1a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 800aa1c:	4299      	cmp	r1, r3
 800aa1e:	bf38      	it	cc
 800aa20:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800aa22:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800aa24:	428b      	cmp	r3, r1
 800aa26:	d032      	beq.n	800aa8e <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800aa28:	2a01      	cmp	r2, #1
 800aa2a:	d130      	bne.n	800aa8e <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 800aa2c:	4a19      	ldr	r2, [pc, #100]	; (800aa94 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800aa2e:	6812      	ldr	r2, [r2, #0]
 800aa30:	4282      	cmp	r2, r0
 800aa32:	d108      	bne.n	800aa46 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800aa34:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aa38:	f383 8811 	msr	BASEPRI, r3
 800aa3c:	f3bf 8f6f 	isb	sy
 800aa40:	f3bf 8f4f 	dsb	sy
 800aa44:	e7fe      	b.n	800aa44 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800aa46:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800aa48:	4d13      	ldr	r5, [pc, #76]	; (800aa98 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 800aa4a:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800aa4c:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800aa4e:	f04f 0214 	mov.w	r2, #20
 800aa52:	fb02 5303 	mla	r3, r2, r3, r5
 800aa56:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800aa58:	bfa4      	itt	ge
 800aa5a:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 800aa5e:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800aa60:	429a      	cmp	r2, r3
 800aa62:	d114      	bne.n	800aa8e <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800aa64:	1d01      	adds	r1, r0, #4
 800aa66:	4608      	mov	r0, r1
 800aa68:	9101      	str	r1, [sp, #4]
 800aa6a:	f7fe fc04 	bl	8009276 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800aa6e:	4a0b      	ldr	r2, [pc, #44]	; (800aa9c <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 800aa70:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800aa72:	6810      	ldr	r0, [r2, #0]
 800aa74:	9901      	ldr	r1, [sp, #4]
 800aa76:	4283      	cmp	r3, r0
 800aa78:	f04f 0014 	mov.w	r0, #20
 800aa7c:	fb00 5003 	mla	r0, r0, r3, r5
 800aa80:	bf88      	it	hi
 800aa82:	6013      	strhi	r3, [r2, #0]
	}
 800aa84:	b003      	add	sp, #12
 800aa86:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800aa8a:	f7fe bbd1 	b.w	8009230 <vListInsertEnd>
	}
 800aa8e:	b003      	add	sp, #12
 800aa90:	bd30      	pop	{r4, r5, pc}
 800aa92:	bf00      	nop
 800aa94:	20016e1c 	.word	0x20016e1c
 800aa98:	20016e28 	.word	0x20016e28
 800aa9c:	2001729c 	.word	0x2001729c

0800aaa0 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800aaa0:	4b04      	ldr	r3, [pc, #16]	; (800aab4 <pvTaskIncrementMutexHeldCount+0x14>)
 800aaa2:	681a      	ldr	r2, [r3, #0]
 800aaa4:	b11a      	cbz	r2, 800aaae <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800aaa6:	6819      	ldr	r1, [r3, #0]
 800aaa8:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800aaaa:	3201      	adds	r2, #1
 800aaac:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800aaae:	6818      	ldr	r0, [r3, #0]
	}
 800aab0:	4770      	bx	lr
 800aab2:	bf00      	nop
 800aab4:	20016e1c 	.word	0x20016e1c

0800aab8 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800aab8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800aaba:	4c11      	ldr	r4, [pc, #68]	; (800ab00 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800aabc:	f7fe fc52 	bl	8009364 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800aac0:	6825      	ldr	r5, [r4, #0]
 800aac2:	b9bd      	cbnz	r5, 800aaf4 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800aac4:	4f0f      	ldr	r7, [pc, #60]	; (800ab04 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800aac6:	4e10      	ldr	r6, [pc, #64]	; (800ab08 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800aac8:	4638      	mov	r0, r7
 800aaca:	f7fe fba3 	bl	8009214 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800aace:	4630      	mov	r0, r6
 800aad0:	f7fe fba0 	bl	8009214 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800aad4:	4b0d      	ldr	r3, [pc, #52]	; (800ab0c <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800aad6:	4a0e      	ldr	r2, [pc, #56]	; (800ab10 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 800aad8:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800aada:	4b0e      	ldr	r3, [pc, #56]	; (800ab14 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800aadc:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800aade:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800aae0:	200a      	movs	r0, #10
 800aae2:	4b0d      	ldr	r3, [pc, #52]	; (800ab18 <prvCheckForValidListAndQueue+0x60>)
 800aae4:	9500      	str	r5, [sp, #0]
 800aae6:	f7fe fe4e 	bl	8009786 <xQueueGenericCreateStatic>
 800aaea:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800aaec:	b110      	cbz	r0, 800aaf4 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800aaee:	490b      	ldr	r1, [pc, #44]	; (800ab1c <prvCheckForValidListAndQueue+0x64>)
 800aaf0:	f7ff fa18 	bl	8009f24 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800aaf4:	b003      	add	sp, #12
 800aaf6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800aafa:	f7fe bc53 	b.w	80093a4 <vPortExitCritical>
 800aafe:	bf00      	nop
 800ab00:	2001743c 	.word	0x2001743c
 800ab04:	200173c0 	.word	0x200173c0
 800ab08:	200173d4 	.word	0x200173d4
 800ab0c:	20017318 	.word	0x20017318
 800ab10:	20017320 	.word	0x20017320
 800ab14:	2001731c 	.word	0x2001731c
 800ab18:	200173ec 	.word	0x200173ec
 800ab1c:	080237f5 	.word	0x080237f5

0800ab20 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 800ab20:	4291      	cmp	r1, r2
{
 800ab22:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800ab24:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800ab26:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800ab28:	d80a      	bhi.n	800ab40 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ab2a:	1ad2      	subs	r2, r2, r3
 800ab2c:	6983      	ldr	r3, [r0, #24]
 800ab2e:	429a      	cmp	r2, r3
 800ab30:	d20d      	bcs.n	800ab4e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800ab32:	4b08      	ldr	r3, [pc, #32]	; (800ab54 <prvInsertTimerInActiveList+0x34>)
 800ab34:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800ab36:	6818      	ldr	r0, [r3, #0]
 800ab38:	f7fe fb86 	bl	8009248 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800ab3c:	2000      	movs	r0, #0
}
 800ab3e:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800ab40:	429a      	cmp	r2, r3
 800ab42:	d201      	bcs.n	800ab48 <prvInsertTimerInActiveList+0x28>
 800ab44:	4299      	cmp	r1, r3
 800ab46:	d202      	bcs.n	800ab4e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800ab48:	4b03      	ldr	r3, [pc, #12]	; (800ab58 <prvInsertTimerInActiveList+0x38>)
 800ab4a:	1d01      	adds	r1, r0, #4
 800ab4c:	e7f3      	b.n	800ab36 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800ab4e:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800ab50:	e7f5      	b.n	800ab3e <prvInsertTimerInActiveList+0x1e>
 800ab52:	bf00      	nop
 800ab54:	2001731c 	.word	0x2001731c
 800ab58:	20017318 	.word	0x20017318

0800ab5c <xTimerCreateTimerTask>:
{
 800ab5c:	b510      	push	{r4, lr}
 800ab5e:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800ab60:	f7ff ffaa 	bl	800aab8 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800ab64:	4b12      	ldr	r3, [pc, #72]	; (800abb0 <xTimerCreateTimerTask+0x54>)
 800ab66:	681b      	ldr	r3, [r3, #0]
 800ab68:	b1b3      	cbz	r3, 800ab98 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800ab6a:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800ab6c:	aa07      	add	r2, sp, #28
 800ab6e:	a906      	add	r1, sp, #24
 800ab70:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800ab72:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800ab76:	f7fe fa53 	bl	8009020 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800ab7a:	9b05      	ldr	r3, [sp, #20]
 800ab7c:	9302      	str	r3, [sp, #8]
 800ab7e:	9b06      	ldr	r3, [sp, #24]
 800ab80:	9301      	str	r3, [sp, #4]
 800ab82:	2302      	movs	r3, #2
 800ab84:	9300      	str	r3, [sp, #0]
 800ab86:	9a07      	ldr	r2, [sp, #28]
 800ab88:	490a      	ldr	r1, [pc, #40]	; (800abb4 <xTimerCreateTimerTask+0x58>)
 800ab8a:	480b      	ldr	r0, [pc, #44]	; (800abb8 <xTimerCreateTimerTask+0x5c>)
 800ab8c:	4623      	mov	r3, r4
 800ab8e:	f7ff fba3 	bl	800a2d8 <xTaskCreateStatic>
 800ab92:	4b0a      	ldr	r3, [pc, #40]	; (800abbc <xTimerCreateTimerTask+0x60>)
 800ab94:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800ab96:	b940      	cbnz	r0, 800abaa <xTimerCreateTimerTask+0x4e>
 800ab98:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ab9c:	f383 8811 	msr	BASEPRI, r3
 800aba0:	f3bf 8f6f 	isb	sy
 800aba4:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800aba8:	e7fe      	b.n	800aba8 <xTimerCreateTimerTask+0x4c>
}
 800abaa:	2001      	movs	r0, #1
 800abac:	b008      	add	sp, #32
 800abae:	bd10      	pop	{r4, pc}
 800abb0:	2001743c 	.word	0x2001743c
 800abb4:	080237fa 	.word	0x080237fa
 800abb8:	0800acc5 	.word	0x0800acc5
 800abbc:	20017440 	.word	0x20017440

0800abc0 <xTimerGenericCommand>:
{
 800abc0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800abc2:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800abc4:	4604      	mov	r4, r0
{
 800abc6:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800abc8:	b940      	cbnz	r0, 800abdc <xTimerGenericCommand+0x1c>
 800abca:	f04f 0350 	mov.w	r3, #80	; 0x50
 800abce:	f383 8811 	msr	BASEPRI, r3
 800abd2:	f3bf 8f6f 	isb	sy
 800abd6:	f3bf 8f4f 	dsb	sy
 800abda:	e7fe      	b.n	800abda <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800abdc:	4d0d      	ldr	r5, [pc, #52]	; (800ac14 <xTimerGenericCommand+0x54>)
 800abde:	6828      	ldr	r0, [r5, #0]
 800abe0:	b180      	cbz	r0, 800ac04 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800abe2:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800abe4:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800abe8:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800abea:	dc0d      	bgt.n	800ac08 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800abec:	f7ff fe70 	bl	800a8d0 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800abf0:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800abf2:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800abf4:	bf08      	it	eq
 800abf6:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800abf8:	6828      	ldr	r0, [r5, #0]
 800abfa:	bf18      	it	ne
 800abfc:	461a      	movne	r2, r3
 800abfe:	4669      	mov	r1, sp
 800ac00:	f7fe fe76 	bl	80098f0 <xQueueGenericSend>
}
 800ac04:	b004      	add	sp, #16
 800ac06:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800ac08:	2300      	movs	r3, #0
 800ac0a:	4669      	mov	r1, sp
 800ac0c:	f7fe ff23 	bl	8009a56 <xQueueGenericSendFromISR>
 800ac10:	e7f8      	b.n	800ac04 <xTimerGenericCommand+0x44>
 800ac12:	bf00      	nop
 800ac14:	2001743c 	.word	0x2001743c

0800ac18 <prvSampleTimeNow>:
{
 800ac18:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800ac1c:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800acc0 <prvSampleTimeNow+0xa8>
{
 800ac20:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800ac22:	f7ff fc17 	bl	800a454 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800ac26:	f8d8 3000 	ldr.w	r3, [r8]
 800ac2a:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 800ac2c:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800ac2e:	d940      	bls.n	800acb2 <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800ac30:	4f21      	ldr	r7, [pc, #132]	; (800acb8 <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800ac32:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800ac36:	683b      	ldr	r3, [r7, #0]
 800ac38:	681a      	ldr	r2, [r3, #0]
 800ac3a:	b95a      	cbnz	r2, 800ac54 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 800ac3c:	4a1f      	ldr	r2, [pc, #124]	; (800acbc <prvSampleTimeNow+0xa4>)
 800ac3e:	6811      	ldr	r1, [r2, #0]
 800ac40:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 800ac42:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 800ac44:	2301      	movs	r3, #1
}
 800ac46:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 800ac48:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800ac4a:	f8c8 5000 	str.w	r5, [r8]
}
 800ac4e:	b004      	add	sp, #16
 800ac50:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800ac54:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ac56:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800ac58:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800ac5c:	1d21      	adds	r1, r4, #4
 800ac5e:	4608      	mov	r0, r1
 800ac60:	9103      	str	r1, [sp, #12]
 800ac62:	f7fe fb08 	bl	8009276 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800ac66:	6a23      	ldr	r3, [r4, #32]
 800ac68:	4620      	mov	r0, r4
 800ac6a:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800ac6c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800ac70:	9903      	ldr	r1, [sp, #12]
 800ac72:	f013 0f04 	tst.w	r3, #4
 800ac76:	d0de      	beq.n	800ac36 <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800ac78:	69a3      	ldr	r3, [r4, #24]
 800ac7a:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 800ac7c:	459a      	cmp	sl, r3
 800ac7e:	d205      	bcs.n	800ac8c <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800ac80:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800ac82:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800ac84:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800ac86:	f7fe fadf 	bl	8009248 <vListInsert>
 800ac8a:	e7d4      	b.n	800ac36 <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800ac8c:	2300      	movs	r3, #0
 800ac8e:	f8cd 9000 	str.w	r9, [sp]
 800ac92:	4652      	mov	r2, sl
 800ac94:	4619      	mov	r1, r3
 800ac96:	4620      	mov	r0, r4
 800ac98:	f7ff ff92 	bl	800abc0 <xTimerGenericCommand>
				configASSERT( xResult );
 800ac9c:	2800      	cmp	r0, #0
 800ac9e:	d1ca      	bne.n	800ac36 <prvSampleTimeNow+0x1e>
 800aca0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aca4:	f383 8811 	msr	BASEPRI, r3
 800aca8:	f3bf 8f6f 	isb	sy
 800acac:	f3bf 8f4f 	dsb	sy
 800acb0:	e7fe      	b.n	800acb0 <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 800acb2:	2300      	movs	r3, #0
 800acb4:	e7c7      	b.n	800ac46 <prvSampleTimeNow+0x2e>
 800acb6:	bf00      	nop
 800acb8:	20017318 	.word	0x20017318
 800acbc:	2001731c 	.word	0x2001731c
 800acc0:	200173e8 	.word	0x200173e8

0800acc4 <prvTimerTask>:
{
 800acc4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800acc8:	4d6e      	ldr	r5, [pc, #440]	; (800ae84 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800acca:	4e6f      	ldr	r6, [pc, #444]	; (800ae88 <prvTimerTask+0x1c4>)
{
 800accc:	b089      	sub	sp, #36	; 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800acce:	682b      	ldr	r3, [r5, #0]
 800acd0:	f8d3 8000 	ldr.w	r8, [r3]
 800acd4:	f1b8 0f00 	cmp.w	r8, #0
 800acd8:	d035      	beq.n	800ad46 <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800acda:	68db      	ldr	r3, [r3, #12]
 800acdc:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800ace0:	2400      	movs	r4, #0
	vTaskSuspendAll();
 800ace2:	f7ff fbaf 	bl	800a444 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800ace6:	a804      	add	r0, sp, #16
 800ace8:	f7ff ff96 	bl	800ac18 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800acec:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800acee:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800acf0:	2b00      	cmp	r3, #0
 800acf2:	d169      	bne.n	800adc8 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800acf4:	2c00      	cmp	r4, #0
 800acf6:	d14c      	bne.n	800ad92 <prvTimerTask+0xce>
 800acf8:	4540      	cmp	r0, r8
 800acfa:	d350      	bcc.n	800ad9e <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 800acfc:	f7ff fc46 	bl	800a58c <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ad00:	682b      	ldr	r3, [r5, #0]
 800ad02:	68db      	ldr	r3, [r3, #12]
 800ad04:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800ad06:	1d38      	adds	r0, r7, #4
 800ad08:	f7fe fab5 	bl	8009276 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800ad0c:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800ad10:	0758      	lsls	r0, r3, #29
 800ad12:	d51a      	bpl.n	800ad4a <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800ad14:	69b9      	ldr	r1, [r7, #24]
 800ad16:	4643      	mov	r3, r8
 800ad18:	464a      	mov	r2, r9
 800ad1a:	4441      	add	r1, r8
 800ad1c:	4638      	mov	r0, r7
 800ad1e:	f7ff feff 	bl	800ab20 <prvInsertTimerInActiveList>
 800ad22:	b1b0      	cbz	r0, 800ad52 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800ad24:	9400      	str	r4, [sp, #0]
 800ad26:	4623      	mov	r3, r4
 800ad28:	4642      	mov	r2, r8
 800ad2a:	4621      	mov	r1, r4
 800ad2c:	4638      	mov	r0, r7
 800ad2e:	f7ff ff47 	bl	800abc0 <xTimerGenericCommand>
			configASSERT( xResult );
 800ad32:	b970      	cbnz	r0, 800ad52 <prvTimerTask+0x8e>
 800ad34:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ad38:	f383 8811 	msr	BASEPRI, r3
 800ad3c:	f3bf 8f6f 	isb	sy
 800ad40:	f3bf 8f4f 	dsb	sy
 800ad44:	e7fe      	b.n	800ad44 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800ad46:	2401      	movs	r4, #1
 800ad48:	e7cb      	b.n	800ace2 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800ad4a:	f023 0301 	bic.w	r3, r3, #1
 800ad4e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800ad52:	6a3b      	ldr	r3, [r7, #32]
 800ad54:	4638      	mov	r0, r7
 800ad56:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800ad58:	6830      	ldr	r0, [r6, #0]
 800ad5a:	2200      	movs	r2, #0
 800ad5c:	a904      	add	r1, sp, #16
 800ad5e:	f7fe ff2f 	bl	8009bc0 <xQueueReceive>
 800ad62:	2800      	cmp	r0, #0
 800ad64:	d0b3      	beq.n	800acce <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800ad66:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800ad68:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800ad6a:	2b00      	cmp	r3, #0
 800ad6c:	db2f      	blt.n	800adce <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800ad6e:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800ad70:	6963      	ldr	r3, [r4, #20]
 800ad72:	2b00      	cmp	r3, #0
 800ad74:	d132      	bne.n	800addc <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800ad76:	a803      	add	r0, sp, #12
 800ad78:	f7ff ff4e 	bl	800ac18 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 800ad7c:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800ad7e:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800ad80:	2b09      	cmp	r3, #9
 800ad82:	d8e9      	bhi.n	800ad58 <prvTimerTask+0x94>
 800ad84:	e8df f003 	tbb	[pc, r3]
 800ad88:	572e2e2e 	.word	0x572e2e2e
 800ad8c:	2e2e765e 	.word	0x2e2e765e
 800ad90:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800ad92:	4b3e      	ldr	r3, [pc, #248]	; (800ae8c <prvTimerTask+0x1c8>)
 800ad94:	681b      	ldr	r3, [r3, #0]
 800ad96:	681c      	ldr	r4, [r3, #0]
 800ad98:	fab4 f484 	clz	r4, r4
 800ad9c:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800ad9e:	6830      	ldr	r0, [r6, #0]
 800ada0:	4622      	mov	r2, r4
 800ada2:	eba8 0109 	sub.w	r1, r8, r9
 800ada6:	f7ff f8fa 	bl	8009f9e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800adaa:	f7ff fbef 	bl	800a58c <xTaskResumeAll>
 800adae:	2800      	cmp	r0, #0
 800adb0:	d1d2      	bne.n	800ad58 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 800adb2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800adb6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800adba:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800adbe:	f3bf 8f4f 	dsb	sy
 800adc2:	f3bf 8f6f 	isb	sy
 800adc6:	e7c7      	b.n	800ad58 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 800adc8:	f7ff fbe0 	bl	800a58c <xTaskResumeAll>
}
 800adcc:	e7c4      	b.n	800ad58 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800adce:	9b05      	ldr	r3, [sp, #20]
 800add0:	9907      	ldr	r1, [sp, #28]
 800add2:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800add4:	9b04      	ldr	r3, [sp, #16]
 800add6:	2b00      	cmp	r3, #0
 800add8:	dbbe      	blt.n	800ad58 <prvTimerTask+0x94>
 800adda:	e7c8      	b.n	800ad6e <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800addc:	1d20      	adds	r0, r4, #4
 800adde:	f7fe fa4a 	bl	8009276 <uxListRemove>
 800ade2:	e7c8      	b.n	800ad76 <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800ade4:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800ade8:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800adea:	f043 0301 	orr.w	r3, r3, #1
 800adee:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800adf2:	9b05      	ldr	r3, [sp, #20]
 800adf4:	4620      	mov	r0, r4
 800adf6:	4419      	add	r1, r3
 800adf8:	f7ff fe92 	bl	800ab20 <prvInsertTimerInActiveList>
 800adfc:	2800      	cmp	r0, #0
 800adfe:	d0ab      	beq.n	800ad58 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800ae00:	6a23      	ldr	r3, [r4, #32]
 800ae02:	4620      	mov	r0, r4
 800ae04:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800ae06:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800ae0a:	0759      	lsls	r1, r3, #29
 800ae0c:	d5a4      	bpl.n	800ad58 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800ae0e:	69a2      	ldr	r2, [r4, #24]
 800ae10:	9905      	ldr	r1, [sp, #20]
 800ae12:	2300      	movs	r3, #0
 800ae14:	440a      	add	r2, r1
 800ae16:	9300      	str	r3, [sp, #0]
 800ae18:	4619      	mov	r1, r3
 800ae1a:	4620      	mov	r0, r4
 800ae1c:	f7ff fed0 	bl	800abc0 <xTimerGenericCommand>
							configASSERT( xResult );
 800ae20:	2800      	cmp	r0, #0
 800ae22:	d199      	bne.n	800ad58 <prvTimerTask+0x94>
 800ae24:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ae28:	f383 8811 	msr	BASEPRI, r3
 800ae2c:	f3bf 8f6f 	isb	sy
 800ae30:	f3bf 8f4f 	dsb	sy
 800ae34:	e7fe      	b.n	800ae34 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800ae36:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800ae3a:	f023 0301 	bic.w	r3, r3, #1
 800ae3e:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 800ae42:	e789      	b.n	800ad58 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800ae44:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800ae48:	f043 0301 	orr.w	r3, r3, #1
 800ae4c:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800ae50:	9905      	ldr	r1, [sp, #20]
 800ae52:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800ae54:	b941      	cbnz	r1, 800ae68 <prvTimerTask+0x1a4>
 800ae56:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ae5a:	f383 8811 	msr	BASEPRI, r3
 800ae5e:	f3bf 8f6f 	isb	sy
 800ae62:	f3bf 8f4f 	dsb	sy
 800ae66:	e7fe      	b.n	800ae66 <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800ae68:	4603      	mov	r3, r0
 800ae6a:	4401      	add	r1, r0
 800ae6c:	4620      	mov	r0, r4
 800ae6e:	f7ff fe57 	bl	800ab20 <prvInsertTimerInActiveList>
					break;
 800ae72:	e771      	b.n	800ad58 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800ae74:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800ae78:	079a      	lsls	r2, r3, #30
 800ae7a:	d4de      	bmi.n	800ae3a <prvTimerTask+0x176>
							vPortFree( pxTimer );
 800ae7c:	4620      	mov	r0, r4
 800ae7e:	f7fe f991 	bl	80091a4 <vPortFree>
 800ae82:	e769      	b.n	800ad58 <prvTimerTask+0x94>
 800ae84:	20017318 	.word	0x20017318
 800ae88:	2001743c 	.word	0x2001743c
 800ae8c:	2001731c 	.word	0x2001731c

0800ae90 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800ae90:	8880      	ldrh	r0, [r0, #4]
 800ae92:	4770      	bx	lr

0800ae94 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800ae94:	b570      	push	{r4, r5, r6, lr}
 800ae96:	6803      	ldr	r3, [r0, #0]
 800ae98:	4605      	mov	r5, r0
 800ae9a:	460c      	mov	r4, r1
 800ae9c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ae9e:	2100      	movs	r1, #0
 800aea0:	4798      	blx	r3
 800aea2:	682b      	ldr	r3, [r5, #0]
 800aea4:	4606      	mov	r6, r0
 800aea6:	6a1b      	ldr	r3, [r3, #32]
 800aea8:	4628      	mov	r0, r5
 800aeaa:	4798      	blx	r3
 800aeac:	1ba4      	subs	r4, r4, r6
 800aeae:	b2a4      	uxth	r4, r4
 800aeb0:	fbb4 f0f0 	udiv	r0, r4, r0
 800aeb4:	bd70      	pop	{r4, r5, r6, pc}

0800aeb6 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800aeb6:	2300      	movs	r3, #0
 800aeb8:	8083      	strh	r3, [r0, #4]
 800aeba:	4770      	bx	lr

0800aebc <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800aebc:	b510      	push	{r4, lr}
 800aebe:	6803      	ldr	r3, [r0, #0]
 800aec0:	8881      	ldrh	r1, [r0, #4]
 800aec2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800aec4:	4604      	mov	r4, r0
 800aec6:	4798      	blx	r3
 800aec8:	88a3      	ldrh	r3, [r4, #4]
 800aeca:	3301      	adds	r3, #1
 800aecc:	80a3      	strh	r3, [r4, #4]
 800aece:	bd10      	pop	{r4, pc}

0800aed0 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800aed0:	6803      	ldr	r3, [r0, #0]
 800aed2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800aed4:	4718      	bx	r3

0800aed6 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800aed6:	4770      	bx	lr

0800aed8 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800aed8:	4a02      	ldr	r2, [pc, #8]	; (800aee4 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800aeda:	6002      	str	r2, [r0, #0]
 800aedc:	2200      	movs	r2, #0
 800aede:	8082      	strh	r2, [r0, #4]
 800aee0:	4770      	bx	lr
 800aee2:	bf00      	nop
 800aee4:	0802380c 	.word	0x0802380c

0800aee8 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800aee8:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800aeea:	2000      	movs	r0, #0
 800aeec:	b12b      	cbz	r3, 800aefa <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800aeee:	b920      	cbnz	r0, 800aefa <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800aef0:	1a5a      	subs	r2, r3, r1
 800aef2:	4250      	negs	r0, r2
 800aef4:	4150      	adcs	r0, r2
 800aef6:	699b      	ldr	r3, [r3, #24]
 800aef8:	e7f8      	b.n	800aeec <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800aefa:	4770      	bx	lr

0800aefc <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800aefc:	2300      	movs	r3, #0
 800aefe:	6148      	str	r0, [r1, #20]
 800af00:	618b      	str	r3, [r1, #24]
 800af02:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800af04:	b913      	cbnz	r3, 800af0c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800af06:	6281      	str	r1, [r0, #40]	; 0x28
 800af08:	4770      	bx	lr
 800af0a:	4613      	mov	r3, r2
 800af0c:	699a      	ldr	r2, [r3, #24]
 800af0e:	2a00      	cmp	r2, #0
 800af10:	d1fb      	bne.n	800af0a <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800af12:	6199      	str	r1, [r3, #24]
 800af14:	4770      	bx	lr

0800af16 <_ZN8touchgfx9Container9removeAllEv>:
 800af16:	2200      	movs	r2, #0
 800af18:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800af1a:	b123      	cbz	r3, 800af26 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800af1c:	6999      	ldr	r1, [r3, #24]
 800af1e:	6281      	str	r1, [r0, #40]	; 0x28
 800af20:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800af24:	e7f8      	b.n	800af18 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800af26:	4770      	bx	lr

0800af28 <_ZN8touchgfx9Container6unlinkEv>:
 800af28:	2300      	movs	r3, #0
 800af2a:	6283      	str	r3, [r0, #40]	; 0x28
 800af2c:	4770      	bx	lr

0800af2e <_ZNK8touchgfx9Container12getSolidRectEv>:
 800af2e:	2200      	movs	r2, #0
 800af30:	8002      	strh	r2, [r0, #0]
 800af32:	8042      	strh	r2, [r0, #2]
 800af34:	8082      	strh	r2, [r0, #4]
 800af36:	80c2      	strh	r2, [r0, #6]
 800af38:	4770      	bx	lr

0800af3a <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800af3a:	b570      	push	{r4, r5, r6, lr}
 800af3c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800af3e:	460d      	mov	r5, r1
 800af40:	4616      	mov	r6, r2
 800af42:	b13c      	cbz	r4, 800af54 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800af44:	6823      	ldr	r3, [r4, #0]
 800af46:	4620      	mov	r0, r4
 800af48:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800af4a:	4632      	mov	r2, r6
 800af4c:	4629      	mov	r1, r5
 800af4e:	4798      	blx	r3
 800af50:	69a4      	ldr	r4, [r4, #24]
 800af52:	e7f6      	b.n	800af42 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800af54:	bd70      	pop	{r4, r5, r6, pc}

0800af56 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800af56:	b538      	push	{r3, r4, r5, lr}
 800af58:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800af5a:	460d      	mov	r5, r1
 800af5c:	b134      	cbz	r4, 800af6c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800af5e:	682b      	ldr	r3, [r5, #0]
 800af60:	4621      	mov	r1, r4
 800af62:	689b      	ldr	r3, [r3, #8]
 800af64:	4628      	mov	r0, r5
 800af66:	4798      	blx	r3
 800af68:	69a4      	ldr	r4, [r4, #24]
 800af6a:	e7f7      	b.n	800af5c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800af6c:	bd38      	pop	{r3, r4, r5, pc}

0800af6e <_ZNK8touchgfx9Container17invalidateContentEv>:
 800af6e:	b510      	push	{r4, lr}
 800af70:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800af72:	b12c      	cbz	r4, 800af80 <_ZNK8touchgfx9Container17invalidateContentEv+0x12>
 800af74:	6823      	ldr	r3, [r4, #0]
 800af76:	4620      	mov	r0, r4
 800af78:	699b      	ldr	r3, [r3, #24]
 800af7a:	4798      	blx	r3
 800af7c:	69a4      	ldr	r4, [r4, #24]
 800af7e:	e7f8      	b.n	800af72 <_ZNK8touchgfx9Container17invalidateContentEv+0x4>
 800af80:	bd10      	pop	{r4, pc}

0800af82 <_ZN8touchgfx9ContainerD1Ev>:
 800af82:	4770      	bx	lr

0800af84 <_ZN8touchgfx9ContainerD0Ev>:
 800af84:	b510      	push	{r4, lr}
 800af86:	212c      	movs	r1, #44	; 0x2c
 800af88:	4604      	mov	r4, r0
 800af8a:	f015 fdd0 	bl	8020b2e <_ZdlPvj>
 800af8e:	4620      	mov	r0, r4
 800af90:	bd10      	pop	{r4, pc}

0800af92 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800af92:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800af94:	b19b      	cbz	r3, 800afbe <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800af96:	428b      	cmp	r3, r1
 800af98:	d109      	bne.n	800afae <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800af9a:	699a      	ldr	r2, [r3, #24]
 800af9c:	2100      	movs	r1, #0
 800af9e:	6159      	str	r1, [r3, #20]
 800afa0:	6282      	str	r2, [r0, #40]	; 0x28
 800afa2:	b902      	cbnz	r2, 800afa6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800afa4:	4770      	bx	lr
 800afa6:	6199      	str	r1, [r3, #24]
 800afa8:	4770      	bx	lr
 800afaa:	4613      	mov	r3, r2
 800afac:	b13a      	cbz	r2, 800afbe <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800afae:	699a      	ldr	r2, [r3, #24]
 800afb0:	428a      	cmp	r2, r1
 800afb2:	d1fa      	bne.n	800afaa <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800afb4:	698a      	ldr	r2, [r1, #24]
 800afb6:	619a      	str	r2, [r3, #24]
 800afb8:	2300      	movs	r3, #0
 800afba:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800afbe:	4770      	bx	lr

0800afc0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800afc0:	b410      	push	{r4}
 800afc2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800afc4:	4604      	mov	r4, r0
 800afc6:	b92b      	cbnz	r3, 800afd4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800afc8:	6803      	ldr	r3, [r0, #0]
 800afca:	f85d 4b04 	ldr.w	r4, [sp], #4
 800afce:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800afd0:	4611      	mov	r1, r2
 800afd2:	4718      	bx	r3
 800afd4:	b941      	cbnz	r1, 800afe8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800afd6:	6193      	str	r3, [r2, #24]
 800afd8:	6282      	str	r2, [r0, #40]	; 0x28
 800afda:	6154      	str	r4, [r2, #20]
 800afdc:	f85d 4b04 	ldr.w	r4, [sp], #4
 800afe0:	4770      	bx	lr
 800afe2:	4603      	mov	r3, r0
 800afe4:	2800      	cmp	r0, #0
 800afe6:	d0f9      	beq.n	800afdc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800afe8:	4299      	cmp	r1, r3
 800afea:	6998      	ldr	r0, [r3, #24]
 800afec:	d1f9      	bne.n	800afe2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800afee:	6190      	str	r0, [r2, #24]
 800aff0:	618a      	str	r2, [r1, #24]
 800aff2:	e7f2      	b.n	800afda <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800aff4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800aff4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800aff8:	461f      	mov	r7, r3
 800affa:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800affe:	460d      	mov	r5, r1
 800b000:	4616      	mov	r6, r2
 800b002:	b103      	cbz	r3, 800b006 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800b004:	6038      	str	r0, [r7, #0]
 800b006:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800b008:	b314      	cbz	r4, 800b050 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800b00a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800b00e:	b1eb      	cbz	r3, 800b04c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800b010:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800b014:	428d      	cmp	r5, r1
 800b016:	db19      	blt.n	800b04c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800b018:	8923      	ldrh	r3, [r4, #8]
 800b01a:	b289      	uxth	r1, r1
 800b01c:	440b      	add	r3, r1
 800b01e:	b21b      	sxth	r3, r3
 800b020:	429d      	cmp	r5, r3
 800b022:	da13      	bge.n	800b04c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800b024:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800b028:	4296      	cmp	r6, r2
 800b02a:	db0f      	blt.n	800b04c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800b02c:	8963      	ldrh	r3, [r4, #10]
 800b02e:	b292      	uxth	r2, r2
 800b030:	4413      	add	r3, r2
 800b032:	b21b      	sxth	r3, r3
 800b034:	429e      	cmp	r6, r3
 800b036:	da09      	bge.n	800b04c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800b038:	6823      	ldr	r3, [r4, #0]
 800b03a:	1ab2      	subs	r2, r6, r2
 800b03c:	1a69      	subs	r1, r5, r1
 800b03e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800b042:	b212      	sxth	r2, r2
 800b044:	463b      	mov	r3, r7
 800b046:	b209      	sxth	r1, r1
 800b048:	4620      	mov	r0, r4
 800b04a:	47c0      	blx	r8
 800b04c:	69a4      	ldr	r4, [r4, #24]
 800b04e:	e7db      	b.n	800b008 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800b050:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b054 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800b054:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b058:	4c6e      	ldr	r4, [pc, #440]	; (800b214 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800b05a:	b0a1      	sub	sp, #132	; 0x84
 800b05c:	6824      	ldr	r4, [r4, #0]
 800b05e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800b060:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800b064:	9303      	str	r3, [sp, #12]
 800b066:	2400      	movs	r4, #0
 800b068:	802c      	strh	r4, [r5, #0]
 800b06a:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800b06c:	802c      	strh	r4, [r5, #0]
 800b06e:	601c      	str	r4, [r3, #0]
 800b070:	4606      	mov	r6, r0
 800b072:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800b076:	f7ff ffbd 	bl	800aff4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800b07a:	f1b9 0f03 	cmp.w	r9, #3
 800b07e:	f340 80c2 	ble.w	800b206 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800b082:	4631      	mov	r1, r6
 800b084:	a80c      	add	r0, sp, #48	; 0x30
 800b086:	f007 fa49 	bl	801251c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800b08a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800b08e:	9306      	str	r3, [sp, #24]
 800b090:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800b094:	9307      	str	r3, [sp, #28]
 800b096:	9b03      	ldr	r3, [sp, #12]
 800b098:	f8d3 a000 	ldr.w	sl, [r3]
 800b09c:	f1ba 0f00 	cmp.w	sl, #0
 800b0a0:	f000 80b4 	beq.w	800b20c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800b0a4:	4651      	mov	r1, sl
 800b0a6:	a810      	add	r0, sp, #64	; 0x40
 800b0a8:	f007 fa38 	bl	801251c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800b0ac:	9b01      	ldr	r3, [sp, #4]
 800b0ae:	9a06      	ldr	r2, [sp, #24]
 800b0b0:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800b0b4:	189d      	adds	r5, r3, r2
 800b0b6:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800b0ba:	9a07      	ldr	r2, [sp, #28]
 800b0bc:	2002      	movs	r0, #2
 800b0be:	fb91 f1f0 	sdiv	r1, r1, r0
 800b0c2:	4419      	add	r1, r3
 800b0c4:	1a6d      	subs	r5, r5, r1
 800b0c6:	9b02      	ldr	r3, [sp, #8]
 800b0c8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800b0cc:	4413      	add	r3, r2
 800b0ce:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800b0d2:	fb92 f2f0 	sdiv	r2, r2, r0
 800b0d6:	440a      	add	r2, r1
 800b0d8:	1a9b      	subs	r3, r3, r2
 800b0da:	435b      	muls	r3, r3
 800b0dc:	fb05 3505 	mla	r5, r5, r5, r3
 800b0e0:	4f4d      	ldr	r7, [pc, #308]	; (800b218 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800b0e2:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800b0e4:	ac10      	add	r4, sp, #64	; 0x40
 800b0e6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800b0e8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800b0ea:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800b0ec:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800b0ee:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800b0f0:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800b0f4:	f1b9 0f0c 	cmp.w	r9, #12
 800b0f8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800b0fc:	f04f 0303 	mov.w	r3, #3
 800b100:	bfc8      	it	gt
 800b102:	4698      	movgt	r8, r3
 800b104:	f8cd 9000 	str.w	r9, [sp]
 800b108:	f04f 0400 	mov.w	r4, #0
 800b10c:	bfdc      	itt	le
 800b10e:	f109 32ff 	addle.w	r2, r9, #4294967295
 800b112:	fb92 f8f3 	sdivle	r8, r2, r3
 800b116:	1c63      	adds	r3, r4, #1
 800b118:	aa10      	add	r2, sp, #64	; 0x40
 800b11a:	f004 0401 	and.w	r4, r4, #1
 800b11e:	9308      	str	r3, [sp, #32]
 800b120:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800b124:	9b00      	ldr	r3, [sp, #0]
 800b126:	fb93 f3f8 	sdiv	r3, r3, r8
 800b12a:	b29b      	uxth	r3, r3
 800b12c:	3404      	adds	r4, #4
 800b12e:	f04f 0b00 	mov.w	fp, #0
 800b132:	9304      	str	r3, [sp, #16]
 800b134:	9a04      	ldr	r2, [sp, #16]
 800b136:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800b13a:	fb13 f302 	smulbb	r3, r3, r2
 800b13e:	9a01      	ldr	r2, [sp, #4]
 800b140:	b29b      	uxth	r3, r3
 800b142:	1899      	adds	r1, r3, r2
 800b144:	9305      	str	r3, [sp, #20]
 800b146:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800b14a:	b209      	sxth	r1, r1
 800b14c:	4299      	cmp	r1, r3
 800b14e:	db4d      	blt.n	800b1ec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800b150:	8932      	ldrh	r2, [r6, #8]
 800b152:	4413      	add	r3, r2
 800b154:	b21b      	sxth	r3, r3
 800b156:	4299      	cmp	r1, r3
 800b158:	da48      	bge.n	800b1ec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800b15a:	9b04      	ldr	r3, [sp, #16]
 800b15c:	6827      	ldr	r7, [r4, #0]
 800b15e:	fb17 f703 	smulbb	r7, r7, r3
 800b162:	9b02      	ldr	r3, [sp, #8]
 800b164:	b2bf      	uxth	r7, r7
 800b166:	18fa      	adds	r2, r7, r3
 800b168:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800b16c:	b212      	sxth	r2, r2
 800b16e:	429a      	cmp	r2, r3
 800b170:	db3c      	blt.n	800b1ec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800b172:	8970      	ldrh	r0, [r6, #10]
 800b174:	4403      	add	r3, r0
 800b176:	b21b      	sxth	r3, r3
 800b178:	429a      	cmp	r2, r3
 800b17a:	da37      	bge.n	800b1ec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800b17c:	2300      	movs	r3, #0
 800b17e:	930b      	str	r3, [sp, #44]	; 0x2c
 800b180:	4630      	mov	r0, r6
 800b182:	ab0b      	add	r3, sp, #44	; 0x2c
 800b184:	f7ff ff36 	bl	800aff4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800b188:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b18a:	b37a      	cbz	r2, 800b1ec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800b18c:	4552      	cmp	r2, sl
 800b18e:	d02d      	beq.n	800b1ec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800b190:	4611      	mov	r1, r2
 800b192:	a80e      	add	r0, sp, #56	; 0x38
 800b194:	9209      	str	r2, [sp, #36]	; 0x24
 800b196:	f007 f9c1 	bl	801251c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800b19a:	9a06      	ldr	r2, [sp, #24]
 800b19c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800b1a0:	9b01      	ldr	r3, [sp, #4]
 800b1a2:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800b1a6:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800b1aa:	4413      	add	r3, r2
 800b1ac:	f04f 0e02 	mov.w	lr, #2
 800b1b0:	fb91 f1fe 	sdiv	r1, r1, lr
 800b1b4:	4401      	add	r1, r0
 800b1b6:	1a58      	subs	r0, r3, r1
 800b1b8:	9a07      	ldr	r2, [sp, #28]
 800b1ba:	9b02      	ldr	r3, [sp, #8]
 800b1bc:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800b1c0:	fb9c fcfe 	sdiv	ip, ip, lr
 800b1c4:	4413      	add	r3, r2
 800b1c6:	448c      	add	ip, r1
 800b1c8:	eba3 030c 	sub.w	r3, r3, ip
 800b1cc:	435b      	muls	r3, r3
 800b1ce:	fb00 3300 	mla	r3, r0, r0, r3
 800b1d2:	42ab      	cmp	r3, r5
 800b1d4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800b1d6:	d208      	bcs.n	800b1ea <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800b1d8:	9803      	ldr	r0, [sp, #12]
 800b1da:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800b1dc:	6001      	str	r1, [r0, #0]
 800b1de:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800b1e0:	9805      	ldr	r0, [sp, #20]
 800b1e2:	8008      	strh	r0, [r1, #0]
 800b1e4:	992b      	ldr	r1, [sp, #172]	; 0xac
 800b1e6:	461d      	mov	r5, r3
 800b1e8:	800f      	strh	r7, [r1, #0]
 800b1ea:	4692      	mov	sl, r2
 800b1ec:	f10b 0b01 	add.w	fp, fp, #1
 800b1f0:	f1bb 0f04 	cmp.w	fp, #4
 800b1f4:	f104 0408 	add.w	r4, r4, #8
 800b1f8:	d19c      	bne.n	800b134 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800b1fa:	9b00      	ldr	r3, [sp, #0]
 800b1fc:	9c08      	ldr	r4, [sp, #32]
 800b1fe:	444b      	add	r3, r9
 800b200:	4544      	cmp	r4, r8
 800b202:	9300      	str	r3, [sp, #0]
 800b204:	d187      	bne.n	800b116 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800b206:	b021      	add	sp, #132	; 0x84
 800b208:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b20c:	f04f 35ff 	mov.w	r5, #4294967295
 800b210:	e766      	b.n	800b0e0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800b212:	bf00      	nop
 800b214:	20017450 	.word	0x20017450
 800b218:	08021ddc 	.word	0x08021ddc

0800b21c <_ZN8touchgfx4RectaNERKS0_>:
 800b21c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b220:	f9b1 7000 	ldrsh.w	r7, [r1]
 800b224:	888c      	ldrh	r4, [r1, #4]
 800b226:	f9b0 9000 	ldrsh.w	r9, [r0]
 800b22a:	443c      	add	r4, r7
 800b22c:	b2a4      	uxth	r4, r4
 800b22e:	fa0f f884 	sxth.w	r8, r4
 800b232:	45c1      	cmp	r9, r8
 800b234:	da2f      	bge.n	800b296 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800b236:	8882      	ldrh	r2, [r0, #4]
 800b238:	444a      	add	r2, r9
 800b23a:	b292      	uxth	r2, r2
 800b23c:	fa0f fe82 	sxth.w	lr, r2
 800b240:	4577      	cmp	r7, lr
 800b242:	da28      	bge.n	800b296 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800b244:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800b248:	88cb      	ldrh	r3, [r1, #6]
 800b24a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800b24e:	442b      	add	r3, r5
 800b250:	b21b      	sxth	r3, r3
 800b252:	429e      	cmp	r6, r3
 800b254:	da1f      	bge.n	800b296 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800b256:	88c3      	ldrh	r3, [r0, #6]
 800b258:	4433      	add	r3, r6
 800b25a:	b29b      	uxth	r3, r3
 800b25c:	fa0f fc83 	sxth.w	ip, r3
 800b260:	4565      	cmp	r5, ip
 800b262:	da18      	bge.n	800b296 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800b264:	454f      	cmp	r7, r9
 800b266:	bfb8      	it	lt
 800b268:	464f      	movlt	r7, r9
 800b26a:	42b5      	cmp	r5, r6
 800b26c:	bfb8      	it	lt
 800b26e:	4635      	movlt	r5, r6
 800b270:	45f0      	cmp	r8, lr
 800b272:	bfd8      	it	le
 800b274:	4622      	movle	r2, r4
 800b276:	1bd2      	subs	r2, r2, r7
 800b278:	8082      	strh	r2, [r0, #4]
 800b27a:	884a      	ldrh	r2, [r1, #2]
 800b27c:	88c9      	ldrh	r1, [r1, #6]
 800b27e:	8007      	strh	r7, [r0, #0]
 800b280:	440a      	add	r2, r1
 800b282:	b292      	uxth	r2, r2
 800b284:	b211      	sxth	r1, r2
 800b286:	458c      	cmp	ip, r1
 800b288:	bfa8      	it	ge
 800b28a:	4613      	movge	r3, r2
 800b28c:	1b5b      	subs	r3, r3, r5
 800b28e:	80c3      	strh	r3, [r0, #6]
 800b290:	8045      	strh	r5, [r0, #2]
 800b292:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b296:	2300      	movs	r3, #0
 800b298:	8003      	strh	r3, [r0, #0]
 800b29a:	8043      	strh	r3, [r0, #2]
 800b29c:	8083      	strh	r3, [r0, #4]
 800b29e:	80c3      	strh	r3, [r0, #6]
 800b2a0:	e7f7      	b.n	800b292 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800b2a2 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800b2a2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800b2a6:	2b00      	cmp	r3, #0
 800b2a8:	dd06      	ble.n	800b2b8 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800b2aa:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800b2ae:	2800      	cmp	r0, #0
 800b2b0:	bfcc      	ite	gt
 800b2b2:	2000      	movgt	r0, #0
 800b2b4:	2001      	movle	r0, #1
 800b2b6:	4770      	bx	lr
 800b2b8:	2001      	movs	r0, #1
 800b2ba:	4770      	bx	lr

0800b2bc <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800b2bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b2c0:	2300      	movs	r3, #0
 800b2c2:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800b2c4:	8003      	strh	r3, [r0, #0]
 800b2c6:	4604      	mov	r4, r0
 800b2c8:	8043      	strh	r3, [r0, #2]
 800b2ca:	8083      	strh	r3, [r0, #4]
 800b2cc:	80c3      	strh	r3, [r0, #6]
 800b2ce:	2d00      	cmp	r5, #0
 800b2d0:	d040      	beq.n	800b354 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800b2d2:	1d28      	adds	r0, r5, #4
 800b2d4:	f7ff ffe5 	bl	800b2a2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800b2d8:	b988      	cbnz	r0, 800b2fe <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800b2da:	4620      	mov	r0, r4
 800b2dc:	f7ff ffe1 	bl	800b2a2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800b2e0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800b2e4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800b2e8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800b2ec:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800b2f0:	b138      	cbz	r0, 800b302 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800b2f2:	8022      	strh	r2, [r4, #0]
 800b2f4:	8063      	strh	r3, [r4, #2]
 800b2f6:	f8a4 e004 	strh.w	lr, [r4, #4]
 800b2fa:	f8a4 c006 	strh.w	ip, [r4, #6]
 800b2fe:	69ad      	ldr	r5, [r5, #24]
 800b300:	e7e5      	b.n	800b2ce <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800b302:	f9b4 0000 	ldrsh.w	r0, [r4]
 800b306:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800b30a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800b30e:	4290      	cmp	r0, r2
 800b310:	4607      	mov	r7, r0
 800b312:	bfa8      	it	ge
 800b314:	4617      	movge	r7, r2
 800b316:	4472      	add	r2, lr
 800b318:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800b31c:	8027      	strh	r7, [r4, #0]
 800b31e:	4299      	cmp	r1, r3
 800b320:	460e      	mov	r6, r1
 800b322:	4440      	add	r0, r8
 800b324:	bfa8      	it	ge
 800b326:	461e      	movge	r6, r3
 800b328:	4471      	add	r1, lr
 800b32a:	4463      	add	r3, ip
 800b32c:	b200      	sxth	r0, r0
 800b32e:	b212      	sxth	r2, r2
 800b330:	b209      	sxth	r1, r1
 800b332:	b21b      	sxth	r3, r3
 800b334:	4290      	cmp	r0, r2
 800b336:	bfac      	ite	ge
 800b338:	ebc7 0200 	rsbge	r2, r7, r0
 800b33c:	ebc7 0202 	rsblt	r2, r7, r2
 800b340:	4299      	cmp	r1, r3
 800b342:	bfac      	ite	ge
 800b344:	ebc6 0301 	rsbge	r3, r6, r1
 800b348:	ebc6 0303 	rsblt	r3, r6, r3
 800b34c:	8066      	strh	r6, [r4, #2]
 800b34e:	80a2      	strh	r2, [r4, #4]
 800b350:	80e3      	strh	r3, [r4, #6]
 800b352:	e7d4      	b.n	800b2fe <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800b354:	4620      	mov	r0, r4
 800b356:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b35a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800b35a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800b35e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800b362:	b383      	cbz	r3, 800b3c6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800b364:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800b366:	b374      	cbz	r4, 800b3c6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800b368:	f9b1 5000 	ldrsh.w	r5, [r1]
 800b36c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800b370:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800b374:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800b378:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800b37c:	b303      	cbz	r3, 800b3c0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800b37e:	4668      	mov	r0, sp
 800b380:	1d21      	adds	r1, r4, #4
 800b382:	f8ad 5000 	strh.w	r5, [sp]
 800b386:	f8ad 6002 	strh.w	r6, [sp, #2]
 800b38a:	f8ad 7004 	strh.w	r7, [sp, #4]
 800b38e:	f8ad 8006 	strh.w	r8, [sp, #6]
 800b392:	f7ff ff43 	bl	800b21c <_ZN8touchgfx4RectaNERKS0_>
 800b396:	4668      	mov	r0, sp
 800b398:	f7ff ff83 	bl	800b2a2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800b39c:	b980      	cbnz	r0, 800b3c0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800b39e:	f8bd 3000 	ldrh.w	r3, [sp]
 800b3a2:	88a2      	ldrh	r2, [r4, #4]
 800b3a4:	1a9b      	subs	r3, r3, r2
 800b3a6:	f8ad 3000 	strh.w	r3, [sp]
 800b3aa:	88e2      	ldrh	r2, [r4, #6]
 800b3ac:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800b3b0:	1a9b      	subs	r3, r3, r2
 800b3b2:	f8ad 3002 	strh.w	r3, [sp, #2]
 800b3b6:	6823      	ldr	r3, [r4, #0]
 800b3b8:	4669      	mov	r1, sp
 800b3ba:	689b      	ldr	r3, [r3, #8]
 800b3bc:	4620      	mov	r0, r4
 800b3be:	4798      	blx	r3
 800b3c0:	69a4      	ldr	r4, [r4, #24]
 800b3c2:	2c00      	cmp	r4, #0
 800b3c4:	d1d8      	bne.n	800b378 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800b3c6:	b002      	add	sp, #8
 800b3c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b3cc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800b3cc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b3ce:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800b3d2:	460d      	mov	r5, r1
 800b3d4:	4616      	mov	r6, r2
 800b3d6:	b323      	cbz	r3, 800b422 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800b3d8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800b3da:	b314      	cbz	r4, 800b422 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800b3dc:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800b3e0:	b1eb      	cbz	r3, 800b41e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800b3e2:	6828      	ldr	r0, [r5, #0]
 800b3e4:	6869      	ldr	r1, [r5, #4]
 800b3e6:	466b      	mov	r3, sp
 800b3e8:	c303      	stmia	r3!, {r0, r1}
 800b3ea:	4668      	mov	r0, sp
 800b3ec:	1d21      	adds	r1, r4, #4
 800b3ee:	f7ff ff15 	bl	800b21c <_ZN8touchgfx4RectaNERKS0_>
 800b3f2:	4668      	mov	r0, sp
 800b3f4:	f7ff ff55 	bl	800b2a2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800b3f8:	b988      	cbnz	r0, 800b41e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800b3fa:	f8bd 3000 	ldrh.w	r3, [sp]
 800b3fe:	88a2      	ldrh	r2, [r4, #4]
 800b400:	1a9b      	subs	r3, r3, r2
 800b402:	f8ad 3000 	strh.w	r3, [sp]
 800b406:	88e2      	ldrh	r2, [r4, #6]
 800b408:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800b40c:	1a9b      	subs	r3, r3, r2
 800b40e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800b412:	6823      	ldr	r3, [r4, #0]
 800b414:	4632      	mov	r2, r6
 800b416:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800b418:	4669      	mov	r1, sp
 800b41a:	4620      	mov	r0, r4
 800b41c:	4798      	blx	r3
 800b41e:	69a4      	ldr	r4, [r4, #24]
 800b420:	e7db      	b.n	800b3da <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800b422:	b002      	add	sp, #8
 800b424:	bd70      	pop	{r4, r5, r6, pc}

0800b426 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800b426:	b513      	push	{r0, r1, r4, lr}
 800b428:	6803      	ldr	r3, [r0, #0]
 800b42a:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800b42e:	2300      	movs	r3, #0
 800b430:	e9cd 3300 	strd	r3, r3, [sp]
 800b434:	466b      	mov	r3, sp
 800b436:	47a0      	blx	r4
 800b438:	b002      	add	sp, #8
 800b43a:	bd10      	pop	{r4, pc}

0800b43c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800b43c:	2301      	movs	r3, #1
 800b43e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800b442:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800b446:	4770      	bx	lr

0800b448 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800b448:	2301      	movs	r3, #1
 800b44a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800b44e:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800b452:	4770      	bx	lr

0800b454 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800b454:	6843      	ldr	r3, [r0, #4]
 800b456:	2201      	movs	r2, #1
 800b458:	725a      	strb	r2, [r3, #9]
 800b45a:	6840      	ldr	r0, [r0, #4]
 800b45c:	6803      	ldr	r3, [r0, #0]
 800b45e:	691b      	ldr	r3, [r3, #16]
 800b460:	4718      	bx	r3

0800b462 <_ZN8touchgfx3HAL8flushDMAEv>:
 800b462:	6840      	ldr	r0, [r0, #4]
 800b464:	6803      	ldr	r3, [r0, #0]
 800b466:	689b      	ldr	r3, [r3, #8]
 800b468:	4718      	bx	r3

0800b46a <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800b46a:	b530      	push	{r4, r5, lr}
 800b46c:	b08b      	sub	sp, #44	; 0x2c
 800b46e:	6804      	ldr	r4, [r0, #0]
 800b470:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800b474:	9509      	str	r5, [sp, #36]	; 0x24
 800b476:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800b47a:	9508      	str	r5, [sp, #32]
 800b47c:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800b480:	9507      	str	r5, [sp, #28]
 800b482:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800b486:	9506      	str	r5, [sp, #24]
 800b488:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800b48c:	9505      	str	r5, [sp, #20]
 800b48e:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800b492:	9504      	str	r5, [sp, #16]
 800b494:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800b498:	9503      	str	r5, [sp, #12]
 800b49a:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800b49e:	9502      	str	r5, [sp, #8]
 800b4a0:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800b4a4:	e9cd 3500 	strd	r3, r5, [sp]
 800b4a8:	4613      	mov	r3, r2
 800b4aa:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800b4ac:	2200      	movs	r2, #0
 800b4ae:	47a0      	blx	r4
 800b4b0:	b00b      	add	sp, #44	; 0x2c
 800b4b2:	bd30      	pop	{r4, r5, pc}

0800b4b4 <_ZN8touchgfx3HAL10beginFrameEv>:
 800b4b4:	4b04      	ldr	r3, [pc, #16]	; (800b4c8 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800b4b6:	781b      	ldrb	r3, [r3, #0]
 800b4b8:	b123      	cbz	r3, 800b4c4 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800b4ba:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800b4be:	f080 0001 	eor.w	r0, r0, #1
 800b4c2:	4770      	bx	lr
 800b4c4:	2001      	movs	r0, #1
 800b4c6:	4770      	bx	lr
 800b4c8:	2001744e 	.word	0x2001744e

0800b4cc <_ZN8touchgfx3HAL8endFrameEv>:
 800b4cc:	b510      	push	{r4, lr}
 800b4ce:	4604      	mov	r4, r0
 800b4d0:	6840      	ldr	r0, [r0, #4]
 800b4d2:	6803      	ldr	r3, [r0, #0]
 800b4d4:	689b      	ldr	r3, [r3, #8]
 800b4d6:	4798      	blx	r3
 800b4d8:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 800b4dc:	b113      	cbz	r3, 800b4e4 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800b4de:	2301      	movs	r3, #1
 800b4e0:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800b4e4:	bd10      	pop	{r4, pc}

0800b4e6 <_ZN8touchgfx3HAL10initializeEv>:
 800b4e6:	b510      	push	{r4, lr}
 800b4e8:	4604      	mov	r4, r0
 800b4ea:	f7f5 f9fd 	bl	80008e8 <_ZN8touchgfx10OSWrappers10initializeEv>
 800b4ee:	6860      	ldr	r0, [r4, #4]
 800b4f0:	6803      	ldr	r3, [r0, #0]
 800b4f2:	68db      	ldr	r3, [r3, #12]
 800b4f4:	4798      	blx	r3
 800b4f6:	68e0      	ldr	r0, [r4, #12]
 800b4f8:	6803      	ldr	r3, [r0, #0]
 800b4fa:	689b      	ldr	r3, [r3, #8]
 800b4fc:	4798      	blx	r3
 800b4fe:	6823      	ldr	r3, [r4, #0]
 800b500:	4620      	mov	r0, r4
 800b502:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800b504:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b508:	4718      	bx	r3
	...

0800b50c <_ZN8touchgfx3HAL4tickEv>:
 800b50c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b50e:	6803      	ldr	r3, [r0, #0]
 800b510:	4d5b      	ldr	r5, [pc, #364]	; (800b680 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800b512:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800b516:	4604      	mov	r4, r0
 800b518:	4798      	blx	r3
 800b51a:	2800      	cmp	r0, #0
 800b51c:	f000 8095 	beq.w	800b64a <_ZN8touchgfx3HAL4tickEv+0x13e>
 800b520:	2001      	movs	r0, #1
 800b522:	f7f5 f90d 	bl	8000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800b526:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 800b52a:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800b52e:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800b532:	2600      	movs	r6, #0
 800b534:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800b538:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800b53c:	b133      	cbz	r3, 800b54c <_ZN8touchgfx3HAL4tickEv+0x40>
 800b53e:	6823      	ldr	r3, [r4, #0]
 800b540:	4620      	mov	r0, r4
 800b542:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800b546:	4798      	blx	r3
 800b548:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 800b54c:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800b550:	6862      	ldr	r2, [r4, #4]
 800b552:	f083 0301 	eor.w	r3, r3, #1
 800b556:	7253      	strb	r3, [r2, #9]
 800b558:	2601      	movs	r6, #1
 800b55a:	702e      	strb	r6, [r5, #0]
 800b55c:	f005 ffac 	bl	80114b8 <_ZN8touchgfx11Application11getInstanceEv>
 800b560:	6803      	ldr	r3, [r0, #0]
 800b562:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b564:	4798      	blx	r3
 800b566:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800b56a:	b90b      	cbnz	r3, 800b570 <_ZN8touchgfx3HAL4tickEv+0x64>
 800b56c:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 800b570:	f005 ffa2 	bl	80114b8 <_ZN8touchgfx11Application11getInstanceEv>
 800b574:	6803      	ldr	r3, [r0, #0]
 800b576:	695b      	ldr	r3, [r3, #20]
 800b578:	4798      	blx	r3
 800b57a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800b57c:	6803      	ldr	r3, [r0, #0]
 800b57e:	691b      	ldr	r3, [r3, #16]
 800b580:	4798      	blx	r3
 800b582:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800b586:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800b58a:	3b01      	subs	r3, #1
 800b58c:	b2db      	uxtb	r3, r3
 800b58e:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800b592:	b10a      	cbz	r2, 800b598 <_ZN8touchgfx3HAL4tickEv+0x8c>
 800b594:	2b00      	cmp	r3, #0
 800b596:	d1eb      	bne.n	800b570 <_ZN8touchgfx3HAL4tickEv+0x64>
 800b598:	4a3a      	ldr	r2, [pc, #232]	; (800b684 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800b59a:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 800b59e:	7813      	ldrb	r3, [r2, #0]
 800b5a0:	3301      	adds	r3, #1
 800b5a2:	b25b      	sxtb	r3, r3
 800b5a4:	4299      	cmp	r1, r3
 800b5a6:	7013      	strb	r3, [r2, #0]
 800b5a8:	dc10      	bgt.n	800b5cc <_ZN8touchgfx3HAL4tickEv+0xc0>
 800b5aa:	68e0      	ldr	r0, [r4, #12]
 800b5ac:	2300      	movs	r3, #0
 800b5ae:	7013      	strb	r3, [r2, #0]
 800b5b0:	6803      	ldr	r3, [r0, #0]
 800b5b2:	aa03      	add	r2, sp, #12
 800b5b4:	68db      	ldr	r3, [r3, #12]
 800b5b6:	a902      	add	r1, sp, #8
 800b5b8:	4798      	blx	r3
 800b5ba:	6823      	ldr	r3, [r4, #0]
 800b5bc:	2800      	cmp	r0, #0
 800b5be:	d050      	beq.n	800b662 <_ZN8touchgfx3HAL4tickEv+0x156>
 800b5c0:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800b5c4:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800b5c8:	4620      	mov	r0, r4
 800b5ca:	4798      	blx	r3
 800b5cc:	6960      	ldr	r0, [r4, #20]
 800b5ce:	2300      	movs	r3, #0
 800b5d0:	f88d 3007 	strb.w	r3, [sp, #7]
 800b5d4:	b158      	cbz	r0, 800b5ee <_ZN8touchgfx3HAL4tickEv+0xe2>
 800b5d6:	6803      	ldr	r3, [r0, #0]
 800b5d8:	f10d 0107 	add.w	r1, sp, #7
 800b5dc:	68db      	ldr	r3, [r3, #12]
 800b5de:	4798      	blx	r3
 800b5e0:	b128      	cbz	r0, 800b5ee <_ZN8touchgfx3HAL4tickEv+0xe2>
 800b5e2:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800b5e4:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800b5e8:	6803      	ldr	r3, [r0, #0]
 800b5ea:	68db      	ldr	r3, [r3, #12]
 800b5ec:	4798      	blx	r3
 800b5ee:	f104 001c 	add.w	r0, r4, #28
 800b5f2:	f014 feb5 	bl	8020360 <_ZN8touchgfx8Gestures4tickEv>
 800b5f6:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800b5fa:	b30b      	cbz	r3, 800b640 <_ZN8touchgfx3HAL4tickEv+0x134>
 800b5fc:	6920      	ldr	r0, [r4, #16]
 800b5fe:	6803      	ldr	r3, [r0, #0]
 800b600:	691b      	ldr	r3, [r3, #16]
 800b602:	4798      	blx	r3
 800b604:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800b606:	4606      	mov	r6, r0
 800b608:	b903      	cbnz	r3, 800b60c <_ZN8touchgfx3HAL4tickEv+0x100>
 800b60a:	6720      	str	r0, [r4, #112]	; 0x70
 800b60c:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800b60e:	4a1e      	ldr	r2, [pc, #120]	; (800b688 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800b610:	1af3      	subs	r3, r6, r3
 800b612:	4293      	cmp	r3, r2
 800b614:	d914      	bls.n	800b640 <_ZN8touchgfx3HAL4tickEv+0x134>
 800b616:	6920      	ldr	r0, [r4, #16]
 800b618:	6803      	ldr	r3, [r0, #0]
 800b61a:	699b      	ldr	r3, [r3, #24]
 800b61c:	4798      	blx	r3
 800b61e:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800b620:	2264      	movs	r2, #100	; 0x64
 800b622:	1af3      	subs	r3, r6, r3
 800b624:	fbb3 f3f2 	udiv	r3, r3, r2
 800b628:	fbb0 f0f3 	udiv	r0, r0, r3
 800b62c:	2800      	cmp	r0, #0
 800b62e:	dc1d      	bgt.n	800b66c <_ZN8touchgfx3HAL4tickEv+0x160>
 800b630:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800b634:	6920      	ldr	r0, [r4, #16]
 800b636:	6803      	ldr	r3, [r0, #0]
 800b638:	2100      	movs	r1, #0
 800b63a:	69db      	ldr	r3, [r3, #28]
 800b63c:	4798      	blx	r3
 800b63e:	6726      	str	r6, [r4, #112]	; 0x70
 800b640:	f005 ff3a 	bl	80114b8 <_ZN8touchgfx11Application11getInstanceEv>
 800b644:	6803      	ldr	r3, [r0, #0]
 800b646:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b648:	4798      	blx	r3
 800b64a:	6823      	ldr	r3, [r4, #0]
 800b64c:	4620      	mov	r0, r4
 800b64e:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800b652:	4798      	blx	r3
 800b654:	2001      	movs	r0, #1
 800b656:	f7f5 f874 	bl	8000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800b65a:	2300      	movs	r3, #0
 800b65c:	702b      	strb	r3, [r5, #0]
 800b65e:	b004      	add	sp, #16
 800b660:	bd70      	pop	{r4, r5, r6, pc}
 800b662:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800b666:	4620      	mov	r0, r4
 800b668:	4798      	blx	r3
 800b66a:	e7af      	b.n	800b5cc <_ZN8touchgfx3HAL4tickEv+0xc0>
 800b66c:	2863      	cmp	r0, #99	; 0x63
 800b66e:	bfcb      	itete	gt
 800b670:	2300      	movgt	r3, #0
 800b672:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800b676:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800b67a:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800b67e:	e7d9      	b.n	800b634 <_ZN8touchgfx3HAL4tickEv+0x128>
 800b680:	20017454 	.word	0x20017454
 800b684:	20017455 	.word	0x20017455
 800b688:	05f5e100 	.word	0x05f5e100

0800b68c <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800b68c:	f7f5 b95c 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800b690 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800b690:	6581      	str	r1, [r0, #88]	; 0x58
 800b692:	301c      	adds	r0, #28
 800b694:	f014 be62 	b.w	802035c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800b698 <_ZN8touchgfx3HAL5touchEll>:
 800b698:	b530      	push	{r4, r5, lr}
 800b69a:	b087      	sub	sp, #28
 800b69c:	4604      	mov	r4, r0
 800b69e:	a804      	add	r0, sp, #16
 800b6a0:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800b6a4:	f005 fcca 	bl	801103c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800b6a8:	9b04      	ldr	r3, [sp, #16]
 800b6aa:	f8ad 300c 	strh.w	r3, [sp, #12]
 800b6ae:	a906      	add	r1, sp, #24
 800b6b0:	9b05      	ldr	r3, [sp, #20]
 800b6b2:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800b6b6:	a803      	add	r0, sp, #12
 800b6b8:	f005 fd12 	bl	80110e0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800b6bc:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800b6c0:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800b6c4:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800b6c8:	f104 001c 	add.w	r0, r4, #28
 800b6cc:	b189      	cbz	r1, 800b6f2 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800b6ce:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800b6d2:	9300      	str	r3, [sp, #0]
 800b6d4:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800b6d8:	4613      	mov	r3, r2
 800b6da:	462a      	mov	r2, r5
 800b6dc:	f014 fe4e 	bl	802037c <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800b6e0:	b128      	cbz	r0, 800b6ee <_ZN8touchgfx3HAL5touchEll+0x56>
 800b6e2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800b6e6:	65e3      	str	r3, [r4, #92]	; 0x5c
 800b6e8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800b6ec:	6623      	str	r3, [r4, #96]	; 0x60
 800b6ee:	b007      	add	sp, #28
 800b6f0:	bd30      	pop	{r4, r5, pc}
 800b6f2:	f014 fe83 	bl	80203fc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b6f6:	2301      	movs	r3, #1
 800b6f8:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800b6fc:	e7f1      	b.n	800b6e2 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800b6fe <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800b6fe:	b510      	push	{r4, lr}
 800b700:	2b00      	cmp	r3, #0
 800b702:	d046      	beq.n	800b792 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b704:	ea81 0002 	eor.w	r0, r1, r2
 800b708:	07c4      	lsls	r4, r0, #31
 800b70a:	d508      	bpl.n	800b71e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800b70c:	440b      	add	r3, r1
 800b70e:	3a01      	subs	r2, #1
 800b710:	428b      	cmp	r3, r1
 800b712:	d93e      	bls.n	800b792 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b714:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b718:	f801 0b01 	strb.w	r0, [r1], #1
 800b71c:	e7f8      	b.n	800b710 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800b71e:	07d0      	lsls	r0, r2, #31
 800b720:	bf42      	ittt	mi
 800b722:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800b726:	f801 0b01 	strbmi.w	r0, [r1], #1
 800b72a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800b72e:	2b01      	cmp	r3, #1
 800b730:	d911      	bls.n	800b756 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b732:	ea81 0402 	eor.w	r4, r1, r2
 800b736:	07a4      	lsls	r4, r4, #30
 800b738:	4610      	mov	r0, r2
 800b73a:	d022      	beq.n	800b782 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800b73c:	f023 0401 	bic.w	r4, r3, #1
 800b740:	440c      	add	r4, r1
 800b742:	428c      	cmp	r4, r1
 800b744:	4602      	mov	r2, r0
 800b746:	d904      	bls.n	800b752 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800b748:	8812      	ldrh	r2, [r2, #0]
 800b74a:	f821 2b02 	strh.w	r2, [r1], #2
 800b74e:	3002      	adds	r0, #2
 800b750:	e7f7      	b.n	800b742 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800b752:	f003 0301 	and.w	r3, r3, #1
 800b756:	f023 0003 	bic.w	r0, r3, #3
 800b75a:	4408      	add	r0, r1
 800b75c:	4288      	cmp	r0, r1
 800b75e:	4614      	mov	r4, r2
 800b760:	d904      	bls.n	800b76c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800b762:	6824      	ldr	r4, [r4, #0]
 800b764:	f841 4b04 	str.w	r4, [r1], #4
 800b768:	3204      	adds	r2, #4
 800b76a:	e7f7      	b.n	800b75c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800b76c:	f003 0303 	and.w	r3, r3, #3
 800b770:	440b      	add	r3, r1
 800b772:	3a01      	subs	r2, #1
 800b774:	428b      	cmp	r3, r1
 800b776:	d90c      	bls.n	800b792 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b778:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b77c:	f801 0b01 	strb.w	r0, [r1], #1
 800b780:	e7f8      	b.n	800b774 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800b782:	0790      	lsls	r0, r2, #30
 800b784:	d0e7      	beq.n	800b756 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b786:	f832 0b02 	ldrh.w	r0, [r2], #2
 800b78a:	f821 0b02 	strh.w	r0, [r1], #2
 800b78e:	3b02      	subs	r3, #2
 800b790:	e7e1      	b.n	800b756 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b792:	2001      	movs	r0, #1
 800b794:	bd10      	pop	{r4, pc}

0800b796 <_ZN8touchgfx3HAL7noTouchEv>:
 800b796:	b510      	push	{r4, lr}
 800b798:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800b79c:	4604      	mov	r4, r0
 800b79e:	b153      	cbz	r3, 800b7b6 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800b7a0:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800b7a4:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800b7a8:	2101      	movs	r1, #1
 800b7aa:	301c      	adds	r0, #28
 800b7ac:	f014 fe26 	bl	80203fc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b7b0:	2300      	movs	r3, #0
 800b7b2:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800b7b6:	bd10      	pop	{r4, pc}

0800b7b8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800b7b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b7bc:	b085      	sub	sp, #20
 800b7be:	ad04      	add	r5, sp, #16
 800b7c0:	4604      	mov	r4, r0
 800b7c2:	2000      	movs	r0, #0
 800b7c4:	f845 0d04 	str.w	r0, [r5, #-4]!
 800b7c8:	69a0      	ldr	r0, [r4, #24]
 800b7ca:	6806      	ldr	r6, [r0, #0]
 800b7cc:	9501      	str	r5, [sp, #4]
 800b7ce:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800b7d2:	9500      	str	r5, [sp, #0]
 800b7d4:	6835      	ldr	r5, [r6, #0]
 800b7d6:	4699      	mov	r9, r3
 800b7d8:	460f      	mov	r7, r1
 800b7da:	4690      	mov	r8, r2
 800b7dc:	47a8      	blx	r5
 800b7de:	4d10      	ldr	r5, [pc, #64]	; (800b820 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800b7e0:	4606      	mov	r6, r0
 800b7e2:	f8a5 9000 	strh.w	r9, [r5]
 800b7e6:	f7f6 fdbd 	bl	8002364 <_ZN8touchgfx3HAL3lcdEv>
 800b7ea:	6803      	ldr	r3, [r0, #0]
 800b7ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b7ee:	4798      	blx	r3
 800b7f0:	b128      	cbz	r0, 800b7fe <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800b7f2:	2801      	cmp	r0, #1
 800b7f4:	d00b      	beq.n	800b80e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800b7f6:	4630      	mov	r0, r6
 800b7f8:	b005      	add	sp, #20
 800b7fa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b7fe:	882b      	ldrh	r3, [r5, #0]
 800b800:	fb08 7203 	mla	r2, r8, r3, r7
 800b804:	9b03      	ldr	r3, [sp, #12]
 800b806:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800b80a:	63e3      	str	r3, [r4, #60]	; 0x3c
 800b80c:	e7f3      	b.n	800b7f6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b80e:	882a      	ldrh	r2, [r5, #0]
 800b810:	9b03      	ldr	r3, [sp, #12]
 800b812:	fb08 7202 	mla	r2, r8, r2, r7
 800b816:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800b81a:	1a9a      	subs	r2, r3, r2
 800b81c:	63e2      	str	r2, [r4, #60]	; 0x3c
 800b81e:	e7ea      	b.n	800b7f6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b820:	2001744a 	.word	0x2001744a

0800b824 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800b824:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b826:	b08b      	sub	sp, #44	; 0x2c
 800b828:	4617      	mov	r7, r2
 800b82a:	4604      	mov	r4, r0
 800b82c:	460e      	mov	r6, r1
 800b82e:	461d      	mov	r5, r3
 800b830:	f7f6 fd98 	bl	8002364 <_ZN8touchgfx3HAL3lcdEv>
 800b834:	6803      	ldr	r3, [r0, #0]
 800b836:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b838:	4798      	blx	r3
 800b83a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800b83e:	9007      	str	r0, [sp, #28]
 800b840:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b844:	4b0d      	ldr	r3, [pc, #52]	; (800b87c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800b846:	6822      	ldr	r2, [r4, #0]
 800b848:	881b      	ldrh	r3, [r3, #0]
 800b84a:	9306      	str	r3, [sp, #24]
 800b84c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800b850:	9305      	str	r3, [sp, #20]
 800b852:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800b856:	9304      	str	r3, [sp, #16]
 800b858:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b85c:	9303      	str	r3, [sp, #12]
 800b85e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b862:	9302      	str	r3, [sp, #8]
 800b864:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b868:	e9cd 5300 	strd	r5, r3, [sp]
 800b86c:	4631      	mov	r1, r6
 800b86e:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800b870:	463b      	mov	r3, r7
 800b872:	2200      	movs	r2, #0
 800b874:	4620      	mov	r0, r4
 800b876:	47a8      	blx	r5
 800b878:	b00b      	add	sp, #44	; 0x2c
 800b87a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b87c:	2001744a 	.word	0x2001744a

0800b880 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800b880:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b884:	4698      	mov	r8, r3
 800b886:	6803      	ldr	r3, [r0, #0]
 800b888:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800b88a:	4b15      	ldr	r3, [pc, #84]	; (800b8e0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800b88c:	b08b      	sub	sp, #44	; 0x2c
 800b88e:	4617      	mov	r7, r2
 800b890:	f8b3 9000 	ldrh.w	r9, [r3]
 800b894:	460e      	mov	r6, r1
 800b896:	4604      	mov	r4, r0
 800b898:	f7f6 fd64 	bl	8002364 <_ZN8touchgfx3HAL3lcdEv>
 800b89c:	6803      	ldr	r3, [r0, #0]
 800b89e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b8a0:	4798      	blx	r3
 800b8a2:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800b8a6:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b8aa:	2302      	movs	r3, #2
 800b8ac:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800b8b0:	2301      	movs	r3, #1
 800b8b2:	9305      	str	r3, [sp, #20]
 800b8b4:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800b8b8:	9304      	str	r3, [sp, #16]
 800b8ba:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800b8be:	9303      	str	r3, [sp, #12]
 800b8c0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b8c4:	9302      	str	r3, [sp, #8]
 800b8c6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b8ca:	2200      	movs	r2, #0
 800b8cc:	e9cd 8300 	strd	r8, r3, [sp]
 800b8d0:	4631      	mov	r1, r6
 800b8d2:	463b      	mov	r3, r7
 800b8d4:	4620      	mov	r0, r4
 800b8d6:	47a8      	blx	r5
 800b8d8:	b00b      	add	sp, #44	; 0x2c
 800b8da:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b8de:	bf00      	nop
 800b8e0:	2001744a 	.word	0x2001744a

0800b8e4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800b8e4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b8e8:	4698      	mov	r8, r3
 800b8ea:	6803      	ldr	r3, [r0, #0]
 800b8ec:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 800b8ee:	4b11      	ldr	r3, [pc, #68]	; (800b934 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800b8f0:	b087      	sub	sp, #28
 800b8f2:	f8b3 9000 	ldrh.w	r9, [r3]
 800b8f6:	460e      	mov	r6, r1
 800b8f8:	4617      	mov	r7, r2
 800b8fa:	4604      	mov	r4, r0
 800b8fc:	f7f6 fd32 	bl	8002364 <_ZN8touchgfx3HAL3lcdEv>
 800b900:	6803      	ldr	r3, [r0, #0]
 800b902:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b904:	4798      	blx	r3
 800b906:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800b90a:	f8cd 900c 	str.w	r9, [sp, #12]
 800b90e:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800b912:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800b916:	9302      	str	r3, [sp, #8]
 800b918:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800b91c:	9301      	str	r3, [sp, #4]
 800b91e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800b922:	9300      	str	r3, [sp, #0]
 800b924:	463a      	mov	r2, r7
 800b926:	4643      	mov	r3, r8
 800b928:	4631      	mov	r1, r6
 800b92a:	4620      	mov	r0, r4
 800b92c:	47a8      	blx	r5
 800b92e:	b007      	add	sp, #28
 800b930:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b934:	2001744a 	.word	0x2001744a

0800b938 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800b938:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b93c:	4604      	mov	r4, r0
 800b93e:	b08f      	sub	sp, #60	; 0x3c
 800b940:	4610      	mov	r0, r2
 800b942:	460d      	mov	r5, r1
 800b944:	4691      	mov	r9, r2
 800b946:	461e      	mov	r6, r3
 800b948:	f008 ff52 	bl	80147f0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b94c:	2800      	cmp	r0, #0
 800b94e:	f000 809d 	beq.w	800ba8c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800b952:	6823      	ldr	r3, [r4, #0]
 800b954:	f8df b198 	ldr.w	fp, [pc, #408]	; 800baf0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800b958:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b95a:	f8df a198 	ldr.w	sl, [pc, #408]	; 800baf4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800b95e:	4f61      	ldr	r7, [pc, #388]	; (800bae4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b960:	4620      	mov	r0, r4
 800b962:	4798      	blx	r3
 800b964:	6823      	ldr	r3, [r4, #0]
 800b966:	4620      	mov	r0, r4
 800b968:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b96a:	4798      	blx	r3
 800b96c:	f8bb 3000 	ldrh.w	r3, [fp]
 800b970:	9301      	str	r3, [sp, #4]
 800b972:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800b976:	f8ba 3000 	ldrh.w	r3, [sl]
 800b97a:	9302      	str	r3, [sp, #8]
 800b97c:	883b      	ldrh	r3, [r7, #0]
 800b97e:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800b982:	9303      	str	r3, [sp, #12]
 800b984:	4b58      	ldr	r3, [pc, #352]	; (800bae8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b986:	9305      	str	r3, [sp, #20]
 800b988:	881a      	ldrh	r2, [r3, #0]
 800b98a:	9204      	str	r2, [sp, #16]
 800b98c:	4640      	mov	r0, r8
 800b98e:	f008 ffc3 	bl	8014918 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b992:	8038      	strh	r0, [r7, #0]
 800b994:	4640      	mov	r0, r8
 800b996:	f008 fff3 	bl	8014980 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b99a:	9b05      	ldr	r3, [sp, #20]
 800b99c:	b280      	uxth	r0, r0
 800b99e:	8018      	strh	r0, [r3, #0]
 800b9a0:	4b52      	ldr	r3, [pc, #328]	; (800baec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800b9a2:	781b      	ldrb	r3, [r3, #0]
 800b9a4:	2b00      	cmp	r3, #0
 800b9a6:	d174      	bne.n	800ba92 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800b9a8:	883b      	ldrh	r3, [r7, #0]
 800b9aa:	f8ab 3000 	strh.w	r3, [fp]
 800b9ae:	f8aa 0000 	strh.w	r0, [sl]
 800b9b2:	4648      	mov	r0, r9
 800b9b4:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800b9b8:	f008 ff1a 	bl	80147f0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b9bc:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800b9c0:	2200      	movs	r2, #0
 800b9c2:	4611      	mov	r1, r2
 800b9c4:	4628      	mov	r0, r5
 800b9c6:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800b9ca:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800b9ce:	f7f7 f8dd 	bl	8002b8c <_ZN8touchgfx8Drawable5setXYEss>
 800b9d2:	2301      	movs	r3, #1
 800b9d4:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800b9d8:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800b9dc:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800b9e0:	2b00      	cmp	r3, #0
 800b9e2:	dd5c      	ble.n	800ba9e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b9e4:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800b9e8:	2b00      	cmp	r3, #0
 800b9ea:	dd58      	ble.n	800ba9e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b9ec:	462a      	mov	r2, r5
 800b9ee:	ab0a      	add	r3, sp, #40	; 0x28
 800b9f0:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b9f4:	6851      	ldr	r1, [r2, #4]
 800b9f6:	c303      	stmia	r3!, {r0, r1}
 800b9f8:	4631      	mov	r1, r6
 800b9fa:	a80a      	add	r0, sp, #40	; 0x28
 800b9fc:	f7ff fc0e 	bl	800b21c <_ZN8touchgfx4RectaNERKS0_>
 800ba00:	4b38      	ldr	r3, [pc, #224]	; (800bae4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800ba02:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ba06:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800ba0a:	2100      	movs	r1, #0
 800ba0c:	aa0a      	add	r2, sp, #40	; 0x28
 800ba0e:	4b36      	ldr	r3, [pc, #216]	; (800bae8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800ba10:	910c      	str	r1, [sp, #48]	; 0x30
 800ba12:	e892 0003 	ldmia.w	r2, {r0, r1}
 800ba16:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ba1a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800ba1e:	ab08      	add	r3, sp, #32
 800ba20:	e883 0003 	stmia.w	r3, {r0, r1}
 800ba24:	4618      	mov	r0, r3
 800ba26:	a90c      	add	r1, sp, #48	; 0x30
 800ba28:	f7ff fbf8 	bl	800b21c <_ZN8touchgfx4RectaNERKS0_>
 800ba2c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800ba2e:	2b00      	cmp	r3, #0
 800ba30:	d13c      	bne.n	800baac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800ba32:	2000      	movs	r0, #0
 800ba34:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 800ba38:	2600      	movs	r6, #0
 800ba3a:	682a      	ldr	r2, [r5, #0]
 800ba3c:	696b      	ldr	r3, [r5, #20]
 800ba3e:	616e      	str	r6, [r5, #20]
 800ba40:	9305      	str	r3, [sp, #20]
 800ba42:	6892      	ldr	r2, [r2, #8]
 800ba44:	a908      	add	r1, sp, #32
 800ba46:	4628      	mov	r0, r5
 800ba48:	4790      	blx	r2
 800ba4a:	9b05      	ldr	r3, [sp, #20]
 800ba4c:	616b      	str	r3, [r5, #20]
 800ba4e:	4652      	mov	r2, sl
 800ba50:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 800ba54:	4649      	mov	r1, r9
 800ba56:	4628      	mov	r0, r5
 800ba58:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800ba5c:	f7f7 f896 	bl	8002b8c <_ZN8touchgfx8Drawable5setXYEss>
 800ba60:	4b23      	ldr	r3, [pc, #140]	; (800baf0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800ba62:	9a01      	ldr	r2, [sp, #4]
 800ba64:	801a      	strh	r2, [r3, #0]
 800ba66:	4b23      	ldr	r3, [pc, #140]	; (800baf4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800ba68:	9a02      	ldr	r2, [sp, #8]
 800ba6a:	801a      	strh	r2, [r3, #0]
 800ba6c:	4b1d      	ldr	r3, [pc, #116]	; (800bae4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800ba6e:	9a03      	ldr	r2, [sp, #12]
 800ba70:	801a      	strh	r2, [r3, #0]
 800ba72:	4b1d      	ldr	r3, [pc, #116]	; (800bae8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800ba74:	9a04      	ldr	r2, [sp, #16]
 800ba76:	801a      	strh	r2, [r3, #0]
 800ba78:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800ba7c:	6823      	ldr	r3, [r4, #0]
 800ba7e:	4620      	mov	r0, r4
 800ba80:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ba82:	4798      	blx	r3
 800ba84:	6823      	ldr	r3, [r4, #0]
 800ba86:	4620      	mov	r0, r4
 800ba88:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ba8a:	4798      	blx	r3
 800ba8c:	b00f      	add	sp, #60	; 0x3c
 800ba8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ba92:	883b      	ldrh	r3, [r7, #0]
 800ba94:	f8ab 0000 	strh.w	r0, [fp]
 800ba98:	f8aa 3000 	strh.w	r3, [sl]
 800ba9c:	e789      	b.n	800b9b2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800ba9e:	462a      	mov	r2, r5
 800baa0:	ab0a      	add	r3, sp, #40	; 0x28
 800baa2:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800baa6:	6851      	ldr	r1, [r2, #4]
 800baa8:	c303      	stmia	r3!, {r0, r1}
 800baaa:	e7a9      	b.n	800ba00 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800baac:	a807      	add	r0, sp, #28
 800baae:	f009 f8a3 	bl	8014bf8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800bab2:	4606      	mov	r6, r0
 800bab4:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800bab6:	6803      	ldr	r3, [r0, #0]
 800bab8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800baba:	4798      	blx	r3
 800babc:	4286      	cmp	r6, r0
 800babe:	d1b8      	bne.n	800ba32 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800bac0:	f7f6 fc50 	bl	8002364 <_ZN8touchgfx3HAL3lcdEv>
 800bac4:	6803      	ldr	r3, [r0, #0]
 800bac6:	4606      	mov	r6, r0
 800bac8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800baca:	9305      	str	r3, [sp, #20]
 800bacc:	a807      	add	r0, sp, #28
 800bace:	f009 f893 	bl	8014bf8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800bad2:	9b05      	ldr	r3, [sp, #20]
 800bad4:	4601      	mov	r1, r0
 800bad6:	4630      	mov	r0, r6
 800bad8:	4798      	blx	r3
 800bada:	f080 0001 	eor.w	r0, r0, #1
 800bade:	b2c0      	uxtb	r0, r0
 800bae0:	e7a8      	b.n	800ba34 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800bae2:	bf00      	nop
 800bae4:	20017444 	.word	0x20017444
 800bae8:	20017446 	.word	0x20017446
 800baec:	20017448 	.word	0x20017448
 800baf0:	2001744a 	.word	0x2001744a
 800baf4:	2001744c 	.word	0x2001744c

0800baf8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800baf8:	b510      	push	{r4, lr}
 800bafa:	4b07      	ldr	r3, [pc, #28]	; (800bb18 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800bafc:	781b      	ldrb	r3, [r3, #0]
 800bafe:	4604      	mov	r4, r0
 800bb00:	b13b      	cbz	r3, 800bb12 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800bb02:	6803      	ldr	r3, [r0, #0]
 800bb04:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bb06:	4798      	blx	r3
 800bb08:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800bb0a:	4283      	cmp	r3, r0
 800bb0c:	d101      	bne.n	800bb12 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800bb0e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800bb10:	bd10      	pop	{r4, pc}
 800bb12:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800bb14:	e7fc      	b.n	800bb10 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800bb16:	bf00      	nop
 800bb18:	2001744e 	.word	0x2001744e

0800bb1c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800bb1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bb20:	b08a      	sub	sp, #40	; 0x28
 800bb22:	461d      	mov	r5, r3
 800bb24:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800bb28:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800bb2c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800bb30:	f8ad 3018 	strh.w	r3, [sp, #24]
 800bb34:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800bb38:	f8ad 301a 	strh.w	r3, [sp, #26]
 800bb3c:	2400      	movs	r4, #0
 800bb3e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800bb42:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800bb46:	f8ad 301c 	strh.w	r3, [sp, #28]
 800bb4a:	4690      	mov	r8, r2
 800bb4c:	4607      	mov	r7, r0
 800bb4e:	9404      	str	r4, [sp, #16]
 800bb50:	f88d 4020 	strb.w	r4, [sp, #32]
 800bb54:	f7ff ffd0 	bl	800baf8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bb58:	fb06 8505 	mla	r5, r6, r5, r8
 800bb5c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800bb60:	6878      	ldr	r0, [r7, #4]
 800bb62:	9505      	str	r5, [sp, #20]
 800bb64:	f8ad 601e 	strh.w	r6, [sp, #30]
 800bb68:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800bb6c:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 800bb70:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800bb74:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800bb78:	6803      	ldr	r3, [r0, #0]
 800bb7a:	a901      	add	r1, sp, #4
 800bb7c:	685b      	ldr	r3, [r3, #4]
 800bb7e:	4798      	blx	r3
 800bb80:	b00a      	add	sp, #40	; 0x28
 800bb82:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800bb86 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800bb86:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bb8a:	b08b      	sub	sp, #44	; 0x2c
 800bb8c:	2400      	movs	r4, #0
 800bb8e:	461d      	mov	r5, r3
 800bb90:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800bb94:	4688      	mov	r8, r1
 800bb96:	4691      	mov	r9, r2
 800bb98:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 800bb9c:	9404      	str	r4, [sp, #16]
 800bb9e:	4607      	mov	r7, r0
 800bba0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800bba4:	f7ff ffa8 	bl	800baf8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bba8:	fb06 9505 	mla	r5, r6, r5, r9
 800bbac:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800bbb0:	f8ad 3018 	strh.w	r3, [sp, #24]
 800bbb4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800bbb8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800bbbc:	6878      	ldr	r0, [r7, #4]
 800bbbe:	9505      	str	r5, [sp, #20]
 800bbc0:	f8ad 301a 	strh.w	r3, [sp, #26]
 800bbc4:	f8ad 401c 	strh.w	r4, [sp, #28]
 800bbc8:	f8ad 601e 	strh.w	r6, [sp, #30]
 800bbcc:	f8cd 8010 	str.w	r8, [sp, #16]
 800bbd0:	f8ad 4020 	strh.w	r4, [sp, #32]
 800bbd4:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800bbd8:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800bbdc:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800bbe0:	6803      	ldr	r3, [r0, #0]
 800bbe2:	a901      	add	r1, sp, #4
 800bbe4:	685b      	ldr	r3, [r3, #4]
 800bbe6:	4798      	blx	r3
 800bbe8:	b00b      	add	sp, #44	; 0x2c
 800bbea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800bbf0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800bbf0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bbf4:	b08a      	sub	sp, #40	; 0x28
 800bbf6:	4698      	mov	r8, r3
 800bbf8:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 800bbfc:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 800bc00:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 800bc04:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 800bc08:	2300      	movs	r3, #0
 800bc0a:	2d0b      	cmp	r5, #11
 800bc0c:	4606      	mov	r6, r0
 800bc0e:	9304      	str	r3, [sp, #16]
 800bc10:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 800bc14:	d138      	bne.n	800bc88 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800bc16:	2380      	movs	r3, #128	; 0x80
 800bc18:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800bc1c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800bc20:	f8ad 3018 	strh.w	r3, [sp, #24]
 800bc24:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800bc28:	f8ad 301a 	strh.w	r3, [sp, #26]
 800bc2c:	f88d 0020 	strb.w	r0, [sp, #32]
 800bc30:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800bc34:	f8ad 301c 	strh.w	r3, [sp, #28]
 800bc38:	4630      	mov	r0, r6
 800bc3a:	9203      	str	r2, [sp, #12]
 800bc3c:	f7ff ff5c 	bl	800baf8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bc40:	2c0b      	cmp	r4, #11
 800bc42:	bf98      	it	ls
 800bc44:	4b1b      	ldrls	r3, [pc, #108]	; (800bcb4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800bc46:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800bc4a:	bf98      	it	ls
 800bc4c:	5d19      	ldrbls	r1, [r3, r4]
 800bc4e:	f8ad 701e 	strh.w	r7, [sp, #30]
 800bc52:	bf88      	it	hi
 800bc54:	2100      	movhi	r1, #0
 800bc56:	fb02 8307 	mla	r3, r2, r7, r8
 800bc5a:	10c9      	asrs	r1, r1, #3
 800bc5c:	fb01 0003 	mla	r0, r1, r3, r0
 800bc60:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 800bc64:	9005      	str	r0, [sp, #20]
 800bc66:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800bc6a:	6870      	ldr	r0, [r6, #4]
 800bc6c:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 800bc70:	2300      	movs	r3, #0
 800bc72:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800bc76:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800bc7a:	6803      	ldr	r3, [r0, #0]
 800bc7c:	a901      	add	r1, sp, #4
 800bc7e:	685b      	ldr	r3, [r3, #4]
 800bc80:	4798      	blx	r3
 800bc82:	b00a      	add	sp, #40	; 0x28
 800bc84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bc88:	2d02      	cmp	r5, #2
 800bc8a:	d109      	bne.n	800bca0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800bc8c:	28ff      	cmp	r0, #255	; 0xff
 800bc8e:	d105      	bne.n	800bc9c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800bc90:	f1bc 0f00 	cmp.w	ip, #0
 800bc94:	bf14      	ite	ne
 800bc96:	2340      	movne	r3, #64	; 0x40
 800bc98:	2320      	moveq	r3, #32
 800bc9a:	e7bd      	b.n	800bc18 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800bc9c:	2340      	movs	r3, #64	; 0x40
 800bc9e:	e7bb      	b.n	800bc18 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800bca0:	28ff      	cmp	r0, #255	; 0xff
 800bca2:	d105      	bne.n	800bcb0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800bca4:	f1bc 0f00 	cmp.w	ip, #0
 800bca8:	bf14      	ite	ne
 800bcaa:	2304      	movne	r3, #4
 800bcac:	2301      	moveq	r3, #1
 800bcae:	e7b3      	b.n	800bc18 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800bcb0:	2304      	movs	r3, #4
 800bcb2:	e7b1      	b.n	800bc18 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800bcb4:	080238c8 	.word	0x080238c8

0800bcb8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800bcb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bcbc:	b08b      	sub	sp, #44	; 0x2c
 800bcbe:	461d      	mov	r5, r3
 800bcc0:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800bcc4:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 800bcc8:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 800bccc:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 800bcd0:	bf14      	ite	ne
 800bcd2:	2308      	movne	r3, #8
 800bcd4:	2302      	moveq	r3, #2
 800bcd6:	2400      	movs	r4, #0
 800bcd8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800bcdc:	4688      	mov	r8, r1
 800bcde:	4693      	mov	fp, r2
 800bce0:	9404      	str	r4, [sp, #16]
 800bce2:	4607      	mov	r7, r0
 800bce4:	f7ff ff08 	bl	800baf8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bce8:	2e0b      	cmp	r6, #11
 800bcea:	bf98      	it	ls
 800bcec:	4b15      	ldrls	r3, [pc, #84]	; (800bd44 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800bcee:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800bcf2:	bf98      	it	ls
 800bcf4:	5d9c      	ldrbls	r4, [r3, r6]
 800bcf6:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800bcfa:	f8ad 3018 	strh.w	r3, [sp, #24]
 800bcfe:	fb05 b50a 	mla	r5, r5, sl, fp
 800bd02:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800bd06:	f8ad 301a 	strh.w	r3, [sp, #26]
 800bd0a:	10e4      	asrs	r4, r4, #3
 800bd0c:	fb04 0405 	mla	r4, r4, r5, r0
 800bd10:	2300      	movs	r3, #0
 800bd12:	6878      	ldr	r0, [r7, #4]
 800bd14:	9405      	str	r4, [sp, #20]
 800bd16:	f8ad 301c 	strh.w	r3, [sp, #28]
 800bd1a:	f8ad a01e 	strh.w	sl, [sp, #30]
 800bd1e:	f8cd 8010 	str.w	r8, [sp, #16]
 800bd22:	f88d 9020 	strb.w	r9, [sp, #32]
 800bd26:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 800bd2a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800bd2e:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 800bd32:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 800bd36:	6803      	ldr	r3, [r0, #0]
 800bd38:	a901      	add	r1, sp, #4
 800bd3a:	685b      	ldr	r3, [r3, #4]
 800bd3c:	4798      	blx	r3
 800bd3e:	b00b      	add	sp, #44	; 0x2c
 800bd40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bd44:	080238c8 	.word	0x080238c8

0800bd48 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800bd48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bd4c:	461e      	mov	r6, r3
 800bd4e:	4b0a      	ldr	r3, [pc, #40]	; (800bd78 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800bd50:	460f      	mov	r7, r1
 800bd52:	881d      	ldrh	r5, [r3, #0]
 800bd54:	4690      	mov	r8, r2
 800bd56:	f7f6 fb05 	bl	8002364 <_ZN8touchgfx3HAL3lcdEv>
 800bd5a:	6803      	ldr	r3, [r0, #0]
 800bd5c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bd5e:	4798      	blx	r3
 800bd60:	280b      	cmp	r0, #11
 800bd62:	bf9a      	itte	ls
 800bd64:	4b05      	ldrls	r3, [pc, #20]	; (800bd7c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800bd66:	5c1c      	ldrbls	r4, [r3, r0]
 800bd68:	2400      	movhi	r4, #0
 800bd6a:	fb08 7005 	mla	r0, r8, r5, r7
 800bd6e:	10e4      	asrs	r4, r4, #3
 800bd70:	fb04 6000 	mla	r0, r4, r0, r6
 800bd74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bd78:	2001744a 	.word	0x2001744a
 800bd7c:	080238c8 	.word	0x080238c8

0800bd80 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800bd80:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bd82:	b08b      	sub	sp, #44	; 0x2c
 800bd84:	461f      	mov	r7, r3
 800bd86:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800bd8a:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800bd8e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800bd92:	f8ad 3018 	strh.w	r3, [sp, #24]
 800bd96:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800bd9a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800bd9e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800bda2:	f8ad 301c 	strh.w	r3, [sp, #28]
 800bda6:	2500      	movs	r5, #0
 800bda8:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800bdac:	f88d 3020 	strb.w	r3, [sp, #32]
 800bdb0:	4604      	mov	r4, r0
 800bdb2:	4616      	mov	r6, r2
 800bdb4:	9504      	str	r5, [sp, #16]
 800bdb6:	f7ff fe9f 	bl	800baf8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bdba:	463a      	mov	r2, r7
 800bdbc:	4631      	mov	r1, r6
 800bdbe:	4603      	mov	r3, r0
 800bdc0:	4620      	mov	r0, r4
 800bdc2:	f7ff ffc1 	bl	800bd48 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800bdc6:	4b0e      	ldr	r3, [pc, #56]	; (800be00 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800bdc8:	9005      	str	r0, [sp, #20]
 800bdca:	881b      	ldrh	r3, [r3, #0]
 800bdcc:	f8ad 301e 	strh.w	r3, [sp, #30]
 800bdd0:	f7f6 fac8 	bl	8002364 <_ZN8touchgfx3HAL3lcdEv>
 800bdd4:	6803      	ldr	r3, [r0, #0]
 800bdd6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bdd8:	4798      	blx	r3
 800bdda:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800bddc:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800bde0:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800bde4:	9304      	str	r3, [sp, #16]
 800bde6:	6860      	ldr	r0, [r4, #4]
 800bde8:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800bdec:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800bdf0:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 800bdf4:	6803      	ldr	r3, [r0, #0]
 800bdf6:	a901      	add	r1, sp, #4
 800bdf8:	685b      	ldr	r3, [r3, #4]
 800bdfa:	4798      	blx	r3
 800bdfc:	b00b      	add	sp, #44	; 0x2c
 800bdfe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800be00:	2001744a 	.word	0x2001744a

0800be04 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800be04:	b5f0      	push	{r4, r5, r6, r7, lr}
 800be06:	b08d      	sub	sp, #52	; 0x34
 800be08:	466b      	mov	r3, sp
 800be0a:	e883 0006 	stmia.w	r3, {r1, r2}
 800be0e:	2300      	movs	r3, #0
 800be10:	9306      	str	r3, [sp, #24]
 800be12:	6803      	ldr	r3, [r0, #0]
 800be14:	f8bd 6000 	ldrh.w	r6, [sp]
 800be18:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800be1a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800be1e:	2501      	movs	r5, #1
 800be20:	9503      	str	r5, [sp, #12]
 800be22:	4604      	mov	r4, r0
 800be24:	4798      	blx	r3
 800be26:	463a      	mov	r2, r7
 800be28:	4631      	mov	r1, r6
 800be2a:	4603      	mov	r3, r0
 800be2c:	4620      	mov	r0, r4
 800be2e:	f7ff ff8b 	bl	800bd48 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800be32:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800be34:	9307      	str	r3, [sp, #28]
 800be36:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800be3a:	f8ad 3020 	strh.w	r3, [sp, #32]
 800be3e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800be42:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800be46:	4b0f      	ldr	r3, [pc, #60]	; (800be84 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800be48:	9004      	str	r0, [sp, #16]
 800be4a:	881b      	ldrh	r3, [r3, #0]
 800be4c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800be50:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800be54:	f7f6 fa86 	bl	8002364 <_ZN8touchgfx3HAL3lcdEv>
 800be58:	6803      	ldr	r3, [r0, #0]
 800be5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800be5c:	4798      	blx	r3
 800be5e:	23ff      	movs	r3, #255	; 0xff
 800be60:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800be64:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800be68:	6860      	ldr	r0, [r4, #4]
 800be6a:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800be6e:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800be72:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800be76:	6803      	ldr	r3, [r0, #0]
 800be78:	a903      	add	r1, sp, #12
 800be7a:	685b      	ldr	r3, [r3, #4]
 800be7c:	4798      	blx	r3
 800be7e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800be80:	b00d      	add	sp, #52	; 0x34
 800be82:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800be84:	2001744a 	.word	0x2001744a

0800be88 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800be88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800be8c:	b08c      	sub	sp, #48	; 0x30
 800be8e:	461e      	mov	r6, r3
 800be90:	466d      	mov	r5, sp
 800be92:	2300      	movs	r3, #0
 800be94:	e885 0006 	stmia.w	r5, {r1, r2}
 800be98:	9306      	str	r3, [sp, #24]
 800be9a:	6803      	ldr	r3, [r0, #0]
 800be9c:	f8bd 7000 	ldrh.w	r7, [sp]
 800bea0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bea2:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800bea6:	2501      	movs	r5, #1
 800bea8:	9503      	str	r5, [sp, #12]
 800beaa:	4604      	mov	r4, r0
 800beac:	4798      	blx	r3
 800beae:	4642      	mov	r2, r8
 800beb0:	4639      	mov	r1, r7
 800beb2:	4603      	mov	r3, r0
 800beb4:	4620      	mov	r0, r4
 800beb6:	f7ff ff47 	bl	800bd48 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800beba:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800bebe:	f8ad 3020 	strh.w	r3, [sp, #32]
 800bec2:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800bec6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800beca:	4b11      	ldr	r3, [pc, #68]	; (800bf10 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800becc:	9004      	str	r0, [sp, #16]
 800bece:	881b      	ldrh	r3, [r3, #0]
 800bed0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800bed4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800bed6:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800beda:	9607      	str	r6, [sp, #28]
 800bedc:	f7f6 fa42 	bl	8002364 <_ZN8touchgfx3HAL3lcdEv>
 800bee0:	6803      	ldr	r3, [r0, #0]
 800bee2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bee4:	4798      	blx	r3
 800bee6:	23ff      	movs	r3, #255	; 0xff
 800bee8:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800beec:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800bef0:	6860      	ldr	r0, [r4, #4]
 800bef2:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800bef6:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800befa:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800befe:	6803      	ldr	r3, [r0, #0]
 800bf00:	a903      	add	r1, sp, #12
 800bf02:	685b      	ldr	r3, [r3, #4]
 800bf04:	4798      	blx	r3
 800bf06:	4630      	mov	r0, r6
 800bf08:	b00c      	add	sp, #48	; 0x30
 800bf0a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bf0e:	bf00      	nop
 800bf10:	2001744a 	.word	0x2001744a

0800bf14 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800bf14:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bf16:	b085      	sub	sp, #20
 800bf18:	ac02      	add	r4, sp, #8
 800bf1a:	e884 0006 	stmia.w	r4, {r1, r2}
 800bf1e:	4605      	mov	r5, r0
 800bf20:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800bf24:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800bf28:	f7ff fde6 	bl	800baf8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bf2c:	463a      	mov	r2, r7
 800bf2e:	4603      	mov	r3, r0
 800bf30:	4631      	mov	r1, r6
 800bf32:	4628      	mov	r0, r5
 800bf34:	f7ff ff08 	bl	800bd48 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800bf38:	4a05      	ldr	r2, [pc, #20]	; (800bf50 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800bf3a:	682b      	ldr	r3, [r5, #0]
 800bf3c:	8812      	ldrh	r2, [r2, #0]
 800bf3e:	9200      	str	r2, [sp, #0]
 800bf40:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 800bf42:	e894 0006 	ldmia.w	r4, {r1, r2}
 800bf46:	4603      	mov	r3, r0
 800bf48:	4628      	mov	r0, r5
 800bf4a:	47b0      	blx	r6
 800bf4c:	b005      	add	sp, #20
 800bf4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bf50:	2001744a 	.word	0x2001744a

0800bf54 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800bf54:	b570      	push	{r4, r5, r6, lr}
 800bf56:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800bf5a:	4604      	mov	r4, r0
 800bf5c:	b19b      	cbz	r3, 800bf86 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800bf5e:	2002      	movs	r0, #2
 800bf60:	f7f4 fbf0 	bl	8000744 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800bf64:	2300      	movs	r3, #0
 800bf66:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800bf6a:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800bf6e:	6823      	ldr	r3, [r4, #0]
 800bf70:	4620      	mov	r0, r4
 800bf72:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800bf76:	f7ff fdbf 	bl	800baf8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bf7a:	462b      	mov	r3, r5
 800bf7c:	4601      	mov	r1, r0
 800bf7e:	4620      	mov	r0, r4
 800bf80:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bf84:	4718      	bx	r3
 800bf86:	bd70      	pop	{r4, r5, r6, pc}

0800bf88 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800bf88:	b538      	push	{r3, r4, r5, lr}
 800bf8a:	f890 3078 	ldrb.w	r3, [r0, #120]	; 0x78
 800bf8e:	428b      	cmp	r3, r1
 800bf90:	4604      	mov	r4, r0
 800bf92:	460d      	mov	r5, r1
 800bf94:	d006      	beq.n	800bfa4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800bf96:	6803      	ldr	r3, [r0, #0]
 800bf98:	b929      	cbnz	r1, 800bfa6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800bf9a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800bf9e:	4798      	blx	r3
 800bfa0:	f884 5078 	strb.w	r5, [r4, #120]	; 0x78
 800bfa4:	bd38      	pop	{r3, r4, r5, pc}
 800bfa6:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800bfaa:	e7f8      	b.n	800bf9e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800bfac <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800bfac:	b510      	push	{r4, lr}
 800bfae:	4b0d      	ldr	r3, [pc, #52]	; (800bfe4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800bfb0:	781b      	ldrb	r3, [r3, #0]
 800bfb2:	4604      	mov	r4, r0
 800bfb4:	b95b      	cbnz	r3, 800bfce <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800bfb6:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800bfba:	2b02      	cmp	r3, #2
 800bfbc:	d007      	beq.n	800bfce <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800bfbe:	6840      	ldr	r0, [r0, #4]
 800bfc0:	f000 f92a 	bl	800c218 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800bfc4:	b118      	cbz	r0, 800bfce <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800bfc6:	6862      	ldr	r2, [r4, #4]
 800bfc8:	7a53      	ldrb	r3, [r2, #9]
 800bfca:	2b00      	cmp	r3, #0
 800bfcc:	d0fc      	beq.n	800bfc8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800bfce:	f7f4 fcb3 	bl	8000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800bfd2:	4620      	mov	r0, r4
 800bfd4:	2100      	movs	r1, #0
 800bfd6:	f7ff ffd7 	bl	800bf88 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bfda:	4620      	mov	r0, r4
 800bfdc:	f7ff fd8c 	bl	800baf8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bfe0:	bd10      	pop	{r4, pc}
 800bfe2:	bf00      	nop
 800bfe4:	2001744e 	.word	0x2001744e

0800bfe8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800bfe8:	b570      	push	{r4, r5, r6, lr}
 800bfea:	4604      	mov	r4, r0
 800bfec:	6803      	ldr	r3, [r0, #0]
 800bfee:	b919      	cbnz	r1, 800bff8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800bff0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bff2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bff6:	4718      	bx	r3
 800bff8:	2200      	movs	r2, #0
 800bffa:	f890 6078 	ldrb.w	r6, [r0, #120]	; 0x78
 800bffe:	f880 2078 	strb.w	r2, [r0, #120]	; 0x78
 800c002:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c004:	4798      	blx	r3
 800c006:	f884 6078 	strb.w	r6, [r4, #120]	; 0x78
 800c00a:	4605      	mov	r5, r0
 800c00c:	2101      	movs	r1, #1
 800c00e:	4620      	mov	r0, r4
 800c010:	f7ff ffba 	bl	800bf88 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800c014:	4628      	mov	r0, r5
 800c016:	bd70      	pop	{r4, r5, r6, pc}

0800c018 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800c018:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800c01c:	1a13      	subs	r3, r2, r0
 800c01e:	4258      	negs	r0, r3
 800c020:	4158      	adcs	r0, r3
 800c022:	4770      	bx	lr

0800c024 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800c024:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800c028:	1a9b      	subs	r3, r3, r2
 800c02a:	2b00      	cmp	r3, #0
 800c02c:	bfdc      	itt	le
 800c02e:	6882      	ldrle	r2, [r0, #8]
 800c030:	189b      	addle	r3, r3, r2
 800c032:	2b01      	cmp	r3, #1
 800c034:	bfcc      	ite	gt
 800c036:	2000      	movgt	r0, #0
 800c038:	2001      	movle	r0, #1
 800c03a:	4770      	bx	lr

0800c03c <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800c03c:	6902      	ldr	r2, [r0, #16]
 800c03e:	6843      	ldr	r3, [r0, #4]
 800c040:	2024      	movs	r0, #36	; 0x24
 800c042:	fb00 3002 	mla	r0, r0, r2, r3
 800c046:	4770      	bx	lr

0800c048 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800c048:	6803      	ldr	r3, [r0, #0]
 800c04a:	691b      	ldr	r3, [r3, #16]
 800c04c:	4718      	bx	r3

0800c04e <_ZN8touchgfx13DMA_Interface7executeEv>:
 800c04e:	b570      	push	{r4, r5, r6, lr}
 800c050:	2301      	movs	r3, #1
 800c052:	7203      	strb	r3, [r0, #8]
 800c054:	4604      	mov	r4, r0
 800c056:	6840      	ldr	r0, [r0, #4]
 800c058:	6803      	ldr	r3, [r0, #0]
 800c05a:	699b      	ldr	r3, [r3, #24]
 800c05c:	4798      	blx	r3
 800c05e:	6803      	ldr	r3, [r0, #0]
 800c060:	2b40      	cmp	r3, #64	; 0x40
 800c062:	4605      	mov	r5, r0
 800c064:	d00c      	beq.n	800c080 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800c066:	d810      	bhi.n	800c08a <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800c068:	2b04      	cmp	r3, #4
 800c06a:	d01d      	beq.n	800c0a8 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800c06c:	d804      	bhi.n	800c078 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800c06e:	2b01      	cmp	r3, #1
 800c070:	d006      	beq.n	800c080 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800c072:	2b02      	cmp	r3, #2
 800c074:	d02c      	beq.n	800c0d0 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800c076:	bd70      	pop	{r4, r5, r6, pc}
 800c078:	2b08      	cmp	r3, #8
 800c07a:	d01d      	beq.n	800c0b8 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800c07c:	2b20      	cmp	r3, #32
 800c07e:	d1fa      	bne.n	800c076 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800c080:	6823      	ldr	r3, [r4, #0]
 800c082:	4620      	mov	r0, r4
 800c084:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c086:	4798      	blx	r3
 800c088:	e013      	b.n	800c0b2 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800c08a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800c08e:	d0f7      	beq.n	800c080 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800c090:	d804      	bhi.n	800c09c <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800c092:	2b80      	cmp	r3, #128	; 0x80
 800c094:	d0f4      	beq.n	800c080 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800c096:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800c09a:	e7f0      	b.n	800c07e <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800c09c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800c0a0:	d0ee      	beq.n	800c080 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800c0a2:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800c0a6:	e7e5      	b.n	800c074 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800c0a8:	6823      	ldr	r3, [r4, #0]
 800c0aa:	7f01      	ldrb	r1, [r0, #28]
 800c0ac:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c0ae:	4620      	mov	r0, r4
 800c0b0:	4798      	blx	r3
 800c0b2:	6823      	ldr	r3, [r4, #0]
 800c0b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c0b6:	e006      	b.n	800c0c6 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800c0b8:	6823      	ldr	r3, [r4, #0]
 800c0ba:	7f01      	ldrb	r1, [r0, #28]
 800c0bc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c0be:	4620      	mov	r0, r4
 800c0c0:	4798      	blx	r3
 800c0c2:	6823      	ldr	r3, [r4, #0]
 800c0c4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c0c6:	4629      	mov	r1, r5
 800c0c8:	4620      	mov	r0, r4
 800c0ca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c0ce:	4718      	bx	r3
 800c0d0:	6823      	ldr	r3, [r4, #0]
 800c0d2:	4620      	mov	r0, r4
 800c0d4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c0d6:	4798      	blx	r3
 800c0d8:	e7f3      	b.n	800c0c2 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800c0da <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800c0da:	4770      	bx	lr

0800c0dc <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800c0dc:	4770      	bx	lr

0800c0de <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800c0de:	4770      	bx	lr

0800c0e0 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800c0e0:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800c0e4:	1ad2      	subs	r2, r2, r3
 800c0e6:	2a00      	cmp	r2, #0
 800c0e8:	b510      	push	{r4, lr}
 800c0ea:	bfdc      	itt	le
 800c0ec:	6884      	ldrle	r4, [r0, #8]
 800c0ee:	1912      	addle	r2, r2, r4
 800c0f0:	2a01      	cmp	r2, #1
 800c0f2:	dd16      	ble.n	800c122 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800c0f4:	6842      	ldr	r2, [r0, #4]
 800c0f6:	2424      	movs	r4, #36	; 0x24
 800c0f8:	fb04 2303 	mla	r3, r4, r3, r2
 800c0fc:	f101 0220 	add.w	r2, r1, #32
 800c100:	f851 4b04 	ldr.w	r4, [r1], #4
 800c104:	f843 4b04 	str.w	r4, [r3], #4
 800c108:	4291      	cmp	r1, r2
 800c10a:	d1f9      	bne.n	800c100 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800c10c:	780a      	ldrb	r2, [r1, #0]
 800c10e:	701a      	strb	r2, [r3, #0]
 800c110:	68c3      	ldr	r3, [r0, #12]
 800c112:	6882      	ldr	r2, [r0, #8]
 800c114:	f3bf 8f5b 	dmb	ish
 800c118:	3301      	adds	r3, #1
 800c11a:	429a      	cmp	r2, r3
 800c11c:	bfd8      	it	le
 800c11e:	1a9b      	suble	r3, r3, r2
 800c120:	60c3      	str	r3, [r0, #12]
 800c122:	bd10      	pop	{r4, pc}

0800c124 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800c124:	6903      	ldr	r3, [r0, #16]
 800c126:	6882      	ldr	r2, [r0, #8]
 800c128:	f3bf 8f5b 	dmb	ish
 800c12c:	3301      	adds	r3, #1
 800c12e:	429a      	cmp	r2, r3
 800c130:	bfd8      	it	le
 800c132:	1a9b      	suble	r3, r3, r2
 800c134:	6103      	str	r3, [r0, #16]
 800c136:	4770      	bx	lr

0800c138 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800c138:	b570      	push	{r4, r5, r6, lr}
 800c13a:	4604      	mov	r4, r0
 800c13c:	460e      	mov	r6, r1
 800c13e:	6860      	ldr	r0, [r4, #4]
 800c140:	6803      	ldr	r3, [r0, #0]
 800c142:	685b      	ldr	r3, [r3, #4]
 800c144:	4798      	blx	r3
 800c146:	2800      	cmp	r0, #0
 800c148:	d1f9      	bne.n	800c13e <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800c14a:	4d0d      	ldr	r5, [pc, #52]	; (800c180 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800c14c:	6828      	ldr	r0, [r5, #0]
 800c14e:	6803      	ldr	r3, [r0, #0]
 800c150:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800c152:	4798      	blx	r3
 800c154:	f7f4 fbfe 	bl	8000954 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800c158:	6828      	ldr	r0, [r5, #0]
 800c15a:	2101      	movs	r1, #1
 800c15c:	f7ff ff14 	bl	800bf88 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800c160:	6860      	ldr	r0, [r4, #4]
 800c162:	6803      	ldr	r3, [r0, #0]
 800c164:	4631      	mov	r1, r6
 800c166:	689b      	ldr	r3, [r3, #8]
 800c168:	4798      	blx	r3
 800c16a:	6823      	ldr	r3, [r4, #0]
 800c16c:	4620      	mov	r0, r4
 800c16e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c170:	4798      	blx	r3
 800c172:	6828      	ldr	r0, [r5, #0]
 800c174:	6803      	ldr	r3, [r0, #0]
 800c176:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c17a:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800c17c:	4718      	bx	r3
 800c17e:	bf00      	nop
 800c180:	20017450 	.word	0x20017450

0800c184 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800c184:	b508      	push	{r3, lr}
 800c186:	f7f4 fbd7 	bl	8000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800c18a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800c18e:	f7f4 bbdb 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800c192 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800c192:	b510      	push	{r4, lr}
 800c194:	2114      	movs	r1, #20
 800c196:	4604      	mov	r4, r0
 800c198:	f014 fcc9 	bl	8020b2e <_ZdlPvj>
 800c19c:	4620      	mov	r0, r4
 800c19e:	bd10      	pop	{r4, pc}

0800c1a0 <_ZN8touchgfx13DMA_Interface5startEv>:
 800c1a0:	b510      	push	{r4, lr}
 800c1a2:	4604      	mov	r4, r0
 800c1a4:	6840      	ldr	r0, [r0, #4]
 800c1a6:	6803      	ldr	r3, [r0, #0]
 800c1a8:	681b      	ldr	r3, [r3, #0]
 800c1aa:	4798      	blx	r3
 800c1ac:	b948      	cbnz	r0, 800c1c2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800c1ae:	7a63      	ldrb	r3, [r4, #9]
 800c1b0:	b13b      	cbz	r3, 800c1c2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800c1b2:	7a23      	ldrb	r3, [r4, #8]
 800c1b4:	b92b      	cbnz	r3, 800c1c2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800c1b6:	6823      	ldr	r3, [r4, #0]
 800c1b8:	4620      	mov	r0, r4
 800c1ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c1bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c1c0:	4718      	bx	r3
 800c1c2:	bd10      	pop	{r4, pc}

0800c1c4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800c1c4:	b570      	push	{r4, r5, r6, lr}
 800c1c6:	4604      	mov	r4, r0
 800c1c8:	6840      	ldr	r0, [r0, #4]
 800c1ca:	6803      	ldr	r3, [r0, #0]
 800c1cc:	681b      	ldr	r3, [r3, #0]
 800c1ce:	4798      	blx	r3
 800c1d0:	4605      	mov	r5, r0
 800c1d2:	b930      	cbnz	r0, 800c1e2 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800c1d4:	7a23      	ldrb	r3, [r4, #8]
 800c1d6:	b123      	cbz	r3, 800c1e2 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800c1d8:	6860      	ldr	r0, [r4, #4]
 800c1da:	6803      	ldr	r3, [r0, #0]
 800c1dc:	695b      	ldr	r3, [r3, #20]
 800c1de:	4798      	blx	r3
 800c1e0:	7225      	strb	r5, [r4, #8]
 800c1e2:	6860      	ldr	r0, [r4, #4]
 800c1e4:	6803      	ldr	r3, [r0, #0]
 800c1e6:	681b      	ldr	r3, [r3, #0]
 800c1e8:	4798      	blx	r3
 800c1ea:	b928      	cbnz	r0, 800c1f8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800c1ec:	6823      	ldr	r3, [r4, #0]
 800c1ee:	4620      	mov	r0, r4
 800c1f0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c1f2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c1f6:	4718      	bx	r3
 800c1f8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c1fc:	f7f4 bbb2 	b.w	8000964 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800c200 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800c200:	b510      	push	{r4, lr}
 800c202:	4c04      	ldr	r4, [pc, #16]	; (800c214 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800c204:	6082      	str	r2, [r0, #8]
 800c206:	2200      	movs	r2, #0
 800c208:	e9c0 4100 	strd	r4, r1, [r0]
 800c20c:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800c210:	bd10      	pop	{r4, pc}
 800c212:	bf00      	nop
 800c214:	080238dc 	.word	0x080238dc

0800c218 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800c218:	6840      	ldr	r0, [r0, #4]
 800c21a:	6803      	ldr	r3, [r0, #0]
 800c21c:	681b      	ldr	r3, [r3, #0]
 800c21e:	4718      	bx	r3

0800c220 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800c220:	4b06      	ldr	r3, [pc, #24]	; (800c23c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 800c222:	60c1      	str	r1, [r0, #12]
 800c224:	094a      	lsrs	r2, r1, #5
 800c226:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 800c22a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800c22e:	4313      	orrs	r3, r2
 800c230:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 800c234:	4319      	orrs	r1, r3
 800c236:	8201      	strh	r1, [r0, #16]
 800c238:	4770      	bx	lr
 800c23a:	bf00      	nop
 800c23c:	fffff800 	.word	0xfffff800

0800c240 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800c240:	f1a0 0008 	sub.w	r0, r0, #8
 800c244:	e7ec      	b.n	800c220 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 800c246:	bf00      	nop

0800c248 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 800c248:	b508      	push	{r3, lr}
 800c24a:	4b05      	ldr	r3, [pc, #20]	; (800c260 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 800c24c:	6818      	ldr	r0, [r3, #0]
 800c24e:	6803      	ldr	r3, [r0, #0]
 800c250:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800c254:	4798      	blx	r3
 800c256:	1e43      	subs	r3, r0, #1
 800c258:	4258      	negs	r0, r3
 800c25a:	4158      	adcs	r0, r3
 800c25c:	bd08      	pop	{r3, pc}
 800c25e:	bf00      	nop
 800c260:	20017450 	.word	0x20017450

0800c264 <_ZN8touchgfx13PainterRGB565D1Ev>:
 800c264:	4770      	bx	lr

0800c266 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 800c266:	3808      	subs	r0, #8
 800c268:	4770      	bx	lr

0800c26a <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 800c26a:	b430      	push	{r4, r5}
 800c26c:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800c270:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 800c274:	8a02      	ldrh	r2, [r0, #16]
 800c276:	9202      	str	r2, [sp, #8]
 800c278:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800c27c:	68c2      	ldr	r2, [r0, #12]
 800c27e:	4629      	mov	r1, r5
 800c280:	4620      	mov	r0, r4
 800c282:	bc30      	pop	{r4, r5}
 800c284:	f7f4 bd2c 	b.w	8000ce0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0800c288 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 800c288:	f7f4 bd20 	b.w	8000ccc <_ZN8touchgfx5paint6rgb5658tearDownEv>

0800c28c <_ZN8touchgfx13PainterRGB565D0Ev>:
 800c28c:	b510      	push	{r4, lr}
 800c28e:	2114      	movs	r1, #20
 800c290:	4604      	mov	r4, r0
 800c292:	f014 fc4c 	bl	8020b2e <_ZdlPvj>
 800c296:	4620      	mov	r0, r4
 800c298:	bd10      	pop	{r4, pc}

0800c29a <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 800c29a:	f1a0 0008 	sub.w	r0, r0, #8
 800c29e:	e7f5      	b.n	800c28c <_ZN8touchgfx13PainterRGB565D0Ev>

0800c2a0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800c2a0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800c2a2:	6803      	ldr	r3, [r0, #0]
 800c2a4:	460d      	mov	r5, r1
 800c2a6:	4604      	mov	r4, r0
 800c2a8:	4601      	mov	r1, r0
 800c2aa:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800c2ac:	a802      	add	r0, sp, #8
 800c2ae:	4798      	blx	r3
 800c2b0:	6828      	ldr	r0, [r5, #0]
 800c2b2:	6869      	ldr	r1, [r5, #4]
 800c2b4:	466b      	mov	r3, sp
 800c2b6:	c303      	stmia	r3!, {r0, r1}
 800c2b8:	4668      	mov	r0, sp
 800c2ba:	4619      	mov	r1, r3
 800c2bc:	f7fe ffae 	bl	800b21c <_ZN8touchgfx4RectaNERKS0_>
 800c2c0:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800c2c2:	b1a8      	cbz	r0, 800c2f0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800c2c4:	6803      	ldr	r3, [r0, #0]
 800c2c6:	1d21      	adds	r1, r4, #4
 800c2c8:	68db      	ldr	r3, [r3, #12]
 800c2ca:	4798      	blx	r3
 800c2cc:	b180      	cbz	r0, 800c2f0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800c2ce:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800c2d2:	2b00      	cmp	r3, #0
 800c2d4:	dd0c      	ble.n	800c2f0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800c2d6:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 800c2da:	2d00      	cmp	r5, #0
 800c2dc:	dd08      	ble.n	800c2f0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800c2de:	4a2d      	ldr	r2, [pc, #180]	; (800c394 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xf4>)
 800c2e0:	7812      	ldrb	r2, [r2, #0]
 800c2e2:	b13a      	cbz	r2, 800c2f4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x54>
 800c2e4:	2a01      	cmp	r2, #1
 800c2e6:	d02d      	beq.n	800c344 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa4>
 800c2e8:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800c2ea:	6803      	ldr	r3, [r0, #0]
 800c2ec:	691b      	ldr	r3, [r3, #16]
 800c2ee:	4798      	blx	r3
 800c2f0:	b004      	add	sp, #16
 800c2f2:	bd70      	pop	{r4, r5, r6, pc}
 800c2f4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800c2f8:	441d      	add	r5, r3
 800c2fa:	b2ad      	uxth	r5, r5
 800c2fc:	b22e      	sxth	r6, r5
 800c2fe:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800c302:	42b3      	cmp	r3, r6
 800c304:	daf0      	bge.n	800c2e8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800c306:	6823      	ldr	r3, [r4, #0]
 800c308:	4669      	mov	r1, sp
 800c30a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800c30c:	4620      	mov	r0, r4
 800c30e:	4798      	blx	r3
 800c310:	b940      	cbnz	r0, 800c324 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
 800c312:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800c316:	2b01      	cmp	r3, #1
 800c318:	d004      	beq.n	800c324 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
 800c31a:	3301      	adds	r3, #1
 800c31c:	105b      	asrs	r3, r3, #1
 800c31e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c322:	e7f0      	b.n	800c306 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x66>
 800c324:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800c328:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800c32c:	4413      	add	r3, r2
 800c32e:	b29b      	uxth	r3, r3
 800c330:	441a      	add	r2, r3
 800c332:	b212      	sxth	r2, r2
 800c334:	4296      	cmp	r6, r2
 800c336:	f8ad 3002 	strh.w	r3, [sp, #2]
 800c33a:	dae0      	bge.n	800c2fe <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800c33c:	1aeb      	subs	r3, r5, r3
 800c33e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c342:	e7dc      	b.n	800c2fe <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800c344:	f8bd 5000 	ldrh.w	r5, [sp]
 800c348:	441d      	add	r5, r3
 800c34a:	b2ad      	uxth	r5, r5
 800c34c:	b22e      	sxth	r6, r5
 800c34e:	f9bd 3000 	ldrsh.w	r3, [sp]
 800c352:	42b3      	cmp	r3, r6
 800c354:	dac8      	bge.n	800c2e8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800c356:	6823      	ldr	r3, [r4, #0]
 800c358:	4669      	mov	r1, sp
 800c35a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800c35c:	4620      	mov	r0, r4
 800c35e:	4798      	blx	r3
 800c360:	b940      	cbnz	r0, 800c374 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
 800c362:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800c366:	2b01      	cmp	r3, #1
 800c368:	d004      	beq.n	800c374 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
 800c36a:	3301      	adds	r3, #1
 800c36c:	105b      	asrs	r3, r3, #1
 800c36e:	f8ad 3004 	strh.w	r3, [sp, #4]
 800c372:	e7f0      	b.n	800c356 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xb6>
 800c374:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800c378:	f8bd 3000 	ldrh.w	r3, [sp]
 800c37c:	4413      	add	r3, r2
 800c37e:	b29b      	uxth	r3, r3
 800c380:	441a      	add	r2, r3
 800c382:	b212      	sxth	r2, r2
 800c384:	4296      	cmp	r6, r2
 800c386:	f8ad 3000 	strh.w	r3, [sp]
 800c38a:	dae0      	bge.n	800c34e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800c38c:	1aeb      	subs	r3, r5, r3
 800c38e:	f8ad 3004 	strh.w	r3, [sp, #4]
 800c392:	e7dc      	b.n	800c34e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800c394:	20017448 	.word	0x20017448

0800c398 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800c398:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800c39a:	6803      	ldr	r3, [r0, #0]
 800c39c:	4604      	mov	r4, r0
 800c39e:	4601      	mov	r1, r0
 800c3a0:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800c3a2:	4668      	mov	r0, sp
 800c3a4:	4798      	blx	r3
 800c3a6:	2100      	movs	r1, #0
 800c3a8:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c3ac:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c3b0:	9102      	str	r1, [sp, #8]
 800c3b2:	4668      	mov	r0, sp
 800c3b4:	a902      	add	r1, sp, #8
 800c3b6:	f8ad 200c 	strh.w	r2, [sp, #12]
 800c3ba:	f8ad 300e 	strh.w	r3, [sp, #14]
 800c3be:	f7fe ff2d 	bl	800b21c <_ZN8touchgfx4RectaNERKS0_>
 800c3c2:	6823      	ldr	r3, [r4, #0]
 800c3c4:	4669      	mov	r1, sp
 800c3c6:	691b      	ldr	r3, [r3, #16]
 800c3c8:	4620      	mov	r0, r4
 800c3ca:	4798      	blx	r3
 800c3cc:	b004      	add	sp, #16
 800c3ce:	bd10      	pop	{r4, pc}

0800c3d0 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800c3d0:	2101      	movs	r1, #1
 800c3d2:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800c3d6:	490b      	ldr	r1, [pc, #44]	; (800c404 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 800c3d8:	6001      	str	r1, [r0, #0]
 800c3da:	2200      	movs	r2, #0
 800c3dc:	21ff      	movs	r1, #255	; 0xff
 800c3de:	8082      	strh	r2, [r0, #4]
 800c3e0:	80c2      	strh	r2, [r0, #6]
 800c3e2:	8102      	strh	r2, [r0, #8]
 800c3e4:	8142      	strh	r2, [r0, #10]
 800c3e6:	8182      	strh	r2, [r0, #12]
 800c3e8:	81c2      	strh	r2, [r0, #14]
 800c3ea:	8202      	strh	r2, [r0, #16]
 800c3ec:	8242      	strh	r2, [r0, #18]
 800c3ee:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800c3f2:	61c2      	str	r2, [r0, #28]
 800c3f4:	8402      	strh	r2, [r0, #32]
 800c3f6:	8442      	strh	r2, [r0, #34]	; 0x22
 800c3f8:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800c3fc:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 800c400:	6282      	str	r2, [r0, #40]	; 0x28
 800c402:	4770      	bx	lr
 800c404:	08023938 	.word	0x08023938

0800c408 <_ZN8touchgfx17AbstractDataGraph9setScaleXEib>:
 800c408:	6301      	str	r1, [r0, #48]	; 0x30
 800c40a:	4770      	bx	lr

0800c40c <_ZNK8touchgfx17AbstractDataGraph9getScaleXEv>:
 800c40c:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800c40e:	4770      	bx	lr

0800c410 <_ZN8touchgfx17AbstractDataGraph9setScaleYEib>:
 800c410:	6341      	str	r1, [r0, #52]	; 0x34
 800c412:	4770      	bx	lr

0800c414 <_ZNK8touchgfx17AbstractDataGraph9getScaleYEv>:
 800c414:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800c416:	4770      	bx	lr

0800c418 <_ZN8touchgfx16DynamicDataGraph14beforeAddValueEv>:
 800c418:	4770      	bx	lr

0800c41a <_ZNK8touchgfx16DynamicDataGraph18indexToGlobalIndexEs>:
 800c41a:	4608      	mov	r0, r1
 800c41c:	4770      	bx	lr

0800c41e <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE>:
 800c41e:	b530      	push	{r4, r5, lr}
 800c420:	460d      	mov	r5, r1
 800c422:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800c424:	8949      	ldrh	r1, [r1, #10]
 800c426:	1ac9      	subs	r1, r1, r3
 800c428:	6803      	ldr	r3, [r0, #0]
 800c42a:	b085      	sub	sp, #20
 800c42c:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 800c430:	f10d 0206 	add.w	r2, sp, #6
 800c434:	b209      	sxth	r1, r1
 800c436:	4604      	mov	r4, r0
 800c438:	4798      	blx	r3
 800c43a:	b1a0      	cbz	r0, 800c466 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800c43c:	792b      	ldrb	r3, [r5, #4]
 800c43e:	b993      	cbnz	r3, 800c466 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800c440:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 800c444:	b178      	cbz	r0, 800c466 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800c446:	6803      	ldr	r3, [r0, #0]
 800c448:	68db      	ldr	r3, [r3, #12]
 800c44a:	4798      	blx	r3
 800c44c:	b158      	cbz	r0, 800c466 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800c44e:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800c452:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 800c456:	f8ad 3008 	strh.w	r3, [sp, #8]
 800c45a:	9503      	str	r5, [sp, #12]
 800c45c:	6803      	ldr	r3, [r0, #0]
 800c45e:	aa02      	add	r2, sp, #8
 800c460:	689b      	ldr	r3, [r3, #8]
 800c462:	4621      	mov	r1, r4
 800c464:	4798      	blx	r3
 800c466:	b005      	add	sp, #20
 800c468:	bd30      	pop	{r4, r5, pc}

0800c46a <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii>:
 800c46a:	b510      	push	{r4, lr}
 800c46c:	428a      	cmp	r2, r1
 800c46e:	bfbe      	ittt	lt
 800c470:	460b      	movlt	r3, r1
 800c472:	4611      	movlt	r1, r2
 800c474:	461a      	movlt	r2, r3
 800c476:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
 800c47a:	428b      	cmp	r3, r1
 800c47c:	4604      	mov	r4, r0
 800c47e:	d103      	bne.n	800c488 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x1e>
 800c480:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
 800c484:	4293      	cmp	r3, r2
 800c486:	d011      	beq.n	800c4ac <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x42>
 800c488:	f8c4 112c 	str.w	r1, [r4, #300]	; 0x12c
 800c48c:	f8c4 2130 	str.w	r2, [r4, #304]	; 0x130
 800c490:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800c494:	f005 ffa7 	bl	80123e6 <_ZNK8touchgfx8Drawable10invalidateEv>
 800c498:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800c49c:	f005 ffa3 	bl	80123e6 <_ZNK8touchgfx8Drawable10invalidateEv>
 800c4a0:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800c4a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c4a8:	f005 bf9d 	b.w	80123e6 <_ZNK8touchgfx8Drawable10invalidateEv>
 800c4ac:	bd10      	pop	{r4, pc}

0800c4ae <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii>:
 800c4ae:	b510      	push	{r4, lr}
 800c4b0:	428a      	cmp	r2, r1
 800c4b2:	bfbe      	ittt	lt
 800c4b4:	460b      	movlt	r3, r1
 800c4b6:	4611      	movlt	r1, r2
 800c4b8:	461a      	movlt	r2, r3
 800c4ba:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
 800c4be:	428b      	cmp	r3, r1
 800c4c0:	4604      	mov	r4, r0
 800c4c2:	d103      	bne.n	800c4cc <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x1e>
 800c4c4:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
 800c4c8:	4293      	cmp	r3, r2
 800c4ca:	d011      	beq.n	800c4f0 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x42>
 800c4cc:	f8c4 1134 	str.w	r1, [r4, #308]	; 0x134
 800c4d0:	f8c4 2138 	str.w	r2, [r4, #312]	; 0x138
 800c4d4:	f104 0064 	add.w	r0, r4, #100	; 0x64
 800c4d8:	f005 ff85 	bl	80123e6 <_ZNK8touchgfx8Drawable10invalidateEv>
 800c4dc:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800c4e0:	f005 ff81 	bl	80123e6 <_ZNK8touchgfx8Drawable10invalidateEv>
 800c4e4:	f104 0090 	add.w	r0, r4, #144	; 0x90
 800c4e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c4ec:	f005 bf7b 	b.w	80123e6 <_ZNK8touchgfx8Drawable10invalidateEv>
 800c4f0:	bd10      	pop	{r4, pc}

0800c4f2 <_ZN8touchgfx17AbstractDataGraph5clearEv>:
 800c4f2:	2300      	movs	r3, #0
 800c4f4:	f8a0 311e 	strh.w	r3, [r0, #286]	; 0x11e
 800c4f8:	3038      	adds	r0, #56	; 0x38
 800c4fa:	f005 bf74 	b.w	80123e6 <_ZNK8touchgfx8Drawable10invalidateEv>

0800c4fe <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi>:
 800c4fe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c502:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 800c506:	4605      	mov	r5, r0
 800c508:	4688      	mov	r8, r1
 800c50a:	4617      	mov	r7, r2
 800c50c:	2b00      	cmp	r3, #0
 800c50e:	d03f      	beq.n	800c590 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800c510:	6803      	ldr	r3, [r0, #0]
 800c512:	f8d3 3130 	ldr.w	r3, [r3, #304]	; 0x130
 800c516:	4798      	blx	r3
 800c518:	682b      	ldr	r3, [r5, #0]
 800c51a:	4604      	mov	r4, r0
 800c51c:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
 800c520:	4628      	mov	r0, r5
 800c522:	4798      	blx	r3
 800c524:	4284      	cmp	r4, r0
 800c526:	bfc8      	it	gt
 800c528:	4623      	movgt	r3, r4
 800c52a:	f9b5 611e 	ldrsh.w	r6, [r5, #286]	; 0x11e
 800c52e:	bfc4      	itt	gt
 800c530:	4604      	movgt	r4, r0
 800c532:	4618      	movgt	r0, r3
 800c534:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
 800c538:	42b3      	cmp	r3, r6
 800c53a:	da29      	bge.n	800c590 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800c53c:	42b0      	cmp	r0, r6
 800c53e:	bfa8      	it	ge
 800c540:	4630      	movge	r0, r6
 800c542:	2800      	cmp	r0, #0
 800c544:	db24      	blt.n	800c590 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800c546:	f1b8 0f00 	cmp.w	r8, #0
 800c54a:	d11e      	bne.n	800c58a <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x8c>
 800c54c:	f8d5 2144 	ldr.w	r2, [r5, #324]	; 0x144
 800c550:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 800c554:	460c      	mov	r4, r1
 800c556:	009a      	lsls	r2, r3, #2
 800c558:	4298      	cmp	r0, r3
 800c55a:	dd0b      	ble.n	800c574 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x76>
 800c55c:	f8d5 6144 	ldr.w	r6, [r5, #324]	; 0x144
 800c560:	58b6      	ldr	r6, [r6, r2]
 800c562:	42b1      	cmp	r1, r6
 800c564:	bfa8      	it	ge
 800c566:	4631      	movge	r1, r6
 800c568:	42b4      	cmp	r4, r6
 800c56a:	bfb8      	it	lt
 800c56c:	4634      	movlt	r4, r6
 800c56e:	3301      	adds	r3, #1
 800c570:	3204      	adds	r2, #4
 800c572:	e7f1      	b.n	800c558 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x5a>
 800c574:	1bc9      	subs	r1, r1, r7
 800c576:	193a      	adds	r2, r7, r4
 800c578:	4291      	cmp	r1, r2
 800c57a:	d009      	beq.n	800c590 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800c57c:	682b      	ldr	r3, [r5, #0]
 800c57e:	4628      	mov	r0, r5
 800c580:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800c584:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800c588:	4718      	bx	r3
 800c58a:	427c      	negs	r4, r7
 800c58c:	4639      	mov	r1, r7
 800c58e:	e7e2      	b.n	800c556 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x58>
 800c590:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c594 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE>:
 800c594:	b530      	push	{r4, r5, lr}
 800c596:	790b      	ldrb	r3, [r1, #4]
 800c598:	2b02      	cmp	r3, #2
 800c59a:	b085      	sub	sp, #20
 800c59c:	4604      	mov	r4, r0
 800c59e:	460d      	mov	r5, r1
 800c5a0:	d020      	beq.n	800c5e4 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c5a2:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800c5a4:	88c9      	ldrh	r1, [r1, #6]
 800c5a6:	1ac9      	subs	r1, r1, r3
 800c5a8:	6803      	ldr	r3, [r0, #0]
 800c5aa:	f10d 0206 	add.w	r2, sp, #6
 800c5ae:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 800c5b2:	b209      	sxth	r1, r1
 800c5b4:	4798      	blx	r3
 800c5b6:	b1a8      	cbz	r0, 800c5e4 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c5b8:	792b      	ldrb	r3, [r5, #4]
 800c5ba:	2b01      	cmp	r3, #1
 800c5bc:	d812      	bhi.n	800c5e4 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c5be:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 800c5c2:	b178      	cbz	r0, 800c5e4 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c5c4:	6803      	ldr	r3, [r0, #0]
 800c5c6:	68db      	ldr	r3, [r3, #12]
 800c5c8:	4798      	blx	r3
 800c5ca:	b158      	cbz	r0, 800c5e4 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c5cc:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800c5d0:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 800c5d4:	f8ad 3008 	strh.w	r3, [sp, #8]
 800c5d8:	9503      	str	r5, [sp, #12]
 800c5da:	6803      	ldr	r3, [r0, #0]
 800c5dc:	aa02      	add	r2, sp, #8
 800c5de:	689b      	ldr	r3, [r3, #8]
 800c5e0:	4621      	mov	r1, r4
 800c5e2:	4798      	blx	r3
 800c5e4:	b005      	add	sp, #20
 800c5e6:	bd30      	pop	{r4, r5, pc}

0800c5e8 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_>:
 800c5e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c5ec:	4604      	mov	r4, r0
 800c5ee:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800c5f2:	9e06      	ldr	r6, [sp, #24]
 800c5f4:	4690      	mov	r8, r2
 800c5f6:	461f      	mov	r7, r3
 800c5f8:	b928      	cbnz	r0, 800c606 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1e>
 800c5fa:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c5fe:	8033      	strh	r3, [r6, #0]
 800c600:	803b      	strh	r3, [r7, #0]
 800c602:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c606:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 800c60a:	f9b4 0116 	ldrsh.w	r0, [r4, #278]	; 0x116
 800c60e:	1883      	adds	r3, r0, r2
 800c610:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 800c614:	1ad2      	subs	r2, r2, r3
 800c616:	b212      	sxth	r2, r2
 800c618:	2a01      	cmp	r2, #1
 800c61a:	dc07      	bgt.n	800c62c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x44>
 800c61c:	2300      	movs	r3, #0
 800c61e:	803b      	strh	r3, [r7, #0]
 800c620:	f8b4 311e 	ldrh.w	r3, [r4, #286]	; 0x11e
 800c624:	3b01      	subs	r3, #1
 800c626:	8033      	strh	r3, [r6, #0]
 800c628:	2001      	movs	r0, #1
 800c62a:	e7ea      	b.n	800c602 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800c62c:	1a08      	subs	r0, r1, r0
 800c62e:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800c632:	f8d4 112c 	ldr.w	r1, [r4, #300]	; 0x12c
 800c636:	6b25      	ldr	r5, [r4, #48]	; 0x30
 800c638:	1a5b      	subs	r3, r3, r1
 800c63a:	ea4f 1040 	mov.w	r0, r0, lsl #5
 800c63e:	d45b      	bmi.n	800c6f8 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x110>
 800c640:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 800c644:	fb93 f1f5 	sdiv	r1, r3, r5
 800c648:	2302      	movs	r3, #2
 800c64a:	fb91 f1f3 	sdiv	r1, r1, r3
 800c64e:	3a01      	subs	r2, #1
 800c650:	f006 f88a 	bl	8012768 <_ZN8touchgfx6muldivElll>
 800c654:	f8d4 112c 	ldr.w	r1, [r4, #300]	; 0x12c
 800c658:	f8d4 c030 	ldr.w	ip, [r4, #48]	; 0x30
 800c65c:	2900      	cmp	r1, #0
 800c65e:	db57      	blt.n	800c710 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x128>
 800c660:	eb0c 0341 	add.w	r3, ip, r1, lsl #1
 800c664:	2502      	movs	r5, #2
 800c666:	fb93 f3fc 	sdiv	r3, r3, ip
 800c66a:	fb93 f3f5 	sdiv	r3, r3, r5
 800c66e:	eb00 1543 	add.w	r5, r0, r3, lsl #5
 800c672:	f8d4 2130 	ldr.w	r2, [r4, #304]	; 0x130
 800c676:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	; 0x116
 800c67a:	1a52      	subs	r2, r2, r1
 800c67c:	eba8 0003 	sub.w	r0, r8, r3
 800c680:	ea4f 1040 	mov.w	r0, r0, lsl #5
 800c684:	d450      	bmi.n	800c728 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x140>
 800c686:	eb0c 0242 	add.w	r2, ip, r2, lsl #1
 800c68a:	fb92 f1fc 	sdiv	r1, r2, ip
 800c68e:	2202      	movs	r2, #2
 800c690:	fb91 f1f2 	sdiv	r1, r1, r2
 800c694:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 800c698:	4413      	add	r3, r2
 800c69a:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 800c69e:	1ad2      	subs	r2, r2, r3
 800c6a0:	b212      	sxth	r2, r2
 800c6a2:	3a01      	subs	r2, #1
 800c6a4:	f006 f860 	bl	8012768 <_ZN8touchgfx6muldivElll>
 800c6a8:	f8d4 312c 	ldr.w	r3, [r4, #300]	; 0x12c
 800c6ac:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c6ae:	2b00      	cmp	r3, #0
 800c6b0:	db46      	blt.n	800c740 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x158>
 800c6b2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800c6b6:	fb93 f3f2 	sdiv	r3, r3, r2
 800c6ba:	2202      	movs	r2, #2
 800c6bc:	fb93 f3f2 	sdiv	r3, r3, r2
 800c6c0:	eb00 1343 	add.w	r3, r0, r3, lsl #5
 800c6c4:	429d      	cmp	r5, r3
 800c6c6:	bfde      	ittt	le
 800c6c8:	461a      	movle	r2, r3
 800c6ca:	462b      	movle	r3, r5
 800c6cc:	4615      	movle	r5, r2
 800c6ce:	2d00      	cmp	r5, #0
 800c6d0:	bfa4      	itt	ge
 800c6d2:	351f      	addge	r5, #31
 800c6d4:	116d      	asrge	r5, r5, #5
 800c6d6:	f04f 0020 	mov.w	r0, #32
 800c6da:	bfb8      	it	lt
 800c6dc:	fb95 f5f0 	sdivlt	r5, r5, r0
 800c6e0:	b22d      	sxth	r5, r5
 800c6e2:	2d00      	cmp	r5, #0
 800c6e4:	b21b      	sxth	r3, r3
 800c6e6:	fb93 f3f0 	sdiv	r3, r3, r0
 800c6ea:	803b      	strh	r3, [r7, #0]
 800c6ec:	8035      	strh	r5, [r6, #0]
 800c6ee:	da33      	bge.n	800c758 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x170>
 800c6f0:	2000      	movs	r0, #0
 800c6f2:	8030      	strh	r0, [r6, #0]
 800c6f4:	8038      	strh	r0, [r7, #0]
 800c6f6:	e784      	b.n	800c602 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800c6f8:	f06f 0101 	mvn.w	r1, #1
 800c6fc:	fb01 5303 	mla	r3, r1, r3, r5
 800c700:	1e59      	subs	r1, r3, #1
 800c702:	2302      	movs	r3, #2
 800c704:	fb91 f1f5 	sdiv	r1, r1, r5
 800c708:	fb91 f1f3 	sdiv	r1, r1, r3
 800c70c:	4249      	negs	r1, r1
 800c70e:	e79e      	b.n	800c64e <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x66>
 800c710:	f06f 0301 	mvn.w	r3, #1
 800c714:	fb03 c301 	mla	r3, r3, r1, ip
 800c718:	3b01      	subs	r3, #1
 800c71a:	2502      	movs	r5, #2
 800c71c:	fb93 f3fc 	sdiv	r3, r3, ip
 800c720:	fb93 f3f5 	sdiv	r3, r3, r5
 800c724:	425b      	negs	r3, r3
 800c726:	e7a2      	b.n	800c66e <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x86>
 800c728:	f06f 0101 	mvn.w	r1, #1
 800c72c:	fb01 c202 	mla	r2, r1, r2, ip
 800c730:	1e51      	subs	r1, r2, #1
 800c732:	2202      	movs	r2, #2
 800c734:	fb91 f1fc 	sdiv	r1, r1, ip
 800c738:	fb91 f1f2 	sdiv	r1, r1, r2
 800c73c:	4249      	negs	r1, r1
 800c73e:	e7a9      	b.n	800c694 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xac>
 800c740:	f06f 0101 	mvn.w	r1, #1
 800c744:	fb01 2303 	mla	r3, r1, r3, r2
 800c748:	3b01      	subs	r3, #1
 800c74a:	fb93 f3f2 	sdiv	r3, r3, r2
 800c74e:	2202      	movs	r2, #2
 800c750:	fb93 f3f2 	sdiv	r3, r3, r2
 800c754:	425b      	negs	r3, r3
 800c756:	e7b3      	b.n	800c6c0 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xd8>
 800c758:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c75c:	f9b7 2000 	ldrsh.w	r2, [r7]
 800c760:	4293      	cmp	r3, r2
 800c762:	dc05      	bgt.n	800c770 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x188>
 800c764:	3b01      	subs	r3, #1
 800c766:	b21b      	sxth	r3, r3
 800c768:	8033      	strh	r3, [r6, #0]
 800c76a:	2000      	movs	r0, #0
 800c76c:	803b      	strh	r3, [r7, #0]
 800c76e:	e748      	b.n	800c602 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800c770:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800c774:	803a      	strh	r2, [r7, #0]
 800c776:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c77a:	f9b6 2000 	ldrsh.w	r2, [r6]
 800c77e:	4293      	cmp	r3, r2
 800c780:	bfdc      	itt	le
 800c782:	f103 33ff 	addle.w	r3, r3, #4294967295
 800c786:	b21a      	sxthle	r2, r3
 800c788:	8032      	strh	r2, [r6, #0]
 800c78a:	e74d      	b.n	800c628 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x40>

0800c78c <_ZN8touchgfx9ContainerC1Ev>:
 800c78c:	2101      	movs	r1, #1
 800c78e:	2200      	movs	r2, #0
 800c790:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800c794:	4909      	ldr	r1, [pc, #36]	; (800c7bc <_ZN8touchgfx9ContainerC1Ev+0x30>)
 800c796:	8082      	strh	r2, [r0, #4]
 800c798:	80c2      	strh	r2, [r0, #6]
 800c79a:	8102      	strh	r2, [r0, #8]
 800c79c:	8142      	strh	r2, [r0, #10]
 800c79e:	8182      	strh	r2, [r0, #12]
 800c7a0:	81c2      	strh	r2, [r0, #14]
 800c7a2:	8202      	strh	r2, [r0, #16]
 800c7a4:	8242      	strh	r2, [r0, #18]
 800c7a6:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800c7aa:	61c2      	str	r2, [r0, #28]
 800c7ac:	8402      	strh	r2, [r0, #32]
 800c7ae:	8442      	strh	r2, [r0, #34]	; 0x22
 800c7b0:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800c7b4:	6001      	str	r1, [r0, #0]
 800c7b6:	6282      	str	r2, [r0, #40]	; 0x28
 800c7b8:	4770      	bx	lr
 800c7ba:	bf00      	nop
 800c7bc:	08023840 	.word	0x08023840

0800c7c0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>:
 800c7c0:	6800      	ldr	r0, [r0, #0]
 800c7c2:	2800      	cmp	r0, #0
 800c7c4:	bfbd      	ittte	lt
 800c7c6:	380f      	sublt	r0, #15
 800c7c8:	2320      	movlt	r3, #32
 800c7ca:	fb90 f0f3 	sdivlt	r0, r0, r3
 800c7ce:	3010      	addge	r0, #16
 800c7d0:	bfa8      	it	ge
 800c7d2:	1140      	asrge	r0, r0, #5
 800c7d4:	4770      	bx	lr

0800c7d6 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs>:
 800c7d6:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c7da:	4605      	mov	r5, r0
 800c7dc:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800c7e0:	4688      	mov	r8, r1
 800c7e2:	4691      	mov	r9, r2
 800c7e4:	469a      	mov	sl, r3
 800c7e6:	b360      	cbz	r0, 800c842 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6c>
 800c7e8:	2700      	movs	r7, #0
 800c7ea:	f04f 3bff 	mov.w	fp, #4294967295
 800c7ee:	f9b5 311e 	ldrsh.w	r3, [r5, #286]	; 0x11e
 800c7f2:	b23e      	sxth	r6, r7
 800c7f4:	42b3      	cmp	r3, r6
 800c7f6:	dd23      	ble.n	800c840 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6a>
 800c7f8:	682b      	ldr	r3, [r5, #0]
 800c7fa:	4631      	mov	r1, r6
 800c7fc:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800c800:	4628      	mov	r0, r5
 800c802:	4798      	blx	r3
 800c804:	9001      	str	r0, [sp, #4]
 800c806:	a801      	add	r0, sp, #4
 800c808:	f7ff ffda 	bl	800c7c0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c80c:	682b      	ldr	r3, [r5, #0]
 800c80e:	eba0 0008 	sub.w	r0, r0, r8
 800c812:	b204      	sxth	r4, r0
 800c814:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800c818:	4631      	mov	r1, r6
 800c81a:	4628      	mov	r0, r5
 800c81c:	4798      	blx	r3
 800c81e:	9001      	str	r0, [sp, #4]
 800c820:	a801      	add	r0, sp, #4
 800c822:	f7ff ffcd 	bl	800c7c0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c826:	eba0 0009 	sub.w	r0, r0, r9
 800c82a:	fb10 f000 	smulbb	r0, r0, r0
 800c82e:	fb04 0404 	mla	r4, r4, r4, r0
 800c832:	455c      	cmp	r4, fp
 800c834:	bf3c      	itt	cc
 800c836:	f8aa 6000 	strhcc.w	r6, [sl]
 800c83a:	46a3      	movcc	fp, r4
 800c83c:	3701      	adds	r7, #1
 800c83e:	e7d6      	b.n	800c7ee <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x18>
 800c840:	2001      	movs	r0, #1
 800c842:	b003      	add	sp, #12
 800c844:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c848 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs>:
 800c848:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800c84c:	4604      	mov	r4, r0
 800c84e:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800c852:	4688      	mov	r8, r1
 800c854:	4691      	mov	r9, r2
 800c856:	b1f8      	cbz	r0, 800c898 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x50>
 800c858:	2500      	movs	r5, #0
 800c85a:	f04f 37ff 	mov.w	r7, #4294967295
 800c85e:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c862:	b22e      	sxth	r6, r5
 800c864:	42b3      	cmp	r3, r6
 800c866:	dd16      	ble.n	800c896 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x4e>
 800c868:	6823      	ldr	r3, [r4, #0]
 800c86a:	4631      	mov	r1, r6
 800c86c:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800c870:	4620      	mov	r0, r4
 800c872:	4798      	blx	r3
 800c874:	9001      	str	r0, [sp, #4]
 800c876:	a801      	add	r0, sp, #4
 800c878:	f7ff ffa2 	bl	800c7c0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c87c:	b200      	sxth	r0, r0
 800c87e:	eba0 0008 	sub.w	r0, r0, r8
 800c882:	2800      	cmp	r0, #0
 800c884:	bfb8      	it	lt
 800c886:	4240      	neglt	r0, r0
 800c888:	42b8      	cmp	r0, r7
 800c88a:	bf3c      	itt	cc
 800c88c:	f8a9 6000 	strhcc.w	r6, [r9]
 800c890:	4607      	movcc	r7, r0
 800c892:	3501      	adds	r5, #1
 800c894:	e7e3      	b.n	800c85e <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x16>
 800c896:	2001      	movs	r0, #1
 800c898:	b003      	add	sp, #12
 800c89a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800c89e <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>:
 800c89e:	f8a0 3118 	strh.w	r3, [r0, #280]	; 0x118
 800c8a2:	f9bd 3000 	ldrsh.w	r3, [sp]
 800c8a6:	f8a0 1114 	strh.w	r1, [r0, #276]	; 0x114
 800c8aa:	f8a0 2116 	strh.w	r2, [r0, #278]	; 0x116
 800c8ae:	f8a0 311a 	strh.w	r3, [r0, #282]	; 0x11a
 800c8b2:	4770      	bx	lr

0800c8b4 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>:
 800c8b4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c8b6:	4604      	mov	r4, r0
 800c8b8:	3038      	adds	r0, #56	; 0x38
 800c8ba:	460d      	mov	r5, r1
 800c8bc:	f7fe fb1e 	bl	800aefc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c8c0:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 800c8c4:	9200      	str	r2, [sp, #0]
 800c8c6:	2200      	movs	r2, #0
 800c8c8:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800c8cc:	4611      	mov	r1, r2
 800c8ce:	4628      	mov	r0, r5
 800c8d0:	f7f6 f99b 	bl	8002c0a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c8d4:	b003      	add	sp, #12
 800c8d6:	bd30      	pop	{r4, r5, pc}

0800c8d8 <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>:
 800c8d8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c8da:	4604      	mov	r4, r0
 800c8dc:	3064      	adds	r0, #100	; 0x64
 800c8de:	460d      	mov	r5, r1
 800c8e0:	f7fe fb0c 	bl	800aefc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c8e4:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 800c8e8:	9200      	str	r2, [sp, #0]
 800c8ea:	2200      	movs	r2, #0
 800c8ec:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 800c8f0:	4611      	mov	r1, r2
 800c8f2:	4628      	mov	r0, r5
 800c8f4:	f7f6 f989 	bl	8002c0a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c8f8:	b003      	add	sp, #12
 800c8fa:	bd30      	pop	{r4, r5, pc}

0800c8fc <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>:
 800c8fc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c8fe:	4604      	mov	r4, r0
 800c900:	30e8      	adds	r0, #232	; 0xe8
 800c902:	460d      	mov	r5, r1
 800c904:	f7fe fafa 	bl	800aefc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c908:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	; 0xf2
 800c90c:	9200      	str	r2, [sp, #0]
 800c90e:	2200      	movs	r2, #0
 800c910:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	; 0xf0
 800c914:	4611      	mov	r1, r2
 800c916:	4628      	mov	r0, r5
 800c918:	f7f6 f977 	bl	8002c0a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c91c:	b003      	add	sp, #12
 800c91e:	bd30      	pop	{r4, r5, pc}

0800c920 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>:
 800c920:	b538      	push	{r3, r4, r5, lr}
 800c922:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 800c926:	428b      	cmp	r3, r1
 800c928:	460d      	mov	r5, r1
 800c92a:	dd08      	ble.n	800c93e <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 800c92c:	6e04      	ldr	r4, [r0, #96]	; 0x60
 800c92e:	b134      	cbz	r4, 800c93e <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 800c930:	6823      	ldr	r3, [r4, #0]
 800c932:	4620      	mov	r0, r4
 800c934:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c936:	4629      	mov	r1, r5
 800c938:	4798      	blx	r3
 800c93a:	69a4      	ldr	r4, [r4, #24]
 800c93c:	e7f7      	b.n	800c92e <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0xe>
 800c93e:	bd38      	pop	{r3, r4, r5, pc}

0800c940 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>:
 800c940:	b570      	push	{r4, r5, r6, lr}
 800c942:	f8d0 40e4 	ldr.w	r4, [r0, #228]	; 0xe4
 800c946:	4606      	mov	r6, r0
 800c948:	460d      	mov	r5, r1
 800c94a:	b134      	cbz	r4, 800c95a <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1a>
 800c94c:	6823      	ldr	r3, [r4, #0]
 800c94e:	4620      	mov	r0, r4
 800c950:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c952:	4629      	mov	r1, r5
 800c954:	4798      	blx	r3
 800c956:	69a4      	ldr	r4, [r4, #24]
 800c958:	e7f7      	b.n	800c94a <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0xa>
 800c95a:	f8d6 4110 	ldr.w	r4, [r6, #272]	; 0x110
 800c95e:	b134      	cbz	r4, 800c96e <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x2e>
 800c960:	6823      	ldr	r3, [r4, #0]
 800c962:	4620      	mov	r0, r4
 800c964:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c966:	4629      	mov	r1, r5
 800c968:	4798      	blx	r3
 800c96a:	69a4      	ldr	r4, [r4, #24]
 800c96c:	e7f7      	b.n	800c95e <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1e>
 800c96e:	bd70      	pop	{r4, r5, r6, pc}

0800c970 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>:
 800c970:	b538      	push	{r3, r4, r5, lr}
 800c972:	4604      	mov	r4, r0
 800c974:	2500      	movs	r5, #0
 800c976:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c97a:	42ab      	cmp	r3, r5
 800c97c:	db05      	blt.n	800c98a <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x1a>
 800c97e:	b229      	sxth	r1, r5
 800c980:	4620      	mov	r0, r4
 800c982:	f7ff ffdd 	bl	800c940 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>
 800c986:	3501      	adds	r5, #1
 800c988:	e7f5      	b.n	800c976 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x6>
 800c98a:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800c98e:	f005 fd2a 	bl	80123e6 <_ZNK8touchgfx8Drawable10invalidateEv>
 800c992:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800c996:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c99a:	f005 bd24 	b.w	80123e6 <_ZNK8touchgfx8Drawable10invalidateEv>

0800c99e <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>:
 800c99e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c9a0:	6e05      	ldr	r5, [r0, #96]	; 0x60
 800c9a2:	4604      	mov	r4, r0
 800c9a4:	b15d      	cbz	r5, 800c9be <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x20>
 800c9a6:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 800c9aa:	9200      	str	r2, [sp, #0]
 800c9ac:	2200      	movs	r2, #0
 800c9ae:	4628      	mov	r0, r5
 800c9b0:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800c9b4:	4611      	mov	r1, r2
 800c9b6:	f7f6 f928 	bl	8002c0a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c9ba:	69ad      	ldr	r5, [r5, #24]
 800c9bc:	e7f2      	b.n	800c9a4 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x6>
 800c9be:	f8d4 50e4 	ldr.w	r5, [r4, #228]	; 0xe4
 800c9c2:	b15d      	cbz	r5, 800c9dc <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x3e>
 800c9c4:	f9b4 20c6 	ldrsh.w	r2, [r4, #198]	; 0xc6
 800c9c8:	9200      	str	r2, [sp, #0]
 800c9ca:	2200      	movs	r2, #0
 800c9cc:	4628      	mov	r0, r5
 800c9ce:	f9b4 30c4 	ldrsh.w	r3, [r4, #196]	; 0xc4
 800c9d2:	4611      	mov	r1, r2
 800c9d4:	f7f6 f919 	bl	8002c0a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c9d8:	69ad      	ldr	r5, [r5, #24]
 800c9da:	e7f2      	b.n	800c9c2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x24>
 800c9dc:	f8d4 508c 	ldr.w	r5, [r4, #140]	; 0x8c
 800c9e0:	b15d      	cbz	r5, 800c9fa <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x5c>
 800c9e2:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 800c9e6:	9200      	str	r2, [sp, #0]
 800c9e8:	2200      	movs	r2, #0
 800c9ea:	4628      	mov	r0, r5
 800c9ec:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 800c9f0:	4611      	mov	r1, r2
 800c9f2:	f7f6 f90a 	bl	8002c0a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c9f6:	69ad      	ldr	r5, [r5, #24]
 800c9f8:	e7f2      	b.n	800c9e0 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x42>
 800c9fa:	f8d4 50b8 	ldr.w	r5, [r4, #184]	; 0xb8
 800c9fe:	b15d      	cbz	r5, 800ca18 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7a>
 800ca00:	f9b4 209a 	ldrsh.w	r2, [r4, #154]	; 0x9a
 800ca04:	9200      	str	r2, [sp, #0]
 800ca06:	2200      	movs	r2, #0
 800ca08:	4628      	mov	r0, r5
 800ca0a:	f9b4 3098 	ldrsh.w	r3, [r4, #152]	; 0x98
 800ca0e:	4611      	mov	r1, r2
 800ca10:	f7f6 f8fb 	bl	8002c0a <_ZN8touchgfx8Drawable11setPositionEssss>
 800ca14:	69ad      	ldr	r5, [r5, #24]
 800ca16:	e7f2      	b.n	800c9fe <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x60>
 800ca18:	f8d4 5110 	ldr.w	r5, [r4, #272]	; 0x110
 800ca1c:	b15d      	cbz	r5, 800ca36 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x98>
 800ca1e:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	; 0xf2
 800ca22:	9200      	str	r2, [sp, #0]
 800ca24:	2200      	movs	r2, #0
 800ca26:	4628      	mov	r0, r5
 800ca28:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	; 0xf0
 800ca2c:	4611      	mov	r1, r2
 800ca2e:	f7f6 f8ec 	bl	8002c0a <_ZN8touchgfx8Drawable11setPositionEssss>
 800ca32:	69ad      	ldr	r5, [r5, #24]
 800ca34:	e7f2      	b.n	800ca1c <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7e>
 800ca36:	6823      	ldr	r3, [r4, #0]
 800ca38:	695b      	ldr	r3, [r3, #20]
 800ca3a:	4620      	mov	r0, r4
 800ca3c:	b003      	add	sp, #12
 800ca3e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800ca42:	4718      	bx	r3

0800ca44 <_ZN8touchgfx17AbstractDataGraph8setWidthEs>:
 800ca44:	b430      	push	{r4, r5}
 800ca46:	f8b0 4098 	ldrh.w	r4, [r0, #152]	; 0x98
 800ca4a:	f8a0 10c4 	strh.w	r1, [r0, #196]	; 0xc4
 800ca4e:	b28a      	uxth	r2, r1
 800ca50:	1b15      	subs	r5, r2, r4
 800ca52:	f8a0 5094 	strh.w	r5, [r0, #148]	; 0x94
 800ca56:	f8b0 506c 	ldrh.w	r5, [r0, #108]	; 0x6c
 800ca5a:	f8a0 10f0 	strh.w	r1, [r0, #240]	; 0xf0
 800ca5e:	442c      	add	r4, r5
 800ca60:	1b12      	subs	r2, r2, r4
 800ca62:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800ca66:	8101      	strh	r1, [r0, #8]
 800ca68:	bc30      	pop	{r4, r5}
 800ca6a:	f7ff bf98 	b.w	800c99e <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800ca6e <_ZN8touchgfx17AbstractDataGraph9setHeightEs>:
 800ca6e:	b430      	push	{r4, r5}
 800ca70:	f8b0 40f2 	ldrh.w	r4, [r0, #242]	; 0xf2
 800ca74:	f8a0 106e 	strh.w	r1, [r0, #110]	; 0x6e
 800ca78:	b28a      	uxth	r2, r1
 800ca7a:	1b15      	subs	r5, r2, r4
 800ca7c:	f8a0 50ee 	strh.w	r5, [r0, #238]	; 0xee
 800ca80:	f8b0 50c6 	ldrh.w	r5, [r0, #198]	; 0xc6
 800ca84:	f8a0 109a 	strh.w	r1, [r0, #154]	; 0x9a
 800ca88:	442c      	add	r4, r5
 800ca8a:	1b12      	subs	r2, r2, r4
 800ca8c:	f8a0 2042 	strh.w	r2, [r0, #66]	; 0x42
 800ca90:	8141      	strh	r1, [r0, #10]
 800ca92:	bc30      	pop	{r4, r5}
 800ca94:	f7ff bf83 	b.w	800c99e <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800ca98 <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>:
 800ca98:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800ca9c:	f9bd 7028 	ldrsh.w	r7, [sp, #40]	; 0x28
 800caa0:	fa1f fa83 	uxth.w	sl, r3
 800caa4:	4699      	mov	r9, r3
 800caa6:	8903      	ldrh	r3, [r0, #8]
 800caa8:	4604      	mov	r4, r0
 800caaa:	4615      	mov	r5, r2
 800caac:	fa1f f887 	uxth.w	r8, r7
 800cab0:	4452      	add	r2, sl
 800cab2:	8940      	ldrh	r0, [r0, #10]
 800cab4:	1a9b      	subs	r3, r3, r2
 800cab6:	eb08 0201 	add.w	r2, r8, r1
 800caba:	1a80      	subs	r0, r0, r2
 800cabc:	b200      	sxth	r0, r0
 800cabe:	460e      	mov	r6, r1
 800cac0:	9000      	str	r0, [sp, #0]
 800cac2:	460a      	mov	r2, r1
 800cac4:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800cac8:	4629      	mov	r1, r5
 800caca:	b21b      	sxth	r3, r3
 800cacc:	f7f6 f89d 	bl	8002c0a <_ZN8touchgfx8Drawable11setPositionEssss>
 800cad0:	2200      	movs	r2, #0
 800cad2:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800cad6:	9600      	str	r6, [sp, #0]
 800cad8:	4611      	mov	r1, r2
 800cada:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800cade:	f7f6 f894 	bl	8002c0a <_ZN8touchgfx8Drawable11setPositionEssss>
 800cae2:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800cae6:	9300      	str	r3, [sp, #0]
 800cae8:	2200      	movs	r2, #0
 800caea:	462b      	mov	r3, r5
 800caec:	4611      	mov	r1, r2
 800caee:	f104 0064 	add.w	r0, r4, #100	; 0x64
 800caf2:	f7f6 f88a 	bl	8002c0a <_ZN8touchgfx8Drawable11setPositionEssss>
 800caf6:	8921      	ldrh	r1, [r4, #8]
 800caf8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800cafc:	9300      	str	r3, [sp, #0]
 800cafe:	eba1 010a 	sub.w	r1, r1, sl
 800cb02:	464b      	mov	r3, r9
 800cb04:	f104 0090 	add.w	r0, r4, #144	; 0x90
 800cb08:	2200      	movs	r2, #0
 800cb0a:	b209      	sxth	r1, r1
 800cb0c:	f7f6 f87d 	bl	8002c0a <_ZN8touchgfx8Drawable11setPositionEssss>
 800cb10:	8962      	ldrh	r2, [r4, #10]
 800cb12:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800cb16:	9700      	str	r7, [sp, #0]
 800cb18:	eba2 0208 	sub.w	r2, r2, r8
 800cb1c:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800cb20:	b212      	sxth	r2, r2
 800cb22:	2100      	movs	r1, #0
 800cb24:	f7f6 f871 	bl	8002c0a <_ZN8touchgfx8Drawable11setPositionEssss>
 800cb28:	4620      	mov	r0, r4
 800cb2a:	b002      	add	sp, #8
 800cb2c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800cb30:	f7ff bf35 	b.w	800c99e <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800cb34 <_ZN8touchgfx17AbstractDataGraphC1Es>:
 800cb34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cb38:	b085      	sub	sp, #20
 800cb3a:	4604      	mov	r4, r0
 800cb3c:	9103      	str	r1, [sp, #12]
 800cb3e:	f7ff fe25 	bl	800c78c <_ZN8touchgfx9ContainerC1Ev>
 800cb42:	4b2d      	ldr	r3, [pc, #180]	; (800cbf8 <_ZN8touchgfx17AbstractDataGraphC1Es+0xc4>)
 800cb44:	6023      	str	r3, [r4, #0]
 800cb46:	2601      	movs	r6, #1
 800cb48:	23ff      	movs	r3, #255	; 0xff
 800cb4a:	f104 0b38 	add.w	fp, r4, #56	; 0x38
 800cb4e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800cb52:	f104 0964 	add.w	r9, r4, #100	; 0x64
 800cb56:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800cb5a:	4658      	mov	r0, fp
 800cb5c:	f7ff fe16 	bl	800c78c <_ZN8touchgfx9ContainerC1Ev>
 800cb60:	f104 0890 	add.w	r8, r4, #144	; 0x90
 800cb64:	4648      	mov	r0, r9
 800cb66:	f7ff fe11 	bl	800c78c <_ZN8touchgfx9ContainerC1Ev>
 800cb6a:	f104 0abc 	add.w	sl, r4, #188	; 0xbc
 800cb6e:	4640      	mov	r0, r8
 800cb70:	f7ff fe0c 	bl	800c78c <_ZN8touchgfx9ContainerC1Ev>
 800cb74:	f104 07e8 	add.w	r7, r4, #232	; 0xe8
 800cb78:	4650      	mov	r0, sl
 800cb7a:	f7ff fe07 	bl	800c78c <_ZN8touchgfx9ContainerC1Ev>
 800cb7e:	4638      	mov	r0, r7
 800cb80:	f7ff fe04 	bl	800c78c <_ZN8touchgfx9ContainerC1Ev>
 800cb84:	2500      	movs	r5, #0
 800cb86:	9903      	ldr	r1, [sp, #12]
 800cb88:	f8a4 111c 	strh.w	r1, [r4, #284]	; 0x11c
 800cb8c:	4620      	mov	r0, r4
 800cb8e:	4659      	mov	r1, fp
 800cb90:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 800cb94:	f8c4 5118 	str.w	r5, [r4, #280]	; 0x118
 800cb98:	f8a4 511e 	strh.w	r5, [r4, #286]	; 0x11e
 800cb9c:	f8a4 5120 	strh.w	r5, [r4, #288]	; 0x120
 800cba0:	f8c4 5124 	str.w	r5, [r4, #292]	; 0x124
 800cba4:	f8c4 5128 	str.w	r5, [r4, #296]	; 0x128
 800cba8:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800cbac:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800cbb0:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 800cbb4:	f8c4 5138 	str.w	r5, [r4, #312]	; 0x138
 800cbb8:	f7fe f9a0 	bl	800aefc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800cbbc:	4651      	mov	r1, sl
 800cbbe:	4620      	mov	r0, r4
 800cbc0:	f7fe f99c 	bl	800aefc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800cbc4:	4649      	mov	r1, r9
 800cbc6:	4620      	mov	r0, r4
 800cbc8:	f7fe f998 	bl	800aefc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800cbcc:	4641      	mov	r1, r8
 800cbce:	4620      	mov	r0, r4
 800cbd0:	f7fe f994 	bl	800aefc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800cbd4:	4639      	mov	r1, r7
 800cbd6:	4620      	mov	r0, r4
 800cbd8:	f7fe f990 	bl	800aefc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800cbdc:	4620      	mov	r0, r4
 800cbde:	9500      	str	r5, [sp, #0]
 800cbe0:	462b      	mov	r3, r5
 800cbe2:	462a      	mov	r2, r5
 800cbe4:	4629      	mov	r1, r5
 800cbe6:	f7ff ff57 	bl	800ca98 <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
 800cbea:	4620      	mov	r0, r4
 800cbec:	f884 6024 	strb.w	r6, [r4, #36]	; 0x24
 800cbf0:	b005      	add	sp, #20
 800cbf2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cbf6:	bf00      	nop
 800cbf8:	08023b48 	.word	0x08023b48

0800cbfc <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>:
 800cbfc:	4291      	cmp	r1, r2
 800cbfe:	4613      	mov	r3, r2
 800cc00:	d003      	beq.n	800cc0a <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii+0xe>
 800cc02:	460a      	mov	r2, r1
 800cc04:	4619      	mov	r1, r3
 800cc06:	f005 bdaf 	b.w	8012768 <_ZN8touchgfx6muldivElll>
 800cc0a:	4770      	bx	lr

0800cc0c <_ZN8touchgfx16DynamicDataGraph9setScaleXEib>:
 800cc0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cc10:	6803      	ldr	r3, [r0, #0]
 800cc12:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800cc16:	460d      	mov	r5, r1
 800cc18:	4604      	mov	r4, r0
 800cc1a:	4798      	blx	r3
 800cc1c:	42a8      	cmp	r0, r5
 800cc1e:	4606      	mov	r6, r0
 800cc20:	d024      	beq.n	800cc6c <_ZN8touchgfx16DynamicDataGraph9setScaleXEib+0x60>
 800cc22:	6823      	ldr	r3, [r4, #0]
 800cc24:	4601      	mov	r1, r0
 800cc26:	462a      	mov	r2, r5
 800cc28:	f8d4 012c 	ldr.w	r0, [r4, #300]	; 0x12c
 800cc2c:	f8d3 70a4 	ldr.w	r7, [r3, #164]	; 0xa4
 800cc30:	f7ff ffe4 	bl	800cbfc <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800cc34:	462a      	mov	r2, r5
 800cc36:	4680      	mov	r8, r0
 800cc38:	4631      	mov	r1, r6
 800cc3a:	f8d4 0130 	ldr.w	r0, [r4, #304]	; 0x130
 800cc3e:	f7ff ffdd 	bl	800cbfc <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800cc42:	4641      	mov	r1, r8
 800cc44:	4602      	mov	r2, r0
 800cc46:	4620      	mov	r0, r4
 800cc48:	47b8      	blx	r7
 800cc4a:	462a      	mov	r2, r5
 800cc4c:	4631      	mov	r1, r6
 800cc4e:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 800cc52:	f7ff ffd3 	bl	800cbfc <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800cc56:	462a      	mov	r2, r5
 800cc58:	f8c4 013c 	str.w	r0, [r4, #316]	; 0x13c
 800cc5c:	4631      	mov	r1, r6
 800cc5e:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 800cc62:	f7ff ffcb 	bl	800cbfc <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800cc66:	6325      	str	r5, [r4, #48]	; 0x30
 800cc68:	f8c4 0140 	str.w	r0, [r4, #320]	; 0x140
 800cc6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800cc70 <_ZN8touchgfx16DynamicDataGraph9setScaleYEib>:
 800cc70:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800cc74:	4604      	mov	r4, r0
 800cc76:	460f      	mov	r7, r1
 800cc78:	b1ba      	cbz	r2, 800ccaa <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x3a>
 800cc7a:	6803      	ldr	r3, [r0, #0]
 800cc7c:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800cc80:	4798      	blx	r3
 800cc82:	2600      	movs	r6, #0
 800cc84:	4681      	mov	r9, r0
 800cc86:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800cc8a:	b235      	sxth	r5, r6
 800cc8c:	42ab      	cmp	r3, r5
 800cc8e:	f106 0601 	add.w	r6, r6, #1
 800cc92:	dd0a      	ble.n	800ccaa <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x3a>
 800cc94:	f8d4 8144 	ldr.w	r8, [r4, #324]	; 0x144
 800cc98:	463a      	mov	r2, r7
 800cc9a:	4649      	mov	r1, r9
 800cc9c:	f858 0025 	ldr.w	r0, [r8, r5, lsl #2]
 800cca0:	f7ff ffac 	bl	800cbfc <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800cca4:	f848 0025 	str.w	r0, [r8, r5, lsl #2]
 800cca8:	e7ed      	b.n	800cc86 <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x16>
 800ccaa:	6367      	str	r7, [r4, #52]	; 0x34
 800ccac:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0800ccb0 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>:
 800ccb0:	b570      	push	{r4, r5, r6, lr}
 800ccb2:	6803      	ldr	r3, [r0, #0]
 800ccb4:	4604      	mov	r4, r0
 800ccb6:	f8d3 3178 	ldr.w	r3, [r3, #376]	; 0x178
 800ccba:	460d      	mov	r5, r1
 800ccbc:	4798      	blx	r3
 800ccbe:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 800ccc2:	3301      	adds	r3, #1
 800ccc4:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
 800ccc8:	6823      	ldr	r3, [r4, #0]
 800ccca:	4629      	mov	r1, r5
 800cccc:	4620      	mov	r0, r4
 800ccce:	f8d3 317c 	ldr.w	r3, [r3, #380]	; 0x17c
 800ccd2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ccd6:	4718      	bx	r3

0800ccd8 <_ZN8touchgfx16GraphElementLineD1Ev>:
 800ccd8:	4770      	bx	lr

0800ccda <_ZN8touchgfx16GraphElementLineD0Ev>:
 800ccda:	b510      	push	{r4, lr}
 800ccdc:	2130      	movs	r1, #48	; 0x30
 800ccde:	4604      	mov	r4, r0
 800cce0:	f013 ff25 	bl	8020b2e <_ZdlPvj>
 800cce4:	4620      	mov	r0, r4
 800cce6:	bd10      	pop	{r4, pc}

0800cce8 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800cce8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ccea:	4604      	mov	r4, r0
 800ccec:	4608      	mov	r0, r1
 800ccee:	460d      	mov	r5, r1
 800ccf0:	f7fe fad7 	bl	800b2a2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ccf4:	b978      	cbnz	r0, 800cd16 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800ccf6:	4620      	mov	r0, r4
 800ccf8:	f7fe fad3 	bl	800b2a2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ccfc:	f9b5 6000 	ldrsh.w	r6, [r5]
 800cd00:	b150      	cbz	r0, 800cd18 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800cd02:	8026      	strh	r6, [r4, #0]
 800cd04:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800cd08:	8063      	strh	r3, [r4, #2]
 800cd0a:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800cd0e:	80a3      	strh	r3, [r4, #4]
 800cd10:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800cd14:	80e3      	strh	r3, [r4, #6]
 800cd16:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cd18:	f9b4 1000 	ldrsh.w	r1, [r4]
 800cd1c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800cd20:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800cd24:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800cd28:	88ed      	ldrh	r5, [r5, #6]
 800cd2a:	42b1      	cmp	r1, r6
 800cd2c:	460f      	mov	r7, r1
 800cd2e:	bfa8      	it	ge
 800cd30:	4637      	movge	r7, r6
 800cd32:	4293      	cmp	r3, r2
 800cd34:	4618      	mov	r0, r3
 800cd36:	4466      	add	r6, ip
 800cd38:	bfa8      	it	ge
 800cd3a:	4610      	movge	r0, r2
 800cd3c:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800cd40:	8027      	strh	r7, [r4, #0]
 800cd42:	442a      	add	r2, r5
 800cd44:	88e5      	ldrh	r5, [r4, #6]
 800cd46:	8060      	strh	r0, [r4, #2]
 800cd48:	4461      	add	r1, ip
 800cd4a:	442b      	add	r3, r5
 800cd4c:	b236      	sxth	r6, r6
 800cd4e:	b209      	sxth	r1, r1
 800cd50:	b212      	sxth	r2, r2
 800cd52:	b21b      	sxth	r3, r3
 800cd54:	428e      	cmp	r6, r1
 800cd56:	bfac      	ite	ge
 800cd58:	ebc7 0106 	rsbge	r1, r7, r6
 800cd5c:	ebc7 0101 	rsblt	r1, r7, r1
 800cd60:	429a      	cmp	r2, r3
 800cd62:	bfac      	ite	ge
 800cd64:	ebc0 0202 	rsbge	r2, r0, r2
 800cd68:	ebc0 0203 	rsblt	r2, r0, r3
 800cd6c:	80a1      	strh	r1, [r4, #4]
 800cd6e:	80e2      	strh	r2, [r4, #6]
 800cd70:	e7d1      	b.n	800cd16 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>

0800cd72 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 800cd72:	6800      	ldr	r0, [r0, #0]
 800cd74:	2800      	cmp	r0, #0
 800cd76:	bfb9      	ittee	lt
 800cd78:	2320      	movlt	r3, #32
 800cd7a:	fb90 f0f3 	sdivlt	r0, r0, r3
 800cd7e:	301f      	addge	r0, #31
 800cd80:	1140      	asrge	r0, r0, #5
 800cd82:	4770      	bx	lr

0800cd84 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE>:
 800cd84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cd88:	6803      	ldr	r3, [r0, #0]
 800cd8a:	6945      	ldr	r5, [r0, #20]
 800cd8c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800cd8e:	b093      	sub	sp, #76	; 0x4c
 800cd90:	4604      	mov	r4, r0
 800cd92:	460f      	mov	r7, r1
 800cd94:	2d00      	cmp	r5, #0
 800cd96:	f000 81ad 	beq.w	800d0f4 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x370>
 800cd9a:	696d      	ldr	r5, [r5, #20]
 800cd9c:	4798      	blx	r3
 800cd9e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800cda2:	2b00      	cmp	r3, #0
 800cda4:	d077      	beq.n	800ce96 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800cda6:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800cdaa:	fb13 f000 	smulbb	r0, r3, r0
 800cdae:	b283      	uxth	r3, r0
 800cdb0:	1c58      	adds	r0, r3, #1
 800cdb2:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 800cdb6:	1200      	asrs	r0, r0, #8
 800cdb8:	d06d      	beq.n	800ce96 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800cdba:	b2c3      	uxtb	r3, r0
 800cdbc:	9308      	str	r3, [sp, #32]
 800cdbe:	6823      	ldr	r3, [r4, #0]
 800cdc0:	f10d 0840 	add.w	r8, sp, #64	; 0x40
 800cdc4:	462a      	mov	r2, r5
 800cdc6:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800cdca:	4621      	mov	r1, r4
 800cdcc:	4640      	mov	r0, r8
 800cdce:	4798      	blx	r3
 800cdd0:	e898 0003 	ldmia.w	r8, {r0, r1}
 800cdd4:	ae0e      	add	r6, sp, #56	; 0x38
 800cdd6:	e886 0003 	stmia.w	r6, {r0, r1}
 800cdda:	4639      	mov	r1, r7
 800cddc:	4630      	mov	r0, r6
 800cdde:	f7fe fa1d 	bl	800b21c <_ZN8touchgfx4RectaNERKS0_>
 800cde2:	6823      	ldr	r3, [r4, #0]
 800cde4:	4629      	mov	r1, r5
 800cde6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800cdea:	4620      	mov	r0, r4
 800cdec:	4798      	blx	r3
 800cdee:	6823      	ldr	r3, [r4, #0]
 800cdf0:	4607      	mov	r7, r0
 800cdf2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800cdf6:	4629      	mov	r1, r5
 800cdf8:	4620      	mov	r0, r4
 800cdfa:	4798      	blx	r3
 800cdfc:	4681      	mov	r9, r0
 800cdfe:	f894 0038 	ldrb.w	r0, [r4, #56]	; 0x38
 800ce02:	0103      	lsls	r3, r0, #4
 800ce04:	9309      	str	r3, [sp, #36]	; 0x24
 800ce06:	6823      	ldr	r3, [r4, #0]
 800ce08:	4629      	mov	r1, r5
 800ce0a:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800ce0e:	4620      	mov	r0, r4
 800ce10:	4798      	blx	r3
 800ce12:	b203      	sxth	r3, r0
 800ce14:	9306      	str	r3, [sp, #24]
 800ce16:	6823      	ldr	r3, [r4, #0]
 800ce18:	4629      	mov	r1, r5
 800ce1a:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800ce1e:	4620      	mov	r0, r4
 800ce20:	4798      	blx	r3
 800ce22:	2f00      	cmp	r7, #0
 800ce24:	b203      	sxth	r3, r0
 800ce26:	9307      	str	r3, [sp, #28]
 800ce28:	d138      	bne.n	800ce9c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x118>
 800ce2a:	f1b9 0f00 	cmp.w	r9, #0
 800ce2e:	d132      	bne.n	800ce96 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800ce30:	6823      	ldr	r3, [r4, #0]
 800ce32:	464a      	mov	r2, r9
 800ce34:	4629      	mov	r1, r5
 800ce36:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800ce3a:	4620      	mov	r0, r4
 800ce3c:	4798      	blx	r3
 800ce3e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ce40:	1ac0      	subs	r0, r0, r3
 800ce42:	9010      	str	r0, [sp, #64]	; 0x40
 800ce44:	4640      	mov	r0, r8
 800ce46:	f7ff fcbb 	bl	800c7c0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800ce4a:	6823      	ldr	r3, [r4, #0]
 800ce4c:	4607      	mov	r7, r0
 800ce4e:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800ce52:	4629      	mov	r1, r5
 800ce54:	4620      	mov	r0, r4
 800ce56:	4798      	blx	r3
 800ce58:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800ce5c:	1a38      	subs	r0, r7, r0
 800ce5e:	fa0f f880 	sxth.w	r8, r0
 800ce62:	eb13 0f08 	cmn.w	r3, r8
 800ce66:	d416      	bmi.n	800ce96 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800ce68:	6823      	ldr	r3, [r4, #0]
 800ce6a:	4629      	mov	r1, r5
 800ce6c:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 800ce70:	4620      	mov	r0, r4
 800ce72:	4798      	blx	r3
 800ce74:	4580      	cmp	r8, r0
 800ce76:	da0e      	bge.n	800ce96 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800ce78:	9a08      	ldr	r2, [sp, #32]
 800ce7a:	6823      	ldr	r3, [r4, #0]
 800ce7c:	9202      	str	r2, [sp, #8]
 800ce7e:	b23f      	sxth	r7, r7
 800ce80:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800ce84:	9201      	str	r2, [sp, #4]
 800ce86:	9700      	str	r7, [sp, #0]
 800ce88:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800ce8c:	4631      	mov	r1, r6
 800ce8e:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800ce92:	4620      	mov	r0, r4
 800ce94:	47a8      	blx	r5
 800ce96:	b013      	add	sp, #76	; 0x4c
 800ce98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ce9c:	ddfb      	ble.n	800ce96 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800ce9e:	6823      	ldr	r3, [r4, #0]
 800cea0:	4629      	mov	r1, r5
 800cea2:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800cea6:	4620      	mov	r0, r4
 800cea8:	4798      	blx	r3
 800ceaa:	6823      	ldr	r3, [r4, #0]
 800ceac:	4683      	mov	fp, r0
 800ceae:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800ceb2:	4629      	mov	r1, r5
 800ceb4:	4620      	mov	r0, r4
 800ceb6:	4798      	blx	r3
 800ceb8:	eba0 030b 	sub.w	r3, r0, fp
 800cebc:	2b00      	cmp	r3, #0
 800cebe:	bfb8      	it	lt
 800cec0:	425b      	neglt	r3, r3
 800cec2:	fb93 f3f7 	sdiv	r3, r3, r7
 800cec6:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800ceca:	4680      	mov	r8, r0
 800cecc:	dce3      	bgt.n	800ce96 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800cece:	6823      	ldr	r3, [r4, #0]
 800ced0:	465a      	mov	r2, fp
 800ced2:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800ced6:	4629      	mov	r1, r5
 800ced8:	4620      	mov	r0, r4
 800ceda:	4798      	blx	r3
 800cedc:	6823      	ldr	r3, [r4, #0]
 800cede:	4606      	mov	r6, r0
 800cee0:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cee4:	4642      	mov	r2, r8
 800cee6:	4629      	mov	r1, r5
 800cee8:	4620      	mov	r0, r4
 800ceea:	4798      	blx	r3
 800ceec:	42b0      	cmp	r0, r6
 800ceee:	bfa2      	ittt	ge
 800cef0:	4643      	movge	r3, r8
 800cef2:	46d8      	movge	r8, fp
 800cef4:	469b      	movge	fp, r3
 800cef6:	45d8      	cmp	r8, fp
 800cef8:	bfac      	ite	ge
 800cefa:	f04f 33ff 	movge.w	r3, #4294967295
 800cefe:	2301      	movlt	r3, #1
 800cf00:	fb98 f6f7 	sdiv	r6, r8, r7
 800cf04:	fb9b f2f7 	sdiv	r2, fp, r7
 800cf08:	1af6      	subs	r6, r6, r3
 800cf0a:	441a      	add	r2, r3
 800cf0c:	4296      	cmp	r6, r2
 800cf0e:	bfac      	ite	ge
 800cf10:	f04f 3aff 	movge.w	sl, #4294967295
 800cf14:	f04f 0a01 	movlt.w	sl, #1
 800cf18:	f1b9 0f00 	cmp.w	r9, #0
 800cf1c:	d13e      	bne.n	800cf9c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x218>
 800cf1e:	fb07 fb0a 	mul.w	fp, r7, sl
 800cf22:	eb0a 0802 	add.w	r8, sl, r2
 800cf26:	4377      	muls	r7, r6
 800cf28:	45b0      	cmp	r8, r6
 800cf2a:	d0b4      	beq.n	800ce96 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800cf2c:	6823      	ldr	r3, [r4, #0]
 800cf2e:	463a      	mov	r2, r7
 800cf30:	4629      	mov	r1, r5
 800cf32:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cf36:	4620      	mov	r0, r4
 800cf38:	4798      	blx	r3
 800cf3a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cf3c:	1ac0      	subs	r0, r0, r3
 800cf3e:	9010      	str	r0, [sp, #64]	; 0x40
 800cf40:	a810      	add	r0, sp, #64	; 0x40
 800cf42:	f7ff fc3d 	bl	800c7c0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cf46:	6823      	ldr	r3, [r4, #0]
 800cf48:	4681      	mov	r9, r0
 800cf4a:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800cf4e:	4629      	mov	r1, r5
 800cf50:	4620      	mov	r0, r4
 800cf52:	4798      	blx	r3
 800cf54:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800cf58:	eba9 0000 	sub.w	r0, r9, r0
 800cf5c:	b203      	sxth	r3, r0
 800cf5e:	42da      	cmn	r2, r3
 800cf60:	9304      	str	r3, [sp, #16]
 800cf62:	d418      	bmi.n	800cf96 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 800cf64:	6822      	ldr	r2, [r4, #0]
 800cf66:	4629      	mov	r1, r5
 800cf68:	f8d2 20a8 	ldr.w	r2, [r2, #168]	; 0xa8
 800cf6c:	4620      	mov	r0, r4
 800cf6e:	4790      	blx	r2
 800cf70:	9b04      	ldr	r3, [sp, #16]
 800cf72:	4283      	cmp	r3, r0
 800cf74:	da0f      	bge.n	800cf96 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 800cf76:	9b08      	ldr	r3, [sp, #32]
 800cf78:	9302      	str	r3, [sp, #8]
 800cf7a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800cf7e:	6822      	ldr	r2, [r4, #0]
 800cf80:	9301      	str	r3, [sp, #4]
 800cf82:	fa0f f389 	sxth.w	r3, r9
 800cf86:	9300      	str	r3, [sp, #0]
 800cf88:	f8d2 9088 	ldr.w	r9, [r2, #136]	; 0x88
 800cf8c:	a90e      	add	r1, sp, #56	; 0x38
 800cf8e:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800cf92:	4620      	mov	r0, r4
 800cf94:	47c8      	blx	r9
 800cf96:	4456      	add	r6, sl
 800cf98:	445f      	add	r7, fp
 800cf9a:	e7c5      	b.n	800cf28 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x1a4>
 800cf9c:	fb98 f8f9 	sdiv	r8, r8, r9
 800cfa0:	eba8 0203 	sub.w	r2, r8, r3
 800cfa4:	fb9b f8f9 	sdiv	r8, fp, r9
 800cfa8:	4498      	add	r8, r3
 800cfaa:	4542      	cmp	r2, r8
 800cfac:	bfac      	ite	ge
 800cfae:	f04f 33ff 	movge.w	r3, #4294967295
 800cfb2:	2301      	movlt	r3, #1
 800cfb4:	930a      	str	r3, [sp, #40]	; 0x28
 800cfb6:	6823      	ldr	r3, [r4, #0]
 800cfb8:	9204      	str	r2, [sp, #16]
 800cfba:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cfbe:	fb02 f209 	mul.w	r2, r2, r9
 800cfc2:	4629      	mov	r1, r5
 800cfc4:	4620      	mov	r0, r4
 800cfc6:	4798      	blx	r3
 800cfc8:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
 800cfcc:	f84b 0d08 	str.w	r0, [fp, #-8]!
 800cfd0:	4658      	mov	r0, fp
 800cfd2:	f7ff fbf5 	bl	800c7c0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cfd6:	b203      	sxth	r3, r0
 800cfd8:	9305      	str	r3, [sp, #20]
 800cfda:	6823      	ldr	r3, [r4, #0]
 800cfdc:	fb06 f207 	mul.w	r2, r6, r7
 800cfe0:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cfe4:	4629      	mov	r1, r5
 800cfe6:	4620      	mov	r0, r4
 800cfe8:	4798      	blx	r3
 800cfea:	9010      	str	r0, [sp, #64]	; 0x40
 800cfec:	4658      	mov	r0, fp
 800cfee:	f7ff fbe7 	bl	800c7c0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cff2:	fb07 f20a 	mul.w	r2, r7, sl
 800cff6:	920b      	str	r2, [sp, #44]	; 0x2c
 800cff8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800cffa:	4442      	add	r2, r8
 800cffc:	b203      	sxth	r3, r0
 800cffe:	920c      	str	r2, [sp, #48]	; 0x30
 800d000:	9a05      	ldr	r2, [sp, #20]
 800d002:	429a      	cmp	r2, r3
 800d004:	dc16      	bgt.n	800d034 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x2b0>
 800d006:	eb06 080a 	add.w	r8, r6, sl
 800d00a:	fb07 f808 	mul.w	r8, r7, r8
 800d00e:	9a05      	ldr	r2, [sp, #20]
 800d010:	429a      	cmp	r2, r3
 800d012:	db54      	blt.n	800d0be <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x33a>
 800d014:	6823      	ldr	r3, [r4, #0]
 800d016:	4642      	mov	r2, r8
 800d018:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800d01c:	4629      	mov	r1, r5
 800d01e:	4620      	mov	r0, r4
 800d020:	4798      	blx	r3
 800d022:	9010      	str	r0, [sp, #64]	; 0x40
 800d024:	4658      	mov	r0, fp
 800d026:	f7ff fbcb 	bl	800c7c0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d02a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d02c:	4456      	add	r6, sl
 800d02e:	b203      	sxth	r3, r0
 800d030:	4490      	add	r8, r2
 800d032:	e7ec      	b.n	800d00e <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x28a>
 800d034:	6823      	ldr	r3, [r4, #0]
 800d036:	fb07 f206 	mul.w	r2, r7, r6
 800d03a:	4629      	mov	r1, r5
 800d03c:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800d040:	4620      	mov	r0, r4
 800d042:	4798      	blx	r3
 800d044:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d046:	1ac0      	subs	r0, r0, r3
 800d048:	9010      	str	r0, [sp, #64]	; 0x40
 800d04a:	4658      	mov	r0, fp
 800d04c:	f7ff fbb8 	bl	800c7c0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d050:	6823      	ldr	r3, [r4, #0]
 800d052:	4680      	mov	r8, r0
 800d054:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800d058:	4629      	mov	r1, r5
 800d05a:	4620      	mov	r0, r4
 800d05c:	4798      	blx	r3
 800d05e:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800d062:	eba8 0000 	sub.w	r0, r8, r0
 800d066:	b203      	sxth	r3, r0
 800d068:	42da      	cmn	r2, r3
 800d06a:	930d      	str	r3, [sp, #52]	; 0x34
 800d06c:	d418      	bmi.n	800d0a0 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 800d06e:	6822      	ldr	r2, [r4, #0]
 800d070:	4629      	mov	r1, r5
 800d072:	f8d2 20a8 	ldr.w	r2, [r2, #168]	; 0xa8
 800d076:	4620      	mov	r0, r4
 800d078:	4790      	blx	r2
 800d07a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d07c:	4283      	cmp	r3, r0
 800d07e:	da0f      	bge.n	800d0a0 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 800d080:	9b08      	ldr	r3, [sp, #32]
 800d082:	9302      	str	r3, [sp, #8]
 800d084:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800d088:	6822      	ldr	r2, [r4, #0]
 800d08a:	9301      	str	r3, [sp, #4]
 800d08c:	fa0f f388 	sxth.w	r3, r8
 800d090:	9300      	str	r3, [sp, #0]
 800d092:	f8d2 8088 	ldr.w	r8, [r2, #136]	; 0x88
 800d096:	a90e      	add	r1, sp, #56	; 0x38
 800d098:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800d09c:	4620      	mov	r0, r4
 800d09e:	47c0      	blx	r8
 800d0a0:	6823      	ldr	r3, [r4, #0]
 800d0a2:	4456      	add	r6, sl
 800d0a4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800d0a8:	fb06 f207 	mul.w	r2, r6, r7
 800d0ac:	4629      	mov	r1, r5
 800d0ae:	4620      	mov	r0, r4
 800d0b0:	4798      	blx	r3
 800d0b2:	9010      	str	r0, [sp, #64]	; 0x40
 800d0b4:	4658      	mov	r0, fp
 800d0b6:	f7ff fb83 	bl	800c7c0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d0ba:	b203      	sxth	r3, r0
 800d0bc:	e7a0      	b.n	800d000 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 800d0be:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800d0c0:	930d      	str	r3, [sp, #52]	; 0x34
 800d0c2:	9b04      	ldr	r3, [sp, #16]
 800d0c4:	4413      	add	r3, r2
 800d0c6:	9304      	str	r3, [sp, #16]
 800d0c8:	9a04      	ldr	r2, [sp, #16]
 800d0ca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800d0cc:	4293      	cmp	r3, r2
 800d0ce:	f43f aee2 	beq.w	800ce96 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800d0d2:	9b04      	ldr	r3, [sp, #16]
 800d0d4:	6822      	ldr	r2, [r4, #0]
 800d0d6:	4629      	mov	r1, r5
 800d0d8:	f8d2 80ac 	ldr.w	r8, [r2, #172]	; 0xac
 800d0dc:	4620      	mov	r0, r4
 800d0de:	fb03 f209 	mul.w	r2, r3, r9
 800d0e2:	47c0      	blx	r8
 800d0e4:	9010      	str	r0, [sp, #64]	; 0x40
 800d0e6:	4658      	mov	r0, fp
 800d0e8:	f7ff fb6a 	bl	800c7c0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d0ec:	b203      	sxth	r3, r0
 800d0ee:	9305      	str	r3, [sp, #20]
 800d0f0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d0f2:	e785      	b.n	800d000 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 800d0f4:	4798      	blx	r3
 800d0f6:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800d0fa:	deff      	udf	#255	; 0xff

0800d0fc <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 800d0fc:	b510      	push	{r4, lr}
 800d0fe:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 800d102:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 800d106:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 800d10a:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 800d10e:	13a4      	asrs	r4, r4, #14
 800d110:	139b      	asrs	r3, r3, #14
 800d112:	429c      	cmp	r4, r3
 800d114:	bfb8      	it	lt
 800d116:	461c      	movlt	r4, r3
 800d118:	2c01      	cmp	r4, #1
 800d11a:	dd07      	ble.n	800d12c <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 800d11c:	fb91 f1f4 	sdiv	r1, r1, r4
 800d120:	fb90 f0f4 	sdiv	r0, r0, r4
 800d124:	f7ff ffea 	bl	800d0fc <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800d128:	4360      	muls	r0, r4
 800d12a:	bd10      	pop	{r4, pc}
 800d12c:	4340      	muls	r0, r0
 800d12e:	fb01 0101 	mla	r1, r1, r1, r0
 800d132:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 800d136:	bfb4      	ite	lt
 800d138:	f44f 4380 	movlt.w	r3, #16384	; 0x4000
 800d13c:	f04f 4380 	movge.w	r3, #1073741824	; 0x40000000
 800d140:	2000      	movs	r0, #0
 800d142:	18c2      	adds	r2, r0, r3
 800d144:	428a      	cmp	r2, r1
 800d146:	bf9c      	itt	ls
 800d148:	1898      	addls	r0, r3, r2
 800d14a:	1a89      	subls	r1, r1, r2
 800d14c:	089b      	lsrs	r3, r3, #2
 800d14e:	ea4f 0050 	mov.w	r0, r0, lsr #1
 800d152:	d1f6      	bne.n	800d142 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x46>
 800d154:	e7e9      	b.n	800d12a <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

0800d156 <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>:
 800d156:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d158:	9906      	ldr	r1, [sp, #24]
 800d15a:	4291      	cmp	r1, r2
 800d15c:	bfbc      	itt	lt
 800d15e:	9206      	strlt	r2, [sp, #24]
 800d160:	460a      	movlt	r2, r1
 800d162:	9907      	ldr	r1, [sp, #28]
 800d164:	428b      	cmp	r3, r1
 800d166:	4606      	mov	r6, r0
 800d168:	461c      	mov	r4, r3
 800d16a:	f04f 0020 	mov.w	r0, #32
 800d16e:	bfc8      	it	gt
 800d170:	460c      	movgt	r4, r1
 800d172:	fb92 f5f0 	sdiv	r5, r2, r0
 800d176:	fb94 f4f0 	sdiv	r4, r4, r0
 800d17a:	a806      	add	r0, sp, #24
 800d17c:	bfc8      	it	gt
 800d17e:	9307      	strgt	r3, [sp, #28]
 800d180:	f7ff fdf7 	bl	800cd72 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800d184:	4607      	mov	r7, r0
 800d186:	a807      	add	r0, sp, #28
 800d188:	f7ff fdf3 	bl	800cd72 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800d18c:	1b7a      	subs	r2, r7, r5
 800d18e:	1b00      	subs	r0, r0, r4
 800d190:	80f0      	strh	r0, [r6, #6]
 800d192:	8035      	strh	r5, [r6, #0]
 800d194:	8074      	strh	r4, [r6, #2]
 800d196:	80b2      	strh	r2, [r6, #4]
 800d198:	4630      	mov	r0, r6
 800d19a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800d19c <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>:
 800d19c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d19e:	9c08      	ldr	r4, [sp, #32]
 800d1a0:	2602      	movs	r6, #2
 800d1a2:	3401      	adds	r4, #1
 800d1a4:	fb94 f4f6 	sdiv	r4, r4, r6
 800d1a8:	18a6      	adds	r6, r4, r2
 800d1aa:	191f      	adds	r7, r3, r4
 800d1ac:	e9cd 6700 	strd	r6, r7, [sp]
 800d1b0:	1b1b      	subs	r3, r3, r4
 800d1b2:	1b12      	subs	r2, r2, r4
 800d1b4:	4605      	mov	r5, r0
 800d1b6:	f7ff ffce 	bl	800d156 <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>
 800d1ba:	4628      	mov	r0, r5
 800d1bc:	b003      	add	sp, #12
 800d1be:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d1c0 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs>:
 800d1c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d1c4:	6943      	ldr	r3, [r0, #20]
 800d1c6:	b087      	sub	sp, #28
 800d1c8:	4606      	mov	r6, r0
 800d1ca:	460d      	mov	r5, r1
 800d1cc:	2b00      	cmp	r3, #0
 800d1ce:	d072      	beq.n	800d2b6 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xf6>
 800d1d0:	695c      	ldr	r4, [r3, #20]
 800d1d2:	f890 702c 	ldrb.w	r7, [r0, #44]	; 0x2c
 800d1d6:	6823      	ldr	r3, [r4, #0]
 800d1d8:	4620      	mov	r0, r4
 800d1da:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800d1de:	4798      	blx	r3
 800d1e0:	6823      	ldr	r3, [r4, #0]
 800d1e2:	4680      	mov	r8, r0
 800d1e4:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800d1e8:	4629      	mov	r1, r5
 800d1ea:	4620      	mov	r0, r4
 800d1ec:	4798      	blx	r3
 800d1ee:	017f      	lsls	r7, r7, #5
 800d1f0:	4603      	mov	r3, r0
 800d1f2:	9700      	str	r7, [sp, #0]
 800d1f4:	4642      	mov	r2, r8
 800d1f6:	4631      	mov	r1, r6
 800d1f8:	a802      	add	r0, sp, #8
 800d1fa:	f7ff ffcf 	bl	800d19c <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800d1fe:	2d00      	cmp	r5, #0
 800d200:	dd1b      	ble.n	800d23a <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0x7a>
 800d202:	6823      	ldr	r3, [r4, #0]
 800d204:	f105 38ff 	add.w	r8, r5, #4294967295
 800d208:	fa0f f888 	sxth.w	r8, r8
 800d20c:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800d210:	4641      	mov	r1, r8
 800d212:	4620      	mov	r0, r4
 800d214:	4798      	blx	r3
 800d216:	6823      	ldr	r3, [r4, #0]
 800d218:	4681      	mov	r9, r0
 800d21a:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800d21e:	4641      	mov	r1, r8
 800d220:	4620      	mov	r0, r4
 800d222:	4798      	blx	r3
 800d224:	4631      	mov	r1, r6
 800d226:	4603      	mov	r3, r0
 800d228:	9700      	str	r7, [sp, #0]
 800d22a:	a804      	add	r0, sp, #16
 800d22c:	464a      	mov	r2, r9
 800d22e:	f7ff ffb5 	bl	800d19c <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800d232:	a904      	add	r1, sp, #16
 800d234:	a802      	add	r0, sp, #8
 800d236:	f7ff fd57 	bl	800cce8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d23a:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800d23e:	3b01      	subs	r3, #1
 800d240:	429d      	cmp	r5, r3
 800d242:	da19      	bge.n	800d278 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xb8>
 800d244:	6823      	ldr	r3, [r4, #0]
 800d246:	3501      	adds	r5, #1
 800d248:	b22d      	sxth	r5, r5
 800d24a:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800d24e:	4629      	mov	r1, r5
 800d250:	4620      	mov	r0, r4
 800d252:	4798      	blx	r3
 800d254:	6823      	ldr	r3, [r4, #0]
 800d256:	4680      	mov	r8, r0
 800d258:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800d25c:	4629      	mov	r1, r5
 800d25e:	4620      	mov	r0, r4
 800d260:	4798      	blx	r3
 800d262:	4631      	mov	r1, r6
 800d264:	4603      	mov	r3, r0
 800d266:	9700      	str	r7, [sp, #0]
 800d268:	a804      	add	r0, sp, #16
 800d26a:	4642      	mov	r2, r8
 800d26c:	f7ff ff96 	bl	800d19c <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800d270:	a904      	add	r1, sp, #16
 800d272:	a802      	add	r0, sp, #8
 800d274:	f7ff fd38 	bl	800cce8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d278:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 800d27c:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 800d280:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 800d284:	18ca      	adds	r2, r1, r3
 800d286:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800d28a:	f8ad 1012 	strh.w	r1, [sp, #18]
 800d28e:	1a9b      	subs	r3, r3, r2
 800d290:	f8ad 0014 	strh.w	r0, [sp, #20]
 800d294:	2200      	movs	r2, #0
 800d296:	a904      	add	r1, sp, #16
 800d298:	a802      	add	r0, sp, #8
 800d29a:	f8ad 2010 	strh.w	r2, [sp, #16]
 800d29e:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d2a2:	f7fd ffbb 	bl	800b21c <_ZN8touchgfx4RectaNERKS0_>
 800d2a6:	6833      	ldr	r3, [r6, #0]
 800d2a8:	a902      	add	r1, sp, #8
 800d2aa:	691b      	ldr	r3, [r3, #16]
 800d2ac:	4630      	mov	r0, r6
 800d2ae:	4798      	blx	r3
 800d2b0:	b007      	add	sp, #28
 800d2b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d2b6:	681b      	ldr	r3, [r3, #0]
 800d2b8:	deff      	udf	#255	; 0xff

0800d2ba <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>:
 800d2ba:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800d2be:	2b00      	cmp	r3, #0
 800d2c0:	da05      	bge.n	800d2ce <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x14>
 800d2c2:	880a      	ldrh	r2, [r1, #0]
 800d2c4:	b29b      	uxth	r3, r3
 800d2c6:	441a      	add	r2, r3
 800d2c8:	425b      	negs	r3, r3
 800d2ca:	800a      	strh	r2, [r1, #0]
 800d2cc:	808b      	strh	r3, [r1, #4]
 800d2ce:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800d2d2:	2b00      	cmp	r3, #0
 800d2d4:	da05      	bge.n	800d2e2 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x28>
 800d2d6:	884a      	ldrh	r2, [r1, #2]
 800d2d8:	b29b      	uxth	r3, r3
 800d2da:	441a      	add	r2, r3
 800d2dc:	425b      	negs	r3, r3
 800d2de:	804a      	strh	r2, [r1, #2]
 800d2e0:	80cb      	strh	r3, [r1, #6]
 800d2e2:	4770      	bx	lr

0800d2e4 <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh>:
 800d2e4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800d2e6:	4604      	mov	r4, r0
 800d2e8:	460d      	mov	r5, r1
 800d2ea:	6801      	ldr	r1, [r0, #0]
 800d2ec:	f9bd 0024 	ldrsh.w	r0, [sp, #36]	; 0x24
 800d2f0:	9001      	str	r0, [sp, #4]
 800d2f2:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 800d2f6:	9000      	str	r0, [sp, #0]
 800d2f8:	f8d1 6090 	ldr.w	r6, [r1, #144]	; 0x90
 800d2fc:	a802      	add	r0, sp, #8
 800d2fe:	4621      	mov	r1, r4
 800d300:	47b0      	blx	r6
 800d302:	a902      	add	r1, sp, #8
 800d304:	4620      	mov	r0, r4
 800d306:	f7ff ffd8 	bl	800d2ba <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>
 800d30a:	a802      	add	r0, sp, #8
 800d30c:	4629      	mov	r1, r5
 800d30e:	f7fd ff85 	bl	800b21c <_ZN8touchgfx4RectaNERKS0_>
 800d312:	a802      	add	r0, sp, #8
 800d314:	f7fd ffc5 	bl	800b2a2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d318:	b968      	cbnz	r0, 800d336 <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh+0x52>
 800d31a:	6823      	ldr	r3, [r4, #0]
 800d31c:	a902      	add	r1, sp, #8
 800d31e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d320:	4620      	mov	r0, r4
 800d322:	4798      	blx	r3
 800d324:	f7f5 f81e 	bl	8002364 <_ZN8touchgfx3HAL3lcdEv>
 800d328:	6803      	ldr	r3, [r0, #0]
 800d32a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d32c:	6a1d      	ldr	r5, [r3, #32]
 800d32e:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 800d332:	a902      	add	r1, sp, #8
 800d334:	47a8      	blx	r5
 800d336:	b004      	add	sp, #16
 800d338:	bd70      	pop	{r4, r5, r6, pc}

0800d33a <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>:
 800d33a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d33e:	b08b      	sub	sp, #44	; 0x2c
 800d340:	461e      	mov	r6, r3
 800d342:	f9bd 3050 	ldrsh.w	r3, [sp, #80]	; 0x50
 800d346:	9304      	str	r3, [sp, #16]
 800d348:	429e      	cmp	r6, r3
 800d34a:	4689      	mov	r9, r1
 800d34c:	4615      	mov	r5, r2
 800d34e:	d072      	beq.n	800d436 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xfc>
 800d350:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800d354:	015b      	lsls	r3, r3, #5
 800d356:	9303      	str	r3, [sp, #12]
 800d358:	6813      	ldr	r3, [r2, #0]
 800d35a:	4610      	mov	r0, r2
 800d35c:	4631      	mov	r1, r6
 800d35e:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800d362:	4798      	blx	r3
 800d364:	ab0a      	add	r3, sp, #40	; 0x28
 800d366:	4634      	mov	r4, r6
 800d368:	f843 0d10 	str.w	r0, [r3, #-16]!
 800d36c:	4618      	mov	r0, r3
 800d36e:	f7ff fa27 	bl	800c7c0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d372:	682b      	ldr	r3, [r5, #0]
 800d374:	4631      	mov	r1, r6
 800d376:	0147      	lsls	r7, r0, #5
 800d378:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800d37c:	4628      	mov	r0, r5
 800d37e:	4798      	blx	r3
 800d380:	ab0a      	add	r3, sp, #40	; 0x28
 800d382:	f843 0d0c 	str.w	r0, [r3, #-12]!
 800d386:	4618      	mov	r0, r3
 800d388:	f7ff fa1a 	bl	800c7c0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d38c:	ea4f 1840 	mov.w	r8, r0, lsl #5
 800d390:	4642      	mov	r2, r8
 800d392:	4639      	mov	r1, r7
 800d394:	4648      	mov	r0, r9
 800d396:	f013 fb59 	bl	8020a4c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800d39a:	2301      	movs	r3, #1
 800d39c:	9300      	str	r3, [sp, #0]
 800d39e:	9b00      	ldr	r3, [sp, #0]
 800d3a0:	441c      	add	r4, r3
 800d3a2:	682b      	ldr	r3, [r5, #0]
 800d3a4:	b224      	sxth	r4, r4
 800d3a6:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800d3aa:	4621      	mov	r1, r4
 800d3ac:	4628      	mov	r0, r5
 800d3ae:	4798      	blx	r3
 800d3b0:	9008      	str	r0, [sp, #32]
 800d3b2:	a808      	add	r0, sp, #32
 800d3b4:	f7ff fa04 	bl	800c7c0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d3b8:	0143      	lsls	r3, r0, #5
 800d3ba:	9301      	str	r3, [sp, #4]
 800d3bc:	682b      	ldr	r3, [r5, #0]
 800d3be:	4621      	mov	r1, r4
 800d3c0:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800d3c4:	4628      	mov	r0, r5
 800d3c6:	4798      	blx	r3
 800d3c8:	9009      	str	r0, [sp, #36]	; 0x24
 800d3ca:	a809      	add	r0, sp, #36	; 0x24
 800d3cc:	f7ff f9f8 	bl	800c7c0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d3d0:	0143      	lsls	r3, r0, #5
 800d3d2:	9302      	str	r3, [sp, #8]
 800d3d4:	9b01      	ldr	r3, [sp, #4]
 800d3d6:	eba3 0b07 	sub.w	fp, r3, r7
 800d3da:	9b02      	ldr	r3, [sp, #8]
 800d3dc:	eba3 0a08 	sub.w	sl, r3, r8
 800d3e0:	4651      	mov	r1, sl
 800d3e2:	4658      	mov	r0, fp
 800d3e4:	f7ff fe8a 	bl	800d0fc <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800d3e8:	b318      	cbz	r0, 800d432 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xf8>
 800d3ea:	4602      	mov	r2, r0
 800d3ec:	4651      	mov	r1, sl
 800d3ee:	9005      	str	r0, [sp, #20]
 800d3f0:	9803      	ldr	r0, [sp, #12]
 800d3f2:	f005 f9b9 	bl	8012768 <_ZN8touchgfx6muldivElll>
 800d3f6:	2302      	movs	r3, #2
 800d3f8:	fb90 faf3 	sdiv	sl, r0, r3
 800d3fc:	9b05      	ldr	r3, [sp, #20]
 800d3fe:	9803      	ldr	r0, [sp, #12]
 800d400:	461a      	mov	r2, r3
 800d402:	4659      	mov	r1, fp
 800d404:	f005 f9b0 	bl	8012768 <_ZN8touchgfx6muldivElll>
 800d408:	2302      	movs	r3, #2
 800d40a:	eba7 010a 	sub.w	r1, r7, sl
 800d40e:	fb90 fbf3 	sdiv	fp, r0, r3
 800d412:	4648      	mov	r0, r9
 800d414:	eb0b 0208 	add.w	r2, fp, r8
 800d418:	f013 f9ee 	bl	80207f8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d41c:	9b02      	ldr	r3, [sp, #8]
 800d41e:	eb03 020b 	add.w	r2, r3, fp
 800d422:	9b01      	ldr	r3, [sp, #4]
 800d424:	4648      	mov	r0, r9
 800d426:	eba3 010a 	sub.w	r1, r3, sl
 800d42a:	f013 f9e5 	bl	80207f8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d42e:	e9dd 7801 	ldrd	r7, r8, [sp, #4]
 800d432:	42a6      	cmp	r6, r4
 800d434:	db02      	blt.n	800d43c <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x102>
 800d436:	b00b      	add	sp, #44	; 0x2c
 800d438:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d43c:	9b00      	ldr	r3, [sp, #0]
 800d43e:	9a04      	ldr	r2, [sp, #16]
 800d440:	42a2      	cmp	r2, r4
 800d442:	bf08      	it	eq
 800d444:	f04f 33ff 	moveq.w	r3, #4294967295
 800d448:	e7a8      	b.n	800d39c <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x62>
	...

0800d44c <_ZN8touchgfx6CanvasD1Ev>:
 800d44c:	b510      	push	{r4, lr}
 800d44e:	4b04      	ldr	r3, [pc, #16]	; (800d460 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 800d450:	4604      	mov	r4, r0
 800d452:	f840 3b20 	str.w	r3, [r0], #32
 800d456:	f001 fce1 	bl	800ee1c <_ZN8touchgfx7OutlineD1Ev>
 800d45a:	4620      	mov	r0, r4
 800d45c:	bd10      	pop	{r4, pc}
 800d45e:	bf00      	nop
 800d460:	08023c78 	.word	0x08023c78

0800d464 <_ZN8touchgfx6CanvasD0Ev>:
 800d464:	b510      	push	{r4, lr}
 800d466:	4604      	mov	r4, r0
 800d468:	f7ff fff0 	bl	800d44c <_ZN8touchgfx6CanvasD1Ev>
 800d46c:	4620      	mov	r0, r4
 800d46e:	2170      	movs	r1, #112	; 0x70
 800d470:	f013 fb5d 	bl	8020b2e <_ZdlPvj>
 800d474:	4620      	mov	r0, r4
 800d476:	bd10      	pop	{r4, pc}

0800d478 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE>:
 800d478:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d47c:	6943      	ldr	r3, [r0, #20]
 800d47e:	b0a2      	sub	sp, #136	; 0x88
 800d480:	4606      	mov	r6, r0
 800d482:	460f      	mov	r7, r1
 800d484:	2b00      	cmp	r3, #0
 800d486:	d06a      	beq.n	800d55e <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xe6>
 800d488:	695c      	ldr	r4, [r3, #20]
 800d48a:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800d48e:	2b01      	cmp	r3, #1
 800d490:	dc04      	bgt.n	800d49c <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x24>
 800d492:	2401      	movs	r4, #1
 800d494:	4620      	mov	r0, r4
 800d496:	b022      	add	sp, #136	; 0x88
 800d498:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d49c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800d4a0:	ad22      	add	r5, sp, #136	; 0x88
 800d4a2:	011b      	lsls	r3, r3, #4
 800d4a4:	f845 3d70 	str.w	r3, [r5, #-112]!
 800d4a8:	4628      	mov	r0, r5
 800d4aa:	f7ff fc62 	bl	800cd72 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800d4ae:	8839      	ldrh	r1, [r7, #0]
 800d4b0:	88ba      	ldrh	r2, [r7, #4]
 800d4b2:	6823      	ldr	r3, [r4, #0]
 800d4b4:	b280      	uxth	r0, r0
 800d4b6:	440a      	add	r2, r1
 800d4b8:	4402      	add	r2, r0
 800d4ba:	1a09      	subs	r1, r1, r0
 800d4bc:	f10d 000e 	add.w	r0, sp, #14
 800d4c0:	9000      	str	r0, [sp, #0]
 800d4c2:	f8d3 8124 	ldr.w	r8, [r3, #292]	; 0x124
 800d4c6:	b212      	sxth	r2, r2
 800d4c8:	ab03      	add	r3, sp, #12
 800d4ca:	b209      	sxth	r1, r1
 800d4cc:	4620      	mov	r0, r4
 800d4ce:	47c0      	blx	r8
 800d4d0:	2800      	cmp	r0, #0
 800d4d2:	d0de      	beq.n	800d492 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1a>
 800d4d4:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 800d4d8:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 800d4dc:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 800d4e0:	f8ad 1012 	strh.w	r1, [sp, #18]
 800d4e4:	18ca      	adds	r2, r1, r3
 800d4e6:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800d4ea:	f8ad 0014 	strh.w	r0, [sp, #20]
 800d4ee:	1a9b      	subs	r3, r3, r2
 800d4f0:	4639      	mov	r1, r7
 800d4f2:	2200      	movs	r2, #0
 800d4f4:	a804      	add	r0, sp, #16
 800d4f6:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d4fa:	f8ad 2010 	strh.w	r2, [sp, #16]
 800d4fe:	f7fd fe8d 	bl	800b21c <_ZN8touchgfx4RectaNERKS0_>
 800d502:	aa04      	add	r2, sp, #16
 800d504:	4631      	mov	r1, r6
 800d506:	4628      	mov	r0, r5
 800d508:	f013 f8c8 	bl	802069c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 800d50c:	f9b4 7120 	ldrsh.w	r7, [r4, #288]	; 0x120
 800d510:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800d514:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 800d518:	2f00      	cmp	r7, #0
 800d51a:	dd03      	ble.n	800d524 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xac>
 800d51c:	42bb      	cmp	r3, r7
 800d51e:	da01      	bge.n	800d524 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xac>
 800d520:	42ba      	cmp	r2, r7
 800d522:	da0f      	bge.n	800d544 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xcc>
 800d524:	9200      	str	r2, [sp, #0]
 800d526:	4622      	mov	r2, r4
 800d528:	4629      	mov	r1, r5
 800d52a:	4630      	mov	r0, r6
 800d52c:	f7ff ff05 	bl	800d33a <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 800d530:	f894 102c 	ldrb.w	r1, [r4, #44]	; 0x2c
 800d534:	4628      	mov	r0, r5
 800d536:	f013 f9db 	bl	80208f0 <_ZN8touchgfx6Canvas6renderEh>
 800d53a:	4604      	mov	r4, r0
 800d53c:	4628      	mov	r0, r5
 800d53e:	f7ff ff85 	bl	800d44c <_ZN8touchgfx6CanvasD1Ev>
 800d542:	e7a7      	b.n	800d494 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1c>
 800d544:	1e7a      	subs	r2, r7, #1
 800d546:	b212      	sxth	r2, r2
 800d548:	9200      	str	r2, [sp, #0]
 800d54a:	4629      	mov	r1, r5
 800d54c:	4622      	mov	r2, r4
 800d54e:	4630      	mov	r0, r6
 800d550:	f7ff fef3 	bl	800d33a <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 800d554:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800d558:	9300      	str	r3, [sp, #0]
 800d55a:	463b      	mov	r3, r7
 800d55c:	e7e3      	b.n	800d526 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xae>
 800d55e:	f8b3 311e 	ldrh.w	r3, [r3, #286]	; 0x11e
 800d562:	deff      	udf	#255	; 0xff

0800d564 <_ZN8touchgfx15GraphLabelsBase22invalidateGraphPointAtEs>:
 800d564:	4770      	bx	lr

0800d566 <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
 800d566:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800d568:	b118      	cbz	r0, 800d572 <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 800d56a:	6803      	ldr	r3, [r0, #0]
 800d56c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d570:	4718      	bx	r3
 800d572:	4770      	bx	lr

0800d574 <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 800d574:	680b      	ldr	r3, [r1, #0]
 800d576:	4608      	mov	r0, r1
 800d578:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 800d57c:	4718      	bx	r3

0800d57e <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 800d57e:	680b      	ldr	r3, [r1, #0]
 800d580:	4608      	mov	r0, r1
 800d582:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800d586:	4718      	bx	r3

0800d588 <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 800d588:	680b      	ldr	r3, [r1, #0]
 800d58a:	4608      	mov	r0, r1
 800d58c:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 800d590:	4718      	bx	r3

0800d592 <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 800d592:	680b      	ldr	r3, [r1, #0]
 800d594:	4608      	mov	r0, r1
 800d596:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 800d59a:	4718      	bx	r3

0800d59c <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE>:
 800d59c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d5a0:	4a37      	ldr	r2, [pc, #220]	; (800d680 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe4>)
 800d5a2:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800d5a4:	8812      	ldrh	r2, [r2, #0]
 800d5a6:	429a      	cmp	r2, r3
 800d5a8:	b087      	sub	sp, #28
 800d5aa:	4604      	mov	r4, r0
 800d5ac:	4689      	mov	r9, r1
 800d5ae:	d937      	bls.n	800d620 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d5b0:	4a34      	ldr	r2, [pc, #208]	; (800d684 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe8>)
 800d5b2:	6812      	ldr	r2, [r2, #0]
 800d5b4:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800d5b8:	4b33      	ldr	r3, [pc, #204]	; (800d688 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xec>)
 800d5ba:	681b      	ldr	r3, [r3, #0]
 800d5bc:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 800d5c0:	f1b8 0f00 	cmp.w	r8, #0
 800d5c4:	d02c      	beq.n	800d620 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d5c6:	6803      	ldr	r3, [r0, #0]
 800d5c8:	6945      	ldr	r5, [r0, #20]
 800d5ca:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800d5cc:	2d00      	cmp	r5, #0
 800d5ce:	d052      	beq.n	800d676 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xda>
 800d5d0:	696f      	ldr	r7, [r5, #20]
 800d5d2:	4798      	blx	r3
 800d5d4:	f897 502c 	ldrb.w	r5, [r7, #44]	; 0x2c
 800d5d8:	fb15 f000 	smulbb	r0, r5, r0
 800d5dc:	b280      	uxth	r0, r0
 800d5de:	1c45      	adds	r5, r0, #1
 800d5e0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800d5e4:	122d      	asrs	r5, r5, #8
 800d5e6:	d01b      	beq.n	800d620 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d5e8:	6823      	ldr	r3, [r4, #0]
 800d5ea:	4639      	mov	r1, r7
 800d5ec:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d5f0:	4620      	mov	r0, r4
 800d5f2:	4798      	blx	r3
 800d5f4:	6823      	ldr	r3, [r4, #0]
 800d5f6:	4606      	mov	r6, r0
 800d5f8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800d5fc:	4639      	mov	r1, r7
 800d5fe:	4620      	mov	r0, r4
 800d600:	4798      	blx	r3
 800d602:	b2ed      	uxtb	r5, r5
 800d604:	4683      	mov	fp, r0
 800d606:	b970      	cbnz	r0, 800d626 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 800d608:	b96e      	cbnz	r6, 800d626 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 800d60a:	e9cd 6501 	strd	r6, r5, [sp, #4]
 800d60e:	6823      	ldr	r3, [r4, #0]
 800d610:	9600      	str	r6, [sp, #0]
 800d612:	f8d3 508c 	ldr.w	r5, [r3, #140]	; 0x8c
 800d616:	4642      	mov	r2, r8
 800d618:	463b      	mov	r3, r7
 800d61a:	4649      	mov	r1, r9
 800d61c:	4620      	mov	r0, r4
 800d61e:	47a8      	blx	r5
 800d620:	b007      	add	sp, #28
 800d622:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d626:	2e00      	cmp	r6, #0
 800d628:	ddfa      	ble.n	800d620 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d62a:	6823      	ldr	r3, [r4, #0]
 800d62c:	4639      	mov	r1, r7
 800d62e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800d632:	4620      	mov	r0, r4
 800d634:	4798      	blx	r3
 800d636:	6823      	ldr	r3, [r4, #0]
 800d638:	4682      	mov	sl, r0
 800d63a:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800d63e:	4639      	mov	r1, r7
 800d640:	4620      	mov	r0, r4
 800d642:	4798      	blx	r3
 800d644:	4582      	cmp	sl, r0
 800d646:	bfde      	ittt	le
 800d648:	4603      	movle	r3, r0
 800d64a:	4650      	movle	r0, sl
 800d64c:	469a      	movle	sl, r3
 800d64e:	ebaa 0300 	sub.w	r3, sl, r0
 800d652:	fb93 f3f6 	sdiv	r3, r3, r6
 800d656:	2b64      	cmp	r3, #100	; 0x64
 800d658:	dce2      	bgt.n	800d620 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d65a:	e9cd b503 	strd	fp, r5, [sp, #12]
 800d65e:	e9cd a601 	strd	sl, r6, [sp, #4]
 800d662:	6823      	ldr	r3, [r4, #0]
 800d664:	9000      	str	r0, [sp, #0]
 800d666:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800d66a:	4642      	mov	r2, r8
 800d66c:	463b      	mov	r3, r7
 800d66e:	4649      	mov	r1, r9
 800d670:	4620      	mov	r0, r4
 800d672:	47a8      	blx	r5
 800d674:	e7d4      	b.n	800d620 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d676:	4798      	blx	r3
 800d678:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800d67c:	deff      	udf	#255	; 0xff
 800d67e:	bf00      	nop
 800d680:	200174ac 	.word	0x200174ac
 800d684:	200174a8 	.word	0x200174a8
 800d688:	200174b0 	.word	0x200174b0

0800d68c <_ZN8touchgfx12GraphLabelsYD1Ev>:
 800d68c:	4770      	bx	lr

0800d68e <_ZN8touchgfx12GraphLabelsXD1Ev>:
 800d68e:	4770      	bx	lr

0800d690 <_ZNK8touchgfx12GraphLabelsX31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 800d690:	b538      	push	{r3, r4, r5, lr}
 800d692:	680a      	ldr	r2, [r1, #0]
 800d694:	e9d0 540c 	ldrd	r5, r4, [r0, #48]	; 0x30
 800d698:	f8d2 208c 	ldr.w	r2, [r2, #140]	; 0x8c
 800d69c:	4608      	mov	r0, r1
 800d69e:	4790      	blx	r2
 800d6a0:	4629      	mov	r1, r5
 800d6a2:	4602      	mov	r2, r0
 800d6a4:	4620      	mov	r0, r4
 800d6a6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d6aa:	f7ff baa7 	b.w	800cbfc <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0800d6ae <_ZNK8touchgfx12GraphLabelsY31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 800d6ae:	b538      	push	{r3, r4, r5, lr}
 800d6b0:	680a      	ldr	r2, [r1, #0]
 800d6b2:	e9d0 540c 	ldrd	r5, r4, [r0, #48]	; 0x30
 800d6b6:	f8d2 2094 	ldr.w	r2, [r2, #148]	; 0x94
 800d6ba:	4608      	mov	r0, r1
 800d6bc:	4790      	blx	r2
 800d6be:	4629      	mov	r1, r5
 800d6c0:	4602      	mov	r2, r0
 800d6c2:	4620      	mov	r0, r4
 800d6c4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d6c8:	f7ff ba98 	b.w	800cbfc <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0800d6cc <_ZN8touchgfx12GraphLabelsYD0Ev>:
 800d6cc:	b510      	push	{r4, lr}
 800d6ce:	214c      	movs	r1, #76	; 0x4c
 800d6d0:	4604      	mov	r4, r0
 800d6d2:	f013 fa2c 	bl	8020b2e <_ZdlPvj>
 800d6d6:	4620      	mov	r0, r4
 800d6d8:	bd10      	pop	{r4, pc}

0800d6da <_ZN8touchgfx12GraphLabelsXD0Ev>:
 800d6da:	b510      	push	{r4, lr}
 800d6dc:	214c      	movs	r1, #76	; 0x4c
 800d6de:	4604      	mov	r4, r0
 800d6e0:	f013 fa25 	bl	8020b2e <_ZdlPvj>
 800d6e4:	4620      	mov	r0, r4
 800d6e6:	bd10      	pop	{r4, pc}

0800d6e8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 800d6e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d6ec:	b08d      	sub	sp, #52	; 0x34
 800d6ee:	e9dd 9a18 	ldrd	r9, sl, [sp, #96]	; 0x60
 800d6f2:	9309      	str	r3, [sp, #36]	; 0x24
 800d6f4:	f89d 3068 	ldrb.w	r3, [sp, #104]	; 0x68
 800d6f8:	930a      	str	r3, [sp, #40]	; 0x28
 800d6fa:	4606      	mov	r6, r0
 800d6fc:	e9cd 1207 	strd	r1, r2, [sp, #28]
 800d700:	e9dd 7816 	ldrd	r7, r8, [sp, #88]	; 0x58
 800d704:	f1b9 0f00 	cmp.w	r9, #0
 800d708:	d117      	bne.n	800d73a <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x52>
 800d70a:	2f00      	cmp	r7, #0
 800d70c:	dc7c      	bgt.n	800d808 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x120>
 800d70e:	f1b8 0f00 	cmp.w	r8, #0
 800d712:	da01      	bge.n	800d718 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 800d714:	2f00      	cmp	r7, #0
 800d716:	d17a      	bne.n	800d80e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800d718:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d71a:	9318      	str	r3, [sp, #96]	; 0x60
 800d71c:	2300      	movs	r3, #0
 800d71e:	e9cd 3316 	strd	r3, r3, [sp, #88]	; 0x58
 800d722:	6832      	ldr	r2, [r6, #0]
 800d724:	9907      	ldr	r1, [sp, #28]
 800d726:	f8d2 408c 	ldr.w	r4, [r2, #140]	; 0x8c
 800d72a:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800d72e:	4630      	mov	r0, r6
 800d730:	46a4      	mov	ip, r4
 800d732:	b00d      	add	sp, #52	; 0x34
 800d734:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d738:	4760      	bx	ip
 800d73a:	fb97 f4f9 	sdiv	r4, r7, r9
 800d73e:	1e63      	subs	r3, r4, #1
 800d740:	9305      	str	r3, [sp, #20]
 800d742:	f1ba 0f00 	cmp.w	sl, #0
 800d746:	d122      	bne.n	800d78e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xa6>
 800d748:	fb98 faf9 	sdiv	sl, r8, r9
 800d74c:	fb03 f509 	mul.w	r5, r3, r9
 800d750:	f10a 0a02 	add.w	sl, sl, #2
 800d754:	9b05      	ldr	r3, [sp, #20]
 800d756:	459a      	cmp	sl, r3
 800d758:	d059      	beq.n	800d80e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800d75a:	42af      	cmp	r7, r5
 800d75c:	dc5a      	bgt.n	800d814 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x12c>
 800d75e:	45a8      	cmp	r8, r5
 800d760:	da01      	bge.n	800d766 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>
 800d762:	42af      	cmp	r7, r5
 800d764:	db0e      	blt.n	800d784 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 800d766:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d768:	9302      	str	r3, [sp, #8]
 800d76a:	9905      	ldr	r1, [sp, #20]
 800d76c:	6b73      	ldr	r3, [r6, #52]	; 0x34
 800d76e:	6832      	ldr	r2, [r6, #0]
 800d770:	434b      	muls	r3, r1
 800d772:	e9cd 5300 	strd	r5, r3, [sp]
 800d776:	9907      	ldr	r1, [sp, #28]
 800d778:	f8d2 b08c 	ldr.w	fp, [r2, #140]	; 0x8c
 800d77c:	4630      	mov	r0, r6
 800d77e:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800d782:	47d8      	blx	fp
 800d784:	9b05      	ldr	r3, [sp, #20]
 800d786:	3301      	adds	r3, #1
 800d788:	9305      	str	r3, [sp, #20]
 800d78a:	444d      	add	r5, r9
 800d78c:	e7e2      	b.n	800d754 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x6c>
 800d78e:	fb97 f3fa 	sdiv	r3, r7, sl
 800d792:	3b01      	subs	r3, #1
 800d794:	9306      	str	r3, [sp, #24]
 800d796:	9a06      	ldr	r2, [sp, #24]
 800d798:	fb98 f3fa 	sdiv	r3, r8, sl
 800d79c:	fb02 fb0a 	mul.w	fp, r2, sl
 800d7a0:	9a05      	ldr	r2, [sp, #20]
 800d7a2:	3302      	adds	r3, #2
 800d7a4:	fb02 f509 	mul.w	r5, r2, r9
 800d7a8:	930b      	str	r3, [sp, #44]	; 0x2c
 800d7aa:	45ab      	cmp	fp, r5
 800d7ac:	dd1d      	ble.n	800d7ea <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 800d7ae:	42af      	cmp	r7, r5
 800d7b0:	dc08      	bgt.n	800d7c4 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xdc>
 800d7b2:	45a8      	cmp	r8, r5
 800d7b4:	da08      	bge.n	800d7c8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 800d7b6:	42af      	cmp	r7, r5
 800d7b8:	da06      	bge.n	800d7c8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 800d7ba:	9b05      	ldr	r3, [sp, #20]
 800d7bc:	3301      	adds	r3, #1
 800d7be:	9305      	str	r3, [sp, #20]
 800d7c0:	444d      	add	r5, r9
 800d7c2:	e7f2      	b.n	800d7aa <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 800d7c4:	45a8      	cmp	r8, r5
 800d7c6:	dcf8      	bgt.n	800d7ba <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 800d7c8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d7ca:	9302      	str	r3, [sp, #8]
 800d7cc:	9905      	ldr	r1, [sp, #20]
 800d7ce:	6b73      	ldr	r3, [r6, #52]	; 0x34
 800d7d0:	6832      	ldr	r2, [r6, #0]
 800d7d2:	434b      	muls	r3, r1
 800d7d4:	e9cd 5300 	strd	r5, r3, [sp]
 800d7d8:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800d7dc:	9907      	ldr	r1, [sp, #28]
 800d7de:	461c      	mov	r4, r3
 800d7e0:	4630      	mov	r0, r6
 800d7e2:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800d7e6:	47a0      	blx	r4
 800d7e8:	e7e7      	b.n	800d7ba <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 800d7ea:	45ab      	cmp	fp, r5
 800d7ec:	db04      	blt.n	800d7f8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x110>
 800d7ee:	9b05      	ldr	r3, [sp, #20]
 800d7f0:	3301      	adds	r3, #1
 800d7f2:	9305      	str	r3, [sp, #20]
 800d7f4:	444d      	add	r5, r9
 800d7f6:	e7f8      	b.n	800d7ea <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 800d7f8:	9b06      	ldr	r3, [sp, #24]
 800d7fa:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d7fc:	3301      	adds	r3, #1
 800d7fe:	4293      	cmp	r3, r2
 800d800:	9306      	str	r3, [sp, #24]
 800d802:	d004      	beq.n	800d80e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800d804:	44d3      	add	fp, sl
 800d806:	e7d0      	b.n	800d7aa <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 800d808:	f1b8 0f00 	cmp.w	r8, #0
 800d80c:	dd84      	ble.n	800d718 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 800d80e:	b00d      	add	sp, #52	; 0x34
 800d810:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d814:	45a8      	cmp	r8, r5
 800d816:	dcb5      	bgt.n	800d784 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 800d818:	e7a5      	b.n	800d766 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>

0800d81a <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 800d81a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d81e:	f9b3 4120 	ldrsh.w	r4, [r3, #288]	; 0x120
 800d822:	b089      	sub	sp, #36	; 0x24
 800d824:	2c00      	cmp	r4, #0
 800d826:	9007      	str	r0, [sp, #28]
 800d828:	468a      	mov	sl, r1
 800d82a:	4693      	mov	fp, r2
 800d82c:	461d      	mov	r5, r3
 800d82e:	e9dd c612 	ldrd	ip, r6, [sp, #72]	; 0x48
 800d832:	e9dd 7814 	ldrd	r7, r8, [sp, #80]	; 0x50
 800d836:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800d83a:	dd03      	ble.n	800d844 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 800d83c:	4564      	cmp	r4, ip
 800d83e:	dd01      	ble.n	800d844 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 800d840:	42b4      	cmp	r4, r6
 800d842:	dd0e      	ble.n	800d862 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x48>
 800d844:	e9cd 8915 	strd	r8, r9, [sp, #84]	; 0x54
 800d848:	e9cd 6713 	strd	r6, r7, [sp, #76]	; 0x4c
 800d84c:	f8cd c048 	str.w	ip, [sp, #72]	; 0x48
 800d850:	9807      	ldr	r0, [sp, #28]
 800d852:	462b      	mov	r3, r5
 800d854:	465a      	mov	r2, fp
 800d856:	4651      	mov	r1, sl
 800d858:	b009      	add	sp, #36	; 0x24
 800d85a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d85e:	f7ff bf43 	b.w	800d6e8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 800d862:	f104 3eff 	add.w	lr, r4, #4294967295
 800d866:	e9cd 8903 	strd	r8, r9, [sp, #12]
 800d86a:	9702      	str	r7, [sp, #8]
 800d86c:	e9cd ce00 	strd	ip, lr, [sp]
 800d870:	f7ff ff3a 	bl	800d6e8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 800d874:	e9cd 8915 	strd	r8, r9, [sp, #84]	; 0x54
 800d878:	e9cd 6713 	strd	r6, r7, [sp, #76]	; 0x4c
 800d87c:	9412      	str	r4, [sp, #72]	; 0x48
 800d87e:	e7e7      	b.n	800d850 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x36>

0800d880 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>:
 800d880:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d884:	f1b3 0900 	subs.w	r9, r3, #0
 800d888:	460d      	mov	r5, r1
 800d88a:	4690      	mov	r8, r2
 800d88c:	9f08      	ldr	r7, [sp, #32]
 800d88e:	f8bd a024 	ldrh.w	sl, [sp, #36]	; 0x24
 800d892:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 800d894:	da18      	bge.n	800d8c8 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 800d896:	2a01      	cmp	r2, #1
 800d898:	dd16      	ble.n	800d8c8 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 800d89a:	232d      	movs	r3, #45	; 0x2d
 800d89c:	800b      	strh	r3, [r1, #0]
 800d89e:	f1c9 0900 	rsb	r9, r9, #0
 800d8a2:	2001      	movs	r0, #1
 800d8a4:	2f00      	cmp	r7, #0
 800d8a6:	d111      	bne.n	800d8cc <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x4c>
 800d8a8:	eba8 0100 	sub.w	r1, r8, r0
 800d8ac:	2302      	movs	r3, #2
 800d8ae:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800d8b2:	fb96 f3f3 	sdiv	r3, r6, r3
 800d8b6:	4a24      	ldr	r2, [pc, #144]	; (800d948 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 800d8b8:	444b      	add	r3, r9
 800d8ba:	b289      	uxth	r1, r1
 800d8bc:	fb93 f3f6 	sdiv	r3, r3, r6
 800d8c0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d8c4:	f006 bdb6 	b.w	8014434 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800d8c8:	2000      	movs	r0, #0
 800d8ca:	e7eb      	b.n	800d8a4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x24>
 800d8cc:	dd39      	ble.n	800d942 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 800d8ce:	fb99 f4f6 	sdiv	r4, r9, r6
 800d8d2:	eba8 0100 	sub.w	r1, r8, r0
 800d8d6:	4623      	mov	r3, r4
 800d8d8:	4a1b      	ldr	r2, [pc, #108]	; (800d948 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 800d8da:	b289      	uxth	r1, r1
 800d8dc:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800d8e0:	f006 fda8 	bl	8014434 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800d8e4:	4628      	mov	r0, r5
 800d8e6:	f006 fa31 	bl	8013d4c <_ZN8touchgfx7Unicode6strlenEPKt>
 800d8ea:	f108 38ff 	add.w	r8, r8, #4294967295
 800d8ee:	4580      	cmp	r8, r0
 800d8f0:	dd27      	ble.n	800d942 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 800d8f2:	f825 a010 	strh.w	sl, [r5, r0, lsl #1]
 800d8f6:	fb06 9314 	mls	r3, r6, r4, r9
 800d8fa:	3001      	adds	r0, #1
 800d8fc:	2200      	movs	r2, #0
 800d8fe:	f04f 090a 	mov.w	r9, #10
 800d902:	f107 3aff 	add.w	sl, r7, #4294967295
 800d906:	f04f 0e02 	mov.w	lr, #2
 800d90a:	fb96 fefe 	sdiv	lr, r6, lr
 800d90e:	4580      	cmp	r8, r0
 800d910:	4684      	mov	ip, r0
 800d912:	dd13      	ble.n	800d93c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xbc>
 800d914:	fb09 f303 	mul.w	r3, r9, r3
 800d918:	4592      	cmp	sl, r2
 800d91a:	f102 0201 	add.w	r2, r2, #1
 800d91e:	bf08      	it	eq
 800d920:	4473      	addeq	r3, lr
 800d922:	f100 0c01 	add.w	ip, r0, #1
 800d926:	fb93 f4f6 	sdiv	r4, r3, r6
 800d92a:	4297      	cmp	r7, r2
 800d92c:	f104 0130 	add.w	r1, r4, #48	; 0x30
 800d930:	f825 1010 	strh.w	r1, [r5, r0, lsl #1]
 800d934:	fb06 3314 	mls	r3, r6, r4, r3
 800d938:	4660      	mov	r0, ip
 800d93a:	d1e8      	bne.n	800d90e <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x8e>
 800d93c:	2300      	movs	r3, #0
 800d93e:	f825 301c 	strh.w	r3, [r5, ip, lsl #1]
 800d942:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d946:	bf00      	nop
 800d948:	08023728 	.word	0x08023728

0800d94c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs>:
 800d94c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d950:	4a6b      	ldr	r2, [pc, #428]	; (800db00 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1b4>)
 800d952:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800d954:	8812      	ldrh	r2, [r2, #0]
 800d956:	429a      	cmp	r2, r3
 800d958:	b092      	sub	sp, #72	; 0x48
 800d95a:	4604      	mov	r4, r0
 800d95c:	460e      	mov	r6, r1
 800d95e:	d93a      	bls.n	800d9d6 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d960:	4a68      	ldr	r2, [pc, #416]	; (800db04 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1b8>)
 800d962:	6812      	ldr	r2, [r2, #0]
 800d964:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800d968:	4b67      	ldr	r3, [pc, #412]	; (800db08 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1bc>)
 800d96a:	681b      	ldr	r3, [r3, #0]
 800d96c:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 800d970:	f1b8 0f00 	cmp.w	r8, #0
 800d974:	d02f      	beq.n	800d9d6 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d976:	6803      	ldr	r3, [r0, #0]
 800d978:	6945      	ldr	r5, [r0, #20]
 800d97a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800d97c:	2d00      	cmp	r5, #0
 800d97e:	f000 80ba 	beq.w	800daf6 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1aa>
 800d982:	696f      	ldr	r7, [r5, #20]
 800d984:	4798      	blx	r3
 800d986:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 800d98a:	fb13 f000 	smulbb	r0, r3, r0
 800d98e:	b280      	uxth	r0, r0
 800d990:	1c43      	adds	r3, r0, #1
 800d992:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 800d996:	0a03      	lsrs	r3, r0, #8
 800d998:	d01d      	beq.n	800d9d6 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d99a:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800d99c:	6823      	ldr	r3, [r4, #0]
 800d99e:	434e      	muls	r6, r1
 800d9a0:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d9a4:	4639      	mov	r1, r7
 800d9a6:	4620      	mov	r0, r4
 800d9a8:	4798      	blx	r3
 800d9aa:	6823      	ldr	r3, [r4, #0]
 800d9ac:	4605      	mov	r5, r0
 800d9ae:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800d9b2:	4639      	mov	r1, r7
 800d9b4:	4620      	mov	r0, r4
 800d9b6:	4798      	blx	r3
 800d9b8:	2d00      	cmp	r5, #0
 800d9ba:	dd0f      	ble.n	800d9dc <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x90>
 800d9bc:	fb96 f3f5 	sdiv	r3, r6, r5
 800d9c0:	436b      	muls	r3, r5
 800d9c2:	1b9a      	subs	r2, r3, r6
 800d9c4:	4253      	negs	r3, r2
 800d9c6:	4153      	adcs	r3, r2
 800d9c8:	2800      	cmp	r0, #0
 800d9ca:	dd09      	ble.n	800d9e0 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x94>
 800d9cc:	fb96 f2f0 	sdiv	r2, r6, r0
 800d9d0:	4350      	muls	r0, r2
 800d9d2:	42b0      	cmp	r0, r6
 800d9d4:	d10e      	bne.n	800d9f4 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa8>
 800d9d6:	b012      	add	sp, #72	; 0x48
 800d9d8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d9dc:	2300      	movs	r3, #0
 800d9de:	e7f3      	b.n	800d9c8 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x7c>
 800d9e0:	d108      	bne.n	800d9f4 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa8>
 800d9e2:	2d00      	cmp	r5, #0
 800d9e4:	f040 8084 	bne.w	800daf0 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1a4>
 800d9e8:	2e00      	cmp	r6, #0
 800d9ea:	d055      	beq.n	800da98 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x14c>
 800d9ec:	2b00      	cmp	r3, #0
 800d9ee:	d0f2      	beq.n	800d9d6 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d9f0:	462a      	mov	r2, r5
 800d9f2:	e007      	b.n	800da04 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb8>
 800d9f4:	2b00      	cmp	r3, #0
 800d9f6:	d0ee      	beq.n	800d9d6 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d9f8:	2d00      	cmp	r5, #0
 800d9fa:	d0f9      	beq.n	800d9f0 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa4>
 800d9fc:	fb96 f2f5 	sdiv	r2, r6, r5
 800da00:	6b65      	ldr	r5, [r4, #52]	; 0x34
 800da02:	436a      	muls	r2, r5
 800da04:	683b      	ldr	r3, [r7, #0]
 800da06:	f8df 9104 	ldr.w	r9, [pc, #260]	; 800db0c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1c0>
 800da0a:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 800da0e:	4631      	mov	r1, r6
 800da10:	4638      	mov	r0, r7
 800da12:	4798      	blx	r3
 800da14:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800da16:	9302      	str	r3, [sp, #8]
 800da18:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 800da1c:	9301      	str	r3, [sp, #4]
 800da1e:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800da22:	9300      	str	r3, [sp, #0]
 800da24:	a908      	add	r1, sp, #32
 800da26:	4603      	mov	r3, r0
 800da28:	2214      	movs	r2, #20
 800da2a:	4620      	mov	r0, r4
 800da2c:	f7ff ff28 	bl	800d880 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800da30:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800da34:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800da36:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800da3a:	f8d8 3000 	ldr.w	r3, [r8]
 800da3e:	d12d      	bne.n	800da9c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x150>
 800da40:	f8d9 0000 	ldr.w	r0, [r9]
 800da44:	699d      	ldr	r5, [r3, #24]
 800da46:	f7f7 ff95 	bl	8005974 <_ZNK8touchgfx5Texts7getTextEt>
 800da4a:	aa08      	add	r2, sp, #32
 800da4c:	4601      	mov	r1, r0
 800da4e:	4640      	mov	r0, r8
 800da50:	47a8      	blx	r5
 800da52:	4605      	mov	r5, r0
 800da54:	683b      	ldr	r3, [r7, #0]
 800da56:	f8b7 806c 	ldrh.w	r8, [r7, #108]	; 0x6c
 800da5a:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800da5e:	4631      	mov	r1, r6
 800da60:	4638      	mov	r0, r7
 800da62:	4798      	blx	r3
 800da64:	ab12      	add	r3, sp, #72	; 0x48
 800da66:	f843 0d34 	str.w	r0, [r3, #-52]!
 800da6a:	4618      	mov	r0, r3
 800da6c:	f7fe fea8 	bl	800c7c0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800da70:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800da74:	f8ad 301e 	strh.w	r3, [sp, #30]
 800da78:	4440      	add	r0, r8
 800da7a:	6823      	ldr	r3, [r4, #0]
 800da7c:	f8ad 501c 	strh.w	r5, [sp, #28]
 800da80:	eba0 0055 	sub.w	r0, r0, r5, lsr #1
 800da84:	2200      	movs	r2, #0
 800da86:	f8ad 0018 	strh.w	r0, [sp, #24]
 800da8a:	f8ad 201a 	strh.w	r2, [sp, #26]
 800da8e:	691b      	ldr	r3, [r3, #16]
 800da90:	a906      	add	r1, sp, #24
 800da92:	4620      	mov	r0, r4
 800da94:	4798      	blx	r3
 800da96:	e79e      	b.n	800d9d6 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800da98:	4632      	mov	r2, r6
 800da9a:	e7b3      	b.n	800da04 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb8>
 800da9c:	f8d9 0000 	ldr.w	r0, [r9]
 800daa0:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800daa2:	f7f7 ff67 	bl	8005974 <_ZNK8touchgfx5Texts7getTextEt>
 800daa6:	aa08      	add	r2, sp, #32
 800daa8:	4601      	mov	r1, r0
 800daaa:	4640      	mov	r0, r8
 800daac:	47a8      	blx	r5
 800daae:	f8d8 3000 	ldr.w	r3, [r8]
 800dab2:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800dab4:	f8d3 a040 	ldr.w	sl, [r3, #64]	; 0x40
 800dab8:	4605      	mov	r5, r0
 800daba:	f8d9 0000 	ldr.w	r0, [r9]
 800dabe:	f7f7 ff59 	bl	8005974 <_ZNK8touchgfx5Texts7getTextEt>
 800dac2:	aa08      	add	r2, sp, #32
 800dac4:	4601      	mov	r1, r0
 800dac6:	4640      	mov	r0, r8
 800dac8:	47d0      	blx	sl
 800daca:	f8d8 3000 	ldr.w	r3, [r8]
 800dace:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800dad0:	f8d3 a024 	ldr.w	sl, [r3, #36]	; 0x24
 800dad4:	fb15 f500 	smulbb	r5, r5, r0
 800dad8:	f8d9 0000 	ldr.w	r0, [r9]
 800dadc:	f7f7 ff4a 	bl	8005974 <_ZNK8touchgfx5Texts7getTextEt>
 800dae0:	aa08      	add	r2, sp, #32
 800dae2:	4601      	mov	r1, r0
 800dae4:	4640      	mov	r0, r8
 800dae6:	47d0      	blx	sl
 800dae8:	b2ad      	uxth	r5, r5
 800daea:	4405      	add	r5, r0
 800daec:	b2ad      	uxth	r5, r5
 800daee:	e7b1      	b.n	800da54 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x108>
 800daf0:	2b00      	cmp	r3, #0
 800daf2:	d183      	bne.n	800d9fc <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb0>
 800daf4:	e76f      	b.n	800d9d6 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800daf6:	4798      	blx	r3
 800daf8:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800dafc:	deff      	udf	#255	; 0xff
 800dafe:	bf00      	nop
 800db00:	200174ac 	.word	0x200174ac
 800db04:	200174a8 	.word	0x200174a8
 800db08:	200174b0 	.word	0x200174b0
 800db0c:	200174b4 	.word	0x200174b4

0800db10 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 800db10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800db14:	461d      	mov	r5, r3
 800db16:	b099      	sub	sp, #100	; 0x64
 800db18:	681b      	ldr	r3, [r3, #0]
 800db1a:	4604      	mov	r4, r0
 800db1c:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800db20:	4689      	mov	r9, r1
 800db22:	4628      	mov	r0, r5
 800db24:	9922      	ldr	r1, [sp, #136]	; 0x88
 800db26:	4690      	mov	r8, r2
 800db28:	4798      	blx	r3
 800db2a:	af18      	add	r7, sp, #96	; 0x60
 800db2c:	f847 0d28 	str.w	r0, [r7, #-40]!
 800db30:	4638      	mov	r0, r7
 800db32:	f7fe fe45 	bl	800c7c0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800db36:	f8b5 3116 	ldrh.w	r3, [r5, #278]	; 0x116
 800db3a:	1ac0      	subs	r0, r0, r3
 800db3c:	b200      	sxth	r0, r0
 800db3e:	2800      	cmp	r0, #0
 800db40:	f2c0 80b0 	blt.w	800dca4 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800db44:	f8b5 2118 	ldrh.w	r2, [r5, #280]	; 0x118
 800db48:	441a      	add	r2, r3
 800db4a:	f8b5 3040 	ldrh.w	r3, [r5, #64]	; 0x40
 800db4e:	1a9b      	subs	r3, r3, r2
 800db50:	b21b      	sxth	r3, r3
 800db52:	4298      	cmp	r0, r3
 800db54:	f280 80a6 	bge.w	800dca4 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800db58:	682b      	ldr	r3, [r5, #0]
 800db5a:	e9dd 1222 	ldrd	r1, r2, [sp, #136]	; 0x88
 800db5e:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 800db62:	4628      	mov	r0, r5
 800db64:	4798      	blx	r3
 800db66:	682b      	ldr	r3, [r5, #0]
 800db68:	f8b4 a042 	ldrh.w	sl, [r4, #66]	; 0x42
 800db6c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800db70:	f8b4 b044 	ldrh.w	fp, [r4, #68]	; 0x44
 800db74:	4606      	mov	r6, r0
 800db76:	4628      	mov	r0, r5
 800db78:	4798      	blx	r3
 800db7a:	f8cd a000 	str.w	sl, [sp]
 800db7e:	e9cd b001 	strd	fp, r0, [sp, #4]
 800db82:	4633      	mov	r3, r6
 800db84:	4639      	mov	r1, r7
 800db86:	2214      	movs	r2, #20
 800db88:	4620      	mov	r0, r4
 800db8a:	f7ff fe79 	bl	800d880 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800db8e:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800db92:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800db94:	f8df a16c 	ldr.w	sl, [pc, #364]	; 800dd04 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f4>
 800db98:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800db9c:	f8d8 3000 	ldr.w	r3, [r8]
 800dba0:	f040 8083 	bne.w	800dcaa <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x19a>
 800dba4:	f8da 0000 	ldr.w	r0, [sl]
 800dba8:	699e      	ldr	r6, [r3, #24]
 800dbaa:	f7f7 fee3 	bl	8005974 <_ZNK8touchgfx5Texts7getTextEt>
 800dbae:	463a      	mov	r2, r7
 800dbb0:	4601      	mov	r1, r0
 800dbb2:	4640      	mov	r0, r8
 800dbb4:	47b0      	blx	r6
 800dbb6:	4606      	mov	r6, r0
 800dbb8:	682b      	ldr	r3, [r5, #0]
 800dbba:	9922      	ldr	r1, [sp, #136]	; 0x88
 800dbbc:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800dbc0:	f8b5 a06c 	ldrh.w	sl, [r5, #108]	; 0x6c
 800dbc4:	4628      	mov	r0, r5
 800dbc6:	4798      	blx	r3
 800dbc8:	f10d 0b60 	add.w	fp, sp, #96	; 0x60
 800dbcc:	ad05      	add	r5, sp, #20
 800dbce:	f84b 0d3c 	str.w	r0, [fp, #-60]!
 800dbd2:	4658      	mov	r0, fp
 800dbd4:	f7fe fdf4 	bl	800c7c0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800dbd8:	4450      	add	r0, sl
 800dbda:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800dbde:	f8ad 6018 	strh.w	r6, [sp, #24]
 800dbe2:	eba0 0056 	sub.w	r0, r0, r6, lsr #1
 800dbe6:	f04f 0a00 	mov.w	sl, #0
 800dbea:	f8ad 301a 	strh.w	r3, [sp, #26]
 800dbee:	f8ad 0014 	strh.w	r0, [sp, #20]
 800dbf2:	f8ad a016 	strh.w	sl, [sp, #22]
 800dbf6:	e895 0003 	ldmia.w	r5, {r0, r1}
 800dbfa:	ae07      	add	r6, sp, #28
 800dbfc:	e886 0003 	stmia.w	r6, {r0, r1}
 800dc00:	4649      	mov	r1, r9
 800dc02:	4630      	mov	r0, r6
 800dc04:	f7fd fb0a 	bl	800b21c <_ZN8touchgfx4RectaNERKS0_>
 800dc08:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800dc0c:	4553      	cmp	r3, sl
 800dc0e:	dd49      	ble.n	800dca4 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800dc10:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800dc14:	4553      	cmp	r3, sl
 800dc16:	dd45      	ble.n	800dca4 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800dc18:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800dc1c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800dc20:	1a9b      	subs	r3, r3, r2
 800dc22:	f8ad 301c 	strh.w	r3, [sp, #28]
 800dc26:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800dc2a:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 800dc2e:	1a9b      	subs	r3, r3, r2
 800dc30:	f8ad 301e 	strh.w	r3, [sp, #30]
 800dc34:	6823      	ldr	r3, [r4, #0]
 800dc36:	4620      	mov	r0, r4
 800dc38:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800dc3a:	4629      	mov	r1, r5
 800dc3c:	4798      	blx	r3
 800dc3e:	4b30      	ldr	r3, [pc, #192]	; (800dd00 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f0>)
 800dc40:	f8b4 903c 	ldrh.w	r9, [r4, #60]	; 0x3c
 800dc44:	681b      	ldr	r3, [r3, #0]
 800dc46:	f894 1040 	ldrb.w	r1, [r4, #64]	; 0x40
 800dc4a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800dc4c:	eb03 0349 	add.w	r3, r3, r9, lsl #1
 800dc50:	785b      	ldrb	r3, [r3, #1]
 800dc52:	920b      	str	r2, [sp, #44]	; 0x2c
 800dc54:	f3c3 0001 	ubfx	r0, r3, #0, #2
 800dc58:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800dc5c:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800dc60:	f89d 3090 	ldrb.w	r3, [sp, #144]	; 0x90
 800dc64:	f88d 102a 	strb.w	r1, [sp, #42]	; 0x2a
 800dc68:	f88d 3032 	strb.w	r3, [sp, #50]	; 0x32
 800dc6c:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 800dc70:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800dc74:	f8ad a030 	strh.w	sl, [sp, #48]	; 0x30
 800dc78:	f88d a033 	strb.w	sl, [sp, #51]	; 0x33
 800dc7c:	f88d a034 	strb.w	sl, [sp, #52]	; 0x34
 800dc80:	f7f4 fb70 	bl	8002364 <_ZN8touchgfx3HAL3lcdEv>
 800dc84:	4b1f      	ldr	r3, [pc, #124]	; (800dd04 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f4>)
 800dc86:	4604      	mov	r4, r0
 800dc88:	4649      	mov	r1, r9
 800dc8a:	6818      	ldr	r0, [r3, #0]
 800dc8c:	f7f7 fe72 	bl	8005974 <_ZNK8touchgfx5Texts7getTextEt>
 800dc90:	e9cd 7a02 	strd	r7, sl, [sp, #8]
 800dc94:	e9cd b000 	strd	fp, r0, [sp]
 800dc98:	4633      	mov	r3, r6
 800dc9a:	e895 0006 	ldmia.w	r5, {r1, r2}
 800dc9e:	4620      	mov	r0, r4
 800dca0:	f7f7 fe1a 	bl	80058d8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800dca4:	b019      	add	sp, #100	; 0x64
 800dca6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dcaa:	f8da 0000 	ldr.w	r0, [sl]
 800dcae:	6a9e      	ldr	r6, [r3, #40]	; 0x28
 800dcb0:	f7f7 fe60 	bl	8005974 <_ZNK8touchgfx5Texts7getTextEt>
 800dcb4:	463a      	mov	r2, r7
 800dcb6:	4601      	mov	r1, r0
 800dcb8:	4640      	mov	r0, r8
 800dcba:	47b0      	blx	r6
 800dcbc:	f8d8 3000 	ldr.w	r3, [r8]
 800dcc0:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800dcc2:	f8d3 b040 	ldr.w	fp, [r3, #64]	; 0x40
 800dcc6:	4606      	mov	r6, r0
 800dcc8:	f8da 0000 	ldr.w	r0, [sl]
 800dccc:	f7f7 fe52 	bl	8005974 <_ZNK8touchgfx5Texts7getTextEt>
 800dcd0:	463a      	mov	r2, r7
 800dcd2:	4601      	mov	r1, r0
 800dcd4:	4640      	mov	r0, r8
 800dcd6:	47d8      	blx	fp
 800dcd8:	f8d8 3000 	ldr.w	r3, [r8]
 800dcdc:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800dcde:	f8d3 b024 	ldr.w	fp, [r3, #36]	; 0x24
 800dce2:	fb16 f600 	smulbb	r6, r6, r0
 800dce6:	f8da 0000 	ldr.w	r0, [sl]
 800dcea:	f7f7 fe43 	bl	8005974 <_ZNK8touchgfx5Texts7getTextEt>
 800dcee:	463a      	mov	r2, r7
 800dcf0:	4601      	mov	r1, r0
 800dcf2:	4640      	mov	r0, r8
 800dcf4:	47d8      	blx	fp
 800dcf6:	b2b6      	uxth	r6, r6
 800dcf8:	4406      	add	r6, r0
 800dcfa:	b2b6      	uxth	r6, r6
 800dcfc:	e75c      	b.n	800dbb8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa8>
 800dcfe:	bf00      	nop
 800dd00:	200174a8 	.word	0x200174a8
 800dd04:	200174b4 	.word	0x200174b4

0800dd08 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 800dd08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dd0c:	4698      	mov	r8, r3
 800dd0e:	b099      	sub	sp, #100	; 0x64
 800dd10:	681b      	ldr	r3, [r3, #0]
 800dd12:	4604      	mov	r4, r0
 800dd14:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 800dd18:	4689      	mov	r9, r1
 800dd1a:	4640      	mov	r0, r8
 800dd1c:	9922      	ldr	r1, [sp, #136]	; 0x88
 800dd1e:	4617      	mov	r7, r2
 800dd20:	4798      	blx	r3
 800dd22:	ae18      	add	r6, sp, #96	; 0x60
 800dd24:	f846 0d28 	str.w	r0, [r6, #-40]!
 800dd28:	4630      	mov	r0, r6
 800dd2a:	f7fe fd49 	bl	800c7c0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800dd2e:	f8b8 3114 	ldrh.w	r3, [r8, #276]	; 0x114
 800dd32:	1ac0      	subs	r0, r0, r3
 800dd34:	b200      	sxth	r0, r0
 800dd36:	2800      	cmp	r0, #0
 800dd38:	f2c0 80c0 	blt.w	800debc <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800dd3c:	f8b8 211a 	ldrh.w	r2, [r8, #282]	; 0x11a
 800dd40:	441a      	add	r2, r3
 800dd42:	f8b8 3042 	ldrh.w	r3, [r8, #66]	; 0x42
 800dd46:	1a9b      	subs	r3, r3, r2
 800dd48:	b21b      	sxth	r3, r3
 800dd4a:	4298      	cmp	r0, r3
 800dd4c:	f280 80b6 	bge.w	800debc <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800dd50:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800dd52:	9302      	str	r3, [sp, #8]
 800dd54:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 800dd58:	9301      	str	r3, [sp, #4]
 800dd5a:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800dd5e:	9300      	str	r3, [sp, #0]
 800dd60:	4631      	mov	r1, r6
 800dd62:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800dd64:	f8df a174 	ldr.w	sl, [pc, #372]	; 800dedc <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d4>
 800dd68:	2214      	movs	r2, #20
 800dd6a:	4620      	mov	r0, r4
 800dd6c:	f7ff fd88 	bl	800d880 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800dd70:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800dd74:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800dd76:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800dd7a:	683b      	ldr	r3, [r7, #0]
 800dd7c:	f040 80a1 	bne.w	800dec2 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1ba>
 800dd80:	f8da 0000 	ldr.w	r0, [sl]
 800dd84:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800dd86:	f7f7 fdf5 	bl	8005974 <_ZNK8touchgfx5Texts7getTextEt>
 800dd8a:	4632      	mov	r2, r6
 800dd8c:	4601      	mov	r1, r0
 800dd8e:	4638      	mov	r0, r7
 800dd90:	47a8      	blx	r5
 800dd92:	683b      	ldr	r3, [r7, #0]
 800dd94:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800dd96:	f8d3 b040 	ldr.w	fp, [r3, #64]	; 0x40
 800dd9a:	4605      	mov	r5, r0
 800dd9c:	f8da 0000 	ldr.w	r0, [sl]
 800dda0:	f7f7 fde8 	bl	8005974 <_ZNK8touchgfx5Texts7getTextEt>
 800dda4:	4632      	mov	r2, r6
 800dda6:	4601      	mov	r1, r0
 800dda8:	4638      	mov	r0, r7
 800ddaa:	47d8      	blx	fp
 800ddac:	683b      	ldr	r3, [r7, #0]
 800ddae:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800ddb0:	f8d3 b024 	ldr.w	fp, [r3, #36]	; 0x24
 800ddb4:	fb15 f500 	smulbb	r5, r5, r0
 800ddb8:	f8da 0000 	ldr.w	r0, [sl]
 800ddbc:	f7f7 fdda 	bl	8005974 <_ZNK8touchgfx5Texts7getTextEt>
 800ddc0:	4632      	mov	r2, r6
 800ddc2:	4601      	mov	r1, r0
 800ddc4:	4638      	mov	r0, r7
 800ddc6:	47d8      	blx	fp
 800ddc8:	b2ad      	uxth	r5, r5
 800ddca:	4405      	add	r5, r0
 800ddcc:	b2ad      	uxth	r5, r5
 800ddce:	f8d8 3000 	ldr.w	r3, [r8]
 800ddd2:	9922      	ldr	r1, [sp, #136]	; 0x88
 800ddd4:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 800ddd8:	f8b8 a0c6 	ldrh.w	sl, [r8, #198]	; 0xc6
 800dddc:	4640      	mov	r0, r8
 800ddde:	4798      	blx	r3
 800dde0:	f10d 0b60 	add.w	fp, sp, #96	; 0x60
 800dde4:	f04f 0800 	mov.w	r8, #0
 800dde8:	f84b 0d3c 	str.w	r0, [fp, #-60]!
 800ddec:	4658      	mov	r0, fp
 800ddee:	f7fe fce7 	bl	800c7c0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800ddf2:	4450      	add	r0, sl
 800ddf4:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800ddf8:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ddfc:	eba0 0055 	sub.w	r0, r0, r5, lsr #1
 800de00:	f8ad 501a 	strh.w	r5, [sp, #26]
 800de04:	f8ad 8014 	strh.w	r8, [sp, #20]
 800de08:	f8ad 0016 	strh.w	r0, [sp, #22]
 800de0c:	ad05      	add	r5, sp, #20
 800de0e:	e895 0003 	ldmia.w	r5, {r0, r1}
 800de12:	f10d 0a1c 	add.w	sl, sp, #28
 800de16:	e88a 0003 	stmia.w	sl, {r0, r1}
 800de1a:	4649      	mov	r1, r9
 800de1c:	4650      	mov	r0, sl
 800de1e:	f7fd f9fd 	bl	800b21c <_ZN8touchgfx4RectaNERKS0_>
 800de22:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800de26:	4543      	cmp	r3, r8
 800de28:	dd48      	ble.n	800debc <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800de2a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800de2e:	4543      	cmp	r3, r8
 800de30:	dd44      	ble.n	800debc <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800de32:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800de36:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800de3a:	1a9b      	subs	r3, r3, r2
 800de3c:	f8ad 301c 	strh.w	r3, [sp, #28]
 800de40:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800de44:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 800de48:	1a9b      	subs	r3, r3, r2
 800de4a:	f8ad 301e 	strh.w	r3, [sp, #30]
 800de4e:	6823      	ldr	r3, [r4, #0]
 800de50:	4620      	mov	r0, r4
 800de52:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800de54:	4629      	mov	r1, r5
 800de56:	4798      	blx	r3
 800de58:	4b1f      	ldr	r3, [pc, #124]	; (800ded8 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d0>)
 800de5a:	f8b4 903c 	ldrh.w	r9, [r4, #60]	; 0x3c
 800de5e:	681b      	ldr	r3, [r3, #0]
 800de60:	f894 1040 	ldrb.w	r1, [r4, #64]	; 0x40
 800de64:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800de66:	eb03 0349 	add.w	r3, r3, r9, lsl #1
 800de6a:	785b      	ldrb	r3, [r3, #1]
 800de6c:	920b      	str	r2, [sp, #44]	; 0x2c
 800de6e:	f3c3 0001 	ubfx	r0, r3, #0, #2
 800de72:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800de76:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800de7a:	f89d 3090 	ldrb.w	r3, [sp, #144]	; 0x90
 800de7e:	f88d 102a 	strb.w	r1, [sp, #42]	; 0x2a
 800de82:	f88d 3032 	strb.w	r3, [sp, #50]	; 0x32
 800de86:	9709      	str	r7, [sp, #36]	; 0x24
 800de88:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800de8c:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 800de90:	f88d 8033 	strb.w	r8, [sp, #51]	; 0x33
 800de94:	f88d 8034 	strb.w	r8, [sp, #52]	; 0x34
 800de98:	f7f4 fa64 	bl	8002364 <_ZN8touchgfx3HAL3lcdEv>
 800de9c:	4b0f      	ldr	r3, [pc, #60]	; (800dedc <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d4>)
 800de9e:	4604      	mov	r4, r0
 800dea0:	4649      	mov	r1, r9
 800dea2:	6818      	ldr	r0, [r3, #0]
 800dea4:	f7f7 fd66 	bl	8005974 <_ZNK8touchgfx5Texts7getTextEt>
 800dea8:	e9cd 6802 	strd	r6, r8, [sp, #8]
 800deac:	e9cd b000 	strd	fp, r0, [sp]
 800deb0:	4653      	mov	r3, sl
 800deb2:	e895 0006 	ldmia.w	r5, {r1, r2}
 800deb6:	4620      	mov	r0, r4
 800deb8:	f7f7 fd0e 	bl	80058d8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800debc:	b019      	add	sp, #100	; 0x64
 800debe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dec2:	f8da 0000 	ldr.w	r0, [sl]
 800dec6:	699d      	ldr	r5, [r3, #24]
 800dec8:	f7f7 fd54 	bl	8005974 <_ZNK8touchgfx5Texts7getTextEt>
 800decc:	4632      	mov	r2, r6
 800dece:	4601      	mov	r1, r0
 800ded0:	4638      	mov	r0, r7
 800ded2:	47a8      	blx	r5
 800ded4:	4605      	mov	r5, r0
 800ded6:	e77a      	b.n	800ddce <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xc6>
 800ded8:	200174a8 	.word	0x200174a8
 800dedc:	200174b4 	.word	0x200174b4

0800dee0 <_ZN8touchgfx21GraphWrapAndClearData5clearEv>:
 800dee0:	b510      	push	{r4, lr}
 800dee2:	4604      	mov	r4, r0
 800dee4:	f7fe fd44 	bl	800c970 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 800dee8:	4620      	mov	r0, r4
 800deea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800deee:	f7fe bb00 	b.w	800c4f2 <_ZN8touchgfx17AbstractDataGraph5clearEv>

0800def2 <_ZN8touchgfx21GraphWrapAndClearData8addValueEi>:
 800def2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800def4:	f9b0 511e 	ldrsh.w	r5, [r0, #286]	; 0x11e
 800def8:	f8d0 6144 	ldr.w	r6, [r0, #324]	; 0x144
 800defc:	1c6b      	adds	r3, r5, #1
 800defe:	f8a0 311e 	strh.w	r3, [r0, #286]	; 0x11e
 800df02:	6803      	ldr	r3, [r0, #0]
 800df04:	460f      	mov	r7, r1
 800df06:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 800df0a:	4629      	mov	r1, r5
 800df0c:	4604      	mov	r4, r0
 800df0e:	4798      	blx	r3
 800df10:	f846 7020 	str.w	r7, [r6, r0, lsl #2]
 800df14:	b915      	cbnz	r5, 800df1c <_ZN8touchgfx21GraphWrapAndClearData8addValueEi+0x2a>
 800df16:	4620      	mov	r0, r4
 800df18:	f7fe fd2a 	bl	800c970 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 800df1c:	4620      	mov	r0, r4
 800df1e:	4629      	mov	r1, r5
 800df20:	f7fe fcfe 	bl	800c920 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>
 800df24:	4628      	mov	r0, r5
 800df26:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800df28 <_ZN8touchgfx21GraphWrapAndClearData14beforeAddValueEv>:
 800df28:	f9b0 111e 	ldrsh.w	r1, [r0, #286]	; 0x11e
 800df2c:	f9b0 211c 	ldrsh.w	r2, [r0, #284]	; 0x11c
 800df30:	4291      	cmp	r1, r2
 800df32:	db03      	blt.n	800df3c <_ZN8touchgfx21GraphWrapAndClearData14beforeAddValueEv+0x14>
 800df34:	6803      	ldr	r3, [r0, #0]
 800df36:	f8d3 30fc 	ldr.w	r3, [r3, #252]	; 0xfc
 800df3a:	4718      	bx	r3
 800df3c:	4770      	bx	lr

0800df3e <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800df3e:	2000      	movs	r0, #0
 800df40:	4770      	bx	lr
	...

0800df44 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800df44:	4b07      	ldr	r3, [pc, #28]	; (800df64 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800df46:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800df48:	881b      	ldrh	r3, [r3, #0]
 800df4a:	4293      	cmp	r3, r2
 800df4c:	bf81      	itttt	hi
 800df4e:	4b06      	ldrhi	r3, [pc, #24]	; (800df68 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800df50:	681b      	ldrhi	r3, [r3, #0]
 800df52:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800df56:	7858      	ldrbhi	r0, [r3, #1]
 800df58:	bf8c      	ite	hi
 800df5a:	f000 0003 	andhi.w	r0, r0, #3
 800df5e:	2000      	movls	r0, #0
 800df60:	4770      	bx	lr
 800df62:	bf00      	nop
 800df64:	200174ac 	.word	0x200174ac
 800df68:	200174a8 	.word	0x200174a8

0800df6c <_ZN8touchgfx8TextAreaD1Ev>:
 800df6c:	4770      	bx	lr
	...

0800df70 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800df70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800df74:	4b10      	ldr	r3, [pc, #64]	; (800dfb8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800df76:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800df78:	881b      	ldrh	r3, [r3, #0]
 800df7a:	428b      	cmp	r3, r1
 800df7c:	4604      	mov	r4, r0
 800df7e:	d918      	bls.n	800dfb2 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800df80:	6803      	ldr	r3, [r0, #0]
 800df82:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 800df84:	4b0d      	ldr	r3, [pc, #52]	; (800dfbc <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800df86:	6818      	ldr	r0, [r3, #0]
 800df88:	f7f7 fcf4 	bl	8005974 <_ZNK8touchgfx5Texts7getTextEt>
 800df8c:	6823      	ldr	r3, [r4, #0]
 800df8e:	4606      	mov	r6, r0
 800df90:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800df92:	4620      	mov	r0, r4
 800df94:	4798      	blx	r3
 800df96:	6823      	ldr	r3, [r4, #0]
 800df98:	4607      	mov	r7, r0
 800df9a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800df9e:	4620      	mov	r0, r4
 800dfa0:	4798      	blx	r3
 800dfa2:	463a      	mov	r2, r7
 800dfa4:	4603      	mov	r3, r0
 800dfa6:	4631      	mov	r1, r6
 800dfa8:	4620      	mov	r0, r4
 800dfaa:	46ac      	mov	ip, r5
 800dfac:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800dfb0:	4760      	bx	ip
 800dfb2:	2000      	movs	r0, #0
 800dfb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dfb8:	200174ac 	.word	0x200174ac
 800dfbc:	200174b4 	.word	0x200174b4

0800dfc0 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800dfc0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800dfc4:	4b17      	ldr	r3, [pc, #92]	; (800e024 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800dfc6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800dfc8:	881b      	ldrh	r3, [r3, #0]
 800dfca:	428b      	cmp	r3, r1
 800dfcc:	4604      	mov	r4, r0
 800dfce:	d926      	bls.n	800e01e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800dfd0:	4b15      	ldr	r3, [pc, #84]	; (800e028 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800dfd2:	681b      	ldr	r3, [r3, #0]
 800dfd4:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800dfd8:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800dfdc:	4b13      	ldr	r3, [pc, #76]	; (800e02c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800dfde:	7855      	ldrb	r5, [r2, #1]
 800dfe0:	681b      	ldr	r3, [r3, #0]
 800dfe2:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800dfe6:	6833      	ldr	r3, [r6, #0]
 800dfe8:	69df      	ldr	r7, [r3, #28]
 800dfea:	4b11      	ldr	r3, [pc, #68]	; (800e030 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800dfec:	6818      	ldr	r0, [r3, #0]
 800dfee:	f7f7 fcc1 	bl	8005974 <_ZNK8touchgfx5Texts7getTextEt>
 800dff2:	6823      	ldr	r3, [r4, #0]
 800dff4:	4680      	mov	r8, r0
 800dff6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800dff8:	4620      	mov	r0, r4
 800dffa:	4798      	blx	r3
 800dffc:	6823      	ldr	r3, [r4, #0]
 800dffe:	4681      	mov	r9, r0
 800e000:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e004:	4620      	mov	r0, r4
 800e006:	4798      	blx	r3
 800e008:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800e00c:	9000      	str	r0, [sp, #0]
 800e00e:	464b      	mov	r3, r9
 800e010:	4642      	mov	r2, r8
 800e012:	4629      	mov	r1, r5
 800e014:	4630      	mov	r0, r6
 800e016:	47b8      	blx	r7
 800e018:	b003      	add	sp, #12
 800e01a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e01e:	2000      	movs	r0, #0
 800e020:	e7fa      	b.n	800e018 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800e022:	bf00      	nop
 800e024:	200174ac 	.word	0x200174ac
 800e028:	200174a8 	.word	0x200174a8
 800e02c:	200174b0 	.word	0x200174b0
 800e030:	200174b4 	.word	0x200174b4

0800e034 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800e034:	b40e      	push	{r1, r2, r3}
 800e036:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e03a:	4b2f      	ldr	r3, [pc, #188]	; (800e0f8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800e03c:	881a      	ldrh	r2, [r3, #0]
 800e03e:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800e040:	429a      	cmp	r2, r3
 800e042:	b09d      	sub	sp, #116	; 0x74
 800e044:	4604      	mov	r4, r0
 800e046:	d954      	bls.n	800e0f2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800e048:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 800e0fc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800e04c:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800e100 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800e050:	aa26      	add	r2, sp, #152	; 0x98
 800e052:	9202      	str	r2, [sp, #8]
 800e054:	f8d9 2000 	ldr.w	r2, [r9]
 800e058:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800e05c:	f8d8 3000 	ldr.w	r3, [r8]
 800e060:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800e064:	682b      	ldr	r3, [r5, #0]
 800e066:	4628      	mov	r0, r5
 800e068:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800e06a:	4798      	blx	r3
 800e06c:	b207      	sxth	r7, r0
 800e06e:	4606      	mov	r6, r0
 800e070:	a803      	add	r0, sp, #12
 800e072:	f004 ff08 	bl	8012e86 <_ZN8touchgfx12TextProviderC1Ev>
 800e076:	682b      	ldr	r3, [r5, #0]
 800e078:	4628      	mov	r0, r5
 800e07a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e07c:	4798      	blx	r3
 800e07e:	682b      	ldr	r3, [r5, #0]
 800e080:	4682      	mov	sl, r0
 800e082:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800e084:	4628      	mov	r0, r5
 800e086:	4798      	blx	r3
 800e088:	4653      	mov	r3, sl
 800e08a:	9000      	str	r0, [sp, #0]
 800e08c:	9a02      	ldr	r2, [sp, #8]
 800e08e:	9925      	ldr	r1, [sp, #148]	; 0x94
 800e090:	a803      	add	r0, sp, #12
 800e092:	f004 ff53 	bl	8012f3c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800e096:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800e098:	f8d9 3000 	ldr.w	r3, [r9]
 800e09c:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 800e0a0:	8925      	ldrh	r5, [r4, #8]
 800e0a2:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800e0a6:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800e0aa:	eba5 050c 	sub.w	r5, r5, ip
 800e0ae:	784a      	ldrb	r2, [r1, #1]
 800e0b0:	f8d8 3000 	ldr.w	r3, [r8]
 800e0b4:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800e0b8:	b22d      	sxth	r5, r5
 800e0ba:	9500      	str	r5, [sp, #0]
 800e0bc:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800e0c0:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800e0c4:	a803      	add	r0, sp, #12
 800e0c6:	f002 fd4d 	bl	8010b64 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800e0ca:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800e0ce:	18b9      	adds	r1, r7, r2
 800e0d0:	2900      	cmp	r1, #0
 800e0d2:	b203      	sxth	r3, r0
 800e0d4:	dd0b      	ble.n	800e0ee <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800e0d6:	3b01      	subs	r3, #1
 800e0d8:	fb13 f302 	smulbb	r3, r3, r2
 800e0dc:	fb16 3300 	smlabb	r3, r6, r0, r3
 800e0e0:	b21f      	sxth	r7, r3
 800e0e2:	4638      	mov	r0, r7
 800e0e4:	b01d      	add	sp, #116	; 0x74
 800e0e6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e0ea:	b003      	add	sp, #12
 800e0ec:	4770      	bx	lr
 800e0ee:	2b00      	cmp	r3, #0
 800e0f0:	dcf7      	bgt.n	800e0e2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800e0f2:	2700      	movs	r7, #0
 800e0f4:	e7f5      	b.n	800e0e2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800e0f6:	bf00      	nop
 800e0f8:	200174ac 	.word	0x200174ac
 800e0fc:	200174a8 	.word	0x200174a8
 800e100:	200174b0 	.word	0x200174b0

0800e104 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800e104:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e108:	4bbb      	ldr	r3, [pc, #748]	; (800e3f8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f4>)
 800e10a:	460c      	mov	r4, r1
 800e10c:	881b      	ldrh	r3, [r3, #0]
 800e10e:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 800e110:	428b      	cmp	r3, r1
 800e112:	b0a9      	sub	sp, #164	; 0xa4
 800e114:	4681      	mov	r9, r0
 800e116:	d809      	bhi.n	800e12c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 800e118:	2300      	movs	r3, #0
 800e11a:	f04f 32ff 	mov.w	r2, #4294967295
 800e11e:	e9c0 3200 	strd	r3, r2, [r0]
 800e122:	6083      	str	r3, [r0, #8]
 800e124:	4648      	mov	r0, r9
 800e126:	b029      	add	sp, #164	; 0xa4
 800e128:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e12c:	f8df b2d0 	ldr.w	fp, [pc, #720]	; 800e400 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 800e130:	f8df 82d0 	ldr.w	r8, [pc, #720]	; 800e404 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>
 800e134:	f8db 3000 	ldr.w	r3, [fp]
 800e138:	f8d8 0000 	ldr.w	r0, [r8]
 800e13c:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800e140:	4bae      	ldr	r3, [pc, #696]	; (800e3fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 800e142:	681b      	ldr	r3, [r3, #0]
 800e144:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800e148:	f7f7 fc14 	bl	8005974 <_ZNK8touchgfx5Texts7getTextEt>
 800e14c:	682b      	ldr	r3, [r5, #0]
 800e14e:	4607      	mov	r7, r0
 800e150:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800e152:	4628      	mov	r0, r5
 800e154:	4798      	blx	r3
 800e156:	8ea6      	ldrh	r6, [r4, #52]	; 0x34
 800e158:	f8cd 800c 	str.w	r8, [sp, #12]
 800e15c:	4430      	add	r0, r6
 800e15e:	f894 6039 	ldrb.w	r6, [r4, #57]	; 0x39
 800e162:	b283      	uxth	r3, r0
 800e164:	f10d 0a3c 	add.w	sl, sp, #60	; 0x3c
 800e168:	9302      	str	r3, [sp, #8]
 800e16a:	4650      	mov	r0, sl
 800e16c:	2e00      	cmp	r6, #0
 800e16e:	f040 8091 	bne.w	800e294 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 800e172:	f004 fe88 	bl	8012e86 <_ZN8touchgfx12TextProviderC1Ev>
 800e176:	682b      	ldr	r3, [r5, #0]
 800e178:	4628      	mov	r0, r5
 800e17a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e17c:	4798      	blx	r3
 800e17e:	682b      	ldr	r3, [r5, #0]
 800e180:	9005      	str	r0, [sp, #20]
 800e182:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800e184:	4628      	mov	r0, r5
 800e186:	4798      	blx	r3
 800e188:	6823      	ldr	r3, [r4, #0]
 800e18a:	4680      	mov	r8, r0
 800e18c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e18e:	4620      	mov	r0, r4
 800e190:	4798      	blx	r3
 800e192:	6822      	ldr	r2, [r4, #0]
 800e194:	9004      	str	r0, [sp, #16]
 800e196:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800e19a:	4620      	mov	r0, r4
 800e19c:	4790      	blx	r2
 800e19e:	9905      	ldr	r1, [sp, #20]
 800e1a0:	9b04      	ldr	r3, [sp, #16]
 800e1a2:	9001      	str	r0, [sp, #4]
 800e1a4:	9300      	str	r3, [sp, #0]
 800e1a6:	460a      	mov	r2, r1
 800e1a8:	4643      	mov	r3, r8
 800e1aa:	4639      	mov	r1, r7
 800e1ac:	4650      	mov	r0, sl
 800e1ae:	f004 feda 	bl	8012f66 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800e1b2:	4637      	mov	r7, r6
 800e1b4:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800e1b6:	f8db 3000 	ldr.w	r3, [fp]
 800e1ba:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800e1be:	4629      	mov	r1, r5
 800e1c0:	785b      	ldrb	r3, [r3, #1]
 800e1c2:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800e1c6:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800e1ca:	4650      	mov	r0, sl
 800e1cc:	f002 fa1c 	bl	8010608 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800e1d0:	4287      	cmp	r7, r0
 800e1d2:	bfb8      	it	lt
 800e1d4:	b207      	sxthlt	r7, r0
 800e1d6:	3601      	adds	r6, #1
 800e1d8:	4650      	mov	r0, sl
 800e1da:	b2b6      	uxth	r6, r6
 800e1dc:	f004 fe7a 	bl	8012ed4 <_ZN8touchgfx12TextProvider11endOfStringEv>
 800e1e0:	2800      	cmp	r0, #0
 800e1e2:	d0e7      	beq.n	800e1b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xb0>
 800e1e4:	9b02      	ldr	r3, [sp, #8]
 800e1e6:	f8b4 8034 	ldrh.w	r8, [r4, #52]	; 0x34
 800e1ea:	fb13 f606 	smulbb	r6, r3, r6
 800e1ee:	eba6 0608 	sub.w	r6, r6, r8
 800e1f2:	b2b6      	uxth	r6, r6
 800e1f4:	fa0f f886 	sxth.w	r8, r6
 800e1f8:	f1b8 0f00 	cmp.w	r8, #0
 800e1fc:	dd06      	ble.n	800e20c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x108>
 800e1fe:	682b      	ldr	r3, [r5, #0]
 800e200:	4628      	mov	r0, r5
 800e202:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800e204:	4798      	blx	r3
 800e206:	4430      	add	r0, r6
 800e208:	fa0f f880 	sxth.w	r8, r0
 800e20c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e210:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800e214:	6823      	ldr	r3, [r4, #0]
 800e216:	bf08      	it	eq
 800e218:	f9b4 6008 	ldrsheq.w	r6, [r4, #8]
 800e21c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800e21e:	bf18      	it	ne
 800e220:	f9b4 600a 	ldrshne.w	r6, [r4, #10]
 800e224:	4620      	mov	r0, r4
 800e226:	4798      	blx	r3
 800e228:	2801      	cmp	r0, #1
 800e22a:	b2ba      	uxth	r2, r7
 800e22c:	f000 80d1 	beq.w	800e3d2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ce>
 800e230:	2802      	cmp	r0, #2
 800e232:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800e236:	f000 80d2 	beq.w	800e3de <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2da>
 800e23a:	b21e      	sxth	r6, r3
 800e23c:	7a29      	ldrb	r1, [r5, #8]
 800e23e:	7a6d      	ldrb	r5, [r5, #9]
 800e240:	1a76      	subs	r6, r6, r1
 800e242:	4429      	add	r1, r5
 800e244:	440a      	add	r2, r1
 800e246:	f894 1038 	ldrb.w	r1, [r4, #56]	; 0x38
 800e24a:	b2b3      	uxth	r3, r6
 800e24c:	b292      	uxth	r2, r2
 800e24e:	2902      	cmp	r1, #2
 800e250:	b21f      	sxth	r7, r3
 800e252:	b216      	sxth	r6, r2
 800e254:	f000 80c6 	beq.w	800e3e4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2e0>
 800e258:	2903      	cmp	r1, #3
 800e25a:	f000 80d5 	beq.w	800e408 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>
 800e25e:	2901      	cmp	r1, #1
 800e260:	f040 80db 	bne.w	800e41a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x316>
 800e264:	8923      	ldrh	r3, [r4, #8]
 800e266:	4632      	mov	r2, r6
 800e268:	eba3 0308 	sub.w	r3, r3, r8
 800e26c:	4646      	mov	r6, r8
 800e26e:	463d      	mov	r5, r7
 800e270:	4690      	mov	r8, r2
 800e272:	b21f      	sxth	r7, r3
 800e274:	9b03      	ldr	r3, [sp, #12]
 800e276:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800e278:	6818      	ldr	r0, [r3, #0]
 800e27a:	f7f7 fb7b 	bl	8005974 <_ZNK8touchgfx5Texts7getTextEt>
 800e27e:	f8a9 7000 	strh.w	r7, [r9]
 800e282:	f8a9 5002 	strh.w	r5, [r9, #2]
 800e286:	f8a9 6004 	strh.w	r6, [r9, #4]
 800e28a:	f8a9 8006 	strh.w	r8, [r9, #6]
 800e28e:	f8c9 0008 	str.w	r0, [r9, #8]
 800e292:	e747      	b.n	800e124 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 800e294:	f004 fdf7 	bl	8012e86 <_ZN8touchgfx12TextProviderC1Ev>
 800e298:	682b      	ldr	r3, [r5, #0]
 800e29a:	4628      	mov	r0, r5
 800e29c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e29e:	4798      	blx	r3
 800e2a0:	682b      	ldr	r3, [r5, #0]
 800e2a2:	4606      	mov	r6, r0
 800e2a4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800e2a6:	4628      	mov	r0, r5
 800e2a8:	4798      	blx	r3
 800e2aa:	6823      	ldr	r3, [r4, #0]
 800e2ac:	4680      	mov	r8, r0
 800e2ae:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e2b0:	4620      	mov	r0, r4
 800e2b2:	4798      	blx	r3
 800e2b4:	6822      	ldr	r2, [r4, #0]
 800e2b6:	9004      	str	r0, [sp, #16]
 800e2b8:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800e2bc:	4620      	mov	r0, r4
 800e2be:	4790      	blx	r2
 800e2c0:	9b04      	ldr	r3, [sp, #16]
 800e2c2:	9001      	str	r0, [sp, #4]
 800e2c4:	4632      	mov	r2, r6
 800e2c6:	9300      	str	r3, [sp, #0]
 800e2c8:	4639      	mov	r1, r7
 800e2ca:	4643      	mov	r3, r8
 800e2cc:	4650      	mov	r0, sl
 800e2ce:	f004 fe4a 	bl	8012f66 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800e2d2:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e2d6:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 800e2da:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800e2dc:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 800e2e0:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800e2e4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800e2e8:	bf0a      	itet	eq
 800e2ea:	4642      	moveq	r2, r8
 800e2ec:	461a      	movne	r2, r3
 800e2ee:	4698      	moveq	r8, r3
 800e2f0:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800e2f4:	1ad2      	subs	r2, r2, r3
 800e2f6:	f8db 3000 	ldr.w	r3, [fp]
 800e2fa:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800e2fe:	7859      	ldrb	r1, [r3, #1]
 800e300:	f8cd a020 	str.w	sl, [sp, #32]
 800e304:	2300      	movs	r3, #0
 800e306:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800e30a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800e30e:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 800e312:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800e316:	950a      	str	r5, [sp, #40]	; 0x28
 800e318:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800e31c:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800e320:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800e324:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800e328:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800e32c:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800e330:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800e334:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 800e338:	b350      	cbz	r0, 800e390 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800e33a:	682b      	ldr	r3, [r5, #0]
 800e33c:	4628      	mov	r0, r5
 800e33e:	695b      	ldr	r3, [r3, #20]
 800e340:	4798      	blx	r3
 800e342:	4607      	mov	r7, r0
 800e344:	b320      	cbz	r0, 800e390 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800e346:	980a      	ldr	r0, [sp, #40]	; 0x28
 800e348:	6803      	ldr	r3, [r0, #0]
 800e34a:	4639      	mov	r1, r7
 800e34c:	68db      	ldr	r3, [r3, #12]
 800e34e:	4798      	blx	r3
 800e350:	4606      	mov	r6, r0
 800e352:	b1e8      	cbz	r0, 800e390 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800e354:	7b43      	ldrb	r3, [r0, #13]
 800e356:	7a82      	ldrb	r2, [r0, #10]
 800e358:	005b      	lsls	r3, r3, #1
 800e35a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800e35e:	4313      	orrs	r3, r2
 800e360:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800e364:	f89d 3025 	ldrb.w	r3, [sp, #37]	; 0x25
 800e368:	2b04      	cmp	r3, #4
 800e36a:	d111      	bne.n	800e390 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800e36c:	980a      	ldr	r0, [sp, #40]	; 0x28
 800e36e:	6803      	ldr	r3, [r0, #0]
 800e370:	4632      	mov	r2, r6
 800e372:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e374:	4639      	mov	r1, r7
 800e376:	4798      	blx	r3
 800e378:	7b73      	ldrb	r3, [r6, #13]
 800e37a:	005b      	lsls	r3, r3, #1
 800e37c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e380:	7ab3      	ldrb	r3, [r6, #10]
 800e382:	4313      	orrs	r3, r2
 800e384:	4418      	add	r0, r3
 800e386:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800e38a:	4418      	add	r0, r3
 800e38c:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 800e390:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 800e394:	2600      	movs	r6, #0
 800e396:	ea4f 0b4a 	mov.w	fp, sl, lsl #1
 800e39a:	4637      	mov	r7, r6
 800e39c:	45c3      	cmp	fp, r8
 800e39e:	bfd4      	ite	le
 800e3a0:	2100      	movle	r1, #0
 800e3a2:	2101      	movgt	r1, #1
 800e3a4:	a807      	add	r0, sp, #28
 800e3a6:	f002 fb0e 	bl	80109c6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800e3aa:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 800e3ae:	429f      	cmp	r7, r3
 800e3b0:	bfb8      	it	lt
 800e3b2:	b21f      	sxthlt	r7, r3
 800e3b4:	9b02      	ldr	r3, [sp, #8]
 800e3b6:	eba8 0803 	sub.w	r8, r8, r3
 800e3ba:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800e3be:	3601      	adds	r6, #1
 800e3c0:	b2b6      	uxth	r6, r6
 800e3c2:	fa0f f888 	sxth.w	r8, r8
 800e3c6:	2b00      	cmp	r3, #0
 800e3c8:	f43f af0c 	beq.w	800e1e4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xe0>
 800e3cc:	45c2      	cmp	sl, r8
 800e3ce:	dbe5      	blt.n	800e39c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x298>
 800e3d0:	e708      	b.n	800e1e4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xe0>
 800e3d2:	1bf6      	subs	r6, r6, r7
 800e3d4:	2702      	movs	r7, #2
 800e3d6:	fb96 f6f7 	sdiv	r6, r6, r7
 800e3da:	b236      	sxth	r6, r6
 800e3dc:	e72e      	b.n	800e23c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x138>
 800e3de:	4413      	add	r3, r2
 800e3e0:	1af6      	subs	r6, r6, r3
 800e3e2:	e7fa      	b.n	800e3da <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2d6>
 800e3e4:	8925      	ldrh	r5, [r4, #8]
 800e3e6:	1aad      	subs	r5, r5, r2
 800e3e8:	1aed      	subs	r5, r5, r3
 800e3ea:	b22f      	sxth	r7, r5
 800e3ec:	8965      	ldrh	r5, [r4, #10]
 800e3ee:	eba5 0508 	sub.w	r5, r5, r8
 800e3f2:	b22d      	sxth	r5, r5
 800e3f4:	e73e      	b.n	800e274 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800e3f6:	bf00      	nop
 800e3f8:	200174ac 	.word	0x200174ac
 800e3fc:	200174b0 	.word	0x200174b0
 800e400:	200174a8 	.word	0x200174a8
 800e404:	200174b4 	.word	0x200174b4
 800e408:	8965      	ldrh	r5, [r4, #10]
 800e40a:	1aad      	subs	r5, r5, r2
 800e40c:	1aed      	subs	r5, r5, r3
 800e40e:	4633      	mov	r3, r6
 800e410:	b22d      	sxth	r5, r5
 800e412:	4646      	mov	r6, r8
 800e414:	2700      	movs	r7, #0
 800e416:	4698      	mov	r8, r3
 800e418:	e72c      	b.n	800e274 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800e41a:	2500      	movs	r5, #0
 800e41c:	e72a      	b.n	800e274 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800e41e:	bf00      	nop

0800e420 <_ZN8touchgfx8TextAreaD0Ev>:
 800e420:	b510      	push	{r4, lr}
 800e422:	2148      	movs	r1, #72	; 0x48
 800e424:	4604      	mov	r4, r0
 800e426:	f012 fb82 	bl	8020b2e <_ZdlPvj>
 800e42a:	4620      	mov	r0, r4
 800e42c:	bd10      	pop	{r4, pc}
	...

0800e430 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 800e430:	b513      	push	{r0, r1, r4, lr}
 800e432:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800e436:	4604      	mov	r4, r0
 800e438:	b1fb      	cbz	r3, 800e47a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e43a:	4b16      	ldr	r3, [pc, #88]	; (800e494 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 800e43c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800e43e:	881b      	ldrh	r3, [r3, #0]
 800e440:	428b      	cmp	r3, r1
 800e442:	d91a      	bls.n	800e47a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e444:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e448:	2b00      	cmp	r3, #0
 800e44a:	dd16      	ble.n	800e47a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e44c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e450:	2b00      	cmp	r3, #0
 800e452:	dd12      	ble.n	800e47a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e454:	4b10      	ldr	r3, [pc, #64]	; (800e498 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 800e456:	6818      	ldr	r0, [r3, #0]
 800e458:	f7f7 fa8c 	bl	8005974 <_ZNK8touchgfx5Texts7getTextEt>
 800e45c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800e460:	6822      	ldr	r2, [r4, #0]
 800e462:	2b00      	cmp	r3, #0
 800e464:	db06      	blt.n	800e474 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800e466:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800e46a:	2b00      	cmp	r3, #0
 800e46c:	db02      	blt.n	800e474 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800e46e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800e470:	4298      	cmp	r0, r3
 800e472:	d004      	beq.n	800e47e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 800e474:	6953      	ldr	r3, [r2, #20]
 800e476:	4620      	mov	r0, r4
 800e478:	4798      	blx	r3
 800e47a:	b002      	add	sp, #8
 800e47c:	bd10      	pop	{r4, pc}
 800e47e:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 800e482:	c903      	ldmia	r1, {r0, r1}
 800e484:	466b      	mov	r3, sp
 800e486:	e883 0003 	stmia.w	r3, {r0, r1}
 800e48a:	6912      	ldr	r2, [r2, #16]
 800e48c:	4619      	mov	r1, r3
 800e48e:	4620      	mov	r0, r4
 800e490:	4790      	blx	r2
 800e492:	e7f2      	b.n	800e47a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e494:	200174ac 	.word	0x200174ac
 800e498:	200174b4 	.word	0x200174b4

0800e49c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800e49c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e4a0:	4b44      	ldr	r3, [pc, #272]	; (800e5b4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 800e4a2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800e4a4:	881b      	ldrh	r3, [r3, #0]
 800e4a6:	4293      	cmp	r3, r2
 800e4a8:	b08e      	sub	sp, #56	; 0x38
 800e4aa:	4604      	mov	r4, r0
 800e4ac:	d97e      	bls.n	800e5ac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e4ae:	6808      	ldr	r0, [r1, #0]
 800e4b0:	4d41      	ldr	r5, [pc, #260]	; (800e5b8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 800e4b2:	6849      	ldr	r1, [r1, #4]
 800e4b4:	ab05      	add	r3, sp, #20
 800e4b6:	c303      	stmia	r3!, {r0, r1}
 800e4b8:	4611      	mov	r1, r2
 800e4ba:	6828      	ldr	r0, [r5, #0]
 800e4bc:	f7f7 fa5a 	bl	8005974 <_ZNK8touchgfx5Texts7getTextEt>
 800e4c0:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800e4c4:	2b00      	cmp	r3, #0
 800e4c6:	db11      	blt.n	800e4ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e4c8:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800e4cc:	2b00      	cmp	r3, #0
 800e4ce:	db0d      	blt.n	800e4ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e4d0:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800e4d2:	4298      	cmp	r0, r3
 800e4d4:	d10a      	bne.n	800e4ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e4d6:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800e4da:	e892 0003 	ldmia.w	r2, {r0, r1}
 800e4de:	ab09      	add	r3, sp, #36	; 0x24
 800e4e0:	e883 0003 	stmia.w	r3, {r0, r1}
 800e4e4:	4619      	mov	r1, r3
 800e4e6:	a805      	add	r0, sp, #20
 800e4e8:	f7fc fe98 	bl	800b21c <_ZN8touchgfx4RectaNERKS0_>
 800e4ec:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800e4f0:	2b00      	cmp	r3, #0
 800e4f2:	dd5b      	ble.n	800e5ac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e4f4:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800e4f8:	2b00      	cmp	r3, #0
 800e4fa:	dd57      	ble.n	800e5ac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e4fc:	4f2f      	ldr	r7, [pc, #188]	; (800e5bc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 800e4fe:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800e500:	683b      	ldr	r3, [r7, #0]
 800e502:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800e506:	4b2e      	ldr	r3, [pc, #184]	; (800e5c0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 800e508:	681b      	ldr	r3, [r3, #0]
 800e50a:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800e50e:	2e00      	cmp	r6, #0
 800e510:	d04c      	beq.n	800e5ac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e512:	6823      	ldr	r3, [r4, #0]
 800e514:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 800e518:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800e51a:	4620      	mov	r0, r4
 800e51c:	4798      	blx	r3
 800e51e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800e520:	683b      	ldr	r3, [r7, #0]
 800e522:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 800e526:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 800e52a:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 800e52e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e530:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800e534:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 800e538:	785b      	ldrb	r3, [r3, #1]
 800e53a:	9609      	str	r6, [sp, #36]	; 0x24
 800e53c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800e540:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800e544:	4b1f      	ldr	r3, [pc, #124]	; (800e5c4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 800e546:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800e54a:	681b      	ldr	r3, [r3, #0]
 800e54c:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 800e550:	910b      	str	r1, [sp, #44]	; 0x2c
 800e552:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 800e556:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 800e55a:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 800e55e:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 800e562:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e566:	b10a      	cbz	r2, 800e56c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 800e568:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 800e56a:	b906      	cbnz	r6, 800e56e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 800e56c:	689e      	ldr	r6, [r3, #8]
 800e56e:	af07      	add	r7, sp, #28
 800e570:	4621      	mov	r1, r4
 800e572:	4638      	mov	r0, r7
 800e574:	f003 ffd2 	bl	801251c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e578:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800e57a:	6828      	ldr	r0, [r5, #0]
 800e57c:	f7f7 f9fa 	bl	8005974 <_ZNK8touchgfx5Texts7getTextEt>
 800e580:	6823      	ldr	r3, [r4, #0]
 800e582:	4605      	mov	r5, r0
 800e584:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e586:	4620      	mov	r0, r4
 800e588:	4798      	blx	r3
 800e58a:	6823      	ldr	r3, [r4, #0]
 800e58c:	4680      	mov	r8, r0
 800e58e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e592:	4620      	mov	r0, r4
 800e594:	4798      	blx	r3
 800e596:	e9cd 8002 	strd	r8, r0, [sp, #8]
 800e59a:	ab09      	add	r3, sp, #36	; 0x24
 800e59c:	9300      	str	r3, [sp, #0]
 800e59e:	9501      	str	r5, [sp, #4]
 800e5a0:	ab05      	add	r3, sp, #20
 800e5a2:	e897 0006 	ldmia.w	r7, {r1, r2}
 800e5a6:	4630      	mov	r0, r6
 800e5a8:	f7f7 f996 	bl	80058d8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800e5ac:	b00e      	add	sp, #56	; 0x38
 800e5ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e5b2:	bf00      	nop
 800e5b4:	200174ac 	.word	0x200174ac
 800e5b8:	200174b4 	.word	0x200174b4
 800e5bc:	200174a8 	.word	0x200174a8
 800e5c0:	200174b0 	.word	0x200174b0
 800e5c4:	20017450 	.word	0x20017450

0800e5c8 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800e5c8:	b570      	push	{r4, r5, r6, lr}
 800e5ca:	6803      	ldr	r3, [r0, #0]
 800e5cc:	4604      	mov	r4, r0
 800e5ce:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e5d0:	4615      	mov	r5, r2
 800e5d2:	4798      	blx	r3
 800e5d4:	6823      	ldr	r3, [r4, #0]
 800e5d6:	4629      	mov	r1, r5
 800e5d8:	4620      	mov	r0, r4
 800e5da:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e5dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e5e0:	4718      	bx	r3
	...

0800e5e4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800e5e4:	b538      	push	{r3, r4, r5, lr}
 800e5e6:	4b0e      	ldr	r3, [pc, #56]	; (800e620 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800e5e8:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800e5ea:	881b      	ldrh	r3, [r3, #0]
 800e5ec:	429a      	cmp	r2, r3
 800e5ee:	4604      	mov	r4, r0
 800e5f0:	d214      	bcs.n	800e61c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800e5f2:	6803      	ldr	r3, [r0, #0]
 800e5f4:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800e5f6:	4798      	blx	r3
 800e5f8:	6823      	ldr	r3, [r4, #0]
 800e5fa:	4605      	mov	r5, r0
 800e5fc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800e5fe:	4620      	mov	r0, r4
 800e600:	4798      	blx	r3
 800e602:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e606:	b22d      	sxth	r5, r5
 800e608:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800e60c:	4601      	mov	r1, r0
 800e60e:	bf06      	itte	eq
 800e610:	4602      	moveq	r2, r0
 800e612:	4629      	moveq	r1, r5
 800e614:	462a      	movne	r2, r5
 800e616:	4620      	mov	r0, r4
 800e618:	f7ff ffd6 	bl	800e5c8 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800e61c:	bd38      	pop	{r3, r4, r5, pc}
 800e61e:	bf00      	nop
 800e620:	200174ac 	.word	0x200174ac

0800e624 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800e624:	b530      	push	{r4, r5, lr}
 800e626:	888b      	ldrh	r3, [r1, #4]
 800e628:	8583      	strh	r3, [r0, #44]	; 0x2c
 800e62a:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e62e:	b085      	sub	sp, #20
 800e630:	4604      	mov	r4, r0
 800e632:	b923      	cbnz	r3, 800e63e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800e634:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e638:	b90b      	cbnz	r3, 800e63e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800e63a:	f7ff ffd3 	bl	800e5e4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800e63e:	6823      	ldr	r3, [r4, #0]
 800e640:	466d      	mov	r5, sp
 800e642:	4621      	mov	r1, r4
 800e644:	4628      	mov	r0, r5
 800e646:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800e64a:	4798      	blx	r3
 800e64c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800e650:	343c      	adds	r4, #60	; 0x3c
 800e652:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800e656:	b005      	add	sp, #20
 800e658:	bd30      	pop	{r4, r5, pc}

0800e65a <_ZNK8touchgfx3Box12getSolidRectEv>:
 800e65a:	2300      	movs	r3, #0
 800e65c:	8083      	strh	r3, [r0, #4]
 800e65e:	80c3      	strh	r3, [r0, #6]
 800e660:	8003      	strh	r3, [r0, #0]
 800e662:	8043      	strh	r3, [r0, #2]
 800e664:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800e668:	2bff      	cmp	r3, #255	; 0xff
 800e66a:	bf01      	itttt	eq
 800e66c:	890b      	ldrheq	r3, [r1, #8]
 800e66e:	8083      	strheq	r3, [r0, #4]
 800e670:	894b      	ldrheq	r3, [r1, #10]
 800e672:	80c3      	strheq	r3, [r0, #6]
 800e674:	4770      	bx	lr
	...

0800e678 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800e678:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e67a:	4604      	mov	r4, r0
 800e67c:	6808      	ldr	r0, [r1, #0]
 800e67e:	6849      	ldr	r1, [r1, #4]
 800e680:	466b      	mov	r3, sp
 800e682:	c303      	stmia	r3!, {r0, r1}
 800e684:	6823      	ldr	r3, [r4, #0]
 800e686:	4669      	mov	r1, sp
 800e688:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e68a:	4620      	mov	r0, r4
 800e68c:	4798      	blx	r3
 800e68e:	4b08      	ldr	r3, [pc, #32]	; (800e6b0 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800e690:	681b      	ldr	r3, [r3, #0]
 800e692:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e696:	b10a      	cbz	r2, 800e69c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800e698:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800e69a:	b900      	cbnz	r0, 800e69e <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800e69c:	6898      	ldr	r0, [r3, #8]
 800e69e:	6803      	ldr	r3, [r0, #0]
 800e6a0:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800e6a2:	6a1d      	ldr	r5, [r3, #32]
 800e6a4:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800e6a8:	4669      	mov	r1, sp
 800e6aa:	47a8      	blx	r5
 800e6ac:	b003      	add	sp, #12
 800e6ae:	bd30      	pop	{r4, r5, pc}
 800e6b0:	20017450 	.word	0x20017450

0800e6b4 <_ZN8touchgfx3BoxD1Ev>:
 800e6b4:	4770      	bx	lr

0800e6b6 <_ZN8touchgfx3BoxD0Ev>:
 800e6b6:	b510      	push	{r4, lr}
 800e6b8:	212c      	movs	r1, #44	; 0x2c
 800e6ba:	4604      	mov	r4, r0
 800e6bc:	f012 fa37 	bl	8020b2e <_ZdlPvj>
 800e6c0:	4620      	mov	r0, r4
 800e6c2:	bd10      	pop	{r4, pc}

0800e6c4 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800e6c4:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 800e6c8:	b12a      	cbz	r2, 800e6d6 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800e6ca:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800e6ce:	b112      	cbz	r2, 800e6d6 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800e6d0:	6803      	ldr	r3, [r0, #0]
 800e6d2:	695b      	ldr	r3, [r3, #20]
 800e6d4:	4718      	bx	r3
 800e6d6:	4770      	bx	lr

0800e6d8 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800e6d8:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800e6dc:	4770      	bx	lr

0800e6de <_ZN8touchgfx6ButtonD1Ev>:
 800e6de:	4770      	bx	lr

0800e6e0 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800e6e0:	b570      	push	{r4, r5, r6, lr}
 800e6e2:	880b      	ldrh	r3, [r1, #0]
 800e6e4:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800e6e6:	4605      	mov	r5, r0
 800e6e8:	8813      	ldrh	r3, [r2, #0]
 800e6ea:	f825 3f30 	strh.w	r3, [r5, #48]!
 800e6ee:	4604      	mov	r4, r0
 800e6f0:	4628      	mov	r0, r5
 800e6f2:	f006 f911 	bl	8014918 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e6f6:	4606      	mov	r6, r0
 800e6f8:	4628      	mov	r0, r5
 800e6fa:	f006 f941 	bl	8014980 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e6fe:	6823      	ldr	r3, [r4, #0]
 800e700:	4605      	mov	r5, r0
 800e702:	4631      	mov	r1, r6
 800e704:	4620      	mov	r0, r4
 800e706:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e708:	4798      	blx	r3
 800e70a:	6823      	ldr	r3, [r4, #0]
 800e70c:	4629      	mov	r1, r5
 800e70e:	4620      	mov	r0, r4
 800e710:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e712:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e716:	4718      	bx	r3

0800e718 <_ZN8touchgfx6ButtonD0Ev>:
 800e718:	b510      	push	{r4, lr}
 800e71a:	2134      	movs	r1, #52	; 0x34
 800e71c:	4604      	mov	r4, r0
 800e71e:	f012 fa06 	bl	8020b2e <_ZdlPvj>
 800e722:	4620      	mov	r0, r4
 800e724:	bd10      	pop	{r4, pc}

0800e726 <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800e726:	b510      	push	{r4, lr}
 800e728:	4604      	mov	r4, r0
 800e72a:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800e72c:	b150      	cbz	r0, 800e744 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800e72e:	6803      	ldr	r3, [r0, #0]
 800e730:	68db      	ldr	r3, [r3, #12]
 800e732:	4798      	blx	r3
 800e734:	b130      	cbz	r0, 800e744 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800e736:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800e738:	6803      	ldr	r3, [r0, #0]
 800e73a:	4621      	mov	r1, r4
 800e73c:	689b      	ldr	r3, [r3, #8]
 800e73e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e742:	4718      	bx	r3
 800e744:	bd10      	pop	{r4, pc}

0800e746 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800e746:	b510      	push	{r4, lr}
 800e748:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800e74c:	2bff      	cmp	r3, #255	; 0xff
 800e74e:	4604      	mov	r4, r0
 800e750:	d006      	beq.n	800e760 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800e752:	2300      	movs	r3, #0
 800e754:	8003      	strh	r3, [r0, #0]
 800e756:	8043      	strh	r3, [r0, #2]
 800e758:	8083      	strh	r3, [r0, #4]
 800e75a:	80c3      	strh	r3, [r0, #6]
 800e75c:	4620      	mov	r0, r4
 800e75e:	bd10      	pop	{r4, pc}
 800e760:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800e764:	b11b      	cbz	r3, 800e76e <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800e766:	3130      	adds	r1, #48	; 0x30
 800e768:	f006 f93e 	bl	80149e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800e76c:	e7f6      	b.n	800e75c <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800e76e:	312e      	adds	r1, #46	; 0x2e
 800e770:	e7fa      	b.n	800e768 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

0800e774 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800e774:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e778:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800e77c:	b08a      	sub	sp, #40	; 0x28
 800e77e:	4604      	mov	r4, r0
 800e780:	4688      	mov	r8, r1
 800e782:	2b00      	cmp	r3, #0
 800e784:	d066      	beq.n	800e854 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800e786:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800e788:	f8ad 3014 	strh.w	r3, [sp, #20]
 800e78c:	a805      	add	r0, sp, #20
 800e78e:	f006 f8c3 	bl	8014918 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e792:	4607      	mov	r7, r0
 800e794:	a805      	add	r0, sp, #20
 800e796:	f006 f8f3 	bl	8014980 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e79a:	f9b8 6000 	ldrsh.w	r6, [r8]
 800e79e:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 800e7a2:	4432      	add	r2, r6
 800e7a4:	b292      	uxth	r2, r2
 800e7a6:	2300      	movs	r3, #0
 800e7a8:	fa0f fc82 	sxth.w	ip, r2
 800e7ac:	459c      	cmp	ip, r3
 800e7ae:	9306      	str	r3, [sp, #24]
 800e7b0:	dd52      	ble.n	800e858 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e7b2:	42b7      	cmp	r7, r6
 800e7b4:	dd50      	ble.n	800e858 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e7b6:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 800e7ba:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800e7be:	442b      	add	r3, r5
 800e7c0:	b29b      	uxth	r3, r3
 800e7c2:	b219      	sxth	r1, r3
 800e7c4:	2900      	cmp	r1, #0
 800e7c6:	dd47      	ble.n	800e858 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e7c8:	42a8      	cmp	r0, r5
 800e7ca:	dd45      	ble.n	800e858 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e7cc:	4567      	cmp	r7, ip
 800e7ce:	bfb8      	it	lt
 800e7d0:	b2ba      	uxthlt	r2, r7
 800e7d2:	4288      	cmp	r0, r1
 800e7d4:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800e7d8:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800e7dc:	bfb8      	it	lt
 800e7de:	b283      	uxthlt	r3, r0
 800e7e0:	1b92      	subs	r2, r2, r6
 800e7e2:	1b5b      	subs	r3, r3, r5
 800e7e4:	f8ad 201c 	strh.w	r2, [sp, #28]
 800e7e8:	f8ad 301e 	strh.w	r3, [sp, #30]
 800e7ec:	f8ad 6018 	strh.w	r6, [sp, #24]
 800e7f0:	f8ad 501a 	strh.w	r5, [sp, #26]
 800e7f4:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800e7f8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800e7fc:	429a      	cmp	r2, r3
 800e7fe:	d026      	beq.n	800e84e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800e800:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800e804:	2b00      	cmp	r3, #0
 800e806:	dd22      	ble.n	800e84e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800e808:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800e80c:	2b00      	cmp	r3, #0
 800e80e:	dd1e      	ble.n	800e84e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800e810:	2300      	movs	r3, #0
 800e812:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800e816:	6823      	ldr	r3, [r4, #0]
 800e818:	a908      	add	r1, sp, #32
 800e81a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e81c:	4620      	mov	r0, r4
 800e81e:	4798      	blx	r3
 800e820:	4b0f      	ldr	r3, [pc, #60]	; (800e860 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 800e822:	681b      	ldr	r3, [r3, #0]
 800e824:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e828:	b10a      	cbz	r2, 800e82e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 800e82a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800e82c:	b900      	cbnz	r0, 800e830 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 800e82e:	6898      	ldr	r0, [r3, #8]
 800e830:	6801      	ldr	r1, [r0, #0]
 800e832:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800e836:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800e83a:	2501      	movs	r5, #1
 800e83c:	9502      	str	r5, [sp, #8]
 800e83e:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800e842:	9401      	str	r4, [sp, #4]
 800e844:	ac06      	add	r4, sp, #24
 800e846:	9400      	str	r4, [sp, #0]
 800e848:	688c      	ldr	r4, [r1, #8]
 800e84a:	a905      	add	r1, sp, #20
 800e84c:	47a0      	blx	r4
 800e84e:	b00a      	add	sp, #40	; 0x28
 800e850:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e854:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800e856:	e797      	b.n	800e788 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800e858:	2300      	movs	r3, #0
 800e85a:	9307      	str	r3, [sp, #28]
 800e85c:	e7ca      	b.n	800e7f4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 800e85e:	bf00      	nop
 800e860:	20017450 	.word	0x20017450

0800e864 <_ZNK8touchgfx6Button17invalidateContentEv>:
 800e864:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 800e868:	b12a      	cbz	r2, 800e876 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800e86a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800e86e:	b112      	cbz	r2, 800e876 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800e870:	6803      	ldr	r3, [r0, #0]
 800e872:	695b      	ldr	r3, [r3, #20]
 800e874:	4718      	bx	r3
 800e876:	4770      	bx	lr

0800e878 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800e878:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e87c:	4b2f      	ldr	r3, [pc, #188]	; (800e93c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 800e87e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800e880:	881b      	ldrh	r3, [r3, #0]
 800e882:	4293      	cmp	r3, r2
 800e884:	b08d      	sub	sp, #52	; 0x34
 800e886:	4604      	mov	r4, r0
 800e888:	460f      	mov	r7, r1
 800e88a:	d954      	bls.n	800e936 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800e88c:	4b2c      	ldr	r3, [pc, #176]	; (800e940 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 800e88e:	6819      	ldr	r1, [r3, #0]
 800e890:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 800e894:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 800e898:	4a2a      	ldr	r2, [pc, #168]	; (800e944 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 800e89a:	6812      	ldr	r2, [r2, #0]
 800e89c:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800e8a0:	2900      	cmp	r1, #0
 800e8a2:	d048      	beq.n	800e936 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800e8a4:	785a      	ldrb	r2, [r3, #1]
 800e8a6:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 800e8aa:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800e8ae:	4b26      	ldr	r3, [pc, #152]	; (800e948 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 800e8b0:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 800e8b4:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 800e8b8:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 800e8bc:	6b26      	ldr	r6, [r4, #48]	; 0x30
 800e8be:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 800e8c2:	9107      	str	r1, [sp, #28]
 800e8c4:	f3c2 0801 	ubfx	r8, r2, #0, #2
 800e8c8:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800e8cc:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 800e8d0:	681a      	ldr	r2, [r3, #0]
 800e8d2:	f88d 8020 	strb.w	r8, [sp, #32]
 800e8d6:	f892 3076 	ldrb.w	r3, [r2, #118]	; 0x76
 800e8da:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 800e8de:	9609      	str	r6, [sp, #36]	; 0x24
 800e8e0:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 800e8e4:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 800e8e8:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 800e8ec:	b10b      	cbz	r3, 800e8f2 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 800e8ee:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 800e8f0:	b905      	cbnz	r5, 800e8f4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 800e8f2:	6895      	ldr	r5, [r2, #8]
 800e8f4:	ae05      	add	r6, sp, #20
 800e8f6:	4621      	mov	r1, r4
 800e8f8:	4630      	mov	r0, r6
 800e8fa:	f003 fe0f 	bl	801251c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e8fe:	4b13      	ldr	r3, [pc, #76]	; (800e94c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 800e900:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800e902:	6818      	ldr	r0, [r3, #0]
 800e904:	f7f7 f836 	bl	8005974 <_ZNK8touchgfx5Texts7getTextEt>
 800e908:	6823      	ldr	r3, [r4, #0]
 800e90a:	4680      	mov	r8, r0
 800e90c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e90e:	4620      	mov	r0, r4
 800e910:	4798      	blx	r3
 800e912:	6823      	ldr	r3, [r4, #0]
 800e914:	4681      	mov	r9, r0
 800e916:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e91a:	4620      	mov	r0, r4
 800e91c:	4798      	blx	r3
 800e91e:	e9cd 9002 	strd	r9, r0, [sp, #8]
 800e922:	ab07      	add	r3, sp, #28
 800e924:	9300      	str	r3, [sp, #0]
 800e926:	f8cd 8004 	str.w	r8, [sp, #4]
 800e92a:	463b      	mov	r3, r7
 800e92c:	e896 0006 	ldmia.w	r6, {r1, r2}
 800e930:	4628      	mov	r0, r5
 800e932:	f7f6 ffd1 	bl	80058d8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800e936:	b00d      	add	sp, #52	; 0x34
 800e938:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e93c:	200174ac 	.word	0x200174ac
 800e940:	200174a8 	.word	0x200174a8
 800e944:	200174b0 	.word	0x200174b0
 800e948:	20017450 	.word	0x20017450
 800e94c:	200174b4 	.word	0x200174b4

0800e950 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
 800e950:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e954:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800e958:	b0a0      	sub	sp, #128	; 0x80
 800e95a:	4604      	mov	r4, r0
 800e95c:	b193      	cbz	r3, 800e984 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e95e:	4b30      	ldr	r3, [pc, #192]	; (800ea20 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd0>)
 800e960:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800e962:	881b      	ldrh	r3, [r3, #0]
 800e964:	428b      	cmp	r3, r1
 800e966:	d90d      	bls.n	800e984 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e968:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e96c:	2b00      	cmp	r3, #0
 800e96e:	dd09      	ble.n	800e984 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e970:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e974:	2b00      	cmp	r3, #0
 800e976:	dd05      	ble.n	800e984 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e978:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800e97c:	b12b      	cbz	r3, 800e98a <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x3a>
 800e97e:	6803      	ldr	r3, [r0, #0]
 800e980:	695b      	ldr	r3, [r3, #20]
 800e982:	4798      	blx	r3
 800e984:	b020      	add	sp, #128	; 0x80
 800e986:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e98a:	4b26      	ldr	r3, [pc, #152]	; (800ea24 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd4>)
 800e98c:	681b      	ldr	r3, [r3, #0]
 800e98e:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800e992:	4b25      	ldr	r3, [pc, #148]	; (800ea28 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd8>)
 800e994:	681b      	ldr	r3, [r3, #0]
 800e996:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800e99a:	4b24      	ldr	r3, [pc, #144]	; (800ea2c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xdc>)
 800e99c:	6818      	ldr	r0, [r3, #0]
 800e99e:	f7f6 ffe9 	bl	8005974 <_ZNK8touchgfx5Texts7getTextEt>
 800e9a2:	4606      	mov	r6, r0
 800e9a4:	a807      	add	r0, sp, #28
 800e9a6:	f004 fa6e 	bl	8012e86 <_ZN8touchgfx12TextProviderC1Ev>
 800e9aa:	682b      	ldr	r3, [r5, #0]
 800e9ac:	4628      	mov	r0, r5
 800e9ae:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e9b0:	4798      	blx	r3
 800e9b2:	682b      	ldr	r3, [r5, #0]
 800e9b4:	4607      	mov	r7, r0
 800e9b6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800e9b8:	4628      	mov	r0, r5
 800e9ba:	4798      	blx	r3
 800e9bc:	6823      	ldr	r3, [r4, #0]
 800e9be:	4605      	mov	r5, r0
 800e9c0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e9c2:	4620      	mov	r0, r4
 800e9c4:	4798      	blx	r3
 800e9c6:	6823      	ldr	r3, [r4, #0]
 800e9c8:	4680      	mov	r8, r0
 800e9ca:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e9ce:	4620      	mov	r0, r4
 800e9d0:	4798      	blx	r3
 800e9d2:	462b      	mov	r3, r5
 800e9d4:	e9cd 8000 	strd	r8, r0, [sp]
 800e9d8:	463a      	mov	r2, r7
 800e9da:	a807      	add	r0, sp, #28
 800e9dc:	4631      	mov	r1, r6
 800e9de:	f004 fac2 	bl	8012f66 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800e9e2:	a807      	add	r0, sp, #28
 800e9e4:	f004 fe7a 	bl	80136dc <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e9e8:	280a      	cmp	r0, #10
 800e9ea:	d103      	bne.n	800e9f4 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xa4>
 800e9ec:	6823      	ldr	r3, [r4, #0]
 800e9ee:	4620      	mov	r0, r4
 800e9f0:	695b      	ldr	r3, [r3, #20]
 800e9f2:	e7c6      	b.n	800e982 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x32>
 800e9f4:	a807      	add	r0, sp, #28
 800e9f6:	f004 fe71 	bl	80136dc <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e9fa:	2800      	cmp	r0, #0
 800e9fc:	d1f4      	bne.n	800e9e8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x98>
 800e9fe:	ad04      	add	r5, sp, #16
 800ea00:	4621      	mov	r1, r4
 800ea02:	4628      	mov	r0, r5
 800ea04:	f7ff fb7e 	bl	800e104 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800ea08:	e895 0003 	ldmia.w	r5, {r0, r1}
 800ea0c:	6822      	ldr	r2, [r4, #0]
 800ea0e:	ab02      	add	r3, sp, #8
 800ea10:	e883 0003 	stmia.w	r3, {r0, r1}
 800ea14:	6912      	ldr	r2, [r2, #16]
 800ea16:	4619      	mov	r1, r3
 800ea18:	4620      	mov	r0, r4
 800ea1a:	4790      	blx	r2
 800ea1c:	e7b2      	b.n	800e984 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800ea1e:	bf00      	nop
 800ea20:	200174ac 	.word	0x200174ac
 800ea24:	200174a8 	.word	0x200174a8
 800ea28:	200174b0 	.word	0x200174b0
 800ea2c:	200174b4 	.word	0x200174b4

0800ea30 <_ZN8touchgfx13BoxWithBorderD1Ev>:
 800ea30:	4770      	bx	lr

0800ea32 <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800ea32:	b510      	push	{r4, lr}
 800ea34:	2134      	movs	r1, #52	; 0x34
 800ea36:	4604      	mov	r4, r0
 800ea38:	f012 f879 	bl	8020b2e <_ZdlPvj>
 800ea3c:	4620      	mov	r0, r4
 800ea3e:	bd10      	pop	{r4, pc}

0800ea40 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 800ea40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ea44:	4604      	mov	r4, r0
 800ea46:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800ea48:	8962      	ldrh	r2, [r4, #10]
 800ea4a:	b218      	sxth	r0, r3
 800ea4c:	460e      	mov	r6, r1
 800ea4e:	005b      	lsls	r3, r3, #1
 800ea50:	8921      	ldrh	r1, [r4, #8]
 800ea52:	b29b      	uxth	r3, r3
 800ea54:	1ac9      	subs	r1, r1, r3
 800ea56:	b08e      	sub	sp, #56	; 0x38
 800ea58:	b209      	sxth	r1, r1
 800ea5a:	1ad3      	subs	r3, r2, r3
 800ea5c:	b21b      	sxth	r3, r3
 800ea5e:	2900      	cmp	r1, #0
 800ea60:	f8ad 0000 	strh.w	r0, [sp]
 800ea64:	f8ad 0002 	strh.w	r0, [sp, #2]
 800ea68:	f8ad 1004 	strh.w	r1, [sp, #4]
 800ea6c:	f8ad 3006 	strh.w	r3, [sp, #6]
 800ea70:	dd5e      	ble.n	800eb30 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800ea72:	2b00      	cmp	r3, #0
 800ea74:	dd5c      	ble.n	800eb30 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800ea76:	6830      	ldr	r0, [r6, #0]
 800ea78:	6871      	ldr	r1, [r6, #4]
 800ea7a:	ab02      	add	r3, sp, #8
 800ea7c:	c303      	stmia	r3!, {r0, r1}
 800ea7e:	4669      	mov	r1, sp
 800ea80:	a802      	add	r0, sp, #8
 800ea82:	f7fc fbcb 	bl	800b21c <_ZN8touchgfx4RectaNERKS0_>
 800ea86:	4620      	mov	r0, r4
 800ea88:	a902      	add	r1, sp, #8
 800ea8a:	f7ff fdf5 	bl	800e678 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 800ea8e:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 800ea90:	2800      	cmp	r0, #0
 800ea92:	d05f      	beq.n	800eb54 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800ea94:	8963      	ldrh	r3, [r4, #10]
 800ea96:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800ea9a:	f8ad 101c 	strh.w	r1, [sp, #28]
 800ea9e:	1a1f      	subs	r7, r3, r0
 800eaa0:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 800eaa4:	b202      	sxth	r2, r0
 800eaa6:	2500      	movs	r5, #0
 800eaa8:	b21b      	sxth	r3, r3
 800eaaa:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800eaae:	1a09      	subs	r1, r1, r0
 800eab0:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800eab4:	9506      	str	r5, [sp, #24]
 800eab6:	f8ad 201e 	strh.w	r2, [sp, #30]
 800eaba:	f8ad 5020 	strh.w	r5, [sp, #32]
 800eabe:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800eac2:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 800eac6:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 800eaca:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800eace:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800ead2:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 800ead6:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 800eada:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800eade:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800eae2:	af04      	add	r7, sp, #16
 800eae4:	ab06      	add	r3, sp, #24
 800eae6:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800eaea:	e893 0003 	ldmia.w	r3, {r0, r1}
 800eaee:	e887 0003 	stmia.w	r7, {r0, r1}
 800eaf2:	4631      	mov	r1, r6
 800eaf4:	4638      	mov	r0, r7
 800eaf6:	f7fc fb91 	bl	800b21c <_ZN8touchgfx4RectaNERKS0_>
 800eafa:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800eafe:	2b00      	cmp	r3, #0
 800eb00:	dd12      	ble.n	800eb28 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800eb02:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800eb06:	2b00      	cmp	r3, #0
 800eb08:	dd0e      	ble.n	800eb28 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800eb0a:	6823      	ldr	r3, [r4, #0]
 800eb0c:	4639      	mov	r1, r7
 800eb0e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800eb10:	4620      	mov	r0, r4
 800eb12:	4798      	blx	r3
 800eb14:	f7f3 fc26 	bl	8002364 <_ZN8touchgfx3HAL3lcdEv>
 800eb18:	6803      	ldr	r3, [r0, #0]
 800eb1a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800eb1c:	f8d3 8020 	ldr.w	r8, [r3, #32]
 800eb20:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800eb24:	4639      	mov	r1, r7
 800eb26:	47c0      	blx	r8
 800eb28:	3501      	adds	r5, #1
 800eb2a:	2d04      	cmp	r5, #4
 800eb2c:	d1da      	bne.n	800eae4 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 800eb2e:	e011      	b.n	800eb54 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800eb30:	6830      	ldr	r0, [r6, #0]
 800eb32:	6871      	ldr	r1, [r6, #4]
 800eb34:	ab06      	add	r3, sp, #24
 800eb36:	c303      	stmia	r3!, {r0, r1}
 800eb38:	6823      	ldr	r3, [r4, #0]
 800eb3a:	a906      	add	r1, sp, #24
 800eb3c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800eb3e:	4620      	mov	r0, r4
 800eb40:	4798      	blx	r3
 800eb42:	f7f3 fc0f 	bl	8002364 <_ZN8touchgfx3HAL3lcdEv>
 800eb46:	6803      	ldr	r3, [r0, #0]
 800eb48:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800eb4a:	6a1d      	ldr	r5, [r3, #32]
 800eb4c:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800eb50:	a906      	add	r1, sp, #24
 800eb52:	47a8      	blx	r5
 800eb54:	b00e      	add	sp, #56	; 0x38
 800eb56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800eb5a <_ZN8touchgfx5ImageD1Ev>:
 800eb5a:	4770      	bx	lr

0800eb5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800eb5c:	b570      	push	{r4, r5, r6, lr}
 800eb5e:	880b      	ldrh	r3, [r1, #0]
 800eb60:	84c3      	strh	r3, [r0, #38]	; 0x26
 800eb62:	4604      	mov	r4, r0
 800eb64:	4608      	mov	r0, r1
 800eb66:	460d      	mov	r5, r1
 800eb68:	f005 fed6 	bl	8014918 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800eb6c:	4606      	mov	r6, r0
 800eb6e:	4628      	mov	r0, r5
 800eb70:	f005 ff06 	bl	8014980 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800eb74:	6823      	ldr	r3, [r4, #0]
 800eb76:	4605      	mov	r5, r0
 800eb78:	4631      	mov	r1, r6
 800eb7a:	4620      	mov	r0, r4
 800eb7c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800eb7e:	4798      	blx	r3
 800eb80:	6823      	ldr	r3, [r4, #0]
 800eb82:	4629      	mov	r1, r5
 800eb84:	4620      	mov	r0, r4
 800eb86:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800eb88:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800eb8c:	4718      	bx	r3

0800eb8e <_ZN8touchgfx5ImageD0Ev>:
 800eb8e:	b510      	push	{r4, lr}
 800eb90:	212c      	movs	r1, #44	; 0x2c
 800eb92:	4604      	mov	r4, r0
 800eb94:	f011 ffcb 	bl	8020b2e <_ZdlPvj>
 800eb98:	4620      	mov	r0, r4
 800eb9a:	bd10      	pop	{r4, pc}

0800eb9c <_ZNK8touchgfx5Image12getSolidRectEv>:
 800eb9c:	b510      	push	{r4, lr}
 800eb9e:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800eba2:	2bff      	cmp	r3, #255	; 0xff
 800eba4:	4604      	mov	r4, r0
 800eba6:	d006      	beq.n	800ebb6 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800eba8:	2300      	movs	r3, #0
 800ebaa:	8003      	strh	r3, [r0, #0]
 800ebac:	8043      	strh	r3, [r0, #2]
 800ebae:	8083      	strh	r3, [r0, #4]
 800ebb0:	80c3      	strh	r3, [r0, #6]
 800ebb2:	4620      	mov	r0, r4
 800ebb4:	bd10      	pop	{r4, pc}
 800ebb6:	3126      	adds	r1, #38	; 0x26
 800ebb8:	f005 ff16 	bl	80149e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800ebbc:	e7f9      	b.n	800ebb2 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800ebbe <_ZNK8touchgfx5Image17invalidateContentEv>:
 800ebbe:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 800ebc2:	b12a      	cbz	r2, 800ebd0 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800ebc4:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800ebc8:	b112      	cbz	r2, 800ebd0 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800ebca:	6803      	ldr	r3, [r0, #0]
 800ebcc:	695b      	ldr	r3, [r3, #20]
 800ebce:	4718      	bx	r3
 800ebd0:	4770      	bx	lr
	...

0800ebd4 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800ebd4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ebd8:	4604      	mov	r4, r0
 800ebda:	b088      	sub	sp, #32
 800ebdc:	f854 3b26 	ldr.w	r3, [r4], #38
 800ebe0:	2500      	movs	r5, #0
 800ebe2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ebe4:	460f      	mov	r7, r1
 800ebe6:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800ebea:	a904      	add	r1, sp, #16
 800ebec:	4606      	mov	r6, r0
 800ebee:	4798      	blx	r3
 800ebf0:	4620      	mov	r0, r4
 800ebf2:	f005 fe91 	bl	8014918 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ebf6:	4680      	mov	r8, r0
 800ebf8:	4620      	mov	r0, r4
 800ebfa:	f005 fec1 	bl	8014980 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ebfe:	9506      	str	r5, [sp, #24]
 800ec00:	ad06      	add	r5, sp, #24
 800ec02:	f8ad 001e 	strh.w	r0, [sp, #30]
 800ec06:	4639      	mov	r1, r7
 800ec08:	4628      	mov	r0, r5
 800ec0a:	f8ad 801c 	strh.w	r8, [sp, #28]
 800ec0e:	f7fc fb05 	bl	800b21c <_ZN8touchgfx4RectaNERKS0_>
 800ec12:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800ec16:	2b00      	cmp	r3, #0
 800ec18:	dd19      	ble.n	800ec4e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800ec1a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800ec1e:	2b00      	cmp	r3, #0
 800ec20:	dd15      	ble.n	800ec4e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800ec22:	4b0c      	ldr	r3, [pc, #48]	; (800ec54 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800ec24:	681b      	ldr	r3, [r3, #0]
 800ec26:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800ec2a:	b10a      	cbz	r2, 800ec30 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800ec2c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800ec2e:	b900      	cbnz	r0, 800ec32 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800ec30:	6898      	ldr	r0, [r3, #8]
 800ec32:	6801      	ldr	r1, [r0, #0]
 800ec34:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800ec38:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800ec3c:	2701      	movs	r7, #1
 800ec3e:	9702      	str	r7, [sp, #8]
 800ec40:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800ec44:	e9cd 5600 	strd	r5, r6, [sp]
 800ec48:	688d      	ldr	r5, [r1, #8]
 800ec4a:	4621      	mov	r1, r4
 800ec4c:	47a8      	blx	r5
 800ec4e:	b008      	add	sp, #32
 800ec50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ec54:	20017450 	.word	0x20017450

0800ec58 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 800ec58:	4770      	bx	lr

0800ec5a <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 800ec5a:	b510      	push	{r4, lr}
 800ec5c:	2148      	movs	r1, #72	; 0x48
 800ec5e:	4604      	mov	r4, r0
 800ec60:	f011 ff65 	bl	8020b2e <_ZdlPvj>
 800ec64:	4620      	mov	r0, r4
 800ec66:	bd10      	pop	{r4, pc}

0800ec68 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 800ec68:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ec6c:	b08d      	sub	sp, #52	; 0x34
 800ec6e:	4604      	mov	r4, r0
 800ec70:	4688      	mov	r8, r1
 800ec72:	f7ff fd7f 	bl	800e774 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800ec76:	4a4d      	ldr	r2, [pc, #308]	; (800edac <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x144>)
 800ec78:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800ec7a:	8812      	ldrh	r2, [r2, #0]
 800ec7c:	429a      	cmp	r2, r3
 800ec7e:	f240 8081 	bls.w	800ed84 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800ec82:	4e4b      	ldr	r6, [pc, #300]	; (800edb0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x148>)
 800ec84:	6832      	ldr	r2, [r6, #0]
 800ec86:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800ec8a:	4b4a      	ldr	r3, [pc, #296]	; (800edb4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x14c>)
 800ec8c:	681b      	ldr	r3, [r3, #0]
 800ec8e:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 800ec92:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800ec96:	2300      	movs	r3, #0
 800ec98:	e9cd 3303 	strd	r3, r3, [sp, #12]
 800ec9c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800eca0:	2b03      	cmp	r3, #3
 800eca2:	d811      	bhi.n	800ecc8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800eca4:	e8df f003 	tbb	[pc, r3]
 800eca8:	71027102 	.word	0x71027102
 800ecac:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800ecb0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800ecb4:	f8ad 1010 	strh.w	r1, [sp, #16]
 800ecb8:	1a9b      	subs	r3, r3, r2
 800ecba:	2002      	movs	r0, #2
 800ecbc:	f8ad 2012 	strh.w	r2, [sp, #18]
 800ecc0:	fb93 f3f0 	sdiv	r3, r3, r0
 800ecc4:	f8ad 300e 	strh.w	r3, [sp, #14]
 800ecc8:	ad03      	add	r5, sp, #12
 800ecca:	e895 0003 	ldmia.w	r5, {r0, r1}
 800ecce:	f10d 0914 	add.w	r9, sp, #20
 800ecd2:	e889 0003 	stmia.w	r9, {r0, r1}
 800ecd6:	4641      	mov	r1, r8
 800ecd8:	4648      	mov	r0, r9
 800ecda:	f7fc fa9f 	bl	800b21c <_ZN8touchgfx4RectaNERKS0_>
 800ecde:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800ece2:	2b00      	cmp	r3, #0
 800ece4:	dd4e      	ble.n	800ed84 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800ece6:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800ecea:	2b00      	cmp	r3, #0
 800ecec:	dd4a      	ble.n	800ed84 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800ecee:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800ecf2:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800ecf6:	1a9b      	subs	r3, r3, r2
 800ecf8:	f8ad 3014 	strh.w	r3, [sp, #20]
 800ecfc:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800ed00:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800ed04:	1a9b      	subs	r3, r3, r2
 800ed06:	f8ad 3016 	strh.w	r3, [sp, #22]
 800ed0a:	6823      	ldr	r3, [r4, #0]
 800ed0c:	4629      	mov	r1, r5
 800ed0e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ed10:	4620      	mov	r0, r4
 800ed12:	4798      	blx	r3
 800ed14:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800ed18:	2b00      	cmp	r3, #0
 800ed1a:	d045      	beq.n	800eda8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x140>
 800ed1c:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800ed1e:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800ed20:	6833      	ldr	r3, [r6, #0]
 800ed22:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 800ed26:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 800ed2a:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800ed2e:	785b      	ldrb	r3, [r3, #1]
 800ed30:	9209      	str	r2, [sp, #36]	; 0x24
 800ed32:	f3c3 0601 	ubfx	r6, r3, #0, #2
 800ed36:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800ed3a:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800ed3e:	2300      	movs	r3, #0
 800ed40:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800ed44:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800ed48:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800ed4c:	4b1a      	ldr	r3, [pc, #104]	; (800edb8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x150>)
 800ed4e:	9707      	str	r7, [sp, #28]
 800ed50:	681b      	ldr	r3, [r3, #0]
 800ed52:	f88d 6020 	strb.w	r6, [sp, #32]
 800ed56:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800ed5a:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800ed5e:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800ed62:	b10a      	cbz	r2, 800ed68 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x100>
 800ed64:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 800ed66:	b904      	cbnz	r4, 800ed6a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 800ed68:	689c      	ldr	r4, [r3, #8]
 800ed6a:	4b14      	ldr	r3, [pc, #80]	; (800edbc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x154>)
 800ed6c:	6818      	ldr	r0, [r3, #0]
 800ed6e:	f7f6 fe01 	bl	8005974 <_ZNK8touchgfx5Texts7getTextEt>
 800ed72:	ab07      	add	r3, sp, #28
 800ed74:	9001      	str	r0, [sp, #4]
 800ed76:	9300      	str	r3, [sp, #0]
 800ed78:	e895 0006 	ldmia.w	r5, {r1, r2}
 800ed7c:	464b      	mov	r3, r9
 800ed7e:	4620      	mov	r0, r4
 800ed80:	f7f6 fdaa 	bl	80058d8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800ed84:	b00d      	add	sp, #52	; 0x34
 800ed86:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ed8a:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800ed8e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800ed92:	f8ad 2010 	strh.w	r2, [sp, #16]
 800ed96:	1a9b      	subs	r3, r3, r2
 800ed98:	2002      	movs	r0, #2
 800ed9a:	f8ad 1012 	strh.w	r1, [sp, #18]
 800ed9e:	fb93 f3f0 	sdiv	r3, r3, r0
 800eda2:	f8ad 300c 	strh.w	r3, [sp, #12]
 800eda6:	e78f      	b.n	800ecc8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800eda8:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800edaa:	e7b8      	b.n	800ed1e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb6>
 800edac:	200174ac 	.word	0x200174ac
 800edb0:	200174a8 	.word	0x200174a8
 800edb4:	200174b0 	.word	0x200174b0
 800edb8:	20017450 	.word	0x20017450
 800edbc:	200174b4 	.word	0x200174b4

0800edc0 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 800edc0:	b510      	push	{r4, lr}
 800edc2:	2101      	movs	r1, #1
 800edc4:	4c13      	ldr	r4, [pc, #76]	; (800ee14 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 800edc6:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800edca:	2200      	movs	r2, #0
 800edcc:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 800edd0:	6004      	str	r4, [r0, #0]
 800edd2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800edd6:	4c10      	ldr	r4, [pc, #64]	; (800ee18 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 800edd8:	8082      	strh	r2, [r0, #4]
 800edda:	80c2      	strh	r2, [r0, #6]
 800eddc:	8102      	strh	r2, [r0, #8]
 800edde:	8142      	strh	r2, [r0, #10]
 800ede0:	8182      	strh	r2, [r0, #12]
 800ede2:	81c2      	strh	r2, [r0, #14]
 800ede4:	8202      	strh	r2, [r0, #16]
 800ede6:	8242      	strh	r2, [r0, #18]
 800ede8:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800edec:	61c2      	str	r2, [r0, #28]
 800edee:	8402      	strh	r2, [r0, #32]
 800edf0:	8442      	strh	r2, [r0, #34]	; 0x22
 800edf2:	6282      	str	r2, [r0, #40]	; 0x28
 800edf4:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800edf8:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800edfa:	8601      	strh	r1, [r0, #48]	; 0x30
 800edfc:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 800ee00:	6344      	str	r4, [r0, #52]	; 0x34
 800ee02:	8701      	strh	r1, [r0, #56]	; 0x38
 800ee04:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 800ee08:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 800ee0c:	f880 2045 	strb.w	r2, [r0, #69]	; 0x45
 800ee10:	bd10      	pop	{r4, pc}
 800ee12:	bf00      	nop
 800ee14:	080241dc 	.word	0x080241dc
 800ee18:	080224cc 	.word	0x080224cc

0800ee1c <_ZN8touchgfx7OutlineD1Ev>:
 800ee1c:	4770      	bx	lr

0800ee1e <_ZN8touchgfx7OutlineD0Ev>:
 800ee1e:	b510      	push	{r4, lr}
 800ee20:	2130      	movs	r1, #48	; 0x30
 800ee22:	4604      	mov	r4, r0
 800ee24:	f011 fe83 	bl	8020b2e <_ZdlPvj>
 800ee28:	4620      	mov	r0, r4
 800ee2a:	bd10      	pop	{r4, pc}

0800ee2c <_ZN8touchgfx7Outline5resetEv>:
 800ee2c:	b510      	push	{r4, lr}
 800ee2e:	4604      	mov	r4, r0
 800ee30:	f000 fe8c 	bl	800fb4c <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 800ee34:	60e0      	str	r0, [r4, #12]
 800ee36:	f000 fe8f 	bl	800fb58 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 800ee3a:	68e3      	ldr	r3, [r4, #12]
 800ee3c:	6123      	str	r3, [r4, #16]
 800ee3e:	08c0      	lsrs	r0, r0, #3
 800ee40:	2200      	movs	r2, #0
 800ee42:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800ee46:	3801      	subs	r0, #1
 800ee48:	6060      	str	r0, [r4, #4]
 800ee4a:	60a2      	str	r2, [r4, #8]
 800ee4c:	8019      	strh	r1, [r3, #0]
 800ee4e:	8059      	strh	r1, [r3, #2]
 800ee50:	809a      	strh	r2, [r3, #4]
 800ee52:	80da      	strh	r2, [r3, #6]
 800ee54:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ee56:	f023 0301 	bic.w	r3, r3, #1
 800ee5a:	f043 0302 	orr.w	r3, r3, #2
 800ee5e:	6263      	str	r3, [r4, #36]	; 0x24
 800ee60:	bd10      	pop	{r4, pc}
	...

0800ee64 <_ZN8touchgfx7OutlineC1Ev>:
 800ee64:	b510      	push	{r4, lr}
 800ee66:	4b0a      	ldr	r3, [pc, #40]	; (800ee90 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 800ee68:	6003      	str	r3, [r0, #0]
 800ee6a:	2300      	movs	r3, #0
 800ee6c:	e9c0 3301 	strd	r3, r3, [r0, #4]
 800ee70:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800ee74:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800ee78:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800ee7c:	6243      	str	r3, [r0, #36]	; 0x24
 800ee7e:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 800ee82:	4604      	mov	r4, r0
 800ee84:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 800ee88:	f7ff ffd0 	bl	800ee2c <_ZN8touchgfx7Outline5resetEv>
 800ee8c:	4620      	mov	r0, r4
 800ee8e:	bd10      	pop	{r4, pc}
 800ee90:	08024250 	.word	0x08024250

0800ee94 <_ZN8touchgfx7Outline10renderLineEiiii>:
 800ee94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ee98:	b093      	sub	sp, #76	; 0x4c
 800ee9a:	1156      	asrs	r6, r2, #5
 800ee9c:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 800ee9e:	9305      	str	r3, [sp, #20]
 800eea0:	f004 051f 	and.w	r5, r4, #31
 800eea4:	1153      	asrs	r3, r2, #5
 800eea6:	9504      	str	r5, [sp, #16]
 800eea8:	1165      	asrs	r5, r4, #5
 800eeaa:	9303      	str	r3, [sp, #12]
 800eeac:	42ae      	cmp	r6, r5
 800eeae:	ea4f 1364 	mov.w	r3, r4, asr #5
 800eeb2:	9306      	str	r3, [sp, #24]
 800eeb4:	f002 031f 	and.w	r3, r2, #31
 800eeb8:	f040 80f8 	bne.w	800f0ac <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 800eebc:	9c04      	ldr	r4, [sp, #16]
 800eebe:	9a05      	ldr	r2, [sp, #20]
 800eec0:	42a3      	cmp	r3, r4
 800eec2:	ea4f 1e62 	mov.w	lr, r2, asr #5
 800eec6:	6902      	ldr	r2, [r0, #16]
 800eec8:	d125      	bne.n	800ef16 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 800eeca:	f9b2 3000 	ldrsh.w	r3, [r2]
 800eece:	459e      	cmp	lr, r3
 800eed0:	d103      	bne.n	800eeda <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 800eed2:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800eed6:	429e      	cmp	r6, r3
 800eed8:	d035      	beq.n	800ef46 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800eeda:	88d1      	ldrh	r1, [r2, #6]
 800eedc:	8893      	ldrh	r3, [r2, #4]
 800eede:	430b      	orrs	r3, r1
 800eee0:	d010      	beq.n	800ef04 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800eee2:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800eee6:	2b00      	cmp	r3, #0
 800eee8:	db0c      	blt.n	800ef04 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800eeea:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800eeec:	428b      	cmp	r3, r1
 800eeee:	da09      	bge.n	800ef04 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800eef0:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800eef4:	428b      	cmp	r3, r1
 800eef6:	bf38      	it	cc
 800eef8:	3208      	addcc	r2, #8
 800eefa:	f103 0301 	add.w	r3, r3, #1
 800eefe:	bf38      	it	cc
 800ef00:	6102      	strcc	r2, [r0, #16]
 800ef02:	6083      	str	r3, [r0, #8]
 800ef04:	6903      	ldr	r3, [r0, #16]
 800ef06:	9a03      	ldr	r2, [sp, #12]
 800ef08:	f8a3 e000 	strh.w	lr, [r3]
 800ef0c:	805a      	strh	r2, [r3, #2]
 800ef0e:	2200      	movs	r2, #0
 800ef10:	809a      	strh	r2, [r3, #4]
 800ef12:	80da      	strh	r2, [r3, #6]
 800ef14:	e017      	b.n	800ef46 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800ef16:	9c05      	ldr	r4, [sp, #20]
 800ef18:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 800ef1c:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 800ef20:	f004 041f 	and.w	r4, r4, #31
 800ef24:	114e      	asrs	r6, r1, #5
 800ef26:	9402      	str	r4, [sp, #8]
 800ef28:	9c04      	ldr	r4, [sp, #16]
 800ef2a:	4576      	cmp	r6, lr
 800ef2c:	f001 0c1f 	and.w	ip, r1, #31
 800ef30:	eba4 0403 	sub.w	r4, r4, r3
 800ef34:	d10a      	bne.n	800ef4c <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 800ef36:	9b02      	ldr	r3, [sp, #8]
 800ef38:	449c      	add	ip, r3
 800ef3a:	44a0      	add	r8, r4
 800ef3c:	fb04 a40c 	mla	r4, r4, ip, sl
 800ef40:	f8a2 8004 	strh.w	r8, [r2, #4]
 800ef44:	80d4      	strh	r4, [r2, #6]
 800ef46:	b013      	add	sp, #76	; 0x4c
 800ef48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ef4c:	9d05      	ldr	r5, [sp, #20]
 800ef4e:	1a69      	subs	r1, r5, r1
 800ef50:	bf5b      	ittet	pl
 800ef52:	f1cc 0520 	rsbpl	r5, ip, #32
 800ef56:	436c      	mulpl	r4, r5
 800ef58:	2500      	movmi	r5, #0
 800ef5a:	2520      	movpl	r5, #32
 800ef5c:	bf44      	itt	mi
 800ef5e:	fb04 f40c 	mulmi.w	r4, r4, ip
 800ef62:	4249      	negmi	r1, r1
 800ef64:	9501      	str	r5, [sp, #4]
 800ef66:	9f01      	ldr	r7, [sp, #4]
 800ef68:	fb94 f5f1 	sdiv	r5, r4, r1
 800ef6c:	fb01 4415 	mls	r4, r1, r5, r4
 800ef70:	bf54      	ite	pl
 800ef72:	f04f 0901 	movpl.w	r9, #1
 800ef76:	f04f 39ff 	movmi.w	r9, #4294967295
 800ef7a:	2c00      	cmp	r4, #0
 800ef7c:	bfb8      	it	lt
 800ef7e:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800ef82:	44bc      	add	ip, r7
 800ef84:	44a8      	add	r8, r5
 800ef86:	fb05 ac0c 	mla	ip, r5, ip, sl
 800ef8a:	f8a2 8004 	strh.w	r8, [r2, #4]
 800ef8e:	f8a2 c006 	strh.w	ip, [r2, #6]
 800ef92:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ef96:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800ef9a:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 800ef9e:	bfb8      	it	lt
 800efa0:	1864      	addlt	r4, r4, r1
 800efa2:	ea58 0202 	orrs.w	r2, r8, r2
 800efa6:	444e      	add	r6, r9
 800efa8:	d011      	beq.n	800efce <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800efaa:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800efae:	f1b8 0f00 	cmp.w	r8, #0
 800efb2:	db0c      	blt.n	800efce <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800efb4:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800efb6:	4590      	cmp	r8, r2
 800efb8:	da09      	bge.n	800efce <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800efba:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 800efbe:	4590      	cmp	r8, r2
 800efc0:	bf3c      	itt	cc
 800efc2:	f10c 0208 	addcc.w	r2, ip, #8
 800efc6:	6102      	strcc	r2, [r0, #16]
 800efc8:	f108 0201 	add.w	r2, r8, #1
 800efcc:	6082      	str	r2, [r0, #8]
 800efce:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800efd2:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800efd6:	f8ac 6000 	strh.w	r6, [ip]
 800efda:	2700      	movs	r7, #0
 800efdc:	45b6      	cmp	lr, r6
 800efde:	f8ac 2002 	strh.w	r2, [ip, #2]
 800efe2:	f8ac 7004 	strh.w	r7, [ip, #4]
 800efe6:	f8ac 7006 	strh.w	r7, [ip, #6]
 800efea:	442b      	add	r3, r5
 800efec:	d04d      	beq.n	800f08a <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 800efee:	9f04      	ldr	r7, [sp, #16]
 800eff0:	1aff      	subs	r7, r7, r3
 800eff2:	443d      	add	r5, r7
 800eff4:	016d      	lsls	r5, r5, #5
 800eff6:	fb95 f8f1 	sdiv	r8, r5, r1
 800effa:	fb01 5518 	mls	r5, r1, r8, r5
 800effe:	2d00      	cmp	r5, #0
 800f000:	bfb8      	it	lt
 800f002:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800f006:	f108 0701 	add.w	r7, r8, #1
 800f00a:	bfb8      	it	lt
 800f00c:	186d      	addlt	r5, r5, r1
 800f00e:	1a64      	subs	r4, r4, r1
 800f010:	9703      	str	r7, [sp, #12]
 800f012:	f04f 0a00 	mov.w	sl, #0
 800f016:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f01a:	1964      	adds	r4, r4, r5
 800f01c:	bf58      	it	pl
 800f01e:	9f03      	ldrpl	r7, [sp, #12]
 800f020:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800f024:	bf48      	it	mi
 800f026:	4647      	movmi	r7, r8
 800f028:	44bb      	add	fp, r7
 800f02a:	f8ac b004 	strh.w	fp, [ip, #4]
 800f02e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f032:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800f036:	f8ac b006 	strh.w	fp, [ip, #6]
 800f03a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f03e:	443b      	add	r3, r7
 800f040:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f044:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800f048:	bf58      	it	pl
 800f04a:	1a64      	subpl	r4, r4, r1
 800f04c:	ea5b 0707 	orrs.w	r7, fp, r7
 800f050:	444e      	add	r6, r9
 800f052:	d011      	beq.n	800f078 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800f054:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800f058:	f1bb 0f00 	cmp.w	fp, #0
 800f05c:	db0c      	blt.n	800f078 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800f05e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f060:	45bb      	cmp	fp, r7
 800f062:	da09      	bge.n	800f078 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800f064:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800f068:	45bb      	cmp	fp, r7
 800f06a:	bf3c      	itt	cc
 800f06c:	f10c 0708 	addcc.w	r7, ip, #8
 800f070:	6107      	strcc	r7, [r0, #16]
 800f072:	f10b 0701 	add.w	r7, fp, #1
 800f076:	6087      	str	r7, [r0, #8]
 800f078:	6907      	ldr	r7, [r0, #16]
 800f07a:	45b6      	cmp	lr, r6
 800f07c:	803e      	strh	r6, [r7, #0]
 800f07e:	807a      	strh	r2, [r7, #2]
 800f080:	f8a7 a004 	strh.w	sl, [r7, #4]
 800f084:	f8a7 a006 	strh.w	sl, [r7, #6]
 800f088:	d1c5      	bne.n	800f016 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 800f08a:	9a04      	ldr	r2, [sp, #16]
 800f08c:	1ad3      	subs	r3, r2, r3
 800f08e:	6902      	ldr	r2, [r0, #16]
 800f090:	8891      	ldrh	r1, [r2, #4]
 800f092:	88d6      	ldrh	r6, [r2, #6]
 800f094:	4419      	add	r1, r3
 800f096:	8091      	strh	r1, [r2, #4]
 800f098:	9902      	ldr	r1, [sp, #8]
 800f09a:	f101 0c20 	add.w	ip, r1, #32
 800f09e:	9901      	ldr	r1, [sp, #4]
 800f0a0:	ebac 0c01 	sub.w	ip, ip, r1
 800f0a4:	fb03 630c 	mla	r3, r3, ip, r6
 800f0a8:	80d3      	strh	r3, [r2, #6]
 800f0aa:	e74c      	b.n	800ef46 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800f0ac:	9d05      	ldr	r5, [sp, #20]
 800f0ae:	1aa2      	subs	r2, r4, r2
 800f0b0:	eba5 0501 	sub.w	r5, r5, r1
 800f0b4:	9508      	str	r5, [sp, #32]
 800f0b6:	9202      	str	r2, [sp, #8]
 800f0b8:	f140 8128 	bpl.w	800f30c <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 800f0bc:	9a03      	ldr	r2, [sp, #12]
 800f0be:	2a00      	cmp	r2, #0
 800f0c0:	f6ff af41 	blt.w	800ef46 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800f0c4:	9a02      	ldr	r2, [sp, #8]
 800f0c6:	4252      	negs	r2, r2
 800f0c8:	9202      	str	r2, [sp, #8]
 800f0ca:	9a06      	ldr	r2, [sp, #24]
 800f0cc:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 800f0d0:	f04f 34ff 	mov.w	r4, #4294967295
 800f0d4:	9206      	str	r2, [sp, #24]
 800f0d6:	462a      	mov	r2, r5
 800f0d8:	940b      	str	r4, [sp, #44]	; 0x2c
 800f0da:	435a      	muls	r2, r3
 800f0dc:	2400      	movs	r4, #0
 800f0de:	9d02      	ldr	r5, [sp, #8]
 800f0e0:	9401      	str	r4, [sp, #4]
 800f0e2:	9c02      	ldr	r4, [sp, #8]
 800f0e4:	fb92 f4f4 	sdiv	r4, r2, r4
 800f0e8:	fb05 2214 	mls	r2, r5, r4, r2
 800f0ec:	2a00      	cmp	r2, #0
 800f0ee:	9207      	str	r2, [sp, #28]
 800f0f0:	bfbc      	itt	lt
 800f0f2:	1952      	addlt	r2, r2, r5
 800f0f4:	9207      	strlt	r2, [sp, #28]
 800f0f6:	9a01      	ldr	r2, [sp, #4]
 800f0f8:	6905      	ldr	r5, [r0, #16]
 800f0fa:	bfb8      	it	lt
 800f0fc:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800f100:	eb04 0901 	add.w	r9, r4, r1
 800f104:	429a      	cmp	r2, r3
 800f106:	ea4f 1669 	mov.w	r6, r9, asr #5
 800f10a:	f040 8112 	bne.w	800f332 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 800f10e:	f9b5 3000 	ldrsh.w	r3, [r5]
 800f112:	429e      	cmp	r6, r3
 800f114:	d104      	bne.n	800f120 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 800f116:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800f11a:	9a03      	ldr	r2, [sp, #12]
 800f11c:	429a      	cmp	r2, r3
 800f11e:	d01b      	beq.n	800f158 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800f120:	88ea      	ldrh	r2, [r5, #6]
 800f122:	88ab      	ldrh	r3, [r5, #4]
 800f124:	4313      	orrs	r3, r2
 800f126:	d010      	beq.n	800f14a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800f128:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800f12c:	2a00      	cmp	r2, #0
 800f12e:	db0c      	blt.n	800f14a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800f130:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800f132:	429a      	cmp	r2, r3
 800f134:	da09      	bge.n	800f14a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800f136:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 800f13a:	429a      	cmp	r2, r3
 800f13c:	bf38      	it	cc
 800f13e:	3508      	addcc	r5, #8
 800f140:	f102 0201 	add.w	r2, r2, #1
 800f144:	bf38      	it	cc
 800f146:	6105      	strcc	r5, [r0, #16]
 800f148:	6082      	str	r2, [r0, #8]
 800f14a:	6903      	ldr	r3, [r0, #16]
 800f14c:	9a03      	ldr	r2, [sp, #12]
 800f14e:	805a      	strh	r2, [r3, #2]
 800f150:	2200      	movs	r2, #0
 800f152:	801e      	strh	r6, [r3, #0]
 800f154:	809a      	strh	r2, [r3, #4]
 800f156:	80da      	strh	r2, [r3, #6]
 800f158:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800f15a:	9a03      	ldr	r2, [sp, #12]
 800f15c:	6901      	ldr	r1, [r0, #16]
 800f15e:	441a      	add	r2, r3
 800f160:	f9b1 3000 	ldrsh.w	r3, [r1]
 800f164:	42b3      	cmp	r3, r6
 800f166:	d103      	bne.n	800f170 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 800f168:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800f16c:	429a      	cmp	r2, r3
 800f16e:	d01a      	beq.n	800f1a6 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 800f170:	88cc      	ldrh	r4, [r1, #6]
 800f172:	888b      	ldrh	r3, [r1, #4]
 800f174:	4323      	orrs	r3, r4
 800f176:	d010      	beq.n	800f19a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800f178:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800f17c:	2c00      	cmp	r4, #0
 800f17e:	db0c      	blt.n	800f19a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800f180:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800f182:	429c      	cmp	r4, r3
 800f184:	da09      	bge.n	800f19a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800f186:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800f18a:	429c      	cmp	r4, r3
 800f18c:	bf38      	it	cc
 800f18e:	3108      	addcc	r1, #8
 800f190:	f104 0401 	add.w	r4, r4, #1
 800f194:	bf38      	it	cc
 800f196:	6101      	strcc	r1, [r0, #16]
 800f198:	6084      	str	r4, [r0, #8]
 800f19a:	6903      	ldr	r3, [r0, #16]
 800f19c:	2100      	movs	r1, #0
 800f19e:	801e      	strh	r6, [r3, #0]
 800f1a0:	805a      	strh	r2, [r3, #2]
 800f1a2:	8099      	strh	r1, [r3, #4]
 800f1a4:	80d9      	strh	r1, [r3, #6]
 800f1a6:	9b06      	ldr	r3, [sp, #24]
 800f1a8:	4293      	cmp	r3, r2
 800f1aa:	f000 8082 	beq.w	800f2b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 800f1ae:	9b08      	ldr	r3, [sp, #32]
 800f1b0:	9c02      	ldr	r4, [sp, #8]
 800f1b2:	9902      	ldr	r1, [sp, #8]
 800f1b4:	015b      	lsls	r3, r3, #5
 800f1b6:	fb93 f1f1 	sdiv	r1, r3, r1
 800f1ba:	fb04 3311 	mls	r3, r4, r1, r3
 800f1be:	2b00      	cmp	r3, #0
 800f1c0:	9103      	str	r1, [sp, #12]
 800f1c2:	9308      	str	r3, [sp, #32]
 800f1c4:	da04      	bge.n	800f1d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 800f1c6:	1e4b      	subs	r3, r1, #1
 800f1c8:	9303      	str	r3, [sp, #12]
 800f1ca:	9b08      	ldr	r3, [sp, #32]
 800f1cc:	4423      	add	r3, r4
 800f1ce:	9308      	str	r3, [sp, #32]
 800f1d0:	9b07      	ldr	r3, [sp, #28]
 800f1d2:	9902      	ldr	r1, [sp, #8]
 800f1d4:	1a5b      	subs	r3, r3, r1
 800f1d6:	9307      	str	r3, [sp, #28]
 800f1d8:	9b01      	ldr	r3, [sp, #4]
 800f1da:	f1c3 0320 	rsb	r3, r3, #32
 800f1de:	930e      	str	r3, [sp, #56]	; 0x38
 800f1e0:	990e      	ldr	r1, [sp, #56]	; 0x38
 800f1e2:	9b01      	ldr	r3, [sp, #4]
 800f1e4:	1a5b      	subs	r3, r3, r1
 800f1e6:	464f      	mov	r7, r9
 800f1e8:	930a      	str	r3, [sp, #40]	; 0x28
 800f1ea:	2600      	movs	r6, #0
 800f1ec:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 800f1f0:	185b      	adds	r3, r3, r1
 800f1f2:	bf58      	it	pl
 800f1f4:	9902      	ldrpl	r1, [sp, #8]
 800f1f6:	9307      	str	r3, [sp, #28]
 800f1f8:	bf5d      	ittte	pl
 800f1fa:	1a5b      	subpl	r3, r3, r1
 800f1fc:	9307      	strpl	r3, [sp, #28]
 800f1fe:	9b03      	ldrpl	r3, [sp, #12]
 800f200:	9903      	ldrmi	r1, [sp, #12]
 800f202:	bf58      	it	pl
 800f204:	1c59      	addpl	r1, r3, #1
 800f206:	4489      	add	r9, r1
 800f208:	2a00      	cmp	r2, #0
 800f20a:	ea4f 1a69 	mov.w	sl, r9, asr #5
 800f20e:	db2e      	blt.n	800f26e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800f210:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800f212:	4293      	cmp	r3, r2
 800f214:	dd2b      	ble.n	800f26e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800f216:	9c01      	ldr	r4, [sp, #4]
 800f218:	6905      	ldr	r5, [r0, #16]
 800f21a:	46a0      	mov	r8, r4
 800f21c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 800f21e:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 800f222:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 800f226:	45a0      	cmp	r8, r4
 800f228:	f040 814f 	bne.w	800f4ca <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 800f22c:	f9b5 1000 	ldrsh.w	r1, [r5]
 800f230:	4551      	cmp	r1, sl
 800f232:	d103      	bne.n	800f23c <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 800f234:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800f238:	4291      	cmp	r1, r2
 800f23a:	d018      	beq.n	800f26e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800f23c:	ea5c 010e 	orrs.w	r1, ip, lr
 800f240:	d00f      	beq.n	800f262 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800f242:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800f246:	2900      	cmp	r1, #0
 800f248:	db0b      	blt.n	800f262 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800f24a:	428b      	cmp	r3, r1
 800f24c:	dd09      	ble.n	800f262 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800f24e:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 800f252:	4299      	cmp	r1, r3
 800f254:	bf38      	it	cc
 800f256:	3508      	addcc	r5, #8
 800f258:	f101 0101 	add.w	r1, r1, #1
 800f25c:	bf38      	it	cc
 800f25e:	6105      	strcc	r5, [r0, #16]
 800f260:	6081      	str	r1, [r0, #8]
 800f262:	6903      	ldr	r3, [r0, #16]
 800f264:	f8a3 a000 	strh.w	sl, [r3]
 800f268:	805a      	strh	r2, [r3, #2]
 800f26a:	809e      	strh	r6, [r3, #4]
 800f26c:	80de      	strh	r6, [r3, #6]
 800f26e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800f270:	6901      	ldr	r1, [r0, #16]
 800f272:	441a      	add	r2, r3
 800f274:	88cc      	ldrh	r4, [r1, #6]
 800f276:	888b      	ldrh	r3, [r1, #4]
 800f278:	4323      	orrs	r3, r4
 800f27a:	d010      	beq.n	800f29e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800f27c:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800f280:	2c00      	cmp	r4, #0
 800f282:	db0c      	blt.n	800f29e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800f284:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800f286:	429c      	cmp	r4, r3
 800f288:	da09      	bge.n	800f29e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800f28a:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800f28e:	429c      	cmp	r4, r3
 800f290:	bf38      	it	cc
 800f292:	3108      	addcc	r1, #8
 800f294:	f104 0401 	add.w	r4, r4, #1
 800f298:	bf38      	it	cc
 800f29a:	6101      	strcc	r1, [r0, #16]
 800f29c:	6084      	str	r4, [r0, #8]
 800f29e:	6903      	ldr	r3, [r0, #16]
 800f2a0:	f8a3 a000 	strh.w	sl, [r3]
 800f2a4:	805a      	strh	r2, [r3, #2]
 800f2a6:	809e      	strh	r6, [r3, #4]
 800f2a8:	80de      	strh	r6, [r3, #6]
 800f2aa:	9b06      	ldr	r3, [sp, #24]
 800f2ac:	4293      	cmp	r3, r2
 800f2ae:	464f      	mov	r7, r9
 800f2b0:	d19c      	bne.n	800f1ec <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 800f2b2:	9b01      	ldr	r3, [sp, #4]
 800f2b4:	6907      	ldr	r7, [r0, #16]
 800f2b6:	f1c3 0620 	rsb	r6, r3, #32
 800f2ba:	9b05      	ldr	r3, [sp, #20]
 800f2bc:	ea4f 1e63 	mov.w	lr, r3, asr #5
 800f2c0:	9b04      	ldr	r3, [sp, #16]
 800f2c2:	429e      	cmp	r6, r3
 800f2c4:	f040 81cc 	bne.w	800f660 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 800f2c8:	f9b7 3000 	ldrsh.w	r3, [r7]
 800f2cc:	459e      	cmp	lr, r3
 800f2ce:	d104      	bne.n	800f2da <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 800f2d0:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800f2d4:	429a      	cmp	r2, r3
 800f2d6:	f43f ae36 	beq.w	800ef46 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800f2da:	88f9      	ldrh	r1, [r7, #6]
 800f2dc:	88bb      	ldrh	r3, [r7, #4]
 800f2de:	430b      	orrs	r3, r1
 800f2e0:	d010      	beq.n	800f304 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800f2e2:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800f2e6:	2b00      	cmp	r3, #0
 800f2e8:	db0c      	blt.n	800f304 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800f2ea:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800f2ec:	428b      	cmp	r3, r1
 800f2ee:	da09      	bge.n	800f304 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800f2f0:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800f2f4:	428b      	cmp	r3, r1
 800f2f6:	bf38      	it	cc
 800f2f8:	3708      	addcc	r7, #8
 800f2fa:	f103 0301 	add.w	r3, r3, #1
 800f2fe:	bf38      	it	cc
 800f300:	6107      	strcc	r7, [r0, #16]
 800f302:	6083      	str	r3, [r0, #8]
 800f304:	6903      	ldr	r3, [r0, #16]
 800f306:	f8a3 e000 	strh.w	lr, [r3]
 800f30a:	e5ff      	b.n	800ef0c <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 800f30c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800f30e:	9c03      	ldr	r4, [sp, #12]
 800f310:	42a2      	cmp	r2, r4
 800f312:	f6ff ae18 	blt.w	800ef46 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800f316:	9c06      	ldr	r4, [sp, #24]
 800f318:	42a2      	cmp	r2, r4
 800f31a:	bfb8      	it	lt
 800f31c:	3201      	addlt	r2, #1
 800f31e:	9c08      	ldr	r4, [sp, #32]
 800f320:	bfb8      	it	lt
 800f322:	9206      	strlt	r2, [sp, #24]
 800f324:	f1c3 0220 	rsb	r2, r3, #32
 800f328:	4362      	muls	r2, r4
 800f32a:	2401      	movs	r4, #1
 800f32c:	940b      	str	r4, [sp, #44]	; 0x2c
 800f32e:	2420      	movs	r4, #32
 800f330:	e6d5      	b.n	800f0de <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 800f332:	f009 021f 	and.w	r2, r9, #31
 800f336:	ea4f 1861 	mov.w	r8, r1, asr #5
 800f33a:	920c      	str	r2, [sp, #48]	; 0x30
 800f33c:	9a01      	ldr	r2, [sp, #4]
 800f33e:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 800f342:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 800f346:	45b0      	cmp	r8, r6
 800f348:	f001 011f 	and.w	r1, r1, #31
 800f34c:	eba2 0203 	sub.w	r2, r2, r3
 800f350:	d108      	bne.n	800f364 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 800f352:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f354:	4419      	add	r1, r3
 800f356:	4496      	add	lr, r2
 800f358:	fb02 a101 	mla	r1, r2, r1, sl
 800f35c:	f8a5 e004 	strh.w	lr, [r5, #4]
 800f360:	80e9      	strh	r1, [r5, #6]
 800f362:	e6f9      	b.n	800f158 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800f364:	2c00      	cmp	r4, #0
 800f366:	f2c0 80a9 	blt.w	800f4bc <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 800f36a:	2701      	movs	r7, #1
 800f36c:	f1c1 0c20 	rsb	ip, r1, #32
 800f370:	970a      	str	r7, [sp, #40]	; 0x28
 800f372:	fb02 f20c 	mul.w	r2, r2, ip
 800f376:	2720      	movs	r7, #32
 800f378:	9709      	str	r7, [sp, #36]	; 0x24
 800f37a:	fb92 fcf4 	sdiv	ip, r2, r4
 800f37e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800f380:	fb04 221c 	mls	r2, r4, ip, r2
 800f384:	2a00      	cmp	r2, #0
 800f386:	bfb8      	it	lt
 800f388:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 800f38c:	4439      	add	r1, r7
 800f38e:	fb0c a101 	mla	r1, ip, r1, sl
 800f392:	80e9      	strh	r1, [r5, #6]
 800f394:	44e6      	add	lr, ip
 800f396:	990a      	ldr	r1, [sp, #40]	; 0x28
 800f398:	f8a5 e004 	strh.w	lr, [r5, #4]
 800f39c:	eb08 0501 	add.w	r5, r8, r1
 800f3a0:	6901      	ldr	r1, [r0, #16]
 800f3a2:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 800f3a6:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 800f3aa:	bfb8      	it	lt
 800f3ac:	1912      	addlt	r2, r2, r4
 800f3ae:	ea58 070e 	orrs.w	r7, r8, lr
 800f3b2:	d010      	beq.n	800f3d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800f3b4:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 800f3b8:	f1be 0f00 	cmp.w	lr, #0
 800f3bc:	db0b      	blt.n	800f3d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800f3be:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f3c0:	45be      	cmp	lr, r7
 800f3c2:	da08      	bge.n	800f3d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800f3c4:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800f3c8:	45be      	cmp	lr, r7
 800f3ca:	bf3c      	itt	cc
 800f3cc:	3108      	addcc	r1, #8
 800f3ce:	6101      	strcc	r1, [r0, #16]
 800f3d0:	f10e 0101 	add.w	r1, lr, #1
 800f3d4:	6081      	str	r1, [r0, #8]
 800f3d6:	6901      	ldr	r1, [r0, #16]
 800f3d8:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 800f3dc:	800d      	strh	r5, [r1, #0]
 800f3de:	f04f 0e00 	mov.w	lr, #0
 800f3e2:	42ae      	cmp	r6, r5
 800f3e4:	f8a1 8002 	strh.w	r8, [r1, #2]
 800f3e8:	f8a1 e004 	strh.w	lr, [r1, #4]
 800f3ec:	f8a1 e006 	strh.w	lr, [r1, #6]
 800f3f0:	4463      	add	r3, ip
 800f3f2:	d054      	beq.n	800f49e <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 800f3f4:	9901      	ldr	r1, [sp, #4]
 800f3f6:	1ac9      	subs	r1, r1, r3
 800f3f8:	4461      	add	r1, ip
 800f3fa:	0149      	lsls	r1, r1, #5
 800f3fc:	fb91 fef4 	sdiv	lr, r1, r4
 800f400:	fb04 111e 	mls	r1, r4, lr, r1
 800f404:	2900      	cmp	r1, #0
 800f406:	bfb8      	it	lt
 800f408:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 800f40c:	f10e 0701 	add.w	r7, lr, #1
 800f410:	bfb8      	it	lt
 800f412:	1909      	addlt	r1, r1, r4
 800f414:	1b12      	subs	r2, r2, r4
 800f416:	970d      	str	r7, [sp, #52]	; 0x34
 800f418:	f8d0 a010 	ldr.w	sl, [r0, #16]
 800f41c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800f41e:	f8ba b004 	ldrh.w	fp, [sl, #4]
 800f422:	1852      	adds	r2, r2, r1
 800f424:	bf54      	ite	pl
 800f426:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 800f42a:	46f4      	movmi	ip, lr
 800f42c:	44e3      	add	fp, ip
 800f42e:	f8aa b004 	strh.w	fp, [sl, #4]
 800f432:	f8ba b006 	ldrh.w	fp, [sl, #6]
 800f436:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 800f43a:	f8aa b006 	strh.w	fp, [sl, #6]
 800f43e:	4463      	add	r3, ip
 800f440:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f444:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f448:	f8bc a004 	ldrh.w	sl, [ip, #4]
 800f44c:	bf58      	it	pl
 800f44e:	1b12      	subpl	r2, r2, r4
 800f450:	443d      	add	r5, r7
 800f452:	ea5b 070a 	orrs.w	r7, fp, sl
 800f456:	d014      	beq.n	800f482 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800f458:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 800f45c:	f1ba 0f00 	cmp.w	sl, #0
 800f460:	db0f      	blt.n	800f482 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800f462:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f464:	45ba      	cmp	sl, r7
 800f466:	da0c      	bge.n	800f482 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800f468:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 800f46c:	45ba      	cmp	sl, r7
 800f46e:	bf38      	it	cc
 800f470:	f10c 0c08 	addcc.w	ip, ip, #8
 800f474:	f10a 0a01 	add.w	sl, sl, #1
 800f478:	bf38      	it	cc
 800f47a:	f8c0 c010 	strcc.w	ip, [r0, #16]
 800f47e:	f8c0 a008 	str.w	sl, [r0, #8]
 800f482:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f486:	f04f 0700 	mov.w	r7, #0
 800f48a:	42ae      	cmp	r6, r5
 800f48c:	f8ac 5000 	strh.w	r5, [ip]
 800f490:	f8ac 8002 	strh.w	r8, [ip, #2]
 800f494:	f8ac 7004 	strh.w	r7, [ip, #4]
 800f498:	f8ac 7006 	strh.w	r7, [ip, #6]
 800f49c:	d1bc      	bne.n	800f418 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 800f49e:	6904      	ldr	r4, [r0, #16]
 800f4a0:	9a01      	ldr	r2, [sp, #4]
 800f4a2:	990c      	ldr	r1, [sp, #48]	; 0x30
 800f4a4:	1ad3      	subs	r3, r2, r3
 800f4a6:	88a2      	ldrh	r2, [r4, #4]
 800f4a8:	441a      	add	r2, r3
 800f4aa:	80a2      	strh	r2, [r4, #4]
 800f4ac:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f4ae:	3120      	adds	r1, #32
 800f4b0:	1a89      	subs	r1, r1, r2
 800f4b2:	88e2      	ldrh	r2, [r4, #6]
 800f4b4:	fb03 2301 	mla	r3, r3, r1, r2
 800f4b8:	80e3      	strh	r3, [r4, #6]
 800f4ba:	e64d      	b.n	800f158 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800f4bc:	f04f 37ff 	mov.w	r7, #4294967295
 800f4c0:	970a      	str	r7, [sp, #40]	; 0x28
 800f4c2:	434a      	muls	r2, r1
 800f4c4:	4264      	negs	r4, r4
 800f4c6:	2700      	movs	r7, #0
 800f4c8:	e756      	b.n	800f378 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 800f4ca:	ea4f 1867 	mov.w	r8, r7, asr #5
 800f4ce:	f009 031f 	and.w	r3, r9, #31
 800f4d2:	45d0      	cmp	r8, sl
 800f4d4:	f007 071f 	and.w	r7, r7, #31
 800f4d8:	930f      	str	r3, [sp, #60]	; 0x3c
 800f4da:	fa1f fc8c 	uxth.w	ip, ip
 800f4de:	fa1f fe8e 	uxth.w	lr, lr
 800f4e2:	d10a      	bne.n	800f4fa <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 800f4e4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f4e6:	449c      	add	ip, r3
 800f4e8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800f4ea:	f8a5 c004 	strh.w	ip, [r5, #4]
 800f4ee:	441f      	add	r7, r3
 800f4f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f4f2:	fb03 e707 	mla	r7, r3, r7, lr
 800f4f6:	80ef      	strh	r7, [r5, #6]
 800f4f8:	e6b9      	b.n	800f26e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800f4fa:	2900      	cmp	r1, #0
 800f4fc:	f2c0 80a8 	blt.w	800f650 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 800f500:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800f502:	f1c7 0320 	rsb	r3, r7, #32
 800f506:	4363      	muls	r3, r4
 800f508:	2401      	movs	r4, #1
 800f50a:	940d      	str	r4, [sp, #52]	; 0x34
 800f50c:	2420      	movs	r4, #32
 800f50e:	940c      	str	r4, [sp, #48]	; 0x30
 800f510:	fb93 f4f1 	sdiv	r4, r3, r1
 800f514:	fb01 3b14 	mls	fp, r1, r4, r3
 800f518:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f51a:	f1bb 0f00 	cmp.w	fp, #0
 800f51e:	bfb8      	it	lt
 800f520:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800f524:	441f      	add	r7, r3
 800f526:	fb04 e707 	mla	r7, r4, r7, lr
 800f52a:	44a4      	add	ip, r4
 800f52c:	f8a5 c004 	strh.w	ip, [r5, #4]
 800f530:	80ef      	strh	r7, [r5, #6]
 800f532:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f536:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f538:	f8bc e006 	ldrh.w	lr, [ip, #6]
 800f53c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800f540:	bfb8      	it	lt
 800f542:	448b      	addlt	fp, r1
 800f544:	eb08 0503 	add.w	r5, r8, r3
 800f548:	ea5e 0307 	orrs.w	r3, lr, r7
 800f54c:	d011      	beq.n	800f572 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800f54e:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 800f552:	f1be 0f00 	cmp.w	lr, #0
 800f556:	db0c      	blt.n	800f572 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800f558:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f55a:	45be      	cmp	lr, r7
 800f55c:	da09      	bge.n	800f572 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800f55e:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800f562:	45be      	cmp	lr, r7
 800f564:	bf3c      	itt	cc
 800f566:	f10c 0708 	addcc.w	r7, ip, #8
 800f56a:	6107      	strcc	r7, [r0, #16]
 800f56c:	f10e 0701 	add.w	r7, lr, #1
 800f570:	6087      	str	r7, [r0, #8]
 800f572:	6907      	ldr	r7, [r0, #16]
 800f574:	b213      	sxth	r3, r2
 800f576:	9310      	str	r3, [sp, #64]	; 0x40
 800f578:	807b      	strh	r3, [r7, #2]
 800f57a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f57c:	803d      	strh	r5, [r7, #0]
 800f57e:	4555      	cmp	r5, sl
 800f580:	80be      	strh	r6, [r7, #4]
 800f582:	80fe      	strh	r6, [r7, #6]
 800f584:	eb04 0c03 	add.w	ip, r4, r3
 800f588:	d051      	beq.n	800f62e <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 800f58a:	9b01      	ldr	r3, [sp, #4]
 800f58c:	eba3 070c 	sub.w	r7, r3, ip
 800f590:	443c      	add	r4, r7
 800f592:	0164      	lsls	r4, r4, #5
 800f594:	fb94 f8f1 	sdiv	r8, r4, r1
 800f598:	fb01 4418 	mls	r4, r1, r8, r4
 800f59c:	2c00      	cmp	r4, #0
 800f59e:	bfb8      	it	lt
 800f5a0:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800f5a4:	ebab 0301 	sub.w	r3, fp, r1
 800f5a8:	f108 0701 	add.w	r7, r8, #1
 800f5ac:	bfb8      	it	lt
 800f5ae:	1864      	addlt	r4, r4, r1
 800f5b0:	9309      	str	r3, [sp, #36]	; 0x24
 800f5b2:	9711      	str	r7, [sp, #68]	; 0x44
 800f5b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f5b6:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800f5ba:	191b      	adds	r3, r3, r4
 800f5bc:	bf58      	it	pl
 800f5be:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 800f5c0:	f8be b004 	ldrh.w	fp, [lr, #4]
 800f5c4:	9309      	str	r3, [sp, #36]	; 0x24
 800f5c6:	bf48      	it	mi
 800f5c8:	4647      	movmi	r7, r8
 800f5ca:	44bb      	add	fp, r7
 800f5cc:	f8ae b004 	strh.w	fp, [lr, #4]
 800f5d0:	f8be b006 	ldrh.w	fp, [lr, #6]
 800f5d4:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800f5d8:	f8ae b006 	strh.w	fp, [lr, #6]
 800f5dc:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800f5e0:	44bc      	add	ip, r7
 800f5e2:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 800f5e4:	f8be b006 	ldrh.w	fp, [lr, #6]
 800f5e8:	443d      	add	r5, r7
 800f5ea:	f8be 7004 	ldrh.w	r7, [lr, #4]
 800f5ee:	bf5c      	itt	pl
 800f5f0:	1a5b      	subpl	r3, r3, r1
 800f5f2:	9309      	strpl	r3, [sp, #36]	; 0x24
 800f5f4:	ea5b 0307 	orrs.w	r3, fp, r7
 800f5f8:	d011      	beq.n	800f61e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800f5fa:	f9be b002 	ldrsh.w	fp, [lr, #2]
 800f5fe:	f1bb 0f00 	cmp.w	fp, #0
 800f602:	db0c      	blt.n	800f61e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800f604:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f606:	45bb      	cmp	fp, r7
 800f608:	da09      	bge.n	800f61e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800f60a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800f60e:	45bb      	cmp	fp, r7
 800f610:	bf3c      	itt	cc
 800f612:	f10e 0708 	addcc.w	r7, lr, #8
 800f616:	6107      	strcc	r7, [r0, #16]
 800f618:	f10b 0701 	add.w	r7, fp, #1
 800f61c:	6087      	str	r7, [r0, #8]
 800f61e:	6907      	ldr	r7, [r0, #16]
 800f620:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f622:	803d      	strh	r5, [r7, #0]
 800f624:	4555      	cmp	r5, sl
 800f626:	807b      	strh	r3, [r7, #2]
 800f628:	80be      	strh	r6, [r7, #4]
 800f62a:	80fe      	strh	r6, [r7, #6]
 800f62c:	d1c2      	bne.n	800f5b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 800f62e:	9b01      	ldr	r3, [sp, #4]
 800f630:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800f632:	eba3 0c0c 	sub.w	ip, r3, ip
 800f636:	6903      	ldr	r3, [r0, #16]
 800f638:	8899      	ldrh	r1, [r3, #4]
 800f63a:	4461      	add	r1, ip
 800f63c:	8099      	strh	r1, [r3, #4]
 800f63e:	990c      	ldr	r1, [sp, #48]	; 0x30
 800f640:	3720      	adds	r7, #32
 800f642:	1a7f      	subs	r7, r7, r1
 800f644:	88d9      	ldrh	r1, [r3, #6]
 800f646:	fb0c 1c07 	mla	ip, ip, r7, r1
 800f64a:	f8a3 c006 	strh.w	ip, [r3, #6]
 800f64e:	e60e      	b.n	800f26e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800f650:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f652:	f04f 34ff 	mov.w	r4, #4294967295
 800f656:	940d      	str	r4, [sp, #52]	; 0x34
 800f658:	437b      	muls	r3, r7
 800f65a:	4249      	negs	r1, r1
 800f65c:	2400      	movs	r4, #0
 800f65e:	e756      	b.n	800f50e <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 800f660:	9905      	ldr	r1, [sp, #20]
 800f662:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 800f666:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 800f66a:	f001 011f 	and.w	r1, r1, #31
 800f66e:	ea4f 1b69 	mov.w	fp, r9, asr #5
 800f672:	9102      	str	r1, [sp, #8]
 800f674:	9904      	ldr	r1, [sp, #16]
 800f676:	45f3      	cmp	fp, lr
 800f678:	f009 0c1f 	and.w	ip, r9, #31
 800f67c:	eba1 0406 	sub.w	r4, r1, r6
 800f680:	d108      	bne.n	800f694 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 800f682:	9b02      	ldr	r3, [sp, #8]
 800f684:	449c      	add	ip, r3
 800f686:	44a0      	add	r8, r4
 800f688:	fb04 a40c 	mla	r4, r4, ip, sl
 800f68c:	f8a7 8004 	strh.w	r8, [r7, #4]
 800f690:	80fc      	strh	r4, [r7, #6]
 800f692:	e458      	b.n	800ef46 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800f694:	9905      	ldr	r1, [sp, #20]
 800f696:	ebb1 0109 	subs.w	r1, r1, r9
 800f69a:	bf5b      	ittet	pl
 800f69c:	f1cc 0520 	rsbpl	r5, ip, #32
 800f6a0:	436c      	mulpl	r4, r5
 800f6a2:	2500      	movmi	r5, #0
 800f6a4:	2520      	movpl	r5, #32
 800f6a6:	bf44      	itt	mi
 800f6a8:	fb04 f40c 	mulmi.w	r4, r4, ip
 800f6ac:	4249      	negmi	r1, r1
 800f6ae:	9501      	str	r5, [sp, #4]
 800f6b0:	9b01      	ldr	r3, [sp, #4]
 800f6b2:	fb94 f5f1 	sdiv	r5, r4, r1
 800f6b6:	fb01 4415 	mls	r4, r1, r5, r4
 800f6ba:	bf54      	ite	pl
 800f6bc:	f04f 0901 	movpl.w	r9, #1
 800f6c0:	f04f 39ff 	movmi.w	r9, #4294967295
 800f6c4:	2c00      	cmp	r4, #0
 800f6c6:	bfb8      	it	lt
 800f6c8:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800f6cc:	449c      	add	ip, r3
 800f6ce:	44a8      	add	r8, r5
 800f6d0:	fb05 ac0c 	mla	ip, r5, ip, sl
 800f6d4:	f8a7 8004 	strh.w	r8, [r7, #4]
 800f6d8:	f8a7 c006 	strh.w	ip, [r7, #6]
 800f6dc:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f6e0:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800f6e4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800f6e8:	bfb8      	it	lt
 800f6ea:	1864      	addlt	r4, r4, r1
 800f6ec:	ea58 0707 	orrs.w	r7, r8, r7
 800f6f0:	eb0b 0309 	add.w	r3, fp, r9
 800f6f4:	d011      	beq.n	800f71a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800f6f6:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800f6fa:	f1b8 0f00 	cmp.w	r8, #0
 800f6fe:	db0c      	blt.n	800f71a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800f700:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f702:	45b8      	cmp	r8, r7
 800f704:	da09      	bge.n	800f71a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800f706:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 800f70a:	45b8      	cmp	r8, r7
 800f70c:	bf3c      	itt	cc
 800f70e:	f10c 0708 	addcc.w	r7, ip, #8
 800f712:	6107      	strcc	r7, [r0, #16]
 800f714:	f108 0701 	add.w	r7, r8, #1
 800f718:	6087      	str	r7, [r0, #8]
 800f71a:	6907      	ldr	r7, [r0, #16]
 800f71c:	f04f 0c00 	mov.w	ip, #0
 800f720:	b212      	sxth	r2, r2
 800f722:	459e      	cmp	lr, r3
 800f724:	803b      	strh	r3, [r7, #0]
 800f726:	807a      	strh	r2, [r7, #2]
 800f728:	f8a7 c004 	strh.w	ip, [r7, #4]
 800f72c:	f8a7 c006 	strh.w	ip, [r7, #6]
 800f730:	442e      	add	r6, r5
 800f732:	d04d      	beq.n	800f7d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 800f734:	9f04      	ldr	r7, [sp, #16]
 800f736:	1bbf      	subs	r7, r7, r6
 800f738:	443d      	add	r5, r7
 800f73a:	016d      	lsls	r5, r5, #5
 800f73c:	fb95 f8f1 	sdiv	r8, r5, r1
 800f740:	fb01 5518 	mls	r5, r1, r8, r5
 800f744:	4565      	cmp	r5, ip
 800f746:	bfb8      	it	lt
 800f748:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800f74c:	f108 0701 	add.w	r7, r8, #1
 800f750:	bfb8      	it	lt
 800f752:	186d      	addlt	r5, r5, r1
 800f754:	1a64      	subs	r4, r4, r1
 800f756:	9703      	str	r7, [sp, #12]
 800f758:	f04f 0a00 	mov.w	sl, #0
 800f75c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f760:	1964      	adds	r4, r4, r5
 800f762:	bf58      	it	pl
 800f764:	9f03      	ldrpl	r7, [sp, #12]
 800f766:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800f76a:	bf48      	it	mi
 800f76c:	4647      	movmi	r7, r8
 800f76e:	44bb      	add	fp, r7
 800f770:	f8ac b004 	strh.w	fp, [ip, #4]
 800f774:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f778:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800f77c:	f8ac b006 	strh.w	fp, [ip, #6]
 800f780:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f784:	443e      	add	r6, r7
 800f786:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f78a:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800f78e:	bf58      	it	pl
 800f790:	1a64      	subpl	r4, r4, r1
 800f792:	ea5b 0707 	orrs.w	r7, fp, r7
 800f796:	444b      	add	r3, r9
 800f798:	d011      	beq.n	800f7be <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800f79a:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800f79e:	f1bb 0f00 	cmp.w	fp, #0
 800f7a2:	db0c      	blt.n	800f7be <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800f7a4:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f7a6:	45bb      	cmp	fp, r7
 800f7a8:	da09      	bge.n	800f7be <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800f7aa:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800f7ae:	45bb      	cmp	fp, r7
 800f7b0:	bf3c      	itt	cc
 800f7b2:	f10c 0708 	addcc.w	r7, ip, #8
 800f7b6:	6107      	strcc	r7, [r0, #16]
 800f7b8:	f10b 0701 	add.w	r7, fp, #1
 800f7bc:	6087      	str	r7, [r0, #8]
 800f7be:	6907      	ldr	r7, [r0, #16]
 800f7c0:	459e      	cmp	lr, r3
 800f7c2:	803b      	strh	r3, [r7, #0]
 800f7c4:	807a      	strh	r2, [r7, #2]
 800f7c6:	f8a7 a004 	strh.w	sl, [r7, #4]
 800f7ca:	f8a7 a006 	strh.w	sl, [r7, #6]
 800f7ce:	d1c5      	bne.n	800f75c <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 800f7d0:	9b04      	ldr	r3, [sp, #16]
 800f7d2:	1b9e      	subs	r6, r3, r6
 800f7d4:	6903      	ldr	r3, [r0, #16]
 800f7d6:	889a      	ldrh	r2, [r3, #4]
 800f7d8:	4432      	add	r2, r6
 800f7da:	809a      	strh	r2, [r3, #4]
 800f7dc:	9a02      	ldr	r2, [sp, #8]
 800f7de:	f102 0c20 	add.w	ip, r2, #32
 800f7e2:	9a01      	ldr	r2, [sp, #4]
 800f7e4:	ebac 0c02 	sub.w	ip, ip, r2
 800f7e8:	88da      	ldrh	r2, [r3, #6]
 800f7ea:	fb06 260c 	mla	r6, r6, ip, r2
 800f7ee:	80de      	strh	r6, [r3, #6]
 800f7f0:	f7ff bba9 	b.w	800ef46 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

0800f7f4 <_ZN8touchgfx7Outline6lineToEii>:
 800f7f4:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f7f6:	079b      	lsls	r3, r3, #30
 800f7f8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f7fa:	460e      	mov	r6, r1
 800f7fc:	4615      	mov	r5, r2
 800f7fe:	d511      	bpl.n	800f824 <_ZN8touchgfx7Outline6lineToEii+0x30>
 800f800:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 800f804:	ea86 0701 	eor.w	r7, r6, r1
 800f808:	ea85 0302 	eor.w	r3, r5, r2
 800f80c:	433b      	orrs	r3, r7
 800f80e:	d009      	beq.n	800f824 <_ZN8touchgfx7Outline6lineToEii+0x30>
 800f810:	4633      	mov	r3, r6
 800f812:	9500      	str	r5, [sp, #0]
 800f814:	f7ff fb3e 	bl	800ee94 <_ZN8touchgfx7Outline10renderLineEiiii>
 800f818:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f81a:	e9c0 6505 	strd	r6, r5, [r0, #20]
 800f81e:	f043 0301 	orr.w	r3, r3, #1
 800f822:	6243      	str	r3, [r0, #36]	; 0x24
 800f824:	b003      	add	sp, #12
 800f826:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f828 <_ZN8touchgfx7Outline6moveToEii>:
 800f828:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f82a:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f82c:	4615      	mov	r5, r2
 800f82e:	079a      	lsls	r2, r3, #30
 800f830:	4604      	mov	r4, r0
 800f832:	460e      	mov	r6, r1
 800f834:	d401      	bmi.n	800f83a <_ZN8touchgfx7Outline6moveToEii+0x12>
 800f836:	f7ff faf9 	bl	800ee2c <_ZN8touchgfx7Outline5resetEv>
 800f83a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800f83c:	07db      	lsls	r3, r3, #31
 800f83e:	d504      	bpl.n	800f84a <_ZN8touchgfx7Outline6moveToEii+0x22>
 800f840:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 800f844:	4620      	mov	r0, r4
 800f846:	f7ff ffd5 	bl	800f7f4 <_ZN8touchgfx7Outline6lineToEii>
 800f84a:	6923      	ldr	r3, [r4, #16]
 800f84c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f850:	1170      	asrs	r0, r6, #5
 800f852:	4290      	cmp	r0, r2
 800f854:	ea4f 1165 	mov.w	r1, r5, asr #5
 800f858:	d103      	bne.n	800f862 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 800f85a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800f85e:	4291      	cmp	r1, r2
 800f860:	d01a      	beq.n	800f898 <_ZN8touchgfx7Outline6moveToEii+0x70>
 800f862:	88df      	ldrh	r7, [r3, #6]
 800f864:	889a      	ldrh	r2, [r3, #4]
 800f866:	433a      	orrs	r2, r7
 800f868:	d010      	beq.n	800f88c <_ZN8touchgfx7Outline6moveToEii+0x64>
 800f86a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800f86e:	2a00      	cmp	r2, #0
 800f870:	db0c      	blt.n	800f88c <_ZN8touchgfx7Outline6moveToEii+0x64>
 800f872:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800f874:	42ba      	cmp	r2, r7
 800f876:	da09      	bge.n	800f88c <_ZN8touchgfx7Outline6moveToEii+0x64>
 800f878:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 800f87c:	42ba      	cmp	r2, r7
 800f87e:	bf38      	it	cc
 800f880:	3308      	addcc	r3, #8
 800f882:	f102 0201 	add.w	r2, r2, #1
 800f886:	bf38      	it	cc
 800f888:	6123      	strcc	r3, [r4, #16]
 800f88a:	60a2      	str	r2, [r4, #8]
 800f88c:	6923      	ldr	r3, [r4, #16]
 800f88e:	2200      	movs	r2, #0
 800f890:	8018      	strh	r0, [r3, #0]
 800f892:	8059      	strh	r1, [r3, #2]
 800f894:	809a      	strh	r2, [r3, #4]
 800f896:	80da      	strh	r2, [r3, #6]
 800f898:	6166      	str	r6, [r4, #20]
 800f89a:	e9c4 5606 	strd	r5, r6, [r4, #24]
 800f89e:	6225      	str	r5, [r4, #32]
 800f8a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800f8a2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 800f8a2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f8a6:	b0d0      	sub	sp, #320	; 0x140
 800f8a8:	466c      	mov	r4, sp
 800f8aa:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 800f8ae:	4627      	mov	r7, r4
 800f8b0:	1a0d      	subs	r5, r1, r0
 800f8b2:	2d48      	cmp	r5, #72	; 0x48
 800f8b4:	f100 0308 	add.w	r3, r0, #8
 800f8b8:	f340 80d5 	ble.w	800fa66 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800f8bc:	112d      	asrs	r5, r5, #4
 800f8be:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 800f8c2:	f9b0 9000 	ldrsh.w	r9, [r0]
 800f8c6:	6816      	ldr	r6, [r2, #0]
 800f8c8:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 800f8cc:	6006      	str	r6, [r0, #0]
 800f8ce:	6856      	ldr	r6, [r2, #4]
 800f8d0:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800f8d4:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800f8d8:	6046      	str	r6, [r0, #4]
 800f8da:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800f8de:	f8a2 8002 	strh.w	r8, [r2, #2]
 800f8e2:	f8a2 e004 	strh.w	lr, [r2, #4]
 800f8e6:	f8a2 c006 	strh.w	ip, [r2, #6]
 800f8ea:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800f8ee:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 800f8f2:	4565      	cmp	r5, ip
 800f8f4:	f1a1 0208 	sub.w	r2, r1, #8
 800f8f8:	db06      	blt.n	800f908 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 800f8fa:	d119      	bne.n	800f930 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800f8fc:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 800f900:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 800f904:	42ae      	cmp	r6, r5
 800f906:	dd13      	ble.n	800f930 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800f908:	460e      	mov	r6, r1
 800f90a:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 800f90e:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800f912:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 800f916:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 800f91a:	601d      	str	r5, [r3, #0]
 800f91c:	6875      	ldr	r5, [r6, #4]
 800f91e:	605d      	str	r5, [r3, #4]
 800f920:	f821 9c08 	strh.w	r9, [r1, #-8]
 800f924:	f821 cc06 	strh.w	ip, [r1, #-6]
 800f928:	f821 8c04 	strh.w	r8, [r1, #-4]
 800f92c:	f821 ec02 	strh.w	lr, [r1, #-2]
 800f930:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800f934:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 800f938:	42ae      	cmp	r6, r5
 800f93a:	db06      	blt.n	800f94a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 800f93c:	d116      	bne.n	800f96c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800f93e:	f9b0 c000 	ldrsh.w	ip, [r0]
 800f942:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 800f946:	45ac      	cmp	ip, r5
 800f948:	da10      	bge.n	800f96c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800f94a:	681d      	ldr	r5, [r3, #0]
 800f94c:	f9b0 8000 	ldrsh.w	r8, [r0]
 800f950:	6005      	str	r5, [r0, #0]
 800f952:	685d      	ldr	r5, [r3, #4]
 800f954:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800f958:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800f95c:	f8a0 8008 	strh.w	r8, [r0, #8]
 800f960:	6045      	str	r5, [r0, #4]
 800f962:	8146      	strh	r6, [r0, #10]
 800f964:	f8a0 e00c 	strh.w	lr, [r0, #12]
 800f968:	f8a0 c00e 	strh.w	ip, [r0, #14]
 800f96c:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800f970:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800f974:	4565      	cmp	r5, ip
 800f976:	db06      	blt.n	800f986 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 800f978:	d119      	bne.n	800f9ae <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f97a:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 800f97e:	f9b0 5000 	ldrsh.w	r5, [r0]
 800f982:	42ae      	cmp	r6, r5
 800f984:	da13      	bge.n	800f9ae <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f986:	460e      	mov	r6, r1
 800f988:	f9b0 9000 	ldrsh.w	r9, [r0]
 800f98c:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800f990:	6005      	str	r5, [r0, #0]
 800f992:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 800f996:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 800f99a:	6875      	ldr	r5, [r6, #4]
 800f99c:	6045      	str	r5, [r0, #4]
 800f99e:	f821 9c08 	strh.w	r9, [r1, #-8]
 800f9a2:	f821 cc06 	strh.w	ip, [r1, #-6]
 800f9a6:	f821 8c04 	strh.w	r8, [r1, #-4]
 800f9aa:	f821 ec02 	strh.w	lr, [r1, #-2]
 800f9ae:	3308      	adds	r3, #8
 800f9b0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800f9b4:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 800f9b8:	45e6      	cmp	lr, ip
 800f9ba:	dbf8      	blt.n	800f9ae <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f9bc:	d105      	bne.n	800f9ca <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800f9be:	f9b3 6000 	ldrsh.w	r6, [r3]
 800f9c2:	f9b0 5000 	ldrsh.w	r5, [r0]
 800f9c6:	42ae      	cmp	r6, r5
 800f9c8:	dbf1      	blt.n	800f9ae <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f9ca:	4615      	mov	r5, r2
 800f9cc:	3a08      	subs	r2, #8
 800f9ce:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 800f9d2:	45b4      	cmp	ip, r6
 800f9d4:	dbf9      	blt.n	800f9ca <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800f9d6:	d105      	bne.n	800f9e4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 800f9d8:	f9b0 8000 	ldrsh.w	r8, [r0]
 800f9dc:	f9b2 6000 	ldrsh.w	r6, [r2]
 800f9e0:	45b0      	cmp	r8, r6
 800f9e2:	dbf2      	blt.n	800f9ca <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800f9e4:	4293      	cmp	r3, r2
 800f9e6:	f1a5 0608 	sub.w	r6, r5, #8
 800f9ea:	d816      	bhi.n	800fa1a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 800f9ec:	f8d6 c000 	ldr.w	ip, [r6]
 800f9f0:	f9b3 a000 	ldrsh.w	sl, [r3]
 800f9f4:	f8c3 c000 	str.w	ip, [r3]
 800f9f8:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 800f9fc:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 800fa00:	f8d6 c004 	ldr.w	ip, [r6, #4]
 800fa04:	f8c3 c004 	str.w	ip, [r3, #4]
 800fa08:	f825 ac08 	strh.w	sl, [r5, #-8]
 800fa0c:	f825 ec06 	strh.w	lr, [r5, #-6]
 800fa10:	f825 9c04 	strh.w	r9, [r5, #-4]
 800fa14:	f825 8c02 	strh.w	r8, [r5, #-2]
 800fa18:	e7c9      	b.n	800f9ae <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800fa1a:	f8d6 e000 	ldr.w	lr, [r6]
 800fa1e:	f9b0 a000 	ldrsh.w	sl, [r0]
 800fa22:	f8c0 e000 	str.w	lr, [r0]
 800fa26:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 800fa2a:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 800fa2e:	f8d6 e004 	ldr.w	lr, [r6, #4]
 800fa32:	f8c0 e004 	str.w	lr, [r0, #4]
 800fa36:	f825 ac08 	strh.w	sl, [r5, #-8]
 800fa3a:	f825 cc06 	strh.w	ip, [r5, #-6]
 800fa3e:	f825 9c04 	strh.w	r9, [r5, #-4]
 800fa42:	f825 8c02 	strh.w	r8, [r5, #-2]
 800fa46:	1acd      	subs	r5, r1, r3
 800fa48:	1a16      	subs	r6, r2, r0
 800fa4a:	10ed      	asrs	r5, r5, #3
 800fa4c:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 800fa50:	bfb5      	itete	lt
 800fa52:	e9c4 0200 	strdlt	r0, r2, [r4]
 800fa56:	e9c4 3100 	strdge	r3, r1, [r4]
 800fa5a:	460a      	movlt	r2, r1
 800fa5c:	4603      	movge	r3, r0
 800fa5e:	3408      	adds	r4, #8
 800fa60:	4618      	mov	r0, r3
 800fa62:	4611      	mov	r1, r2
 800fa64:	e724      	b.n	800f8b0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800fa66:	4299      	cmp	r1, r3
 800fa68:	d928      	bls.n	800fabc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 800fa6a:	f1a3 0210 	sub.w	r2, r3, #16
 800fa6e:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 800fa72:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 800fa76:	45ac      	cmp	ip, r5
 800fa78:	db06      	blt.n	800fa88 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 800fa7a:	d11d      	bne.n	800fab8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800fa7c:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 800fa80:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 800fa84:	42ae      	cmp	r6, r5
 800fa86:	da17      	bge.n	800fab8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800fa88:	4615      	mov	r5, r2
 800fa8a:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 800fa8e:	f855 6f08 	ldr.w	r6, [r5, #8]!
 800fa92:	6116      	str	r6, [r2, #16]
 800fa94:	686e      	ldr	r6, [r5, #4]
 800fa96:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 800fa9a:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 800fa9e:	f8a2 9008 	strh.w	r9, [r2, #8]
 800faa2:	42a8      	cmp	r0, r5
 800faa4:	6156      	str	r6, [r2, #20]
 800faa6:	f8a2 c00a 	strh.w	ip, [r2, #10]
 800faaa:	f8a2 800c 	strh.w	r8, [r2, #12]
 800faae:	f8a2 e00e 	strh.w	lr, [r2, #14]
 800fab2:	f1a2 0208 	sub.w	r2, r2, #8
 800fab6:	d1da      	bne.n	800fa6e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 800fab8:	3308      	adds	r3, #8
 800faba:	e7d4      	b.n	800fa66 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800fabc:	42bc      	cmp	r4, r7
 800fabe:	d903      	bls.n	800fac8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 800fac0:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 800fac4:	3c08      	subs	r4, #8
 800fac6:	e6f3      	b.n	800f8b0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800fac8:	b050      	add	sp, #320	; 0x140
 800faca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800face <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 800face:	b510      	push	{r4, lr}
 800fad0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800fad2:	07da      	lsls	r2, r3, #31
 800fad4:	4604      	mov	r4, r0
 800fad6:	d507      	bpl.n	800fae8 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 800fad8:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 800fadc:	f7ff fe8a 	bl	800f7f4 <_ZN8touchgfx7Outline6lineToEii>
 800fae0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800fae2:	f023 0301 	bic.w	r3, r3, #1
 800fae6:	6243      	str	r3, [r0, #36]	; 0x24
 800fae8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800faea:	079b      	lsls	r3, r3, #30
 800faec:	d521      	bpl.n	800fb32 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 800faee:	6923      	ldr	r3, [r4, #16]
 800faf0:	88d9      	ldrh	r1, [r3, #6]
 800faf2:	889a      	ldrh	r2, [r3, #4]
 800faf4:	430a      	orrs	r2, r1
 800faf6:	d010      	beq.n	800fb1a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800faf8:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800fafc:	2a00      	cmp	r2, #0
 800fafe:	db0c      	blt.n	800fb1a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800fb00:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800fb02:	428a      	cmp	r2, r1
 800fb04:	da09      	bge.n	800fb1a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800fb06:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800fb0a:	4291      	cmp	r1, r2
 800fb0c:	bf88      	it	hi
 800fb0e:	3308      	addhi	r3, #8
 800fb10:	f102 0201 	add.w	r2, r2, #1
 800fb14:	bf88      	it	hi
 800fb16:	6123      	strhi	r3, [r4, #16]
 800fb18:	60a2      	str	r2, [r4, #8]
 800fb1a:	68a1      	ldr	r1, [r4, #8]
 800fb1c:	b129      	cbz	r1, 800fb2a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800fb1e:	6863      	ldr	r3, [r4, #4]
 800fb20:	4299      	cmp	r1, r3
 800fb22:	d802      	bhi.n	800fb2a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800fb24:	68e0      	ldr	r0, [r4, #12]
 800fb26:	f7ff febc 	bl	800f8a2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 800fb2a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800fb2c:	f023 0302 	bic.w	r3, r3, #2
 800fb30:	6263      	str	r3, [r4, #36]	; 0x24
 800fb32:	68e0      	ldr	r0, [r4, #12]
 800fb34:	bd10      	pop	{r4, pc}
	...

0800fb38 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 800fb38:	4b02      	ldr	r3, [pc, #8]	; (800fb44 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 800fb3a:	6018      	str	r0, [r3, #0]
 800fb3c:	4b02      	ldr	r3, [pc, #8]	; (800fb48 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 800fb3e:	6019      	str	r1, [r3, #0]
 800fb40:	4770      	bx	lr
 800fb42:	bf00      	nop
 800fb44:	20017458 	.word	0x20017458
 800fb48:	2001745c 	.word	0x2001745c

0800fb4c <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 800fb4c:	4b01      	ldr	r3, [pc, #4]	; (800fb54 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 800fb4e:	6818      	ldr	r0, [r3, #0]
 800fb50:	4770      	bx	lr
 800fb52:	bf00      	nop
 800fb54:	20017458 	.word	0x20017458

0800fb58 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 800fb58:	4b01      	ldr	r3, [pc, #4]	; (800fb60 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 800fb5a:	6818      	ldr	r0, [r3, #0]
 800fb5c:	4770      	bx	lr
 800fb5e:	bf00      	nop
 800fb60:	2001745c 	.word	0x2001745c

0800fb64 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800fb64:	b510      	push	{r4, lr}
 800fb66:	6803      	ldr	r3, [r0, #0]
 800fb68:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fb6a:	460c      	mov	r4, r1
 800fb6c:	4798      	blx	r3
 800fb6e:	1b03      	subs	r3, r0, r4
 800fb70:	4258      	negs	r0, r3
 800fb72:	4158      	adcs	r0, r3
 800fb74:	bd10      	pop	{r4, pc}
	...

0800fb78 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800fb78:	4b01      	ldr	r3, [pc, #4]	; (800fb80 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800fb7a:	6019      	str	r1, [r3, #0]
 800fb7c:	4770      	bx	lr
 800fb7e:	bf00      	nop
 800fb80:	20017460 	.word	0x20017460

0800fb84 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800fb84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fb88:	4696      	mov	lr, r2
 800fb8a:	4605      	mov	r5, r0
 800fb8c:	4614      	mov	r4, r2
 800fb8e:	460e      	mov	r6, r1
 800fb90:	461f      	mov	r7, r3
 800fb92:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800fb96:	b097      	sub	sp, #92	; 0x5c
 800fb98:	f10d 0c1c 	add.w	ip, sp, #28
 800fb9c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800fba0:	f8de 3000 	ldr.w	r3, [lr]
 800fba4:	f8cc 3000 	str.w	r3, [ip]
 800fba8:	f104 0e14 	add.w	lr, r4, #20
 800fbac:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800fbb0:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800fbb4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800fbb8:	f8de 3000 	ldr.w	r3, [lr]
 800fbbc:	f8cc 3000 	str.w	r3, [ip]
 800fbc0:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800fbc4:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800fbc8:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800fbcc:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800fbd0:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800fbd4:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800fbd8:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800fbdc:	f8de 3000 	ldr.w	r3, [lr]
 800fbe0:	f8cc 3000 	str.w	r3, [ip]
 800fbe4:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800fbe6:	682b      	ldr	r3, [r5, #0]
 800fbe8:	9201      	str	r2, [sp, #4]
 800fbea:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800fbee:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800fbf0:	9200      	str	r2, [sp, #0]
 800fbf2:	f8cd 8008 	str.w	r8, [sp, #8]
 800fbf6:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 800fbfa:	aa07      	add	r2, sp, #28
 800fbfc:	463b      	mov	r3, r7
 800fbfe:	4631      	mov	r1, r6
 800fc00:	4628      	mov	r0, r5
 800fc02:	47d8      	blx	fp
 800fc04:	46a6      	mov	lr, r4
 800fc06:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800fc0a:	f10d 0c1c 	add.w	ip, sp, #28
 800fc0e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800fc12:	f8de 3000 	ldr.w	r3, [lr]
 800fc16:	f8cc 3000 	str.w	r3, [ip]
 800fc1a:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800fc1e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800fc22:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800fc26:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800fc2a:	343c      	adds	r4, #60	; 0x3c
 800fc2c:	f8de 3000 	ldr.w	r3, [lr]
 800fc30:	f8cc 3000 	str.w	r3, [ip]
 800fc34:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800fc36:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800fc3a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800fc3e:	6823      	ldr	r3, [r4, #0]
 800fc40:	f8cc 3000 	str.w	r3, [ip]
 800fc44:	682b      	ldr	r3, [r5, #0]
 800fc46:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800fc4a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800fc4c:	9201      	str	r2, [sp, #4]
 800fc4e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800fc50:	9200      	str	r2, [sp, #0]
 800fc52:	f8cd 8008 	str.w	r8, [sp, #8]
 800fc56:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 800fc58:	aa07      	add	r2, sp, #28
 800fc5a:	463b      	mov	r3, r7
 800fc5c:	4631      	mov	r1, r6
 800fc5e:	4628      	mov	r0, r5
 800fc60:	47a0      	blx	r4
 800fc62:	b017      	add	sp, #92	; 0x5c
 800fc64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800fc68 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800fc68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fc6c:	b08d      	sub	sp, #52	; 0x34
 800fc6e:	4688      	mov	r8, r1
 800fc70:	9916      	ldr	r1, [sp, #88]	; 0x58
 800fc72:	f8d3 c000 	ldr.w	ip, [r3]
 800fc76:	680f      	ldr	r7, [r1, #0]
 800fc78:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800fc7c:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800fc80:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800fc84:	edd3 6a07 	vldr	s13, [r3, #28]
 800fc88:	9918      	ldr	r1, [sp, #96]	; 0x60
 800fc8a:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800fc8e:	f9b1 9000 	ldrsh.w	r9, [r1]
 800fc92:	f9ba 1000 	ldrsh.w	r1, [sl]
 800fc96:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800fc9a:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800fc9e:	eba7 070c 	sub.w	r7, r7, ip
 800fca2:	42bc      	cmp	r4, r7
 800fca4:	bfa8      	it	ge
 800fca6:	463c      	movge	r4, r7
 800fca8:	ee07 4a90 	vmov	s15, r4
 800fcac:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800fcb0:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800fcb4:	ee25 4a04 	vmul.f32	s8, s10, s8
 800fcb8:	ee65 4a24 	vmul.f32	s9, s10, s9
 800fcbc:	ee25 5a27 	vmul.f32	s10, s10, s15
 800fcc0:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800fcc4:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800fcc8:	eb09 0e0c 	add.w	lr, r9, ip
 800fccc:	4571      	cmp	r1, lr
 800fcce:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800fcd2:	ee32 1a05 	vadd.f32	s2, s4, s10
 800fcd6:	ee36 0a84 	vadd.f32	s0, s13, s8
 800fcda:	ee61 1a87 	vmul.f32	s3, s3, s14
 800fcde:	ee22 2a07 	vmul.f32	s4, s4, s14
 800fce2:	f340 808d 	ble.w	800fe00 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800fce6:	eba1 060e 	sub.w	r6, r1, lr
 800fcea:	fb96 f5f4 	sdiv	r5, r6, r4
 800fcee:	ee07 5a10 	vmov	s14, r5
 800fcf2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fcf6:	2d00      	cmp	r5, #0
 800fcf8:	fb04 6615 	mls	r6, r4, r5, r6
 800fcfc:	eea7 0a04 	vfma.f32	s0, s14, s8
 800fd00:	eee7 0a24 	vfma.f32	s1, s14, s9
 800fd04:	eea7 1a05 	vfma.f32	s2, s14, s10
 800fd08:	dd13      	ble.n	800fd32 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800fd0a:	ee70 6a44 	vsub.f32	s13, s0, s8
 800fd0e:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800fd12:	eef5 6a40 	vcmp.f32	s13, #0.0
 800fd16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fd1a:	bf18      	it	ne
 800fd1c:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800fd20:	ee31 2a45 	vsub.f32	s4, s2, s10
 800fd24:	bf08      	it	eq
 800fd26:	eeb0 7a67 	vmoveq.f32	s14, s15
 800fd2a:	ee61 1a87 	vmul.f32	s3, s3, s14
 800fd2e:	ee22 2a07 	vmul.f32	s4, s4, s14
 800fd32:	fb05 f204 	mul.w	r2, r5, r4
 800fd36:	1abf      	subs	r7, r7, r2
 800fd38:	4494      	add	ip, r2
 800fd3a:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800fd3e:	4411      	add	r1, r2
 800fd40:	eb09 020c 	add.w	r2, r9, ip
 800fd44:	443a      	add	r2, r7
 800fd46:	b209      	sxth	r1, r1
 800fd48:	428a      	cmp	r2, r1
 800fd4a:	bfc4      	itt	gt
 800fd4c:	eba1 0209 	subgt.w	r2, r1, r9
 800fd50:	eba2 070c 	subgt.w	r7, r2, ip
 800fd54:	2f00      	cmp	r7, #0
 800fd56:	dd50      	ble.n	800fdfa <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800fd58:	fb97 f1f4 	sdiv	r1, r7, r4
 800fd5c:	fb04 7211 	mls	r2, r4, r1, r7
 800fd60:	b90a      	cbnz	r2, 800fd66 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800fd62:	3901      	subs	r1, #1
 800fd64:	4622      	mov	r2, r4
 800fd66:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800fd6a:	6840      	ldr	r0, [r0, #4]
 800fd6c:	900b      	str	r0, [sp, #44]	; 0x2c
 800fd6e:	f8d0 a000 	ldr.w	sl, [r0]
 800fd72:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800fd74:	9008      	str	r0, [sp, #32]
 800fd76:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800fd7a:	9818      	ldr	r0, [sp, #96]	; 0x60
 800fd7c:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800fd80:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800fd84:	695b      	ldr	r3, [r3, #20]
 800fd86:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800fd88:	445b      	add	r3, fp
 800fd8a:	eef0 6a42 	vmov.f32	s13, s4
 800fd8e:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800fd92:	ee21 3a23 	vmul.f32	s6, s2, s7
 800fd96:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800fd9a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800fd9e:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800fda2:	9307      	str	r3, [sp, #28]
 800fda4:	ee17 7a90 	vmov	r7, s15
 800fda8:	ee73 7a42 	vsub.f32	s15, s6, s4
 800fdac:	eeb0 7a61 	vmov.f32	s14, s3
 800fdb0:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800fdb4:	ee16 3a90 	vmov	r3, s13
 800fdb8:	fb97 f7f4 	sdiv	r7, r7, r4
 800fdbc:	ee17 ca90 	vmov	ip, s15
 800fdc0:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800fdc4:	fb9c fcf4 	sdiv	ip, ip, r4
 800fdc8:	fb0c 3306 	mla	r3, ip, r6, r3
 800fdcc:	9302      	str	r3, [sp, #8]
 800fdce:	ee17 3a10 	vmov	r3, s14
 800fdd2:	44b6      	add	lr, r6
 800fdd4:	fb04 e505 	mla	r5, r4, r5, lr
 800fdd8:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800fddc:	fb07 3706 	mla	r7, r7, r6, r3
 800fde0:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800fde4:	e9cd 4700 	strd	r4, r7, [sp]
 800fde8:	2900      	cmp	r1, #0
 800fdea:	bfcc      	ite	gt
 800fdec:	46a1      	movgt	r9, r4
 800fdee:	4691      	movle	r9, r2
 800fdf0:	eba9 0306 	sub.w	r3, r9, r6
 800fdf4:	f8da 4008 	ldr.w	r4, [sl, #8]
 800fdf8:	47a0      	blx	r4
 800fdfa:	b00d      	add	sp, #52	; 0x34
 800fdfc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fe00:	2500      	movs	r5, #0
 800fe02:	462e      	mov	r6, r5
 800fe04:	e799      	b.n	800fd3a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800fe08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800fe08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fe0c:	b0db      	sub	sp, #364	; 0x16c
 800fe0e:	461d      	mov	r5, r3
 800fe10:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800fe14:	930a      	str	r3, [sp, #40]	; 0x28
 800fe16:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800fe1a:	930b      	str	r3, [sp, #44]	; 0x2c
 800fe1c:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800fe20:	9310      	str	r3, [sp, #64]	; 0x40
 800fe22:	6803      	ldr	r3, [r0, #0]
 800fe24:	910f      	str	r1, [sp, #60]	; 0x3c
 800fe26:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 800fe28:	9009      	str	r0, [sp, #36]	; 0x24
 800fe2a:	4614      	mov	r4, r2
 800fe2c:	4629      	mov	r1, r5
 800fe2e:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800fe32:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800fe36:	47b8      	blx	r7
 800fe38:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fe3a:	6058      	str	r0, [r3, #4]
 800fe3c:	2800      	cmp	r0, #0
 800fe3e:	f000 83a1 	beq.w	8010584 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fe42:	682b      	ldr	r3, [r5, #0]
 800fe44:	9314      	str	r3, [sp, #80]	; 0x50
 800fe46:	686b      	ldr	r3, [r5, #4]
 800fe48:	9315      	str	r3, [sp, #84]	; 0x54
 800fe4a:	4bc4      	ldr	r3, [pc, #784]	; (801015c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800fe4c:	ed94 7a02 	vldr	s14, [r4, #8]
 800fe50:	7819      	ldrb	r1, [r3, #0]
 800fe52:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800fe56:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800fe5a:	2900      	cmp	r1, #0
 800fe5c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800fe60:	bf16      	itet	ne
 800fe62:	4619      	movne	r1, r3
 800fe64:	4611      	moveq	r1, r2
 800fe66:	4613      	movne	r3, r2
 800fe68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fe6c:	9116      	str	r1, [sp, #88]	; 0x58
 800fe6e:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800fe72:	f240 8387 	bls.w	8010584 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fe76:	ed94 7a07 	vldr	s14, [r4, #28]
 800fe7a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800fe7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fe82:	f240 837f 	bls.w	8010584 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fe86:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800fe8a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800fe8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fe92:	f240 8377 	bls.w	8010584 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fe96:	6822      	ldr	r2, [r4, #0]
 800fe98:	4bb1      	ldr	r3, [pc, #708]	; (8010160 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800fe9a:	429a      	cmp	r2, r3
 800fe9c:	f2c0 8372 	blt.w	8010584 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fea0:	49b0      	ldr	r1, [pc, #704]	; (8010164 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800fea2:	6963      	ldr	r3, [r4, #20]
 800fea4:	428a      	cmp	r2, r1
 800fea6:	f300 836d 	bgt.w	8010584 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800feaa:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800feae:	48ae      	ldr	r0, [pc, #696]	; (8010168 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800feb0:	33ff      	adds	r3, #255	; 0xff
 800feb2:	4283      	cmp	r3, r0
 800feb4:	f200 8366 	bhi.w	8010584 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800feb8:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800feba:	4dac      	ldr	r5, [pc, #688]	; (801016c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800febc:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800fec0:	33ff      	adds	r3, #255	; 0xff
 800fec2:	42ab      	cmp	r3, r5
 800fec4:	f200 835e 	bhi.w	8010584 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fec8:	6862      	ldr	r2, [r4, #4]
 800feca:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800fece:	33ff      	adds	r3, #255	; 0xff
 800fed0:	4283      	cmp	r3, r0
 800fed2:	f200 8357 	bhi.w	8010584 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fed6:	69a1      	ldr	r1, [r4, #24]
 800fed8:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800fedc:	33ff      	adds	r3, #255	; 0xff
 800fede:	4283      	cmp	r3, r0
 800fee0:	f200 8350 	bhi.w	8010584 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fee4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800fee6:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800feea:	30ff      	adds	r0, #255	; 0xff
 800feec:	42a8      	cmp	r0, r5
 800feee:	f200 8349 	bhi.w	8010584 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fef2:	428a      	cmp	r2, r1
 800fef4:	f280 8110 	bge.w	8010118 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800fef8:	429a      	cmp	r2, r3
 800fefa:	f300 8119 	bgt.w	8010130 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800fefe:	4299      	cmp	r1, r3
 800ff00:	f280 811d 	bge.w	801013e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800ff04:	2502      	movs	r5, #2
 800ff06:	2701      	movs	r7, #1
 800ff08:	46a9      	mov	r9, r5
 800ff0a:	46b8      	mov	r8, r7
 800ff0c:	f04f 0a00 	mov.w	sl, #0
 800ff10:	4621      	mov	r1, r4
 800ff12:	a849      	add	r0, sp, #292	; 0x124
 800ff14:	f003 fcfe 	bl	8013914 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800ff18:	4622      	mov	r2, r4
 800ff1a:	4653      	mov	r3, sl
 800ff1c:	a949      	add	r1, sp, #292	; 0x124
 800ff1e:	f8cd 9000 	str.w	r9, [sp]
 800ff22:	a819      	add	r0, sp, #100	; 0x64
 800ff24:	f003 fe26 	bl	8013b74 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800ff28:	4622      	mov	r2, r4
 800ff2a:	4653      	mov	r3, sl
 800ff2c:	a949      	add	r1, sp, #292	; 0x124
 800ff2e:	f8cd 8000 	str.w	r8, [sp]
 800ff32:	a829      	add	r0, sp, #164	; 0xa4
 800ff34:	f003 fe1e 	bl	8013b74 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800ff38:	4643      	mov	r3, r8
 800ff3a:	4622      	mov	r2, r4
 800ff3c:	a949      	add	r1, sp, #292	; 0x124
 800ff3e:	f8cd 9000 	str.w	r9, [sp]
 800ff42:	a839      	add	r0, sp, #228	; 0xe4
 800ff44:	f003 fe16 	bl	8013b74 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800ff48:	42af      	cmp	r7, r5
 800ff4a:	bfb5      	itete	lt
 800ff4c:	2300      	movlt	r3, #0
 800ff4e:	2301      	movge	r3, #1
 800ff50:	930e      	strlt	r3, [sp, #56]	; 0x38
 800ff52:	930e      	strge	r3, [sp, #56]	; 0x38
 800ff54:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800ff56:	e893 0003 	ldmia.w	r3, {r0, r1}
 800ff5a:	af12      	add	r7, sp, #72	; 0x48
 800ff5c:	bfb9      	ittee	lt
 800ff5e:	ad29      	addlt	r5, sp, #164	; 0xa4
 800ff60:	ac19      	addlt	r4, sp, #100	; 0x64
 800ff62:	ad19      	addge	r5, sp, #100	; 0x64
 800ff64:	ac29      	addge	r4, sp, #164	; 0xa4
 800ff66:	e887 0003 	stmia.w	r7, {r0, r1}
 800ff6a:	b928      	cbnz	r0, 800ff78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800ff6c:	4b80      	ldr	r3, [pc, #512]	; (8010170 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800ff6e:	6818      	ldr	r0, [r3, #0]
 800ff70:	6803      	ldr	r3, [r0, #0]
 800ff72:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ff74:	4798      	blx	r3
 800ff76:	6038      	str	r0, [r7, #0]
 800ff78:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800ff7a:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800ff7e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800ff82:	930c      	str	r3, [sp, #48]	; 0x30
 800ff84:	990c      	ldr	r1, [sp, #48]	; 0x30
 800ff86:	6963      	ldr	r3, [r4, #20]
 800ff88:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800ff8a:	440b      	add	r3, r1
 800ff8c:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800ff90:	4408      	add	r0, r1
 800ff92:	b200      	sxth	r0, r0
 800ff94:	4283      	cmp	r3, r0
 800ff96:	900d      	str	r0, [sp, #52]	; 0x34
 800ff98:	f280 80dd 	bge.w	8010156 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800ff9c:	428b      	cmp	r3, r1
 800ff9e:	da08      	bge.n	800ffb2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800ffa0:	2a00      	cmp	r2, #0
 800ffa2:	dd06      	ble.n	800ffb2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800ffa4:	1acb      	subs	r3, r1, r3
 800ffa6:	429a      	cmp	r2, r3
 800ffa8:	f2c0 80e4 	blt.w	8010174 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800ffac:	2b00      	cmp	r3, #0
 800ffae:	f300 80e2 	bgt.w	8010176 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800ffb2:	6967      	ldr	r7, [r4, #20]
 800ffb4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ffb6:	443b      	add	r3, r7
 800ffb8:	461f      	mov	r7, r3
 800ffba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ffbc:	1bdf      	subs	r7, r3, r7
 800ffbe:	4297      	cmp	r7, r2
 800ffc0:	bfa8      	it	ge
 800ffc2:	4617      	movge	r7, r2
 800ffc4:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800ffc8:	2f00      	cmp	r7, #0
 800ffca:	f340 8166 	ble.w	801029a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800ffce:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800ffd0:	6829      	ldr	r1, [r5, #0]
 800ffd2:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ffd6:	f9bb 3000 	ldrsh.w	r3, [fp]
 800ffda:	6820      	ldr	r0, [r4, #0]
 800ffdc:	4411      	add	r1, r2
 800ffde:	4299      	cmp	r1, r3
 800ffe0:	dd1a      	ble.n	8010018 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800ffe2:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800ffe6:	440b      	add	r3, r1
 800ffe8:	4402      	add	r2, r0
 800ffea:	b21b      	sxth	r3, r3
 800ffec:	429a      	cmp	r2, r3
 800ffee:	dc13      	bgt.n	8010018 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800fff0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fff2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800fff4:	681b      	ldr	r3, [r3, #0]
 800fff6:	9206      	str	r2, [sp, #24]
 800fff8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800fffa:	9205      	str	r2, [sp, #20]
 800fffc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800fffe:	9500      	str	r5, [sp, #0]
 8010000:	e9cd b203 	strd	fp, r2, [sp, #12]
 8010004:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8010006:	9809      	ldr	r0, [sp, #36]	; 0x24
 8010008:	e9cd 8201 	strd	r8, r2, [sp, #4]
 801000c:	a912      	add	r1, sp, #72	; 0x48
 801000e:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8010012:	aa49      	add	r2, sp, #292	; 0x124
 8010014:	4623      	mov	r3, r4
 8010016:	47c8      	blx	r9
 8010018:	e9d4 2300 	ldrd	r2, r3, [r4]
 801001c:	441a      	add	r2, r3
 801001e:	6963      	ldr	r3, [r4, #20]
 8010020:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8010024:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8010028:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 801002c:	68a1      	ldr	r1, [r4, #8]
 801002e:	ed94 6a08 	vldr	s12, [r4, #32]
 8010032:	6022      	str	r2, [r4, #0]
 8010034:	3301      	adds	r3, #1
 8010036:	6163      	str	r3, [r4, #20]
 8010038:	69a3      	ldr	r3, [r4, #24]
 801003a:	ee37 7a27 	vadd.f32	s14, s14, s15
 801003e:	3b01      	subs	r3, #1
 8010040:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8010044:	61a3      	str	r3, [r4, #24]
 8010046:	6923      	ldr	r3, [r4, #16]
 8010048:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801004c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010050:	edd4 6a07 	vldr	s13, [r4, #28]
 8010054:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8010058:	440b      	add	r3, r1
 801005a:	68e1      	ldr	r1, [r4, #12]
 801005c:	6123      	str	r3, [r4, #16]
 801005e:	ee76 6a86 	vadd.f32	s13, s13, s12
 8010062:	428b      	cmp	r3, r1
 8010064:	edc4 6a07 	vstr	s13, [r4, #28]
 8010068:	db15      	blt.n	8010096 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 801006a:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 801006e:	ee76 6a26 	vadd.f32	s13, s12, s13
 8010072:	3201      	adds	r2, #1
 8010074:	edc4 6a07 	vstr	s13, [r4, #28]
 8010078:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 801007c:	6022      	str	r2, [r4, #0]
 801007e:	ee36 7a87 	vadd.f32	s14, s13, s14
 8010082:	1a5b      	subs	r3, r3, r1
 8010084:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8010088:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 801008c:	6123      	str	r3, [r4, #16]
 801008e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8010092:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8010096:	e9d5 2300 	ldrd	r2, r3, [r5]
 801009a:	441a      	add	r2, r3
 801009c:	696b      	ldr	r3, [r5, #20]
 801009e:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 80100a2:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 80100a6:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 80100aa:	68a9      	ldr	r1, [r5, #8]
 80100ac:	ed95 6a08 	vldr	s12, [r5, #32]
 80100b0:	602a      	str	r2, [r5, #0]
 80100b2:	3301      	adds	r3, #1
 80100b4:	616b      	str	r3, [r5, #20]
 80100b6:	69ab      	ldr	r3, [r5, #24]
 80100b8:	ee37 7a27 	vadd.f32	s14, s14, s15
 80100bc:	3b01      	subs	r3, #1
 80100be:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 80100c2:	61ab      	str	r3, [r5, #24]
 80100c4:	692b      	ldr	r3, [r5, #16]
 80100c6:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80100ca:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80100ce:	edd5 6a07 	vldr	s13, [r5, #28]
 80100d2:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80100d6:	440b      	add	r3, r1
 80100d8:	68e9      	ldr	r1, [r5, #12]
 80100da:	612b      	str	r3, [r5, #16]
 80100dc:	ee76 6a86 	vadd.f32	s13, s13, s12
 80100e0:	428b      	cmp	r3, r1
 80100e2:	edc5 6a07 	vstr	s13, [r5, #28]
 80100e6:	db15      	blt.n	8010114 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 80100e8:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 80100ec:	ee76 6a26 	vadd.f32	s13, s12, s13
 80100f0:	3201      	adds	r2, #1
 80100f2:	edc5 6a07 	vstr	s13, [r5, #28]
 80100f6:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 80100fa:	602a      	str	r2, [r5, #0]
 80100fc:	ee36 7a87 	vadd.f32	s14, s13, s14
 8010100:	1a5b      	subs	r3, r3, r1
 8010102:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8010106:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801010a:	612b      	str	r3, [r5, #16]
 801010c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8010110:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8010114:	3f01      	subs	r7, #1
 8010116:	e757      	b.n	800ffc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8010118:	4299      	cmp	r1, r3
 801011a:	dc13      	bgt.n	8010144 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 801011c:	429a      	cmp	r2, r3
 801011e:	da14      	bge.n	801014a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8010120:	2502      	movs	r5, #2
 8010122:	2703      	movs	r7, #3
 8010124:	46a9      	mov	r9, r5
 8010126:	f04f 0800 	mov.w	r8, #0
 801012a:	f04f 0a01 	mov.w	sl, #1
 801012e:	e6ef      	b.n	800ff10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8010130:	2501      	movs	r5, #1
 8010132:	2700      	movs	r7, #0
 8010134:	46a9      	mov	r9, r5
 8010136:	46b8      	mov	r8, r7
 8010138:	f04f 0a02 	mov.w	sl, #2
 801013c:	e6e8      	b.n	800ff10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 801013e:	2501      	movs	r5, #1
 8010140:	2702      	movs	r7, #2
 8010142:	e6e1      	b.n	800ff08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8010144:	2500      	movs	r5, #0
 8010146:	2701      	movs	r7, #1
 8010148:	e7f4      	b.n	8010134 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 801014a:	2702      	movs	r7, #2
 801014c:	2503      	movs	r5, #3
 801014e:	f04f 0900 	mov.w	r9, #0
 8010152:	46b8      	mov	r8, r7
 8010154:	e7e9      	b.n	801012a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 8010156:	4613      	mov	r3, r2
 8010158:	e728      	b.n	800ffac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 801015a:	bf00      	nop
 801015c:	20017448 	.word	0x20017448
 8010160:	fffd8f01 	.word	0xfffd8f01
 8010164:	00027100 	.word	0x00027100
 8010168:	0004e1ff 	.word	0x0004e1ff
 801016c:	0004e1fe 	.word	0x0004e1fe
 8010170:	20017450 	.word	0x20017450
 8010174:	4613      	mov	r3, r2
 8010176:	992b      	ldr	r1, [sp, #172]	; 0xac
 8010178:	9111      	str	r1, [sp, #68]	; 0x44
 801017a:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 801017e:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8010182:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8010184:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 8010188:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 801018c:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8010190:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8010194:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 8010198:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 801019c:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 80101a0:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 80101a4:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 80101a8:	469e      	mov	lr, r3
 80101aa:	469c      	mov	ip, r3
 80101ac:	f04f 0900 	mov.w	r9, #0
 80101b0:	f1bc 0f00 	cmp.w	ip, #0
 80101b4:	d147      	bne.n	8010246 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 80101b6:	eb03 0c07 	add.w	ip, r3, r7
 80101ba:	1ad7      	subs	r7, r2, r3
 80101bc:	f1b9 0f00 	cmp.w	r9, #0
 80101c0:	d009      	beq.n	80101d6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 80101c2:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 80101c6:	9029      	str	r0, [sp, #164]	; 0xa4
 80101c8:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 80101cc:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 80101d0:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 80101d4:	912d      	str	r1, [sp, #180]	; 0xb4
 80101d6:	991b      	ldr	r1, [sp, #108]	; 0x6c
 80101d8:	9111      	str	r1, [sp, #68]	; 0x44
 80101da:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 80101de:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 80101e2:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 80101e6:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 80101ea:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 80101ee:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 80101f2:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80101f6:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 80101fa:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 80101fe:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8010202:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8010206:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801020a:	f04f 0800 	mov.w	r8, #0
 801020e:	f1be 0f00 	cmp.w	lr, #0
 8010212:	d031      	beq.n	8010278 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8010214:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8010216:	4431      	add	r1, r6
 8010218:	4549      	cmp	r1, r9
 801021a:	4450      	add	r0, sl
 801021c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8010220:	ee37 7a04 	vadd.f32	s14, s14, s8
 8010224:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8010228:	db08      	blt.n	801023c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 801022a:	ee77 7a85 	vadd.f32	s15, s15, s10
 801022e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8010232:	ee37 7a06 	vadd.f32	s14, s14, s12
 8010236:	3001      	adds	r0, #1
 8010238:	eba1 0109 	sub.w	r1, r1, r9
 801023c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8010240:	f04f 0801 	mov.w	r8, #1
 8010244:	e7e3      	b.n	801020e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 8010246:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8010248:	4431      	add	r1, r6
 801024a:	4541      	cmp	r1, r8
 801024c:	4450      	add	r0, sl
 801024e:	ee37 7a24 	vadd.f32	s14, s14, s9
 8010252:	ee77 7a84 	vadd.f32	s15, s15, s8
 8010256:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801025a:	db08      	blt.n	801026e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 801025c:	ee76 6a85 	vadd.f32	s13, s13, s10
 8010260:	ee37 7a25 	vadd.f32	s14, s14, s11
 8010264:	ee77 7a86 	vadd.f32	s15, s15, s12
 8010268:	3001      	adds	r0, #1
 801026a:	eba1 0108 	sub.w	r1, r1, r8
 801026e:	f10c 3cff 	add.w	ip, ip, #4294967295
 8010272:	f04f 0901 	mov.w	r9, #1
 8010276:	e79b      	b.n	80101b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8010278:	449c      	add	ip, r3
 801027a:	1aff      	subs	r7, r7, r3
 801027c:	f1b8 0f00 	cmp.w	r8, #0
 8010280:	d009      	beq.n	8010296 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8010282:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8010286:	9019      	str	r0, [sp, #100]	; 0x64
 8010288:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 801028c:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8010290:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8010294:	911d      	str	r1, [sp, #116]	; 0x74
 8010296:	1ad2      	subs	r2, r2, r3
 8010298:	e68b      	b.n	800ffb2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 801029a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801029c:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 801029e:	2b00      	cmp	r3, #0
 80102a0:	f000 80d1 	beq.w	8010446 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 80102a4:	ad19      	add	r5, sp, #100	; 0x64
 80102a6:	ac39      	add	r4, sp, #228	; 0xe4
 80102a8:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80102aa:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80102ae:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80102b2:	930c      	str	r3, [sp, #48]	; 0x30
 80102b4:	990c      	ldr	r1, [sp, #48]	; 0x30
 80102b6:	6963      	ldr	r3, [r4, #20]
 80102b8:	440b      	add	r3, r1
 80102ba:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80102be:	4408      	add	r0, r1
 80102c0:	b200      	sxth	r0, r0
 80102c2:	4283      	cmp	r3, r0
 80102c4:	900d      	str	r0, [sp, #52]	; 0x34
 80102c6:	f280 80c1 	bge.w	801044c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 80102ca:	428b      	cmp	r3, r1
 80102cc:	da08      	bge.n	80102e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80102ce:	2a00      	cmp	r2, #0
 80102d0:	dd06      	ble.n	80102e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80102d2:	1acb      	subs	r3, r1, r3
 80102d4:	429a      	cmp	r2, r3
 80102d6:	f2c0 80bb 	blt.w	8010450 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 80102da:	2b00      	cmp	r3, #0
 80102dc:	f300 80b9 	bgt.w	8010452 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 80102e0:	6967      	ldr	r7, [r4, #20]
 80102e2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80102e4:	443b      	add	r3, r7
 80102e6:	461f      	mov	r7, r3
 80102e8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80102ea:	1bdf      	subs	r7, r3, r7
 80102ec:	4297      	cmp	r7, r2
 80102ee:	bfa8      	it	ge
 80102f0:	4617      	movge	r7, r2
 80102f2:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 80102f6:	2f00      	cmp	r7, #0
 80102f8:	f340 813c 	ble.w	8010574 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 80102fc:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80102fe:	6829      	ldr	r1, [r5, #0]
 8010300:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010304:	f9bb 3000 	ldrsh.w	r3, [fp]
 8010308:	6820      	ldr	r0, [r4, #0]
 801030a:	4411      	add	r1, r2
 801030c:	4299      	cmp	r1, r3
 801030e:	dd1a      	ble.n	8010346 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8010310:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8010314:	440b      	add	r3, r1
 8010316:	4402      	add	r2, r0
 8010318:	b21b      	sxth	r3, r3
 801031a:	429a      	cmp	r2, r3
 801031c:	dc13      	bgt.n	8010346 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 801031e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010320:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010322:	681b      	ldr	r3, [r3, #0]
 8010324:	9206      	str	r2, [sp, #24]
 8010326:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8010328:	9205      	str	r2, [sp, #20]
 801032a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801032c:	9500      	str	r5, [sp, #0]
 801032e:	e9cd b203 	strd	fp, r2, [sp, #12]
 8010332:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8010334:	9809      	ldr	r0, [sp, #36]	; 0x24
 8010336:	e9cd 8201 	strd	r8, r2, [sp, #4]
 801033a:	a912      	add	r1, sp, #72	; 0x48
 801033c:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8010340:	aa49      	add	r2, sp, #292	; 0x124
 8010342:	4623      	mov	r3, r4
 8010344:	47c8      	blx	r9
 8010346:	e9d4 2300 	ldrd	r2, r3, [r4]
 801034a:	441a      	add	r2, r3
 801034c:	6963      	ldr	r3, [r4, #20]
 801034e:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8010352:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8010356:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 801035a:	68a1      	ldr	r1, [r4, #8]
 801035c:	ed94 6a08 	vldr	s12, [r4, #32]
 8010360:	6022      	str	r2, [r4, #0]
 8010362:	3301      	adds	r3, #1
 8010364:	6163      	str	r3, [r4, #20]
 8010366:	69a3      	ldr	r3, [r4, #24]
 8010368:	ee37 7a27 	vadd.f32	s14, s14, s15
 801036c:	3b01      	subs	r3, #1
 801036e:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8010372:	61a3      	str	r3, [r4, #24]
 8010374:	6923      	ldr	r3, [r4, #16]
 8010376:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801037a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801037e:	edd4 6a07 	vldr	s13, [r4, #28]
 8010382:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8010386:	440b      	add	r3, r1
 8010388:	68e1      	ldr	r1, [r4, #12]
 801038a:	6123      	str	r3, [r4, #16]
 801038c:	ee76 6a86 	vadd.f32	s13, s13, s12
 8010390:	428b      	cmp	r3, r1
 8010392:	edc4 6a07 	vstr	s13, [r4, #28]
 8010396:	db15      	blt.n	80103c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8010398:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 801039c:	ee76 6a26 	vadd.f32	s13, s12, s13
 80103a0:	3201      	adds	r2, #1
 80103a2:	edc4 6a07 	vstr	s13, [r4, #28]
 80103a6:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80103aa:	6022      	str	r2, [r4, #0]
 80103ac:	ee36 7a87 	vadd.f32	s14, s13, s14
 80103b0:	1a5b      	subs	r3, r3, r1
 80103b2:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80103b6:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 80103ba:	6123      	str	r3, [r4, #16]
 80103bc:	ee77 7a27 	vadd.f32	s15, s14, s15
 80103c0:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80103c4:	e9d5 2300 	ldrd	r2, r3, [r5]
 80103c8:	441a      	add	r2, r3
 80103ca:	696b      	ldr	r3, [r5, #20]
 80103cc:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 80103d0:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 80103d4:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 80103d8:	68a9      	ldr	r1, [r5, #8]
 80103da:	ed95 6a08 	vldr	s12, [r5, #32]
 80103de:	602a      	str	r2, [r5, #0]
 80103e0:	3301      	adds	r3, #1
 80103e2:	616b      	str	r3, [r5, #20]
 80103e4:	69ab      	ldr	r3, [r5, #24]
 80103e6:	ee37 7a27 	vadd.f32	s14, s14, s15
 80103ea:	3b01      	subs	r3, #1
 80103ec:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 80103f0:	61ab      	str	r3, [r5, #24]
 80103f2:	692b      	ldr	r3, [r5, #16]
 80103f4:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80103f8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80103fc:	edd5 6a07 	vldr	s13, [r5, #28]
 8010400:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8010404:	440b      	add	r3, r1
 8010406:	68e9      	ldr	r1, [r5, #12]
 8010408:	612b      	str	r3, [r5, #16]
 801040a:	ee76 6a86 	vadd.f32	s13, s13, s12
 801040e:	428b      	cmp	r3, r1
 8010410:	edc5 6a07 	vstr	s13, [r5, #28]
 8010414:	db15      	blt.n	8010442 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8010416:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 801041a:	ee76 6a26 	vadd.f32	s13, s12, s13
 801041e:	3201      	adds	r2, #1
 8010420:	edc5 6a07 	vstr	s13, [r5, #28]
 8010424:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8010428:	602a      	str	r2, [r5, #0]
 801042a:	ee36 7a87 	vadd.f32	s14, s13, s14
 801042e:	1a5b      	subs	r3, r3, r1
 8010430:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8010434:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8010438:	612b      	str	r3, [r5, #16]
 801043a:	ee77 7a27 	vadd.f32	s15, s14, s15
 801043e:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8010442:	3f01      	subs	r7, #1
 8010444:	e757      	b.n	80102f6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8010446:	ad39      	add	r5, sp, #228	; 0xe4
 8010448:	ac19      	add	r4, sp, #100	; 0x64
 801044a:	e72d      	b.n	80102a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 801044c:	4613      	mov	r3, r2
 801044e:	e744      	b.n	80102da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8010450:	4613      	mov	r3, r2
 8010452:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 8010456:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8010458:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 801045c:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8010460:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8010464:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8010468:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 801046c:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8010470:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8010474:	993d      	ldr	r1, [sp, #244]	; 0xf4
 8010476:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 801047a:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 801047e:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8010482:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 8010486:	960e      	str	r6, [sp, #56]	; 0x38
 8010488:	469e      	mov	lr, r3
 801048a:	461f      	mov	r7, r3
 801048c:	f04f 0900 	mov.w	r9, #0
 8010490:	2f00      	cmp	r7, #0
 8010492:	d146      	bne.n	8010522 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8010494:	449c      	add	ip, r3
 8010496:	1ad7      	subs	r7, r2, r3
 8010498:	f1b9 0f00 	cmp.w	r9, #0
 801049c:	d009      	beq.n	80104b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 801049e:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 80104a2:	9039      	str	r0, [sp, #228]	; 0xe4
 80104a4:	913d      	str	r1, [sp, #244]	; 0xf4
 80104a6:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 80104aa:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 80104ae:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 80104b2:	991b      	ldr	r1, [sp, #108]	; 0x6c
 80104b4:	910e      	str	r1, [sp, #56]	; 0x38
 80104b6:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 80104ba:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 80104be:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 80104c2:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 80104c6:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 80104ca:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 80104ce:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80104d2:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 80104d6:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 80104da:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 80104de:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 80104e2:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 80104e6:	f04f 0800 	mov.w	r8, #0
 80104ea:	f1be 0f00 	cmp.w	lr, #0
 80104ee:	d030      	beq.n	8010552 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 80104f0:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80104f2:	4431      	add	r1, r6
 80104f4:	4549      	cmp	r1, r9
 80104f6:	4450      	add	r0, sl
 80104f8:	ee76 6aa4 	vadd.f32	s13, s13, s9
 80104fc:	ee37 7a04 	vadd.f32	s14, s14, s8
 8010500:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8010504:	db08      	blt.n	8010518 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8010506:	ee77 7a85 	vadd.f32	s15, s15, s10
 801050a:	ee76 6aa5 	vadd.f32	s13, s13, s11
 801050e:	ee37 7a06 	vadd.f32	s14, s14, s12
 8010512:	3001      	adds	r0, #1
 8010514:	eba1 0109 	sub.w	r1, r1, r9
 8010518:	f10e 3eff 	add.w	lr, lr, #4294967295
 801051c:	f04f 0801 	mov.w	r8, #1
 8010520:	e7e3      	b.n	80104ea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8010522:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8010524:	4431      	add	r1, r6
 8010526:	4541      	cmp	r1, r8
 8010528:	4450      	add	r0, sl
 801052a:	ee37 7a24 	vadd.f32	s14, s14, s9
 801052e:	ee77 7a84 	vadd.f32	s15, s15, s8
 8010532:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8010536:	db08      	blt.n	801054a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8010538:	ee76 6a85 	vadd.f32	s13, s13, s10
 801053c:	ee37 7a25 	vadd.f32	s14, s14, s11
 8010540:	ee77 7a86 	vadd.f32	s15, s15, s12
 8010544:	3001      	adds	r0, #1
 8010546:	eba1 0108 	sub.w	r1, r1, r8
 801054a:	3f01      	subs	r7, #1
 801054c:	f04f 0901 	mov.w	r9, #1
 8010550:	e79e      	b.n	8010490 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8010552:	449c      	add	ip, r3
 8010554:	1aff      	subs	r7, r7, r3
 8010556:	f1b8 0f00 	cmp.w	r8, #0
 801055a:	d009      	beq.n	8010570 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 801055c:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8010560:	9019      	str	r0, [sp, #100]	; 0x64
 8010562:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8010566:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 801056a:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 801056e:	911d      	str	r1, [sp, #116]	; 0x74
 8010570:	1ad2      	subs	r2, r2, r3
 8010572:	e6b5      	b.n	80102e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8010574:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8010576:	681b      	ldr	r3, [r3, #0]
 8010578:	b923      	cbnz	r3, 8010584 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801057a:	4b04      	ldr	r3, [pc, #16]	; (801058c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 801057c:	6818      	ldr	r0, [r3, #0]
 801057e:	6803      	ldr	r3, [r0, #0]
 8010580:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010582:	4798      	blx	r3
 8010584:	b05b      	add	sp, #364	; 0x16c
 8010586:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801058a:	bf00      	nop
 801058c:	20017450 	.word	0x20017450

08010590 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 8010590:	b570      	push	{r4, r5, r6, lr}
 8010592:	4604      	mov	r4, r0
 8010594:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8010598:	9804      	ldr	r0, [sp, #16]
 801059a:	6061      	str	r1, [r4, #4]
 801059c:	2500      	movs	r5, #0
 801059e:	8025      	strh	r5, [r4, #0]
 80105a0:	7223      	strb	r3, [r4, #8]
 80105a2:	7266      	strb	r6, [r4, #9]
 80105a4:	60e0      	str	r0, [r4, #12]
 80105a6:	8222      	strh	r2, [r4, #16]
 80105a8:	8265      	strh	r5, [r4, #18]
 80105aa:	82a5      	strh	r5, [r4, #20]
 80105ac:	82e5      	strh	r5, [r4, #22]
 80105ae:	8325      	strh	r5, [r4, #24]
 80105b0:	8365      	strh	r5, [r4, #26]
 80105b2:	83a5      	strh	r5, [r4, #28]
 80105b4:	77a5      	strb	r5, [r4, #30]
 80105b6:	b32e      	cbz	r6, 8010604 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 80105b8:	6803      	ldr	r3, [r0, #0]
 80105ba:	695b      	ldr	r3, [r3, #20]
 80105bc:	4798      	blx	r3
 80105be:	4606      	mov	r6, r0
 80105c0:	b300      	cbz	r0, 8010604 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 80105c2:	68e0      	ldr	r0, [r4, #12]
 80105c4:	6803      	ldr	r3, [r0, #0]
 80105c6:	4631      	mov	r1, r6
 80105c8:	68db      	ldr	r3, [r3, #12]
 80105ca:	4798      	blx	r3
 80105cc:	4605      	mov	r5, r0
 80105ce:	b1c8      	cbz	r0, 8010604 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 80105d0:	7b43      	ldrb	r3, [r0, #13]
 80105d2:	7a82      	ldrb	r2, [r0, #10]
 80105d4:	005b      	lsls	r3, r3, #1
 80105d6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80105da:	4313      	orrs	r3, r2
 80105dc:	83a3      	strh	r3, [r4, #28]
 80105de:	7a63      	ldrb	r3, [r4, #9]
 80105e0:	2b04      	cmp	r3, #4
 80105e2:	d10f      	bne.n	8010604 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 80105e4:	68e0      	ldr	r0, [r4, #12]
 80105e6:	6803      	ldr	r3, [r0, #0]
 80105e8:	462a      	mov	r2, r5
 80105ea:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80105ec:	4631      	mov	r1, r6
 80105ee:	4798      	blx	r3
 80105f0:	7b6b      	ldrb	r3, [r5, #13]
 80105f2:	005b      	lsls	r3, r3, #1
 80105f4:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80105f8:	7aab      	ldrb	r3, [r5, #10]
 80105fa:	4313      	orrs	r3, r2
 80105fc:	4418      	add	r0, r3
 80105fe:	8ba3      	ldrh	r3, [r4, #28]
 8010600:	4418      	add	r0, r3
 8010602:	83a0      	strh	r0, [r4, #28]
 8010604:	4620      	mov	r0, r4
 8010606:	bd70      	pop	{r4, r5, r6, pc}

08010608 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8010608:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801060c:	2400      	movs	r4, #0
 801060e:	b085      	sub	sp, #20
 8010610:	4681      	mov	r9, r0
 8010612:	4688      	mov	r8, r1
 8010614:	4692      	mov	sl, r2
 8010616:	469b      	mov	fp, r3
 8010618:	4627      	mov	r7, r4
 801061a:	4625      	mov	r5, r4
 801061c:	4626      	mov	r6, r4
 801061e:	4554      	cmp	r4, sl
 8010620:	da2a      	bge.n	8010678 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8010622:	2300      	movs	r3, #0
 8010624:	9303      	str	r3, [sp, #12]
 8010626:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801062a:	429d      	cmp	r5, r3
 801062c:	d004      	beq.n	8010638 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 801062e:	f242 030b 	movw	r3, #8203	; 0x200b
 8010632:	429d      	cmp	r5, r3
 8010634:	bf18      	it	ne
 8010636:	462f      	movne	r7, r5
 8010638:	ab03      	add	r3, sp, #12
 801063a:	4642      	mov	r2, r8
 801063c:	4659      	mov	r1, fp
 801063e:	4648      	mov	r0, r9
 8010640:	f002 ff7e 	bl	8013540 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010644:	4605      	mov	r5, r0
 8010646:	b1b8      	cbz	r0, 8010678 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8010648:	280a      	cmp	r0, #10
 801064a:	d015      	beq.n	8010678 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801064c:	9a03      	ldr	r2, [sp, #12]
 801064e:	b18a      	cbz	r2, 8010674 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8010650:	7b50      	ldrb	r0, [r2, #13]
 8010652:	7a93      	ldrb	r3, [r2, #10]
 8010654:	8895      	ldrh	r5, [r2, #4]
 8010656:	0040      	lsls	r0, r0, #1
 8010658:	f400 7080 	and.w	r0, r0, #256	; 0x100
 801065c:	4303      	orrs	r3, r0
 801065e:	9301      	str	r3, [sp, #4]
 8010660:	f8d8 3000 	ldr.w	r3, [r8]
 8010664:	4639      	mov	r1, r7
 8010666:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010668:	4640      	mov	r0, r8
 801066a:	4798      	blx	r3
 801066c:	9b01      	ldr	r3, [sp, #4]
 801066e:	4418      	add	r0, r3
 8010670:	4406      	add	r6, r0
 8010672:	b2b6      	uxth	r6, r6
 8010674:	3401      	adds	r4, #1
 8010676:	e7d2      	b.n	801061e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8010678:	4630      	mov	r0, r6
 801067a:	b005      	add	sp, #20
 801067c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010680 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8010680:	2a02      	cmp	r2, #2
 8010682:	b530      	push	{r4, r5, lr}
 8010684:	d011      	beq.n	80106aa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8010686:	2a03      	cmp	r2, #3
 8010688:	d01c      	beq.n	80106c4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 801068a:	2a01      	cmp	r2, #1
 801068c:	d10c      	bne.n	80106a8 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 801068e:	888b      	ldrh	r3, [r1, #4]
 8010690:	8801      	ldrh	r1, [r0, #0]
 8010692:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8010696:	8844      	ldrh	r4, [r0, #2]
 8010698:	8004      	strh	r4, [r0, #0]
 801069a:	1a5b      	subs	r3, r3, r1
 801069c:	1a9b      	subs	r3, r3, r2
 801069e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80106a2:	8043      	strh	r3, [r0, #2]
 80106a4:	8081      	strh	r1, [r0, #4]
 80106a6:	80c2      	strh	r2, [r0, #6]
 80106a8:	bd30      	pop	{r4, r5, pc}
 80106aa:	88cb      	ldrh	r3, [r1, #6]
 80106ac:	8842      	ldrh	r2, [r0, #2]
 80106ae:	1a9b      	subs	r3, r3, r2
 80106b0:	88c2      	ldrh	r2, [r0, #6]
 80106b2:	1a9b      	subs	r3, r3, r2
 80106b4:	888a      	ldrh	r2, [r1, #4]
 80106b6:	8801      	ldrh	r1, [r0, #0]
 80106b8:	8043      	strh	r3, [r0, #2]
 80106ba:	1a52      	subs	r2, r2, r1
 80106bc:	8881      	ldrh	r1, [r0, #4]
 80106be:	1a52      	subs	r2, r2, r1
 80106c0:	8002      	strh	r2, [r0, #0]
 80106c2:	e7f1      	b.n	80106a8 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 80106c4:	88cb      	ldrh	r3, [r1, #6]
 80106c6:	8841      	ldrh	r1, [r0, #2]
 80106c8:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 80106cc:	f9b0 5000 	ldrsh.w	r5, [r0]
 80106d0:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 80106d4:	8045      	strh	r5, [r0, #2]
 80106d6:	1a5b      	subs	r3, r3, r1
 80106d8:	1a9b      	subs	r3, r3, r2
 80106da:	8003      	strh	r3, [r0, #0]
 80106dc:	8082      	strh	r2, [r0, #4]
 80106de:	80c4      	strh	r4, [r0, #6]
 80106e0:	e7e2      	b.n	80106a8 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

080106e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 80106e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80106e6:	b09f      	sub	sp, #124	; 0x7c
 80106e8:	9116      	str	r1, [sp, #88]	; 0x58
 80106ea:	9317      	str	r3, [sp, #92]	; 0x5c
 80106ec:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80106ee:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80106f0:	8809      	ldrh	r1, [r1, #0]
 80106f2:	889b      	ldrh	r3, [r3, #4]
 80106f4:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 80106f8:	9212      	str	r2, [sp, #72]	; 0x48
 80106fa:	440b      	add	r3, r1
 80106fc:	b21b      	sxth	r3, r3
 80106fe:	9310      	str	r3, [sp, #64]	; 0x40
 8010700:	f8d8 3000 	ldr.w	r3, [r8]
 8010704:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8010708:	7a59      	ldrb	r1, [r3, #9]
 801070a:	7a1b      	ldrb	r3, [r3, #8]
 801070c:	9011      	str	r0, [sp, #68]	; 0x44
 801070e:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8010712:	9114      	str	r1, [sp, #80]	; 0x50
 8010714:	9315      	str	r3, [sp, #84]	; 0x54
 8010716:	f9bd 50a0 	ldrsh.w	r5, [sp, #160]	; 0xa0
 801071a:	2a00      	cmp	r2, #0
 801071c:	d06a      	beq.n	80107f4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 801071e:	f898 3010 	ldrb.w	r3, [r8, #16]
 8010722:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8010724:	2b04      	cmp	r3, #4
 8010726:	bf14      	ite	ne
 8010728:	2301      	movne	r3, #1
 801072a:	2302      	moveq	r3, #2
 801072c:	4413      	add	r3, r2
 801072e:	f04f 0900 	mov.w	r9, #0
 8010732:	930f      	str	r3, [sp, #60]	; 0x3c
 8010734:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8010738:	464c      	mov	r4, r9
 801073a:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 801073e:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8010742:	4293      	cmp	r3, r2
 8010744:	f280 808f 	bge.w	8010866 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8010748:	2300      	movs	r3, #0
 801074a:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 801074e:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8010752:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010756:	429c      	cmp	r4, r3
 8010758:	d006      	beq.n	8010768 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 801075a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801075c:	f242 020b 	movw	r2, #8203	; 0x200b
 8010760:	4294      	cmp	r4, r2
 8010762:	bf18      	it	ne
 8010764:	4623      	movne	r3, r4
 8010766:	930d      	str	r3, [sp, #52]	; 0x34
 8010768:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801076a:	992d      	ldr	r1, [sp, #180]	; 0xb4
 801076c:	f8d8 2000 	ldr.w	r2, [r8]
 8010770:	428b      	cmp	r3, r1
 8010772:	db41      	blt.n	80107f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8010774:	6813      	ldr	r3, [r2, #0]
 8010776:	4610      	mov	r0, r2
 8010778:	695b      	ldr	r3, [r3, #20]
 801077a:	4798      	blx	r3
 801077c:	4604      	mov	r4, r0
 801077e:	f8d8 0000 	ldr.w	r0, [r8]
 8010782:	6803      	ldr	r3, [r0, #0]
 8010784:	aa1d      	add	r2, sp, #116	; 0x74
 8010786:	689e      	ldr	r6, [r3, #8]
 8010788:	4621      	mov	r1, r4
 801078a:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 801078e:	47b0      	blx	r6
 8010790:	901c      	str	r0, [sp, #112]	; 0x70
 8010792:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010796:	429c      	cmp	r4, r3
 8010798:	f000 80e9 	beq.w	801096e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 801079c:	f242 030b 	movw	r3, #8203	; 0x200b
 80107a0:	429c      	cmp	r4, r3
 80107a2:	f000 80e4 	beq.w	801096e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 80107a6:	2c00      	cmp	r4, #0
 80107a8:	f000 80f6 	beq.w	8010998 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 80107ac:	2c0a      	cmp	r4, #10
 80107ae:	d060      	beq.n	8010872 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 80107b0:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80107b2:	b36a      	cbz	r2, 8010810 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 80107b4:	8894      	ldrh	r4, [r2, #4]
 80107b6:	f1bb 0f00 	cmp.w	fp, #0
 80107ba:	d03b      	beq.n	8010834 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 80107bc:	f892 900d 	ldrb.w	r9, [r2, #13]
 80107c0:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80107c4:	f409 7380 	and.w	r3, r9, #256	; 0x100
 80107c8:	f892 900a 	ldrb.w	r9, [r2, #10]
 80107cc:	f1bb 0f01 	cmp.w	fp, #1
 80107d0:	ea49 0903 	orr.w	r9, r9, r3
 80107d4:	d134      	bne.n	8010840 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 80107d6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80107d8:	eba5 0509 	sub.w	r5, r5, r9
 80107dc:	2b00      	cmp	r3, #0
 80107de:	d14f      	bne.n	8010880 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 80107e0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80107e2:	eb09 0305 	add.w	r3, r9, r5
 80107e6:	4413      	add	r3, r2
 80107e8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80107ea:	f9b2 2000 	ldrsh.w	r2, [r2]
 80107ee:	4293      	cmp	r3, r2
 80107f0:	da51      	bge.n	8010896 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 80107f2:	e038      	b.n	8010866 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 80107f4:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80107f6:	e79a      	b.n	801072e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 80107f8:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 80107fc:	9301      	str	r3, [sp, #4]
 80107fe:	ab1d      	add	r3, sp, #116	; 0x74
 8010800:	9300      	str	r3, [sp, #0]
 8010802:	4659      	mov	r1, fp
 8010804:	ab1c      	add	r3, sp, #112	; 0x70
 8010806:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8010808:	f002 fee3 	bl	80135d2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 801080c:	4604      	mov	r4, r0
 801080e:	e7c0      	b.n	8010792 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8010810:	f8d8 0000 	ldr.w	r0, [r8]
 8010814:	6803      	ldr	r3, [r0, #0]
 8010816:	691b      	ldr	r3, [r3, #16]
 8010818:	4798      	blx	r3
 801081a:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801081e:	4298      	cmp	r0, r3
 8010820:	f000 80a5 	beq.w	801096e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8010824:	f242 030b 	movw	r3, #8203	; 0x200b
 8010828:	4298      	cmp	r0, r3
 801082a:	f000 80a0 	beq.w	801096e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 801082e:	f1bb 0f00 	cmp.w	fp, #0
 8010832:	d100      	bne.n	8010836 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8010834:	444d      	add	r5, r9
 8010836:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8010838:	2a00      	cmp	r2, #0
 801083a:	d1bf      	bne.n	80107bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 801083c:	4691      	mov	r9, r2
 801083e:	e096      	b.n	801096e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8010840:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010842:	2b00      	cmp	r3, #0
 8010844:	f000 80aa 	beq.w	801099c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8010848:	f1bb 0f00 	cmp.w	fp, #0
 801084c:	d118      	bne.n	8010880 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 801084e:	f8d8 0000 	ldr.w	r0, [r8]
 8010852:	990d      	ldr	r1, [sp, #52]	; 0x34
 8010854:	6803      	ldr	r3, [r0, #0]
 8010856:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010858:	4798      	blx	r3
 801085a:	4405      	add	r5, r0
 801085c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801085e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010860:	1aeb      	subs	r3, r5, r3
 8010862:	4293      	cmp	r3, r2
 8010864:	dd17      	ble.n	8010896 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8010866:	2c00      	cmp	r4, #0
 8010868:	f000 8096 	beq.w	8010998 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 801086c:	2c0a      	cmp	r4, #10
 801086e:	f040 8084 	bne.w	801097a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 8010872:	240a      	movs	r4, #10
 8010874:	fab4 f084 	clz	r0, r4
 8010878:	0940      	lsrs	r0, r0, #5
 801087a:	b01f      	add	sp, #124	; 0x7c
 801087c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010880:	f8d8 0000 	ldr.w	r0, [r8]
 8010884:	990d      	ldr	r1, [sp, #52]	; 0x34
 8010886:	6803      	ldr	r3, [r0, #0]
 8010888:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801088a:	4798      	blx	r3
 801088c:	f1bb 0f01 	cmp.w	fp, #1
 8010890:	eba5 0500 	sub.w	r5, r5, r0
 8010894:	d0a4      	beq.n	80107e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8010896:	981c      	ldr	r0, [sp, #112]	; 0x70
 8010898:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801089a:	f990 1009 	ldrsb.w	r1, [r0, #9]
 801089e:	f9b3 6000 	ldrsh.w	r6, [r3]
 80108a2:	7b43      	ldrb	r3, [r0, #13]
 80108a4:	015b      	lsls	r3, r3, #5
 80108a6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80108aa:	7983      	ldrb	r3, [r0, #6]
 80108ac:	4429      	add	r1, r5
 80108ae:	4313      	orrs	r3, r2
 80108b0:	440b      	add	r3, r1
 80108b2:	42b3      	cmp	r3, r6
 80108b4:	db5b      	blt.n	801096e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 80108b6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80108b8:	4299      	cmp	r1, r3
 80108ba:	da58      	bge.n	801096e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 80108bc:	f8d8 0000 	ldr.w	r0, [r8]
 80108c0:	6803      	ldr	r3, [r0, #0]
 80108c2:	42ae      	cmp	r6, r5
 80108c4:	bfc8      	it	gt
 80108c6:	1b76      	subgt	r6, r6, r5
 80108c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80108ca:	bfcc      	ite	gt
 80108cc:	b2b6      	uxthgt	r6, r6
 80108ce:	2600      	movle	r6, #0
 80108d0:	4798      	blx	r3
 80108d2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80108d4:	7b5a      	ldrb	r2, [r3, #13]
 80108d6:	00d1      	lsls	r1, r2, #3
 80108d8:	f401 7780 	and.w	r7, r1, #256	; 0x100
 80108dc:	7a19      	ldrb	r1, [r3, #8]
 80108de:	4339      	orrs	r1, r7
 80108e0:	0657      	lsls	r7, r2, #25
 80108e2:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 80108e4:	bf44      	itt	mi
 80108e6:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 80108ea:	b209      	sxthmi	r1, r1
 80108ec:	19c7      	adds	r7, r0, r7
 80108ee:	1a7f      	subs	r7, r7, r1
 80108f0:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80108f2:	b2bf      	uxth	r7, r7
 80108f4:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 80108f8:	fa0f fa87 	sxth.w	sl, r7
 80108fc:	4551      	cmp	r1, sl
 80108fe:	dd3a      	ble.n	8010976 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 8010900:	0112      	lsls	r2, r2, #4
 8010902:	79d8      	ldrb	r0, [r3, #7]
 8010904:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8010908:	4302      	orrs	r2, r0
 801090a:	4492      	add	sl, r2
 801090c:	4551      	cmp	r1, sl
 801090e:	dc2e      	bgt.n	801096e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8010910:	1bcf      	subs	r7, r1, r7
 8010912:	b2bf      	uxth	r7, r7
 8010914:	468a      	mov	sl, r1
 8010916:	9319      	str	r3, [sp, #100]	; 0x64
 8010918:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801091a:	f8d8 0000 	ldr.w	r0, [r8]
 801091e:	681a      	ldr	r2, [r3, #0]
 8010920:	6801      	ldr	r1, [r0, #0]
 8010922:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8010924:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8010926:	9313      	str	r3, [sp, #76]	; 0x4c
 8010928:	9218      	str	r2, [sp, #96]	; 0x60
 801092a:	6b89      	ldr	r1, [r1, #56]	; 0x38
 801092c:	4788      	blx	r1
 801092e:	f898 1006 	ldrb.w	r1, [r8, #6]
 8010932:	910b      	str	r1, [sp, #44]	; 0x2c
 8010934:	f898 100e 	ldrb.w	r1, [r8, #14]
 8010938:	910a      	str	r1, [sp, #40]	; 0x28
 801093a:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 801093e:	9109      	str	r1, [sp, #36]	; 0x24
 8010940:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8010942:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8010946:	9305      	str	r3, [sp, #20]
 8010948:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801094a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801094c:	9206      	str	r2, [sp, #24]
 801094e:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8010952:	e9cd 7303 	strd	r7, r3, [sp, #12]
 8010956:	e9cd a601 	strd	sl, r6, [sp, #4]
 801095a:	442e      	add	r6, r5
 801095c:	b236      	sxth	r6, r6
 801095e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8010960:	9600      	str	r6, [sp, #0]
 8010962:	681a      	ldr	r2, [r3, #0]
 8010964:	9916      	ldr	r1, [sp, #88]	; 0x58
 8010966:	685b      	ldr	r3, [r3, #4]
 8010968:	9811      	ldr	r0, [sp, #68]	; 0x44
 801096a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801096c:	47b0      	blx	r6
 801096e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010970:	3301      	adds	r3, #1
 8010972:	930e      	str	r3, [sp, #56]	; 0x38
 8010974:	e6e3      	b.n	801073e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 8010976:	2700      	movs	r7, #0
 8010978:	e7cd      	b.n	8010916 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 801097a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801097c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801097e:	3501      	adds	r5, #1
 8010980:	429d      	cmp	r5, r3
 8010982:	f6bf af77 	bge.w	8010874 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8010986:	4659      	mov	r1, fp
 8010988:	982c      	ldr	r0, [sp, #176]	; 0xb0
 801098a:	f7f4 ff61 	bl	8005850 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801098e:	4604      	mov	r4, r0
 8010990:	b110      	cbz	r0, 8010998 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 8010992:	280a      	cmp	r0, #10
 8010994:	d1f2      	bne.n	801097c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 8010996:	e76c      	b.n	8010872 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8010998:	2400      	movs	r4, #0
 801099a:	e76b      	b.n	8010874 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 801099c:	f1bb 0f00 	cmp.w	fp, #0
 80109a0:	f43f af5c 	beq.w	801085c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 80109a4:	e777      	b.n	8010896 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

080109a6 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 80109a6:	b530      	push	{r4, r5, lr}
 80109a8:	8a44      	ldrh	r4, [r0, #18]
 80109aa:	8ac5      	ldrh	r5, [r0, #22]
 80109ac:	82c3      	strh	r3, [r0, #22]
 80109ae:	442c      	add	r4, r5
 80109b0:	1ae4      	subs	r4, r4, r3
 80109b2:	8244      	strh	r4, [r0, #18]
 80109b4:	8b03      	ldrh	r3, [r0, #24]
 80109b6:	8a84      	ldrh	r4, [r0, #20]
 80109b8:	4422      	add	r2, r4
 80109ba:	440c      	add	r4, r1
 80109bc:	1a59      	subs	r1, r3, r1
 80109be:	8342      	strh	r2, [r0, #26]
 80109c0:	8284      	strh	r4, [r0, #20]
 80109c2:	8301      	strh	r1, [r0, #24]
 80109c4:	bd30      	pop	{r4, r5, pc}

080109c6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 80109c6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80109ca:	7a43      	ldrb	r3, [r0, #9]
 80109cc:	1eda      	subs	r2, r3, #3
 80109ce:	b087      	sub	sp, #28
 80109d0:	4604      	mov	r4, r0
 80109d2:	b2d2      	uxtb	r2, r2
 80109d4:	460f      	mov	r7, r1
 80109d6:	2900      	cmp	r1, #0
 80109d8:	d036      	beq.n	8010a48 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 80109da:	2a01      	cmp	r2, #1
 80109dc:	d932      	bls.n	8010a44 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 80109de:	1e58      	subs	r0, r3, #1
 80109e0:	f1d0 0b00 	rsbs	fp, r0, #0
 80109e4:	eb4b 0b00 	adc.w	fp, fp, r0
 80109e8:	1e99      	subs	r1, r3, #2
 80109ea:	424b      	negs	r3, r1
 80109ec:	414b      	adcs	r3, r1
 80109ee:	9303      	str	r3, [sp, #12]
 80109f0:	2300      	movs	r3, #0
 80109f2:	e9cd 3301 	strd	r3, r3, [sp, #4]
 80109f6:	2500      	movs	r5, #0
 80109f8:	8265      	strh	r5, [r4, #18]
 80109fa:	82a5      	strh	r5, [r4, #20]
 80109fc:	46a9      	mov	r9, r5
 80109fe:	f242 0a0b 	movw	sl, #8203	; 0x200b
 8010a02:	2300      	movs	r3, #0
 8010a04:	9305      	str	r3, [sp, #20]
 8010a06:	8823      	ldrh	r3, [r4, #0]
 8010a08:	2b20      	cmp	r3, #32
 8010a0a:	d02b      	beq.n	8010a64 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 8010a0c:	eba3 020a 	sub.w	r2, r3, sl
 8010a10:	4256      	negs	r6, r2
 8010a12:	4156      	adcs	r6, r2
 8010a14:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8010a18:	4293      	cmp	r3, r2
 8010a1a:	d004      	beq.n	8010a26 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 8010a1c:	4553      	cmp	r3, sl
 8010a1e:	bf16      	itet	ne
 8010a20:	4699      	movne	r9, r3
 8010a22:	2601      	moveq	r6, #1
 8010a24:	2600      	movne	r6, #0
 8010a26:	ab05      	add	r3, sp, #20
 8010a28:	68e2      	ldr	r2, [r4, #12]
 8010a2a:	7a21      	ldrb	r1, [r4, #8]
 8010a2c:	6860      	ldr	r0, [r4, #4]
 8010a2e:	f002 fd87 	bl	8013540 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010a32:	8020      	strh	r0, [r4, #0]
 8010a34:	b9c8      	cbnz	r0, 8010a6a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 8010a36:	8b22      	ldrh	r2, [r4, #24]
 8010a38:	2300      	movs	r3, #0
 8010a3a:	4611      	mov	r1, r2
 8010a3c:	4620      	mov	r0, r4
 8010a3e:	f7ff ffb2 	bl	80109a6 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8010a42:	e066      	b.n	8010b12 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 8010a44:	468b      	mov	fp, r1
 8010a46:	e7cf      	b.n	80109e8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 8010a48:	3b01      	subs	r3, #1
 8010a4a:	2a01      	cmp	r2, #1
 8010a4c:	bf8c      	ite	hi
 8010a4e:	2200      	movhi	r2, #0
 8010a50:	2201      	movls	r2, #1
 8010a52:	2b01      	cmp	r3, #1
 8010a54:	bf8c      	ite	hi
 8010a56:	2300      	movhi	r3, #0
 8010a58:	2301      	movls	r3, #1
 8010a5a:	9202      	str	r2, [sp, #8]
 8010a5c:	9301      	str	r3, [sp, #4]
 8010a5e:	9103      	str	r1, [sp, #12]
 8010a60:	468b      	mov	fp, r1
 8010a62:	e7c8      	b.n	80109f6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 8010a64:	4699      	mov	r9, r3
 8010a66:	2601      	movs	r6, #1
 8010a68:	e7dd      	b.n	8010a26 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 8010a6a:	8ae3      	ldrh	r3, [r4, #22]
 8010a6c:	280a      	cmp	r0, #10
 8010a6e:	f103 0301 	add.w	r3, r3, #1
 8010a72:	82e3      	strh	r3, [r4, #22]
 8010a74:	d0df      	beq.n	8010a36 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 8010a76:	9a05      	ldr	r2, [sp, #20]
 8010a78:	bb42      	cbnz	r2, 8010acc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 8010a7a:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010a7e:	4298      	cmp	r0, r3
 8010a80:	d001      	beq.n	8010a86 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 8010a82:	4550      	cmp	r0, sl
 8010a84:	d1bd      	bne.n	8010a02 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010a86:	8823      	ldrh	r3, [r4, #0]
 8010a88:	8b21      	ldrh	r1, [r4, #24]
 8010a8a:	2b20      	cmp	r3, #32
 8010a8c:	d001      	beq.n	8010a92 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 8010a8e:	4553      	cmp	r3, sl
 8010a90:	d131      	bne.n	8010af6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 8010a92:	2e00      	cmp	r6, #0
 8010a94:	bf0a      	itet	eq
 8010a96:	460d      	moveq	r5, r1
 8010a98:	4630      	movne	r0, r6
 8010a9a:	2001      	moveq	r0, #1
 8010a9c:	440a      	add	r2, r1
 8010a9e:	8aa3      	ldrh	r3, [r4, #20]
 8010aa0:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8010aa4:	b292      	uxth	r2, r2
 8010aa6:	8322      	strh	r2, [r4, #24]
 8010aa8:	4413      	add	r3, r2
 8010aaa:	2f00      	cmp	r7, #0
 8010aac:	d03a      	beq.n	8010b24 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 8010aae:	f1bb 0f00 	cmp.w	fp, #0
 8010ab2:	d102      	bne.n	8010aba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 8010ab4:	9903      	ldr	r1, [sp, #12]
 8010ab6:	b301      	cbz	r1, 8010afa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 8010ab8:	b1f8      	cbz	r0, 8010afa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 8010aba:	8ba1      	ldrh	r1, [r4, #28]
 8010abc:	4419      	add	r1, r3
 8010abe:	458c      	cmp	ip, r1
 8010ac0:	da2a      	bge.n	8010b18 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 8010ac2:	8a61      	ldrh	r1, [r4, #18]
 8010ac4:	b341      	cbz	r1, 8010b18 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 8010ac6:	4563      	cmp	r3, ip
 8010ac8:	dd9b      	ble.n	8010a02 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010aca:	e01c      	b.n	8010b06 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 8010acc:	8893      	ldrh	r3, [r2, #4]
 8010ace:	8023      	strh	r3, [r4, #0]
 8010ad0:	f892 800d 	ldrb.w	r8, [r2, #13]
 8010ad4:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8010ad8:	f408 7080 	and.w	r0, r8, #256	; 0x100
 8010adc:	f892 800a 	ldrb.w	r8, [r2, #10]
 8010ae0:	ea48 0800 	orr.w	r8, r8, r0
 8010ae4:	68e0      	ldr	r0, [r4, #12]
 8010ae6:	6803      	ldr	r3, [r0, #0]
 8010ae8:	4649      	mov	r1, r9
 8010aea:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010aec:	4798      	blx	r3
 8010aee:	eb08 0200 	add.w	r2, r8, r0
 8010af2:	b292      	uxth	r2, r2
 8010af4:	e7c7      	b.n	8010a86 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 8010af6:	2000      	movs	r0, #0
 8010af8:	e7d0      	b.n	8010a9c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 8010afa:	4563      	cmp	r3, ip
 8010afc:	dd81      	ble.n	8010a02 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010afe:	8a63      	ldrh	r3, [r4, #18]
 8010b00:	2b00      	cmp	r3, #0
 8010b02:	f43f af7e 	beq.w	8010a02 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010b06:	2301      	movs	r3, #1
 8010b08:	77a3      	strb	r3, [r4, #30]
 8010b0a:	8ba2      	ldrh	r2, [r4, #28]
 8010b0c:	8b63      	ldrh	r3, [r4, #26]
 8010b0e:	4413      	add	r3, r2
 8010b10:	8363      	strh	r3, [r4, #26]
 8010b12:	b007      	add	sp, #28
 8010b14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010b18:	2300      	movs	r3, #0
 8010b1a:	4611      	mov	r1, r2
 8010b1c:	4620      	mov	r0, r4
 8010b1e:	f7ff ff42 	bl	80109a6 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8010b22:	e76e      	b.n	8010a02 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010b24:	4563      	cmp	r3, ip
 8010b26:	dd14      	ble.n	8010b52 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 8010b28:	9b02      	ldr	r3, [sp, #8]
 8010b2a:	b113      	cbz	r3, 8010b32 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 8010b2c:	2301      	movs	r3, #1
 8010b2e:	460a      	mov	r2, r1
 8010b30:	e783      	b.n	8010a3a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 8010b32:	9b01      	ldr	r3, [sp, #4]
 8010b34:	2b00      	cmp	r3, #0
 8010b36:	f43f af64 	beq.w	8010a02 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010b3a:	2800      	cmp	r0, #0
 8010b3c:	f47f af61 	bne.w	8010a02 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010b40:	b116      	cbz	r6, 8010b48 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 8010b42:	2301      	movs	r3, #1
 8010b44:	462a      	mov	r2, r5
 8010b46:	e779      	b.n	8010a3c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 8010b48:	8a63      	ldrh	r3, [r4, #18]
 8010b4a:	2b00      	cmp	r3, #0
 8010b4c:	f43f af59 	beq.w	8010a02 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010b50:	e7df      	b.n	8010b12 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 8010b52:	2800      	cmp	r0, #0
 8010b54:	f47f af55 	bne.w	8010a02 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010b58:	2e00      	cmp	r6, #0
 8010b5a:	f43f af52 	beq.w	8010a02 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010b5e:	2301      	movs	r3, #1
 8010b60:	462a      	mov	r2, r5
 8010b62:	e7db      	b.n	8010b1c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

08010b64 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8010b64:	b530      	push	{r4, r5, lr}
 8010b66:	4605      	mov	r5, r0
 8010b68:	b08b      	sub	sp, #44	; 0x2c
 8010b6a:	b191      	cbz	r1, 8010b92 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 8010b6c:	e9cd 3100 	strd	r3, r1, [sp]
 8010b70:	4613      	mov	r3, r2
 8010b72:	4601      	mov	r1, r0
 8010b74:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 8010b78:	a802      	add	r0, sp, #8
 8010b7a:	f7ff fd09 	bl	8010590 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8010b7e:	2401      	movs	r4, #1
 8010b80:	2100      	movs	r1, #0
 8010b82:	a802      	add	r0, sp, #8
 8010b84:	f7ff ff1f 	bl	80109c6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8010b88:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8010b8c:	b163      	cbz	r3, 8010ba8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8010b8e:	3401      	adds	r4, #1
 8010b90:	e7f6      	b.n	8010b80 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 8010b92:	f002 fda3 	bl	80136dc <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010b96:	2401      	movs	r4, #1
 8010b98:	280a      	cmp	r0, #10
 8010b9a:	4628      	mov	r0, r5
 8010b9c:	bf08      	it	eq
 8010b9e:	3401      	addeq	r4, #1
 8010ba0:	f002 fd9c 	bl	80136dc <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010ba4:	2800      	cmp	r0, #0
 8010ba6:	d1f7      	bne.n	8010b98 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8010ba8:	b2a0      	uxth	r0, r4
 8010baa:	b00b      	add	sp, #44	; 0x2c
 8010bac:	bd30      	pop	{r4, r5, pc}

08010bae <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8010bae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010bb2:	b0e5      	sub	sp, #404	; 0x194
 8010bb4:	4689      	mov	r9, r1
 8010bb6:	f8dd a1b8 	ldr.w	sl, [sp, #440]	; 0x1b8
 8010bba:	900a      	str	r0, [sp, #40]	; 0x28
 8010bbc:	461c      	mov	r4, r3
 8010bbe:	f1ba 0f00 	cmp.w	sl, #0
 8010bc2:	f000 80b4 	beq.w	8010d2e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010bc6:	681b      	ldr	r3, [r3, #0]
 8010bc8:	2b00      	cmp	r3, #0
 8010bca:	f000 80b0 	beq.w	8010d2e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010bce:	7ba3      	ldrb	r3, [r4, #14]
 8010bd0:	2b00      	cmp	r3, #0
 8010bd2:	f000 80ac 	beq.w	8010d2e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010bd6:	6810      	ldr	r0, [r2, #0]
 8010bd8:	6851      	ldr	r1, [r2, #4]
 8010bda:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 8010bde:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8010be2:	f10d 0834 	add.w	r8, sp, #52	; 0x34
 8010be6:	4643      	mov	r3, r8
 8010be8:	c303      	stmia	r3!, {r0, r1}
 8010bea:	2500      	movs	r5, #0
 8010bec:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 8010bf0:	79a2      	ldrb	r2, [r4, #6]
 8010bf2:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8010bf6:	a90f      	add	r1, sp, #60	; 0x3c
 8010bf8:	4640      	mov	r0, r8
 8010bfa:	950f      	str	r5, [sp, #60]	; 0x3c
 8010bfc:	f7ff fd40 	bl	8010680 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8010c00:	a90f      	add	r1, sp, #60	; 0x3c
 8010c02:	4608      	mov	r0, r1
 8010c04:	79a2      	ldrb	r2, [r4, #6]
 8010c06:	af19      	add	r7, sp, #100	; 0x64
 8010c08:	f7ff fd3a 	bl	8010680 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8010c0c:	4638      	mov	r0, r7
 8010c0e:	f002 f93a 	bl	8012e86 <_ZN8touchgfx12TextProviderC1Ev>
 8010c12:	6820      	ldr	r0, [r4, #0]
 8010c14:	6803      	ldr	r3, [r0, #0]
 8010c16:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010c18:	4798      	blx	r3
 8010c1a:	4606      	mov	r6, r0
 8010c1c:	6820      	ldr	r0, [r4, #0]
 8010c1e:	6803      	ldr	r3, [r0, #0]
 8010c20:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8010c22:	4798      	blx	r3
 8010c24:	4633      	mov	r3, r6
 8010c26:	9000      	str	r0, [sp, #0]
 8010c28:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 8010c2a:	4651      	mov	r1, sl
 8010c2c:	4638      	mov	r0, r7
 8010c2e:	f002 f985 	bl	8012f3c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010c32:	6820      	ldr	r0, [r4, #0]
 8010c34:	7923      	ldrb	r3, [r4, #4]
 8010c36:	9308      	str	r3, [sp, #32]
 8010c38:	6803      	ldr	r3, [r0, #0]
 8010c3a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010c3c:	4798      	blx	r3
 8010c3e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8010c42:	181e      	adds	r6, r3, r0
 8010c44:	42ae      	cmp	r6, r5
 8010c46:	dd06      	ble.n	8010c56 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xa8>
 8010c48:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 8010c4c:	4282      	cmp	r2, r0
 8010c4e:	bfa4      	itt	ge
 8010c50:	189d      	addge	r5, r3, r2
 8010c52:	fb95 f5f6 	sdivge	r5, r5, r6
 8010c56:	a832      	add	r0, sp, #200	; 0xc8
 8010c58:	f002 f915 	bl	8012e86 <_ZN8touchgfx12TextProviderC1Ev>
 8010c5c:	7c23      	ldrb	r3, [r4, #16]
 8010c5e:	b17b      	cbz	r3, 8010c80 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd2>
 8010c60:	6820      	ldr	r0, [r4, #0]
 8010c62:	6803      	ldr	r3, [r0, #0]
 8010c64:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010c66:	4798      	blx	r3
 8010c68:	4683      	mov	fp, r0
 8010c6a:	6820      	ldr	r0, [r4, #0]
 8010c6c:	6803      	ldr	r3, [r0, #0]
 8010c6e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8010c70:	4798      	blx	r3
 8010c72:	465b      	mov	r3, fp
 8010c74:	9000      	str	r0, [sp, #0]
 8010c76:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 8010c78:	4651      	mov	r1, sl
 8010c7a:	a832      	add	r0, sp, #200	; 0xc8
 8010c7c:	f002 f95e 	bl	8012f3c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010c80:	7be1      	ldrb	r1, [r4, #15]
 8010c82:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8010c86:	7963      	ldrb	r3, [r4, #5]
 8010c88:	1a52      	subs	r2, r2, r1
 8010c8a:	7c21      	ldrb	r1, [r4, #16]
 8010c8c:	9101      	str	r1, [sp, #4]
 8010c8e:	6821      	ldr	r1, [r4, #0]
 8010c90:	9100      	str	r1, [sp, #0]
 8010c92:	b292      	uxth	r2, r2
 8010c94:	a932      	add	r1, sp, #200	; 0xc8
 8010c96:	a811      	add	r0, sp, #68	; 0x44
 8010c98:	f7ff fc7a 	bl	8010590 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8010c9c:	7c23      	ldrb	r3, [r4, #16]
 8010c9e:	b9bb      	cbnz	r3, 8010cd0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>
 8010ca0:	fa1f fa86 	uxth.w	sl, r6
 8010ca4:	2d00      	cmp	r5, #0
 8010ca6:	dd45      	ble.n	8010d34 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 8010ca8:	4638      	mov	r0, r7
 8010caa:	f002 fd17 	bl	80136dc <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010cae:	2800      	cmp	r0, #0
 8010cb0:	d03d      	beq.n	8010d2e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010cb2:	280a      	cmp	r0, #10
 8010cb4:	d1f6      	bne.n	8010ca4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 8010cb6:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8010cba:	4453      	add	r3, sl
 8010cbc:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8010cc0:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 8010cc4:	eba3 030a 	sub.w	r3, r3, sl
 8010cc8:	3d01      	subs	r5, #1
 8010cca:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8010cce:	e7e9      	b.n	8010ca4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 8010cd0:	0073      	lsls	r3, r6, #1
 8010cd2:	9309      	str	r3, [sp, #36]	; 0x24
 8010cd4:	f64f 7bff 	movw	fp, #65535	; 0xffff
 8010cd8:	fa1f fa86 	uxth.w	sl, r6
 8010cdc:	2d00      	cmp	r5, #0
 8010cde:	dd29      	ble.n	8010d34 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 8010ce0:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8010ce4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010ce6:	428b      	cmp	r3, r1
 8010ce8:	bfd4      	ite	le
 8010cea:	2100      	movle	r1, #0
 8010cec:	2101      	movgt	r1, #1
 8010cee:	a811      	add	r0, sp, #68	; 0x44
 8010cf0:	f7ff fe69 	bl	80109c6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8010cf4:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 8010cf8:	3b01      	subs	r3, #1
 8010cfa:	b29b      	uxth	r3, r3
 8010cfc:	455b      	cmp	r3, fp
 8010cfe:	930b      	str	r3, [sp, #44]	; 0x2c
 8010d00:	d005      	beq.n	8010d0e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x160>
 8010d02:	7961      	ldrb	r1, [r4, #5]
 8010d04:	4638      	mov	r0, r7
 8010d06:	f7f4 fda3 	bl	8005850 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8010d0a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8010d0c:	e7f4      	b.n	8010cf8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x14a>
 8010d0e:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8010d12:	4453      	add	r3, sl
 8010d14:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8010d18:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 8010d1c:	eba3 030a 	sub.w	r3, r3, sl
 8010d20:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8010d24:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010d28:	3d01      	subs	r5, #1
 8010d2a:	2b00      	cmp	r3, #0
 8010d2c:	d1d6      	bne.n	8010cdc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12e>
 8010d2e:	b065      	add	sp, #404	; 0x194
 8010d30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010d34:	0075      	lsls	r5, r6, #1
 8010d36:	f04f 0a00 	mov.w	sl, #0
 8010d3a:	7c23      	ldrb	r3, [r4, #16]
 8010d3c:	2b00      	cmp	r3, #0
 8010d3e:	d066      	beq.n	8010e0e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x260>
 8010d40:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8010d44:	428d      	cmp	r5, r1
 8010d46:	bfd4      	ite	le
 8010d48:	2100      	movle	r1, #0
 8010d4a:	2101      	movgt	r1, #1
 8010d4c:	a811      	add	r0, sp, #68	; 0x44
 8010d4e:	f7ff fe3a 	bl	80109c6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8010d52:	9b08      	ldr	r3, [sp, #32]
 8010d54:	2b00      	cmp	r3, #0
 8010d56:	d055      	beq.n	8010e04 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8010d58:	f894 b010 	ldrb.w	fp, [r4, #16]
 8010d5c:	2264      	movs	r2, #100	; 0x64
 8010d5e:	4639      	mov	r1, r7
 8010d60:	a84b      	add	r0, sp, #300	; 0x12c
 8010d62:	f010 f88b 	bl	8020e7c <memcpy>
 8010d66:	f1bb 0f00 	cmp.w	fp, #0
 8010d6a:	d058      	beq.n	8010e1e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x270>
 8010d6c:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8010d70:	7922      	ldrb	r2, [r4, #4]
 8010d72:	2a01      	cmp	r2, #1
 8010d74:	d13c      	bne.n	8010df0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 8010d76:	f9bd 0040 	ldrsh.w	r0, [sp, #64]	; 0x40
 8010d7a:	1ac0      	subs	r0, r0, r3
 8010d7c:	2302      	movs	r3, #2
 8010d7e:	fb90 f0f3 	sdiv	r0, r0, r3
 8010d82:	b200      	sxth	r0, r0
 8010d84:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8010d88:	4418      	add	r0, r3
 8010d8a:	7c23      	ldrb	r3, [r4, #16]
 8010d8c:	b200      	sxth	r0, r0
 8010d8e:	2b00      	cmp	r3, #0
 8010d90:	d03a      	beq.n	8010e08 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25a>
 8010d92:	f8bd 2056 	ldrh.w	r2, [sp, #86]	; 0x56
 8010d96:	f89d 1062 	ldrb.w	r1, [sp, #98]	; 0x62
 8010d9a:	9000      	str	r0, [sp, #0]
 8010d9c:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8010da0:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 8010da4:	980a      	ldr	r0, [sp, #40]	; 0x28
 8010da6:	e9cd a703 	strd	sl, r7, [sp, #12]
 8010daa:	e9cd 8401 	strd	r8, r4, [sp, #4]
 8010dae:	464a      	mov	r2, r9
 8010db0:	2100      	movs	r1, #0
 8010db2:	f7ff fc96 	bl	80106e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8010db6:	2800      	cmp	r0, #0
 8010db8:	d1b9      	bne.n	8010d2e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010dba:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8010dbe:	b2b2      	uxth	r2, r6
 8010dc0:	4611      	mov	r1, r2
 8010dc2:	4413      	add	r3, r2
 8010dc4:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8010dc8:	1a52      	subs	r2, r2, r1
 8010dca:	7c21      	ldrb	r1, [r4, #16]
 8010dcc:	b21b      	sxth	r3, r3
 8010dce:	b212      	sxth	r2, r2
 8010dd0:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8010dd4:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 8010dd8:	b109      	cbz	r1, 8010dde <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x230>
 8010dda:	42b2      	cmp	r2, r6
 8010ddc:	dba7      	blt.n	8010d2e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010dde:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 8010de2:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 8010de6:	440a      	add	r2, r1
 8010de8:	b212      	sxth	r2, r2
 8010dea:	4293      	cmp	r3, r2
 8010dec:	dda5      	ble.n	8010d3a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x18c>
 8010dee:	e79e      	b.n	8010d2e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010df0:	2a02      	cmp	r2, #2
 8010df2:	d105      	bne.n	8010e00 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8010df4:	7be2      	ldrb	r2, [r4, #15]
 8010df6:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 8010dfa:	1a80      	subs	r0, r0, r2
 8010dfc:	1ac0      	subs	r0, r0, r3
 8010dfe:	e7c0      	b.n	8010d82 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d4>
 8010e00:	2000      	movs	r0, #0
 8010e02:	e7bf      	b.n	8010d84 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 8010e04:	7be0      	ldrb	r0, [r4, #15]
 8010e06:	e7bd      	b.n	8010d84 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 8010e08:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8010e0c:	e7c3      	b.n	8010d96 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e8>
 8010e0e:	9b08      	ldr	r3, [sp, #32]
 8010e10:	2b00      	cmp	r3, #0
 8010e12:	d0f7      	beq.n	8010e04 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8010e14:	2264      	movs	r2, #100	; 0x64
 8010e16:	4639      	mov	r1, r7
 8010e18:	a84b      	add	r0, sp, #300	; 0x12c
 8010e1a:	f010 f82f 	bl	8020e7c <memcpy>
 8010e1e:	2300      	movs	r3, #0
 8010e20:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8010e24:	6821      	ldr	r1, [r4, #0]
 8010e26:	a84b      	add	r0, sp, #300	; 0x12c
 8010e28:	f7ff fbee 	bl	8010608 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8010e2c:	b203      	sxth	r3, r0
 8010e2e:	e79f      	b.n	8010d70 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c2>

08010e30 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8010e30:	2b03      	cmp	r3, #3
 8010e32:	d818      	bhi.n	8010e66 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8010e34:	e8df f003 	tbb	[pc, r3]
 8010e38:	130d0602 	.word	0x130d0602
 8010e3c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8010e40:	1850      	adds	r0, r2, r1
 8010e42:	4770      	bx	lr
 8010e44:	8803      	ldrh	r3, [r0, #0]
 8010e46:	8880      	ldrh	r0, [r0, #4]
 8010e48:	4418      	add	r0, r3
 8010e4a:	b200      	sxth	r0, r0
 8010e4c:	1a80      	subs	r0, r0, r2
 8010e4e:	3801      	subs	r0, #1
 8010e50:	4770      	bx	lr
 8010e52:	8803      	ldrh	r3, [r0, #0]
 8010e54:	8880      	ldrh	r0, [r0, #4]
 8010e56:	4418      	add	r0, r3
 8010e58:	b200      	sxth	r0, r0
 8010e5a:	1a40      	subs	r0, r0, r1
 8010e5c:	e7f7      	b.n	8010e4e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8010e5e:	f9b0 0000 	ldrsh.w	r0, [r0]
 8010e62:	4410      	add	r0, r2
 8010e64:	4770      	bx	lr
 8010e66:	2000      	movs	r0, #0
 8010e68:	4770      	bx	lr

08010e6a <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8010e6a:	2b03      	cmp	r3, #3
 8010e6c:	d817      	bhi.n	8010e9e <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8010e6e:	e8df f003 	tbb	[pc, r3]
 8010e72:	0602      	.short	0x0602
 8010e74:	1009      	.short	0x1009
 8010e76:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8010e7a:	1850      	adds	r0, r2, r1
 8010e7c:	4770      	bx	lr
 8010e7e:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8010e82:	e7fa      	b.n	8010e7a <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8010e84:	8843      	ldrh	r3, [r0, #2]
 8010e86:	88c0      	ldrh	r0, [r0, #6]
 8010e88:	4418      	add	r0, r3
 8010e8a:	b200      	sxth	r0, r0
 8010e8c:	1a80      	subs	r0, r0, r2
 8010e8e:	3801      	subs	r0, #1
 8010e90:	4770      	bx	lr
 8010e92:	8843      	ldrh	r3, [r0, #2]
 8010e94:	88c0      	ldrh	r0, [r0, #6]
 8010e96:	4418      	add	r0, r3
 8010e98:	b200      	sxth	r0, r0
 8010e9a:	1a40      	subs	r0, r0, r1
 8010e9c:	e7f7      	b.n	8010e8e <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8010e9e:	2000      	movs	r0, #0
 8010ea0:	4770      	bx	lr
	...

08010ea4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8010ea4:	4b01      	ldr	r3, [pc, #4]	; (8010eac <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8010ea6:	2200      	movs	r2, #0
 8010ea8:	601a      	str	r2, [r3, #0]
 8010eaa:	4770      	bx	lr
 8010eac:	20017460 	.word	0x20017460

08010eb0 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8010eb0:	4603      	mov	r3, r0
 8010eb2:	b1c8      	cbz	r0, 8010ee8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8010eb4:	0c02      	lsrs	r2, r0, #16
 8010eb6:	0412      	lsls	r2, r2, #16
 8010eb8:	b9a2      	cbnz	r2, 8010ee4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8010eba:	0403      	lsls	r3, r0, #16
 8010ebc:	2010      	movs	r0, #16
 8010ebe:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8010ec2:	bf04      	itt	eq
 8010ec4:	021b      	lsleq	r3, r3, #8
 8010ec6:	3008      	addeq	r0, #8
 8010ec8:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8010ecc:	bf04      	itt	eq
 8010ece:	011b      	lsleq	r3, r3, #4
 8010ed0:	3004      	addeq	r0, #4
 8010ed2:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8010ed6:	bf04      	itt	eq
 8010ed8:	009b      	lsleq	r3, r3, #2
 8010eda:	3002      	addeq	r0, #2
 8010edc:	2b00      	cmp	r3, #0
 8010ede:	db04      	blt.n	8010eea <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8010ee0:	3001      	adds	r0, #1
 8010ee2:	4770      	bx	lr
 8010ee4:	2000      	movs	r0, #0
 8010ee6:	e7ea      	b.n	8010ebe <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8010ee8:	2020      	movs	r0, #32
 8010eea:	4770      	bx	lr

08010eec <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8010eec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010ef0:	b087      	sub	sp, #28
 8010ef2:	4681      	mov	r9, r0
 8010ef4:	4698      	mov	r8, r3
 8010ef6:	4610      	mov	r0, r2
 8010ef8:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 8010efc:	460d      	mov	r5, r1
 8010efe:	b981      	cbnz	r1, 8010f22 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 8010f00:	b14b      	cbz	r3, 8010f16 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 8010f02:	460b      	mov	r3, r1
 8010f04:	e9cd 4700 	strd	r4, r7, [sp]
 8010f08:	464a      	mov	r2, r9
 8010f0a:	4641      	mov	r1, r8
 8010f0c:	f7ff ffee 	bl	8010eec <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010f10:	b007      	add	sp, #28
 8010f12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010f16:	f04f 33ff 	mov.w	r3, #4294967295
 8010f1a:	603b      	str	r3, [r7, #0]
 8010f1c:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8010f20:	e7f6      	b.n	8010f10 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 8010f22:	fa32 fa01 	lsrs.w	sl, r2, r1
 8010f26:	d107      	bne.n	8010f38 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 8010f28:	fb09 f602 	mul.w	r6, r9, r2
 8010f2c:	fbb6 f0f4 	udiv	r0, r6, r4
 8010f30:	fb04 6610 	mls	r6, r4, r0, r6
 8010f34:	603e      	str	r6, [r7, #0]
 8010f36:	e7eb      	b.n	8010f10 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 8010f38:	2601      	movs	r6, #1
 8010f3a:	408e      	lsls	r6, r1
 8010f3c:	3e01      	subs	r6, #1
 8010f3e:	4016      	ands	r6, r2
 8010f40:	fa09 fb01 	lsl.w	fp, r9, r1
 8010f44:	4630      	mov	r0, r6
 8010f46:	fbbb f3f4 	udiv	r3, fp, r4
 8010f4a:	9302      	str	r3, [sp, #8]
 8010f4c:	fb0a f303 	mul.w	r3, sl, r3
 8010f50:	9303      	str	r3, [sp, #12]
 8010f52:	f7ff ffad 	bl	8010eb0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8010f56:	464a      	mov	r2, r9
 8010f58:	460b      	mov	r3, r1
 8010f5a:	e9cd 4700 	strd	r4, r7, [sp]
 8010f5e:	4601      	mov	r1, r0
 8010f60:	4630      	mov	r0, r6
 8010f62:	f7ff ffc3 	bl	8010eec <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010f66:	9b02      	ldr	r3, [sp, #8]
 8010f68:	fb04 bb13 	mls	fp, r4, r3, fp
 8010f6c:	4606      	mov	r6, r0
 8010f6e:	4658      	mov	r0, fp
 8010f70:	eb05 0108 	add.w	r1, r5, r8
 8010f74:	f7ff ff9c 	bl	8010eb0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8010f78:	ab05      	add	r3, sp, #20
 8010f7a:	e9cd 4300 	strd	r4, r3, [sp]
 8010f7e:	465a      	mov	r2, fp
 8010f80:	4603      	mov	r3, r0
 8010f82:	4650      	mov	r0, sl
 8010f84:	f7ff ffb2 	bl	8010eec <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010f88:	6839      	ldr	r1, [r7, #0]
 8010f8a:	9a05      	ldr	r2, [sp, #20]
 8010f8c:	9b03      	ldr	r3, [sp, #12]
 8010f8e:	4411      	add	r1, r2
 8010f90:	fbb1 f2f4 	udiv	r2, r1, r4
 8010f94:	18d3      	adds	r3, r2, r3
 8010f96:	441e      	add	r6, r3
 8010f98:	fb04 1412 	mls	r4, r4, r2, r1
 8010f9c:	4430      	add	r0, r6
 8010f9e:	603c      	str	r4, [r7, #0]
 8010fa0:	e7b6      	b.n	8010f10 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

08010fa2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8010fa2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010fa6:	b085      	sub	sp, #20
 8010fa8:	f1b0 0900 	subs.w	r9, r0, #0
 8010fac:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8010fae:	461d      	mov	r5, r3
 8010fb0:	bfbf      	itttt	lt
 8010fb2:	6823      	ldrlt	r3, [r4, #0]
 8010fb4:	425b      	neglt	r3, r3
 8010fb6:	f1c9 0900 	rsblt	r9, r9, #0
 8010fba:	6023      	strlt	r3, [r4, #0]
 8010fbc:	bfb4      	ite	lt
 8010fbe:	f04f 36ff 	movlt.w	r6, #4294967295
 8010fc2:	2601      	movge	r6, #1
 8010fc4:	2a00      	cmp	r2, #0
 8010fc6:	4617      	mov	r7, r2
 8010fc8:	da04      	bge.n	8010fd4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8010fca:	6823      	ldr	r3, [r4, #0]
 8010fcc:	425b      	negs	r3, r3
 8010fce:	4257      	negs	r7, r2
 8010fd0:	4276      	negs	r6, r6
 8010fd2:	6023      	str	r3, [r4, #0]
 8010fd4:	2d00      	cmp	r5, #0
 8010fd6:	4638      	mov	r0, r7
 8010fd8:	bfba      	itte	lt
 8010fda:	426d      	neglt	r5, r5
 8010fdc:	f04f 38ff 	movlt.w	r8, #4294967295
 8010fe0:	f04f 0801 	movge.w	r8, #1
 8010fe4:	f7ff ff64 	bl	8010eb0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8010fe8:	ab03      	add	r3, sp, #12
 8010fea:	e9cd 5300 	strd	r5, r3, [sp]
 8010fee:	463a      	mov	r2, r7
 8010ff0:	4603      	mov	r3, r0
 8010ff2:	4648      	mov	r0, r9
 8010ff4:	f7ff ff7a 	bl	8010eec <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010ff8:	6823      	ldr	r3, [r4, #0]
 8010ffa:	9a03      	ldr	r2, [sp, #12]
 8010ffc:	4546      	cmp	r6, r8
 8010ffe:	441a      	add	r2, r3
 8011000:	fb92 f3f5 	sdiv	r3, r2, r5
 8011004:	4418      	add	r0, r3
 8011006:	bf18      	it	ne
 8011008:	4240      	negne	r0, r0
 801100a:	fb05 2313 	mls	r3, r5, r3, r2
 801100e:	1c72      	adds	r2, r6, #1
 8011010:	6023      	str	r3, [r4, #0]
 8011012:	d105      	bne.n	8011020 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8011014:	2b00      	cmp	r3, #0
 8011016:	f1c3 0200 	rsb	r2, r3, #0
 801101a:	db0b      	blt.n	8011034 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 801101c:	6022      	str	r2, [r4, #0]
 801101e:	e006      	b.n	801102e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8011020:	2e01      	cmp	r6, #1
 8011022:	d104      	bne.n	801102e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8011024:	2b00      	cmp	r3, #0
 8011026:	da02      	bge.n	801102e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8011028:	442b      	add	r3, r5
 801102a:	3801      	subs	r0, #1
 801102c:	6023      	str	r3, [r4, #0]
 801102e:	b005      	add	sp, #20
 8011030:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011034:	3801      	subs	r0, #1
 8011036:	1b52      	subs	r2, r2, r5
 8011038:	e7f0      	b.n	801101c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

0801103c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 801103c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8011040:	4c1c      	ldr	r4, [pc, #112]	; (80110b4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8011042:	6807      	ldr	r7, [r0, #0]
 8011044:	69a3      	ldr	r3, [r4, #24]
 8011046:	4605      	mov	r5, r0
 8011048:	b92b      	cbnz	r3, 8011056 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 801104a:	6840      	ldr	r0, [r0, #4]
 801104c:	e9c5 7000 	strd	r7, r0, [r5]
 8011050:	b004      	add	sp, #16
 8011052:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011056:	68a2      	ldr	r2, [r4, #8]
 8011058:	6820      	ldr	r0, [r4, #0]
 801105a:	ae04      	add	r6, sp, #16
 801105c:	f04f 0802 	mov.w	r8, #2
 8011060:	fb93 f1f8 	sdiv	r1, r3, r8
 8011064:	440a      	add	r2, r1
 8011066:	f846 2d04 	str.w	r2, [r6, #-4]!
 801106a:	69e1      	ldr	r1, [r4, #28]
 801106c:	9600      	str	r6, [sp, #0]
 801106e:	463a      	mov	r2, r7
 8011070:	f7ff ff97 	bl	8010fa2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8011074:	69a3      	ldr	r3, [r4, #24]
 8011076:	686a      	ldr	r2, [r5, #4]
 8011078:	6a21      	ldr	r1, [r4, #32]
 801107a:	9600      	str	r6, [sp, #0]
 801107c:	4607      	mov	r7, r0
 801107e:	6860      	ldr	r0, [r4, #4]
 8011080:	f7ff ff8f 	bl	8010fa2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8011084:	6962      	ldr	r2, [r4, #20]
 8011086:	69a3      	ldr	r3, [r4, #24]
 8011088:	fb93 f8f8 	sdiv	r8, r3, r8
 801108c:	4442      	add	r2, r8
 801108e:	9203      	str	r2, [sp, #12]
 8011090:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8011092:	682a      	ldr	r2, [r5, #0]
 8011094:	9600      	str	r6, [sp, #0]
 8011096:	4407      	add	r7, r0
 8011098:	68e0      	ldr	r0, [r4, #12]
 801109a:	f7ff ff82 	bl	8010fa2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801109e:	9600      	str	r6, [sp, #0]
 80110a0:	4680      	mov	r8, r0
 80110a2:	69a3      	ldr	r3, [r4, #24]
 80110a4:	686a      	ldr	r2, [r5, #4]
 80110a6:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 80110a8:	6920      	ldr	r0, [r4, #16]
 80110aa:	f7ff ff7a 	bl	8010fa2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80110ae:	4440      	add	r0, r8
 80110b0:	e7cc      	b.n	801104c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 80110b2:	bf00      	nop
 80110b4:	20017464 	.word	0x20017464

080110b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 80110b8:	4b07      	ldr	r3, [pc, #28]	; (80110d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 80110ba:	781b      	ldrb	r3, [r3, #0]
 80110bc:	2b01      	cmp	r3, #1
 80110be:	d109      	bne.n	80110d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 80110c0:	f9b1 3000 	ldrsh.w	r3, [r1]
 80110c4:	f9b0 2000 	ldrsh.w	r2, [r0]
 80110c8:	8003      	strh	r3, [r0, #0]
 80110ca:	4b04      	ldr	r3, [pc, #16]	; (80110dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 80110cc:	881b      	ldrh	r3, [r3, #0]
 80110ce:	3b01      	subs	r3, #1
 80110d0:	1a9b      	subs	r3, r3, r2
 80110d2:	800b      	strh	r3, [r1, #0]
 80110d4:	4770      	bx	lr
 80110d6:	bf00      	nop
 80110d8:	20017448 	.word	0x20017448
 80110dc:	20017444 	.word	0x20017444

080110e0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 80110e0:	b510      	push	{r4, lr}
 80110e2:	4b07      	ldr	r3, [pc, #28]	; (8011100 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 80110e4:	781b      	ldrb	r3, [r3, #0]
 80110e6:	2b01      	cmp	r3, #1
 80110e8:	d108      	bne.n	80110fc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 80110ea:	4b06      	ldr	r3, [pc, #24]	; (8011104 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 80110ec:	880c      	ldrh	r4, [r1, #0]
 80110ee:	881b      	ldrh	r3, [r3, #0]
 80110f0:	f9b0 2000 	ldrsh.w	r2, [r0]
 80110f4:	3b01      	subs	r3, #1
 80110f6:	1b1b      	subs	r3, r3, r4
 80110f8:	8003      	strh	r3, [r0, #0]
 80110fa:	800a      	strh	r2, [r1, #0]
 80110fc:	bd10      	pop	{r4, pc}
 80110fe:	bf00      	nop
 8011100:	20017448 	.word	0x20017448
 8011104:	20017444 	.word	0x20017444

08011108 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8011108:	b510      	push	{r4, lr}
 801110a:	4b0a      	ldr	r3, [pc, #40]	; (8011134 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 801110c:	781b      	ldrb	r3, [r3, #0]
 801110e:	2b01      	cmp	r3, #1
 8011110:	d10e      	bne.n	8011130 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8011112:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8011116:	8843      	ldrh	r3, [r0, #2]
 8011118:	f9b0 4000 	ldrsh.w	r4, [r0]
 801111c:	8044      	strh	r4, [r0, #2]
 801111e:	18ca      	adds	r2, r1, r3
 8011120:	4b05      	ldr	r3, [pc, #20]	; (8011138 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8011122:	881b      	ldrh	r3, [r3, #0]
 8011124:	1a9b      	subs	r3, r3, r2
 8011126:	8003      	strh	r3, [r0, #0]
 8011128:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801112c:	80c3      	strh	r3, [r0, #6]
 801112e:	8081      	strh	r1, [r0, #4]
 8011130:	bd10      	pop	{r4, pc}
 8011132:	bf00      	nop
 8011134:	20017448 	.word	0x20017448
 8011138:	20017444 	.word	0x20017444

0801113c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 801113c:	4b08      	ldr	r3, [pc, #32]	; (8011160 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 801113e:	781b      	ldrb	r3, [r3, #0]
 8011140:	2b01      	cmp	r3, #1
 8011142:	d10c      	bne.n	801115e <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8011144:	8803      	ldrh	r3, [r0, #0]
 8011146:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 801114a:	8842      	ldrh	r2, [r0, #2]
 801114c:	8002      	strh	r2, [r0, #0]
 801114e:	185a      	adds	r2, r3, r1
 8011150:	4b04      	ldr	r3, [pc, #16]	; (8011164 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8011152:	881b      	ldrh	r3, [r3, #0]
 8011154:	1a9b      	subs	r3, r3, r2
 8011156:	8043      	strh	r3, [r0, #2]
 8011158:	88c3      	ldrh	r3, [r0, #6]
 801115a:	8083      	strh	r3, [r0, #4]
 801115c:	80c1      	strh	r1, [r0, #6]
 801115e:	4770      	bx	lr
 8011160:	20017448 	.word	0x20017448
 8011164:	20017444 	.word	0x20017444

08011168 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8011168:	b510      	push	{r4, lr}
 801116a:	4b07      	ldr	r3, [pc, #28]	; (8011188 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 801116c:	781b      	ldrb	r3, [r3, #0]
 801116e:	2b01      	cmp	r3, #1
 8011170:	d108      	bne.n	8011184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8011172:	f9b1 3000 	ldrsh.w	r3, [r1]
 8011176:	f9b0 4000 	ldrsh.w	r4, [r0]
 801117a:	8003      	strh	r3, [r0, #0]
 801117c:	8893      	ldrh	r3, [r2, #4]
 801117e:	3b01      	subs	r3, #1
 8011180:	1b1b      	subs	r3, r3, r4
 8011182:	800b      	strh	r3, [r1, #0]
 8011184:	bd10      	pop	{r4, pc}
 8011186:	bf00      	nop
 8011188:	20017448 	.word	0x20017448

0801118c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 801118c:	b510      	push	{r4, lr}
 801118e:	4b0a      	ldr	r3, [pc, #40]	; (80111b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8011190:	781b      	ldrb	r3, [r3, #0]
 8011192:	2b01      	cmp	r3, #1
 8011194:	460a      	mov	r2, r1
 8011196:	d10d      	bne.n	80111b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8011198:	8881      	ldrh	r1, [r0, #4]
 801119a:	8803      	ldrh	r3, [r0, #0]
 801119c:	440b      	add	r3, r1
 801119e:	4601      	mov	r1, r0
 80111a0:	3b01      	subs	r3, #1
 80111a2:	f821 3b02 	strh.w	r3, [r1], #2
 80111a6:	f7ff ffdf 	bl	8011168 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 80111aa:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80111ae:	88c2      	ldrh	r2, [r0, #6]
 80111b0:	8082      	strh	r2, [r0, #4]
 80111b2:	80c3      	strh	r3, [r0, #6]
 80111b4:	bd10      	pop	{r4, pc}
 80111b6:	bf00      	nop
 80111b8:	20017448 	.word	0x20017448

080111bc <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 80111bc:	b570      	push	{r4, r5, r6, lr}
 80111be:	4c0b      	ldr	r4, [pc, #44]	; (80111ec <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 80111c0:	2300      	movs	r3, #0
 80111c2:	4605      	mov	r5, r0
 80111c4:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 80111c8:	6820      	ldr	r0, [r4, #0]
 80111ca:	460e      	mov	r6, r1
 80111cc:	b110      	cbz	r0, 80111d4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x18>
 80111ce:	6803      	ldr	r3, [r0, #0]
 80111d0:	695b      	ldr	r3, [r3, #20]
 80111d2:	4798      	blx	r3
 80111d4:	6026      	str	r6, [r4, #0]
 80111d6:	6833      	ldr	r3, [r6, #0]
 80111d8:	4630      	mov	r0, r6
 80111da:	68db      	ldr	r3, [r3, #12]
 80111dc:	4798      	blx	r3
 80111de:	682b      	ldr	r3, [r5, #0]
 80111e0:	4628      	mov	r0, r5
 80111e2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80111e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80111e8:	4718      	bx	r3
 80111ea:	bf00      	nop
 80111ec:	20017494 	.word	0x20017494

080111f0 <_ZN8touchgfx11Application13requestRedrawEv>:
 80111f0:	4b06      	ldr	r3, [pc, #24]	; (801120c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 80111f2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80111f6:	4b06      	ldr	r3, [pc, #24]	; (8011210 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 80111f8:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 80111fc:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011200:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 8011204:	2100      	movs	r1, #0
 8011206:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 801120a:	4770      	bx	lr
 801120c:	20017444 	.word	0x20017444
 8011210:	20017446 	.word	0x20017446

08011214 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8011214:	4b03      	ldr	r3, [pc, #12]	; (8011224 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8011216:	6818      	ldr	r0, [r3, #0]
 8011218:	b110      	cbz	r0, 8011220 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 801121a:	6803      	ldr	r3, [r0, #0]
 801121c:	699b      	ldr	r3, [r3, #24]
 801121e:	4718      	bx	r3
 8011220:	4770      	bx	lr
 8011222:	bf00      	nop
 8011224:	20017494 	.word	0x20017494

08011228 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8011228:	4770      	bx	lr
	...

0801122c <_ZN8touchgfx11Application4drawEv>:
 801122c:	b507      	push	{r0, r1, r2, lr}
 801122e:	4b09      	ldr	r3, [pc, #36]	; (8011254 <_ZN8touchgfx11Application4drawEv+0x28>)
 8011230:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011234:	4b08      	ldr	r3, [pc, #32]	; (8011258 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8011236:	f8ad 2004 	strh.w	r2, [sp, #4]
 801123a:	f9b3 3000 	ldrsh.w	r3, [r3]
 801123e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011242:	6803      	ldr	r3, [r0, #0]
 8011244:	2100      	movs	r1, #0
 8011246:	9100      	str	r1, [sp, #0]
 8011248:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801124a:	4669      	mov	r1, sp
 801124c:	4798      	blx	r3
 801124e:	b003      	add	sp, #12
 8011250:	f85d fb04 	ldr.w	pc, [sp], #4
 8011254:	20017444 	.word	0x20017444
 8011258:	20017446 	.word	0x20017446

0801125c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 801125c:	4b03      	ldr	r3, [pc, #12]	; (801126c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 801125e:	6818      	ldr	r0, [r3, #0]
 8011260:	b110      	cbz	r0, 8011268 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8011262:	6803      	ldr	r3, [r0, #0]
 8011264:	69db      	ldr	r3, [r3, #28]
 8011266:	4718      	bx	r3
 8011268:	4770      	bx	lr
 801126a:	bf00      	nop
 801126c:	20017494 	.word	0x20017494

08011270 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8011270:	4b03      	ldr	r3, [pc, #12]	; (8011280 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8011272:	6818      	ldr	r0, [r3, #0]
 8011274:	b110      	cbz	r0, 801127c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8011276:	6803      	ldr	r3, [r0, #0]
 8011278:	6a1b      	ldr	r3, [r3, #32]
 801127a:	4718      	bx	r3
 801127c:	4770      	bx	lr
 801127e:	bf00      	nop
 8011280:	20017494 	.word	0x20017494

08011284 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8011284:	2300      	movs	r3, #0
 8011286:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 801128a:	4770      	bx	lr

0801128c <_ZN8touchgfx11Application14handleKeyEventEh>:
 801128c:	4b03      	ldr	r3, [pc, #12]	; (801129c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 801128e:	6818      	ldr	r0, [r3, #0]
 8011290:	b110      	cbz	r0, 8011298 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8011292:	6803      	ldr	r3, [r0, #0]
 8011294:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011296:	4718      	bx	r3
 8011298:	4770      	bx	lr
 801129a:	bf00      	nop
 801129c:	20017494 	.word	0x20017494

080112a0 <_ZN8touchgfx11Application15handleTickEventEv>:
 80112a0:	b570      	push	{r4, r5, r6, lr}
 80112a2:	4d32      	ldr	r5, [pc, #200]	; (801136c <_ZN8touchgfx11Application15handleTickEventEv+0xcc>)
 80112a4:	4604      	mov	r4, r0
 80112a6:	6828      	ldr	r0, [r5, #0]
 80112a8:	b140      	cbz	r0, 80112bc <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 80112aa:	7a03      	ldrb	r3, [r0, #8]
 80112ac:	b933      	cbnz	r3, 80112bc <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 80112ae:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 80112b2:	6803      	ldr	r3, [r0, #0]
 80112b4:	689b      	ldr	r3, [r3, #8]
 80112b6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80112ba:	4718      	bx	r3
 80112bc:	f894 3134 	ldrb.w	r3, [r4, #308]	; 0x134
 80112c0:	b97b      	cbnz	r3, 80112e2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80112c2:	b170      	cbz	r0, 80112e2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80112c4:	7a03      	ldrb	r3, [r0, #8]
 80112c6:	b163      	cbz	r3, 80112e2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80112c8:	4b29      	ldr	r3, [pc, #164]	; (8011370 <_ZN8touchgfx11Application15handleTickEventEv+0xd0>)
 80112ca:	6818      	ldr	r0, [r3, #0]
 80112cc:	b110      	cbz	r0, 80112d4 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 80112ce:	6803      	ldr	r3, [r0, #0]
 80112d0:	691b      	ldr	r3, [r3, #16]
 80112d2:	4798      	blx	r3
 80112d4:	6828      	ldr	r0, [r5, #0]
 80112d6:	6803      	ldr	r3, [r0, #0]
 80112d8:	68db      	ldr	r3, [r3, #12]
 80112da:	4798      	blx	r3
 80112dc:	2301      	movs	r3, #1
 80112de:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 80112e2:	2500      	movs	r5, #0
 80112e4:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 80112e8:	42a8      	cmp	r0, r5
 80112ea:	dd0c      	ble.n	8011306 <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 80112ec:	1963      	adds	r3, r4, r5
 80112ee:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 80112f2:	b132      	cbz	r2, 8011302 <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 80112f4:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 80112f8:	4413      	add	r3, r2
 80112fa:	6858      	ldr	r0, [r3, #4]
 80112fc:	6803      	ldr	r3, [r0, #0]
 80112fe:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011300:	4798      	blx	r3
 8011302:	3501      	adds	r5, #1
 8011304:	e7ee      	b.n	80112e4 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 8011306:	2300      	movs	r3, #0
 8011308:	461a      	mov	r2, r3
 801130a:	4298      	cmp	r0, r3
 801130c:	d015      	beq.n	801133a <_ZN8touchgfx11Application15handleTickEventEv+0x9a>
 801130e:	18e1      	adds	r1, r4, r3
 8011310:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 8011314:	b16d      	cbz	r5, 8011332 <_ZN8touchgfx11Application15handleTickEventEv+0x92>
 8011316:	429a      	cmp	r2, r3
 8011318:	d00a      	beq.n	8011330 <_ZN8touchgfx11Application15handleTickEventEv+0x90>
 801131a:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 801131e:	4431      	add	r1, r6
 8011320:	684e      	ldr	r6, [r1, #4]
 8011322:	b291      	uxth	r1, r2
 8011324:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8011328:	604e      	str	r6, [r1, #4]
 801132a:	18a1      	adds	r1, r4, r2
 801132c:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 8011330:	3201      	adds	r2, #1
 8011332:	3301      	adds	r3, #1
 8011334:	e7e9      	b.n	801130a <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 8011336:	f8a4 3084 	strh.w	r3, [r4, #132]	; 0x84
 801133a:	f8b4 5084 	ldrh.w	r5, [r4, #132]	; 0x84
 801133e:	4295      	cmp	r5, r2
 8011340:	dd0d      	ble.n	801135e <_ZN8touchgfx11Application15handleTickEventEv+0xbe>
 8011342:	1e6b      	subs	r3, r5, #1
 8011344:	b29b      	uxth	r3, r3
 8011346:	eb04 0183 	add.w	r1, r4, r3, lsl #2
 801134a:	4618      	mov	r0, r3
 801134c:	3104      	adds	r1, #4
 801134e:	4285      	cmp	r5, r0
 8011350:	ddf1      	ble.n	8011336 <_ZN8touchgfx11Application15handleTickEventEv+0x96>
 8011352:	f851 6f04 	ldr.w	r6, [r1, #4]!
 8011356:	f841 6c04 	str.w	r6, [r1, #-4]
 801135a:	3001      	adds	r0, #1
 801135c:	e7f7      	b.n	801134e <_ZN8touchgfx11Application15handleTickEventEv+0xae>
 801135e:	4b04      	ldr	r3, [pc, #16]	; (8011370 <_ZN8touchgfx11Application15handleTickEventEv+0xd0>)
 8011360:	6818      	ldr	r0, [r3, #0]
 8011362:	b110      	cbz	r0, 801136a <_ZN8touchgfx11Application15handleTickEventEv+0xca>
 8011364:	6803      	ldr	r3, [r0, #0]
 8011366:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011368:	e7a5      	b.n	80112b6 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 801136a:	bd70      	pop	{r4, r5, r6, pc}
 801136c:	20017498 	.word	0x20017498
 8011370:	20017494 	.word	0x20017494

08011374 <_ZN8touchgfx11ApplicationD1Ev>:
 8011374:	4770      	bx	lr

08011376 <_ZN8touchgfx11ApplicationD0Ev>:
 8011376:	b510      	push	{r4, lr}
 8011378:	f44f 719c 	mov.w	r1, #312	; 0x138
 801137c:	4604      	mov	r4, r0
 801137e:	f00f fbd6 	bl	8020b2e <_ZdlPvj>
 8011382:	4620      	mov	r0, r4
 8011384:	bd10      	pop	{r4, pc}

08011386 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8011386:	b510      	push	{r4, lr}
 8011388:	f9b1 4000 	ldrsh.w	r4, [r1]
 801138c:	888a      	ldrh	r2, [r1, #4]
 801138e:	f9b0 3000 	ldrsh.w	r3, [r0]
 8011392:	4422      	add	r2, r4
 8011394:	b212      	sxth	r2, r2
 8011396:	4293      	cmp	r3, r2
 8011398:	da15      	bge.n	80113c6 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801139a:	8882      	ldrh	r2, [r0, #4]
 801139c:	4413      	add	r3, r2
 801139e:	b21b      	sxth	r3, r3
 80113a0:	429c      	cmp	r4, r3
 80113a2:	da10      	bge.n	80113c6 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80113a4:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80113a8:	88c9      	ldrh	r1, [r1, #6]
 80113aa:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80113ae:	4419      	add	r1, r3
 80113b0:	b209      	sxth	r1, r1
 80113b2:	428a      	cmp	r2, r1
 80113b4:	da07      	bge.n	80113c6 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80113b6:	88c0      	ldrh	r0, [r0, #6]
 80113b8:	4410      	add	r0, r2
 80113ba:	b200      	sxth	r0, r0
 80113bc:	4283      	cmp	r3, r0
 80113be:	bfac      	ite	ge
 80113c0:	2000      	movge	r0, #0
 80113c2:	2001      	movlt	r0, #1
 80113c4:	bd10      	pop	{r4, pc}
 80113c6:	2000      	movs	r0, #0
 80113c8:	e7fc      	b.n	80113c4 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

080113ca <_ZN8touchgfx4Rect10restrictToEss>:
 80113ca:	f9b0 3000 	ldrsh.w	r3, [r0]
 80113ce:	2b00      	cmp	r3, #0
 80113d0:	b510      	push	{r4, lr}
 80113d2:	da04      	bge.n	80113de <_ZN8touchgfx4Rect10restrictToEss+0x14>
 80113d4:	8884      	ldrh	r4, [r0, #4]
 80113d6:	4423      	add	r3, r4
 80113d8:	8083      	strh	r3, [r0, #4]
 80113da:	2300      	movs	r3, #0
 80113dc:	8003      	strh	r3, [r0, #0]
 80113de:	f9b0 4000 	ldrsh.w	r4, [r0]
 80113e2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80113e6:	1b09      	subs	r1, r1, r4
 80113e8:	428b      	cmp	r3, r1
 80113ea:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80113ee:	bfc8      	it	gt
 80113f0:	8081      	strhgt	r1, [r0, #4]
 80113f2:	2b00      	cmp	r3, #0
 80113f4:	da04      	bge.n	8011400 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 80113f6:	88c1      	ldrh	r1, [r0, #6]
 80113f8:	440b      	add	r3, r1
 80113fa:	80c3      	strh	r3, [r0, #6]
 80113fc:	2300      	movs	r3, #0
 80113fe:	8043      	strh	r3, [r0, #2]
 8011400:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8011404:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8011408:	1a52      	subs	r2, r2, r1
 801140a:	4293      	cmp	r3, r2
 801140c:	bfc8      	it	gt
 801140e:	80c2      	strhgt	r2, [r0, #6]
 8011410:	bd10      	pop	{r4, pc}
	...

08011414 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8011414:	b510      	push	{r4, lr}
 8011416:	4b10      	ldr	r3, [pc, #64]	; (8011458 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8011418:	f9b3 2000 	ldrsh.w	r2, [r3]
 801141c:	4b0f      	ldr	r3, [pc, #60]	; (801145c <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 801141e:	460c      	mov	r4, r1
 8011420:	4620      	mov	r0, r4
 8011422:	f9b3 1000 	ldrsh.w	r1, [r3]
 8011426:	f7ff ffd0 	bl	80113ca <_ZN8touchgfx4Rect10restrictToEss>
 801142a:	4b0d      	ldr	r3, [pc, #52]	; (8011460 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 801142c:	6818      	ldr	r0, [r3, #0]
 801142e:	b190      	cbz	r0, 8011456 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8011430:	6803      	ldr	r3, [r0, #0]
 8011432:	4621      	mov	r1, r4
 8011434:	689b      	ldr	r3, [r3, #8]
 8011436:	4798      	blx	r3
 8011438:	4b0a      	ldr	r3, [pc, #40]	; (8011464 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 801143a:	6818      	ldr	r0, [r3, #0]
 801143c:	b118      	cbz	r0, 8011446 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 801143e:	6803      	ldr	r3, [r0, #0]
 8011440:	4621      	mov	r1, r4
 8011442:	689b      	ldr	r3, [r3, #8]
 8011444:	4798      	blx	r3
 8011446:	4b08      	ldr	r3, [pc, #32]	; (8011468 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8011448:	6818      	ldr	r0, [r3, #0]
 801144a:	6803      	ldr	r3, [r0, #0]
 801144c:	4621      	mov	r1, r4
 801144e:	69db      	ldr	r3, [r3, #28]
 8011450:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011454:	4718      	bx	r3
 8011456:	bd10      	pop	{r4, pc}
 8011458:	20017446 	.word	0x20017446
 801145c:	20017444 	.word	0x20017444
 8011460:	20017494 	.word	0x20017494
 8011464:	20017490 	.word	0x20017490
 8011468:	20017450 	.word	0x20017450

0801146c <_ZNK8touchgfx4Rect8includesERKS0_>:
 801146c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801146e:	4606      	mov	r6, r0
 8011470:	4608      	mov	r0, r1
 8011472:	460f      	mov	r7, r1
 8011474:	f7f9 ff15 	bl	800b2a2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011478:	b9e8      	cbnz	r0, 80114b6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801147a:	f9b7 5000 	ldrsh.w	r5, [r7]
 801147e:	f9b6 4000 	ldrsh.w	r4, [r6]
 8011482:	42a5      	cmp	r5, r4
 8011484:	db17      	blt.n	80114b6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8011486:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 801148a:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 801148e:	429a      	cmp	r2, r3
 8011490:	db11      	blt.n	80114b6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8011492:	88b9      	ldrh	r1, [r7, #4]
 8011494:	440d      	add	r5, r1
 8011496:	88b1      	ldrh	r1, [r6, #4]
 8011498:	440c      	add	r4, r1
 801149a:	b22d      	sxth	r5, r5
 801149c:	b224      	sxth	r4, r4
 801149e:	42a5      	cmp	r5, r4
 80114a0:	dc09      	bgt.n	80114b6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80114a2:	88f8      	ldrh	r0, [r7, #6]
 80114a4:	4410      	add	r0, r2
 80114a6:	88f2      	ldrh	r2, [r6, #6]
 80114a8:	4413      	add	r3, r2
 80114aa:	b200      	sxth	r0, r0
 80114ac:	b21b      	sxth	r3, r3
 80114ae:	4298      	cmp	r0, r3
 80114b0:	bfcc      	ite	gt
 80114b2:	2000      	movgt	r0, #0
 80114b4:	2001      	movle	r0, #1
 80114b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080114b8 <_ZN8touchgfx11Application11getInstanceEv>:
 80114b8:	4b01      	ldr	r3, [pc, #4]	; (80114c0 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 80114ba:	6818      	ldr	r0, [r3, #0]
 80114bc:	4770      	bx	lr
 80114be:	bf00      	nop
 80114c0:	200174a4 	.word	0x200174a4

080114c4 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 80114c4:	2300      	movs	r3, #0
 80114c6:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 80114ca:	f100 0288 	add.w	r2, r0, #136	; 0x88
 80114ce:	30a8      	adds	r0, #168	; 0xa8
 80114d0:	f802 3b01 	strb.w	r3, [r2], #1
 80114d4:	4282      	cmp	r2, r0
 80114d6:	d1fb      	bne.n	80114d0 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 80114d8:	4770      	bx	lr

080114da <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 80114da:	4603      	mov	r3, r0
 80114dc:	f100 0140 	add.w	r1, r0, #64	; 0x40
 80114e0:	2200      	movs	r2, #0
 80114e2:	801a      	strh	r2, [r3, #0]
 80114e4:	805a      	strh	r2, [r3, #2]
 80114e6:	809a      	strh	r2, [r3, #4]
 80114e8:	80da      	strh	r2, [r3, #6]
 80114ea:	3308      	adds	r3, #8
 80114ec:	428b      	cmp	r3, r1
 80114ee:	d1f8      	bne.n	80114e2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 80114f0:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 80114f4:	4770      	bx	lr
	...

080114f8 <_ZN8touchgfx11ApplicationC1Ev>:
 80114f8:	b570      	push	{r4, r5, r6, lr}
 80114fa:	4b19      	ldr	r3, [pc, #100]	; (8011560 <_ZN8touchgfx11ApplicationC1Ev+0x68>)
 80114fc:	6003      	str	r3, [r0, #0]
 80114fe:	2500      	movs	r5, #0
 8011500:	4604      	mov	r4, r0
 8011502:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 8011506:	30a8      	adds	r0, #168	; 0xa8
 8011508:	f7ff ffe7 	bl	80114da <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801150c:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 8011510:	f7ff ffe3 	bl	80114da <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8011514:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 8011518:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 801151c:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8011520:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8011524:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 8011528:	490e      	ldr	r1, [pc, #56]	; (8011564 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 801152a:	480f      	ldr	r0, [pc, #60]	; (8011568 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 801152c:	4e0f      	ldr	r6, [pc, #60]	; (801156c <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 801152e:	f00e fec3 	bl	80202b8 <CRC_Lock>
 8011532:	4b0f      	ldr	r3, [pc, #60]	; (8011570 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8011534:	b158      	cbz	r0, 801154e <_ZN8touchgfx11ApplicationC1Ev+0x56>
 8011536:	801d      	strh	r5, [r3, #0]
 8011538:	4a0e      	ldr	r2, [pc, #56]	; (8011574 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 801153a:	2300      	movs	r3, #0
 801153c:	6013      	str	r3, [r2, #0]
 801153e:	4a0e      	ldr	r2, [pc, #56]	; (8011578 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8011540:	6033      	str	r3, [r6, #0]
 8011542:	4620      	mov	r0, r4
 8011544:	6013      	str	r3, [r2, #0]
 8011546:	f7ff ffbd 	bl	80114c4 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 801154a:	4620      	mov	r0, r4
 801154c:	bd70      	pop	{r4, r5, r6, pc}
 801154e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8011552:	2002      	movs	r0, #2
 8011554:	801a      	strh	r2, [r3, #0]
 8011556:	6030      	str	r0, [r6, #0]
 8011558:	f001 fae8 	bl	8012b2c <_ZN8touchgfx6Screen4drawEv>
 801155c:	e7ec      	b.n	8011538 <_ZN8touchgfx11ApplicationC1Ev+0x40>
 801155e:	bf00      	nop
 8011560:	08024260 	.word	0x08024260
 8011564:	b5e8b5cd 	.word	0xb5e8b5cd
 8011568:	f407a5c2 	.word	0xf407a5c2
 801156c:	20017494 	.word	0x20017494
 8011570:	2000008c 	.word	0x2000008c
 8011574:	200174a4 	.word	0x200174a4
 8011578:	20017498 	.word	0x20017498

0801157c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 801157c:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8011580:	3b01      	subs	r3, #1
 8011582:	b29b      	uxth	r3, r3
 8011584:	428b      	cmp	r3, r1
 8011586:	b510      	push	{r4, lr}
 8011588:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 801158c:	d908      	bls.n	80115a0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 801158e:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8011592:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8011596:	681a      	ldr	r2, [r3, #0]
 8011598:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 801159c:	685a      	ldr	r2, [r3, #4]
 801159e:	6062      	str	r2, [r4, #4]
 80115a0:	bd10      	pop	{r4, pc}
	...

080115a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 80115a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80115a8:	4b94      	ldr	r3, [pc, #592]	; (80117fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 80115aa:	b08f      	sub	sp, #60	; 0x3c
 80115ac:	ac0a      	add	r4, sp, #40	; 0x28
 80115ae:	e884 0006 	stmia.w	r4, {r1, r2}
 80115b2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80115b6:	4b92      	ldr	r3, [pc, #584]	; (8011800 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>)
 80115b8:	4683      	mov	fp, r0
 80115ba:	f9b3 1000 	ldrsh.w	r1, [r3]
 80115be:	4620      	mov	r0, r4
 80115c0:	f7ff ff03 	bl	80113ca <_ZN8touchgfx4Rect10restrictToEss>
 80115c4:	4620      	mov	r0, r4
 80115c6:	f7f9 fe6c 	bl	800b2a2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80115ca:	2800      	cmp	r0, #0
 80115cc:	d16a      	bne.n	80116a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80115ce:	9403      	str	r4, [sp, #12]
 80115d0:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 80115d4:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 80115d8:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 80115dc:	2400      	movs	r4, #0
 80115de:	9301      	str	r3, [sp, #4]
 80115e0:	36a0      	adds	r6, #160	; 0xa0
 80115e2:	42a5      	cmp	r5, r4
 80115e4:	d00d      	beq.n	8011602 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 80115e6:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 80115ea:	9803      	ldr	r0, [sp, #12]
 80115ec:	f7ff ff3e 	bl	801146c <_ZNK8touchgfx4Rect8includesERKS0_>
 80115f0:	b128      	cbz	r0, 80115fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 80115f2:	1e69      	subs	r1, r5, #1
 80115f4:	1b09      	subs	r1, r1, r4
 80115f6:	b289      	uxth	r1, r1
 80115f8:	9801      	ldr	r0, [sp, #4]
 80115fa:	f7ff ffbf 	bl	801157c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80115fe:	3401      	adds	r4, #1
 8011600:	e7ef      	b.n	80115e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e>
 8011602:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 8011606:	9704      	str	r7, [sp, #16]
 8011608:	1e7b      	subs	r3, r7, #1
 801160a:	9302      	str	r3, [sp, #8]
 801160c:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 8011610:	2400      	movs	r4, #0
 8011612:	4655      	mov	r5, sl
 8011614:	9705      	str	r7, [sp, #20]
 8011616:	4626      	mov	r6, r4
 8011618:	9b05      	ldr	r3, [sp, #20]
 801161a:	2b00      	cmp	r3, #0
 801161c:	d078      	beq.n	8011710 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x16c>
 801161e:	9903      	ldr	r1, [sp, #12]
 8011620:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 8011624:	f7ff feaf 	bl	8011386 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011628:	b360      	cbz	r0, 8011684 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801162a:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 801162e:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 8011632:	f9bd 902a 	ldrsh.w	r9, [sp, #42]	; 0x2a
 8011636:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 801163a:	45e6      	cmp	lr, ip
 801163c:	db35      	blt.n	80116aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 801163e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8011642:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 8011646:	4472      	add	r2, lr
 8011648:	4463      	add	r3, ip
 801164a:	b212      	sxth	r2, r2
 801164c:	b21b      	sxth	r3, r3
 801164e:	429a      	cmp	r2, r3
 8011650:	dc2b      	bgt.n	80116aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8011652:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 8011656:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801165a:	fa1f f288 	uxth.w	r2, r8
 801165e:	4413      	add	r3, r2
 8011660:	b29b      	uxth	r3, r3
 8011662:	45c1      	cmp	r9, r8
 8011664:	fa0f fe83 	sxth.w	lr, r3
 8011668:	fa1f fc89 	uxth.w	ip, r9
 801166c:	db0f      	blt.n	801168e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801166e:	eba3 030c 	sub.w	r3, r3, ip
 8011672:	1ac9      	subs	r1, r1, r3
 8011674:	b209      	sxth	r1, r1
 8011676:	2900      	cmp	r1, #0
 8011678:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801167c:	dd12      	ble.n	80116a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801167e:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8011682:	4604      	mov	r4, r0
 8011684:	9b05      	ldr	r3, [sp, #20]
 8011686:	3b01      	subs	r3, #1
 8011688:	9305      	str	r3, [sp, #20]
 801168a:	3d08      	subs	r5, #8
 801168c:	e7c4      	b.n	8011618 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x74>
 801168e:	4461      	add	r1, ip
 8011690:	b209      	sxth	r1, r1
 8011692:	4571      	cmp	r1, lr
 8011694:	dc3a      	bgt.n	801170c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8011696:	eba2 020c 	sub.w	r2, r2, ip
 801169a:	b212      	sxth	r2, r2
 801169c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 80116a0:	2a00      	cmp	r2, #0
 80116a2:	dcee      	bgt.n	8011682 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80116a4:	b00f      	add	sp, #60	; 0x3c
 80116a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80116aa:	45c1      	cmp	r9, r8
 80116ac:	db2e      	blt.n	801170c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80116ae:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 80116b2:	4499      	add	r9, r3
 80116b4:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 80116b8:	4498      	add	r8, r3
 80116ba:	fa0f f989 	sxth.w	r9, r9
 80116be:	fa0f f888 	sxth.w	r8, r8
 80116c2:	45c1      	cmp	r9, r8
 80116c4:	dc22      	bgt.n	801170c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80116c6:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 80116ca:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80116ce:	fa1f f28c 	uxth.w	r2, ip
 80116d2:	4413      	add	r3, r2
 80116d4:	b29b      	uxth	r3, r3
 80116d6:	45e6      	cmp	lr, ip
 80116d8:	fa1f f88e 	uxth.w	r8, lr
 80116dc:	fa0f f983 	sxth.w	r9, r3
 80116e0:	db0a      	blt.n	80116f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x154>
 80116e2:	eba3 0308 	sub.w	r3, r3, r8
 80116e6:	1ac9      	subs	r1, r1, r3
 80116e8:	b209      	sxth	r1, r1
 80116ea:	2900      	cmp	r1, #0
 80116ec:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 80116f0:	ddd8      	ble.n	80116a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80116f2:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80116f6:	e7c4      	b.n	8011682 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80116f8:	4441      	add	r1, r8
 80116fa:	b209      	sxth	r1, r1
 80116fc:	4549      	cmp	r1, r9
 80116fe:	dc05      	bgt.n	801170c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8011700:	eba2 0208 	sub.w	r2, r2, r8
 8011704:	b212      	sxth	r2, r2
 8011706:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 801170a:	e7c9      	b.n	80116a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 801170c:	4606      	mov	r6, r0
 801170e:	e7b9      	b.n	8011684 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8011710:	2c00      	cmp	r4, #0
 8011712:	f47f af7d 	bne.w	8011610 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c>
 8011716:	2e00      	cmp	r6, #0
 8011718:	f000 81e1 	beq.w	8011ade <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 801171c:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 8011720:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 8011724:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8011728:	b2b9      	uxth	r1, r7
 801172a:	9105      	str	r1, [sp, #20]
 801172c:	9805      	ldr	r0, [sp, #20]
 801172e:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8011732:	4401      	add	r1, r0
 8011734:	b2b3      	uxth	r3, r6
 8011736:	b289      	uxth	r1, r1
 8011738:	441a      	add	r2, r3
 801173a:	9106      	str	r1, [sp, #24]
 801173c:	b292      	uxth	r2, r2
 801173e:	f9bd 9018 	ldrsh.w	r9, [sp, #24]
 8011742:	fa0f f882 	sxth.w	r8, r2
 8011746:	4655      	mov	r5, sl
 8011748:	e9cd 2307 	strd	r2, r3, [sp, #28]
 801174c:	9b04      	ldr	r3, [sp, #16]
 801174e:	2b00      	cmp	r3, #0
 8011750:	d058      	beq.n	8011804 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x260>
 8011752:	9903      	ldr	r1, [sp, #12]
 8011754:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 8011758:	f7ff fe15 	bl	8011386 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801175c:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8011760:	b1d8      	cbz	r0, 801179a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8011762:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 8011766:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 801176a:	4576      	cmp	r6, lr
 801176c:	dc26      	bgt.n	80117bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 801176e:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 8011772:	44f4      	add	ip, lr
 8011774:	fa0f fc8c 	sxth.w	ip, ip
 8011778:	45e0      	cmp	r8, ip
 801177a:	db1f      	blt.n	80117bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 801177c:	428f      	cmp	r7, r1
 801177e:	fa1f fc81 	uxth.w	ip, r1
 8011782:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 8011786:	dc0f      	bgt.n	80117a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x204>
 8011788:	9806      	ldr	r0, [sp, #24]
 801178a:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 801178e:	eba0 0c0c 	sub.w	ip, r0, ip
 8011792:	eba1 010c 	sub.w	r1, r1, ip
 8011796:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 801179a:	4620      	mov	r0, r4
 801179c:	9904      	ldr	r1, [sp, #16]
 801179e:	3901      	subs	r1, #1
 80117a0:	9104      	str	r1, [sp, #16]
 80117a2:	3d08      	subs	r5, #8
 80117a4:	4604      	mov	r4, r0
 80117a6:	e7cf      	b.n	8011748 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a4>
 80117a8:	4461      	add	r1, ip
 80117aa:	b209      	sxth	r1, r1
 80117ac:	4549      	cmp	r1, r9
 80117ae:	dcf5      	bgt.n	801179c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 80117b0:	9905      	ldr	r1, [sp, #20]
 80117b2:	eba1 0c0c 	sub.w	ip, r1, ip
 80117b6:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 80117ba:	e7ee      	b.n	801179a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 80117bc:	428f      	cmp	r7, r1
 80117be:	dced      	bgt.n	801179c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 80117c0:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 80117c4:	4461      	add	r1, ip
 80117c6:	b209      	sxth	r1, r1
 80117c8:	4589      	cmp	r9, r1
 80117ca:	dbe7      	blt.n	801179c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 80117cc:	4576      	cmp	r6, lr
 80117ce:	fa1f fc8e 	uxth.w	ip, lr
 80117d2:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 80117d6:	dc08      	bgt.n	80117ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 80117d8:	eba2 0c0c 	sub.w	ip, r2, ip
 80117dc:	eba1 010c 	sub.w	r1, r1, ip
 80117e0:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 80117e4:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 80117e8:	e7d7      	b.n	801179a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 80117ea:	4461      	add	r1, ip
 80117ec:	b209      	sxth	r1, r1
 80117ee:	4588      	cmp	r8, r1
 80117f0:	dbd4      	blt.n	801179c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 80117f2:	eba3 0c0c 	sub.w	ip, r3, ip
 80117f6:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 80117fa:	e7ce      	b.n	801179a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 80117fc:	20017446 	.word	0x20017446
 8011800:	20017444 	.word	0x20017444
 8011804:	2c00      	cmp	r4, #0
 8011806:	f000 816a 	beq.w	8011ade <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 801180a:	9b02      	ldr	r3, [sp, #8]
 801180c:	3301      	adds	r3, #1
 801180e:	f000 8166 	beq.w	8011ade <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 8011812:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 8011816:	4621      	mov	r1, r4
 8011818:	9803      	ldr	r0, [sp, #12]
 801181a:	f7ff fe27 	bl	801146c <_ZNK8touchgfx4Rect8includesERKS0_>
 801181e:	b120      	cbz	r0, 801182a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x286>
 8011820:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8011824:	9801      	ldr	r0, [sp, #4]
 8011826:	f7ff fea9 	bl	801157c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801182a:	9903      	ldr	r1, [sp, #12]
 801182c:	4620      	mov	r0, r4
 801182e:	f7ff fdaa 	bl	8011386 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011832:	2800      	cmp	r0, #0
 8011834:	f000 809b 	beq.w	801196e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 8011838:	f9ba 00a0 	ldrsh.w	r0, [sl, #160]	; 0xa0
 801183c:	f9ba 30a4 	ldrsh.w	r3, [sl, #164]	; 0xa4
 8011840:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 8011844:	9309      	str	r3, [sp, #36]	; 0x24
 8011846:	b281      	uxth	r1, r0
 8011848:	eb01 0c03 	add.w	ip, r1, r3
 801184c:	fa1f f98c 	uxth.w	r9, ip
 8011850:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8011854:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 8011858:	f9ba 20a2 	ldrsh.w	r2, [sl, #162]	; 0xa2
 801185c:	b2ab      	uxth	r3, r5
 801185e:	eb03 040c 	add.w	r4, r3, ip
 8011862:	b2a4      	uxth	r4, r4
 8011864:	9405      	str	r4, [sp, #20]
 8011866:	f9bd 4014 	ldrsh.w	r4, [sp, #20]
 801186a:	9404      	str	r4, [sp, #16]
 801186c:	4285      	cmp	r5, r0
 801186e:	f8bb 40e8 	ldrh.w	r4, [fp, #232]	; 0xe8
 8011872:	f340 809a 	ble.w	80119aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x406>
 8011876:	1a5b      	subs	r3, r3, r1
 8011878:	b29b      	uxth	r3, r3
 801187a:	4596      	cmp	lr, r2
 801187c:	fa0f f589 	sxth.w	r5, r9
 8011880:	b21e      	sxth	r6, r3
 8011882:	dd2e      	ble.n	80118e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x33e>
 8011884:	9f02      	ldr	r7, [sp, #8]
 8011886:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 801188a:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 801188e:	9f04      	ldr	r7, [sp, #16]
 8011890:	1b7f      	subs	r7, r7, r5
 8011892:	f8b8 50ae 	ldrh.w	r5, [r8, #174]	; 0xae
 8011896:	fa1f fe8e 	uxth.w	lr, lr
 801189a:	b292      	uxth	r2, r2
 801189c:	ebae 0102 	sub.w	r1, lr, r2
 80118a0:	4486      	add	lr, r0
 80118a2:	442a      	add	r2, r5
 80118a4:	b289      	uxth	r1, r1
 80118a6:	fa0f fe8e 	sxth.w	lr, lr
 80118aa:	b212      	sxth	r2, r2
 80118ac:	b20c      	sxth	r4, r1
 80118ae:	ebae 0202 	sub.w	r2, lr, r2
 80118b2:	4367      	muls	r7, r4
 80118b4:	4372      	muls	r2, r6
 80118b6:	4297      	cmp	r7, r2
 80118b8:	db09      	blt.n	80118ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32a>
 80118ba:	f8b8 20a8 	ldrh.w	r2, [r8, #168]	; 0xa8
 80118be:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 80118c2:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80118c6:	449c      	add	ip, r3
 80118c8:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80118cc:	e680      	b.n	80115d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80118ce:	4401      	add	r1, r0
 80118d0:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 80118d4:	f8a8 60ac 	strh.w	r6, [r8, #172]	; 0xac
 80118d8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80118dc:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80118e0:	e676      	b.n	80115d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80118e2:	9f04      	ldr	r7, [sp, #16]
 80118e4:	42bd      	cmp	r5, r7
 80118e6:	da27      	bge.n	8011938 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x394>
 80118e8:	9902      	ldr	r1, [sp, #8]
 80118ea:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 80118ee:	eb0b 00c1 	add.w	r0, fp, r1, lsl #3
 80118f2:	eb04 010e 	add.w	r1, r4, lr
 80118f6:	fa1f f881 	uxth.w	r8, r1
 80118fa:	f8b0 10ae 	ldrh.w	r1, [r0, #174]	; 0xae
 80118fe:	4411      	add	r1, r2
 8011900:	eba1 0108 	sub.w	r1, r1, r8
 8011904:	b289      	uxth	r1, r1
 8011906:	fa0f f988 	sxth.w	r9, r8
 801190a:	eba2 020e 	sub.w	r2, r2, lr
 801190e:	fa0f f881 	sxth.w	r8, r1
 8011912:	1b7f      	subs	r7, r7, r5
 8011914:	4372      	muls	r2, r6
 8011916:	fb08 f707 	mul.w	r7, r8, r7
 801191a:	42ba      	cmp	r2, r7
 801191c:	dc06      	bgt.n	801192c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 801191e:	f8a0 90aa 	strh.w	r9, [r0, #170]	; 0xaa
 8011922:	f8a0 80ae 	strh.w	r8, [r0, #174]	; 0xae
 8011926:	f8b0 20a8 	ldrh.w	r2, [r0, #168]	; 0xa8
 801192a:	e7ca      	b.n	80118c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 801192c:	f8a0 60ac 	strh.w	r6, [r0, #172]	; 0xac
 8011930:	4421      	add	r1, r4
 8011932:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8011936:	e64b      	b.n	80115d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011938:	9d05      	ldr	r5, [sp, #20]
 801193a:	eba9 0505 	sub.w	r5, r9, r5
 801193e:	b2ad      	uxth	r5, r5
 8011940:	2c06      	cmp	r4, #6
 8011942:	fa0f fe85 	sxth.w	lr, r5
 8011946:	d818      	bhi.n	801197a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d6>
 8011948:	9b04      	ldr	r3, [sp, #16]
 801194a:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 801194e:	1c63      	adds	r3, r4, #1
 8011950:	f9ba 10a6 	ldrsh.w	r1, [sl, #166]	; 0xa6
 8011954:	f8aa e0a4 	strh.w	lr, [sl, #164]	; 0xa4
 8011958:	f8ab 30e8 	strh.w	r3, [fp, #232]	; 0xe8
 801195c:	9b01      	ldr	r3, [sp, #4]
 801195e:	9d01      	ldr	r5, [sp, #4]
 8011960:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8011964:	f825 0034 	strh.w	r0, [r5, r4, lsl #3]
 8011968:	805a      	strh	r2, [r3, #2]
 801196a:	809e      	strh	r6, [r3, #4]
 801196c:	80d9      	strh	r1, [r3, #6]
 801196e:	9b02      	ldr	r3, [sp, #8]
 8011970:	3b01      	subs	r3, #1
 8011972:	9302      	str	r3, [sp, #8]
 8011974:	f1aa 0a08 	sub.w	sl, sl, #8
 8011978:	e747      	b.n	801180a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x266>
 801197a:	9a02      	ldr	r2, [sp, #8]
 801197c:	45b6      	cmp	lr, r6
 801197e:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8011982:	db0d      	blt.n	80119a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fc>
 8011984:	449c      	add	ip, r3
 8011986:	fa1f fc8c 	uxth.w	ip, ip
 801198a:	445a      	add	r2, fp
 801198c:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8011990:	448c      	add	ip, r1
 8011992:	f8ad 0028 	strh.w	r0, [sp, #40]	; 0x28
 8011996:	f8a2 c0a8 	strh.w	ip, [r2, #168]	; 0xa8
 801199a:	f8a2 e0ac 	strh.w	lr, [r2, #172]	; 0xac
 801199e:	e617      	b.n	80115d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80119a0:	445a      	add	r2, fp
 80119a2:	44ac      	add	ip, r5
 80119a4:	f8a2 60ac 	strh.w	r6, [r2, #172]	; 0xac
 80119a8:	e78e      	b.n	80118c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 80119aa:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 80119ae:	fa1f f18e 	uxth.w	r1, lr
 80119b2:	eb01 0806 	add.w	r8, r1, r6
 80119b6:	b293      	uxth	r3, r2
 80119b8:	fa1f f888 	uxth.w	r8, r8
 80119bc:	9306      	str	r3, [sp, #24]
 80119be:	fa0f f388 	sxth.w	r3, r8
 80119c2:	9307      	str	r3, [sp, #28]
 80119c4:	9f06      	ldr	r7, [sp, #24]
 80119c6:	f8ba 30a6 	ldrh.w	r3, [sl, #166]	; 0xa6
 80119ca:	443b      	add	r3, r7
 80119cc:	b29b      	uxth	r3, r3
 80119ce:	4596      	cmp	lr, r2
 80119d0:	9308      	str	r3, [sp, #32]
 80119d2:	da25      	bge.n	8011a20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
 80119d4:	9905      	ldr	r1, [sp, #20]
 80119d6:	eba3 0308 	sub.w	r3, r3, r8
 80119da:	eba9 0401 	sub.w	r4, r9, r1
 80119de:	b2a4      	uxth	r4, r4
 80119e0:	b29b      	uxth	r3, r3
 80119e2:	fa0f f984 	sxth.w	r9, r4
 80119e6:	b219      	sxth	r1, r3
 80119e8:	eba2 020e 	sub.w	r2, r2, lr
 80119ec:	1b40      	subs	r0, r0, r5
 80119ee:	fb09 f202 	mul.w	r2, r9, r2
 80119f2:	4348      	muls	r0, r1
 80119f4:	4282      	cmp	r2, r0
 80119f6:	9a02      	ldr	r2, [sp, #8]
 80119f8:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80119fc:	445a      	add	r2, fp
 80119fe:	dc06      	bgt.n	8011a0e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 8011a00:	9b07      	ldr	r3, [sp, #28]
 8011a02:	f8a2 10ae 	strh.w	r1, [r2, #174]	; 0xae
 8011a06:	f8a2 30aa 	strh.w	r3, [r2, #170]	; 0xaa
 8011a0a:	44a4      	add	ip, r4
 8011a0c:	e75c      	b.n	80118c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 8011a0e:	9904      	ldr	r1, [sp, #16]
 8011a10:	f8a2 90ac 	strh.w	r9, [r2, #172]	; 0xac
 8011a14:	f8a2 10a8 	strh.w	r1, [r2, #168]	; 0xa8
 8011a18:	4433      	add	r3, r6
 8011a1a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8011a1e:	e5d7      	b.n	80115d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011a20:	9f06      	ldr	r7, [sp, #24]
 8011a22:	9b04      	ldr	r3, [sp, #16]
 8011a24:	1bc9      	subs	r1, r1, r7
 8011a26:	fa0f f789 	sxth.w	r7, r9
 8011a2a:	b289      	uxth	r1, r1
 8011a2c:	429f      	cmp	r7, r3
 8011a2e:	fa0f fe81 	sxth.w	lr, r1
 8011a32:	dd22      	ble.n	8011a7a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d6>
 8011a34:	9a05      	ldr	r2, [sp, #20]
 8011a36:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8011a3a:	1b40      	subs	r0, r0, r5
 8011a3c:	eba9 0202 	sub.w	r2, r9, r2
 8011a40:	9d07      	ldr	r5, [sp, #28]
 8011a42:	b292      	uxth	r2, r2
 8011a44:	eba5 0a03 	sub.w	sl, r5, r3
 8011a48:	b214      	sxth	r4, r2
 8011a4a:	9b02      	ldr	r3, [sp, #8]
 8011a4c:	fb0e f000 	mul.w	r0, lr, r0
 8011a50:	fb04 fa0a 	mul.w	sl, r4, sl
 8011a54:	00db      	lsls	r3, r3, #3
 8011a56:	4550      	cmp	r0, sl
 8011a58:	445b      	add	r3, fp
 8011a5a:	db03      	blt.n	8011a64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c0>
 8011a5c:	f8a3 e0ae 	strh.w	lr, [r3, #174]	; 0xae
 8011a60:	4494      	add	ip, r2
 8011a62:	e731      	b.n	80118c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 8011a64:	9a04      	ldr	r2, [sp, #16]
 8011a66:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 8011a6a:	f8a3 40ac 	strh.w	r4, [r3, #172]	; 0xac
 8011a6e:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 8011a72:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8011a76:	4431      	add	r1, r6
 8011a78:	e75b      	b.n	8011932 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38e>
 8011a7a:	9b08      	ldr	r3, [sp, #32]
 8011a7c:	eba3 0308 	sub.w	r3, r3, r8
 8011a80:	b29b      	uxth	r3, r3
 8011a82:	2c06      	cmp	r4, #6
 8011a84:	b21d      	sxth	r5, r3
 8011a86:	d813      	bhi.n	8011ab0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50c>
 8011a88:	9b07      	ldr	r3, [sp, #28]
 8011a8a:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 8011a8e:	1c63      	adds	r3, r4, #1
 8011a90:	f8aa 50a6 	strh.w	r5, [sl, #166]	; 0xa6
 8011a94:	f8ab 30e8 	strh.w	r3, [fp, #232]	; 0xe8
 8011a98:	9b01      	ldr	r3, [sp, #4]
 8011a9a:	9901      	ldr	r1, [sp, #4]
 8011a9c:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8011aa0:	f821 0034 	strh.w	r0, [r1, r4, lsl #3]
 8011aa4:	805a      	strh	r2, [r3, #2]
 8011aa6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8011aa8:	809a      	strh	r2, [r3, #4]
 8011aaa:	f8a3 e006 	strh.w	lr, [r3, #6]
 8011aae:	e75e      	b.n	801196e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 8011ab0:	9802      	ldr	r0, [sp, #8]
 8011ab2:	4575      	cmp	r5, lr
 8011ab4:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 8011ab8:	db0d      	blt.n	8011ad6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x532>
 8011aba:	4431      	add	r1, r6
 8011abc:	9b06      	ldr	r3, [sp, #24]
 8011abe:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8011ac2:	b289      	uxth	r1, r1
 8011ac4:	4458      	add	r0, fp
 8011ac6:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8011aca:	4419      	add	r1, r3
 8011acc:	f8a0 10aa 	strh.w	r1, [r0, #170]	; 0xaa
 8011ad0:	f8a0 50ae 	strh.w	r5, [r0, #174]	; 0xae
 8011ad4:	e57c      	b.n	80115d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011ad6:	4458      	add	r0, fp
 8011ad8:	f8a0 e0ae 	strh.w	lr, [r0, #174]	; 0xae
 8011adc:	e79c      	b.n	8011a18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
 8011ade:	f8bb 60e8 	ldrh.w	r6, [fp, #232]	; 0xe8
 8011ae2:	2e07      	cmp	r6, #7
 8011ae4:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8011ae8:	d812      	bhi.n	8011b10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56c>
 8011aea:	1c75      	adds	r5, r6, #1
 8011aec:	f8ab 50e8 	strh.w	r5, [fp, #232]	; 0xe8
 8011af0:	9d01      	ldr	r5, [sp, #4]
 8011af2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8011af6:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8011afa:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8011afe:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8011b02:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8011b06:	442c      	add	r4, r5
 8011b08:	8061      	strh	r1, [r4, #2]
 8011b0a:	80a2      	strh	r2, [r4, #4]
 8011b0c:	80e3      	strh	r3, [r4, #6]
 8011b0e:	e5c9      	b.n	80116a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8011b10:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 8011b14:	3e01      	subs	r6, #1
 8011b16:	445c      	add	r4, fp
 8011b18:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8011b1c:	f04f 37ff 	mov.w	r7, #4294967295
 8011b20:	2500      	movs	r5, #0
 8011b22:	9305      	str	r3, [sp, #20]
 8011b24:	f9b4 30a4 	ldrsh.w	r3, [r4, #164]	; 0xa4
 8011b28:	9302      	str	r3, [sp, #8]
 8011b2a:	1e72      	subs	r2, r6, #1
 8011b2c:	f9b4 30a6 	ldrsh.w	r3, [r4, #166]	; 0xa6
 8011b30:	9304      	str	r3, [sp, #16]
 8011b32:	4691      	mov	r9, r2
 8011b34:	f104 03a0 	add.w	r3, r4, #160	; 0xa0
 8011b38:	f1b9 3fff 	cmp.w	r9, #4294967295
 8011b3c:	bf14      	ite	ne
 8011b3e:	9905      	ldrne	r1, [sp, #20]
 8011b40:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8011b44:	6818      	ldr	r0, [r3, #0]
 8011b46:	9207      	str	r2, [sp, #28]
 8011b48:	bf18      	it	ne
 8011b4a:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8011b4e:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8011b52:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8011b56:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8011b5a:	9306      	str	r3, [sp, #24]
 8011b5c:	fb18 f801 	smulbb	r8, r8, r1
 8011b60:	6859      	ldr	r1, [r3, #4]
 8011b62:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8011b66:	4671      	mov	r1, lr
 8011b68:	a80c      	add	r0, sp, #48	; 0x30
 8011b6a:	f7fb f8bd 	bl	800cce8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8011b6e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8011b72:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8011b76:	9b04      	ldr	r3, [sp, #16]
 8011b78:	9a02      	ldr	r2, [sp, #8]
 8011b7a:	fb10 f001 	smulbb	r0, r0, r1
 8011b7e:	fb02 8803 	mla	r8, r2, r3, r8
 8011b82:	eba0 0108 	sub.w	r1, r0, r8
 8011b86:	f04f 0c08 	mov.w	ip, #8
 8011b8a:	fb90 f0fc 	sdiv	r0, r0, ip
 8011b8e:	4288      	cmp	r0, r1
 8011b90:	dc20      	bgt.n	8011bd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x630>
 8011b92:	4551      	cmp	r1, sl
 8011b94:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8011b98:	da03      	bge.n	8011ba2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 8011b9a:	b1d9      	cbz	r1, 8011bd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x630>
 8011b9c:	468a      	mov	sl, r1
 8011b9e:	464f      	mov	r7, r9
 8011ba0:	4635      	mov	r5, r6
 8011ba2:	f109 39ff 	add.w	r9, r9, #4294967295
 8011ba6:	f119 0f02 	cmn.w	r9, #2
 8011baa:	d1c5      	bne.n	8011b38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8011bac:	4616      	mov	r6, r2
 8011bae:	3201      	adds	r2, #1
 8011bb0:	f1a4 0408 	sub.w	r4, r4, #8
 8011bb4:	d1b6      	bne.n	8011b24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x580>
 8011bb6:	9b01      	ldr	r3, [sp, #4]
 8011bb8:	b2ac      	uxth	r4, r5
 8011bba:	00ed      	lsls	r5, r5, #3
 8011bbc:	1958      	adds	r0, r3, r5
 8011bbe:	1c7b      	adds	r3, r7, #1
 8011bc0:	d10b      	bne.n	8011bda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x636>
 8011bc2:	4601      	mov	r1, r0
 8011bc4:	9803      	ldr	r0, [sp, #12]
 8011bc6:	f7fb f88f 	bl	800cce8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8011bca:	4621      	mov	r1, r4
 8011bcc:	9801      	ldr	r0, [sp, #4]
 8011bce:	f7ff fcd5 	bl	801157c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011bd2:	e4fd      	b.n	80115d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011bd4:	464f      	mov	r7, r9
 8011bd6:	4635      	mov	r5, r6
 8011bd8:	e7ed      	b.n	8011bb6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x612>
 8011bda:	9b01      	ldr	r3, [sp, #4]
 8011bdc:	00ff      	lsls	r7, r7, #3
 8011bde:	19d9      	adds	r1, r3, r7
 8011be0:	f7fb f882 	bl	800cce8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8011be4:	9b03      	ldr	r3, [sp, #12]
 8011be6:	cb03      	ldmia	r3!, {r0, r1}
 8011be8:	445f      	add	r7, fp
 8011bea:	445d      	add	r5, fp
 8011bec:	f8c7 00a8 	str.w	r0, [r7, #168]	; 0xa8
 8011bf0:	f8c7 10ac 	str.w	r1, [r7, #172]	; 0xac
 8011bf4:	f855 0fa8 	ldr.w	r0, [r5, #168]!
 8011bf8:	9b03      	ldr	r3, [sp, #12]
 8011bfa:	6869      	ldr	r1, [r5, #4]
 8011bfc:	c303      	stmia	r3!, {r0, r1}
 8011bfe:	e7e4      	b.n	8011bca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x626>

08011c00 <_ZN8touchgfx11Application10invalidateEv>:
 8011c00:	4b09      	ldr	r3, [pc, #36]	; (8011c28 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8011c02:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011c06:	4b09      	ldr	r3, [pc, #36]	; (8011c2c <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8011c08:	b082      	sub	sp, #8
 8011c0a:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011c0e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011c12:	2100      	movs	r1, #0
 8011c14:	9100      	str	r1, [sp, #0]
 8011c16:	f8ad 2004 	strh.w	r2, [sp, #4]
 8011c1a:	ab02      	add	r3, sp, #8
 8011c1c:	e913 0006 	ldmdb	r3, {r1, r2}
 8011c20:	b002      	add	sp, #8
 8011c22:	f7ff bcbf 	b.w	80115a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8011c26:	bf00      	nop
 8011c28:	20017444 	.word	0x20017444
 8011c2c:	20017446 	.word	0x20017446

08011c30 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8011c30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011c34:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 8011c38:	b09b      	sub	sp, #108	; 0x6c
 8011c3a:	4604      	mov	r4, r0
 8011c3c:	4630      	mov	r0, r6
 8011c3e:	f7f9 fb30 	bl	800b2a2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011c42:	4605      	mov	r5, r0
 8011c44:	b940      	cbnz	r0, 8011c58 <_ZN8touchgfx11Application15drawCachedAreasEv+0x28>
 8011c46:	e896 0006 	ldmia.w	r6, {r1, r2}
 8011c4a:	4620      	mov	r0, r4
 8011c4c:	f7ff fcaa 	bl	80115a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8011c50:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 8011c54:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8011c58:	4bc9      	ldr	r3, [pc, #804]	; (8011f80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8011c5a:	681b      	ldr	r3, [r3, #0]
 8011c5c:	2b00      	cmp	r3, #0
 8011c5e:	d03e      	beq.n	8011cde <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 8011c60:	4dc8      	ldr	r5, [pc, #800]	; (8011f84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8011c62:	4628      	mov	r0, r5
 8011c64:	f7f9 fb1d 	bl	800b2a2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011c68:	4606      	mov	r6, r0
 8011c6a:	2800      	cmp	r0, #0
 8011c6c:	d137      	bne.n	8011cde <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 8011c6e:	4628      	mov	r0, r5
 8011c70:	f7ff fa4a 	bl	8011108 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8011c74:	6829      	ldr	r1, [r5, #0]
 8011c76:	686a      	ldr	r2, [r5, #4]
 8011c78:	4620      	mov	r0, r4
 8011c7a:	f7ff fc93 	bl	80115a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8011c7e:	802e      	strh	r6, [r5, #0]
 8011c80:	806e      	strh	r6, [r5, #2]
 8011c82:	80ae      	strh	r6, [r5, #4]
 8011c84:	80ee      	strh	r6, [r5, #6]
 8011c86:	ae09      	add	r6, sp, #36	; 0x24
 8011c88:	4630      	mov	r0, r6
 8011c8a:	f7ff fc26 	bl	80114da <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8011c8e:	4abe      	ldr	r2, [pc, #760]	; (8011f88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8011c90:	f8b4 70e8 	ldrh.w	r7, [r4, #232]	; 0xe8
 8011c94:	8815      	ldrh	r5, [r2, #0]
 8011c96:	9202      	str	r2, [sp, #8]
 8011c98:	462b      	mov	r3, r5
 8011c9a:	f104 00a8 	add.w	r0, r4, #168	; 0xa8
 8011c9e:	429f      	cmp	r7, r3
 8011ca0:	d924      	bls.n	8011cec <_ZN8touchgfx11Application15drawCachedAreasEv+0xbc>
 8011ca2:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 8011ca6:	2907      	cmp	r1, #7
 8011ca8:	d816      	bhi.n	8011cd8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xa8>
 8011caa:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8011cae:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 8011cb2:	f9b2 9002 	ldrsh.w	r9, [r2, #2]
 8011cb6:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 8011cba:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8011cbe:	1c4a      	adds	r2, r1, #1
 8011cc0:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8011cc4:	eb06 02c1 	add.w	r2, r6, r1, lsl #3
 8011cc8:	f826 8031 	strh.w	r8, [r6, r1, lsl #3]
 8011ccc:	f8a2 9002 	strh.w	r9, [r2, #2]
 8011cd0:	f8a2 e004 	strh.w	lr, [r2, #4]
 8011cd4:	f8a2 c006 	strh.w	ip, [r2, #6]
 8011cd8:	3301      	adds	r3, #1
 8011cda:	b29b      	uxth	r3, r3
 8011cdc:	e7df      	b.n	8011c9e <_ZN8touchgfx11Application15drawCachedAreasEv+0x6e>
 8011cde:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8011ce2:	2b00      	cmp	r3, #0
 8011ce4:	d1cf      	bne.n	8011c86 <_ZN8touchgfx11Application15drawCachedAreasEv+0x56>
 8011ce6:	b01b      	add	sp, #108	; 0x6c
 8011ce8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011cec:	462f      	mov	r7, r5
 8011cee:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 8011cf2:	42bb      	cmp	r3, r7
 8011cf4:	d90b      	bls.n	8011d0e <_ZN8touchgfx11Application15drawCachedAreasEv+0xde>
 8011cf6:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
 8011cfa:	4620      	mov	r0, r4
 8011cfc:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 8011d00:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 8011d04:	3701      	adds	r7, #1
 8011d06:	f7ff fc4d 	bl	80115a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8011d0a:	b2bf      	uxth	r7, r7
 8011d0c:	e7ef      	b.n	8011cee <_ZN8touchgfx11Application15drawCachedAreasEv+0xbe>
 8011d0e:	4a9f      	ldr	r2, [pc, #636]	; (8011f8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8011d10:	6813      	ldr	r3, [r2, #0]
 8011d12:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8011d16:	2b01      	cmp	r3, #1
 8011d18:	4690      	mov	r8, r2
 8011d1a:	f040 80e6 	bne.w	8011eea <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ba>
 8011d1e:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 8011d22:	f8b4 70e8 	ldrh.w	r7, [r4, #232]	; 0xe8
 8011d26:	4629      	mov	r1, r5
 8011d28:	33aa      	adds	r3, #170	; 0xaa
 8011d2a:	2500      	movs	r5, #0
 8011d2c:	428f      	cmp	r7, r1
 8011d2e:	f103 0308 	add.w	r3, r3, #8
 8011d32:	dd0a      	ble.n	8011d4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x11a>
 8011d34:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 8011d38:	f833 0c04 	ldrh.w	r0, [r3, #-4]
 8011d3c:	4402      	add	r2, r0
 8011d3e:	b212      	sxth	r2, r2
 8011d40:	4295      	cmp	r5, r2
 8011d42:	bfb8      	it	lt
 8011d44:	4615      	movlt	r5, r2
 8011d46:	3101      	adds	r1, #1
 8011d48:	e7f0      	b.n	8011d2c <_ZN8touchgfx11Application15drawCachedAreasEv+0xfc>
 8011d4a:	4b91      	ldr	r3, [pc, #580]	; (8011f90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8011d4c:	f8df b23c 	ldr.w	fp, [pc, #572]	; 8011f8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>
 8011d50:	881b      	ldrh	r3, [r3, #0]
 8011d52:	2b0f      	cmp	r3, #15
 8011d54:	bf88      	it	hi
 8011d56:	ea4f 0ad3 	movhi.w	sl, r3, lsr #3
 8011d5a:	f04f 0300 	mov.w	r3, #0
 8011d5e:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8011d62:	bf98      	it	ls
 8011d64:	f04f 0a01 	movls.w	sl, #1
 8011d68:	46d8      	mov	r8, fp
 8011d6a:	f8bd 701a 	ldrh.w	r7, [sp, #26]
 8011d6e:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 8011d72:	4438      	add	r0, r7
 8011d74:	b207      	sxth	r7, r0
 8011d76:	f8db 0000 	ldr.w	r0, [fp]
 8011d7a:	42bd      	cmp	r5, r7
 8011d7c:	6803      	ldr	r3, [r0, #0]
 8011d7e:	f340 8084 	ble.w	8011e8a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8011d82:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8011d86:	4798      	blx	r3
 8011d88:	eb07 030a 	add.w	r3, r7, sl
 8011d8c:	4298      	cmp	r0, r3
 8011d8e:	da07      	bge.n	8011da0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 8011d90:	4285      	cmp	r5, r0
 8011d92:	dd05      	ble.n	8011da0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 8011d94:	4287      	cmp	r7, r0
 8011d96:	dd6d      	ble.n	8011e74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8011d98:	2f00      	cmp	r7, #0
 8011d9a:	dd6b      	ble.n	8011e74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8011d9c:	4628      	mov	r0, r5
 8011d9e:	e004      	b.n	8011daa <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 8011da0:	4287      	cmp	r7, r0
 8011da2:	dcfb      	bgt.n	8011d9c <_ZN8touchgfx11Application15drawCachedAreasEv+0x16c>
 8011da4:	42a8      	cmp	r0, r5
 8011da6:	bfa8      	it	ge
 8011da8:	4628      	movge	r0, r5
 8011daa:	4b7a      	ldr	r3, [pc, #488]	; (8011f94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>)
 8011dac:	f8ad 7016 	strh.w	r7, [sp, #22]
 8011db0:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011db4:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011db8:	9b02      	ldr	r3, [sp, #8]
 8011dba:	1bc0      	subs	r0, r0, r7
 8011dbc:	2200      	movs	r2, #0
 8011dbe:	881f      	ldrh	r7, [r3, #0]
 8011dc0:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011dc4:	f8ad 001a 	strh.w	r0, [sp, #26]
 8011dc8:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8011dcc:	42bb      	cmp	r3, r7
 8011dce:	d9cc      	bls.n	8011d6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 8011dd0:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8011dd4:	ab07      	add	r3, sp, #28
 8011dd6:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 8011dda:	6851      	ldr	r1, [r2, #4]
 8011ddc:	c303      	stmia	r3!, {r0, r1}
 8011dde:	a905      	add	r1, sp, #20
 8011de0:	a807      	add	r0, sp, #28
 8011de2:	f7ff fad0 	bl	8011386 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011de6:	2800      	cmp	r0, #0
 8011de8:	d04c      	beq.n	8011e84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 8011dea:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8011dee:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8011df2:	f8bd 9020 	ldrh.w	r9, [sp, #32]
 8011df6:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8011dfa:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8011dfe:	9303      	str	r3, [sp, #12]
 8011e00:	4686      	mov	lr, r0
 8011e02:	4290      	cmp	r0, r2
 8011e04:	4448      	add	r0, r9
 8011e06:	f8bd 9018 	ldrh.w	r9, [sp, #24]
 8011e0a:	bfb8      	it	lt
 8011e0c:	4696      	movlt	lr, r2
 8011e0e:	444a      	add	r2, r9
 8011e10:	4299      	cmp	r1, r3
 8011e12:	b280      	uxth	r0, r0
 8011e14:	b292      	uxth	r2, r2
 8011e16:	468c      	mov	ip, r1
 8011e18:	fa0f f982 	sxth.w	r9, r2
 8011e1c:	bfb8      	it	lt
 8011e1e:	469c      	movlt	ip, r3
 8011e20:	b203      	sxth	r3, r0
 8011e22:	454b      	cmp	r3, r9
 8011e24:	bfb8      	it	lt
 8011e26:	4602      	movlt	r2, r0
 8011e28:	eba2 020e 	sub.w	r2, r2, lr
 8011e2c:	f8ad 2020 	strh.w	r2, [sp, #32]
 8011e30:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8011e34:	9b03      	ldr	r3, [sp, #12]
 8011e36:	f8ad e01c 	strh.w	lr, [sp, #28]
 8011e3a:	4411      	add	r1, r2
 8011e3c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8011e40:	f8ad c01e 	strh.w	ip, [sp, #30]
 8011e44:	4413      	add	r3, r2
 8011e46:	b289      	uxth	r1, r1
 8011e48:	b29b      	uxth	r3, r3
 8011e4a:	b208      	sxth	r0, r1
 8011e4c:	b21a      	sxth	r2, r3
 8011e4e:	4290      	cmp	r0, r2
 8011e50:	bfb8      	it	lt
 8011e52:	460b      	movlt	r3, r1
 8011e54:	eba3 030c 	sub.w	r3, r3, ip
 8011e58:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8011e5c:	a807      	add	r0, sp, #28
 8011e5e:	f7f9 fa20 	bl	800b2a2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011e62:	b920      	cbnz	r0, 8011e6e <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8011e64:	6823      	ldr	r3, [r4, #0]
 8011e66:	a907      	add	r1, sp, #28
 8011e68:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011e6a:	4620      	mov	r0, r4
 8011e6c:	4798      	blx	r3
 8011e6e:	3701      	adds	r7, #1
 8011e70:	b2bf      	uxth	r7, r7
 8011e72:	e7a9      	b.n	8011dc8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8011e74:	f8d8 0000 	ldr.w	r0, [r8]
 8011e78:	6803      	ldr	r3, [r0, #0]
 8011e7a:	2101      	movs	r1, #1
 8011e7c:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8011e80:	4798      	blx	r3
 8011e82:	e772      	b.n	8011d6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 8011e84:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8011e88:	e7e8      	b.n	8011e5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 8011e8a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011e8c:	4798      	blx	r3
 8011e8e:	4b42      	ldr	r3, [pc, #264]	; (8011f98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x368>)
 8011e90:	781b      	ldrb	r3, [r3, #0]
 8011e92:	2b00      	cmp	r3, #0
 8011e94:	f43f af27 	beq.w	8011ce6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 8011e98:	2300      	movs	r3, #0
 8011e9a:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 8011e9e:	9b02      	ldr	r3, [sp, #8]
 8011ea0:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8011ea4:	881b      	ldrh	r3, [r3, #0]
 8011ea6:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 8011eaa:	429d      	cmp	r5, r3
 8011eac:	f67f af1b 	bls.w	8011ce6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 8011eb0:	f8b4 112a 	ldrh.w	r1, [r4, #298]	; 0x12a
 8011eb4:	2907      	cmp	r1, #7
 8011eb6:	d815      	bhi.n	8011ee4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b4>
 8011eb8:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 8011ebc:	f936 8033 	ldrsh.w	r8, [r6, r3, lsl #3]
 8011ec0:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 8011ec4:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 8011ec8:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 8011ecc:	1c4a      	adds	r2, r1, #1
 8011ece:	f8a4 212a 	strh.w	r2, [r4, #298]	; 0x12a
 8011ed2:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8011ed6:	f820 8031 	strh.w	r8, [r0, r1, lsl #3]
 8011eda:	f8a2 e002 	strh.w	lr, [r2, #2]
 8011ede:	f8a2 c004 	strh.w	ip, [r2, #4]
 8011ee2:	80d7      	strh	r7, [r2, #6]
 8011ee4:	3301      	adds	r3, #1
 8011ee6:	b29b      	uxth	r3, r3
 8011ee8:	e7df      	b.n	8011eaa <_ZN8touchgfx11Application15drawCachedAreasEv+0x27a>
 8011eea:	2b02      	cmp	r3, #2
 8011eec:	f040 8136 	bne.w	801215c <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 8011ef0:	4b2a      	ldr	r3, [pc, #168]	; (8011f9c <_ZN8touchgfx11Application15drawCachedAreasEv+0x36c>)
 8011ef2:	781b      	ldrb	r3, [r3, #0]
 8011ef4:	2b01      	cmp	r3, #1
 8011ef6:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 8011efa:	f000 809c 	beq.w	8012036 <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 8011efe:	9b02      	ldr	r3, [sp, #8]
 8011f00:	f8b4 20e8 	ldrh.w	r2, [r4, #232]	; 0xe8
 8011f04:	f8b3 b000 	ldrh.w	fp, [r3]
 8011f08:	f10b 0b01 	add.w	fp, fp, #1
 8011f0c:	fa1f fb8b 	uxth.w	fp, fp
 8011f10:	2a00      	cmp	r2, #0
 8011f12:	d0bc      	beq.n	8011e8e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8011f14:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 8011f18:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 8011f1c:	441d      	add	r5, r3
 8011f1e:	b22d      	sxth	r5, r5
 8011f20:	4659      	mov	r1, fp
 8011f22:	f04f 0800 	mov.w	r8, #0
 8011f26:	b28b      	uxth	r3, r1
 8011f28:	429a      	cmp	r2, r3
 8011f2a:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 8011f2e:	f240 80c1 	bls.w	80120b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x484>
 8011f32:	4427      	add	r7, r4
 8011f34:	eb04 0ec1 	add.w	lr, r4, r1, lsl #3
 8011f38:	f9b7 30aa 	ldrsh.w	r3, [r7, #170]	; 0xaa
 8011f3c:	f9be c0aa 	ldrsh.w	ip, [lr, #170]	; 0xaa
 8011f40:	4563      	cmp	r3, ip
 8011f42:	4608      	mov	r0, r1
 8011f44:	f340 80a3 	ble.w	801208e <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
 8011f48:	f8be 50ae 	ldrh.w	r5, [lr, #174]	; 0xae
 8011f4c:	4465      	add	r5, ip
 8011f4e:	b22d      	sxth	r5, r5
 8011f50:	429d      	cmp	r5, r3
 8011f52:	bfa8      	it	ge
 8011f54:	461d      	movge	r5, r3
 8011f56:	3101      	adds	r1, #1
 8011f58:	4680      	mov	r8, r0
 8011f5a:	e7e4      	b.n	8011f26 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
 8011f5c:	d10b      	bne.n	8011f76 <_ZN8touchgfx11Application15drawCachedAreasEv+0x346>
 8011f5e:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 8011f62:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 8011f66:	458c      	cmp	ip, r1
 8011f68:	bfb4      	ite	lt
 8011f6a:	469c      	movlt	ip, r3
 8011f6c:	46bc      	movge	ip, r7
 8011f6e:	4572      	cmp	r2, lr
 8011f70:	bfb8      	it	lt
 8011f72:	4672      	movlt	r2, lr
 8011f74:	e088      	b.n	8012088 <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 8011f76:	428a      	cmp	r2, r1
 8011f78:	bfb8      	it	lt
 8011f7a:	460a      	movlt	r2, r1
 8011f7c:	46bc      	mov	ip, r7
 8011f7e:	e083      	b.n	8012088 <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 8011f80:	20017490 	.word	0x20017490
 8011f84:	2001749c 	.word	0x2001749c
 8011f88:	2000008c 	.word	0x2000008c
 8011f8c:	20017450 	.word	0x20017450
 8011f90:	20017446 	.word	0x20017446
 8011f94:	20017444 	.word	0x20017444
 8011f98:	2001744e 	.word	0x2001744e
 8011f9c:	20017448 	.word	0x20017448
 8011fa0:	1961      	adds	r1, r4, r5
 8011fa2:	ab07      	add	r3, sp, #28
 8011fa4:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 8011fa8:	6849      	ldr	r1, [r1, #4]
 8011faa:	c303      	stmia	r3!, {r0, r1}
 8011fac:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8011fb0:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8011fb4:	2b13      	cmp	r3, #19
 8011fb6:	bfd8      	it	le
 8011fb8:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8011fbc:	f8ad 201c 	strh.w	r2, [sp, #28]
 8011fc0:	440b      	add	r3, r1
 8011fc2:	1a9b      	subs	r3, r3, r2
 8011fc4:	a807      	add	r0, sp, #28
 8011fc6:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011fca:	f7ff f8b7 	bl	801113c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011fce:	a807      	add	r0, sp, #28
 8011fd0:	f7f9 f967 	bl	800b2a2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011fd4:	bb78      	cbnz	r0, 8012036 <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 8011fd6:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8011fda:	f8d8 0000 	ldr.w	r0, [r8]
 8011fde:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8011fe2:	f8d0 e000 	ldr.w	lr, [r0]
 8011fe6:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8011fea:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8011fee:	f1bc 0f14 	cmp.w	ip, #20
 8011ff2:	bfa8      	it	ge
 8011ff4:	f04f 0c14 	movge.w	ip, #20
 8011ff8:	fa1f fc8c 	uxth.w	ip, ip
 8011ffc:	f8cd c000 	str.w	ip, [sp]
 8012000:	f8de a090 	ldr.w	sl, [lr, #144]	; 0x90
 8012004:	47d0      	blx	sl
 8012006:	4682      	mov	sl, r0
 8012008:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801200c:	a807      	add	r0, sp, #28
 801200e:	f7ff f87b 	bl	8011108 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8012012:	6823      	ldr	r3, [r4, #0]
 8012014:	4425      	add	r5, r4
 8012016:	4620      	mov	r0, r4
 8012018:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801201a:	a907      	add	r1, sp, #28
 801201c:	4798      	blx	r3
 801201e:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 8012022:	eba0 000a 	sub.w	r0, r0, sl
 8012026:	b200      	sxth	r0, r0
 8012028:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 801202c:	b918      	cbnz	r0, 8012036 <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 801202e:	b2b9      	uxth	r1, r7
 8012030:	4648      	mov	r0, r9
 8012032:	f7ff faa3 	bl	801157c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8012036:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 801203a:	f1bb 0f00 	cmp.w	fp, #0
 801203e:	f43f af26 	beq.w	8011e8e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8012042:	9b02      	ldr	r3, [sp, #8]
 8012044:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 8012048:	881b      	ldrh	r3, [r3, #0]
 801204a:	3301      	adds	r3, #1
 801204c:	b29b      	uxth	r3, r3
 801204e:	2700      	movs	r7, #0
 8012050:	b299      	uxth	r1, r3
 8012052:	458b      	cmp	fp, r1
 8012054:	ea4f 05c7 	mov.w	r5, r7, lsl #3
 8012058:	d9a2      	bls.n	8011fa0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x370>
 801205a:	4425      	add	r5, r4
 801205c:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 8012060:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 8012064:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 8012068:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 801206c:	4408      	add	r0, r1
 801206e:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 8012072:	4471      	add	r1, lr
 8012074:	b200      	sxth	r0, r0
 8012076:	b209      	sxth	r1, r1
 8012078:	4288      	cmp	r0, r1
 801207a:	469c      	mov	ip, r3
 801207c:	f6bf af6e 	bge.w	8011f5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x32c>
 8012080:	4586      	cmp	lr, r0
 8012082:	4672      	mov	r2, lr
 8012084:	bfb8      	it	lt
 8012086:	4602      	movlt	r2, r0
 8012088:	3301      	adds	r3, #1
 801208a:	4667      	mov	r7, ip
 801208c:	e7e0      	b.n	8012050 <_ZN8touchgfx11Application15drawCachedAreasEv+0x420>
 801208e:	d10c      	bne.n	80120aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x47a>
 8012090:	f9b7 70ac 	ldrsh.w	r7, [r7, #172]	; 0xac
 8012094:	f9be 00ac 	ldrsh.w	r0, [lr, #172]	; 0xac
 8012098:	4287      	cmp	r7, r0
 801209a:	bfb4      	ite	lt
 801209c:	4608      	movlt	r0, r1
 801209e:	4640      	movge	r0, r8
 80120a0:	f8be 70ae 	ldrh.w	r7, [lr, #174]	; 0xae
 80120a4:	443b      	add	r3, r7
 80120a6:	b21b      	sxth	r3, r3
 80120a8:	e752      	b.n	8011f50 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 80120aa:	4565      	cmp	r5, ip
 80120ac:	bfa8      	it	ge
 80120ae:	4665      	movge	r5, ip
 80120b0:	4640      	mov	r0, r8
 80120b2:	e750      	b.n	8011f56 <_ZN8touchgfx11Application15drawCachedAreasEv+0x326>
 80120b4:	eb09 0007 	add.w	r0, r9, r7
 80120b8:	4427      	add	r7, r4
 80120ba:	9203      	str	r2, [sp, #12]
 80120bc:	f9b7 a0ae 	ldrsh.w	sl, [r7, #174]	; 0xae
 80120c0:	f1ba 0f13 	cmp.w	sl, #19
 80120c4:	bfde      	ittt	le
 80120c6:	f8b7 50aa 	ldrhle.w	r5, [r7, #170]	; 0xaa
 80120ca:	4455      	addle	r5, sl
 80120cc:	b22d      	sxthle	r5, r5
 80120ce:	f7f9 f8e8 	bl	800b2a2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80120d2:	9a03      	ldr	r2, [sp, #12]
 80120d4:	2800      	cmp	r0, #0
 80120d6:	f47f af1b 	bne.w	8011f10 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e0>
 80120da:	f9b7 20aa 	ldrsh.w	r2, [r7, #170]	; 0xaa
 80120de:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80120e2:	482a      	ldr	r0, [pc, #168]	; (801218c <_ZN8touchgfx11Application15drawCachedAreasEv+0x55c>)
 80120e4:	f9b7 10a8 	ldrsh.w	r1, [r7, #168]	; 0xa8
 80120e8:	f9b7 30ac 	ldrsh.w	r3, [r7, #172]	; 0xac
 80120ec:	6800      	ldr	r0, [r0, #0]
 80120ee:	f8ad 101c 	strh.w	r1, [sp, #28]
 80120f2:	1aad      	subs	r5, r5, r2
 80120f4:	2d14      	cmp	r5, #20
 80120f6:	f8ad 201e 	strh.w	r2, [sp, #30]
 80120fa:	f8ad 3020 	strh.w	r3, [sp, #32]
 80120fe:	bfa8      	it	ge
 8012100:	2514      	movge	r5, #20
 8012102:	f8d0 c000 	ldr.w	ip, [r0]
 8012106:	b2ad      	uxth	r5, r5
 8012108:	fa1f fa8a 	uxth.w	sl, sl
 801210c:	4555      	cmp	r5, sl
 801210e:	bf94      	ite	ls
 8012110:	9500      	strls	r5, [sp, #0]
 8012112:	f8cd a000 	strhi.w	sl, [sp]
 8012116:	b292      	uxth	r2, r2
 8012118:	f8dc 5090 	ldr.w	r5, [ip, #144]	; 0x90
 801211c:	b29b      	uxth	r3, r3
 801211e:	b289      	uxth	r1, r1
 8012120:	47a8      	blx	r5
 8012122:	6823      	ldr	r3, [r4, #0]
 8012124:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8012128:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801212a:	a907      	add	r1, sp, #28
 801212c:	4620      	mov	r0, r4
 801212e:	4798      	blx	r3
 8012130:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8012134:	f8b7 30ae 	ldrh.w	r3, [r7, #174]	; 0xae
 8012138:	f8b7 20aa 	ldrh.w	r2, [r7, #170]	; 0xaa
 801213c:	1a5b      	subs	r3, r3, r1
 801213e:	440a      	add	r2, r1
 8012140:	b21b      	sxth	r3, r3
 8012142:	f8a7 20aa 	strh.w	r2, [r7, #170]	; 0xaa
 8012146:	f8a7 30ae 	strh.w	r3, [r7, #174]	; 0xae
 801214a:	2b00      	cmp	r3, #0
 801214c:	f47f aed7 	bne.w	8011efe <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 8012150:	fa1f f188 	uxth.w	r1, r8
 8012154:	4648      	mov	r0, r9
 8012156:	f7ff fa11 	bl	801157c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801215a:	e6d0      	b.n	8011efe <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 801215c:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8012160:	42ab      	cmp	r3, r5
 8012162:	f67f ae94 	bls.w	8011e8e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8012166:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 801216a:	ab07      	add	r3, sp, #28
 801216c:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 8012170:	6851      	ldr	r1, [r2, #4]
 8012172:	c303      	stmia	r3!, {r0, r1}
 8012174:	a807      	add	r0, sp, #28
 8012176:	f7f9 f894 	bl	800b2a2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801217a:	b920      	cbnz	r0, 8012186 <_ZN8touchgfx11Application15drawCachedAreasEv+0x556>
 801217c:	6823      	ldr	r3, [r4, #0]
 801217e:	a907      	add	r1, sp, #28
 8012180:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8012182:	4620      	mov	r0, r4
 8012184:	4798      	blx	r3
 8012186:	3501      	adds	r5, #1
 8012188:	b2ad      	uxth	r5, r5
 801218a:	e7e7      	b.n	801215c <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 801218c:	20017450 	.word	0x20017450

08012190 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8012190:	4b03      	ldr	r3, [pc, #12]	; (80121a0 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8012192:	2200      	movs	r2, #0
 8012194:	801a      	strh	r2, [r3, #0]
 8012196:	805a      	strh	r2, [r3, #2]
 8012198:	809a      	strh	r2, [r3, #4]
 801219a:	80da      	strh	r2, [r3, #6]
 801219c:	4770      	bx	lr
 801219e:	bf00      	nop
 80121a0:	2001749c 	.word	0x2001749c

080121a4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 80121a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80121a8:	4606      	mov	r6, r0
 80121aa:	b09d      	sub	sp, #116	; 0x74
 80121ac:	a803      	add	r0, sp, #12
 80121ae:	4614      	mov	r4, r2
 80121b0:	468a      	mov	sl, r1
 80121b2:	461d      	mov	r5, r3
 80121b4:	f000 fe67 	bl	8012e86 <_ZN8touchgfx12TextProviderC1Ev>
 80121b8:	6833      	ldr	r3, [r6, #0]
 80121ba:	4630      	mov	r0, r6
 80121bc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80121be:	4798      	blx	r3
 80121c0:	6833      	ldr	r3, [r6, #0]
 80121c2:	4607      	mov	r7, r0
 80121c4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80121c6:	4630      	mov	r0, r6
 80121c8:	4798      	blx	r3
 80121ca:	462a      	mov	r2, r5
 80121cc:	9000      	str	r0, [sp, #0]
 80121ce:	4621      	mov	r1, r4
 80121d0:	463b      	mov	r3, r7
 80121d2:	a803      	add	r0, sp, #12
 80121d4:	f000 feb2 	bl	8012f3c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80121d8:	2500      	movs	r5, #0
 80121da:	462c      	mov	r4, r5
 80121dc:	46a9      	mov	r9, r5
 80121de:	46a8      	mov	r8, r5
 80121e0:	f242 0b0b 	movw	fp, #8203	; 0x200b
 80121e4:	2300      	movs	r3, #0
 80121e6:	9302      	str	r3, [sp, #8]
 80121e8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80121ec:	429c      	cmp	r4, r3
 80121ee:	d002      	beq.n	80121f6 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 80121f0:	455c      	cmp	r4, fp
 80121f2:	bf18      	it	ne
 80121f4:	4625      	movne	r5, r4
 80121f6:	ab02      	add	r3, sp, #8
 80121f8:	4632      	mov	r2, r6
 80121fa:	4651      	mov	r1, sl
 80121fc:	a803      	add	r0, sp, #12
 80121fe:	f001 f99f 	bl	8013540 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8012202:	4604      	mov	r4, r0
 8012204:	b108      	cbz	r0, 801220a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8012206:	280a      	cmp	r0, #10
 8012208:	d10a      	bne.n	8012220 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 801220a:	45c1      	cmp	r9, r8
 801220c:	bf38      	it	cc
 801220e:	46c1      	movcc	r9, r8
 8012210:	f04f 0800 	mov.w	r8, #0
 8012214:	2c00      	cmp	r4, #0
 8012216:	d1e5      	bne.n	80121e4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8012218:	4648      	mov	r0, r9
 801221a:	b01d      	add	sp, #116	; 0x74
 801221c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012220:	9a02      	ldr	r2, [sp, #8]
 8012222:	2a00      	cmp	r2, #0
 8012224:	d0de      	beq.n	80121e4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8012226:	7b57      	ldrb	r7, [r2, #13]
 8012228:	6833      	ldr	r3, [r6, #0]
 801222a:	8894      	ldrh	r4, [r2, #4]
 801222c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801222e:	007f      	lsls	r7, r7, #1
 8012230:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8012234:	7a97      	ldrb	r7, [r2, #10]
 8012236:	4629      	mov	r1, r5
 8012238:	4307      	orrs	r7, r0
 801223a:	4630      	mov	r0, r6
 801223c:	4798      	blx	r3
 801223e:	4438      	add	r0, r7
 8012240:	4480      	add	r8, r0
 8012242:	fa1f f888 	uxth.w	r8, r8
 8012246:	e7e5      	b.n	8012214 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08012248 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8012248:	b508      	push	{r3, lr}
 801224a:	6803      	ldr	r3, [r0, #0]
 801224c:	68db      	ldr	r3, [r3, #12]
 801224e:	4798      	blx	r3
 8012250:	b128      	cbz	r0, 801225e <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8012252:	7b43      	ldrb	r3, [r0, #13]
 8012254:	7a80      	ldrb	r0, [r0, #10]
 8012256:	005b      	lsls	r3, r3, #1
 8012258:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801225c:	4318      	orrs	r0, r3
 801225e:	bd08      	pop	{r3, pc}

08012260 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8012260:	b40e      	push	{r1, r2, r3}
 8012262:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012264:	b09e      	sub	sp, #120	; 0x78
 8012266:	ab23      	add	r3, sp, #140	; 0x8c
 8012268:	4605      	mov	r5, r0
 801226a:	f853 4b04 	ldr.w	r4, [r3], #4
 801226e:	9303      	str	r3, [sp, #12]
 8012270:	a805      	add	r0, sp, #20
 8012272:	f000 fe08 	bl	8012e86 <_ZN8touchgfx12TextProviderC1Ev>
 8012276:	682b      	ldr	r3, [r5, #0]
 8012278:	4628      	mov	r0, r5
 801227a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801227c:	4798      	blx	r3
 801227e:	682b      	ldr	r3, [r5, #0]
 8012280:	4606      	mov	r6, r0
 8012282:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8012284:	4628      	mov	r0, r5
 8012286:	4798      	blx	r3
 8012288:	4633      	mov	r3, r6
 801228a:	ae1e      	add	r6, sp, #120	; 0x78
 801228c:	4621      	mov	r1, r4
 801228e:	9000      	str	r0, [sp, #0]
 8012290:	9a03      	ldr	r2, [sp, #12]
 8012292:	2400      	movs	r4, #0
 8012294:	a805      	add	r0, sp, #20
 8012296:	f000 fe51 	bl	8012f3c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801229a:	f846 4d68 	str.w	r4, [r6, #-104]!
 801229e:	462a      	mov	r2, r5
 80122a0:	4633      	mov	r3, r6
 80122a2:	4621      	mov	r1, r4
 80122a4:	a805      	add	r0, sp, #20
 80122a6:	f001 f94b 	bl	8013540 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80122aa:	b1f0      	cbz	r0, 80122ea <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 80122ac:	280a      	cmp	r0, #10
 80122ae:	d018      	beq.n	80122e2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 80122b0:	9f04      	ldr	r7, [sp, #16]
 80122b2:	b1b7      	cbz	r7, 80122e2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 80122b4:	7b78      	ldrb	r0, [r7, #13]
 80122b6:	7a3b      	ldrb	r3, [r7, #8]
 80122b8:	88aa      	ldrh	r2, [r5, #4]
 80122ba:	00c1      	lsls	r1, r0, #3
 80122bc:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80122c0:	4319      	orrs	r1, r3
 80122c2:	0643      	lsls	r3, r0, #25
 80122c4:	bf44      	itt	mi
 80122c6:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 80122ca:	b219      	sxthmi	r1, r3
 80122cc:	0100      	lsls	r0, r0, #4
 80122ce:	79fb      	ldrb	r3, [r7, #7]
 80122d0:	f400 7080 	and.w	r0, r0, #256	; 0x100
 80122d4:	4303      	orrs	r3, r0
 80122d6:	4413      	add	r3, r2
 80122d8:	1a5b      	subs	r3, r3, r1
 80122da:	b29b      	uxth	r3, r3
 80122dc:	42a3      	cmp	r3, r4
 80122de:	bfc8      	it	gt
 80122e0:	b21c      	sxthgt	r4, r3
 80122e2:	4633      	mov	r3, r6
 80122e4:	462a      	mov	r2, r5
 80122e6:	2100      	movs	r1, #0
 80122e8:	e7dc      	b.n	80122a4 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 80122ea:	b2a0      	uxth	r0, r4
 80122ec:	b01e      	add	sp, #120	; 0x78
 80122ee:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80122f2:	b003      	add	sp, #12
 80122f4:	4770      	bx	lr

080122f6 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 80122f6:	b40e      	push	{r1, r2, r3}
 80122f8:	b570      	push	{r4, r5, r6, lr}
 80122fa:	b09d      	sub	sp, #116	; 0x74
 80122fc:	ab21      	add	r3, sp, #132	; 0x84
 80122fe:	4604      	mov	r4, r0
 8012300:	f853 5b04 	ldr.w	r5, [r3], #4
 8012304:	9302      	str	r3, [sp, #8]
 8012306:	a803      	add	r0, sp, #12
 8012308:	f000 fdbd 	bl	8012e86 <_ZN8touchgfx12TextProviderC1Ev>
 801230c:	6823      	ldr	r3, [r4, #0]
 801230e:	4620      	mov	r0, r4
 8012310:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012312:	4798      	blx	r3
 8012314:	6823      	ldr	r3, [r4, #0]
 8012316:	4606      	mov	r6, r0
 8012318:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801231a:	4620      	mov	r0, r4
 801231c:	4798      	blx	r3
 801231e:	4633      	mov	r3, r6
 8012320:	9000      	str	r0, [sp, #0]
 8012322:	9a02      	ldr	r2, [sp, #8]
 8012324:	4629      	mov	r1, r5
 8012326:	a803      	add	r0, sp, #12
 8012328:	f000 fe08 	bl	8012f3c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801232c:	a803      	add	r0, sp, #12
 801232e:	f001 f9d5 	bl	80136dc <_ZN8touchgfx12TextProvider11getNextCharEv>
 8012332:	2401      	movs	r4, #1
 8012334:	b2a3      	uxth	r3, r4
 8012336:	b140      	cbz	r0, 801234a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8012338:	280a      	cmp	r0, #10
 801233a:	bf08      	it	eq
 801233c:	3301      	addeq	r3, #1
 801233e:	a803      	add	r0, sp, #12
 8012340:	bf08      	it	eq
 8012342:	b21c      	sxtheq	r4, r3
 8012344:	f001 f9ca 	bl	80136dc <_ZN8touchgfx12TextProvider11getNextCharEv>
 8012348:	e7f4      	b.n	8012334 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 801234a:	4618      	mov	r0, r3
 801234c:	b01d      	add	sp, #116	; 0x74
 801234e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012352:	b003      	add	sp, #12
 8012354:	4770      	bx	lr

08012356 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8012356:	b40e      	push	{r1, r2, r3}
 8012358:	b5f0      	push	{r4, r5, r6, r7, lr}
 801235a:	b09e      	sub	sp, #120	; 0x78
 801235c:	ab23      	add	r3, sp, #140	; 0x8c
 801235e:	4604      	mov	r4, r0
 8012360:	f853 5b04 	ldr.w	r5, [r3], #4
 8012364:	9303      	str	r3, [sp, #12]
 8012366:	a805      	add	r0, sp, #20
 8012368:	f000 fd8d 	bl	8012e86 <_ZN8touchgfx12TextProviderC1Ev>
 801236c:	6823      	ldr	r3, [r4, #0]
 801236e:	4620      	mov	r0, r4
 8012370:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012372:	4798      	blx	r3
 8012374:	6823      	ldr	r3, [r4, #0]
 8012376:	4606      	mov	r6, r0
 8012378:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801237a:	4620      	mov	r0, r4
 801237c:	4798      	blx	r3
 801237e:	4633      	mov	r3, r6
 8012380:	4629      	mov	r1, r5
 8012382:	9000      	str	r0, [sp, #0]
 8012384:	9a03      	ldr	r2, [sp, #12]
 8012386:	a805      	add	r0, sp, #20
 8012388:	ad1e      	add	r5, sp, #120	; 0x78
 801238a:	f000 fdd7 	bl	8012f3c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801238e:	2100      	movs	r1, #0
 8012390:	f845 1d68 	str.w	r1, [r5, #-104]!
 8012394:	4622      	mov	r2, r4
 8012396:	462b      	mov	r3, r5
 8012398:	a805      	add	r0, sp, #20
 801239a:	f001 f8d1 	bl	8013540 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801239e:	26ff      	movs	r6, #255	; 0xff
 80123a0:	b1d8      	cbz	r0, 80123da <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 80123a2:	280a      	cmp	r0, #10
 80123a4:	d012      	beq.n	80123cc <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 80123a6:	9804      	ldr	r0, [sp, #16]
 80123a8:	b180      	cbz	r0, 80123cc <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 80123aa:	7b47      	ldrb	r7, [r0, #13]
 80123ac:	7922      	ldrb	r2, [r4, #4]
 80123ae:	00fb      	lsls	r3, r7, #3
 80123b0:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80123b4:	7a03      	ldrb	r3, [r0, #8]
 80123b6:	430b      	orrs	r3, r1
 80123b8:	0679      	lsls	r1, r7, #25
 80123ba:	bf44      	itt	mi
 80123bc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80123c0:	b21b      	sxthmi	r3, r3
 80123c2:	1ad3      	subs	r3, r2, r3
 80123c4:	b2db      	uxtb	r3, r3
 80123c6:	429e      	cmp	r6, r3
 80123c8:	bf28      	it	cs
 80123ca:	461e      	movcs	r6, r3
 80123cc:	462b      	mov	r3, r5
 80123ce:	4622      	mov	r2, r4
 80123d0:	2100      	movs	r1, #0
 80123d2:	a805      	add	r0, sp, #20
 80123d4:	f001 f8b4 	bl	8013540 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80123d8:	e7e2      	b.n	80123a0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 80123da:	4630      	mov	r0, r6
 80123dc:	b01e      	add	sp, #120	; 0x78
 80123de:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80123e2:	b003      	add	sp, #12
 80123e4:	4770      	bx	lr

080123e6 <_ZNK8touchgfx8Drawable10invalidateEv>:
 80123e6:	b513      	push	{r0, r1, r4, lr}
 80123e8:	6803      	ldr	r3, [r0, #0]
 80123ea:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80123ee:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80123f2:	f8ad 1004 	strh.w	r1, [sp, #4]
 80123f6:	2400      	movs	r4, #0
 80123f8:	9400      	str	r4, [sp, #0]
 80123fa:	f8ad 2006 	strh.w	r2, [sp, #6]
 80123fe:	691b      	ldr	r3, [r3, #16]
 8012400:	4669      	mov	r1, sp
 8012402:	4798      	blx	r3
 8012404:	b002      	add	sp, #8
 8012406:	bd10      	pop	{r4, pc}

08012408 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8012408:	b538      	push	{r3, r4, r5, lr}
 801240a:	680b      	ldr	r3, [r1, #0]
 801240c:	460c      	mov	r4, r1
 801240e:	68db      	ldr	r3, [r3, #12]
 8012410:	4605      	mov	r5, r0
 8012412:	4798      	blx	r3
 8012414:	6823      	ldr	r3, [r4, #0]
 8012416:	4620      	mov	r0, r4
 8012418:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801241a:	4629      	mov	r1, r5
 801241c:	4798      	blx	r3
 801241e:	4628      	mov	r0, r5
 8012420:	bd38      	pop	{r3, r4, r5, pc}

08012422 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8012422:	b410      	push	{r4}
 8012424:	880a      	ldrh	r2, [r1, #0]
 8012426:	8884      	ldrh	r4, [r0, #4]
 8012428:	4422      	add	r2, r4
 801242a:	800a      	strh	r2, [r1, #0]
 801242c:	88c4      	ldrh	r4, [r0, #6]
 801242e:	884a      	ldrh	r2, [r1, #2]
 8012430:	4422      	add	r2, r4
 8012432:	804a      	strh	r2, [r1, #2]
 8012434:	6940      	ldr	r0, [r0, #20]
 8012436:	b120      	cbz	r0, 8012442 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8012438:	6803      	ldr	r3, [r0, #0]
 801243a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801243e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012440:	4718      	bx	r3
 8012442:	f85d 4b04 	ldr.w	r4, [sp], #4
 8012446:	4770      	bx	lr

08012448 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8012448:	b570      	push	{r4, r5, r6, lr}
 801244a:	8882      	ldrh	r2, [r0, #4]
 801244c:	880b      	ldrh	r3, [r1, #0]
 801244e:	4413      	add	r3, r2
 8012450:	800b      	strh	r3, [r1, #0]
 8012452:	88c2      	ldrh	r2, [r0, #6]
 8012454:	884b      	ldrh	r3, [r1, #2]
 8012456:	460c      	mov	r4, r1
 8012458:	4413      	add	r3, r2
 801245a:	804b      	strh	r3, [r1, #2]
 801245c:	4605      	mov	r5, r0
 801245e:	1d01      	adds	r1, r0, #4
 8012460:	4620      	mov	r0, r4
 8012462:	f7f8 fedb 	bl	800b21c <_ZN8touchgfx4RectaNERKS0_>
 8012466:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801246a:	2b00      	cmp	r3, #0
 801246c:	dd0b      	ble.n	8012486 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801246e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8012472:	2b00      	cmp	r3, #0
 8012474:	dd07      	ble.n	8012486 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8012476:	6968      	ldr	r0, [r5, #20]
 8012478:	b128      	cbz	r0, 8012486 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801247a:	6803      	ldr	r3, [r0, #0]
 801247c:	4621      	mov	r1, r4
 801247e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012480:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012484:	4718      	bx	r3
 8012486:	bd70      	pop	{r4, r5, r6, pc}

08012488 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8012488:	b570      	push	{r4, r5, r6, lr}
 801248a:	8882      	ldrh	r2, [r0, #4]
 801248c:	880b      	ldrh	r3, [r1, #0]
 801248e:	4413      	add	r3, r2
 8012490:	800b      	strh	r3, [r1, #0]
 8012492:	88c2      	ldrh	r2, [r0, #6]
 8012494:	884b      	ldrh	r3, [r1, #2]
 8012496:	460c      	mov	r4, r1
 8012498:	4413      	add	r3, r2
 801249a:	804b      	strh	r3, [r1, #2]
 801249c:	4605      	mov	r5, r0
 801249e:	1d01      	adds	r1, r0, #4
 80124a0:	4620      	mov	r0, r4
 80124a2:	f7f8 febb 	bl	800b21c <_ZN8touchgfx4RectaNERKS0_>
 80124a6:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80124aa:	2b00      	cmp	r3, #0
 80124ac:	dd18      	ble.n	80124e0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 80124ae:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80124b2:	2b00      	cmp	r3, #0
 80124b4:	dd14      	ble.n	80124e0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 80124b6:	6968      	ldr	r0, [r5, #20]
 80124b8:	b128      	cbz	r0, 80124c6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 80124ba:	6803      	ldr	r3, [r0, #0]
 80124bc:	4621      	mov	r1, r4
 80124be:	691b      	ldr	r3, [r3, #16]
 80124c0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80124c4:	4718      	bx	r3
 80124c6:	4b07      	ldr	r3, [pc, #28]	; (80124e4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 80124c8:	681b      	ldr	r3, [r3, #0]
 80124ca:	3304      	adds	r3, #4
 80124cc:	429d      	cmp	r5, r3
 80124ce:	d107      	bne.n	80124e0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 80124d0:	f7fe fff2 	bl	80114b8 <_ZN8touchgfx11Application11getInstanceEv>
 80124d4:	6821      	ldr	r1, [r4, #0]
 80124d6:	6862      	ldr	r2, [r4, #4]
 80124d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80124dc:	f7ff b862 	b.w	80115a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 80124e0:	bd70      	pop	{r4, r5, r6, pc}
 80124e2:	bf00      	nop
 80124e4:	20017494 	.word	0x20017494

080124e8 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 80124e8:	b570      	push	{r4, r5, r6, lr}
 80124ea:	4604      	mov	r4, r0
 80124ec:	4616      	mov	r6, r2
 80124ee:	460d      	mov	r5, r1
 80124f0:	b901      	cbnz	r1, 80124f4 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 80124f2:	b192      	cbz	r2, 801251a <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 80124f4:	6823      	ldr	r3, [r4, #0]
 80124f6:	4620      	mov	r0, r4
 80124f8:	699b      	ldr	r3, [r3, #24]
 80124fa:	4798      	blx	r3
 80124fc:	88e2      	ldrh	r2, [r4, #6]
 80124fe:	88a1      	ldrh	r1, [r4, #4]
 8012500:	4432      	add	r2, r6
 8012502:	4429      	add	r1, r5
 8012504:	4620      	mov	r0, r4
 8012506:	b212      	sxth	r2, r2
 8012508:	b209      	sxth	r1, r1
 801250a:	f7f0 fb3f 	bl	8002b8c <_ZN8touchgfx8Drawable5setXYEss>
 801250e:	6823      	ldr	r3, [r4, #0]
 8012510:	4620      	mov	r0, r4
 8012512:	699b      	ldr	r3, [r3, #24]
 8012514:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012518:	4718      	bx	r3
 801251a:	bd70      	pop	{r4, r5, r6, pc}

0801251c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 801251c:	b510      	push	{r4, lr}
 801251e:	4604      	mov	r4, r0
 8012520:	4608      	mov	r0, r1
 8012522:	2300      	movs	r3, #0
 8012524:	8023      	strh	r3, [r4, #0]
 8012526:	8063      	strh	r3, [r4, #2]
 8012528:	6803      	ldr	r3, [r0, #0]
 801252a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801252e:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8012532:	80a1      	strh	r1, [r4, #4]
 8012534:	80e2      	strh	r2, [r4, #6]
 8012536:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012538:	4621      	mov	r1, r4
 801253a:	4798      	blx	r3
 801253c:	4620      	mov	r0, r4
 801253e:	bd10      	pop	{r4, pc}

08012540 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 8012540:	b530      	push	{r4, r5, lr}
 8012542:	8083      	strh	r3, [r0, #4]
 8012544:	f89d 300c 	ldrb.w	r3, [sp, #12]
 8012548:	f89d 5010 	ldrb.w	r5, [sp, #16]
 801254c:	7183      	strb	r3, [r0, #6]
 801254e:	79c3      	ldrb	r3, [r0, #7]
 8012550:	6101      	str	r1, [r0, #16]
 8012552:	f365 0306 	bfi	r3, r5, #0, #7
 8012556:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801255a:	8282      	strh	r2, [r0, #20]
 801255c:	f365 13c7 	bfi	r3, r5, #7, #1
 8012560:	71c3      	strb	r3, [r0, #7]
 8012562:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8012566:	7203      	strb	r3, [r0, #8]
 8012568:	f89d 301c 	ldrb.w	r3, [sp, #28]
 801256c:	7243      	strb	r3, [r0, #9]
 801256e:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8012572:	8143      	strh	r3, [r0, #10]
 8012574:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 8012578:	8183      	strh	r3, [r0, #12]
 801257a:	4b01      	ldr	r3, [pc, #4]	; (8012580 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 801257c:	6003      	str	r3, [r0, #0]
 801257e:	bd30      	pop	{r4, r5, pc}
 8012580:	080242ac 	.word	0x080242ac

08012584 <_ZNK8touchgfx9ConstFont4findEt>:
 8012584:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012586:	6904      	ldr	r4, [r0, #16]
 8012588:	b3bc      	cbz	r4, 80125fa <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801258a:	88a3      	ldrh	r3, [r4, #4]
 801258c:	8a82      	ldrh	r2, [r0, #20]
 801258e:	1acb      	subs	r3, r1, r3
 8012590:	f102 32ff 	add.w	r2, r2, #4294967295
 8012594:	d431      	bmi.n	80125fa <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012596:	4293      	cmp	r3, r2
 8012598:	dd0c      	ble.n	80125b4 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 801259a:	230e      	movs	r3, #14
 801259c:	fb03 4302 	mla	r3, r3, r2, r4
 80125a0:	889b      	ldrh	r3, [r3, #4]
 80125a2:	1a5b      	subs	r3, r3, r1
 80125a4:	1ad3      	subs	r3, r2, r3
 80125a6:	429a      	cmp	r2, r3
 80125a8:	db27      	blt.n	80125fa <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80125aa:	2b00      	cmp	r3, #0
 80125ac:	bfbc      	itt	lt
 80125ae:	2302      	movlt	r3, #2
 80125b0:	fb92 f3f3 	sdivlt	r3, r2, r3
 80125b4:	2500      	movs	r5, #0
 80125b6:	260e      	movs	r6, #14
 80125b8:	4295      	cmp	r5, r2
 80125ba:	dc1e      	bgt.n	80125fa <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80125bc:	fb06 4003 	mla	r0, r6, r3, r4
 80125c0:	8887      	ldrh	r7, [r0, #4]
 80125c2:	42b9      	cmp	r1, r7
 80125c4:	d01a      	beq.n	80125fc <_ZNK8touchgfx9ConstFont4findEt+0x78>
 80125c6:	d20d      	bcs.n	80125e4 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 80125c8:	1e5a      	subs	r2, r3, #1
 80125ca:	4295      	cmp	r5, r2
 80125cc:	dc15      	bgt.n	80125fa <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80125ce:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 80125d2:	1a5b      	subs	r3, r3, r1
 80125d4:	1ad3      	subs	r3, r2, r3
 80125d6:	429a      	cmp	r2, r3
 80125d8:	db0f      	blt.n	80125fa <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80125da:	429d      	cmp	r5, r3
 80125dc:	ddec      	ble.n	80125b8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80125de:	1953      	adds	r3, r2, r5
 80125e0:	105b      	asrs	r3, r3, #1
 80125e2:	e7e9      	b.n	80125b8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80125e4:	1c5d      	adds	r5, r3, #1
 80125e6:	42aa      	cmp	r2, r5
 80125e8:	db07      	blt.n	80125fa <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80125ea:	8a43      	ldrh	r3, [r0, #18]
 80125ec:	1acb      	subs	r3, r1, r3
 80125ee:	442b      	add	r3, r5
 80125f0:	429d      	cmp	r5, r3
 80125f2:	dc02      	bgt.n	80125fa <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80125f4:	429a      	cmp	r2, r3
 80125f6:	dadf      	bge.n	80125b8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80125f8:	e7f1      	b.n	80125de <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 80125fa:	2000      	movs	r0, #0
 80125fc:	bdf0      	pop	{r4, r5, r6, r7, pc}

080125fe <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 80125fe:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012600:	4604      	mov	r4, r0
 8012602:	4617      	mov	r7, r2
 8012604:	461e      	mov	r6, r3
 8012606:	b911      	cbnz	r1, 801260e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8012608:	2500      	movs	r5, #0
 801260a:	4628      	mov	r0, r5
 801260c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801260e:	290a      	cmp	r1, #10
 8012610:	d0fa      	beq.n	8012608 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8012612:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8012616:	4291      	cmp	r1, r2
 8012618:	d0f6      	beq.n	8012608 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801261a:	f242 020b 	movw	r2, #8203	; 0x200b
 801261e:	4291      	cmp	r1, r2
 8012620:	d0f2      	beq.n	8012608 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8012622:	f7ff ffaf 	bl	8012584 <_ZNK8touchgfx9ConstFont4findEt>
 8012626:	4605      	mov	r5, r0
 8012628:	b950      	cbnz	r0, 8012640 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 801262a:	6823      	ldr	r3, [r4, #0]
 801262c:	4620      	mov	r0, r4
 801262e:	691b      	ldr	r3, [r3, #16]
 8012630:	4798      	blx	r3
 8012632:	4601      	mov	r1, r0
 8012634:	4620      	mov	r0, r4
 8012636:	f7ff ffa5 	bl	8012584 <_ZNK8touchgfx9ConstFont4findEt>
 801263a:	4605      	mov	r5, r0
 801263c:	2800      	cmp	r0, #0
 801263e:	d0e3      	beq.n	8012608 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8012640:	6823      	ldr	r3, [r4, #0]
 8012642:	4629      	mov	r1, r5
 8012644:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8012646:	4620      	mov	r0, r4
 8012648:	4798      	blx	r3
 801264a:	6038      	str	r0, [r7, #0]
 801264c:	6823      	ldr	r3, [r4, #0]
 801264e:	4620      	mov	r0, r4
 8012650:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012652:	4798      	blx	r3
 8012654:	7030      	strb	r0, [r6, #0]
 8012656:	e7d8      	b.n	801260a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08012658 <_ZN8touchgfx4clzuEm>:
 8012658:	4603      	mov	r3, r0
 801265a:	b1c8      	cbz	r0, 8012690 <_ZN8touchgfx4clzuEm+0x38>
 801265c:	0c02      	lsrs	r2, r0, #16
 801265e:	0412      	lsls	r2, r2, #16
 8012660:	b9a2      	cbnz	r2, 801268c <_ZN8touchgfx4clzuEm+0x34>
 8012662:	0403      	lsls	r3, r0, #16
 8012664:	2010      	movs	r0, #16
 8012666:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 801266a:	bf04      	itt	eq
 801266c:	021b      	lsleq	r3, r3, #8
 801266e:	3008      	addeq	r0, #8
 8012670:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8012674:	bf04      	itt	eq
 8012676:	011b      	lsleq	r3, r3, #4
 8012678:	3004      	addeq	r0, #4
 801267a:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801267e:	bf04      	itt	eq
 8012680:	009b      	lsleq	r3, r3, #2
 8012682:	3002      	addeq	r0, #2
 8012684:	2b00      	cmp	r3, #0
 8012686:	db04      	blt.n	8012692 <_ZN8touchgfx4clzuEm+0x3a>
 8012688:	3001      	adds	r0, #1
 801268a:	4770      	bx	lr
 801268c:	2000      	movs	r0, #0
 801268e:	e7ea      	b.n	8012666 <_ZN8touchgfx4clzuEm+0xe>
 8012690:	2020      	movs	r0, #32
 8012692:	4770      	bx	lr

08012694 <_ZN8touchgfx7muldivuEmmmRm>:
 8012694:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012698:	4680      	mov	r8, r0
 801269a:	460f      	mov	r7, r1
 801269c:	4615      	mov	r5, r2
 801269e:	461e      	mov	r6, r3
 80126a0:	f7ff ffda 	bl	8012658 <_ZN8touchgfx4clzuEm>
 80126a4:	b998      	cbnz	r0, 80126ce <_ZN8touchgfx7muldivuEmmmRm+0x3a>
 80126a6:	4608      	mov	r0, r1
 80126a8:	f7ff ffd6 	bl	8012658 <_ZN8touchgfx4clzuEm>
 80126ac:	2800      	cmp	r0, #0
 80126ae:	dd08      	ble.n	80126c2 <_ZN8touchgfx7muldivuEmmmRm+0x2e>
 80126b0:	4633      	mov	r3, r6
 80126b2:	462a      	mov	r2, r5
 80126b4:	4641      	mov	r1, r8
 80126b6:	4638      	mov	r0, r7
 80126b8:	f7ff ffec 	bl	8012694 <_ZN8touchgfx7muldivuEmmmRm>
 80126bc:	b003      	add	sp, #12
 80126be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80126c2:	f04f 33ff 	mov.w	r3, #4294967295
 80126c6:	6033      	str	r3, [r6, #0]
 80126c8:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80126cc:	e7f6      	b.n	80126bc <_ZN8touchgfx7muldivuEmmmRm+0x28>
 80126ce:	fa31 f900 	lsrs.w	r9, r1, r0
 80126d2:	fb01 f308 	mul.w	r3, r1, r8
 80126d6:	d105      	bne.n	80126e4 <_ZN8touchgfx7muldivuEmmmRm+0x50>
 80126d8:	fbb3 f0f5 	udiv	r0, r3, r5
 80126dc:	fb05 3510 	mls	r5, r5, r0, r3
 80126e0:	6035      	str	r5, [r6, #0]
 80126e2:	e7eb      	b.n	80126bc <_ZN8touchgfx7muldivuEmmmRm+0x28>
 80126e4:	2301      	movs	r3, #1
 80126e6:	fa08 fb00 	lsl.w	fp, r8, r0
 80126ea:	fa03 f000 	lsl.w	r0, r3, r0
 80126ee:	3801      	subs	r0, #1
 80126f0:	462a      	mov	r2, r5
 80126f2:	4633      	mov	r3, r6
 80126f4:	4641      	mov	r1, r8
 80126f6:	4038      	ands	r0, r7
 80126f8:	f7ff ffcc 	bl	8012694 <_ZN8touchgfx7muldivuEmmmRm>
 80126fc:	fbbb faf5 	udiv	sl, fp, r5
 8012700:	462a      	mov	r2, r5
 8012702:	4607      	mov	r7, r0
 8012704:	ab01      	add	r3, sp, #4
 8012706:	fb05 b11a 	mls	r1, r5, sl, fp
 801270a:	4648      	mov	r0, r9
 801270c:	f7ff ffc2 	bl	8012694 <_ZN8touchgfx7muldivuEmmmRm>
 8012710:	9b01      	ldr	r3, [sp, #4]
 8012712:	6832      	ldr	r2, [r6, #0]
 8012714:	fb09 f40a 	mul.w	r4, r9, sl
 8012718:	441a      	add	r2, r3
 801271a:	fbb2 f3f5 	udiv	r3, r2, r5
 801271e:	441c      	add	r4, r3
 8012720:	443c      	add	r4, r7
 8012722:	4420      	add	r0, r4
 8012724:	fb05 2513 	mls	r5, r5, r3, r2
 8012728:	e7da      	b.n	80126e0 <_ZN8touchgfx7muldivuEmmmRm+0x4c>

0801272a <_ZN8touchgfx6muldivElllRl>:
 801272a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801272c:	2800      	cmp	r0, #0
 801272e:	bfba      	itte	lt
 8012730:	4240      	neglt	r0, r0
 8012732:	f04f 34ff 	movlt.w	r4, #4294967295
 8012736:	2401      	movge	r4, #1
 8012738:	2900      	cmp	r1, #0
 801273a:	bfbc      	itt	lt
 801273c:	4249      	neglt	r1, r1
 801273e:	4264      	neglt	r4, r4
 8012740:	2a00      	cmp	r2, #0
 8012742:	bfb6      	itet	lt
 8012744:	4265      	neglt	r5, r4
 8012746:	4625      	movge	r5, r4
 8012748:	4252      	neglt	r2, r2
 801274a:	4288      	cmp	r0, r1
 801274c:	461e      	mov	r6, r3
 801274e:	bfc2      	ittt	gt
 8012750:	4603      	movgt	r3, r0
 8012752:	4608      	movgt	r0, r1
 8012754:	4619      	movgt	r1, r3
 8012756:	ab01      	add	r3, sp, #4
 8012758:	f7ff ff9c 	bl	8012694 <_ZN8touchgfx7muldivuEmmmRm>
 801275c:	9b01      	ldr	r3, [sp, #4]
 801275e:	4368      	muls	r0, r5
 8012760:	435c      	muls	r4, r3
 8012762:	6034      	str	r4, [r6, #0]
 8012764:	b002      	add	sp, #8
 8012766:	bd70      	pop	{r4, r5, r6, pc}

08012768 <_ZN8touchgfx6muldivElll>:
 8012768:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801276a:	4606      	mov	r6, r0
 801276c:	ab01      	add	r3, sp, #4
 801276e:	460d      	mov	r5, r1
 8012770:	4614      	mov	r4, r2
 8012772:	f7ff ffda 	bl	801272a <_ZN8touchgfx6muldivElllRl>
 8012776:	2e00      	cmp	r6, #0
 8012778:	db20      	blt.n	80127bc <_ZN8touchgfx6muldivElll+0x54>
 801277a:	bf14      	ite	ne
 801277c:	2301      	movne	r3, #1
 801277e:	2300      	moveq	r3, #0
 8012780:	2d00      	cmp	r5, #0
 8012782:	db1e      	blt.n	80127c2 <_ZN8touchgfx6muldivElll+0x5a>
 8012784:	bf14      	ite	ne
 8012786:	2201      	movne	r2, #1
 8012788:	2200      	moveq	r2, #0
 801278a:	2c00      	cmp	r4, #0
 801278c:	fb03 f202 	mul.w	r2, r3, r2
 8012790:	db1a      	blt.n	80127c8 <_ZN8touchgfx6muldivElll+0x60>
 8012792:	bf14      	ite	ne
 8012794:	2301      	movne	r3, #1
 8012796:	2300      	moveq	r3, #0
 8012798:	4353      	muls	r3, r2
 801279a:	2b01      	cmp	r3, #1
 801279c:	d117      	bne.n	80127ce <_ZN8touchgfx6muldivElll+0x66>
 801279e:	9b01      	ldr	r3, [sp, #4]
 80127a0:	2c00      	cmp	r4, #0
 80127a2:	bfb8      	it	lt
 80127a4:	4264      	neglt	r4, r4
 80127a6:	2b00      	cmp	r3, #0
 80127a8:	f104 0401 	add.w	r4, r4, #1
 80127ac:	bfb8      	it	lt
 80127ae:	425b      	neglt	r3, r3
 80127b0:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 80127b4:	db00      	blt.n	80127b8 <_ZN8touchgfx6muldivElll+0x50>
 80127b6:	3001      	adds	r0, #1
 80127b8:	b002      	add	sp, #8
 80127ba:	bd70      	pop	{r4, r5, r6, pc}
 80127bc:	f04f 33ff 	mov.w	r3, #4294967295
 80127c0:	e7de      	b.n	8012780 <_ZN8touchgfx6muldivElll+0x18>
 80127c2:	f04f 32ff 	mov.w	r2, #4294967295
 80127c6:	e7e0      	b.n	801278a <_ZN8touchgfx6muldivElll+0x22>
 80127c8:	f04f 33ff 	mov.w	r3, #4294967295
 80127cc:	e7e4      	b.n	8012798 <_ZN8touchgfx6muldivElll+0x30>
 80127ce:	3301      	adds	r3, #1
 80127d0:	d1f2      	bne.n	80127b8 <_ZN8touchgfx6muldivElll+0x50>
 80127d2:	9b01      	ldr	r3, [sp, #4]
 80127d4:	2c00      	cmp	r4, #0
 80127d6:	bfb8      	it	lt
 80127d8:	4264      	neglt	r4, r4
 80127da:	2b00      	cmp	r3, #0
 80127dc:	bfb8      	it	lt
 80127de:	425b      	neglt	r3, r3
 80127e0:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 80127e4:	bfc8      	it	gt
 80127e6:	f100 30ff 	addgt.w	r0, r0, #4294967295
 80127ea:	e7e5      	b.n	80127b8 <_ZN8touchgfx6muldivElll+0x50>

080127ec <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 80127ec:	2000      	movs	r0, #0
 80127ee:	4770      	bx	lr

080127f0 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 80127f0:	2001      	movs	r0, #1
 80127f2:	4770      	bx	lr

080127f4 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 80127f4:	2002      	movs	r0, #2
 80127f6:	4770      	bx	lr

080127f8 <_ZN8touchgfx6ScreenD1Ev>:
 80127f8:	4770      	bx	lr

080127fa <_ZN8touchgfx12GestureEventD1Ev>:
 80127fa:	4770      	bx	lr

080127fc <_ZN8touchgfx9DragEventD1Ev>:
 80127fc:	4770      	bx	lr

080127fe <_ZN8touchgfx10ClickEventD1Ev>:
 80127fe:	4770      	bx	lr

08012800 <_ZN8touchgfx10ClickEventD0Ev>:
 8012800:	b510      	push	{r4, lr}
 8012802:	210c      	movs	r1, #12
 8012804:	4604      	mov	r4, r0
 8012806:	f00e f992 	bl	8020b2e <_ZdlPvj>
 801280a:	4620      	mov	r0, r4
 801280c:	bd10      	pop	{r4, pc}

0801280e <_ZN8touchgfx9DragEventD0Ev>:
 801280e:	b510      	push	{r4, lr}
 8012810:	2110      	movs	r1, #16
 8012812:	4604      	mov	r4, r0
 8012814:	f00e f98b 	bl	8020b2e <_ZdlPvj>
 8012818:	4620      	mov	r0, r4
 801281a:	bd10      	pop	{r4, pc}

0801281c <_ZN8touchgfx12GestureEventD0Ev>:
 801281c:	b510      	push	{r4, lr}
 801281e:	210c      	movs	r1, #12
 8012820:	4604      	mov	r4, r0
 8012822:	f00e f984 	bl	8020b2e <_ZdlPvj>
 8012826:	4620      	mov	r0, r4
 8012828:	bd10      	pop	{r4, pc}

0801282a <_ZN8touchgfx6ScreenD0Ev>:
 801282a:	b510      	push	{r4, lr}
 801282c:	213c      	movs	r1, #60	; 0x3c
 801282e:	4604      	mov	r4, r0
 8012830:	f00e f97d 	bl	8020b2e <_ZdlPvj>
 8012834:	4620      	mov	r0, r4
 8012836:	bd10      	pop	{r4, pc}

08012838 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8012838:	b530      	push	{r4, r5, lr}
 801283a:	460d      	mov	r5, r1
 801283c:	6b01      	ldr	r1, [r0, #48]	; 0x30
 801283e:	b087      	sub	sp, #28
 8012840:	4604      	mov	r4, r0
 8012842:	b301      	cbz	r1, 8012886 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8012844:	a801      	add	r0, sp, #4
 8012846:	f7ff fe69 	bl	801251c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801284a:	892a      	ldrh	r2, [r5, #8]
 801284c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8012850:	7928      	ldrb	r0, [r5, #4]
 8012852:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8012856:	f88d 0010 	strb.w	r0, [sp, #16]
 801285a:	1ad2      	subs	r2, r2, r3
 801285c:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 801285e:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8012860:	f8ad 1012 	strh.w	r1, [sp, #18]
 8012864:	441a      	add	r2, r3
 8012866:	896b      	ldrh	r3, [r5, #10]
 8012868:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 801286c:	f8ad 2014 	strh.w	r2, [sp, #20]
 8012870:	1b5b      	subs	r3, r3, r5
 8012872:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8012874:	442b      	add	r3, r5
 8012876:	4d05      	ldr	r5, [pc, #20]	; (801288c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8012878:	9503      	str	r5, [sp, #12]
 801287a:	f8ad 3016 	strh.w	r3, [sp, #22]
 801287e:	6803      	ldr	r3, [r0, #0]
 8012880:	a903      	add	r1, sp, #12
 8012882:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8012884:	4798      	blx	r3
 8012886:	b007      	add	sp, #28
 8012888:	bd30      	pop	{r4, r5, pc}
 801288a:	bf00      	nop
 801288c:	0802432c 	.word	0x0802432c

08012890 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8012890:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012894:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8012896:	b08a      	sub	sp, #40	; 0x28
 8012898:	4604      	mov	r4, r0
 801289a:	460d      	mov	r5, r1
 801289c:	b113      	cbz	r3, 80128a4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 801289e:	790b      	ldrb	r3, [r1, #4]
 80128a0:	2b00      	cmp	r3, #0
 80128a2:	d044      	beq.n	801292e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80128a4:	f104 0804 	add.w	r8, r4, #4
 80128a8:	4641      	mov	r1, r8
 80128aa:	a803      	add	r0, sp, #12
 80128ac:	f7ff fe36 	bl	801251c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80128b0:	792b      	ldrb	r3, [r5, #4]
 80128b2:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 80128b6:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 80128ba:	b983      	cbnz	r3, 80128de <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 80128bc:	892a      	ldrh	r2, [r5, #8]
 80128be:	88e9      	ldrh	r1, [r5, #6]
 80128c0:	f104 0336 	add.w	r3, r4, #54	; 0x36
 80128c4:	1b92      	subs	r2, r2, r6
 80128c6:	1bc9      	subs	r1, r1, r7
 80128c8:	9301      	str	r3, [sp, #4]
 80128ca:	f104 0334 	add.w	r3, r4, #52	; 0x34
 80128ce:	9300      	str	r3, [sp, #0]
 80128d0:	b212      	sxth	r2, r2
 80128d2:	f104 0330 	add.w	r3, r4, #48	; 0x30
 80128d6:	b209      	sxth	r1, r1
 80128d8:	4640      	mov	r0, r8
 80128da:	f7f8 fbbb 	bl	800b054 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 80128de:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80128e0:	b329      	cbz	r1, 801292e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80128e2:	a805      	add	r0, sp, #20
 80128e4:	f7ff fe1a 	bl	801251c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80128e8:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80128ec:	792b      	ldrb	r3, [r5, #4]
 80128ee:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80128f0:	f88d 3020 	strb.w	r3, [sp, #32]
 80128f4:	1abf      	subs	r7, r7, r2
 80128f6:	88ea      	ldrh	r2, [r5, #6]
 80128f8:	4417      	add	r7, r2
 80128fa:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 80128fc:	4417      	add	r7, r2
 80128fe:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8012902:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8012906:	1ab6      	subs	r6, r6, r2
 8012908:	892a      	ldrh	r2, [r5, #8]
 801290a:	4416      	add	r6, r2
 801290c:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801290e:	4416      	add	r6, r2
 8012910:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8012914:	4a07      	ldr	r2, [pc, #28]	; (8012934 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8012916:	9207      	str	r2, [sp, #28]
 8012918:	2600      	movs	r6, #0
 801291a:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 801291e:	6803      	ldr	r3, [r0, #0]
 8012920:	a907      	add	r1, sp, #28
 8012922:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012924:	4798      	blx	r3
 8012926:	792b      	ldrb	r3, [r5, #4]
 8012928:	b10b      	cbz	r3, 801292e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801292a:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 801292e:	b00a      	add	sp, #40	; 0x28
 8012930:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012934:	08024304 	.word	0x08024304

08012938 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8012938:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801293c:	460c      	mov	r4, r1
 801293e:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8012940:	b088      	sub	sp, #32
 8012942:	4605      	mov	r5, r0
 8012944:	2900      	cmp	r1, #0
 8012946:	d06d      	beq.n	8012a24 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8012948:	4668      	mov	r0, sp
 801294a:	f7ff fde7 	bl	801251c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801294e:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8012950:	88e3      	ldrh	r3, [r4, #6]
 8012952:	f9bd 8000 	ldrsh.w	r8, [sp]
 8012956:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801295a:	440b      	add	r3, r1
 801295c:	b21b      	sxth	r3, r3
 801295e:	4543      	cmp	r3, r8
 8012960:	db31      	blt.n	80129c6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012962:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8012966:	44c4      	add	ip, r8
 8012968:	fa0f fc8c 	sxth.w	ip, ip
 801296c:	4563      	cmp	r3, ip
 801296e:	da2a      	bge.n	80129c6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012970:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8012972:	8926      	ldrh	r6, [r4, #8]
 8012974:	4416      	add	r6, r2
 8012976:	b236      	sxth	r6, r6
 8012978:	42be      	cmp	r6, r7
 801297a:	db24      	blt.n	80129c6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801297c:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8012980:	4438      	add	r0, r7
 8012982:	b200      	sxth	r0, r0
 8012984:	4286      	cmp	r6, r0
 8012986:	da1e      	bge.n	80129c6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012988:	8963      	ldrh	r3, [r4, #10]
 801298a:	4419      	add	r1, r3
 801298c:	b209      	sxth	r1, r1
 801298e:	4541      	cmp	r1, r8
 8012990:	db08      	blt.n	80129a4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8012992:	4561      	cmp	r1, ip
 8012994:	da06      	bge.n	80129a4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8012996:	89a3      	ldrh	r3, [r4, #12]
 8012998:	441a      	add	r2, r3
 801299a:	b212      	sxth	r2, r2
 801299c:	42ba      	cmp	r2, r7
 801299e:	db01      	blt.n	80129a4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80129a0:	4282      	cmp	r2, r0
 80129a2:	db10      	blt.n	80129c6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80129a4:	4b21      	ldr	r3, [pc, #132]	; (8012a2c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 80129a6:	9304      	str	r3, [sp, #16]
 80129a8:	2302      	movs	r3, #2
 80129aa:	f88d 3014 	strb.w	r3, [sp, #20]
 80129ae:	6b28      	ldr	r0, [r5, #48]	; 0x30
 80129b0:	2300      	movs	r3, #0
 80129b2:	f8ad 3016 	strh.w	r3, [sp, #22]
 80129b6:	f8ad 3018 	strh.w	r3, [sp, #24]
 80129ba:	f8ad 301a 	strh.w	r3, [sp, #26]
 80129be:	6803      	ldr	r3, [r0, #0]
 80129c0:	a904      	add	r1, sp, #16
 80129c2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80129c4:	4798      	blx	r3
 80129c6:	1d29      	adds	r1, r5, #4
 80129c8:	a802      	add	r0, sp, #8
 80129ca:	f7ff fda7 	bl	801251c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80129ce:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80129d2:	88e0      	ldrh	r0, [r4, #6]
 80129d4:	7921      	ldrb	r1, [r4, #4]
 80129d6:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 80129da:	8922      	ldrh	r2, [r4, #8]
 80129dc:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 80129de:	f88d 1014 	strb.w	r1, [sp, #20]
 80129e2:	eba3 0808 	sub.w	r8, r3, r8
 80129e6:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80129ea:	1bdf      	subs	r7, r3, r7
 80129ec:	b2bb      	uxth	r3, r7
 80129ee:	fa1f f888 	uxth.w	r8, r8
 80129f2:	8967      	ldrh	r7, [r4, #10]
 80129f4:	89a4      	ldrh	r4, [r4, #12]
 80129f6:	4440      	add	r0, r8
 80129f8:	4460      	add	r0, ip
 80129fa:	441a      	add	r2, r3
 80129fc:	44b8      	add	r8, r7
 80129fe:	4423      	add	r3, r4
 8012a00:	f8ad 0016 	strh.w	r0, [sp, #22]
 8012a04:	4433      	add	r3, r6
 8012a06:	4432      	add	r2, r6
 8012a08:	44e0      	add	r8, ip
 8012a0a:	4c09      	ldr	r4, [pc, #36]	; (8012a30 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8012a0c:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8012a0e:	9404      	str	r4, [sp, #16]
 8012a10:	f8ad 2018 	strh.w	r2, [sp, #24]
 8012a14:	f8ad 801a 	strh.w	r8, [sp, #26]
 8012a18:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012a1c:	6803      	ldr	r3, [r0, #0]
 8012a1e:	a904      	add	r1, sp, #16
 8012a20:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8012a22:	4798      	blx	r3
 8012a24:	b008      	add	sp, #32
 8012a26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012a2a:	bf00      	nop
 8012a2c:	08024304 	.word	0x08024304
 8012a30:	08024318 	.word	0x08024318

08012a34 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8012a34:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012a36:	4604      	mov	r4, r0
 8012a38:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8012a3c:	3201      	adds	r2, #1
 8012a3e:	d112      	bne.n	8012a66 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8012a40:	6803      	ldr	r3, [r0, #0]
 8012a42:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8012a46:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8012a4a:	f8ad 1004 	strh.w	r1, [sp, #4]
 8012a4e:	2500      	movs	r5, #0
 8012a50:	9500      	str	r5, [sp, #0]
 8012a52:	466d      	mov	r5, sp
 8012a54:	4629      	mov	r1, r5
 8012a56:	f8ad 2006 	strh.w	r2, [sp, #6]
 8012a5a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012a5c:	4798      	blx	r3
 8012a5e:	e895 0003 	ldmia.w	r5, {r0, r1}
 8012a62:	e884 0003 	stmia.w	r4, {r0, r1}
 8012a66:	4620      	mov	r0, r4
 8012a68:	b003      	add	sp, #12
 8012a6a:	bd30      	pop	{r4, r5, pc}

08012a6c <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8012a6c:	b513      	push	{r0, r1, r4, lr}
 8012a6e:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8012a72:	3301      	adds	r3, #1
 8012a74:	4604      	mov	r4, r0
 8012a76:	d109      	bne.n	8012a8c <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8012a78:	4601      	mov	r1, r0
 8012a7a:	4668      	mov	r0, sp
 8012a7c:	f7ff fd4e 	bl	801251c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012a80:	f8bd 3000 	ldrh.w	r3, [sp]
 8012a84:	8423      	strh	r3, [r4, #32]
 8012a86:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012a8a:	8463      	strh	r3, [r4, #34]	; 0x22
 8012a8c:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8012a90:	b002      	add	sp, #8
 8012a92:	bd10      	pop	{r4, pc}

08012a94 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8012a94:	b513      	push	{r0, r1, r4, lr}
 8012a96:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8012a9a:	3301      	adds	r3, #1
 8012a9c:	4604      	mov	r4, r0
 8012a9e:	d109      	bne.n	8012ab4 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8012aa0:	4601      	mov	r1, r0
 8012aa2:	4668      	mov	r0, sp
 8012aa4:	f7ff fd3a 	bl	801251c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012aa8:	f8bd 3000 	ldrh.w	r3, [sp]
 8012aac:	8423      	strh	r3, [r4, #32]
 8012aae:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012ab2:	8463      	strh	r3, [r4, #34]	; 0x22
 8012ab4:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8012ab8:	b002      	add	sp, #8
 8012aba:	bd10      	pop	{r4, pc}

08012abc <_ZN8touchgfx6ScreenC1Ev>:
 8012abc:	b570      	push	{r4, r5, r6, lr}
 8012abe:	4605      	mov	r5, r0
 8012ac0:	4b16      	ldr	r3, [pc, #88]	; (8012b1c <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8012ac2:	f845 3b04 	str.w	r3, [r5], #4
 8012ac6:	2300      	movs	r3, #0
 8012ac8:	8103      	strh	r3, [r0, #8]
 8012aca:	8143      	strh	r3, [r0, #10]
 8012acc:	8183      	strh	r3, [r0, #12]
 8012ace:	81c3      	strh	r3, [r0, #14]
 8012ad0:	8203      	strh	r3, [r0, #16]
 8012ad2:	8243      	strh	r3, [r0, #18]
 8012ad4:	8283      	strh	r3, [r0, #20]
 8012ad6:	82c3      	strh	r3, [r0, #22]
 8012ad8:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8012adc:	6203      	str	r3, [r0, #32]
 8012ade:	8483      	strh	r3, [r0, #36]	; 0x24
 8012ae0:	84c3      	strh	r3, [r0, #38]	; 0x26
 8012ae2:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8012ae6:	4a0e      	ldr	r2, [pc, #56]	; (8012b20 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8012ae8:	6343      	str	r3, [r0, #52]	; 0x34
 8012aea:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8012aee:	4b0d      	ldr	r3, [pc, #52]	; (8012b24 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8012af0:	6042      	str	r2, [r0, #4]
 8012af2:	f9b3 6000 	ldrsh.w	r6, [r3]
 8012af6:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8012af8:	4a0b      	ldr	r2, [pc, #44]	; (8012b28 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8012afa:	4604      	mov	r4, r0
 8012afc:	2101      	movs	r1, #1
 8012afe:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8012b02:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 8012b06:	f9b2 1000 	ldrsh.w	r1, [r2]
 8012b0a:	4628      	mov	r0, r5
 8012b0c:	4798      	blx	r3
 8012b0e:	6863      	ldr	r3, [r4, #4]
 8012b10:	4628      	mov	r0, r5
 8012b12:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012b14:	4631      	mov	r1, r6
 8012b16:	4798      	blx	r3
 8012b18:	4620      	mov	r0, r4
 8012b1a:	bd70      	pop	{r4, r5, r6, pc}
 8012b1c:	08024340 	.word	0x08024340
 8012b20:	08023840 	.word	0x08023840
 8012b24:	20017446 	.word	0x20017446
 8012b28:	20017444 	.word	0x20017444

08012b2c <_ZN8touchgfx6Screen4drawEv>:
 8012b2c:	b507      	push	{r0, r1, r2, lr}
 8012b2e:	4b09      	ldr	r3, [pc, #36]	; (8012b54 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8012b30:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012b34:	4b08      	ldr	r3, [pc, #32]	; (8012b58 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8012b36:	f8ad 2004 	strh.w	r2, [sp, #4]
 8012b3a:	f9b3 3000 	ldrsh.w	r3, [r3]
 8012b3e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012b42:	6803      	ldr	r3, [r0, #0]
 8012b44:	2100      	movs	r1, #0
 8012b46:	9100      	str	r1, [sp, #0]
 8012b48:	689b      	ldr	r3, [r3, #8]
 8012b4a:	4669      	mov	r1, sp
 8012b4c:	4798      	blx	r3
 8012b4e:	b003      	add	sp, #12
 8012b50:	f85d fb04 	ldr.w	pc, [sp], #4
 8012b54:	20017444 	.word	0x20017444
 8012b58:	20017446 	.word	0x20017446

08012b5c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8012b5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012b60:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8012b64:	2b00      	cmp	r3, #0
 8012b66:	b089      	sub	sp, #36	; 0x24
 8012b68:	4680      	mov	r8, r0
 8012b6a:	460c      	mov	r4, r1
 8012b6c:	4615      	mov	r5, r2
 8012b6e:	dd0e      	ble.n	8012b8e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012b70:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8012b74:	2b00      	cmp	r3, #0
 8012b76:	dd0a      	ble.n	8012b8e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012b78:	4628      	mov	r0, r5
 8012b7a:	f7ff ff5b 	bl	8012a34 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8012b7e:	4621      	mov	r1, r4
 8012b80:	f7fe fc01 	bl	8011386 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8012b84:	69eb      	ldr	r3, [r5, #28]
 8012b86:	b928      	cbnz	r0, 8012b94 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8012b88:	461d      	mov	r5, r3
 8012b8a:	2b00      	cmp	r3, #0
 8012b8c:	d1f4      	bne.n	8012b78 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8012b8e:	b009      	add	sp, #36	; 0x24
 8012b90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012b94:	ae04      	add	r6, sp, #16
 8012b96:	2b00      	cmp	r3, #0
 8012b98:	f000 80b5 	beq.w	8012d06 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8012b9c:	682b      	ldr	r3, [r5, #0]
 8012b9e:	4629      	mov	r1, r5
 8012ba0:	68db      	ldr	r3, [r3, #12]
 8012ba2:	a802      	add	r0, sp, #8
 8012ba4:	4798      	blx	r3
 8012ba6:	4628      	mov	r0, r5
 8012ba8:	f7ff ff60 	bl	8012a6c <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8012bac:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8012bb0:	4407      	add	r7, r0
 8012bb2:	4628      	mov	r0, r5
 8012bb4:	f7ff ff6e 	bl	8012a94 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8012bb8:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8012bbc:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8012bc0:	f8ad 2014 	strh.w	r2, [sp, #20]
 8012bc4:	4418      	add	r0, r3
 8012bc6:	4621      	mov	r1, r4
 8012bc8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8012bcc:	f8ad 0012 	strh.w	r0, [sp, #18]
 8012bd0:	b23f      	sxth	r7, r7
 8012bd2:	4630      	mov	r0, r6
 8012bd4:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012bd8:	f8ad 7010 	strh.w	r7, [sp, #16]
 8012bdc:	f7f8 fb1e 	bl	800b21c <_ZN8touchgfx4RectaNERKS0_>
 8012be0:	4628      	mov	r0, r5
 8012be2:	f7ff ff27 	bl	8012a34 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8012be6:	4602      	mov	r2, r0
 8012be8:	e896 0003 	ldmia.w	r6, {r0, r1}
 8012bec:	ab06      	add	r3, sp, #24
 8012bee:	e883 0003 	stmia.w	r3, {r0, r1}
 8012bf2:	4611      	mov	r1, r2
 8012bf4:	4618      	mov	r0, r3
 8012bf6:	f7f8 fb11 	bl	800b21c <_ZN8touchgfx4RectaNERKS0_>
 8012bfa:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8012bfe:	f9b4 1000 	ldrsh.w	r1, [r4]
 8012c02:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8012c06:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8012c0a:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8012c0e:	4299      	cmp	r1, r3
 8012c10:	d10b      	bne.n	8012c2a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8012c12:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8012c16:	4552      	cmp	r2, sl
 8012c18:	d107      	bne.n	8012c2a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8012c1a:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8012c1e:	455a      	cmp	r2, fp
 8012c20:	d103      	bne.n	8012c2a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8012c22:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8012c26:	454a      	cmp	r2, r9
 8012c28:	d06d      	beq.n	8012d06 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8012c2a:	f1bb 0f00 	cmp.w	fp, #0
 8012c2e:	dd65      	ble.n	8012cfc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8012c30:	f1b9 0f00 	cmp.w	r9, #0
 8012c34:	dd62      	ble.n	8012cfc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8012c36:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8012c3a:	fa1f f08a 	uxth.w	r0, sl
 8012c3e:	4552      	cmp	r2, sl
 8012c40:	9000      	str	r0, [sp, #0]
 8012c42:	da12      	bge.n	8012c6a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8012c44:	9301      	str	r3, [sp, #4]
 8012c46:	9b00      	ldr	r3, [sp, #0]
 8012c48:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8012c4c:	f8ad 2012 	strh.w	r2, [sp, #18]
 8012c50:	1a9a      	subs	r2, r3, r2
 8012c52:	f8ad 1010 	strh.w	r1, [sp, #16]
 8012c56:	f8ad 0014 	strh.w	r0, [sp, #20]
 8012c5a:	f8ad 2016 	strh.w	r2, [sp, #22]
 8012c5e:	69ea      	ldr	r2, [r5, #28]
 8012c60:	4631      	mov	r1, r6
 8012c62:	4640      	mov	r0, r8
 8012c64:	f7ff ff7a 	bl	8012b5c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012c68:	9b01      	ldr	r3, [sp, #4]
 8012c6a:	f9b4 2000 	ldrsh.w	r2, [r4]
 8012c6e:	429a      	cmp	r2, r3
 8012c70:	b29f      	uxth	r7, r3
 8012c72:	da0d      	bge.n	8012c90 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8012c74:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012c78:	1aba      	subs	r2, r7, r2
 8012c7a:	f8ad a012 	strh.w	sl, [sp, #18]
 8012c7e:	f8ad 2014 	strh.w	r2, [sp, #20]
 8012c82:	f8ad 9016 	strh.w	r9, [sp, #22]
 8012c86:	69ea      	ldr	r2, [r5, #28]
 8012c88:	4631      	mov	r1, r6
 8012c8a:	4640      	mov	r0, r8
 8012c8c:	f7ff ff66 	bl	8012b5c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012c90:	8822      	ldrh	r2, [r4, #0]
 8012c92:	88a3      	ldrh	r3, [r4, #4]
 8012c94:	445f      	add	r7, fp
 8012c96:	4413      	add	r3, r2
 8012c98:	b29b      	uxth	r3, r3
 8012c9a:	b2bf      	uxth	r7, r7
 8012c9c:	b23a      	sxth	r2, r7
 8012c9e:	b219      	sxth	r1, r3
 8012ca0:	4291      	cmp	r1, r2
 8012ca2:	dd0d      	ble.n	8012cc0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8012ca4:	1bdb      	subs	r3, r3, r7
 8012ca6:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012caa:	f8ad a012 	strh.w	sl, [sp, #18]
 8012cae:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012cb2:	f8ad 9016 	strh.w	r9, [sp, #22]
 8012cb6:	69ea      	ldr	r2, [r5, #28]
 8012cb8:	4631      	mov	r1, r6
 8012cba:	4640      	mov	r0, r8
 8012cbc:	f7ff ff4e 	bl	8012b5c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012cc0:	88e2      	ldrh	r2, [r4, #6]
 8012cc2:	8863      	ldrh	r3, [r4, #2]
 8012cc4:	4413      	add	r3, r2
 8012cc6:	9a00      	ldr	r2, [sp, #0]
 8012cc8:	444a      	add	r2, r9
 8012cca:	b29b      	uxth	r3, r3
 8012ccc:	fa1f f982 	uxth.w	r9, r2
 8012cd0:	fa0f f289 	sxth.w	r2, r9
 8012cd4:	b219      	sxth	r1, r3
 8012cd6:	428a      	cmp	r2, r1
 8012cd8:	da15      	bge.n	8012d06 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8012cda:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8012cde:	f9b4 0000 	ldrsh.w	r0, [r4]
 8012ce2:	f8ad 1014 	strh.w	r1, [sp, #20]
 8012ce6:	eba3 0309 	sub.w	r3, r3, r9
 8012cea:	f8ad 0010 	strh.w	r0, [sp, #16]
 8012cee:	f8ad 2012 	strh.w	r2, [sp, #18]
 8012cf2:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012cf6:	69ea      	ldr	r2, [r5, #28]
 8012cf8:	4631      	mov	r1, r6
 8012cfa:	e001      	b.n	8012d00 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8012cfc:	69ea      	ldr	r2, [r5, #28]
 8012cfe:	4621      	mov	r1, r4
 8012d00:	4640      	mov	r0, r8
 8012d02:	f7ff ff2b 	bl	8012b5c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012d06:	4628      	mov	r0, r5
 8012d08:	f7ff fe94 	bl	8012a34 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8012d0c:	6861      	ldr	r1, [r4, #4]
 8012d0e:	4602      	mov	r2, r0
 8012d10:	6820      	ldr	r0, [r4, #0]
 8012d12:	4633      	mov	r3, r6
 8012d14:	c303      	stmia	r3!, {r0, r1}
 8012d16:	4611      	mov	r1, r2
 8012d18:	4630      	mov	r0, r6
 8012d1a:	f7f8 fa7f 	bl	800b21c <_ZN8touchgfx4RectaNERKS0_>
 8012d1e:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8012d22:	2b00      	cmp	r3, #0
 8012d24:	f77f af33 	ble.w	8012b8e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012d28:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8012d2c:	2b00      	cmp	r3, #0
 8012d2e:	f77f af2e 	ble.w	8012b8e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012d32:	4628      	mov	r0, r5
 8012d34:	f7ff fe9a 	bl	8012a6c <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8012d38:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8012d3c:	1a18      	subs	r0, r3, r0
 8012d3e:	f8ad 0010 	strh.w	r0, [sp, #16]
 8012d42:	4628      	mov	r0, r5
 8012d44:	f7ff fea6 	bl	8012a94 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8012d48:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8012d4c:	1a18      	subs	r0, r3, r0
 8012d4e:	f8ad 0012 	strh.w	r0, [sp, #18]
 8012d52:	682b      	ldr	r3, [r5, #0]
 8012d54:	4631      	mov	r1, r6
 8012d56:	689b      	ldr	r3, [r3, #8]
 8012d58:	4628      	mov	r0, r5
 8012d5a:	4798      	blx	r3
 8012d5c:	e717      	b.n	8012b8e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08012d5e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8012d5e:	b570      	push	{r4, r5, r6, lr}
 8012d60:	460c      	mov	r4, r1
 8012d62:	b086      	sub	sp, #24
 8012d64:	1d06      	adds	r6, r0, #4
 8012d66:	2300      	movs	r3, #0
 8012d68:	4631      	mov	r1, r6
 8012d6a:	4605      	mov	r5, r0
 8012d6c:	a802      	add	r0, sp, #8
 8012d6e:	9301      	str	r3, [sp, #4]
 8012d70:	f7ff fbd4 	bl	801251c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012d74:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8012d78:	8822      	ldrh	r2, [r4, #0]
 8012d7a:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8012d7e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8012d82:	f8ad 0014 	strh.w	r0, [sp, #20]
 8012d86:	1ad2      	subs	r2, r2, r3
 8012d88:	8863      	ldrh	r3, [r4, #2]
 8012d8a:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012d8e:	1a5b      	subs	r3, r3, r1
 8012d90:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8012d94:	f8ad 1016 	strh.w	r1, [sp, #22]
 8012d98:	aa01      	add	r2, sp, #4
 8012d9a:	a904      	add	r1, sp, #16
 8012d9c:	4630      	mov	r0, r6
 8012d9e:	f8ad 3012 	strh.w	r3, [sp, #18]
 8012da2:	f7f8 fb13 	bl	800b3cc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8012da6:	9a01      	ldr	r2, [sp, #4]
 8012da8:	b11a      	cbz	r2, 8012db2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8012daa:	4621      	mov	r1, r4
 8012dac:	4628      	mov	r0, r5
 8012dae:	f7ff fed5 	bl	8012b5c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012db2:	b006      	add	sp, #24
 8012db4:	bd70      	pop	{r4, r5, r6, pc}

08012db6 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8012db6:	b530      	push	{r4, r5, lr}
 8012db8:	4602      	mov	r2, r0
 8012dba:	4604      	mov	r4, r0
 8012dbc:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8012dc0:	b085      	sub	sp, #20
 8012dc2:	460d      	mov	r5, r1
 8012dc4:	6851      	ldr	r1, [r2, #4]
 8012dc6:	466b      	mov	r3, sp
 8012dc8:	c303      	stmia	r3!, {r0, r1}
 8012dca:	4629      	mov	r1, r5
 8012dcc:	4668      	mov	r0, sp
 8012dce:	f7f8 fa25 	bl	800b21c <_ZN8touchgfx4RectaNERKS0_>
 8012dd2:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012dd6:	b12b      	cbz	r3, 8012de4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8012dd8:	4669      	mov	r1, sp
 8012dda:	4620      	mov	r0, r4
 8012ddc:	f7ff ffbf 	bl	8012d5e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8012de0:	b005      	add	sp, #20
 8012de2:	bd30      	pop	{r4, r5, pc}
 8012de4:	3404      	adds	r4, #4
 8012de6:	4621      	mov	r1, r4
 8012de8:	a802      	add	r0, sp, #8
 8012dea:	f7ff fb97 	bl	801251c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012dee:	f8bd 3000 	ldrh.w	r3, [sp]
 8012df2:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8012df6:	1a9b      	subs	r3, r3, r2
 8012df8:	f8ad 3000 	strh.w	r3, [sp]
 8012dfc:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8012e00:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012e04:	4669      	mov	r1, sp
 8012e06:	1a9b      	subs	r3, r3, r2
 8012e08:	4620      	mov	r0, r4
 8012e0a:	f8ad 3002 	strh.w	r3, [sp, #2]
 8012e0e:	f7f8 faa4 	bl	800b35a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8012e12:	e7e5      	b.n	8012de0 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08012e14 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8012e14:	680a      	ldr	r2, [r1, #0]
 8012e16:	460b      	mov	r3, r1
 8012e18:	6992      	ldr	r2, [r2, #24]
 8012e1a:	1d01      	adds	r1, r0, #4
 8012e1c:	4618      	mov	r0, r3
 8012e1e:	4710      	bx	r2

08012e20 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8012e20:	4298      	cmp	r0, r3
 8012e22:	d200      	bcs.n	8012e26 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8012e24:	b913      	cbnz	r3, 8012e2c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 8012e26:	440a      	add	r2, r1
 8012e28:	b210      	sxth	r0, r2
 8012e2a:	4770      	bx	lr
 8012e2c:	ee07 0a90 	vmov	s15, r0
 8012e30:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8012e34:	ee07 3a90 	vmov	s15, r3
 8012e38:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012e3c:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8012e40:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8012e44:	ee37 7a66 	vsub.f32	s14, s14, s13
 8012e48:	ee07 2a90 	vmov	s15, r2
 8012e4c:	ee67 5a07 	vmul.f32	s11, s14, s14
 8012e50:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8012e54:	eee5 6a87 	vfma.f32	s13, s11, s14
 8012e58:	ee07 1a90 	vmov	s15, r1
 8012e5c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012e60:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8012e64:	eee6 7a26 	vfma.f32	s15, s12, s13
 8012e68:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012e6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012e70:	bfcc      	ite	gt
 8012e72:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8012e76:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8012e7a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012e7e:	ee17 3a90 	vmov	r3, s15
 8012e82:	b218      	sxth	r0, r3
 8012e84:	4770      	bx	lr

08012e86 <_ZN8touchgfx12TextProviderC1Ev>:
 8012e86:	b538      	push	{r3, r4, r5, lr}
 8012e88:	2500      	movs	r5, #0
 8012e8a:	2302      	movs	r3, #2
 8012e8c:	4604      	mov	r4, r0
 8012e8e:	e9c0 5500 	strd	r5, r5, [r0]
 8012e92:	7403      	strb	r3, [r0, #16]
 8012e94:	6145      	str	r5, [r0, #20]
 8012e96:	7605      	strb	r5, [r0, #24]
 8012e98:	83c5      	strh	r5, [r0, #30]
 8012e9a:	8405      	strh	r5, [r0, #32]
 8012e9c:	86c5      	strh	r5, [r0, #54]	; 0x36
 8012e9e:	8705      	strh	r5, [r0, #56]	; 0x38
 8012ea0:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8012ea2:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8012ea6:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8012eaa:	220e      	movs	r2, #14
 8012eac:	4629      	mov	r1, r5
 8012eae:	304c      	adds	r0, #76	; 0x4c
 8012eb0:	f00d fff2 	bl	8020e98 <memset>
 8012eb4:	2301      	movs	r3, #1
 8012eb6:	4620      	mov	r0, r4
 8012eb8:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8012ebc:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8012ec0:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8012ec4:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8012ec8:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8012ecc:	f7f2 fd02 	bl	80058d4 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8012ed0:	4620      	mov	r0, r4
 8012ed2:	bd38      	pop	{r3, r4, r5, pc}

08012ed4 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8012ed4:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8012ed6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012eda:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8012edc:	fab0 f080 	clz	r0, r0
 8012ee0:	0940      	lsrs	r0, r0, #5
 8012ee2:	4770      	bx	lr

08012ee4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8012ee4:	b530      	push	{r4, r5, lr}
 8012ee6:	2500      	movs	r5, #0
 8012ee8:	2401      	movs	r4, #1
 8012eea:	6843      	ldr	r3, [r0, #4]
 8012eec:	b913      	cbnz	r3, 8012ef4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8012eee:	6803      	ldr	r3, [r0, #0]
 8012ef0:	b313      	cbz	r3, 8012f38 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8012ef2:	6043      	str	r3, [r0, #4]
 8012ef4:	7e03      	ldrb	r3, [r0, #24]
 8012ef6:	b143      	cbz	r3, 8012f0a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8012ef8:	6943      	ldr	r3, [r0, #20]
 8012efa:	b12b      	cbz	r3, 8012f08 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8012efc:	881a      	ldrh	r2, [r3, #0]
 8012efe:	b11a      	cbz	r2, 8012f08 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8012f00:	1c9a      	adds	r2, r3, #2
 8012f02:	6142      	str	r2, [r0, #20]
 8012f04:	8818      	ldrh	r0, [r3, #0]
 8012f06:	bd30      	pop	{r4, r5, pc}
 8012f08:	7605      	strb	r5, [r0, #24]
 8012f0a:	6843      	ldr	r3, [r0, #4]
 8012f0c:	8819      	ldrh	r1, [r3, #0]
 8012f0e:	b199      	cbz	r1, 8012f38 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8012f10:	1c9a      	adds	r2, r3, #2
 8012f12:	2902      	cmp	r1, #2
 8012f14:	6042      	str	r2, [r0, #4]
 8012f16:	d1f5      	bne.n	8012f04 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8012f18:	7c03      	ldrb	r3, [r0, #16]
 8012f1a:	2b01      	cmp	r3, #1
 8012f1c:	d8e5      	bhi.n	8012eea <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012f1e:	1c5a      	adds	r2, r3, #1
 8012f20:	3302      	adds	r3, #2
 8012f22:	7402      	strb	r2, [r0, #16]
 8012f24:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8012f28:	6143      	str	r3, [r0, #20]
 8012f2a:	2b00      	cmp	r3, #0
 8012f2c:	d0dd      	beq.n	8012eea <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012f2e:	881b      	ldrh	r3, [r3, #0]
 8012f30:	2b00      	cmp	r3, #0
 8012f32:	d0da      	beq.n	8012eea <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012f34:	7604      	strb	r4, [r0, #24]
 8012f36:	e7d8      	b.n	8012eea <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012f38:	2000      	movs	r0, #0
 8012f3a:	e7e4      	b.n	8012f06 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08012f3c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8012f3c:	b430      	push	{r4, r5}
 8012f3e:	6001      	str	r1, [r0, #0]
 8012f40:	2100      	movs	r1, #0
 8012f42:	6041      	str	r1, [r0, #4]
 8012f44:	6815      	ldr	r5, [r2, #0]
 8012f46:	6085      	str	r5, [r0, #8]
 8012f48:	6852      	ldr	r2, [r2, #4]
 8012f4a:	6443      	str	r3, [r0, #68]	; 0x44
 8012f4c:	9b02      	ldr	r3, [sp, #8]
 8012f4e:	60c2      	str	r2, [r0, #12]
 8012f50:	7401      	strb	r1, [r0, #16]
 8012f52:	6141      	str	r1, [r0, #20]
 8012f54:	7601      	strb	r1, [r0, #24]
 8012f56:	8701      	strh	r1, [r0, #56]	; 0x38
 8012f58:	8401      	strh	r1, [r0, #32]
 8012f5a:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8012f5e:	6483      	str	r3, [r0, #72]	; 0x48
 8012f60:	bc30      	pop	{r4, r5}
 8012f62:	f7f2 bcb7 	b.w	80058d4 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08012f66 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8012f66:	b408      	push	{r3}
 8012f68:	b510      	push	{r4, lr}
 8012f6a:	b085      	sub	sp, #20
 8012f6c:	ac07      	add	r4, sp, #28
 8012f6e:	f854 3b04 	ldr.w	r3, [r4], #4
 8012f72:	9300      	str	r3, [sp, #0]
 8012f74:	4613      	mov	r3, r2
 8012f76:	4622      	mov	r2, r4
 8012f78:	9403      	str	r4, [sp, #12]
 8012f7a:	f7ff ffdf 	bl	8012f3c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012f7e:	b005      	add	sp, #20
 8012f80:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012f84:	b001      	add	sp, #4
 8012f86:	4770      	bx	lr

08012f88 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8012f88:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012f8a:	4605      	mov	r5, r0
 8012f8c:	4608      	mov	r0, r1
 8012f8e:	b1e9      	cbz	r1, 8012fcc <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8012f90:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8012f94:	460b      	mov	r3, r1
 8012f96:	f101 0708 	add.w	r7, r1, #8
 8012f9a:	4622      	mov	r2, r4
 8012f9c:	6818      	ldr	r0, [r3, #0]
 8012f9e:	6859      	ldr	r1, [r3, #4]
 8012fa0:	4626      	mov	r6, r4
 8012fa2:	c603      	stmia	r6!, {r0, r1}
 8012fa4:	3308      	adds	r3, #8
 8012fa6:	42bb      	cmp	r3, r7
 8012fa8:	4634      	mov	r4, r6
 8012faa:	d1f7      	bne.n	8012f9c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8012fac:	6818      	ldr	r0, [r3, #0]
 8012fae:	6030      	str	r0, [r6, #0]
 8012fb0:	889b      	ldrh	r3, [r3, #4]
 8012fb2:	80b3      	strh	r3, [r6, #4]
 8012fb4:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8012fb8:	015b      	lsls	r3, r3, #5
 8012fba:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8012fbe:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8012fc2:	430b      	orrs	r3, r1
 8012fc4:	425b      	negs	r3, r3
 8012fc6:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8012fca:	4610      	mov	r0, r2
 8012fcc:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012fce <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8012fce:	b538      	push	{r3, r4, r5, lr}
 8012fd0:	460c      	mov	r4, r1
 8012fd2:	6811      	ldr	r1, [r2, #0]
 8012fd4:	4610      	mov	r0, r2
 8012fd6:	68cd      	ldr	r5, [r1, #12]
 8012fd8:	4619      	mov	r1, r3
 8012fda:	47a8      	blx	r5
 8012fdc:	2800      	cmp	r0, #0
 8012fde:	bf08      	it	eq
 8012fe0:	4620      	moveq	r0, r4
 8012fe2:	bd38      	pop	{r3, r4, r5, pc}

08012fe4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8012fe4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012fe6:	4604      	mov	r4, r0
 8012fe8:	4615      	mov	r5, r2
 8012fea:	4608      	mov	r0, r1
 8012fec:	b93a      	cbnz	r2, 8012ffe <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8012fee:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8012ff2:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8012ff6:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8012ffa:	4628      	mov	r0, r5
 8012ffc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012ffe:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8013002:	8893      	ldrh	r3, [r2, #4]
 8013004:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8013008:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801300c:	79ee      	ldrb	r6, [r5, #7]
 801300e:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8013012:	4316      	orrs	r6, r2
 8013014:	19da      	adds	r2, r3, r7
 8013016:	b291      	uxth	r1, r2
 8013018:	291d      	cmp	r1, #29
 801301a:	b2b7      	uxth	r7, r6
 801301c:	d87a      	bhi.n	8013114 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801301e:	2201      	movs	r2, #1
 8013020:	408a      	lsls	r2, r1
 8013022:	4975      	ldr	r1, [pc, #468]	; (80131f8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8013024:	420a      	tst	r2, r1
 8013026:	ea4f 06e6 	mov.w	r6, r6, asr #3
 801302a:	d12d      	bne.n	8013088 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 801302c:	f412 7f60 	tst.w	r2, #896	; 0x380
 8013030:	d070      	beq.n	8013114 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8013032:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8013036:	462b      	mov	r3, r5
 8013038:	f105 0e08 	add.w	lr, r5, #8
 801303c:	4615      	mov	r5, r2
 801303e:	6818      	ldr	r0, [r3, #0]
 8013040:	6859      	ldr	r1, [r3, #4]
 8013042:	4694      	mov	ip, r2
 8013044:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8013048:	3308      	adds	r3, #8
 801304a:	4573      	cmp	r3, lr
 801304c:	4662      	mov	r2, ip
 801304e:	d1f6      	bne.n	801303e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8013050:	6818      	ldr	r0, [r3, #0]
 8013052:	f8cc 0000 	str.w	r0, [ip]
 8013056:	889b      	ldrh	r3, [r3, #4]
 8013058:	f8ac 3004 	strh.w	r3, [ip, #4]
 801305c:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8013060:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8013064:	b2b3      	uxth	r3, r6
 8013066:	1aca      	subs	r2, r1, r3
 8013068:	b292      	uxth	r2, r2
 801306a:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 801306e:	10d2      	asrs	r2, r2, #3
 8013070:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8013074:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8013078:	4302      	orrs	r2, r0
 801307a:	1bcf      	subs	r7, r1, r7
 801307c:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8013080:	1afb      	subs	r3, r7, r3
 8013082:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8013086:	e7b8      	b.n	8012ffa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8013088:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801308a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801308e:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8013090:	f640 6333 	movw	r3, #3635	; 0xe33
 8013094:	4299      	cmp	r1, r3
 8013096:	d110      	bne.n	80130ba <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8013098:	6803      	ldr	r3, [r0, #0]
 801309a:	68db      	ldr	r3, [r3, #12]
 801309c:	4798      	blx	r3
 801309e:	7b41      	ldrb	r1, [r0, #13]
 80130a0:	00cb      	lsls	r3, r1, #3
 80130a2:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80130a6:	7a03      	ldrb	r3, [r0, #8]
 80130a8:	0648      	lsls	r0, r1, #25
 80130aa:	ea43 0302 	orr.w	r3, r3, r2
 80130ae:	bf44      	itt	mi
 80130b0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80130b4:	b21b      	sxthmi	r3, r3
 80130b6:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80130ba:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 80130be:	443b      	add	r3, r7
 80130c0:	4433      	add	r3, r6
 80130c2:	b29b      	uxth	r3, r3
 80130c4:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 80130c8:	462a      	mov	r2, r5
 80130ca:	f105 0c08 	add.w	ip, r5, #8
 80130ce:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80130d2:	4635      	mov	r5, r6
 80130d4:	6810      	ldr	r0, [r2, #0]
 80130d6:	6851      	ldr	r1, [r2, #4]
 80130d8:	4637      	mov	r7, r6
 80130da:	c703      	stmia	r7!, {r0, r1}
 80130dc:	3208      	adds	r2, #8
 80130de:	4562      	cmp	r2, ip
 80130e0:	463e      	mov	r6, r7
 80130e2:	d1f7      	bne.n	80130d4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 80130e4:	6810      	ldr	r0, [r2, #0]
 80130e6:	6038      	str	r0, [r7, #0]
 80130e8:	8892      	ldrh	r2, [r2, #4]
 80130ea:	80ba      	strh	r2, [r7, #4]
 80130ec:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80130f0:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80130f4:	10db      	asrs	r3, r3, #3
 80130f6:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80130fa:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80130fe:	4313      	orrs	r3, r2
 8013100:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8013104:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8013108:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 801310c:	1a9b      	subs	r3, r3, r2
 801310e:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8013112:	e772      	b.n	8012ffa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8013114:	f023 0204 	bic.w	r2, r3, #4
 8013118:	f640 611b 	movw	r1, #3611	; 0xe1b
 801311c:	428a      	cmp	r2, r1
 801311e:	d003      	beq.n	8013128 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8013120:	f640 621d 	movw	r2, #3613	; 0xe1d
 8013124:	4293      	cmp	r3, r2
 8013126:	d120      	bne.n	801316a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8013128:	3b01      	subs	r3, #1
 801312a:	4602      	mov	r2, r0
 801312c:	b29b      	uxth	r3, r3
 801312e:	4629      	mov	r1, r5
 8013130:	4620      	mov	r0, r4
 8013132:	f7ff ff4c 	bl	8012fce <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8013136:	7b41      	ldrb	r1, [r0, #13]
 8013138:	00cb      	lsls	r3, r1, #3
 801313a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801313e:	7a03      	ldrb	r3, [r0, #8]
 8013140:	0649      	lsls	r1, r1, #25
 8013142:	ea43 0302 	orr.w	r3, r3, r2
 8013146:	bf44      	itt	mi
 8013148:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801314c:	b21b      	sxthmi	r3, r3
 801314e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8013152:	7b6b      	ldrb	r3, [r5, #13]
 8013154:	7aaa      	ldrb	r2, [r5, #10]
 8013156:	005b      	lsls	r3, r3, #1
 8013158:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801315c:	4313      	orrs	r3, r2
 801315e:	115a      	asrs	r2, r3, #5
 8013160:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8013164:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8013168:	e036      	b.n	80131d8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 801316a:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 801316e:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8013172:	7a2a      	ldrb	r2, [r5, #8]
 8013174:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8013178:	ea42 0201 	orr.w	r2, r2, r1
 801317c:	bf1c      	itt	ne
 801317e:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8013182:	b212      	sxthne	r2, r2
 8013184:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8013188:	f640 6109 	movw	r1, #3593	; 0xe09
 801318c:	f023 0210 	bic.w	r2, r3, #16
 8013190:	428a      	cmp	r2, r1
 8013192:	d003      	beq.n	801319c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8013194:	f640 6213 	movw	r2, #3603	; 0xe13
 8013198:	4293      	cmp	r3, r2
 801319a:	d12a      	bne.n	80131f2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 801319c:	7b6e      	ldrb	r6, [r5, #13]
 801319e:	0076      	lsls	r6, r6, #1
 80131a0:	f406 7280 	and.w	r2, r6, #256	; 0x100
 80131a4:	7aae      	ldrb	r6, [r5, #10]
 80131a6:	4316      	orrs	r6, r2
 80131a8:	f640 6213 	movw	r2, #3603	; 0xe13
 80131ac:	4293      	cmp	r3, r2
 80131ae:	bf18      	it	ne
 80131b0:	f103 33ff 	addne.w	r3, r3, #4294967295
 80131b4:	4602      	mov	r2, r0
 80131b6:	bf14      	ite	ne
 80131b8:	b29b      	uxthne	r3, r3
 80131ba:	f640 630c 	movweq	r3, #3596	; 0xe0c
 80131be:	4629      	mov	r1, r5
 80131c0:	4620      	mov	r0, r4
 80131c2:	f7ff ff04 	bl	8012fce <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80131c6:	7b43      	ldrb	r3, [r0, #13]
 80131c8:	7a82      	ldrb	r2, [r0, #10]
 80131ca:	005b      	lsls	r3, r3, #1
 80131cc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80131d0:	4313      	orrs	r3, r2
 80131d2:	1af6      	subs	r6, r6, r3
 80131d4:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 80131d8:	7b69      	ldrb	r1, [r5, #13]
 80131da:	00cb      	lsls	r3, r1, #3
 80131dc:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80131e0:	7a2b      	ldrb	r3, [r5, #8]
 80131e2:	4313      	orrs	r3, r2
 80131e4:	064a      	lsls	r2, r1, #25
 80131e6:	bf44      	itt	mi
 80131e8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80131ec:	b21b      	sxthmi	r3, r3
 80131ee:	1bdb      	subs	r3, r3, r7
 80131f0:	e747      	b.n	8013082 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 80131f2:	2300      	movs	r3, #0
 80131f4:	e7b6      	b.n	8013164 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 80131f6:	bf00      	nop
 80131f8:	3fc00079 	.word	0x3fc00079

080131fc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 80131fc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013200:	4604      	mov	r4, r0
 8013202:	b942      	cbnz	r2, 8013216 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8013204:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8013208:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 801320c:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8013210:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8013214:	e047      	b.n	80132a6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8013216:	7b51      	ldrb	r1, [r2, #13]
 8013218:	8893      	ldrh	r3, [r2, #4]
 801321a:	010d      	lsls	r5, r1, #4
 801321c:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8013220:	79d5      	ldrb	r5, [r2, #7]
 8013222:	4305      	orrs	r5, r0
 8013224:	2d04      	cmp	r5, #4
 8013226:	bfcc      	ite	gt
 8013228:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 801322c:	f04f 0e01 	movle.w	lr, #1
 8013230:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8013234:	f200 80ab 	bhi.w	801338e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8013238:	f240 60e7 	movw	r0, #1767	; 0x6e7
 801323c:	4283      	cmp	r3, r0
 801323e:	d216      	bcs.n	801326e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013240:	f240 605b 	movw	r0, #1627	; 0x65b
 8013244:	4283      	cmp	r3, r0
 8013246:	d859      	bhi.n	80132fc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8013248:	f240 6057 	movw	r0, #1623	; 0x657
 801324c:	4283      	cmp	r3, r0
 801324e:	d20e      	bcs.n	801326e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013250:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8013254:	d24a      	bcs.n	80132ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8013256:	f240 604e 	movw	r0, #1614	; 0x64e
 801325a:	4283      	cmp	r3, r0
 801325c:	d207      	bcs.n	801326e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801325e:	f240 601a 	movw	r0, #1562	; 0x61a
 8013262:	4283      	cmp	r3, r0
 8013264:	d02a      	beq.n	80132bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013266:	d821      	bhi.n	80132ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8013268:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 801326c:	d35b      	bcc.n	8013326 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801326e:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8013272:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8013276:	f040 80d0 	bne.w	801341a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801327a:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 801327e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8013282:	f040 80ca 	bne.w	801341a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8013286:	00cb      	lsls	r3, r1, #3
 8013288:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801328c:	7a13      	ldrb	r3, [r2, #8]
 801328e:	0649      	lsls	r1, r1, #25
 8013290:	ea43 0300 	orr.w	r3, r3, r0
 8013294:	bf44      	itt	mi
 8013296:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801329a:	b21b      	sxthmi	r3, r3
 801329c:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80132a0:	1b5d      	subs	r5, r3, r5
 80132a2:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80132a6:	4610      	mov	r0, r2
 80132a8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80132ac:	f240 604b 	movw	r0, #1611	; 0x64b
 80132b0:	4283      	cmp	r3, r0
 80132b2:	d338      	bcc.n	8013326 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80132b4:	f240 604c 	movw	r0, #1612	; 0x64c
 80132b8:	4283      	cmp	r3, r0
 80132ba:	d9d8      	bls.n	801326e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80132bc:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 80132c0:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 80132c4:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80132c8:	f040 80f2 	bne.w	80134b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80132cc:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80132d0:	f040 80ee 	bne.w	80134b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80132d4:	00cb      	lsls	r3, r1, #3
 80132d6:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80132da:	7a13      	ldrb	r3, [r2, #8]
 80132dc:	064e      	lsls	r6, r1, #25
 80132de:	ea43 0300 	orr.w	r3, r3, r0
 80132e2:	bf44      	itt	mi
 80132e4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80132e8:	b21b      	sxthmi	r3, r3
 80132ea:	e7d9      	b.n	80132a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 80132ec:	f240 6054 	movw	r0, #1620	; 0x654
 80132f0:	4283      	cmp	r3, r0
 80132f2:	d8e3      	bhi.n	80132bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80132f4:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 80132f8:	d9e0      	bls.n	80132bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80132fa:	e7b8      	b.n	801326e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80132fc:	f240 6074 	movw	r0, #1652	; 0x674
 8013300:	4283      	cmp	r3, r0
 8013302:	d0b4      	beq.n	801326e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013304:	d82d      	bhi.n	8013362 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8013306:	f240 605e 	movw	r0, #1630	; 0x65e
 801330a:	4283      	cmp	r3, r0
 801330c:	d804      	bhi.n	8013318 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 801330e:	f240 605d 	movw	r0, #1629	; 0x65d
 8013312:	4283      	cmp	r3, r0
 8013314:	d3d2      	bcc.n	80132bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013316:	e7aa      	b.n	801326e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013318:	f240 605f 	movw	r0, #1631	; 0x65f
 801331c:	4283      	cmp	r3, r0
 801331e:	d0cd      	beq.n	80132bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013320:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8013324:	d0a3      	beq.n	801326e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013326:	00cb      	lsls	r3, r1, #3
 8013328:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801332c:	7a13      	ldrb	r3, [r2, #8]
 801332e:	0649      	lsls	r1, r1, #25
 8013330:	ea43 0300 	orr.w	r3, r3, r0
 8013334:	bf44      	itt	mi
 8013336:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801333a:	b21b      	sxthmi	r3, r3
 801333c:	1b5d      	subs	r5, r3, r5
 801333e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8013342:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8013346:	7b53      	ldrb	r3, [r2, #13]
 8013348:	015b      	lsls	r3, r3, #5
 801334a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801334e:	7993      	ldrb	r3, [r2, #6]
 8013350:	430b      	orrs	r3, r1
 8013352:	005b      	lsls	r3, r3, #1
 8013354:	2105      	movs	r1, #5
 8013356:	fb93 f3f1 	sdiv	r3, r3, r1
 801335a:	f992 1009 	ldrsb.w	r1, [r2, #9]
 801335e:	440b      	add	r3, r1
 8013360:	e756      	b.n	8013210 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8013362:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8013366:	4283      	cmp	r3, r0
 8013368:	d809      	bhi.n	801337e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 801336a:	f240 60df 	movw	r0, #1759	; 0x6df
 801336e:	4283      	cmp	r3, r0
 8013370:	f4bf af7d 	bcs.w	801326e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013374:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8013378:	2b05      	cmp	r3, #5
 801337a:	d8d4      	bhi.n	8013326 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801337c:	e777      	b.n	801326e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801337e:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8013382:	4283      	cmp	r3, r0
 8013384:	d09a      	beq.n	80132bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013386:	f240 60e4 	movw	r0, #1764	; 0x6e4
 801338a:	4283      	cmp	r3, r0
 801338c:	e7ca      	b.n	8013324 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801338e:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8013392:	d22b      	bcs.n	80133ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8013394:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8013398:	4283      	cmp	r3, r0
 801339a:	d28f      	bcs.n	80132bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801339c:	f640 00e5 	movw	r0, #2277	; 0x8e5
 80133a0:	4283      	cmp	r3, r0
 80133a2:	d816      	bhi.n	80133d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 80133a4:	f640 00e4 	movw	r0, #2276	; 0x8e4
 80133a8:	4283      	cmp	r3, r0
 80133aa:	f4bf af60 	bcs.w	801326e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80133ae:	f240 60ec 	movw	r0, #1772	; 0x6ec
 80133b2:	4283      	cmp	r3, r0
 80133b4:	d80a      	bhi.n	80133cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 80133b6:	f240 60eb 	movw	r0, #1771	; 0x6eb
 80133ba:	4283      	cmp	r3, r0
 80133bc:	f4bf af57 	bcs.w	801326e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80133c0:	f240 60ea 	movw	r0, #1770	; 0x6ea
 80133c4:	4283      	cmp	r3, r0
 80133c6:	f43f af79 	beq.w	80132bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80133ca:	e7ac      	b.n	8013326 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80133cc:	f240 60ed 	movw	r0, #1773	; 0x6ed
 80133d0:	e7f8      	b.n	80133c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 80133d2:	f640 00e8 	movw	r0, #2280	; 0x8e8
 80133d6:	4283      	cmp	r3, r0
 80133d8:	d802      	bhi.n	80133e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 80133da:	f640 00e7 	movw	r0, #2279	; 0x8e7
 80133de:	e798      	b.n	8013312 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 80133e0:	f640 00e9 	movw	r0, #2281	; 0x8e9
 80133e4:	4283      	cmp	r3, r0
 80133e6:	f47f af42 	bne.w	801326e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80133ea:	e767      	b.n	80132bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80133ec:	f640 00f6 	movw	r0, #2294	; 0x8f6
 80133f0:	4283      	cmp	r3, r0
 80133f2:	f43f af63 	beq.w	80132bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80133f6:	d802      	bhi.n	80133fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 80133f8:	f640 00f2 	movw	r0, #2290	; 0x8f2
 80133fc:	e7f2      	b.n	80133e4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 80133fe:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8013402:	4283      	cmp	r3, r0
 8013404:	d805      	bhi.n	8013412 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8013406:	f640 00f9 	movw	r0, #2297	; 0x8f9
 801340a:	4283      	cmp	r3, r0
 801340c:	f4ff af2f 	bcc.w	801326e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013410:	e754      	b.n	80132bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013412:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8013416:	4283      	cmp	r3, r0
 8013418:	e7af      	b.n	801337a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 801341a:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801341e:	4617      	mov	r7, r2
 8013420:	f102 0808 	add.w	r8, r2, #8
 8013424:	4666      	mov	r6, ip
 8013426:	6838      	ldr	r0, [r7, #0]
 8013428:	6879      	ldr	r1, [r7, #4]
 801342a:	46e6      	mov	lr, ip
 801342c:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8013430:	3708      	adds	r7, #8
 8013432:	4547      	cmp	r7, r8
 8013434:	46f4      	mov	ip, lr
 8013436:	d1f6      	bne.n	8013426 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8013438:	6838      	ldr	r0, [r7, #0]
 801343a:	f8ce 0000 	str.w	r0, [lr]
 801343e:	88b9      	ldrh	r1, [r7, #4]
 8013440:	f8ae 1004 	strh.w	r1, [lr, #4]
 8013444:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8013448:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801344c:	d009      	beq.n	8013462 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 801344e:	7b51      	ldrb	r1, [r2, #13]
 8013450:	7992      	ldrb	r2, [r2, #6]
 8013452:	0149      	lsls	r1, r1, #5
 8013454:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8013458:	4311      	orrs	r1, r2
 801345a:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801345e:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8013462:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8013466:	b2ad      	uxth	r5, r5
 8013468:	d00d      	beq.n	8013486 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 801346a:	442b      	add	r3, r5
 801346c:	b29b      	uxth	r3, r3
 801346e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8013472:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8013476:	10db      	asrs	r3, r3, #3
 8013478:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801347c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8013480:	4313      	orrs	r3, r2
 8013482:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8013486:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801348a:	00cb      	lsls	r3, r1, #3
 801348c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013490:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8013494:	064f      	lsls	r7, r1, #25
 8013496:	ea43 0302 	orr.w	r3, r3, r2
 801349a:	bf44      	itt	mi
 801349c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80134a0:	b21b      	sxthmi	r3, r3
 80134a2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80134a6:	1b5b      	subs	r3, r3, r5
 80134a8:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 80134ac:	4632      	mov	r2, r6
 80134ae:	e6fa      	b.n	80132a6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80134b0:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 80134b4:	4617      	mov	r7, r2
 80134b6:	f102 0908 	add.w	r9, r2, #8
 80134ba:	4666      	mov	r6, ip
 80134bc:	6838      	ldr	r0, [r7, #0]
 80134be:	6879      	ldr	r1, [r7, #4]
 80134c0:	46e0      	mov	r8, ip
 80134c2:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 80134c6:	3708      	adds	r7, #8
 80134c8:	454f      	cmp	r7, r9
 80134ca:	46c4      	mov	ip, r8
 80134cc:	d1f6      	bne.n	80134bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 80134ce:	6838      	ldr	r0, [r7, #0]
 80134d0:	f8c8 0000 	str.w	r0, [r8]
 80134d4:	88b9      	ldrh	r1, [r7, #4]
 80134d6:	f8a8 1004 	strh.w	r1, [r8, #4]
 80134da:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 80134de:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80134e2:	d009      	beq.n	80134f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 80134e4:	7b51      	ldrb	r1, [r2, #13]
 80134e6:	7992      	ldrb	r2, [r2, #6]
 80134e8:	0149      	lsls	r1, r1, #5
 80134ea:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80134ee:	4311      	orrs	r1, r2
 80134f0:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80134f4:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 80134f8:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80134fc:	d00e      	beq.n	801351c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 80134fe:	eba3 030e 	sub.w	r3, r3, lr
 8013502:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8013506:	b29b      	uxth	r3, r3
 8013508:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801350c:	10db      	asrs	r3, r3, #3
 801350e:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8013512:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8013516:	4313      	orrs	r3, r2
 8013518:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801351c:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8013520:	00cb      	lsls	r3, r1, #3
 8013522:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013526:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801352a:	0648      	lsls	r0, r1, #25
 801352c:	ea43 0302 	orr.w	r3, r3, r2
 8013530:	bf44      	itt	mi
 8013532:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013536:	b21b      	sxthmi	r3, r3
 8013538:	1b5d      	subs	r5, r3, r5
 801353a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801353e:	e7b5      	b.n	80134ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08013540 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8013540:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013544:	461e      	mov	r6, r3
 8013546:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8013548:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801354c:	4604      	mov	r4, r0
 801354e:	4617      	mov	r7, r2
 8013550:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8013554:	f7f2 f97c 	bl	8005850 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8013558:	4605      	mov	r5, r0
 801355a:	b918      	cbnz	r0, 8013564 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 801355c:	6030      	str	r0, [r6, #0]
 801355e:	4628      	mov	r0, r5
 8013560:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013564:	683b      	ldr	r3, [r7, #0]
 8013566:	4601      	mov	r1, r0
 8013568:	68db      	ldr	r3, [r3, #12]
 801356a:	4638      	mov	r0, r7
 801356c:	4798      	blx	r3
 801356e:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8013572:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8013576:	4602      	mov	r2, r0
 8013578:	6030      	str	r0, [r6, #0]
 801357a:	d213      	bcs.n	80135a4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 801357c:	4643      	mov	r3, r8
 801357e:	4639      	mov	r1, r7
 8013580:	4620      	mov	r0, r4
 8013582:	f7ff fe3b 	bl	80131fc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8013586:	6030      	str	r0, [r6, #0]
 8013588:	6833      	ldr	r3, [r6, #0]
 801358a:	b143      	cbz	r3, 801359e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 801358c:	7b5a      	ldrb	r2, [r3, #13]
 801358e:	7a9b      	ldrb	r3, [r3, #10]
 8013590:	0052      	lsls	r2, r2, #1
 8013592:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8013596:	4313      	orrs	r3, r2
 8013598:	bf0c      	ite	eq
 801359a:	2301      	moveq	r3, #1
 801359c:	2300      	movne	r3, #0
 801359e:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 80135a2:	e7dc      	b.n	801355e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 80135a4:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80135a8:	b29b      	uxth	r3, r3
 80135aa:	2b7f      	cmp	r3, #127	; 0x7f
 80135ac:	d804      	bhi.n	80135b8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 80135ae:	4639      	mov	r1, r7
 80135b0:	4620      	mov	r0, r4
 80135b2:	f7ff fd17 	bl	8012fe4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80135b6:	e7e6      	b.n	8013586 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 80135b8:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80135bc:	2b00      	cmp	r3, #0
 80135be:	d0e3      	beq.n	8013588 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80135c0:	f640 1302 	movw	r3, #2306	; 0x902
 80135c4:	429d      	cmp	r5, r3
 80135c6:	d1df      	bne.n	8013588 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80135c8:	4601      	mov	r1, r0
 80135ca:	4620      	mov	r0, r4
 80135cc:	f7ff fcdc 	bl	8012f88 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80135d0:	e7d9      	b.n	8013586 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

080135d2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 80135d2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80135d6:	461e      	mov	r6, r3
 80135d8:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80135da:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80135de:	4604      	mov	r4, r0
 80135e0:	4617      	mov	r7, r2
 80135e2:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80135e6:	f7f2 f933 	bl	8005850 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80135ea:	4605      	mov	r5, r0
 80135ec:	b918      	cbnz	r0, 80135f6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 80135ee:	6030      	str	r0, [r6, #0]
 80135f0:	4628      	mov	r0, r5
 80135f2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80135f6:	683b      	ldr	r3, [r7, #0]
 80135f8:	4601      	mov	r1, r0
 80135fa:	f8d3 9008 	ldr.w	r9, [r3, #8]
 80135fe:	4638      	mov	r0, r7
 8013600:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8013604:	47c8      	blx	r9
 8013606:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801360a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801360e:	4602      	mov	r2, r0
 8013610:	6030      	str	r0, [r6, #0]
 8013612:	d213      	bcs.n	801363c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8013614:	4643      	mov	r3, r8
 8013616:	4639      	mov	r1, r7
 8013618:	4620      	mov	r0, r4
 801361a:	f7ff fdef 	bl	80131fc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801361e:	6030      	str	r0, [r6, #0]
 8013620:	6833      	ldr	r3, [r6, #0]
 8013622:	b143      	cbz	r3, 8013636 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8013624:	7b5a      	ldrb	r2, [r3, #13]
 8013626:	7a9b      	ldrb	r3, [r3, #10]
 8013628:	0052      	lsls	r2, r2, #1
 801362a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801362e:	4313      	orrs	r3, r2
 8013630:	bf0c      	ite	eq
 8013632:	2301      	moveq	r3, #1
 8013634:	2300      	movne	r3, #0
 8013636:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801363a:	e7d9      	b.n	80135f0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 801363c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8013640:	b29b      	uxth	r3, r3
 8013642:	2b7f      	cmp	r3, #127	; 0x7f
 8013644:	d804      	bhi.n	8013650 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8013646:	4639      	mov	r1, r7
 8013648:	4620      	mov	r0, r4
 801364a:	f7ff fccb 	bl	8012fe4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801364e:	e7e6      	b.n	801361e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8013650:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8013654:	2b00      	cmp	r3, #0
 8013656:	d0e3      	beq.n	8013620 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8013658:	f640 1302 	movw	r3, #2306	; 0x902
 801365c:	429d      	cmp	r5, r3
 801365e:	d1df      	bne.n	8013620 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8013660:	4601      	mov	r1, r0
 8013662:	4620      	mov	r0, r4
 8013664:	f7ff fc90 	bl	8012f88 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8013668:	e7d9      	b.n	801361e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801366a <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801366a:	b510      	push	{r4, lr}
 801366c:	4604      	mov	r4, r0
 801366e:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8013672:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8013674:	b1f1      	cbz	r1, 80136b4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8013676:	2b0a      	cmp	r3, #10
 8013678:	d02f      	beq.n	80136da <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801367a:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 801367c:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8013680:	3901      	subs	r1, #1
 8013682:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8013684:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8013688:	1c51      	adds	r1, r2, #1
 801368a:	b289      	uxth	r1, r1
 801368c:	2901      	cmp	r1, #1
 801368e:	bf84      	itt	hi
 8013690:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8013694:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 8013696:	f103 0201 	add.w	r2, r3, #1
 801369a:	8722      	strh	r2, [r4, #56]	; 0x38
 801369c:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801369e:	bf98      	it	ls
 80136a0:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 80136a2:	4413      	add	r3, r2
 80136a4:	b29b      	uxth	r3, r3
 80136a6:	2b09      	cmp	r3, #9
 80136a8:	bf88      	it	hi
 80136aa:	3b0a      	subhi	r3, #10
 80136ac:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80136b0:	8458      	strh	r0, [r3, #34]	; 0x22
 80136b2:	e7dc      	b.n	801366e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 80136b4:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80136b6:	2b0a      	cmp	r3, #10
 80136b8:	d00f      	beq.n	80136da <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80136ba:	4620      	mov	r0, r4
 80136bc:	f7ff fc12 	bl	8012ee4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 80136c0:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80136c2:	1c5a      	adds	r2, r3, #1
 80136c4:	8722      	strh	r2, [r4, #56]	; 0x38
 80136c6:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80136c8:	4413      	add	r3, r2
 80136ca:	b29b      	uxth	r3, r3
 80136cc:	2b09      	cmp	r3, #9
 80136ce:	bf88      	it	hi
 80136d0:	3b0a      	subhi	r3, #10
 80136d2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80136d6:	8458      	strh	r0, [r3, #34]	; 0x22
 80136d8:	e7ec      	b.n	80136b4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80136da:	bd10      	pop	{r4, pc}

080136dc <_ZN8touchgfx12TextProvider11getNextCharEv>:
 80136dc:	b538      	push	{r3, r4, r5, lr}
 80136de:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80136e0:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 80136e4:	4604      	mov	r4, r0
 80136e6:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 80136e8:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 80136ea:	3a01      	subs	r2, #1
 80136ec:	8702      	strh	r2, [r0, #56]	; 0x38
 80136ee:	1c5a      	adds	r2, r3, #1
 80136f0:	b292      	uxth	r2, r2
 80136f2:	2a09      	cmp	r2, #9
 80136f4:	bf86      	itte	hi
 80136f6:	3b09      	subhi	r3, #9
 80136f8:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 80136fa:	86c2      	strhls	r2, [r0, #54]	; 0x36
 80136fc:	f7ff ffb5 	bl	801366a <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8013700:	8c23      	ldrh	r3, [r4, #32]
 8013702:	2b01      	cmp	r3, #1
 8013704:	bf9c      	itt	ls
 8013706:	3301      	addls	r3, #1
 8013708:	8423      	strhls	r3, [r4, #32]
 801370a:	8be3      	ldrh	r3, [r4, #30]
 801370c:	b90b      	cbnz	r3, 8013712 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801370e:	2302      	movs	r3, #2
 8013710:	83e3      	strh	r3, [r4, #30]
 8013712:	8be3      	ldrh	r3, [r4, #30]
 8013714:	3b01      	subs	r3, #1
 8013716:	b29b      	uxth	r3, r3
 8013718:	83e3      	strh	r3, [r4, #30]
 801371a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801371e:	4628      	mov	r0, r5
 8013720:	8365      	strh	r5, [r4, #26]
 8013722:	bd38      	pop	{r3, r4, r5, pc}

08013724 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8013724:	428a      	cmp	r2, r1
 8013726:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801372a:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 801372c:	d931      	bls.n	8013792 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 801372e:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8013730:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 8013734:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8013738:	19ee      	adds	r6, r5, r7
 801373a:	1a54      	subs	r4, r2, r1
 801373c:	3e01      	subs	r6, #1
 801373e:	fa1f fe84 	uxth.w	lr, r4
 8013742:	b2b4      	uxth	r4, r6
 8013744:	eba4 090e 	sub.w	r9, r4, lr
 8013748:	fa1f f989 	uxth.w	r9, r9
 801374c:	2c09      	cmp	r4, #9
 801374e:	4626      	mov	r6, r4
 8013750:	bf88      	it	hi
 8013752:	f1a4 060a 	subhi.w	r6, r4, #10
 8013756:	f1bc 0f00 	cmp.w	ip, #0
 801375a:	bf08      	it	eq
 801375c:	f04f 0c02 	moveq.w	ip, #2
 8013760:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8013764:	f10c 3cff 	add.w	ip, ip, #4294967295
 8013768:	fa1f fc8c 	uxth.w	ip, ip
 801376c:	3c01      	subs	r4, #1
 801376e:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 8013772:	b2a4      	uxth	r4, r4
 8013774:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8013778:	454c      	cmp	r4, r9
 801377a:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 801377e:	d1e5      	bne.n	801374c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8013780:	eba5 050e 	sub.w	r5, r5, lr
 8013784:	eb0e 0408 	add.w	r4, lr, r8
 8013788:	8705      	strh	r5, [r0, #56]	; 0x38
 801378a:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 801378e:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 8013792:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8013794:	1a64      	subs	r4, r4, r1
 8013796:	4439      	add	r1, r7
 8013798:	b289      	uxth	r1, r1
 801379a:	2909      	cmp	r1, #9
 801379c:	bf88      	it	hi
 801379e:	390a      	subhi	r1, #10
 80137a0:	8704      	strh	r4, [r0, #56]	; 0x38
 80137a2:	86c1      	strh	r1, [r0, #54]	; 0x36
 80137a4:	250a      	movs	r5, #10
 80137a6:	b18a      	cbz	r2, 80137cc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 80137a8:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 80137aa:	3a01      	subs	r2, #1
 80137ac:	b292      	uxth	r2, r2
 80137ae:	3101      	adds	r1, #1
 80137b0:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 80137b4:	8701      	strh	r1, [r0, #56]	; 0x38
 80137b6:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80137b8:	b901      	cbnz	r1, 80137bc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 80137ba:	86c5      	strh	r5, [r0, #54]	; 0x36
 80137bc:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80137be:	3901      	subs	r1, #1
 80137c0:	b289      	uxth	r1, r1
 80137c2:	86c1      	strh	r1, [r0, #54]	; 0x36
 80137c4:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80137c8:	844c      	strh	r4, [r1, #34]	; 0x22
 80137ca:	e7ec      	b.n	80137a6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 80137cc:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80137d0:	f7ff bf4b 	b.w	801366a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080137d4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 80137d4:	b570      	push	{r4, r5, r6, lr}
 80137d6:	2500      	movs	r5, #0
 80137d8:	4295      	cmp	r5, r2
 80137da:	d011      	beq.n	8013800 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 80137dc:	8bc4      	ldrh	r4, [r0, #30]
 80137de:	f831 6b02 	ldrh.w	r6, [r1], #2
 80137e2:	4414      	add	r4, r2
 80137e4:	3c01      	subs	r4, #1
 80137e6:	1b64      	subs	r4, r4, r5
 80137e8:	b2a4      	uxth	r4, r4
 80137ea:	2c01      	cmp	r4, #1
 80137ec:	bf88      	it	hi
 80137ee:	3c02      	subhi	r4, #2
 80137f0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80137f4:	8b64      	ldrh	r4, [r4, #26]
 80137f6:	42b4      	cmp	r4, r6
 80137f8:	d117      	bne.n	801382a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 80137fa:	3501      	adds	r5, #1
 80137fc:	b2ad      	uxth	r5, r5
 80137fe:	e7eb      	b.n	80137d8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8013800:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8013804:	2400      	movs	r4, #0
 8013806:	4413      	add	r3, r2
 8013808:	b2a2      	uxth	r2, r4
 801380a:	429a      	cmp	r2, r3
 801380c:	da0f      	bge.n	801382e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 801380e:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8013810:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8013814:	4432      	add	r2, r6
 8013816:	b292      	uxth	r2, r2
 8013818:	2a09      	cmp	r2, #9
 801381a:	bf88      	it	hi
 801381c:	3a0a      	subhi	r2, #10
 801381e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8013822:	3401      	adds	r4, #1
 8013824:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8013826:	42aa      	cmp	r2, r5
 8013828:	d0ee      	beq.n	8013808 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 801382a:	2000      	movs	r0, #0
 801382c:	bd70      	pop	{r4, r5, r6, pc}
 801382e:	2001      	movs	r0, #1
 8013830:	e7fc      	b.n	801382c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08013832 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8013832:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013836:	4605      	mov	r5, r0
 8013838:	4616      	mov	r6, r2
 801383a:	1c8c      	adds	r4, r1, #2
 801383c:	8809      	ldrh	r1, [r1, #0]
 801383e:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8013842:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8013846:	42b3      	cmp	r3, r6
 8013848:	d124      	bne.n	8013894 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801384a:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801384e:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8013852:	f001 070f 	and.w	r7, r1, #15
 8013856:	f8cd 8000 	str.w	r8, [sp]
 801385a:	464b      	mov	r3, r9
 801385c:	4652      	mov	r2, sl
 801385e:	4621      	mov	r1, r4
 8013860:	4628      	mov	r0, r5
 8013862:	f7ff ffb7 	bl	80137d4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8013866:	4683      	mov	fp, r0
 8013868:	b168      	cbz	r0, 8013886 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801386a:	eb0a 0109 	add.w	r1, sl, r9
 801386e:	4441      	add	r1, r8
 8013870:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8013874:	463a      	mov	r2, r7
 8013876:	4649      	mov	r1, r9
 8013878:	4628      	mov	r0, r5
 801387a:	f7ff ff53 	bl	8013724 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801387e:	4658      	mov	r0, fp
 8013880:	b003      	add	sp, #12
 8013882:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013886:	eb07 010a 	add.w	r1, r7, sl
 801388a:	4449      	add	r1, r9
 801388c:	4441      	add	r1, r8
 801388e:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8013892:	e7d2      	b.n	801383a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8013894:	f04f 0b00 	mov.w	fp, #0
 8013898:	e7f1      	b.n	801387e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801389a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801389a:	b570      	push	{r4, r5, r6, lr}
 801389c:	8810      	ldrh	r0, [r2, #0]
 801389e:	4298      	cmp	r0, r3
 80138a0:	d817      	bhi.n	80138d2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80138a2:	1e48      	subs	r0, r1, #1
 80138a4:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 80138a8:	4298      	cmp	r0, r3
 80138aa:	d312      	bcc.n	80138d2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80138ac:	2400      	movs	r4, #0
 80138ae:	428c      	cmp	r4, r1
 80138b0:	d20f      	bcs.n	80138d2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80138b2:	1860      	adds	r0, r4, r1
 80138b4:	1040      	asrs	r0, r0, #1
 80138b6:	0085      	lsls	r5, r0, #2
 80138b8:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 80138bc:	42b3      	cmp	r3, r6
 80138be:	d902      	bls.n	80138c6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 80138c0:	3001      	adds	r0, #1
 80138c2:	b284      	uxth	r4, r0
 80138c4:	e7f3      	b.n	80138ae <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80138c6:	d201      	bcs.n	80138cc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 80138c8:	b281      	uxth	r1, r0
 80138ca:	e7f0      	b.n	80138ae <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80138cc:	442a      	add	r2, r5
 80138ce:	8850      	ldrh	r0, [r2, #2]
 80138d0:	bd70      	pop	{r4, r5, r6, pc}
 80138d2:	2000      	movs	r0, #0
 80138d4:	e7fc      	b.n	80138d0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

080138d6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 80138d6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80138da:	6c45      	ldr	r5, [r0, #68]	; 0x44
 80138dc:	886f      	ldrh	r7, [r5, #2]
 80138de:	4604      	mov	r4, r0
 80138e0:	087f      	lsrs	r7, r7, #1
 80138e2:	260b      	movs	r6, #11
 80138e4:	3e01      	subs	r6, #1
 80138e6:	d013      	beq.n	8013910 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80138e8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80138ea:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80138ee:	462a      	mov	r2, r5
 80138f0:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80138f4:	4639      	mov	r1, r7
 80138f6:	4643      	mov	r3, r8
 80138f8:	4620      	mov	r0, r4
 80138fa:	f7ff ffce 	bl	801389a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 80138fe:	b138      	cbz	r0, 8013910 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8013900:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8013904:	4642      	mov	r2, r8
 8013906:	4620      	mov	r0, r4
 8013908:	f7ff ff93 	bl	8013832 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 801390c:	2800      	cmp	r0, #0
 801390e:	d1e9      	bne.n	80138e4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8013910:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013914 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8013914:	b570      	push	{r4, r5, r6, lr}
 8013916:	694a      	ldr	r2, [r1, #20]
 8013918:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 801391a:	684b      	ldr	r3, [r1, #4]
 801391c:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 801391e:	1b54      	subs	r4, r2, r5
 8013920:	f000 8106 	beq.w	8013b30 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8013924:	1b9b      	subs	r3, r3, r6
 8013926:	d003      	beq.n	8013930 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8013928:	4363      	muls	r3, r4
 801392a:	2210      	movs	r2, #16
 801392c:	fb93 f3f2 	sdiv	r3, r3, r2
 8013930:	680c      	ldr	r4, [r1, #0]
 8013932:	698a      	ldr	r2, [r1, #24]
 8013934:	1b65      	subs	r5, r4, r5
 8013936:	f000 80fd 	beq.w	8013b34 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 801393a:	1b92      	subs	r2, r2, r6
 801393c:	d003      	beq.n	8013946 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801393e:	436a      	muls	r2, r5
 8013940:	2410      	movs	r4, #16
 8013942:	fb92 f2f4 	sdiv	r2, r2, r4
 8013946:	1a9b      	subs	r3, r3, r2
 8013948:	ee07 3a90 	vmov	s15, r3
 801394c:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8013b70 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8013950:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013954:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8013958:	ee67 7a84 	vmul.f32	s15, s15, s8
 801395c:	460a      	mov	r2, r1
 801395e:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8013962:	4603      	mov	r3, r0
 8013964:	f100 040c 	add.w	r4, r0, #12
 8013968:	eeb1 6a43 	vneg.f32	s12, s6
 801396c:	edd2 7a02 	vldr	s15, [r2, #8]
 8013970:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8013974:	3214      	adds	r2, #20
 8013976:	ece3 6a01 	vstmia	r3!, {s13}
 801397a:	ed52 7a02 	vldr	s15, [r2, #-8]
 801397e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8013982:	429c      	cmp	r4, r3
 8013984:	edc3 7a02 	vstr	s15, [r3, #8]
 8013988:	ed52 7a01 	vldr	s15, [r2, #-4]
 801398c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8013990:	edc3 7a05 	vstr	s15, [r3, #20]
 8013994:	d1ea      	bne.n	801396c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8013996:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8013998:	698b      	ldr	r3, [r1, #24]
 801399a:	edd0 4a02 	vldr	s9, [r0, #8]
 801399e:	edd0 3a00 	vldr	s7, [r0]
 80139a2:	edd0 6a01 	vldr	s13, [r0, #4]
 80139a6:	ed90 5a05 	vldr	s10, [r0, #20]
 80139aa:	ed90 2a03 	vldr	s4, [r0, #12]
 80139ae:	edd0 5a04 	vldr	s11, [r0, #16]
 80139b2:	ed90 1a07 	vldr	s2, [r0, #28]
 80139b6:	edd0 2a06 	vldr	s5, [r0, #24]
 80139ba:	1a9b      	subs	r3, r3, r2
 80139bc:	ee07 3a90 	vmov	s15, r3
 80139c0:	684b      	ldr	r3, [r1, #4]
 80139c2:	1a9b      	subs	r3, r3, r2
 80139c4:	ee07 3a10 	vmov	s14, r3
 80139c8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80139cc:	ee76 6ae4 	vsub.f32	s13, s13, s9
 80139d0:	ee67 7a84 	vmul.f32	s15, s15, s8
 80139d4:	ee73 4ae4 	vsub.f32	s9, s7, s9
 80139d8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80139dc:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 80139e0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80139e4:	ee75 5ac5 	vsub.f32	s11, s11, s10
 80139e8:	eee6 7a87 	vfma.f32	s15, s13, s14
 80139ec:	ee32 5a45 	vsub.f32	s10, s4, s10
 80139f0:	ee67 7a83 	vmul.f32	s15, s15, s6
 80139f4:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 80139f8:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80139fa:	694a      	ldr	r2, [r1, #20]
 80139fc:	1b13      	subs	r3, r2, r4
 80139fe:	ee07 3a10 	vmov	s14, r3
 8013a02:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013a06:	680b      	ldr	r3, [r1, #0]
 8013a08:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013a0c:	1b1b      	subs	r3, r3, r4
 8013a0e:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8013a12:	ee07 3a10 	vmov	s14, r3
 8013a16:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013a1a:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013a1e:	eee6 4a87 	vfma.f32	s9, s13, s14
 8013a22:	ee64 4a86 	vmul.f32	s9, s9, s12
 8013a26:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8013a2a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8013a2c:	698b      	ldr	r3, [r1, #24]
 8013a2e:	1a9b      	subs	r3, r3, r2
 8013a30:	ee06 3a90 	vmov	s13, r3
 8013a34:	684b      	ldr	r3, [r1, #4]
 8013a36:	1a9b      	subs	r3, r3, r2
 8013a38:	ee07 3a10 	vmov	s14, r3
 8013a3c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8013a40:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013a44:	ee66 6a84 	vmul.f32	s13, s13, s8
 8013a48:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013a4c:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8013a50:	eee5 6a87 	vfma.f32	s13, s11, s14
 8013a54:	ee66 6a83 	vmul.f32	s13, s13, s6
 8013a58:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8013a5c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8013a5e:	694a      	ldr	r2, [r1, #20]
 8013a60:	1b13      	subs	r3, r2, r4
 8013a62:	ee07 3a10 	vmov	s14, r3
 8013a66:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013a6a:	680b      	ldr	r3, [r1, #0]
 8013a6c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013a70:	1b1b      	subs	r3, r3, r4
 8013a72:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8013a76:	ee07 3a10 	vmov	s14, r3
 8013a7a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013a7e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013a82:	eea5 5a87 	vfma.f32	s10, s11, s14
 8013a86:	edd0 5a08 	vldr	s11, [r0, #32]
 8013a8a:	ee25 5a06 	vmul.f32	s10, s10, s12
 8013a8e:	ee31 1a65 	vsub.f32	s2, s2, s11
 8013a92:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8013a96:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8013a98:	698b      	ldr	r3, [r1, #24]
 8013a9a:	1a9b      	subs	r3, r3, r2
 8013a9c:	ee07 3a10 	vmov	s14, r3
 8013aa0:	684b      	ldr	r3, [r1, #4]
 8013aa2:	1a9b      	subs	r3, r3, r2
 8013aa4:	ee01 3a90 	vmov	s3, r3
 8013aa8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013aac:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8013ab0:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013ab4:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8013ab8:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8013abc:	ee61 1a84 	vmul.f32	s3, s3, s8
 8013ac0:	eea1 7a21 	vfma.f32	s14, s2, s3
 8013ac4:	ee27 7a03 	vmul.f32	s14, s14, s6
 8013ac8:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8013acc:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8013ace:	694a      	ldr	r2, [r1, #20]
 8013ad0:	1b13      	subs	r3, r2, r4
 8013ad2:	ee03 3a10 	vmov	s6, r3
 8013ad6:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8013ada:	680b      	ldr	r3, [r1, #0]
 8013adc:	ee23 3a04 	vmul.f32	s6, s6, s8
 8013ae0:	1b1b      	subs	r3, r3, r4
 8013ae2:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8013ae6:	ee03 3a10 	vmov	s6, r3
 8013aea:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8013aee:	ee23 4a04 	vmul.f32	s8, s6, s8
 8013af2:	eee1 5a04 	vfma.f32	s11, s2, s8
 8013af6:	ee25 6a86 	vmul.f32	s12, s11, s12
 8013afa:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8013afe:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8013b02:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8013b06:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8013b0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013b0e:	dd13      	ble.n	8013b38 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8013b10:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8013b14:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8013b18:	63c3      	str	r3, [r0, #60]	; 0x3c
 8013b1a:	eee3 7a87 	vfma.f32	s15, s7, s14
 8013b1e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8013b22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013b26:	dd15      	ble.n	8013b54 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8013b28:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8013b2c:	6403      	str	r3, [r0, #64]	; 0x40
 8013b2e:	bd70      	pop	{r4, r5, r6, pc}
 8013b30:	4623      	mov	r3, r4
 8013b32:	e6fd      	b.n	8013930 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8013b34:	462a      	mov	r2, r5
 8013b36:	e706      	b.n	8013946 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8013b38:	d502      	bpl.n	8013b40 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8013b3a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8013b3e:	e7e9      	b.n	8013b14 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8013b40:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8013b44:	eea3 2a85 	vfma.f32	s4, s7, s10
 8013b48:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8013b4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013b50:	dade      	bge.n	8013b10 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8013b52:	e7f2      	b.n	8013b3a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8013b54:	d502      	bpl.n	8013b5c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8013b56:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8013b5a:	e7e7      	b.n	8013b2c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8013b5c:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8013b60:	eee3 4a86 	vfma.f32	s9, s7, s12
 8013b64:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8013b68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013b6c:	dadc      	bge.n	8013b28 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8013b6e:	e7f2      	b.n	8013b56 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8013b70:	3d800000 	.word	0x3d800000

08013b74 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8013b74:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013b78:	2714      	movs	r7, #20
 8013b7a:	435f      	muls	r7, r3
 8013b7c:	eb02 0c07 	add.w	ip, r2, r7
 8013b80:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8013b84:	f115 0e0f 	adds.w	lr, r5, #15
 8013b88:	f100 80a2 	bmi.w	8013cd0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8013b8c:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8013b90:	9c08      	ldr	r4, [sp, #32]
 8013b92:	f8c0 e014 	str.w	lr, [r0, #20]
 8013b96:	2614      	movs	r6, #20
 8013b98:	4366      	muls	r6, r4
 8013b9a:	eb02 0806 	add.w	r8, r2, r6
 8013b9e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8013ba2:	f115 040f 	adds.w	r4, r5, #15
 8013ba6:	f100 809f 	bmi.w	8013ce8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8013baa:	1124      	asrs	r4, r4, #4
 8013bac:	eba4 040e 	sub.w	r4, r4, lr
 8013bb0:	6184      	str	r4, [r0, #24]
 8013bb2:	2c00      	cmp	r4, #0
 8013bb4:	f000 808a 	beq.w	8013ccc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8013bb8:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8013bbc:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8013bc0:	5995      	ldr	r5, [r2, r6]
 8013bc2:	eba4 0809 	sub.w	r8, r4, r9
 8013bc6:	59d4      	ldr	r4, [r2, r7]
 8013bc8:	eba5 0a04 	sub.w	sl, r5, r4
 8013bcc:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8013bd0:	fb0e fe05 	mul.w	lr, lr, r5
 8013bd4:	fb0a ee19 	mls	lr, sl, r9, lr
 8013bd8:	fb08 e404 	mla	r4, r8, r4, lr
 8013bdc:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8013be0:	3c01      	subs	r4, #1
 8013be2:	19a4      	adds	r4, r4, r6
 8013be4:	f100 808c 	bmi.w	8013d00 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8013be8:	fb94 fef6 	sdiv	lr, r4, r6
 8013bec:	f8c0 e000 	str.w	lr, [r0]
 8013bf0:	fb06 441e 	mls	r4, r6, lr, r4
 8013bf4:	6104      	str	r4, [r0, #16]
 8013bf6:	2d00      	cmp	r5, #0
 8013bf8:	f2c0 8095 	blt.w	8013d26 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8013bfc:	fb95 f4f6 	sdiv	r4, r5, r6
 8013c00:	6044      	str	r4, [r0, #4]
 8013c02:	fb06 5514 	mls	r5, r6, r4, r5
 8013c06:	6085      	str	r5, [r0, #8]
 8013c08:	60c6      	str	r6, [r0, #12]
 8013c0a:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8013c0e:	6945      	ldr	r5, [r0, #20]
 8013c10:	59d2      	ldr	r2, [r2, r7]
 8013c12:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8013d48 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8013c16:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8013c1a:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8013c1e:	ee07 4a10 	vmov	s14, r4
 8013c22:	6804      	ldr	r4, [r0, #0]
 8013c24:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8013c28:	ee07 2a90 	vmov	s15, r2
 8013c2c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013c30:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013c34:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8013c38:	ee27 7a26 	vmul.f32	s14, s14, s13
 8013c3c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8013c40:	edd3 6a00 	vldr	s13, [r3]
 8013c44:	eee6 6a07 	vfma.f32	s13, s12, s14
 8013c48:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8013c4c:	eee6 6a27 	vfma.f32	s13, s12, s15
 8013c50:	edc0 6a07 	vstr	s13, [r0, #28]
 8013c54:	edd0 6a01 	vldr	s13, [r0, #4]
 8013c58:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8013c5c:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8013c60:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8013c64:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8013c68:	ed80 6a08 	vstr	s12, [r0, #32]
 8013c6c:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8013c6e:	6242      	str	r2, [r0, #36]	; 0x24
 8013c70:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8013c74:	ed93 6a03 	vldr	s12, [r3, #12]
 8013c78:	eea5 6a87 	vfma.f32	s12, s11, s14
 8013c7c:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8013c80:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8013c84:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8013c88:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8013c8c:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8013c90:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8013c94:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8013c98:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8013c9a:	6302      	str	r2, [r0, #48]	; 0x30
 8013c9c:	ed93 6a06 	vldr	s12, [r3, #24]
 8013ca0:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8013ca4:	eea5 6a87 	vfma.f32	s12, s11, s14
 8013ca8:	eeb0 7a46 	vmov.f32	s14, s12
 8013cac:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8013cb0:	eea6 7a27 	vfma.f32	s14, s12, s15
 8013cb4:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8013cb8:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8013cbc:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8013cc0:	eee6 7a87 	vfma.f32	s15, s13, s14
 8013cc4:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8013cc8:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8013cca:	63c3      	str	r3, [r0, #60]	; 0x3c
 8013ccc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8013cd0:	f1c5 0501 	rsb	r5, r5, #1
 8013cd4:	f015 050f 	ands.w	r5, r5, #15
 8013cd8:	bf18      	it	ne
 8013cda:	2501      	movne	r5, #1
 8013cdc:	2410      	movs	r4, #16
 8013cde:	fb9e fef4 	sdiv	lr, lr, r4
 8013ce2:	ebae 0e05 	sub.w	lr, lr, r5
 8013ce6:	e753      	b.n	8013b90 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8013ce8:	f1c5 0501 	rsb	r5, r5, #1
 8013cec:	f015 050f 	ands.w	r5, r5, #15
 8013cf0:	bf18      	it	ne
 8013cf2:	2501      	movne	r5, #1
 8013cf4:	f04f 0910 	mov.w	r9, #16
 8013cf8:	fb94 f4f9 	sdiv	r4, r4, r9
 8013cfc:	1b64      	subs	r4, r4, r5
 8013cfe:	e755      	b.n	8013bac <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8013d00:	4264      	negs	r4, r4
 8013d02:	fb94 fef6 	sdiv	lr, r4, r6
 8013d06:	f1ce 0800 	rsb	r8, lr, #0
 8013d0a:	fb06 441e 	mls	r4, r6, lr, r4
 8013d0e:	f8c0 8000 	str.w	r8, [r0]
 8013d12:	6104      	str	r4, [r0, #16]
 8013d14:	2c00      	cmp	r4, #0
 8013d16:	f43f af6e 	beq.w	8013bf6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8013d1a:	ea6f 0e0e 	mvn.w	lr, lr
 8013d1e:	f8c0 e000 	str.w	lr, [r0]
 8013d22:	1b34      	subs	r4, r6, r4
 8013d24:	e766      	b.n	8013bf4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8013d26:	426d      	negs	r5, r5
 8013d28:	fb95 f4f6 	sdiv	r4, r5, r6
 8013d2c:	f1c4 0e00 	rsb	lr, r4, #0
 8013d30:	fb06 5514 	mls	r5, r6, r4, r5
 8013d34:	f8c0 e004 	str.w	lr, [r0, #4]
 8013d38:	6085      	str	r5, [r0, #8]
 8013d3a:	2d00      	cmp	r5, #0
 8013d3c:	f43f af64 	beq.w	8013c08 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8013d40:	43e4      	mvns	r4, r4
 8013d42:	6044      	str	r4, [r0, #4]
 8013d44:	1b75      	subs	r5, r6, r5
 8013d46:	e75e      	b.n	8013c06 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8013d48:	3d800000 	.word	0x3d800000

08013d4c <_ZN8touchgfx7Unicode6strlenEPKt>:
 8013d4c:	4602      	mov	r2, r0
 8013d4e:	b148      	cbz	r0, 8013d64 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8013d50:	2300      	movs	r3, #0
 8013d52:	b298      	uxth	r0, r3
 8013d54:	3301      	adds	r3, #1
 8013d56:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8013d5a:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8013d5e:	2900      	cmp	r1, #0
 8013d60:	d1f7      	bne.n	8013d52 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8013d62:	4770      	bx	lr
 8013d64:	4770      	bx	lr

08013d66 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8013d66:	b530      	push	{r4, r5, lr}
 8013d68:	4604      	mov	r4, r0
 8013d6a:	b159      	cbz	r1, 8013d84 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8013d6c:	b148      	cbz	r0, 8013d82 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8013d6e:	2300      	movs	r3, #0
 8013d70:	b298      	uxth	r0, r3
 8013d72:	4282      	cmp	r2, r0
 8013d74:	d905      	bls.n	8013d82 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8013d76:	5ccd      	ldrb	r5, [r1, r3]
 8013d78:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8013d7c:	3301      	adds	r3, #1
 8013d7e:	2d00      	cmp	r5, #0
 8013d80:	d1f6      	bne.n	8013d70 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8013d82:	bd30      	pop	{r4, r5, pc}
 8013d84:	4608      	mov	r0, r1
 8013d86:	e7fc      	b.n	8013d82 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08013d88 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 8013d88:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013d8a:	b08b      	sub	sp, #44	; 0x2c
 8013d8c:	468c      	mov	ip, r1
 8013d8e:	2100      	movs	r1, #0
 8013d90:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8013d94:	ae01      	add	r6, sp, #4
 8013d96:	211f      	movs	r1, #31
 8013d98:	fbb0 f7f3 	udiv	r7, r0, r3
 8013d9c:	fb03 0517 	mls	r5, r3, r7, r0
 8013da0:	b2ec      	uxtb	r4, r5
 8013da2:	2d09      	cmp	r5, #9
 8013da4:	bfd4      	ite	le
 8013da6:	3430      	addle	r4, #48	; 0x30
 8013da8:	3457      	addgt	r4, #87	; 0x57
 8013daa:	b2e4      	uxtb	r4, r4
 8013dac:	558c      	strb	r4, [r1, r6]
 8013dae:	4638      	mov	r0, r7
 8013db0:	1e4c      	subs	r4, r1, #1
 8013db2:	b92f      	cbnz	r7, 8013dc0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 8013db4:	4431      	add	r1, r6
 8013db6:	4660      	mov	r0, ip
 8013db8:	f7ff ffd5 	bl	8013d66 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8013dbc:	b00b      	add	sp, #44	; 0x2c
 8013dbe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013dc0:	4621      	mov	r1, r4
 8013dc2:	e7e9      	b.n	8013d98 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

08013dc4 <_ZN8touchgfx7Unicode4itoaElPtti>:
 8013dc4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013dc6:	4607      	mov	r7, r0
 8013dc8:	b08b      	sub	sp, #44	; 0x2c
 8013dca:	4608      	mov	r0, r1
 8013dcc:	b341      	cbz	r1, 8013e20 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8013dce:	1e99      	subs	r1, r3, #2
 8013dd0:	2922      	cmp	r1, #34	; 0x22
 8013dd2:	d825      	bhi.n	8013e20 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8013dd4:	2100      	movs	r1, #0
 8013dd6:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8013dda:	463c      	mov	r4, r7
 8013ddc:	261f      	movs	r6, #31
 8013dde:	f10d 0c04 	add.w	ip, sp, #4
 8013de2:	fb94 fef3 	sdiv	lr, r4, r3
 8013de6:	fb03 441e 	mls	r4, r3, lr, r4
 8013dea:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8013dee:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8013df2:	b2ec      	uxtb	r4, r5
 8013df4:	2d09      	cmp	r5, #9
 8013df6:	bfd4      	ite	le
 8013df8:	3430      	addle	r4, #48	; 0x30
 8013dfa:	3457      	addgt	r4, #87	; 0x57
 8013dfc:	b2e4      	uxtb	r4, r4
 8013dfe:	f80c 4006 	strb.w	r4, [ip, r6]
 8013e02:	4674      	mov	r4, lr
 8013e04:	1e71      	subs	r1, r6, #1
 8013e06:	b96c      	cbnz	r4, 8013e24 <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 8013e08:	2f00      	cmp	r7, #0
 8013e0a:	da05      	bge.n	8013e18 <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 8013e0c:	ab0a      	add	r3, sp, #40	; 0x28
 8013e0e:	4419      	add	r1, r3
 8013e10:	232d      	movs	r3, #45	; 0x2d
 8013e12:	f801 3c24 	strb.w	r3, [r1, #-36]
 8013e16:	1eb1      	subs	r1, r6, #2
 8013e18:	3101      	adds	r1, #1
 8013e1a:	4461      	add	r1, ip
 8013e1c:	f7ff ffa3 	bl	8013d66 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8013e20:	b00b      	add	sp, #44	; 0x2c
 8013e22:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013e24:	460e      	mov	r6, r1
 8013e26:	e7dc      	b.n	8013de2 <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

08013e28 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8013e28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013e2c:	4691      	mov	r9, r2
 8013e2e:	b085      	sub	sp, #20
 8013e30:	6802      	ldr	r2, [r0, #0]
 8013e32:	9201      	str	r2, [sp, #4]
 8013e34:	4688      	mov	r8, r1
 8013e36:	4683      	mov	fp, r0
 8013e38:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8013e3c:	9103      	str	r1, [sp, #12]
 8013e3e:	4610      	mov	r0, r2
 8013e40:	461c      	mov	r4, r3
 8013e42:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8013e46:	9302      	str	r3, [sp, #8]
 8013e48:	f7ff ff80 	bl	8013d4c <_ZN8touchgfx7Unicode6strlenEPKt>
 8013e4c:	f1b8 0f00 	cmp.w	r8, #0
 8013e50:	bf0c      	ite	eq
 8013e52:	4684      	moveq	ip, r0
 8013e54:	f100 0c01 	addne.w	ip, r0, #1
 8013e58:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8013e5c:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8013e60:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8013e62:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8013e64:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8013e68:	9903      	ldr	r1, [sp, #12]
 8013e6a:	fa1f fc8c 	uxth.w	ip, ip
 8013e6e:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8013e72:	d041      	beq.n	8013ef8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8013e74:	d834      	bhi.n	8013ee0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8013e76:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8013e7a:	d059      	beq.n	8013f30 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8013e7c:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8013e80:	d03a      	beq.n	8013ef8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8013e82:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8013e86:	d034      	beq.n	8013ef2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8013e88:	2400      	movs	r4, #0
 8013e8a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8013e8e:	3a01      	subs	r2, #1
 8013e90:	b169      	cbz	r1, 8013eae <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013e92:	9911      	ldr	r1, [sp, #68]	; 0x44
 8013e94:	458c      	cmp	ip, r1
 8013e96:	da09      	bge.n	8013eac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8013e98:	eba1 010c 	sub.w	r1, r1, ip
 8013e9c:	b289      	uxth	r1, r1
 8013e9e:	b933      	cbnz	r3, 8013eae <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013ea0:	2e00      	cmp	r6, #0
 8013ea2:	d051      	beq.n	8013f48 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8013ea4:	2800      	cmp	r0, #0
 8013ea6:	d04f      	beq.n	8013f48 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8013ea8:	440c      	add	r4, r1
 8013eaa:	b2a4      	uxth	r4, r4
 8013eac:	2100      	movs	r1, #0
 8013eae:	682b      	ldr	r3, [r5, #0]
 8013eb0:	4293      	cmp	r3, r2
 8013eb2:	da07      	bge.n	8013ec4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8013eb4:	f1b8 0f00 	cmp.w	r8, #0
 8013eb8:	d004      	beq.n	8013ec4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8013eba:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8013ebe:	682b      	ldr	r3, [r5, #0]
 8013ec0:	3301      	adds	r3, #1
 8013ec2:	602b      	str	r3, [r5, #0]
 8013ec4:	2730      	movs	r7, #48	; 0x30
 8013ec6:	2c00      	cmp	r4, #0
 8013ec8:	d04e      	beq.n	8013f68 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8013eca:	682e      	ldr	r6, [r5, #0]
 8013ecc:	3c01      	subs	r4, #1
 8013ece:	42b2      	cmp	r2, r6
 8013ed0:	b2a4      	uxth	r4, r4
 8013ed2:	dd49      	ble.n	8013f68 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8013ed4:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8013ed8:	682b      	ldr	r3, [r5, #0]
 8013eda:	3301      	adds	r3, #1
 8013edc:	602b      	str	r3, [r5, #0]
 8013ede:	e7f2      	b.n	8013ec6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8013ee0:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8013ee4:	d01d      	beq.n	8013f22 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8013ee6:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8013eea:	d002      	beq.n	8013ef2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8013eec:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8013ef0:	e7c9      	b.n	8013e86 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8013ef2:	4684      	mov	ip, r0
 8013ef4:	f04f 0800 	mov.w	r8, #0
 8013ef8:	2c00      	cmp	r4, #0
 8013efa:	d0c6      	beq.n	8013e8a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013efc:	b947      	cbnz	r7, 8013f10 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8013efe:	2801      	cmp	r0, #1
 8013f00:	d106      	bne.n	8013f10 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8013f02:	8814      	ldrh	r4, [r2, #0]
 8013f04:	2c30      	cmp	r4, #48	; 0x30
 8013f06:	bf02      	ittt	eq
 8013f08:	3202      	addeq	r2, #2
 8013f0a:	f8cb 2000 	streq.w	r2, [fp]
 8013f0e:	4638      	moveq	r0, r7
 8013f10:	45bc      	cmp	ip, r7
 8013f12:	da14      	bge.n	8013f3e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8013f14:	b2bf      	uxth	r7, r7
 8013f16:	eba7 040c 	sub.w	r4, r7, ip
 8013f1a:	b2a4      	uxth	r4, r4
 8013f1c:	46bc      	mov	ip, r7
 8013f1e:	2600      	movs	r6, #0
 8013f20:	e7b3      	b.n	8013e8a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013f22:	4684      	mov	ip, r0
 8013f24:	b16c      	cbz	r4, 8013f42 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8013f26:	42b8      	cmp	r0, r7
 8013f28:	dd00      	ble.n	8013f2c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8013f2a:	b2b8      	uxth	r0, r7
 8013f2c:	2400      	movs	r4, #0
 8013f2e:	e003      	b.n	8013f38 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8013f30:	f04f 0c01 	mov.w	ip, #1
 8013f34:	2400      	movs	r4, #0
 8013f36:	4660      	mov	r0, ip
 8013f38:	4626      	mov	r6, r4
 8013f3a:	46a0      	mov	r8, r4
 8013f3c:	e7a5      	b.n	8013e8a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013f3e:	2400      	movs	r4, #0
 8013f40:	e7ed      	b.n	8013f1e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8013f42:	4626      	mov	r6, r4
 8013f44:	46a0      	mov	r8, r4
 8013f46:	e7a0      	b.n	8013e8a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013f48:	2900      	cmp	r1, #0
 8013f4a:	d0b0      	beq.n	8013eae <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013f4c:	2720      	movs	r7, #32
 8013f4e:	682e      	ldr	r6, [r5, #0]
 8013f50:	2900      	cmp	r1, #0
 8013f52:	d0ac      	beq.n	8013eae <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013f54:	3901      	subs	r1, #1
 8013f56:	4296      	cmp	r6, r2
 8013f58:	b289      	uxth	r1, r1
 8013f5a:	daa7      	bge.n	8013eac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8013f5c:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8013f60:	682b      	ldr	r3, [r5, #0]
 8013f62:	3301      	adds	r3, #1
 8013f64:	602b      	str	r3, [r5, #0]
 8013f66:	e7f2      	b.n	8013f4e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8013f68:	b188      	cbz	r0, 8013f8e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8013f6a:	682b      	ldr	r3, [r5, #0]
 8013f6c:	3801      	subs	r0, #1
 8013f6e:	429a      	cmp	r2, r3
 8013f70:	b280      	uxth	r0, r0
 8013f72:	dd0c      	ble.n	8013f8e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8013f74:	f8db 3000 	ldr.w	r3, [fp]
 8013f78:	1c9c      	adds	r4, r3, #2
 8013f7a:	f8cb 4000 	str.w	r4, [fp]
 8013f7e:	881c      	ldrh	r4, [r3, #0]
 8013f80:	682b      	ldr	r3, [r5, #0]
 8013f82:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8013f86:	682b      	ldr	r3, [r5, #0]
 8013f88:	3301      	adds	r3, #1
 8013f8a:	602b      	str	r3, [r5, #0]
 8013f8c:	e7ec      	b.n	8013f68 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8013f8e:	2620      	movs	r6, #32
 8013f90:	b151      	cbz	r1, 8013fa8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8013f92:	6828      	ldr	r0, [r5, #0]
 8013f94:	3901      	subs	r1, #1
 8013f96:	4282      	cmp	r2, r0
 8013f98:	b289      	uxth	r1, r1
 8013f9a:	dd05      	ble.n	8013fa8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8013f9c:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8013fa0:	682b      	ldr	r3, [r5, #0]
 8013fa2:	3301      	adds	r3, #1
 8013fa4:	602b      	str	r3, [r5, #0]
 8013fa6:	e7f3      	b.n	8013f90 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8013fa8:	b005      	add	sp, #20
 8013faa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013fae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8013fae:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013fb2:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8013fb6:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8013fba:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8013fbe:	2400      	movs	r4, #0
 8013fc0:	8014      	strh	r4, [r2, #0]
 8013fc2:	701c      	strb	r4, [r3, #0]
 8013fc4:	f888 4000 	strb.w	r4, [r8]
 8013fc8:	f88c 4000 	strb.w	r4, [ip]
 8013fcc:	f88e 4000 	strb.w	r4, [lr]
 8013fd0:	703c      	strb	r4, [r7, #0]
 8013fd2:	6804      	ldr	r4, [r0, #0]
 8013fd4:	b1a4      	cbz	r4, 8014000 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8013fd6:	8824      	ldrh	r4, [r4, #0]
 8013fd8:	f04f 0901 	mov.w	r9, #1
 8013fdc:	b314      	cbz	r4, 8014024 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8013fde:	2c2b      	cmp	r4, #43	; 0x2b
 8013fe0:	d001      	beq.n	8013fe6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8013fe2:	2c20      	cmp	r4, #32
 8013fe4:	d110      	bne.n	8014008 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8013fe6:	8014      	strh	r4, [r2, #0]
 8013fe8:	6804      	ldr	r4, [r0, #0]
 8013fea:	b10c      	cbz	r4, 8013ff0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8013fec:	3402      	adds	r4, #2
 8013fee:	6004      	str	r4, [r0, #0]
 8013ff0:	680c      	ldr	r4, [r1, #0]
 8013ff2:	b10c      	cbz	r4, 8013ff8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8013ff4:	3401      	adds	r4, #1
 8013ff6:	600c      	str	r4, [r1, #0]
 8013ff8:	6804      	ldr	r4, [r0, #0]
 8013ffa:	b17c      	cbz	r4, 801401c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8013ffc:	8824      	ldrh	r4, [r4, #0]
 8013ffe:	e7ed      	b.n	8013fdc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8014000:	680c      	ldr	r4, [r1, #0]
 8014002:	b17c      	cbz	r4, 8014024 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8014004:	7824      	ldrb	r4, [r4, #0]
 8014006:	e7e7      	b.n	8013fd8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8014008:	2c2d      	cmp	r4, #45	; 0x2d
 801400a:	d102      	bne.n	8014012 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 801400c:	f883 9000 	strb.w	r9, [r3]
 8014010:	e7ea      	b.n	8013fe8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8014012:	2c23      	cmp	r4, #35	; 0x23
 8014014:	d107      	bne.n	8014026 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8014016:	f888 9000 	strb.w	r9, [r8]
 801401a:	e7e5      	b.n	8013fe8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801401c:	680c      	ldr	r4, [r1, #0]
 801401e:	b10c      	cbz	r4, 8014024 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8014020:	7824      	ldrb	r4, [r4, #0]
 8014022:	e7db      	b.n	8013fdc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8014024:	2400      	movs	r4, #0
 8014026:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 801402a:	2b09      	cmp	r3, #9
 801402c:	d901      	bls.n	8014032 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 801402e:	2c2a      	cmp	r4, #42	; 0x2a
 8014030:	d122      	bne.n	8014078 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8014032:	2301      	movs	r3, #1
 8014034:	2c30      	cmp	r4, #48	; 0x30
 8014036:	f88e 3000 	strb.w	r3, [lr]
 801403a:	d10d      	bne.n	8014058 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801403c:	f88c 3000 	strb.w	r3, [ip]
 8014040:	6803      	ldr	r3, [r0, #0]
 8014042:	b10b      	cbz	r3, 8014048 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8014044:	3302      	adds	r3, #2
 8014046:	6003      	str	r3, [r0, #0]
 8014048:	680b      	ldr	r3, [r1, #0]
 801404a:	b10b      	cbz	r3, 8014050 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 801404c:	3301      	adds	r3, #1
 801404e:	600b      	str	r3, [r1, #0]
 8014050:	6803      	ldr	r3, [r0, #0]
 8014052:	2b00      	cmp	r3, #0
 8014054:	d02f      	beq.n	80140b6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8014056:	881c      	ldrh	r4, [r3, #0]
 8014058:	2c2a      	cmp	r4, #42	; 0x2a
 801405a:	d135      	bne.n	80140c8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801405c:	f04f 33ff 	mov.w	r3, #4294967295
 8014060:	6033      	str	r3, [r6, #0]
 8014062:	6803      	ldr	r3, [r0, #0]
 8014064:	b10b      	cbz	r3, 801406a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8014066:	3302      	adds	r3, #2
 8014068:	6003      	str	r3, [r0, #0]
 801406a:	680b      	ldr	r3, [r1, #0]
 801406c:	b10b      	cbz	r3, 8014072 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 801406e:	3301      	adds	r3, #1
 8014070:	600b      	str	r3, [r1, #0]
 8014072:	6803      	ldr	r3, [r0, #0]
 8014074:	b31b      	cbz	r3, 80140be <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8014076:	881c      	ldrh	r4, [r3, #0]
 8014078:	2c2e      	cmp	r4, #46	; 0x2e
 801407a:	d11a      	bne.n	80140b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801407c:	2301      	movs	r3, #1
 801407e:	703b      	strb	r3, [r7, #0]
 8014080:	6803      	ldr	r3, [r0, #0]
 8014082:	b10b      	cbz	r3, 8014088 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8014084:	3302      	adds	r3, #2
 8014086:	6003      	str	r3, [r0, #0]
 8014088:	680b      	ldr	r3, [r1, #0]
 801408a:	b10b      	cbz	r3, 8014090 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 801408c:	3301      	adds	r3, #1
 801408e:	600b      	str	r3, [r1, #0]
 8014090:	6803      	ldr	r3, [r0, #0]
 8014092:	2b00      	cmp	r3, #0
 8014094:	d036      	beq.n	8014104 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8014096:	881b      	ldrh	r3, [r3, #0]
 8014098:	2b2a      	cmp	r3, #42	; 0x2a
 801409a:	d137      	bne.n	801410c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801409c:	f04f 33ff 	mov.w	r3, #4294967295
 80140a0:	602b      	str	r3, [r5, #0]
 80140a2:	6803      	ldr	r3, [r0, #0]
 80140a4:	b10b      	cbz	r3, 80140aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 80140a6:	3302      	adds	r3, #2
 80140a8:	6003      	str	r3, [r0, #0]
 80140aa:	680b      	ldr	r3, [r1, #0]
 80140ac:	b10b      	cbz	r3, 80140b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 80140ae:	3301      	adds	r3, #1
 80140b0:	600b      	str	r3, [r1, #0]
 80140b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80140b6:	680c      	ldr	r4, [r1, #0]
 80140b8:	b134      	cbz	r4, 80140c8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 80140ba:	7824      	ldrb	r4, [r4, #0]
 80140bc:	e7cc      	b.n	8014058 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 80140be:	680b      	ldr	r3, [r1, #0]
 80140c0:	2b00      	cmp	r3, #0
 80140c2:	d0f6      	beq.n	80140b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 80140c4:	781c      	ldrb	r4, [r3, #0]
 80140c6:	e7d7      	b.n	8014078 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80140c8:	2300      	movs	r3, #0
 80140ca:	6033      	str	r3, [r6, #0]
 80140cc:	220a      	movs	r2, #10
 80140ce:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 80140d2:	fa1f f38c 	uxth.w	r3, ip
 80140d6:	2b09      	cmp	r3, #9
 80140d8:	d8ce      	bhi.n	8014078 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80140da:	6833      	ldr	r3, [r6, #0]
 80140dc:	fb02 c303 	mla	r3, r2, r3, ip
 80140e0:	6033      	str	r3, [r6, #0]
 80140e2:	6803      	ldr	r3, [r0, #0]
 80140e4:	b10b      	cbz	r3, 80140ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 80140e6:	3302      	adds	r3, #2
 80140e8:	6003      	str	r3, [r0, #0]
 80140ea:	680b      	ldr	r3, [r1, #0]
 80140ec:	b10b      	cbz	r3, 80140f2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 80140ee:	3301      	adds	r3, #1
 80140f0:	600b      	str	r3, [r1, #0]
 80140f2:	6803      	ldr	r3, [r0, #0]
 80140f4:	b10b      	cbz	r3, 80140fa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 80140f6:	881c      	ldrh	r4, [r3, #0]
 80140f8:	e7e9      	b.n	80140ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80140fa:	680c      	ldr	r4, [r1, #0]
 80140fc:	2c00      	cmp	r4, #0
 80140fe:	d0e6      	beq.n	80140ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8014100:	7824      	ldrb	r4, [r4, #0]
 8014102:	e7e4      	b.n	80140ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8014104:	680b      	ldr	r3, [r1, #0]
 8014106:	b10b      	cbz	r3, 801410c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8014108:	781b      	ldrb	r3, [r3, #0]
 801410a:	e7c5      	b.n	8014098 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 801410c:	2200      	movs	r2, #0
 801410e:	602a      	str	r2, [r5, #0]
 8014110:	240a      	movs	r4, #10
 8014112:	3b30      	subs	r3, #48	; 0x30
 8014114:	b29e      	uxth	r6, r3
 8014116:	2e09      	cmp	r6, #9
 8014118:	682a      	ldr	r2, [r5, #0]
 801411a:	d813      	bhi.n	8014144 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 801411c:	fb04 3302 	mla	r3, r4, r2, r3
 8014120:	602b      	str	r3, [r5, #0]
 8014122:	6803      	ldr	r3, [r0, #0]
 8014124:	b10b      	cbz	r3, 801412a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8014126:	3302      	adds	r3, #2
 8014128:	6003      	str	r3, [r0, #0]
 801412a:	680b      	ldr	r3, [r1, #0]
 801412c:	b10b      	cbz	r3, 8014132 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 801412e:	3301      	adds	r3, #1
 8014130:	600b      	str	r3, [r1, #0]
 8014132:	6803      	ldr	r3, [r0, #0]
 8014134:	b10b      	cbz	r3, 801413a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8014136:	881b      	ldrh	r3, [r3, #0]
 8014138:	e7eb      	b.n	8014112 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801413a:	680b      	ldr	r3, [r1, #0]
 801413c:	2b00      	cmp	r3, #0
 801413e:	d0e8      	beq.n	8014112 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8014140:	781b      	ldrb	r3, [r3, #0]
 8014142:	e7e6      	b.n	8014112 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8014144:	2a06      	cmp	r2, #6
 8014146:	bfa8      	it	ge
 8014148:	2206      	movge	r2, #6
 801414a:	602a      	str	r2, [r5, #0]
 801414c:	e7b1      	b.n	80140b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0801414e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 801414e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014152:	b0a3      	sub	sp, #140	; 0x8c
 8014154:	2600      	movs	r6, #0
 8014156:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 801415a:	4607      	mov	r7, r0
 801415c:	4688      	mov	r8, r1
 801415e:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8014162:	4631      	mov	r1, r6
 8014164:	2242      	movs	r2, #66	; 0x42
 8014166:	4648      	mov	r0, r9
 8014168:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 801416a:	960d      	str	r6, [sp, #52]	; 0x34
 801416c:	f00c fe94 	bl	8020e98 <memset>
 8014170:	b15f      	cbz	r7, 801418a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8014172:	f108 3aff 	add.w	sl, r8, #4294967295
 8014176:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014178:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801417a:	b152      	cbz	r2, 8014192 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 801417c:	8812      	ldrh	r2, [r2, #0]
 801417e:	b10a      	cbz	r2, 8014184 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8014180:	459a      	cmp	sl, r3
 8014182:	dc2e      	bgt.n	80141e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8014184:	2200      	movs	r2, #0
 8014186:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801418a:	4638      	mov	r0, r7
 801418c:	b023      	add	sp, #140	; 0x8c
 801418e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014192:	9a08      	ldr	r2, [sp, #32]
 8014194:	2a00      	cmp	r2, #0
 8014196:	d0f5      	beq.n	8014184 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8014198:	7812      	ldrb	r2, [r2, #0]
 801419a:	e7f0      	b.n	801417e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 801419c:	2d00      	cmp	r5, #0
 801419e:	d0ea      	beq.n	8014176 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80141a0:	782a      	ldrb	r2, [r5, #0]
 80141a2:	b142      	cbz	r2, 80141b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 80141a4:	2a25      	cmp	r2, #37	; 0x25
 80141a6:	d001      	beq.n	80141ac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 80141a8:	459a      	cmp	sl, r3
 80141aa:	dc08      	bgt.n	80141be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 80141ac:	f1bb 0f00 	cmp.w	fp, #0
 80141b0:	d121      	bne.n	80141f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 80141b2:	2d00      	cmp	r5, #0
 80141b4:	d0df      	beq.n	8014176 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80141b6:	782a      	ldrb	r2, [r5, #0]
 80141b8:	f04f 0b00 	mov.w	fp, #0
 80141bc:	e01d      	b.n	80141fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 80141be:	f1bb 0f00 	cmp.w	fp, #0
 80141c2:	d078      	beq.n	80142b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 80141c4:	f8bb 2000 	ldrh.w	r2, [fp]
 80141c8:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80141cc:	f1bb 0f00 	cmp.w	fp, #0
 80141d0:	d002      	beq.n	80141d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 80141d2:	f10b 0202 	add.w	r2, fp, #2
 80141d6:	9209      	str	r2, [sp, #36]	; 0x24
 80141d8:	b10d      	cbz	r5, 80141de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 80141da:	3501      	adds	r5, #1
 80141dc:	9508      	str	r5, [sp, #32]
 80141de:	3301      	adds	r3, #1
 80141e0:	930d      	str	r3, [sp, #52]	; 0x34
 80141e2:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 80141e6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80141e8:	f1bb 0f00 	cmp.w	fp, #0
 80141ec:	d0d6      	beq.n	801419c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 80141ee:	f8bb 2000 	ldrh.w	r2, [fp]
 80141f2:	2a00      	cmp	r2, #0
 80141f4:	d1d6      	bne.n	80141a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 80141f6:	f8bb 2000 	ldrh.w	r2, [fp]
 80141fa:	2a00      	cmp	r2, #0
 80141fc:	d0bb      	beq.n	8014176 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80141fe:	459a      	cmp	sl, r3
 8014200:	ddb9      	ble.n	8014176 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8014202:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8014206:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 801420a:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 801420e:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8014212:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8014216:	960e      	str	r6, [sp, #56]	; 0x38
 8014218:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 801421c:	960f      	str	r6, [sp, #60]	; 0x3c
 801421e:	f1bb 0f00 	cmp.w	fp, #0
 8014222:	d002      	beq.n	801422a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8014224:	f10b 0302 	add.w	r3, fp, #2
 8014228:	9309      	str	r3, [sp, #36]	; 0x24
 801422a:	b10d      	cbz	r5, 8014230 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 801422c:	1c6b      	adds	r3, r5, #1
 801422e:	9308      	str	r3, [sp, #32]
 8014230:	ab0f      	add	r3, sp, #60	; 0x3c
 8014232:	9305      	str	r3, [sp, #20]
 8014234:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8014238:	9304      	str	r3, [sp, #16]
 801423a:	ab0e      	add	r3, sp, #56	; 0x38
 801423c:	9303      	str	r3, [sp, #12]
 801423e:	ab0c      	add	r3, sp, #48	; 0x30
 8014240:	9302      	str	r3, [sp, #8]
 8014242:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8014246:	9301      	str	r3, [sp, #4]
 8014248:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 801424c:	9300      	str	r3, [sp, #0]
 801424e:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8014252:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8014256:	a908      	add	r1, sp, #32
 8014258:	a809      	add	r0, sp, #36	; 0x24
 801425a:	f7ff fea8 	bl	8013fae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801425e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014260:	2b00      	cmp	r3, #0
 8014262:	bfbe      	ittt	lt
 8014264:	6823      	ldrlt	r3, [r4, #0]
 8014266:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801426a:	930e      	strlt	r3, [sp, #56]	; 0x38
 801426c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801426e:	bfb8      	it	lt
 8014270:	3404      	addlt	r4, #4
 8014272:	2b00      	cmp	r3, #0
 8014274:	bfb8      	it	lt
 8014276:	6823      	ldrlt	r3, [r4, #0]
 8014278:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801427c:	bfbe      	ittt	lt
 801427e:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8014282:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8014284:	3404      	addlt	r4, #4
 8014286:	b1d9      	cbz	r1, 80142c0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8014288:	880b      	ldrh	r3, [r1, #0]
 801428a:	2b69      	cmp	r3, #105	; 0x69
 801428c:	d01f      	beq.n	80142ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801428e:	d82f      	bhi.n	80142f0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8014290:	2b58      	cmp	r3, #88	; 0x58
 8014292:	d01c      	beq.n	80142ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8014294:	d818      	bhi.n	80142c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8014296:	2b25      	cmp	r3, #37	; 0x25
 8014298:	d034      	beq.n	8014304 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 801429a:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 801429e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80142a0:	f1bb 0f00 	cmp.w	fp, #0
 80142a4:	f000 80b8 	beq.w	8014418 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 80142a8:	f8bb 5000 	ldrh.w	r5, [fp]
 80142ac:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 80142b0:	3301      	adds	r3, #1
 80142b2:	930d      	str	r3, [sp, #52]	; 0x34
 80142b4:	e029      	b.n	801430a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 80142b6:	b10d      	cbz	r5, 80142bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 80142b8:	782a      	ldrb	r2, [r5, #0]
 80142ba:	e785      	b.n	80141c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 80142bc:	462a      	mov	r2, r5
 80142be:	e783      	b.n	80141c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 80142c0:	2a00      	cmp	r2, #0
 80142c2:	d0ea      	beq.n	801429a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80142c4:	7813      	ldrb	r3, [r2, #0]
 80142c6:	e7e0      	b.n	801428a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 80142c8:	3b63      	subs	r3, #99	; 0x63
 80142ca:	2b01      	cmp	r3, #1
 80142cc:	d8e5      	bhi.n	801429a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80142ce:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 80142d2:	b329      	cbz	r1, 8014320 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 80142d4:	880b      	ldrh	r3, [r1, #0]
 80142d6:	2b69      	cmp	r3, #105	; 0x69
 80142d8:	d063      	beq.n	80143a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 80142da:	d825      	bhi.n	8014328 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 80142dc:	2b63      	cmp	r3, #99	; 0x63
 80142de:	d038      	beq.n	8014352 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 80142e0:	2b64      	cmp	r3, #100	; 0x64
 80142e2:	d05e      	beq.n	80143a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 80142e4:	2b58      	cmp	r3, #88	; 0x58
 80142e6:	d07b      	beq.n	80143e0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 80142e8:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 80142ec:	4625      	mov	r5, r4
 80142ee:	e036      	b.n	801435e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80142f0:	2b73      	cmp	r3, #115	; 0x73
 80142f2:	d0ec      	beq.n	80142ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80142f4:	d802      	bhi.n	80142fc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 80142f6:	2b6f      	cmp	r3, #111	; 0x6f
 80142f8:	d1cf      	bne.n	801429a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80142fa:	e7e8      	b.n	80142ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80142fc:	2b75      	cmp	r3, #117	; 0x75
 80142fe:	d0e6      	beq.n	80142ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8014300:	2b78      	cmp	r3, #120	; 0x78
 8014302:	e7f9      	b.n	80142f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8014304:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8014306:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 801430a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801430c:	b10b      	cbz	r3, 8014312 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 801430e:	3302      	adds	r3, #2
 8014310:	9309      	str	r3, [sp, #36]	; 0x24
 8014312:	9b08      	ldr	r3, [sp, #32]
 8014314:	2b00      	cmp	r3, #0
 8014316:	f43f af2e 	beq.w	8014176 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801431a:	3301      	adds	r3, #1
 801431c:	9308      	str	r3, [sp, #32]
 801431e:	e72a      	b.n	8014176 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8014320:	2a00      	cmp	r2, #0
 8014322:	d0e1      	beq.n	80142e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8014324:	7813      	ldrb	r3, [r2, #0]
 8014326:	e7d6      	b.n	80142d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8014328:	2b73      	cmp	r3, #115	; 0x73
 801432a:	d036      	beq.n	801439a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 801432c:	d807      	bhi.n	801433e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 801432e:	2b6f      	cmp	r3, #111	; 0x6f
 8014330:	d1da      	bne.n	80142e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8014332:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8014334:	1d25      	adds	r5, r4, #4
 8014336:	eba8 0202 	sub.w	r2, r8, r2
 801433a:	2308      	movs	r3, #8
 801433c:	e04a      	b.n	80143d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801433e:	2b75      	cmp	r3, #117	; 0x75
 8014340:	d043      	beq.n	80143ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8014342:	2b78      	cmp	r3, #120	; 0x78
 8014344:	d1d0      	bne.n	80142e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8014346:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8014348:	1d25      	adds	r5, r4, #4
 801434a:	eba8 0202 	sub.w	r2, r8, r2
 801434e:	2310      	movs	r3, #16
 8014350:	e040      	b.n	80143d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8014352:	6823      	ldr	r3, [r4, #0]
 8014354:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8014358:	1d25      	adds	r5, r4, #4
 801435a:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 801435e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014360:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8014364:	2b00      	cmp	r3, #0
 8014366:	d052      	beq.n	801440e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8014368:	881a      	ldrh	r2, [r3, #0]
 801436a:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801436e:	a80d      	add	r0, sp, #52	; 0x34
 8014370:	9005      	str	r0, [sp, #20]
 8014372:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8014376:	9004      	str	r0, [sp, #16]
 8014378:	980e      	ldr	r0, [sp, #56]	; 0x38
 801437a:	9003      	str	r0, [sp, #12]
 801437c:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8014380:	9002      	str	r0, [sp, #8]
 8014382:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8014384:	9001      	str	r0, [sp, #4]
 8014386:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801438a:	9000      	str	r0, [sp, #0]
 801438c:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8014390:	a810      	add	r0, sp, #64	; 0x40
 8014392:	f7ff fd49 	bl	8013e28 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8014396:	462c      	mov	r4, r5
 8014398:	e7b7      	b.n	801430a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801439a:	6823      	ldr	r3, [r4, #0]
 801439c:	1d25      	adds	r5, r4, #4
 801439e:	9310      	str	r3, [sp, #64]	; 0x40
 80143a0:	e7dd      	b.n	801435e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80143a2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80143a4:	6820      	ldr	r0, [r4, #0]
 80143a6:	eba8 0202 	sub.w	r2, r8, r2
 80143aa:	230a      	movs	r3, #10
 80143ac:	b292      	uxth	r2, r2
 80143ae:	4649      	mov	r1, r9
 80143b0:	f7ff fd08 	bl	8013dc4 <_ZN8touchgfx7Unicode4itoaElPtti>
 80143b4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80143b8:	2b2d      	cmp	r3, #45	; 0x2d
 80143ba:	f104 0504 	add.w	r5, r4, #4
 80143be:	d1ce      	bne.n	801435e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80143c0:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80143c4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80143c6:	3302      	adds	r3, #2
 80143c8:	e7e9      	b.n	801439e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 80143ca:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80143cc:	1d25      	adds	r5, r4, #4
 80143ce:	eba8 0202 	sub.w	r2, r8, r2
 80143d2:	230a      	movs	r3, #10
 80143d4:	b292      	uxth	r2, r2
 80143d6:	4649      	mov	r1, r9
 80143d8:	6820      	ldr	r0, [r4, #0]
 80143da:	f7ff fcd5 	bl	8013d88 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 80143de:	e7be      	b.n	801435e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80143e0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80143e2:	6820      	ldr	r0, [r4, #0]
 80143e4:	eba8 0202 	sub.w	r2, r8, r2
 80143e8:	b292      	uxth	r2, r2
 80143ea:	2310      	movs	r3, #16
 80143ec:	4649      	mov	r1, r9
 80143ee:	f7ff fccb 	bl	8013d88 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 80143f2:	1d25      	adds	r5, r4, #4
 80143f4:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 80143f8:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 80143fc:	2b00      	cmp	r3, #0
 80143fe:	d0ae      	beq.n	801435e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8014400:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8014404:	2919      	cmp	r1, #25
 8014406:	d8f7      	bhi.n	80143f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8014408:	3b20      	subs	r3, #32
 801440a:	8013      	strh	r3, [r2, #0]
 801440c:	e7f4      	b.n	80143f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801440e:	9a08      	ldr	r2, [sp, #32]
 8014410:	2a00      	cmp	r2, #0
 8014412:	d0aa      	beq.n	801436a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8014414:	7812      	ldrb	r2, [r2, #0]
 8014416:	e7a8      	b.n	801436a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8014418:	2d00      	cmp	r5, #0
 801441a:	f43f af47 	beq.w	80142ac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 801441e:	782d      	ldrb	r5, [r5, #0]
 8014420:	e744      	b.n	80142ac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08014422 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8014422:	b507      	push	{r0, r1, r2, lr}
 8014424:	9300      	str	r3, [sp, #0]
 8014426:	4613      	mov	r3, r2
 8014428:	2200      	movs	r2, #0
 801442a:	f7ff fe90 	bl	801414e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 801442e:	b003      	add	sp, #12
 8014430:	f85d fb04 	ldr.w	pc, [sp], #4

08014434 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8014434:	b40c      	push	{r2, r3}
 8014436:	b507      	push	{r0, r1, r2, lr}
 8014438:	ab04      	add	r3, sp, #16
 801443a:	f853 2b04 	ldr.w	r2, [r3], #4
 801443e:	9301      	str	r3, [sp, #4]
 8014440:	f7ff ffef 	bl	8014422 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8014444:	b003      	add	sp, #12
 8014446:	f85d eb04 	ldr.w	lr, [sp], #4
 801444a:	b002      	add	sp, #8
 801444c:	4770      	bx	lr
	...

08014450 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 8014450:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014454:	b0c3      	sub	sp, #268	; 0x10c
 8014456:	2600      	movs	r6, #0
 8014458:	f10d 0840 	add.w	r8, sp, #64	; 0x40
 801445c:	4607      	mov	r7, r0
 801445e:	4689      	mov	r9, r1
 8014460:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8014464:	4631      	mov	r1, r6
 8014466:	22c8      	movs	r2, #200	; 0xc8
 8014468:	4640      	mov	r0, r8
 801446a:	f8dd a130 	ldr.w	sl, [sp, #304]	; 0x130
 801446e:	960c      	str	r6, [sp, #48]	; 0x30
 8014470:	f00c fd12 	bl	8020e98 <memset>
 8014474:	b17f      	cbz	r7, 8014496 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x46>
 8014476:	eddf 5aa4 	vldr	s11, [pc, #656]	; 8014708 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b8>
 801447a:	f8df b298 	ldr.w	fp, [pc, #664]	; 8014714 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c4>
 801447e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014480:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014482:	b162      	cbz	r2, 801449e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x4e>
 8014484:	8812      	ldrh	r2, [r2, #0]
 8014486:	b11a      	cbz	r2, 8014490 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 8014488:	f109 31ff 	add.w	r1, r9, #4294967295
 801448c:	4299      	cmp	r1, r3
 801448e:	dc26      	bgt.n	80144de <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 8014490:	2200      	movs	r2, #0
 8014492:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8014496:	4638      	mov	r0, r7
 8014498:	b043      	add	sp, #268	; 0x10c
 801449a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801449e:	9a08      	ldr	r2, [sp, #32]
 80144a0:	2a00      	cmp	r2, #0
 80144a2:	d0f5      	beq.n	8014490 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 80144a4:	7812      	ldrb	r2, [r2, #0]
 80144a6:	e7ee      	b.n	8014486 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36>
 80144a8:	2c00      	cmp	r4, #0
 80144aa:	d0e8      	beq.n	801447e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 80144ac:	7822      	ldrb	r2, [r4, #0]
 80144ae:	b132      	cbz	r2, 80144be <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6e>
 80144b0:	2a25      	cmp	r2, #37	; 0x25
 80144b2:	d001      	beq.n	80144b8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x68>
 80144b4:	4299      	cmp	r1, r3
 80144b6:	dc05      	bgt.n	80144c4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 80144b8:	b9cd      	cbnz	r5, 80144ee <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x9e>
 80144ba:	2c00      	cmp	r4, #0
 80144bc:	d0df      	beq.n	801447e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 80144be:	7822      	ldrb	r2, [r4, #0]
 80144c0:	2500      	movs	r5, #0
 80144c2:	e015      	b.n	80144f0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xa0>
 80144c4:	2d00      	cmp	r5, #0
 80144c6:	d073      	beq.n	80145b0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 80144c8:	882a      	ldrh	r2, [r5, #0]
 80144ca:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80144ce:	b10d      	cbz	r5, 80144d4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x84>
 80144d0:	3502      	adds	r5, #2
 80144d2:	9509      	str	r5, [sp, #36]	; 0x24
 80144d4:	b10c      	cbz	r4, 80144da <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8a>
 80144d6:	3401      	adds	r4, #1
 80144d8:	9408      	str	r4, [sp, #32]
 80144da:	3301      	adds	r3, #1
 80144dc:	930c      	str	r3, [sp, #48]	; 0x30
 80144de:	e9dd 4508 	ldrd	r4, r5, [sp, #32]
 80144e2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80144e4:	2d00      	cmp	r5, #0
 80144e6:	d0df      	beq.n	80144a8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x58>
 80144e8:	882a      	ldrh	r2, [r5, #0]
 80144ea:	2a00      	cmp	r2, #0
 80144ec:	d1e0      	bne.n	80144b0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x60>
 80144ee:	882a      	ldrh	r2, [r5, #0]
 80144f0:	2a00      	cmp	r2, #0
 80144f2:	d0c4      	beq.n	801447e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 80144f4:	4299      	cmp	r1, r3
 80144f6:	ddc2      	ble.n	801447e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 80144f8:	2300      	movs	r3, #0
 80144fa:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80144fe:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8014502:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8014506:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 801450a:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 801450e:	930d      	str	r3, [sp, #52]	; 0x34
 8014510:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 8014514:	930e      	str	r3, [sp, #56]	; 0x38
 8014516:	b10d      	cbz	r5, 801451c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xcc>
 8014518:	1cab      	adds	r3, r5, #2
 801451a:	9309      	str	r3, [sp, #36]	; 0x24
 801451c:	b10c      	cbz	r4, 8014522 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xd2>
 801451e:	1c63      	adds	r3, r4, #1
 8014520:	9308      	str	r3, [sp, #32]
 8014522:	ab0e      	add	r3, sp, #56	; 0x38
 8014524:	9305      	str	r3, [sp, #20]
 8014526:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801452a:	9304      	str	r3, [sp, #16]
 801452c:	ab0d      	add	r3, sp, #52	; 0x34
 801452e:	9303      	str	r3, [sp, #12]
 8014530:	ab0b      	add	r3, sp, #44	; 0x2c
 8014532:	9302      	str	r3, [sp, #8]
 8014534:	f10d 032b 	add.w	r3, sp, #43	; 0x2b
 8014538:	9301      	str	r3, [sp, #4]
 801453a:	f10d 032a 	add.w	r3, sp, #42	; 0x2a
 801453e:	9300      	str	r3, [sp, #0]
 8014540:	f10d 022e 	add.w	r2, sp, #46	; 0x2e
 8014544:	f10d 0329 	add.w	r3, sp, #41	; 0x29
 8014548:	a908      	add	r1, sp, #32
 801454a:	a809      	add	r0, sp, #36	; 0x24
 801454c:	f7ff fd2f 	bl	8013fae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8014550:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014552:	2b00      	cmp	r3, #0
 8014554:	da0b      	bge.n	801456e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x11e>
 8014556:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 801455a:	edd3 7a00 	vldr	s15, [r3]
 801455e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8014562:	3601      	adds	r6, #1
 8014564:	ee17 3a90 	vmov	r3, s15
 8014568:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801456c:	930d      	str	r3, [sp, #52]	; 0x34
 801456e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014570:	2b00      	cmp	r3, #0
 8014572:	da0b      	bge.n	801458c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x13c>
 8014574:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 8014578:	edd3 7a00 	vldr	s15, [r3]
 801457c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8014580:	3601      	adds	r6, #1
 8014582:	ee17 3a90 	vmov	r3, s15
 8014586:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801458a:	930e      	str	r3, [sp, #56]	; 0x38
 801458c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801458e:	b1a3      	cbz	r3, 80145ba <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x16a>
 8014590:	881a      	ldrh	r2, [r3, #0]
 8014592:	2a25      	cmp	r2, #37	; 0x25
 8014594:	d016      	beq.n	80145c4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x174>
 8014596:	2a66      	cmp	r2, #102	; 0x66
 8014598:	d01a      	beq.n	80145d0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 801459a:	e9cd 4508 	strd	r4, r5, [sp, #32]
 801459e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80145a0:	2d00      	cmp	r5, #0
 80145a2:	f000 80fe 	beq.w	80147a2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x352>
 80145a6:	882c      	ldrh	r4, [r5, #0]
 80145a8:	f827 4013 	strh.w	r4, [r7, r3, lsl #1]
 80145ac:	3301      	adds	r3, #1
 80145ae:	e00d      	b.n	80145cc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17c>
 80145b0:	b10c      	cbz	r4, 80145b6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x166>
 80145b2:	7822      	ldrb	r2, [r4, #0]
 80145b4:	e789      	b.n	80144ca <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7a>
 80145b6:	4622      	mov	r2, r4
 80145b8:	e787      	b.n	80144ca <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7a>
 80145ba:	9b08      	ldr	r3, [sp, #32]
 80145bc:	2b00      	cmp	r3, #0
 80145be:	d0ec      	beq.n	801459a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x14a>
 80145c0:	781a      	ldrb	r2, [r3, #0]
 80145c2:	e7e6      	b.n	8014592 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x142>
 80145c4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80145c6:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80145ca:	3302      	adds	r3, #2
 80145cc:	930c      	str	r3, [sp, #48]	; 0x30
 80145ce:	e042      	b.n	8014656 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x206>
 80145d0:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 80145d4:	edd3 7a00 	vldr	s15, [r3]
 80145d8:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 80145dc:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
 80145e0:	3601      	adds	r6, #1
 80145e2:	b923      	cbnz	r3, 80145ee <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19e>
 80145e4:	2301      	movs	r3, #1
 80145e6:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 80145ea:	2306      	movs	r3, #6
 80145ec:	930e      	str	r3, [sp, #56]	; 0x38
 80145ee:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80145f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80145f6:	bf48      	it	mi
 80145f8:	eef1 7a67 	vnegmi.f32	s15, s15
 80145fc:	eeb0 7ae7 	vabs.f32	s14, s15
 8014600:	bf48      	it	mi
 8014602:	232d      	movmi	r3, #45	; 0x2d
 8014604:	eeb4 7a65 	vcmp.f32	s14, s11
 8014608:	bf48      	it	mi
 801460a:	f8ad 302e 	strhmi.w	r3, [sp, #46]	; 0x2e
 801460e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014612:	dd2b      	ble.n	801466c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21c>
 8014614:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 8014618:	2366      	movs	r3, #102	; 0x66
 801461a:	9311      	str	r3, [sp, #68]	; 0x44
 801461c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801461e:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8014622:	2b00      	cmp	r3, #0
 8014624:	f000 80b7 	beq.w	8014796 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x346>
 8014628:	881a      	ldrh	r2, [r3, #0]
 801462a:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 801462e:	a80c      	add	r0, sp, #48	; 0x30
 8014630:	9005      	str	r0, [sp, #20]
 8014632:	f89d 0029 	ldrb.w	r0, [sp, #41]	; 0x29
 8014636:	9004      	str	r0, [sp, #16]
 8014638:	980d      	ldr	r0, [sp, #52]	; 0x34
 801463a:	9003      	str	r0, [sp, #12]
 801463c:	f89d 002c 	ldrb.w	r0, [sp, #44]	; 0x2c
 8014640:	9002      	str	r0, [sp, #8]
 8014642:	980e      	ldr	r0, [sp, #56]	; 0x38
 8014644:	9001      	str	r0, [sp, #4]
 8014646:	f89d 002b 	ldrb.w	r0, [sp, #43]	; 0x2b
 801464a:	9000      	str	r0, [sp, #0]
 801464c:	e9cd 9706 	strd	r9, r7, [sp, #24]
 8014650:	a80f      	add	r0, sp, #60	; 0x3c
 8014652:	f7ff fbe9 	bl	8013e28 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8014656:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014658:	b10b      	cbz	r3, 801465e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x20e>
 801465a:	3302      	adds	r3, #2
 801465c:	9309      	str	r3, [sp, #36]	; 0x24
 801465e:	9b08      	ldr	r3, [sp, #32]
 8014660:	2b00      	cmp	r3, #0
 8014662:	f43f af0c 	beq.w	801447e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8014666:	3301      	adds	r3, #1
 8014668:	9308      	str	r3, [sp, #32]
 801466a:	e708      	b.n	801447e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 801466c:	eef4 7a67 	vcmp.f32	s15, s15
 8014670:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014674:	d60b      	bvs.n	801468e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x23e>
 8014676:	980e      	ldr	r0, [sp, #56]	; 0x38
 8014678:	ed9f 7a24 	vldr	s14, [pc, #144]	; 801470c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 801467c:	2300      	movs	r3, #0
 801467e:	eeb2 6a04 	vmov.f32	s12, #36	; 0x41200000  10.0
 8014682:	4283      	cmp	r3, r0
 8014684:	da07      	bge.n	8014696 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x246>
 8014686:	ee87 7a06 	vdiv.f32	s14, s14, s12
 801468a:	3301      	adds	r3, #1
 801468c:	e7f9      	b.n	8014682 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x232>
 801468e:	4b20      	ldr	r3, [pc, #128]	; (8014710 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c0>)
 8014690:	9310      	str	r3, [sp, #64]	; 0x40
 8014692:	236e      	movs	r3, #110	; 0x6e
 8014694:	e7c1      	b.n	801461a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1ca>
 8014696:	ee77 7a87 	vadd.f32	s15, s15, s14
 801469a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801469e:	eeb0 7a67 	vmov.f32	s14, s15
 80146a2:	eeb4 7ac6 	vcmpe.f32	s14, s12
 80146a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80146aa:	da27      	bge.n	80146fc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ac>
 80146ac:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80146ae:	2100      	movs	r1, #0
 80146b0:	eeb6 5a00 	vmov.f32	s10, #96	; 0x3f000000  0.5
 80146b4:	eba9 0202 	sub.w	r2, r9, r2
 80146b8:	eef4 6ac5 	vcmpe.f32	s13, s10
 80146bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80146c0:	b28c      	uxth	r4, r1
 80146c2:	db2a      	blt.n	801471a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ca>
 80146c4:	1a53      	subs	r3, r2, r1
 80146c6:	2b00      	cmp	r3, #0
 80146c8:	dd27      	ble.n	801471a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ca>
 80146ca:	2963      	cmp	r1, #99	; 0x63
 80146cc:	d024      	beq.n	8014718 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 80146ce:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80146d2:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 80146d6:	ee17 3a10 	vmov	r3, s14
 80146da:	2b09      	cmp	r3, #9
 80146dc:	bfa8      	it	ge
 80146de:	2309      	movge	r3, #9
 80146e0:	ee07 3a10 	vmov	s14, r3
 80146e4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80146e8:	f103 0430 	add.w	r4, r3, #48	; 0x30
 80146ec:	f828 4011 	strh.w	r4, [r8, r1, lsl #1]
 80146f0:	eee7 7a66 	vfms.f32	s15, s14, s13
 80146f4:	3101      	adds	r1, #1
 80146f6:	eec6 6a86 	vdiv.f32	s13, s13, s12
 80146fa:	e7dd      	b.n	80146b8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x268>
 80146fc:	ee66 6a86 	vmul.f32	s13, s13, s12
 8014700:	ee87 7a06 	vdiv.f32	s14, s14, s12
 8014704:	e7cd      	b.n	80146a2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x252>
 8014706:	bf00      	nop
 8014708:	7f7fffff 	.word	0x7f7fffff
 801470c:	3f000002 	.word	0x3f000002
 8014710:	0061006e 	.word	0x0061006e
 8014714:	006e0069 	.word	0x006e0069
 8014718:	460c      	mov	r4, r1
 801471a:	2a63      	cmp	r2, #99	; 0x63
 801471c:	bfd4      	ite	le
 801471e:	ebc4 0202 	rsble	r2, r4, r2
 8014722:	f1c4 0263 	rsbgt	r2, r4, #99	; 0x63
 8014726:	2a00      	cmp	r2, #0
 8014728:	dd30      	ble.n	801478c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 801472a:	4603      	mov	r3, r0
 801472c:	2501      	movs	r5, #1
 801472e:	210a      	movs	r1, #10
 8014730:	2b00      	cmp	r3, #0
 8014732:	dd0d      	ble.n	8014750 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x300>
 8014734:	ee67 7a86 	vmul.f32	s15, s15, s12
 8014738:	3b01      	subs	r3, #1
 801473a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801473e:	ee17 ca10 	vmov	ip, s14
 8014742:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014746:	fb01 c505 	mla	r5, r1, r5, ip
 801474a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801474e:	e7ef      	b.n	8014730 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e0>
 8014750:	2800      	cmp	r0, #0
 8014752:	f100 33ff 	add.w	r3, r0, #4294967295
 8014756:	bfac      	ite	ge
 8014758:	1a18      	subge	r0, r3, r0
 801475a:	4618      	movlt	r0, r3
 801475c:	0064      	lsls	r4, r4, #1
 801475e:	900e      	str	r0, [sp, #56]	; 0x38
 8014760:	230a      	movs	r3, #10
 8014762:	b292      	uxth	r2, r2
 8014764:	eb08 0104 	add.w	r1, r8, r4
 8014768:	4628      	mov	r0, r5
 801476a:	f7ff fb2b 	bl	8013dc4 <_ZN8touchgfx7Unicode4itoaElPtti>
 801476e:	2d01      	cmp	r5, #1
 8014770:	dc0a      	bgt.n	8014788 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x338>
 8014772:	f89d 302a 	ldrb.w	r3, [sp, #42]	; 0x2a
 8014776:	2b00      	cmp	r3, #0
 8014778:	bf0c      	ite	eq
 801477a:	2300      	moveq	r3, #0
 801477c:	232e      	movne	r3, #46	; 0x2e
 801477e:	aa42      	add	r2, sp, #264	; 0x108
 8014780:	4414      	add	r4, r2
 8014782:	f824 3cc8 	strh.w	r3, [r4, #-200]
 8014786:	e749      	b.n	801461c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1cc>
 8014788:	232e      	movs	r3, #46	; 0x2e
 801478a:	e7f8      	b.n	801477e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x32e>
 801478c:	ab42      	add	r3, sp, #264	; 0x108
 801478e:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8014792:	2300      	movs	r3, #0
 8014794:	e7f5      	b.n	8014782 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x332>
 8014796:	9a08      	ldr	r2, [sp, #32]
 8014798:	2a00      	cmp	r2, #0
 801479a:	f43f af46 	beq.w	801462a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1da>
 801479e:	7812      	ldrb	r2, [r2, #0]
 80147a0:	e743      	b.n	801462a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1da>
 80147a2:	2c00      	cmp	r4, #0
 80147a4:	f43f af00 	beq.w	80145a8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 80147a8:	7824      	ldrb	r4, [r4, #0]
 80147aa:	e6fd      	b.n	80145a8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>

080147ac <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 80147ac:	b507      	push	{r0, r1, r2, lr}
 80147ae:	9300      	str	r3, [sp, #0]
 80147b0:	4613      	mov	r3, r2
 80147b2:	2200      	movs	r2, #0
 80147b4:	f7ff fe4c 	bl	8014450 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 80147b8:	b003      	add	sp, #12
 80147ba:	f85d fb04 	ldr.w	pc, [sp], #4
	...

080147c0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 80147c0:	4b01      	ldr	r3, [pc, #4]	; (80147c8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 80147c2:	6018      	str	r0, [r3, #0]
 80147c4:	4770      	bx	lr
 80147c6:	bf00      	nop
 80147c8:	200174b8 	.word	0x200174b8

080147cc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 80147cc:	4b06      	ldr	r3, [pc, #24]	; (80147e8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 80147ce:	881a      	ldrh	r2, [r3, #0]
 80147d0:	4282      	cmp	r2, r0
 80147d2:	d807      	bhi.n	80147e4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 80147d4:	4b05      	ldr	r3, [pc, #20]	; (80147ec <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 80147d6:	881b      	ldrh	r3, [r3, #0]
 80147d8:	4413      	add	r3, r2
 80147da:	4298      	cmp	r0, r3
 80147dc:	bfac      	ite	ge
 80147de:	2000      	movge	r0, #0
 80147e0:	2001      	movlt	r0, #1
 80147e2:	4770      	bx	lr
 80147e4:	2000      	movs	r0, #0
 80147e6:	4770      	bx	lr
 80147e8:	200174d8 	.word	0x200174d8
 80147ec:	200174dc 	.word	0x200174dc

080147f0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 80147f0:	b508      	push	{r3, lr}
 80147f2:	4601      	mov	r1, r0
 80147f4:	f7ff ffea 	bl	80147cc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 80147f8:	b118      	cbz	r0, 8014802 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 80147fa:	4b02      	ldr	r3, [pc, #8]	; (8014804 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 80147fc:	681b      	ldr	r3, [r3, #0]
 80147fe:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8014802:	bd08      	pop	{r3, pc}
 8014804:	200174bc 	.word	0x200174bc

08014808 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8014808:	b5f0      	push	{r4, r5, r6, r7, lr}
 801480a:	4c24      	ldr	r4, [pc, #144]	; (801489c <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 801480c:	6823      	ldr	r3, [r4, #0]
 801480e:	2b00      	cmp	r3, #0
 8014810:	d042      	beq.n	8014898 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8014812:	4a23      	ldr	r2, [pc, #140]	; (80148a0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8014814:	4d23      	ldr	r5, [pc, #140]	; (80148a4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8014816:	8811      	ldrh	r1, [r2, #0]
 8014818:	f8b5 c000 	ldrh.w	ip, [r5]
 801481c:	4822      	ldr	r0, [pc, #136]	; (80148a8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801481e:	4461      	add	r1, ip
 8014820:	1c4a      	adds	r2, r1, #1
 8014822:	f022 0201 	bic.w	r2, r2, #1
 8014826:	008f      	lsls	r7, r1, #2
 8014828:	0412      	lsls	r2, r2, #16
 801482a:	19de      	adds	r6, r3, r7
 801482c:	0c12      	lsrs	r2, r2, #16
 801482e:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8014832:	6006      	str	r6, [r0, #0]
 8014834:	4e1d      	ldr	r6, [pc, #116]	; (80148ac <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8014836:	19da      	adds	r2, r3, r7
 8014838:	6032      	str	r2, [r6, #0]
 801483a:	220e      	movs	r2, #14
 801483c:	fb02 f20c 	mul.w	r2, r2, ip
 8014840:	3203      	adds	r2, #3
 8014842:	f022 0203 	bic.w	r2, r2, #3
 8014846:	443a      	add	r2, r7
 8014848:	4f19      	ldr	r7, [pc, #100]	; (80148b0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801484a:	4413      	add	r3, r2
 801484c:	603b      	str	r3, [r7, #0]
 801484e:	4f19      	ldr	r7, [pc, #100]	; (80148b4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8014850:	2300      	movs	r3, #0
 8014852:	803b      	strh	r3, [r7, #0]
 8014854:	4f18      	ldr	r7, [pc, #96]	; (80148b8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8014856:	683f      	ldr	r7, [r7, #0]
 8014858:	1aba      	subs	r2, r7, r2
 801485a:	4f18      	ldr	r7, [pc, #96]	; (80148bc <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 801485c:	603a      	str	r2, [r7, #0]
 801485e:	4a18      	ldr	r2, [pc, #96]	; (80148c0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8014860:	469c      	mov	ip, r3
 8014862:	8013      	strh	r3, [r2, #0]
 8014864:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8014868:	428b      	cmp	r3, r1
 801486a:	d10d      	bne.n	8014888 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 801486c:	882d      	ldrh	r5, [r5, #0]
 801486e:	6830      	ldr	r0, [r6, #0]
 8014870:	2300      	movs	r3, #0
 8014872:	240e      	movs	r4, #14
 8014874:	429d      	cmp	r5, r3
 8014876:	d90f      	bls.n	8014898 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8014878:	fb04 0203 	mla	r2, r4, r3, r0
 801487c:	3301      	adds	r3, #1
 801487e:	7b11      	ldrb	r1, [r2, #12]
 8014880:	f36f 1145 	bfc	r1, #5, #1
 8014884:	7311      	strb	r1, [r2, #12]
 8014886:	e7f5      	b.n	8014874 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8014888:	6822      	ldr	r2, [r4, #0]
 801488a:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801488e:	6802      	ldr	r2, [r0, #0]
 8014890:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8014894:	3301      	adds	r3, #1
 8014896:	e7e7      	b.n	8014868 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8014898:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801489a:	bf00      	nop
 801489c:	200174bc 	.word	0x200174bc
 80148a0:	200174d8 	.word	0x200174d8
 80148a4:	200174dc 	.word	0x200174dc
 80148a8:	200174d0 	.word	0x200174d0
 80148ac:	200174c0 	.word	0x200174c0
 80148b0:	200174c8 	.word	0x200174c8
 80148b4:	200174da 	.word	0x200174da
 80148b8:	200174c4 	.word	0x200174c4
 80148bc:	200174d4 	.word	0x200174d4
 80148c0:	200174cc 	.word	0x200174cc

080148c4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 80148c4:	4b06      	ldr	r3, [pc, #24]	; (80148e0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 80148c6:	681b      	ldr	r3, [r3, #0]
 80148c8:	b943      	cbnz	r3, 80148dc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80148ca:	b139      	cbz	r1, 80148dc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80148cc:	4b05      	ldr	r3, [pc, #20]	; (80148e4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 80148ce:	801a      	strh	r2, [r3, #0]
 80148d0:	4b05      	ldr	r3, [pc, #20]	; (80148e8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 80148d2:	6019      	str	r1, [r3, #0]
 80148d4:	4b05      	ldr	r3, [pc, #20]	; (80148ec <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 80148d6:	6018      	str	r0, [r3, #0]
 80148d8:	f7ff bf96 	b.w	8014808 <_ZN8touchgfx6Bitmap10clearCacheEv>
 80148dc:	4770      	bx	lr
 80148de:	bf00      	nop
 80148e0:	200174c8 	.word	0x200174c8
 80148e4:	200174dc 	.word	0x200174dc
 80148e8:	200174c4 	.word	0x200174c4
 80148ec:	200174bc 	.word	0x200174bc

080148f0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 80148f0:	b470      	push	{r4, r5, r6}
 80148f2:	4c07      	ldr	r4, [pc, #28]	; (8014910 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 80148f4:	6826      	ldr	r6, [r4, #0]
 80148f6:	4605      	mov	r5, r0
 80148f8:	4610      	mov	r0, r2
 80148fa:	9a03      	ldr	r2, [sp, #12]
 80148fc:	b936      	cbnz	r6, 801490c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 80148fe:	6025      	str	r5, [r4, #0]
 8014900:	4c04      	ldr	r4, [pc, #16]	; (8014914 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8014902:	8021      	strh	r1, [r4, #0]
 8014904:	bc70      	pop	{r4, r5, r6}
 8014906:	4619      	mov	r1, r3
 8014908:	f7ff bfdc 	b.w	80148c4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 801490c:	bc70      	pop	{r4, r5, r6}
 801490e:	4770      	bx	lr
 8014910:	200174e0 	.word	0x200174e0
 8014914:	200174d8 	.word	0x200174d8

08014918 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8014918:	4a12      	ldr	r2, [pc, #72]	; (8014964 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801491a:	8803      	ldrh	r3, [r0, #0]
 801491c:	8812      	ldrh	r2, [r2, #0]
 801491e:	4293      	cmp	r3, r2
 8014920:	d207      	bcs.n	8014932 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8014922:	4a11      	ldr	r2, [pc, #68]	; (8014968 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8014924:	6812      	ldr	r2, [r2, #0]
 8014926:	2114      	movs	r1, #20
 8014928:	fb01 2303 	mla	r3, r1, r3, r2
 801492c:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8014930:	4770      	bx	lr
 8014932:	490e      	ldr	r1, [pc, #56]	; (801496c <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8014934:	8809      	ldrh	r1, [r1, #0]
 8014936:	4411      	add	r1, r2
 8014938:	428b      	cmp	r3, r1
 801493a:	da04      	bge.n	8014946 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 801493c:	1a9b      	subs	r3, r3, r2
 801493e:	4a0c      	ldr	r2, [pc, #48]	; (8014970 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8014940:	210e      	movs	r1, #14
 8014942:	6812      	ldr	r2, [r2, #0]
 8014944:	e7f0      	b.n	8014928 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8014946:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801494a:	4293      	cmp	r3, r2
 801494c:	d108      	bne.n	8014960 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 801494e:	4b09      	ldr	r3, [pc, #36]	; (8014974 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8014950:	781b      	ldrb	r3, [r3, #0]
 8014952:	b91b      	cbnz	r3, 801495c <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8014954:	4b08      	ldr	r3, [pc, #32]	; (8014978 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8014956:	f9b3 0000 	ldrsh.w	r0, [r3]
 801495a:	4770      	bx	lr
 801495c:	4b07      	ldr	r3, [pc, #28]	; (801497c <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801495e:	e7fa      	b.n	8014956 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8014960:	2000      	movs	r0, #0
 8014962:	4770      	bx	lr
 8014964:	200174d8 	.word	0x200174d8
 8014968:	200174e0 	.word	0x200174e0
 801496c:	200174dc 	.word	0x200174dc
 8014970:	200174c0 	.word	0x200174c0
 8014974:	20017448 	.word	0x20017448
 8014978:	2001744a 	.word	0x2001744a
 801497c:	2001744c 	.word	0x2001744c

08014980 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8014980:	4a12      	ldr	r2, [pc, #72]	; (80149cc <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8014982:	8803      	ldrh	r3, [r0, #0]
 8014984:	8812      	ldrh	r2, [r2, #0]
 8014986:	4293      	cmp	r3, r2
 8014988:	d207      	bcs.n	801499a <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 801498a:	4a11      	ldr	r2, [pc, #68]	; (80149d0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 801498c:	6812      	ldr	r2, [r2, #0]
 801498e:	2114      	movs	r1, #20
 8014990:	fb01 2303 	mla	r3, r1, r3, r2
 8014994:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8014998:	4770      	bx	lr
 801499a:	490e      	ldr	r1, [pc, #56]	; (80149d4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 801499c:	8809      	ldrh	r1, [r1, #0]
 801499e:	4411      	add	r1, r2
 80149a0:	428b      	cmp	r3, r1
 80149a2:	da04      	bge.n	80149ae <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 80149a4:	1a9b      	subs	r3, r3, r2
 80149a6:	4a0c      	ldr	r2, [pc, #48]	; (80149d8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 80149a8:	210e      	movs	r1, #14
 80149aa:	6812      	ldr	r2, [r2, #0]
 80149ac:	e7f0      	b.n	8014990 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 80149ae:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80149b2:	4293      	cmp	r3, r2
 80149b4:	d108      	bne.n	80149c8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 80149b6:	4b09      	ldr	r3, [pc, #36]	; (80149dc <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 80149b8:	781b      	ldrb	r3, [r3, #0]
 80149ba:	b91b      	cbnz	r3, 80149c4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 80149bc:	4b08      	ldr	r3, [pc, #32]	; (80149e0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 80149be:	f9b3 0000 	ldrsh.w	r0, [r3]
 80149c2:	4770      	bx	lr
 80149c4:	4b07      	ldr	r3, [pc, #28]	; (80149e4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 80149c6:	e7fa      	b.n	80149be <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 80149c8:	2000      	movs	r0, #0
 80149ca:	4770      	bx	lr
 80149cc:	200174d8 	.word	0x200174d8
 80149d0:	200174e0 	.word	0x200174e0
 80149d4:	200174dc 	.word	0x200174dc
 80149d8:	200174c0 	.word	0x200174c0
 80149dc:	20017448 	.word	0x20017448
 80149e0:	2001744c 	.word	0x2001744c
 80149e4:	2001744a 	.word	0x2001744a

080149e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 80149e8:	b510      	push	{r4, lr}
 80149ea:	4a1f      	ldr	r2, [pc, #124]	; (8014a68 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 80149ec:	880b      	ldrh	r3, [r1, #0]
 80149ee:	8812      	ldrh	r2, [r2, #0]
 80149f0:	4293      	cmp	r3, r2
 80149f2:	d213      	bcs.n	8014a1c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 80149f4:	4a1d      	ldr	r2, [pc, #116]	; (8014a6c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 80149f6:	6812      	ldr	r2, [r2, #0]
 80149f8:	2114      	movs	r1, #20
 80149fa:	fb01 2303 	mla	r3, r1, r3, r2
 80149fe:	8a1a      	ldrh	r2, [r3, #16]
 8014a00:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8014a04:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8014a08:	8a5b      	ldrh	r3, [r3, #18]
 8014a0a:	8004      	strh	r4, [r0, #0]
 8014a0c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8014a10:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8014a14:	8041      	strh	r1, [r0, #2]
 8014a16:	8082      	strh	r2, [r0, #4]
 8014a18:	80c3      	strh	r3, [r0, #6]
 8014a1a:	e00e      	b.n	8014a3a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8014a1c:	4914      	ldr	r1, [pc, #80]	; (8014a70 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 8014a1e:	8809      	ldrh	r1, [r1, #0]
 8014a20:	4411      	add	r1, r2
 8014a22:	428b      	cmp	r3, r1
 8014a24:	da0a      	bge.n	8014a3c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 8014a26:	1a9b      	subs	r3, r3, r2
 8014a28:	4a12      	ldr	r2, [pc, #72]	; (8014a74 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8014a2a:	6812      	ldr	r2, [r2, #0]
 8014a2c:	210e      	movs	r1, #14
 8014a2e:	fb01 2303 	mla	r3, r1, r3, r2
 8014a32:	681a      	ldr	r2, [r3, #0]
 8014a34:	6002      	str	r2, [r0, #0]
 8014a36:	685a      	ldr	r2, [r3, #4]
 8014a38:	6042      	str	r2, [r0, #4]
 8014a3a:	bd10      	pop	{r4, pc}
 8014a3c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8014a40:	4293      	cmp	r3, r2
 8014a42:	d10b      	bne.n	8014a5c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 8014a44:	4b0c      	ldr	r3, [pc, #48]	; (8014a78 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8014a46:	f9b3 1000 	ldrsh.w	r1, [r3]
 8014a4a:	4b0c      	ldr	r3, [pc, #48]	; (8014a7c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8014a4c:	8081      	strh	r1, [r0, #4]
 8014a4e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014a52:	80c2      	strh	r2, [r0, #6]
 8014a54:	2300      	movs	r3, #0
 8014a56:	8003      	strh	r3, [r0, #0]
 8014a58:	8043      	strh	r3, [r0, #2]
 8014a5a:	e7ee      	b.n	8014a3a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8014a5c:	2300      	movs	r3, #0
 8014a5e:	8003      	strh	r3, [r0, #0]
 8014a60:	8043      	strh	r3, [r0, #2]
 8014a62:	8083      	strh	r3, [r0, #4]
 8014a64:	e7d8      	b.n	8014a18 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8014a66:	bf00      	nop
 8014a68:	200174d8 	.word	0x200174d8
 8014a6c:	200174e0 	.word	0x200174e0
 8014a70:	200174dc 	.word	0x200174dc
 8014a74:	200174c0 	.word	0x200174c0
 8014a78:	20017444 	.word	0x20017444
 8014a7c:	20017446 	.word	0x20017446

08014a80 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8014a80:	4a17      	ldr	r2, [pc, #92]	; (8014ae0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8014a82:	8803      	ldrh	r3, [r0, #0]
 8014a84:	8812      	ldrh	r2, [r2, #0]
 8014a86:	4293      	cmp	r3, r2
 8014a88:	d213      	bcs.n	8014ab2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8014a8a:	4a16      	ldr	r2, [pc, #88]	; (8014ae4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8014a8c:	6812      	ldr	r2, [r2, #0]
 8014a8e:	2114      	movs	r1, #20
 8014a90:	fb01 2303 	mla	r3, r1, r3, r2
 8014a94:	8a1a      	ldrh	r2, [r3, #16]
 8014a96:	8919      	ldrh	r1, [r3, #8]
 8014a98:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8014a9c:	428a      	cmp	r2, r1
 8014a9e:	db1d      	blt.n	8014adc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8014aa0:	8a58      	ldrh	r0, [r3, #18]
 8014aa2:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8014aa6:	895b      	ldrh	r3, [r3, #10]
 8014aa8:	4298      	cmp	r0, r3
 8014aaa:	bfac      	ite	ge
 8014aac:	2000      	movge	r0, #0
 8014aae:	2001      	movlt	r0, #1
 8014ab0:	4770      	bx	lr
 8014ab2:	490d      	ldr	r1, [pc, #52]	; (8014ae8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8014ab4:	8809      	ldrh	r1, [r1, #0]
 8014ab6:	4411      	add	r1, r2
 8014ab8:	428b      	cmp	r3, r1
 8014aba:	da0d      	bge.n	8014ad8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8014abc:	1a9b      	subs	r3, r3, r2
 8014abe:	4a0b      	ldr	r2, [pc, #44]	; (8014aec <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8014ac0:	6812      	ldr	r2, [r2, #0]
 8014ac2:	210e      	movs	r1, #14
 8014ac4:	fb01 2303 	mla	r3, r1, r3, r2
 8014ac8:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8014acc:	891a      	ldrh	r2, [r3, #8]
 8014ace:	4291      	cmp	r1, r2
 8014ad0:	db04      	blt.n	8014adc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8014ad2:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8014ad6:	e7e6      	b.n	8014aa6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8014ad8:	2000      	movs	r0, #0
 8014ada:	4770      	bx	lr
 8014adc:	2001      	movs	r0, #1
 8014ade:	4770      	bx	lr
 8014ae0:	200174d8 	.word	0x200174d8
 8014ae4:	200174e0 	.word	0x200174e0
 8014ae8:	200174dc 	.word	0x200174dc
 8014aec:	200174c0 	.word	0x200174c0

08014af0 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8014af0:	4a12      	ldr	r2, [pc, #72]	; (8014b3c <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8014af2:	8803      	ldrh	r3, [r0, #0]
 8014af4:	8811      	ldrh	r1, [r2, #0]
 8014af6:	428b      	cmp	r3, r1
 8014af8:	d20b      	bcs.n	8014b12 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8014afa:	4a11      	ldr	r2, [pc, #68]	; (8014b40 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8014afc:	6812      	ldr	r2, [r2, #0]
 8014afe:	b112      	cbz	r2, 8014b06 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8014b00:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8014b04:	b9c0      	cbnz	r0, 8014b38 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8014b06:	4a0f      	ldr	r2, [pc, #60]	; (8014b44 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8014b08:	6811      	ldr	r1, [r2, #0]
 8014b0a:	2214      	movs	r2, #20
 8014b0c:	4353      	muls	r3, r2
 8014b0e:	58c8      	ldr	r0, [r1, r3]
 8014b10:	4770      	bx	lr
 8014b12:	4a0d      	ldr	r2, [pc, #52]	; (8014b48 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8014b14:	8812      	ldrh	r2, [r2, #0]
 8014b16:	440a      	add	r2, r1
 8014b18:	4293      	cmp	r3, r2
 8014b1a:	da04      	bge.n	8014b26 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8014b1c:	4a08      	ldr	r2, [pc, #32]	; (8014b40 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8014b1e:	6812      	ldr	r2, [r2, #0]
 8014b20:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8014b24:	4770      	bx	lr
 8014b26:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8014b2a:	4293      	cmp	r3, r2
 8014b2c:	d103      	bne.n	8014b36 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8014b2e:	4b07      	ldr	r3, [pc, #28]	; (8014b4c <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8014b30:	681b      	ldr	r3, [r3, #0]
 8014b32:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8014b34:	4770      	bx	lr
 8014b36:	2000      	movs	r0, #0
 8014b38:	4770      	bx	lr
 8014b3a:	bf00      	nop
 8014b3c:	200174d8 	.word	0x200174d8
 8014b40:	200174bc 	.word	0x200174bc
 8014b44:	200174e0 	.word	0x200174e0
 8014b48:	200174dc 	.word	0x200174dc
 8014b4c:	20017450 	.word	0x20017450

08014b50 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8014b50:	4b24      	ldr	r3, [pc, #144]	; (8014be4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8014b52:	8802      	ldrh	r2, [r0, #0]
 8014b54:	8818      	ldrh	r0, [r3, #0]
 8014b56:	4282      	cmp	r2, r0
 8014b58:	d221      	bcs.n	8014b9e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8014b5a:	4b23      	ldr	r3, [pc, #140]	; (8014be8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8014b5c:	6819      	ldr	r1, [r3, #0]
 8014b5e:	2314      	movs	r3, #20
 8014b60:	fb03 1302 	mla	r3, r3, r2, r1
 8014b64:	6858      	ldr	r0, [r3, #4]
 8014b66:	2800      	cmp	r0, #0
 8014b68:	d03a      	beq.n	8014be0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8014b6a:	4920      	ldr	r1, [pc, #128]	; (8014bec <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8014b6c:	6809      	ldr	r1, [r1, #0]
 8014b6e:	2900      	cmp	r1, #0
 8014b70:	d036      	beq.n	8014be0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8014b72:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8014b76:	2900      	cmp	r1, #0
 8014b78:	d032      	beq.n	8014be0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8014b7a:	891a      	ldrh	r2, [r3, #8]
 8014b7c:	8958      	ldrh	r0, [r3, #10]
 8014b7e:	4350      	muls	r0, r2
 8014b80:	7c5a      	ldrb	r2, [r3, #17]
 8014b82:	7cdb      	ldrb	r3, [r3, #19]
 8014b84:	0952      	lsrs	r2, r2, #5
 8014b86:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8014b8a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8014b8e:	2b0b      	cmp	r3, #11
 8014b90:	bf18      	it	ne
 8014b92:	0040      	lslne	r0, r0, #1
 8014b94:	3003      	adds	r0, #3
 8014b96:	f020 0003 	bic.w	r0, r0, #3
 8014b9a:	4408      	add	r0, r1
 8014b9c:	4770      	bx	lr
 8014b9e:	4b14      	ldr	r3, [pc, #80]	; (8014bf0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8014ba0:	881b      	ldrh	r3, [r3, #0]
 8014ba2:	4403      	add	r3, r0
 8014ba4:	429a      	cmp	r2, r3
 8014ba6:	da1a      	bge.n	8014bde <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8014ba8:	4b12      	ldr	r3, [pc, #72]	; (8014bf4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8014baa:	681b      	ldr	r3, [r3, #0]
 8014bac:	1a10      	subs	r0, r2, r0
 8014bae:	210e      	movs	r1, #14
 8014bb0:	fb01 3000 	mla	r0, r1, r0, r3
 8014bb4:	7b03      	ldrb	r3, [r0, #12]
 8014bb6:	f003 031f 	and.w	r3, r3, #31
 8014bba:	2b0b      	cmp	r3, #11
 8014bbc:	d10b      	bne.n	8014bd6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8014bbe:	8903      	ldrh	r3, [r0, #8]
 8014bc0:	8940      	ldrh	r0, [r0, #10]
 8014bc2:	4358      	muls	r0, r3
 8014bc4:	4b09      	ldr	r3, [pc, #36]	; (8014bec <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8014bc6:	6819      	ldr	r1, [r3, #0]
 8014bc8:	3003      	adds	r0, #3
 8014bca:	f020 0303 	bic.w	r3, r0, #3
 8014bce:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8014bd2:	4418      	add	r0, r3
 8014bd4:	4770      	bx	lr
 8014bd6:	2b0d      	cmp	r3, #13
 8014bd8:	d101      	bne.n	8014bde <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8014bda:	300d      	adds	r0, #13
 8014bdc:	4770      	bx	lr
 8014bde:	2000      	movs	r0, #0
 8014be0:	4770      	bx	lr
 8014be2:	bf00      	nop
 8014be4:	200174d8 	.word	0x200174d8
 8014be8:	200174e0 	.word	0x200174e0
 8014bec:	200174bc 	.word	0x200174bc
 8014bf0:	200174dc 	.word	0x200174dc
 8014bf4:	200174c0 	.word	0x200174c0

08014bf8 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8014bf8:	b510      	push	{r4, lr}
 8014bfa:	4a17      	ldr	r2, [pc, #92]	; (8014c58 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8014bfc:	8803      	ldrh	r3, [r0, #0]
 8014bfe:	8812      	ldrh	r2, [r2, #0]
 8014c00:	4293      	cmp	r3, r2
 8014c02:	d20c      	bcs.n	8014c1e <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8014c04:	4a15      	ldr	r2, [pc, #84]	; (8014c5c <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8014c06:	6812      	ldr	r2, [r2, #0]
 8014c08:	2114      	movs	r1, #20
 8014c0a:	fb01 2303 	mla	r3, r1, r3, r2
 8014c0e:	7c58      	ldrb	r0, [r3, #17]
 8014c10:	0942      	lsrs	r2, r0, #5
 8014c12:	7cd8      	ldrb	r0, [r3, #19]
 8014c14:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8014c18:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8014c1c:	bd10      	pop	{r4, pc}
 8014c1e:	4910      	ldr	r1, [pc, #64]	; (8014c60 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8014c20:	8809      	ldrh	r1, [r1, #0]
 8014c22:	4411      	add	r1, r2
 8014c24:	428b      	cmp	r3, r1
 8014c26:	da09      	bge.n	8014c3c <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8014c28:	1a9b      	subs	r3, r3, r2
 8014c2a:	4a0e      	ldr	r2, [pc, #56]	; (8014c64 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8014c2c:	6812      	ldr	r2, [r2, #0]
 8014c2e:	210e      	movs	r1, #14
 8014c30:	fb01 2303 	mla	r3, r1, r3, r2
 8014c34:	7b18      	ldrb	r0, [r3, #12]
 8014c36:	f000 001f 	and.w	r0, r0, #31
 8014c3a:	e7ef      	b.n	8014c1c <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8014c3c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8014c40:	4293      	cmp	r3, r2
 8014c42:	d106      	bne.n	8014c52 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8014c44:	f7ed fb8e 	bl	8002364 <_ZN8touchgfx3HAL3lcdEv>
 8014c48:	6803      	ldr	r3, [r0, #0]
 8014c4a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014c4e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014c50:	4718      	bx	r3
 8014c52:	2000      	movs	r0, #0
 8014c54:	e7e2      	b.n	8014c1c <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8014c56:	bf00      	nop
 8014c58:	200174d8 	.word	0x200174d8
 8014c5c:	200174e0 	.word	0x200174e0
 8014c60:	200174dc 	.word	0x200174dc
 8014c64:	200174c0 	.word	0x200174c0

08014c68 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8014c68:	2010      	movs	r0, #16
 8014c6a:	4770      	bx	lr

08014c6c <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8014c6c:	2000      	movs	r0, #0
 8014c6e:	4770      	bx	lr

08014c70 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8014c70:	4b02      	ldr	r3, [pc, #8]	; (8014c7c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8014c72:	8818      	ldrh	r0, [r3, #0]
 8014c74:	0040      	lsls	r0, r0, #1
 8014c76:	b280      	uxth	r0, r0
 8014c78:	4770      	bx	lr
 8014c7a:	bf00      	nop
 8014c7c:	2001744a 	.word	0x2001744a

08014c80 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8014c80:	2bff      	cmp	r3, #255	; 0xff
 8014c82:	d050      	beq.n	8014d26 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8014c84:	2a0b      	cmp	r2, #11
 8014c86:	d04a      	beq.n	8014d1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8014c88:	d80e      	bhi.n	8014ca8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8014c8a:	2a03      	cmp	r2, #3
 8014c8c:	d03f      	beq.n	8014d0e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8014c8e:	d804      	bhi.n	8014c9a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8014c90:	2a01      	cmp	r2, #1
 8014c92:	d03e      	beq.n	8014d12 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8014c94:	d93f      	bls.n	8014d16 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8014c96:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8014c98:	4770      	bx	lr
 8014c9a:	2a09      	cmp	r2, #9
 8014c9c:	d03f      	beq.n	8014d1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8014c9e:	d83c      	bhi.n	8014d1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8014ca0:	2a08      	cmp	r2, #8
 8014ca2:	d03a      	beq.n	8014d1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8014ca4:	2000      	movs	r0, #0
 8014ca6:	4770      	bx	lr
 8014ca8:	2a2f      	cmp	r2, #47	; 0x2f
 8014caa:	d024      	beq.n	8014cf6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8014cac:	d80d      	bhi.n	8014cca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8014cae:	2a2d      	cmp	r2, #45	; 0x2d
 8014cb0:	d014      	beq.n	8014cdc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8014cb2:	d826      	bhi.n	8014d02 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8014cb4:	2a2c      	cmp	r2, #44	; 0x2c
 8014cb6:	d1f5      	bne.n	8014ca4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014cb8:	684b      	ldr	r3, [r1, #4]
 8014cba:	781b      	ldrb	r3, [r3, #0]
 8014cbc:	2b01      	cmp	r3, #1
 8014cbe:	d018      	beq.n	8014cf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8014cc0:	d323      	bcc.n	8014d0a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8014cc2:	2b02      	cmp	r3, #2
 8014cc4:	d1ee      	bne.n	8014ca4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014cc6:	6880      	ldr	r0, [r0, #8]
 8014cc8:	4770      	bx	lr
 8014cca:	2a31      	cmp	r2, #49	; 0x31
 8014ccc:	d004      	beq.n	8014cd8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8014cce:	d328      	bcc.n	8014d22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8014cd0:	2a32      	cmp	r2, #50	; 0x32
 8014cd2:	d026      	beq.n	8014d22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8014cd4:	2a33      	cmp	r2, #51	; 0x33
 8014cd6:	d1e5      	bne.n	8014ca4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014cd8:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8014cda:	4770      	bx	lr
 8014cdc:	684b      	ldr	r3, [r1, #4]
 8014cde:	781b      	ldrb	r3, [r3, #0]
 8014ce0:	2b01      	cmp	r3, #1
 8014ce2:	d004      	beq.n	8014cee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8014ce4:	d30b      	bcc.n	8014cfe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014ce6:	2b02      	cmp	r3, #2
 8014ce8:	d1dc      	bne.n	8014ca4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014cea:	6900      	ldr	r0, [r0, #16]
 8014cec:	4770      	bx	lr
 8014cee:	6a00      	ldr	r0, [r0, #32]
 8014cf0:	4770      	bx	lr
 8014cf2:	6980      	ldr	r0, [r0, #24]
 8014cf4:	4770      	bx	lr
 8014cf6:	684b      	ldr	r3, [r1, #4]
 8014cf8:	781b      	ldrb	r3, [r3, #0]
 8014cfa:	2b00      	cmp	r3, #0
 8014cfc:	d1d2      	bne.n	8014ca4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014cfe:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8014d00:	4770      	bx	lr
 8014d02:	684b      	ldr	r3, [r1, #4]
 8014d04:	781b      	ldrb	r3, [r3, #0]
 8014d06:	2b00      	cmp	r3, #0
 8014d08:	d1cc      	bne.n	8014ca4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014d0a:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8014d0c:	4770      	bx	lr
 8014d0e:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8014d10:	4770      	bx	lr
 8014d12:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8014d14:	4770      	bx	lr
 8014d16:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8014d18:	4770      	bx	lr
 8014d1a:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8014d1c:	4770      	bx	lr
 8014d1e:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8014d20:	4770      	bx	lr
 8014d22:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8014d24:	4770      	bx	lr
 8014d26:	2a0b      	cmp	r2, #11
 8014d28:	d049      	beq.n	8014dbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8014d2a:	d80e      	bhi.n	8014d4a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8014d2c:	2a03      	cmp	r2, #3
 8014d2e:	d040      	beq.n	8014db2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8014d30:	d804      	bhi.n	8014d3c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8014d32:	2a01      	cmp	r2, #1
 8014d34:	d03f      	beq.n	8014db6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8014d36:	d940      	bls.n	8014dba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8014d38:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8014d3a:	4770      	bx	lr
 8014d3c:	2a09      	cmp	r2, #9
 8014d3e:	d03e      	beq.n	8014dbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8014d40:	d801      	bhi.n	8014d46 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8014d42:	2a08      	cmp	r2, #8
 8014d44:	d1ae      	bne.n	8014ca4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014d46:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8014d48:	4770      	bx	lr
 8014d4a:	2a2f      	cmp	r2, #47	; 0x2f
 8014d4c:	d024      	beq.n	8014d98 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8014d4e:	d80d      	bhi.n	8014d6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8014d50:	2a2d      	cmp	r2, #45	; 0x2d
 8014d52:	d014      	beq.n	8014d7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8014d54:	d826      	bhi.n	8014da4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8014d56:	2a2c      	cmp	r2, #44	; 0x2c
 8014d58:	d1a4      	bne.n	8014ca4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014d5a:	684b      	ldr	r3, [r1, #4]
 8014d5c:	781b      	ldrb	r3, [r3, #0]
 8014d5e:	2b01      	cmp	r3, #1
 8014d60:	d018      	beq.n	8014d94 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8014d62:	d324      	bcc.n	8014dae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8014d64:	2b02      	cmp	r3, #2
 8014d66:	d19d      	bne.n	8014ca4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014d68:	68c0      	ldr	r0, [r0, #12]
 8014d6a:	4770      	bx	lr
 8014d6c:	2a31      	cmp	r2, #49	; 0x31
 8014d6e:	d004      	beq.n	8014d7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8014d70:	d327      	bcc.n	8014dc2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8014d72:	2a32      	cmp	r2, #50	; 0x32
 8014d74:	d025      	beq.n	8014dc2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8014d76:	2a33      	cmp	r2, #51	; 0x33
 8014d78:	d194      	bne.n	8014ca4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014d7a:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8014d7c:	4770      	bx	lr
 8014d7e:	684b      	ldr	r3, [r1, #4]
 8014d80:	781b      	ldrb	r3, [r3, #0]
 8014d82:	2b01      	cmp	r3, #1
 8014d84:	d004      	beq.n	8014d90 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8014d86:	d30b      	bcc.n	8014da0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8014d88:	2b02      	cmp	r3, #2
 8014d8a:	d18b      	bne.n	8014ca4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014d8c:	6940      	ldr	r0, [r0, #20]
 8014d8e:	4770      	bx	lr
 8014d90:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8014d92:	4770      	bx	lr
 8014d94:	69c0      	ldr	r0, [r0, #28]
 8014d96:	4770      	bx	lr
 8014d98:	684b      	ldr	r3, [r1, #4]
 8014d9a:	781b      	ldrb	r3, [r3, #0]
 8014d9c:	2b00      	cmp	r3, #0
 8014d9e:	d181      	bne.n	8014ca4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014da0:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8014da2:	4770      	bx	lr
 8014da4:	684b      	ldr	r3, [r1, #4]
 8014da6:	781b      	ldrb	r3, [r3, #0]
 8014da8:	2b00      	cmp	r3, #0
 8014daa:	f47f af7b 	bne.w	8014ca4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014dae:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8014db0:	4770      	bx	lr
 8014db2:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8014db4:	4770      	bx	lr
 8014db6:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8014db8:	4770      	bx	lr
 8014dba:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8014dbc:	4770      	bx	lr
 8014dbe:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8014dc0:	4770      	bx	lr
 8014dc2:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8014dc4:	4770      	bx	lr

08014dc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014dc6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014dca:	b087      	sub	sp, #28
 8014dcc:	9815      	ldr	r0, [sp, #84]	; 0x54
 8014dce:	9205      	str	r2, [sp, #20]
 8014dd0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8014dd4:	9202      	str	r2, [sp, #8]
 8014dd6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8014dda:	9101      	str	r1, [sp, #4]
 8014ddc:	6841      	ldr	r1, [r0, #4]
 8014dde:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8014de2:	fb01 2404 	mla	r4, r1, r4, r2
 8014de6:	6802      	ldr	r2, [r0, #0]
 8014de8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014dec:	f8de 2000 	ldr.w	r2, [lr]
 8014df0:	9203      	str	r2, [sp, #12]
 8014df2:	f8de 2004 	ldr.w	r2, [lr, #4]
 8014df6:	3204      	adds	r2, #4
 8014df8:	9204      	str	r2, [sp, #16]
 8014dfa:	9a02      	ldr	r2, [sp, #8]
 8014dfc:	43d6      	mvns	r6, r2
 8014dfe:	b2f6      	uxtb	r6, r6
 8014e00:	9a01      	ldr	r2, [sp, #4]
 8014e02:	2a00      	cmp	r2, #0
 8014e04:	dc03      	bgt.n	8014e0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8014e06:	9a05      	ldr	r2, [sp, #20]
 8014e08:	2a00      	cmp	r2, #0
 8014e0a:	f340 8129 	ble.w	8015060 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8014e0e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014e10:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8014e14:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8014e18:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014e1c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014e1e:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014e22:	2b00      	cmp	r3, #0
 8014e24:	dd0e      	ble.n	8014e44 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014e26:	1408      	asrs	r0, r1, #16
 8014e28:	d405      	bmi.n	8014e36 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014e2a:	4560      	cmp	r0, ip
 8014e2c:	da03      	bge.n	8014e36 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014e2e:	1410      	asrs	r0, r2, #16
 8014e30:	d401      	bmi.n	8014e36 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014e32:	42b8      	cmp	r0, r7
 8014e34:	db07      	blt.n	8014e46 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8014e36:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014e38:	4401      	add	r1, r0
 8014e3a:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014e3c:	3b01      	subs	r3, #1
 8014e3e:	4402      	add	r2, r0
 8014e40:	3402      	adds	r4, #2
 8014e42:	e7ee      	b.n	8014e22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8014e44:	d071      	beq.n	8014f2a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014e46:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8014e48:	1e58      	subs	r0, r3, #1
 8014e4a:	fb05 1500 	mla	r5, r5, r0, r1
 8014e4e:	142d      	asrs	r5, r5, #16
 8014e50:	d45f      	bmi.n	8014f12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014e52:	4565      	cmp	r5, ip
 8014e54:	da5d      	bge.n	8014f12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014e56:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8014e58:	fb05 2000 	mla	r0, r5, r0, r2
 8014e5c:	1400      	asrs	r0, r0, #16
 8014e5e:	d458      	bmi.n	8014f12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014e60:	42b8      	cmp	r0, r7
 8014e62:	da56      	bge.n	8014f12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014e64:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8014e68:	4699      	mov	r9, r3
 8014e6a:	46a2      	mov	sl, r4
 8014e6c:	f1b9 0f00 	cmp.w	r9, #0
 8014e70:	dd57      	ble.n	8014f22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8014e72:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8014e76:	9803      	ldr	r0, [sp, #12]
 8014e78:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8014e7c:	140d      	asrs	r5, r1, #16
 8014e7e:	fb07 000c 	mla	r0, r7, ip, r0
 8014e82:	f109 39ff 	add.w	r9, r9, #4294967295
 8014e86:	5d40      	ldrb	r0, [r0, r5]
 8014e88:	9d04      	ldr	r5, [sp, #16]
 8014e8a:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8014e8e:	f8ba 5000 	ldrh.w	r5, [sl]
 8014e92:	122f      	asrs	r7, r5, #8
 8014e94:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014e98:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014e9c:	fb17 f706 	smulbb	r7, r7, r6
 8014ea0:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8014ea4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014ea8:	00ed      	lsls	r5, r5, #3
 8014eaa:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8014eae:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8014eb2:	10c7      	asrs	r7, r0, #3
 8014eb4:	b2ed      	uxtb	r5, r5
 8014eb6:	00c0      	lsls	r0, r0, #3
 8014eb8:	fb18 f806 	smulbb	r8, r8, r6
 8014ebc:	fb15 f506 	smulbb	r5, r5, r6
 8014ec0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014ec4:	b2c0      	uxtb	r0, r0
 8014ec6:	fa1f fc8c 	uxth.w	ip, ip
 8014eca:	fb07 870b 	mla	r7, r7, fp, r8
 8014ece:	fb00 500b 	mla	r0, r0, fp, r5
 8014ed2:	b280      	uxth	r0, r0
 8014ed4:	b2bf      	uxth	r7, r7
 8014ed6:	f10c 0501 	add.w	r5, ip, #1
 8014eda:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014ede:	f107 0801 	add.w	r8, r7, #1
 8014ee2:	1c45      	adds	r5, r0, #1
 8014ee4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014ee8:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8014eec:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014eee:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014ef2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014ef6:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8014efa:	ea45 0c0c 	orr.w	ip, r5, ip
 8014efe:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8014f02:	4401      	add	r1, r0
 8014f04:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014f06:	ea4c 0c08 	orr.w	ip, ip, r8
 8014f0a:	f82a cb02 	strh.w	ip, [sl], #2
 8014f0e:	4402      	add	r2, r0
 8014f10:	e7ac      	b.n	8014e6c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8014f12:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8014f16:	f04f 0800 	mov.w	r8, #0
 8014f1a:	eb03 0008 	add.w	r0, r3, r8
 8014f1e:	2800      	cmp	r0, #0
 8014f20:	dc41      	bgt.n	8014fa6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8014f22:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014f26:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014f2a:	9b01      	ldr	r3, [sp, #4]
 8014f2c:	2b00      	cmp	r3, #0
 8014f2e:	f340 8097 	ble.w	8015060 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8014f32:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014f36:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014f3a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8014f3e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014f40:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014f44:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014f48:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014f4c:	eef0 6a62 	vmov.f32	s13, s5
 8014f50:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014f54:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014f58:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014f5c:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8014f60:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014f64:	eef0 6a43 	vmov.f32	s13, s6
 8014f68:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014f6c:	ee12 2a90 	vmov	r2, s5
 8014f70:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014f74:	fb92 f3f3 	sdiv	r3, r2, r3
 8014f78:	ee13 2a10 	vmov	r2, s6
 8014f7c:	9313      	str	r3, [sp, #76]	; 0x4c
 8014f7e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014f80:	fb92 f3f3 	sdiv	r3, r2, r3
 8014f84:	9314      	str	r3, [sp, #80]	; 0x50
 8014f86:	9b01      	ldr	r3, [sp, #4]
 8014f88:	9a05      	ldr	r2, [sp, #20]
 8014f8a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014f8e:	3b01      	subs	r3, #1
 8014f90:	9301      	str	r3, [sp, #4]
 8014f92:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8014f96:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014f98:	eeb0 3a67 	vmov.f32	s6, s15
 8014f9c:	bf08      	it	eq
 8014f9e:	4613      	moveq	r3, r2
 8014fa0:	eef0 2a47 	vmov.f32	s5, s14
 8014fa4:	e72c      	b.n	8014e00 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8014fa6:	140f      	asrs	r7, r1, #16
 8014fa8:	d453      	bmi.n	8015052 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014faa:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014fae:	42bd      	cmp	r5, r7
 8014fb0:	dd4f      	ble.n	8015052 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014fb2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014fb6:	d44c      	bmi.n	8015052 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014fb8:	f8de 000c 	ldr.w	r0, [lr, #12]
 8014fbc:	4560      	cmp	r0, ip
 8014fbe:	dd48      	ble.n	8015052 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014fc0:	9803      	ldr	r0, [sp, #12]
 8014fc2:	b22d      	sxth	r5, r5
 8014fc4:	fb0c 0505 	mla	r5, ip, r5, r0
 8014fc8:	5de8      	ldrb	r0, [r5, r7]
 8014fca:	9d04      	ldr	r5, [sp, #16]
 8014fcc:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8014fd0:	f06f 0501 	mvn.w	r5, #1
 8014fd4:	fb05 fb08 	mul.w	fp, r5, r8
 8014fd8:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014fdc:	f834 500b 	ldrh.w	r5, [r4, fp]
 8014fe0:	122f      	asrs	r7, r5, #8
 8014fe2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014fe6:	fb17 f706 	smulbb	r7, r7, r6
 8014fea:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8014fee:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014ff2:	00ed      	lsls	r5, r5, #3
 8014ff4:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8014ff8:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8014ffc:	10c7      	asrs	r7, r0, #3
 8014ffe:	b2ed      	uxtb	r5, r5
 8015000:	00c0      	lsls	r0, r0, #3
 8015002:	fb19 f906 	smulbb	r9, r9, r6
 8015006:	fb15 f506 	smulbb	r5, r5, r6
 801500a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801500e:	b2c0      	uxtb	r0, r0
 8015010:	fa1f fc8c 	uxth.w	ip, ip
 8015014:	fb07 970a 	mla	r7, r7, sl, r9
 8015018:	fb00 500a 	mla	r0, r0, sl, r5
 801501c:	b2bf      	uxth	r7, r7
 801501e:	b280      	uxth	r0, r0
 8015020:	f10c 0501 	add.w	r5, ip, #1
 8015024:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8015028:	f107 0901 	add.w	r9, r7, #1
 801502c:	1c45      	adds	r5, r0, #1
 801502e:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8015032:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8015036:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801503a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801503e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8015042:	ea45 0c0c 	orr.w	ip, r5, ip
 8015046:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801504a:	ea4c 0c09 	orr.w	ip, ip, r9
 801504e:	f824 c00b 	strh.w	ip, [r4, fp]
 8015052:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015054:	4401      	add	r1, r0
 8015056:	9814      	ldr	r0, [sp, #80]	; 0x50
 8015058:	f108 38ff 	add.w	r8, r8, #4294967295
 801505c:	4402      	add	r2, r0
 801505e:	e75c      	b.n	8014f1a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8015060:	b007      	add	sp, #28
 8015062:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015066 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015066:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801506a:	b085      	sub	sp, #20
 801506c:	4693      	mov	fp, r2
 801506e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8015070:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8015072:	6870      	ldr	r0, [r6, #4]
 8015074:	9100      	str	r1, [sp, #0]
 8015076:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801507a:	fb00 2404 	mla	r4, r0, r4, r2
 801507e:	6832      	ldr	r2, [r6, #0]
 8015080:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015084:	682a      	ldr	r2, [r5, #0]
 8015086:	9201      	str	r2, [sp, #4]
 8015088:	686a      	ldr	r2, [r5, #4]
 801508a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801508e:	3204      	adds	r2, #4
 8015090:	9202      	str	r2, [sp, #8]
 8015092:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015096:	9a00      	ldr	r2, [sp, #0]
 8015098:	2a00      	cmp	r2, #0
 801509a:	dc03      	bgt.n	80150a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801509c:	f1bb 0f00 	cmp.w	fp, #0
 80150a0:	f340 80a0 	ble.w	80151e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80150a4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80150a6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80150aa:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80150ae:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80150b2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80150b4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80150b8:	2b00      	cmp	r3, #0
 80150ba:	dd0c      	ble.n	80150d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80150bc:	1406      	asrs	r6, r0, #16
 80150be:	d405      	bmi.n	80150cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80150c0:	454e      	cmp	r6, r9
 80150c2:	da03      	bge.n	80150cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80150c4:	1416      	asrs	r6, r2, #16
 80150c6:	d401      	bmi.n	80150cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80150c8:	4546      	cmp	r6, r8
 80150ca:	db05      	blt.n	80150d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80150cc:	4470      	add	r0, lr
 80150ce:	4462      	add	r2, ip
 80150d0:	3b01      	subs	r3, #1
 80150d2:	3402      	adds	r4, #2
 80150d4:	e7f0      	b.n	80150b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80150d6:	d00f      	beq.n	80150f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80150d8:	1e5e      	subs	r6, r3, #1
 80150da:	fb0e 0706 	mla	r7, lr, r6, r0
 80150de:	143f      	asrs	r7, r7, #16
 80150e0:	d541      	bpl.n	8015166 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 80150e2:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80150e6:	4698      	mov	r8, r3
 80150e8:	9603      	str	r6, [sp, #12]
 80150ea:	f1b8 0f00 	cmp.w	r8, #0
 80150ee:	dc59      	bgt.n	80151a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80150f0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80150f4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80150f8:	9b00      	ldr	r3, [sp, #0]
 80150fa:	2b00      	cmp	r3, #0
 80150fc:	dd72      	ble.n	80151e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80150fe:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015102:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015106:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801510a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801510c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015110:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015114:	eeb0 6a62 	vmov.f32	s12, s5
 8015118:	ee61 7a27 	vmul.f32	s15, s2, s15
 801511c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015120:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015124:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015128:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801512c:	eeb0 6a43 	vmov.f32	s12, s6
 8015130:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015134:	ee12 2a90 	vmov	r2, s5
 8015138:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801513c:	fb92 fef3 	sdiv	lr, r2, r3
 8015140:	ee13 2a10 	vmov	r2, s6
 8015144:	fb92 fcf3 	sdiv	ip, r2, r3
 8015148:	9b00      	ldr	r3, [sp, #0]
 801514a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801514e:	3b01      	subs	r3, #1
 8015150:	9300      	str	r3, [sp, #0]
 8015152:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015156:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015158:	eeb0 3a67 	vmov.f32	s6, s15
 801515c:	bf08      	it	eq
 801515e:	465b      	moveq	r3, fp
 8015160:	eef0 2a47 	vmov.f32	s5, s14
 8015164:	e797      	b.n	8015096 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8015166:	454f      	cmp	r7, r9
 8015168:	dabb      	bge.n	80150e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801516a:	fb0c 2606 	mla	r6, ip, r6, r2
 801516e:	1436      	asrs	r6, r6, #16
 8015170:	d4b7      	bmi.n	80150e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015172:	4546      	cmp	r6, r8
 8015174:	dab5      	bge.n	80150e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015176:	461e      	mov	r6, r3
 8015178:	46a0      	mov	r8, r4
 801517a:	2e00      	cmp	r6, #0
 801517c:	ddb8      	ble.n	80150f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801517e:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8015182:	9901      	ldr	r1, [sp, #4]
 8015184:	1417      	asrs	r7, r2, #16
 8015186:	ea4f 4920 	mov.w	r9, r0, asr #16
 801518a:	fb0a 1707 	mla	r7, sl, r7, r1
 801518e:	9902      	ldr	r1, [sp, #8]
 8015190:	f817 7009 	ldrb.w	r7, [r7, r9]
 8015194:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8015198:	f828 7b02 	strh.w	r7, [r8], #2
 801519c:	4470      	add	r0, lr
 801519e:	4462      	add	r2, ip
 80151a0:	3e01      	subs	r6, #1
 80151a2:	e7ea      	b.n	801517a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 80151a4:	ea5f 4920 	movs.w	r9, r0, asr #16
 80151a8:	d417      	bmi.n	80151da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80151aa:	68ae      	ldr	r6, [r5, #8]
 80151ac:	454e      	cmp	r6, r9
 80151ae:	dd14      	ble.n	80151da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80151b0:	ea5f 4a22 	movs.w	sl, r2, asr #16
 80151b4:	d411      	bmi.n	80151da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80151b6:	68ef      	ldr	r7, [r5, #12]
 80151b8:	4557      	cmp	r7, sl
 80151ba:	dd0e      	ble.n	80151da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80151bc:	9f01      	ldr	r7, [sp, #4]
 80151be:	b236      	sxth	r6, r6
 80151c0:	fb0a 7606 	mla	r6, sl, r6, r7
 80151c4:	9f02      	ldr	r7, [sp, #8]
 80151c6:	f816 6009 	ldrb.w	r6, [r6, r9]
 80151ca:	f06f 0101 	mvn.w	r1, #1
 80151ce:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 80151d2:	fb01 f608 	mul.w	r6, r1, r8
 80151d6:	9903      	ldr	r1, [sp, #12]
 80151d8:	538f      	strh	r7, [r1, r6]
 80151da:	4470      	add	r0, lr
 80151dc:	4462      	add	r2, ip
 80151de:	f108 38ff 	add.w	r8, r8, #4294967295
 80151e2:	e782      	b.n	80150ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80151e4:	b005      	add	sp, #20
 80151e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080151ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80151ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80151ee:	b087      	sub	sp, #28
 80151f0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80151f2:	9205      	str	r2, [sp, #20]
 80151f4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80151f8:	9203      	str	r2, [sp, #12]
 80151fa:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80151fe:	9102      	str	r1, [sp, #8]
 8015200:	6861      	ldr	r1, [r4, #4]
 8015202:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8015206:	fb01 2000 	mla	r0, r1, r0, r2
 801520a:	6822      	ldr	r2, [r4, #0]
 801520c:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8015210:	9200      	str	r2, [sp, #0]
 8015212:	f8dc 2000 	ldr.w	r2, [ip]
 8015216:	9204      	str	r2, [sp, #16]
 8015218:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801521c:	3204      	adds	r2, #4
 801521e:	9201      	str	r2, [sp, #4]
 8015220:	9a03      	ldr	r2, [sp, #12]
 8015222:	43d5      	mvns	r5, r2
 8015224:	b2ed      	uxtb	r5, r5
 8015226:	9a02      	ldr	r2, [sp, #8]
 8015228:	2a00      	cmp	r2, #0
 801522a:	dc03      	bgt.n	8015234 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801522c:	9a05      	ldr	r2, [sp, #20]
 801522e:	2a00      	cmp	r2, #0
 8015230:	f340 812c 	ble.w	801548c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8015234:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015236:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801523a:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801523e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015242:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015244:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015248:	2b00      	cmp	r3, #0
 801524a:	dd10      	ble.n	801526e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801524c:	140c      	asrs	r4, r1, #16
 801524e:	d405      	bmi.n	801525c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015250:	4574      	cmp	r4, lr
 8015252:	da03      	bge.n	801525c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015254:	1414      	asrs	r4, r2, #16
 8015256:	d401      	bmi.n	801525c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015258:	42bc      	cmp	r4, r7
 801525a:	db09      	blt.n	8015270 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801525c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801525e:	9800      	ldr	r0, [sp, #0]
 8015260:	4421      	add	r1, r4
 8015262:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015264:	3002      	adds	r0, #2
 8015266:	4422      	add	r2, r4
 8015268:	3b01      	subs	r3, #1
 801526a:	9000      	str	r0, [sp, #0]
 801526c:	e7ec      	b.n	8015248 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801526e:	d071      	beq.n	8015354 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8015270:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8015272:	1e5c      	subs	r4, r3, #1
 8015274:	fb06 1604 	mla	r6, r6, r4, r1
 8015278:	1436      	asrs	r6, r6, #16
 801527a:	d45d      	bmi.n	8015338 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801527c:	4576      	cmp	r6, lr
 801527e:	da5b      	bge.n	8015338 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8015280:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8015282:	fb06 2404 	mla	r4, r6, r4, r2
 8015286:	1424      	asrs	r4, r4, #16
 8015288:	d456      	bmi.n	8015338 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801528a:	42bc      	cmp	r4, r7
 801528c:	da54      	bge.n	8015338 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801528e:	f8dd 9000 	ldr.w	r9, [sp]
 8015292:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8015296:	4698      	mov	r8, r3
 8015298:	f1b8 0f00 	cmp.w	r8, #0
 801529c:	dd54      	ble.n	8015348 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801529e:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 80152a2:	9804      	ldr	r0, [sp, #16]
 80152a4:	1414      	asrs	r4, r2, #16
 80152a6:	fb07 0404 	mla	r4, r7, r4, r0
 80152aa:	140e      	asrs	r6, r1, #16
 80152ac:	9801      	ldr	r0, [sp, #4]
 80152ae:	f814 e006 	ldrb.w	lr, [r4, r6]
 80152b2:	f8b9 4000 	ldrh.w	r4, [r9]
 80152b6:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80152ba:	eb00 0b0e 	add.w	fp, r0, lr
 80152be:	1227      	asrs	r7, r4, #8
 80152c0:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80152c4:	f89b b001 	ldrb.w	fp, [fp, #1]
 80152c8:	f810 e00e 	ldrb.w	lr, [r0, lr]
 80152cc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80152ce:	fb16 f60a 	smulbb	r6, r6, sl
 80152d2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80152d6:	fb07 6705 	mla	r7, r7, r5, r6
 80152da:	10e6      	asrs	r6, r4, #3
 80152dc:	00e4      	lsls	r4, r4, #3
 80152de:	b2e4      	uxtb	r4, r4
 80152e0:	fb1b fb0a 	smulbb	fp, fp, sl
 80152e4:	fb14 f405 	smulbb	r4, r4, r5
 80152e8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80152ec:	b2bf      	uxth	r7, r7
 80152ee:	fb06 b605 	mla	r6, r6, r5, fp
 80152f2:	fb0e 4e0a 	mla	lr, lr, sl, r4
 80152f6:	b2b6      	uxth	r6, r6
 80152f8:	fa1f fe8e 	uxth.w	lr, lr
 80152fc:	1c7c      	adds	r4, r7, #1
 80152fe:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8015302:	f106 0b01 	add.w	fp, r6, #1
 8015306:	f10e 0401 	add.w	r4, lr, #1
 801530a:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801530e:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8015312:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015316:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801531a:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801531e:	4327      	orrs	r7, r4
 8015320:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8015324:	4401      	add	r1, r0
 8015326:	9814      	ldr	r0, [sp, #80]	; 0x50
 8015328:	ea47 070b 	orr.w	r7, r7, fp
 801532c:	f829 7b02 	strh.w	r7, [r9], #2
 8015330:	4402      	add	r2, r0
 8015332:	f108 38ff 	add.w	r8, r8, #4294967295
 8015336:	e7af      	b.n	8015298 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8015338:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801533c:	f04f 0e00 	mov.w	lr, #0
 8015340:	eb03 040e 	add.w	r4, r3, lr
 8015344:	2c00      	cmp	r4, #0
 8015346:	dc43      	bgt.n	80153d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8015348:	9a00      	ldr	r2, [sp, #0]
 801534a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801534e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015352:	9300      	str	r3, [sp, #0]
 8015354:	9b02      	ldr	r3, [sp, #8]
 8015356:	2b00      	cmp	r3, #0
 8015358:	f340 8098 	ble.w	801548c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801535c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015360:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015364:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8015368:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801536a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801536e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015372:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015376:	eef0 6a62 	vmov.f32	s13, s5
 801537a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801537e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015382:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015386:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801538a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801538e:	eef0 6a43 	vmov.f32	s13, s6
 8015392:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015396:	ee12 2a90 	vmov	r2, s5
 801539a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801539e:	fb92 f3f3 	sdiv	r3, r2, r3
 80153a2:	ee13 2a10 	vmov	r2, s6
 80153a6:	9313      	str	r3, [sp, #76]	; 0x4c
 80153a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80153aa:	fb92 f3f3 	sdiv	r3, r2, r3
 80153ae:	9314      	str	r3, [sp, #80]	; 0x50
 80153b0:	9b02      	ldr	r3, [sp, #8]
 80153b2:	9a05      	ldr	r2, [sp, #20]
 80153b4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80153b8:	3b01      	subs	r3, #1
 80153ba:	9302      	str	r3, [sp, #8]
 80153bc:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 80153c0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80153c2:	eeb0 3a67 	vmov.f32	s6, s15
 80153c6:	bf08      	it	eq
 80153c8:	4613      	moveq	r3, r2
 80153ca:	eef0 2a47 	vmov.f32	s5, s14
 80153ce:	e72a      	b.n	8015226 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80153d0:	140f      	asrs	r7, r1, #16
 80153d2:	d454      	bmi.n	801547e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80153d4:	f8dc 6008 	ldr.w	r6, [ip, #8]
 80153d8:	42be      	cmp	r6, r7
 80153da:	dd50      	ble.n	801547e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80153dc:	ea5f 4822 	movs.w	r8, r2, asr #16
 80153e0:	d44d      	bmi.n	801547e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80153e2:	f8dc 400c 	ldr.w	r4, [ip, #12]
 80153e6:	4544      	cmp	r4, r8
 80153e8:	dd49      	ble.n	801547e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80153ea:	9c04      	ldr	r4, [sp, #16]
 80153ec:	b236      	sxth	r6, r6
 80153ee:	fb08 4606 	mla	r6, r8, r6, r4
 80153f2:	f06f 0001 	mvn.w	r0, #1
 80153f6:	f816 8007 	ldrb.w	r8, [r6, r7]
 80153fa:	9c01      	ldr	r4, [sp, #4]
 80153fc:	fb00 fa0e 	mul.w	sl, r0, lr
 8015400:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8015404:	9800      	ldr	r0, [sp, #0]
 8015406:	eb04 0b08 	add.w	fp, r4, r8
 801540a:	f830 400a 	ldrh.w	r4, [r0, sl]
 801540e:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8015412:	9801      	ldr	r0, [sp, #4]
 8015414:	f89b b001 	ldrb.w	fp, [fp, #1]
 8015418:	f810 8008 	ldrb.w	r8, [r0, r8]
 801541c:	9800      	ldr	r0, [sp, #0]
 801541e:	1227      	asrs	r7, r4, #8
 8015420:	fb16 f609 	smulbb	r6, r6, r9
 8015424:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015428:	fb07 6705 	mla	r7, r7, r5, r6
 801542c:	10e6      	asrs	r6, r4, #3
 801542e:	00e4      	lsls	r4, r4, #3
 8015430:	b2e4      	uxtb	r4, r4
 8015432:	fb1b fb09 	smulbb	fp, fp, r9
 8015436:	fb14 f405 	smulbb	r4, r4, r5
 801543a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801543e:	b2bf      	uxth	r7, r7
 8015440:	fb06 b605 	mla	r6, r6, r5, fp
 8015444:	fb08 4809 	mla	r8, r8, r9, r4
 8015448:	b2b6      	uxth	r6, r6
 801544a:	fa1f f888 	uxth.w	r8, r8
 801544e:	1c7c      	adds	r4, r7, #1
 8015450:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8015454:	f106 0b01 	add.w	fp, r6, #1
 8015458:	f108 0401 	add.w	r4, r8, #1
 801545c:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8015460:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8015464:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015468:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801546c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8015470:	4327      	orrs	r7, r4
 8015472:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8015476:	ea47 070b 	orr.w	r7, r7, fp
 801547a:	f820 700a 	strh.w	r7, [r0, sl]
 801547e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015480:	4401      	add	r1, r0
 8015482:	9814      	ldr	r0, [sp, #80]	; 0x50
 8015484:	f10e 3eff 	add.w	lr, lr, #4294967295
 8015488:	4402      	add	r2, r0
 801548a:	e759      	b.n	8015340 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801548c:	b007      	add	sp, #28
 801548e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08015494 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015494:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015498:	b085      	sub	sp, #20
 801549a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801549e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80154a0:	9203      	str	r2, [sp, #12]
 80154a2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80154a6:	6870      	ldr	r0, [r6, #4]
 80154a8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80154aa:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 80154ae:	686f      	ldr	r7, [r5, #4]
 80154b0:	9101      	str	r1, [sp, #4]
 80154b2:	fb00 2404 	mla	r4, r0, r4, r2
 80154b6:	6832      	ldr	r2, [r6, #0]
 80154b8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80154bc:	682a      	ldr	r2, [r5, #0]
 80154be:	9202      	str	r2, [sp, #8]
 80154c0:	3704      	adds	r7, #4
 80154c2:	9a01      	ldr	r2, [sp, #4]
 80154c4:	2a00      	cmp	r2, #0
 80154c6:	dc03      	bgt.n	80154d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80154c8:	9a03      	ldr	r2, [sp, #12]
 80154ca:	2a00      	cmp	r2, #0
 80154cc:	f340 80cc 	ble.w	8015668 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80154d0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80154d2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80154d6:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80154da:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80154de:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80154e0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80154e4:	2b00      	cmp	r3, #0
 80154e6:	dd0d      	ble.n	8015504 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80154e8:	1406      	asrs	r6, r0, #16
 80154ea:	d405      	bmi.n	80154f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80154ec:	454e      	cmp	r6, r9
 80154ee:	da03      	bge.n	80154f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80154f0:	1416      	asrs	r6, r2, #16
 80154f2:	d401      	bmi.n	80154f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80154f4:	4546      	cmp	r6, r8
 80154f6:	db06      	blt.n	8015506 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80154f8:	9e12      	ldr	r6, [sp, #72]	; 0x48
 80154fa:	4460      	add	r0, ip
 80154fc:	4432      	add	r2, r6
 80154fe:	3b01      	subs	r3, #1
 8015500:	3402      	adds	r4, #2
 8015502:	e7ef      	b.n	80154e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8015504:	d00f      	beq.n	8015526 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015506:	1e5e      	subs	r6, r3, #1
 8015508:	fb0c 0e06 	mla	lr, ip, r6, r0
 801550c:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8015510:	d543      	bpl.n	801559a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8015512:	4698      	mov	r8, r3
 8015514:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8015518:	f1b8 0f00 	cmp.w	r8, #0
 801551c:	dc71      	bgt.n	8015602 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801551e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015522:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015526:	9b01      	ldr	r3, [sp, #4]
 8015528:	2b00      	cmp	r3, #0
 801552a:	f340 809d 	ble.w	8015668 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801552e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015532:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015536:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801553a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801553c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015540:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015544:	eeb0 6a62 	vmov.f32	s12, s5
 8015548:	ee61 7a27 	vmul.f32	s15, s2, s15
 801554c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015550:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015554:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015558:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801555c:	eeb0 6a43 	vmov.f32	s12, s6
 8015560:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015564:	ee12 2a90 	vmov	r2, s5
 8015568:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801556c:	fb92 fcf3 	sdiv	ip, r2, r3
 8015570:	ee13 2a10 	vmov	r2, s6
 8015574:	fb92 f3f3 	sdiv	r3, r2, r3
 8015578:	9312      	str	r3, [sp, #72]	; 0x48
 801557a:	9b01      	ldr	r3, [sp, #4]
 801557c:	9a03      	ldr	r2, [sp, #12]
 801557e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015582:	3b01      	subs	r3, #1
 8015584:	9301      	str	r3, [sp, #4]
 8015586:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801558a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801558c:	eeb0 3a67 	vmov.f32	s6, s15
 8015590:	bf08      	it	eq
 8015592:	4613      	moveq	r3, r2
 8015594:	eef0 2a47 	vmov.f32	s5, s14
 8015598:	e793      	b.n	80154c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801559a:	45ce      	cmp	lr, r9
 801559c:	dab9      	bge.n	8015512 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801559e:	9912      	ldr	r1, [sp, #72]	; 0x48
 80155a0:	fb01 2606 	mla	r6, r1, r6, r2
 80155a4:	1436      	asrs	r6, r6, #16
 80155a6:	d4b4      	bmi.n	8015512 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80155a8:	4546      	cmp	r6, r8
 80155aa:	dab2      	bge.n	8015512 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80155ac:	4698      	mov	r8, r3
 80155ae:	46a2      	mov	sl, r4
 80155b0:	f1b8 0f00 	cmp.w	r8, #0
 80155b4:	ddb3      	ble.n	801551e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80155b6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80155ba:	9902      	ldr	r1, [sp, #8]
 80155bc:	1416      	asrs	r6, r2, #16
 80155be:	fb09 1606 	mla	r6, r9, r6, r1
 80155c2:	ea4f 4e20 	mov.w	lr, r0, asr #16
 80155c6:	492a      	ldr	r1, [pc, #168]	; (8015670 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 80155c8:	f816 e00e 	ldrb.w	lr, [r6, lr]
 80155cc:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80155d0:	eb07 0b0e 	add.w	fp, r7, lr
 80155d4:	4460      	add	r0, ip
 80155d6:	f89b 6001 	ldrb.w	r6, [fp, #1]
 80155da:	f89b 9002 	ldrb.w	r9, [fp, #2]
 80155de:	00f6      	lsls	r6, r6, #3
 80155e0:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 80155e4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80155e8:	ea49 0606 	orr.w	r6, r9, r6
 80155ec:	f817 900e 	ldrb.w	r9, [r7, lr]
 80155f0:	9912      	ldr	r1, [sp, #72]	; 0x48
 80155f2:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 80155f6:	f82a 6b02 	strh.w	r6, [sl], #2
 80155fa:	440a      	add	r2, r1
 80155fc:	f108 38ff 	add.w	r8, r8, #4294967295
 8015600:	e7d6      	b.n	80155b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8015602:	ea5f 4920 	movs.w	r9, r0, asr #16
 8015606:	d429      	bmi.n	801565c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8015608:	68ae      	ldr	r6, [r5, #8]
 801560a:	454e      	cmp	r6, r9
 801560c:	dd26      	ble.n	801565c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801560e:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8015612:	d423      	bmi.n	801565c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8015614:	68e9      	ldr	r1, [r5, #12]
 8015616:	4559      	cmp	r1, fp
 8015618:	dd20      	ble.n	801565c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801561a:	9902      	ldr	r1, [sp, #8]
 801561c:	fa0f fe86 	sxth.w	lr, r6
 8015620:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8015624:	f06f 0101 	mvn.w	r1, #1
 8015628:	f81e e009 	ldrb.w	lr, [lr, r9]
 801562c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8015630:	eb07 060e 	add.w	r6, r7, lr
 8015634:	fb01 f908 	mul.w	r9, r1, r8
 8015638:	f896 b002 	ldrb.w	fp, [r6, #2]
 801563c:	7876      	ldrb	r6, [r6, #1]
 801563e:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 8015642:	00f6      	lsls	r6, r6, #3
 8015644:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8015648:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801564c:	ea4b 0606 	orr.w	r6, fp, r6
 8015650:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8015654:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8015658:	f82a 6009 	strh.w	r6, [sl, r9]
 801565c:	9912      	ldr	r1, [sp, #72]	; 0x48
 801565e:	4460      	add	r0, ip
 8015660:	440a      	add	r2, r1
 8015662:	f108 38ff 	add.w	r8, r8, #4294967295
 8015666:	e757      	b.n	8015518 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8015668:	b005      	add	sp, #20
 801566a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801566e:	bf00      	nop
 8015670:	fffff800 	.word	0xfffff800

08015674 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015674:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015678:	b087      	sub	sp, #28
 801567a:	468b      	mov	fp, r1
 801567c:	9815      	ldr	r0, [sp, #84]	; 0x54
 801567e:	9204      	str	r2, [sp, #16]
 8015680:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8015684:	9205      	str	r2, [sp, #20]
 8015686:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801568a:	6841      	ldr	r1, [r0, #4]
 801568c:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8015690:	fb01 2404 	mla	r4, r1, r4, r2
 8015694:	6802      	ldr	r2, [r0, #0]
 8015696:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801569a:	f8dc 2000 	ldr.w	r2, [ip]
 801569e:	9201      	str	r2, [sp, #4]
 80156a0:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80156a4:	3204      	adds	r2, #4
 80156a6:	9202      	str	r2, [sp, #8]
 80156a8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80156ac:	f1bb 0f00 	cmp.w	fp, #0
 80156b0:	dc03      	bgt.n	80156ba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80156b2:	9a04      	ldr	r2, [sp, #16]
 80156b4:	2a00      	cmp	r2, #0
 80156b6:	f340 8138 	ble.w	801592a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80156ba:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80156bc:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 80156c0:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 80156c4:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80156c8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80156ca:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80156ce:	2b00      	cmp	r3, #0
 80156d0:	dd0e      	ble.n	80156f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80156d2:	1402      	asrs	r2, r0, #16
 80156d4:	d405      	bmi.n	80156e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80156d6:	42ba      	cmp	r2, r7
 80156d8:	da03      	bge.n	80156e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80156da:	140a      	asrs	r2, r1, #16
 80156dc:	d401      	bmi.n	80156e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80156de:	42b2      	cmp	r2, r6
 80156e0:	db07      	blt.n	80156f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80156e2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80156e4:	4410      	add	r0, r2
 80156e6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80156e8:	3b01      	subs	r3, #1
 80156ea:	4411      	add	r1, r2
 80156ec:	3402      	adds	r4, #2
 80156ee:	e7ee      	b.n	80156ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80156f0:	d019      	beq.n	8015726 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80156f2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80156f4:	1e5a      	subs	r2, r3, #1
 80156f6:	fb05 0502 	mla	r5, r5, r2, r0
 80156fa:	142d      	asrs	r5, r5, #16
 80156fc:	d409      	bmi.n	8015712 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80156fe:	42bd      	cmp	r5, r7
 8015700:	da07      	bge.n	8015712 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015702:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8015704:	fb05 1202 	mla	r2, r5, r2, r1
 8015708:	1412      	asrs	r2, r2, #16
 801570a:	d402      	bmi.n	8015712 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801570c:	42b2      	cmp	r2, r6
 801570e:	f2c0 80ac 	blt.w	801586a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8015712:	f04f 0e00 	mov.w	lr, #0
 8015716:	eb03 020e 	add.w	r2, r3, lr
 801571a:	2a00      	cmp	r2, #0
 801571c:	dc3e      	bgt.n	801579c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801571e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015722:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015726:	f1bb 0f00 	cmp.w	fp, #0
 801572a:	f340 80fe 	ble.w	801592a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801572e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015732:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015736:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801573a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801573c:	f1bb 0b01 	subs.w	fp, fp, #1
 8015740:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015744:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015748:	eeb0 6a62 	vmov.f32	s12, s5
 801574c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015750:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015754:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015758:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801575c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015760:	eeb0 6a43 	vmov.f32	s12, s6
 8015764:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015768:	ee12 2a90 	vmov	r2, s5
 801576c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015770:	fb92 f3f3 	sdiv	r3, r2, r3
 8015774:	ee13 2a10 	vmov	r2, s6
 8015778:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801577c:	9313      	str	r3, [sp, #76]	; 0x4c
 801577e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015780:	fb92 f3f3 	sdiv	r3, r2, r3
 8015784:	9a04      	ldr	r2, [sp, #16]
 8015786:	9314      	str	r3, [sp, #80]	; 0x50
 8015788:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801578c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801578e:	eeb0 3a67 	vmov.f32	s6, s15
 8015792:	bf08      	it	eq
 8015794:	4613      	moveq	r3, r2
 8015796:	eef0 2a47 	vmov.f32	s5, s14
 801579a:	e787      	b.n	80156ac <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801579c:	1406      	asrs	r6, r0, #16
 801579e:	d45d      	bmi.n	801585c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80157a0:	f8dc 5008 	ldr.w	r5, [ip, #8]
 80157a4:	42b5      	cmp	r5, r6
 80157a6:	dd59      	ble.n	801585c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80157a8:	140f      	asrs	r7, r1, #16
 80157aa:	d457      	bmi.n	801585c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80157ac:	f8dc 200c 	ldr.w	r2, [ip, #12]
 80157b0:	42ba      	cmp	r2, r7
 80157b2:	dd53      	ble.n	801585c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80157b4:	9a01      	ldr	r2, [sp, #4]
 80157b6:	b22d      	sxth	r5, r5
 80157b8:	fb07 2505 	mla	r5, r7, r5, r2
 80157bc:	5daa      	ldrb	r2, [r5, r6]
 80157be:	9d02      	ldr	r5, [sp, #8]
 80157c0:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80157c4:	0e2e      	lsrs	r6, r5, #24
 80157c6:	d049      	beq.n	801585c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80157c8:	f06f 0201 	mvn.w	r2, #1
 80157cc:	fb02 f20e 	mul.w	r2, r2, lr
 80157d0:	9203      	str	r2, [sp, #12]
 80157d2:	f834 8002 	ldrh.w	r8, [r4, r2]
 80157d6:	9a05      	ldr	r2, [sp, #20]
 80157d8:	4356      	muls	r6, r2
 80157da:	1c72      	adds	r2, r6, #1
 80157dc:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80157e0:	1212      	asrs	r2, r2, #8
 80157e2:	fa1f f982 	uxth.w	r9, r2
 80157e6:	ea4f 2728 	mov.w	r7, r8, asr #8
 80157ea:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80157ee:	43d2      	mvns	r2, r2
 80157f0:	b2d2      	uxtb	r2, r2
 80157f2:	fb16 f609 	smulbb	r6, r6, r9
 80157f6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80157fa:	fb07 6702 	mla	r7, r7, r2, r6
 80157fe:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8015802:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8015806:	b2ed      	uxtb	r5, r5
 8015808:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801580c:	fa5f f888 	uxtb.w	r8, r8
 8015810:	fb15 f509 	smulbb	r5, r5, r9
 8015814:	fb08 5502 	mla	r5, r8, r2, r5
 8015818:	b2bf      	uxth	r7, r7
 801581a:	fb1a fa09 	smulbb	sl, sl, r9
 801581e:	b2ad      	uxth	r5, r5
 8015820:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015824:	fb06 a602 	mla	r6, r6, r2, sl
 8015828:	1c7a      	adds	r2, r7, #1
 801582a:	f105 0a01 	add.w	sl, r5, #1
 801582e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8015832:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015836:	b2b6      	uxth	r6, r6
 8015838:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801583c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015840:	ea4a 0707 	orr.w	r7, sl, r7
 8015844:	f106 0a01 	add.w	sl, r6, #1
 8015848:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801584c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015850:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015854:	9a03      	ldr	r2, [sp, #12]
 8015856:	ea47 070a 	orr.w	r7, r7, sl
 801585a:	52a7      	strh	r7, [r4, r2]
 801585c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801585e:	4410      	add	r0, r2
 8015860:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015862:	f10e 3eff 	add.w	lr, lr, #4294967295
 8015866:	4411      	add	r1, r2
 8015868:	e755      	b.n	8015716 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801586a:	f04f 0800 	mov.w	r8, #0
 801586e:	eba3 0208 	sub.w	r2, r3, r8
 8015872:	2a00      	cmp	r2, #0
 8015874:	f77f af53 	ble.w	801571e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015878:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801587c:	9f01      	ldr	r7, [sp, #4]
 801587e:	140a      	asrs	r2, r1, #16
 8015880:	1405      	asrs	r5, r0, #16
 8015882:	fb06 7202 	mla	r2, r6, r2, r7
 8015886:	5d52      	ldrb	r2, [r2, r5]
 8015888:	9d02      	ldr	r5, [sp, #8]
 801588a:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801588e:	0e2e      	lsrs	r6, r5, #24
 8015890:	d044      	beq.n	801591c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8015892:	9a05      	ldr	r2, [sp, #20]
 8015894:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8015898:	4356      	muls	r6, r2
 801589a:	1c72      	adds	r2, r6, #1
 801589c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80158a0:	1212      	asrs	r2, r2, #8
 80158a2:	fa1f f982 	uxth.w	r9, r2
 80158a6:	ea4f 272e 	mov.w	r7, lr, asr #8
 80158aa:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80158ae:	43d2      	mvns	r2, r2
 80158b0:	b2d2      	uxtb	r2, r2
 80158b2:	fb16 f609 	smulbb	r6, r6, r9
 80158b6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80158ba:	fb07 6702 	mla	r7, r7, r2, r6
 80158be:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80158c2:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80158c6:	b2ed      	uxtb	r5, r5
 80158c8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80158cc:	fa5f fe8e 	uxtb.w	lr, lr
 80158d0:	fb15 f509 	smulbb	r5, r5, r9
 80158d4:	fb0e 5502 	mla	r5, lr, r2, r5
 80158d8:	b2bf      	uxth	r7, r7
 80158da:	fb1a fa09 	smulbb	sl, sl, r9
 80158de:	b2ad      	uxth	r5, r5
 80158e0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80158e4:	fb06 a602 	mla	r6, r6, r2, sl
 80158e8:	1c7a      	adds	r2, r7, #1
 80158ea:	f105 0a01 	add.w	sl, r5, #1
 80158ee:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80158f2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80158f6:	b2b6      	uxth	r6, r6
 80158f8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80158fc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015900:	ea4a 0707 	orr.w	r7, sl, r7
 8015904:	f106 0a01 	add.w	sl, r6, #1
 8015908:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801590c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015910:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015914:	ea47 070a 	orr.w	r7, r7, sl
 8015918:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801591c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801591e:	4410      	add	r0, r2
 8015920:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015922:	f108 0801 	add.w	r8, r8, #1
 8015926:	4411      	add	r1, r2
 8015928:	e7a1      	b.n	801586e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801592a:	b007      	add	sp, #28
 801592c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015930 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015930:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015934:	b085      	sub	sp, #20
 8015936:	468b      	mov	fp, r1
 8015938:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801593a:	9203      	str	r2, [sp, #12]
 801593c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8015940:	6841      	ldr	r1, [r0, #4]
 8015942:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8015946:	fb01 2404 	mla	r4, r1, r4, r2
 801594a:	6802      	ldr	r2, [r0, #0]
 801594c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015950:	f8de 2000 	ldr.w	r2, [lr]
 8015954:	9200      	str	r2, [sp, #0]
 8015956:	f8de 2004 	ldr.w	r2, [lr, #4]
 801595a:	3204      	adds	r2, #4
 801595c:	9201      	str	r2, [sp, #4]
 801595e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015962:	f1bb 0f00 	cmp.w	fp, #0
 8015966:	dc03      	bgt.n	8015970 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8015968:	9a03      	ldr	r2, [sp, #12]
 801596a:	2a00      	cmp	r2, #0
 801596c:	f340 8153 	ble.w	8015c16 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8015970:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015972:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8015976:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801597a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801597e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015980:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015984:	2b00      	cmp	r3, #0
 8015986:	dd0e      	ble.n	80159a6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015988:	1408      	asrs	r0, r1, #16
 801598a:	d405      	bmi.n	8015998 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801598c:	42b8      	cmp	r0, r7
 801598e:	da03      	bge.n	8015998 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015990:	1410      	asrs	r0, r2, #16
 8015992:	d401      	bmi.n	8015998 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015994:	42b0      	cmp	r0, r6
 8015996:	db07      	blt.n	80159a8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8015998:	9811      	ldr	r0, [sp, #68]	; 0x44
 801599a:	4401      	add	r1, r0
 801599c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801599e:	3b01      	subs	r3, #1
 80159a0:	4402      	add	r2, r0
 80159a2:	3402      	adds	r4, #2
 80159a4:	e7ee      	b.n	8015984 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80159a6:	d017      	beq.n	80159d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80159a8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80159aa:	1e58      	subs	r0, r3, #1
 80159ac:	fb05 1500 	mla	r5, r5, r0, r1
 80159b0:	142d      	asrs	r5, r5, #16
 80159b2:	d409      	bmi.n	80159c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80159b4:	42bd      	cmp	r5, r7
 80159b6:	da07      	bge.n	80159c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80159b8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80159ba:	fb05 2000 	mla	r0, r5, r0, r2
 80159be:	1400      	asrs	r0, r0, #16
 80159c0:	d402      	bmi.n	80159c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80159c2:	42b0      	cmp	r0, r6
 80159c4:	f2c0 80bc 	blt.w	8015b40 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 80159c8:	2600      	movs	r6, #0
 80159ca:	1998      	adds	r0, r3, r6
 80159cc:	2800      	cmp	r0, #0
 80159ce:	dc3e      	bgt.n	8015a4e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 80159d0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80159d4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80159d8:	f1bb 0f00 	cmp.w	fp, #0
 80159dc:	f340 811b 	ble.w	8015c16 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80159e0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80159e4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80159e8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80159ec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80159ee:	f1bb 0b01 	subs.w	fp, fp, #1
 80159f2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80159f6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80159fa:	eeb0 6a62 	vmov.f32	s12, s5
 80159fe:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015a02:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015a06:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015a0a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015a0e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015a12:	eeb0 6a43 	vmov.f32	s12, s6
 8015a16:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015a1a:	ee12 2a90 	vmov	r2, s5
 8015a1e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015a22:	fb92 f3f3 	sdiv	r3, r2, r3
 8015a26:	ee13 2a10 	vmov	r2, s6
 8015a2a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015a2e:	9311      	str	r3, [sp, #68]	; 0x44
 8015a30:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015a32:	fb92 f3f3 	sdiv	r3, r2, r3
 8015a36:	9a03      	ldr	r2, [sp, #12]
 8015a38:	9312      	str	r3, [sp, #72]	; 0x48
 8015a3a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015a3e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015a40:	eeb0 3a67 	vmov.f32	s6, s15
 8015a44:	bf08      	it	eq
 8015a46:	4613      	moveq	r3, r2
 8015a48:	eef0 2a47 	vmov.f32	s5, s14
 8015a4c:	e789      	b.n	8015962 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8015a4e:	140f      	asrs	r7, r1, #16
 8015a50:	d426      	bmi.n	8015aa0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015a52:	f8de 5008 	ldr.w	r5, [lr, #8]
 8015a56:	42bd      	cmp	r5, r7
 8015a58:	dd22      	ble.n	8015aa0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015a5a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015a5e:	d41f      	bmi.n	8015aa0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015a60:	f8de 000c 	ldr.w	r0, [lr, #12]
 8015a64:	4560      	cmp	r0, ip
 8015a66:	dd1b      	ble.n	8015aa0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015a68:	9800      	ldr	r0, [sp, #0]
 8015a6a:	b22d      	sxth	r5, r5
 8015a6c:	fb0c 0505 	mla	r5, ip, r5, r0
 8015a70:	5de8      	ldrb	r0, [r5, r7]
 8015a72:	9d01      	ldr	r5, [sp, #4]
 8015a74:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8015a78:	0e07      	lsrs	r7, r0, #24
 8015a7a:	2fff      	cmp	r7, #255	; 0xff
 8015a7c:	d116      	bne.n	8015aac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015a7e:	f06f 0501 	mvn.w	r5, #1
 8015a82:	fb05 f706 	mul.w	r7, r5, r6
 8015a86:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8015a8a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8015a8e:	0945      	lsrs	r5, r0, #5
 8015a90:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8015a94:	ea4c 0505 	orr.w	r5, ip, r5
 8015a98:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8015a9c:	4305      	orrs	r5, r0
 8015a9e:	53e5      	strh	r5, [r4, r7]
 8015aa0:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015aa2:	4401      	add	r1, r0
 8015aa4:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015aa6:	3e01      	subs	r6, #1
 8015aa8:	4402      	add	r2, r0
 8015aaa:	e78e      	b.n	80159ca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8015aac:	b2fd      	uxtb	r5, r7
 8015aae:	2f00      	cmp	r7, #0
 8015ab0:	d0f6      	beq.n	8015aa0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015ab2:	f06f 0701 	mvn.w	r7, #1
 8015ab6:	4377      	muls	r7, r6
 8015ab8:	fa1f f985 	uxth.w	r9, r5
 8015abc:	f834 8007 	ldrh.w	r8, [r4, r7]
 8015ac0:	9702      	str	r7, [sp, #8]
 8015ac2:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8015ac6:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8015aca:	43ed      	mvns	r5, r5
 8015acc:	b2ed      	uxtb	r5, r5
 8015ace:	fb17 f709 	smulbb	r7, r7, r9
 8015ad2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015ad6:	fb0c 7c05 	mla	ip, ip, r5, r7
 8015ada:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8015ade:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8015ae2:	b2c0      	uxtb	r0, r0
 8015ae4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015ae8:	fa5f f888 	uxtb.w	r8, r8
 8015aec:	fb10 f009 	smulbb	r0, r0, r9
 8015af0:	fb08 0005 	mla	r0, r8, r5, r0
 8015af4:	b280      	uxth	r0, r0
 8015af6:	fa1f fc8c 	uxth.w	ip, ip
 8015afa:	fb1a fa09 	smulbb	sl, sl, r9
 8015afe:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015b02:	fb07 a705 	mla	r7, r7, r5, sl
 8015b06:	f100 0a01 	add.w	sl, r0, #1
 8015b0a:	f10c 0501 	add.w	r5, ip, #1
 8015b0e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8015b12:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8015b16:	b2bf      	uxth	r7, r7
 8015b18:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015b1c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015b20:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015b24:	f107 0a01 	add.w	sl, r7, #1
 8015b28:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8015b2c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015b30:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015b34:	9802      	ldr	r0, [sp, #8]
 8015b36:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015b3a:	f824 c000 	strh.w	ip, [r4, r0]
 8015b3e:	e7af      	b.n	8015aa0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015b40:	f04f 0800 	mov.w	r8, #0
 8015b44:	eba3 0008 	sub.w	r0, r3, r8
 8015b48:	2800      	cmp	r0, #0
 8015b4a:	f77f af41 	ble.w	80159d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015b4e:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8015b52:	9f00      	ldr	r7, [sp, #0]
 8015b54:	1410      	asrs	r0, r2, #16
 8015b56:	140d      	asrs	r5, r1, #16
 8015b58:	fb06 7000 	mla	r0, r6, r0, r7
 8015b5c:	5d40      	ldrb	r0, [r0, r5]
 8015b5e:	9d01      	ldr	r5, [sp, #4]
 8015b60:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8015b64:	0e2e      	lsrs	r6, r5, #24
 8015b66:	2eff      	cmp	r6, #255	; 0xff
 8015b68:	d112      	bne.n	8015b90 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8015b6a:	482c      	ldr	r0, [pc, #176]	; (8015c1c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8015b6c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8015b70:	0968      	lsrs	r0, r5, #5
 8015b72:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015b76:	4330      	orrs	r0, r6
 8015b78:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8015b7c:	4328      	orrs	r0, r5
 8015b7e:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8015b82:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015b84:	4401      	add	r1, r0
 8015b86:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015b88:	f108 0801 	add.w	r8, r8, #1
 8015b8c:	4402      	add	r2, r0
 8015b8e:	e7d9      	b.n	8015b44 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8015b90:	b2f0      	uxtb	r0, r6
 8015b92:	2e00      	cmp	r6, #0
 8015b94:	d0f5      	beq.n	8015b82 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8015b96:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8015b9a:	fa1f f980 	uxth.w	r9, r0
 8015b9e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8015ba2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015ba6:	43c0      	mvns	r0, r0
 8015ba8:	b2c0      	uxtb	r0, r0
 8015baa:	fb16 f609 	smulbb	r6, r6, r9
 8015bae:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015bb2:	fb07 6700 	mla	r7, r7, r0, r6
 8015bb6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8015bba:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8015bbe:	b2ed      	uxtb	r5, r5
 8015bc0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015bc4:	fa5f fc8c 	uxtb.w	ip, ip
 8015bc8:	fb15 f509 	smulbb	r5, r5, r9
 8015bcc:	fb0c 5500 	mla	r5, ip, r0, r5
 8015bd0:	b2bf      	uxth	r7, r7
 8015bd2:	fb1a fa09 	smulbb	sl, sl, r9
 8015bd6:	b2ad      	uxth	r5, r5
 8015bd8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015bdc:	fb06 a600 	mla	r6, r6, r0, sl
 8015be0:	1c78      	adds	r0, r7, #1
 8015be2:	f105 0a01 	add.w	sl, r5, #1
 8015be6:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8015bea:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015bee:	b2b6      	uxth	r6, r6
 8015bf0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015bf4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015bf8:	ea4a 0707 	orr.w	r7, sl, r7
 8015bfc:	f106 0a01 	add.w	sl, r6, #1
 8015c00:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015c04:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015c08:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015c0c:	ea47 070a 	orr.w	r7, r7, sl
 8015c10:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8015c14:	e7b5      	b.n	8015b82 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8015c16:	b005      	add	sp, #20
 8015c18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015c1c:	fffff800 	.word	0xfffff800

08015c20 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015c20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015c24:	b087      	sub	sp, #28
 8015c26:	468b      	mov	fp, r1
 8015c28:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8015c2a:	9204      	str	r2, [sp, #16]
 8015c2c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8015c30:	9205      	str	r2, [sp, #20]
 8015c32:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8015c36:	6861      	ldr	r1, [r4, #4]
 8015c38:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8015c3c:	fb01 2000 	mla	r0, r1, r0, r2
 8015c40:	6822      	ldr	r2, [r4, #0]
 8015c42:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8015c46:	f8de 2000 	ldr.w	r2, [lr]
 8015c4a:	9201      	str	r2, [sp, #4]
 8015c4c:	f8de 2004 	ldr.w	r2, [lr, #4]
 8015c50:	9202      	str	r2, [sp, #8]
 8015c52:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015c56:	f1bb 0f00 	cmp.w	fp, #0
 8015c5a:	dc03      	bgt.n	8015c64 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8015c5c:	9a04      	ldr	r2, [sp, #16]
 8015c5e:	2a00      	cmp	r2, #0
 8015c60:	f340 8142 	ble.w	8015ee8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8015c64:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015c66:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8015c6a:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8015c6e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015c72:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015c74:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015c78:	2b00      	cmp	r3, #0
 8015c7a:	dd0e      	ble.n	8015c9a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8015c7c:	140c      	asrs	r4, r1, #16
 8015c7e:	d405      	bmi.n	8015c8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015c80:	42bc      	cmp	r4, r7
 8015c82:	da03      	bge.n	8015c8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015c84:	1414      	asrs	r4, r2, #16
 8015c86:	d401      	bmi.n	8015c8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015c88:	42b4      	cmp	r4, r6
 8015c8a:	db07      	blt.n	8015c9c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015c8c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015c8e:	4421      	add	r1, r4
 8015c90:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015c92:	3b01      	subs	r3, #1
 8015c94:	4422      	add	r2, r4
 8015c96:	3002      	adds	r0, #2
 8015c98:	e7ee      	b.n	8015c78 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8015c9a:	d019      	beq.n	8015cd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8015c9c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8015c9e:	1e5c      	subs	r4, r3, #1
 8015ca0:	fb05 1504 	mla	r5, r5, r4, r1
 8015ca4:	142d      	asrs	r5, r5, #16
 8015ca6:	d409      	bmi.n	8015cbc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015ca8:	42bd      	cmp	r5, r7
 8015caa:	da07      	bge.n	8015cbc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015cac:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8015cae:	fb05 2404 	mla	r4, r5, r4, r2
 8015cb2:	1424      	asrs	r4, r4, #16
 8015cb4:	d402      	bmi.n	8015cbc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015cb6:	42b4      	cmp	r4, r6
 8015cb8:	f2c0 80b1 	blt.w	8015e1e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8015cbc:	f04f 0800 	mov.w	r8, #0
 8015cc0:	eb03 0408 	add.w	r4, r3, r8
 8015cc4:	2c00      	cmp	r4, #0
 8015cc6:	dc3e      	bgt.n	8015d46 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8015cc8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015ccc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015cd0:	f1bb 0f00 	cmp.w	fp, #0
 8015cd4:	f340 8108 	ble.w	8015ee8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8015cd8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015cdc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015ce0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015ce4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015ce6:	f1bb 0b01 	subs.w	fp, fp, #1
 8015cea:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015cee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015cf2:	eeb0 6a62 	vmov.f32	s12, s5
 8015cf6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015cfa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015cfe:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015d02:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8015d06:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015d0a:	eeb0 6a43 	vmov.f32	s12, s6
 8015d0e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015d12:	ee12 2a90 	vmov	r2, s5
 8015d16:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015d1a:	fb92 f3f3 	sdiv	r3, r2, r3
 8015d1e:	ee13 2a10 	vmov	r2, s6
 8015d22:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015d26:	9313      	str	r3, [sp, #76]	; 0x4c
 8015d28:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015d2a:	fb92 f3f3 	sdiv	r3, r2, r3
 8015d2e:	9a04      	ldr	r2, [sp, #16]
 8015d30:	9314      	str	r3, [sp, #80]	; 0x50
 8015d32:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8015d36:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015d38:	eeb0 3a67 	vmov.f32	s6, s15
 8015d3c:	bf08      	it	eq
 8015d3e:	4613      	moveq	r3, r2
 8015d40:	eef0 2a47 	vmov.f32	s5, s14
 8015d44:	e787      	b.n	8015c56 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8015d46:	140e      	asrs	r6, r1, #16
 8015d48:	d462      	bmi.n	8015e10 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015d4a:	f8de 5008 	ldr.w	r5, [lr, #8]
 8015d4e:	42b5      	cmp	r5, r6
 8015d50:	dd5e      	ble.n	8015e10 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015d52:	1417      	asrs	r7, r2, #16
 8015d54:	d45c      	bmi.n	8015e10 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015d56:	f8de 400c 	ldr.w	r4, [lr, #12]
 8015d5a:	42bc      	cmp	r4, r7
 8015d5c:	dd58      	ble.n	8015e10 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015d5e:	b22d      	sxth	r5, r5
 8015d60:	fb07 6505 	mla	r5, r7, r5, r6
 8015d64:	9c02      	ldr	r4, [sp, #8]
 8015d66:	5d66      	ldrb	r6, [r4, r5]
 8015d68:	2e00      	cmp	r6, #0
 8015d6a:	d051      	beq.n	8015e10 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015d6c:	9c01      	ldr	r4, [sp, #4]
 8015d6e:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8015d72:	f06f 0401 	mvn.w	r4, #1
 8015d76:	fb04 f408 	mul.w	r4, r4, r8
 8015d7a:	9403      	str	r4, [sp, #12]
 8015d7c:	5b05      	ldrh	r5, [r0, r4]
 8015d7e:	9c05      	ldr	r4, [sp, #20]
 8015d80:	4366      	muls	r6, r4
 8015d82:	1c74      	adds	r4, r6, #1
 8015d84:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8015d88:	1224      	asrs	r4, r4, #8
 8015d8a:	b2a7      	uxth	r7, r4
 8015d8c:	122e      	asrs	r6, r5, #8
 8015d8e:	43e4      	mvns	r4, r4
 8015d90:	b2e4      	uxtb	r4, r4
 8015d92:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8015d96:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015d9a:	fb16 f604 	smulbb	r6, r6, r4
 8015d9e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015da2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015da6:	00ed      	lsls	r5, r5, #3
 8015da8:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015dac:	b2ed      	uxtb	r5, r5
 8015dae:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8015db2:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8015db6:	fb15 f504 	smulbb	r5, r5, r4
 8015dba:	fa5f f989 	uxtb.w	r9, r9
 8015dbe:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015dc2:	fb09 5507 	mla	r5, r9, r7, r5
 8015dc6:	fb1a fa04 	smulbb	sl, sl, r4
 8015dca:	fa1f fc8c 	uxth.w	ip, ip
 8015dce:	b2ad      	uxth	r5, r5
 8015dd0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015dd4:	fb06 a607 	mla	r6, r6, r7, sl
 8015dd8:	f10c 0401 	add.w	r4, ip, #1
 8015ddc:	f105 0a01 	add.w	sl, r5, #1
 8015de0:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015de4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015de8:	b2b6      	uxth	r6, r6
 8015dea:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015dee:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015df2:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015df6:	f106 0a01 	add.w	sl, r6, #1
 8015dfa:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015dfe:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015e02:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015e06:	9c03      	ldr	r4, [sp, #12]
 8015e08:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015e0c:	f820 c004 	strh.w	ip, [r0, r4]
 8015e10:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015e12:	4421      	add	r1, r4
 8015e14:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015e16:	f108 38ff 	add.w	r8, r8, #4294967295
 8015e1a:	4422      	add	r2, r4
 8015e1c:	e750      	b.n	8015cc0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015e1e:	f04f 0900 	mov.w	r9, #0
 8015e22:	eba3 0409 	sub.w	r4, r3, r9
 8015e26:	2c00      	cmp	r4, #0
 8015e28:	f77f af4e 	ble.w	8015cc8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8015e2c:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8015e30:	140d      	asrs	r5, r1, #16
 8015e32:	1414      	asrs	r4, r2, #16
 8015e34:	fb06 5404 	mla	r4, r6, r4, r5
 8015e38:	9d02      	ldr	r5, [sp, #8]
 8015e3a:	5d2e      	ldrb	r6, [r5, r4]
 8015e3c:	2e00      	cmp	r6, #0
 8015e3e:	d04c      	beq.n	8015eda <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8015e40:	9d01      	ldr	r5, [sp, #4]
 8015e42:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8015e46:	9c05      	ldr	r4, [sp, #20]
 8015e48:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8015e4c:	4366      	muls	r6, r4
 8015e4e:	1c74      	adds	r4, r6, #1
 8015e50:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8015e54:	1224      	asrs	r4, r4, #8
 8015e56:	b2a7      	uxth	r7, r4
 8015e58:	122e      	asrs	r6, r5, #8
 8015e5a:	43e4      	mvns	r4, r4
 8015e5c:	b2e4      	uxtb	r4, r4
 8015e5e:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8015e62:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015e66:	fb16 f604 	smulbb	r6, r6, r4
 8015e6a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015e6e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015e72:	00ed      	lsls	r5, r5, #3
 8015e74:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015e78:	b2ed      	uxtb	r5, r5
 8015e7a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8015e7e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015e82:	fb15 f504 	smulbb	r5, r5, r4
 8015e86:	fa5f f888 	uxtb.w	r8, r8
 8015e8a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015e8e:	fb08 5507 	mla	r5, r8, r7, r5
 8015e92:	fb1a fa04 	smulbb	sl, sl, r4
 8015e96:	fa1f fc8c 	uxth.w	ip, ip
 8015e9a:	b2ad      	uxth	r5, r5
 8015e9c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015ea0:	fb06 a607 	mla	r6, r6, r7, sl
 8015ea4:	f10c 0401 	add.w	r4, ip, #1
 8015ea8:	f105 0a01 	add.w	sl, r5, #1
 8015eac:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015eb0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015eb4:	b2b6      	uxth	r6, r6
 8015eb6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015eba:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015ebe:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015ec2:	f106 0a01 	add.w	sl, r6, #1
 8015ec6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015eca:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015ece:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015ed2:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015ed6:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8015eda:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015edc:	4421      	add	r1, r4
 8015ede:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015ee0:	f109 0901 	add.w	r9, r9, #1
 8015ee4:	4422      	add	r2, r4
 8015ee6:	e79c      	b.n	8015e22 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8015ee8:	b007      	add	sp, #28
 8015eea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015eee <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015eee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015ef2:	b085      	sub	sp, #20
 8015ef4:	468b      	mov	fp, r1
 8015ef6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015ef8:	9203      	str	r2, [sp, #12]
 8015efa:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8015efe:	6861      	ldr	r1, [r4, #4]
 8015f00:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8015f04:	fb01 2000 	mla	r0, r1, r0, r2
 8015f08:	6822      	ldr	r2, [r4, #0]
 8015f0a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8015f0e:	f8d8 2000 	ldr.w	r2, [r8]
 8015f12:	9200      	str	r2, [sp, #0]
 8015f14:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8015f18:	9201      	str	r2, [sp, #4]
 8015f1a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015f1e:	f1bb 0f00 	cmp.w	fp, #0
 8015f22:	dc03      	bgt.n	8015f2c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8015f24:	9a03      	ldr	r2, [sp, #12]
 8015f26:	2a00      	cmp	r2, #0
 8015f28:	f340 8146 	ble.w	80161b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8015f2c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015f2e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8015f32:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8015f36:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015f3a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015f3c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015f40:	2b00      	cmp	r3, #0
 8015f42:	dd0e      	ble.n	8015f62 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8015f44:	140c      	asrs	r4, r1, #16
 8015f46:	d405      	bmi.n	8015f54 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015f48:	42bc      	cmp	r4, r7
 8015f4a:	da03      	bge.n	8015f54 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015f4c:	1414      	asrs	r4, r2, #16
 8015f4e:	d401      	bmi.n	8015f54 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015f50:	42b4      	cmp	r4, r6
 8015f52:	db07      	blt.n	8015f64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015f54:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015f56:	4421      	add	r1, r4
 8015f58:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015f5a:	3b01      	subs	r3, #1
 8015f5c:	4422      	add	r2, r4
 8015f5e:	3002      	adds	r0, #2
 8015f60:	e7ee      	b.n	8015f40 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8015f62:	d017      	beq.n	8015f94 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8015f64:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8015f66:	1e5c      	subs	r4, r3, #1
 8015f68:	fb05 1504 	mla	r5, r5, r4, r1
 8015f6c:	142d      	asrs	r5, r5, #16
 8015f6e:	d409      	bmi.n	8015f84 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015f70:	42bd      	cmp	r5, r7
 8015f72:	da07      	bge.n	8015f84 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015f74:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8015f76:	fb05 2404 	mla	r4, r5, r4, r2
 8015f7a:	1424      	asrs	r4, r4, #16
 8015f7c:	d402      	bmi.n	8015f84 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015f7e:	42b4      	cmp	r4, r6
 8015f80:	f2c0 80b3 	blt.w	80160ea <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8015f84:	2600      	movs	r6, #0
 8015f86:	199c      	adds	r4, r3, r6
 8015f88:	2c00      	cmp	r4, #0
 8015f8a:	dc3e      	bgt.n	801600a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8015f8c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015f90:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015f94:	f1bb 0f00 	cmp.w	fp, #0
 8015f98:	f340 810e 	ble.w	80161b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8015f9c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015fa0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015fa4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015fa8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015faa:	f1bb 0b01 	subs.w	fp, fp, #1
 8015fae:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015fb2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015fb6:	eeb0 6a62 	vmov.f32	s12, s5
 8015fba:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015fbe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015fc2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015fc6:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015fca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015fce:	eeb0 6a43 	vmov.f32	s12, s6
 8015fd2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015fd6:	ee12 2a90 	vmov	r2, s5
 8015fda:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015fde:	fb92 f3f3 	sdiv	r3, r2, r3
 8015fe2:	ee13 2a10 	vmov	r2, s6
 8015fe6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015fea:	9311      	str	r3, [sp, #68]	; 0x44
 8015fec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015fee:	fb92 f3f3 	sdiv	r3, r2, r3
 8015ff2:	9a03      	ldr	r2, [sp, #12]
 8015ff4:	9312      	str	r3, [sp, #72]	; 0x48
 8015ff6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015ffa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015ffc:	eeb0 3a67 	vmov.f32	s6, s15
 8016000:	bf08      	it	eq
 8016002:	4613      	moveq	r3, r2
 8016004:	eef0 2a47 	vmov.f32	s5, s14
 8016008:	e789      	b.n	8015f1e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801600a:	140f      	asrs	r7, r1, #16
 801600c:	d418      	bmi.n	8016040 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801600e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8016012:	42bd      	cmp	r5, r7
 8016014:	dd14      	ble.n	8016040 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8016016:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801601a:	d411      	bmi.n	8016040 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801601c:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8016020:	4564      	cmp	r4, ip
 8016022:	dd0d      	ble.n	8016040 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8016024:	b22d      	sxth	r5, r5
 8016026:	fb0c 7505 	mla	r5, ip, r5, r7
 801602a:	9c01      	ldr	r4, [sp, #4]
 801602c:	5d64      	ldrb	r4, [r4, r5]
 801602e:	2cff      	cmp	r4, #255	; 0xff
 8016030:	d10c      	bne.n	801604c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8016032:	9c00      	ldr	r4, [sp, #0]
 8016034:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8016038:	f06f 0401 	mvn.w	r4, #1
 801603c:	4374      	muls	r4, r6
 801603e:	5305      	strh	r5, [r0, r4]
 8016040:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016042:	4421      	add	r1, r4
 8016044:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016046:	3e01      	subs	r6, #1
 8016048:	4422      	add	r2, r4
 801604a:	e79c      	b.n	8015f86 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801604c:	2c00      	cmp	r4, #0
 801604e:	d0f7      	beq.n	8016040 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8016050:	9f00      	ldr	r7, [sp, #0]
 8016052:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8016056:	f06f 0501 	mvn.w	r5, #1
 801605a:	4375      	muls	r5, r6
 801605c:	9502      	str	r5, [sp, #8]
 801605e:	5b45      	ldrh	r5, [r0, r5]
 8016060:	fa1f fc84 	uxth.w	ip, r4
 8016064:	122f      	asrs	r7, r5, #8
 8016066:	43e4      	mvns	r4, r4
 8016068:	b2e4      	uxtb	r4, r4
 801606a:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801606e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016072:	fb17 f704 	smulbb	r7, r7, r4
 8016076:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801607a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801607e:	00ed      	lsls	r5, r5, #3
 8016080:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8016084:	b2ed      	uxtb	r5, r5
 8016086:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801608a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801608e:	fb15 f504 	smulbb	r5, r5, r4
 8016092:	fa5f f989 	uxtb.w	r9, r9
 8016096:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801609a:	fb09 550c 	mla	r5, r9, ip, r5
 801609e:	fb1a fa04 	smulbb	sl, sl, r4
 80160a2:	fa1f fe8e 	uxth.w	lr, lr
 80160a6:	b2ad      	uxth	r5, r5
 80160a8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80160ac:	fb07 a70c 	mla	r7, r7, ip, sl
 80160b0:	f10e 0401 	add.w	r4, lr, #1
 80160b4:	f105 0a01 	add.w	sl, r5, #1
 80160b8:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 80160bc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80160c0:	b2bf      	uxth	r7, r7
 80160c2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80160c6:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 80160ca:	ea4a 0e0e 	orr.w	lr, sl, lr
 80160ce:	f107 0a01 	add.w	sl, r7, #1
 80160d2:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80160d6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80160da:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80160de:	9c02      	ldr	r4, [sp, #8]
 80160e0:	ea4e 0e0a 	orr.w	lr, lr, sl
 80160e4:	f820 e004 	strh.w	lr, [r0, r4]
 80160e8:	e7aa      	b.n	8016040 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80160ea:	f04f 0900 	mov.w	r9, #0
 80160ee:	eba3 0409 	sub.w	r4, r3, r9
 80160f2:	2c00      	cmp	r4, #0
 80160f4:	f77f af4a 	ble.w	8015f8c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80160f8:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80160fc:	1414      	asrs	r4, r2, #16
 80160fe:	140d      	asrs	r5, r1, #16
 8016100:	fb06 5504 	mla	r5, r6, r4, r5
 8016104:	9c01      	ldr	r4, [sp, #4]
 8016106:	5d64      	ldrb	r4, [r4, r5]
 8016108:	2cff      	cmp	r4, #255	; 0xff
 801610a:	d10b      	bne.n	8016124 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801610c:	9c00      	ldr	r4, [sp, #0]
 801610e:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8016112:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8016116:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016118:	4421      	add	r1, r4
 801611a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801611c:	f109 0901 	add.w	r9, r9, #1
 8016120:	4422      	add	r2, r4
 8016122:	e7e4      	b.n	80160ee <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8016124:	2c00      	cmp	r4, #0
 8016126:	d0f6      	beq.n	8016116 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8016128:	9e00      	ldr	r6, [sp, #0]
 801612a:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801612e:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8016132:	b2a7      	uxth	r7, r4
 8016134:	122e      	asrs	r6, r5, #8
 8016136:	43e4      	mvns	r4, r4
 8016138:	b2e4      	uxtb	r4, r4
 801613a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801613e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8016142:	fb16 f604 	smulbb	r6, r6, r4
 8016146:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801614a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801614e:	00ed      	lsls	r5, r5, #3
 8016150:	fb0c 6c07 	mla	ip, ip, r7, r6
 8016154:	b2ed      	uxtb	r5, r5
 8016156:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801615a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801615e:	fb15 f504 	smulbb	r5, r5, r4
 8016162:	fa5f fe8e 	uxtb.w	lr, lr
 8016166:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801616a:	fb0e 5507 	mla	r5, lr, r7, r5
 801616e:	fb1a fa04 	smulbb	sl, sl, r4
 8016172:	fa1f fc8c 	uxth.w	ip, ip
 8016176:	b2ad      	uxth	r5, r5
 8016178:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801617c:	fb06 a607 	mla	r6, r6, r7, sl
 8016180:	f10c 0401 	add.w	r4, ip, #1
 8016184:	f105 0a01 	add.w	sl, r5, #1
 8016188:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801618c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016190:	b2b6      	uxth	r6, r6
 8016192:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016196:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801619a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801619e:	f106 0a01 	add.w	sl, r6, #1
 80161a2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80161a6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80161aa:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80161ae:	ea4c 0c0a 	orr.w	ip, ip, sl
 80161b2:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 80161b6:	e7ae      	b.n	8016116 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80161b8:	b005      	add	sp, #20
 80161ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080161be <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80161be:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80161c2:	b085      	sub	sp, #20
 80161c4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80161c6:	9203      	str	r2, [sp, #12]
 80161c8:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 80161cc:	9201      	str	r2, [sp, #4]
 80161ce:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80161d2:	9100      	str	r1, [sp, #0]
 80161d4:	6841      	ldr	r1, [r0, #4]
 80161d6:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 80161da:	fb01 2404 	mla	r4, r1, r4, r2
 80161de:	6802      	ldr	r2, [r0, #0]
 80161e0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80161e4:	f8de 2000 	ldr.w	r2, [lr]
 80161e8:	9202      	str	r2, [sp, #8]
 80161ea:	9a01      	ldr	r2, [sp, #4]
 80161ec:	43d6      	mvns	r6, r2
 80161ee:	b2f6      	uxtb	r6, r6
 80161f0:	9a00      	ldr	r2, [sp, #0]
 80161f2:	2a00      	cmp	r2, #0
 80161f4:	dc03      	bgt.n	80161fe <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80161f6:	9a03      	ldr	r2, [sp, #12]
 80161f8:	2a00      	cmp	r2, #0
 80161fa:	f340 8124 	ble.w	8016446 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80161fe:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016200:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8016204:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8016208:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801620c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801620e:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8016212:	2b00      	cmp	r3, #0
 8016214:	dd0e      	ble.n	8016234 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8016216:	1408      	asrs	r0, r1, #16
 8016218:	d405      	bmi.n	8016226 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801621a:	4560      	cmp	r0, ip
 801621c:	da03      	bge.n	8016226 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801621e:	1410      	asrs	r0, r2, #16
 8016220:	d401      	bmi.n	8016226 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8016222:	42b8      	cmp	r0, r7
 8016224:	db07      	blt.n	8016236 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8016226:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016228:	4401      	add	r1, r0
 801622a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801622c:	3b01      	subs	r3, #1
 801622e:	4402      	add	r2, r0
 8016230:	3402      	adds	r4, #2
 8016232:	e7ee      	b.n	8016212 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8016234:	d06e      	beq.n	8016314 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8016236:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8016238:	1e58      	subs	r0, r3, #1
 801623a:	fb05 1500 	mla	r5, r5, r0, r1
 801623e:	142d      	asrs	r5, r5, #16
 8016240:	d45c      	bmi.n	80162fc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8016242:	4565      	cmp	r5, ip
 8016244:	da5a      	bge.n	80162fc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8016246:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8016248:	fb05 2000 	mla	r0, r5, r0, r2
 801624c:	1400      	asrs	r0, r0, #16
 801624e:	d455      	bmi.n	80162fc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8016250:	42b8      	cmp	r0, r7
 8016252:	da53      	bge.n	80162fc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8016254:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8016258:	4699      	mov	r9, r3
 801625a:	46a2      	mov	sl, r4
 801625c:	f1b9 0f00 	cmp.w	r9, #0
 8016260:	dd54      	ble.n	801630c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8016262:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8016266:	140d      	asrs	r5, r1, #16
 8016268:	1410      	asrs	r0, r2, #16
 801626a:	fb07 5000 	mla	r0, r7, r0, r5
 801626e:	9d02      	ldr	r5, [sp, #8]
 8016270:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8016274:	f8ba 5000 	ldrh.w	r5, [sl]
 8016278:	122f      	asrs	r7, r5, #8
 801627a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801627e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016282:	fb17 f706 	smulbb	r7, r7, r6
 8016286:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801628a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801628e:	00ed      	lsls	r5, r5, #3
 8016290:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8016294:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8016298:	10c7      	asrs	r7, r0, #3
 801629a:	b2ed      	uxtb	r5, r5
 801629c:	00c0      	lsls	r0, r0, #3
 801629e:	fb18 f806 	smulbb	r8, r8, r6
 80162a2:	fb15 f506 	smulbb	r5, r5, r6
 80162a6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80162aa:	b2c0      	uxtb	r0, r0
 80162ac:	fa1f fc8c 	uxth.w	ip, ip
 80162b0:	fb07 870b 	mla	r7, r7, fp, r8
 80162b4:	fb00 500b 	mla	r0, r0, fp, r5
 80162b8:	b280      	uxth	r0, r0
 80162ba:	b2bf      	uxth	r7, r7
 80162bc:	f10c 0501 	add.w	r5, ip, #1
 80162c0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80162c4:	f107 0801 	add.w	r8, r7, #1
 80162c8:	1c45      	adds	r5, r0, #1
 80162ca:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80162ce:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80162d2:	9811      	ldr	r0, [sp, #68]	; 0x44
 80162d4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80162d8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80162dc:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80162e0:	ea45 0c0c 	orr.w	ip, r5, ip
 80162e4:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80162e8:	4401      	add	r1, r0
 80162ea:	9812      	ldr	r0, [sp, #72]	; 0x48
 80162ec:	ea4c 0c08 	orr.w	ip, ip, r8
 80162f0:	f82a cb02 	strh.w	ip, [sl], #2
 80162f4:	4402      	add	r2, r0
 80162f6:	f109 39ff 	add.w	r9, r9, #4294967295
 80162fa:	e7af      	b.n	801625c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80162fc:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8016300:	f04f 0800 	mov.w	r8, #0
 8016304:	eb03 0008 	add.w	r0, r3, r8
 8016308:	2800      	cmp	r0, #0
 801630a:	dc41      	bgt.n	8016390 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801630c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016310:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016314:	9b00      	ldr	r3, [sp, #0]
 8016316:	2b00      	cmp	r3, #0
 8016318:	f340 8095 	ble.w	8016446 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801631c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016320:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016324:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8016328:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801632a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801632e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016332:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016336:	eef0 6a62 	vmov.f32	s13, s5
 801633a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801633e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016342:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016346:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801634a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801634e:	eef0 6a43 	vmov.f32	s13, s6
 8016352:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016356:	ee12 2a90 	vmov	r2, s5
 801635a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801635e:	fb92 f3f3 	sdiv	r3, r2, r3
 8016362:	ee13 2a10 	vmov	r2, s6
 8016366:	9311      	str	r3, [sp, #68]	; 0x44
 8016368:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801636a:	fb92 f3f3 	sdiv	r3, r2, r3
 801636e:	9312      	str	r3, [sp, #72]	; 0x48
 8016370:	9b00      	ldr	r3, [sp, #0]
 8016372:	9a03      	ldr	r2, [sp, #12]
 8016374:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016378:	3b01      	subs	r3, #1
 801637a:	9300      	str	r3, [sp, #0]
 801637c:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8016380:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016382:	eeb0 3a67 	vmov.f32	s6, s15
 8016386:	bf08      	it	eq
 8016388:	4613      	moveq	r3, r2
 801638a:	eef0 2a47 	vmov.f32	s5, s14
 801638e:	e72f      	b.n	80161f0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8016390:	140f      	asrs	r7, r1, #16
 8016392:	d451      	bmi.n	8016438 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8016394:	f8de 5008 	ldr.w	r5, [lr, #8]
 8016398:	42bd      	cmp	r5, r7
 801639a:	dd4d      	ble.n	8016438 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801639c:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80163a0:	d44a      	bmi.n	8016438 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80163a2:	f8de 000c 	ldr.w	r0, [lr, #12]
 80163a6:	4560      	cmp	r0, ip
 80163a8:	dd46      	ble.n	8016438 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80163aa:	b22d      	sxth	r5, r5
 80163ac:	fb0c 7505 	mla	r5, ip, r5, r7
 80163b0:	9802      	ldr	r0, [sp, #8]
 80163b2:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 80163b6:	f06f 0501 	mvn.w	r5, #1
 80163ba:	fb05 fb08 	mul.w	fp, r5, r8
 80163be:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80163c2:	f834 500b 	ldrh.w	r5, [r4, fp]
 80163c6:	122f      	asrs	r7, r5, #8
 80163c8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80163cc:	fb17 f706 	smulbb	r7, r7, r6
 80163d0:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80163d4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80163d8:	00ed      	lsls	r5, r5, #3
 80163da:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80163de:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80163e2:	10c7      	asrs	r7, r0, #3
 80163e4:	b2ed      	uxtb	r5, r5
 80163e6:	00c0      	lsls	r0, r0, #3
 80163e8:	fb19 f906 	smulbb	r9, r9, r6
 80163ec:	fb15 f506 	smulbb	r5, r5, r6
 80163f0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80163f4:	b2c0      	uxtb	r0, r0
 80163f6:	fa1f fc8c 	uxth.w	ip, ip
 80163fa:	fb07 970a 	mla	r7, r7, sl, r9
 80163fe:	fb00 500a 	mla	r0, r0, sl, r5
 8016402:	b2bf      	uxth	r7, r7
 8016404:	b280      	uxth	r0, r0
 8016406:	f10c 0501 	add.w	r5, ip, #1
 801640a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801640e:	f107 0901 	add.w	r9, r7, #1
 8016412:	1c45      	adds	r5, r0, #1
 8016414:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8016418:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801641c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016420:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8016424:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8016428:	ea45 0c0c 	orr.w	ip, r5, ip
 801642c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8016430:	ea4c 0c09 	orr.w	ip, ip, r9
 8016434:	f824 c00b 	strh.w	ip, [r4, fp]
 8016438:	9811      	ldr	r0, [sp, #68]	; 0x44
 801643a:	4401      	add	r1, r0
 801643c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801643e:	f108 38ff 	add.w	r8, r8, #4294967295
 8016442:	4402      	add	r2, r0
 8016444:	e75e      	b.n	8016304 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8016446:	b005      	add	sp, #20
 8016448:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801644c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801644c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016450:	b085      	sub	sp, #20
 8016452:	4693      	mov	fp, r2
 8016454:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8016456:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8016458:	6870      	ldr	r0, [r6, #4]
 801645a:	9101      	str	r1, [sp, #4]
 801645c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8016460:	fb00 2404 	mla	r4, r0, r4, r2
 8016464:	6832      	ldr	r2, [r6, #0]
 8016466:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801646a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801646e:	682a      	ldr	r2, [r5, #0]
 8016470:	9202      	str	r2, [sp, #8]
 8016472:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016476:	9a01      	ldr	r2, [sp, #4]
 8016478:	2a00      	cmp	r2, #0
 801647a:	dc03      	bgt.n	8016484 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801647c:	f1bb 0f00 	cmp.w	fp, #0
 8016480:	f340 809a 	ble.w	80165b8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8016484:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016486:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801648a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801648e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8016492:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016494:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8016498:	2b00      	cmp	r3, #0
 801649a:	dd0c      	ble.n	80164b6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801649c:	1406      	asrs	r6, r0, #16
 801649e:	d405      	bmi.n	80164ac <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80164a0:	454e      	cmp	r6, r9
 80164a2:	da03      	bge.n	80164ac <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80164a4:	1416      	asrs	r6, r2, #16
 80164a6:	d401      	bmi.n	80164ac <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80164a8:	4546      	cmp	r6, r8
 80164aa:	db05      	blt.n	80164b8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80164ac:	4470      	add	r0, lr
 80164ae:	4462      	add	r2, ip
 80164b0:	3b01      	subs	r3, #1
 80164b2:	3402      	adds	r4, #2
 80164b4:	e7f0      	b.n	8016498 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80164b6:	d00f      	beq.n	80164d8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80164b8:	1e5e      	subs	r6, r3, #1
 80164ba:	fb0e 0706 	mla	r7, lr, r6, r0
 80164be:	143f      	asrs	r7, r7, #16
 80164c0:	d541      	bpl.n	8016546 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 80164c2:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80164c6:	4698      	mov	r8, r3
 80164c8:	9603      	str	r6, [sp, #12]
 80164ca:	f1b8 0f00 	cmp.w	r8, #0
 80164ce:	dc56      	bgt.n	801657e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 80164d0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80164d4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80164d8:	9b01      	ldr	r3, [sp, #4]
 80164da:	2b00      	cmp	r3, #0
 80164dc:	dd6c      	ble.n	80165b8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80164de:	ee30 0a04 	vadd.f32	s0, s0, s8
 80164e2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80164e6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80164ea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80164ec:	ee31 1a05 	vadd.f32	s2, s2, s10
 80164f0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80164f4:	eeb0 6a62 	vmov.f32	s12, s5
 80164f8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80164fc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016500:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016504:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8016508:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801650c:	eeb0 6a43 	vmov.f32	s12, s6
 8016510:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016514:	ee12 2a90 	vmov	r2, s5
 8016518:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801651c:	fb92 fef3 	sdiv	lr, r2, r3
 8016520:	ee13 2a10 	vmov	r2, s6
 8016524:	fb92 fcf3 	sdiv	ip, r2, r3
 8016528:	9b01      	ldr	r3, [sp, #4]
 801652a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801652e:	3b01      	subs	r3, #1
 8016530:	9301      	str	r3, [sp, #4]
 8016532:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8016536:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016538:	eeb0 3a67 	vmov.f32	s6, s15
 801653c:	bf08      	it	eq
 801653e:	465b      	moveq	r3, fp
 8016540:	eef0 2a47 	vmov.f32	s5, s14
 8016544:	e797      	b.n	8016476 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8016546:	454f      	cmp	r7, r9
 8016548:	dabb      	bge.n	80164c2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801654a:	fb0c 2606 	mla	r6, ip, r6, r2
 801654e:	1436      	asrs	r6, r6, #16
 8016550:	d4b7      	bmi.n	80164c2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8016552:	4546      	cmp	r6, r8
 8016554:	dab5      	bge.n	80164c2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8016556:	461e      	mov	r6, r3
 8016558:	46a0      	mov	r8, r4
 801655a:	2e00      	cmp	r6, #0
 801655c:	ddb8      	ble.n	80164d0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801655e:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8016562:	9902      	ldr	r1, [sp, #8]
 8016564:	1417      	asrs	r7, r2, #16
 8016566:	ea4f 4920 	mov.w	r9, r0, asr #16
 801656a:	fb0a 9707 	mla	r7, sl, r7, r9
 801656e:	4470      	add	r0, lr
 8016570:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8016574:	f828 7b02 	strh.w	r7, [r8], #2
 8016578:	4462      	add	r2, ip
 801657a:	3e01      	subs	r6, #1
 801657c:	e7ed      	b.n	801655a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801657e:	ea5f 4920 	movs.w	r9, r0, asr #16
 8016582:	d414      	bmi.n	80165ae <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8016584:	68ae      	ldr	r6, [r5, #8]
 8016586:	454e      	cmp	r6, r9
 8016588:	dd11      	ble.n	80165ae <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801658a:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801658e:	d40e      	bmi.n	80165ae <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8016590:	68ef      	ldr	r7, [r5, #12]
 8016592:	4557      	cmp	r7, sl
 8016594:	dd0b      	ble.n	80165ae <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8016596:	b236      	sxth	r6, r6
 8016598:	fb0a 9606 	mla	r6, sl, r6, r9
 801659c:	9f02      	ldr	r7, [sp, #8]
 801659e:	f06f 0101 	mvn.w	r1, #1
 80165a2:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 80165a6:	fb01 f608 	mul.w	r6, r1, r8
 80165aa:	9903      	ldr	r1, [sp, #12]
 80165ac:	538f      	strh	r7, [r1, r6]
 80165ae:	4470      	add	r0, lr
 80165b0:	4462      	add	r2, ip
 80165b2:	f108 38ff 	add.w	r8, r8, #4294967295
 80165b6:	e788      	b.n	80164ca <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80165b8:	b005      	add	sp, #20
 80165ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080165be <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80165be:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80165c2:	b087      	sub	sp, #28
 80165c4:	468b      	mov	fp, r1
 80165c6:	9815      	ldr	r0, [sp, #84]	; 0x54
 80165c8:	9203      	str	r2, [sp, #12]
 80165ca:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80165ce:	9204      	str	r2, [sp, #16]
 80165d0:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 80165d4:	6841      	ldr	r1, [r0, #4]
 80165d6:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 80165da:	fb01 2505 	mla	r5, r1, r5, r2
 80165de:	6802      	ldr	r2, [r0, #0]
 80165e0:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 80165e4:	f8d9 2000 	ldr.w	r2, [r9]
 80165e8:	9201      	str	r2, [sp, #4]
 80165ea:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80165ee:	f1bb 0f00 	cmp.w	fp, #0
 80165f2:	dc03      	bgt.n	80165fc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80165f4:	9a03      	ldr	r2, [sp, #12]
 80165f6:	2a00      	cmp	r2, #0
 80165f8:	f340 8159 	ble.w	80168ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80165fc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80165fe:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8016602:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8016606:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801660a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801660c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8016610:	2b00      	cmp	r3, #0
 8016612:	dd0e      	ble.n	8016632 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8016614:	1402      	asrs	r2, r0, #16
 8016616:	d405      	bmi.n	8016624 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016618:	42ba      	cmp	r2, r7
 801661a:	da03      	bge.n	8016624 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801661c:	140a      	asrs	r2, r1, #16
 801661e:	d401      	bmi.n	8016624 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016620:	42b2      	cmp	r2, r6
 8016622:	db07      	blt.n	8016634 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8016624:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016626:	4410      	add	r0, r2
 8016628:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801662a:	3b01      	subs	r3, #1
 801662c:	4411      	add	r1, r2
 801662e:	3502      	adds	r5, #2
 8016630:	e7ee      	b.n	8016610 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8016632:	d017      	beq.n	8016664 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8016634:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016636:	1e5a      	subs	r2, r3, #1
 8016638:	fb04 0402 	mla	r4, r4, r2, r0
 801663c:	1424      	asrs	r4, r4, #16
 801663e:	d409      	bmi.n	8016654 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016640:	42bc      	cmp	r4, r7
 8016642:	da07      	bge.n	8016654 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016644:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016646:	fb04 1202 	mla	r2, r4, r2, r1
 801664a:	1412      	asrs	r2, r2, #16
 801664c:	d402      	bmi.n	8016654 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801664e:	42b2      	cmp	r2, r6
 8016650:	f2c0 80bf 	blt.w	80167d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8016654:	2700      	movs	r7, #0
 8016656:	19da      	adds	r2, r3, r7
 8016658:	2a00      	cmp	r2, #0
 801665a:	dc3e      	bgt.n	80166da <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801665c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016660:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8016664:	f1bb 0f00 	cmp.w	fp, #0
 8016668:	f340 8121 	ble.w	80168ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801666c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016670:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016674:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016678:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801667a:	f1bb 0b01 	subs.w	fp, fp, #1
 801667e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016682:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016686:	eeb0 6a62 	vmov.f32	s12, s5
 801668a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801668e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016692:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016696:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801669a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801669e:	eeb0 6a43 	vmov.f32	s12, s6
 80166a2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80166a6:	ee12 2a90 	vmov	r2, s5
 80166aa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80166ae:	fb92 f3f3 	sdiv	r3, r2, r3
 80166b2:	ee13 2a10 	vmov	r2, s6
 80166b6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80166ba:	9313      	str	r3, [sp, #76]	; 0x4c
 80166bc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80166be:	fb92 f3f3 	sdiv	r3, r2, r3
 80166c2:	9a03      	ldr	r2, [sp, #12]
 80166c4:	9314      	str	r3, [sp, #80]	; 0x50
 80166c6:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80166ca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80166cc:	eeb0 3a67 	vmov.f32	s6, s15
 80166d0:	bf08      	it	eq
 80166d2:	4613      	moveq	r3, r2
 80166d4:	eef0 2a47 	vmov.f32	s5, s14
 80166d8:	e789      	b.n	80165ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80166da:	1406      	asrs	r6, r0, #16
 80166dc:	d42d      	bmi.n	801673a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80166de:	f8d9 4008 	ldr.w	r4, [r9, #8]
 80166e2:	42b4      	cmp	r4, r6
 80166e4:	dd29      	ble.n	801673a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80166e6:	ea5f 4c21 	movs.w	ip, r1, asr #16
 80166ea:	d426      	bmi.n	801673a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80166ec:	f8d9 200c 	ldr.w	r2, [r9, #12]
 80166f0:	4562      	cmp	r2, ip
 80166f2:	dd22      	ble.n	801673a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80166f4:	b224      	sxth	r4, r4
 80166f6:	9a01      	ldr	r2, [sp, #4]
 80166f8:	fb0c 6404 	mla	r4, ip, r4, r6
 80166fc:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8016700:	0e22      	lsrs	r2, r4, #24
 8016702:	d01a      	beq.n	801673a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8016704:	9e04      	ldr	r6, [sp, #16]
 8016706:	4372      	muls	r2, r6
 8016708:	1c56      	adds	r6, r2, #1
 801670a:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801670e:	1212      	asrs	r2, r2, #8
 8016710:	0a26      	lsrs	r6, r4, #8
 8016712:	2aff      	cmp	r2, #255	; 0xff
 8016714:	9605      	str	r6, [sp, #20]
 8016716:	d116      	bne.n	8016746 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8016718:	f06f 0201 	mvn.w	r2, #1
 801671c:	fb02 fc07 	mul.w	ip, r2, r7
 8016720:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8016724:	0962      	lsrs	r2, r4, #5
 8016726:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801672a:	f026 0607 	bic.w	r6, r6, #7
 801672e:	4316      	orrs	r6, r2
 8016730:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8016734:	4326      	orrs	r6, r4
 8016736:	f825 600c 	strh.w	r6, [r5, ip]
 801673a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801673c:	4410      	add	r0, r2
 801673e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016740:	3f01      	subs	r7, #1
 8016742:	4411      	add	r1, r2
 8016744:	e787      	b.n	8016656 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8016746:	f06f 0601 	mvn.w	r6, #1
 801674a:	437e      	muls	r6, r7
 801674c:	fa1f fa82 	uxth.w	sl, r2
 8016750:	f835 8006 	ldrh.w	r8, [r5, r6]
 8016754:	9602      	str	r6, [sp, #8]
 8016756:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801675a:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801675e:	43d2      	mvns	r2, r2
 8016760:	b2d2      	uxtb	r2, r2
 8016762:	fb1c fc0a 	smulbb	ip, ip, sl
 8016766:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801676a:	fb0e ce02 	mla	lr, lr, r2, ip
 801676e:	b2e4      	uxtb	r4, r4
 8016770:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8016774:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8016778:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801677c:	fa5f f888 	uxtb.w	r8, r8
 8016780:	fb14 f40a 	smulbb	r4, r4, sl
 8016784:	fb08 4402 	mla	r4, r8, r2, r4
 8016788:	fa1f fe8e 	uxth.w	lr, lr
 801678c:	fb16 f60a 	smulbb	r6, r6, sl
 8016790:	b2a4      	uxth	r4, r4
 8016792:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8016796:	fb0c 6c02 	mla	ip, ip, r2, r6
 801679a:	f10e 0201 	add.w	r2, lr, #1
 801679e:	1c66      	adds	r6, r4, #1
 80167a0:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 80167a4:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80167a8:	fa1f fc8c 	uxth.w	ip, ip
 80167ac:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80167b0:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 80167b4:	ea46 0e0e 	orr.w	lr, r6, lr
 80167b8:	f10c 0601 	add.w	r6, ip, #1
 80167bc:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 80167c0:	0976      	lsrs	r6, r6, #5
 80167c2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80167c6:	9a02      	ldr	r2, [sp, #8]
 80167c8:	ea4e 0e06 	orr.w	lr, lr, r6
 80167cc:	f825 e002 	strh.w	lr, [r5, r2]
 80167d0:	e7b3      	b.n	801673a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80167d2:	f04f 0800 	mov.w	r8, #0
 80167d6:	eba3 0208 	sub.w	r2, r3, r8
 80167da:	2a00      	cmp	r2, #0
 80167dc:	f77f af3e 	ble.w	801665c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80167e0:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 80167e4:	1404      	asrs	r4, r0, #16
 80167e6:	140a      	asrs	r2, r1, #16
 80167e8:	fb06 4202 	mla	r2, r6, r2, r4
 80167ec:	9c01      	ldr	r4, [sp, #4]
 80167ee:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 80167f2:	0e22      	lsrs	r2, r4, #24
 80167f4:	d016      	beq.n	8016824 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 80167f6:	9e04      	ldr	r6, [sp, #16]
 80167f8:	4372      	muls	r2, r6
 80167fa:	1c56      	adds	r6, r2, #1
 80167fc:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8016800:	1212      	asrs	r2, r2, #8
 8016802:	2aff      	cmp	r2, #255	; 0xff
 8016804:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8016808:	d113      	bne.n	8016832 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801680a:	0962      	lsrs	r2, r4, #5
 801680c:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8016810:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016814:	f026 0607 	bic.w	r6, r6, #7
 8016818:	4316      	orrs	r6, r2
 801681a:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801681e:	4326      	orrs	r6, r4
 8016820:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8016824:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016826:	4410      	add	r0, r2
 8016828:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801682a:	f108 0801 	add.w	r8, r8, #1
 801682e:	4411      	add	r1, r2
 8016830:	e7d1      	b.n	80167d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8016832:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8016836:	fa1f fa82 	uxth.w	sl, r2
 801683a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801683e:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8016842:	43d2      	mvns	r2, r2
 8016844:	b2d2      	uxtb	r2, r2
 8016846:	fb17 f70a 	smulbb	r7, r7, sl
 801684a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801684e:	fb0c 7c02 	mla	ip, ip, r2, r7
 8016852:	b2e4      	uxtb	r4, r4
 8016854:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8016858:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801685c:	fa5f fe8e 	uxtb.w	lr, lr
 8016860:	fb14 f40a 	smulbb	r4, r4, sl
 8016864:	fb0e 4402 	mla	r4, lr, r2, r4
 8016868:	b2f6      	uxtb	r6, r6
 801686a:	fa1f fc8c 	uxth.w	ip, ip
 801686e:	fb16 f60a 	smulbb	r6, r6, sl
 8016872:	b2a4      	uxth	r4, r4
 8016874:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016878:	fb07 6702 	mla	r7, r7, r2, r6
 801687c:	f10c 0201 	add.w	r2, ip, #1
 8016880:	1c66      	adds	r6, r4, #1
 8016882:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8016886:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801688a:	b2bf      	uxth	r7, r7
 801688c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016890:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016894:	ea46 0c0c 	orr.w	ip, r6, ip
 8016898:	1c7e      	adds	r6, r7, #1
 801689a:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801689e:	0976      	lsrs	r6, r6, #5
 80168a0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80168a4:	ea4c 0c06 	orr.w	ip, ip, r6
 80168a8:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 80168ac:	e7ba      	b.n	8016824 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 80168ae:	b007      	add	sp, #28
 80168b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080168b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80168b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80168b8:	b085      	sub	sp, #20
 80168ba:	468b      	mov	fp, r1
 80168bc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80168be:	9203      	str	r2, [sp, #12]
 80168c0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80168c4:	6841      	ldr	r1, [r0, #4]
 80168c6:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 80168ca:	fb01 2404 	mla	r4, r1, r4, r2
 80168ce:	6802      	ldr	r2, [r0, #0]
 80168d0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80168d4:	f8d8 2000 	ldr.w	r2, [r8]
 80168d8:	9201      	str	r2, [sp, #4]
 80168da:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80168de:	f1bb 0f00 	cmp.w	fp, #0
 80168e2:	dc03      	bgt.n	80168ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80168e4:	9a03      	ldr	r2, [sp, #12]
 80168e6:	2a00      	cmp	r2, #0
 80168e8:	f340 814f 	ble.w	8016b8a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80168ec:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80168ee:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80168f2:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80168f6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80168fa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80168fc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8016900:	2b00      	cmp	r3, #0
 8016902:	dd0e      	ble.n	8016922 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8016904:	1408      	asrs	r0, r1, #16
 8016906:	d405      	bmi.n	8016914 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016908:	42b8      	cmp	r0, r7
 801690a:	da03      	bge.n	8016914 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801690c:	1410      	asrs	r0, r2, #16
 801690e:	d401      	bmi.n	8016914 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016910:	42b0      	cmp	r0, r6
 8016912:	db07      	blt.n	8016924 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016914:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016916:	4401      	add	r1, r0
 8016918:	9812      	ldr	r0, [sp, #72]	; 0x48
 801691a:	3b01      	subs	r3, #1
 801691c:	4402      	add	r2, r0
 801691e:	3402      	adds	r4, #2
 8016920:	e7ee      	b.n	8016900 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8016922:	d017      	beq.n	8016954 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016924:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8016926:	1e58      	subs	r0, r3, #1
 8016928:	fb05 1500 	mla	r5, r5, r0, r1
 801692c:	142d      	asrs	r5, r5, #16
 801692e:	d409      	bmi.n	8016944 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8016930:	42bd      	cmp	r5, r7
 8016932:	da07      	bge.n	8016944 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8016934:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8016936:	fb05 2000 	mla	r0, r5, r0, r2
 801693a:	1400      	asrs	r0, r0, #16
 801693c:	d402      	bmi.n	8016944 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801693e:	42b0      	cmp	r0, r6
 8016940:	f2c0 80ba 	blt.w	8016ab8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8016944:	2600      	movs	r6, #0
 8016946:	1998      	adds	r0, r3, r6
 8016948:	2800      	cmp	r0, #0
 801694a:	dc3e      	bgt.n	80169ca <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801694c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016950:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016954:	f1bb 0f00 	cmp.w	fp, #0
 8016958:	f340 8117 	ble.w	8016b8a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801695c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016960:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016964:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016968:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801696a:	f1bb 0b01 	subs.w	fp, fp, #1
 801696e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016972:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016976:	eeb0 6a62 	vmov.f32	s12, s5
 801697a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801697e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016982:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016986:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801698a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801698e:	eeb0 6a43 	vmov.f32	s12, s6
 8016992:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016996:	ee12 2a90 	vmov	r2, s5
 801699a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801699e:	fb92 f3f3 	sdiv	r3, r2, r3
 80169a2:	ee13 2a10 	vmov	r2, s6
 80169a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80169aa:	9311      	str	r3, [sp, #68]	; 0x44
 80169ac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80169ae:	fb92 f3f3 	sdiv	r3, r2, r3
 80169b2:	9a03      	ldr	r2, [sp, #12]
 80169b4:	9312      	str	r3, [sp, #72]	; 0x48
 80169b6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80169ba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80169bc:	eeb0 3a67 	vmov.f32	s6, s15
 80169c0:	bf08      	it	eq
 80169c2:	4613      	moveq	r3, r2
 80169c4:	eef0 2a47 	vmov.f32	s5, s14
 80169c8:	e789      	b.n	80168de <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80169ca:	140f      	asrs	r7, r1, #16
 80169cc:	d424      	bmi.n	8016a18 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80169ce:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80169d2:	42bd      	cmp	r5, r7
 80169d4:	dd20      	ble.n	8016a18 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80169d6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80169da:	d41d      	bmi.n	8016a18 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80169dc:	f8d8 000c 	ldr.w	r0, [r8, #12]
 80169e0:	4560      	cmp	r0, ip
 80169e2:	dd19      	ble.n	8016a18 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80169e4:	b22d      	sxth	r5, r5
 80169e6:	fb0c 7505 	mla	r5, ip, r5, r7
 80169ea:	9801      	ldr	r0, [sp, #4]
 80169ec:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 80169f0:	0e07      	lsrs	r7, r0, #24
 80169f2:	2fff      	cmp	r7, #255	; 0xff
 80169f4:	d116      	bne.n	8016a24 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80169f6:	f06f 0501 	mvn.w	r5, #1
 80169fa:	fb05 f706 	mul.w	r7, r5, r6
 80169fe:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8016a02:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8016a06:	0945      	lsrs	r5, r0, #5
 8016a08:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8016a0c:	ea4c 0505 	orr.w	r5, ip, r5
 8016a10:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8016a14:	4305      	orrs	r5, r0
 8016a16:	53e5      	strh	r5, [r4, r7]
 8016a18:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016a1a:	4401      	add	r1, r0
 8016a1c:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016a1e:	3e01      	subs	r6, #1
 8016a20:	4402      	add	r2, r0
 8016a22:	e790      	b.n	8016946 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016a24:	b2fd      	uxtb	r5, r7
 8016a26:	2f00      	cmp	r7, #0
 8016a28:	d0f6      	beq.n	8016a18 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016a2a:	f06f 0701 	mvn.w	r7, #1
 8016a2e:	4377      	muls	r7, r6
 8016a30:	fa1f f985 	uxth.w	r9, r5
 8016a34:	f834 e007 	ldrh.w	lr, [r4, r7]
 8016a38:	9702      	str	r7, [sp, #8]
 8016a3a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8016a3e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8016a42:	43ed      	mvns	r5, r5
 8016a44:	b2ed      	uxtb	r5, r5
 8016a46:	fb17 f709 	smulbb	r7, r7, r9
 8016a4a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016a4e:	fb0c 7c05 	mla	ip, ip, r5, r7
 8016a52:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8016a56:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8016a5a:	b2c0      	uxtb	r0, r0
 8016a5c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016a60:	fa5f fe8e 	uxtb.w	lr, lr
 8016a64:	fb10 f009 	smulbb	r0, r0, r9
 8016a68:	fb0e 0005 	mla	r0, lr, r5, r0
 8016a6c:	b280      	uxth	r0, r0
 8016a6e:	fa1f fc8c 	uxth.w	ip, ip
 8016a72:	fb1a fa09 	smulbb	sl, sl, r9
 8016a76:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016a7a:	fb07 a705 	mla	r7, r7, r5, sl
 8016a7e:	f100 0a01 	add.w	sl, r0, #1
 8016a82:	f10c 0501 	add.w	r5, ip, #1
 8016a86:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8016a8a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8016a8e:	b2bf      	uxth	r7, r7
 8016a90:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016a94:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016a98:	ea4a 0c0c 	orr.w	ip, sl, ip
 8016a9c:	f107 0a01 	add.w	sl, r7, #1
 8016aa0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8016aa4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016aa8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016aac:	9802      	ldr	r0, [sp, #8]
 8016aae:	ea4c 0c0a 	orr.w	ip, ip, sl
 8016ab2:	f824 c000 	strh.w	ip, [r4, r0]
 8016ab6:	e7af      	b.n	8016a18 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016ab8:	f04f 0e00 	mov.w	lr, #0
 8016abc:	eba3 000e 	sub.w	r0, r3, lr
 8016ac0:	2800      	cmp	r0, #0
 8016ac2:	f77f af43 	ble.w	801694c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8016ac6:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8016aca:	140d      	asrs	r5, r1, #16
 8016acc:	1410      	asrs	r0, r2, #16
 8016ace:	fb06 5000 	mla	r0, r6, r0, r5
 8016ad2:	9d01      	ldr	r5, [sp, #4]
 8016ad4:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8016ad8:	0e2e      	lsrs	r6, r5, #24
 8016ada:	2eff      	cmp	r6, #255	; 0xff
 8016adc:	d112      	bne.n	8016b04 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8016ade:	482c      	ldr	r0, [pc, #176]	; (8016b90 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8016ae0:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8016ae4:	0968      	lsrs	r0, r5, #5
 8016ae6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016aea:	4330      	orrs	r0, r6
 8016aec:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8016af0:	4328      	orrs	r0, r5
 8016af2:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8016af6:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016af8:	4401      	add	r1, r0
 8016afa:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016afc:	f10e 0e01 	add.w	lr, lr, #1
 8016b00:	4402      	add	r2, r0
 8016b02:	e7db      	b.n	8016abc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8016b04:	b2f0      	uxtb	r0, r6
 8016b06:	2e00      	cmp	r6, #0
 8016b08:	d0f5      	beq.n	8016af6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8016b0a:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8016b0e:	fa1f f980 	uxth.w	r9, r0
 8016b12:	ea4f 272c 	mov.w	r7, ip, asr #8
 8016b16:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8016b1a:	43c0      	mvns	r0, r0
 8016b1c:	b2c0      	uxtb	r0, r0
 8016b1e:	fb16 f609 	smulbb	r6, r6, r9
 8016b22:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016b26:	fb07 6700 	mla	r7, r7, r0, r6
 8016b2a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8016b2e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8016b32:	b2ed      	uxtb	r5, r5
 8016b34:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016b38:	fa5f fc8c 	uxtb.w	ip, ip
 8016b3c:	fb15 f509 	smulbb	r5, r5, r9
 8016b40:	fb0c 5500 	mla	r5, ip, r0, r5
 8016b44:	b2bf      	uxth	r7, r7
 8016b46:	fb1a fa09 	smulbb	sl, sl, r9
 8016b4a:	b2ad      	uxth	r5, r5
 8016b4c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016b50:	fb06 a600 	mla	r6, r6, r0, sl
 8016b54:	1c78      	adds	r0, r7, #1
 8016b56:	f105 0a01 	add.w	sl, r5, #1
 8016b5a:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8016b5e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016b62:	b2b6      	uxth	r6, r6
 8016b64:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016b68:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016b6c:	ea4a 0707 	orr.w	r7, sl, r7
 8016b70:	f106 0a01 	add.w	sl, r6, #1
 8016b74:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016b78:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016b7c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016b80:	ea47 070a 	orr.w	r7, r7, sl
 8016b84:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8016b88:	e7b5      	b.n	8016af6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8016b8a:	b005      	add	sp, #20
 8016b8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016b90:	fffff800 	.word	0xfffff800

08016b94 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016b94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016b98:	b087      	sub	sp, #28
 8016b9a:	468b      	mov	fp, r1
 8016b9c:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016b9e:	9203      	str	r2, [sp, #12]
 8016ba0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8016ba4:	9204      	str	r2, [sp, #16]
 8016ba6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8016baa:	6841      	ldr	r1, [r0, #4]
 8016bac:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8016bb0:	fb01 2404 	mla	r4, r1, r4, r2
 8016bb4:	6802      	ldr	r2, [r0, #0]
 8016bb6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016bba:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8016bbe:	3201      	adds	r2, #1
 8016bc0:	f022 0201 	bic.w	r2, r2, #1
 8016bc4:	9200      	str	r2, [sp, #0]
 8016bc6:	f8d9 2000 	ldr.w	r2, [r9]
 8016bca:	9201      	str	r2, [sp, #4]
 8016bcc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016bd0:	f1bb 0f00 	cmp.w	fp, #0
 8016bd4:	dc03      	bgt.n	8016bde <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8016bd6:	9a03      	ldr	r2, [sp, #12]
 8016bd8:	2a00      	cmp	r2, #0
 8016bda:	f340 8169 	ble.w	8016eb0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8016bde:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016be0:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8016be4:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8016be8:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8016bec:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016bee:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8016bf2:	2b00      	cmp	r3, #0
 8016bf4:	dd0e      	ble.n	8016c14 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8016bf6:	1402      	asrs	r2, r0, #16
 8016bf8:	d405      	bmi.n	8016c06 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016bfa:	42ba      	cmp	r2, r7
 8016bfc:	da03      	bge.n	8016c06 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016bfe:	140a      	asrs	r2, r1, #16
 8016c00:	d401      	bmi.n	8016c06 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016c02:	42b2      	cmp	r2, r6
 8016c04:	db07      	blt.n	8016c16 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8016c06:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016c08:	4410      	add	r0, r2
 8016c0a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016c0c:	3b01      	subs	r3, #1
 8016c0e:	4411      	add	r1, r2
 8016c10:	3402      	adds	r4, #2
 8016c12:	e7ee      	b.n	8016bf2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8016c14:	d017      	beq.n	8016c46 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8016c16:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8016c18:	1e5a      	subs	r2, r3, #1
 8016c1a:	fb05 0502 	mla	r5, r5, r2, r0
 8016c1e:	142d      	asrs	r5, r5, #16
 8016c20:	d409      	bmi.n	8016c36 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8016c22:	42bd      	cmp	r5, r7
 8016c24:	da07      	bge.n	8016c36 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8016c26:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8016c28:	fb05 1202 	mla	r2, r5, r2, r1
 8016c2c:	1412      	asrs	r2, r2, #16
 8016c2e:	d402      	bmi.n	8016c36 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8016c30:	42b2      	cmp	r2, r6
 8016c32:	f2c0 80c7 	blt.w	8016dc4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8016c36:	2700      	movs	r7, #0
 8016c38:	19da      	adds	r2, r3, r7
 8016c3a:	2a00      	cmp	r2, #0
 8016c3c:	dc3e      	bgt.n	8016cbc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8016c3e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016c42:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016c46:	f1bb 0f00 	cmp.w	fp, #0
 8016c4a:	f340 8131 	ble.w	8016eb0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8016c4e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016c52:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016c56:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016c5a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016c5c:	f1bb 0b01 	subs.w	fp, fp, #1
 8016c60:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016c64:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016c68:	eeb0 6a62 	vmov.f32	s12, s5
 8016c6c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016c70:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016c74:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016c78:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016c7c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016c80:	eeb0 6a43 	vmov.f32	s12, s6
 8016c84:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016c88:	ee12 2a90 	vmov	r2, s5
 8016c8c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016c90:	fb92 f3f3 	sdiv	r3, r2, r3
 8016c94:	ee13 2a10 	vmov	r2, s6
 8016c98:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016c9c:	9313      	str	r3, [sp, #76]	; 0x4c
 8016c9e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016ca0:	fb92 f3f3 	sdiv	r3, r2, r3
 8016ca4:	9a03      	ldr	r2, [sp, #12]
 8016ca6:	9314      	str	r3, [sp, #80]	; 0x50
 8016ca8:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8016cac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016cae:	eeb0 3a67 	vmov.f32	s6, s15
 8016cb2:	bf08      	it	eq
 8016cb4:	4613      	moveq	r3, r2
 8016cb6:	eef0 2a47 	vmov.f32	s5, s14
 8016cba:	e789      	b.n	8016bd0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8016cbc:	1405      	asrs	r5, r0, #16
 8016cbe:	d435      	bmi.n	8016d2c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016cc0:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8016cc4:	42aa      	cmp	r2, r5
 8016cc6:	dd31      	ble.n	8016d2c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016cc8:	140e      	asrs	r6, r1, #16
 8016cca:	d42f      	bmi.n	8016d2c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016ccc:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8016cd0:	42b2      	cmp	r2, r6
 8016cd2:	dd2b      	ble.n	8016d2c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016cd4:	9a00      	ldr	r2, [sp, #0]
 8016cd6:	fb06 5502 	mla	r5, r6, r2, r5
 8016cda:	086a      	lsrs	r2, r5, #1
 8016cdc:	9e01      	ldr	r6, [sp, #4]
 8016cde:	5cb2      	ldrb	r2, [r6, r2]
 8016ce0:	07ee      	lsls	r6, r5, #31
 8016ce2:	bf54      	ite	pl
 8016ce4:	f002 020f 	andpl.w	r2, r2, #15
 8016ce8:	1112      	asrmi	r2, r2, #4
 8016cea:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016cee:	b2d2      	uxtb	r2, r2
 8016cf0:	b1e2      	cbz	r2, 8016d2c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016cf2:	9d04      	ldr	r5, [sp, #16]
 8016cf4:	436a      	muls	r2, r5
 8016cf6:	1c55      	adds	r5, r2, #1
 8016cf8:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8016cfc:	4d6e      	ldr	r5, [pc, #440]	; (8016eb8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8016cfe:	682d      	ldr	r5, [r5, #0]
 8016d00:	1212      	asrs	r2, r2, #8
 8016d02:	0a2e      	lsrs	r6, r5, #8
 8016d04:	2aff      	cmp	r2, #255	; 0xff
 8016d06:	9605      	str	r6, [sp, #20]
 8016d08:	d116      	bne.n	8016d38 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8016d0a:	f06f 0201 	mvn.w	r2, #1
 8016d0e:	fb02 fc07 	mul.w	ip, r2, r7
 8016d12:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8016d16:	096a      	lsrs	r2, r5, #5
 8016d18:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016d1c:	f026 0607 	bic.w	r6, r6, #7
 8016d20:	4316      	orrs	r6, r2
 8016d22:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8016d26:	432e      	orrs	r6, r5
 8016d28:	f824 600c 	strh.w	r6, [r4, ip]
 8016d2c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016d2e:	4410      	add	r0, r2
 8016d30:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016d32:	3f01      	subs	r7, #1
 8016d34:	4411      	add	r1, r2
 8016d36:	e77f      	b.n	8016c38 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8016d38:	f06f 0601 	mvn.w	r6, #1
 8016d3c:	437e      	muls	r6, r7
 8016d3e:	fa1f fa82 	uxth.w	sl, r2
 8016d42:	f834 8006 	ldrh.w	r8, [r4, r6]
 8016d46:	9602      	str	r6, [sp, #8]
 8016d48:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8016d4c:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8016d50:	43d2      	mvns	r2, r2
 8016d52:	b2d2      	uxtb	r2, r2
 8016d54:	fb1c fc0a 	smulbb	ip, ip, sl
 8016d58:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8016d5c:	fb0e ce02 	mla	lr, lr, r2, ip
 8016d60:	b2ed      	uxtb	r5, r5
 8016d62:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8016d66:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8016d6a:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8016d6e:	fa5f f888 	uxtb.w	r8, r8
 8016d72:	fb15 f50a 	smulbb	r5, r5, sl
 8016d76:	fb08 5502 	mla	r5, r8, r2, r5
 8016d7a:	fa1f fe8e 	uxth.w	lr, lr
 8016d7e:	fb16 f60a 	smulbb	r6, r6, sl
 8016d82:	b2ad      	uxth	r5, r5
 8016d84:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8016d88:	fb0c 6c02 	mla	ip, ip, r2, r6
 8016d8c:	f10e 0201 	add.w	r2, lr, #1
 8016d90:	1c6e      	adds	r6, r5, #1
 8016d92:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8016d96:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8016d9a:	fa1f fc8c 	uxth.w	ip, ip
 8016d9e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016da2:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8016da6:	ea46 0e0e 	orr.w	lr, r6, lr
 8016daa:	f10c 0601 	add.w	r6, ip, #1
 8016dae:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8016db2:	0976      	lsrs	r6, r6, #5
 8016db4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016db8:	9a02      	ldr	r2, [sp, #8]
 8016dba:	ea4e 0e06 	orr.w	lr, lr, r6
 8016dbe:	f824 e002 	strh.w	lr, [r4, r2]
 8016dc2:	e7b3      	b.n	8016d2c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016dc4:	f04f 0800 	mov.w	r8, #0
 8016dc8:	eba3 0208 	sub.w	r2, r3, r8
 8016dcc:	2a00      	cmp	r2, #0
 8016dce:	f77f af36 	ble.w	8016c3e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8016dd2:	9e00      	ldr	r6, [sp, #0]
 8016dd4:	1402      	asrs	r2, r0, #16
 8016dd6:	140d      	asrs	r5, r1, #16
 8016dd8:	fb06 2505 	mla	r5, r6, r5, r2
 8016ddc:	086a      	lsrs	r2, r5, #1
 8016dde:	9e01      	ldr	r6, [sp, #4]
 8016de0:	5cb2      	ldrb	r2, [r6, r2]
 8016de2:	07ed      	lsls	r5, r5, #31
 8016de4:	bf54      	ite	pl
 8016de6:	f002 020f 	andpl.w	r2, r2, #15
 8016dea:	1112      	asrmi	r2, r2, #4
 8016dec:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016df0:	b2d2      	uxtb	r2, r2
 8016df2:	b1c2      	cbz	r2, 8016e26 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8016df4:	9d04      	ldr	r5, [sp, #16]
 8016df6:	436a      	muls	r2, r5
 8016df8:	1c55      	adds	r5, r2, #1
 8016dfa:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8016dfe:	4d2e      	ldr	r5, [pc, #184]	; (8016eb8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8016e00:	1212      	asrs	r2, r2, #8
 8016e02:	682e      	ldr	r6, [r5, #0]
 8016e04:	2aff      	cmp	r2, #255	; 0xff
 8016e06:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8016e0a:	d113      	bne.n	8016e34 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8016e0c:	0972      	lsrs	r2, r6, #5
 8016e0e:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 8016e12:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016e16:	f025 0507 	bic.w	r5, r5, #7
 8016e1a:	4315      	orrs	r5, r2
 8016e1c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8016e20:	4335      	orrs	r5, r6
 8016e22:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8016e26:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016e28:	4410      	add	r0, r2
 8016e2a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016e2c:	f108 0801 	add.w	r8, r8, #1
 8016e30:	4411      	add	r1, r2
 8016e32:	e7c9      	b.n	8016dc8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8016e34:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8016e38:	fa1f fa82 	uxth.w	sl, r2
 8016e3c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8016e40:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8016e44:	43d2      	mvns	r2, r2
 8016e46:	b2d2      	uxtb	r2, r2
 8016e48:	fb17 f70a 	smulbb	r7, r7, sl
 8016e4c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016e50:	fb0c 7c02 	mla	ip, ip, r2, r7
 8016e54:	b2f6      	uxtb	r6, r6
 8016e56:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8016e5a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016e5e:	fa5f fe8e 	uxtb.w	lr, lr
 8016e62:	fb16 f60a 	smulbb	r6, r6, sl
 8016e66:	fb0e 6602 	mla	r6, lr, r2, r6
 8016e6a:	b2ed      	uxtb	r5, r5
 8016e6c:	fa1f fc8c 	uxth.w	ip, ip
 8016e70:	fb15 f50a 	smulbb	r5, r5, sl
 8016e74:	b2b6      	uxth	r6, r6
 8016e76:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016e7a:	fb07 5702 	mla	r7, r7, r2, r5
 8016e7e:	f10c 0201 	add.w	r2, ip, #1
 8016e82:	1c75      	adds	r5, r6, #1
 8016e84:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8016e88:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8016e8c:	b2bf      	uxth	r7, r7
 8016e8e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8016e92:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016e96:	ea45 0c0c 	orr.w	ip, r5, ip
 8016e9a:	1c7d      	adds	r5, r7, #1
 8016e9c:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8016ea0:	096d      	lsrs	r5, r5, #5
 8016ea2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8016ea6:	ea4c 0c05 	orr.w	ip, ip, r5
 8016eaa:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8016eae:	e7ba      	b.n	8016e26 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8016eb0:	b007      	add	sp, #28
 8016eb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016eb6:	bf00      	nop
 8016eb8:	20017460 	.word	0x20017460

08016ebc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016ebc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016ec0:	b087      	sub	sp, #28
 8016ec2:	f8df 830c 	ldr.w	r8, [pc, #780]	; 80171d0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8016ec6:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016ec8:	9205      	str	r2, [sp, #20]
 8016eca:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8016ece:	9101      	str	r1, [sp, #4]
 8016ed0:	6841      	ldr	r1, [r0, #4]
 8016ed2:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 8016ed6:	fb01 2404 	mla	r4, r1, r4, r2
 8016eda:	6802      	ldr	r2, [r0, #0]
 8016edc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016ee0:	f8db 2008 	ldr.w	r2, [fp, #8]
 8016ee4:	3201      	adds	r2, #1
 8016ee6:	f022 0201 	bic.w	r2, r2, #1
 8016eea:	9202      	str	r2, [sp, #8]
 8016eec:	f8db 2000 	ldr.w	r2, [fp]
 8016ef0:	9203      	str	r2, [sp, #12]
 8016ef2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016ef6:	9a01      	ldr	r2, [sp, #4]
 8016ef8:	2a00      	cmp	r2, #0
 8016efa:	dc03      	bgt.n	8016f04 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8016efc:	9a05      	ldr	r2, [sp, #20]
 8016efe:	2a00      	cmp	r2, #0
 8016f00:	f340 8162 	ble.w	80171c8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8016f04:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016f06:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8016f0a:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8016f0e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8016f12:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016f14:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8016f18:	2b00      	cmp	r3, #0
 8016f1a:	dd0e      	ble.n	8016f3a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016f1c:	1402      	asrs	r2, r0, #16
 8016f1e:	d405      	bmi.n	8016f2c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016f20:	42ba      	cmp	r2, r7
 8016f22:	da03      	bge.n	8016f2c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016f24:	140a      	asrs	r2, r1, #16
 8016f26:	d401      	bmi.n	8016f2c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016f28:	42b2      	cmp	r2, r6
 8016f2a:	db07      	blt.n	8016f3c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8016f2c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016f2e:	4410      	add	r0, r2
 8016f30:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016f32:	3b01      	subs	r3, #1
 8016f34:	4411      	add	r1, r2
 8016f36:	3402      	adds	r4, #2
 8016f38:	e7ee      	b.n	8016f18 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8016f3a:	d017      	beq.n	8016f6c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8016f3c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8016f3e:	1e5a      	subs	r2, r3, #1
 8016f40:	fb05 0502 	mla	r5, r5, r2, r0
 8016f44:	142d      	asrs	r5, r5, #16
 8016f46:	d409      	bmi.n	8016f5c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016f48:	42bd      	cmp	r5, r7
 8016f4a:	da07      	bge.n	8016f5c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016f4c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8016f4e:	fb05 1202 	mla	r2, r5, r2, r1
 8016f52:	1412      	asrs	r2, r2, #16
 8016f54:	d402      	bmi.n	8016f5c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016f56:	42b2      	cmp	r2, r6
 8016f58:	f2c0 80c3 	blt.w	80170e2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8016f5c:	2500      	movs	r5, #0
 8016f5e:	195a      	adds	r2, r3, r5
 8016f60:	2a00      	cmp	r2, #0
 8016f62:	dc3f      	bgt.n	8016fe4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8016f64:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016f68:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016f6c:	9b01      	ldr	r3, [sp, #4]
 8016f6e:	2b00      	cmp	r3, #0
 8016f70:	f340 812a 	ble.w	80171c8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8016f74:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016f78:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016f7c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016f80:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016f82:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016f86:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016f8a:	eeb0 6a62 	vmov.f32	s12, s5
 8016f8e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016f92:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016f96:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016f9a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016f9e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016fa2:	eeb0 6a43 	vmov.f32	s12, s6
 8016fa6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016faa:	ee12 2a90 	vmov	r2, s5
 8016fae:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016fb2:	fb92 f3f3 	sdiv	r3, r2, r3
 8016fb6:	ee13 2a10 	vmov	r2, s6
 8016fba:	9313      	str	r3, [sp, #76]	; 0x4c
 8016fbc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016fbe:	fb92 f3f3 	sdiv	r3, r2, r3
 8016fc2:	9314      	str	r3, [sp, #80]	; 0x50
 8016fc4:	9b01      	ldr	r3, [sp, #4]
 8016fc6:	9a05      	ldr	r2, [sp, #20]
 8016fc8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016fcc:	3b01      	subs	r3, #1
 8016fce:	9301      	str	r3, [sp, #4]
 8016fd0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8016fd4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016fd6:	eeb0 3a67 	vmov.f32	s6, s15
 8016fda:	bf08      	it	eq
 8016fdc:	4613      	moveq	r3, r2
 8016fde:	eef0 2a47 	vmov.f32	s5, s14
 8016fe2:	e788      	b.n	8016ef6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8016fe4:	1406      	asrs	r6, r0, #16
 8016fe6:	d42c      	bmi.n	8017042 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016fe8:	f8db 2008 	ldr.w	r2, [fp, #8]
 8016fec:	42b2      	cmp	r2, r6
 8016fee:	dd28      	ble.n	8017042 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016ff0:	140f      	asrs	r7, r1, #16
 8016ff2:	d426      	bmi.n	8017042 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016ff4:	f8db 200c 	ldr.w	r2, [fp, #12]
 8016ff8:	42ba      	cmp	r2, r7
 8016ffa:	dd22      	ble.n	8017042 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016ffc:	9a02      	ldr	r2, [sp, #8]
 8016ffe:	fb07 6602 	mla	r6, r7, r2, r6
 8017002:	0872      	lsrs	r2, r6, #1
 8017004:	9f03      	ldr	r7, [sp, #12]
 8017006:	5cba      	ldrb	r2, [r7, r2]
 8017008:	07f6      	lsls	r6, r6, #31
 801700a:	bf54      	ite	pl
 801700c:	f002 020f 	andpl.w	r2, r2, #15
 8017010:	1112      	asrmi	r2, r2, #4
 8017012:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8017016:	b2d2      	uxtb	r2, r2
 8017018:	2aff      	cmp	r2, #255	; 0xff
 801701a:	d118      	bne.n	801704e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801701c:	f8d8 2000 	ldr.w	r2, [r8]
 8017020:	f06f 0601 	mvn.w	r6, #1
 8017024:	fb06 f705 	mul.w	r7, r6, r5
 8017028:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801702c:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8017030:	0956      	lsrs	r6, r2, #5
 8017032:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8017036:	ea4c 0606 	orr.w	r6, ip, r6
 801703a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801703e:	4316      	orrs	r6, r2
 8017040:	53e6      	strh	r6, [r4, r7]
 8017042:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8017044:	4410      	add	r0, r2
 8017046:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017048:	3d01      	subs	r5, #1
 801704a:	4411      	add	r1, r2
 801704c:	e787      	b.n	8016f5e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801704e:	2a00      	cmp	r2, #0
 8017050:	d0f7      	beq.n	8017042 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8017052:	f06f 0601 	mvn.w	r6, #1
 8017056:	436e      	muls	r6, r5
 8017058:	f8d8 c000 	ldr.w	ip, [r8]
 801705c:	f834 e006 	ldrh.w	lr, [r4, r6]
 8017060:	9604      	str	r6, [sp, #16]
 8017062:	fa1f f982 	uxth.w	r9, r2
 8017066:	ea4f 272e 	mov.w	r7, lr, asr #8
 801706a:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801706e:	43d2      	mvns	r2, r2
 8017070:	b2d2      	uxtb	r2, r2
 8017072:	fb16 f609 	smulbb	r6, r6, r9
 8017076:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801707a:	fb07 6702 	mla	r7, r7, r2, r6
 801707e:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8017082:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8017086:	fa5f fc8c 	uxtb.w	ip, ip
 801708a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801708e:	fa5f fe8e 	uxtb.w	lr, lr
 8017092:	fb1c fc09 	smulbb	ip, ip, r9
 8017096:	fb0e cc02 	mla	ip, lr, r2, ip
 801709a:	b2bf      	uxth	r7, r7
 801709c:	fb1a fa09 	smulbb	sl, sl, r9
 80170a0:	fa1f fc8c 	uxth.w	ip, ip
 80170a4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80170a8:	fb06 a602 	mla	r6, r6, r2, sl
 80170ac:	1c7a      	adds	r2, r7, #1
 80170ae:	f10c 0a01 	add.w	sl, ip, #1
 80170b2:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80170b6:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 80170ba:	b2b6      	uxth	r6, r6
 80170bc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80170c0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80170c4:	ea4a 0707 	orr.w	r7, sl, r7
 80170c8:	f106 0a01 	add.w	sl, r6, #1
 80170cc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80170d0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80170d4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80170d8:	9a04      	ldr	r2, [sp, #16]
 80170da:	ea47 070a 	orr.w	r7, r7, sl
 80170de:	52a7      	strh	r7, [r4, r2]
 80170e0:	e7af      	b.n	8017042 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80170e2:	f04f 0e00 	mov.w	lr, #0
 80170e6:	eba3 020e 	sub.w	r2, r3, lr
 80170ea:	2a00      	cmp	r2, #0
 80170ec:	f77f af3a 	ble.w	8016f64 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80170f0:	9e02      	ldr	r6, [sp, #8]
 80170f2:	1402      	asrs	r2, r0, #16
 80170f4:	140d      	asrs	r5, r1, #16
 80170f6:	fb06 2505 	mla	r5, r6, r5, r2
 80170fa:	086a      	lsrs	r2, r5, #1
 80170fc:	9e03      	ldr	r6, [sp, #12]
 80170fe:	5cb2      	ldrb	r2, [r6, r2]
 8017100:	07ed      	lsls	r5, r5, #31
 8017102:	bf54      	ite	pl
 8017104:	f002 020f 	andpl.w	r2, r2, #15
 8017108:	1112      	asrmi	r2, r2, #4
 801710a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801710e:	b2d2      	uxtb	r2, r2
 8017110:	2aff      	cmp	r2, #255	; 0xff
 8017112:	d115      	bne.n	8017140 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8017114:	f8d8 5000 	ldr.w	r5, [r8]
 8017118:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801711c:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8017120:	096a      	lsrs	r2, r5, #5
 8017122:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017126:	4332      	orrs	r2, r6
 8017128:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801712c:	432a      	orrs	r2, r5
 801712e:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8017132:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8017134:	4410      	add	r0, r2
 8017136:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017138:	f10e 0e01 	add.w	lr, lr, #1
 801713c:	4411      	add	r1, r2
 801713e:	e7d2      	b.n	80170e6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8017140:	2a00      	cmp	r2, #0
 8017142:	d0f6      	beq.n	8017132 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8017144:	f8d8 7000 	ldr.w	r7, [r8]
 8017148:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801714c:	fa1f f982 	uxth.w	r9, r2
 8017150:	ea4f 262c 	mov.w	r6, ip, asr #8
 8017154:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8017158:	43d2      	mvns	r2, r2
 801715a:	b2d2      	uxtb	r2, r2
 801715c:	fb15 f509 	smulbb	r5, r5, r9
 8017160:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8017164:	fb06 5602 	mla	r6, r6, r2, r5
 8017168:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801716c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8017170:	b2ff      	uxtb	r7, r7
 8017172:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8017176:	fa5f fc8c 	uxtb.w	ip, ip
 801717a:	fb17 f709 	smulbb	r7, r7, r9
 801717e:	fb0c 7702 	mla	r7, ip, r2, r7
 8017182:	b2b6      	uxth	r6, r6
 8017184:	fb1a fa09 	smulbb	sl, sl, r9
 8017188:	b2bf      	uxth	r7, r7
 801718a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801718e:	fb05 a502 	mla	r5, r5, r2, sl
 8017192:	1c72      	adds	r2, r6, #1
 8017194:	f107 0a01 	add.w	sl, r7, #1
 8017198:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801719c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80171a0:	b2ad      	uxth	r5, r5
 80171a2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80171a6:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80171aa:	ea4a 0606 	orr.w	r6, sl, r6
 80171ae:	f105 0a01 	add.w	sl, r5, #1
 80171b2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80171b6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80171ba:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80171be:	ea46 060a 	orr.w	r6, r6, sl
 80171c2:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 80171c6:	e7b4      	b.n	8017132 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80171c8:	b007      	add	sp, #28
 80171ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80171ce:	bf00      	nop
 80171d0:	20017460 	.word	0x20017460

080171d4 <_ZN8touchgfx8LCD16bppD1Ev>:
 80171d4:	4770      	bx	lr

080171d6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 80171d6:	4770      	bx	lr

080171d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 80171d8:	4770      	bx	lr

080171da <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 80171da:	4770      	bx	lr

080171dc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 80171dc:	4770      	bx	lr

080171de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80171de:	4770      	bx	lr

080171e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80171e0:	4770      	bx	lr

080171e2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80171e2:	4770      	bx	lr

080171e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80171e4:	4770      	bx	lr

080171e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80171e6:	4770      	bx	lr

080171e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80171e8:	4770      	bx	lr

080171ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80171ea:	4770      	bx	lr

080171ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80171ec:	4770      	bx	lr

080171ee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80171ee:	4770      	bx	lr

080171f0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80171f0:	4770      	bx	lr

080171f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80171f2:	4770      	bx	lr

080171f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 80171f4:	4770      	bx	lr

080171f6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80171f6:	4770      	bx	lr

080171f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80171f8:	4770      	bx	lr

080171fa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80171fa:	4770      	bx	lr

080171fc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80171fc:	4770      	bx	lr

080171fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80171fe:	4770      	bx	lr

08017200 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8017200:	4770      	bx	lr

08017202 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8017202:	4770      	bx	lr

08017204 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8017204:	4770      	bx	lr

08017206 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8017206:	4770      	bx	lr

08017208 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8017208:	4770      	bx	lr

0801720a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801720a:	4770      	bx	lr

0801720c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801720c:	4770      	bx	lr

0801720e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801720e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017212:	b088      	sub	sp, #32
 8017214:	ac08      	add	r4, sp, #32
 8017216:	4606      	mov	r6, r0
 8017218:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801721c:	4620      	mov	r0, r4
 801721e:	4688      	mov	r8, r1
 8017220:	4691      	mov	r9, r2
 8017222:	f7fd fc65 	bl	8014af0 <_ZNK8touchgfx6Bitmap7getDataEv>
 8017226:	6833      	ldr	r3, [r6, #0]
 8017228:	4605      	mov	r5, r0
 801722a:	4620      	mov	r0, r4
 801722c:	699f      	ldr	r7, [r3, #24]
 801722e:	f7fd fb73 	bl	8014918 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8017232:	4682      	mov	sl, r0
 8017234:	4620      	mov	r0, r4
 8017236:	f7fd fba3 	bl	8014980 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801723a:	9500      	str	r5, [sp, #0]
 801723c:	e9cd a001 	strd	sl, r0, [sp, #4]
 8017240:	464b      	mov	r3, r9
 8017242:	a806      	add	r0, sp, #24
 8017244:	4642      	mov	r2, r8
 8017246:	4631      	mov	r1, r6
 8017248:	47b8      	blx	r7
 801724a:	4628      	mov	r0, r5
 801724c:	b008      	add	sp, #32
 801724e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

08017254 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8017254:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8017258:	2300      	movs	r3, #0
 801725a:	9300      	str	r3, [sp, #0]
 801725c:	4b3d      	ldr	r3, [pc, #244]	; (8017354 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801725e:	781b      	ldrb	r3, [r3, #0]
 8017260:	2b00      	cmp	r3, #0
 8017262:	d137      	bne.n	80172d4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8017264:	4a3c      	ldr	r2, [pc, #240]	; (8017358 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8017266:	f9b2 2000 	ldrsh.w	r2, [r2]
 801726a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801726e:	2b00      	cmp	r3, #0
 8017270:	d132      	bne.n	80172d8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8017272:	4b3a      	ldr	r3, [pc, #232]	; (801735c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8017274:	f9b3 3000 	ldrsh.w	r3, [r3]
 8017278:	6808      	ldr	r0, [r1, #0]
 801727a:	6849      	ldr	r1, [r1, #4]
 801727c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8017280:	ac02      	add	r4, sp, #8
 8017282:	ab02      	add	r3, sp, #8
 8017284:	c303      	stmia	r3!, {r0, r1}
 8017286:	4669      	mov	r1, sp
 8017288:	4620      	mov	r0, r4
 801728a:	f7f9 ff7f 	bl	801118c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801728e:	4668      	mov	r0, sp
 8017290:	f7f9 ff54 	bl	801113c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017294:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8017298:	f8bd 2000 	ldrh.w	r2, [sp]
 801729c:	4d30      	ldr	r5, [pc, #192]	; (8017360 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801729e:	4413      	add	r3, r2
 80172a0:	f8ad 3008 	strh.w	r3, [sp, #8]
 80172a4:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 80172a8:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80172ac:	6828      	ldr	r0, [r5, #0]
 80172ae:	4413      	add	r3, r2
 80172b0:	f8ad 300a 	strh.w	r3, [sp, #10]
 80172b4:	6803      	ldr	r3, [r0, #0]
 80172b6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80172b8:	4798      	blx	r3
 80172ba:	f010 0f01 	tst.w	r0, #1
 80172be:	462f      	mov	r7, r5
 80172c0:	d00c      	beq.n	80172dc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 80172c2:	6828      	ldr	r0, [r5, #0]
 80172c4:	6803      	ldr	r3, [r0, #0]
 80172c6:	e894 0006 	ldmia.w	r4, {r1, r2}
 80172ca:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80172cc:	4798      	blx	r3
 80172ce:	b004      	add	sp, #16
 80172d0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80172d4:	4a21      	ldr	r2, [pc, #132]	; (801735c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 80172d6:	e7c6      	b.n	8017266 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 80172d8:	4b1f      	ldr	r3, [pc, #124]	; (8017358 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80172da:	e7cb      	b.n	8017274 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 80172dc:	6838      	ldr	r0, [r7, #0]
 80172de:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 80172e2:	6803      	ldr	r3, [r0, #0]
 80172e4:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 80172e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80172ea:	4798      	blx	r3
 80172ec:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 80172f0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80172f4:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 80172f8:	fb16 3602 	smlabb	r6, r6, r2, r3
 80172fc:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8017300:	6838      	ldr	r0, [r7, #0]
 8017302:	6803      	ldr	r3, [r0, #0]
 8017304:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017306:	4798      	blx	r3
 8017308:	4a13      	ldr	r2, [pc, #76]	; (8017358 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801730a:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801730e:	8813      	ldrh	r3, [r2, #0]
 8017310:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8017314:	fb03 1404 	mla	r4, r3, r4, r1
 8017318:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801731c:	435d      	muls	r5, r3
 801731e:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8017322:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8017326:	4691      	mov	r9, r2
 8017328:	6838      	ldr	r0, [r7, #0]
 801732a:	42ac      	cmp	r4, r5
 801732c:	6803      	ldr	r3, [r0, #0]
 801732e:	d20e      	bcs.n	801734e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8017330:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 8017334:	4632      	mov	r2, r6
 8017336:	4643      	mov	r3, r8
 8017338:	4621      	mov	r1, r4
 801733a:	47d0      	blx	sl
 801733c:	f8b9 3000 	ldrh.w	r3, [r9]
 8017340:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017344:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8017348:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801734c:	e7ec      	b.n	8017328 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801734e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017350:	4798      	blx	r3
 8017352:	e7bc      	b.n	80172ce <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8017354:	20017448 	.word	0x20017448
 8017358:	2001744a 	.word	0x2001744a
 801735c:	2001744c 	.word	0x2001744c
 8017360:	20017450 	.word	0x20017450

08017364 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8017364:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017368:	b08b      	sub	sp, #44	; 0x2c
 801736a:	460f      	mov	r7, r1
 801736c:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 8017370:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 8017374:	4616      	mov	r6, r2
 8017376:	f1bb 0f00 	cmp.w	fp, #0
 801737a:	d049      	beq.n	8017410 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 801737c:	6810      	ldr	r0, [r2, #0]
 801737e:	6851      	ldr	r1, [r2, #4]
 8017380:	ad06      	add	r5, sp, #24
 8017382:	c503      	stmia	r5!, {r0, r1}
 8017384:	6818      	ldr	r0, [r3, #0]
 8017386:	6859      	ldr	r1, [r3, #4]
 8017388:	ad08      	add	r5, sp, #32
 801738a:	c503      	stmia	r5!, {r0, r1}
 801738c:	a806      	add	r0, sp, #24
 801738e:	f7f9 fed5 	bl	801113c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017392:	4631      	mov	r1, r6
 8017394:	a808      	add	r0, sp, #32
 8017396:	f7f9 fef9 	bl	801118c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801739a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801739e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80173a2:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 80173a6:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 80173aa:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 80173ae:	fb16 2103 	smlabb	r1, r6, r3, r2
 80173b2:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 80173b6:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 80173ba:	4f5f      	ldr	r7, [pc, #380]	; (8017538 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80173bc:	440a      	add	r2, r1
 80173be:	f8ad 2020 	strh.w	r2, [sp, #32]
 80173c2:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80173c6:	6838      	ldr	r0, [r7, #0]
 80173c8:	4413      	add	r3, r2
 80173ca:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80173ce:	6803      	ldr	r3, [r0, #0]
 80173d0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80173d2:	4798      	blx	r3
 80173d4:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80173d8:	46b9      	mov	r9, r7
 80173da:	d01c      	beq.n	8017416 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
 80173dc:	f010 0f04 	tst.w	r0, #4
 80173e0:	d01d      	beq.n	801741e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80173e2:	f8d9 0000 	ldr.w	r0, [r9]
 80173e6:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80173ea:	6801      	ldr	r1, [r0, #0]
 80173ec:	f8cd b00c 	str.w	fp, [sp, #12]
 80173f0:	2700      	movs	r7, #0
 80173f2:	e9cd 4704 	strd	r4, r7, [sp, #16]
 80173f6:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 80173fa:	9402      	str	r4, [sp, #8]
 80173fc:	b2ad      	uxth	r5, r5
 80173fe:	fa1f f488 	uxth.w	r4, r8
 8017402:	9501      	str	r5, [sp, #4]
 8017404:	9400      	str	r4, [sp, #0]
 8017406:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 8017408:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801740c:	4631      	mov	r1, r6
 801740e:	47a0      	blx	r4
 8017410:	b00b      	add	sp, #44	; 0x2c
 8017412:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017416:	b914      	cbnz	r4, 801741e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8017418:	f010 0f01 	tst.w	r0, #1
 801741c:	e7e0      	b.n	80173e0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 801741e:	f8d9 0000 	ldr.w	r0, [r9]
 8017422:	6803      	ldr	r3, [r0, #0]
 8017424:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017426:	4798      	blx	r3
 8017428:	4b44      	ldr	r3, [pc, #272]	; (801753c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801742a:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801742e:	881a      	ldrh	r2, [r3, #0]
 8017430:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8017434:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8017438:	fb02 1404 	mla	r4, r2, r4, r1
 801743c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8017440:	469a      	mov	sl, r3
 8017442:	fb05 f502 	mul.w	r5, r5, r2
 8017446:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801744a:	d059      	beq.n	8017500 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801744c:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 8017450:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8017454:	fa1f f28b 	uxth.w	r2, fp
 8017458:	fa1f f989 	uxth.w	r9, r9
 801745c:	469e      	mov	lr, r3
 801745e:	42ac      	cmp	r4, r5
 8017460:	d264      	bcs.n	801752c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8017462:	eb04 0a07 	add.w	sl, r4, r7
 8017466:	4554      	cmp	r4, sl
 8017468:	d23d      	bcs.n	80174e6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801746a:	8821      	ldrh	r1, [r4, #0]
 801746c:	f836 3b02 	ldrh.w	r3, [r6], #2
 8017470:	1208      	asrs	r0, r1, #8
 8017472:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8017476:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801747a:	fb10 f009 	smulbb	r0, r0, r9
 801747e:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8017482:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017486:	00c9      	lsls	r1, r1, #3
 8017488:	fb0c 0c02 	mla	ip, ip, r2, r0
 801748c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8017490:	10d8      	asrs	r0, r3, #3
 8017492:	b2c9      	uxtb	r1, r1
 8017494:	00db      	lsls	r3, r3, #3
 8017496:	fa1f fc8c 	uxth.w	ip, ip
 801749a:	fb1b fb09 	smulbb	fp, fp, r9
 801749e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80174a2:	b2db      	uxtb	r3, r3
 80174a4:	fb11 f109 	smulbb	r1, r1, r9
 80174a8:	fb00 b002 	mla	r0, r0, r2, fp
 80174ac:	fb03 1302 	mla	r3, r3, r2, r1
 80174b0:	f10c 0b01 	add.w	fp, ip, #1
 80174b4:	b29b      	uxth	r3, r3
 80174b6:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 80174ba:	b280      	uxth	r0, r0
 80174bc:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 80174c0:	f103 0c01 	add.w	ip, r3, #1
 80174c4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80174c8:	1c43      	adds	r3, r0, #1
 80174ca:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80174ce:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80174d2:	0940      	lsrs	r0, r0, #5
 80174d4:	ea4c 0c0b 	orr.w	ip, ip, fp
 80174d8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80174dc:	ea4c 0c00 	orr.w	ip, ip, r0
 80174e0:	f824 cb02 	strh.w	ip, [r4], #2
 80174e4:	e7bf      	b.n	8017466 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 80174e6:	f8be 3000 	ldrh.w	r3, [lr]
 80174ea:	eba3 0308 	sub.w	r3, r3, r8
 80174ee:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80174f2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80174f6:	eba3 0308 	sub.w	r3, r3, r8
 80174fa:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80174fe:	e7ae      	b.n	801745e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8017500:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8017504:	f8d9 0000 	ldr.w	r0, [r9]
 8017508:	42ac      	cmp	r4, r5
 801750a:	6803      	ldr	r3, [r0, #0]
 801750c:	d20e      	bcs.n	801752c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801750e:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 8017512:	4632      	mov	r2, r6
 8017514:	463b      	mov	r3, r7
 8017516:	4621      	mov	r1, r4
 8017518:	47c0      	blx	r8
 801751a:	f8ba 3000 	ldrh.w	r3, [sl]
 801751e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017522:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8017526:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801752a:	e7eb      	b.n	8017504 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801752c:	4b02      	ldr	r3, [pc, #8]	; (8017538 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801752e:	6818      	ldr	r0, [r3, #0]
 8017530:	6803      	ldr	r3, [r0, #0]
 8017532:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017534:	4798      	blx	r3
 8017536:	e76b      	b.n	8017410 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8017538:	20017450 	.word	0x20017450
 801753c:	2001744a 	.word	0x2001744a

08017540 <_ZN8touchgfx8LCD16bppD0Ev>:
 8017540:	b510      	push	{r4, lr}
 8017542:	2178      	movs	r1, #120	; 0x78
 8017544:	4604      	mov	r4, r0
 8017546:	f009 faf2 	bl	8020b2e <_ZdlPvj>
 801754a:	4620      	mov	r0, r4
 801754c:	bd10      	pop	{r4, pc}

0801754e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801754e:	b510      	push	{r4, lr}
 8017550:	2104      	movs	r1, #4
 8017552:	4604      	mov	r4, r0
 8017554:	f009 faeb 	bl	8020b2e <_ZdlPvj>
 8017558:	4620      	mov	r0, r4
 801755a:	bd10      	pop	{r4, pc}

0801755c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801755c:	b510      	push	{r4, lr}
 801755e:	2104      	movs	r1, #4
 8017560:	4604      	mov	r4, r0
 8017562:	f009 fae4 	bl	8020b2e <_ZdlPvj>
 8017566:	4620      	mov	r0, r4
 8017568:	bd10      	pop	{r4, pc}

0801756a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801756a:	b510      	push	{r4, lr}
 801756c:	2104      	movs	r1, #4
 801756e:	4604      	mov	r4, r0
 8017570:	f009 fadd 	bl	8020b2e <_ZdlPvj>
 8017574:	4620      	mov	r0, r4
 8017576:	bd10      	pop	{r4, pc}

08017578 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8017578:	b510      	push	{r4, lr}
 801757a:	2104      	movs	r1, #4
 801757c:	4604      	mov	r4, r0
 801757e:	f009 fad6 	bl	8020b2e <_ZdlPvj>
 8017582:	4620      	mov	r0, r4
 8017584:	bd10      	pop	{r4, pc}

08017586 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8017586:	b510      	push	{r4, lr}
 8017588:	2104      	movs	r1, #4
 801758a:	4604      	mov	r4, r0
 801758c:	f009 facf 	bl	8020b2e <_ZdlPvj>
 8017590:	4620      	mov	r0, r4
 8017592:	bd10      	pop	{r4, pc}

08017594 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8017594:	b510      	push	{r4, lr}
 8017596:	2104      	movs	r1, #4
 8017598:	4604      	mov	r4, r0
 801759a:	f009 fac8 	bl	8020b2e <_ZdlPvj>
 801759e:	4620      	mov	r0, r4
 80175a0:	bd10      	pop	{r4, pc}

080175a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 80175a2:	b510      	push	{r4, lr}
 80175a4:	2104      	movs	r1, #4
 80175a6:	4604      	mov	r4, r0
 80175a8:	f009 fac1 	bl	8020b2e <_ZdlPvj>
 80175ac:	4620      	mov	r0, r4
 80175ae:	bd10      	pop	{r4, pc}

080175b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 80175b0:	b510      	push	{r4, lr}
 80175b2:	2104      	movs	r1, #4
 80175b4:	4604      	mov	r4, r0
 80175b6:	f009 faba 	bl	8020b2e <_ZdlPvj>
 80175ba:	4620      	mov	r0, r4
 80175bc:	bd10      	pop	{r4, pc}

080175be <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80175be:	b510      	push	{r4, lr}
 80175c0:	2104      	movs	r1, #4
 80175c2:	4604      	mov	r4, r0
 80175c4:	f009 fab3 	bl	8020b2e <_ZdlPvj>
 80175c8:	4620      	mov	r0, r4
 80175ca:	bd10      	pop	{r4, pc}

080175cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80175cc:	b510      	push	{r4, lr}
 80175ce:	2104      	movs	r1, #4
 80175d0:	4604      	mov	r4, r0
 80175d2:	f009 faac 	bl	8020b2e <_ZdlPvj>
 80175d6:	4620      	mov	r0, r4
 80175d8:	bd10      	pop	{r4, pc}

080175da <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80175da:	b510      	push	{r4, lr}
 80175dc:	2104      	movs	r1, #4
 80175de:	4604      	mov	r4, r0
 80175e0:	f009 faa5 	bl	8020b2e <_ZdlPvj>
 80175e4:	4620      	mov	r0, r4
 80175e6:	bd10      	pop	{r4, pc}

080175e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80175e8:	b510      	push	{r4, lr}
 80175ea:	2104      	movs	r1, #4
 80175ec:	4604      	mov	r4, r0
 80175ee:	f009 fa9e 	bl	8020b2e <_ZdlPvj>
 80175f2:	4620      	mov	r0, r4
 80175f4:	bd10      	pop	{r4, pc}

080175f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80175f6:	b510      	push	{r4, lr}
 80175f8:	2104      	movs	r1, #4
 80175fa:	4604      	mov	r4, r0
 80175fc:	f009 fa97 	bl	8020b2e <_ZdlPvj>
 8017600:	4620      	mov	r0, r4
 8017602:	bd10      	pop	{r4, pc}

08017604 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8017604:	b510      	push	{r4, lr}
 8017606:	2104      	movs	r1, #4
 8017608:	4604      	mov	r4, r0
 801760a:	f009 fa90 	bl	8020b2e <_ZdlPvj>
 801760e:	4620      	mov	r0, r4
 8017610:	bd10      	pop	{r4, pc}

08017612 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8017612:	b510      	push	{r4, lr}
 8017614:	2104      	movs	r1, #4
 8017616:	4604      	mov	r4, r0
 8017618:	f009 fa89 	bl	8020b2e <_ZdlPvj>
 801761c:	4620      	mov	r0, r4
 801761e:	bd10      	pop	{r4, pc}

08017620 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8017620:	b510      	push	{r4, lr}
 8017622:	2104      	movs	r1, #4
 8017624:	4604      	mov	r4, r0
 8017626:	f009 fa82 	bl	8020b2e <_ZdlPvj>
 801762a:	4620      	mov	r0, r4
 801762c:	bd10      	pop	{r4, pc}

0801762e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801762e:	b510      	push	{r4, lr}
 8017630:	2104      	movs	r1, #4
 8017632:	4604      	mov	r4, r0
 8017634:	f009 fa7b 	bl	8020b2e <_ZdlPvj>
 8017638:	4620      	mov	r0, r4
 801763a:	bd10      	pop	{r4, pc}

0801763c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801763c:	b510      	push	{r4, lr}
 801763e:	2104      	movs	r1, #4
 8017640:	4604      	mov	r4, r0
 8017642:	f009 fa74 	bl	8020b2e <_ZdlPvj>
 8017646:	4620      	mov	r0, r4
 8017648:	bd10      	pop	{r4, pc}

0801764a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801764a:	b510      	push	{r4, lr}
 801764c:	2104      	movs	r1, #4
 801764e:	4604      	mov	r4, r0
 8017650:	f009 fa6d 	bl	8020b2e <_ZdlPvj>
 8017654:	4620      	mov	r0, r4
 8017656:	bd10      	pop	{r4, pc}

08017658 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8017658:	b510      	push	{r4, lr}
 801765a:	2104      	movs	r1, #4
 801765c:	4604      	mov	r4, r0
 801765e:	f009 fa66 	bl	8020b2e <_ZdlPvj>
 8017662:	4620      	mov	r0, r4
 8017664:	bd10      	pop	{r4, pc}

08017666 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8017666:	b510      	push	{r4, lr}
 8017668:	2104      	movs	r1, #4
 801766a:	4604      	mov	r4, r0
 801766c:	f009 fa5f 	bl	8020b2e <_ZdlPvj>
 8017670:	4620      	mov	r0, r4
 8017672:	bd10      	pop	{r4, pc}

08017674 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8017674:	b510      	push	{r4, lr}
 8017676:	2104      	movs	r1, #4
 8017678:	4604      	mov	r4, r0
 801767a:	f009 fa58 	bl	8020b2e <_ZdlPvj>
 801767e:	4620      	mov	r0, r4
 8017680:	bd10      	pop	{r4, pc}

08017682 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8017682:	b510      	push	{r4, lr}
 8017684:	2104      	movs	r1, #4
 8017686:	4604      	mov	r4, r0
 8017688:	f009 fa51 	bl	8020b2e <_ZdlPvj>
 801768c:	4620      	mov	r0, r4
 801768e:	bd10      	pop	{r4, pc}

08017690 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8017690:	b510      	push	{r4, lr}
 8017692:	2104      	movs	r1, #4
 8017694:	4604      	mov	r4, r0
 8017696:	f009 fa4a 	bl	8020b2e <_ZdlPvj>
 801769a:	4620      	mov	r0, r4
 801769c:	bd10      	pop	{r4, pc}

0801769e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801769e:	b510      	push	{r4, lr}
 80176a0:	2104      	movs	r1, #4
 80176a2:	4604      	mov	r4, r0
 80176a4:	f009 fa43 	bl	8020b2e <_ZdlPvj>
 80176a8:	4620      	mov	r0, r4
 80176aa:	bd10      	pop	{r4, pc}

080176ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 80176ac:	b510      	push	{r4, lr}
 80176ae:	2104      	movs	r1, #4
 80176b0:	4604      	mov	r4, r0
 80176b2:	f009 fa3c 	bl	8020b2e <_ZdlPvj>
 80176b6:	4620      	mov	r0, r4
 80176b8:	bd10      	pop	{r4, pc}

080176ba <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 80176ba:	b510      	push	{r4, lr}
 80176bc:	2104      	movs	r1, #4
 80176be:	4604      	mov	r4, r0
 80176c0:	f009 fa35 	bl	8020b2e <_ZdlPvj>
 80176c4:	4620      	mov	r0, r4
 80176c6:	bd10      	pop	{r4, pc}

080176c8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 80176c8:	b510      	push	{r4, lr}
 80176ca:	2104      	movs	r1, #4
 80176cc:	4604      	mov	r4, r0
 80176ce:	f009 fa2e 	bl	8020b2e <_ZdlPvj>
 80176d2:	4620      	mov	r0, r4
 80176d4:	bd10      	pop	{r4, pc}
	...

080176d8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 80176d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80176dc:	b091      	sub	sp, #68	; 0x44
 80176de:	469b      	mov	fp, r3
 80176e0:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 80176e4:	4616      	mov	r6, r2
 80176e6:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 80176ea:	f9b3 2000 	ldrsh.w	r2, [r3]
 80176ee:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 80176f2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80176f6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80176fa:	4604      	mov	r4, r0
 80176fc:	460d      	mov	r5, r1
 80176fe:	4640      	mov	r0, r8
 8017700:	4659      	mov	r1, fp
 8017702:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8017706:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801770a:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801770e:	f7f3 fd85 	bl	800b21c <_ZN8touchgfx4RectaNERKS0_>
 8017712:	4631      	mov	r1, r6
 8017714:	4640      	mov	r0, r8
 8017716:	f7f3 fd81 	bl	800b21c <_ZN8touchgfx4RectaNERKS0_>
 801771a:	4b74      	ldr	r3, [pc, #464]	; (80178ec <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801771c:	8818      	ldrh	r0, [r3, #0]
 801771e:	4b74      	ldr	r3, [pc, #464]	; (80178f0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 8017720:	8819      	ldrh	r1, [r3, #0]
 8017722:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8017726:	2b00      	cmp	r3, #0
 8017728:	b202      	sxth	r2, r0
 801772a:	b20e      	sxth	r6, r1
 801772c:	da07      	bge.n	801773e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801772e:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8017732:	4463      	add	r3, ip
 8017734:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8017738:	2300      	movs	r3, #0
 801773a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801773e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8017742:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8017746:	1ad2      	subs	r2, r2, r3
 8017748:	4594      	cmp	ip, r2
 801774a:	bfc4      	itt	gt
 801774c:	1ac2      	subgt	r2, r0, r3
 801774e:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 8017752:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8017756:	2a00      	cmp	r2, #0
 8017758:	da07      	bge.n	801776a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801775a:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801775e:	4462      	add	r2, ip
 8017760:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8017764:	2200      	movs	r2, #0
 8017766:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801776a:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801776e:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 8017772:	eba6 060a 	sub.w	r6, r6, sl
 8017776:	42b2      	cmp	r2, r6
 8017778:	bfc4      	itt	gt
 801777a:	eba1 020a 	subgt.w	r2, r1, sl
 801777e:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 8017782:	4a5c      	ldr	r2, [pc, #368]	; (80178f4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 8017784:	7812      	ldrb	r2, [r2, #0]
 8017786:	b9a2      	cbnz	r2, 80177b2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8017788:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801778c:	4286      	cmp	r6, r0
 801778e:	4640      	mov	r0, r8
 8017790:	9303      	str	r3, [sp, #12]
 8017792:	bf14      	ite	ne
 8017794:	2600      	movne	r6, #0
 8017796:	2601      	moveq	r6, #1
 8017798:	f7f3 fd83 	bl	800b2a2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801779c:	9b03      	ldr	r3, [sp, #12]
 801779e:	b160      	cbz	r0, 80177ba <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 80177a0:	2300      	movs	r3, #0
 80177a2:	8023      	strh	r3, [r4, #0]
 80177a4:	8063      	strh	r3, [r4, #2]
 80177a6:	80a3      	strh	r3, [r4, #4]
 80177a8:	4620      	mov	r0, r4
 80177aa:	80e3      	strh	r3, [r4, #6]
 80177ac:	b011      	add	sp, #68	; 0x44
 80177ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80177b2:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 80177b6:	428e      	cmp	r6, r1
 80177b8:	e7e9      	b.n	801778e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 80177ba:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80177be:	9205      	str	r2, [sp, #20]
 80177c0:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 80177c4:	9206      	str	r2, [sp, #24]
 80177c6:	f8bb 2000 	ldrh.w	r2, [fp]
 80177ca:	900e      	str	r0, [sp, #56]	; 0x38
 80177cc:	1a9b      	subs	r3, r3, r2
 80177ce:	b21b      	sxth	r3, r3
 80177d0:	9303      	str	r3, [sp, #12]
 80177d2:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80177d6:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 80177da:	ebaa 0a03 	sub.w	sl, sl, r3
 80177de:	fa0f f38a 	sxth.w	r3, sl
 80177e2:	9304      	str	r3, [sp, #16]
 80177e4:	9b03      	ldr	r3, [sp, #12]
 80177e6:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80177ea:	9b04      	ldr	r3, [sp, #16]
 80177ec:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80177f0:	9b05      	ldr	r3, [sp, #20]
 80177f2:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80177f6:	a90e      	add	r1, sp, #56	; 0x38
 80177f8:	9b06      	ldr	r3, [sp, #24]
 80177fa:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80177fe:	a80c      	add	r0, sp, #48	; 0x30
 8017800:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 8017804:	f7f9 fcc2 	bl	801118c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017808:	4640      	mov	r0, r8
 801780a:	f7f9 fc97 	bl	801113c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801780e:	a80e      	add	r0, sp, #56	; 0x38
 8017810:	f7f9 fc94 	bl	801113c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017814:	4b38      	ldr	r3, [pc, #224]	; (80178f8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 8017816:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801781a:	881b      	ldrh	r3, [r3, #0]
 801781c:	9307      	str	r3, [sp, #28]
 801781e:	682b      	ldr	r3, [r5, #0]
 8017820:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 80178fc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8017824:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8017826:	4628      	mov	r0, r5
 8017828:	4798      	blx	r3
 801782a:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801782e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8017832:	4681      	mov	r9, r0
 8017834:	fb1a 3305 	smlabb	r3, sl, r5, r3
 8017838:	f8db 0000 	ldr.w	r0, [fp]
 801783c:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801783e:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8017842:	6803      	ldr	r3, [r0, #0]
 8017844:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8017846:	4798      	blx	r3
 8017848:	4607      	mov	r7, r0
 801784a:	f8db 0000 	ldr.w	r0, [fp]
 801784e:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8017852:	6803      	ldr	r3, [r0, #0]
 8017854:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8017858:	9109      	str	r1, [sp, #36]	; 0x24
 801785a:	9208      	str	r2, [sp, #32]
 801785c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801785e:	4798      	blx	r3
 8017860:	f010 0f01 	tst.w	r0, #1
 8017864:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8017868:	d012      	beq.n	8017890 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801786a:	f8db 0000 	ldr.w	r0, [fp]
 801786e:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 8017872:	6803      	ldr	r3, [r0, #0]
 8017874:	9200      	str	r2, [sp, #0]
 8017876:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8017878:	e898 0006 	ldmia.w	r8, {r1, r2}
 801787c:	462b      	mov	r3, r5
 801787e:	47b0      	blx	r6
 8017880:	9b03      	ldr	r3, [sp, #12]
 8017882:	8023      	strh	r3, [r4, #0]
 8017884:	9b04      	ldr	r3, [sp, #16]
 8017886:	8063      	strh	r3, [r4, #2]
 8017888:	9b05      	ldr	r3, [sp, #20]
 801788a:	80a3      	strh	r3, [r4, #4]
 801788c:	9b06      	ldr	r3, [sp, #24]
 801788e:	e78b      	b.n	80177a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8017890:	fb09 f202 	mul.w	r2, r9, r2
 8017894:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8017898:	440f      	add	r7, r1
 801789a:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801789e:	b166      	cbz	r6, 80178ba <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 80178a0:	9a07      	ldr	r2, [sp, #28]
 80178a2:	4592      	cmp	sl, r2
 80178a4:	d109      	bne.n	80178ba <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 80178a6:	f8db 0000 	ldr.w	r0, [fp]
 80178aa:	6802      	ldr	r2, [r0, #0]
 80178ac:	fb09 f303 	mul.w	r3, r9, r3
 80178b0:	6b56      	ldr	r6, [r2, #52]	; 0x34
 80178b2:	4629      	mov	r1, r5
 80178b4:	463a      	mov	r2, r7
 80178b6:	47b0      	blx	r6
 80178b8:	e7e2      	b.n	8017880 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 80178ba:	fb0a f303 	mul.w	r3, sl, r3
 80178be:	f8df b03c 	ldr.w	fp, [pc, #60]	; 80178fc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 80178c2:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 80178c6:	ea4f 064a 	mov.w	r6, sl, lsl #1
 80178ca:	4545      	cmp	r5, r8
 80178cc:	d2d8      	bcs.n	8017880 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 80178ce:	f8db 0000 	ldr.w	r0, [fp]
 80178d2:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80178d6:	6802      	ldr	r2, [r0, #0]
 80178d8:	4629      	mov	r1, r5
 80178da:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 80178de:	005b      	lsls	r3, r3, #1
 80178e0:	463a      	mov	r2, r7
 80178e2:	47d0      	blx	sl
 80178e4:	444f      	add	r7, r9
 80178e6:	4435      	add	r5, r6
 80178e8:	e7ef      	b.n	80178ca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 80178ea:	bf00      	nop
 80178ec:	20017444 	.word	0x20017444
 80178f0:	20017446 	.word	0x20017446
 80178f4:	20017448 	.word	0x20017448
 80178f8:	2001744a 	.word	0x2001744a
 80178fc:	20017450 	.word	0x20017450

08017900 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8017900:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017902:	4606      	mov	r6, r0
 8017904:	b087      	sub	sp, #28
 8017906:	460c      	mov	r4, r1
 8017908:	4617      	mov	r7, r2
 801790a:	461d      	mov	r5, r3
 801790c:	b333      	cbz	r3, 801795c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801790e:	4608      	mov	r0, r1
 8017910:	f7f3 fcc7 	bl	800b2a2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017914:	bb10      	cbnz	r0, 801795c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8017916:	6820      	ldr	r0, [r4, #0]
 8017918:	6861      	ldr	r1, [r4, #4]
 801791a:	4c1c      	ldr	r4, [pc, #112]	; (801798c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801791c:	ab04      	add	r3, sp, #16
 801791e:	c303      	stmia	r3!, {r0, r1}
 8017920:	a804      	add	r0, sp, #16
 8017922:	f7f9 fc0b 	bl	801113c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017926:	6820      	ldr	r0, [r4, #0]
 8017928:	6803      	ldr	r3, [r0, #0]
 801792a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801792c:	4798      	blx	r3
 801792e:	2dff      	cmp	r5, #255	; 0xff
 8017930:	d016      	beq.n	8017960 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 8017932:	f010 0f08 	tst.w	r0, #8
 8017936:	6820      	ldr	r0, [r4, #0]
 8017938:	d015      	beq.n	8017966 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801793a:	2400      	movs	r4, #0
 801793c:	6801      	ldr	r1, [r0, #0]
 801793e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8017942:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8017946:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801794a:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801794e:	9401      	str	r4, [sp, #4]
 8017950:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8017954:	9400      	str	r4, [sp, #0]
 8017956:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 8017958:	4639      	mov	r1, r7
 801795a:	47a0      	blx	r4
 801795c:	b007      	add	sp, #28
 801795e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017960:	f010 0f02 	tst.w	r0, #2
 8017964:	e7e7      	b.n	8017936 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8017966:	6803      	ldr	r3, [r0, #0]
 8017968:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801796a:	4798      	blx	r3
 801796c:	4b08      	ldr	r3, [pc, #32]	; (8017990 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801796e:	881a      	ldrh	r2, [r3, #0]
 8017970:	6833      	ldr	r3, [r6, #0]
 8017972:	e9cd 7500 	strd	r7, r5, [sp]
 8017976:	4601      	mov	r1, r0
 8017978:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801797a:	4630      	mov	r0, r6
 801797c:	ab04      	add	r3, sp, #16
 801797e:	47a8      	blx	r5
 8017980:	6820      	ldr	r0, [r4, #0]
 8017982:	6803      	ldr	r3, [r0, #0]
 8017984:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017986:	4798      	blx	r3
 8017988:	e7e8      	b.n	801795c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801798a:	bf00      	nop
 801798c:	20017450 	.word	0x20017450
 8017990:	2001744a 	.word	0x2001744a

08017994 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8017994:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017998:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801799c:	9e08      	ldr	r6, [sp, #32]
 801799e:	4688      	mov	r8, r1
 80179a0:	4614      	mov	r4, r2
 80179a2:	461d      	mov	r5, r3
 80179a4:	2f00      	cmp	r7, #0
 80179a6:	f000 80a9 	beq.w	8017afc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80179aa:	4618      	mov	r0, r3
 80179ac:	f7f3 fc79 	bl	800b2a2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80179b0:	2800      	cmp	r0, #0
 80179b2:	f040 80a3 	bne.w	8017afc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80179b6:	f9b5 1000 	ldrsh.w	r1, [r5]
 80179ba:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80179be:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 80179c2:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 80179c6:	fb04 1303 	mla	r3, r4, r3, r1
 80179ca:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 80179ce:	4365      	muls	r5, r4
 80179d0:	2fff      	cmp	r7, #255	; 0xff
 80179d2:	eba4 0200 	sub.w	r2, r4, r0
 80179d6:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 80179da:	ea4f 2816 	mov.w	r8, r6, lsr #8
 80179de:	d04a      	beq.n	8017a76 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 80179e0:	b2bc      	uxth	r4, r7
 80179e2:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 80179e6:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 80179ea:	fa5f f788 	uxtb.w	r7, r8
 80179ee:	b2f3      	uxtb	r3, r6
 80179f0:	0040      	lsls	r0, r0, #1
 80179f2:	fb0e fe04 	mul.w	lr, lr, r4
 80179f6:	4367      	muls	r7, r4
 80179f8:	4363      	muls	r3, r4
 80179fa:	ea4f 0842 	mov.w	r8, r2, lsl #1
 80179fe:	fa1f fc8c 	uxth.w	ip, ip
 8017a02:	42a9      	cmp	r1, r5
 8017a04:	d27a      	bcs.n	8017afc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017a06:	eb01 0900 	add.w	r9, r1, r0
 8017a0a:	4549      	cmp	r1, r9
 8017a0c:	d231      	bcs.n	8017a72 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 8017a0e:	880a      	ldrh	r2, [r1, #0]
 8017a10:	1214      	asrs	r4, r2, #8
 8017a12:	10d6      	asrs	r6, r2, #3
 8017a14:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8017a18:	00d2      	lsls	r2, r2, #3
 8017a1a:	b2d2      	uxtb	r2, r2
 8017a1c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8017a20:	fb14 f40c 	smulbb	r4, r4, ip
 8017a24:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017a28:	4474      	add	r4, lr
 8017a2a:	fb12 f20c 	smulbb	r2, r2, ip
 8017a2e:	b2a4      	uxth	r4, r4
 8017a30:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8017a34:	441a      	add	r2, r3
 8017a36:	b292      	uxth	r2, r2
 8017a38:	f104 0a01 	add.w	sl, r4, #1
 8017a3c:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8017a40:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8017a44:	fb16 f60c 	smulbb	r6, r6, ip
 8017a48:	f102 0a01 	add.w	sl, r2, #1
 8017a4c:	443e      	add	r6, r7
 8017a4e:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8017a52:	b2b6      	uxth	r6, r6
 8017a54:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8017a58:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017a5c:	4322      	orrs	r2, r4
 8017a5e:	1c74      	adds	r4, r6, #1
 8017a60:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8017a64:	0976      	lsrs	r6, r6, #5
 8017a66:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8017a6a:	4332      	orrs	r2, r6
 8017a6c:	f821 2b02 	strh.w	r2, [r1], #2
 8017a70:	e7cb      	b.n	8017a0a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 8017a72:	4441      	add	r1, r8
 8017a74:	e7c5      	b.n	8017a02 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 8017a76:	4f22      	ldr	r7, [pc, #136]	; (8017b00 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 8017a78:	0973      	lsrs	r3, r6, #5
 8017a7a:	ea08 0707 	and.w	r7, r8, r7
 8017a7e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017a82:	433b      	orrs	r3, r7
 8017a84:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8017a88:	4333      	orrs	r3, r6
 8017a8a:	07e7      	lsls	r7, r4, #31
 8017a8c:	b29b      	uxth	r3, r3
 8017a8e:	d50b      	bpl.n	8017aa8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8017a90:	0040      	lsls	r0, r0, #1
 8017a92:	0052      	lsls	r2, r2, #1
 8017a94:	42a9      	cmp	r1, r5
 8017a96:	d231      	bcs.n	8017afc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017a98:	180c      	adds	r4, r1, r0
 8017a9a:	42a1      	cmp	r1, r4
 8017a9c:	d202      	bcs.n	8017aa4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 8017a9e:	f821 3b02 	strh.w	r3, [r1], #2
 8017aa2:	e7fa      	b.n	8017a9a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 8017aa4:	4411      	add	r1, r2
 8017aa6:	e7f5      	b.n	8017a94 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 8017aa8:	078e      	lsls	r6, r1, #30
 8017aaa:	d008      	beq.n	8017abe <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8017aac:	0066      	lsls	r6, r4, #1
 8017aae:	460a      	mov	r2, r1
 8017ab0:	42aa      	cmp	r2, r5
 8017ab2:	d202      	bcs.n	8017aba <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 8017ab4:	8013      	strh	r3, [r2, #0]
 8017ab6:	4432      	add	r2, r6
 8017ab8:	e7fa      	b.n	8017ab0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 8017aba:	3102      	adds	r1, #2
 8017abc:	3801      	subs	r0, #1
 8017abe:	07c2      	lsls	r2, r0, #31
 8017ac0:	d50b      	bpl.n	8017ada <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 8017ac2:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 8017ac6:	3a01      	subs	r2, #1
 8017ac8:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8017acc:	0066      	lsls	r6, r4, #1
 8017ace:	42aa      	cmp	r2, r5
 8017ad0:	d202      	bcs.n	8017ad8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 8017ad2:	8013      	strh	r3, [r2, #0]
 8017ad4:	4432      	add	r2, r6
 8017ad6:	e7fa      	b.n	8017ace <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 8017ad8:	3801      	subs	r0, #1
 8017ada:	b178      	cbz	r0, 8017afc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017adc:	1040      	asrs	r0, r0, #1
 8017ade:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8017ae2:	0080      	lsls	r0, r0, #2
 8017ae4:	0064      	lsls	r4, r4, #1
 8017ae6:	42a9      	cmp	r1, r5
 8017ae8:	d208      	bcs.n	8017afc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017aea:	180e      	adds	r6, r1, r0
 8017aec:	460a      	mov	r2, r1
 8017aee:	42b2      	cmp	r2, r6
 8017af0:	d202      	bcs.n	8017af8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 8017af2:	f842 3b04 	str.w	r3, [r2], #4
 8017af6:	e7fa      	b.n	8017aee <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 8017af8:	4421      	add	r1, r4
 8017afa:	e7f4      	b.n	8017ae6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 8017afc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017b00:	00fff800 	.word	0x00fff800

08017b04 <_ZN8touchgfx8LCD16bppC1Ev>:
 8017b04:	2200      	movs	r2, #0
 8017b06:	4910      	ldr	r1, [pc, #64]	; (8017b48 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 8017b08:	6042      	str	r2, [r0, #4]
 8017b0a:	6001      	str	r1, [r0, #0]
 8017b0c:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8017b10:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8017b14:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8017b18:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8017b1c:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8017b20:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8017b24:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8017b28:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8017b2c:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8017b30:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8017b34:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8017b38:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8017b3c:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8017b40:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8017b44:	4770      	bx	lr
 8017b46:	bf00      	nop
 8017b48:	080245a4 	.word	0x080245a4

08017b4c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8017b4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017b50:	460d      	mov	r5, r1
 8017b52:	b08d      	sub	sp, #52	; 0x34
 8017b54:	4604      	mov	r4, r0
 8017b56:	6808      	ldr	r0, [r1, #0]
 8017b58:	6849      	ldr	r1, [r1, #4]
 8017b5a:	4699      	mov	r9, r3
 8017b5c:	ab08      	add	r3, sp, #32
 8017b5e:	c303      	stmia	r3!, {r0, r1}
 8017b60:	6810      	ldr	r0, [r2, #0]
 8017b62:	6851      	ldr	r1, [r2, #4]
 8017b64:	ab0a      	add	r3, sp, #40	; 0x28
 8017b66:	c303      	stmia	r3!, {r0, r1}
 8017b68:	a808      	add	r0, sp, #32
 8017b6a:	f7f9 fae7 	bl	801113c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017b6e:	4629      	mov	r1, r5
 8017b70:	a80a      	add	r0, sp, #40	; 0x28
 8017b72:	f7f9 fb0b 	bl	801118c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017b76:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8017b7a:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8017b7e:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8017b82:	4d63      	ldr	r5, [pc, #396]	; (8017d10 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8017b84:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8017b88:	6828      	ldr	r0, [r5, #0]
 8017b8a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8017b8e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017b92:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8017b96:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8017b9a:	440a      	add	r2, r1
 8017b9c:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8017ba0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8017ba4:	4413      	add	r3, r2
 8017ba6:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8017baa:	6803      	ldr	r3, [r0, #0]
 8017bac:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017bae:	4798      	blx	r3
 8017bb0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017bb4:	d119      	bne.n	8017bea <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8017bb6:	f010 0f20 	tst.w	r0, #32
 8017bba:	6828      	ldr	r0, [r5, #0]
 8017bbc:	d018      	beq.n	8017bf0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8017bbe:	2500      	movs	r5, #0
 8017bc0:	6801      	ldr	r1, [r0, #0]
 8017bc2:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8017bc6:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8017bca:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8017bce:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 8017bd2:	9502      	str	r5, [sp, #8]
 8017bd4:	b2b6      	uxth	r6, r6
 8017bd6:	fa1f f588 	uxth.w	r5, r8
 8017bda:	9601      	str	r6, [sp, #4]
 8017bdc:	9500      	str	r5, [sp, #0]
 8017bde:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 8017be0:	4621      	mov	r1, r4
 8017be2:	47a8      	blx	r5
 8017be4:	b00d      	add	sp, #52	; 0x34
 8017be6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017bea:	f010 0f40 	tst.w	r0, #64	; 0x40
 8017bee:	e7e4      	b.n	8017bba <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8017bf0:	6803      	ldr	r3, [r0, #0]
 8017bf2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017bf4:	4798      	blx	r3
 8017bf6:	4947      	ldr	r1, [pc, #284]	; (8017d14 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8017bf8:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8017bfc:	880b      	ldrh	r3, [r1, #0]
 8017bfe:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 8017c02:	fb03 5202 	mla	r2, r3, r2, r5
 8017c06:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017c0a:	4373      	muls	r3, r6
 8017c0c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017c10:	9307      	str	r3, [sp, #28]
 8017c12:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8017c16:	9306      	str	r3, [sp, #24]
 8017c18:	468a      	mov	sl, r1
 8017c1a:	9b07      	ldr	r3, [sp, #28]
 8017c1c:	4298      	cmp	r0, r3
 8017c1e:	d270      	bcs.n	8017d02 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8017c20:	9b06      	ldr	r3, [sp, #24]
 8017c22:	4621      	mov	r1, r4
 8017c24:	eb00 0b03 	add.w	fp, r0, r3
 8017c28:	4558      	cmp	r0, fp
 8017c2a:	d25d      	bcs.n	8017ce8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8017c2c:	f851 4b04 	ldr.w	r4, [r1], #4
 8017c30:	0e23      	lsrs	r3, r4, #24
 8017c32:	d014      	beq.n	8017c5e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8017c34:	2bff      	cmp	r3, #255	; 0xff
 8017c36:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8017c3a:	d112      	bne.n	8017c62 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8017c3c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017c40:	d10f      	bne.n	8017c62 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8017c42:	0963      	lsrs	r3, r4, #5
 8017c44:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8017c48:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017c4c:	f02c 0c07 	bic.w	ip, ip, #7
 8017c50:	ea43 0c0c 	orr.w	ip, r3, ip
 8017c54:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8017c58:	ea4c 0404 	orr.w	r4, ip, r4
 8017c5c:	8004      	strh	r4, [r0, #0]
 8017c5e:	3002      	adds	r0, #2
 8017c60:	e7e2      	b.n	8017c28 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8017c62:	fb09 f303 	mul.w	r3, r9, r3
 8017c66:	8807      	ldrh	r7, [r0, #0]
 8017c68:	1c5a      	adds	r2, r3, #1
 8017c6a:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8017c6e:	1212      	asrs	r2, r2, #8
 8017c70:	123e      	asrs	r6, r7, #8
 8017c72:	b293      	uxth	r3, r2
 8017c74:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8017c78:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8017c7c:	43d2      	mvns	r2, r2
 8017c7e:	b2d2      	uxtb	r2, r2
 8017c80:	10fd      	asrs	r5, r7, #3
 8017c82:	fb1e fe03 	smulbb	lr, lr, r3
 8017c86:	00ff      	lsls	r7, r7, #3
 8017c88:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017c8c:	fb06 e602 	mla	r6, r6, r2, lr
 8017c90:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8017c94:	b2ff      	uxtb	r7, r7
 8017c96:	fa5f fc8c 	uxtb.w	ip, ip
 8017c9a:	b2e4      	uxtb	r4, r4
 8017c9c:	b2b6      	uxth	r6, r6
 8017c9e:	fb1c fc03 	smulbb	ip, ip, r3
 8017ca2:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8017ca6:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8017caa:	fb14 f403 	smulbb	r4, r4, r3
 8017cae:	fb05 c502 	mla	r5, r5, r2, ip
 8017cb2:	f106 0e01 	add.w	lr, r6, #1
 8017cb6:	fb07 4702 	mla	r7, r7, r2, r4
 8017cba:	b2ad      	uxth	r5, r5
 8017cbc:	b2bf      	uxth	r7, r7
 8017cbe:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8017cc2:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 8017cc6:	f105 0c01 	add.w	ip, r5, #1
 8017cca:	1c7e      	adds	r6, r7, #1
 8017ccc:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8017cd0:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8017cd4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8017cd8:	096d      	lsrs	r5, r5, #5
 8017cda:	ea46 060e 	orr.w	r6, r6, lr
 8017cde:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017ce2:	432e      	orrs	r6, r5
 8017ce4:	8006      	strh	r6, [r0, #0]
 8017ce6:	e7ba      	b.n	8017c5e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8017ce8:	f8ba 3000 	ldrh.w	r3, [sl]
 8017cec:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 8017cf0:	eba3 0308 	sub.w	r3, r3, r8
 8017cf4:	eba4 0408 	sub.w	r4, r4, r8
 8017cf8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017cfc:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8017d00:	e78b      	b.n	8017c1a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8017d02:	4b03      	ldr	r3, [pc, #12]	; (8017d10 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8017d04:	6818      	ldr	r0, [r3, #0]
 8017d06:	6803      	ldr	r3, [r0, #0]
 8017d08:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017d0a:	4798      	blx	r3
 8017d0c:	e76a      	b.n	8017be4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8017d0e:	bf00      	nop
 8017d10:	20017450 	.word	0x20017450
 8017d14:	2001744a 	.word	0x2001744a

08017d18 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8017d18:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017d1c:	460c      	mov	r4, r1
 8017d1e:	b085      	sub	sp, #20
 8017d20:	6810      	ldr	r0, [r2, #0]
 8017d22:	6851      	ldr	r1, [r2, #4]
 8017d24:	466d      	mov	r5, sp
 8017d26:	c503      	stmia	r5!, {r0, r1}
 8017d28:	6818      	ldr	r0, [r3, #0]
 8017d2a:	6859      	ldr	r1, [r3, #4]
 8017d2c:	4616      	mov	r6, r2
 8017d2e:	c503      	stmia	r5!, {r0, r1}
 8017d30:	4668      	mov	r0, sp
 8017d32:	f7f9 fa03 	bl	801113c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017d36:	4631      	mov	r1, r6
 8017d38:	a802      	add	r0, sp, #8
 8017d3a:	f7f9 fa27 	bl	801118c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017d3e:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8017d42:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8017d46:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8017d4a:	4d28      	ldr	r5, [pc, #160]	; (8017dec <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8017d4c:	4e28      	ldr	r6, [pc, #160]	; (8017df0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8017d4e:	6828      	ldr	r0, [r5, #0]
 8017d50:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8017d54:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8017d58:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017d5c:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8017d60:	f8bd 1000 	ldrh.w	r1, [sp]
 8017d64:	440a      	add	r2, r1
 8017d66:	f8ad 2008 	strh.w	r2, [sp, #8]
 8017d6a:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8017d6e:	4413      	add	r3, r2
 8017d70:	f8ad 300a 	strh.w	r3, [sp, #10]
 8017d74:	6803      	ldr	r3, [r0, #0]
 8017d76:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017d78:	4798      	blx	r3
 8017d7a:	8833      	ldrh	r3, [r6, #0]
 8017d7c:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8017d80:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8017d84:	f8df e06c 	ldr.w	lr, [pc, #108]	; 8017df4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8017d88:	fb03 1202 	mla	r2, r3, r2, r1
 8017d8c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017d90:	fb08 f303 	mul.w	r3, r8, r3
 8017d94:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017d98:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8017d9c:	4298      	cmp	r0, r3
 8017d9e:	d21d      	bcs.n	8017ddc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8017da0:	eb00 080c 	add.w	r8, r0, ip
 8017da4:	4540      	cmp	r0, r8
 8017da6:	d20f      	bcs.n	8017dc8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8017da8:	f854 1b04 	ldr.w	r1, [r4], #4
 8017dac:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8017db0:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8017db4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017db8:	ea42 0209 	orr.w	r2, r2, r9
 8017dbc:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8017dc0:	430a      	orrs	r2, r1
 8017dc2:	f820 2b02 	strh.w	r2, [r0], #2
 8017dc6:	e7ed      	b.n	8017da4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8017dc8:	8832      	ldrh	r2, [r6, #0]
 8017dca:	1bd2      	subs	r2, r2, r7
 8017dcc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017dd0:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8017dd4:	1bd2      	subs	r2, r2, r7
 8017dd6:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8017dda:	e7df      	b.n	8017d9c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8017ddc:	6828      	ldr	r0, [r5, #0]
 8017dde:	6803      	ldr	r3, [r0, #0]
 8017de0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017de2:	4798      	blx	r3
 8017de4:	b005      	add	sp, #20
 8017de6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017dea:	bf00      	nop
 8017dec:	20017450 	.word	0x20017450
 8017df0:	2001744a 	.word	0x2001744a
 8017df4:	fffff800 	.word	0xfffff800

08017df8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8017df8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017dfc:	460e      	mov	r6, r1
 8017dfe:	b08e      	sub	sp, #56	; 0x38
 8017e00:	4604      	mov	r4, r0
 8017e02:	6808      	ldr	r0, [r1, #0]
 8017e04:	6849      	ldr	r1, [r1, #4]
 8017e06:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8017fe0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8017e0a:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 8017fe4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8017e0e:	461d      	mov	r5, r3
 8017e10:	ab0a      	add	r3, sp, #40	; 0x28
 8017e12:	c303      	stmia	r3!, {r0, r1}
 8017e14:	6810      	ldr	r0, [r2, #0]
 8017e16:	6851      	ldr	r1, [r2, #4]
 8017e18:	ab0c      	add	r3, sp, #48	; 0x30
 8017e1a:	c303      	stmia	r3!, {r0, r1}
 8017e1c:	a80a      	add	r0, sp, #40	; 0x28
 8017e1e:	f7f9 f98d 	bl	801113c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017e22:	4631      	mov	r1, r6
 8017e24:	a80c      	add	r0, sp, #48	; 0x30
 8017e26:	f7f9 f9b1 	bl	801118c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017e2a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8017e2e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8017e32:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8017e36:	f8d8 0000 	ldr.w	r0, [r8]
 8017e3a:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 8017e3e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8017e42:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017e46:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8017e4a:	440c      	add	r4, r1
 8017e4c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8017e50:	440a      	add	r2, r1
 8017e52:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8017e56:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 8017e5a:	4413      	add	r3, r2
 8017e5c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8017e60:	6803      	ldr	r3, [r0, #0]
 8017e62:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017e64:	4798      	blx	r3
 8017e66:	2dff      	cmp	r5, #255	; 0xff
 8017e68:	d124      	bne.n	8017eb4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8017e6a:	f010 0f01 	tst.w	r0, #1
 8017e6e:	f8d8 0000 	ldr.w	r0, [r8]
 8017e72:	d022      	beq.n	8017eba <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8017e74:	2100      	movs	r1, #0
 8017e76:	f8d0 c000 	ldr.w	ip, [r0]
 8017e7a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8017e7e:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8017e82:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8017e86:	f04f 0e01 	mov.w	lr, #1
 8017e8a:	f8cd e018 	str.w	lr, [sp, #24]
 8017e8e:	f8b9 e000 	ldrh.w	lr, [r9]
 8017e92:	9503      	str	r5, [sp, #12]
 8017e94:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8017e98:	b2b6      	uxth	r6, r6
 8017e9a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8017e9e:	9102      	str	r1, [sp, #8]
 8017ea0:	b2bf      	uxth	r7, r7
 8017ea2:	9601      	str	r6, [sp, #4]
 8017ea4:	9700      	str	r7, [sp, #0]
 8017ea6:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 8017eaa:	4621      	mov	r1, r4
 8017eac:	47a8      	blx	r5
 8017eae:	b00e      	add	sp, #56	; 0x38
 8017eb0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017eb4:	f010 0f04 	tst.w	r0, #4
 8017eb8:	e7d9      	b.n	8017e6e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8017eba:	6803      	ldr	r3, [r0, #0]
 8017ebc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017ebe:	4798      	blx	r3
 8017ec0:	f8b9 3000 	ldrh.w	r3, [r9]
 8017ec4:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8017ec8:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8017ecc:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8017ed0:	fb03 1202 	mla	r2, r3, r2, r1
 8017ed4:	ebac 0c07 	sub.w	ip, ip, r7
 8017ed8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017edc:	435e      	muls	r6, r3
 8017ede:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8017ee2:	2dff      	cmp	r5, #255	; 0xff
 8017ee4:	eba3 0707 	sub.w	r7, r3, r7
 8017ee8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8017eec:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8017ef0:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8017ef4:	d049      	beq.n	8017f8a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8017ef6:	43eb      	mvns	r3, r5
 8017ef8:	fa1f f985 	uxth.w	r9, r5
 8017efc:	b2db      	uxtb	r3, r3
 8017efe:	42b0      	cmp	r0, r6
 8017f00:	d266      	bcs.n	8017fd0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8017f02:	eb00 0a0e 	add.w	sl, r0, lr
 8017f06:	4550      	cmp	r0, sl
 8017f08:	4621      	mov	r1, r4
 8017f0a:	f104 0403 	add.w	r4, r4, #3
 8017f0e:	d25b      	bcs.n	8017fc8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8017f10:	8802      	ldrh	r2, [r0, #0]
 8017f12:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8017f16:	ea4f 2822 	mov.w	r8, r2, asr #8
 8017f1a:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8017f1e:	fb11 f109 	smulbb	r1, r1, r9
 8017f22:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8017f26:	10d5      	asrs	r5, r2, #3
 8017f28:	fb08 1803 	mla	r8, r8, r3, r1
 8017f2c:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8017f30:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8017f34:	fb11 f109 	smulbb	r1, r1, r9
 8017f38:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8017f3c:	fb05 1503 	mla	r5, r5, r3, r1
 8017f40:	00d2      	lsls	r2, r2, #3
 8017f42:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8017f46:	b2d2      	uxtb	r2, r2
 8017f48:	fb11 f109 	smulbb	r1, r1, r9
 8017f4c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017f50:	fa1f f888 	uxth.w	r8, r8
 8017f54:	fb02 1203 	mla	r2, r2, r3, r1
 8017f58:	b292      	uxth	r2, r2
 8017f5a:	f108 0101 	add.w	r1, r8, #1
 8017f5e:	b2ad      	uxth	r5, r5
 8017f60:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8017f64:	1c51      	adds	r1, r2, #1
 8017f66:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8017f6a:	1c69      	adds	r1, r5, #1
 8017f6c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8017f70:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8017f74:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017f78:	096d      	lsrs	r5, r5, #5
 8017f7a:	ea42 0208 	orr.w	r2, r2, r8
 8017f7e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017f82:	432a      	orrs	r2, r5
 8017f84:	f820 2b02 	strh.w	r2, [r0], #2
 8017f88:	e7bd      	b.n	8017f06 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8017f8a:	4a14      	ldr	r2, [pc, #80]	; (8017fdc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8017f8c:	42b0      	cmp	r0, r6
 8017f8e:	d21f      	bcs.n	8017fd0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8017f90:	eb00 050e 	add.w	r5, r0, lr
 8017f94:	42a8      	cmp	r0, r5
 8017f96:	4621      	mov	r1, r4
 8017f98:	f104 0403 	add.w	r4, r4, #3
 8017f9c:	d210      	bcs.n	8017fc0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8017f9e:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8017fa2:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8017fa6:	00db      	lsls	r3, r3, #3
 8017fa8:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8017fac:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017fb0:	430b      	orrs	r3, r1
 8017fb2:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8017fb6:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8017fba:	f820 3b02 	strh.w	r3, [r0], #2
 8017fbe:	e7e9      	b.n	8017f94 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8017fc0:	4438      	add	r0, r7
 8017fc2:	eb01 040c 	add.w	r4, r1, ip
 8017fc6:	e7e1      	b.n	8017f8c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8017fc8:	4438      	add	r0, r7
 8017fca:	eb01 040c 	add.w	r4, r1, ip
 8017fce:	e796      	b.n	8017efe <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8017fd0:	4b03      	ldr	r3, [pc, #12]	; (8017fe0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8017fd2:	6818      	ldr	r0, [r3, #0]
 8017fd4:	6803      	ldr	r3, [r0, #0]
 8017fd6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017fd8:	4798      	blx	r3
 8017fda:	e768      	b.n	8017eae <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8017fdc:	fffff800 	.word	0xfffff800
 8017fe0:	20017450 	.word	0x20017450
 8017fe4:	2001744a 	.word	0x2001744a

08017fe8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8017fe8:	b4f0      	push	{r4, r5, r6, r7}
 8017fea:	4616      	mov	r6, r2
 8017fec:	2e01      	cmp	r6, #1
 8017fee:	461c      	mov	r4, r3
 8017ff0:	460d      	mov	r5, r1
 8017ff2:	9a04      	ldr	r2, [sp, #16]
 8017ff4:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8017ff8:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8017ffc:	d012      	beq.n	8018024 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8017ffe:	d303      	bcc.n	8018008 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8018000:	2e02      	cmp	r6, #2
 8018002:	d00a      	beq.n	801801a <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8018004:	bcf0      	pop	{r4, r5, r6, r7}
 8018006:	4770      	bx	lr
 8018008:	6805      	ldr	r5, [r0, #0]
 801800a:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801800e:	68ed      	ldr	r5, [r5, #12]
 8018010:	4613      	mov	r3, r2
 8018012:	46ac      	mov	ip, r5
 8018014:	4622      	mov	r2, r4
 8018016:	bcf0      	pop	{r4, r5, r6, r7}
 8018018:	4760      	bx	ip
 801801a:	4621      	mov	r1, r4
 801801c:	4628      	mov	r0, r5
 801801e:	bcf0      	pop	{r4, r5, r6, r7}
 8018020:	f7ff bd94 	b.w	8017b4c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018024:	4621      	mov	r1, r4
 8018026:	4628      	mov	r0, r5
 8018028:	bcf0      	pop	{r4, r5, r6, r7}
 801802a:	f7ff bee5 	b.w	8017df8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08018030 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8018030:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018034:	4681      	mov	r9, r0
 8018036:	b093      	sub	sp, #76	; 0x4c
 8018038:	6810      	ldr	r0, [r2, #0]
 801803a:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801803e:	4f6d      	ldr	r7, [pc, #436]	; (80181f4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8018040:	4688      	mov	r8, r1
 8018042:	6851      	ldr	r1, [r2, #4]
 8018044:	ac0e      	add	r4, sp, #56	; 0x38
 8018046:	c403      	stmia	r4!, {r0, r1}
 8018048:	6818      	ldr	r0, [r3, #0]
 801804a:	6859      	ldr	r1, [r3, #4]
 801804c:	ac10      	add	r4, sp, #64	; 0x40
 801804e:	4616      	mov	r6, r2
 8018050:	c403      	stmia	r4!, {r0, r1}
 8018052:	a80e      	add	r0, sp, #56	; 0x38
 8018054:	f7f9 f872 	bl	801113c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018058:	4631      	mov	r1, r6
 801805a:	a810      	add	r0, sp, #64	; 0x40
 801805c:	f7f9 f896 	bl	801118c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018060:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8018064:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8018068:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801806c:	4e62      	ldr	r6, [pc, #392]	; (80181f8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801806e:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 8018072:	6830      	ldr	r0, [r6, #0]
 8018074:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8018078:	fb11 2103 	smlabb	r1, r1, r3, r2
 801807c:	4489      	add	r9, r1
 801807e:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8018082:	440a      	add	r2, r1
 8018084:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8018088:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801808c:	4413      	add	r3, r2
 801808e:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8018092:	6803      	ldr	r3, [r0, #0]
 8018094:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018096:	4798      	blx	r3
 8018098:	f010 0f80 	tst.w	r0, #128	; 0x80
 801809c:	6830      	ldr	r0, [r6, #0]
 801809e:	d01d      	beq.n	80180dc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 80180a0:	2200      	movs	r2, #0
 80180a2:	6801      	ldr	r1, [r0, #0]
 80180a4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80180a8:	e9cd 2208 	strd	r2, r2, [sp, #32]
 80180ac:	220b      	movs	r2, #11
 80180ae:	9207      	str	r2, [sp, #28]
 80180b0:	883a      	ldrh	r2, [r7, #0]
 80180b2:	9206      	str	r2, [sp, #24]
 80180b4:	2201      	movs	r2, #1
 80180b6:	e9cd a204 	strd	sl, r2, [sp, #16]
 80180ba:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 80180be:	9203      	str	r2, [sp, #12]
 80180c0:	b2a4      	uxth	r4, r4
 80180c2:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 80180c6:	9200      	str	r2, [sp, #0]
 80180c8:	b2ad      	uxth	r5, r5
 80180ca:	9502      	str	r5, [sp, #8]
 80180cc:	9401      	str	r4, [sp, #4]
 80180ce:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 80180d0:	4642      	mov	r2, r8
 80180d2:	4649      	mov	r1, r9
 80180d4:	47a0      	blx	r4
 80180d6:	b013      	add	sp, #76	; 0x4c
 80180d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80180dc:	6803      	ldr	r3, [r0, #0]
 80180de:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80180e0:	4798      	blx	r3
 80180e2:	883b      	ldrh	r3, [r7, #0]
 80180e4:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 80180e8:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 80180ec:	fb03 1202 	mla	r2, r3, r2, r1
 80180f0:	435d      	muls	r5, r3
 80180f2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80180f6:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 80180fa:	920c      	str	r2, [sp, #48]	; 0x30
 80180fc:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8018100:	1b12      	subs	r2, r2, r4
 8018102:	920d      	str	r2, [sp, #52]	; 0x34
 8018104:	0062      	lsls	r2, r4, #1
 8018106:	1b1c      	subs	r4, r3, r4
 8018108:	0063      	lsls	r3, r4, #1
 801810a:	920a      	str	r2, [sp, #40]	; 0x28
 801810c:	930b      	str	r3, [sp, #44]	; 0x2c
 801810e:	f04f 0e04 	mov.w	lr, #4
 8018112:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018114:	4298      	cmp	r0, r3
 8018116:	d266      	bcs.n	80181e6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8018118:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801811a:	eb00 0b03 	add.w	fp, r0, r3
 801811e:	4558      	cmp	r0, fp
 8018120:	d25c      	bcs.n	80181dc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8018122:	f819 3b01 	ldrb.w	r3, [r9], #1
 8018126:	fb1e e303 	smlabb	r3, lr, r3, lr
 801812a:	f858 2003 	ldr.w	r2, [r8, r3]
 801812e:	0e11      	lsrs	r1, r2, #24
 8018130:	d012      	beq.n	8018158 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8018132:	29ff      	cmp	r1, #255	; 0xff
 8018134:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8018138:	d110      	bne.n	801815c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801813a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801813e:	d10d      	bne.n	801815c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8018140:	0953      	lsrs	r3, r2, #5
 8018142:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8018146:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801814a:	f027 0707 	bic.w	r7, r7, #7
 801814e:	431f      	orrs	r7, r3
 8018150:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8018154:	433a      	orrs	r2, r7
 8018156:	8002      	strh	r2, [r0, #0]
 8018158:	3002      	adds	r0, #2
 801815a:	e7e0      	b.n	801811e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801815c:	fb0a f101 	mul.w	r1, sl, r1
 8018160:	8806      	ldrh	r6, [r0, #0]
 8018162:	1c4b      	adds	r3, r1, #1
 8018164:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8018168:	1235      	asrs	r5, r6, #8
 801816a:	10f4      	asrs	r4, r6, #3
 801816c:	121b      	asrs	r3, r3, #8
 801816e:	00f6      	lsls	r6, r6, #3
 8018170:	b299      	uxth	r1, r3
 8018172:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8018176:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801817a:	b2f6      	uxtb	r6, r6
 801817c:	43db      	mvns	r3, r3
 801817e:	b2d2      	uxtb	r2, r2
 8018180:	b2db      	uxtb	r3, r3
 8018182:	fb1c fc01 	smulbb	ip, ip, r1
 8018186:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801818a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801818e:	fb12 f201 	smulbb	r2, r2, r1
 8018192:	fb05 c503 	mla	r5, r5, r3, ip
 8018196:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801819a:	b2ff      	uxtb	r7, r7
 801819c:	fb06 2203 	mla	r2, r6, r3, r2
 80181a0:	b2ad      	uxth	r5, r5
 80181a2:	fb17 f701 	smulbb	r7, r7, r1
 80181a6:	b292      	uxth	r2, r2
 80181a8:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 80181ac:	fb04 7403 	mla	r4, r4, r3, r7
 80181b0:	f105 0c01 	add.w	ip, r5, #1
 80181b4:	1c57      	adds	r7, r2, #1
 80181b6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80181ba:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80181be:	b2a4      	uxth	r4, r4
 80181c0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80181c4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80181c8:	433d      	orrs	r5, r7
 80181ca:	1c67      	adds	r7, r4, #1
 80181cc:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 80181d0:	0964      	lsrs	r4, r4, #5
 80181d2:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80181d6:	4325      	orrs	r5, r4
 80181d8:	8005      	strh	r5, [r0, #0]
 80181da:	e7bd      	b.n	8018158 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 80181dc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80181de:	4418      	add	r0, r3
 80181e0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80181e2:	4499      	add	r9, r3
 80181e4:	e795      	b.n	8018112 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 80181e6:	4b04      	ldr	r3, [pc, #16]	; (80181f8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 80181e8:	6818      	ldr	r0, [r3, #0]
 80181ea:	6803      	ldr	r3, [r0, #0]
 80181ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80181ee:	4798      	blx	r3
 80181f0:	e771      	b.n	80180d6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 80181f2:	bf00      	nop
 80181f4:	2001744a 	.word	0x2001744a
 80181f8:	20017450 	.word	0x20017450

080181fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 80181fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018200:	b087      	sub	sp, #28
 8018202:	4680      	mov	r8, r0
 8018204:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8018208:	460d      	mov	r5, r1
 801820a:	4614      	mov	r4, r2
 801820c:	2e00      	cmp	r6, #0
 801820e:	f000 80b9 	beq.w	8018384 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8018212:	6810      	ldr	r0, [r2, #0]
 8018214:	6851      	ldr	r1, [r2, #4]
 8018216:	af02      	add	r7, sp, #8
 8018218:	c703      	stmia	r7!, {r0, r1}
 801821a:	6818      	ldr	r0, [r3, #0]
 801821c:	6859      	ldr	r1, [r3, #4]
 801821e:	af04      	add	r7, sp, #16
 8018220:	c703      	stmia	r7!, {r0, r1}
 8018222:	a802      	add	r0, sp, #8
 8018224:	f7f8 ff8a 	bl	801113c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018228:	4621      	mov	r1, r4
 801822a:	a804      	add	r0, sp, #16
 801822c:	f7f8 ffae 	bl	801118c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018230:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8018234:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018238:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801823c:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8018240:	fb14 2103 	smlabb	r1, r4, r3, r2
 8018244:	eb08 0401 	add.w	r4, r8, r1
 8018248:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801824c:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8018250:	440a      	add	r2, r1
 8018252:	f8ad 2010 	strh.w	r2, [sp, #16]
 8018256:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801825a:	4413      	add	r3, r2
 801825c:	f8ad 3012 	strh.w	r3, [sp, #18]
 8018260:	4b4a      	ldr	r3, [pc, #296]	; (801838c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8018262:	6818      	ldr	r0, [r3, #0]
 8018264:	6803      	ldr	r3, [r0, #0]
 8018266:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018268:	4798      	blx	r3
 801826a:	4b49      	ldr	r3, [pc, #292]	; (8018390 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801826c:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8018270:	881a      	ldrh	r2, [r3, #0]
 8018272:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8018276:	2eff      	cmp	r6, #255	; 0xff
 8018278:	fb02 c101 	mla	r1, r2, r1, ip
 801827c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8018280:	fb02 f207 	mul.w	r2, r2, r7
 8018284:	f105 0104 	add.w	r1, r5, #4
 8018288:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801828c:	461d      	mov	r5, r3
 801828e:	d05a      	beq.n	8018346 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8018290:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 8018294:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8018298:	b2b6      	uxth	r6, r6
 801829a:	fa1f fe8e 	uxth.w	lr, lr
 801829e:	9301      	str	r3, [sp, #4]
 80182a0:	4282      	cmp	r2, r0
 80182a2:	d96a      	bls.n	801837a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 80182a4:	eb00 0b0a 	add.w	fp, r0, sl
 80182a8:	4583      	cmp	fp, r0
 80182aa:	d940      	bls.n	801832e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 80182ac:	f814 3b01 	ldrb.w	r3, [r4], #1
 80182b0:	8805      	ldrh	r5, [r0, #0]
 80182b2:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80182b6:	122f      	asrs	r7, r5, #8
 80182b8:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80182bc:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80182c0:	fb17 f70e 	smulbb	r7, r7, lr
 80182c4:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80182c8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80182cc:	00ed      	lsls	r5, r5, #3
 80182ce:	fb0c 7c06 	mla	ip, ip, r6, r7
 80182d2:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80182d6:	10df      	asrs	r7, r3, #3
 80182d8:	b2ed      	uxtb	r5, r5
 80182da:	00db      	lsls	r3, r3, #3
 80182dc:	fa1f fc8c 	uxth.w	ip, ip
 80182e0:	fb19 f90e 	smulbb	r9, r9, lr
 80182e4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80182e8:	b2db      	uxtb	r3, r3
 80182ea:	fb15 f50e 	smulbb	r5, r5, lr
 80182ee:	fb07 9706 	mla	r7, r7, r6, r9
 80182f2:	fb03 5306 	mla	r3, r3, r6, r5
 80182f6:	f10c 0901 	add.w	r9, ip, #1
 80182fa:	b29b      	uxth	r3, r3
 80182fc:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8018300:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8018304:	f103 0c01 	add.w	ip, r3, #1
 8018308:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801830c:	b2bf      	uxth	r7, r7
 801830e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8018312:	ea4c 0c09 	orr.w	ip, ip, r9
 8018316:	f107 0901 	add.w	r9, r7, #1
 801831a:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801831e:	097f      	lsrs	r7, r7, #5
 8018320:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018324:	ea4c 0c07 	orr.w	ip, ip, r7
 8018328:	f820 cb02 	strh.w	ip, [r0], #2
 801832c:	e7bc      	b.n	80182a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801832e:	9b01      	ldr	r3, [sp, #4]
 8018330:	881b      	ldrh	r3, [r3, #0]
 8018332:	eba3 0308 	sub.w	r3, r3, r8
 8018336:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801833a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801833e:	eba3 0308 	sub.w	r3, r3, r8
 8018342:	441c      	add	r4, r3
 8018344:	e7ac      	b.n	80182a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8018346:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801834a:	4282      	cmp	r2, r0
 801834c:	d915      	bls.n	801837a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801834e:	eb00 060a 	add.w	r6, r0, sl
 8018352:	4286      	cmp	r6, r0
 8018354:	d906      	bls.n	8018364 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 8018356:	f814 3b01 	ldrb.w	r3, [r4], #1
 801835a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801835e:	f820 3b02 	strh.w	r3, [r0], #2
 8018362:	e7f6      	b.n	8018352 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8018364:	882b      	ldrh	r3, [r5, #0]
 8018366:	eba3 0308 	sub.w	r3, r3, r8
 801836a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801836e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8018372:	eba3 0308 	sub.w	r3, r3, r8
 8018376:	441c      	add	r4, r3
 8018378:	e7e7      	b.n	801834a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801837a:	4b04      	ldr	r3, [pc, #16]	; (801838c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801837c:	6818      	ldr	r0, [r3, #0]
 801837e:	6803      	ldr	r3, [r0, #0]
 8018380:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018382:	4798      	blx	r3
 8018384:	b007      	add	sp, #28
 8018386:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801838a:	bf00      	nop
 801838c:	20017450 	.word	0x20017450
 8018390:	2001744a 	.word	0x2001744a

08018394 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8018394:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018398:	b091      	sub	sp, #68	; 0x44
 801839a:	4680      	mov	r8, r0
 801839c:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 80183a0:	460f      	mov	r7, r1
 80183a2:	4614      	mov	r4, r2
 80183a4:	2d00      	cmp	r5, #0
 80183a6:	d051      	beq.n	801844c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 80183a8:	6810      	ldr	r0, [r2, #0]
 80183aa:	6851      	ldr	r1, [r2, #4]
 80183ac:	f8df 9200 	ldr.w	r9, [pc, #512]	; 80185b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 80183b0:	ae0c      	add	r6, sp, #48	; 0x30
 80183b2:	c603      	stmia	r6!, {r0, r1}
 80183b4:	6818      	ldr	r0, [r3, #0]
 80183b6:	6859      	ldr	r1, [r3, #4]
 80183b8:	ae0e      	add	r6, sp, #56	; 0x38
 80183ba:	c603      	stmia	r6!, {r0, r1}
 80183bc:	a80c      	add	r0, sp, #48	; 0x30
 80183be:	f7f8 febd 	bl	801113c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80183c2:	4621      	mov	r1, r4
 80183c4:	a80e      	add	r0, sp, #56	; 0x38
 80183c6:	f7f8 fee1 	bl	801118c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80183ca:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 80183ce:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 80183d2:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 80183d6:	f8d9 0000 	ldr.w	r0, [r9]
 80183da:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 80183de:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 80183e2:	fb11 2103 	smlabb	r1, r1, r3, r2
 80183e6:	eb08 0401 	add.w	r4, r8, r1
 80183ea:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 80183ee:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 80185b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 80183f2:	440a      	add	r2, r1
 80183f4:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 80183f8:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 80183fc:	4413      	add	r3, r2
 80183fe:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8018402:	6803      	ldr	r3, [r0, #0]
 8018404:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018406:	4798      	blx	r3
 8018408:	f010 0f80 	tst.w	r0, #128	; 0x80
 801840c:	f8d9 0000 	ldr.w	r0, [r9]
 8018410:	d01f      	beq.n	8018452 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 8018412:	2200      	movs	r2, #0
 8018414:	6801      	ldr	r1, [r0, #0]
 8018416:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801841a:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801841e:	220b      	movs	r2, #11
 8018420:	9207      	str	r2, [sp, #28]
 8018422:	f8b8 2000 	ldrh.w	r2, [r8]
 8018426:	9206      	str	r2, [sp, #24]
 8018428:	2201      	movs	r2, #1
 801842a:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801842e:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 8018432:	9203      	str	r2, [sp, #12]
 8018434:	fa1f f28a 	uxth.w	r2, sl
 8018438:	9202      	str	r2, [sp, #8]
 801843a:	b2b6      	uxth	r6, r6
 801843c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8018440:	9200      	str	r2, [sp, #0]
 8018442:	9601      	str	r6, [sp, #4]
 8018444:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 8018446:	463a      	mov	r2, r7
 8018448:	4621      	mov	r1, r4
 801844a:	47a8      	blx	r5
 801844c:	b011      	add	sp, #68	; 0x44
 801844e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018452:	6803      	ldr	r3, [r0, #0]
 8018454:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018456:	4798      	blx	r3
 8018458:	f8b8 2000 	ldrh.w	r2, [r8]
 801845c:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8018460:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 8018464:	2dff      	cmp	r5, #255	; 0xff
 8018466:	fb02 1303 	mla	r3, r2, r3, r1
 801846a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801846e:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8018472:	fb0a fa02 	mul.w	sl, sl, r2
 8018476:	d062      	beq.n	801853e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8018478:	ea6f 0c05 	mvn.w	ip, r5
 801847c:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8018480:	930a      	str	r3, [sp, #40]	; 0x28
 8018482:	b2ad      	uxth	r5, r5
 8018484:	fa5f fc8c 	uxtb.w	ip, ip
 8018488:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801848c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801848e:	4298      	cmp	r0, r3
 8018490:	f080 8085 	bcs.w	801859e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8018494:	eb00 0b09 	add.w	fp, r0, r9
 8018498:	4558      	cmp	r0, fp
 801849a:	d246      	bcs.n	801852a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801849c:	f814 eb01 	ldrb.w	lr, [r4], #1
 80184a0:	2303      	movs	r3, #3
 80184a2:	2204      	movs	r2, #4
 80184a4:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 80184a8:	eb07 0a0e 	add.w	sl, r7, lr
 80184ac:	8803      	ldrh	r3, [r0, #0]
 80184ae:	f89a 8002 	ldrb.w	r8, [sl, #2]
 80184b2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80184b6:	1219      	asrs	r1, r3, #8
 80184b8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80184bc:	fb18 f805 	smulbb	r8, r8, r5
 80184c0:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 80184c4:	10da      	asrs	r2, r3, #3
 80184c6:	fb01 810c 	mla	r1, r1, ip, r8
 80184ca:	00db      	lsls	r3, r3, #3
 80184cc:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80184d0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80184d4:	b2db      	uxtb	r3, r3
 80184d6:	fb18 f805 	smulbb	r8, r8, r5
 80184da:	fb1e fe05 	smulbb	lr, lr, r5
 80184de:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 80184e2:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 80184e6:	b289      	uxth	r1, r1
 80184e8:	fb02 820c 	mla	r2, r2, ip, r8
 80184ec:	fb03 e30c 	mla	r3, r3, ip, lr
 80184f0:	b292      	uxth	r2, r2
 80184f2:	b29b      	uxth	r3, r3
 80184f4:	f101 0801 	add.w	r8, r1, #1
 80184f8:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 80184fc:	f103 0e01 	add.w	lr, r3, #1
 8018500:	f102 0801 	add.w	r8, r2, #1
 8018504:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8018508:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801850c:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8018510:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8018514:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8018518:	ea4e 0101 	orr.w	r1, lr, r1
 801851c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8018520:	ea41 0108 	orr.w	r1, r1, r8
 8018524:	f820 1b02 	strh.w	r1, [r0], #2
 8018528:	e7b6      	b.n	8018498 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801852a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801852c:	881b      	ldrh	r3, [r3, #0]
 801852e:	1b9b      	subs	r3, r3, r6
 8018530:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018534:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8018538:	1b9b      	subs	r3, r3, r6
 801853a:	441c      	add	r4, r3
 801853c:	e7a6      	b.n	801848c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801853e:	491b      	ldr	r1, [pc, #108]	; (80185ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8018540:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8018544:	2203      	movs	r2, #3
 8018546:	2504      	movs	r5, #4
 8018548:	4550      	cmp	r0, sl
 801854a:	d228      	bcs.n	801859e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801854c:	eb00 0c09 	add.w	ip, r0, r9
 8018550:	4560      	cmp	r0, ip
 8018552:	4623      	mov	r3, r4
 8018554:	d219      	bcs.n	801858a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 8018556:	f893 e000 	ldrb.w	lr, [r3]
 801855a:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801855e:	eb07 0b0e 	add.w	fp, r7, lr
 8018562:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8018566:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801856a:	f89b b001 	ldrb.w	fp, [fp, #1]
 801856e:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8018572:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8018576:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801857a:	ea43 030b 	orr.w	r3, r3, fp
 801857e:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 8018582:	3401      	adds	r4, #1
 8018584:	f820 3b02 	strh.w	r3, [r0], #2
 8018588:	e7e2      	b.n	8018550 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801858a:	f8b8 3000 	ldrh.w	r3, [r8]
 801858e:	1b9b      	subs	r3, r3, r6
 8018590:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018594:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8018598:	1b9b      	subs	r3, r3, r6
 801859a:	441c      	add	r4, r3
 801859c:	e7d4      	b.n	8018548 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801859e:	4b04      	ldr	r3, [pc, #16]	; (80185b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 80185a0:	6818      	ldr	r0, [r3, #0]
 80185a2:	6803      	ldr	r3, [r0, #0]
 80185a4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80185a6:	4798      	blx	r3
 80185a8:	e750      	b.n	801844c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 80185aa:	bf00      	nop
 80185ac:	fffff800 	.word	0xfffff800
 80185b0:	20017450 	.word	0x20017450
 80185b4:	2001744a 	.word	0x2001744a

080185b8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 80185b8:	b430      	push	{r4, r5}
 80185ba:	780d      	ldrb	r5, [r1, #0]
 80185bc:	f89d 4008 	ldrb.w	r4, [sp, #8]
 80185c0:	2d01      	cmp	r5, #1
 80185c2:	d00a      	beq.n	80185da <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 80185c4:	d305      	bcc.n	80185d2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 80185c6:	2d02      	cmp	r5, #2
 80185c8:	d10b      	bne.n	80185e2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 80185ca:	9402      	str	r4, [sp, #8]
 80185cc:	bc30      	pop	{r4, r5}
 80185ce:	f7ff be15 	b.w	80181fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 80185d2:	9402      	str	r4, [sp, #8]
 80185d4:	bc30      	pop	{r4, r5}
 80185d6:	f7ff bd2b 	b.w	8018030 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 80185da:	9402      	str	r4, [sp, #8]
 80185dc:	bc30      	pop	{r4, r5}
 80185de:	f7ff bed9 	b.w	8018394 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 80185e2:	bc30      	pop	{r4, r5}
 80185e4:	4770      	bx	lr
	...

080185e8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 80185e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80185ec:	4604      	mov	r4, r0
 80185ee:	b087      	sub	sp, #28
 80185f0:	6810      	ldr	r0, [r2, #0]
 80185f2:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 80185f6:	f8df 9238 	ldr.w	r9, [pc, #568]	; 8018830 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 80185fa:	460e      	mov	r6, r1
 80185fc:	6851      	ldr	r1, [r2, #4]
 80185fe:	ad02      	add	r5, sp, #8
 8018600:	c503      	stmia	r5!, {r0, r1}
 8018602:	6818      	ldr	r0, [r3, #0]
 8018604:	6859      	ldr	r1, [r3, #4]
 8018606:	ad04      	add	r5, sp, #16
 8018608:	4617      	mov	r7, r2
 801860a:	c503      	stmia	r5!, {r0, r1}
 801860c:	a802      	add	r0, sp, #8
 801860e:	f7f8 fd95 	bl	801113c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018612:	4639      	mov	r1, r7
 8018614:	a804      	add	r0, sp, #16
 8018616:	f7f8 fdb9 	bl	801118c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801861a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801861e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018622:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8018626:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801862a:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801862e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8018632:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8018636:	440e      	add	r6, r1
 8018638:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801863c:	440a      	add	r2, r1
 801863e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8018642:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8018646:	4413      	add	r3, r2
 8018648:	f8ad 3012 	strh.w	r3, [sp, #18]
 801864c:	4b77      	ldr	r3, [pc, #476]	; (801882c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801864e:	6818      	ldr	r0, [r3, #0]
 8018650:	6803      	ldr	r3, [r0, #0]
 8018652:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018654:	4798      	blx	r3
 8018656:	f8b9 b000 	ldrh.w	fp, [r9]
 801865a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801865e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8018662:	fb0b 2303 	mla	r3, fp, r3, r2
 8018666:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801866a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801866e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8018672:	fb05 f50b 	mul.w	r5, r5, fp
 8018676:	9300      	str	r3, [sp, #0]
 8018678:	d069      	beq.n	801874e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801867a:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801867e:	4558      	cmp	r0, fp
 8018680:	f080 80cc 	bcs.w	801881c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8018684:	9b00      	ldr	r3, [sp, #0]
 8018686:	18c3      	adds	r3, r0, r3
 8018688:	9301      	str	r3, [sp, #4]
 801868a:	4631      	mov	r1, r6
 801868c:	9b01      	ldr	r3, [sp, #4]
 801868e:	4298      	cmp	r0, r3
 8018690:	d24f      	bcs.n	8018732 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 8018692:	f811 2b01 	ldrb.w	r2, [r1], #1
 8018696:	2a00      	cmp	r2, #0
 8018698:	d048      	beq.n	801872c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801869a:	fb0a f202 	mul.w	r2, sl, r2
 801869e:	1c53      	adds	r3, r2, #1
 80186a0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80186a4:	121b      	asrs	r3, r3, #8
 80186a6:	d041      	beq.n	801872c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80186a8:	8802      	ldrh	r2, [r0, #0]
 80186aa:	f8b4 c000 	ldrh.w	ip, [r4]
 80186ae:	b29e      	uxth	r6, r3
 80186b0:	1215      	asrs	r5, r2, #8
 80186b2:	43db      	mvns	r3, r3
 80186b4:	b2db      	uxtb	r3, r3
 80186b6:	ea4f 272c 	mov.w	r7, ip, asr #8
 80186ba:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80186be:	fb15 f503 	smulbb	r5, r5, r3
 80186c2:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 80186c6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80186ca:	00d2      	lsls	r2, r2, #3
 80186cc:	fb07 5706 	mla	r7, r7, r6, r5
 80186d0:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80186d4:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80186d8:	b2d2      	uxtb	r2, r2
 80186da:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80186de:	b2bf      	uxth	r7, r7
 80186e0:	fb1e fe03 	smulbb	lr, lr, r3
 80186e4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80186e8:	fa5f fc8c 	uxtb.w	ip, ip
 80186ec:	fb12 f203 	smulbb	r2, r2, r3
 80186f0:	fb05 e506 	mla	r5, r5, r6, lr
 80186f4:	fb0c 2c06 	mla	ip, ip, r6, r2
 80186f8:	f107 0e01 	add.w	lr, r7, #1
 80186fc:	fa1f fc8c 	uxth.w	ip, ip
 8018700:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8018704:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 8018708:	f10c 0701 	add.w	r7, ip, #1
 801870c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8018710:	b2ad      	uxth	r5, r5
 8018712:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8018716:	ea47 070e 	orr.w	r7, r7, lr
 801871a:	f105 0e01 	add.w	lr, r5, #1
 801871e:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8018722:	096d      	lsrs	r5, r5, #5
 8018724:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8018728:	432f      	orrs	r7, r5
 801872a:	8007      	strh	r7, [r0, #0]
 801872c:	3002      	adds	r0, #2
 801872e:	3402      	adds	r4, #2
 8018730:	e7ac      	b.n	801868c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 8018732:	f8b9 3000 	ldrh.w	r3, [r9]
 8018736:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801873a:	eba3 0308 	sub.w	r3, r3, r8
 801873e:	eba6 0608 	sub.w	r6, r6, r8
 8018742:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8018746:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801874a:	440e      	add	r6, r1
 801874c:	e797      	b.n	801867e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801874e:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8018752:	42a8      	cmp	r0, r5
 8018754:	d262      	bcs.n	801881c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8018756:	9b00      	ldr	r3, [sp, #0]
 8018758:	4631      	mov	r1, r6
 801875a:	eb00 0b03 	add.w	fp, r0, r3
 801875e:	4558      	cmp	r0, fp
 8018760:	d24e      	bcs.n	8018800 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 8018762:	f811 3b01 	ldrb.w	r3, [r1], #1
 8018766:	b12b      	cbz	r3, 8018774 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8018768:	2bff      	cmp	r3, #255	; 0xff
 801876a:	f8b4 e000 	ldrh.w	lr, [r4]
 801876e:	d104      	bne.n	801877a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8018770:	f8a0 e000 	strh.w	lr, [r0]
 8018774:	3002      	adds	r0, #2
 8018776:	3402      	adds	r4, #2
 8018778:	e7f1      	b.n	801875e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801877a:	8802      	ldrh	r2, [r0, #0]
 801877c:	b29f      	uxth	r7, r3
 801877e:	1216      	asrs	r6, r2, #8
 8018780:	43db      	mvns	r3, r3
 8018782:	b2db      	uxtb	r3, r3
 8018784:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8018788:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801878c:	fb16 f603 	smulbb	r6, r6, r3
 8018790:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8018794:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018798:	00d2      	lsls	r2, r2, #3
 801879a:	fb0c 6c07 	mla	ip, ip, r7, r6
 801879e:	b2d2      	uxtb	r2, r2
 80187a0:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80187a4:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80187a8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80187ac:	fb1a fa03 	smulbb	sl, sl, r3
 80187b0:	fa1f fc8c 	uxth.w	ip, ip
 80187b4:	fb12 f303 	smulbb	r3, r2, r3
 80187b8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80187bc:	fa5f fe8e 	uxtb.w	lr, lr
 80187c0:	fb06 a607 	mla	r6, r6, r7, sl
 80187c4:	f10c 0201 	add.w	r2, ip, #1
 80187c8:	fb0e 3307 	mla	r3, lr, r7, r3
 80187cc:	b2b6      	uxth	r6, r6
 80187ce:	b29b      	uxth	r3, r3
 80187d0:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80187d4:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 80187d8:	f106 0a01 	add.w	sl, r6, #1
 80187dc:	f103 0c01 	add.w	ip, r3, #1
 80187e0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80187e4:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 80187e8:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80187ec:	0976      	lsrs	r6, r6, #5
 80187ee:	ea4c 0c02 	orr.w	ip, ip, r2
 80187f2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80187f6:	ea4c 0c06 	orr.w	ip, ip, r6
 80187fa:	f8a0 c000 	strh.w	ip, [r0]
 80187fe:	e7b9      	b.n	8018774 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8018800:	f8b9 3000 	ldrh.w	r3, [r9]
 8018804:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8018808:	eba3 0308 	sub.w	r3, r3, r8
 801880c:	eba6 0608 	sub.w	r6, r6, r8
 8018810:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8018814:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018818:	440e      	add	r6, r1
 801881a:	e79a      	b.n	8018752 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801881c:	4b03      	ldr	r3, [pc, #12]	; (801882c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801881e:	6818      	ldr	r0, [r3, #0]
 8018820:	6803      	ldr	r3, [r0, #0]
 8018822:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018824:	4798      	blx	r3
 8018826:	b007      	add	sp, #28
 8018828:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801882c:	20017450 	.word	0x20017450
 8018830:	2001744a 	.word	0x2001744a

08018834 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8018834:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018838:	b089      	sub	sp, #36	; 0x24
 801883a:	4682      	mov	sl, r0
 801883c:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8018840:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8018842:	460f      	mov	r7, r1
 8018844:	4691      	mov	r9, r2
 8018846:	4698      	mov	r8, r3
 8018848:	2e00      	cmp	r6, #0
 801884a:	d036      	beq.n	80188ba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801884c:	4608      	mov	r0, r1
 801884e:	f7fc f863 	bl	8014918 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8018852:	4605      	mov	r5, r0
 8018854:	4638      	mov	r0, r7
 8018856:	f7fc f893 	bl	8014980 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801885a:	f8ad 000e 	strh.w	r0, [sp, #14]
 801885e:	4638      	mov	r0, r7
 8018860:	f8ad 9008 	strh.w	r9, [sp, #8]
 8018864:	f8ad 500c 	strh.w	r5, [sp, #12]
 8018868:	f8ad 800a 	strh.w	r8, [sp, #10]
 801886c:	f7fc f940 	bl	8014af0 <_ZNK8touchgfx6Bitmap7getDataEv>
 8018870:	4605      	mov	r5, r0
 8018872:	4638      	mov	r0, r7
 8018874:	f7fc f96c 	bl	8014b50 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8018878:	4681      	mov	r9, r0
 801887a:	4638      	mov	r0, r7
 801887c:	f7fc f9bc 	bl	8014bf8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8018880:	280b      	cmp	r0, #11
 8018882:	d81a      	bhi.n	80188ba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8018884:	e8df f000 	tbb	[pc, r0]
 8018888:	1906aebd 	.word	0x1906aebd
 801888c:	19191919 	.word	0x19191919
 8018890:	b5191919 	.word	0xb5191919
 8018894:	4bb0      	ldr	r3, [pc, #704]	; (8018b58 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 8018896:	6818      	ldr	r0, [r3, #0]
 8018898:	6803      	ldr	r3, [r0, #0]
 801889a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801889c:	4798      	blx	r3
 801889e:	2eff      	cmp	r6, #255	; 0xff
 80188a0:	d121      	bne.n	80188e6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 80188a2:	0683      	lsls	r3, r0, #26
 80188a4:	d41f      	bmi.n	80188e6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 80188a6:	4638      	mov	r0, r7
 80188a8:	f7fc f8ea 	bl	8014a80 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80188ac:	b940      	cbnz	r0, 80188c0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 80188ae:	4623      	mov	r3, r4
 80188b0:	aa02      	add	r2, sp, #8
 80188b2:	4629      	mov	r1, r5
 80188b4:	4650      	mov	r0, sl
 80188b6:	f7ff fa2f 	bl	8017d18 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 80188ba:	b009      	add	sp, #36	; 0x24
 80188bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80188c0:	f10d 0818 	add.w	r8, sp, #24
 80188c4:	4639      	mov	r1, r7
 80188c6:	4640      	mov	r0, r8
 80188c8:	f7fc f88e 	bl	80149e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80188cc:	e898 0003 	ldmia.w	r8, {r0, r1}
 80188d0:	af04      	add	r7, sp, #16
 80188d2:	e887 0003 	stmia.w	r7, {r0, r1}
 80188d6:	4638      	mov	r0, r7
 80188d8:	4621      	mov	r1, r4
 80188da:	f7f2 fc9f 	bl	800b21c <_ZN8touchgfx4RectaNERKS0_>
 80188de:	4638      	mov	r0, r7
 80188e0:	f7f2 fcdf 	bl	800b2a2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80188e4:	b130      	cbz	r0, 80188f4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 80188e6:	4633      	mov	r3, r6
 80188e8:	4622      	mov	r2, r4
 80188ea:	a902      	add	r1, sp, #8
 80188ec:	4628      	mov	r0, r5
 80188ee:	f7ff f92d 	bl	8017b4c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80188f2:	e7e2      	b.n	80188ba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80188f4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80188f8:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80188fc:	4293      	cmp	r3, r2
 80188fe:	dd12      	ble.n	8018926 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf2>
 8018900:	1a9b      	subs	r3, r3, r2
 8018902:	f9b4 0000 	ldrsh.w	r0, [r4]
 8018906:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801890a:	f8ad 0018 	strh.w	r0, [sp, #24]
 801890e:	f8ad 201a 	strh.w	r2, [sp, #26]
 8018912:	f8ad 101c 	strh.w	r1, [sp, #28]
 8018916:	f8ad 301e 	strh.w	r3, [sp, #30]
 801891a:	4642      	mov	r2, r8
 801891c:	4633      	mov	r3, r6
 801891e:	a902      	add	r1, sp, #8
 8018920:	4628      	mov	r0, r5
 8018922:	f7ff f913 	bl	8017b4c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018926:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801892a:	f9b4 2000 	ldrsh.w	r2, [r4]
 801892e:	4293      	cmp	r3, r2
 8018930:	dd12      	ble.n	8018958 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x124>
 8018932:	1a9b      	subs	r3, r3, r2
 8018934:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8018938:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801893c:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018940:	f8ad 001a 	strh.w	r0, [sp, #26]
 8018944:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018948:	f8ad 101e 	strh.w	r1, [sp, #30]
 801894c:	23ff      	movs	r3, #255	; 0xff
 801894e:	4642      	mov	r2, r8
 8018950:	a902      	add	r1, sp, #8
 8018952:	4628      	mov	r0, r5
 8018954:	f7ff f8fa 	bl	8017b4c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018958:	463b      	mov	r3, r7
 801895a:	aa02      	add	r2, sp, #8
 801895c:	4629      	mov	r1, r5
 801895e:	4650      	mov	r0, sl
 8018960:	f7ff f9da 	bl	8017d18 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8018964:	88a2      	ldrh	r2, [r4, #4]
 8018966:	8823      	ldrh	r3, [r4, #0]
 8018968:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801896c:	4413      	add	r3, r2
 801896e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018972:	440a      	add	r2, r1
 8018974:	b29b      	uxth	r3, r3
 8018976:	b292      	uxth	r2, r2
 8018978:	b211      	sxth	r1, r2
 801897a:	b218      	sxth	r0, r3
 801897c:	4288      	cmp	r0, r1
 801897e:	dd12      	ble.n	80189a6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x172>
 8018980:	1a9b      	subs	r3, r3, r2
 8018982:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8018986:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801898a:	f8ad 1018 	strh.w	r1, [sp, #24]
 801898e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018992:	f8ad 001e 	strh.w	r0, [sp, #30]
 8018996:	23ff      	movs	r3, #255	; 0xff
 8018998:	4642      	mov	r2, r8
 801899a:	a902      	add	r1, sp, #8
 801899c:	4628      	mov	r0, r5
 801899e:	f8ad 601a 	strh.w	r6, [sp, #26]
 80189a2:	f7ff f8d3 	bl	8017b4c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80189a6:	88e2      	ldrh	r2, [r4, #6]
 80189a8:	8863      	ldrh	r3, [r4, #2]
 80189aa:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80189ae:	4413      	add	r3, r2
 80189b0:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80189b4:	440a      	add	r2, r1
 80189b6:	b29b      	uxth	r3, r3
 80189b8:	b292      	uxth	r2, r2
 80189ba:	b211      	sxth	r1, r2
 80189bc:	b218      	sxth	r0, r3
 80189be:	4288      	cmp	r0, r1
 80189c0:	f77f af7b 	ble.w	80188ba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80189c4:	1a9b      	subs	r3, r3, r2
 80189c6:	f9b4 6000 	ldrsh.w	r6, [r4]
 80189ca:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80189ce:	f8ad 301e 	strh.w	r3, [sp, #30]
 80189d2:	f8ad 6018 	strh.w	r6, [sp, #24]
 80189d6:	f8ad 101a 	strh.w	r1, [sp, #26]
 80189da:	f8ad 001c 	strh.w	r0, [sp, #28]
 80189de:	23ff      	movs	r3, #255	; 0xff
 80189e0:	4642      	mov	r2, r8
 80189e2:	e782      	b.n	80188ea <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb6>
 80189e4:	4633      	mov	r3, r6
 80189e6:	4622      	mov	r2, r4
 80189e8:	a902      	add	r1, sp, #8
 80189ea:	4628      	mov	r0, r5
 80189ec:	f7ff fa04 	bl	8017df8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 80189f0:	e763      	b.n	80188ba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80189f2:	9600      	str	r6, [sp, #0]
 80189f4:	4623      	mov	r3, r4
 80189f6:	aa02      	add	r2, sp, #8
 80189f8:	4649      	mov	r1, r9
 80189fa:	4628      	mov	r0, r5
 80189fc:	f7ff fddc 	bl	80185b8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8018a00:	e75b      	b.n	80188ba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8018a02:	4638      	mov	r0, r7
 8018a04:	f7fc f83c 	bl	8014a80 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8018a08:	b950      	cbnz	r0, 8018a20 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ec>
 8018a0a:	e9cd 6000 	strd	r6, r0, [sp]
 8018a0e:	f8da 3000 	ldr.w	r3, [sl]
 8018a12:	aa02      	add	r2, sp, #8
 8018a14:	68de      	ldr	r6, [r3, #12]
 8018a16:	4629      	mov	r1, r5
 8018a18:	4623      	mov	r3, r4
 8018a1a:	4650      	mov	r0, sl
 8018a1c:	47b0      	blx	r6
 8018a1e:	e74c      	b.n	80188ba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8018a20:	f10d 0818 	add.w	r8, sp, #24
 8018a24:	4639      	mov	r1, r7
 8018a26:	4640      	mov	r0, r8
 8018a28:	f7fb ffde 	bl	80149e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8018a2c:	e898 0003 	ldmia.w	r8, {r0, r1}
 8018a30:	af04      	add	r7, sp, #16
 8018a32:	e887 0003 	stmia.w	r7, {r0, r1}
 8018a36:	4638      	mov	r0, r7
 8018a38:	4621      	mov	r1, r4
 8018a3a:	f7f2 fbef 	bl	800b21c <_ZN8touchgfx4RectaNERKS0_>
 8018a3e:	4638      	mov	r0, r7
 8018a40:	f7f2 fc2f 	bl	800b2a2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018a44:	b138      	cbz	r0, 8018a56 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x222>
 8018a46:	9600      	str	r6, [sp, #0]
 8018a48:	4623      	mov	r3, r4
 8018a4a:	aa02      	add	r2, sp, #8
 8018a4c:	4649      	mov	r1, r9
 8018a4e:	4628      	mov	r0, r5
 8018a50:	f7ff fdca 	bl	80185e8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018a54:	e731      	b.n	80188ba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8018a56:	e9cd 6000 	strd	r6, r0, [sp]
 8018a5a:	f8da 3000 	ldr.w	r3, [sl]
 8018a5e:	aa02      	add	r2, sp, #8
 8018a60:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8018a64:	4629      	mov	r1, r5
 8018a66:	463b      	mov	r3, r7
 8018a68:	4650      	mov	r0, sl
 8018a6a:	47d8      	blx	fp
 8018a6c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018a70:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8018a74:	4293      	cmp	r3, r2
 8018a76:	dd13      	ble.n	8018aa0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26c>
 8018a78:	f9b4 0000 	ldrsh.w	r0, [r4]
 8018a7c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8018a80:	f8ad 0018 	strh.w	r0, [sp, #24]
 8018a84:	1a9b      	subs	r3, r3, r2
 8018a86:	f8ad 201a 	strh.w	r2, [sp, #26]
 8018a8a:	f8ad 101c 	strh.w	r1, [sp, #28]
 8018a8e:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018a92:	9600      	str	r6, [sp, #0]
 8018a94:	4643      	mov	r3, r8
 8018a96:	aa02      	add	r2, sp, #8
 8018a98:	4649      	mov	r1, r9
 8018a9a:	4628      	mov	r0, r5
 8018a9c:	f7ff fda4 	bl	80185e8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018aa0:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8018aa4:	f9b4 2000 	ldrsh.w	r2, [r4]
 8018aa8:	4293      	cmp	r3, r2
 8018aaa:	dd13      	ble.n	8018ad4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a0>
 8018aac:	1a9b      	subs	r3, r3, r2
 8018aae:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8018ab2:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8018ab6:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018aba:	f8ad 001a 	strh.w	r0, [sp, #26]
 8018abe:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018ac2:	f8ad 101e 	strh.w	r1, [sp, #30]
 8018ac6:	9600      	str	r6, [sp, #0]
 8018ac8:	4643      	mov	r3, r8
 8018aca:	aa02      	add	r2, sp, #8
 8018acc:	4649      	mov	r1, r9
 8018ace:	4628      	mov	r0, r5
 8018ad0:	f7ff fd8a 	bl	80185e8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018ad4:	88a2      	ldrh	r2, [r4, #4]
 8018ad6:	8823      	ldrh	r3, [r4, #0]
 8018ad8:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8018adc:	4413      	add	r3, r2
 8018ade:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018ae2:	440a      	add	r2, r1
 8018ae4:	b29b      	uxth	r3, r3
 8018ae6:	b292      	uxth	r2, r2
 8018ae8:	b211      	sxth	r1, r2
 8018aea:	b218      	sxth	r0, r3
 8018aec:	4288      	cmp	r0, r1
 8018aee:	dd13      	ble.n	8018b18 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e4>
 8018af0:	1a9b      	subs	r3, r3, r2
 8018af2:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8018af6:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8018afa:	f8ad 1018 	strh.w	r1, [sp, #24]
 8018afe:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018b02:	f8ad 001e 	strh.w	r0, [sp, #30]
 8018b06:	9600      	str	r6, [sp, #0]
 8018b08:	4643      	mov	r3, r8
 8018b0a:	aa02      	add	r2, sp, #8
 8018b0c:	4649      	mov	r1, r9
 8018b0e:	4628      	mov	r0, r5
 8018b10:	f8ad 701a 	strh.w	r7, [sp, #26]
 8018b14:	f7ff fd68 	bl	80185e8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018b18:	88e2      	ldrh	r2, [r4, #6]
 8018b1a:	8863      	ldrh	r3, [r4, #2]
 8018b1c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8018b20:	4413      	add	r3, r2
 8018b22:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8018b26:	440a      	add	r2, r1
 8018b28:	b29b      	uxth	r3, r3
 8018b2a:	b292      	uxth	r2, r2
 8018b2c:	b211      	sxth	r1, r2
 8018b2e:	b218      	sxth	r0, r3
 8018b30:	4288      	cmp	r0, r1
 8018b32:	f77f aec2 	ble.w	80188ba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8018b36:	f9b4 7000 	ldrsh.w	r7, [r4]
 8018b3a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018b3e:	f8ad 7018 	strh.w	r7, [sp, #24]
 8018b42:	1a9b      	subs	r3, r3, r2
 8018b44:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018b48:	f8ad 101a 	strh.w	r1, [sp, #26]
 8018b4c:	f8ad 001c 	strh.w	r0, [sp, #28]
 8018b50:	9600      	str	r6, [sp, #0]
 8018b52:	4643      	mov	r3, r8
 8018b54:	e779      	b.n	8018a4a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x216>
 8018b56:	bf00      	nop
 8018b58:	20017450 	.word	0x20017450

08018b5c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8018b5c:	b180      	cbz	r0, 8018b80 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 8018b5e:	2903      	cmp	r1, #3
 8018b60:	d81c      	bhi.n	8018b9c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8018b62:	e8df f001 	tbb	[pc, r1]
 8018b66:	1d02      	.short	0x1d02
 8018b68:	1f08      	.short	0x1f08
 8018b6a:	4b10      	ldr	r3, [pc, #64]	; (8018bac <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8018b6c:	8818      	ldrh	r0, [r3, #0]
 8018b6e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018b72:	4240      	negs	r0, r0
 8018b74:	4770      	bx	lr
 8018b76:	4b0d      	ldr	r3, [pc, #52]	; (8018bac <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8018b78:	8818      	ldrh	r0, [r3, #0]
 8018b7a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018b7e:	4770      	bx	lr
 8018b80:	2903      	cmp	r1, #3
 8018b82:	d80b      	bhi.n	8018b9c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8018b84:	a301      	add	r3, pc, #4	; (adr r3, 8018b8c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 8018b86:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8018b8a:	bf00      	nop
 8018b8c:	08018ba1 	.word	0x08018ba1
 8018b90:	08018b77 	.word	0x08018b77
 8018b94:	08018ba5 	.word	0x08018ba5
 8018b98:	08018b6b 	.word	0x08018b6b
 8018b9c:	2000      	movs	r0, #0
 8018b9e:	4770      	bx	lr
 8018ba0:	2001      	movs	r0, #1
 8018ba2:	4770      	bx	lr
 8018ba4:	f04f 30ff 	mov.w	r0, #4294967295
 8018ba8:	4770      	bx	lr
 8018baa:	bf00      	nop
 8018bac:	2001744a 	.word	0x2001744a

08018bb0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8018bb0:	b180      	cbz	r0, 8018bd4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 8018bb2:	2903      	cmp	r1, #3
 8018bb4:	d81c      	bhi.n	8018bf0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8018bb6:	e8df f001 	tbb	[pc, r1]
 8018bba:	021d      	.short	0x021d
 8018bbc:	071f      	.short	0x071f
 8018bbe:	4b10      	ldr	r3, [pc, #64]	; (8018c00 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8018bc0:	8818      	ldrh	r0, [r3, #0]
 8018bc2:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018bc6:	4770      	bx	lr
 8018bc8:	4b0d      	ldr	r3, [pc, #52]	; (8018c00 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8018bca:	8818      	ldrh	r0, [r3, #0]
 8018bcc:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018bd0:	4240      	negs	r0, r0
 8018bd2:	4770      	bx	lr
 8018bd4:	2903      	cmp	r1, #3
 8018bd6:	d80b      	bhi.n	8018bf0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8018bd8:	a301      	add	r3, pc, #4	; (adr r3, 8018be0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 8018bda:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8018bde:	bf00      	nop
 8018be0:	08018bbf 	.word	0x08018bbf
 8018be4:	08018bf9 	.word	0x08018bf9
 8018be8:	08018bc9 	.word	0x08018bc9
 8018bec:	08018bf5 	.word	0x08018bf5
 8018bf0:	2000      	movs	r0, #0
 8018bf2:	4770      	bx	lr
 8018bf4:	2001      	movs	r0, #1
 8018bf6:	4770      	bx	lr
 8018bf8:	f04f 30ff 	mov.w	r0, #4294967295
 8018bfc:	4770      	bx	lr
 8018bfe:	bf00      	nop
 8018c00:	2001744a 	.word	0x2001744a

08018c04 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8018c04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018c08:	b099      	sub	sp, #100	; 0x64
 8018c0a:	910b      	str	r1, [sp, #44]	; 0x2c
 8018c0c:	a914      	add	r1, sp, #80	; 0x50
 8018c0e:	e881 000c 	stmia.w	r1, {r2, r3}
 8018c12:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 8018c16:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 8018c1a:	f891 900d 	ldrb.w	r9, [r1, #13]
 8018c1e:	9309      	str	r3, [sp, #36]	; 0x24
 8018c20:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8018c24:	9310      	str	r3, [sp, #64]	; 0x40
 8018c26:	ea4f 1749 	mov.w	r7, r9, lsl #5
 8018c2a:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 8018c2e:	930c      	str	r3, [sp, #48]	; 0x30
 8018c30:	f407 7380 	and.w	r3, r7, #256	; 0x100
 8018c34:	798f      	ldrb	r7, [r1, #6]
 8018c36:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 8018c3a:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 8018c3e:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 8018c42:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 8018c46:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 8018c4a:	431f      	orrs	r7, r3
 8018c4c:	f000 8195 	beq.w	8018f7a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018c50:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8018c54:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8018c58:	f891 9007 	ldrb.w	r9, [r1, #7]
 8018c5c:	ea59 0903 	orrs.w	r9, r9, r3
 8018c60:	f000 818b 	beq.w	8018f7a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018c64:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8018c68:	b29b      	uxth	r3, r3
 8018c6a:	2d00      	cmp	r5, #0
 8018c6c:	f000 812e 	beq.w	8018ecc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 8018c70:	1aed      	subs	r5, r5, r3
 8018c72:	b2ad      	uxth	r5, r5
 8018c74:	042b      	lsls	r3, r5, #16
 8018c76:	d502      	bpl.n	8018c7e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8018c78:	1b64      	subs	r4, r4, r5
 8018c7a:	b224      	sxth	r4, r4
 8018c7c:	2500      	movs	r5, #0
 8018c7e:	f9b2 1000 	ldrsh.w	r1, [r2]
 8018c82:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8018c86:	428c      	cmp	r4, r1
 8018c88:	b28b      	uxth	r3, r1
 8018c8a:	bfbf      	itttt	lt
 8018c8c:	18ed      	addlt	r5, r5, r3
 8018c8e:	1b2c      	sublt	r4, r5, r4
 8018c90:	b2a5      	uxthlt	r5, r4
 8018c92:	460c      	movlt	r4, r1
 8018c94:	8891      	ldrh	r1, [r2, #4]
 8018c96:	440b      	add	r3, r1
 8018c98:	b21b      	sxth	r3, r3
 8018c9a:	930f      	str	r3, [sp, #60]	; 0x3c
 8018c9c:	88d3      	ldrh	r3, [r2, #6]
 8018c9e:	8852      	ldrh	r2, [r2, #2]
 8018ca0:	4413      	add	r3, r2
 8018ca2:	b21b      	sxth	r3, r3
 8018ca4:	930d      	str	r3, [sp, #52]	; 0x34
 8018ca6:	4bbe      	ldr	r3, [pc, #760]	; (8018fa0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8018ca8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018caa:	f893 b000 	ldrb.w	fp, [r3]
 8018cae:	f10b 3cff 	add.w	ip, fp, #4294967295
 8018cb2:	f1dc 0300 	rsbs	r3, ip, #0
 8018cb6:	eb43 030c 	adc.w	r3, r3, ip
 8018cba:	930e      	str	r3, [sp, #56]	; 0x38
 8018cbc:	4621      	mov	r1, r4
 8018cbe:	4653      	mov	r3, sl
 8018cc0:	a814      	add	r0, sp, #80	; 0x50
 8018cc2:	f7f8 f8b5 	bl	8010e30 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8018cc6:	4621      	mov	r1, r4
 8018cc8:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8018ccc:	4653      	mov	r3, sl
 8018cce:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018cd0:	a814      	add	r0, sp, #80	; 0x50
 8018cd2:	f7f8 f8ca 	bl	8010e6a <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8018cd6:	a918      	add	r1, sp, #96	; 0x60
 8018cd8:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8018cdc:	a817      	add	r0, sp, #92	; 0x5c
 8018cde:	f7f8 f9eb 	bl	80110b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8018ce2:	f1ba 0f00 	cmp.w	sl, #0
 8018ce6:	f040 80f4 	bne.w	8018ed2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 8018cea:	f1bb 0f01 	cmp.w	fp, #1
 8018cee:	f040 80f8 	bne.w	8018ee2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 8018cf2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018cf4:	2b00      	cmp	r3, #0
 8018cf6:	f040 8145 	bne.w	8018f84 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 8018cfa:	b2ba      	uxth	r2, r7
 8018cfc:	b905      	cbnz	r5, 8018d00 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 8018cfe:	b16e      	cbz	r6, 8018d1c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 8018d00:	fb06 5302 	mla	r3, r6, r2, r5
 8018d04:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8018d06:	fb08 f303 	mul.w	r3, r8, r3
 8018d0a:	4631      	mov	r1, r6
 8018d0c:	f003 0607 	and.w	r6, r3, #7
 8018d10:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 8018d14:	9328      	str	r3, [sp, #160]	; 0xa0
 8018d16:	eba9 0301 	sub.w	r3, r9, r1
 8018d1a:	930a      	str	r3, [sp, #40]	; 0x28
 8018d1c:	4651      	mov	r1, sl
 8018d1e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8018d20:	f7ff ff1c 	bl	8018b5c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8018d24:	4681      	mov	r9, r0
 8018d26:	980e      	ldr	r0, [sp, #56]	; 0x38
 8018d28:	f7ff ff42 	bl	8018bb0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8018d2c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018d2e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8018d30:	eba3 0a01 	sub.w	sl, r3, r1
 8018d34:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018d36:	459a      	cmp	sl, r3
 8018d38:	bfa8      	it	ge
 8018d3a:	469a      	movge	sl, r3
 8018d3c:	f1ba 0f00 	cmp.w	sl, #0
 8018d40:	4683      	mov	fp, r0
 8018d42:	f340 811a 	ble.w	8018f7a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018d46:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018d48:	1b64      	subs	r4, r4, r5
 8018d4a:	1b1c      	subs	r4, r3, r4
 8018d4c:	42bc      	cmp	r4, r7
 8018d4e:	bfd4      	ite	le
 8018d50:	ebc5 0504 	rsble	r5, r5, r4
 8018d54:	ebc5 0507 	rsbgt	r5, r5, r7
 8018d58:	2d00      	cmp	r5, #0
 8018d5a:	f340 810e 	ble.w	8018f7a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018d5e:	1b52      	subs	r2, r2, r5
 8018d60:	fb08 f302 	mul.w	r3, r8, r2
 8018d64:	930f      	str	r3, [sp, #60]	; 0x3c
 8018d66:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018d68:	2b00      	cmp	r3, #0
 8018d6a:	f040 8116 	bne.w	8018f9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8018d6e:	4b8d      	ldr	r3, [pc, #564]	; (8018fa4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8018d70:	6818      	ldr	r0, [r3, #0]
 8018d72:	6803      	ldr	r3, [r0, #0]
 8018d74:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018d76:	4798      	blx	r3
 8018d78:	2301      	movs	r3, #1
 8018d7a:	fa03 f308 	lsl.w	r3, r3, r8
 8018d7e:	4a8a      	ldr	r2, [pc, #552]	; (8018fa8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8018d80:	3b01      	subs	r3, #1
 8018d82:	b2db      	uxtb	r3, r3
 8018d84:	8811      	ldrh	r1, [r2, #0]
 8018d86:	930e      	str	r3, [sp, #56]	; 0x38
 8018d88:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8018d8c:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8018d90:	fb01 2303 	mla	r3, r1, r3, r2
 8018d94:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018d98:	930a      	str	r3, [sp, #40]	; 0x28
 8018d9a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018d9c:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8018da0:	9313      	str	r3, [sp, #76]	; 0x4c
 8018da2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018da4:	0a19      	lsrs	r1, r3, #8
 8018da6:	b2cb      	uxtb	r3, r1
 8018da8:	9312      	str	r3, [sp, #72]	; 0x48
 8018daa:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018dac:	b2db      	uxtb	r3, r3
 8018dae:	9311      	str	r3, [sp, #68]	; 0x44
 8018db0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018db2:	095a      	lsrs	r2, r3, #5
 8018db4:	4b7d      	ldr	r3, [pc, #500]	; (8018fac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 8018db6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018dba:	400b      	ands	r3, r1
 8018dbc:	4313      	orrs	r3, r2
 8018dbe:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8018dc0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8018dc4:	4313      	orrs	r3, r2
 8018dc6:	b29b      	uxth	r3, r3
 8018dc8:	9310      	str	r3, [sp, #64]	; 0x40
 8018dca:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018dcc:	781a      	ldrb	r2, [r3, #0]
 8018dce:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8018dd2:	4132      	asrs	r2, r6
 8018dd4:	fb05 b919 	mls	r9, r5, r9, fp
 8018dd8:	fb03 fb05 	mul.w	fp, r3, r5
 8018ddc:	b2d2      	uxtb	r2, r2
 8018dde:	930d      	str	r3, [sp, #52]	; 0x34
 8018de0:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8018de4:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8018de8:	f0c0 80f5 	bcc.w	8018fd6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 8018dec:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 8018df0:	46ae      	mov	lr, r5
 8018df2:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8018df6:	f0c0 80dd 	bcc.w	8018fb4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 8018dfa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018dfc:	4013      	ands	r3, r2
 8018dfe:	d055      	beq.n	8018eac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 8018e00:	20ff      	movs	r0, #255	; 0xff
 8018e02:	990e      	ldr	r1, [sp, #56]	; 0x38
 8018e04:	fb90 f1f1 	sdiv	r1, r0, r1
 8018e08:	434b      	muls	r3, r1
 8018e0a:	2bfe      	cmp	r3, #254	; 0xfe
 8018e0c:	dd03      	ble.n	8018e16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 8018e0e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018e10:	4281      	cmp	r1, r0
 8018e12:	f000 80cd 	beq.w	8018fb0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8018e16:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018e18:	f8bc 4000 	ldrh.w	r4, [ip]
 8018e1c:	fb11 f303 	smulbb	r3, r1, r3
 8018e20:	b29b      	uxth	r3, r3
 8018e22:	1c59      	adds	r1, r3, #1
 8018e24:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8018e28:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018e2c:	b29f      	uxth	r7, r3
 8018e2e:	43db      	mvns	r3, r3
 8018e30:	b2db      	uxtb	r3, r3
 8018e32:	9309      	str	r3, [sp, #36]	; 0x24
 8018e34:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018e36:	1220      	asrs	r0, r4, #8
 8018e38:	fb13 f907 	smulbb	r9, r3, r7
 8018e3c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018e40:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018e42:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8018e46:	fb00 9003 	mla	r0, r0, r3, r9
 8018e4a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8018e4c:	10e1      	asrs	r1, r4, #3
 8018e4e:	fb13 f907 	smulbb	r9, r3, r7
 8018e52:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018e56:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018e58:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8018e5c:	fb01 9103 	mla	r1, r1, r3, r9
 8018e60:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018e62:	00e4      	lsls	r4, r4, #3
 8018e64:	fb13 f707 	smulbb	r7, r3, r7
 8018e68:	b2e4      	uxtb	r4, r4
 8018e6a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018e6c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8018e70:	fb04 7403 	mla	r4, r4, r3, r7
 8018e74:	b280      	uxth	r0, r0
 8018e76:	b2a4      	uxth	r4, r4
 8018e78:	1c43      	adds	r3, r0, #1
 8018e7a:	f104 0901 	add.w	r9, r4, #1
 8018e7e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8018e82:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8018e86:	b289      	uxth	r1, r1
 8018e88:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8018e8c:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8018e90:	ea49 0000 	orr.w	r0, r9, r0
 8018e94:	f101 0901 	add.w	r9, r1, #1
 8018e98:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8018e9c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018ea0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018ea4:	ea40 0009 	orr.w	r0, r0, r9
 8018ea8:	f8ac 0000 	strh.w	r0, [ip]
 8018eac:	4446      	add	r6, r8
 8018eae:	b2b6      	uxth	r6, r6
 8018eb0:	2e07      	cmp	r6, #7
 8018eb2:	bf81      	itttt	hi
 8018eb4:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 8018eb6:	785a      	ldrbhi	r2, [r3, #1]
 8018eb8:	3301      	addhi	r3, #1
 8018eba:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8018ebc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018ebe:	bf9a      	itte	ls
 8018ec0:	fa42 f208 	asrls.w	r2, r2, r8
 8018ec4:	b2d2      	uxtbls	r2, r2
 8018ec6:	2600      	movhi	r6, #0
 8018ec8:	449c      	add	ip, r3
 8018eca:	e792      	b.n	8018df2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 8018ecc:	441c      	add	r4, r3
 8018ece:	b224      	sxth	r4, r4
 8018ed0:	e6d5      	b.n	8018c7e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8018ed2:	f1ba 0f01 	cmp.w	sl, #1
 8018ed6:	f47f af0c 	bne.w	8018cf2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018eda:	f1bb 0f01 	cmp.w	fp, #1
 8018ede:	f47f af08 	bne.w	8018cf2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018ee2:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 8018fa4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 8018ee6:	f8db 0000 	ldr.w	r0, [fp]
 8018eea:	6803      	ldr	r3, [r0, #0]
 8018eec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018eee:	4798      	blx	r3
 8018ef0:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 8018ef4:	465a      	mov	r2, fp
 8018ef6:	d006      	beq.n	8018f06 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8018ef8:	f1b8 0f04 	cmp.w	r8, #4
 8018efc:	d140      	bne.n	8018f80 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8018efe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018f00:	3300      	adds	r3, #0
 8018f02:	bf18      	it	ne
 8018f04:	2301      	movne	r3, #1
 8018f06:	0580      	lsls	r0, r0, #22
 8018f08:	d56e      	bpl.n	8018fe8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8018f0a:	f1b8 0f08 	cmp.w	r8, #8
 8018f0e:	d16b      	bne.n	8018fe8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8018f10:	2b00      	cmp	r3, #0
 8018f12:	bf0c      	ite	eq
 8018f14:	f44f 7100 	moveq.w	r1, #512	; 0x200
 8018f18:	f44f 7180 	movne.w	r1, #256	; 0x100
 8018f1c:	2d00      	cmp	r5, #0
 8018f1e:	f47f aee8 	bne.w	8018cf2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018f22:	2e00      	cmp	r6, #0
 8018f24:	f47f aee5 	bne.w	8018cf2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018f28:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8018f2a:	19e3      	adds	r3, r4, r7
 8018f2c:	4283      	cmp	r3, r0
 8018f2e:	f73f aee0 	bgt.w	8018cf2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018f32:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018f34:	980d      	ldr	r0, [sp, #52]	; 0x34
 8018f36:	444b      	add	r3, r9
 8018f38:	4283      	cmp	r3, r0
 8018f3a:	f73f aeda 	bgt.w	8018cf2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018f3e:	6810      	ldr	r0, [r2, #0]
 8018f40:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8018f44:	6804      	ldr	r4, [r0, #0]
 8018f46:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8018f4a:	b2bf      	uxth	r7, r7
 8018f4c:	f1b8 0f08 	cmp.w	r8, #8
 8018f50:	f04f 0500 	mov.w	r5, #0
 8018f54:	bf18      	it	ne
 8018f56:	3701      	addne	r7, #1
 8018f58:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8018f5c:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018f5e:	9104      	str	r1, [sp, #16]
 8018f60:	bf18      	it	ne
 8018f62:	f027 0701 	bicne.w	r7, r7, #1
 8018f66:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8018f68:	bf18      	it	ne
 8018f6a:	b2bf      	uxthne	r7, r7
 8018f6c:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8018f70:	e9cd 7900 	strd	r7, r9, [sp]
 8018f74:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8018f76:	6d64      	ldr	r4, [r4, #84]	; 0x54
 8018f78:	47a0      	blx	r4
 8018f7a:	b019      	add	sp, #100	; 0x64
 8018f7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018f80:	2300      	movs	r3, #0
 8018f82:	e7c0      	b.n	8018f06 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8018f84:	2208      	movs	r2, #8
 8018f86:	fb92 f3f8 	sdiv	r3, r2, r8
 8018f8a:	1e5a      	subs	r2, r3, #1
 8018f8c:	443a      	add	r2, r7
 8018f8e:	fb92 f2f3 	sdiv	r2, r2, r3
 8018f92:	fb12 f203 	smulbb	r2, r2, r3
 8018f96:	b292      	uxth	r2, r2
 8018f98:	e6b0      	b.n	8018cfc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 8018f9a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8018f9c:	e6ec      	b.n	8018d78 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 8018f9e:	bf00      	nop
 8018fa0:	20017448 	.word	0x20017448
 8018fa4:	20017450 	.word	0x20017450
 8018fa8:	2001744a 	.word	0x2001744a
 8018fac:	00fff800 	.word	0x00fff800
 8018fb0:	9810      	ldr	r0, [sp, #64]	; 0x40
 8018fb2:	e779      	b.n	8018ea8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 8018fb4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018fb6:	b153      	cbz	r3, 8018fce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 8018fb8:	441e      	add	r6, r3
 8018fba:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018fbc:	b2b6      	uxth	r6, r6
 8018fbe:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 8018fc2:	f006 0607 	and.w	r6, r6, #7
 8018fc6:	781a      	ldrb	r2, [r3, #0]
 8018fc8:	9328      	str	r3, [sp, #160]	; 0xa0
 8018fca:	4132      	asrs	r2, r6
 8018fcc:	b2d2      	uxtb	r2, r2
 8018fce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018fd0:	445b      	add	r3, fp
 8018fd2:	930a      	str	r3, [sp, #40]	; 0x28
 8018fd4:	e706      	b.n	8018de4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 8018fd6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018fd8:	2b00      	cmp	r3, #0
 8018fda:	d1ce      	bne.n	8018f7a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018fdc:	4b05      	ldr	r3, [pc, #20]	; (8018ff4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 8018fde:	6818      	ldr	r0, [r3, #0]
 8018fe0:	6803      	ldr	r3, [r0, #0]
 8018fe2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018fe4:	4798      	blx	r3
 8018fe6:	e7c8      	b.n	8018f7a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018fe8:	2b00      	cmp	r3, #0
 8018fea:	f43f ae82 	beq.w	8018cf2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018fee:	f44f 7180 	mov.w	r1, #256	; 0x100
 8018ff2:	e793      	b.n	8018f1c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8018ff4:	20017450 	.word	0x20017450

08018ff8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8018ff8:	b538      	push	{r3, r4, r5, lr}
 8018ffa:	4c15      	ldr	r4, [pc, #84]	; (8019050 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8018ffc:	7823      	ldrb	r3, [r4, #0]
 8018ffe:	f3bf 8f5b 	dmb	ish
 8019002:	07da      	lsls	r2, r3, #31
 8019004:	4605      	mov	r5, r0
 8019006:	d40b      	bmi.n	8019020 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8019008:	4620      	mov	r0, r4
 801900a:	f007 fd92 	bl	8020b32 <__cxa_guard_acquire>
 801900e:	b138      	cbz	r0, 8019020 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8019010:	4620      	mov	r0, r4
 8019012:	f007 fd9a 	bl	8020b4a <__cxa_guard_release>
 8019016:	4a0f      	ldr	r2, [pc, #60]	; (8019054 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8019018:	490f      	ldr	r1, [pc, #60]	; (8019058 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801901a:	4810      	ldr	r0, [pc, #64]	; (801905c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801901c:	f007 fd82 	bl	8020b24 <__aeabi_atexit>
 8019020:	4c0f      	ldr	r4, [pc, #60]	; (8019060 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8019022:	7823      	ldrb	r3, [r4, #0]
 8019024:	f3bf 8f5b 	dmb	ish
 8019028:	07db      	lsls	r3, r3, #31
 801902a:	d40b      	bmi.n	8019044 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801902c:	4620      	mov	r0, r4
 801902e:	f007 fd80 	bl	8020b32 <__cxa_guard_acquire>
 8019032:	b138      	cbz	r0, 8019044 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8019034:	4620      	mov	r0, r4
 8019036:	f007 fd88 	bl	8020b4a <__cxa_guard_release>
 801903a:	4a06      	ldr	r2, [pc, #24]	; (8019054 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801903c:	4909      	ldr	r1, [pc, #36]	; (8019064 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801903e:	480a      	ldr	r0, [pc, #40]	; (8019068 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8019040:	f007 fd70 	bl	8020b24 <__aeabi_atexit>
 8019044:	4b05      	ldr	r3, [pc, #20]	; (801905c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8019046:	612b      	str	r3, [r5, #16]
 8019048:	4b07      	ldr	r3, [pc, #28]	; (8019068 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801904a:	616b      	str	r3, [r5, #20]
 801904c:	bd38      	pop	{r3, r4, r5, pc}
 801904e:	bf00      	nop
 8019050:	20017524 	.word	0x20017524
 8019054:	20000000 	.word	0x20000000
 8019058:	08017209 	.word	0x08017209
 801905c:	200000d0 	.word	0x200000d0
 8019060:	20017528 	.word	0x20017528
 8019064:	08017207 	.word	0x08017207
 8019068:	200000d4 	.word	0x200000d4

0801906c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801906c:	b538      	push	{r3, r4, r5, lr}
 801906e:	4c15      	ldr	r4, [pc, #84]	; (80190c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8019070:	7823      	ldrb	r3, [r4, #0]
 8019072:	f3bf 8f5b 	dmb	ish
 8019076:	07da      	lsls	r2, r3, #31
 8019078:	4605      	mov	r5, r0
 801907a:	d40b      	bmi.n	8019094 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801907c:	4620      	mov	r0, r4
 801907e:	f007 fd58 	bl	8020b32 <__cxa_guard_acquire>
 8019082:	b138      	cbz	r0, 8019094 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8019084:	4620      	mov	r0, r4
 8019086:	f007 fd60 	bl	8020b4a <__cxa_guard_release>
 801908a:	4a0f      	ldr	r2, [pc, #60]	; (80190c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801908c:	490f      	ldr	r1, [pc, #60]	; (80190cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801908e:	4810      	ldr	r0, [pc, #64]	; (80190d0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8019090:	f007 fd48 	bl	8020b24 <__aeabi_atexit>
 8019094:	4c0f      	ldr	r4, [pc, #60]	; (80190d4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8019096:	7823      	ldrb	r3, [r4, #0]
 8019098:	f3bf 8f5b 	dmb	ish
 801909c:	07db      	lsls	r3, r3, #31
 801909e:	d40b      	bmi.n	80190b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 80190a0:	4620      	mov	r0, r4
 80190a2:	f007 fd46 	bl	8020b32 <__cxa_guard_acquire>
 80190a6:	b138      	cbz	r0, 80190b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 80190a8:	4620      	mov	r0, r4
 80190aa:	f007 fd4e 	bl	8020b4a <__cxa_guard_release>
 80190ae:	4a06      	ldr	r2, [pc, #24]	; (80190c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 80190b0:	4909      	ldr	r1, [pc, #36]	; (80190d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 80190b2:	480a      	ldr	r0, [pc, #40]	; (80190dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 80190b4:	f007 fd36 	bl	8020b24 <__aeabi_atexit>
 80190b8:	4b05      	ldr	r3, [pc, #20]	; (80190d0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 80190ba:	60ab      	str	r3, [r5, #8]
 80190bc:	4b07      	ldr	r3, [pc, #28]	; (80190dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 80190be:	60eb      	str	r3, [r5, #12]
 80190c0:	bd38      	pop	{r3, r4, r5, pc}
 80190c2:	bf00      	nop
 80190c4:	200174fc 	.word	0x200174fc
 80190c8:	20000000 	.word	0x20000000
 80190cc:	0801720d 	.word	0x0801720d
 80190d0:	200000a8 	.word	0x200000a8
 80190d4:	20017500 	.word	0x20017500
 80190d8:	0801720b 	.word	0x0801720b
 80190dc:	200000ac 	.word	0x200000ac

080190e0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 80190e0:	b510      	push	{r4, lr}
 80190e2:	4604      	mov	r4, r0
 80190e4:	f7ff ff88 	bl	8018ff8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 80190e8:	4620      	mov	r0, r4
 80190ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80190ee:	f7ff bfbd 	b.w	801906c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

080190f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 80190f4:	b538      	push	{r3, r4, r5, lr}
 80190f6:	4c15      	ldr	r4, [pc, #84]	; (801914c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 80190f8:	7823      	ldrb	r3, [r4, #0]
 80190fa:	f3bf 8f5b 	dmb	ish
 80190fe:	07da      	lsls	r2, r3, #31
 8019100:	4605      	mov	r5, r0
 8019102:	d40b      	bmi.n	801911c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8019104:	4620      	mov	r0, r4
 8019106:	f007 fd14 	bl	8020b32 <__cxa_guard_acquire>
 801910a:	b138      	cbz	r0, 801911c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801910c:	4620      	mov	r0, r4
 801910e:	f007 fd1c 	bl	8020b4a <__cxa_guard_release>
 8019112:	4a0f      	ldr	r2, [pc, #60]	; (8019150 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8019114:	490f      	ldr	r1, [pc, #60]	; (8019154 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8019116:	4810      	ldr	r0, [pc, #64]	; (8019158 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8019118:	f007 fd04 	bl	8020b24 <__aeabi_atexit>
 801911c:	4c0f      	ldr	r4, [pc, #60]	; (801915c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801911e:	7823      	ldrb	r3, [r4, #0]
 8019120:	f3bf 8f5b 	dmb	ish
 8019124:	07db      	lsls	r3, r3, #31
 8019126:	d40b      	bmi.n	8019140 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8019128:	4620      	mov	r0, r4
 801912a:	f007 fd02 	bl	8020b32 <__cxa_guard_acquire>
 801912e:	b138      	cbz	r0, 8019140 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8019130:	4620      	mov	r0, r4
 8019132:	f007 fd0a 	bl	8020b4a <__cxa_guard_release>
 8019136:	4a06      	ldr	r2, [pc, #24]	; (8019150 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8019138:	4909      	ldr	r1, [pc, #36]	; (8019160 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801913a:	480a      	ldr	r0, [pc, #40]	; (8019164 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801913c:	f007 fcf2 	bl	8020b24 <__aeabi_atexit>
 8019140:	4b05      	ldr	r3, [pc, #20]	; (8019158 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8019142:	622b      	str	r3, [r5, #32]
 8019144:	4b07      	ldr	r3, [pc, #28]	; (8019164 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8019146:	626b      	str	r3, [r5, #36]	; 0x24
 8019148:	bd38      	pop	{r3, r4, r5, pc}
 801914a:	bf00      	nop
 801914c:	2001752c 	.word	0x2001752c
 8019150:	20000000 	.word	0x20000000
 8019154:	08017201 	.word	0x08017201
 8019158:	200000d8 	.word	0x200000d8
 801915c:	20017530 	.word	0x20017530
 8019160:	080171ff 	.word	0x080171ff
 8019164:	200000dc 	.word	0x200000dc

08019168 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8019168:	b538      	push	{r3, r4, r5, lr}
 801916a:	4c15      	ldr	r4, [pc, #84]	; (80191c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801916c:	7823      	ldrb	r3, [r4, #0]
 801916e:	f3bf 8f5b 	dmb	ish
 8019172:	07da      	lsls	r2, r3, #31
 8019174:	4605      	mov	r5, r0
 8019176:	d40b      	bmi.n	8019190 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8019178:	4620      	mov	r0, r4
 801917a:	f007 fcda 	bl	8020b32 <__cxa_guard_acquire>
 801917e:	b138      	cbz	r0, 8019190 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8019180:	4620      	mov	r0, r4
 8019182:	f007 fce2 	bl	8020b4a <__cxa_guard_release>
 8019186:	4a0f      	ldr	r2, [pc, #60]	; (80191c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8019188:	490f      	ldr	r1, [pc, #60]	; (80191c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801918a:	4810      	ldr	r0, [pc, #64]	; (80191cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801918c:	f007 fcca 	bl	8020b24 <__aeabi_atexit>
 8019190:	4c0f      	ldr	r4, [pc, #60]	; (80191d0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8019192:	7823      	ldrb	r3, [r4, #0]
 8019194:	f3bf 8f5b 	dmb	ish
 8019198:	07db      	lsls	r3, r3, #31
 801919a:	d40b      	bmi.n	80191b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801919c:	4620      	mov	r0, r4
 801919e:	f007 fcc8 	bl	8020b32 <__cxa_guard_acquire>
 80191a2:	b138      	cbz	r0, 80191b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 80191a4:	4620      	mov	r0, r4
 80191a6:	f007 fcd0 	bl	8020b4a <__cxa_guard_release>
 80191aa:	4a06      	ldr	r2, [pc, #24]	; (80191c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 80191ac:	4909      	ldr	r1, [pc, #36]	; (80191d4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 80191ae:	480a      	ldr	r0, [pc, #40]	; (80191d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 80191b0:	f007 fcb8 	bl	8020b24 <__aeabi_atexit>
 80191b4:	4b05      	ldr	r3, [pc, #20]	; (80191cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 80191b6:	61ab      	str	r3, [r5, #24]
 80191b8:	4b07      	ldr	r3, [pc, #28]	; (80191d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 80191ba:	61eb      	str	r3, [r5, #28]
 80191bc:	bd38      	pop	{r3, r4, r5, pc}
 80191be:	bf00      	nop
 80191c0:	20017504 	.word	0x20017504
 80191c4:	20000000 	.word	0x20000000
 80191c8:	08017205 	.word	0x08017205
 80191cc:	200000b0 	.word	0x200000b0
 80191d0:	20017508 	.word	0x20017508
 80191d4:	08017203 	.word	0x08017203
 80191d8:	200000b4 	.word	0x200000b4

080191dc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 80191dc:	b510      	push	{r4, lr}
 80191de:	4604      	mov	r4, r0
 80191e0:	f7ff ff88 	bl	80190f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 80191e4:	4620      	mov	r0, r4
 80191e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80191ea:	f7ff bfbd 	b.w	8019168 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

080191f0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 80191f0:	b538      	push	{r3, r4, r5, lr}
 80191f2:	4c15      	ldr	r4, [pc, #84]	; (8019248 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 80191f4:	7823      	ldrb	r3, [r4, #0]
 80191f6:	f3bf 8f5b 	dmb	ish
 80191fa:	07da      	lsls	r2, r3, #31
 80191fc:	4605      	mov	r5, r0
 80191fe:	d40b      	bmi.n	8019218 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8019200:	4620      	mov	r0, r4
 8019202:	f007 fc96 	bl	8020b32 <__cxa_guard_acquire>
 8019206:	b138      	cbz	r0, 8019218 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8019208:	4620      	mov	r0, r4
 801920a:	f007 fc9e 	bl	8020b4a <__cxa_guard_release>
 801920e:	4a0f      	ldr	r2, [pc, #60]	; (801924c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8019210:	490f      	ldr	r1, [pc, #60]	; (8019250 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8019212:	4810      	ldr	r0, [pc, #64]	; (8019254 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8019214:	f007 fc86 	bl	8020b24 <__aeabi_atexit>
 8019218:	4c0f      	ldr	r4, [pc, #60]	; (8019258 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801921a:	7823      	ldrb	r3, [r4, #0]
 801921c:	f3bf 8f5b 	dmb	ish
 8019220:	07db      	lsls	r3, r3, #31
 8019222:	d40b      	bmi.n	801923c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8019224:	4620      	mov	r0, r4
 8019226:	f007 fc84 	bl	8020b32 <__cxa_guard_acquire>
 801922a:	b138      	cbz	r0, 801923c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801922c:	4620      	mov	r0, r4
 801922e:	f007 fc8c 	bl	8020b4a <__cxa_guard_release>
 8019232:	4a06      	ldr	r2, [pc, #24]	; (801924c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8019234:	4909      	ldr	r1, [pc, #36]	; (801925c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8019236:	480a      	ldr	r0, [pc, #40]	; (8019260 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8019238:	f007 fc74 	bl	8020b24 <__aeabi_atexit>
 801923c:	4b05      	ldr	r3, [pc, #20]	; (8019254 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801923e:	632b      	str	r3, [r5, #48]	; 0x30
 8019240:	4b07      	ldr	r3, [pc, #28]	; (8019260 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8019242:	636b      	str	r3, [r5, #52]	; 0x34
 8019244:	bd38      	pop	{r3, r4, r5, pc}
 8019246:	bf00      	nop
 8019248:	2001753c 	.word	0x2001753c
 801924c:	20000000 	.word	0x20000000
 8019250:	080171f9 	.word	0x080171f9
 8019254:	200000e8 	.word	0x200000e8
 8019258:	20017540 	.word	0x20017540
 801925c:	080171f7 	.word	0x080171f7
 8019260:	200000ec 	.word	0x200000ec

08019264 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8019264:	b538      	push	{r3, r4, r5, lr}
 8019266:	4c15      	ldr	r4, [pc, #84]	; (80192bc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8019268:	7823      	ldrb	r3, [r4, #0]
 801926a:	f3bf 8f5b 	dmb	ish
 801926e:	07da      	lsls	r2, r3, #31
 8019270:	4605      	mov	r5, r0
 8019272:	d40b      	bmi.n	801928c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8019274:	4620      	mov	r0, r4
 8019276:	f007 fc5c 	bl	8020b32 <__cxa_guard_acquire>
 801927a:	b138      	cbz	r0, 801928c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801927c:	4620      	mov	r0, r4
 801927e:	f007 fc64 	bl	8020b4a <__cxa_guard_release>
 8019282:	4a0f      	ldr	r2, [pc, #60]	; (80192c0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8019284:	490f      	ldr	r1, [pc, #60]	; (80192c4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8019286:	4810      	ldr	r0, [pc, #64]	; (80192c8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8019288:	f007 fc4c 	bl	8020b24 <__aeabi_atexit>
 801928c:	4c0f      	ldr	r4, [pc, #60]	; (80192cc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801928e:	7823      	ldrb	r3, [r4, #0]
 8019290:	f3bf 8f5b 	dmb	ish
 8019294:	07db      	lsls	r3, r3, #31
 8019296:	d40b      	bmi.n	80192b0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8019298:	4620      	mov	r0, r4
 801929a:	f007 fc4a 	bl	8020b32 <__cxa_guard_acquire>
 801929e:	b138      	cbz	r0, 80192b0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80192a0:	4620      	mov	r0, r4
 80192a2:	f007 fc52 	bl	8020b4a <__cxa_guard_release>
 80192a6:	4a06      	ldr	r2, [pc, #24]	; (80192c0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80192a8:	4909      	ldr	r1, [pc, #36]	; (80192d0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 80192aa:	480a      	ldr	r0, [pc, #40]	; (80192d4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80192ac:	f007 fc3a 	bl	8020b24 <__aeabi_atexit>
 80192b0:	4b05      	ldr	r3, [pc, #20]	; (80192c8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80192b2:	62ab      	str	r3, [r5, #40]	; 0x28
 80192b4:	4b07      	ldr	r3, [pc, #28]	; (80192d4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80192b6:	62eb      	str	r3, [r5, #44]	; 0x2c
 80192b8:	bd38      	pop	{r3, r4, r5, pc}
 80192ba:	bf00      	nop
 80192bc:	2001750c 	.word	0x2001750c
 80192c0:	20000000 	.word	0x20000000
 80192c4:	080171fd 	.word	0x080171fd
 80192c8:	200000b8 	.word	0x200000b8
 80192cc:	20017510 	.word	0x20017510
 80192d0:	080171fb 	.word	0x080171fb
 80192d4:	200000bc 	.word	0x200000bc

080192d8 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 80192d8:	b510      	push	{r4, lr}
 80192da:	4604      	mov	r4, r0
 80192dc:	f7ff ff88 	bl	80191f0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 80192e0:	4620      	mov	r0, r4
 80192e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80192e6:	f7ff bfbd 	b.w	8019264 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

080192ec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 80192ec:	b538      	push	{r3, r4, r5, lr}
 80192ee:	4c15      	ldr	r4, [pc, #84]	; (8019344 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 80192f0:	7823      	ldrb	r3, [r4, #0]
 80192f2:	f3bf 8f5b 	dmb	ish
 80192f6:	07da      	lsls	r2, r3, #31
 80192f8:	4605      	mov	r5, r0
 80192fa:	d40b      	bmi.n	8019314 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80192fc:	4620      	mov	r0, r4
 80192fe:	f007 fc18 	bl	8020b32 <__cxa_guard_acquire>
 8019302:	b138      	cbz	r0, 8019314 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8019304:	4620      	mov	r0, r4
 8019306:	f007 fc20 	bl	8020b4a <__cxa_guard_release>
 801930a:	4a0f      	ldr	r2, [pc, #60]	; (8019348 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801930c:	490f      	ldr	r1, [pc, #60]	; (801934c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801930e:	4810      	ldr	r0, [pc, #64]	; (8019350 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8019310:	f007 fc08 	bl	8020b24 <__aeabi_atexit>
 8019314:	4c0f      	ldr	r4, [pc, #60]	; (8019354 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8019316:	7823      	ldrb	r3, [r4, #0]
 8019318:	f3bf 8f5b 	dmb	ish
 801931c:	07db      	lsls	r3, r3, #31
 801931e:	d40b      	bmi.n	8019338 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8019320:	4620      	mov	r0, r4
 8019322:	f007 fc06 	bl	8020b32 <__cxa_guard_acquire>
 8019326:	b138      	cbz	r0, 8019338 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8019328:	4620      	mov	r0, r4
 801932a:	f007 fc0e 	bl	8020b4a <__cxa_guard_release>
 801932e:	4a06      	ldr	r2, [pc, #24]	; (8019348 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8019330:	4909      	ldr	r1, [pc, #36]	; (8019358 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8019332:	480a      	ldr	r0, [pc, #40]	; (801935c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8019334:	f007 fbf6 	bl	8020b24 <__aeabi_atexit>
 8019338:	4b05      	ldr	r3, [pc, #20]	; (8019350 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801933a:	652b      	str	r3, [r5, #80]	; 0x50
 801933c:	4b07      	ldr	r3, [pc, #28]	; (801935c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801933e:	656b      	str	r3, [r5, #84]	; 0x54
 8019340:	bd38      	pop	{r3, r4, r5, pc}
 8019342:	bf00      	nop
 8019344:	20017544 	.word	0x20017544
 8019348:	20000000 	.word	0x20000000
 801934c:	080171e9 	.word	0x080171e9
 8019350:	200000f0 	.word	0x200000f0
 8019354:	20017548 	.word	0x20017548
 8019358:	080171e7 	.word	0x080171e7
 801935c:	200000f4 	.word	0x200000f4

08019360 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8019360:	b538      	push	{r3, r4, r5, lr}
 8019362:	4c15      	ldr	r4, [pc, #84]	; (80193b8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8019364:	7823      	ldrb	r3, [r4, #0]
 8019366:	f3bf 8f5b 	dmb	ish
 801936a:	07da      	lsls	r2, r3, #31
 801936c:	4605      	mov	r5, r0
 801936e:	d40b      	bmi.n	8019388 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8019370:	4620      	mov	r0, r4
 8019372:	f007 fbde 	bl	8020b32 <__cxa_guard_acquire>
 8019376:	b138      	cbz	r0, 8019388 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8019378:	4620      	mov	r0, r4
 801937a:	f007 fbe6 	bl	8020b4a <__cxa_guard_release>
 801937e:	4a0f      	ldr	r2, [pc, #60]	; (80193bc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8019380:	490f      	ldr	r1, [pc, #60]	; (80193c0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8019382:	4810      	ldr	r0, [pc, #64]	; (80193c4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8019384:	f007 fbce 	bl	8020b24 <__aeabi_atexit>
 8019388:	4c0f      	ldr	r4, [pc, #60]	; (80193c8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801938a:	7823      	ldrb	r3, [r4, #0]
 801938c:	f3bf 8f5b 	dmb	ish
 8019390:	07db      	lsls	r3, r3, #31
 8019392:	d40b      	bmi.n	80193ac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8019394:	4620      	mov	r0, r4
 8019396:	f007 fbcc 	bl	8020b32 <__cxa_guard_acquire>
 801939a:	b138      	cbz	r0, 80193ac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801939c:	4620      	mov	r0, r4
 801939e:	f007 fbd4 	bl	8020b4a <__cxa_guard_release>
 80193a2:	4a06      	ldr	r2, [pc, #24]	; (80193bc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80193a4:	4909      	ldr	r1, [pc, #36]	; (80193cc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 80193a6:	480a      	ldr	r0, [pc, #40]	; (80193d0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80193a8:	f007 fbbc 	bl	8020b24 <__aeabi_atexit>
 80193ac:	4b05      	ldr	r3, [pc, #20]	; (80193c4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80193ae:	64ab      	str	r3, [r5, #72]	; 0x48
 80193b0:	4b07      	ldr	r3, [pc, #28]	; (80193d0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80193b2:	64eb      	str	r3, [r5, #76]	; 0x4c
 80193b4:	bd38      	pop	{r3, r4, r5, pc}
 80193b6:	bf00      	nop
 80193b8:	2001754c 	.word	0x2001754c
 80193bc:	20000000 	.word	0x20000000
 80193c0:	080171ed 	.word	0x080171ed
 80193c4:	200000f8 	.word	0x200000f8
 80193c8:	20017550 	.word	0x20017550
 80193cc:	080171eb 	.word	0x080171eb
 80193d0:	200000fc 	.word	0x200000fc

080193d4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 80193d4:	b538      	push	{r3, r4, r5, lr}
 80193d6:	4c15      	ldr	r4, [pc, #84]	; (801942c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 80193d8:	7823      	ldrb	r3, [r4, #0]
 80193da:	f3bf 8f5b 	dmb	ish
 80193de:	07da      	lsls	r2, r3, #31
 80193e0:	4605      	mov	r5, r0
 80193e2:	d40b      	bmi.n	80193fc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80193e4:	4620      	mov	r0, r4
 80193e6:	f007 fba4 	bl	8020b32 <__cxa_guard_acquire>
 80193ea:	b138      	cbz	r0, 80193fc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80193ec:	4620      	mov	r0, r4
 80193ee:	f007 fbac 	bl	8020b4a <__cxa_guard_release>
 80193f2:	4a0f      	ldr	r2, [pc, #60]	; (8019430 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80193f4:	490f      	ldr	r1, [pc, #60]	; (8019434 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 80193f6:	4810      	ldr	r0, [pc, #64]	; (8019438 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80193f8:	f007 fb94 	bl	8020b24 <__aeabi_atexit>
 80193fc:	4c0f      	ldr	r4, [pc, #60]	; (801943c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 80193fe:	7823      	ldrb	r3, [r4, #0]
 8019400:	f3bf 8f5b 	dmb	ish
 8019404:	07db      	lsls	r3, r3, #31
 8019406:	d40b      	bmi.n	8019420 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8019408:	4620      	mov	r0, r4
 801940a:	f007 fb92 	bl	8020b32 <__cxa_guard_acquire>
 801940e:	b138      	cbz	r0, 8019420 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8019410:	4620      	mov	r0, r4
 8019412:	f007 fb9a 	bl	8020b4a <__cxa_guard_release>
 8019416:	4a06      	ldr	r2, [pc, #24]	; (8019430 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8019418:	4909      	ldr	r1, [pc, #36]	; (8019440 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801941a:	480a      	ldr	r0, [pc, #40]	; (8019444 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801941c:	f007 fb82 	bl	8020b24 <__aeabi_atexit>
 8019420:	4b05      	ldr	r3, [pc, #20]	; (8019438 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8019422:	642b      	str	r3, [r5, #64]	; 0x40
 8019424:	4b07      	ldr	r3, [pc, #28]	; (8019444 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8019426:	646b      	str	r3, [r5, #68]	; 0x44
 8019428:	bd38      	pop	{r3, r4, r5, pc}
 801942a:	bf00      	nop
 801942c:	20017514 	.word	0x20017514
 8019430:	20000000 	.word	0x20000000
 8019434:	080171f1 	.word	0x080171f1
 8019438:	200000c0 	.word	0x200000c0
 801943c:	20017518 	.word	0x20017518
 8019440:	080171ef 	.word	0x080171ef
 8019444:	200000c4 	.word	0x200000c4

08019448 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8019448:	b538      	push	{r3, r4, r5, lr}
 801944a:	4c15      	ldr	r4, [pc, #84]	; (80194a0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801944c:	7823      	ldrb	r3, [r4, #0]
 801944e:	f3bf 8f5b 	dmb	ish
 8019452:	07da      	lsls	r2, r3, #31
 8019454:	4605      	mov	r5, r0
 8019456:	d40b      	bmi.n	8019470 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8019458:	4620      	mov	r0, r4
 801945a:	f007 fb6a 	bl	8020b32 <__cxa_guard_acquire>
 801945e:	b138      	cbz	r0, 8019470 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8019460:	4620      	mov	r0, r4
 8019462:	f007 fb72 	bl	8020b4a <__cxa_guard_release>
 8019466:	4a0f      	ldr	r2, [pc, #60]	; (80194a4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8019468:	490f      	ldr	r1, [pc, #60]	; (80194a8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801946a:	4810      	ldr	r0, [pc, #64]	; (80194ac <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801946c:	f007 fb5a 	bl	8020b24 <__aeabi_atexit>
 8019470:	4c0f      	ldr	r4, [pc, #60]	; (80194b0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8019472:	7823      	ldrb	r3, [r4, #0]
 8019474:	f3bf 8f5b 	dmb	ish
 8019478:	07db      	lsls	r3, r3, #31
 801947a:	d40b      	bmi.n	8019494 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801947c:	4620      	mov	r0, r4
 801947e:	f007 fb58 	bl	8020b32 <__cxa_guard_acquire>
 8019482:	b138      	cbz	r0, 8019494 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8019484:	4620      	mov	r0, r4
 8019486:	f007 fb60 	bl	8020b4a <__cxa_guard_release>
 801948a:	4a06      	ldr	r2, [pc, #24]	; (80194a4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801948c:	4909      	ldr	r1, [pc, #36]	; (80194b4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801948e:	480a      	ldr	r0, [pc, #40]	; (80194b8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8019490:	f007 fb48 	bl	8020b24 <__aeabi_atexit>
 8019494:	4b05      	ldr	r3, [pc, #20]	; (80194ac <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8019496:	63ab      	str	r3, [r5, #56]	; 0x38
 8019498:	4b07      	ldr	r3, [pc, #28]	; (80194b8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801949a:	63eb      	str	r3, [r5, #60]	; 0x3c
 801949c:	bd38      	pop	{r3, r4, r5, pc}
 801949e:	bf00      	nop
 80194a0:	20017534 	.word	0x20017534
 80194a4:	20000000 	.word	0x20000000
 80194a8:	080171f5 	.word	0x080171f5
 80194ac:	200000e0 	.word	0x200000e0
 80194b0:	20017538 	.word	0x20017538
 80194b4:	080171f3 	.word	0x080171f3
 80194b8:	200000e4 	.word	0x200000e4

080194bc <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 80194bc:	b510      	push	{r4, lr}
 80194be:	4604      	mov	r4, r0
 80194c0:	f7ff ff14 	bl	80192ec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 80194c4:	4620      	mov	r0, r4
 80194c6:	f7ff ff85 	bl	80193d4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 80194ca:	4620      	mov	r0, r4
 80194cc:	f7ff ff48 	bl	8019360 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 80194d0:	4620      	mov	r0, r4
 80194d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80194d6:	f7ff bfb7 	b.w	8019448 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

080194dc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 80194dc:	b538      	push	{r3, r4, r5, lr}
 80194de:	4c15      	ldr	r4, [pc, #84]	; (8019534 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 80194e0:	7823      	ldrb	r3, [r4, #0]
 80194e2:	f3bf 8f5b 	dmb	ish
 80194e6:	07da      	lsls	r2, r3, #31
 80194e8:	4605      	mov	r5, r0
 80194ea:	d40b      	bmi.n	8019504 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80194ec:	4620      	mov	r0, r4
 80194ee:	f007 fb20 	bl	8020b32 <__cxa_guard_acquire>
 80194f2:	b138      	cbz	r0, 8019504 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80194f4:	4620      	mov	r0, r4
 80194f6:	f007 fb28 	bl	8020b4a <__cxa_guard_release>
 80194fa:	4a0f      	ldr	r2, [pc, #60]	; (8019538 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80194fc:	490f      	ldr	r1, [pc, #60]	; (801953c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 80194fe:	4810      	ldr	r0, [pc, #64]	; (8019540 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8019500:	f007 fb10 	bl	8020b24 <__aeabi_atexit>
 8019504:	4c0f      	ldr	r4, [pc, #60]	; (8019544 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8019506:	7823      	ldrb	r3, [r4, #0]
 8019508:	f3bf 8f5b 	dmb	ish
 801950c:	07db      	lsls	r3, r3, #31
 801950e:	d40b      	bmi.n	8019528 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8019510:	4620      	mov	r0, r4
 8019512:	f007 fb0e 	bl	8020b32 <__cxa_guard_acquire>
 8019516:	b138      	cbz	r0, 8019528 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8019518:	4620      	mov	r0, r4
 801951a:	f007 fb16 	bl	8020b4a <__cxa_guard_release>
 801951e:	4a06      	ldr	r2, [pc, #24]	; (8019538 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8019520:	4909      	ldr	r1, [pc, #36]	; (8019548 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8019522:	480a      	ldr	r0, [pc, #40]	; (801954c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8019524:	f007 fafe 	bl	8020b24 <__aeabi_atexit>
 8019528:	4b05      	ldr	r3, [pc, #20]	; (8019540 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801952a:	662b      	str	r3, [r5, #96]	; 0x60
 801952c:	4b07      	ldr	r3, [pc, #28]	; (801954c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801952e:	666b      	str	r3, [r5, #100]	; 0x64
 8019530:	bd38      	pop	{r3, r4, r5, pc}
 8019532:	bf00      	nop
 8019534:	2001751c 	.word	0x2001751c
 8019538:	20000000 	.word	0x20000000
 801953c:	080171e1 	.word	0x080171e1
 8019540:	200000c8 	.word	0x200000c8
 8019544:	20017520 	.word	0x20017520
 8019548:	080171df 	.word	0x080171df
 801954c:	200000cc 	.word	0x200000cc

08019550 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8019550:	b538      	push	{r3, r4, r5, lr}
 8019552:	4c15      	ldr	r4, [pc, #84]	; (80195a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8019554:	7823      	ldrb	r3, [r4, #0]
 8019556:	f3bf 8f5b 	dmb	ish
 801955a:	07da      	lsls	r2, r3, #31
 801955c:	4605      	mov	r5, r0
 801955e:	d40b      	bmi.n	8019578 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8019560:	4620      	mov	r0, r4
 8019562:	f007 fae6 	bl	8020b32 <__cxa_guard_acquire>
 8019566:	b138      	cbz	r0, 8019578 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8019568:	4620      	mov	r0, r4
 801956a:	f007 faee 	bl	8020b4a <__cxa_guard_release>
 801956e:	4a0f      	ldr	r2, [pc, #60]	; (80195ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8019570:	490f      	ldr	r1, [pc, #60]	; (80195b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8019572:	4810      	ldr	r0, [pc, #64]	; (80195b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8019574:	f007 fad6 	bl	8020b24 <__aeabi_atexit>
 8019578:	4c0f      	ldr	r4, [pc, #60]	; (80195b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801957a:	7823      	ldrb	r3, [r4, #0]
 801957c:	f3bf 8f5b 	dmb	ish
 8019580:	07db      	lsls	r3, r3, #31
 8019582:	d40b      	bmi.n	801959c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8019584:	4620      	mov	r0, r4
 8019586:	f007 fad4 	bl	8020b32 <__cxa_guard_acquire>
 801958a:	b138      	cbz	r0, 801959c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801958c:	4620      	mov	r0, r4
 801958e:	f007 fadc 	bl	8020b4a <__cxa_guard_release>
 8019592:	4a06      	ldr	r2, [pc, #24]	; (80195ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8019594:	4909      	ldr	r1, [pc, #36]	; (80195bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8019596:	480a      	ldr	r0, [pc, #40]	; (80195c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8019598:	f007 fac4 	bl	8020b24 <__aeabi_atexit>
 801959c:	4b05      	ldr	r3, [pc, #20]	; (80195b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801959e:	65ab      	str	r3, [r5, #88]	; 0x58
 80195a0:	4b07      	ldr	r3, [pc, #28]	; (80195c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80195a2:	65eb      	str	r3, [r5, #92]	; 0x5c
 80195a4:	bd38      	pop	{r3, r4, r5, pc}
 80195a6:	bf00      	nop
 80195a8:	200174f4 	.word	0x200174f4
 80195ac:	20000000 	.word	0x20000000
 80195b0:	080171e5 	.word	0x080171e5
 80195b4:	200000a0 	.word	0x200000a0
 80195b8:	200174f8 	.word	0x200174f8
 80195bc:	080171e3 	.word	0x080171e3
 80195c0:	200000a4 	.word	0x200000a4

080195c4 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 80195c4:	b510      	push	{r4, lr}
 80195c6:	4604      	mov	r4, r0
 80195c8:	f7ff ff88 	bl	80194dc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 80195cc:	4620      	mov	r0, r4
 80195ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80195d2:	f7ff bfbd 	b.w	8019550 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

080195d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 80195d8:	b538      	push	{r3, r4, r5, lr}
 80195da:	4c15      	ldr	r4, [pc, #84]	; (8019630 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 80195dc:	7823      	ldrb	r3, [r4, #0]
 80195de:	f3bf 8f5b 	dmb	ish
 80195e2:	07da      	lsls	r2, r3, #31
 80195e4:	4605      	mov	r5, r0
 80195e6:	d40b      	bmi.n	8019600 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80195e8:	4620      	mov	r0, r4
 80195ea:	f007 faa2 	bl	8020b32 <__cxa_guard_acquire>
 80195ee:	b138      	cbz	r0, 8019600 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80195f0:	4620      	mov	r0, r4
 80195f2:	f007 faaa 	bl	8020b4a <__cxa_guard_release>
 80195f6:	4a0f      	ldr	r2, [pc, #60]	; (8019634 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80195f8:	490f      	ldr	r1, [pc, #60]	; (8019638 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 80195fa:	4810      	ldr	r0, [pc, #64]	; (801963c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80195fc:	f007 fa92 	bl	8020b24 <__aeabi_atexit>
 8019600:	4c0f      	ldr	r4, [pc, #60]	; (8019640 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8019602:	7823      	ldrb	r3, [r4, #0]
 8019604:	f3bf 8f5b 	dmb	ish
 8019608:	07db      	lsls	r3, r3, #31
 801960a:	d40b      	bmi.n	8019624 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801960c:	4620      	mov	r0, r4
 801960e:	f007 fa90 	bl	8020b32 <__cxa_guard_acquire>
 8019612:	b138      	cbz	r0, 8019624 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8019614:	4620      	mov	r0, r4
 8019616:	f007 fa98 	bl	8020b4a <__cxa_guard_release>
 801961a:	4a06      	ldr	r2, [pc, #24]	; (8019634 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801961c:	4909      	ldr	r1, [pc, #36]	; (8019644 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801961e:	480a      	ldr	r0, [pc, #40]	; (8019648 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8019620:	f007 fa80 	bl	8020b24 <__aeabi_atexit>
 8019624:	4b05      	ldr	r3, [pc, #20]	; (801963c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8019626:	672b      	str	r3, [r5, #112]	; 0x70
 8019628:	4b07      	ldr	r3, [pc, #28]	; (8019648 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801962a:	676b      	str	r3, [r5, #116]	; 0x74
 801962c:	bd38      	pop	{r3, r4, r5, pc}
 801962e:	bf00      	nop
 8019630:	200174ec 	.word	0x200174ec
 8019634:	20000000 	.word	0x20000000
 8019638:	080171d9 	.word	0x080171d9
 801963c:	20000098 	.word	0x20000098
 8019640:	200174f0 	.word	0x200174f0
 8019644:	080171d7 	.word	0x080171d7
 8019648:	2000009c 	.word	0x2000009c

0801964c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801964c:	b538      	push	{r3, r4, r5, lr}
 801964e:	4c15      	ldr	r4, [pc, #84]	; (80196a4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8019650:	7823      	ldrb	r3, [r4, #0]
 8019652:	f3bf 8f5b 	dmb	ish
 8019656:	07da      	lsls	r2, r3, #31
 8019658:	4605      	mov	r5, r0
 801965a:	d40b      	bmi.n	8019674 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801965c:	4620      	mov	r0, r4
 801965e:	f007 fa68 	bl	8020b32 <__cxa_guard_acquire>
 8019662:	b138      	cbz	r0, 8019674 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8019664:	4620      	mov	r0, r4
 8019666:	f007 fa70 	bl	8020b4a <__cxa_guard_release>
 801966a:	4a0f      	ldr	r2, [pc, #60]	; (80196a8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801966c:	490f      	ldr	r1, [pc, #60]	; (80196ac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801966e:	4810      	ldr	r0, [pc, #64]	; (80196b0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8019670:	f007 fa58 	bl	8020b24 <__aeabi_atexit>
 8019674:	4c0f      	ldr	r4, [pc, #60]	; (80196b4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8019676:	7823      	ldrb	r3, [r4, #0]
 8019678:	f3bf 8f5b 	dmb	ish
 801967c:	07db      	lsls	r3, r3, #31
 801967e:	d40b      	bmi.n	8019698 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8019680:	4620      	mov	r0, r4
 8019682:	f007 fa56 	bl	8020b32 <__cxa_guard_acquire>
 8019686:	b138      	cbz	r0, 8019698 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8019688:	4620      	mov	r0, r4
 801968a:	f007 fa5e 	bl	8020b4a <__cxa_guard_release>
 801968e:	4a06      	ldr	r2, [pc, #24]	; (80196a8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8019690:	4909      	ldr	r1, [pc, #36]	; (80196b8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8019692:	480a      	ldr	r0, [pc, #40]	; (80196bc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8019694:	f007 fa46 	bl	8020b24 <__aeabi_atexit>
 8019698:	4b05      	ldr	r3, [pc, #20]	; (80196b0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801969a:	66ab      	str	r3, [r5, #104]	; 0x68
 801969c:	4b07      	ldr	r3, [pc, #28]	; (80196bc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801969e:	66eb      	str	r3, [r5, #108]	; 0x6c
 80196a0:	bd38      	pop	{r3, r4, r5, pc}
 80196a2:	bf00      	nop
 80196a4:	200174e4 	.word	0x200174e4
 80196a8:	20000000 	.word	0x20000000
 80196ac:	080171dd 	.word	0x080171dd
 80196b0:	20000090 	.word	0x20000090
 80196b4:	200174e8 	.word	0x200174e8
 80196b8:	080171db 	.word	0x080171db
 80196bc:	20000094 	.word	0x20000094

080196c0 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 80196c0:	b510      	push	{r4, lr}
 80196c2:	4604      	mov	r4, r0
 80196c4:	f7ff ff88 	bl	80195d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 80196c8:	4620      	mov	r0, r4
 80196ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80196ce:	f7ff bfbd 	b.w	801964c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

080196d2 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 80196d2:	b510      	push	{r4, lr}
 80196d4:	4604      	mov	r4, r0
 80196d6:	f7ff fff3 	bl	80196c0 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 80196da:	4620      	mov	r0, r4
 80196dc:	f7ff ff72 	bl	80195c4 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 80196e0:	4620      	mov	r0, r4
 80196e2:	f7ff fdf9 	bl	80192d8 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 80196e6:	4620      	mov	r0, r4
 80196e8:	f7ff fcfa 	bl	80190e0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 80196ec:	4620      	mov	r0, r4
 80196ee:	f7ff fd75 	bl	80191dc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 80196f2:	4620      	mov	r0, r4
 80196f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80196f8:	f7ff bee0 	b.w	80194bc <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

080196fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 80196fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019700:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 8019704:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 8019708:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801970c:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 8019710:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 8019714:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 8019718:	8808      	ldrh	r0, [r1, #0]
 801971a:	fb05 4c0e 	mla	ip, r5, lr, r4
 801971e:	2d00      	cmp	r5, #0
 8019720:	eb02 0a0c 	add.w	sl, r2, ip
 8019724:	f2c0 80b0 	blt.w	8019888 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8019728:	45ab      	cmp	fp, r5
 801972a:	f340 80ad 	ble.w	8019888 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801972e:	2c00      	cmp	r4, #0
 8019730:	f2c0 80a8 	blt.w	8019884 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8019734:	45a6      	cmp	lr, r4
 8019736:	f340 80a5 	ble.w	8019884 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801973a:	f812 200c 	ldrb.w	r2, [r2, ip]
 801973e:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 8019742:	1c62      	adds	r2, r4, #1
 8019744:	f100 80a3 	bmi.w	801988e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8019748:	4596      	cmp	lr, r2
 801974a:	f340 80a0 	ble.w	801988e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801974e:	f1b9 0f00 	cmp.w	r9, #0
 8019752:	f000 809c 	beq.w	801988e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8019756:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801975a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801975e:	3501      	adds	r5, #1
 8019760:	f100 8099 	bmi.w	8019896 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019764:	45ab      	cmp	fp, r5
 8019766:	f340 8096 	ble.w	8019896 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801976a:	2f00      	cmp	r7, #0
 801976c:	f000 8093 	beq.w	8019896 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019770:	2c00      	cmp	r4, #0
 8019772:	f2c0 808e 	blt.w	8019892 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8019776:	45a6      	cmp	lr, r4
 8019778:	f340 808b 	ble.w	8019892 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801977c:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8019780:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 8019784:	3401      	adds	r4, #1
 8019786:	f100 8089 	bmi.w	801989c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801978a:	45a6      	cmp	lr, r4
 801978c:	f340 8086 	ble.w	801989c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019790:	f1b9 0f00 	cmp.w	r9, #0
 8019794:	f000 8082 	beq.w	801989c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019798:	44d6      	add	lr, sl
 801979a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801979e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80197a2:	ea4f 4408 	mov.w	r4, r8, lsl #16
 80197a6:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80197aa:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80197ae:	fb19 fe07 	smulbb	lr, r9, r7
 80197b2:	ea44 0808 	orr.w	r8, r4, r8
 80197b6:	ea4f 440c 	mov.w	r4, ip, lsl #16
 80197ba:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 80197be:	f1c7 0210 	rsb	r2, r7, #16
 80197c2:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80197c6:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80197ca:	ea44 0c0c 	orr.w	ip, r4, ip
 80197ce:	eba2 0209 	sub.w	r2, r2, r9
 80197d2:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 80197d6:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 80197da:	fb04 f40c 	mul.w	r4, r4, ip
 80197de:	fb02 4808 	mla	r8, r2, r8, r4
 80197e2:	041a      	lsls	r2, r3, #16
 80197e4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80197e8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80197ec:	4313      	orrs	r3, r2
 80197ee:	042a      	lsls	r2, r5, #16
 80197f0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80197f4:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80197f8:	fb0e 8303 	mla	r3, lr, r3, r8
 80197fc:	432a      	orrs	r2, r5
 80197fe:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8019802:	fb07 3202 	mla	r2, r7, r2, r3
 8019806:	0d53      	lsrs	r3, r2, #21
 8019808:	0952      	lsrs	r2, r2, #5
 801980a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801980e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019812:	431a      	orrs	r2, r3
 8019814:	b293      	uxth	r3, r2
 8019816:	b2b4      	uxth	r4, r6
 8019818:	1202      	asrs	r2, r0, #8
 801981a:	43f6      	mvns	r6, r6
 801981c:	b2f6      	uxtb	r6, r6
 801981e:	121d      	asrs	r5, r3, #8
 8019820:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8019824:	fb12 f206 	smulbb	r2, r2, r6
 8019828:	10c7      	asrs	r7, r0, #3
 801982a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801982e:	00c0      	lsls	r0, r0, #3
 8019830:	fb05 2504 	mla	r5, r5, r4, r2
 8019834:	b2c0      	uxtb	r0, r0
 8019836:	10da      	asrs	r2, r3, #3
 8019838:	00db      	lsls	r3, r3, #3
 801983a:	b2db      	uxtb	r3, r3
 801983c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019840:	fb10 f006 	smulbb	r0, r0, r6
 8019844:	b2ad      	uxth	r5, r5
 8019846:	fb03 0004 	mla	r0, r3, r4, r0
 801984a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801984e:	fb17 f706 	smulbb	r7, r7, r6
 8019852:	b280      	uxth	r0, r0
 8019854:	1c6b      	adds	r3, r5, #1
 8019856:	fb02 7204 	mla	r2, r2, r4, r7
 801985a:	b292      	uxth	r2, r2
 801985c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8019860:	1c43      	adds	r3, r0, #1
 8019862:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8019866:	1c50      	adds	r0, r2, #1
 8019868:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801986c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8019870:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019874:	0952      	lsrs	r2, r2, #5
 8019876:	432b      	orrs	r3, r5
 8019878:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801987c:	4313      	orrs	r3, r2
 801987e:	800b      	strh	r3, [r1, #0]
 8019880:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019884:	4680      	mov	r8, r0
 8019886:	e75c      	b.n	8019742 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8019888:	4684      	mov	ip, r0
 801988a:	4680      	mov	r8, r0
 801988c:	e767      	b.n	801975e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801988e:	4684      	mov	ip, r0
 8019890:	e765      	b.n	801975e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8019892:	4605      	mov	r5, r0
 8019894:	e776      	b.n	8019784 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 8019896:	4603      	mov	r3, r0
 8019898:	4605      	mov	r5, r0
 801989a:	e782      	b.n	80197a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801989c:	4603      	mov	r3, r0
 801989e:	e780      	b.n	80197a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

080198a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80198a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80198a4:	b099      	sub	sp, #100	; 0x64
 80198a6:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 80198aa:	9215      	str	r2, [sp, #84]	; 0x54
 80198ac:	9309      	str	r3, [sp, #36]	; 0x24
 80198ae:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80198b0:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 80198b4:	930d      	str	r3, [sp, #52]	; 0x34
 80198b6:	910c      	str	r1, [sp, #48]	; 0x30
 80198b8:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 80198bc:	9016      	str	r0, [sp, #88]	; 0x58
 80198be:	6850      	ldr	r0, [r2, #4]
 80198c0:	6812      	ldr	r2, [r2, #0]
 80198c2:	fb00 1303 	mla	r3, r0, r3, r1
 80198c6:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 80198ca:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80198cc:	681b      	ldr	r3, [r3, #0]
 80198ce:	930b      	str	r3, [sp, #44]	; 0x2c
 80198d0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80198d2:	685e      	ldr	r6, [r3, #4]
 80198d4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80198d6:	43db      	mvns	r3, r3
 80198d8:	b2db      	uxtb	r3, r3
 80198da:	3604      	adds	r6, #4
 80198dc:	930a      	str	r3, [sp, #40]	; 0x28
 80198de:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80198e0:	2b00      	cmp	r3, #0
 80198e2:	dc03      	bgt.n	80198ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80198e4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80198e6:	2b00      	cmp	r3, #0
 80198e8:	f340 8225 	ble.w	8019d36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 80198ec:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80198ee:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80198f2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80198f6:	1e48      	subs	r0, r1, #1
 80198f8:	1e57      	subs	r7, r2, #1
 80198fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80198fc:	2b00      	cmp	r3, #0
 80198fe:	f340 80e3 	ble.w	8019ac8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8019902:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8019906:	ea4f 4325 	mov.w	r3, r5, asr #16
 801990a:	d406      	bmi.n	801991a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801990c:	4584      	cmp	ip, r0
 801990e:	da04      	bge.n	801991a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019910:	2b00      	cmp	r3, #0
 8019912:	db02      	blt.n	801991a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019914:	42bb      	cmp	r3, r7
 8019916:	f2c0 80d8 	blt.w	8019aca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801991a:	f11c 0c01 	adds.w	ip, ip, #1
 801991e:	f100 80c9 	bmi.w	8019ab4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019922:	4561      	cmp	r1, ip
 8019924:	f2c0 80c6 	blt.w	8019ab4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019928:	3301      	adds	r3, #1
 801992a:	f100 80c3 	bmi.w	8019ab4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801992e:	429a      	cmp	r2, r3
 8019930:	f2c0 80c0 	blt.w	8019ab4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019934:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8019938:	4647      	mov	r7, r8
 801993a:	f1bb 0f00 	cmp.w	fp, #0
 801993e:	f340 80e3 	ble.w	8019b08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8019942:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8019944:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019946:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801994a:	689b      	ldr	r3, [r3, #8]
 801994c:	ea5f 422a 	movs.w	r2, sl, asr #16
 8019950:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8019954:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8019958:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801995c:	f100 8121 	bmi.w	8019ba2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019960:	f103 39ff 	add.w	r9, r3, #4294967295
 8019964:	454a      	cmp	r2, r9
 8019966:	f280 811c 	bge.w	8019ba2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801996a:	f1bc 0f00 	cmp.w	ip, #0
 801996e:	f2c0 8118 	blt.w	8019ba2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019972:	f10e 39ff 	add.w	r9, lr, #4294967295
 8019976:	45cc      	cmp	ip, r9
 8019978:	f280 8113 	bge.w	8019ba2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801997c:	b21b      	sxth	r3, r3
 801997e:	fb0c 2203 	mla	r2, ip, r3, r2
 8019982:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019984:	eb04 0902 	add.w	r9, r4, r2
 8019988:	5ca2      	ldrb	r2, [r4, r2]
 801998a:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801998e:	2800      	cmp	r0, #0
 8019990:	f000 80fe 	beq.w	8019b90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8019994:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019998:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801999c:	9211      	str	r2, [sp, #68]	; 0x44
 801999e:	b151      	cbz	r1, 80199b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80199a0:	eb09 0203 	add.w	r2, r9, r3
 80199a4:	f819 3003 	ldrb.w	r3, [r9, r3]
 80199a8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80199ac:	930f      	str	r3, [sp, #60]	; 0x3c
 80199ae:	7853      	ldrb	r3, [r2, #1]
 80199b0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80199b4:	9312      	str	r3, [sp, #72]	; 0x48
 80199b6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80199b8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80199ba:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80199be:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80199c2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80199c6:	ea4c 0c03 	orr.w	ip, ip, r3
 80199ca:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80199cc:	041b      	lsls	r3, r3, #16
 80199ce:	fb10 f201 	smulbb	r2, r0, r1
 80199d2:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80199d6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80199da:	10d2      	asrs	r2, r2, #3
 80199dc:	4323      	orrs	r3, r4
 80199de:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 80199e2:	4353      	muls	r3, r2
 80199e4:	fb09 330c 	mla	r3, r9, ip, r3
 80199e8:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80199ec:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80199f0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80199f4:	ea4c 0e0e 	orr.w	lr, ip, lr
 80199f8:	f1c1 0c10 	rsb	ip, r1, #16
 80199fc:	ebac 0c00 	sub.w	ip, ip, r0
 8019a00:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019a04:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8019a08:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019a0a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8019a0c:	0418      	lsls	r0, r3, #16
 8019a0e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8019a12:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019a16:	4318      	orrs	r0, r3
 8019a18:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8019a1c:	fb02 c200 	mla	r2, r2, r0, ip
 8019a20:	0d53      	lsrs	r3, r2, #21
 8019a22:	0952      	lsrs	r2, r2, #5
 8019a24:	8838      	ldrh	r0, [r7, #0]
 8019a26:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019a2a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019a2e:	431a      	orrs	r2, r3
 8019a30:	b292      	uxth	r2, r2
 8019a32:	1201      	asrs	r1, r0, #8
 8019a34:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8019a38:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8019a3c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8019a40:	fb11 f104 	smulbb	r1, r1, r4
 8019a44:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8019a48:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019a4c:	00c0      	lsls	r0, r0, #3
 8019a4e:	fb0c 1c03 	mla	ip, ip, r3, r1
 8019a52:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8019a56:	10d1      	asrs	r1, r2, #3
 8019a58:	b2c0      	uxtb	r0, r0
 8019a5a:	00d2      	lsls	r2, r2, #3
 8019a5c:	b2d2      	uxtb	r2, r2
 8019a5e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8019a62:	fb1e fe04 	smulbb	lr, lr, r4
 8019a66:	fb10 f004 	smulbb	r0, r0, r4
 8019a6a:	fa1f fc8c 	uxth.w	ip, ip
 8019a6e:	fb01 e103 	mla	r1, r1, r3, lr
 8019a72:	fb02 0303 	mla	r3, r2, r3, r0
 8019a76:	b29a      	uxth	r2, r3
 8019a78:	f10c 0301 	add.w	r3, ip, #1
 8019a7c:	b289      	uxth	r1, r1
 8019a7e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8019a82:	1c53      	adds	r3, r2, #1
 8019a84:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019a88:	1c4a      	adds	r2, r1, #1
 8019a8a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8019a8e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019a92:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019a96:	0949      	lsrs	r1, r1, #5
 8019a98:	ea43 030c 	orr.w	r3, r3, ip
 8019a9c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019aa0:	430b      	orrs	r3, r1
 8019aa2:	803b      	strh	r3, [r7, #0]
 8019aa4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8019aa6:	449a      	add	sl, r3
 8019aa8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019aaa:	3702      	adds	r7, #2
 8019aac:	441d      	add	r5, r3
 8019aae:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019ab2:	e742      	b.n	801993a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8019ab4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8019ab6:	449a      	add	sl, r3
 8019ab8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019aba:	441d      	add	r5, r3
 8019abc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019abe:	3b01      	subs	r3, #1
 8019ac0:	9309      	str	r3, [sp, #36]	; 0x24
 8019ac2:	f108 0802 	add.w	r8, r8, #2
 8019ac6:	e718      	b.n	80198fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8019ac8:	d023      	beq.n	8019b12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8019aca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019acc:	9825      	ldr	r0, [sp, #148]	; 0x94
 8019ace:	3b01      	subs	r3, #1
 8019ad0:	fb00 a003 	mla	r0, r0, r3, sl
 8019ad4:	1400      	asrs	r0, r0, #16
 8019ad6:	f53f af2d 	bmi.w	8019934 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019ada:	3901      	subs	r1, #1
 8019adc:	4288      	cmp	r0, r1
 8019ade:	f6bf af29 	bge.w	8019934 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019ae2:	9926      	ldr	r1, [sp, #152]	; 0x98
 8019ae4:	fb01 5303 	mla	r3, r1, r3, r5
 8019ae8:	141b      	asrs	r3, r3, #16
 8019aea:	f53f af23 	bmi.w	8019934 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019aee:	3a01      	subs	r2, #1
 8019af0:	4293      	cmp	r3, r2
 8019af2:	f6bf af1f 	bge.w	8019934 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019af6:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8019afa:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 8019afe:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8019b02:	f1be 0f00 	cmp.w	lr, #0
 8019b06:	dc6c      	bgt.n	8019be2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8019b08:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019b0a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8019b0e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8019b12:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019b14:	2b00      	cmp	r3, #0
 8019b16:	f340 810e 	ble.w	8019d36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8019b1a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019b1e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019b22:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019b26:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8019b28:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019b2c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019b30:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019b34:	eef0 6a62 	vmov.f32	s13, s5
 8019b38:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019b3c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019b40:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019b44:	ee16 aa90 	vmov	sl, s13
 8019b48:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019b4c:	eef0 6a43 	vmov.f32	s13, s6
 8019b50:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019b54:	ee12 2a90 	vmov	r2, s5
 8019b58:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019b5c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019b60:	ee13 2a10 	vmov	r2, s6
 8019b64:	9325      	str	r3, [sp, #148]	; 0x94
 8019b66:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8019b68:	fb92 f3f3 	sdiv	r3, r2, r3
 8019b6c:	9326      	str	r3, [sp, #152]	; 0x98
 8019b6e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019b70:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8019b72:	3b01      	subs	r3, #1
 8019b74:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019b78:	930c      	str	r3, [sp, #48]	; 0x30
 8019b7a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8019b7c:	bf08      	it	eq
 8019b7e:	4613      	moveq	r3, r2
 8019b80:	ee16 5a90 	vmov	r5, s13
 8019b84:	9309      	str	r3, [sp, #36]	; 0x24
 8019b86:	eeb0 3a67 	vmov.f32	s6, s15
 8019b8a:	eef0 2a47 	vmov.f32	s5, s14
 8019b8e:	e6a6      	b.n	80198de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019b90:	2900      	cmp	r1, #0
 8019b92:	f43f af10 	beq.w	80199b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019b96:	f819 3003 	ldrb.w	r3, [r9, r3]
 8019b9a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019b9e:	930f      	str	r3, [sp, #60]	; 0x3c
 8019ba0:	e709      	b.n	80199b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019ba2:	f112 0901 	adds.w	r9, r2, #1
 8019ba6:	f53f af7d 	bmi.w	8019aa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019baa:	454b      	cmp	r3, r9
 8019bac:	f6ff af7a 	blt.w	8019aa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019bb0:	f11c 0901 	adds.w	r9, ip, #1
 8019bb4:	f53f af76 	bmi.w	8019aa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019bb8:	45ce      	cmp	lr, r9
 8019bba:	f6ff af73 	blt.w	8019aa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019bbe:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8019bc0:	9202      	str	r2, [sp, #8]
 8019bc2:	b21b      	sxth	r3, r3
 8019bc4:	fa0f f28e 	sxth.w	r2, lr
 8019bc8:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8019bcc:	e9cd c003 	strd	ip, r0, [sp, #12]
 8019bd0:	9201      	str	r2, [sp, #4]
 8019bd2:	9300      	str	r3, [sp, #0]
 8019bd4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8019bd6:	9816      	ldr	r0, [sp, #88]	; 0x58
 8019bd8:	4633      	mov	r3, r6
 8019bda:	4639      	mov	r1, r7
 8019bdc:	f7ff fd8e 	bl	80196fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8019be0:	e760      	b.n	8019aa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019be2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019be4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019be6:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8019bea:	ea4f 422a 	mov.w	r2, sl, asr #16
 8019bee:	1429      	asrs	r1, r5, #16
 8019bf0:	fb03 2101 	mla	r1, r3, r1, r2
 8019bf4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8019bf6:	440a      	add	r2, r1
 8019bf8:	5c61      	ldrb	r1, [r4, r1]
 8019bfa:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8019bfe:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8019c02:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8019c06:	f1bc 0f00 	cmp.w	ip, #0
 8019c0a:	f000 808c 	beq.w	8019d26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8019c0e:	7857      	ldrb	r7, [r2, #1]
 8019c10:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8019c14:	9413      	str	r4, [sp, #76]	; 0x4c
 8019c16:	b140      	cbz	r0, 8019c2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019c18:	18d7      	adds	r7, r2, r3
 8019c1a:	5cd3      	ldrb	r3, [r2, r3]
 8019c1c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019c20:	9310      	str	r3, [sp, #64]	; 0x40
 8019c22:	787b      	ldrb	r3, [r7, #1]
 8019c24:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019c28:	9314      	str	r3, [sp, #80]	; 0x50
 8019c2a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019c2c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019c2e:	fb1c f200 	smulbb	r2, ip, r0
 8019c32:	041f      	lsls	r7, r3, #16
 8019c34:	10d2      	asrs	r2, r2, #3
 8019c36:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019c3a:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8019c3e:	431f      	orrs	r7, r3
 8019c40:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8019c44:	9317      	str	r3, [sp, #92]	; 0x5c
 8019c46:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8019c48:	041b      	lsls	r3, r3, #16
 8019c4a:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 8019c4e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019c52:	ea43 030b 	orr.w	r3, r3, fp
 8019c56:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8019c58:	4353      	muls	r3, r2
 8019c5a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8019c5e:	fb04 3707 	mla	r7, r4, r7, r3
 8019c62:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8019c66:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8019c6a:	ea43 0b01 	orr.w	fp, r3, r1
 8019c6e:	f1c0 0110 	rsb	r1, r0, #16
 8019c72:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019c74:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8019c76:	eba1 0c0c 	sub.w	ip, r1, ip
 8019c7a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019c7e:	fb0c 770b 	mla	r7, ip, fp, r7
 8019c82:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019c86:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8019c8a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019c8e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8019c92:	ea4c 0c0b 	orr.w	ip, ip, fp
 8019c96:	fb02 770c 	mla	r7, r2, ip, r7
 8019c9a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8019c9c:	0d79      	lsrs	r1, r7, #21
 8019c9e:	097f      	lsrs	r7, r7, #5
 8019ca0:	8812      	ldrh	r2, [r2, #0]
 8019ca2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019ca6:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8019caa:	430f      	orrs	r7, r1
 8019cac:	b2bb      	uxth	r3, r7
 8019cae:	1211      	asrs	r1, r2, #8
 8019cb0:	1218      	asrs	r0, r3, #8
 8019cb2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8019cb6:	fb11 f104 	smulbb	r1, r1, r4
 8019cba:	10d7      	asrs	r7, r2, #3
 8019cbc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019cc0:	00d2      	lsls	r2, r2, #3
 8019cc2:	fb00 1009 	mla	r0, r0, r9, r1
 8019cc6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019cca:	10d9      	asrs	r1, r3, #3
 8019ccc:	b2d2      	uxtb	r2, r2
 8019cce:	00db      	lsls	r3, r3, #3
 8019cd0:	fb17 f704 	smulbb	r7, r7, r4
 8019cd4:	fb12 f204 	smulbb	r2, r2, r4
 8019cd8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8019cdc:	b2db      	uxtb	r3, r3
 8019cde:	b280      	uxth	r0, r0
 8019ce0:	fb01 7109 	mla	r1, r1, r9, r7
 8019ce4:	fb03 2309 	mla	r3, r3, r9, r2
 8019ce8:	b29b      	uxth	r3, r3
 8019cea:	b289      	uxth	r1, r1
 8019cec:	1c42      	adds	r2, r0, #1
 8019cee:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8019cf2:	1c4f      	adds	r7, r1, #1
 8019cf4:	1c5a      	adds	r2, r3, #1
 8019cf6:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8019cfa:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8019cfe:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8019d02:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019d06:	0949      	lsrs	r1, r1, #5
 8019d08:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019d0a:	4310      	orrs	r0, r2
 8019d0c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019d10:	4308      	orrs	r0, r1
 8019d12:	f823 0b02 	strh.w	r0, [r3], #2
 8019d16:	930e      	str	r3, [sp, #56]	; 0x38
 8019d18:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8019d1a:	449a      	add	sl, r3
 8019d1c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019d1e:	f10e 3eff 	add.w	lr, lr, #4294967295
 8019d22:	441d      	add	r5, r3
 8019d24:	e6ed      	b.n	8019b02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 8019d26:	2800      	cmp	r0, #0
 8019d28:	f43f af7f 	beq.w	8019c2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019d2c:	5cd3      	ldrb	r3, [r2, r3]
 8019d2e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019d32:	9310      	str	r3, [sp, #64]	; 0x40
 8019d34:	e779      	b.n	8019c2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019d36:	b019      	add	sp, #100	; 0x64
 8019d38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019d3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8019d3c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019d40:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 8019d44:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8019d48:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 8019d4c:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8019d50:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8019d54:	8808      	ldrh	r0, [r1, #0]
 8019d56:	fb08 470e 	mla	r7, r8, lr, r4
 8019d5a:	f1b8 0f00 	cmp.w	r8, #0
 8019d5e:	eb02 0907 	add.w	r9, r2, r7
 8019d62:	db67      	blt.n	8019e34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8019d64:	45c2      	cmp	sl, r8
 8019d66:	dd65      	ble.n	8019e34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8019d68:	2c00      	cmp	r4, #0
 8019d6a:	db61      	blt.n	8019e30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8019d6c:	45a6      	cmp	lr, r4
 8019d6e:	dd5f      	ble.n	8019e30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8019d70:	5dd2      	ldrb	r2, [r2, r7]
 8019d72:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8019d76:	1c62      	adds	r2, r4, #1
 8019d78:	d45f      	bmi.n	8019e3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8019d7a:	4596      	cmp	lr, r2
 8019d7c:	dd5d      	ble.n	8019e3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8019d7e:	2d00      	cmp	r5, #0
 8019d80:	d05b      	beq.n	8019e3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8019d82:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019d86:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8019d8a:	f118 0801 	adds.w	r8, r8, #1
 8019d8e:	d458      	bmi.n	8019e42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8019d90:	45c2      	cmp	sl, r8
 8019d92:	dd56      	ble.n	8019e42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8019d94:	2e00      	cmp	r6, #0
 8019d96:	d054      	beq.n	8019e42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8019d98:	2c00      	cmp	r4, #0
 8019d9a:	db50      	blt.n	8019e3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8019d9c:	45a6      	cmp	lr, r4
 8019d9e:	dd4e      	ble.n	8019e3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8019da0:	f819 200e 	ldrb.w	r2, [r9, lr]
 8019da4:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8019da8:	3401      	adds	r4, #1
 8019daa:	d407      	bmi.n	8019dbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8019dac:	45a6      	cmp	lr, r4
 8019dae:	dd05      	ble.n	8019dbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8019db0:	b125      	cbz	r5, 8019dbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8019db2:	44ce      	add	lr, r9
 8019db4:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8019db8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8019dbc:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8019dc0:	fb15 f406 	smulbb	r4, r5, r6
 8019dc4:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019dc8:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8019dcc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019dd0:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8019dd4:	ea43 0c0c 	orr.w	ip, r3, ip
 8019dd8:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8019ddc:	f1c6 0310 	rsb	r3, r6, #16
 8019de0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8019de4:	1b5b      	subs	r3, r3, r5
 8019de6:	ea4e 0707 	orr.w	r7, lr, r7
 8019dea:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8019dee:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8019df2:	437d      	muls	r5, r7
 8019df4:	fb03 5c0c 	mla	ip, r3, ip, r5
 8019df8:	0403      	lsls	r3, r0, #16
 8019dfa:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019dfe:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019e02:	4318      	orrs	r0, r3
 8019e04:	0413      	lsls	r3, r2, #16
 8019e06:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019e0a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019e0e:	4313      	orrs	r3, r2
 8019e10:	fb04 c000 	mla	r0, r4, r0, ip
 8019e14:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8019e18:	fb06 0003 	mla	r0, r6, r3, r0
 8019e1c:	0d43      	lsrs	r3, r0, #21
 8019e1e:	0940      	lsrs	r0, r0, #5
 8019e20:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019e24:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019e28:	4318      	orrs	r0, r3
 8019e2a:	8008      	strh	r0, [r1, #0]
 8019e2c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019e30:	4684      	mov	ip, r0
 8019e32:	e7a0      	b.n	8019d76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8019e34:	4607      	mov	r7, r0
 8019e36:	4684      	mov	ip, r0
 8019e38:	e7a7      	b.n	8019d8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8019e3a:	4607      	mov	r7, r0
 8019e3c:	e7a5      	b.n	8019d8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8019e3e:	4602      	mov	r2, r0
 8019e40:	e7b2      	b.n	8019da8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 8019e42:	4602      	mov	r2, r0
 8019e44:	e7ba      	b.n	8019dbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

08019e46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019e46:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019e4a:	b093      	sub	sp, #76	; 0x4c
 8019e4c:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8019e50:	920f      	str	r2, [sp, #60]	; 0x3c
 8019e52:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8019e54:	9108      	str	r1, [sp, #32]
 8019e56:	9306      	str	r3, [sp, #24]
 8019e58:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8019e5c:	9010      	str	r0, [sp, #64]	; 0x40
 8019e5e:	6850      	ldr	r0, [r2, #4]
 8019e60:	6812      	ldr	r2, [r2, #0]
 8019e62:	fb00 1303 	mla	r3, r0, r3, r1
 8019e66:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8019e6a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019e6c:	681b      	ldr	r3, [r3, #0]
 8019e6e:	9307      	str	r3, [sp, #28]
 8019e70:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019e72:	685f      	ldr	r7, [r3, #4]
 8019e74:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019e78:	3704      	adds	r7, #4
 8019e7a:	9b08      	ldr	r3, [sp, #32]
 8019e7c:	2b00      	cmp	r3, #0
 8019e7e:	dc03      	bgt.n	8019e88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8019e80:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019e82:	2b00      	cmp	r3, #0
 8019e84:	f340 81b2 	ble.w	801a1ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8019e88:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019e8a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019e8e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019e92:	1e48      	subs	r0, r1, #1
 8019e94:	f102 3cff 	add.w	ip, r2, #4294967295
 8019e98:	9b06      	ldr	r3, [sp, #24]
 8019e9a:	2b00      	cmp	r3, #0
 8019e9c:	f340 80a9 	ble.w	8019ff2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8019ea0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8019ea4:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019ea8:	d406      	bmi.n	8019eb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019eaa:	4586      	cmp	lr, r0
 8019eac:	da04      	bge.n	8019eb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019eae:	2b00      	cmp	r3, #0
 8019eb0:	db02      	blt.n	8019eb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019eb2:	4563      	cmp	r3, ip
 8019eb4:	f2c0 809e 	blt.w	8019ff4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8019eb8:	f11e 0e01 	adds.w	lr, lr, #1
 8019ebc:	f100 808f 	bmi.w	8019fde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019ec0:	4571      	cmp	r1, lr
 8019ec2:	f2c0 808c 	blt.w	8019fde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019ec6:	3301      	adds	r3, #1
 8019ec8:	f100 8089 	bmi.w	8019fde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019ecc:	429a      	cmp	r2, r3
 8019ece:	f2c0 8086 	blt.w	8019fde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019ed2:	f8dd b018 	ldr.w	fp, [sp, #24]
 8019ed6:	46c8      	mov	r8, r9
 8019ed8:	f1bb 0f00 	cmp.w	fp, #0
 8019edc:	f340 80a6 	ble.w	801a02c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8019ee0:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8019ee2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019ee4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8019ee8:	689b      	ldr	r3, [r3, #8]
 8019eea:	1422      	asrs	r2, r4, #16
 8019eec:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8019ef0:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8019ef4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8019ef8:	f100 80e3 	bmi.w	801a0c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019efc:	f103 3aff 	add.w	sl, r3, #4294967295
 8019f00:	4552      	cmp	r2, sl
 8019f02:	f280 80de 	bge.w	801a0c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019f06:	f1bc 0f00 	cmp.w	ip, #0
 8019f0a:	f2c0 80da 	blt.w	801a0c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019f0e:	f10e 3aff 	add.w	sl, lr, #4294967295
 8019f12:	45d4      	cmp	ip, sl
 8019f14:	f280 80d5 	bge.w	801a0c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019f18:	b21b      	sxth	r3, r3
 8019f1a:	fb0c 2203 	mla	r2, ip, r3, r2
 8019f1e:	9d07      	ldr	r5, [sp, #28]
 8019f20:	eb05 0a02 	add.w	sl, r5, r2
 8019f24:	5caa      	ldrb	r2, [r5, r2]
 8019f26:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8019f2a:	2800      	cmp	r0, #0
 8019f2c:	f000 80c0 	beq.w	801a0b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8019f30:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8019f34:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8019f38:	920b      	str	r2, [sp, #44]	; 0x2c
 8019f3a:	b151      	cbz	r1, 8019f52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019f3c:	eb0a 0203 	add.w	r2, sl, r3
 8019f40:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8019f44:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019f48:	9309      	str	r3, [sp, #36]	; 0x24
 8019f4a:	7853      	ldrb	r3, [r2, #1]
 8019f4c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019f50:	930c      	str	r3, [sp, #48]	; 0x30
 8019f52:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019f54:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019f56:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019f5a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019f5e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019f62:	ea4c 0c03 	orr.w	ip, ip, r3
 8019f66:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019f68:	041b      	lsls	r3, r3, #16
 8019f6a:	fb10 f201 	smulbb	r2, r0, r1
 8019f6e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019f72:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8019f76:	10d2      	asrs	r2, r2, #3
 8019f78:	432b      	orrs	r3, r5
 8019f7a:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8019f7e:	4353      	muls	r3, r2
 8019f80:	fb0a 330c 	mla	r3, sl, ip, r3
 8019f84:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8019f88:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019f8c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8019f90:	ea4c 0e0e 	orr.w	lr, ip, lr
 8019f94:	f1c1 0c10 	rsb	ip, r1, #16
 8019f98:	ebac 0c00 	sub.w	ip, ip, r0
 8019f9c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019fa0:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8019fa4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019fa6:	0418      	lsls	r0, r3, #16
 8019fa8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8019fac:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019fb0:	4318      	orrs	r0, r3
 8019fb2:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8019fb6:	fb02 c200 	mla	r2, r2, r0, ip
 8019fba:	0d53      	lsrs	r3, r2, #21
 8019fbc:	0952      	lsrs	r2, r2, #5
 8019fbe:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019fc2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019fc6:	431a      	orrs	r2, r3
 8019fc8:	f8a8 2000 	strh.w	r2, [r8]
 8019fcc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019fce:	441c      	add	r4, r3
 8019fd0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019fd2:	f108 0802 	add.w	r8, r8, #2
 8019fd6:	441e      	add	r6, r3
 8019fd8:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019fdc:	e77c      	b.n	8019ed8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019fde:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019fe0:	441c      	add	r4, r3
 8019fe2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019fe4:	441e      	add	r6, r3
 8019fe6:	9b06      	ldr	r3, [sp, #24]
 8019fe8:	3b01      	subs	r3, #1
 8019fea:	9306      	str	r3, [sp, #24]
 8019fec:	f109 0902 	add.w	r9, r9, #2
 8019ff0:	e752      	b.n	8019e98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019ff2:	d020      	beq.n	801a036 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019ff4:	9b06      	ldr	r3, [sp, #24]
 8019ff6:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8019ff8:	3b01      	subs	r3, #1
 8019ffa:	fb00 4003 	mla	r0, r0, r3, r4
 8019ffe:	1400      	asrs	r0, r0, #16
 801a000:	f53f af67 	bmi.w	8019ed2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a004:	3901      	subs	r1, #1
 801a006:	4288      	cmp	r0, r1
 801a008:	f6bf af63 	bge.w	8019ed2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a00c:	9920      	ldr	r1, [sp, #128]	; 0x80
 801a00e:	fb01 6303 	mla	r3, r1, r3, r6
 801a012:	141b      	asrs	r3, r3, #16
 801a014:	f53f af5d 	bmi.w	8019ed2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a018:	3a01      	subs	r2, #1
 801a01a:	4293      	cmp	r3, r2
 801a01c:	f6bf af59 	bge.w	8019ed2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a020:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801a024:	46ca      	mov	sl, r9
 801a026:	f1b8 0f00 	cmp.w	r8, #0
 801a02a:	dc67      	bgt.n	801a0fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801a02c:	9b06      	ldr	r3, [sp, #24]
 801a02e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801a032:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801a036:	9b08      	ldr	r3, [sp, #32]
 801a038:	2b00      	cmp	r3, #0
 801a03a:	f340 80d7 	ble.w	801a1ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801a03e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a042:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a046:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a04a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a04c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a050:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a054:	eeb0 6a62 	vmov.f32	s12, s5
 801a058:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a05c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a060:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a064:	ee16 4a10 	vmov	r4, s12
 801a068:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a06c:	eeb0 6a43 	vmov.f32	s12, s6
 801a070:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a074:	ee12 2a90 	vmov	r2, s5
 801a078:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a07c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a080:	ee13 2a10 	vmov	r2, s6
 801a084:	931f      	str	r3, [sp, #124]	; 0x7c
 801a086:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a088:	fb92 f3f3 	sdiv	r3, r2, r3
 801a08c:	9320      	str	r3, [sp, #128]	; 0x80
 801a08e:	9b08      	ldr	r3, [sp, #32]
 801a090:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a092:	3b01      	subs	r3, #1
 801a094:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a098:	9308      	str	r3, [sp, #32]
 801a09a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a09c:	bf08      	it	eq
 801a09e:	4613      	moveq	r3, r2
 801a0a0:	ee16 6a10 	vmov	r6, s12
 801a0a4:	9306      	str	r3, [sp, #24]
 801a0a6:	eeb0 3a67 	vmov.f32	s6, s15
 801a0aa:	eef0 2a47 	vmov.f32	s5, s14
 801a0ae:	e6e4      	b.n	8019e7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801a0b0:	2900      	cmp	r1, #0
 801a0b2:	f43f af4e 	beq.w	8019f52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801a0b6:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801a0ba:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a0be:	9309      	str	r3, [sp, #36]	; 0x24
 801a0c0:	e747      	b.n	8019f52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801a0c2:	f112 0a01 	adds.w	sl, r2, #1
 801a0c6:	d481      	bmi.n	8019fcc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a0c8:	4553      	cmp	r3, sl
 801a0ca:	f6ff af7f 	blt.w	8019fcc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a0ce:	f11c 0a01 	adds.w	sl, ip, #1
 801a0d2:	f53f af7b 	bmi.w	8019fcc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a0d6:	45d6      	cmp	lr, sl
 801a0d8:	f6ff af78 	blt.w	8019fcc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a0dc:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801a0e0:	b21b      	sxth	r3, r3
 801a0e2:	fa0f f28e 	sxth.w	r2, lr
 801a0e6:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801a0ea:	9201      	str	r2, [sp, #4]
 801a0ec:	9300      	str	r3, [sp, #0]
 801a0ee:	9a07      	ldr	r2, [sp, #28]
 801a0f0:	9810      	ldr	r0, [sp, #64]	; 0x40
 801a0f2:	463b      	mov	r3, r7
 801a0f4:	4641      	mov	r1, r8
 801a0f6:	f7ff fe21 	bl	8019d3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801a0fa:	e767      	b.n	8019fcc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a0fc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a0fe:	9d07      	ldr	r5, [sp, #28]
 801a100:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801a104:	1422      	asrs	r2, r4, #16
 801a106:	1431      	asrs	r1, r6, #16
 801a108:	fb03 2101 	mla	r1, r3, r1, r2
 801a10c:	9a07      	ldr	r2, [sp, #28]
 801a10e:	440a      	add	r2, r1
 801a110:	5c69      	ldrb	r1, [r5, r1]
 801a112:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801a116:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801a11a:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801a11e:	f1be 0f00 	cmp.w	lr, #0
 801a122:	d05c      	beq.n	801a1de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801a124:	f892 c001 	ldrb.w	ip, [r2, #1]
 801a128:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801a12c:	950d      	str	r5, [sp, #52]	; 0x34
 801a12e:	b150      	cbz	r0, 801a146 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801a130:	eb02 0c03 	add.w	ip, r2, r3
 801a134:	5cd3      	ldrb	r3, [r2, r3]
 801a136:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a13a:	930a      	str	r3, [sp, #40]	; 0x28
 801a13c:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801a140:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a144:	930e      	str	r3, [sp, #56]	; 0x38
 801a146:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a148:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801a14a:	fb1e f200 	smulbb	r2, lr, r0
 801a14e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801a152:	10d2      	asrs	r2, r2, #3
 801a154:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801a158:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801a15c:	ea4c 0c03 	orr.w	ip, ip, r3
 801a160:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801a164:	9311      	str	r3, [sp, #68]	; 0x44
 801a166:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a168:	041b      	lsls	r3, r3, #16
 801a16a:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 801a16e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801a172:	ea43 030b 	orr.w	r3, r3, fp
 801a176:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a178:	4353      	muls	r3, r2
 801a17a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801a17e:	fb05 3c0c 	mla	ip, r5, ip, r3
 801a182:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801a186:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801a18a:	ea43 0b01 	orr.w	fp, r3, r1
 801a18e:	f1c0 0110 	rsb	r1, r0, #16
 801a192:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a194:	eba1 0e0e 	sub.w	lr, r1, lr
 801a198:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801a19c:	fb0e cc0b 	mla	ip, lr, fp, ip
 801a1a0:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801a1a4:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801a1a8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801a1ac:	ea4b 0e0e 	orr.w	lr, fp, lr
 801a1b0:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801a1b4:	fb02 cc0e 	mla	ip, r2, lr, ip
 801a1b8:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801a1bc:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801a1c0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a1c4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801a1c8:	ea43 0c0c 	orr.w	ip, r3, ip
 801a1cc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a1ce:	f82a cb02 	strh.w	ip, [sl], #2
 801a1d2:	441c      	add	r4, r3
 801a1d4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a1d6:	f108 38ff 	add.w	r8, r8, #4294967295
 801a1da:	441e      	add	r6, r3
 801a1dc:	e723      	b.n	801a026 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801a1de:	2800      	cmp	r0, #0
 801a1e0:	d0b1      	beq.n	801a146 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801a1e2:	5cd3      	ldrb	r3, [r2, r3]
 801a1e4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a1e8:	930a      	str	r3, [sp, #40]	; 0x28
 801a1ea:	e7ac      	b.n	801a146 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801a1ec:	b013      	add	sp, #76	; 0x4c
 801a1ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a1f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801a1f2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a1f6:	880d      	ldrh	r5, [r1, #0]
 801a1f8:	b087      	sub	sp, #28
 801a1fa:	10ef      	asrs	r7, r5, #3
 801a1fc:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801a200:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a204:	00ed      	lsls	r5, r5, #3
 801a206:	9701      	str	r7, [sp, #4]
 801a208:	b2ed      	uxtb	r5, r5
 801a20a:	9502      	str	r5, [sp, #8]
 801a20c:	9d01      	ldr	r5, [sp, #4]
 801a20e:	9103      	str	r1, [sp, #12]
 801a210:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 801a214:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 801a218:	9902      	ldr	r1, [sp, #8]
 801a21a:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801a21e:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 801a222:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 801a226:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 801a22a:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 801a22e:	022d      	lsls	r5, r5, #8
 801a230:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801a234:	fb06 0709 	mla	r7, r6, r9, r0
 801a238:	430d      	orrs	r5, r1
 801a23a:	2e00      	cmp	r6, #0
 801a23c:	eb02 0c07 	add.w	ip, r2, r7
 801a240:	9505      	str	r5, [sp, #20]
 801a242:	f2c0 80b6 	blt.w	801a3b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801a246:	45b3      	cmp	fp, r6
 801a248:	f340 80b3 	ble.w	801a3b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801a24c:	2800      	cmp	r0, #0
 801a24e:	f2c0 80ae 	blt.w	801a3ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801a252:	4581      	cmp	r9, r0
 801a254:	f340 80ab 	ble.w	801a3ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801a258:	5dd7      	ldrb	r7, [r2, r7]
 801a25a:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a25e:	441f      	add	r7, r3
 801a260:	1c42      	adds	r2, r0, #1
 801a262:	f100 80a9 	bmi.w	801a3b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801a266:	4591      	cmp	r9, r2
 801a268:	f340 80a6 	ble.w	801a3b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801a26c:	2c00      	cmp	r4, #0
 801a26e:	f000 80a3 	beq.w	801a3b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801a272:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801a276:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801a27a:	441d      	add	r5, r3
 801a27c:	3601      	adds	r6, #1
 801a27e:	f100 809f 	bmi.w	801a3c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801a282:	45b3      	cmp	fp, r6
 801a284:	f340 809c 	ble.w	801a3c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801a288:	f1be 0f00 	cmp.w	lr, #0
 801a28c:	f000 8098 	beq.w	801a3c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801a290:	2800      	cmp	r0, #0
 801a292:	f2c0 8093 	blt.w	801a3bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801a296:	4581      	cmp	r9, r0
 801a298:	f340 8090 	ble.w	801a3bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801a29c:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801a2a0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a2a4:	441e      	add	r6, r3
 801a2a6:	3001      	adds	r0, #1
 801a2a8:	f100 808d 	bmi.w	801a3c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801a2ac:	4581      	cmp	r9, r0
 801a2ae:	f340 808a 	ble.w	801a3c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801a2b2:	2c00      	cmp	r4, #0
 801a2b4:	f000 8087 	beq.w	801a3c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801a2b8:	44e1      	add	r9, ip
 801a2ba:	f899 2001 	ldrb.w	r2, [r9, #1]
 801a2be:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a2c2:	4413      	add	r3, r2
 801a2c4:	b2a4      	uxth	r4, r4
 801a2c6:	fa1f fe8e 	uxth.w	lr, lr
 801a2ca:	fb04 fb0e 	mul.w	fp, r4, lr
 801a2ce:	0124      	lsls	r4, r4, #4
 801a2d0:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801a2d4:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 801a2d8:	eba4 040b 	sub.w	r4, r4, fp
 801a2dc:	fa1f f08e 	uxth.w	r0, lr
 801a2e0:	b2a2      	uxth	r2, r4
 801a2e2:	78ac      	ldrb	r4, [r5, #2]
 801a2e4:	f897 c002 	ldrb.w	ip, [r7, #2]
 801a2e8:	9901      	ldr	r1, [sp, #4]
 801a2ea:	eba9 0900 	sub.w	r9, r9, r0
 801a2ee:	fa1f f989 	uxth.w	r9, r9
 801a2f2:	4354      	muls	r4, r2
 801a2f4:	fb09 440c 	mla	r4, r9, ip, r4
 801a2f8:	f896 c002 	ldrb.w	ip, [r6, #2]
 801a2fc:	fb00 440c 	mla	r4, r0, ip, r4
 801a300:	f893 c002 	ldrb.w	ip, [r3, #2]
 801a304:	fa1f fe88 	uxth.w	lr, r8
 801a308:	ea6f 0808 	mvn.w	r8, r8
 801a30c:	fa5f f888 	uxtb.w	r8, r8
 801a310:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801a314:	fb1a fa08 	smulbb	sl, sl, r8
 801a318:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801a31c:	fb0c ac0e 	mla	ip, ip, lr, sl
 801a320:	f895 a001 	ldrb.w	sl, [r5, #1]
 801a324:	787c      	ldrb	r4, [r7, #1]
 801a326:	782d      	ldrb	r5, [r5, #0]
 801a328:	783f      	ldrb	r7, [r7, #0]
 801a32a:	fb02 fa0a 	mul.w	sl, r2, sl
 801a32e:	fb09 aa04 	mla	sl, r9, r4, sl
 801a332:	7874      	ldrb	r4, [r6, #1]
 801a334:	436a      	muls	r2, r5
 801a336:	7835      	ldrb	r5, [r6, #0]
 801a338:	fb00 aa04 	mla	sl, r0, r4, sl
 801a33c:	fb09 2207 	mla	r2, r9, r7, r2
 801a340:	785c      	ldrb	r4, [r3, #1]
 801a342:	781b      	ldrb	r3, [r3, #0]
 801a344:	fb00 2005 	mla	r0, r0, r5, r2
 801a348:	fb0b a404 	mla	r4, fp, r4, sl
 801a34c:	fb0b 0b03 	mla	fp, fp, r3, r0
 801a350:	9b02      	ldr	r3, [sp, #8]
 801a352:	fb11 fa08 	smulbb	sl, r1, r8
 801a356:	fa1f fc8c 	uxth.w	ip, ip
 801a35a:	fb13 f808 	smulbb	r8, r3, r8
 801a35e:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801a362:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801a366:	fb04 a40e 	mla	r4, r4, lr, sl
 801a36a:	f10c 0301 	add.w	r3, ip, #1
 801a36e:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801a372:	fa1f fe8e 	uxth.w	lr, lr
 801a376:	b2a4      	uxth	r4, r4
 801a378:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801a37c:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 801a380:	f104 0a01 	add.w	sl, r4, #1
 801a384:	f10e 0c01 	add.w	ip, lr, #1
 801a388:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801a38c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801a390:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801a394:	0964      	lsrs	r4, r4, #5
 801a396:	ea4c 0c03 	orr.w	ip, ip, r3
 801a39a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801a39e:	9b03      	ldr	r3, [sp, #12]
 801a3a0:	ea4c 0c04 	orr.w	ip, ip, r4
 801a3a4:	f8a3 c000 	strh.w	ip, [r3]
 801a3a8:	b007      	add	sp, #28
 801a3aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a3ae:	af05      	add	r7, sp, #20
 801a3b0:	e756      	b.n	801a260 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801a3b2:	ad05      	add	r5, sp, #20
 801a3b4:	462f      	mov	r7, r5
 801a3b6:	e761      	b.n	801a27c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801a3b8:	ad05      	add	r5, sp, #20
 801a3ba:	e75f      	b.n	801a27c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801a3bc:	ae05      	add	r6, sp, #20
 801a3be:	e772      	b.n	801a2a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801a3c0:	ab05      	add	r3, sp, #20
 801a3c2:	461e      	mov	r6, r3
 801a3c4:	e77e      	b.n	801a2c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801a3c6:	ab05      	add	r3, sp, #20
 801a3c8:	e77c      	b.n	801a2c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801a3ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a3ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a3ce:	b095      	sub	sp, #84	; 0x54
 801a3d0:	9212      	str	r2, [sp, #72]	; 0x48
 801a3d2:	9309      	str	r3, [sp, #36]	; 0x24
 801a3d4:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801a3d6:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 801a3da:	930f      	str	r3, [sp, #60]	; 0x3c
 801a3dc:	910e      	str	r1, [sp, #56]	; 0x38
 801a3de:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 801a3e2:	9013      	str	r0, [sp, #76]	; 0x4c
 801a3e4:	6850      	ldr	r0, [r2, #4]
 801a3e6:	6812      	ldr	r2, [r2, #0]
 801a3e8:	fb00 1303 	mla	r3, r0, r3, r1
 801a3ec:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a3f0:	930a      	str	r3, [sp, #40]	; 0x28
 801a3f2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a3f4:	681b      	ldr	r3, [r3, #0]
 801a3f6:	930d      	str	r3, [sp, #52]	; 0x34
 801a3f8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a3fa:	685c      	ldr	r4, [r3, #4]
 801a3fc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a3fe:	43db      	mvns	r3, r3
 801a400:	b2db      	uxtb	r3, r3
 801a402:	3404      	adds	r4, #4
 801a404:	930b      	str	r3, [sp, #44]	; 0x2c
 801a406:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a408:	2b00      	cmp	r3, #0
 801a40a:	dc03      	bgt.n	801a414 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a40c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801a40e:	2b00      	cmp	r3, #0
 801a410:	f340 8255 	ble.w	801a8be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801a414:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a416:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a41a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a41e:	1e48      	subs	r0, r1, #1
 801a420:	1e55      	subs	r5, r2, #1
 801a422:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a424:	2b00      	cmp	r3, #0
 801a426:	f340 80f9 	ble.w	801a61c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801a42a:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801a42c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a42e:	1436      	asrs	r6, r6, #16
 801a430:	ea4f 4323 	mov.w	r3, r3, asr #16
 801a434:	d406      	bmi.n	801a444 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a436:	4286      	cmp	r6, r0
 801a438:	da04      	bge.n	801a444 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a43a:	2b00      	cmp	r3, #0
 801a43c:	db02      	blt.n	801a444 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a43e:	42ab      	cmp	r3, r5
 801a440:	f2c0 80ed 	blt.w	801a61e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801a444:	3601      	adds	r6, #1
 801a446:	f100 80da 	bmi.w	801a5fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a44a:	42b1      	cmp	r1, r6
 801a44c:	f2c0 80d7 	blt.w	801a5fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a450:	3301      	adds	r3, #1
 801a452:	f100 80d4 	bmi.w	801a5fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a456:	429a      	cmp	r2, r3
 801a458:	f2c0 80d1 	blt.w	801a5fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a45c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a45e:	9311      	str	r3, [sp, #68]	; 0x44
 801a460:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a462:	930c      	str	r3, [sp, #48]	; 0x30
 801a464:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a466:	2b00      	cmp	r3, #0
 801a468:	f340 80fa 	ble.w	801a660 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801a46c:	9826      	ldr	r0, [sp, #152]	; 0x98
 801a46e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a470:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a472:	68c6      	ldr	r6, [r0, #12]
 801a474:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801a476:	141d      	asrs	r5, r3, #16
 801a478:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801a47c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a47e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801a480:	1400      	asrs	r0, r0, #16
 801a482:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801a486:	6892      	ldr	r2, [r2, #8]
 801a488:	f100 813e 	bmi.w	801a708 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a48c:	1e57      	subs	r7, r2, #1
 801a48e:	42b8      	cmp	r0, r7
 801a490:	f280 813a 	bge.w	801a708 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a494:	2d00      	cmp	r5, #0
 801a496:	f2c0 8137 	blt.w	801a708 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a49a:	1e77      	subs	r7, r6, #1
 801a49c:	42bd      	cmp	r5, r7
 801a49e:	f280 8133 	bge.w	801a708 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a4a2:	b212      	sxth	r2, r2
 801a4a4:	fb05 0002 	mla	r0, r5, r2, r0
 801a4a8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a4aa:	f815 a000 	ldrb.w	sl, [r5, r0]
 801a4ae:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801a4b2:	182e      	adds	r6, r5, r0
 801a4b4:	eb04 050a 	add.w	r5, r4, sl
 801a4b8:	2b00      	cmp	r3, #0
 801a4ba:	f000 8117 	beq.w	801a6ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801a4be:	f896 c001 	ldrb.w	ip, [r6, #1]
 801a4c2:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801a4c6:	44a4      	add	ip, r4
 801a4c8:	2900      	cmp	r1, #0
 801a4ca:	f000 8117 	beq.w	801a6fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801a4ce:	18b0      	adds	r0, r6, r2
 801a4d0:	5cb2      	ldrb	r2, [r6, r2]
 801a4d2:	7840      	ldrb	r0, [r0, #1]
 801a4d4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a4d8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a4dc:	4422      	add	r2, r4
 801a4de:	4420      	add	r0, r4
 801a4e0:	b29b      	uxth	r3, r3
 801a4e2:	b289      	uxth	r1, r1
 801a4e4:	fb03 f901 	mul.w	r9, r3, r1
 801a4e8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a4ec:	011b      	lsls	r3, r3, #4
 801a4ee:	b289      	uxth	r1, r1
 801a4f0:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801a4f4:	f895 b002 	ldrb.w	fp, [r5, #2]
 801a4f8:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801a4fa:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801a4fe:	f8b6 e000 	ldrh.w	lr, [r6]
 801a502:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801a506:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801a50a:	eba3 0309 	sub.w	r3, r3, r9
 801a50e:	b29b      	uxth	r3, r3
 801a510:	eba8 0801 	sub.w	r8, r8, r1
 801a514:	fa1f f888 	uxth.w	r8, r8
 801a518:	435f      	muls	r7, r3
 801a51a:	fb08 770b 	mla	r7, r8, fp, r7
 801a51e:	f892 b002 	ldrb.w	fp, [r2, #2]
 801a522:	9310      	str	r3, [sp, #64]	; 0x40
 801a524:	fb01 770b 	mla	r7, r1, fp, r7
 801a528:	f890 b002 	ldrb.w	fp, [r0, #2]
 801a52c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a52e:	fb09 770b 	mla	r7, r9, fp, r7
 801a532:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801a536:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801a53a:	fb1b fb03 	smulbb	fp, fp, r3
 801a53e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801a542:	fb07 b706 	mla	r7, r7, r6, fp
 801a546:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a548:	f895 b001 	ldrb.w	fp, [r5, #1]
 801a54c:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801a550:	f89c c000 	ldrb.w	ip, [ip]
 801a554:	435d      	muls	r5, r3
 801a556:	fb08 550b 	mla	r5, r8, fp, r5
 801a55a:	f892 b001 	ldrb.w	fp, [r2, #1]
 801a55e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a560:	fb01 550b 	mla	r5, r1, fp, r5
 801a564:	f890 b001 	ldrb.w	fp, [r0, #1]
 801a568:	fb09 550b 	mla	r5, r9, fp, r5
 801a56c:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801a570:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801a574:	fb1b fb03 	smulbb	fp, fp, r3
 801a578:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a57a:	fb03 f30c 	mul.w	r3, r3, ip
 801a57e:	f892 c000 	ldrb.w	ip, [r2]
 801a582:	fb08 330a 	mla	r3, r8, sl, r3
 801a586:	fb01 330c 	mla	r3, r1, ip, r3
 801a58a:	f890 c000 	ldrb.w	ip, [r0]
 801a58e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a592:	fb09 3c0c 	mla	ip, r9, ip, r3
 801a596:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a598:	fa5f fe8e 	uxtb.w	lr, lr
 801a59c:	b2bf      	uxth	r7, r7
 801a59e:	fb1e fe03 	smulbb	lr, lr, r3
 801a5a2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801a5a6:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801a5aa:	fb05 b506 	mla	r5, r5, r6, fp
 801a5ae:	1c7b      	adds	r3, r7, #1
 801a5b0:	fb0c e606 	mla	r6, ip, r6, lr
 801a5b4:	b2ad      	uxth	r5, r5
 801a5b6:	b2b6      	uxth	r6, r6
 801a5b8:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801a5bc:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801a5c0:	f105 0b01 	add.w	fp, r5, #1
 801a5c4:	1c77      	adds	r7, r6, #1
 801a5c6:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801a5ca:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801a5ce:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a5d2:	096d      	lsrs	r5, r5, #5
 801a5d4:	431f      	orrs	r7, r3
 801a5d6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a5da:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a5dc:	433d      	orrs	r5, r7
 801a5de:	801d      	strh	r5, [r3, #0]
 801a5e0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a5e2:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801a5e4:	3302      	adds	r3, #2
 801a5e6:	930c      	str	r3, [sp, #48]	; 0x30
 801a5e8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a5ea:	4413      	add	r3, r2
 801a5ec:	931f      	str	r3, [sp, #124]	; 0x7c
 801a5ee:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801a5f0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a5f2:	4413      	add	r3, r2
 801a5f4:	9320      	str	r3, [sp, #128]	; 0x80
 801a5f6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a5f8:	3b01      	subs	r3, #1
 801a5fa:	9311      	str	r3, [sp, #68]	; 0x44
 801a5fc:	e732      	b.n	801a464 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a5fe:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a600:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801a602:	4433      	add	r3, r6
 801a604:	931f      	str	r3, [sp, #124]	; 0x7c
 801a606:	9e22      	ldr	r6, [sp, #136]	; 0x88
 801a608:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a60a:	4433      	add	r3, r6
 801a60c:	9320      	str	r3, [sp, #128]	; 0x80
 801a60e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a610:	3b01      	subs	r3, #1
 801a612:	9309      	str	r3, [sp, #36]	; 0x24
 801a614:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a616:	3302      	adds	r3, #2
 801a618:	930a      	str	r3, [sp, #40]	; 0x28
 801a61a:	e702      	b.n	801a422 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801a61c:	d027      	beq.n	801a66e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801a61e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a620:	9821      	ldr	r0, [sp, #132]	; 0x84
 801a622:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801a624:	3b01      	subs	r3, #1
 801a626:	fb00 5003 	mla	r0, r0, r3, r5
 801a62a:	1400      	asrs	r0, r0, #16
 801a62c:	f53f af16 	bmi.w	801a45c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a630:	3901      	subs	r1, #1
 801a632:	4288      	cmp	r0, r1
 801a634:	f6bf af12 	bge.w	801a45c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a638:	9922      	ldr	r1, [sp, #136]	; 0x88
 801a63a:	9820      	ldr	r0, [sp, #128]	; 0x80
 801a63c:	fb01 0303 	mla	r3, r1, r3, r0
 801a640:	141b      	asrs	r3, r3, #16
 801a642:	f53f af0b 	bmi.w	801a45c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a646:	3a01      	subs	r2, #1
 801a648:	4293      	cmp	r3, r2
 801a64a:	f6bf af07 	bge.w	801a45c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a64e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a650:	9311      	str	r3, [sp, #68]	; 0x44
 801a652:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801a656:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a658:	930c      	str	r3, [sp, #48]	; 0x30
 801a65a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a65c:	2b00      	cmp	r3, #0
 801a65e:	dc70      	bgt.n	801a742 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801a660:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a662:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801a664:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a668:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a66c:	930a      	str	r3, [sp, #40]	; 0x28
 801a66e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a670:	2b00      	cmp	r3, #0
 801a672:	f340 8124 	ble.w	801a8be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801a676:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a67a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a67e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a682:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a684:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a688:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a68c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a690:	eef0 6a62 	vmov.f32	s13, s5
 801a694:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a698:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a69c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a6a0:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801a6a4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a6a8:	eef0 6a43 	vmov.f32	s13, s6
 801a6ac:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a6b0:	ee12 2a90 	vmov	r2, s5
 801a6b4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a6b8:	fb92 f3f3 	sdiv	r3, r2, r3
 801a6bc:	ee13 2a10 	vmov	r2, s6
 801a6c0:	9321      	str	r3, [sp, #132]	; 0x84
 801a6c2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a6c4:	fb92 f3f3 	sdiv	r3, r2, r3
 801a6c8:	9322      	str	r3, [sp, #136]	; 0x88
 801a6ca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a6cc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a6ce:	3b01      	subs	r3, #1
 801a6d0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a6d4:	930e      	str	r3, [sp, #56]	; 0x38
 801a6d6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a6d8:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801a6dc:	bf08      	it	eq
 801a6de:	4613      	moveq	r3, r2
 801a6e0:	9309      	str	r3, [sp, #36]	; 0x24
 801a6e2:	eeb0 3a67 	vmov.f32	s6, s15
 801a6e6:	eef0 2a47 	vmov.f32	s5, s14
 801a6ea:	e68c      	b.n	801a406 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a6ec:	b149      	cbz	r1, 801a702 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801a6ee:	5cb2      	ldrb	r2, [r6, r2]
 801a6f0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a6f4:	4422      	add	r2, r4
 801a6f6:	4628      	mov	r0, r5
 801a6f8:	46ac      	mov	ip, r5
 801a6fa:	e6f1      	b.n	801a4e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a6fc:	4628      	mov	r0, r5
 801a6fe:	462a      	mov	r2, r5
 801a700:	e6ee      	b.n	801a4e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a702:	4628      	mov	r0, r5
 801a704:	462a      	mov	r2, r5
 801a706:	e7f7      	b.n	801a6f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801a708:	1c47      	adds	r7, r0, #1
 801a70a:	f53f af69 	bmi.w	801a5e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a70e:	42ba      	cmp	r2, r7
 801a710:	f6ff af66 	blt.w	801a5e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a714:	1c6f      	adds	r7, r5, #1
 801a716:	f53f af63 	bmi.w	801a5e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a71a:	42be      	cmp	r6, r7
 801a71c:	f6ff af60 	blt.w	801a5e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a720:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801a722:	9002      	str	r0, [sp, #8]
 801a724:	b236      	sxth	r6, r6
 801a726:	b212      	sxth	r2, r2
 801a728:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801a72c:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801a730:	9200      	str	r2, [sp, #0]
 801a732:	9601      	str	r6, [sp, #4]
 801a734:	4623      	mov	r3, r4
 801a736:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801a73a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a73c:	f7ff fd59 	bl	801a1f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801a740:	e74e      	b.n	801a5e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a742:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a744:	9820      	ldr	r0, [sp, #128]	; 0x80
 801a746:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801a748:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a74a:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801a74e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801a750:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801a754:	142d      	asrs	r5, r5, #16
 801a756:	1400      	asrs	r0, r0, #16
 801a758:	fb02 5000 	mla	r0, r2, r0, r5
 801a75c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a75e:	f815 9000 	ldrb.w	r9, [r5, r0]
 801a762:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801a766:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801a76a:	182e      	adds	r6, r5, r0
 801a76c:	eb04 0509 	add.w	r5, r4, r9
 801a770:	2b00      	cmp	r3, #0
 801a772:	f000 8096 	beq.w	801a8a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801a776:	7877      	ldrb	r7, [r6, #1]
 801a778:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a77c:	4427      	add	r7, r4
 801a77e:	2900      	cmp	r1, #0
 801a780:	f000 8097 	beq.w	801a8b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801a784:	18b0      	adds	r0, r6, r2
 801a786:	5cb2      	ldrb	r2, [r6, r2]
 801a788:	7840      	ldrb	r0, [r0, #1]
 801a78a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a78e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a792:	4422      	add	r2, r4
 801a794:	4420      	add	r0, r4
 801a796:	b29b      	uxth	r3, r3
 801a798:	b289      	uxth	r1, r1
 801a79a:	fb03 f801 	mul.w	r8, r3, r1
 801a79e:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801a7a0:	f895 b002 	ldrb.w	fp, [r5, #2]
 801a7a4:	f8b6 c000 	ldrh.w	ip, [r6]
 801a7a8:	78be      	ldrb	r6, [r7, #2]
 801a7aa:	f814 9009 	ldrb.w	r9, [r4, r9]
 801a7ae:	011b      	lsls	r3, r3, #4
 801a7b0:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801a7b4:	b289      	uxth	r1, r1
 801a7b6:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801a7ba:	eba3 0308 	sub.w	r3, r3, r8
 801a7be:	b29b      	uxth	r3, r3
 801a7c0:	ebae 0e01 	sub.w	lr, lr, r1
 801a7c4:	fa1f fe8e 	uxth.w	lr, lr
 801a7c8:	435e      	muls	r6, r3
 801a7ca:	fb0e 660b 	mla	r6, lr, fp, r6
 801a7ce:	f892 b002 	ldrb.w	fp, [r2, #2]
 801a7d2:	9310      	str	r3, [sp, #64]	; 0x40
 801a7d4:	fb01 660b 	mla	r6, r1, fp, r6
 801a7d8:	f890 b002 	ldrb.w	fp, [r0, #2]
 801a7dc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a7de:	fb08 660b 	mla	r6, r8, fp, r6
 801a7e2:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801a7e6:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801a7ea:	fb1b fb03 	smulbb	fp, fp, r3
 801a7ee:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801a7f2:	fb06 b60a 	mla	r6, r6, sl, fp
 801a7f6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a7f8:	f895 b001 	ldrb.w	fp, [r5, #1]
 801a7fc:	787d      	ldrb	r5, [r7, #1]
 801a7fe:	783f      	ldrb	r7, [r7, #0]
 801a800:	435d      	muls	r5, r3
 801a802:	fb0e 550b 	mla	r5, lr, fp, r5
 801a806:	f892 b001 	ldrb.w	fp, [r2, #1]
 801a80a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a80c:	fb01 550b 	mla	r5, r1, fp, r5
 801a810:	f890 b001 	ldrb.w	fp, [r0, #1]
 801a814:	fb08 550b 	mla	r5, r8, fp, r5
 801a818:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801a81c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801a820:	fb1b fb03 	smulbb	fp, fp, r3
 801a824:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a826:	437b      	muls	r3, r7
 801a828:	7817      	ldrb	r7, [r2, #0]
 801a82a:	fb0e 3309 	mla	r3, lr, r9, r3
 801a82e:	fb01 3307 	mla	r3, r1, r7, r3
 801a832:	7807      	ldrb	r7, [r0, #0]
 801a834:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a838:	fb08 3707 	mla	r7, r8, r7, r3
 801a83c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a83e:	fa5f fc8c 	uxtb.w	ip, ip
 801a842:	fb1c fc03 	smulbb	ip, ip, r3
 801a846:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801a84a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801a84e:	fb05 b50a 	mla	r5, r5, sl, fp
 801a852:	fb07 c70a 	mla	r7, r7, sl, ip
 801a856:	b2b6      	uxth	r6, r6
 801a858:	b2ad      	uxth	r5, r5
 801a85a:	b2bf      	uxth	r7, r7
 801a85c:	1c73      	adds	r3, r6, #1
 801a85e:	1c7a      	adds	r2, r7, #1
 801a860:	f105 0b01 	add.w	fp, r5, #1
 801a864:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801a868:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801a86c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801a870:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a874:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801a878:	096d      	lsrs	r5, r5, #5
 801a87a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a87c:	4316      	orrs	r6, r2
 801a87e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a882:	432e      	orrs	r6, r5
 801a884:	f823 6b02 	strh.w	r6, [r3], #2
 801a888:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801a88a:	930c      	str	r3, [sp, #48]	; 0x30
 801a88c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a88e:	4413      	add	r3, r2
 801a890:	931f      	str	r3, [sp, #124]	; 0x7c
 801a892:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801a894:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a896:	4413      	add	r3, r2
 801a898:	9320      	str	r3, [sp, #128]	; 0x80
 801a89a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a89c:	3b01      	subs	r3, #1
 801a89e:	9311      	str	r3, [sp, #68]	; 0x44
 801a8a0:	e6db      	b.n	801a65a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801a8a2:	b149      	cbz	r1, 801a8b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801a8a4:	5cb2      	ldrb	r2, [r6, r2]
 801a8a6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a8aa:	4422      	add	r2, r4
 801a8ac:	4628      	mov	r0, r5
 801a8ae:	462f      	mov	r7, r5
 801a8b0:	e771      	b.n	801a796 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801a8b2:	4628      	mov	r0, r5
 801a8b4:	462a      	mov	r2, r5
 801a8b6:	e76e      	b.n	801a796 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801a8b8:	4628      	mov	r0, r5
 801a8ba:	462a      	mov	r2, r5
 801a8bc:	e7f7      	b.n	801a8ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801a8be:	b015      	add	sp, #84	; 0x54
 801a8c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a8c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801a8c4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a8c8:	880f      	ldrh	r7, [r1, #0]
 801a8ca:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801a8ce:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801a8d2:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801a8d6:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801a8da:	023c      	lsls	r4, r7, #8
 801a8dc:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801a8e0:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801a8e4:	017c      	lsls	r4, r7, #5
 801a8e6:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801a8ea:	00ff      	lsls	r7, r7, #3
 801a8ec:	ea4b 0404 	orr.w	r4, fp, r4
 801a8f0:	b2ff      	uxtb	r7, r7
 801a8f2:	fb05 ca0e 	mla	sl, r5, lr, ip
 801a8f6:	4327      	orrs	r7, r4
 801a8f8:	2d00      	cmp	r5, #0
 801a8fa:	eb02 080a 	add.w	r8, r2, sl
 801a8fe:	9701      	str	r7, [sp, #4]
 801a900:	db7e      	blt.n	801aa00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801a902:	45a9      	cmp	r9, r5
 801a904:	dd7c      	ble.n	801aa00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801a906:	f1bc 0f00 	cmp.w	ip, #0
 801a90a:	db77      	blt.n	801a9fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801a90c:	45e6      	cmp	lr, ip
 801a90e:	dd75      	ble.n	801a9fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801a910:	f812 700a 	ldrb.w	r7, [r2, sl]
 801a914:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a918:	441f      	add	r7, r3
 801a91a:	f11c 0201 	adds.w	r2, ip, #1
 801a91e:	d472      	bmi.n	801aa06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a920:	4596      	cmp	lr, r2
 801a922:	dd70      	ble.n	801aa06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a924:	2800      	cmp	r0, #0
 801a926:	d06e      	beq.n	801aa06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a928:	f898 4001 	ldrb.w	r4, [r8, #1]
 801a92c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801a930:	441c      	add	r4, r3
 801a932:	3501      	adds	r5, #1
 801a934:	d46b      	bmi.n	801aa0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a936:	45a9      	cmp	r9, r5
 801a938:	dd69      	ble.n	801aa0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a93a:	2e00      	cmp	r6, #0
 801a93c:	d067      	beq.n	801aa0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a93e:	f1bc 0f00 	cmp.w	ip, #0
 801a942:	db62      	blt.n	801aa0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801a944:	45e6      	cmp	lr, ip
 801a946:	dd60      	ble.n	801aa0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801a948:	f818 500e 	ldrb.w	r5, [r8, lr]
 801a94c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801a950:	441d      	add	r5, r3
 801a952:	f11c 0201 	adds.w	r2, ip, #1
 801a956:	d45d      	bmi.n	801aa14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a958:	4596      	cmp	lr, r2
 801a95a:	dd5b      	ble.n	801aa14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a95c:	2800      	cmp	r0, #0
 801a95e:	d059      	beq.n	801aa14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a960:	44c6      	add	lr, r8
 801a962:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801a966:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a96a:	4413      	add	r3, r2
 801a96c:	b280      	uxth	r0, r0
 801a96e:	b2b2      	uxth	r2, r6
 801a970:	fb00 f602 	mul.w	r6, r0, r2
 801a974:	0100      	lsls	r0, r0, #4
 801a976:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801a97a:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801a97e:	1b80      	subs	r0, r0, r6
 801a980:	fa1f fc82 	uxth.w	ip, r2
 801a984:	b282      	uxth	r2, r0
 801a986:	78a0      	ldrb	r0, [r4, #2]
 801a988:	f897 e002 	ldrb.w	lr, [r7, #2]
 801a98c:	f897 9000 	ldrb.w	r9, [r7]
 801a990:	787f      	ldrb	r7, [r7, #1]
 801a992:	eba8 080c 	sub.w	r8, r8, ip
 801a996:	fa1f f888 	uxth.w	r8, r8
 801a99a:	4350      	muls	r0, r2
 801a99c:	fb08 0e0e 	mla	lr, r8, lr, r0
 801a9a0:	78a8      	ldrb	r0, [r5, #2]
 801a9a2:	fb0c e000 	mla	r0, ip, r0, lr
 801a9a6:	f893 e002 	ldrb.w	lr, [r3, #2]
 801a9aa:	fb06 0e0e 	mla	lr, r6, lr, r0
 801a9ae:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801a9b2:	f894 e000 	ldrb.w	lr, [r4]
 801a9b6:	fb02 fe0e 	mul.w	lr, r2, lr
 801a9ba:	fb08 e909 	mla	r9, r8, r9, lr
 801a9be:	f895 e000 	ldrb.w	lr, [r5]
 801a9c2:	fb0c 990e 	mla	r9, ip, lr, r9
 801a9c6:	f893 e000 	ldrb.w	lr, [r3]
 801a9ca:	785b      	ldrb	r3, [r3, #1]
 801a9cc:	fb06 9e0e 	mla	lr, r6, lr, r9
 801a9d0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801a9d4:	ea4e 0e00 	orr.w	lr, lr, r0
 801a9d8:	7860      	ldrb	r0, [r4, #1]
 801a9da:	4350      	muls	r0, r2
 801a9dc:	786a      	ldrb	r2, [r5, #1]
 801a9de:	fb08 0007 	mla	r0, r8, r7, r0
 801a9e2:	fb0c 0202 	mla	r2, ip, r2, r0
 801a9e6:	fb06 2303 	mla	r3, r6, r3, r2
 801a9ea:	095b      	lsrs	r3, r3, #5
 801a9ec:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a9f0:	ea4e 0303 	orr.w	r3, lr, r3
 801a9f4:	800b      	strh	r3, [r1, #0]
 801a9f6:	b003      	add	sp, #12
 801a9f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a9fc:	af01      	add	r7, sp, #4
 801a9fe:	e78c      	b.n	801a91a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801aa00:	ac01      	add	r4, sp, #4
 801aa02:	4627      	mov	r7, r4
 801aa04:	e795      	b.n	801a932 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801aa06:	ac01      	add	r4, sp, #4
 801aa08:	e793      	b.n	801a932 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801aa0a:	ad01      	add	r5, sp, #4
 801aa0c:	e7a1      	b.n	801a952 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801aa0e:	ab01      	add	r3, sp, #4
 801aa10:	461d      	mov	r5, r3
 801aa12:	e7ab      	b.n	801a96c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801aa14:	ab01      	add	r3, sp, #4
 801aa16:	e7a9      	b.n	801a96c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801aa18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801aa18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aa1c:	b08f      	sub	sp, #60	; 0x3c
 801aa1e:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801aa22:	920c      	str	r2, [sp, #48]	; 0x30
 801aa24:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801aa26:	910a      	str	r1, [sp, #40]	; 0x28
 801aa28:	9306      	str	r3, [sp, #24]
 801aa2a:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801aa2e:	900d      	str	r0, [sp, #52]	; 0x34
 801aa30:	6850      	ldr	r0, [r2, #4]
 801aa32:	6812      	ldr	r2, [r2, #0]
 801aa34:	fb00 1303 	mla	r3, r0, r3, r1
 801aa38:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801aa3c:	9307      	str	r3, [sp, #28]
 801aa3e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801aa40:	681b      	ldr	r3, [r3, #0]
 801aa42:	9308      	str	r3, [sp, #32]
 801aa44:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801aa46:	685c      	ldr	r4, [r3, #4]
 801aa48:	3404      	adds	r4, #4
 801aa4a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801aa4c:	2b00      	cmp	r3, #0
 801aa4e:	dc03      	bgt.n	801aa58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801aa50:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801aa52:	2b00      	cmp	r3, #0
 801aa54:	f340 81d6 	ble.w	801ae04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801aa58:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801aa5a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801aa5e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801aa62:	1e48      	subs	r0, r1, #1
 801aa64:	1e56      	subs	r6, r2, #1
 801aa66:	9b06      	ldr	r3, [sp, #24]
 801aa68:	2b00      	cmp	r3, #0
 801aa6a:	f340 80b7 	ble.w	801abdc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801aa6e:	ea5f 472b 	movs.w	r7, fp, asr #16
 801aa72:	ea4f 4325 	mov.w	r3, r5, asr #16
 801aa76:	d406      	bmi.n	801aa86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801aa78:	4287      	cmp	r7, r0
 801aa7a:	da04      	bge.n	801aa86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801aa7c:	2b00      	cmp	r3, #0
 801aa7e:	db02      	blt.n	801aa86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801aa80:	42b3      	cmp	r3, r6
 801aa82:	f2c0 80ac 	blt.w	801abde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801aa86:	3701      	adds	r7, #1
 801aa88:	f100 809d 	bmi.w	801abc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801aa8c:	42b9      	cmp	r1, r7
 801aa8e:	f2c0 809a 	blt.w	801abc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801aa92:	3301      	adds	r3, #1
 801aa94:	f100 8097 	bmi.w	801abc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801aa98:	429a      	cmp	r2, r3
 801aa9a:	f2c0 8094 	blt.w	801abc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801aa9e:	9b06      	ldr	r3, [sp, #24]
 801aaa0:	930b      	str	r3, [sp, #44]	; 0x2c
 801aaa2:	9b07      	ldr	r3, [sp, #28]
 801aaa4:	9309      	str	r3, [sp, #36]	; 0x24
 801aaa6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801aaa8:	2b00      	cmp	r3, #0
 801aaaa:	f340 80b5 	ble.w	801ac18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801aaae:	9820      	ldr	r0, [sp, #128]	; 0x80
 801aab0:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801aab2:	68c7      	ldr	r7, [r0, #12]
 801aab4:	6892      	ldr	r2, [r2, #8]
 801aab6:	ea5f 402b 	movs.w	r0, fp, asr #16
 801aaba:	ea4f 4625 	mov.w	r6, r5, asr #16
 801aabe:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801aac2:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801aac6:	f100 80fb 	bmi.w	801acc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801aaca:	f102 3cff 	add.w	ip, r2, #4294967295
 801aace:	4560      	cmp	r0, ip
 801aad0:	f280 80f6 	bge.w	801acc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801aad4:	2e00      	cmp	r6, #0
 801aad6:	f2c0 80f3 	blt.w	801acc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801aada:	f107 3cff 	add.w	ip, r7, #4294967295
 801aade:	4566      	cmp	r6, ip
 801aae0:	f280 80ee 	bge.w	801acc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801aae4:	b212      	sxth	r2, r2
 801aae6:	fb06 0002 	mla	r0, r6, r2, r0
 801aaea:	9e08      	ldr	r6, [sp, #32]
 801aaec:	1837      	adds	r7, r6, r0
 801aaee:	5c30      	ldrb	r0, [r6, r0]
 801aaf0:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801aaf4:	eb04 0c08 	add.w	ip, r4, r8
 801aaf8:	2b00      	cmp	r3, #0
 801aafa:	f000 80d3 	beq.w	801aca4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801aafe:	787e      	ldrb	r6, [r7, #1]
 801ab00:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801ab04:	4426      	add	r6, r4
 801ab06:	2900      	cmp	r1, #0
 801ab08:	f000 80d4 	beq.w	801acb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801ab0c:	18b8      	adds	r0, r7, r2
 801ab0e:	5cba      	ldrb	r2, [r7, r2]
 801ab10:	7840      	ldrb	r0, [r0, #1]
 801ab12:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ab16:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801ab1a:	4422      	add	r2, r4
 801ab1c:	4420      	add	r0, r4
 801ab1e:	b29b      	uxth	r3, r3
 801ab20:	b289      	uxth	r1, r1
 801ab22:	fb03 f901 	mul.w	r9, r3, r1
 801ab26:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801ab2a:	011b      	lsls	r3, r3, #4
 801ab2c:	b289      	uxth	r1, r1
 801ab2e:	78b7      	ldrb	r7, [r6, #2]
 801ab30:	f89c a002 	ldrb.w	sl, [ip, #2]
 801ab34:	f89c c001 	ldrb.w	ip, [ip, #1]
 801ab38:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801ab3c:	eba3 0309 	sub.w	r3, r3, r9
 801ab40:	b29b      	uxth	r3, r3
 801ab42:	ebae 0e01 	sub.w	lr, lr, r1
 801ab46:	fa1f fe8e 	uxth.w	lr, lr
 801ab4a:	435f      	muls	r7, r3
 801ab4c:	fb0e 770a 	mla	r7, lr, sl, r7
 801ab50:	f892 a002 	ldrb.w	sl, [r2, #2]
 801ab54:	fb01 770a 	mla	r7, r1, sl, r7
 801ab58:	f890 a002 	ldrb.w	sl, [r0, #2]
 801ab5c:	fb09 7a0a 	mla	sl, r9, sl, r7
 801ab60:	f814 7008 	ldrb.w	r7, [r4, r8]
 801ab64:	f896 8000 	ldrb.w	r8, [r6]
 801ab68:	7876      	ldrb	r6, [r6, #1]
 801ab6a:	fb03 f808 	mul.w	r8, r3, r8
 801ab6e:	fb0e 8807 	mla	r8, lr, r7, r8
 801ab72:	7817      	ldrb	r7, [r2, #0]
 801ab74:	fb01 8807 	mla	r8, r1, r7, r8
 801ab78:	7807      	ldrb	r7, [r0, #0]
 801ab7a:	fb09 8707 	mla	r7, r9, r7, r8
 801ab7e:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801ab82:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801ab86:	ea47 070a 	orr.w	r7, r7, sl
 801ab8a:	4373      	muls	r3, r6
 801ab8c:	f892 a001 	ldrb.w	sl, [r2, #1]
 801ab90:	fb0e 330c 	mla	r3, lr, ip, r3
 801ab94:	fb01 310a 	mla	r1, r1, sl, r3
 801ab98:	f890 a001 	ldrb.w	sl, [r0, #1]
 801ab9c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ab9e:	fb09 1a0a 	mla	sl, r9, sl, r1
 801aba2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801aba6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801abaa:	ea47 070a 	orr.w	r7, r7, sl
 801abae:	801f      	strh	r7, [r3, #0]
 801abb0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801abb2:	3302      	adds	r3, #2
 801abb4:	9309      	str	r3, [sp, #36]	; 0x24
 801abb6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801abb8:	449b      	add	fp, r3
 801abba:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801abbc:	441d      	add	r5, r3
 801abbe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801abc0:	3b01      	subs	r3, #1
 801abc2:	930b      	str	r3, [sp, #44]	; 0x2c
 801abc4:	e76f      	b.n	801aaa6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801abc6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801abc8:	449b      	add	fp, r3
 801abca:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801abcc:	441d      	add	r5, r3
 801abce:	9b06      	ldr	r3, [sp, #24]
 801abd0:	3b01      	subs	r3, #1
 801abd2:	9306      	str	r3, [sp, #24]
 801abd4:	9b07      	ldr	r3, [sp, #28]
 801abd6:	3302      	adds	r3, #2
 801abd8:	9307      	str	r3, [sp, #28]
 801abda:	e744      	b.n	801aa66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801abdc:	d023      	beq.n	801ac26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801abde:	9b06      	ldr	r3, [sp, #24]
 801abe0:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801abe2:	3b01      	subs	r3, #1
 801abe4:	fb00 b003 	mla	r0, r0, r3, fp
 801abe8:	1400      	asrs	r0, r0, #16
 801abea:	f53f af58 	bmi.w	801aa9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801abee:	3901      	subs	r1, #1
 801abf0:	4288      	cmp	r0, r1
 801abf2:	f6bf af54 	bge.w	801aa9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801abf6:	991c      	ldr	r1, [sp, #112]	; 0x70
 801abf8:	fb01 5303 	mla	r3, r1, r3, r5
 801abfc:	141b      	asrs	r3, r3, #16
 801abfe:	f53f af4e 	bmi.w	801aa9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801ac02:	3a01      	subs	r2, #1
 801ac04:	4293      	cmp	r3, r2
 801ac06:	f6bf af4a 	bge.w	801aa9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801ac0a:	9b06      	ldr	r3, [sp, #24]
 801ac0c:	9309      	str	r3, [sp, #36]	; 0x24
 801ac0e:	9b07      	ldr	r3, [sp, #28]
 801ac10:	930b      	str	r3, [sp, #44]	; 0x2c
 801ac12:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ac14:	2b00      	cmp	r3, #0
 801ac16:	dc70      	bgt.n	801acfa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801ac18:	9b06      	ldr	r3, [sp, #24]
 801ac1a:	9a07      	ldr	r2, [sp, #28]
 801ac1c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ac20:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ac24:	9307      	str	r3, [sp, #28]
 801ac26:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ac28:	2b00      	cmp	r3, #0
 801ac2a:	f340 80eb 	ble.w	801ae04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801ac2e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ac32:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ac36:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ac3a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ac3c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ac40:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ac44:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ac48:	eef0 6a62 	vmov.f32	s13, s5
 801ac4c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ac50:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ac54:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ac58:	ee16 ba90 	vmov	fp, s13
 801ac5c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ac60:	eef0 6a43 	vmov.f32	s13, s6
 801ac64:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ac68:	ee12 2a90 	vmov	r2, s5
 801ac6c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ac70:	fb92 f3f3 	sdiv	r3, r2, r3
 801ac74:	ee13 2a10 	vmov	r2, s6
 801ac78:	931b      	str	r3, [sp, #108]	; 0x6c
 801ac7a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ac7c:	fb92 f3f3 	sdiv	r3, r2, r3
 801ac80:	931c      	str	r3, [sp, #112]	; 0x70
 801ac82:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ac84:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801ac86:	3b01      	subs	r3, #1
 801ac88:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ac8c:	930a      	str	r3, [sp, #40]	; 0x28
 801ac8e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ac90:	bf08      	it	eq
 801ac92:	4613      	moveq	r3, r2
 801ac94:	ee16 5a90 	vmov	r5, s13
 801ac98:	9306      	str	r3, [sp, #24]
 801ac9a:	eeb0 3a67 	vmov.f32	s6, s15
 801ac9e:	eef0 2a47 	vmov.f32	s5, s14
 801aca2:	e6d2      	b.n	801aa4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801aca4:	b149      	cbz	r1, 801acba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801aca6:	5cba      	ldrb	r2, [r7, r2]
 801aca8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801acac:	4422      	add	r2, r4
 801acae:	4660      	mov	r0, ip
 801acb0:	4666      	mov	r6, ip
 801acb2:	e734      	b.n	801ab1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801acb4:	4660      	mov	r0, ip
 801acb6:	4662      	mov	r2, ip
 801acb8:	e731      	b.n	801ab1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801acba:	4660      	mov	r0, ip
 801acbc:	4662      	mov	r2, ip
 801acbe:	e7f7      	b.n	801acb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801acc0:	f110 0c01 	adds.w	ip, r0, #1
 801acc4:	f53f af74 	bmi.w	801abb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801acc8:	4562      	cmp	r2, ip
 801acca:	f6ff af71 	blt.w	801abb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801acce:	f116 0c01 	adds.w	ip, r6, #1
 801acd2:	f53f af6d 	bmi.w	801abb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801acd6:	4567      	cmp	r7, ip
 801acd8:	f6ff af6a 	blt.w	801abb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801acdc:	b23f      	sxth	r7, r7
 801acde:	b212      	sxth	r2, r2
 801ace0:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801ace4:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801ace8:	9200      	str	r2, [sp, #0]
 801acea:	9701      	str	r7, [sp, #4]
 801acec:	4623      	mov	r3, r4
 801acee:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801acf2:	980d      	ldr	r0, [sp, #52]	; 0x34
 801acf4:	f7ff fde6 	bl	801a8c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801acf8:	e75a      	b.n	801abb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801acfa:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801acfc:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801ad00:	ea4f 462b 	mov.w	r6, fp, asr #16
 801ad04:	1428      	asrs	r0, r5, #16
 801ad06:	fb02 6000 	mla	r0, r2, r0, r6
 801ad0a:	9e08      	ldr	r6, [sp, #32]
 801ad0c:	f816 8000 	ldrb.w	r8, [r6, r0]
 801ad10:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801ad14:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801ad18:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801ad1c:	1837      	adds	r7, r6, r0
 801ad1e:	eb04 0c08 	add.w	ip, r4, r8
 801ad22:	2b00      	cmp	r3, #0
 801ad24:	d060      	beq.n	801ade8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801ad26:	787e      	ldrb	r6, [r7, #1]
 801ad28:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801ad2c:	4426      	add	r6, r4
 801ad2e:	2900      	cmp	r1, #0
 801ad30:	d062      	beq.n	801adf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801ad32:	18b8      	adds	r0, r7, r2
 801ad34:	5cba      	ldrb	r2, [r7, r2]
 801ad36:	7840      	ldrb	r0, [r0, #1]
 801ad38:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ad3c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801ad40:	4422      	add	r2, r4
 801ad42:	4420      	add	r0, r4
 801ad44:	b29b      	uxth	r3, r3
 801ad46:	b289      	uxth	r1, r1
 801ad48:	fb03 f901 	mul.w	r9, r3, r1
 801ad4c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801ad50:	011b      	lsls	r3, r3, #4
 801ad52:	b289      	uxth	r1, r1
 801ad54:	78b7      	ldrb	r7, [r6, #2]
 801ad56:	f89c a002 	ldrb.w	sl, [ip, #2]
 801ad5a:	f89c c001 	ldrb.w	ip, [ip, #1]
 801ad5e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801ad62:	eba3 0309 	sub.w	r3, r3, r9
 801ad66:	b29b      	uxth	r3, r3
 801ad68:	ebae 0e01 	sub.w	lr, lr, r1
 801ad6c:	fa1f fe8e 	uxth.w	lr, lr
 801ad70:	435f      	muls	r7, r3
 801ad72:	fb0e 770a 	mla	r7, lr, sl, r7
 801ad76:	f892 a002 	ldrb.w	sl, [r2, #2]
 801ad7a:	fb01 770a 	mla	r7, r1, sl, r7
 801ad7e:	f890 a002 	ldrb.w	sl, [r0, #2]
 801ad82:	fb09 7a0a 	mla	sl, r9, sl, r7
 801ad86:	f814 7008 	ldrb.w	r7, [r4, r8]
 801ad8a:	f896 8000 	ldrb.w	r8, [r6]
 801ad8e:	7876      	ldrb	r6, [r6, #1]
 801ad90:	fb03 f808 	mul.w	r8, r3, r8
 801ad94:	fb0e 8807 	mla	r8, lr, r7, r8
 801ad98:	7817      	ldrb	r7, [r2, #0]
 801ad9a:	fb01 8807 	mla	r8, r1, r7, r8
 801ad9e:	7807      	ldrb	r7, [r0, #0]
 801ada0:	fb09 8707 	mla	r7, r9, r7, r8
 801ada4:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801ada8:	4373      	muls	r3, r6
 801adaa:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801adae:	7856      	ldrb	r6, [r2, #1]
 801adb0:	ea47 070a 	orr.w	r7, r7, sl
 801adb4:	fb0e 330c 	mla	r3, lr, ip, r3
 801adb8:	f890 a001 	ldrb.w	sl, [r0, #1]
 801adbc:	fb01 3306 	mla	r3, r1, r6, r3
 801adc0:	fb09 3a0a 	mla	sl, r9, sl, r3
 801adc4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801adc8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801adca:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801adce:	ea47 070a 	orr.w	r7, r7, sl
 801add2:	f823 7b02 	strh.w	r7, [r3], #2
 801add6:	930b      	str	r3, [sp, #44]	; 0x2c
 801add8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801adda:	449b      	add	fp, r3
 801addc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801adde:	441d      	add	r5, r3
 801ade0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ade2:	3b01      	subs	r3, #1
 801ade4:	9309      	str	r3, [sp, #36]	; 0x24
 801ade6:	e714      	b.n	801ac12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801ade8:	b149      	cbz	r1, 801adfe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801adea:	5cba      	ldrb	r2, [r7, r2]
 801adec:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801adf0:	4422      	add	r2, r4
 801adf2:	4660      	mov	r0, ip
 801adf4:	4666      	mov	r6, ip
 801adf6:	e7a5      	b.n	801ad44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801adf8:	4660      	mov	r0, ip
 801adfa:	4662      	mov	r2, ip
 801adfc:	e7a2      	b.n	801ad44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801adfe:	4660      	mov	r0, ip
 801ae00:	4662      	mov	r2, ip
 801ae02:	e7f7      	b.n	801adf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801ae04:	b00f      	add	sp, #60	; 0x3c
 801ae06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ae0a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801ae0a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ae0e:	b085      	sub	sp, #20
 801ae10:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 801ae14:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801ae18:	9102      	str	r1, [sp, #8]
 801ae1a:	2c00      	cmp	r4, #0
 801ae1c:	fb04 710c 	mla	r1, r4, ip, r7
 801ae20:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801ae24:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801ae28:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801ae2c:	eb02 0e01 	add.w	lr, r2, r1
 801ae30:	f2c0 8122 	blt.w	801b078 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801ae34:	45a0      	cmp	r8, r4
 801ae36:	f340 811f 	ble.w	801b078 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801ae3a:	2f00      	cmp	r7, #0
 801ae3c:	f2c0 811a 	blt.w	801b074 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801ae40:	45bc      	cmp	ip, r7
 801ae42:	f340 8117 	ble.w	801b074 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801ae46:	5c52      	ldrb	r2, [r2, r1]
 801ae48:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801ae4c:	1c7a      	adds	r2, r7, #1
 801ae4e:	f100 8116 	bmi.w	801b07e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801ae52:	4594      	cmp	ip, r2
 801ae54:	f340 8113 	ble.w	801b07e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801ae58:	2e00      	cmp	r6, #0
 801ae5a:	f000 8112 	beq.w	801b082 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801ae5e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801ae62:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801ae66:	3401      	adds	r4, #1
 801ae68:	f100 810f 	bmi.w	801b08a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801ae6c:	45a0      	cmp	r8, r4
 801ae6e:	f340 810c 	ble.w	801b08a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801ae72:	2800      	cmp	r0, #0
 801ae74:	f000 810c 	beq.w	801b090 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801ae78:	2f00      	cmp	r7, #0
 801ae7a:	f2c0 8104 	blt.w	801b086 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801ae7e:	45bc      	cmp	ip, r7
 801ae80:	f340 8101 	ble.w	801b086 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801ae84:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801ae88:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801ae8c:	3701      	adds	r7, #1
 801ae8e:	f100 8102 	bmi.w	801b096 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801ae92:	45bc      	cmp	ip, r7
 801ae94:	f340 80ff 	ble.w	801b096 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801ae98:	2e00      	cmp	r6, #0
 801ae9a:	f000 80fe 	beq.w	801b09a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801ae9e:	44f4      	add	ip, lr
 801aea0:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801aea4:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801aea8:	b2b6      	uxth	r6, r6
 801aeaa:	b280      	uxth	r0, r0
 801aeac:	fb00 fe06 	mul.w	lr, r0, r6
 801aeb0:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801aeb4:	0136      	lsls	r6, r6, #4
 801aeb6:	eba6 070e 	sub.w	r7, r6, lr
 801aeba:	b280      	uxth	r0, r0
 801aebc:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801aec0:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801aec4:	b2bf      	uxth	r7, r7
 801aec6:	1a1b      	subs	r3, r3, r0
 801aec8:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801aecc:	b29b      	uxth	r3, r3
 801aece:	fb0a f607 	mul.w	r6, sl, r7
 801aed2:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801aed6:	fb0b 6603 	mla	r6, fp, r3, r6
 801aeda:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801aede:	fb00 6609 	mla	r6, r0, r9, r6
 801aee2:	fb0e 6608 	mla	r6, lr, r8, r6
 801aee6:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801aeea:	9600      	str	r6, [sp, #0]
 801aeec:	2e00      	cmp	r6, #0
 801aeee:	f000 80be 	beq.w	801b06e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801aef2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801aef6:	fb0b fc0c 	mul.w	ip, fp, ip
 801aefa:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801aefe:	fb0b f505 	mul.w	r5, fp, r5
 801af02:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801af06:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801af0a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801af0e:	44dc      	add	ip, fp
 801af10:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801af14:	9501      	str	r5, [sp, #4]
 801af16:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801af1a:	9503      	str	r5, [sp, #12]
 801af1c:	9d01      	ldr	r5, [sp, #4]
 801af1e:	9e02      	ldr	r6, [sp, #8]
 801af20:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801af24:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801af28:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801af2c:	fb0a fc0c 	mul.w	ip, sl, ip
 801af30:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801af34:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801af38:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801af3c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801af40:	4465      	add	r5, ip
 801af42:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801af46:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801af4a:	fb09 fc0c 	mul.w	ip, r9, ip
 801af4e:	fb09 f904 	mul.w	r9, r9, r4
 801af52:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801af56:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801af5a:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801af5e:	fb08 f404 	mul.w	r4, r8, r4
 801af62:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801af66:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801af6a:	fb08 f802 	mul.w	r8, r8, r2
 801af6e:	fb0a fa01 	mul.w	sl, sl, r1
 801af72:	0a22      	lsrs	r2, r4, #8
 801af74:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801af78:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801af7c:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801af80:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801af84:	4414      	add	r4, r2
 801af86:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801af8a:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801af8e:	0a2d      	lsrs	r5, r5, #8
 801af90:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801af94:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801af98:	9a03      	ldr	r2, [sp, #12]
 801af9a:	8836      	ldrh	r6, [r6, #0]
 801af9c:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801afa0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801afa4:	437d      	muls	r5, r7
 801afa6:	4461      	add	r1, ip
 801afa8:	0a24      	lsrs	r4, r4, #8
 801afaa:	fb02 5503 	mla	r5, r2, r3, r5
 801afae:	0a09      	lsrs	r1, r1, #8
 801afb0:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801afb4:	fb04 540e 	mla	r4, r4, lr, r5
 801afb8:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801afbc:	fb01 4100 	mla	r1, r1, r0, r4
 801afc0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801afc4:	0a09      	lsrs	r1, r1, #8
 801afc6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801afca:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801afce:	fb07 f70a 	mul.w	r7, r7, sl
 801afd2:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801afd6:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801afda:	fb03 7101 	mla	r1, r3, r1, r7
 801afde:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801afe2:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801afe6:	fb0e 1e08 	mla	lr, lr, r8, r1
 801afea:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801afee:	fb00 e101 	mla	r1, r0, r1, lr
 801aff2:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801aff6:	9a00      	ldr	r2, [sp, #0]
 801aff8:	b287      	uxth	r7, r0
 801affa:	437a      	muls	r2, r7
 801affc:	0a09      	lsrs	r1, r1, #8
 801affe:	1c53      	adds	r3, r2, #1
 801b000:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801b004:	4321      	orrs	r1, r4
 801b006:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b00a:	1235      	asrs	r5, r6, #8
 801b00c:	0c0a      	lsrs	r2, r1, #16
 801b00e:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801b012:	b2db      	uxtb	r3, r3
 801b014:	fb12 f207 	smulbb	r2, r2, r7
 801b018:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801b01c:	fb05 2503 	mla	r5, r5, r3, r2
 801b020:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801b024:	10f2      	asrs	r2, r6, #3
 801b026:	b2c8      	uxtb	r0, r1
 801b028:	00f6      	lsls	r6, r6, #3
 801b02a:	fb14 f407 	smulbb	r4, r4, r7
 801b02e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801b032:	b2f6      	uxtb	r6, r6
 801b034:	fb10 f007 	smulbb	r0, r0, r7
 801b038:	fb02 4203 	mla	r2, r2, r3, r4
 801b03c:	b2ad      	uxth	r5, r5
 801b03e:	fb06 0303 	mla	r3, r6, r3, r0
 801b042:	b299      	uxth	r1, r3
 801b044:	b294      	uxth	r4, r2
 801b046:	1c6b      	adds	r3, r5, #1
 801b048:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801b04c:	1c62      	adds	r2, r4, #1
 801b04e:	1c4b      	adds	r3, r1, #1
 801b050:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801b054:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801b058:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801b05c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b060:	0952      	lsrs	r2, r2, #5
 801b062:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b066:	432b      	orrs	r3, r5
 801b068:	4313      	orrs	r3, r2
 801b06a:	9a02      	ldr	r2, [sp, #8]
 801b06c:	8013      	strh	r3, [r2, #0]
 801b06e:	b005      	add	sp, #20
 801b070:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b074:	2500      	movs	r5, #0
 801b076:	e6e9      	b.n	801ae4c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801b078:	2100      	movs	r1, #0
 801b07a:	460d      	mov	r5, r1
 801b07c:	e6f3      	b.n	801ae66 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801b07e:	2100      	movs	r1, #0
 801b080:	e6f1      	b.n	801ae66 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801b082:	4631      	mov	r1, r6
 801b084:	e6ef      	b.n	801ae66 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801b086:	2400      	movs	r4, #0
 801b088:	e700      	b.n	801ae8c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801b08a:	2200      	movs	r2, #0
 801b08c:	4614      	mov	r4, r2
 801b08e:	e70b      	b.n	801aea8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801b090:	4602      	mov	r2, r0
 801b092:	4604      	mov	r4, r0
 801b094:	e708      	b.n	801aea8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801b096:	2200      	movs	r2, #0
 801b098:	e706      	b.n	801aea8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801b09a:	4632      	mov	r2, r6
 801b09c:	e704      	b.n	801aea8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801b09e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b09e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b0a2:	b09f      	sub	sp, #124	; 0x7c
 801b0a4:	921b      	str	r2, [sp, #108]	; 0x6c
 801b0a6:	9309      	str	r3, [sp, #36]	; 0x24
 801b0a8:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801b0aa:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801b0ae:	931c      	str	r3, [sp, #112]	; 0x70
 801b0b0:	9119      	str	r1, [sp, #100]	; 0x64
 801b0b2:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801b0b6:	901d      	str	r0, [sp, #116]	; 0x74
 801b0b8:	6850      	ldr	r0, [r2, #4]
 801b0ba:	6812      	ldr	r2, [r2, #0]
 801b0bc:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801b0be:	fb00 1303 	mla	r3, r0, r3, r1
 801b0c2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b0c6:	930c      	str	r3, [sp, #48]	; 0x30
 801b0c8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b0ca:	681b      	ldr	r3, [r3, #0]
 801b0cc:	9312      	str	r3, [sp, #72]	; 0x48
 801b0ce:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b0d0:	685e      	ldr	r6, [r3, #4]
 801b0d2:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 801b0d6:	930d      	str	r3, [sp, #52]	; 0x34
 801b0d8:	3604      	adds	r6, #4
 801b0da:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801b0dc:	2b00      	cmp	r3, #0
 801b0de:	dc03      	bgt.n	801b0e8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801b0e0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801b0e2:	2b00      	cmp	r3, #0
 801b0e4:	f340 8388 	ble.w	801b7f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801b0e8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b0ea:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b0ee:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b0f2:	1e48      	subs	r0, r1, #1
 801b0f4:	1e57      	subs	r7, r2, #1
 801b0f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b0f8:	2b00      	cmp	r3, #0
 801b0fa:	f340 8195 	ble.w	801b428 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801b0fe:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801b100:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801b104:	ea4f 4325 	mov.w	r3, r5, asr #16
 801b108:	d406      	bmi.n	801b118 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b10a:	4584      	cmp	ip, r0
 801b10c:	da04      	bge.n	801b118 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b10e:	2b00      	cmp	r3, #0
 801b110:	db02      	blt.n	801b118 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b112:	42bb      	cmp	r3, r7
 801b114:	f2c0 8189 	blt.w	801b42a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801b118:	f11c 0c01 	adds.w	ip, ip, #1
 801b11c:	f100 8177 	bmi.w	801b40e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b120:	4561      	cmp	r1, ip
 801b122:	f2c0 8174 	blt.w	801b40e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b126:	3301      	adds	r3, #1
 801b128:	f100 8171 	bmi.w	801b40e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b12c:	429a      	cmp	r2, r3
 801b12e:	f2c0 816e 	blt.w	801b40e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b132:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b134:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801b136:	931a      	str	r3, [sp, #104]	; 0x68
 801b138:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801b13a:	2b00      	cmp	r3, #0
 801b13c:	f340 8193 	ble.w	801b466 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801b140:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b142:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b146:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b148:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801b14c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b14e:	141b      	asrs	r3, r3, #16
 801b150:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801b154:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801b158:	f100 81d6 	bmi.w	801b508 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801b15c:	f100 38ff 	add.w	r8, r0, #4294967295
 801b160:	4543      	cmp	r3, r8
 801b162:	f280 81d1 	bge.w	801b508 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801b166:	f1bc 0f00 	cmp.w	ip, #0
 801b16a:	f2c0 81cd 	blt.w	801b508 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801b16e:	f10e 38ff 	add.w	r8, lr, #4294967295
 801b172:	45c4      	cmp	ip, r8
 801b174:	f280 81c8 	bge.w	801b508 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801b178:	b200      	sxth	r0, r0
 801b17a:	fb0c 3300 	mla	r3, ip, r0, r3
 801b17e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b180:	eb04 0803 	add.w	r8, r4, r3
 801b184:	5ce3      	ldrb	r3, [r4, r3]
 801b186:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b18a:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801b18e:	2a00      	cmp	r2, #0
 801b190:	f000 81af 	beq.w	801b4f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b194:	f898 c001 	ldrb.w	ip, [r8, #1]
 801b198:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801b19c:	940e      	str	r4, [sp, #56]	; 0x38
 801b19e:	0e24      	lsrs	r4, r4, #24
 801b1a0:	9415      	str	r4, [sp, #84]	; 0x54
 801b1a2:	b179      	cbz	r1, 801b1c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b1a4:	eb08 0c00 	add.w	ip, r8, r0
 801b1a8:	f818 0000 	ldrb.w	r0, [r8, r0]
 801b1ac:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801b1b0:	900a      	str	r0, [sp, #40]	; 0x28
 801b1b2:	0e00      	lsrs	r0, r0, #24
 801b1b4:	9013      	str	r0, [sp, #76]	; 0x4c
 801b1b6:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801b1ba:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801b1be:	900f      	str	r0, [sp, #60]	; 0x3c
 801b1c0:	0e00      	lsrs	r0, r0, #24
 801b1c2:	9016      	str	r0, [sp, #88]	; 0x58
 801b1c4:	b292      	uxth	r2, r2
 801b1c6:	b289      	uxth	r1, r1
 801b1c8:	fb02 f901 	mul.w	r9, r2, r1
 801b1cc:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801b1d0:	0112      	lsls	r2, r2, #4
 801b1d2:	eba2 0809 	sub.w	r8, r2, r9
 801b1d6:	b289      	uxth	r1, r1
 801b1d8:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801b1dc:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b1de:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b1e0:	fa1f f888 	uxth.w	r8, r8
 801b1e4:	1a52      	subs	r2, r2, r1
 801b1e6:	b292      	uxth	r2, r2
 801b1e8:	fb08 f000 	mul.w	r0, r8, r0
 801b1ec:	fb02 000e 	mla	r0, r2, lr, r0
 801b1f0:	fb01 0004 	mla	r0, r1, r4, r0
 801b1f4:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801b1f6:	fb09 0004 	mla	r0, r9, r4, r0
 801b1fa:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801b1fe:	2800      	cmp	r0, #0
 801b200:	f000 80fa 	beq.w	801b3f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b204:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801b208:	d01b      	beq.n	801b242 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801b20a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801b20e:	fb0e fa0a 	mul.w	sl, lr, sl
 801b212:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b216:	fb0e fe03 	mul.w	lr, lr, r3
 801b21a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b21e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b222:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b226:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801b22a:	4453      	add	r3, sl
 801b22c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b230:	0a1b      	lsrs	r3, r3, #8
 801b232:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b236:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b23a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b23e:	ea43 030c 	orr.w	r3, r3, ip
 801b242:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801b244:	2cff      	cmp	r4, #255	; 0xff
 801b246:	d021      	beq.n	801b28c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801b248:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b24a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b24e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801b250:	fb04 fb0b 	mul.w	fp, r4, fp
 801b254:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b256:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b25a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801b25c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b260:	fb04 fa0a 	mul.w	sl, r4, sl
 801b264:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b268:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b26c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b270:	44de      	add	lr, fp
 801b272:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b276:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b27a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b27e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b282:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b286:	ea4e 040a 	orr.w	r4, lr, sl
 801b28a:	940e      	str	r4, [sp, #56]	; 0x38
 801b28c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b28e:	2cff      	cmp	r4, #255	; 0xff
 801b290:	d021      	beq.n	801b2d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801b292:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801b294:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b298:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b29a:	fb04 fb0b 	mul.w	fp, r4, fp
 801b29e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801b2a0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b2a4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b2a6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b2aa:	fb04 fa0a 	mul.w	sl, r4, sl
 801b2ae:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b2b2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b2b6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b2ba:	44de      	add	lr, fp
 801b2bc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b2c0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b2c4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b2c8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b2cc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b2d0:	ea4e 040a 	orr.w	r4, lr, sl
 801b2d4:	940a      	str	r4, [sp, #40]	; 0x28
 801b2d6:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801b2d8:	2cff      	cmp	r4, #255	; 0xff
 801b2da:	d021      	beq.n	801b320 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801b2dc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b2de:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b2e2:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801b2e4:	fb04 fb0b 	mul.w	fp, r4, fp
 801b2e8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b2ea:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b2ee:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801b2f0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b2f4:	fb04 fa0a 	mul.w	sl, r4, sl
 801b2f8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b2fc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b300:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b304:	44de      	add	lr, fp
 801b306:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b30a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b30e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b312:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b316:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b31a:	ea4e 040a 	orr.w	r4, lr, sl
 801b31e:	940f      	str	r4, [sp, #60]	; 0x3c
 801b320:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b322:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b326:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801b328:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801b32c:	fb08 fc0c 	mul.w	ip, r8, ip
 801b330:	fb02 cc0e 	mla	ip, r2, lr, ip
 801b334:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801b338:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b33a:	fb01 cc0e 	mla	ip, r1, lr, ip
 801b33e:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801b342:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b344:	fb09 cc0e 	mla	ip, r9, lr, ip
 801b348:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801b34c:	fb08 f80e 	mul.w	r8, r8, lr
 801b350:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b354:	fb02 8303 	mla	r3, r2, r3, r8
 801b358:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801b35a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b35c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801b360:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b362:	fb01 330a 	mla	r3, r1, sl, r3
 801b366:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 801b36a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801b36c:	fb09 3901 	mla	r9, r9, r1, r3
 801b370:	4342      	muls	r2, r0
 801b372:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b376:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b37a:	883b      	ldrh	r3, [r7, #0]
 801b37c:	1c50      	adds	r0, r2, #1
 801b37e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b382:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801b386:	ea4c 0c09 	orr.w	ip, ip, r9
 801b38a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801b38e:	1219      	asrs	r1, r3, #8
 801b390:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801b394:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801b398:	b2c0      	uxtb	r0, r0
 801b39a:	fb12 f204 	smulbb	r2, r2, r4
 801b39e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801b3a2:	fb01 2100 	mla	r1, r1, r0, r2
 801b3a6:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801b3aa:	10da      	asrs	r2, r3, #3
 801b3ac:	fa5f fc8c 	uxtb.w	ip, ip
 801b3b0:	00db      	lsls	r3, r3, #3
 801b3b2:	fb1c fc04 	smulbb	ip, ip, r4
 801b3b6:	b2db      	uxtb	r3, r3
 801b3b8:	b289      	uxth	r1, r1
 801b3ba:	fb03 c300 	mla	r3, r3, r0, ip
 801b3be:	fa1f fc83 	uxth.w	ip, r3
 801b3c2:	1c4b      	adds	r3, r1, #1
 801b3c4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801b3c8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801b3cc:	fb1e fe04 	smulbb	lr, lr, r4
 801b3d0:	f10c 0301 	add.w	r3, ip, #1
 801b3d4:	fb02 e200 	mla	r2, r2, r0, lr
 801b3d8:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801b3dc:	b292      	uxth	r2, r2
 801b3de:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801b3e2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b3e6:	430b      	orrs	r3, r1
 801b3e8:	1c51      	adds	r1, r2, #1
 801b3ea:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801b3ee:	0952      	lsrs	r2, r2, #5
 801b3f0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b3f4:	4313      	orrs	r3, r2
 801b3f6:	803b      	strh	r3, [r7, #0]
 801b3f8:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801b3fa:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b3fc:	441a      	add	r2, r3
 801b3fe:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b400:	9229      	str	r2, [sp, #164]	; 0xa4
 801b402:	441d      	add	r5, r3
 801b404:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801b406:	3b01      	subs	r3, #1
 801b408:	3702      	adds	r7, #2
 801b40a:	931a      	str	r3, [sp, #104]	; 0x68
 801b40c:	e694      	b.n	801b138 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801b40e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801b410:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801b412:	441c      	add	r4, r3
 801b414:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b416:	9429      	str	r4, [sp, #164]	; 0xa4
 801b418:	441d      	add	r5, r3
 801b41a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b41c:	3b01      	subs	r3, #1
 801b41e:	9309      	str	r3, [sp, #36]	; 0x24
 801b420:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b422:	3302      	adds	r3, #2
 801b424:	930c      	str	r3, [sp, #48]	; 0x30
 801b426:	e666      	b.n	801b0f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801b428:	d024      	beq.n	801b474 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801b42a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b42c:	982b      	ldr	r0, [sp, #172]	; 0xac
 801b42e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801b430:	3b01      	subs	r3, #1
 801b432:	fb00 4003 	mla	r0, r0, r3, r4
 801b436:	1400      	asrs	r0, r0, #16
 801b438:	f53f ae7b 	bmi.w	801b132 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b43c:	3901      	subs	r1, #1
 801b43e:	4288      	cmp	r0, r1
 801b440:	f6bf ae77 	bge.w	801b132 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b444:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801b446:	fb01 5303 	mla	r3, r1, r3, r5
 801b44a:	141b      	asrs	r3, r3, #16
 801b44c:	f53f ae71 	bmi.w	801b132 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b450:	3a01      	subs	r2, #1
 801b452:	4293      	cmp	r3, r2
 801b454:	f6bf ae6d 	bge.w	801b132 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b458:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801b45c:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801b460:	f1bb 0f00 	cmp.w	fp, #0
 801b464:	dc70      	bgt.n	801b548 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801b466:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b468:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801b46c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b46e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801b472:	930c      	str	r3, [sp, #48]	; 0x30
 801b474:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801b476:	2b00      	cmp	r3, #0
 801b478:	f340 81be 	ble.w	801b7f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801b47c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b480:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b484:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b488:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b48a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b48e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b492:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b496:	eef0 6a62 	vmov.f32	s13, s5
 801b49a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b49e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b4a2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b4a6:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801b4aa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b4ae:	eef0 6a43 	vmov.f32	s13, s6
 801b4b2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b4b6:	ee12 2a90 	vmov	r2, s5
 801b4ba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b4be:	fb92 f3f3 	sdiv	r3, r2, r3
 801b4c2:	ee13 2a10 	vmov	r2, s6
 801b4c6:	932b      	str	r3, [sp, #172]	; 0xac
 801b4c8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b4ca:	fb92 f3f3 	sdiv	r3, r2, r3
 801b4ce:	932c      	str	r3, [sp, #176]	; 0xb0
 801b4d0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801b4d2:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801b4d4:	3b01      	subs	r3, #1
 801b4d6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b4da:	9319      	str	r3, [sp, #100]	; 0x64
 801b4dc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b4de:	bf08      	it	eq
 801b4e0:	4613      	moveq	r3, r2
 801b4e2:	ee16 5a90 	vmov	r5, s13
 801b4e6:	9309      	str	r3, [sp, #36]	; 0x24
 801b4e8:	eeb0 3a67 	vmov.f32	s6, s15
 801b4ec:	eef0 2a47 	vmov.f32	s5, s14
 801b4f0:	e5f3      	b.n	801b0da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b4f2:	2900      	cmp	r1, #0
 801b4f4:	f43f ae66 	beq.w	801b1c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b4f8:	f818 0000 	ldrb.w	r0, [r8, r0]
 801b4fc:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801b500:	900a      	str	r0, [sp, #40]	; 0x28
 801b502:	0e00      	lsrs	r0, r0, #24
 801b504:	9013      	str	r0, [sp, #76]	; 0x4c
 801b506:	e65d      	b.n	801b1c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b508:	f113 0801 	adds.w	r8, r3, #1
 801b50c:	f53f af74 	bmi.w	801b3f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b510:	4540      	cmp	r0, r8
 801b512:	f6ff af71 	blt.w	801b3f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b516:	f11c 0801 	adds.w	r8, ip, #1
 801b51a:	f53f af6d 	bmi.w	801b3f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b51e:	45c6      	cmp	lr, r8
 801b520:	f6ff af6a 	blt.w	801b3f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b524:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801b526:	9302      	str	r3, [sp, #8]
 801b528:	b200      	sxth	r0, r0
 801b52a:	fa0f f38e 	sxth.w	r3, lr
 801b52e:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801b532:	e9cd c203 	strd	ip, r2, [sp, #12]
 801b536:	9301      	str	r3, [sp, #4]
 801b538:	9000      	str	r0, [sp, #0]
 801b53a:	4633      	mov	r3, r6
 801b53c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b53e:	981d      	ldr	r0, [sp, #116]	; 0x74
 801b540:	4639      	mov	r1, r7
 801b542:	f7ff fc62 	bl	801ae0a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801b546:	e757      	b.n	801b3f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b548:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b54a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801b54c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b550:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b552:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b556:	1427      	asrs	r7, r4, #16
 801b558:	142b      	asrs	r3, r5, #16
 801b55a:	fb01 7303 	mla	r3, r1, r3, r7
 801b55e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b560:	18e7      	adds	r7, r4, r3
 801b562:	5ce3      	ldrb	r3, [r4, r3]
 801b564:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b568:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b56c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801b570:	2a00      	cmp	r2, #0
 801b572:	f000 8137 	beq.w	801b7e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801b576:	f897 e001 	ldrb.w	lr, [r7, #1]
 801b57a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801b57e:	9410      	str	r4, [sp, #64]	; 0x40
 801b580:	0e24      	lsrs	r4, r4, #24
 801b582:	9417      	str	r4, [sp, #92]	; 0x5c
 801b584:	b170      	cbz	r0, 801b5a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b586:	eb07 0e01 	add.w	lr, r7, r1
 801b58a:	5c79      	ldrb	r1, [r7, r1]
 801b58c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b590:	910b      	str	r1, [sp, #44]	; 0x2c
 801b592:	0e09      	lsrs	r1, r1, #24
 801b594:	9114      	str	r1, [sp, #80]	; 0x50
 801b596:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801b59a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b59e:	9111      	str	r1, [sp, #68]	; 0x44
 801b5a0:	0e09      	lsrs	r1, r1, #24
 801b5a2:	9118      	str	r1, [sp, #96]	; 0x60
 801b5a4:	b292      	uxth	r2, r2
 801b5a6:	b280      	uxth	r0, r0
 801b5a8:	fb02 f800 	mul.w	r8, r2, r0
 801b5ac:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801b5b0:	0112      	lsls	r2, r2, #4
 801b5b2:	eba2 0e08 	sub.w	lr, r2, r8
 801b5b6:	b280      	uxth	r0, r0
 801b5b8:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801b5bc:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801b5be:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b5c0:	fa1f fe8e 	uxth.w	lr, lr
 801b5c4:	1a12      	subs	r2, r2, r0
 801b5c6:	b292      	uxth	r2, r2
 801b5c8:	fb0e f101 	mul.w	r1, lr, r1
 801b5cc:	fb02 110c 	mla	r1, r2, ip, r1
 801b5d0:	fb00 1104 	mla	r1, r0, r4, r1
 801b5d4:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b5d6:	fb08 1104 	mla	r1, r8, r4, r1
 801b5da:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801b5de:	2900      	cmp	r1, #0
 801b5e0:	f000 80f5 	beq.w	801b7ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801b5e4:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801b5e8:	d019      	beq.n	801b61e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801b5ea:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801b5ee:	fb0c fa0a 	mul.w	sl, ip, sl
 801b5f2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b5f6:	fb0c fc03 	mul.w	ip, ip, r3
 801b5fa:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b5fe:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b602:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b606:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801b60a:	4453      	add	r3, sl
 801b60c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801b610:	0a1b      	lsrs	r3, r3, #8
 801b612:	0a3f      	lsrs	r7, r7, #8
 801b614:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b618:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801b61c:	433b      	orrs	r3, r7
 801b61e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801b620:	2cff      	cmp	r4, #255	; 0xff
 801b622:	d020      	beq.n	801b666 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801b624:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b626:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b62a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801b62c:	4367      	muls	r7, r4
 801b62e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b630:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b634:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801b636:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b63a:	fb04 fa0a 	mul.w	sl, r4, sl
 801b63e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b642:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b646:	44bc      	add	ip, r7
 801b648:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b64c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b650:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b654:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b658:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b65c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b660:	ea4c 040a 	orr.w	r4, ip, sl
 801b664:	9410      	str	r4, [sp, #64]	; 0x40
 801b666:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b668:	2cff      	cmp	r4, #255	; 0xff
 801b66a:	d020      	beq.n	801b6ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801b66c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b66e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b672:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b674:	4367      	muls	r7, r4
 801b676:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b678:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b67c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b67e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b682:	fb04 fa0a 	mul.w	sl, r4, sl
 801b686:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b68a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b68e:	44bc      	add	ip, r7
 801b690:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b694:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b698:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b69c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b6a0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b6a4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b6a8:	ea4c 040a 	orr.w	r4, ip, sl
 801b6ac:	940b      	str	r4, [sp, #44]	; 0x2c
 801b6ae:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b6b0:	2cff      	cmp	r4, #255	; 0xff
 801b6b2:	d020      	beq.n	801b6f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801b6b4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b6b6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b6ba:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b6bc:	4367      	muls	r7, r4
 801b6be:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b6c0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b6c4:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b6c6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b6ca:	fb04 fa0a 	mul.w	sl, r4, sl
 801b6ce:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b6d2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b6d6:	44bc      	add	ip, r7
 801b6d8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b6dc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b6e0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b6e4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b6e8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b6ec:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b6f0:	ea4c 040a 	orr.w	r4, ip, sl
 801b6f4:	9411      	str	r4, [sp, #68]	; 0x44
 801b6f6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b6f8:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b6fc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b6fe:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801b702:	fb0e f707 	mul.w	r7, lr, r7
 801b706:	fb02 770c 	mla	r7, r2, ip, r7
 801b70a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b70e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b710:	fb00 770c 	mla	r7, r0, ip, r7
 801b714:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b718:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b71a:	fb08 770c 	mla	r7, r8, ip, r7
 801b71e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801b722:	fb0e fe0c 	mul.w	lr, lr, ip
 801b726:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b72a:	fb02 e303 	mla	r3, r2, r3, lr
 801b72e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801b730:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b732:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801b736:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b738:	fb00 330a 	mla	r3, r0, sl, r3
 801b73c:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801b740:	fb08 3c0c 	mla	ip, r8, ip, r3
 801b744:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b746:	f8b9 0000 	ldrh.w	r0, [r9]
 801b74a:	434b      	muls	r3, r1
 801b74c:	0a3f      	lsrs	r7, r7, #8
 801b74e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b752:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b756:	1c59      	adds	r1, r3, #1
 801b758:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801b75c:	ea47 070c 	orr.w	r7, r7, ip
 801b760:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801b764:	1202      	asrs	r2, r0, #8
 801b766:	0c3b      	lsrs	r3, r7, #16
 801b768:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801b76c:	b2c9      	uxtb	r1, r1
 801b76e:	fb13 f304 	smulbb	r3, r3, r4
 801b772:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801b776:	fb02 3201 	mla	r2, r2, r1, r3
 801b77a:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801b77e:	10c3      	asrs	r3, r0, #3
 801b780:	b2ff      	uxtb	r7, r7
 801b782:	00c0      	lsls	r0, r0, #3
 801b784:	b292      	uxth	r2, r2
 801b786:	fb1c fc04 	smulbb	ip, ip, r4
 801b78a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801b78e:	b2c0      	uxtb	r0, r0
 801b790:	fb17 f704 	smulbb	r7, r7, r4
 801b794:	fb03 c301 	mla	r3, r3, r1, ip
 801b798:	fb00 7001 	mla	r0, r0, r1, r7
 801b79c:	f102 0c01 	add.w	ip, r2, #1
 801b7a0:	b280      	uxth	r0, r0
 801b7a2:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801b7a6:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 801b7aa:	1c42      	adds	r2, r0, #1
 801b7ac:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801b7b0:	b29b      	uxth	r3, r3
 801b7b2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b7b6:	ea42 020c 	orr.w	r2, r2, ip
 801b7ba:	f103 0c01 	add.w	ip, r3, #1
 801b7be:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801b7c2:	095b      	lsrs	r3, r3, #5
 801b7c4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b7c8:	431a      	orrs	r2, r3
 801b7ca:	f8a9 2000 	strh.w	r2, [r9]
 801b7ce:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801b7d0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b7d2:	441a      	add	r2, r3
 801b7d4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b7d6:	9229      	str	r2, [sp, #164]	; 0xa4
 801b7d8:	f109 0902 	add.w	r9, r9, #2
 801b7dc:	441d      	add	r5, r3
 801b7de:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b7e2:	e63d      	b.n	801b460 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801b7e4:	2800      	cmp	r0, #0
 801b7e6:	f43f aedd 	beq.w	801b5a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b7ea:	5c79      	ldrb	r1, [r7, r1]
 801b7ec:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b7f0:	910b      	str	r1, [sp, #44]	; 0x2c
 801b7f2:	0e09      	lsrs	r1, r1, #24
 801b7f4:	9114      	str	r1, [sp, #80]	; 0x50
 801b7f6:	e6d5      	b.n	801b5a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b7f8:	b01f      	add	sp, #124	; 0x7c
 801b7fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b7fe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801b7fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b802:	b089      	sub	sp, #36	; 0x24
 801b804:	9101      	str	r1, [sp, #4]
 801b806:	9801      	ldr	r0, [sp, #4]
 801b808:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 801b80c:	8800      	ldrh	r0, [r0, #0]
 801b80e:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 801b812:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801b816:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 801b81a:	1206      	asrs	r6, r0, #8
 801b81c:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 801b820:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b824:	9602      	str	r6, [sp, #8]
 801b826:	10c6      	asrs	r6, r0, #3
 801b828:	00c0      	lsls	r0, r0, #3
 801b82a:	b2c0      	uxtb	r0, r0
 801b82c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b830:	9004      	str	r0, [sp, #16]
 801b832:	2f00      	cmp	r7, #0
 801b834:	fb07 100c 	mla	r0, r7, ip, r1
 801b838:	9603      	str	r6, [sp, #12]
 801b83a:	eb02 0e00 	add.w	lr, r2, r0
 801b83e:	f2c0 810a 	blt.w	801ba56 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801b842:	45b8      	cmp	r8, r7
 801b844:	f340 8107 	ble.w	801ba56 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801b848:	2900      	cmp	r1, #0
 801b84a:	f2c0 8102 	blt.w	801ba52 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801b84e:	458c      	cmp	ip, r1
 801b850:	f340 80ff 	ble.w	801ba52 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801b854:	5c12      	ldrb	r2, [r2, r0]
 801b856:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801b85a:	1c4a      	adds	r2, r1, #1
 801b85c:	f100 80fe 	bmi.w	801ba5c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801b860:	4594      	cmp	ip, r2
 801b862:	f340 80fb 	ble.w	801ba5c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801b866:	2d00      	cmp	r5, #0
 801b868:	f000 80fa 	beq.w	801ba60 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801b86c:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801b870:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801b874:	3701      	adds	r7, #1
 801b876:	f100 80f7 	bmi.w	801ba68 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801b87a:	45b8      	cmp	r8, r7
 801b87c:	f340 80f4 	ble.w	801ba68 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801b880:	2c00      	cmp	r4, #0
 801b882:	f000 80f4 	beq.w	801ba6e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801b886:	2900      	cmp	r1, #0
 801b888:	eb0e 020c 	add.w	r2, lr, ip
 801b88c:	f2c0 80ea 	blt.w	801ba64 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801b890:	458c      	cmp	ip, r1
 801b892:	f340 80e7 	ble.w	801ba64 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801b896:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801b89a:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801b89e:	3101      	adds	r1, #1
 801b8a0:	f100 80e8 	bmi.w	801ba74 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801b8a4:	458c      	cmp	ip, r1
 801b8a6:	f340 80e5 	ble.w	801ba74 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801b8aa:	2d00      	cmp	r5, #0
 801b8ac:	f000 80e4 	beq.w	801ba78 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801b8b0:	7852      	ldrb	r2, [r2, #1]
 801b8b2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801b8b6:	0e0b      	lsrs	r3, r1, #24
 801b8b8:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801b8bc:	9300      	str	r3, [sp, #0]
 801b8be:	b2a4      	uxth	r4, r4
 801b8c0:	b2ab      	uxth	r3, r5
 801b8c2:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 801b8c6:	fb03 f904 	mul.w	r9, r3, r4
 801b8ca:	fb0a f505 	mul.w	r5, sl, r5
 801b8ce:	011b      	lsls	r3, r3, #4
 801b8d0:	eba3 0e09 	sub.w	lr, r3, r9
 801b8d4:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 801b8d8:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 801b8dc:	0a28      	lsrs	r0, r5, #8
 801b8de:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b8e2:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 801b8e6:	4405      	add	r5, r0
 801b8e8:	0a2d      	lsrs	r5, r5, #8
 801b8ea:	fb0a f303 	mul.w	r3, sl, r3
 801b8ee:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 801b8f2:	9005      	str	r0, [sp, #20]
 801b8f4:	f503 7080 	add.w	r0, r3, #256	; 0x100
 801b8f8:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801b8fc:	0a1b      	lsrs	r3, r3, #8
 801b8fe:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801b902:	9306      	str	r3, [sp, #24]
 801b904:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 801b908:	fb0b f303 	mul.w	r3, fp, r3
 801b90c:	0a1d      	lsrs	r5, r3, #8
 801b90e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b912:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801b916:	fb0b f606 	mul.w	r6, fp, r6
 801b91a:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 801b91e:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 801b922:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b926:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801b92a:	fb08 f707 	mul.w	r7, r8, r7
 801b92e:	441d      	add	r5, r3
 801b930:	f506 7380 	add.w	r3, r6, #256	; 0x100
 801b934:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801b938:	f507 7380 	add.w	r3, r7, #256	; 0x100
 801b93c:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801b940:	fb08 fc0c 	mul.w	ip, r8, ip
 801b944:	0a1b      	lsrs	r3, r3, #8
 801b946:	9307      	str	r3, [sp, #28]
 801b948:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801b94c:	0e0b      	lsrs	r3, r1, #24
 801b94e:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 801b952:	435f      	muls	r7, r3
 801b954:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801b958:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b95c:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801b960:	4460      	add	r0, ip
 801b962:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b966:	b2a4      	uxth	r4, r4
 801b968:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b96c:	0a2d      	lsrs	r5, r5, #8
 801b96e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801b972:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b976:	fa1f fe8e 	uxth.w	lr, lr
 801b97a:	4359      	muls	r1, r3
 801b97c:	1b12      	subs	r2, r2, r4
 801b97e:	9b05      	ldr	r3, [sp, #20]
 801b980:	44bc      	add	ip, r7
 801b982:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b986:	b292      	uxth	r2, r2
 801b988:	fb05 f50e 	mul.w	r5, r5, lr
 801b98c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b990:	fb03 5502 	mla	r5, r3, r2, r5
 801b994:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b998:	9b06      	ldr	r3, [sp, #24]
 801b99a:	f501 7780 	add.w	r7, r1, #256	; 0x100
 801b99e:	0a36      	lsrs	r6, r6, #8
 801b9a0:	0a00      	lsrs	r0, r0, #8
 801b9a2:	fb0c 5509 	mla	r5, ip, r9, r5
 801b9a6:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b9aa:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801b9ae:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b9b2:	fb00 5504 	mla	r5, r0, r4, r5
 801b9b6:	fb0e f606 	mul.w	r6, lr, r6
 801b9ba:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801b9be:	0a09      	lsrs	r1, r1, #8
 801b9c0:	9b07      	ldr	r3, [sp, #28]
 801b9c2:	fb02 6000 	mla	r0, r2, r0, r6
 801b9c6:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801b9ca:	fb09 0001 	mla	r0, r9, r1, r0
 801b9ce:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b9d2:	fb0e fe0b 	mul.w	lr, lr, fp
 801b9d6:	fb04 0003 	mla	r0, r4, r3, r0
 801b9da:	fb02 e20a 	mla	r2, r2, sl, lr
 801b9de:	9b00      	ldr	r3, [sp, #0]
 801b9e0:	fb04 2408 	mla	r4, r4, r8, r2
 801b9e4:	fb09 4903 	mla	r9, r9, r3, r4
 801b9e8:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801b9ec:	9b02      	ldr	r3, [sp, #8]
 801b9ee:	9a04      	ldr	r2, [sp, #16]
 801b9f0:	fa5f f989 	uxtb.w	r9, r9
 801b9f4:	fb03 f109 	mul.w	r1, r3, r9
 801b9f8:	9b03      	ldr	r3, [sp, #12]
 801b9fa:	0a2d      	lsrs	r5, r5, #8
 801b9fc:	0a00      	lsrs	r0, r0, #8
 801b9fe:	fb03 f309 	mul.w	r3, r3, r9
 801ba02:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801ba06:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801ba0a:	4305      	orrs	r5, r0
 801ba0c:	fb02 f909 	mul.w	r9, r2, r9
 801ba10:	1c58      	adds	r0, r3, #1
 801ba12:	1c4a      	adds	r2, r1, #1
 801ba14:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801ba18:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ba1c:	0a2b      	lsrs	r3, r5, #8
 801ba1e:	0c2a      	lsrs	r2, r5, #16
 801ba20:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801ba24:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801ba28:	00db      	lsls	r3, r3, #3
 801ba2a:	0212      	lsls	r2, r2, #8
 801ba2c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801ba30:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ba34:	4313      	orrs	r3, r2
 801ba36:	f109 0201 	add.w	r2, r9, #1
 801ba3a:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801ba3e:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801ba42:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801ba46:	431d      	orrs	r5, r3
 801ba48:	9b01      	ldr	r3, [sp, #4]
 801ba4a:	801d      	strh	r5, [r3, #0]
 801ba4c:	b009      	add	sp, #36	; 0x24
 801ba4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ba52:	2000      	movs	r0, #0
 801ba54:	e701      	b.n	801b85a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801ba56:	2600      	movs	r6, #0
 801ba58:	4630      	mov	r0, r6
 801ba5a:	e70b      	b.n	801b874 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801ba5c:	2600      	movs	r6, #0
 801ba5e:	e709      	b.n	801b874 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801ba60:	462e      	mov	r6, r5
 801ba62:	e707      	b.n	801b874 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801ba64:	2700      	movs	r7, #0
 801ba66:	e71a      	b.n	801b89e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801ba68:	2100      	movs	r1, #0
 801ba6a:	460f      	mov	r7, r1
 801ba6c:	e723      	b.n	801b8b6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801ba6e:	4621      	mov	r1, r4
 801ba70:	4627      	mov	r7, r4
 801ba72:	e720      	b.n	801b8b6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801ba74:	2100      	movs	r1, #0
 801ba76:	e71e      	b.n	801b8b6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801ba78:	4629      	mov	r1, r5
 801ba7a:	e71c      	b.n	801b8b6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801ba7c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ba7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ba80:	b09b      	sub	sp, #108	; 0x6c
 801ba82:	9218      	str	r2, [sp, #96]	; 0x60
 801ba84:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801ba86:	9116      	str	r1, [sp, #88]	; 0x58
 801ba88:	9307      	str	r3, [sp, #28]
 801ba8a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801ba8e:	9019      	str	r0, [sp, #100]	; 0x64
 801ba90:	6850      	ldr	r0, [r2, #4]
 801ba92:	6812      	ldr	r2, [r2, #0]
 801ba94:	9d26      	ldr	r5, [sp, #152]	; 0x98
 801ba96:	fb00 1303 	mla	r3, r0, r3, r1
 801ba9a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ba9e:	930a      	str	r3, [sp, #40]	; 0x28
 801baa0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801baa2:	681b      	ldr	r3, [r3, #0]
 801baa4:	930f      	str	r3, [sp, #60]	; 0x3c
 801baa6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801baa8:	685e      	ldr	r6, [r3, #4]
 801baaa:	3604      	adds	r6, #4
 801baac:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801baae:	2b00      	cmp	r3, #0
 801bab0:	dc03      	bgt.n	801baba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801bab2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801bab4:	2b00      	cmp	r3, #0
 801bab6:	f340 8373 	ble.w	801c1a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801baba:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801babc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bac0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801bac4:	1e48      	subs	r0, r1, #1
 801bac6:	1e57      	subs	r7, r2, #1
 801bac8:	9b07      	ldr	r3, [sp, #28]
 801baca:	2b00      	cmp	r3, #0
 801bacc:	f340 8190 	ble.w	801bdf0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801bad0:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801bad2:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801bad6:	ea4f 4325 	mov.w	r3, r5, asr #16
 801bada:	d406      	bmi.n	801baea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801badc:	4584      	cmp	ip, r0
 801bade:	da04      	bge.n	801baea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801bae0:	2b00      	cmp	r3, #0
 801bae2:	db02      	blt.n	801baea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801bae4:	42bb      	cmp	r3, r7
 801bae6:	f2c0 8184 	blt.w	801bdf2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801baea:	f11c 0c01 	adds.w	ip, ip, #1
 801baee:	f100 8172 	bmi.w	801bdd6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801baf2:	4561      	cmp	r1, ip
 801baf4:	f2c0 816f 	blt.w	801bdd6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801baf8:	3301      	adds	r3, #1
 801bafa:	f100 816c 	bmi.w	801bdd6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801bafe:	429a      	cmp	r2, r3
 801bb00:	f2c0 8169 	blt.w	801bdd6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801bb04:	9b07      	ldr	r3, [sp, #28]
 801bb06:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801bb08:	9317      	str	r3, [sp, #92]	; 0x5c
 801bb0a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801bb0c:	2b00      	cmp	r3, #0
 801bb0e:	f340 818e 	ble.w	801be2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 801bb12:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801bb14:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801bb18:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801bb1a:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801bb1e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801bb20:	141b      	asrs	r3, r3, #16
 801bb22:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801bb26:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801bb2a:	f100 81d1 	bmi.w	801bed0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801bb2e:	f101 38ff 	add.w	r8, r1, #4294967295
 801bb32:	4543      	cmp	r3, r8
 801bb34:	f280 81cc 	bge.w	801bed0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801bb38:	f1bc 0f00 	cmp.w	ip, #0
 801bb3c:	f2c0 81c8 	blt.w	801bed0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801bb40:	f10e 38ff 	add.w	r8, lr, #4294967295
 801bb44:	45c4      	cmp	ip, r8
 801bb46:	f280 81c3 	bge.w	801bed0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801bb4a:	b209      	sxth	r1, r1
 801bb4c:	fb0c 3301 	mla	r3, ip, r1, r3
 801bb50:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801bb52:	eb04 0803 	add.w	r8, r4, r3
 801bb56:	5ce3      	ldrb	r3, [r4, r3]
 801bb58:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801bb5c:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801bb60:	2a00      	cmp	r2, #0
 801bb62:	f000 81aa 	beq.w	801beba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801bb66:	f898 c001 	ldrb.w	ip, [r8, #1]
 801bb6a:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801bb6e:	940b      	str	r4, [sp, #44]	; 0x2c
 801bb70:	0e24      	lsrs	r4, r4, #24
 801bb72:	9412      	str	r4, [sp, #72]	; 0x48
 801bb74:	b178      	cbz	r0, 801bb96 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801bb76:	eb08 0c01 	add.w	ip, r8, r1
 801bb7a:	f818 1001 	ldrb.w	r1, [r8, r1]
 801bb7e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bb82:	9108      	str	r1, [sp, #32]
 801bb84:	0e09      	lsrs	r1, r1, #24
 801bb86:	9110      	str	r1, [sp, #64]	; 0x40
 801bb88:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801bb8c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bb90:	910c      	str	r1, [sp, #48]	; 0x30
 801bb92:	0e09      	lsrs	r1, r1, #24
 801bb94:	9113      	str	r1, [sp, #76]	; 0x4c
 801bb96:	b292      	uxth	r2, r2
 801bb98:	b280      	uxth	r0, r0
 801bb9a:	fb02 f900 	mul.w	r9, r2, r0
 801bb9e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801bba2:	0112      	lsls	r2, r2, #4
 801bba4:	eba2 0809 	sub.w	r8, r2, r9
 801bba8:	b280      	uxth	r0, r0
 801bbaa:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801bbae:	9912      	ldr	r1, [sp, #72]	; 0x48
 801bbb0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801bbb2:	fa1f f888 	uxth.w	r8, r8
 801bbb6:	1a12      	subs	r2, r2, r0
 801bbb8:	b292      	uxth	r2, r2
 801bbba:	fb08 f101 	mul.w	r1, r8, r1
 801bbbe:	fb02 110e 	mla	r1, r2, lr, r1
 801bbc2:	fb00 1104 	mla	r1, r0, r4, r1
 801bbc6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801bbc8:	fb09 1104 	mla	r1, r9, r4, r1
 801bbcc:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801bbd0:	2900      	cmp	r1, #0
 801bbd2:	f000 80f5 	beq.w	801bdc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801bbd6:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801bbda:	d01b      	beq.n	801bc14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801bbdc:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801bbe0:	fb0e fa0a 	mul.w	sl, lr, sl
 801bbe4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801bbe8:	fb0e fe03 	mul.w	lr, lr, r3
 801bbec:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801bbf0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801bbf4:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801bbf8:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801bbfc:	4453      	add	r3, sl
 801bbfe:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801bc02:	0a1b      	lsrs	r3, r3, #8
 801bc04:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bc08:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801bc0c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801bc10:	ea43 030c 	orr.w	r3, r3, ip
 801bc14:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801bc16:	2cff      	cmp	r4, #255	; 0xff
 801bc18:	d021      	beq.n	801bc5e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801bc1a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801bc1c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801bc20:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801bc22:	fb04 fb0b 	mul.w	fp, r4, fp
 801bc26:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801bc28:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801bc2c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801bc2e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bc32:	fb04 fa0a 	mul.w	sl, r4, sl
 801bc36:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bc3a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801bc3e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801bc42:	44de      	add	lr, fp
 801bc44:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801bc48:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bc4c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bc50:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bc54:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bc58:	ea4e 040a 	orr.w	r4, lr, sl
 801bc5c:	940b      	str	r4, [sp, #44]	; 0x2c
 801bc5e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801bc60:	2cff      	cmp	r4, #255	; 0xff
 801bc62:	d021      	beq.n	801bca8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801bc64:	9c08      	ldr	r4, [sp, #32]
 801bc66:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801bc6a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801bc6c:	fb04 fb0b 	mul.w	fp, r4, fp
 801bc70:	9c08      	ldr	r4, [sp, #32]
 801bc72:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801bc76:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801bc78:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bc7c:	fb04 fa0a 	mul.w	sl, r4, sl
 801bc80:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bc84:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801bc88:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801bc8c:	44de      	add	lr, fp
 801bc8e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801bc92:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bc96:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bc9a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bc9e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bca2:	ea4e 040a 	orr.w	r4, lr, sl
 801bca6:	9408      	str	r4, [sp, #32]
 801bca8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801bcaa:	2cff      	cmp	r4, #255	; 0xff
 801bcac:	d021      	beq.n	801bcf2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801bcae:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801bcb0:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801bcb4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801bcb6:	fb04 fb0b 	mul.w	fp, r4, fp
 801bcba:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801bcbc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801bcc0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801bcc2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bcc6:	fb04 fa0a 	mul.w	sl, r4, sl
 801bcca:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bcce:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801bcd2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801bcd6:	44de      	add	lr, fp
 801bcd8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801bcdc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bce0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bce4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bce8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bcec:	ea4e 040a 	orr.w	r4, lr, sl
 801bcf0:	940c      	str	r4, [sp, #48]	; 0x30
 801bcf2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801bcf4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801bcf8:	9c08      	ldr	r4, [sp, #32]
 801bcfa:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801bcfe:	fb08 fc0c 	mul.w	ip, r8, ip
 801bd02:	fb02 cc0e 	mla	ip, r2, lr, ip
 801bd06:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801bd0a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801bd0c:	fb00 cc0e 	mla	ip, r0, lr, ip
 801bd10:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801bd14:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801bd16:	fb09 cc0e 	mla	ip, r9, lr, ip
 801bd1a:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801bd1e:	fb08 f80e 	mul.w	r8, r8, lr
 801bd22:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801bd26:	fb02 8303 	mla	r3, r2, r3, r8
 801bd2a:	9a08      	ldr	r2, [sp, #32]
 801bd2c:	f8b7 8000 	ldrh.w	r8, [r7]
 801bd30:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801bd34:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801bd36:	fb00 330a 	mla	r3, r0, sl, r3
 801bd3a:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801bd3e:	fb09 3900 	mla	r9, r9, r0, r3
 801bd42:	43c9      	mvns	r1, r1
 801bd44:	ea4f 2228 	mov.w	r2, r8, asr #8
 801bd48:	fa5f fe81 	uxtb.w	lr, r1
 801bd4c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bd50:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801bd54:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801bd58:	fb02 f20e 	mul.w	r2, r2, lr
 801bd5c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bd60:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801bd64:	ea4c 0c09 	orr.w	ip, ip, r9
 801bd68:	1c53      	adds	r3, r2, #1
 801bd6a:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801bd6e:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801bd72:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801bd76:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801bd7a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801bd7e:	4a63      	ldr	r2, [pc, #396]	; (801bf0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801bd80:	fb00 f00e 	mul.w	r0, r0, lr
 801bd84:	b2db      	uxtb	r3, r3
 801bd86:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801bd8a:	1c43      	adds	r3, r0, #1
 801bd8c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801bd90:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801bd94:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801bd98:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801bd9c:	b2c9      	uxtb	r1, r1
 801bd9e:	00db      	lsls	r3, r3, #3
 801bda0:	fb01 f10e 	mul.w	r1, r1, lr
 801bda4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bda8:	4313      	orrs	r3, r2
 801bdaa:	1c4a      	adds	r2, r1, #1
 801bdac:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bdb0:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801bdb4:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801bdb8:	ea4c 0c03 	orr.w	ip, ip, r3
 801bdbc:	f8a7 c000 	strh.w	ip, [r7]
 801bdc0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801bdc2:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801bdc4:	441a      	add	r2, r3
 801bdc6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bdc8:	9225      	str	r2, [sp, #148]	; 0x94
 801bdca:	441d      	add	r5, r3
 801bdcc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801bdce:	3b01      	subs	r3, #1
 801bdd0:	3702      	adds	r7, #2
 801bdd2:	9317      	str	r3, [sp, #92]	; 0x5c
 801bdd4:	e699      	b.n	801bb0a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801bdd6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801bdd8:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801bdda:	441c      	add	r4, r3
 801bddc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bdde:	9425      	str	r4, [sp, #148]	; 0x94
 801bde0:	441d      	add	r5, r3
 801bde2:	9b07      	ldr	r3, [sp, #28]
 801bde4:	3b01      	subs	r3, #1
 801bde6:	9307      	str	r3, [sp, #28]
 801bde8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801bdea:	3302      	adds	r3, #2
 801bdec:	930a      	str	r3, [sp, #40]	; 0x28
 801bdee:	e66b      	b.n	801bac8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801bdf0:	d024      	beq.n	801be3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801bdf2:	9b07      	ldr	r3, [sp, #28]
 801bdf4:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801bdf6:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801bdf8:	3b01      	subs	r3, #1
 801bdfa:	fb00 4003 	mla	r0, r0, r3, r4
 801bdfe:	1400      	asrs	r0, r0, #16
 801be00:	f53f ae80 	bmi.w	801bb04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801be04:	3901      	subs	r1, #1
 801be06:	4288      	cmp	r0, r1
 801be08:	f6bf ae7c 	bge.w	801bb04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801be0c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801be0e:	fb01 5303 	mla	r3, r1, r3, r5
 801be12:	141b      	asrs	r3, r3, #16
 801be14:	f53f ae76 	bmi.w	801bb04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801be18:	3a01      	subs	r2, #1
 801be1a:	4293      	cmp	r3, r2
 801be1c:	f6bf ae72 	bge.w	801bb04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801be20:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801be24:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801be28:	f1bb 0f00 	cmp.w	fp, #0
 801be2c:	dc70      	bgt.n	801bf10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801be2e:	9b07      	ldr	r3, [sp, #28]
 801be30:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801be34:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801be36:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801be3a:	930a      	str	r3, [sp, #40]	; 0x28
 801be3c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801be3e:	2b00      	cmp	r3, #0
 801be40:	f340 81ae 	ble.w	801c1a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801be44:	ee30 0a04 	vadd.f32	s0, s0, s8
 801be48:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801be4c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801be50:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801be52:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801be56:	ee31 1a05 	vadd.f32	s2, s2, s10
 801be5a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801be5e:	eef0 6a62 	vmov.f32	s13, s5
 801be62:	ee61 7a27 	vmul.f32	s15, s2, s15
 801be66:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801be6a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801be6e:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 801be72:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801be76:	eef0 6a43 	vmov.f32	s13, s6
 801be7a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801be7e:	ee12 2a90 	vmov	r2, s5
 801be82:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801be86:	fb92 f3f3 	sdiv	r3, r2, r3
 801be8a:	ee13 2a10 	vmov	r2, s6
 801be8e:	9327      	str	r3, [sp, #156]	; 0x9c
 801be90:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801be92:	fb92 f3f3 	sdiv	r3, r2, r3
 801be96:	9328      	str	r3, [sp, #160]	; 0xa0
 801be98:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801be9a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801be9c:	3b01      	subs	r3, #1
 801be9e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bea2:	9316      	str	r3, [sp, #88]	; 0x58
 801bea4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801bea6:	bf08      	it	eq
 801bea8:	4613      	moveq	r3, r2
 801beaa:	ee16 5a90 	vmov	r5, s13
 801beae:	9307      	str	r3, [sp, #28]
 801beb0:	eeb0 3a67 	vmov.f32	s6, s15
 801beb4:	eef0 2a47 	vmov.f32	s5, s14
 801beb8:	e5f8      	b.n	801baac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801beba:	2800      	cmp	r0, #0
 801bebc:	f43f ae6b 	beq.w	801bb96 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801bec0:	f818 1001 	ldrb.w	r1, [r8, r1]
 801bec4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bec8:	9108      	str	r1, [sp, #32]
 801beca:	0e09      	lsrs	r1, r1, #24
 801becc:	9110      	str	r1, [sp, #64]	; 0x40
 801bece:	e662      	b.n	801bb96 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801bed0:	f113 0801 	adds.w	r8, r3, #1
 801bed4:	f53f af74 	bmi.w	801bdc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801bed8:	4541      	cmp	r1, r8
 801beda:	f6ff af71 	blt.w	801bdc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801bede:	f11c 0801 	adds.w	r8, ip, #1
 801bee2:	f53f af6d 	bmi.w	801bdc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801bee6:	45c6      	cmp	lr, r8
 801bee8:	f6ff af6a 	blt.w	801bdc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801beec:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801bef0:	b209      	sxth	r1, r1
 801bef2:	fa0f f38e 	sxth.w	r3, lr
 801bef6:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801befa:	9301      	str	r3, [sp, #4]
 801befc:	9100      	str	r1, [sp, #0]
 801befe:	4633      	mov	r3, r6
 801bf00:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801bf02:	9819      	ldr	r0, [sp, #100]	; 0x64
 801bf04:	4639      	mov	r1, r7
 801bf06:	f7ff fc7a 	bl	801b7fe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801bf0a:	e759      	b.n	801bdc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801bf0c:	fffff800 	.word	0xfffff800
 801bf10:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801bf12:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801bf14:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801bf18:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801bf1a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bf1e:	1427      	asrs	r7, r4, #16
 801bf20:	142b      	asrs	r3, r5, #16
 801bf22:	fb01 7303 	mla	r3, r1, r3, r7
 801bf26:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801bf28:	18e7      	adds	r7, r4, r3
 801bf2a:	5ce3      	ldrb	r3, [r4, r3]
 801bf2c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801bf30:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801bf34:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801bf38:	2a00      	cmp	r2, #0
 801bf3a:	f000 8127 	beq.w	801c18c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801bf3e:	f897 e001 	ldrb.w	lr, [r7, #1]
 801bf42:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801bf46:	940d      	str	r4, [sp, #52]	; 0x34
 801bf48:	0e24      	lsrs	r4, r4, #24
 801bf4a:	9414      	str	r4, [sp, #80]	; 0x50
 801bf4c:	b170      	cbz	r0, 801bf6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801bf4e:	eb07 0e01 	add.w	lr, r7, r1
 801bf52:	5c79      	ldrb	r1, [r7, r1]
 801bf54:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bf58:	9109      	str	r1, [sp, #36]	; 0x24
 801bf5a:	0e09      	lsrs	r1, r1, #24
 801bf5c:	9111      	str	r1, [sp, #68]	; 0x44
 801bf5e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801bf62:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bf66:	910e      	str	r1, [sp, #56]	; 0x38
 801bf68:	0e09      	lsrs	r1, r1, #24
 801bf6a:	9115      	str	r1, [sp, #84]	; 0x54
 801bf6c:	b292      	uxth	r2, r2
 801bf6e:	b280      	uxth	r0, r0
 801bf70:	fb02 f800 	mul.w	r8, r2, r0
 801bf74:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801bf78:	0112      	lsls	r2, r2, #4
 801bf7a:	eba2 0e08 	sub.w	lr, r2, r8
 801bf7e:	b280      	uxth	r0, r0
 801bf80:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801bf84:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bf86:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bf88:	fa1f fe8e 	uxth.w	lr, lr
 801bf8c:	1a09      	subs	r1, r1, r0
 801bf8e:	b289      	uxth	r1, r1
 801bf90:	fb0e f202 	mul.w	r2, lr, r2
 801bf94:	fb01 220c 	mla	r2, r1, ip, r2
 801bf98:	fb00 2204 	mla	r2, r0, r4, r2
 801bf9c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bf9e:	fb08 2204 	mla	r2, r8, r4, r2
 801bfa2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801bfa6:	2a00      	cmp	r2, #0
 801bfa8:	f000 80e5 	beq.w	801c176 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801bfac:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801bfb0:	d019      	beq.n	801bfe6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801bfb2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801bfb6:	fb0c fa0a 	mul.w	sl, ip, sl
 801bfba:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801bfbe:	fb0c fc03 	mul.w	ip, ip, r3
 801bfc2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801bfc6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801bfca:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801bfce:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801bfd2:	4453      	add	r3, sl
 801bfd4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801bfd8:	0a1b      	lsrs	r3, r3, #8
 801bfda:	0a3f      	lsrs	r7, r7, #8
 801bfdc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801bfe0:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801bfe4:	433b      	orrs	r3, r7
 801bfe6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bfe8:	2cff      	cmp	r4, #255	; 0xff
 801bfea:	d020      	beq.n	801c02e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801bfec:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bfee:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801bff2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bff4:	4367      	muls	r7, r4
 801bff6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bff8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801bffc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bffe:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c002:	fb04 fa0a 	mul.w	sl, r4, sl
 801c006:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801c00a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c00e:	44bc      	add	ip, r7
 801c010:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801c014:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c018:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c01c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c020:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c024:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c028:	ea4c 040a 	orr.w	r4, ip, sl
 801c02c:	940d      	str	r4, [sp, #52]	; 0x34
 801c02e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801c030:	2cff      	cmp	r4, #255	; 0xff
 801c032:	d020      	beq.n	801c076 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801c034:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801c036:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801c03a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801c03c:	4367      	muls	r7, r4
 801c03e:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801c040:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801c044:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801c046:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c04a:	fb04 fa0a 	mul.w	sl, r4, sl
 801c04e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801c052:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c056:	44bc      	add	ip, r7
 801c058:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801c05c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c060:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c064:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c068:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c06c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c070:	ea4c 040a 	orr.w	r4, ip, sl
 801c074:	9409      	str	r4, [sp, #36]	; 0x24
 801c076:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801c078:	2cff      	cmp	r4, #255	; 0xff
 801c07a:	d020      	beq.n	801c0be <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801c07c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c07e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801c082:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801c084:	4367      	muls	r7, r4
 801c086:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c088:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801c08c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801c08e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c092:	fb04 fa0a 	mul.w	sl, r4, sl
 801c096:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801c09a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c09e:	44bc      	add	ip, r7
 801c0a0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801c0a4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c0a8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c0ac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c0b0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c0b4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c0b8:	ea4c 040a 	orr.w	r4, ip, sl
 801c0bc:	940e      	str	r4, [sp, #56]	; 0x38
 801c0be:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c0c0:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801c0c4:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801c0c6:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801c0ca:	fb0e f707 	mul.w	r7, lr, r7
 801c0ce:	fb01 770c 	mla	r7, r1, ip, r7
 801c0d2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801c0d6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c0d8:	fb00 770c 	mla	r7, r0, ip, r7
 801c0dc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801c0e0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c0e2:	fb08 770c 	mla	r7, r8, ip, r7
 801c0e6:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801c0ea:	fb0e fe0c 	mul.w	lr, lr, ip
 801c0ee:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801c0f2:	fb01 e303 	mla	r3, r1, r3, lr
 801c0f6:	9909      	ldr	r1, [sp, #36]	; 0x24
 801c0f8:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801c0fc:	990e      	ldr	r1, [sp, #56]	; 0x38
 801c0fe:	fb00 330a 	mla	r3, r0, sl, r3
 801c102:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801c106:	fb08 3c0c 	mla	ip, r8, ip, r3
 801c10a:	f8b9 3000 	ldrh.w	r3, [r9]
 801c10e:	43d2      	mvns	r2, r2
 801c110:	1218      	asrs	r0, r3, #8
 801c112:	b2d2      	uxtb	r2, r2
 801c114:	10d9      	asrs	r1, r3, #3
 801c116:	0a3f      	lsrs	r7, r7, #8
 801c118:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c11c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c120:	00db      	lsls	r3, r3, #3
 801c122:	4350      	muls	r0, r2
 801c124:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801c128:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801c12c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c130:	b2db      	uxtb	r3, r3
 801c132:	ea47 070c 	orr.w	r7, r7, ip
 801c136:	4351      	muls	r1, r2
 801c138:	4353      	muls	r3, r2
 801c13a:	1c42      	adds	r2, r0, #1
 801c13c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c140:	0c3a      	lsrs	r2, r7, #16
 801c142:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c146:	4a18      	ldr	r2, [pc, #96]	; (801c1a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801c148:	b2c0      	uxtb	r0, r0
 801c14a:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801c14e:	1c4a      	adds	r2, r1, #1
 801c150:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c154:	0a3a      	lsrs	r2, r7, #8
 801c156:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c15a:	00c9      	lsls	r1, r1, #3
 801c15c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c160:	4301      	orrs	r1, r0
 801c162:	1c58      	adds	r0, r3, #1
 801c164:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801c168:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801c16c:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801c170:	4308      	orrs	r0, r1
 801c172:	f8a9 0000 	strh.w	r0, [r9]
 801c176:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801c178:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801c17a:	441a      	add	r2, r3
 801c17c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c17e:	9225      	str	r2, [sp, #148]	; 0x94
 801c180:	f109 0902 	add.w	r9, r9, #2
 801c184:	441d      	add	r5, r3
 801c186:	f10b 3bff 	add.w	fp, fp, #4294967295
 801c18a:	e64d      	b.n	801be28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 801c18c:	2800      	cmp	r0, #0
 801c18e:	f43f aeed 	beq.w	801bf6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801c192:	5c79      	ldrb	r1, [r7, r1]
 801c194:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c198:	9109      	str	r1, [sp, #36]	; 0x24
 801c19a:	0e09      	lsrs	r1, r1, #24
 801c19c:	9111      	str	r1, [sp, #68]	; 0x44
 801c19e:	e6e5      	b.n	801bf6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801c1a0:	b01b      	add	sp, #108	; 0x6c
 801c1a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c1a6:	bf00      	nop
 801c1a8:	fffff800 	.word	0xfffff800

0801c1ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801c1ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c1b0:	b085      	sub	sp, #20
 801c1b2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801c1b6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801c1ba:	9103      	str	r1, [sp, #12]
 801c1bc:	fb00 7406 	mla	r4, r0, r6, r7
 801c1c0:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801c1c4:	2800      	cmp	r0, #0
 801c1c6:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801c1ca:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801c1ce:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801c1d2:	9501      	str	r5, [sp, #4]
 801c1d4:	eb03 0904 	add.w	r9, r3, r4
 801c1d8:	f2c0 8150 	blt.w	801c47c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801c1dc:	4583      	cmp	fp, r0
 801c1de:	f340 814d 	ble.w	801c47c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801c1e2:	2f00      	cmp	r7, #0
 801c1e4:	f2c0 8146 	blt.w	801c474 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801c1e8:	42be      	cmp	r6, r7
 801c1ea:	f340 8143 	ble.w	801c474 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801c1ee:	f813 c004 	ldrb.w	ip, [r3, r4]
 801c1f2:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801c1f6:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801c1fa:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801c1fe:	4355      	muls	r5, r2
 801c200:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c204:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801c208:	fb0c f203 	mul.w	r2, ip, r3
 801c20c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801c210:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801c214:	441d      	add	r5, r3
 801c216:	f102 0320 	add.w	r3, r2, #32
 801c21a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c21e:	0a1b      	lsrs	r3, r3, #8
 801c220:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801c224:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c228:	431c      	orrs	r4, r3
 801c22a:	1c7b      	adds	r3, r7, #1
 801c22c:	f100 812b 	bmi.w	801c486 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801c230:	429e      	cmp	r6, r3
 801c232:	f340 8128 	ble.w	801c486 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801c236:	2900      	cmp	r1, #0
 801c238:	f000 8128 	beq.w	801c48c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801c23c:	9a01      	ldr	r2, [sp, #4]
 801c23e:	f899 3001 	ldrb.w	r3, [r9, #1]
 801c242:	8855      	ldrh	r5, [r2, #2]
 801c244:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801c248:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801c24c:	fb08 f802 	mul.w	r8, r8, r2
 801c250:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c254:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801c258:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801c25c:	435d      	muls	r5, r3
 801c25e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c262:	44d0      	add	r8, sl
 801c264:	f105 0a20 	add.w	sl, r5, #32
 801c268:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801c26c:	0a2d      	lsrs	r5, r5, #8
 801c26e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801c272:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c276:	432a      	orrs	r2, r5
 801c278:	3001      	adds	r0, #1
 801c27a:	f100 810d 	bmi.w	801c498 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801c27e:	4583      	cmp	fp, r0
 801c280:	f340 810a 	ble.w	801c498 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801c284:	f1be 0f00 	cmp.w	lr, #0
 801c288:	f000 810b 	beq.w	801c4a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801c28c:	2f00      	cmp	r7, #0
 801c28e:	f2c0 8100 	blt.w	801c492 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801c292:	42be      	cmp	r6, r7
 801c294:	f340 80fd 	ble.w	801c492 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801c298:	9801      	ldr	r0, [sp, #4]
 801c29a:	f819 5006 	ldrb.w	r5, [r9, r6]
 801c29e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801c2a2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801c2a6:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801c2aa:	fb0a fa00 	mul.w	sl, sl, r0
 801c2ae:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801c2b2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801c2b6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801c2ba:	fb05 f808 	mul.w	r8, r5, r8
 801c2be:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801c2c2:	4482      	add	sl, r0
 801c2c4:	f108 0020 	add.w	r0, r8, #32
 801c2c8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c2cc:	0a00      	lsrs	r0, r0, #8
 801c2ce:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801c2d2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c2d6:	ea4b 0b00 	orr.w	fp, fp, r0
 801c2da:	3701      	adds	r7, #1
 801c2dc:	f100 80e6 	bmi.w	801c4ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801c2e0:	42be      	cmp	r6, r7
 801c2e2:	f340 80e3 	ble.w	801c4ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801c2e6:	2900      	cmp	r1, #0
 801c2e8:	f000 80e3 	beq.w	801c4b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801c2ec:	3601      	adds	r6, #1
 801c2ee:	9801      	ldr	r0, [sp, #4]
 801c2f0:	f819 7006 	ldrb.w	r7, [r9, r6]
 801c2f4:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801c2f8:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801c2fc:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801c300:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c304:	fb09 f906 	mul.w	r9, r9, r6
 801c308:	fb07 f800 	mul.w	r8, r7, r0
 801c30c:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801c310:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801c314:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801c318:	44d1      	add	r9, sl
 801c31a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801c31e:	f108 0020 	add.w	r0, r8, #32
 801c322:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c326:	0a00      	lsrs	r0, r0, #8
 801c328:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c32c:	4330      	orrs	r0, r6
 801c32e:	b28e      	uxth	r6, r1
 801c330:	fa1f f98e 	uxth.w	r9, lr
 801c334:	fb06 f809 	mul.w	r8, r6, r9
 801c338:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801c33c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801c340:	0136      	lsls	r6, r6, #4
 801c342:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c346:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801c34a:	9601      	str	r6, [sp, #4]
 801c34c:	ea4a 0404 	orr.w	r4, sl, r4
 801c350:	fa1f f689 	uxth.w	r6, r9
 801c354:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c358:	fb11 f90e 	smulbb	r9, r1, lr
 801c35c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801c360:	9602      	str	r6, [sp, #8]
 801c362:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c366:	4626      	mov	r6, r4
 801c368:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c36c:	f1ce 0410 	rsb	r4, lr, #16
 801c370:	1a64      	subs	r4, r4, r1
 801c372:	ea4a 0202 	orr.w	r2, sl, r2
 801c376:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801c37a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c37e:	434a      	muls	r2, r1
 801c380:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801c384:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c388:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c38c:	fb04 2406 	mla	r4, r4, r6, r2
 801c390:	ea4a 0000 	orr.w	r0, sl, r0
 801c394:	fb09 4200 	mla	r2, r9, r0, r4
 801c398:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801c39c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801c3a0:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801c3a4:	ea44 0b0b 	orr.w	fp, r4, fp
 801c3a8:	9c01      	ldr	r4, [sp, #4]
 801c3aa:	9e02      	ldr	r6, [sp, #8]
 801c3ac:	9903      	ldr	r1, [sp, #12]
 801c3ae:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 801c3b2:	1ba4      	subs	r4, r4, r6
 801c3b4:	9e01      	ldr	r6, [sp, #4]
 801c3b6:	8808      	ldrh	r0, [r1, #0]
 801c3b8:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 801c3bc:	eba6 0608 	sub.w	r6, r6, r8
 801c3c0:	b2b6      	uxth	r6, r6
 801c3c2:	b2a4      	uxth	r4, r4
 801c3c4:	4373      	muls	r3, r6
 801c3c6:	fb0c 3304 	mla	r3, ip, r4, r3
 801c3ca:	9c02      	ldr	r4, [sp, #8]
 801c3cc:	fb04 3505 	mla	r5, r4, r5, r3
 801c3d0:	fb08 5707 	mla	r7, r8, r7, r5
 801c3d4:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801c3d8:	b289      	uxth	r1, r1
 801c3da:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801c3de:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801c3e2:	434f      	muls	r7, r1
 801c3e4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c3e8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c3ec:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c3f0:	1c7b      	adds	r3, r7, #1
 801c3f2:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c3f6:	ea42 0e0e 	orr.w	lr, r2, lr
 801c3fa:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801c3fe:	fa1f f28e 	uxth.w	r2, lr
 801c402:	1203      	asrs	r3, r0, #8
 801c404:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801c408:	b2ff      	uxtb	r7, r7
 801c40a:	1215      	asrs	r5, r2, #8
 801c40c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801c410:	fb13 f307 	smulbb	r3, r3, r7
 801c414:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c418:	fb05 3501 	mla	r5, r5, r1, r3
 801c41c:	10c3      	asrs	r3, r0, #3
 801c41e:	10d4      	asrs	r4, r2, #3
 801c420:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801c424:	fb13 f307 	smulbb	r3, r3, r7
 801c428:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801c42c:	fb04 3401 	mla	r4, r4, r1, r3
 801c430:	00c3      	lsls	r3, r0, #3
 801c432:	00d2      	lsls	r2, r2, #3
 801c434:	b2db      	uxtb	r3, r3
 801c436:	fb13 f307 	smulbb	r3, r3, r7
 801c43a:	b2d2      	uxtb	r2, r2
 801c43c:	fb02 3101 	mla	r1, r2, r1, r3
 801c440:	b2ad      	uxth	r5, r5
 801c442:	b289      	uxth	r1, r1
 801c444:	b2a4      	uxth	r4, r4
 801c446:	1c6b      	adds	r3, r5, #1
 801c448:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c44c:	1c62      	adds	r2, r4, #1
 801c44e:	1c4b      	adds	r3, r1, #1
 801c450:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801c454:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801c458:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c45c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c460:	0964      	lsrs	r4, r4, #5
 801c462:	432b      	orrs	r3, r5
 801c464:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801c468:	9a03      	ldr	r2, [sp, #12]
 801c46a:	4323      	orrs	r3, r4
 801c46c:	8013      	strh	r3, [r2, #0]
 801c46e:	b005      	add	sp, #20
 801c470:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c474:	f04f 0c00 	mov.w	ip, #0
 801c478:	4664      	mov	r4, ip
 801c47a:	e6d6      	b.n	801c22a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801c47c:	2300      	movs	r3, #0
 801c47e:	469c      	mov	ip, r3
 801c480:	461a      	mov	r2, r3
 801c482:	461c      	mov	r4, r3
 801c484:	e6f8      	b.n	801c278 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c486:	2300      	movs	r3, #0
 801c488:	461a      	mov	r2, r3
 801c48a:	e6f5      	b.n	801c278 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c48c:	460b      	mov	r3, r1
 801c48e:	460a      	mov	r2, r1
 801c490:	e6f2      	b.n	801c278 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c492:	2500      	movs	r5, #0
 801c494:	46ab      	mov	fp, r5
 801c496:	e720      	b.n	801c2da <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801c498:	2700      	movs	r7, #0
 801c49a:	463d      	mov	r5, r7
 801c49c:	4638      	mov	r0, r7
 801c49e:	46bb      	mov	fp, r7
 801c4a0:	e745      	b.n	801c32e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c4a2:	4677      	mov	r7, lr
 801c4a4:	4675      	mov	r5, lr
 801c4a6:	4670      	mov	r0, lr
 801c4a8:	46f3      	mov	fp, lr
 801c4aa:	e740      	b.n	801c32e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c4ac:	2700      	movs	r7, #0
 801c4ae:	4638      	mov	r0, r7
 801c4b0:	e73d      	b.n	801c32e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c4b2:	460f      	mov	r7, r1
 801c4b4:	4608      	mov	r0, r1
 801c4b6:	e73a      	b.n	801c32e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801c4b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c4b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c4bc:	b097      	sub	sp, #92	; 0x5c
 801c4be:	9214      	str	r2, [sp, #80]	; 0x50
 801c4c0:	9308      	str	r3, [sp, #32]
 801c4c2:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801c4c4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801c4c8:	9312      	str	r3, [sp, #72]	; 0x48
 801c4ca:	9111      	str	r1, [sp, #68]	; 0x44
 801c4cc:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801c4d0:	9015      	str	r0, [sp, #84]	; 0x54
 801c4d2:	6850      	ldr	r0, [r2, #4]
 801c4d4:	6812      	ldr	r2, [r2, #0]
 801c4d6:	fb00 1303 	mla	r3, r0, r3, r1
 801c4da:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c4de:	9309      	str	r3, [sp, #36]	; 0x24
 801c4e0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c4e2:	681b      	ldr	r3, [r3, #0]
 801c4e4:	930b      	str	r3, [sp, #44]	; 0x2c
 801c4e6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c4e8:	685b      	ldr	r3, [r3, #4]
 801c4ea:	930c      	str	r3, [sp, #48]	; 0x30
 801c4ec:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801c4f0:	930a      	str	r3, [sp, #40]	; 0x28
 801c4f2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c4f4:	2b00      	cmp	r3, #0
 801c4f6:	dc03      	bgt.n	801c500 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801c4f8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801c4fa:	2b00      	cmp	r3, #0
 801c4fc:	f340 83cb 	ble.w	801cc96 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801c500:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c502:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c506:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c50a:	1e48      	subs	r0, r1, #1
 801c50c:	1e55      	subs	r5, r2, #1
 801c50e:	9b08      	ldr	r3, [sp, #32]
 801c510:	2b00      	cmp	r3, #0
 801c512:	f340 81a3 	ble.w	801c85c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 801c516:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801c518:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c51a:	1436      	asrs	r6, r6, #16
 801c51c:	ea4f 4323 	mov.w	r3, r3, asr #16
 801c520:	d406      	bmi.n	801c530 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c522:	4286      	cmp	r6, r0
 801c524:	da04      	bge.n	801c530 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c526:	2b00      	cmp	r3, #0
 801c528:	db02      	blt.n	801c530 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c52a:	42ab      	cmp	r3, r5
 801c52c:	f2c0 8197 	blt.w	801c85e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801c530:	3601      	adds	r6, #1
 801c532:	f100 8184 	bmi.w	801c83e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c536:	42b1      	cmp	r1, r6
 801c538:	f2c0 8181 	blt.w	801c83e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c53c:	3301      	adds	r3, #1
 801c53e:	f100 817e 	bmi.w	801c83e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c542:	429a      	cmp	r2, r3
 801c544:	f2c0 817b 	blt.w	801c83e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c548:	9b08      	ldr	r3, [sp, #32]
 801c54a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801c54c:	9313      	str	r3, [sp, #76]	; 0x4c
 801c54e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801c552:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c554:	2b00      	cmp	r3, #0
 801c556:	f340 81a4 	ble.w	801c8a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801c55a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c55c:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801c55e:	1418      	asrs	r0, r3, #16
 801c560:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c562:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801c566:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c568:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801c56c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c56e:	142d      	asrs	r5, r5, #16
 801c570:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801c574:	f100 81f8 	bmi.w	801c968 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c578:	f102 3eff 	add.w	lr, r2, #4294967295
 801c57c:	4575      	cmp	r5, lr
 801c57e:	f280 81f3 	bge.w	801c968 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c582:	2800      	cmp	r0, #0
 801c584:	f2c0 81f0 	blt.w	801c968 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c588:	f103 3eff 	add.w	lr, r3, #4294967295
 801c58c:	4570      	cmp	r0, lr
 801c58e:	f280 81eb 	bge.w	801c968 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c592:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c594:	b212      	sxth	r2, r2
 801c596:	fb00 5002 	mla	r0, r0, r2, r5
 801c59a:	fa1f fe81 	uxth.w	lr, r1
 801c59e:	eb03 0a00 	add.w	sl, r3, r0
 801c5a2:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801c5a6:	f813 9000 	ldrb.w	r9, [r3, r0]
 801c5aa:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c5ae:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801c5b2:	b29b      	uxth	r3, r3
 801c5b4:	f1bc 0f00 	cmp.w	ip, #0
 801c5b8:	f000 81b9 	beq.w	801c92e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801c5bc:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801c5c0:	940d      	str	r4, [sp, #52]	; 0x34
 801c5c2:	eb0a 0b02 	add.w	fp, sl, r2
 801c5c6:	fa1f fa8c 	uxth.w	sl, ip
 801c5ca:	fb0a fe0e 	mul.w	lr, sl, lr
 801c5ce:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801c5d2:	fa1f fa8a 	uxth.w	sl, sl
 801c5d6:	eba5 050e 	sub.w	r5, r5, lr
 801c5da:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c5de:	940e      	str	r4, [sp, #56]	; 0x38
 801c5e0:	eba3 030a 	sub.w	r3, r3, sl
 801c5e4:	b2ad      	uxth	r5, r5
 801c5e6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c5e8:	b29b      	uxth	r3, r3
 801c5ea:	fb08 f505 	mul.w	r5, r8, r5
 801c5ee:	fb09 5303 	mla	r3, r9, r3, r5
 801c5f2:	fb0a 3304 	mla	r3, sl, r4, r3
 801c5f6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c5f8:	fb0e 3304 	mla	r3, lr, r4, r3
 801c5fc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c600:	2b00      	cmp	r3, #0
 801c602:	f000 810f 	beq.w	801c824 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c606:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c608:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c60c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801c610:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801c614:	f000 8190 	beq.w	801c938 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801c618:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801c61c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c620:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c624:	fb09 f000 	mul.w	r0, r9, r0
 801c628:	fb0a fe0e 	mul.w	lr, sl, lr
 801c62c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801c630:	f100 0b20 	add.w	fp, r0, #32
 801c634:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801c638:	44ce      	add	lr, r9
 801c63a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801c63e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c642:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c646:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c64a:	ea4e 0909 	orr.w	r9, lr, r9
 801c64e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801c652:	8868      	ldrh	r0, [r5, #2]
 801c654:	d019      	beq.n	801c68a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801c656:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801c65a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c65e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c662:	fb08 f800 	mul.w	r8, r8, r0
 801c666:	fb0a fe0e 	mul.w	lr, sl, lr
 801c66a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801c66e:	f108 0b20 	add.w	fp, r8, #32
 801c672:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801c676:	4486      	add	lr, r0
 801c678:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801c67c:	0a00      	lsrs	r0, r0, #8
 801c67e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c682:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c686:	ea4e 0000 	orr.w	r0, lr, r0
 801c68a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801c68e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c692:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801c696:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c69a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c69e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c6a2:	ea4e 0909 	orr.w	r9, lr, r9
 801c6a6:	ea4a 0000 	orr.w	r0, sl, r0
 801c6aa:	f1bc 0f00 	cmp.w	ip, #0
 801c6ae:	f000 8145 	beq.w	801c93c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801c6b2:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801c6b6:	3a01      	subs	r2, #1
 801c6b8:	0052      	lsls	r2, r2, #1
 801c6ba:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c6bc:	3202      	adds	r2, #2
 801c6be:	2cff      	cmp	r4, #255	; 0xff
 801c6c0:	eb05 0e02 	add.w	lr, r5, r2
 801c6c4:	5aaa      	ldrh	r2, [r5, r2]
 801c6c6:	d018      	beq.n	801c6fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801c6c8:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801c6cc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c6d0:	fb04 fa02 	mul.w	sl, r4, r2
 801c6d4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c6d8:	fb08 f805 	mul.w	r8, r8, r5
 801c6dc:	f10a 0520 	add.w	r5, sl, #32
 801c6e0:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801c6e4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801c6e8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c6ec:	4442      	add	r2, r8
 801c6ee:	0a2d      	lsrs	r5, r5, #8
 801c6f0:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801c6f4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c6f8:	432a      	orrs	r2, r5
 801c6fa:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c6fc:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801c700:	2cff      	cmp	r4, #255	; 0xff
 801c702:	d01a      	beq.n	801c73a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801c704:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801c708:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c70c:	fb04 fa05 	mul.w	sl, r4, r5
 801c710:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c714:	fb08 f80e 	mul.w	r8, r8, lr
 801c718:	f10a 0e20 	add.w	lr, sl, #32
 801c71c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801c720:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801c724:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c728:	4445      	add	r5, r8
 801c72a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c72e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801c732:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801c736:	ea45 050e 	orr.w	r5, r5, lr
 801c73a:	fb1c fe01 	smulbb	lr, ip, r1
 801c73e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801c742:	f1cc 0810 	rsb	r8, ip, #16
 801c746:	eba8 0801 	sub.w	r8, r8, r1
 801c74a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c74e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801c752:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801c756:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801c75a:	4341      	muls	r1, r0
 801c75c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c760:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c764:	ea4a 0202 	orr.w	r2, sl, r2
 801c768:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801c76c:	fb09 1108 	mla	r1, r9, r8, r1
 801c770:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c774:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801c778:	fb0c 1102 	mla	r1, ip, r2, r1
 801c77c:	ea4b 0505 	orr.w	r5, fp, r5
 801c780:	fb0e 1e05 	mla	lr, lr, r5, r1
 801c784:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c788:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c78c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c790:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c794:	ea42 0e0e 	orr.w	lr, r2, lr
 801c798:	fa1f f28e 	uxth.w	r2, lr
 801c79c:	2bff      	cmp	r3, #255	; 0xff
 801c79e:	d103      	bne.n	801c7a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801c7a0:	9912      	ldr	r1, [sp, #72]	; 0x48
 801c7a2:	29ff      	cmp	r1, #255	; 0xff
 801c7a4:	f000 80de 	beq.w	801c964 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801c7a8:	990a      	ldr	r1, [sp, #40]	; 0x28
 801c7aa:	8838      	ldrh	r0, [r7, #0]
 801c7ac:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c7ae:	434b      	muls	r3, r1
 801c7b0:	f103 0c01 	add.w	ip, r3, #1
 801c7b4:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801c7b8:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801c7bc:	fa5f fc83 	uxtb.w	ip, r3
 801c7c0:	1203      	asrs	r3, r0, #8
 801c7c2:	1215      	asrs	r5, r2, #8
 801c7c4:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801c7c8:	fb13 f30c 	smulbb	r3, r3, ip
 801c7cc:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c7d0:	fb05 3501 	mla	r5, r5, r1, r3
 801c7d4:	10c3      	asrs	r3, r0, #3
 801c7d6:	10d1      	asrs	r1, r2, #3
 801c7d8:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801c7dc:	fb13 f30c 	smulbb	r3, r3, ip
 801c7e0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c7e4:	fb01 3104 	mla	r1, r1, r4, r3
 801c7e8:	00c3      	lsls	r3, r0, #3
 801c7ea:	00d2      	lsls	r2, r2, #3
 801c7ec:	b2db      	uxtb	r3, r3
 801c7ee:	b2d2      	uxtb	r2, r2
 801c7f0:	fb13 f30c 	smulbb	r3, r3, ip
 801c7f4:	b2ad      	uxth	r5, r5
 801c7f6:	fb02 3304 	mla	r3, r2, r4, r3
 801c7fa:	b29a      	uxth	r2, r3
 801c7fc:	1c6b      	adds	r3, r5, #1
 801c7fe:	b289      	uxth	r1, r1
 801c800:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c804:	1c53      	adds	r3, r2, #1
 801c806:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c80a:	1c4a      	adds	r2, r1, #1
 801c80c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c810:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c814:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c818:	0949      	lsrs	r1, r1, #5
 801c81a:	432b      	orrs	r3, r5
 801c81c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c820:	430b      	orrs	r3, r1
 801c822:	803b      	strh	r3, [r7, #0]
 801c824:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c826:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801c828:	4413      	add	r3, r2
 801c82a:	9321      	str	r3, [sp, #132]	; 0x84
 801c82c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801c82e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c830:	441a      	add	r2, r3
 801c832:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c834:	9222      	str	r2, [sp, #136]	; 0x88
 801c836:	3b01      	subs	r3, #1
 801c838:	3702      	adds	r7, #2
 801c83a:	9313      	str	r3, [sp, #76]	; 0x4c
 801c83c:	e689      	b.n	801c552 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801c83e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c840:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 801c842:	9c22      	ldr	r4, [sp, #136]	; 0x88
 801c844:	4433      	add	r3, r6
 801c846:	9321      	str	r3, [sp, #132]	; 0x84
 801c848:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c84a:	441c      	add	r4, r3
 801c84c:	9b08      	ldr	r3, [sp, #32]
 801c84e:	9422      	str	r4, [sp, #136]	; 0x88
 801c850:	3b01      	subs	r3, #1
 801c852:	9308      	str	r3, [sp, #32]
 801c854:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c856:	3302      	adds	r3, #2
 801c858:	9309      	str	r3, [sp, #36]	; 0x24
 801c85a:	e658      	b.n	801c50e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801c85c:	d028      	beq.n	801c8b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801c85e:	9b08      	ldr	r3, [sp, #32]
 801c860:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801c862:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801c864:	3b01      	subs	r3, #1
 801c866:	fb00 5003 	mla	r0, r0, r3, r5
 801c86a:	1400      	asrs	r0, r0, #16
 801c86c:	f53f ae6c 	bmi.w	801c548 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c870:	3901      	subs	r1, #1
 801c872:	4288      	cmp	r0, r1
 801c874:	f6bf ae68 	bge.w	801c548 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c878:	9924      	ldr	r1, [sp, #144]	; 0x90
 801c87a:	9822      	ldr	r0, [sp, #136]	; 0x88
 801c87c:	fb01 0303 	mla	r3, r1, r3, r0
 801c880:	141b      	asrs	r3, r3, #16
 801c882:	f53f ae61 	bmi.w	801c548 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c886:	3a01      	subs	r2, #1
 801c888:	4293      	cmp	r3, r2
 801c88a:	f6bf ae5d 	bge.w	801c548 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c88e:	9b08      	ldr	r3, [sp, #32]
 801c890:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801c894:	9313      	str	r3, [sp, #76]	; 0x4c
 801c896:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801c89a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c89c:	2b00      	cmp	r3, #0
 801c89e:	f300 8082 	bgt.w	801c9a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801c8a2:	9b08      	ldr	r3, [sp, #32]
 801c8a4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c8a8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c8aa:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801c8ae:	9309      	str	r3, [sp, #36]	; 0x24
 801c8b0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c8b2:	2b00      	cmp	r3, #0
 801c8b4:	f340 81ef 	ble.w	801cc96 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801c8b8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c8bc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c8c0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c8c4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c8c6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c8ca:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c8ce:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c8d2:	eef0 6a62 	vmov.f32	s13, s5
 801c8d6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c8da:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c8de:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c8e2:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 801c8e6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c8ea:	eef0 6a43 	vmov.f32	s13, s6
 801c8ee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c8f2:	ee12 2a90 	vmov	r2, s5
 801c8f6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c8fa:	fb92 f3f3 	sdiv	r3, r2, r3
 801c8fe:	ee13 2a10 	vmov	r2, s6
 801c902:	9323      	str	r3, [sp, #140]	; 0x8c
 801c904:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c906:	fb92 f3f3 	sdiv	r3, r2, r3
 801c90a:	9324      	str	r3, [sp, #144]	; 0x90
 801c90c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c90e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c910:	3b01      	subs	r3, #1
 801c912:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c916:	9311      	str	r3, [sp, #68]	; 0x44
 801c918:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c91a:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 801c91e:	bf08      	it	eq
 801c920:	4613      	moveq	r3, r2
 801c922:	9308      	str	r3, [sp, #32]
 801c924:	eeb0 3a67 	vmov.f32	s6, s15
 801c928:	eef0 2a47 	vmov.f32	s5, s14
 801c92c:	e5e1      	b.n	801c4f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801c92e:	fb08 f505 	mul.w	r5, r8, r5
 801c932:	fb09 5303 	mla	r3, r9, r3, r5
 801c936:	e661      	b.n	801c5fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801c938:	4681      	mov	r9, r0
 801c93a:	e688      	b.n	801c64e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801c93c:	f1c1 0210 	rsb	r2, r1, #16
 801c940:	4341      	muls	r1, r0
 801c942:	fb09 1902 	mla	r9, r9, r2, r1
 801c946:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c94a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801c94e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c952:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c956:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c95a:	ea42 0909 	orr.w	r9, r2, r9
 801c95e:	fa1f f289 	uxth.w	r2, r9
 801c962:	e71b      	b.n	801c79c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801c964:	803a      	strh	r2, [r7, #0]
 801c966:	e75d      	b.n	801c824 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c968:	f115 0e01 	adds.w	lr, r5, #1
 801c96c:	f53f af5a 	bmi.w	801c824 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c970:	4572      	cmp	r2, lr
 801c972:	f6ff af57 	blt.w	801c824 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c976:	f110 0e01 	adds.w	lr, r0, #1
 801c97a:	f53f af53 	bmi.w	801c824 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c97e:	4573      	cmp	r3, lr
 801c980:	f6ff af50 	blt.w	801c824 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c984:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801c986:	9502      	str	r5, [sp, #8]
 801c988:	b21b      	sxth	r3, r3
 801c98a:	b212      	sxth	r2, r2
 801c98c:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801c990:	9301      	str	r3, [sp, #4]
 801c992:	9200      	str	r2, [sp, #0]
 801c994:	e9cd c405 	strd	ip, r4, [sp, #20]
 801c998:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 801c99c:	4639      	mov	r1, r7
 801c99e:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c9a0:	f7ff fc04 	bl	801c1ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801c9a4:	e73e      	b.n	801c824 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c9a6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c9a8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c9ac:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c9ae:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801c9b2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c9b4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c9b8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c9ba:	141f      	asrs	r7, r3, #16
 801c9bc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c9be:	141b      	asrs	r3, r3, #16
 801c9c0:	fb01 3707 	mla	r7, r1, r7, r3
 801c9c4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c9c6:	fa1f fc82 	uxth.w	ip, r2
 801c9ca:	eb03 0a07 	add.w	sl, r3, r7
 801c9ce:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801c9d2:	f813 9007 	ldrb.w	r9, [r3, r7]
 801c9d6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c9da:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801c9de:	b29b      	uxth	r3, r3
 801c9e0:	2d00      	cmp	r5, #0
 801c9e2:	f000 813d 	beq.w	801cc60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801c9e6:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801c9ea:	940f      	str	r4, [sp, #60]	; 0x3c
 801c9ec:	eb0a 0b01 	add.w	fp, sl, r1
 801c9f0:	fa1f fa85 	uxth.w	sl, r5
 801c9f4:	fb0a fc0c 	mul.w	ip, sl, ip
 801c9f8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801c9fc:	fa1f fa8a 	uxth.w	sl, sl
 801ca00:	eba0 000c 	sub.w	r0, r0, ip
 801ca04:	eba3 030a 	sub.w	r3, r3, sl
 801ca08:	b280      	uxth	r0, r0
 801ca0a:	fb08 f000 	mul.w	r0, r8, r0
 801ca0e:	b29b      	uxth	r3, r3
 801ca10:	fb09 0303 	mla	r3, r9, r3, r0
 801ca14:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801ca16:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801ca1a:	9410      	str	r4, [sp, #64]	; 0x40
 801ca1c:	fb0a 3300 	mla	r3, sl, r0, r3
 801ca20:	fb0c 3304 	mla	r3, ip, r4, r3
 801ca24:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ca28:	2b00      	cmp	r3, #0
 801ca2a:	f000 810b 	beq.w	801cc44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801ca2e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801ca30:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801ca32:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801ca36:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801ca3a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801ca3e:	f000 8114 	beq.w	801cc6a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 801ca42:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801ca46:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801ca4a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801ca4e:	fb09 f707 	mul.w	r7, r9, r7
 801ca52:	fb0a fc0c 	mul.w	ip, sl, ip
 801ca56:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801ca5a:	f107 0b20 	add.w	fp, r7, #32
 801ca5e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801ca62:	44cc      	add	ip, r9
 801ca64:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801ca68:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ca6c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801ca70:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801ca74:	ea4c 0909 	orr.w	r9, ip, r9
 801ca78:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801ca7c:	8847      	ldrh	r7, [r0, #2]
 801ca7e:	d019      	beq.n	801cab4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 801ca80:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801ca84:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801ca88:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801ca8c:	fb08 f807 	mul.w	r8, r8, r7
 801ca90:	fb0a fc0c 	mul.w	ip, sl, ip
 801ca94:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801ca98:	f108 0b20 	add.w	fp, r8, #32
 801ca9c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801caa0:	44bc      	add	ip, r7
 801caa2:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801caa6:	0a3f      	lsrs	r7, r7, #8
 801caa8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801caac:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801cab0:	ea4c 0707 	orr.w	r7, ip, r7
 801cab4:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801cab8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801cabc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801cac0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801cac4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cac8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801cacc:	ea4c 0909 	orr.w	r9, ip, r9
 801cad0:	ea4a 0707 	orr.w	r7, sl, r7
 801cad4:	2d00      	cmp	r5, #0
 801cad6:	f000 80ca 	beq.w	801cc6e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801cada:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801cade:	3901      	subs	r1, #1
 801cae0:	0049      	lsls	r1, r1, #1
 801cae2:	3102      	adds	r1, #2
 801cae4:	eb00 0c01 	add.w	ip, r0, r1
 801cae8:	5a41      	ldrh	r1, [r0, r1]
 801caea:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801caec:	28ff      	cmp	r0, #255	; 0xff
 801caee:	d019      	beq.n	801cb24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 801caf0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801caf2:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801caf6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801cafa:	fb04 fa01 	mul.w	sl, r4, r1
 801cafe:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801cb02:	fb08 f800 	mul.w	r8, r8, r0
 801cb06:	f10a 0020 	add.w	r0, sl, #32
 801cb0a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801cb0e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801cb12:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801cb16:	4441      	add	r1, r8
 801cb18:	0a00      	lsrs	r0, r0, #8
 801cb1a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801cb1e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cb22:	4301      	orrs	r1, r0
 801cb24:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801cb26:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801cb2a:	2cff      	cmp	r4, #255	; 0xff
 801cb2c:	d01a      	beq.n	801cb64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801cb2e:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801cb32:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cb36:	fb04 fa00 	mul.w	sl, r4, r0
 801cb3a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801cb3e:	fb08 f80c 	mul.w	r8, r8, ip
 801cb42:	f10a 0c20 	add.w	ip, sl, #32
 801cb46:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801cb4a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801cb4e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801cb52:	4440      	add	r0, r8
 801cb54:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801cb58:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801cb5c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801cb60:	ea40 000c 	orr.w	r0, r0, ip
 801cb64:	fb15 fc02 	smulbb	ip, r5, r2
 801cb68:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801cb6c:	f1c5 0810 	rsb	r8, r5, #16
 801cb70:	eba8 0802 	sub.w	r8, r8, r2
 801cb74:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801cb78:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801cb7c:	437a      	muls	r2, r7
 801cb7e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801cb82:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801cb86:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cb8a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801cb8e:	fb09 2208 	mla	r2, r9, r8, r2
 801cb92:	ea4a 0101 	orr.w	r1, sl, r1
 801cb96:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801cb9a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801cb9e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801cba2:	fb05 2201 	mla	r2, r5, r1, r2
 801cba6:	ea4b 0000 	orr.w	r0, fp, r0
 801cbaa:	fb0c 2200 	mla	r2, ip, r0, r2
 801cbae:	0d57      	lsrs	r7, r2, #21
 801cbb0:	0952      	lsrs	r2, r2, #5
 801cbb2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801cbb6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801cbba:	433a      	orrs	r2, r7
 801cbbc:	2bff      	cmp	r3, #255	; 0xff
 801cbbe:	b292      	uxth	r2, r2
 801cbc0:	d102      	bne.n	801cbc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801cbc2:	9912      	ldr	r1, [sp, #72]	; 0x48
 801cbc4:	29ff      	cmp	r1, #255	; 0xff
 801cbc6:	d063      	beq.n	801cc90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 801cbc8:	980a      	ldr	r0, [sp, #40]	; 0x28
 801cbca:	f8be 1000 	ldrh.w	r1, [lr]
 801cbce:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801cbd0:	4343      	muls	r3, r0
 801cbd2:	1c58      	adds	r0, r3, #1
 801cbd4:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801cbd8:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801cbdc:	1208      	asrs	r0, r1, #8
 801cbde:	b2db      	uxtb	r3, r3
 801cbe0:	1215      	asrs	r5, r2, #8
 801cbe2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801cbe6:	fb10 f003 	smulbb	r0, r0, r3
 801cbea:	10cf      	asrs	r7, r1, #3
 801cbec:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801cbf0:	00c9      	lsls	r1, r1, #3
 801cbf2:	fb05 0504 	mla	r5, r5, r4, r0
 801cbf6:	b2c9      	uxtb	r1, r1
 801cbf8:	10d0      	asrs	r0, r2, #3
 801cbfa:	00d2      	lsls	r2, r2, #3
 801cbfc:	fb11 f103 	smulbb	r1, r1, r3
 801cc00:	b2d2      	uxtb	r2, r2
 801cc02:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801cc06:	fb02 1204 	mla	r2, r2, r4, r1
 801cc0a:	fb17 f703 	smulbb	r7, r7, r3
 801cc0e:	b2ad      	uxth	r5, r5
 801cc10:	b292      	uxth	r2, r2
 801cc12:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801cc16:	fb00 7004 	mla	r0, r0, r4, r7
 801cc1a:	1c6b      	adds	r3, r5, #1
 801cc1c:	1c57      	adds	r7, r2, #1
 801cc1e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801cc22:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801cc26:	b280      	uxth	r0, r0
 801cc28:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801cc2c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801cc30:	433d      	orrs	r5, r7
 801cc32:	1c47      	adds	r7, r0, #1
 801cc34:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801cc38:	097f      	lsrs	r7, r7, #5
 801cc3a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801cc3e:	433d      	orrs	r5, r7
 801cc40:	f8ae 5000 	strh.w	r5, [lr]
 801cc44:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801cc46:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801cc48:	4413      	add	r3, r2
 801cc4a:	9321      	str	r3, [sp, #132]	; 0x84
 801cc4c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801cc4e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cc50:	441a      	add	r2, r3
 801cc52:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801cc54:	9222      	str	r2, [sp, #136]	; 0x88
 801cc56:	3b01      	subs	r3, #1
 801cc58:	f10e 0e02 	add.w	lr, lr, #2
 801cc5c:	9313      	str	r3, [sp, #76]	; 0x4c
 801cc5e:	e61c      	b.n	801c89a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 801cc60:	fb08 f000 	mul.w	r0, r8, r0
 801cc64:	fb09 0303 	mla	r3, r9, r3, r0
 801cc68:	e6dc      	b.n	801ca24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 801cc6a:	46b9      	mov	r9, r7
 801cc6c:	e704      	b.n	801ca78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 801cc6e:	f1c2 0110 	rsb	r1, r2, #16
 801cc72:	437a      	muls	r2, r7
 801cc74:	fb09 2901 	mla	r9, r9, r1, r2
 801cc78:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801cc7c:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801cc80:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801cc84:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cc88:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801cc8c:	4302      	orrs	r2, r0
 801cc8e:	e795      	b.n	801cbbc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 801cc90:	f8ae 2000 	strh.w	r2, [lr]
 801cc94:	e7d6      	b.n	801cc44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801cc96:	b017      	add	sp, #92	; 0x5c
 801cc98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801cc9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801cc9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cca0:	b085      	sub	sp, #20
 801cca2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801cca6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801ccaa:	9103      	str	r1, [sp, #12]
 801ccac:	fb00 7406 	mla	r4, r0, r6, r7
 801ccb0:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801ccb4:	2800      	cmp	r0, #0
 801ccb6:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801ccba:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801ccbe:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801ccc2:	9501      	str	r5, [sp, #4]
 801ccc4:	eb02 0904 	add.w	r9, r2, r4
 801ccc8:	f2c0 8141 	blt.w	801cf4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801cccc:	4583      	cmp	fp, r0
 801ccce:	f340 813e 	ble.w	801cf4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801ccd2:	2f00      	cmp	r7, #0
 801ccd4:	f2c0 8137 	blt.w	801cf46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801ccd8:	42be      	cmp	r6, r7
 801ccda:	f340 8134 	ble.w	801cf46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801ccde:	f812 c004 	ldrb.w	ip, [r2, r4]
 801cce2:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801cce6:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801ccea:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801ccee:	4355      	muls	r5, r2
 801ccf0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ccf4:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801ccf8:	fb0c f203 	mul.w	r2, ip, r3
 801ccfc:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801cd00:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801cd04:	441d      	add	r5, r3
 801cd06:	f102 0320 	add.w	r3, r2, #32
 801cd0a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801cd0e:	0a1b      	lsrs	r3, r3, #8
 801cd10:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801cd14:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801cd18:	431c      	orrs	r4, r3
 801cd1a:	1c7b      	adds	r3, r7, #1
 801cd1c:	f100 811c 	bmi.w	801cf58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801cd20:	429e      	cmp	r6, r3
 801cd22:	f340 8119 	ble.w	801cf58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801cd26:	2900      	cmp	r1, #0
 801cd28:	f000 8119 	beq.w	801cf5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801cd2c:	9a01      	ldr	r2, [sp, #4]
 801cd2e:	f899 3001 	ldrb.w	r3, [r9, #1]
 801cd32:	8855      	ldrh	r5, [r2, #2]
 801cd34:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801cd38:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801cd3c:	fb08 f802 	mul.w	r8, r8, r2
 801cd40:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cd44:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801cd48:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801cd4c:	435d      	muls	r5, r3
 801cd4e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801cd52:	44d0      	add	r8, sl
 801cd54:	f105 0a20 	add.w	sl, r5, #32
 801cd58:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801cd5c:	0a2d      	lsrs	r5, r5, #8
 801cd5e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801cd62:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cd66:	432a      	orrs	r2, r5
 801cd68:	3001      	adds	r0, #1
 801cd6a:	f100 80fe 	bmi.w	801cf6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801cd6e:	4583      	cmp	fp, r0
 801cd70:	f340 80fb 	ble.w	801cf6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801cd74:	f1be 0f00 	cmp.w	lr, #0
 801cd78:	f000 80fc 	beq.w	801cf74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801cd7c:	2f00      	cmp	r7, #0
 801cd7e:	f2c0 80f1 	blt.w	801cf64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801cd82:	42be      	cmp	r6, r7
 801cd84:	f340 80ee 	ble.w	801cf64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801cd88:	9801      	ldr	r0, [sp, #4]
 801cd8a:	f819 5006 	ldrb.w	r5, [r9, r6]
 801cd8e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801cd92:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801cd96:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801cd9a:	fb0a fa00 	mul.w	sl, sl, r0
 801cd9e:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801cda2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801cda6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801cdaa:	fb05 f808 	mul.w	r8, r5, r8
 801cdae:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801cdb2:	4482      	add	sl, r0
 801cdb4:	f108 0020 	add.w	r0, r8, #32
 801cdb8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801cdbc:	0a00      	lsrs	r0, r0, #8
 801cdbe:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801cdc2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cdc6:	ea4b 0b00 	orr.w	fp, fp, r0
 801cdca:	3701      	adds	r7, #1
 801cdcc:	f100 80d7 	bmi.w	801cf7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801cdd0:	42be      	cmp	r6, r7
 801cdd2:	f340 80d4 	ble.w	801cf7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801cdd6:	2900      	cmp	r1, #0
 801cdd8:	f000 80d4 	beq.w	801cf84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801cddc:	3601      	adds	r6, #1
 801cdde:	9801      	ldr	r0, [sp, #4]
 801cde0:	f819 7006 	ldrb.w	r7, [r9, r6]
 801cde4:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801cde8:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801cdec:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801cdf0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cdf4:	fb09 f906 	mul.w	r9, r9, r6
 801cdf8:	fb07 f800 	mul.w	r8, r7, r0
 801cdfc:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801ce00:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801ce04:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801ce08:	44d1      	add	r9, sl
 801ce0a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801ce0e:	f108 0020 	add.w	r0, r8, #32
 801ce12:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801ce16:	0a00      	lsrs	r0, r0, #8
 801ce18:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ce1c:	4330      	orrs	r0, r6
 801ce1e:	b28e      	uxth	r6, r1
 801ce20:	fa1f f98e 	uxth.w	r9, lr
 801ce24:	fb06 f809 	mul.w	r8, r6, r9
 801ce28:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801ce2c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801ce30:	0136      	lsls	r6, r6, #4
 801ce32:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ce36:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801ce3a:	9601      	str	r6, [sp, #4]
 801ce3c:	ea4a 0404 	orr.w	r4, sl, r4
 801ce40:	fa1f f689 	uxth.w	r6, r9
 801ce44:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801ce48:	fb11 f90e 	smulbb	r9, r1, lr
 801ce4c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801ce50:	9602      	str	r6, [sp, #8]
 801ce52:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ce56:	4626      	mov	r6, r4
 801ce58:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ce5c:	f1ce 0410 	rsb	r4, lr, #16
 801ce60:	1a64      	subs	r4, r4, r1
 801ce62:	ea4a 0202 	orr.w	r2, sl, r2
 801ce66:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801ce6a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801ce6e:	434a      	muls	r2, r1
 801ce70:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801ce74:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ce78:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ce7c:	fb04 2406 	mla	r4, r4, r6, r2
 801ce80:	ea4a 0000 	orr.w	r0, sl, r0
 801ce84:	fb09 4200 	mla	r2, r9, r0, r4
 801ce88:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801ce8c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801ce90:	9801      	ldr	r0, [sp, #4]
 801ce92:	9903      	ldr	r1, [sp, #12]
 801ce94:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801ce98:	ea44 0b0b 	orr.w	fp, r4, fp
 801ce9c:	9c02      	ldr	r4, [sp, #8]
 801ce9e:	8809      	ldrh	r1, [r1, #0]
 801cea0:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 801cea4:	1b00      	subs	r0, r0, r4
 801cea6:	9c01      	ldr	r4, [sp, #4]
 801cea8:	eba4 0608 	sub.w	r6, r4, r8
 801ceac:	b2b6      	uxth	r6, r6
 801ceae:	b280      	uxth	r0, r0
 801ceb0:	4373      	muls	r3, r6
 801ceb2:	fb0c 3300 	mla	r3, ip, r0, r3
 801ceb6:	9802      	ldr	r0, [sp, #8]
 801ceb8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801cebc:	fb00 3505 	mla	r5, r0, r5, r3
 801cec0:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801cec4:	fb08 5707 	mla	r7, r8, r7, r5
 801cec8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801cecc:	120b      	asrs	r3, r1, #8
 801cece:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801ced2:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801ced6:	b2ff      	uxtb	r7, r7
 801ced8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cedc:	10c8      	asrs	r0, r1, #3
 801cede:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801cee2:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801cee6:	00c9      	lsls	r1, r1, #3
 801cee8:	437b      	muls	r3, r7
 801ceea:	ea42 0e0e 	orr.w	lr, r2, lr
 801ceee:	b2c9      	uxtb	r1, r1
 801cef0:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801cef4:	fa1f f28e 	uxth.w	r2, lr
 801cef8:	4378      	muls	r0, r7
 801cefa:	434f      	muls	r7, r1
 801cefc:	1c59      	adds	r1, r3, #1
 801cefe:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801cf02:	1213      	asrs	r3, r2, #8
 801cf04:	f023 0307 	bic.w	r3, r3, #7
 801cf08:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801cf0c:	1c41      	adds	r1, r0, #1
 801cf0e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801cf12:	10d1      	asrs	r1, r2, #3
 801cf14:	f021 0103 	bic.w	r1, r1, #3
 801cf18:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801cf1c:	021b      	lsls	r3, r3, #8
 801cf1e:	00c9      	lsls	r1, r1, #3
 801cf20:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801cf24:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801cf28:	430b      	orrs	r3, r1
 801cf2a:	1c79      	adds	r1, r7, #1
 801cf2c:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801cf30:	00d2      	lsls	r2, r2, #3
 801cf32:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801cf36:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cf3a:	431a      	orrs	r2, r3
 801cf3c:	9b03      	ldr	r3, [sp, #12]
 801cf3e:	801a      	strh	r2, [r3, #0]
 801cf40:	b005      	add	sp, #20
 801cf42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cf46:	f04f 0c00 	mov.w	ip, #0
 801cf4a:	4664      	mov	r4, ip
 801cf4c:	e6e5      	b.n	801cd1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801cf4e:	2300      	movs	r3, #0
 801cf50:	469c      	mov	ip, r3
 801cf52:	461a      	mov	r2, r3
 801cf54:	461c      	mov	r4, r3
 801cf56:	e707      	b.n	801cd68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801cf58:	2300      	movs	r3, #0
 801cf5a:	461a      	mov	r2, r3
 801cf5c:	e704      	b.n	801cd68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801cf5e:	460b      	mov	r3, r1
 801cf60:	460a      	mov	r2, r1
 801cf62:	e701      	b.n	801cd68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801cf64:	2500      	movs	r5, #0
 801cf66:	46ab      	mov	fp, r5
 801cf68:	e72f      	b.n	801cdca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801cf6a:	2700      	movs	r7, #0
 801cf6c:	463d      	mov	r5, r7
 801cf6e:	4638      	mov	r0, r7
 801cf70:	46bb      	mov	fp, r7
 801cf72:	e754      	b.n	801ce1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801cf74:	4677      	mov	r7, lr
 801cf76:	4675      	mov	r5, lr
 801cf78:	4670      	mov	r0, lr
 801cf7a:	46f3      	mov	fp, lr
 801cf7c:	e74f      	b.n	801ce1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801cf7e:	2700      	movs	r7, #0
 801cf80:	4638      	mov	r0, r7
 801cf82:	e74c      	b.n	801ce1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801cf84:	460f      	mov	r7, r1
 801cf86:	4608      	mov	r0, r1
 801cf88:	e749      	b.n	801ce1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801cf8c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cf8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cf90:	b093      	sub	sp, #76	; 0x4c
 801cf92:	9210      	str	r2, [sp, #64]	; 0x40
 801cf94:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801cf96:	910e      	str	r1, [sp, #56]	; 0x38
 801cf98:	9306      	str	r3, [sp, #24]
 801cf9a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801cf9e:	9011      	str	r0, [sp, #68]	; 0x44
 801cfa0:	6850      	ldr	r0, [r2, #4]
 801cfa2:	6812      	ldr	r2, [r2, #0]
 801cfa4:	fb00 1303 	mla	r3, r0, r3, r1
 801cfa8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801cfac:	9307      	str	r3, [sp, #28]
 801cfae:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cfb0:	681b      	ldr	r3, [r3, #0]
 801cfb2:	9308      	str	r3, [sp, #32]
 801cfb4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cfb6:	685b      	ldr	r3, [r3, #4]
 801cfb8:	9309      	str	r3, [sp, #36]	; 0x24
 801cfba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cfbc:	2b00      	cmp	r3, #0
 801cfbe:	dc03      	bgt.n	801cfc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801cfc0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cfc2:	2b00      	cmp	r3, #0
 801cfc4:	f340 83b4 	ble.w	801d730 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801cfc8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cfca:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cfce:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801cfd2:	1e48      	subs	r0, r1, #1
 801cfd4:	1e55      	subs	r5, r2, #1
 801cfd6:	9b06      	ldr	r3, [sp, #24]
 801cfd8:	2b00      	cmp	r3, #0
 801cfda:	f340 8163 	ble.w	801d2a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801cfde:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 801cfe0:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801cfe2:	1436      	asrs	r6, r6, #16
 801cfe4:	ea4f 4323 	mov.w	r3, r3, asr #16
 801cfe8:	d406      	bmi.n	801cff8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801cfea:	4286      	cmp	r6, r0
 801cfec:	da04      	bge.n	801cff8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801cfee:	2b00      	cmp	r3, #0
 801cff0:	db02      	blt.n	801cff8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801cff2:	42ab      	cmp	r3, r5
 801cff4:	f2c0 8157 	blt.w	801d2a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801cff8:	3601      	adds	r6, #1
 801cffa:	f100 8144 	bmi.w	801d286 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801cffe:	42b1      	cmp	r1, r6
 801d000:	f2c0 8141 	blt.w	801d286 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801d004:	3301      	adds	r3, #1
 801d006:	f100 813e 	bmi.w	801d286 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801d00a:	429a      	cmp	r2, r3
 801d00c:	f2c0 813b 	blt.w	801d286 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801d010:	9b06      	ldr	r3, [sp, #24]
 801d012:	9f07      	ldr	r7, [sp, #28]
 801d014:	930f      	str	r3, [sp, #60]	; 0x3c
 801d016:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801d01a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d01c:	2b00      	cmp	r3, #0
 801d01e:	f340 8164 	ble.w	801d2ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801d022:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801d024:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801d026:	1418      	asrs	r0, r3, #16
 801d028:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d02a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801d02e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801d030:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801d034:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d036:	142d      	asrs	r5, r5, #16
 801d038:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801d03c:	f100 81ee 	bmi.w	801d41c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801d040:	f102 3eff 	add.w	lr, r2, #4294967295
 801d044:	4575      	cmp	r5, lr
 801d046:	f280 81e9 	bge.w	801d41c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801d04a:	2800      	cmp	r0, #0
 801d04c:	f2c0 81e6 	blt.w	801d41c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801d050:	f103 3eff 	add.w	lr, r3, #4294967295
 801d054:	4570      	cmp	r0, lr
 801d056:	f280 81e1 	bge.w	801d41c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801d05a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d05c:	b212      	sxth	r2, r2
 801d05e:	fb00 5002 	mla	r0, r0, r2, r5
 801d062:	fa1f fe81 	uxth.w	lr, r1
 801d066:	eb03 0a00 	add.w	sl, r3, r0
 801d06a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801d06e:	f813 9000 	ldrb.w	r9, [r3, r0]
 801d072:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d076:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801d07a:	b29b      	uxth	r3, r3
 801d07c:	f1bc 0f00 	cmp.w	ip, #0
 801d080:	f000 8179 	beq.w	801d376 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801d084:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801d088:	940a      	str	r4, [sp, #40]	; 0x28
 801d08a:	eb0a 0b02 	add.w	fp, sl, r2
 801d08e:	fa1f fa8c 	uxth.w	sl, ip
 801d092:	fb0a fe0e 	mul.w	lr, sl, lr
 801d096:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801d09a:	fa1f fa8a 	uxth.w	sl, sl
 801d09e:	eba5 050e 	sub.w	r5, r5, lr
 801d0a2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801d0a6:	940b      	str	r4, [sp, #44]	; 0x2c
 801d0a8:	eba3 030a 	sub.w	r3, r3, sl
 801d0ac:	b2ad      	uxth	r5, r5
 801d0ae:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801d0b0:	b29b      	uxth	r3, r3
 801d0b2:	fb08 f505 	mul.w	r5, r8, r5
 801d0b6:	fb09 5303 	mla	r3, r9, r3, r5
 801d0ba:	fb0a 3304 	mla	r3, sl, r4, r3
 801d0be:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801d0c0:	fb0e 3304 	mla	r3, lr, r4, r3
 801d0c4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d0c8:	2b00      	cmp	r3, #0
 801d0ca:	f000 80cf 	beq.w	801d26c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d0ce:	9c08      	ldr	r4, [sp, #32]
 801d0d0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801d0d4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801d0d8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801d0dc:	f000 8150 	beq.w	801d380 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801d0e0:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801d0e4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801d0e8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d0ec:	fb09 f000 	mul.w	r0, r9, r0
 801d0f0:	fb0a fe0e 	mul.w	lr, sl, lr
 801d0f4:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801d0f8:	f100 0b20 	add.w	fp, r0, #32
 801d0fc:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801d100:	44ce      	add	lr, r9
 801d102:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801d106:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d10a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801d10e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801d112:	ea4e 0909 	orr.w	r9, lr, r9
 801d116:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801d11a:	8868      	ldrh	r0, [r5, #2]
 801d11c:	d019      	beq.n	801d152 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801d11e:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801d122:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d126:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d12a:	fb08 f800 	mul.w	r8, r8, r0
 801d12e:	fb0a fe0e 	mul.w	lr, sl, lr
 801d132:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801d136:	f108 0b20 	add.w	fp, r8, #32
 801d13a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801d13e:	4486      	add	lr, r0
 801d140:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801d144:	0a00      	lsrs	r0, r0, #8
 801d146:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801d14a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d14e:	ea4e 0000 	orr.w	r0, lr, r0
 801d152:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801d156:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801d15a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801d15e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801d162:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d166:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d16a:	ea4e 0909 	orr.w	r9, lr, r9
 801d16e:	ea4a 0000 	orr.w	r0, sl, r0
 801d172:	f1bc 0f00 	cmp.w	ip, #0
 801d176:	f000 8105 	beq.w	801d384 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801d17a:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801d17e:	3a01      	subs	r2, #1
 801d180:	0052      	lsls	r2, r2, #1
 801d182:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801d184:	3202      	adds	r2, #2
 801d186:	2cff      	cmp	r4, #255	; 0xff
 801d188:	eb05 0e02 	add.w	lr, r5, r2
 801d18c:	5aaa      	ldrh	r2, [r5, r2]
 801d18e:	d018      	beq.n	801d1c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801d190:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801d194:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d198:	fb04 fa02 	mul.w	sl, r4, r2
 801d19c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d1a0:	fb08 f805 	mul.w	r8, r8, r5
 801d1a4:	f10a 0520 	add.w	r5, sl, #32
 801d1a8:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801d1ac:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801d1b0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d1b4:	4442      	add	r2, r8
 801d1b6:	0a2d      	lsrs	r5, r5, #8
 801d1b8:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801d1bc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d1c0:	432a      	orrs	r2, r5
 801d1c2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801d1c4:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801d1c8:	2cff      	cmp	r4, #255	; 0xff
 801d1ca:	d01a      	beq.n	801d202 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801d1cc:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801d1d0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d1d4:	fb04 fa05 	mul.w	sl, r4, r5
 801d1d8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d1dc:	fb08 f80e 	mul.w	r8, r8, lr
 801d1e0:	f10a 0e20 	add.w	lr, sl, #32
 801d1e4:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801d1e8:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801d1ec:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d1f0:	4445      	add	r5, r8
 801d1f2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d1f6:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801d1fa:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801d1fe:	ea45 050e 	orr.w	r5, r5, lr
 801d202:	fb1c fe01 	smulbb	lr, ip, r1
 801d206:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801d20a:	f1cc 0810 	rsb	r8, ip, #16
 801d20e:	eba8 0801 	sub.w	r8, r8, r1
 801d212:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801d216:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801d21a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801d21e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801d222:	4341      	muls	r1, r0
 801d224:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d228:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d22c:	ea4a 0202 	orr.w	r2, sl, r2
 801d230:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801d234:	fb09 1108 	mla	r1, r9, r8, r1
 801d238:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d23c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801d240:	fb0c 1102 	mla	r1, ip, r2, r1
 801d244:	ea4b 0505 	orr.w	r5, fp, r5
 801d248:	fb0e 1e05 	mla	lr, lr, r5, r1
 801d24c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801d250:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801d254:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d258:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801d25c:	ea42 0e0e 	orr.w	lr, r2, lr
 801d260:	fa1f f28e 	uxth.w	r2, lr
 801d264:	2bff      	cmp	r3, #255	; 0xff
 801d266:	f040 80a1 	bne.w	801d3ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801d26a:	803a      	strh	r2, [r7, #0]
 801d26c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d26e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801d270:	4413      	add	r3, r2
 801d272:	931d      	str	r3, [sp, #116]	; 0x74
 801d274:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801d276:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d278:	441a      	add	r2, r3
 801d27a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d27c:	921e      	str	r2, [sp, #120]	; 0x78
 801d27e:	3b01      	subs	r3, #1
 801d280:	3702      	adds	r7, #2
 801d282:	930f      	str	r3, [sp, #60]	; 0x3c
 801d284:	e6c9      	b.n	801d01a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801d286:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d288:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801d28a:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 801d28c:	4433      	add	r3, r6
 801d28e:	931d      	str	r3, [sp, #116]	; 0x74
 801d290:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d292:	441c      	add	r4, r3
 801d294:	9b06      	ldr	r3, [sp, #24]
 801d296:	941e      	str	r4, [sp, #120]	; 0x78
 801d298:	3b01      	subs	r3, #1
 801d29a:	9306      	str	r3, [sp, #24]
 801d29c:	9b07      	ldr	r3, [sp, #28]
 801d29e:	3302      	adds	r3, #2
 801d2a0:	9307      	str	r3, [sp, #28]
 801d2a2:	e698      	b.n	801cfd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801d2a4:	d028      	beq.n	801d2f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d2a6:	9b06      	ldr	r3, [sp, #24]
 801d2a8:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801d2aa:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801d2ac:	3b01      	subs	r3, #1
 801d2ae:	fb00 5003 	mla	r0, r0, r3, r5
 801d2b2:	1400      	asrs	r0, r0, #16
 801d2b4:	f53f aeac 	bmi.w	801d010 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d2b8:	3901      	subs	r1, #1
 801d2ba:	4288      	cmp	r0, r1
 801d2bc:	f6bf aea8 	bge.w	801d010 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d2c0:	9920      	ldr	r1, [sp, #128]	; 0x80
 801d2c2:	981e      	ldr	r0, [sp, #120]	; 0x78
 801d2c4:	fb01 0303 	mla	r3, r1, r3, r0
 801d2c8:	141b      	asrs	r3, r3, #16
 801d2ca:	f53f aea1 	bmi.w	801d010 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d2ce:	3a01      	subs	r2, #1
 801d2d0:	4293      	cmp	r3, r2
 801d2d2:	f6bf ae9d 	bge.w	801d010 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d2d6:	9b06      	ldr	r3, [sp, #24]
 801d2d8:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801d2dc:	930f      	str	r3, [sp, #60]	; 0x3c
 801d2de:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801d2e2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d2e4:	2b00      	cmp	r3, #0
 801d2e6:	f300 80b6 	bgt.w	801d456 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 801d2ea:	9b06      	ldr	r3, [sp, #24]
 801d2ec:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801d2f0:	9b07      	ldr	r3, [sp, #28]
 801d2f2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801d2f6:	9307      	str	r3, [sp, #28]
 801d2f8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d2fa:	2b00      	cmp	r3, #0
 801d2fc:	f340 8218 	ble.w	801d730 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801d300:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d304:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d308:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d30c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d30e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d312:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d316:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d31a:	eef0 6a62 	vmov.f32	s13, s5
 801d31e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d322:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d326:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d32a:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 801d32e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d332:	eef0 6a43 	vmov.f32	s13, s6
 801d336:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d33a:	ee12 2a90 	vmov	r2, s5
 801d33e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d342:	fb92 f3f3 	sdiv	r3, r2, r3
 801d346:	ee13 2a10 	vmov	r2, s6
 801d34a:	931f      	str	r3, [sp, #124]	; 0x7c
 801d34c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d34e:	fb92 f3f3 	sdiv	r3, r2, r3
 801d352:	9320      	str	r3, [sp, #128]	; 0x80
 801d354:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d356:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d358:	3b01      	subs	r3, #1
 801d35a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d35e:	930e      	str	r3, [sp, #56]	; 0x38
 801d360:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d362:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 801d366:	bf08      	it	eq
 801d368:	4613      	moveq	r3, r2
 801d36a:	9306      	str	r3, [sp, #24]
 801d36c:	eeb0 3a67 	vmov.f32	s6, s15
 801d370:	eef0 2a47 	vmov.f32	s5, s14
 801d374:	e621      	b.n	801cfba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801d376:	fb08 f505 	mul.w	r5, r8, r5
 801d37a:	fb09 5303 	mla	r3, r9, r3, r5
 801d37e:	e6a1      	b.n	801d0c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801d380:	4681      	mov	r9, r0
 801d382:	e6c8      	b.n	801d116 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801d384:	f1c1 0210 	rsb	r2, r1, #16
 801d388:	4341      	muls	r1, r0
 801d38a:	fb09 1902 	mla	r9, r9, r2, r1
 801d38e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d392:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801d396:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801d39a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d39e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801d3a2:	ea42 0909 	orr.w	r9, r2, r9
 801d3a6:	fa1f f289 	uxth.w	r2, r9
 801d3aa:	e75b      	b.n	801d264 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d3ac:	f8b7 c000 	ldrh.w	ip, [r7]
 801d3b0:	43db      	mvns	r3, r3
 801d3b2:	ea4f 202c 	mov.w	r0, ip, asr #8
 801d3b6:	fa5f fe83 	uxtb.w	lr, r3
 801d3ba:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d3be:	fb00 f00e 	mul.w	r0, r0, lr
 801d3c2:	1c41      	adds	r1, r0, #1
 801d3c4:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801d3c8:	1211      	asrs	r1, r2, #8
 801d3ca:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801d3ce:	f021 0107 	bic.w	r1, r1, #7
 801d3d2:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801d3d6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d3da:	48d7      	ldr	r0, [pc, #860]	; (801d738 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801d3dc:	fb05 f50e 	mul.w	r5, r5, lr
 801d3e0:	b2c9      	uxtb	r1, r1
 801d3e2:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801d3e6:	1c69      	adds	r1, r5, #1
 801d3e8:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801d3ec:	10d1      	asrs	r1, r2, #3
 801d3ee:	f021 0103 	bic.w	r1, r1, #3
 801d3f2:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801d3f6:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801d3fa:	b2db      	uxtb	r3, r3
 801d3fc:	00c9      	lsls	r1, r1, #3
 801d3fe:	fb03 f30e 	mul.w	r3, r3, lr
 801d402:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d406:	4301      	orrs	r1, r0
 801d408:	1c58      	adds	r0, r3, #1
 801d40a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801d40e:	00d2      	lsls	r2, r2, #3
 801d410:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801d414:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d418:	430a      	orrs	r2, r1
 801d41a:	e726      	b.n	801d26a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 801d41c:	f115 0e01 	adds.w	lr, r5, #1
 801d420:	f53f af24 	bmi.w	801d26c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d424:	4572      	cmp	r2, lr
 801d426:	f6ff af21 	blt.w	801d26c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d42a:	f110 0e01 	adds.w	lr, r0, #1
 801d42e:	f53f af1d 	bmi.w	801d26c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d432:	4573      	cmp	r3, lr
 801d434:	f6ff af1a 	blt.w	801d26c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d438:	b21b      	sxth	r3, r3
 801d43a:	b212      	sxth	r2, r2
 801d43c:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801d440:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801d444:	9301      	str	r3, [sp, #4]
 801d446:	9200      	str	r2, [sp, #0]
 801d448:	4639      	mov	r1, r7
 801d44a:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801d44e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d450:	f7ff fc24 	bl	801cc9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801d454:	e70a      	b.n	801d26c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d456:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d458:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801d45c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801d45e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801d462:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d464:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d468:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801d46a:	141f      	asrs	r7, r3, #16
 801d46c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d46e:	141b      	asrs	r3, r3, #16
 801d470:	fb01 3707 	mla	r7, r1, r7, r3
 801d474:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d476:	fa1f fc82 	uxth.w	ip, r2
 801d47a:	eb03 0a07 	add.w	sl, r3, r7
 801d47e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801d482:	f813 9007 	ldrb.w	r9, [r3, r7]
 801d486:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d48a:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801d48e:	b29b      	uxth	r3, r3
 801d490:	2d00      	cmp	r5, #0
 801d492:	f000 80fe 	beq.w	801d692 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 801d496:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801d49a:	940c      	str	r4, [sp, #48]	; 0x30
 801d49c:	eb0a 0b01 	add.w	fp, sl, r1
 801d4a0:	fa1f fa85 	uxth.w	sl, r5
 801d4a4:	fb0a fc0c 	mul.w	ip, sl, ip
 801d4a8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801d4ac:	fa1f fa8a 	uxth.w	sl, sl
 801d4b0:	eba0 000c 	sub.w	r0, r0, ip
 801d4b4:	eba3 030a 	sub.w	r3, r3, sl
 801d4b8:	b280      	uxth	r0, r0
 801d4ba:	fb08 f000 	mul.w	r0, r8, r0
 801d4be:	b29b      	uxth	r3, r3
 801d4c0:	fb09 0303 	mla	r3, r9, r3, r0
 801d4c4:	980c      	ldr	r0, [sp, #48]	; 0x30
 801d4c6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801d4ca:	940d      	str	r4, [sp, #52]	; 0x34
 801d4cc:	fb0a 3300 	mla	r3, sl, r0, r3
 801d4d0:	fb0c 3304 	mla	r3, ip, r4, r3
 801d4d4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d4d8:	2b00      	cmp	r3, #0
 801d4da:	f000 80cc 	beq.w	801d676 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801d4de:	9808      	ldr	r0, [sp, #32]
 801d4e0:	9c08      	ldr	r4, [sp, #32]
 801d4e2:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801d4e6:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801d4ea:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801d4ee:	f000 80d5 	beq.w	801d69c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801d4f2:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801d4f6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801d4fa:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d4fe:	fb09 f707 	mul.w	r7, r9, r7
 801d502:	fb0a fc0c 	mul.w	ip, sl, ip
 801d506:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801d50a:	f107 0b20 	add.w	fp, r7, #32
 801d50e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801d512:	44cc      	add	ip, r9
 801d514:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801d518:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d51c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d520:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801d524:	ea4c 0909 	orr.w	r9, ip, r9
 801d528:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801d52c:	8847      	ldrh	r7, [r0, #2]
 801d52e:	d019      	beq.n	801d564 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 801d530:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801d534:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d538:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d53c:	fb08 f807 	mul.w	r8, r8, r7
 801d540:	fb0a fc0c 	mul.w	ip, sl, ip
 801d544:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801d548:	f108 0b20 	add.w	fp, r8, #32
 801d54c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801d550:	44bc      	add	ip, r7
 801d552:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801d556:	0a3f      	lsrs	r7, r7, #8
 801d558:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d55c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d560:	ea4c 0707 	orr.w	r7, ip, r7
 801d564:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801d568:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801d56c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801d570:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801d574:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d578:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801d57c:	ea4c 0909 	orr.w	r9, ip, r9
 801d580:	ea4a 0707 	orr.w	r7, sl, r7
 801d584:	2d00      	cmp	r5, #0
 801d586:	f000 808b 	beq.w	801d6a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801d58a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801d58e:	3901      	subs	r1, #1
 801d590:	0049      	lsls	r1, r1, #1
 801d592:	3102      	adds	r1, #2
 801d594:	eb00 0c01 	add.w	ip, r0, r1
 801d598:	5a41      	ldrh	r1, [r0, r1]
 801d59a:	980c      	ldr	r0, [sp, #48]	; 0x30
 801d59c:	28ff      	cmp	r0, #255	; 0xff
 801d59e:	d019      	beq.n	801d5d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 801d5a0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801d5a2:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801d5a6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d5aa:	fb04 fa01 	mul.w	sl, r4, r1
 801d5ae:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d5b2:	fb08 f800 	mul.w	r8, r8, r0
 801d5b6:	f10a 0020 	add.w	r0, sl, #32
 801d5ba:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801d5be:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801d5c2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d5c6:	4441      	add	r1, r8
 801d5c8:	0a00      	lsrs	r0, r0, #8
 801d5ca:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801d5ce:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d5d2:	4301      	orrs	r1, r0
 801d5d4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801d5d6:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801d5da:	2cff      	cmp	r4, #255	; 0xff
 801d5dc:	d01a      	beq.n	801d614 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 801d5de:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801d5e2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d5e6:	fb04 fa00 	mul.w	sl, r4, r0
 801d5ea:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d5ee:	fb08 f80c 	mul.w	r8, r8, ip
 801d5f2:	f10a 0c20 	add.w	ip, sl, #32
 801d5f6:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801d5fa:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801d5fe:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d602:	4440      	add	r0, r8
 801d604:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d608:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801d60c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801d610:	ea40 000c 	orr.w	r0, r0, ip
 801d614:	fb15 fc02 	smulbb	ip, r5, r2
 801d618:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801d61c:	f1c5 0810 	rsb	r8, r5, #16
 801d620:	eba8 0802 	sub.w	r8, r8, r2
 801d624:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d628:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801d62c:	437a      	muls	r2, r7
 801d62e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801d632:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801d636:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d63a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801d63e:	fb09 2208 	mla	r2, r9, r8, r2
 801d642:	ea4a 0101 	orr.w	r1, sl, r1
 801d646:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801d64a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d64e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d652:	fb05 2201 	mla	r2, r5, r1, r2
 801d656:	ea4b 0000 	orr.w	r0, fp, r0
 801d65a:	fb0c 2200 	mla	r2, ip, r0, r2
 801d65e:	0d57      	lsrs	r7, r2, #21
 801d660:	0952      	lsrs	r2, r2, #5
 801d662:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d666:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d66a:	433a      	orrs	r2, r7
 801d66c:	2bff      	cmp	r3, #255	; 0xff
 801d66e:	b292      	uxth	r2, r2
 801d670:	d127      	bne.n	801d6c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 801d672:	f8ae 2000 	strh.w	r2, [lr]
 801d676:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d678:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801d67a:	4413      	add	r3, r2
 801d67c:	931d      	str	r3, [sp, #116]	; 0x74
 801d67e:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801d680:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d682:	441a      	add	r2, r3
 801d684:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d686:	921e      	str	r2, [sp, #120]	; 0x78
 801d688:	3b01      	subs	r3, #1
 801d68a:	f10e 0e02 	add.w	lr, lr, #2
 801d68e:	930f      	str	r3, [sp, #60]	; 0x3c
 801d690:	e627      	b.n	801d2e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801d692:	fb08 f000 	mul.w	r0, r8, r0
 801d696:	fb09 0303 	mla	r3, r9, r3, r0
 801d69a:	e71b      	b.n	801d4d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 801d69c:	46b9      	mov	r9, r7
 801d69e:	e743      	b.n	801d528 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 801d6a0:	f1c2 0110 	rsb	r1, r2, #16
 801d6a4:	437a      	muls	r2, r7
 801d6a6:	fb09 2901 	mla	r9, r9, r1, r2
 801d6aa:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d6ae:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801d6b2:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801d6b6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d6ba:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d6be:	4302      	orrs	r2, r0
 801d6c0:	e7d4      	b.n	801d66c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 801d6c2:	f8be 7000 	ldrh.w	r7, [lr]
 801d6c6:	4c1c      	ldr	r4, [pc, #112]	; (801d738 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801d6c8:	43db      	mvns	r3, r3
 801d6ca:	1238      	asrs	r0, r7, #8
 801d6cc:	fa5f fc83 	uxtb.w	ip, r3
 801d6d0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d6d4:	10fd      	asrs	r5, r7, #3
 801d6d6:	fb00 f00c 	mul.w	r0, r0, ip
 801d6da:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d6de:	fb05 f10c 	mul.w	r1, r5, ip
 801d6e2:	1c45      	adds	r5, r0, #1
 801d6e4:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801d6e8:	1215      	asrs	r5, r2, #8
 801d6ea:	f025 0507 	bic.w	r5, r5, #7
 801d6ee:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801d6f2:	1c4d      	adds	r5, r1, #1
 801d6f4:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801d6f8:	10d1      	asrs	r1, r2, #3
 801d6fa:	f021 0103 	bic.w	r1, r1, #3
 801d6fe:	00fb      	lsls	r3, r7, #3
 801d700:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801d704:	b2db      	uxtb	r3, r3
 801d706:	b2c0      	uxtb	r0, r0
 801d708:	00c9      	lsls	r1, r1, #3
 801d70a:	fb03 f30c 	mul.w	r3, r3, ip
 801d70e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d712:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801d716:	4308      	orrs	r0, r1
 801d718:	1c59      	adds	r1, r3, #1
 801d71a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801d71e:	00d2      	lsls	r2, r2, #3
 801d720:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801d724:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801d728:	4318      	orrs	r0, r3
 801d72a:	f8ae 0000 	strh.w	r0, [lr]
 801d72e:	e7a2      	b.n	801d676 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801d730:	b013      	add	sp, #76	; 0x4c
 801d732:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d736:	bf00      	nop
 801d738:	fffff800 	.word	0xfffff800

0801d73c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801d73c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d740:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 801d744:	fb05 4c03 	mla	ip, r5, r3, r4
 801d748:	2d00      	cmp	r5, #0
 801d74a:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801d74e:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 801d752:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801d756:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801d75a:	8808      	ldrh	r0, [r1, #0]
 801d75c:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801d760:	f2c0 80a7 	blt.w	801d8b2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801d764:	45aa      	cmp	sl, r5
 801d766:	f340 80a4 	ble.w	801d8b2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801d76a:	2c00      	cmp	r4, #0
 801d76c:	f2c0 809f 	blt.w	801d8ae <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801d770:	42a3      	cmp	r3, r4
 801d772:	f340 809c 	ble.w	801d8ae <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801d776:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801d77a:	1c62      	adds	r2, r4, #1
 801d77c:	f100 809c 	bmi.w	801d8b8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d780:	4293      	cmp	r3, r2
 801d782:	f340 8099 	ble.w	801d8b8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d786:	f1b9 0f00 	cmp.w	r9, #0
 801d78a:	f000 8095 	beq.w	801d8b8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d78e:	f8be c002 	ldrh.w	ip, [lr, #2]
 801d792:	3501      	adds	r5, #1
 801d794:	f100 8094 	bmi.w	801d8c0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d798:	45aa      	cmp	sl, r5
 801d79a:	f340 8091 	ble.w	801d8c0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d79e:	2f00      	cmp	r7, #0
 801d7a0:	f000 808e 	beq.w	801d8c0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d7a4:	2c00      	cmp	r4, #0
 801d7a6:	f2c0 8089 	blt.w	801d8bc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801d7aa:	42a3      	cmp	r3, r4
 801d7ac:	f340 8086 	ble.w	801d8bc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801d7b0:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801d7b4:	3401      	adds	r4, #1
 801d7b6:	f100 8086 	bmi.w	801d8c6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d7ba:	42a3      	cmp	r3, r4
 801d7bc:	f340 8083 	ble.w	801d8c6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d7c0:	f1b9 0f00 	cmp.w	r9, #0
 801d7c4:	d07f      	beq.n	801d8c6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d7c6:	3301      	adds	r3, #1
 801d7c8:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801d7cc:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801d7d0:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d7d4:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801d7d8:	fb19 fe07 	smulbb	lr, r9, r7
 801d7dc:	ea44 0808 	orr.w	r8, r4, r8
 801d7e0:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801d7e4:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801d7e8:	f1c7 0210 	rsb	r2, r7, #16
 801d7ec:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d7f0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d7f4:	ea44 0c0c 	orr.w	ip, r4, ip
 801d7f8:	eba2 0209 	sub.w	r2, r2, r9
 801d7fc:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801d800:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801d804:	fb04 f40c 	mul.w	r4, r4, ip
 801d808:	fb02 4808 	mla	r8, r2, r8, r4
 801d80c:	041a      	lsls	r2, r3, #16
 801d80e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d812:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d816:	4313      	orrs	r3, r2
 801d818:	042a      	lsls	r2, r5, #16
 801d81a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d81e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801d822:	fb0e 8303 	mla	r3, lr, r3, r8
 801d826:	432a      	orrs	r2, r5
 801d828:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801d82c:	fb07 3202 	mla	r2, r7, r2, r3
 801d830:	0d53      	lsrs	r3, r2, #21
 801d832:	0952      	lsrs	r2, r2, #5
 801d834:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d838:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d83c:	431a      	orrs	r2, r3
 801d83e:	b293      	uxth	r3, r2
 801d840:	b2b4      	uxth	r4, r6
 801d842:	1202      	asrs	r2, r0, #8
 801d844:	43f6      	mvns	r6, r6
 801d846:	b2f6      	uxtb	r6, r6
 801d848:	121d      	asrs	r5, r3, #8
 801d84a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801d84e:	fb12 f206 	smulbb	r2, r2, r6
 801d852:	10c7      	asrs	r7, r0, #3
 801d854:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d858:	00c0      	lsls	r0, r0, #3
 801d85a:	fb05 2504 	mla	r5, r5, r4, r2
 801d85e:	b2c0      	uxtb	r0, r0
 801d860:	10da      	asrs	r2, r3, #3
 801d862:	00db      	lsls	r3, r3, #3
 801d864:	b2db      	uxtb	r3, r3
 801d866:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d86a:	fb10 f006 	smulbb	r0, r0, r6
 801d86e:	b2ad      	uxth	r5, r5
 801d870:	fb03 0004 	mla	r0, r3, r4, r0
 801d874:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d878:	fb17 f706 	smulbb	r7, r7, r6
 801d87c:	b280      	uxth	r0, r0
 801d87e:	1c6b      	adds	r3, r5, #1
 801d880:	fb02 7204 	mla	r2, r2, r4, r7
 801d884:	b292      	uxth	r2, r2
 801d886:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d88a:	1c43      	adds	r3, r0, #1
 801d88c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801d890:	1c50      	adds	r0, r2, #1
 801d892:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801d896:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d89a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d89e:	0952      	lsrs	r2, r2, #5
 801d8a0:	432b      	orrs	r3, r5
 801d8a2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d8a6:	4313      	orrs	r3, r2
 801d8a8:	800b      	strh	r3, [r1, #0]
 801d8aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d8ae:	4680      	mov	r8, r0
 801d8b0:	e763      	b.n	801d77a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801d8b2:	4684      	mov	ip, r0
 801d8b4:	4680      	mov	r8, r0
 801d8b6:	e76c      	b.n	801d792 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801d8b8:	4684      	mov	ip, r0
 801d8ba:	e76a      	b.n	801d792 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801d8bc:	4605      	mov	r5, r0
 801d8be:	e779      	b.n	801d7b4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801d8c0:	4603      	mov	r3, r0
 801d8c2:	4605      	mov	r5, r0
 801d8c4:	e782      	b.n	801d7cc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801d8c6:	4603      	mov	r3, r0
 801d8c8:	e780      	b.n	801d7cc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801d8ca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d8ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d8ce:	b093      	sub	sp, #76	; 0x4c
 801d8d0:	461d      	mov	r5, r3
 801d8d2:	9210      	str	r2, [sp, #64]	; 0x40
 801d8d4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801d8d6:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 801d8da:	920b      	str	r2, [sp, #44]	; 0x2c
 801d8dc:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 801d8e0:	910a      	str	r1, [sp, #40]	; 0x28
 801d8e2:	6859      	ldr	r1, [r3, #4]
 801d8e4:	681b      	ldr	r3, [r3, #0]
 801d8e6:	9011      	str	r0, [sp, #68]	; 0x44
 801d8e8:	fb01 2707 	mla	r7, r1, r7, r2
 801d8ec:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801d8f0:	9307      	str	r3, [sp, #28]
 801d8f2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d8f4:	681b      	ldr	r3, [r3, #0]
 801d8f6:	9309      	str	r3, [sp, #36]	; 0x24
 801d8f8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d8fa:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801d8fe:	43db      	mvns	r3, r3
 801d900:	b2db      	uxtb	r3, r3
 801d902:	9308      	str	r3, [sp, #32]
 801d904:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d906:	2b00      	cmp	r3, #0
 801d908:	dc03      	bgt.n	801d912 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801d90a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d90c:	2b00      	cmp	r3, #0
 801d90e:	f340 8203 	ble.w	801dd18 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801d912:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d914:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d918:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d91c:	1e48      	subs	r0, r1, #1
 801d91e:	f102 3cff 	add.w	ip, r2, #4294967295
 801d922:	2d00      	cmp	r5, #0
 801d924:	f340 80da 	ble.w	801dadc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801d928:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801d92c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d930:	d406      	bmi.n	801d940 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d932:	4586      	cmp	lr, r0
 801d934:	da04      	bge.n	801d940 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d936:	2b00      	cmp	r3, #0
 801d938:	db02      	blt.n	801d940 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d93a:	4563      	cmp	r3, ip
 801d93c:	f2c0 80cf 	blt.w	801dade <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d940:	f11e 0e01 	adds.w	lr, lr, #1
 801d944:	f100 80c1 	bmi.w	801daca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d948:	4571      	cmp	r1, lr
 801d94a:	f2c0 80be 	blt.w	801daca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d94e:	3301      	adds	r3, #1
 801d950:	f100 80bb 	bmi.w	801daca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d954:	429a      	cmp	r2, r3
 801d956:	f2c0 80b8 	blt.w	801daca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d95a:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801d95e:	46a9      	mov	r9, r5
 801d960:	f1b9 0f00 	cmp.w	r9, #0
 801d964:	f340 80d8 	ble.w	801db18 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801d968:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d96a:	1421      	asrs	r1, r4, #16
 801d96c:	ea4f 4026 	mov.w	r0, r6, asr #16
 801d970:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d974:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801d978:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801d97c:	f100 8111 	bmi.w	801dba2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d980:	f10e 3aff 	add.w	sl, lr, #4294967295
 801d984:	4551      	cmp	r1, sl
 801d986:	f280 810c 	bge.w	801dba2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d98a:	2800      	cmp	r0, #0
 801d98c:	f2c0 8109 	blt.w	801dba2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d990:	f103 3aff 	add.w	sl, r3, #4294967295
 801d994:	4550      	cmp	r0, sl
 801d996:	f280 8104 	bge.w	801dba2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d99a:	fa0f f38e 	sxth.w	r3, lr
 801d99e:	fb00 1103 	mla	r1, r0, r3, r1
 801d9a2:	9809      	ldr	r0, [sp, #36]	; 0x24
 801d9a4:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801d9a8:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801d9ac:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801d9b0:	f1bc 0f00 	cmp.w	ip, #0
 801d9b4:	d007      	beq.n	801d9c6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801d9b6:	005b      	lsls	r3, r3, #1
 801d9b8:	eb0a 0003 	add.w	r0, sl, r3
 801d9bc:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801d9c0:	930c      	str	r3, [sp, #48]	; 0x30
 801d9c2:	8843      	ldrh	r3, [r0, #2]
 801d9c4:	930d      	str	r3, [sp, #52]	; 0x34
 801d9c6:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801d9ca:	fb12 f30c 	smulbb	r3, r2, ip
 801d9ce:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801d9d2:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d9d6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d9da:	10db      	asrs	r3, r3, #3
 801d9dc:	ea40 000e 	orr.w	r0, r0, lr
 801d9e0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d9e4:	f1cc 0e10 	rsb	lr, ip, #16
 801d9e8:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801d9ec:	ebae 0e02 	sub.w	lr, lr, r2
 801d9f0:	ea4a 0101 	orr.w	r1, sl, r1
 801d9f4:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801d9f8:	4351      	muls	r1, r2
 801d9fa:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801d9fc:	9f08      	ldr	r7, [sp, #32]
 801d9fe:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801da02:	fb0e 1e00 	mla	lr, lr, r0, r1
 801da06:	0410      	lsls	r0, r2, #16
 801da08:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801da0c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801da10:	4310      	orrs	r0, r2
 801da12:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801da14:	990c      	ldr	r1, [sp, #48]	; 0x30
 801da16:	0412      	lsls	r2, r2, #16
 801da18:	fb03 e000 	mla	r0, r3, r0, lr
 801da1c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801da20:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801da24:	ea42 020e 	orr.w	r2, r2, lr
 801da28:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801da2c:	fb03 0302 	mla	r3, r3, r2, r0
 801da30:	0d5a      	lsrs	r2, r3, #21
 801da32:	095b      	lsrs	r3, r3, #5
 801da34:	f8b8 0000 	ldrh.w	r0, [r8]
 801da38:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801da3c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801da40:	4313      	orrs	r3, r2
 801da42:	b29b      	uxth	r3, r3
 801da44:	1201      	asrs	r1, r0, #8
 801da46:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801da4a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801da4e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801da52:	fb11 f107 	smulbb	r1, r1, r7
 801da56:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801da5a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801da5e:	00c0      	lsls	r0, r0, #3
 801da60:	fb0c 1c02 	mla	ip, ip, r2, r1
 801da64:	b2c0      	uxtb	r0, r0
 801da66:	10d9      	asrs	r1, r3, #3
 801da68:	00db      	lsls	r3, r3, #3
 801da6a:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801da6e:	b2db      	uxtb	r3, r3
 801da70:	fb10 f007 	smulbb	r0, r0, r7
 801da74:	fa1f fc8c 	uxth.w	ip, ip
 801da78:	fb03 0302 	mla	r3, r3, r2, r0
 801da7c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801da80:	fb1e fe07 	smulbb	lr, lr, r7
 801da84:	fb01 e102 	mla	r1, r1, r2, lr
 801da88:	b29a      	uxth	r2, r3
 801da8a:	f10c 0301 	add.w	r3, ip, #1
 801da8e:	b289      	uxth	r1, r1
 801da90:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801da94:	1c53      	adds	r3, r2, #1
 801da96:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801da9a:	1c4a      	adds	r2, r1, #1
 801da9c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801daa0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801daa4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801daa8:	0949      	lsrs	r1, r1, #5
 801daaa:	ea43 030c 	orr.w	r3, r3, ip
 801daae:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801dab2:	430b      	orrs	r3, r1
 801dab4:	f8a8 3000 	strh.w	r3, [r8]
 801dab8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801daba:	441c      	add	r4, r3
 801dabc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801dabe:	f108 0802 	add.w	r8, r8, #2
 801dac2:	441e      	add	r6, r3
 801dac4:	f109 39ff 	add.w	r9, r9, #4294967295
 801dac8:	e74a      	b.n	801d960 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801daca:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801dacc:	441c      	add	r4, r3
 801dace:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801dad0:	441e      	add	r6, r3
 801dad2:	9b07      	ldr	r3, [sp, #28]
 801dad4:	3302      	adds	r3, #2
 801dad6:	3d01      	subs	r5, #1
 801dad8:	9307      	str	r3, [sp, #28]
 801dada:	e722      	b.n	801d922 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801dadc:	d022      	beq.n	801db24 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801dade:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801dae0:	1e6b      	subs	r3, r5, #1
 801dae2:	fb00 4003 	mla	r0, r0, r3, r4
 801dae6:	1400      	asrs	r0, r0, #16
 801dae8:	f53f af37 	bmi.w	801d95a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801daec:	3901      	subs	r1, #1
 801daee:	4288      	cmp	r0, r1
 801daf0:	f6bf af33 	bge.w	801d95a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801daf4:	9920      	ldr	r1, [sp, #128]	; 0x80
 801daf6:	fb01 6303 	mla	r3, r1, r3, r6
 801dafa:	141b      	asrs	r3, r3, #16
 801dafc:	f53f af2d 	bmi.w	801d95a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801db00:	3a01      	subs	r2, #1
 801db02:	4293      	cmp	r3, r2
 801db04:	f6bf af29 	bge.w	801d95a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801db08:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801db0c:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 801db10:	46a8      	mov	r8, r5
 801db12:	f1b8 0f00 	cmp.w	r8, #0
 801db16:	dc5e      	bgt.n	801dbd6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801db18:	9b07      	ldr	r3, [sp, #28]
 801db1a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801db1e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801db22:	9307      	str	r3, [sp, #28]
 801db24:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801db26:	2b00      	cmp	r3, #0
 801db28:	f340 80f6 	ble.w	801dd18 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801db2c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801db30:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801db34:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801db38:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801db3a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801db3e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801db42:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801db46:	eef0 6a62 	vmov.f32	s13, s5
 801db4a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801db4e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801db52:	ee77 2a62 	vsub.f32	s5, s14, s5
 801db56:	ee16 4a90 	vmov	r4, s13
 801db5a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801db5e:	eef0 6a43 	vmov.f32	s13, s6
 801db62:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801db66:	ee12 2a90 	vmov	r2, s5
 801db6a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801db6e:	fb92 f3f3 	sdiv	r3, r2, r3
 801db72:	ee13 2a10 	vmov	r2, s6
 801db76:	931f      	str	r3, [sp, #124]	; 0x7c
 801db78:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801db7a:	fb92 f3f3 	sdiv	r3, r2, r3
 801db7e:	9320      	str	r3, [sp, #128]	; 0x80
 801db80:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801db82:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801db84:	3b01      	subs	r3, #1
 801db86:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801db8a:	930a      	str	r3, [sp, #40]	; 0x28
 801db8c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801db8e:	ee16 6a90 	vmov	r6, s13
 801db92:	bf14      	ite	ne
 801db94:	461d      	movne	r5, r3
 801db96:	4615      	moveq	r5, r2
 801db98:	eeb0 3a67 	vmov.f32	s6, s15
 801db9c:	eef0 2a47 	vmov.f32	s5, s14
 801dba0:	e6b0      	b.n	801d904 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801dba2:	f111 0a01 	adds.w	sl, r1, #1
 801dba6:	d487      	bmi.n	801dab8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801dba8:	45d6      	cmp	lr, sl
 801dbaa:	db85      	blt.n	801dab8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801dbac:	f110 0a01 	adds.w	sl, r0, #1
 801dbb0:	d482      	bmi.n	801dab8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801dbb2:	4553      	cmp	r3, sl
 801dbb4:	db80      	blt.n	801dab8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801dbb6:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801dbb8:	9101      	str	r1, [sp, #4]
 801dbba:	b21b      	sxth	r3, r3
 801dbbc:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801dbc0:	9300      	str	r3, [sp, #0]
 801dbc2:	e9cd c704 	strd	ip, r7, [sp, #16]
 801dbc6:	fa0f f38e 	sxth.w	r3, lr
 801dbca:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801dbcc:	9811      	ldr	r0, [sp, #68]	; 0x44
 801dbce:	4641      	mov	r1, r8
 801dbd0:	f7ff fdb4 	bl	801d73c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801dbd4:	e770      	b.n	801dab8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801dbd6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801dbd8:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801dbda:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801dbde:	1430      	asrs	r0, r6, #16
 801dbe0:	1423      	asrs	r3, r4, #16
 801dbe2:	fb01 3000 	mla	r0, r1, r0, r3
 801dbe6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dbe8:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801dbec:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801dbf0:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801dbf4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801dbf8:	8858      	ldrh	r0, [r3, #2]
 801dbfa:	f1be 0f00 	cmp.w	lr, #0
 801dbfe:	d00b      	beq.n	801dc18 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801dc00:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801dc04:	3901      	subs	r1, #1
 801dc06:	0049      	lsls	r1, r1, #1
 801dc08:	3102      	adds	r1, #2
 801dc0a:	eb03 0b01 	add.w	fp, r3, r1
 801dc0e:	5a5b      	ldrh	r3, [r3, r1]
 801dc10:	930e      	str	r3, [sp, #56]	; 0x38
 801dc12:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801dc16:	930f      	str	r3, [sp, #60]	; 0x3c
 801dc18:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801dc1c:	fb12 f30e 	smulbb	r3, r2, lr
 801dc20:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801dc24:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801dc28:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 801dc2c:	10db      	asrs	r3, r3, #3
 801dc2e:	ea41 010c 	orr.w	r1, r1, ip
 801dc32:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801dc36:	f1ce 0c10 	rsb	ip, lr, #16
 801dc3a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801dc3e:	ebac 0c02 	sub.w	ip, ip, r2
 801dc42:	ea4b 0000 	orr.w	r0, fp, r0
 801dc46:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801dc4a:	4350      	muls	r0, r2
 801dc4c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801dc4e:	9f08      	ldr	r7, [sp, #32]
 801dc50:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801dc54:	fb0c 0c01 	mla	ip, ip, r1, r0
 801dc58:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801dc5c:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 801dc60:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801dc62:	980e      	ldr	r0, [sp, #56]	; 0x38
 801dc64:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801dc68:	0412      	lsls	r2, r2, #16
 801dc6a:	ea4b 0101 	orr.w	r1, fp, r1
 801dc6e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801dc72:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801dc76:	fb03 c101 	mla	r1, r3, r1, ip
 801dc7a:	4302      	orrs	r2, r0
 801dc7c:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801dc80:	fb03 1202 	mla	r2, r3, r2, r1
 801dc84:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801dc88:	0952      	lsrs	r2, r2, #5
 801dc8a:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 801dc8e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801dc92:	f8b9 2000 	ldrh.w	r2, [r9]
 801dc96:	ea4b 0303 	orr.w	r3, fp, r3
 801dc9a:	b29b      	uxth	r3, r3
 801dc9c:	1211      	asrs	r1, r2, #8
 801dc9e:	1218      	asrs	r0, r3, #8
 801dca0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801dca4:	fb11 f107 	smulbb	r1, r1, r7
 801dca8:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801dcac:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801dcb0:	00d2      	lsls	r2, r2, #3
 801dcb2:	fb00 100a 	mla	r0, r0, sl, r1
 801dcb6:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801dcba:	10d9      	asrs	r1, r3, #3
 801dcbc:	b2d2      	uxtb	r2, r2
 801dcbe:	00db      	lsls	r3, r3, #3
 801dcc0:	fb1c fc07 	smulbb	ip, ip, r7
 801dcc4:	fb12 f207 	smulbb	r2, r2, r7
 801dcc8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801dccc:	b2db      	uxtb	r3, r3
 801dcce:	b280      	uxth	r0, r0
 801dcd0:	fb01 c10a 	mla	r1, r1, sl, ip
 801dcd4:	fb03 230a 	mla	r3, r3, sl, r2
 801dcd8:	b29b      	uxth	r3, r3
 801dcda:	b289      	uxth	r1, r1
 801dcdc:	1c42      	adds	r2, r0, #1
 801dcde:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801dce2:	f101 0c01 	add.w	ip, r1, #1
 801dce6:	1c5a      	adds	r2, r3, #1
 801dce8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801dcec:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801dcf0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801dcf2:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801dcf6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801dcfa:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801dcfe:	4310      	orrs	r0, r2
 801dd00:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801dd04:	441c      	add	r4, r3
 801dd06:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801dd08:	ea40 000c 	orr.w	r0, r0, ip
 801dd0c:	f829 0b02 	strh.w	r0, [r9], #2
 801dd10:	441e      	add	r6, r3
 801dd12:	f108 38ff 	add.w	r8, r8, #4294967295
 801dd16:	e6fc      	b.n	801db12 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801dd18:	b013      	add	sp, #76	; 0x4c
 801dd1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dd1e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801dd1e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801dd22:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801dd26:	fb0e 4703 	mla	r7, lr, r3, r4
 801dd2a:	f1be 0f00 	cmp.w	lr, #0
 801dd2e:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801dd32:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 801dd36:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 801dd3a:	8808      	ldrh	r0, [r1, #0]
 801dd3c:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801dd40:	db60      	blt.n	801de04 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801dd42:	45f1      	cmp	r9, lr
 801dd44:	dd5e      	ble.n	801de04 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801dd46:	2c00      	cmp	r4, #0
 801dd48:	db5a      	blt.n	801de00 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801dd4a:	42a3      	cmp	r3, r4
 801dd4c:	dd58      	ble.n	801de00 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801dd4e:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801dd52:	1c62      	adds	r2, r4, #1
 801dd54:	d459      	bmi.n	801de0a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801dd56:	4293      	cmp	r3, r2
 801dd58:	dd57      	ble.n	801de0a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801dd5a:	2d00      	cmp	r5, #0
 801dd5c:	d055      	beq.n	801de0a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801dd5e:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801dd62:	f11e 0e01 	adds.w	lr, lr, #1
 801dd66:	d454      	bmi.n	801de12 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801dd68:	45f1      	cmp	r9, lr
 801dd6a:	dd52      	ble.n	801de12 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801dd6c:	2e00      	cmp	r6, #0
 801dd6e:	d050      	beq.n	801de12 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801dd70:	2c00      	cmp	r4, #0
 801dd72:	db4c      	blt.n	801de0e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801dd74:	42a3      	cmp	r3, r4
 801dd76:	dd4a      	ble.n	801de0e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801dd78:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801dd7c:	3401      	adds	r4, #1
 801dd7e:	d405      	bmi.n	801dd8c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801dd80:	42a3      	cmp	r3, r4
 801dd82:	dd03      	ble.n	801dd8c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801dd84:	b115      	cbz	r5, 801dd8c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801dd86:	3301      	adds	r3, #1
 801dd88:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801dd8c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801dd90:	fb15 f406 	smulbb	r4, r5, r6
 801dd94:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801dd98:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801dd9c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801dda0:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801dda4:	ea43 0c0c 	orr.w	ip, r3, ip
 801dda8:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801ddac:	f1c6 0310 	rsb	r3, r6, #16
 801ddb0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801ddb4:	1b5b      	subs	r3, r3, r5
 801ddb6:	ea4e 0707 	orr.w	r7, lr, r7
 801ddba:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801ddbe:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801ddc2:	437d      	muls	r5, r7
 801ddc4:	fb03 5c0c 	mla	ip, r3, ip, r5
 801ddc8:	0403      	lsls	r3, r0, #16
 801ddca:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ddce:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ddd2:	4318      	orrs	r0, r3
 801ddd4:	0413      	lsls	r3, r2, #16
 801ddd6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ddda:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ddde:	4313      	orrs	r3, r2
 801dde0:	fb04 c000 	mla	r0, r4, r0, ip
 801dde4:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801dde8:	fb06 0003 	mla	r0, r6, r3, r0
 801ddec:	0d43      	lsrs	r3, r0, #21
 801ddee:	0940      	lsrs	r0, r0, #5
 801ddf0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ddf4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ddf8:	4318      	orrs	r0, r3
 801ddfa:	8008      	strh	r0, [r1, #0]
 801ddfc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801de00:	4684      	mov	ip, r0
 801de02:	e7a6      	b.n	801dd52 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801de04:	4607      	mov	r7, r0
 801de06:	4684      	mov	ip, r0
 801de08:	e7ab      	b.n	801dd62 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801de0a:	4607      	mov	r7, r0
 801de0c:	e7a9      	b.n	801dd62 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801de0e:	4602      	mov	r2, r0
 801de10:	e7b4      	b.n	801dd7c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801de12:	4602      	mov	r2, r0
 801de14:	e7ba      	b.n	801dd8c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801de16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801de16:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801de1a:	b08f      	sub	sp, #60	; 0x3c
 801de1c:	461d      	mov	r5, r3
 801de1e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801de20:	920c      	str	r2, [sp, #48]	; 0x30
 801de22:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 801de26:	9107      	str	r1, [sp, #28]
 801de28:	6859      	ldr	r1, [r3, #4]
 801de2a:	681b      	ldr	r3, [r3, #0]
 801de2c:	900d      	str	r0, [sp, #52]	; 0x34
 801de2e:	fb01 2707 	mla	r7, r1, r7, r2
 801de32:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801de36:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801de38:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 801de3c:	f8d3 8000 	ldr.w	r8, [r3]
 801de40:	9b07      	ldr	r3, [sp, #28]
 801de42:	2b00      	cmp	r3, #0
 801de44:	dc03      	bgt.n	801de4e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801de46:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801de48:	2b00      	cmp	r3, #0
 801de4a:	f340 8181 	ble.w	801e150 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801de4e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801de50:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801de54:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801de58:	1e48      	subs	r0, r1, #1
 801de5a:	f102 3cff 	add.w	ip, r2, #4294967295
 801de5e:	2d00      	cmp	r5, #0
 801de60:	f340 809b 	ble.w	801df9a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801de64:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801de68:	ea4f 4326 	mov.w	r3, r6, asr #16
 801de6c:	d406      	bmi.n	801de7c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801de6e:	4586      	cmp	lr, r0
 801de70:	da04      	bge.n	801de7c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801de72:	2b00      	cmp	r3, #0
 801de74:	db02      	blt.n	801de7c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801de76:	4563      	cmp	r3, ip
 801de78:	f2c0 8090 	blt.w	801df9c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801de7c:	f11e 0e01 	adds.w	lr, lr, #1
 801de80:	f100 8084 	bmi.w	801df8c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801de84:	4571      	cmp	r1, lr
 801de86:	f2c0 8081 	blt.w	801df8c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801de8a:	3301      	adds	r3, #1
 801de8c:	d47e      	bmi.n	801df8c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801de8e:	429a      	cmp	r2, r3
 801de90:	db7c      	blt.n	801df8c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801de92:	46aa      	mov	sl, r5
 801de94:	46b9      	mov	r9, r7
 801de96:	f1ba 0f00 	cmp.w	sl, #0
 801de9a:	f340 8099 	ble.w	801dfd0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801de9e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801dea0:	1421      	asrs	r1, r4, #16
 801dea2:	ea4f 4026 	mov.w	r0, r6, asr #16
 801dea6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801deaa:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801deae:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801deb2:	f100 80d0 	bmi.w	801e056 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801deb6:	f10e 3bff 	add.w	fp, lr, #4294967295
 801deba:	4559      	cmp	r1, fp
 801debc:	f280 80cb 	bge.w	801e056 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801dec0:	2800      	cmp	r0, #0
 801dec2:	f2c0 80c8 	blt.w	801e056 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801dec6:	f103 3bff 	add.w	fp, r3, #4294967295
 801deca:	4558      	cmp	r0, fp
 801decc:	f280 80c3 	bge.w	801e056 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801ded0:	fa0f fe8e 	sxth.w	lr, lr
 801ded4:	fb00 110e 	mla	r1, r0, lr, r1
 801ded8:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801dedc:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801dee0:	8841      	ldrh	r1, [r0, #2]
 801dee2:	f1bc 0f00 	cmp.w	ip, #0
 801dee6:	d00b      	beq.n	801df00 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801dee8:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 801deec:	3b01      	subs	r3, #1
 801deee:	005b      	lsls	r3, r3, #1
 801def0:	3302      	adds	r3, #2
 801def2:	eb00 0e03 	add.w	lr, r0, r3
 801def6:	5ac3      	ldrh	r3, [r0, r3]
 801def8:	9308      	str	r3, [sp, #32]
 801defa:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801defe:	9309      	str	r3, [sp, #36]	; 0x24
 801df00:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801df04:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801df08:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801df0c:	ea40 000b 	orr.w	r0, r0, fp
 801df10:	fb12 f30c 	smulbb	r3, r2, ip
 801df14:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801df18:	10db      	asrs	r3, r3, #3
 801df1a:	f1cc 0e10 	rsb	lr, ip, #16
 801df1e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801df22:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801df26:	ebae 0e02 	sub.w	lr, lr, r2
 801df2a:	ea4b 0101 	orr.w	r1, fp, r1
 801df2e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801df32:	4351      	muls	r1, r2
 801df34:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801df36:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801df3a:	fb0e 1e00 	mla	lr, lr, r0, r1
 801df3e:	0410      	lsls	r0, r2, #16
 801df40:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801df44:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801df48:	4310      	orrs	r0, r2
 801df4a:	9a08      	ldr	r2, [sp, #32]
 801df4c:	9908      	ldr	r1, [sp, #32]
 801df4e:	0412      	lsls	r2, r2, #16
 801df50:	fb03 e000 	mla	r0, r3, r0, lr
 801df54:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801df58:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801df5c:	ea42 020e 	orr.w	r2, r2, lr
 801df60:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801df64:	fb03 0302 	mla	r3, r3, r2, r0
 801df68:	0d5a      	lsrs	r2, r3, #21
 801df6a:	095b      	lsrs	r3, r3, #5
 801df6c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801df70:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801df74:	4313      	orrs	r3, r2
 801df76:	f8a9 3000 	strh.w	r3, [r9]
 801df7a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801df7c:	441c      	add	r4, r3
 801df7e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801df80:	f109 0902 	add.w	r9, r9, #2
 801df84:	441e      	add	r6, r3
 801df86:	f10a 3aff 	add.w	sl, sl, #4294967295
 801df8a:	e784      	b.n	801de96 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801df8c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801df8e:	441c      	add	r4, r3
 801df90:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801df92:	3d01      	subs	r5, #1
 801df94:	441e      	add	r6, r3
 801df96:	3702      	adds	r7, #2
 801df98:	e761      	b.n	801de5e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801df9a:	d01d      	beq.n	801dfd8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801df9c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801df9e:	1e6b      	subs	r3, r5, #1
 801dfa0:	fb00 4003 	mla	r0, r0, r3, r4
 801dfa4:	1400      	asrs	r0, r0, #16
 801dfa6:	f53f af74 	bmi.w	801de92 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801dfaa:	3901      	subs	r1, #1
 801dfac:	4288      	cmp	r0, r1
 801dfae:	f6bf af70 	bge.w	801de92 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801dfb2:	991c      	ldr	r1, [sp, #112]	; 0x70
 801dfb4:	fb01 6303 	mla	r3, r1, r3, r6
 801dfb8:	141b      	asrs	r3, r3, #16
 801dfba:	f53f af6a 	bmi.w	801de92 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801dfbe:	3a01      	subs	r2, #1
 801dfc0:	4293      	cmp	r3, r2
 801dfc2:	f6bf af66 	bge.w	801de92 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801dfc6:	46a9      	mov	r9, r5
 801dfc8:	46ba      	mov	sl, r7
 801dfca:	f1b9 0f00 	cmp.w	r9, #0
 801dfce:	dc5a      	bgt.n	801e086 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 801dfd0:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801dfd4:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801dfd8:	9b07      	ldr	r3, [sp, #28]
 801dfda:	2b00      	cmp	r3, #0
 801dfdc:	f340 80b8 	ble.w	801e150 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801dfe0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801dfe4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801dfe8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801dfec:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801dfee:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801dff2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801dff6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801dffa:	eef0 6a62 	vmov.f32	s13, s5
 801dffe:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e002:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e006:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e00a:	ee16 4a90 	vmov	r4, s13
 801e00e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e012:	eef0 6a43 	vmov.f32	s13, s6
 801e016:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e01a:	ee12 2a90 	vmov	r2, s5
 801e01e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e022:	fb92 f3f3 	sdiv	r3, r2, r3
 801e026:	ee13 2a10 	vmov	r2, s6
 801e02a:	931b      	str	r3, [sp, #108]	; 0x6c
 801e02c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e02e:	fb92 f3f3 	sdiv	r3, r2, r3
 801e032:	931c      	str	r3, [sp, #112]	; 0x70
 801e034:	9b07      	ldr	r3, [sp, #28]
 801e036:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801e038:	3b01      	subs	r3, #1
 801e03a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e03e:	9307      	str	r3, [sp, #28]
 801e040:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e042:	ee16 6a90 	vmov	r6, s13
 801e046:	bf14      	ite	ne
 801e048:	461d      	movne	r5, r3
 801e04a:	4615      	moveq	r5, r2
 801e04c:	eeb0 3a67 	vmov.f32	s6, s15
 801e050:	eef0 2a47 	vmov.f32	s5, s14
 801e054:	e6f4      	b.n	801de40 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801e056:	f111 0b01 	adds.w	fp, r1, #1
 801e05a:	d48e      	bmi.n	801df7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e05c:	45de      	cmp	lr, fp
 801e05e:	db8c      	blt.n	801df7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e060:	f110 0b01 	adds.w	fp, r0, #1
 801e064:	d489      	bmi.n	801df7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e066:	455b      	cmp	r3, fp
 801e068:	db87      	blt.n	801df7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e06a:	b21b      	sxth	r3, r3
 801e06c:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801e070:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801e074:	9300      	str	r3, [sp, #0]
 801e076:	4642      	mov	r2, r8
 801e078:	fa0f f38e 	sxth.w	r3, lr
 801e07c:	4649      	mov	r1, r9
 801e07e:	980d      	ldr	r0, [sp, #52]	; 0x34
 801e080:	f7ff fe4d 	bl	801dd1e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801e084:	e779      	b.n	801df7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e086:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e088:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801e08c:	1420      	asrs	r0, r4, #16
 801e08e:	1431      	asrs	r1, r6, #16
 801e090:	fb03 0101 	mla	r1, r3, r1, r0
 801e094:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801e098:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801e09c:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801e0a0:	8841      	ldrh	r1, [r0, #2]
 801e0a2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e0a6:	f1be 0f00 	cmp.w	lr, #0
 801e0aa:	d00b      	beq.n	801e0c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801e0ac:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 801e0b0:	3b01      	subs	r3, #1
 801e0b2:	005b      	lsls	r3, r3, #1
 801e0b4:	3302      	adds	r3, #2
 801e0b6:	eb00 0b03 	add.w	fp, r0, r3
 801e0ba:	5ac3      	ldrh	r3, [r0, r3]
 801e0bc:	930a      	str	r3, [sp, #40]	; 0x28
 801e0be:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801e0c2:	930b      	str	r3, [sp, #44]	; 0x2c
 801e0c4:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801e0c8:	fb12 f30e 	smulbb	r3, r2, lr
 801e0cc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801e0d0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801e0d4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801e0d8:	10db      	asrs	r3, r3, #3
 801e0da:	ea40 000c 	orr.w	r0, r0, ip
 801e0de:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801e0e2:	f1ce 0c10 	rsb	ip, lr, #16
 801e0e6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801e0ea:	ebac 0c02 	sub.w	ip, ip, r2
 801e0ee:	ea4b 0101 	orr.w	r1, fp, r1
 801e0f2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801e0f6:	4351      	muls	r1, r2
 801e0f8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e0fa:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801e0fe:	fb0c 1c00 	mla	ip, ip, r0, r1
 801e102:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801e106:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 801e10a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801e10c:	990a      	ldr	r1, [sp, #40]	; 0x28
 801e10e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801e112:	0412      	lsls	r2, r2, #16
 801e114:	ea4b 0000 	orr.w	r0, fp, r0
 801e118:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801e11c:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 801e120:	fb03 c000 	mla	r0, r3, r0, ip
 801e124:	ea42 0b0b 	orr.w	fp, r2, fp
 801e128:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801e12c:	fb03 000b 	mla	r0, r3, fp, r0
 801e130:	0d43      	lsrs	r3, r0, #21
 801e132:	0940      	lsrs	r0, r0, #5
 801e134:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e138:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801e13c:	4318      	orrs	r0, r3
 801e13e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801e140:	f82a 0b02 	strh.w	r0, [sl], #2
 801e144:	441c      	add	r4, r3
 801e146:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801e148:	f109 39ff 	add.w	r9, r9, #4294967295
 801e14c:	441e      	add	r6, r3
 801e14e:	e73c      	b.n	801dfca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801e150:	b00f      	add	sp, #60	; 0x3c
 801e152:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e156 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801e156:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e15a:	b085      	sub	sp, #20
 801e15c:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801e160:	9102      	str	r1, [sp, #8]
 801e162:	2c00      	cmp	r4, #0
 801e164:	fb04 7103 	mla	r1, r4, r3, r7
 801e168:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801e16c:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801e170:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801e174:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801e178:	f2c0 811b 	blt.w	801e3b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801e17c:	45a6      	cmp	lr, r4
 801e17e:	f340 8118 	ble.w	801e3b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801e182:	2f00      	cmp	r7, #0
 801e184:	f2c0 8113 	blt.w	801e3ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801e188:	42bb      	cmp	r3, r7
 801e18a:	f340 8110 	ble.w	801e3ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801e18e:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801e192:	1c7a      	adds	r2, r7, #1
 801e194:	f100 8110 	bmi.w	801e3b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801e198:	4293      	cmp	r3, r2
 801e19a:	f340 810d 	ble.w	801e3b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801e19e:	2e00      	cmp	r6, #0
 801e1a0:	f000 810c 	beq.w	801e3bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801e1a4:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801e1a8:	3401      	adds	r4, #1
 801e1aa:	f100 810b 	bmi.w	801e3c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801e1ae:	45a6      	cmp	lr, r4
 801e1b0:	f340 8108 	ble.w	801e3c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801e1b4:	2800      	cmp	r0, #0
 801e1b6:	f000 8108 	beq.w	801e3ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801e1ba:	2f00      	cmp	r7, #0
 801e1bc:	f2c0 8100 	blt.w	801e3c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801e1c0:	42bb      	cmp	r3, r7
 801e1c2:	f340 80fd 	ble.w	801e3c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801e1c6:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801e1ca:	3701      	adds	r7, #1
 801e1cc:	f100 8100 	bmi.w	801e3d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801e1d0:	42bb      	cmp	r3, r7
 801e1d2:	f340 80fd 	ble.w	801e3d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801e1d6:	2e00      	cmp	r6, #0
 801e1d8:	f000 80fc 	beq.w	801e3d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801e1dc:	3301      	adds	r3, #1
 801e1de:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801e1e2:	b2b6      	uxth	r6, r6
 801e1e4:	b280      	uxth	r0, r0
 801e1e6:	fb00 fe06 	mul.w	lr, r0, r6
 801e1ea:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801e1ee:	0136      	lsls	r6, r6, #4
 801e1f0:	eba6 070e 	sub.w	r7, r6, lr
 801e1f4:	b280      	uxth	r0, r0
 801e1f6:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801e1fa:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801e1fe:	b2bf      	uxth	r7, r7
 801e200:	1a1b      	subs	r3, r3, r0
 801e202:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801e206:	b29b      	uxth	r3, r3
 801e208:	fb0a f607 	mul.w	r6, sl, r7
 801e20c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801e210:	fb0b 6603 	mla	r6, fp, r3, r6
 801e214:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801e218:	fb00 6609 	mla	r6, r0, r9, r6
 801e21c:	fb0e 6608 	mla	r6, lr, r8, r6
 801e220:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801e224:	9600      	str	r6, [sp, #0]
 801e226:	2e00      	cmp	r6, #0
 801e228:	f000 80be 	beq.w	801e3a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801e22c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e230:	fb0b fc0c 	mul.w	ip, fp, ip
 801e234:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801e238:	fb0b f505 	mul.w	r5, fp, r5
 801e23c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801e240:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801e244:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e248:	44dc      	add	ip, fp
 801e24a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e24e:	9501      	str	r5, [sp, #4]
 801e250:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801e254:	9503      	str	r5, [sp, #12]
 801e256:	9d01      	ldr	r5, [sp, #4]
 801e258:	9e02      	ldr	r6, [sp, #8]
 801e25a:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801e25e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e262:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801e266:	fb0a fc0c 	mul.w	ip, sl, ip
 801e26a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801e26e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801e272:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801e276:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e27a:	4465      	add	r5, ip
 801e27c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801e280:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801e284:	fb09 fc0c 	mul.w	ip, r9, ip
 801e288:	fb09 f904 	mul.w	r9, r9, r4
 801e28c:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801e290:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801e294:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801e298:	fb08 f404 	mul.w	r4, r8, r4
 801e29c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801e2a0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e2a4:	fb08 f802 	mul.w	r8, r8, r2
 801e2a8:	fb0a fa01 	mul.w	sl, sl, r1
 801e2ac:	0a22      	lsrs	r2, r4, #8
 801e2ae:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801e2b2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e2b6:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801e2ba:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801e2be:	4414      	add	r4, r2
 801e2c0:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801e2c4:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801e2c8:	0a2d      	lsrs	r5, r5, #8
 801e2ca:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801e2ce:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801e2d2:	9a03      	ldr	r2, [sp, #12]
 801e2d4:	8836      	ldrh	r6, [r6, #0]
 801e2d6:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801e2da:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e2de:	437d      	muls	r5, r7
 801e2e0:	4461      	add	r1, ip
 801e2e2:	0a24      	lsrs	r4, r4, #8
 801e2e4:	fb02 5503 	mla	r5, r2, r3, r5
 801e2e8:	0a09      	lsrs	r1, r1, #8
 801e2ea:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801e2ee:	fb04 540e 	mla	r4, r4, lr, r5
 801e2f2:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801e2f6:	fb01 4100 	mla	r1, r1, r0, r4
 801e2fa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e2fe:	0a09      	lsrs	r1, r1, #8
 801e300:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e304:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801e308:	fb07 f70a 	mul.w	r7, r7, sl
 801e30c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801e310:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801e314:	fb03 7101 	mla	r1, r3, r1, r7
 801e318:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e31c:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801e320:	fb0e 1e08 	mla	lr, lr, r8, r1
 801e324:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801e328:	fb00 e101 	mla	r1, r0, r1, lr
 801e32c:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801e330:	9a00      	ldr	r2, [sp, #0]
 801e332:	b287      	uxth	r7, r0
 801e334:	437a      	muls	r2, r7
 801e336:	0a09      	lsrs	r1, r1, #8
 801e338:	1c53      	adds	r3, r2, #1
 801e33a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801e33e:	4321      	orrs	r1, r4
 801e340:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e344:	1235      	asrs	r5, r6, #8
 801e346:	0c0a      	lsrs	r2, r1, #16
 801e348:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801e34c:	b2db      	uxtb	r3, r3
 801e34e:	fb12 f207 	smulbb	r2, r2, r7
 801e352:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e356:	fb05 2503 	mla	r5, r5, r3, r2
 801e35a:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801e35e:	10f2      	asrs	r2, r6, #3
 801e360:	b2c8      	uxtb	r0, r1
 801e362:	00f6      	lsls	r6, r6, #3
 801e364:	fb14 f407 	smulbb	r4, r4, r7
 801e368:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e36c:	b2f6      	uxtb	r6, r6
 801e36e:	fb10 f007 	smulbb	r0, r0, r7
 801e372:	fb02 4203 	mla	r2, r2, r3, r4
 801e376:	b2ad      	uxth	r5, r5
 801e378:	fb06 0303 	mla	r3, r6, r3, r0
 801e37c:	b299      	uxth	r1, r3
 801e37e:	b294      	uxth	r4, r2
 801e380:	1c6b      	adds	r3, r5, #1
 801e382:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e386:	1c62      	adds	r2, r4, #1
 801e388:	1c4b      	adds	r3, r1, #1
 801e38a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801e38e:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801e392:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801e396:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e39a:	0952      	lsrs	r2, r2, #5
 801e39c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e3a0:	432b      	orrs	r3, r5
 801e3a2:	4313      	orrs	r3, r2
 801e3a4:	9a02      	ldr	r2, [sp, #8]
 801e3a6:	8013      	strh	r3, [r2, #0]
 801e3a8:	b005      	add	sp, #20
 801e3aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e3ae:	2500      	movs	r5, #0
 801e3b0:	e6ef      	b.n	801e192 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801e3b2:	2100      	movs	r1, #0
 801e3b4:	460d      	mov	r5, r1
 801e3b6:	e6f7      	b.n	801e1a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801e3b8:	2100      	movs	r1, #0
 801e3ba:	e6f5      	b.n	801e1a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801e3bc:	4631      	mov	r1, r6
 801e3be:	e6f3      	b.n	801e1a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801e3c0:	2400      	movs	r4, #0
 801e3c2:	e702      	b.n	801e1ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801e3c4:	2200      	movs	r2, #0
 801e3c6:	4614      	mov	r4, r2
 801e3c8:	e70b      	b.n	801e1e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801e3ca:	4602      	mov	r2, r0
 801e3cc:	4604      	mov	r4, r0
 801e3ce:	e708      	b.n	801e1e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801e3d0:	2200      	movs	r2, #0
 801e3d2:	e706      	b.n	801e1e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801e3d4:	4632      	mov	r2, r6
 801e3d6:	e704      	b.n	801e1e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801e3d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e3d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e3dc:	b09d      	sub	sp, #116	; 0x74
 801e3de:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801e3e2:	9219      	str	r2, [sp, #100]	; 0x64
 801e3e4:	9307      	str	r3, [sp, #28]
 801e3e6:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801e3e8:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 801e3ec:	931a      	str	r3, [sp, #104]	; 0x68
 801e3ee:	9117      	str	r1, [sp, #92]	; 0x5c
 801e3f0:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801e3f4:	901b      	str	r0, [sp, #108]	; 0x6c
 801e3f6:	6850      	ldr	r0, [r2, #4]
 801e3f8:	6812      	ldr	r2, [r2, #0]
 801e3fa:	fb00 1303 	mla	r3, r0, r3, r1
 801e3fe:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e402:	930a      	str	r3, [sp, #40]	; 0x28
 801e404:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801e406:	681b      	ldr	r3, [r3, #0]
 801e408:	9310      	str	r3, [sp, #64]	; 0x40
 801e40a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801e40e:	930b      	str	r3, [sp, #44]	; 0x2c
 801e410:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e412:	2b00      	cmp	r3, #0
 801e414:	dc03      	bgt.n	801e41e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801e416:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801e418:	2b00      	cmp	r3, #0
 801e41a:	f340 8375 	ble.w	801eb08 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801e41e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801e420:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e424:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e428:	1e48      	subs	r0, r1, #1
 801e42a:	1e57      	subs	r7, r2, #1
 801e42c:	9b07      	ldr	r3, [sp, #28]
 801e42e:	2b00      	cmp	r3, #0
 801e430:	f340 818e 	ble.w	801e750 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801e434:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801e438:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e43c:	d406      	bmi.n	801e44c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e43e:	4584      	cmp	ip, r0
 801e440:	da04      	bge.n	801e44c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e442:	2b00      	cmp	r3, #0
 801e444:	db02      	blt.n	801e44c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e446:	42bb      	cmp	r3, r7
 801e448:	f2c0 8183 	blt.w	801e752 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801e44c:	f11c 0c01 	adds.w	ip, ip, #1
 801e450:	f100 8173 	bmi.w	801e73a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e454:	4561      	cmp	r1, ip
 801e456:	f2c0 8170 	blt.w	801e73a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e45a:	3301      	adds	r3, #1
 801e45c:	f100 816d 	bmi.w	801e73a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e460:	429a      	cmp	r2, r3
 801e462:	f2c0 816a 	blt.w	801e73a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e466:	9b07      	ldr	r3, [sp, #28]
 801e468:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801e46a:	9318      	str	r3, [sp, #96]	; 0x60
 801e46c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e46e:	2b00      	cmp	r3, #0
 801e470:	f340 818c 	ble.w	801e78c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801e474:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801e476:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801e478:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e47c:	689b      	ldr	r3, [r3, #8]
 801e47e:	1422      	asrs	r2, r4, #16
 801e480:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801e484:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801e488:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801e48c:	f100 81cd 	bmi.w	801e82a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e490:	f103 38ff 	add.w	r8, r3, #4294967295
 801e494:	4542      	cmp	r2, r8
 801e496:	f280 81c8 	bge.w	801e82a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e49a:	f1bc 0f00 	cmp.w	ip, #0
 801e49e:	f2c0 81c4 	blt.w	801e82a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e4a2:	f10e 38ff 	add.w	r8, lr, #4294967295
 801e4a6:	45c4      	cmp	ip, r8
 801e4a8:	f280 81bf 	bge.w	801e82a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e4ac:	b21b      	sxth	r3, r3
 801e4ae:	fb0c 2203 	mla	r2, ip, r3, r2
 801e4b2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e4b4:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801e4b8:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801e4bc:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801e4c0:	2800      	cmp	r0, #0
 801e4c2:	f000 81a9 	beq.w	801e818 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801e4c6:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801e4ca:	950c      	str	r5, [sp, #48]	; 0x30
 801e4cc:	0e2d      	lsrs	r5, r5, #24
 801e4ce:	9513      	str	r5, [sp, #76]	; 0x4c
 801e4d0:	b181      	cbz	r1, 801e4f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e4d2:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801e4d6:	3b01      	subs	r3, #1
 801e4d8:	009b      	lsls	r3, r3, #2
 801e4da:	3304      	adds	r3, #4
 801e4dc:	eb08 0c03 	add.w	ip, r8, r3
 801e4e0:	f858 3003 	ldr.w	r3, [r8, r3]
 801e4e4:	9308      	str	r3, [sp, #32]
 801e4e6:	0e1b      	lsrs	r3, r3, #24
 801e4e8:	9311      	str	r3, [sp, #68]	; 0x44
 801e4ea:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801e4ee:	930d      	str	r3, [sp, #52]	; 0x34
 801e4f0:	0e1b      	lsrs	r3, r3, #24
 801e4f2:	9314      	str	r3, [sp, #80]	; 0x50
 801e4f4:	b280      	uxth	r0, r0
 801e4f6:	b289      	uxth	r1, r1
 801e4f8:	fb00 f901 	mul.w	r9, r0, r1
 801e4fc:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801e500:	0100      	lsls	r0, r0, #4
 801e502:	eba0 0809 	sub.w	r8, r0, r9
 801e506:	b289      	uxth	r1, r1
 801e508:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801e50c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801e50e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e510:	fa1f f888 	uxth.w	r8, r8
 801e514:	1a5b      	subs	r3, r3, r1
 801e516:	b29b      	uxth	r3, r3
 801e518:	fb08 f000 	mul.w	r0, r8, r0
 801e51c:	fb03 000e 	mla	r0, r3, lr, r0
 801e520:	fb01 0005 	mla	r0, r1, r5, r0
 801e524:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e526:	fb09 0005 	mla	r0, r9, r5, r0
 801e52a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801e52e:	2800      	cmp	r0, #0
 801e530:	f000 80fa 	beq.w	801e728 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e534:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801e538:	d01b      	beq.n	801e572 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801e53a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801e53e:	fb0e fa0a 	mul.w	sl, lr, sl
 801e542:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e546:	fb0e fe02 	mul.w	lr, lr, r2
 801e54a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801e54e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e552:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801e556:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801e55a:	4452      	add	r2, sl
 801e55c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801e560:	0a12      	lsrs	r2, r2, #8
 801e562:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e566:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e56a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801e56e:	ea42 020c 	orr.w	r2, r2, ip
 801e572:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e574:	2dff      	cmp	r5, #255	; 0xff
 801e576:	d021      	beq.n	801e5bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801e578:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e57a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e57e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e580:	fb05 fb0b 	mul.w	fp, r5, fp
 801e584:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e586:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e58a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e58c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e590:	fb05 fa0a 	mul.w	sl, r5, sl
 801e594:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e598:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e59c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e5a0:	44de      	add	lr, fp
 801e5a2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e5a6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e5aa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e5ae:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e5b2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e5b6:	ea4e 050a 	orr.w	r5, lr, sl
 801e5ba:	950c      	str	r5, [sp, #48]	; 0x30
 801e5bc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e5be:	2dff      	cmp	r5, #255	; 0xff
 801e5c0:	d021      	beq.n	801e606 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801e5c2:	9d08      	ldr	r5, [sp, #32]
 801e5c4:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e5c8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e5ca:	fb05 fb0b 	mul.w	fp, r5, fp
 801e5ce:	9d08      	ldr	r5, [sp, #32]
 801e5d0:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e5d4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e5d6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e5da:	fb05 fa0a 	mul.w	sl, r5, sl
 801e5de:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e5e2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e5e6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e5ea:	44de      	add	lr, fp
 801e5ec:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e5f0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e5f4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e5f8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e5fc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e600:	ea4e 050a 	orr.w	r5, lr, sl
 801e604:	9508      	str	r5, [sp, #32]
 801e606:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e608:	2dff      	cmp	r5, #255	; 0xff
 801e60a:	d021      	beq.n	801e650 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801e60c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e60e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e612:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e614:	fb05 fb0b 	mul.w	fp, r5, fp
 801e618:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e61a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e61e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e620:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e624:	fb05 fa0a 	mul.w	sl, r5, sl
 801e628:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e62c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e630:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e634:	44de      	add	lr, fp
 801e636:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e63a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e63e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e642:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e646:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e64a:	ea4e 050a 	orr.w	r5, lr, sl
 801e64e:	950d      	str	r5, [sp, #52]	; 0x34
 801e650:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e652:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e656:	9d08      	ldr	r5, [sp, #32]
 801e658:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801e65c:	fb08 fc0c 	mul.w	ip, r8, ip
 801e660:	fb03 cc0e 	mla	ip, r3, lr, ip
 801e664:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801e668:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e66a:	fb01 cc0e 	mla	ip, r1, lr, ip
 801e66e:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801e672:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e674:	fb09 cc0e 	mla	ip, r9, lr, ip
 801e678:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801e67c:	fb08 f80e 	mul.w	r8, r8, lr
 801e680:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e684:	fb03 8202 	mla	r2, r3, r2, r8
 801e688:	9b08      	ldr	r3, [sp, #32]
 801e68a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e68c:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 801e690:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e692:	fb01 220a 	mla	r2, r1, sl, r2
 801e696:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 801e69a:	fb09 2901 	mla	r9, r9, r1, r2
 801e69e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e6a0:	883b      	ldrh	r3, [r7, #0]
 801e6a2:	4342      	muls	r2, r0
 801e6a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e6a8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e6ac:	1c50      	adds	r0, r2, #1
 801e6ae:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e6b2:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801e6b6:	ea4c 0c09 	orr.w	ip, ip, r9
 801e6ba:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801e6be:	1219      	asrs	r1, r3, #8
 801e6c0:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801e6c4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801e6c8:	b2c0      	uxtb	r0, r0
 801e6ca:	fb12 f205 	smulbb	r2, r2, r5
 801e6ce:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e6d2:	fb01 2100 	mla	r1, r1, r0, r2
 801e6d6:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801e6da:	10da      	asrs	r2, r3, #3
 801e6dc:	fa5f fc8c 	uxtb.w	ip, ip
 801e6e0:	00db      	lsls	r3, r3, #3
 801e6e2:	fb1c fc05 	smulbb	ip, ip, r5
 801e6e6:	b2db      	uxtb	r3, r3
 801e6e8:	b289      	uxth	r1, r1
 801e6ea:	fb03 c300 	mla	r3, r3, r0, ip
 801e6ee:	fa1f fc83 	uxth.w	ip, r3
 801e6f2:	1c4b      	adds	r3, r1, #1
 801e6f4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801e6f8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e6fc:	fb1e fe05 	smulbb	lr, lr, r5
 801e700:	f10c 0301 	add.w	r3, ip, #1
 801e704:	fb02 e200 	mla	r2, r2, r0, lr
 801e708:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801e70c:	b292      	uxth	r2, r2
 801e70e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801e712:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e716:	430b      	orrs	r3, r1
 801e718:	1c51      	adds	r1, r2, #1
 801e71a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e71e:	0952      	lsrs	r2, r2, #5
 801e720:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e724:	4313      	orrs	r3, r2
 801e726:	803b      	strh	r3, [r7, #0]
 801e728:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801e72a:	441c      	add	r4, r3
 801e72c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e72e:	441e      	add	r6, r3
 801e730:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e732:	3b01      	subs	r3, #1
 801e734:	3702      	adds	r7, #2
 801e736:	9318      	str	r3, [sp, #96]	; 0x60
 801e738:	e698      	b.n	801e46c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e73a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801e73c:	441c      	add	r4, r3
 801e73e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e740:	441e      	add	r6, r3
 801e742:	9b07      	ldr	r3, [sp, #28]
 801e744:	3b01      	subs	r3, #1
 801e746:	9307      	str	r3, [sp, #28]
 801e748:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e74a:	3302      	adds	r3, #2
 801e74c:	930a      	str	r3, [sp, #40]	; 0x28
 801e74e:	e66d      	b.n	801e42c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801e750:	d023      	beq.n	801e79a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801e752:	9b07      	ldr	r3, [sp, #28]
 801e754:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801e756:	3b01      	subs	r3, #1
 801e758:	fb00 4003 	mla	r0, r0, r3, r4
 801e75c:	1400      	asrs	r0, r0, #16
 801e75e:	f53f ae82 	bmi.w	801e466 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e762:	3901      	subs	r1, #1
 801e764:	4288      	cmp	r0, r1
 801e766:	f6bf ae7e 	bge.w	801e466 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e76a:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801e76c:	fb01 6303 	mla	r3, r1, r3, r6
 801e770:	141b      	asrs	r3, r3, #16
 801e772:	f53f ae78 	bmi.w	801e466 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e776:	3a01      	subs	r2, #1
 801e778:	4293      	cmp	r3, r2
 801e77a:	f6bf ae74 	bge.w	801e466 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e77e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801e782:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801e786:	f1bb 0f00 	cmp.w	fp, #0
 801e78a:	dc6c      	bgt.n	801e866 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801e78c:	9b07      	ldr	r3, [sp, #28]
 801e78e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801e792:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e794:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801e798:	930a      	str	r3, [sp, #40]	; 0x28
 801e79a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e79c:	2b00      	cmp	r3, #0
 801e79e:	f340 81b3 	ble.w	801eb08 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801e7a2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e7a6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e7aa:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e7ae:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e7b0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e7b4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e7b8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e7bc:	eef0 6a62 	vmov.f32	s13, s5
 801e7c0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e7c4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e7c8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e7cc:	ee16 4a90 	vmov	r4, s13
 801e7d0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e7d4:	eef0 6a43 	vmov.f32	s13, s6
 801e7d8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e7dc:	ee12 2a90 	vmov	r2, s5
 801e7e0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e7e4:	fb92 f3f3 	sdiv	r3, r2, r3
 801e7e8:	ee13 2a10 	vmov	r2, s6
 801e7ec:	9329      	str	r3, [sp, #164]	; 0xa4
 801e7ee:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e7f0:	fb92 f3f3 	sdiv	r3, r2, r3
 801e7f4:	932a      	str	r3, [sp, #168]	; 0xa8
 801e7f6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e7f8:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801e7fa:	3b01      	subs	r3, #1
 801e7fc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e800:	9317      	str	r3, [sp, #92]	; 0x5c
 801e802:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e804:	bf08      	it	eq
 801e806:	4613      	moveq	r3, r2
 801e808:	ee16 6a90 	vmov	r6, s13
 801e80c:	9307      	str	r3, [sp, #28]
 801e80e:	eeb0 3a67 	vmov.f32	s6, s15
 801e812:	eef0 2a47 	vmov.f32	s5, s14
 801e816:	e5fb      	b.n	801e410 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e818:	2900      	cmp	r1, #0
 801e81a:	f43f ae6b 	beq.w	801e4f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e81e:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801e822:	9308      	str	r3, [sp, #32]
 801e824:	0e1b      	lsrs	r3, r3, #24
 801e826:	9311      	str	r3, [sp, #68]	; 0x44
 801e828:	e664      	b.n	801e4f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e82a:	f112 0801 	adds.w	r8, r2, #1
 801e82e:	f53f af7b 	bmi.w	801e728 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e832:	4543      	cmp	r3, r8
 801e834:	f6ff af78 	blt.w	801e728 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e838:	f11c 0801 	adds.w	r8, ip, #1
 801e83c:	f53f af74 	bmi.w	801e728 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e840:	45c6      	cmp	lr, r8
 801e842:	f6ff af71 	blt.w	801e728 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e846:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801e848:	9201      	str	r2, [sp, #4]
 801e84a:	fa0f f28e 	sxth.w	r2, lr
 801e84e:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801e852:	e9cd c002 	strd	ip, r0, [sp, #8]
 801e856:	9200      	str	r2, [sp, #0]
 801e858:	b21b      	sxth	r3, r3
 801e85a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e85c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801e85e:	4639      	mov	r1, r7
 801e860:	f7ff fc79 	bl	801e156 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801e864:	e760      	b.n	801e728 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e866:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801e868:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e86a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e86e:	1427      	asrs	r7, r4, #16
 801e870:	1433      	asrs	r3, r6, #16
 801e872:	fb01 7303 	mla	r3, r1, r3, r7
 801e876:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801e87a:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801e87e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e882:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801e886:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801e88a:	2a00      	cmp	r2, #0
 801e88c:	f000 8133 	beq.w	801eaf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801e890:	687d      	ldr	r5, [r7, #4]
 801e892:	950e      	str	r5, [sp, #56]	; 0x38
 801e894:	0e2d      	lsrs	r5, r5, #24
 801e896:	9515      	str	r5, [sp, #84]	; 0x54
 801e898:	b178      	cbz	r0, 801e8ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e89a:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 801e89e:	3901      	subs	r1, #1
 801e8a0:	0089      	lsls	r1, r1, #2
 801e8a2:	3104      	adds	r1, #4
 801e8a4:	eb07 0e01 	add.w	lr, r7, r1
 801e8a8:	5879      	ldr	r1, [r7, r1]
 801e8aa:	9109      	str	r1, [sp, #36]	; 0x24
 801e8ac:	0e09      	lsrs	r1, r1, #24
 801e8ae:	9112      	str	r1, [sp, #72]	; 0x48
 801e8b0:	f8de 1004 	ldr.w	r1, [lr, #4]
 801e8b4:	910f      	str	r1, [sp, #60]	; 0x3c
 801e8b6:	0e09      	lsrs	r1, r1, #24
 801e8b8:	9116      	str	r1, [sp, #88]	; 0x58
 801e8ba:	b292      	uxth	r2, r2
 801e8bc:	b280      	uxth	r0, r0
 801e8be:	fb02 f800 	mul.w	r8, r2, r0
 801e8c2:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801e8c6:	0112      	lsls	r2, r2, #4
 801e8c8:	eba2 0e08 	sub.w	lr, r2, r8
 801e8cc:	b280      	uxth	r0, r0
 801e8ce:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801e8d2:	9915      	ldr	r1, [sp, #84]	; 0x54
 801e8d4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e8d6:	fa1f fe8e 	uxth.w	lr, lr
 801e8da:	1a12      	subs	r2, r2, r0
 801e8dc:	b292      	uxth	r2, r2
 801e8de:	fb0e f101 	mul.w	r1, lr, r1
 801e8e2:	fb02 110c 	mla	r1, r2, ip, r1
 801e8e6:	fb00 1105 	mla	r1, r0, r5, r1
 801e8ea:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e8ec:	fb08 1105 	mla	r1, r8, r5, r1
 801e8f0:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801e8f4:	2900      	cmp	r1, #0
 801e8f6:	f000 80f5 	beq.w	801eae4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801e8fa:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801e8fe:	d019      	beq.n	801e934 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801e900:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801e904:	fb0c fa0a 	mul.w	sl, ip, sl
 801e908:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e90c:	fb0c fc03 	mul.w	ip, ip, r3
 801e910:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801e914:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e918:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801e91c:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801e920:	4453      	add	r3, sl
 801e922:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801e926:	0a1b      	lsrs	r3, r3, #8
 801e928:	0a3f      	lsrs	r7, r7, #8
 801e92a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e92e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801e932:	433b      	orrs	r3, r7
 801e934:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e936:	2dff      	cmp	r5, #255	; 0xff
 801e938:	d020      	beq.n	801e97c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801e93a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e93c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e940:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e942:	436f      	muls	r7, r5
 801e944:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e946:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e94a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e94c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e950:	fb05 fa0a 	mul.w	sl, r5, sl
 801e954:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e958:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e95c:	44bc      	add	ip, r7
 801e95e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e962:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e966:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e96a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e96e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e972:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e976:	ea4c 050a 	orr.w	r5, ip, sl
 801e97a:	950e      	str	r5, [sp, #56]	; 0x38
 801e97c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e97e:	2dff      	cmp	r5, #255	; 0xff
 801e980:	d020      	beq.n	801e9c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801e982:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e984:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e988:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e98a:	436f      	muls	r7, r5
 801e98c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e98e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e992:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e994:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e998:	fb05 fa0a 	mul.w	sl, r5, sl
 801e99c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e9a0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e9a4:	44bc      	add	ip, r7
 801e9a6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e9aa:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e9ae:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e9b2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e9b6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e9ba:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e9be:	ea4c 050a 	orr.w	r5, ip, sl
 801e9c2:	9509      	str	r5, [sp, #36]	; 0x24
 801e9c4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e9c6:	2dff      	cmp	r5, #255	; 0xff
 801e9c8:	d020      	beq.n	801ea0c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801e9ca:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e9cc:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e9d0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e9d2:	436f      	muls	r7, r5
 801e9d4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e9d6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e9da:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e9dc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e9e0:	fb05 fa0a 	mul.w	sl, r5, sl
 801e9e4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e9e8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e9ec:	44bc      	add	ip, r7
 801e9ee:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e9f2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e9f6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e9fa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e9fe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ea02:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ea06:	ea4c 050a 	orr.w	r5, ip, sl
 801ea0a:	950f      	str	r5, [sp, #60]	; 0x3c
 801ea0c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ea0e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ea12:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801ea14:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801ea18:	fb0e f707 	mul.w	r7, lr, r7
 801ea1c:	fb02 770c 	mla	r7, r2, ip, r7
 801ea20:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ea24:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801ea26:	fb00 770c 	mla	r7, r0, ip, r7
 801ea2a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ea2e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ea30:	fb08 770c 	mla	r7, r8, ip, r7
 801ea34:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801ea38:	fb0e fe0c 	mul.w	lr, lr, ip
 801ea3c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ea40:	fb02 e303 	mla	r3, r2, r3, lr
 801ea44:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ea46:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801ea48:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801ea4c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ea4e:	fb00 330a 	mla	r3, r0, sl, r3
 801ea52:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801ea56:	fb08 3c0c 	mla	ip, r8, ip, r3
 801ea5a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ea5c:	f8b9 0000 	ldrh.w	r0, [r9]
 801ea60:	4359      	muls	r1, r3
 801ea62:	0a3f      	lsrs	r7, r7, #8
 801ea64:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ea68:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801ea6c:	1c4b      	adds	r3, r1, #1
 801ea6e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801ea72:	ea47 070c 	orr.w	r7, r7, ip
 801ea76:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801ea7a:	1202      	asrs	r2, r0, #8
 801ea7c:	0c3b      	lsrs	r3, r7, #16
 801ea7e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801ea82:	b2c9      	uxtb	r1, r1
 801ea84:	fb13 f305 	smulbb	r3, r3, r5
 801ea88:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801ea8c:	fb02 3201 	mla	r2, r2, r1, r3
 801ea90:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801ea94:	10c3      	asrs	r3, r0, #3
 801ea96:	b2ff      	uxtb	r7, r7
 801ea98:	00c0      	lsls	r0, r0, #3
 801ea9a:	b2c0      	uxtb	r0, r0
 801ea9c:	fb17 f705 	smulbb	r7, r7, r5
 801eaa0:	fb00 7001 	mla	r0, r0, r1, r7
 801eaa4:	b292      	uxth	r2, r2
 801eaa6:	fb1c fc05 	smulbb	ip, ip, r5
 801eaaa:	b280      	uxth	r0, r0
 801eaac:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801eab0:	fb03 c301 	mla	r3, r3, r1, ip
 801eab4:	1c51      	adds	r1, r2, #1
 801eab6:	f100 0c01 	add.w	ip, r0, #1
 801eaba:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801eabe:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801eac2:	b29b      	uxth	r3, r3
 801eac4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801eac8:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801eacc:	ea4c 0202 	orr.w	r2, ip, r2
 801ead0:	f103 0c01 	add.w	ip, r3, #1
 801ead4:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801ead8:	095b      	lsrs	r3, r3, #5
 801eada:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801eade:	431a      	orrs	r2, r3
 801eae0:	f8a9 2000 	strh.w	r2, [r9]
 801eae4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801eae6:	441c      	add	r4, r3
 801eae8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801eaea:	f109 0902 	add.w	r9, r9, #2
 801eaee:	441e      	add	r6, r3
 801eaf0:	f10b 3bff 	add.w	fp, fp, #4294967295
 801eaf4:	e647      	b.n	801e786 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801eaf6:	2800      	cmp	r0, #0
 801eaf8:	f43f aedf 	beq.w	801e8ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801eafc:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801eb00:	9109      	str	r1, [sp, #36]	; 0x24
 801eb02:	0e09      	lsrs	r1, r1, #24
 801eb04:	9112      	str	r1, [sp, #72]	; 0x48
 801eb06:	e6d8      	b.n	801e8ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801eb08:	b01d      	add	sp, #116	; 0x74
 801eb0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801eb0e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801eb0e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801eb12:	b085      	sub	sp, #20
 801eb14:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801eb18:	9102      	str	r1, [sp, #8]
 801eb1a:	2c00      	cmp	r4, #0
 801eb1c:	fb04 7103 	mla	r1, r4, r3, r7
 801eb20:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801eb24:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801eb28:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801eb2c:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801eb30:	f2c0 810c 	blt.w	801ed4c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801eb34:	45a6      	cmp	lr, r4
 801eb36:	f340 8109 	ble.w	801ed4c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801eb3a:	2f00      	cmp	r7, #0
 801eb3c:	f2c0 8104 	blt.w	801ed48 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801eb40:	42bb      	cmp	r3, r7
 801eb42:	f340 8101 	ble.w	801ed48 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801eb46:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801eb4a:	1c7a      	adds	r2, r7, #1
 801eb4c:	f100 8101 	bmi.w	801ed52 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801eb50:	4293      	cmp	r3, r2
 801eb52:	f340 80fe 	ble.w	801ed52 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801eb56:	2e00      	cmp	r6, #0
 801eb58:	f000 80fd 	beq.w	801ed56 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801eb5c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801eb60:	3401      	adds	r4, #1
 801eb62:	f100 80fc 	bmi.w	801ed5e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801eb66:	45a6      	cmp	lr, r4
 801eb68:	f340 80f9 	ble.w	801ed5e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801eb6c:	2800      	cmp	r0, #0
 801eb6e:	f000 80f9 	beq.w	801ed64 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801eb72:	2f00      	cmp	r7, #0
 801eb74:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801eb78:	f2c0 80ef 	blt.w	801ed5a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801eb7c:	42bb      	cmp	r3, r7
 801eb7e:	f340 80ec 	ble.w	801ed5a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801eb82:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801eb86:	3701      	adds	r7, #1
 801eb88:	f100 80ef 	bmi.w	801ed6a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801eb8c:	42bb      	cmp	r3, r7
 801eb8e:	f340 80ec 	ble.w	801ed6a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801eb92:	2e00      	cmp	r6, #0
 801eb94:	f000 80eb 	beq.w	801ed6e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801eb98:	6852      	ldr	r2, [r2, #4]
 801eb9a:	b2b6      	uxth	r6, r6
 801eb9c:	b280      	uxth	r0, r0
 801eb9e:	fb00 fe06 	mul.w	lr, r0, r6
 801eba2:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801eba6:	0136      	lsls	r6, r6, #4
 801eba8:	eba6 070e 	sub.w	r7, r6, lr
 801ebac:	b280      	uxth	r0, r0
 801ebae:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801ebb2:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801ebb6:	b2bf      	uxth	r7, r7
 801ebb8:	1a1b      	subs	r3, r3, r0
 801ebba:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801ebbe:	b29b      	uxth	r3, r3
 801ebc0:	fb07 f60a 	mul.w	r6, r7, sl
 801ebc4:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801ebc8:	fb0b 6603 	mla	r6, fp, r3, r6
 801ebcc:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801ebd0:	fb00 6609 	mla	r6, r0, r9, r6
 801ebd4:	fb0e 6608 	mla	r6, lr, r8, r6
 801ebd8:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801ebdc:	9600      	str	r6, [sp, #0]
 801ebde:	2e00      	cmp	r6, #0
 801ebe0:	f000 80af 	beq.w	801ed42 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801ebe4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ebe8:	fb0b fc0c 	mul.w	ip, fp, ip
 801ebec:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801ebf0:	fb0b f505 	mul.w	r5, fp, r5
 801ebf4:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801ebf8:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801ebfc:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ec00:	44dc      	add	ip, fp
 801ec02:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ec06:	9501      	str	r5, [sp, #4]
 801ec08:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801ec0c:	9503      	str	r5, [sp, #12]
 801ec0e:	9d01      	ldr	r5, [sp, #4]
 801ec10:	9e02      	ldr	r6, [sp, #8]
 801ec12:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801ec16:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ec1a:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801ec1e:	fb0a fc0c 	mul.w	ip, sl, ip
 801ec22:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801ec26:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801ec2a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801ec2e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ec32:	4465      	add	r5, ip
 801ec34:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801ec38:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801ec3c:	fb09 fc0c 	mul.w	ip, r9, ip
 801ec40:	fb09 f904 	mul.w	r9, r9, r4
 801ec44:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801ec48:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801ec4c:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801ec50:	fb08 f404 	mul.w	r4, r8, r4
 801ec54:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801ec58:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ec5c:	fb08 f802 	mul.w	r8, r8, r2
 801ec60:	fb0a fa01 	mul.w	sl, sl, r1
 801ec64:	0a22      	lsrs	r2, r4, #8
 801ec66:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801ec6a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ec6e:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801ec72:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801ec76:	4414      	add	r4, r2
 801ec78:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801ec7c:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801ec80:	0a2d      	lsrs	r5, r5, #8
 801ec82:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801ec86:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801ec8a:	9a03      	ldr	r2, [sp, #12]
 801ec8c:	8836      	ldrh	r6, [r6, #0]
 801ec8e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801ec92:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ec96:	437d      	muls	r5, r7
 801ec98:	4461      	add	r1, ip
 801ec9a:	0a24      	lsrs	r4, r4, #8
 801ec9c:	fb02 5503 	mla	r5, r2, r3, r5
 801eca0:	0a09      	lsrs	r1, r1, #8
 801eca2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801eca6:	fb04 540e 	mla	r4, r4, lr, r5
 801ecaa:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801ecae:	fb01 4100 	mla	r1, r1, r0, r4
 801ecb2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ecb6:	0a09      	lsrs	r1, r1, #8
 801ecb8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ecbc:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801ecc0:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801ecc4:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801ecc8:	fb07 f70a 	mul.w	r7, r7, sl
 801eccc:	fb03 7101 	mla	r1, r3, r1, r7
 801ecd0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ecd4:	9b00      	ldr	r3, [sp, #0]
 801ecd6:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801ecda:	fb0e 1e08 	mla	lr, lr, r8, r1
 801ecde:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801ece2:	fb00 e101 	mla	r1, r0, r1, lr
 801ece6:	43da      	mvns	r2, r3
 801ece8:	1233      	asrs	r3, r6, #8
 801ecea:	b2d2      	uxtb	r2, r2
 801ecec:	10f0      	asrs	r0, r6, #3
 801ecee:	0a09      	lsrs	r1, r1, #8
 801ecf0:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801ecf4:	00f6      	lsls	r6, r6, #3
 801ecf6:	4353      	muls	r3, r2
 801ecf8:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801ecfc:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ed00:	b2f6      	uxtb	r6, r6
 801ed02:	4321      	orrs	r1, r4
 801ed04:	4350      	muls	r0, r2
 801ed06:	4356      	muls	r6, r2
 801ed08:	1c5a      	adds	r2, r3, #1
 801ed0a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801ed0e:	0c0b      	lsrs	r3, r1, #16
 801ed10:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ed14:	1c42      	adds	r2, r0, #1
 801ed16:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ed1a:	0a0a      	lsrs	r2, r1, #8
 801ed1c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801ed20:	021b      	lsls	r3, r3, #8
 801ed22:	00d2      	lsls	r2, r2, #3
 801ed24:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ed28:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801ed2c:	4313      	orrs	r3, r2
 801ed2e:	1c72      	adds	r2, r6, #1
 801ed30:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801ed34:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801ed38:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801ed3c:	4319      	orrs	r1, r3
 801ed3e:	9b02      	ldr	r3, [sp, #8]
 801ed40:	8019      	strh	r1, [r3, #0]
 801ed42:	b005      	add	sp, #20
 801ed44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ed48:	2500      	movs	r5, #0
 801ed4a:	e6fe      	b.n	801eb4a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801ed4c:	2100      	movs	r1, #0
 801ed4e:	460d      	mov	r5, r1
 801ed50:	e706      	b.n	801eb60 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801ed52:	2100      	movs	r1, #0
 801ed54:	e704      	b.n	801eb60 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801ed56:	4631      	mov	r1, r6
 801ed58:	e702      	b.n	801eb60 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801ed5a:	2400      	movs	r4, #0
 801ed5c:	e713      	b.n	801eb86 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801ed5e:	2200      	movs	r2, #0
 801ed60:	4614      	mov	r4, r2
 801ed62:	e71a      	b.n	801eb9a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801ed64:	4602      	mov	r2, r0
 801ed66:	4604      	mov	r4, r0
 801ed68:	e717      	b.n	801eb9a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801ed6a:	2200      	movs	r2, #0
 801ed6c:	e715      	b.n	801eb9a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801ed6e:	4632      	mov	r2, r6
 801ed70:	e713      	b.n	801eb9a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0801ed74 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ed74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ed78:	b09b      	sub	sp, #108	; 0x6c
 801ed7a:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801ed7e:	9218      	str	r2, [sp, #96]	; 0x60
 801ed80:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801ed82:	9116      	str	r1, [sp, #88]	; 0x58
 801ed84:	9307      	str	r3, [sp, #28]
 801ed86:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801ed8a:	9019      	str	r0, [sp, #100]	; 0x64
 801ed8c:	6850      	ldr	r0, [r2, #4]
 801ed8e:	6812      	ldr	r2, [r2, #0]
 801ed90:	fb00 1303 	mla	r3, r0, r3, r1
 801ed94:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ed98:	930a      	str	r3, [sp, #40]	; 0x28
 801ed9a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ed9c:	681b      	ldr	r3, [r3, #0]
 801ed9e:	930f      	str	r3, [sp, #60]	; 0x3c
 801eda0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801eda2:	2b00      	cmp	r3, #0
 801eda4:	dc03      	bgt.n	801edae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801eda6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801eda8:	2b00      	cmp	r3, #0
 801edaa:	f340 8386 	ble.w	801f4ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801edae:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801edb0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801edb4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801edb8:	1e48      	subs	r0, r1, #1
 801edba:	1e57      	subs	r7, r2, #1
 801edbc:	9b07      	ldr	r3, [sp, #28]
 801edbe:	2b00      	cmp	r3, #0
 801edc0:	f340 8166 	ble.w	801f090 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801edc4:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801edc8:	ea4f 4326 	mov.w	r3, r6, asr #16
 801edcc:	d406      	bmi.n	801eddc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801edce:	4584      	cmp	ip, r0
 801edd0:	da04      	bge.n	801eddc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801edd2:	2b00      	cmp	r3, #0
 801edd4:	db02      	blt.n	801eddc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801edd6:	42bb      	cmp	r3, r7
 801edd8:	f2c0 815b 	blt.w	801f092 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801eddc:	f11c 0c01 	adds.w	ip, ip, #1
 801ede0:	f100 814b 	bmi.w	801f07a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801ede4:	4561      	cmp	r1, ip
 801ede6:	f2c0 8148 	blt.w	801f07a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801edea:	3301      	adds	r3, #1
 801edec:	f100 8145 	bmi.w	801f07a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801edf0:	429a      	cmp	r2, r3
 801edf2:	f2c0 8142 	blt.w	801f07a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801edf6:	9b07      	ldr	r3, [sp, #28]
 801edf8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801edfa:	9317      	str	r3, [sp, #92]	; 0x5c
 801edfc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801edfe:	2b00      	cmp	r3, #0
 801ee00:	f340 8165 	ble.w	801f0ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ee04:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801ee06:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ee08:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801ee0c:	689b      	ldr	r3, [r3, #8]
 801ee0e:	1422      	asrs	r2, r4, #16
 801ee10:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801ee14:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801ee18:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801ee1c:	f100 81d5 	bmi.w	801f1ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801ee20:	f103 38ff 	add.w	r8, r3, #4294967295
 801ee24:	4542      	cmp	r2, r8
 801ee26:	f280 81d0 	bge.w	801f1ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801ee2a:	f1bc 0f00 	cmp.w	ip, #0
 801ee2e:	f2c0 81cc 	blt.w	801f1ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801ee32:	f10e 38ff 	add.w	r8, lr, #4294967295
 801ee36:	45c4      	cmp	ip, r8
 801ee38:	f280 81c7 	bge.w	801f1ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801ee3c:	b21b      	sxth	r3, r3
 801ee3e:	fb0c 2203 	mla	r2, ip, r3, r2
 801ee42:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801ee44:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801ee48:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801ee4c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801ee50:	2900      	cmp	r1, #0
 801ee52:	f000 8182 	beq.w	801f15a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801ee56:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801ee5a:	950b      	str	r5, [sp, #44]	; 0x2c
 801ee5c:	0e2d      	lsrs	r5, r5, #24
 801ee5e:	9512      	str	r5, [sp, #72]	; 0x48
 801ee60:	b180      	cbz	r0, 801ee84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801ee62:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801ee66:	3b01      	subs	r3, #1
 801ee68:	009b      	lsls	r3, r3, #2
 801ee6a:	3304      	adds	r3, #4
 801ee6c:	eb08 0c03 	add.w	ip, r8, r3
 801ee70:	f858 3003 	ldr.w	r3, [r8, r3]
 801ee74:	9308      	str	r3, [sp, #32]
 801ee76:	0e1b      	lsrs	r3, r3, #24
 801ee78:	9310      	str	r3, [sp, #64]	; 0x40
 801ee7a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801ee7e:	930c      	str	r3, [sp, #48]	; 0x30
 801ee80:	0e1b      	lsrs	r3, r3, #24
 801ee82:	9313      	str	r3, [sp, #76]	; 0x4c
 801ee84:	b289      	uxth	r1, r1
 801ee86:	b280      	uxth	r0, r0
 801ee88:	fb01 f900 	mul.w	r9, r1, r0
 801ee8c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801ee90:	0109      	lsls	r1, r1, #4
 801ee92:	eba1 0809 	sub.w	r8, r1, r9
 801ee96:	b280      	uxth	r0, r0
 801ee98:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801ee9c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801ee9e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801eea0:	fa1f f888 	uxth.w	r8, r8
 801eea4:	1a09      	subs	r1, r1, r0
 801eea6:	b289      	uxth	r1, r1
 801eea8:	fb08 f303 	mul.w	r3, r8, r3
 801eeac:	fb01 330e 	mla	r3, r1, lr, r3
 801eeb0:	fb00 3305 	mla	r3, r0, r5, r3
 801eeb4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801eeb6:	fb09 3305 	mla	r3, r9, r5, r3
 801eeba:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801eebe:	2b00      	cmp	r3, #0
 801eec0:	f000 80d2 	beq.w	801f068 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801eec4:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801eec8:	d01b      	beq.n	801ef02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801eeca:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801eece:	fb0e fa0a 	mul.w	sl, lr, sl
 801eed2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801eed6:	fb0e fe02 	mul.w	lr, lr, r2
 801eeda:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801eede:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801eee2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801eee6:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801eeea:	4452      	add	r2, sl
 801eeec:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801eef0:	0a12      	lsrs	r2, r2, #8
 801eef2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801eef6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801eefa:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801eefe:	ea42 020c 	orr.w	r2, r2, ip
 801ef02:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ef04:	2dff      	cmp	r5, #255	; 0xff
 801ef06:	d021      	beq.n	801ef4c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801ef08:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801ef0a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801ef0e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ef10:	fb05 fb0b 	mul.w	fp, r5, fp
 801ef14:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801ef16:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ef1a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ef1c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ef20:	fb05 fa0a 	mul.w	sl, r5, sl
 801ef24:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ef28:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ef2c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ef30:	44de      	add	lr, fp
 801ef32:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ef36:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ef3a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ef3e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ef42:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ef46:	ea4e 050a 	orr.w	r5, lr, sl
 801ef4a:	950b      	str	r5, [sp, #44]	; 0x2c
 801ef4c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ef4e:	2dff      	cmp	r5, #255	; 0xff
 801ef50:	d021      	beq.n	801ef96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801ef52:	9d08      	ldr	r5, [sp, #32]
 801ef54:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801ef58:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ef5a:	fb05 fb0b 	mul.w	fp, r5, fp
 801ef5e:	9d08      	ldr	r5, [sp, #32]
 801ef60:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801ef64:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ef66:	fb05 fa0e 	mul.w	sl, r5, lr
 801ef6a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ef6e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ef72:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ef76:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ef7a:	44de      	add	lr, fp
 801ef7c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ef80:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ef84:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ef88:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ef8c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ef90:	ea4e 050a 	orr.w	r5, lr, sl
 801ef94:	9508      	str	r5, [sp, #32]
 801ef96:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ef98:	2dff      	cmp	r5, #255	; 0xff
 801ef9a:	d021      	beq.n	801efe0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801ef9c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ef9e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801efa2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801efa4:	fb05 fb0b 	mul.w	fp, r5, fp
 801efa8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801efaa:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801efae:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801efb0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801efb4:	fb05 fa0a 	mul.w	sl, r5, sl
 801efb8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801efbc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801efc0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801efc4:	44de      	add	lr, fp
 801efc6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801efca:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801efce:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801efd2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801efd6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801efda:	ea4e 050a 	orr.w	r5, lr, sl
 801efde:	950c      	str	r5, [sp, #48]	; 0x30
 801efe0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801efe2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801efe6:	9d08      	ldr	r5, [sp, #32]
 801efe8:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801efec:	fb08 fc0c 	mul.w	ip, r8, ip
 801eff0:	fb01 cc0e 	mla	ip, r1, lr, ip
 801eff4:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801eff8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801effa:	fb00 cc0e 	mla	ip, r0, lr, ip
 801effe:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801f002:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801f004:	fb09 cc0e 	mla	ip, r9, lr, ip
 801f008:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801f00c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801f010:	fb08 f80e 	mul.w	r8, r8, lr
 801f014:	fb01 8202 	mla	r2, r1, r2, r8
 801f018:	9908      	ldr	r1, [sp, #32]
 801f01a:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801f01e:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f020:	fb00 220a 	mla	r2, r0, sl, r2
 801f024:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801f028:	fb09 2900 	mla	r9, r9, r0, r2
 801f02c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f030:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f034:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f038:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801f03c:	ea4c 0c09 	orr.w	ip, ip, r9
 801f040:	2bff      	cmp	r3, #255	; 0xff
 801f042:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801f046:	f040 8091 	bne.w	801f16c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801f04a:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801f04e:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 801f052:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f056:	f022 0207 	bic.w	r2, r2, #7
 801f05a:	431a      	orrs	r2, r3
 801f05c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801f060:	ea4c 0c02 	orr.w	ip, ip, r2
 801f064:	f8a7 c000 	strh.w	ip, [r7]
 801f068:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801f06a:	441c      	add	r4, r3
 801f06c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f06e:	441e      	add	r6, r3
 801f070:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801f072:	3b01      	subs	r3, #1
 801f074:	3702      	adds	r7, #2
 801f076:	9317      	str	r3, [sp, #92]	; 0x5c
 801f078:	e6c0      	b.n	801edfc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801f07a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801f07c:	441c      	add	r4, r3
 801f07e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f080:	441e      	add	r6, r3
 801f082:	9b07      	ldr	r3, [sp, #28]
 801f084:	3b01      	subs	r3, #1
 801f086:	9307      	str	r3, [sp, #28]
 801f088:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f08a:	3302      	adds	r3, #2
 801f08c:	930a      	str	r3, [sp, #40]	; 0x28
 801f08e:	e695      	b.n	801edbc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801f090:	d024      	beq.n	801f0dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801f092:	9b07      	ldr	r3, [sp, #28]
 801f094:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801f096:	3b01      	subs	r3, #1
 801f098:	fb00 4003 	mla	r0, r0, r3, r4
 801f09c:	1400      	asrs	r0, r0, #16
 801f09e:	f53f aeaa 	bmi.w	801edf6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f0a2:	3901      	subs	r1, #1
 801f0a4:	4288      	cmp	r0, r1
 801f0a6:	f6bf aea6 	bge.w	801edf6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f0aa:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801f0ac:	fb01 6303 	mla	r3, r1, r3, r6
 801f0b0:	141b      	asrs	r3, r3, #16
 801f0b2:	f53f aea0 	bmi.w	801edf6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f0b6:	3a01      	subs	r2, #1
 801f0b8:	4293      	cmp	r3, r2
 801f0ba:	f6bf ae9c 	bge.w	801edf6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f0be:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801f0c2:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801f0c6:	f1bb 0f00 	cmp.w	fp, #0
 801f0ca:	f300 809a 	bgt.w	801f202 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801f0ce:	9b07      	ldr	r3, [sp, #28]
 801f0d0:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f0d4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f0d6:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801f0da:	930a      	str	r3, [sp, #40]	; 0x28
 801f0dc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801f0de:	2b00      	cmp	r3, #0
 801f0e0:	f340 81eb 	ble.w	801f4ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801f0e4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f0e8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f0ec:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f0f0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f0f2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f0f6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f0fa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f0fe:	eef0 6a62 	vmov.f32	s13, s5
 801f102:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f106:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f10a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f10e:	ee16 4a90 	vmov	r4, s13
 801f112:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f116:	eef0 6a43 	vmov.f32	s13, s6
 801f11a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f11e:	ee12 2a90 	vmov	r2, s5
 801f122:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f126:	fb92 f3f3 	sdiv	r3, r2, r3
 801f12a:	ee13 2a10 	vmov	r2, s6
 801f12e:	9327      	str	r3, [sp, #156]	; 0x9c
 801f130:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f132:	fb92 f3f3 	sdiv	r3, r2, r3
 801f136:	9328      	str	r3, [sp, #160]	; 0xa0
 801f138:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801f13a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801f13c:	3b01      	subs	r3, #1
 801f13e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f142:	9316      	str	r3, [sp, #88]	; 0x58
 801f144:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f146:	bf08      	it	eq
 801f148:	4613      	moveq	r3, r2
 801f14a:	ee16 6a90 	vmov	r6, s13
 801f14e:	9307      	str	r3, [sp, #28]
 801f150:	eeb0 3a67 	vmov.f32	s6, s15
 801f154:	eef0 2a47 	vmov.f32	s5, s14
 801f158:	e622      	b.n	801eda0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801f15a:	2800      	cmp	r0, #0
 801f15c:	f43f ae92 	beq.w	801ee84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801f160:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801f164:	9308      	str	r3, [sp, #32]
 801f166:	0e1b      	lsrs	r3, r3, #24
 801f168:	9310      	str	r3, [sp, #64]	; 0x40
 801f16a:	e68b      	b.n	801ee84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801f16c:	8839      	ldrh	r1, [r7, #0]
 801f16e:	4dd4      	ldr	r5, [pc, #848]	; (801f4c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801f170:	43db      	mvns	r3, r3
 801f172:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801f176:	fa5f f883 	uxtb.w	r8, r3
 801f17a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801f17e:	fb0e fe08 	mul.w	lr, lr, r8
 801f182:	10c8      	asrs	r0, r1, #3
 801f184:	00cb      	lsls	r3, r1, #3
 801f186:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f18a:	f10e 0101 	add.w	r1, lr, #1
 801f18e:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801f192:	fb00 f008 	mul.w	r0, r0, r8
 801f196:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801f19a:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801f19e:	f100 0e01 	add.w	lr, r0, #1
 801f1a2:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801f1a6:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801f1aa:	b2db      	uxtb	r3, r3
 801f1ac:	b2c9      	uxtb	r1, r1
 801f1ae:	00d2      	lsls	r2, r2, #3
 801f1b0:	fb03 f308 	mul.w	r3, r3, r8
 801f1b4:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801f1b8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f1bc:	430a      	orrs	r2, r1
 801f1be:	1c59      	adds	r1, r3, #1
 801f1c0:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801f1c4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801f1c8:	e748      	b.n	801f05c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801f1ca:	f112 0801 	adds.w	r8, r2, #1
 801f1ce:	f53f af4b 	bmi.w	801f068 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f1d2:	4543      	cmp	r3, r8
 801f1d4:	f6ff af48 	blt.w	801f068 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f1d8:	f11c 0801 	adds.w	r8, ip, #1
 801f1dc:	f53f af44 	bmi.w	801f068 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f1e0:	45c6      	cmp	lr, r8
 801f1e2:	f6ff af41 	blt.w	801f068 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f1e6:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801f1ea:	fa0f f28e 	sxth.w	r2, lr
 801f1ee:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801f1f2:	9200      	str	r2, [sp, #0]
 801f1f4:	b21b      	sxth	r3, r3
 801f1f6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f1f8:	9819      	ldr	r0, [sp, #100]	; 0x64
 801f1fa:	4639      	mov	r1, r7
 801f1fc:	f7ff fc87 	bl	801eb0e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801f200:	e732      	b.n	801f068 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f202:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f204:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801f206:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801f20a:	1421      	asrs	r1, r4, #16
 801f20c:	1433      	asrs	r3, r6, #16
 801f20e:	fb07 1303 	mla	r3, r7, r3, r1
 801f212:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801f214:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801f218:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801f21c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f220:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f224:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801f228:	2a00      	cmp	r2, #0
 801f22a:	f000 8107 	beq.w	801f43c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 801f22e:	684d      	ldr	r5, [r1, #4]
 801f230:	950d      	str	r5, [sp, #52]	; 0x34
 801f232:	0e2d      	lsrs	r5, r5, #24
 801f234:	9514      	str	r5, [sp, #80]	; 0x50
 801f236:	b178      	cbz	r0, 801f258 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f238:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801f23c:	3f01      	subs	r7, #1
 801f23e:	00bf      	lsls	r7, r7, #2
 801f240:	3704      	adds	r7, #4
 801f242:	eb01 0e07 	add.w	lr, r1, r7
 801f246:	59c9      	ldr	r1, [r1, r7]
 801f248:	9109      	str	r1, [sp, #36]	; 0x24
 801f24a:	0e09      	lsrs	r1, r1, #24
 801f24c:	9111      	str	r1, [sp, #68]	; 0x44
 801f24e:	f8de 1004 	ldr.w	r1, [lr, #4]
 801f252:	910e      	str	r1, [sp, #56]	; 0x38
 801f254:	0e09      	lsrs	r1, r1, #24
 801f256:	9115      	str	r1, [sp, #84]	; 0x54
 801f258:	b292      	uxth	r2, r2
 801f25a:	b280      	uxth	r0, r0
 801f25c:	fb02 f900 	mul.w	r9, r2, r0
 801f260:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801f264:	0112      	lsls	r2, r2, #4
 801f266:	eba2 0e09 	sub.w	lr, r2, r9
 801f26a:	b280      	uxth	r0, r0
 801f26c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801f270:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801f272:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f274:	fa1f fe8e 	uxth.w	lr, lr
 801f278:	1a09      	subs	r1, r1, r0
 801f27a:	b289      	uxth	r1, r1
 801f27c:	fb0e f202 	mul.w	r2, lr, r2
 801f280:	fb01 220c 	mla	r2, r1, ip, r2
 801f284:	fb00 2205 	mla	r2, r0, r5, r2
 801f288:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801f28a:	fb09 2205 	mla	r2, r9, r5, r2
 801f28e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801f292:	2a00      	cmp	r2, #0
 801f294:	f000 80c9 	beq.w	801f42a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801f298:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801f29c:	d019      	beq.n	801f2d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801f29e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801f2a2:	fb0c fa0a 	mul.w	sl, ip, sl
 801f2a6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801f2aa:	fb0c fc03 	mul.w	ip, ip, r3
 801f2ae:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801f2b2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801f2b6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801f2ba:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801f2be:	4453      	add	r3, sl
 801f2c0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801f2c4:	0a1b      	lsrs	r3, r3, #8
 801f2c6:	0a3f      	lsrs	r7, r7, #8
 801f2c8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801f2cc:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801f2d0:	433b      	orrs	r3, r7
 801f2d2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801f2d4:	2dff      	cmp	r5, #255	; 0xff
 801f2d6:	d020      	beq.n	801f31a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801f2d8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f2da:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801f2de:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801f2e0:	436f      	muls	r7, r5
 801f2e2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f2e4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801f2e8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801f2ea:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f2ee:	fb05 fa0a 	mul.w	sl, r5, sl
 801f2f2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f2f6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f2fa:	44bc      	add	ip, r7
 801f2fc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801f300:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f304:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f308:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f30c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f310:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f314:	ea4c 050a 	orr.w	r5, ip, sl
 801f318:	950d      	str	r5, [sp, #52]	; 0x34
 801f31a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f31c:	2dff      	cmp	r5, #255	; 0xff
 801f31e:	d020      	beq.n	801f362 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801f320:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801f322:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801f326:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f328:	436f      	muls	r7, r5
 801f32a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801f32c:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801f330:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f332:	fb05 fa0c 	mul.w	sl, r5, ip
 801f336:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f33a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f33e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f342:	44bc      	add	ip, r7
 801f344:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801f348:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f34c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f350:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f354:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f358:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f35c:	ea4c 050a 	orr.w	r5, ip, sl
 801f360:	9509      	str	r5, [sp, #36]	; 0x24
 801f362:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801f364:	2dff      	cmp	r5, #255	; 0xff
 801f366:	d020      	beq.n	801f3aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801f368:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f36a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801f36e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801f370:	436f      	muls	r7, r5
 801f372:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f374:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801f378:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801f37a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f37e:	fb05 fa0a 	mul.w	sl, r5, sl
 801f382:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f386:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f38a:	44bc      	add	ip, r7
 801f38c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801f390:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f394:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f398:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f39c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f3a0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f3a4:	ea4c 050a 	orr.w	r5, ip, sl
 801f3a8:	950e      	str	r5, [sp, #56]	; 0x38
 801f3aa:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f3ac:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801f3b0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801f3b2:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801f3b6:	fb0e f707 	mul.w	r7, lr, r7
 801f3ba:	fb01 770c 	mla	r7, r1, ip, r7
 801f3be:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801f3c2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f3c4:	fb00 770c 	mla	r7, r0, ip, r7
 801f3c8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801f3cc:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f3ce:	fb09 770c 	mla	r7, r9, ip, r7
 801f3d2:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801f3d6:	fb0e fe0c 	mul.w	lr, lr, ip
 801f3da:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801f3de:	fb01 e303 	mla	r3, r1, r3, lr
 801f3e2:	9909      	ldr	r1, [sp, #36]	; 0x24
 801f3e4:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801f3e8:	990e      	ldr	r1, [sp, #56]	; 0x38
 801f3ea:	fb00 330a 	mla	r3, r0, sl, r3
 801f3ee:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801f3f2:	fb09 3c0c 	mla	ip, r9, ip, r3
 801f3f6:	0a3f      	lsrs	r7, r7, #8
 801f3f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f3fc:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801f400:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801f404:	ea47 070c 	orr.w	r7, r7, ip
 801f408:	2aff      	cmp	r2, #255	; 0xff
 801f40a:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801f40e:	d11e      	bne.n	801f44e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801f410:	097a      	lsrs	r2, r7, #5
 801f412:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801f416:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f41a:	f023 0307 	bic.w	r3, r3, #7
 801f41e:	4313      	orrs	r3, r2
 801f420:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801f424:	431f      	orrs	r7, r3
 801f426:	f8a8 7000 	strh.w	r7, [r8]
 801f42a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801f42c:	441c      	add	r4, r3
 801f42e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f430:	f108 0802 	add.w	r8, r8, #2
 801f434:	441e      	add	r6, r3
 801f436:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f43a:	e644      	b.n	801f0c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801f43c:	2800      	cmp	r0, #0
 801f43e:	f43f af0b 	beq.w	801f258 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f442:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801f446:	9109      	str	r1, [sp, #36]	; 0x24
 801f448:	0e09      	lsrs	r1, r1, #24
 801f44a:	9111      	str	r1, [sp, #68]	; 0x44
 801f44c:	e704      	b.n	801f258 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f44e:	f8b8 1000 	ldrh.w	r1, [r8]
 801f452:	43d2      	mvns	r2, r2
 801f454:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801f458:	fa5f fe82 	uxtb.w	lr, r2
 801f45c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801f460:	fb0c fc0e 	mul.w	ip, ip, lr
 801f464:	10c8      	asrs	r0, r1, #3
 801f466:	00ca      	lsls	r2, r1, #3
 801f468:	f10c 0101 	add.w	r1, ip, #1
 801f46c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f470:	0c39      	lsrs	r1, r7, #16
 801f472:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f476:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f47a:	4911      	ldr	r1, [pc, #68]	; (801f4c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801f47c:	fb00 f00e 	mul.w	r0, r0, lr
 801f480:	fa5f fc8c 	uxtb.w	ip, ip
 801f484:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801f488:	b2d2      	uxtb	r2, r2
 801f48a:	1c41      	adds	r1, r0, #1
 801f48c:	fb02 f20e 	mul.w	r2, r2, lr
 801f490:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801f494:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f498:	1c51      	adds	r1, r2, #1
 801f49a:	00c0      	lsls	r0, r0, #3
 801f49c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f4a0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f4a4:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801f4a8:	ea4c 0c00 	orr.w	ip, ip, r0
 801f4ac:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801f4b0:	ea47 0c0c 	orr.w	ip, r7, ip
 801f4b4:	f8a8 c000 	strh.w	ip, [r8]
 801f4b8:	e7b7      	b.n	801f42a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801f4ba:	b01b      	add	sp, #108	; 0x6c
 801f4bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f4c0:	fffff800 	.word	0xfffff800

0801f4c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801f4c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f4c8:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801f4cc:	2d00      	cmp	r5, #0
 801f4ce:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801f4d2:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801f4d6:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801f4da:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801f4de:	fb05 0e03 	mla	lr, r5, r3, r0
 801f4e2:	f2c0 808c 	blt.w	801f5fe <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801f4e6:	45a9      	cmp	r9, r5
 801f4e8:	f340 8089 	ble.w	801f5fe <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801f4ec:	2800      	cmp	r0, #0
 801f4ee:	f2c0 8084 	blt.w	801f5fa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801f4f2:	4580      	cmp	r8, r0
 801f4f4:	f340 8081 	ble.w	801f5fa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801f4f8:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801f4fc:	f01e 0f01 	tst.w	lr, #1
 801f500:	5d16      	ldrb	r6, [r2, r4]
 801f502:	bf0c      	ite	eq
 801f504:	f006 060f 	andeq.w	r6, r6, #15
 801f508:	1136      	asrne	r6, r6, #4
 801f50a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801f50e:	b2f6      	uxtb	r6, r6
 801f510:	1c44      	adds	r4, r0, #1
 801f512:	d477      	bmi.n	801f604 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801f514:	45a0      	cmp	r8, r4
 801f516:	dd75      	ble.n	801f604 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801f518:	2f00      	cmp	r7, #0
 801f51a:	d075      	beq.n	801f608 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801f51c:	f10e 0a01 	add.w	sl, lr, #1
 801f520:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801f524:	f01a 0f01 	tst.w	sl, #1
 801f528:	5d14      	ldrb	r4, [r2, r4]
 801f52a:	bf0c      	ite	eq
 801f52c:	f004 040f 	andeq.w	r4, r4, #15
 801f530:	1124      	asrne	r4, r4, #4
 801f532:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801f536:	b2e4      	uxtb	r4, r4
 801f538:	3501      	adds	r5, #1
 801f53a:	d469      	bmi.n	801f610 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801f53c:	45a9      	cmp	r9, r5
 801f53e:	dd67      	ble.n	801f610 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801f540:	f1bc 0f00 	cmp.w	ip, #0
 801f544:	d067      	beq.n	801f616 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801f546:	2800      	cmp	r0, #0
 801f548:	db60      	blt.n	801f60c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801f54a:	4580      	cmp	r8, r0
 801f54c:	dd5e      	ble.n	801f60c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801f54e:	eb03 090e 	add.w	r9, r3, lr
 801f552:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801f556:	f019 0f01 	tst.w	r9, #1
 801f55a:	5d55      	ldrb	r5, [r2, r5]
 801f55c:	bf0c      	ite	eq
 801f55e:	f005 050f 	andeq.w	r5, r5, #15
 801f562:	112d      	asrne	r5, r5, #4
 801f564:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801f568:	b2ed      	uxtb	r5, r5
 801f56a:	3001      	adds	r0, #1
 801f56c:	d456      	bmi.n	801f61c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801f56e:	4580      	cmp	r8, r0
 801f570:	dd54      	ble.n	801f61c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801f572:	2f00      	cmp	r7, #0
 801f574:	d054      	beq.n	801f620 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801f576:	3301      	adds	r3, #1
 801f578:	449e      	add	lr, r3
 801f57a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801f57e:	f01e 0f01 	tst.w	lr, #1
 801f582:	5cd0      	ldrb	r0, [r2, r3]
 801f584:	bf0c      	ite	eq
 801f586:	f000 000f 	andeq.w	r0, r0, #15
 801f58a:	1100      	asrne	r0, r0, #4
 801f58c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f590:	b2c3      	uxtb	r3, r0
 801f592:	b2ba      	uxth	r2, r7
 801f594:	fa1f fc8c 	uxth.w	ip, ip
 801f598:	fb02 f00c 	mul.w	r0, r2, ip
 801f59c:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801f5a0:	0112      	lsls	r2, r2, #4
 801f5a2:	fa1f fc8c 	uxth.w	ip, ip
 801f5a6:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801f5aa:	1a12      	subs	r2, r2, r0
 801f5ac:	eba7 070c 	sub.w	r7, r7, ip
 801f5b0:	b292      	uxth	r2, r2
 801f5b2:	b2bf      	uxth	r7, r7
 801f5b4:	4362      	muls	r2, r4
 801f5b6:	fb06 2207 	mla	r2, r6, r7, r2
 801f5ba:	fb0c 2505 	mla	r5, ip, r5, r2
 801f5be:	fb00 5303 	mla	r3, r0, r3, r5
 801f5c2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f5c6:	b1b3      	cbz	r3, 801f5f6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801f5c8:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 801f5cc:	435a      	muls	r2, r3
 801f5ce:	1c53      	adds	r3, r2, #1
 801f5d0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f5d4:	4a2d      	ldr	r2, [pc, #180]	; (801f68c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801f5d6:	121b      	asrs	r3, r3, #8
 801f5d8:	6812      	ldr	r2, [r2, #0]
 801f5da:	2bff      	cmp	r3, #255	; 0xff
 801f5dc:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801f5e0:	d120      	bne.n	801f624 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801f5e2:	4b2b      	ldr	r3, [pc, #172]	; (801f690 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801f5e4:	0950      	lsrs	r0, r2, #5
 801f5e6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f5ea:	4033      	ands	r3, r6
 801f5ec:	4318      	orrs	r0, r3
 801f5ee:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f5f2:	4302      	orrs	r2, r0
 801f5f4:	800a      	strh	r2, [r1, #0]
 801f5f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f5fa:	2600      	movs	r6, #0
 801f5fc:	e788      	b.n	801f510 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801f5fe:	2400      	movs	r4, #0
 801f600:	4626      	mov	r6, r4
 801f602:	e799      	b.n	801f538 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f604:	2400      	movs	r4, #0
 801f606:	e797      	b.n	801f538 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f608:	463c      	mov	r4, r7
 801f60a:	e795      	b.n	801f538 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f60c:	2500      	movs	r5, #0
 801f60e:	e7ac      	b.n	801f56a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801f610:	2300      	movs	r3, #0
 801f612:	461d      	mov	r5, r3
 801f614:	e7bd      	b.n	801f592 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f616:	4663      	mov	r3, ip
 801f618:	4665      	mov	r5, ip
 801f61a:	e7ba      	b.n	801f592 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f61c:	2300      	movs	r3, #0
 801f61e:	e7b8      	b.n	801f592 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f620:	463b      	mov	r3, r7
 801f622:	e7b6      	b.n	801f592 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f624:	880d      	ldrh	r5, [r1, #0]
 801f626:	b29f      	uxth	r7, r3
 801f628:	122c      	asrs	r4, r5, #8
 801f62a:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801f62e:	43db      	mvns	r3, r3
 801f630:	b2db      	uxtb	r3, r3
 801f632:	fb10 f007 	smulbb	r0, r0, r7
 801f636:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801f63a:	fb04 0403 	mla	r4, r4, r3, r0
 801f63e:	b2f6      	uxtb	r6, r6
 801f640:	10e8      	asrs	r0, r5, #3
 801f642:	b2d2      	uxtb	r2, r2
 801f644:	00ed      	lsls	r5, r5, #3
 801f646:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f64a:	fb12 f207 	smulbb	r2, r2, r7
 801f64e:	fb16 f607 	smulbb	r6, r6, r7
 801f652:	b2ed      	uxtb	r5, r5
 801f654:	b2a4      	uxth	r4, r4
 801f656:	fb00 6603 	mla	r6, r0, r3, r6
 801f65a:	fb05 2303 	mla	r3, r5, r3, r2
 801f65e:	b29a      	uxth	r2, r3
 801f660:	1c63      	adds	r3, r4, #1
 801f662:	b2b0      	uxth	r0, r6
 801f664:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801f668:	1c53      	adds	r3, r2, #1
 801f66a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f66e:	1c42      	adds	r2, r0, #1
 801f670:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f674:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801f678:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f67c:	0940      	lsrs	r0, r0, #5
 801f67e:	4323      	orrs	r3, r4
 801f680:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f684:	4303      	orrs	r3, r0
 801f686:	800b      	strh	r3, [r1, #0]
 801f688:	e7b5      	b.n	801f5f6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801f68a:	bf00      	nop
 801f68c:	20017460 	.word	0x20017460
 801f690:	00fff800 	.word	0x00fff800

0801f694 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f694:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f698:	b097      	sub	sp, #92	; 0x5c
 801f69a:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 801f69e:	9214      	str	r2, [sp, #80]	; 0x50
 801f6a0:	9309      	str	r3, [sp, #36]	; 0x24
 801f6a2:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801f6a4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801f6a8:	910d      	str	r1, [sp, #52]	; 0x34
 801f6aa:	930f      	str	r3, [sp, #60]	; 0x3c
 801f6ac:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801f6b0:	9015      	str	r0, [sp, #84]	; 0x54
 801f6b2:	6850      	ldr	r0, [r2, #4]
 801f6b4:	6812      	ldr	r2, [r2, #0]
 801f6b6:	fb00 1303 	mla	r3, r0, r3, r1
 801f6ba:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801f6be:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f6c0:	689b      	ldr	r3, [r3, #8]
 801f6c2:	3301      	adds	r3, #1
 801f6c4:	f023 0301 	bic.w	r3, r3, #1
 801f6c8:	930a      	str	r3, [sp, #40]	; 0x28
 801f6ca:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f6cc:	681f      	ldr	r7, [r3, #0]
 801f6ce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f6d0:	2b00      	cmp	r3, #0
 801f6d2:	dc03      	bgt.n	801f6dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801f6d4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801f6d6:	2b00      	cmp	r3, #0
 801f6d8:	f340 8287 	ble.w	801fbea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801f6dc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f6de:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f6e2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f6e6:	1e48      	subs	r0, r1, #1
 801f6e8:	f102 3cff 	add.w	ip, r2, #4294967295
 801f6ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f6ee:	2b00      	cmp	r3, #0
 801f6f0:	f340 80c4 	ble.w	801f87c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801f6f4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f6f8:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f6fc:	d406      	bmi.n	801f70c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f6fe:	4586      	cmp	lr, r0
 801f700:	da04      	bge.n	801f70c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f702:	2b00      	cmp	r3, #0
 801f704:	db02      	blt.n	801f70c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f706:	4563      	cmp	r3, ip
 801f708:	f2c0 80b9 	blt.w	801f87e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801f70c:	f11e 0e01 	adds.w	lr, lr, #1
 801f710:	f100 80aa 	bmi.w	801f868 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f714:	4571      	cmp	r1, lr
 801f716:	f2c0 80a7 	blt.w	801f868 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f71a:	3301      	adds	r3, #1
 801f71c:	f100 80a4 	bmi.w	801f868 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f720:	429a      	cmp	r2, r3
 801f722:	f2c0 80a1 	blt.w	801f868 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f726:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f728:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 801f72c:	930e      	str	r3, [sp, #56]	; 0x38
 801f72e:	46c8      	mov	r8, r9
 801f730:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f732:	2b00      	cmp	r3, #0
 801f734:	f340 80c3 	ble.w	801f8be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801f738:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f73a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801f73e:	1423      	asrs	r3, r4, #16
 801f740:	ea4f 4026 	mov.w	r0, r6, asr #16
 801f744:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f748:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f74c:	f100 814d 	bmi.w	801f9ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f750:	f10c 3bff 	add.w	fp, ip, #4294967295
 801f754:	455b      	cmp	r3, fp
 801f756:	f280 8148 	bge.w	801f9ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f75a:	2800      	cmp	r0, #0
 801f75c:	f2c0 8145 	blt.w	801f9ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f760:	f10e 3bff 	add.w	fp, lr, #4294967295
 801f764:	4558      	cmp	r0, fp
 801f766:	f280 8140 	bge.w	801f9ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f76a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801f76c:	fb00 3305 	mla	r3, r0, r5, r3
 801f770:	0858      	lsrs	r0, r3, #1
 801f772:	07dd      	lsls	r5, r3, #31
 801f774:	f817 c000 	ldrb.w	ip, [r7, r0]
 801f778:	bf54      	ite	pl
 801f77a:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f77e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f782:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f786:	fa5f fc8c 	uxtb.w	ip, ip
 801f78a:	2a00      	cmp	r2, #0
 801f78c:	f000 80db 	beq.w	801f946 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 801f790:	1c58      	adds	r0, r3, #1
 801f792:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801f796:	07c0      	lsls	r0, r0, #31
 801f798:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f79c:	bf54      	ite	pl
 801f79e:	f00e 0e0f 	andpl.w	lr, lr, #15
 801f7a2:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801f7a6:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801f7aa:	fa5f f08e 	uxtb.w	r0, lr
 801f7ae:	9010      	str	r0, [sp, #64]	; 0x40
 801f7b0:	b1c9      	cbz	r1, 801f7e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f7b2:	4453      	add	r3, sl
 801f7b4:	0858      	lsrs	r0, r3, #1
 801f7b6:	07dd      	lsls	r5, r3, #31
 801f7b8:	5c38      	ldrb	r0, [r7, r0]
 801f7ba:	bf54      	ite	pl
 801f7bc:	f000 000f 	andpl.w	r0, r0, #15
 801f7c0:	1100      	asrmi	r0, r0, #4
 801f7c2:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f7c6:	3301      	adds	r3, #1
 801f7c8:	b2c0      	uxtb	r0, r0
 801f7ca:	900b      	str	r0, [sp, #44]	; 0x2c
 801f7cc:	0858      	lsrs	r0, r3, #1
 801f7ce:	07dd      	lsls	r5, r3, #31
 801f7d0:	f817 e000 	ldrb.w	lr, [r7, r0]
 801f7d4:	bf54      	ite	pl
 801f7d6:	f00e 030f 	andpl.w	r3, lr, #15
 801f7da:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801f7de:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f7e2:	b2db      	uxtb	r3, r3
 801f7e4:	9311      	str	r3, [sp, #68]	; 0x44
 801f7e6:	b292      	uxth	r2, r2
 801f7e8:	b289      	uxth	r1, r1
 801f7ea:	fb02 f301 	mul.w	r3, r2, r1
 801f7ee:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801f7f2:	0112      	lsls	r2, r2, #4
 801f7f4:	b289      	uxth	r1, r1
 801f7f6:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801f7fa:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f7fc:	1ad2      	subs	r2, r2, r3
 801f7fe:	1a40      	subs	r0, r0, r1
 801f800:	b292      	uxth	r2, r2
 801f802:	436a      	muls	r2, r5
 801f804:	b280      	uxth	r0, r0
 801f806:	fb0c 2c00 	mla	ip, ip, r0, r2
 801f80a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801f80c:	fb01 c102 	mla	r1, r1, r2, ip
 801f810:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801f812:	fb03 1302 	mla	r3, r3, r2, r1
 801f816:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f81a:	b1db      	cbz	r3, 801f854 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f81c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f81e:	4353      	muls	r3, r2
 801f820:	1c5a      	adds	r2, r3, #1
 801f822:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801f826:	4ac6      	ldr	r2, [pc, #792]	; (801fb40 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801f828:	121b      	asrs	r3, r3, #8
 801f82a:	6812      	ldr	r2, [r2, #0]
 801f82c:	2bff      	cmp	r3, #255	; 0xff
 801f82e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801f832:	f040 8099 	bne.w	801f968 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 801f836:	0953      	lsrs	r3, r2, #5
 801f838:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801f83c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f840:	f02c 0c07 	bic.w	ip, ip, #7
 801f844:	ea43 0c0c 	orr.w	ip, r3, ip
 801f848:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f84c:	ea4c 0202 	orr.w	r2, ip, r2
 801f850:	f8a8 2000 	strh.w	r2, [r8]
 801f854:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801f856:	441c      	add	r4, r3
 801f858:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f85a:	441e      	add	r6, r3
 801f85c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f85e:	3b01      	subs	r3, #1
 801f860:	f108 0802 	add.w	r8, r8, #2
 801f864:	930e      	str	r3, [sp, #56]	; 0x38
 801f866:	e763      	b.n	801f730 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801f868:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801f86a:	441c      	add	r4, r3
 801f86c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f86e:	441e      	add	r6, r3
 801f870:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f872:	3b01      	subs	r3, #1
 801f874:	9309      	str	r3, [sp, #36]	; 0x24
 801f876:	f109 0902 	add.w	r9, r9, #2
 801f87a:	e737      	b.n	801f6ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f87c:	d024      	beq.n	801f8c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f87e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f880:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801f882:	3b01      	subs	r3, #1
 801f884:	fb00 4003 	mla	r0, r0, r3, r4
 801f888:	1400      	asrs	r0, r0, #16
 801f88a:	f53f af4c 	bmi.w	801f726 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f88e:	3901      	subs	r1, #1
 801f890:	4288      	cmp	r0, r1
 801f892:	f6bf af48 	bge.w	801f726 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f896:	9924      	ldr	r1, [sp, #144]	; 0x90
 801f898:	fb01 6303 	mla	r3, r1, r3, r6
 801f89c:	141b      	asrs	r3, r3, #16
 801f89e:	f53f af42 	bmi.w	801f726 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f8a2:	3a01      	subs	r2, #1
 801f8a4:	4293      	cmp	r3, r2
 801f8a6:	f6bf af3e 	bge.w	801f726 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f8aa:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801f8ae:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801f8b2:	930e      	str	r3, [sp, #56]	; 0x38
 801f8b4:	46c8      	mov	r8, r9
 801f8b6:	f1bb 0f00 	cmp.w	fp, #0
 801f8ba:	f300 80b7 	bgt.w	801fa2c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801f8be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f8c0:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f8c4:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801f8c8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f8ca:	2b00      	cmp	r3, #0
 801f8cc:	f340 818d 	ble.w	801fbea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801f8d0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f8d4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f8d8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f8dc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f8de:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f8e2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f8e6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f8ea:	eef0 6a62 	vmov.f32	s13, s5
 801f8ee:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f8f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f8f6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f8fa:	ee16 4a90 	vmov	r4, s13
 801f8fe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f902:	eef0 6a43 	vmov.f32	s13, s6
 801f906:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f90a:	ee12 2a90 	vmov	r2, s5
 801f90e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f912:	fb92 f3f3 	sdiv	r3, r2, r3
 801f916:	ee13 2a10 	vmov	r2, s6
 801f91a:	9323      	str	r3, [sp, #140]	; 0x8c
 801f91c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f91e:	fb92 f3f3 	sdiv	r3, r2, r3
 801f922:	9324      	str	r3, [sp, #144]	; 0x90
 801f924:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f926:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801f928:	3b01      	subs	r3, #1
 801f92a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f92e:	930d      	str	r3, [sp, #52]	; 0x34
 801f930:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f932:	bf08      	it	eq
 801f934:	4613      	moveq	r3, r2
 801f936:	ee16 6a90 	vmov	r6, s13
 801f93a:	9309      	str	r3, [sp, #36]	; 0x24
 801f93c:	eeb0 3a67 	vmov.f32	s6, s15
 801f940:	eef0 2a47 	vmov.f32	s5, s14
 801f944:	e6c3      	b.n	801f6ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801f946:	2900      	cmp	r1, #0
 801f948:	f43f af4d 	beq.w	801f7e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f94c:	eb0a 0003 	add.w	r0, sl, r3
 801f950:	0843      	lsrs	r3, r0, #1
 801f952:	07c0      	lsls	r0, r0, #31
 801f954:	5cfb      	ldrb	r3, [r7, r3]
 801f956:	bf54      	ite	pl
 801f958:	f003 030f 	andpl.w	r3, r3, #15
 801f95c:	111b      	asrmi	r3, r3, #4
 801f95e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f962:	b2db      	uxtb	r3, r3
 801f964:	930b      	str	r3, [sp, #44]	; 0x2c
 801f966:	e73e      	b.n	801f7e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f968:	f8b8 e000 	ldrh.w	lr, [r8]
 801f96c:	fa1f fb83 	uxth.w	fp, r3
 801f970:	ea4f 202e 	mov.w	r0, lr, asr #8
 801f974:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801f978:	43db      	mvns	r3, r3
 801f97a:	b2db      	uxtb	r3, r3
 801f97c:	fb11 f10b 	smulbb	r1, r1, fp
 801f980:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f984:	fb00 1003 	mla	r0, r0, r3, r1
 801f988:	fa5f fc8c 	uxtb.w	ip, ip
 801f98c:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801f990:	b2d2      	uxtb	r2, r2
 801f992:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f996:	b280      	uxth	r0, r0
 801f998:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f99c:	fb1c fc0b 	smulbb	ip, ip, fp
 801f9a0:	fa5f fe8e 	uxtb.w	lr, lr
 801f9a4:	fb12 fb0b 	smulbb	fp, r2, fp
 801f9a8:	fb01 cc03 	mla	ip, r1, r3, ip
 801f9ac:	fb0e bb03 	mla	fp, lr, r3, fp
 801f9b0:	1c43      	adds	r3, r0, #1
 801f9b2:	fa1f fc8c 	uxth.w	ip, ip
 801f9b6:	fa1f fb8b 	uxth.w	fp, fp
 801f9ba:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f9be:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 801f9c2:	f10c 0101 	add.w	r1, ip, #1
 801f9c6:	f10b 0001 	add.w	r0, fp, #1
 801f9ca:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801f9ce:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f9d2:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801f9d6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f9da:	4318      	orrs	r0, r3
 801f9dc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801f9e0:	ea40 000c 	orr.w	r0, r0, ip
 801f9e4:	f8a8 0000 	strh.w	r0, [r8]
 801f9e8:	e734      	b.n	801f854 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f9ea:	f113 0b01 	adds.w	fp, r3, #1
 801f9ee:	f53f af31 	bmi.w	801f854 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f9f2:	45dc      	cmp	ip, fp
 801f9f4:	f6ff af2e 	blt.w	801f854 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f9f8:	f110 0b01 	adds.w	fp, r0, #1
 801f9fc:	f53f af2a 	bmi.w	801f854 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801fa00:	45de      	cmp	lr, fp
 801fa02:	f6ff af27 	blt.w	801f854 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801fa06:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801fa08:	9302      	str	r3, [sp, #8]
 801fa0a:	fa0f f38e 	sxth.w	r3, lr
 801fa0e:	9301      	str	r3, [sp, #4]
 801fa10:	fa0f f38c 	sxth.w	r3, ip
 801fa14:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801fa18:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801fa1c:	9300      	str	r3, [sp, #0]
 801fa1e:	463a      	mov	r2, r7
 801fa20:	4653      	mov	r3, sl
 801fa22:	4641      	mov	r1, r8
 801fa24:	9815      	ldr	r0, [sp, #84]	; 0x54
 801fa26:	f7ff fd4d 	bl	801f4c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801fa2a:	e713      	b.n	801f854 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801fa2c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801fa2e:	1422      	asrs	r2, r4, #16
 801fa30:	1433      	asrs	r3, r6, #16
 801fa32:	fb05 2303 	mla	r3, r5, r3, r2
 801fa36:	085a      	lsrs	r2, r3, #1
 801fa38:	07dd      	lsls	r5, r3, #31
 801fa3a:	5cba      	ldrb	r2, [r7, r2]
 801fa3c:	bf54      	ite	pl
 801fa3e:	f002 020f 	andpl.w	r2, r2, #15
 801fa42:	1112      	asrmi	r2, r2, #4
 801fa44:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801fa48:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801fa4c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801fa50:	b2d2      	uxtb	r2, r2
 801fa52:	2900      	cmp	r1, #0
 801fa54:	d076      	beq.n	801fb44 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801fa56:	f103 0e01 	add.w	lr, r3, #1
 801fa5a:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801fa5e:	f01e 0f01 	tst.w	lr, #1
 801fa62:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801fa66:	bf0c      	ite	eq
 801fa68:	f00c 0c0f 	andeq.w	ip, ip, #15
 801fa6c:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801fa70:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fa74:	fa5f f58c 	uxtb.w	r5, ip
 801fa78:	9512      	str	r5, [sp, #72]	; 0x48
 801fa7a:	b300      	cbz	r0, 801fabe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801fa7c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801fa7e:	442b      	add	r3, r5
 801fa80:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801fa84:	07dd      	lsls	r5, r3, #31
 801fa86:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801fa8a:	bf54      	ite	pl
 801fa8c:	f00c 0c0f 	andpl.w	ip, ip, #15
 801fa90:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801fa94:	3301      	adds	r3, #1
 801fa96:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fa9a:	fa5f f58c 	uxtb.w	r5, ip
 801fa9e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801faa2:	950c      	str	r5, [sp, #48]	; 0x30
 801faa4:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801faa8:	07dd      	lsls	r5, r3, #31
 801faaa:	bf54      	ite	pl
 801faac:	f00c 0c0f 	andpl.w	ip, ip, #15
 801fab0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801fab4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fab8:	fa5f f38c 	uxtb.w	r3, ip
 801fabc:	9313      	str	r3, [sp, #76]	; 0x4c
 801fabe:	b289      	uxth	r1, r1
 801fac0:	b280      	uxth	r0, r0
 801fac2:	fb01 f300 	mul.w	r3, r1, r0
 801fac6:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801faca:	0109      	lsls	r1, r1, #4
 801facc:	b280      	uxth	r0, r0
 801face:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801fad2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801fad4:	1ac9      	subs	r1, r1, r3
 801fad6:	ebac 0c00 	sub.w	ip, ip, r0
 801fada:	b289      	uxth	r1, r1
 801fadc:	4369      	muls	r1, r5
 801fade:	fa1f fc8c 	uxth.w	ip, ip
 801fae2:	fb02 120c 	mla	r2, r2, ip, r1
 801fae6:	990c      	ldr	r1, [sp, #48]	; 0x30
 801fae8:	fb00 2001 	mla	r0, r0, r1, r2
 801faec:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801faee:	fb03 0302 	mla	r3, r3, r2, r0
 801faf2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801faf6:	b1d3      	cbz	r3, 801fb2e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801faf8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801fafa:	4353      	muls	r3, r2
 801fafc:	1c5a      	adds	r2, r3, #1
 801fafe:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801fb02:	4a0f      	ldr	r2, [pc, #60]	; (801fb40 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801fb04:	121b      	asrs	r3, r3, #8
 801fb06:	6812      	ldr	r2, [r2, #0]
 801fb08:	2bff      	cmp	r3, #255	; 0xff
 801fb0a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801fb0e:	d12d      	bne.n	801fb6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801fb10:	0953      	lsrs	r3, r2, #5
 801fb12:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801fb16:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fb1a:	f02c 0c07 	bic.w	ip, ip, #7
 801fb1e:	ea43 0c0c 	orr.w	ip, r3, ip
 801fb22:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fb26:	ea4c 0202 	orr.w	r2, ip, r2
 801fb2a:	f8a8 2000 	strh.w	r2, [r8]
 801fb2e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801fb30:	441c      	add	r4, r3
 801fb32:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fb34:	f108 0802 	add.w	r8, r8, #2
 801fb38:	441e      	add	r6, r3
 801fb3a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801fb3e:	e6ba      	b.n	801f8b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801fb40:	20017460 	.word	0x20017460
 801fb44:	2800      	cmp	r0, #0
 801fb46:	d0ba      	beq.n	801fabe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801fb48:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801fb4a:	442b      	add	r3, r5
 801fb4c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801fb50:	07db      	lsls	r3, r3, #31
 801fb52:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801fb56:	bf54      	ite	pl
 801fb58:	f00c 0c0f 	andpl.w	ip, ip, #15
 801fb5c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801fb60:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fb64:	fa5f f38c 	uxtb.w	r3, ip
 801fb68:	930c      	str	r3, [sp, #48]	; 0x30
 801fb6a:	e7a8      	b.n	801fabe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801fb6c:	f8b8 e000 	ldrh.w	lr, [r8]
 801fb70:	fa1f fa83 	uxth.w	sl, r3
 801fb74:	ea4f 202e 	mov.w	r0, lr, asr #8
 801fb78:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801fb7c:	43db      	mvns	r3, r3
 801fb7e:	b2db      	uxtb	r3, r3
 801fb80:	fb11 f10a 	smulbb	r1, r1, sl
 801fb84:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801fb88:	fb00 1003 	mla	r0, r0, r3, r1
 801fb8c:	b2d2      	uxtb	r2, r2
 801fb8e:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801fb92:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801fb96:	fa5f fe8e 	uxtb.w	lr, lr
 801fb9a:	fb12 f20a 	smulbb	r2, r2, sl
 801fb9e:	fb0e 2203 	mla	r2, lr, r3, r2
 801fba2:	fa5f fc8c 	uxtb.w	ip, ip
 801fba6:	b280      	uxth	r0, r0
 801fba8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801fbac:	b292      	uxth	r2, r2
 801fbae:	fb1c fc0a 	smulbb	ip, ip, sl
 801fbb2:	fb01 cc03 	mla	ip, r1, r3, ip
 801fbb6:	1c43      	adds	r3, r0, #1
 801fbb8:	1c51      	adds	r1, r2, #1
 801fbba:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801fbbe:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801fbc2:	fa1f fc8c 	uxth.w	ip, ip
 801fbc6:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801fbca:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801fbce:	4308      	orrs	r0, r1
 801fbd0:	f10c 0101 	add.w	r1, ip, #1
 801fbd4:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801fbd8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801fbdc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801fbe0:	ea40 000c 	orr.w	r0, r0, ip
 801fbe4:	f8a8 0000 	strh.w	r0, [r8]
 801fbe8:	e7a1      	b.n	801fb2e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801fbea:	b017      	add	sp, #92	; 0x5c
 801fbec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fbf0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801fbf0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801fbf4:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801fbf8:	2d00      	cmp	r5, #0
 801fbfa:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801fbfe:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801fc02:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801fc06:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801fc0a:	fb05 0e03 	mla	lr, r5, r3, r0
 801fc0e:	f2c0 80b0 	blt.w	801fd72 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801fc12:	45a9      	cmp	r9, r5
 801fc14:	f340 80ad 	ble.w	801fd72 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801fc18:	2800      	cmp	r0, #0
 801fc1a:	f2c0 80a8 	blt.w	801fd6e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801fc1e:	4580      	cmp	r8, r0
 801fc20:	f340 80a5 	ble.w	801fd6e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801fc24:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801fc28:	f01e 0f01 	tst.w	lr, #1
 801fc2c:	5d16      	ldrb	r6, [r2, r4]
 801fc2e:	bf0c      	ite	eq
 801fc30:	f006 060f 	andeq.w	r6, r6, #15
 801fc34:	1136      	asrne	r6, r6, #4
 801fc36:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801fc3a:	b2f6      	uxtb	r6, r6
 801fc3c:	1c44      	adds	r4, r0, #1
 801fc3e:	f100 809b 	bmi.w	801fd78 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801fc42:	45a0      	cmp	r8, r4
 801fc44:	f340 8098 	ble.w	801fd78 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801fc48:	2f00      	cmp	r7, #0
 801fc4a:	f000 8097 	beq.w	801fd7c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 801fc4e:	f10e 0a01 	add.w	sl, lr, #1
 801fc52:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801fc56:	f01a 0f01 	tst.w	sl, #1
 801fc5a:	5d14      	ldrb	r4, [r2, r4]
 801fc5c:	bf0c      	ite	eq
 801fc5e:	f004 040f 	andeq.w	r4, r4, #15
 801fc62:	1124      	asrne	r4, r4, #4
 801fc64:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801fc68:	b2e4      	uxtb	r4, r4
 801fc6a:	3501      	adds	r5, #1
 801fc6c:	f100 808a 	bmi.w	801fd84 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801fc70:	45a9      	cmp	r9, r5
 801fc72:	f340 8087 	ble.w	801fd84 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801fc76:	f1bc 0f00 	cmp.w	ip, #0
 801fc7a:	f000 8086 	beq.w	801fd8a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 801fc7e:	2800      	cmp	r0, #0
 801fc80:	db7e      	blt.n	801fd80 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801fc82:	4580      	cmp	r8, r0
 801fc84:	dd7c      	ble.n	801fd80 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801fc86:	eb03 090e 	add.w	r9, r3, lr
 801fc8a:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801fc8e:	f019 0f01 	tst.w	r9, #1
 801fc92:	5d55      	ldrb	r5, [r2, r5]
 801fc94:	bf0c      	ite	eq
 801fc96:	f005 050f 	andeq.w	r5, r5, #15
 801fc9a:	112d      	asrne	r5, r5, #4
 801fc9c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801fca0:	b2ed      	uxtb	r5, r5
 801fca2:	3001      	adds	r0, #1
 801fca4:	d474      	bmi.n	801fd90 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801fca6:	4580      	cmp	r8, r0
 801fca8:	dd72      	ble.n	801fd90 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801fcaa:	2f00      	cmp	r7, #0
 801fcac:	d072      	beq.n	801fd94 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801fcae:	3301      	adds	r3, #1
 801fcb0:	449e      	add	lr, r3
 801fcb2:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801fcb6:	f01e 0f01 	tst.w	lr, #1
 801fcba:	5cd0      	ldrb	r0, [r2, r3]
 801fcbc:	bf0c      	ite	eq
 801fcbe:	f000 000f 	andeq.w	r0, r0, #15
 801fcc2:	1100      	asrne	r0, r0, #4
 801fcc4:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801fcc8:	b2c3      	uxtb	r3, r0
 801fcca:	b2ba      	uxth	r2, r7
 801fccc:	fa1f fc8c 	uxth.w	ip, ip
 801fcd0:	fb02 f00c 	mul.w	r0, r2, ip
 801fcd4:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801fcd8:	0112      	lsls	r2, r2, #4
 801fcda:	fa1f fc8c 	uxth.w	ip, ip
 801fcde:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801fce2:	1a12      	subs	r2, r2, r0
 801fce4:	eba7 070c 	sub.w	r7, r7, ip
 801fce8:	b292      	uxth	r2, r2
 801fcea:	b2bf      	uxth	r7, r7
 801fcec:	4362      	muls	r2, r4
 801fcee:	fb06 2207 	mla	r2, r6, r7, r2
 801fcf2:	fb0c 2505 	mla	r5, ip, r5, r2
 801fcf6:	fb00 5303 	mla	r3, r0, r3, r5
 801fcfa:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fcfe:	b3a3      	cbz	r3, 801fd6a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 801fd00:	4a25      	ldr	r2, [pc, #148]	; (801fd98 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 801fd02:	880e      	ldrh	r6, [r1, #0]
 801fd04:	6815      	ldr	r5, [r2, #0]
 801fd06:	1234      	asrs	r4, r6, #8
 801fd08:	b29a      	uxth	r2, r3
 801fd0a:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801fd0e:	43db      	mvns	r3, r3
 801fd10:	b2db      	uxtb	r3, r3
 801fd12:	fb10 f002 	smulbb	r0, r0, r2
 801fd16:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801fd1a:	fb04 0403 	mla	r4, r4, r3, r0
 801fd1e:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801fd22:	10f0      	asrs	r0, r6, #3
 801fd24:	b2ed      	uxtb	r5, r5
 801fd26:	00f6      	lsls	r6, r6, #3
 801fd28:	fb17 f702 	smulbb	r7, r7, r2
 801fd2c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801fd30:	fb15 f202 	smulbb	r2, r5, r2
 801fd34:	b2f6      	uxtb	r6, r6
 801fd36:	b2a4      	uxth	r4, r4
 801fd38:	fb00 7003 	mla	r0, r0, r3, r7
 801fd3c:	fb06 2303 	mla	r3, r6, r3, r2
 801fd40:	b29a      	uxth	r2, r3
 801fd42:	1c63      	adds	r3, r4, #1
 801fd44:	b280      	uxth	r0, r0
 801fd46:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801fd4a:	1c53      	adds	r3, r2, #1
 801fd4c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fd50:	1c42      	adds	r2, r0, #1
 801fd52:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801fd56:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801fd5a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801fd5e:	0940      	lsrs	r0, r0, #5
 801fd60:	4323      	orrs	r3, r4
 801fd62:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801fd66:	4303      	orrs	r3, r0
 801fd68:	800b      	strh	r3, [r1, #0]
 801fd6a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801fd6e:	2600      	movs	r6, #0
 801fd70:	e764      	b.n	801fc3c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 801fd72:	2400      	movs	r4, #0
 801fd74:	4626      	mov	r6, r4
 801fd76:	e778      	b.n	801fc6a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801fd78:	2400      	movs	r4, #0
 801fd7a:	e776      	b.n	801fc6a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801fd7c:	463c      	mov	r4, r7
 801fd7e:	e774      	b.n	801fc6a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801fd80:	2500      	movs	r5, #0
 801fd82:	e78e      	b.n	801fca2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 801fd84:	2300      	movs	r3, #0
 801fd86:	461d      	mov	r5, r3
 801fd88:	e79f      	b.n	801fcca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801fd8a:	4663      	mov	r3, ip
 801fd8c:	4665      	mov	r5, ip
 801fd8e:	e79c      	b.n	801fcca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801fd90:	2300      	movs	r3, #0
 801fd92:	e79a      	b.n	801fcca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801fd94:	463b      	mov	r3, r7
 801fd96:	e798      	b.n	801fcca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801fd98:	20017460 	.word	0x20017460

0801fd9c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fd9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fda0:	b093      	sub	sp, #76	; 0x4c
 801fda2:	461d      	mov	r5, r3
 801fda4:	920c      	str	r2, [sp, #48]	; 0x30
 801fda6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801fda8:	9107      	str	r1, [sp, #28]
 801fdaa:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801fdae:	9011      	str	r0, [sp, #68]	; 0x44
 801fdb0:	6850      	ldr	r0, [r2, #4]
 801fdb2:	6812      	ldr	r2, [r2, #0]
 801fdb4:	fb00 1303 	mla	r3, r0, r3, r1
 801fdb8:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801fdbc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fdbe:	689b      	ldr	r3, [r3, #8]
 801fdc0:	3301      	adds	r3, #1
 801fdc2:	f023 0301 	bic.w	r3, r3, #1
 801fdc6:	9306      	str	r3, [sp, #24]
 801fdc8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fdca:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801fdce:	681f      	ldr	r7, [r3, #0]
 801fdd0:	9b07      	ldr	r3, [sp, #28]
 801fdd2:	2b00      	cmp	r3, #0
 801fdd4:	dc03      	bgt.n	801fdde <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801fdd6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fdd8:	2b00      	cmp	r3, #0
 801fdda:	f340 8267 	ble.w	80202ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801fdde:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fde0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fde4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fde8:	1e48      	subs	r0, r1, #1
 801fdea:	f102 3cff 	add.w	ip, r2, #4294967295
 801fdee:	2d00      	cmp	r5, #0
 801fdf0:	f340 80b8 	ble.w	801ff64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801fdf4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801fdf8:	ea4f 4326 	mov.w	r3, r6, asr #16
 801fdfc:	d406      	bmi.n	801fe0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801fdfe:	4586      	cmp	lr, r0
 801fe00:	da04      	bge.n	801fe0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801fe02:	2b00      	cmp	r3, #0
 801fe04:	db02      	blt.n	801fe0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801fe06:	4563      	cmp	r3, ip
 801fe08:	f2c0 80ad 	blt.w	801ff66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 801fe0c:	f11e 0e01 	adds.w	lr, lr, #1
 801fe10:	f100 80a0 	bmi.w	801ff54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801fe14:	4571      	cmp	r1, lr
 801fe16:	f2c0 809d 	blt.w	801ff54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801fe1a:	3301      	adds	r3, #1
 801fe1c:	f100 809a 	bmi.w	801ff54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801fe20:	429a      	cmp	r2, r3
 801fe22:	f2c0 8097 	blt.w	801ff54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801fe26:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801fe2a:	9509      	str	r5, [sp, #36]	; 0x24
 801fe2c:	46c8      	mov	r8, r9
 801fe2e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fe30:	2b00      	cmp	r3, #0
 801fe32:	f340 80b6 	ble.w	801ffa2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801fe36:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801fe3a:	9308      	str	r3, [sp, #32]
 801fe3c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fe3e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801fe42:	1423      	asrs	r3, r4, #16
 801fe44:	ea4f 4026 	mov.w	r0, r6, asr #16
 801fe48:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801fe4c:	f100 813e 	bmi.w	80200cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801fe50:	f10c 3bff 	add.w	fp, ip, #4294967295
 801fe54:	455b      	cmp	r3, fp
 801fe56:	f280 8139 	bge.w	80200cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801fe5a:	2800      	cmp	r0, #0
 801fe5c:	f2c0 8136 	blt.w	80200cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801fe60:	f10e 3bff 	add.w	fp, lr, #4294967295
 801fe64:	4558      	cmp	r0, fp
 801fe66:	f280 8131 	bge.w	80200cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801fe6a:	9a06      	ldr	r2, [sp, #24]
 801fe6c:	fb00 3302 	mla	r3, r0, r2, r3
 801fe70:	0858      	lsrs	r0, r3, #1
 801fe72:	07da      	lsls	r2, r3, #31
 801fe74:	f817 c000 	ldrb.w	ip, [r7, r0]
 801fe78:	9a08      	ldr	r2, [sp, #32]
 801fe7a:	bf54      	ite	pl
 801fe7c:	f00c 0c0f 	andpl.w	ip, ip, #15
 801fe80:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801fe84:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fe88:	fa5f fc8c 	uxtb.w	ip, ip
 801fe8c:	2a00      	cmp	r2, #0
 801fe8e:	f000 80cb 	beq.w	8020028 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801fe92:	1c58      	adds	r0, r3, #1
 801fe94:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801fe98:	07c0      	lsls	r0, r0, #31
 801fe9a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801fe9e:	bf54      	ite	pl
 801fea0:	f00e 0e0f 	andpl.w	lr, lr, #15
 801fea4:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801fea8:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801feac:	fa5f fe8e 	uxtb.w	lr, lr
 801feb0:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801feb4:	b1b9      	cbz	r1, 801fee6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801feb6:	4453      	add	r3, sl
 801feb8:	0858      	lsrs	r0, r3, #1
 801feba:	07da      	lsls	r2, r3, #31
 801febc:	5c38      	ldrb	r0, [r7, r0]
 801febe:	bf54      	ite	pl
 801fec0:	f000 000f 	andpl.w	r0, r0, #15
 801fec4:	1100      	asrmi	r0, r0, #4
 801fec6:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801feca:	b2c0      	uxtb	r0, r0
 801fecc:	900a      	str	r0, [sp, #40]	; 0x28
 801fece:	1c58      	adds	r0, r3, #1
 801fed0:	0843      	lsrs	r3, r0, #1
 801fed2:	07c2      	lsls	r2, r0, #31
 801fed4:	5cfb      	ldrb	r3, [r7, r3]
 801fed6:	bf54      	ite	pl
 801fed8:	f003 030f 	andpl.w	r3, r3, #15
 801fedc:	111b      	asrmi	r3, r3, #4
 801fede:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801fee2:	b2db      	uxtb	r3, r3
 801fee4:	930e      	str	r3, [sp, #56]	; 0x38
 801fee6:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801feea:	b289      	uxth	r1, r1
 801feec:	fb02 f301 	mul.w	r3, r2, r1
 801fef0:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801fef4:	0112      	lsls	r2, r2, #4
 801fef6:	b289      	uxth	r1, r1
 801fef8:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801fefc:	1a40      	subs	r0, r0, r1
 801fefe:	fa1f fe80 	uxth.w	lr, r0
 801ff02:	1ad2      	subs	r2, r2, r3
 801ff04:	980d      	ldr	r0, [sp, #52]	; 0x34
 801ff06:	b292      	uxth	r2, r2
 801ff08:	4342      	muls	r2, r0
 801ff0a:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801ff0e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801ff10:	fb01 c102 	mla	r1, r1, r2, ip
 801ff14:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801ff16:	fb03 1302 	mla	r3, r3, r2, r1
 801ff1a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ff1e:	2bff      	cmp	r3, #255	; 0xff
 801ff20:	f040 8093 	bne.w	802004a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801ff24:	4bbe      	ldr	r3, [pc, #760]	; (8020220 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801ff26:	681a      	ldr	r2, [r3, #0]
 801ff28:	4bbe      	ldr	r3, [pc, #760]	; (8020224 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801ff2a:	0951      	lsrs	r1, r2, #5
 801ff2c:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801ff30:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ff34:	430b      	orrs	r3, r1
 801ff36:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ff3a:	4313      	orrs	r3, r2
 801ff3c:	f8a8 3000 	strh.w	r3, [r8]
 801ff40:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ff42:	441c      	add	r4, r3
 801ff44:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ff46:	441e      	add	r6, r3
 801ff48:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ff4a:	3b01      	subs	r3, #1
 801ff4c:	f108 0802 	add.w	r8, r8, #2
 801ff50:	9309      	str	r3, [sp, #36]	; 0x24
 801ff52:	e76c      	b.n	801fe2e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ff54:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ff56:	441c      	add	r4, r3
 801ff58:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ff5a:	3d01      	subs	r5, #1
 801ff5c:	441e      	add	r6, r3
 801ff5e:	f109 0902 	add.w	r9, r9, #2
 801ff62:	e744      	b.n	801fdee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801ff64:	d021      	beq.n	801ffaa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801ff66:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801ff68:	1e6b      	subs	r3, r5, #1
 801ff6a:	fb00 4003 	mla	r0, r0, r3, r4
 801ff6e:	1400      	asrs	r0, r0, #16
 801ff70:	f53f af59 	bmi.w	801fe26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801ff74:	3901      	subs	r1, #1
 801ff76:	4288      	cmp	r0, r1
 801ff78:	f6bf af55 	bge.w	801fe26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801ff7c:	9920      	ldr	r1, [sp, #128]	; 0x80
 801ff7e:	fb01 6303 	mla	r3, r1, r3, r6
 801ff82:	141b      	asrs	r3, r3, #16
 801ff84:	f53f af4f 	bmi.w	801fe26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801ff88:	3a01      	subs	r2, #1
 801ff8a:	4293      	cmp	r3, r2
 801ff8c:	f6bf af4b 	bge.w	801fe26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801ff90:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801ff94:	9308      	str	r3, [sp, #32]
 801ff96:	46a8      	mov	r8, r5
 801ff98:	46ce      	mov	lr, r9
 801ff9a:	f1b8 0f00 	cmp.w	r8, #0
 801ff9e:	f300 80b5 	bgt.w	802010c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801ffa2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801ffa6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801ffaa:	9b07      	ldr	r3, [sp, #28]
 801ffac:	2b00      	cmp	r3, #0
 801ffae:	f340 817d 	ble.w	80202ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801ffb2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ffb6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ffba:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ffbe:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ffc0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ffc4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ffc8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ffcc:	eef0 6a62 	vmov.f32	s13, s5
 801ffd0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ffd4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ffd8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ffdc:	ee16 4a90 	vmov	r4, s13
 801ffe0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ffe4:	eef0 6a43 	vmov.f32	s13, s6
 801ffe8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ffec:	ee12 2a90 	vmov	r2, s5
 801fff0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fff4:	fb92 f3f3 	sdiv	r3, r2, r3
 801fff8:	ee13 2a10 	vmov	r2, s6
 801fffc:	931f      	str	r3, [sp, #124]	; 0x7c
 801fffe:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020000:	fb92 f3f3 	sdiv	r3, r2, r3
 8020004:	9320      	str	r3, [sp, #128]	; 0x80
 8020006:	9b07      	ldr	r3, [sp, #28]
 8020008:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802000a:	3b01      	subs	r3, #1
 802000c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020010:	9307      	str	r3, [sp, #28]
 8020012:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020014:	ee16 6a90 	vmov	r6, s13
 8020018:	bf14      	ite	ne
 802001a:	461d      	movne	r5, r3
 802001c:	4615      	moveq	r5, r2
 802001e:	eeb0 3a67 	vmov.f32	s6, s15
 8020022:	eef0 2a47 	vmov.f32	s5, s14
 8020026:	e6d3      	b.n	801fdd0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8020028:	2900      	cmp	r1, #0
 802002a:	f43f af5c 	beq.w	801fee6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802002e:	eb0a 0003 	add.w	r0, sl, r3
 8020032:	0843      	lsrs	r3, r0, #1
 8020034:	07c0      	lsls	r0, r0, #31
 8020036:	5cfb      	ldrb	r3, [r7, r3]
 8020038:	bf54      	ite	pl
 802003a:	f003 030f 	andpl.w	r3, r3, #15
 802003e:	111b      	asrmi	r3, r3, #4
 8020040:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8020044:	b2db      	uxtb	r3, r3
 8020046:	930a      	str	r3, [sp, #40]	; 0x28
 8020048:	e74d      	b.n	801fee6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802004a:	2b00      	cmp	r3, #0
 802004c:	f43f af78 	beq.w	801ff40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020050:	4a73      	ldr	r2, [pc, #460]	; (8020220 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8020052:	f8b8 c000 	ldrh.w	ip, [r8]
 8020056:	6810      	ldr	r0, [r2, #0]
 8020058:	fa1f fe83 	uxth.w	lr, r3
 802005c:	ea4f 212c 	mov.w	r1, ip, asr #8
 8020060:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8020064:	43db      	mvns	r3, r3
 8020066:	b2db      	uxtb	r3, r3
 8020068:	fb12 f20e 	smulbb	r2, r2, lr
 802006c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8020070:	fb01 2103 	mla	r1, r1, r3, r2
 8020074:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8020078:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802007c:	b2c0      	uxtb	r0, r0
 802007e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8020082:	fb1b fb0e 	smulbb	fp, fp, lr
 8020086:	b289      	uxth	r1, r1
 8020088:	fb10 fe0e 	smulbb	lr, r0, lr
 802008c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8020090:	fa5f fc8c 	uxtb.w	ip, ip
 8020094:	fb02 b203 	mla	r2, r2, r3, fp
 8020098:	1c48      	adds	r0, r1, #1
 802009a:	fb0c e303 	mla	r3, ip, r3, lr
 802009e:	b292      	uxth	r2, r2
 80200a0:	b29b      	uxth	r3, r3
 80200a2:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 80200a6:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 80200aa:	f102 0b01 	add.w	fp, r2, #1
 80200ae:	1c59      	adds	r1, r3, #1
 80200b0:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80200b4:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80200b8:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80200bc:	0952      	lsrs	r2, r2, #5
 80200be:	4301      	orrs	r1, r0
 80200c0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80200c4:	4311      	orrs	r1, r2
 80200c6:	f8a8 1000 	strh.w	r1, [r8]
 80200ca:	e739      	b.n	801ff40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80200cc:	f113 0b01 	adds.w	fp, r3, #1
 80200d0:	f53f af36 	bmi.w	801ff40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80200d4:	45dc      	cmp	ip, fp
 80200d6:	f6ff af33 	blt.w	801ff40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80200da:	f110 0b01 	adds.w	fp, r0, #1
 80200de:	f53f af2f 	bmi.w	801ff40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80200e2:	45de      	cmp	lr, fp
 80200e4:	f6ff af2c 	blt.w	801ff40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80200e8:	9a08      	ldr	r2, [sp, #32]
 80200ea:	9302      	str	r3, [sp, #8]
 80200ec:	fa0f f38e 	sxth.w	r3, lr
 80200f0:	9301      	str	r3, [sp, #4]
 80200f2:	fa0f f38c 	sxth.w	r3, ip
 80200f6:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80200fa:	9105      	str	r1, [sp, #20]
 80200fc:	9300      	str	r3, [sp, #0]
 80200fe:	463a      	mov	r2, r7
 8020100:	4653      	mov	r3, sl
 8020102:	4641      	mov	r1, r8
 8020104:	9811      	ldr	r0, [sp, #68]	; 0x44
 8020106:	f7ff fd73 	bl	801fbf0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 802010a:	e719      	b.n	801ff40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802010c:	9906      	ldr	r1, [sp, #24]
 802010e:	1422      	asrs	r2, r4, #16
 8020110:	1433      	asrs	r3, r6, #16
 8020112:	fb01 2303 	mla	r3, r1, r3, r2
 8020116:	085a      	lsrs	r2, r3, #1
 8020118:	07d9      	lsls	r1, r3, #31
 802011a:	5cba      	ldrb	r2, [r7, r2]
 802011c:	bf54      	ite	pl
 802011e:	f002 020f 	andpl.w	r2, r2, #15
 8020122:	1112      	asrmi	r2, r2, #4
 8020124:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8020128:	f3c4 3003 	ubfx	r0, r4, #12, #4
 802012c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8020130:	b2d2      	uxtb	r2, r2
 8020132:	2800      	cmp	r0, #0
 8020134:	d062      	beq.n	80201fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 8020136:	f103 0a01 	add.w	sl, r3, #1
 802013a:	ea4f 015a 	mov.w	r1, sl, lsr #1
 802013e:	f01a 0f01 	tst.w	sl, #1
 8020142:	5c79      	ldrb	r1, [r7, r1]
 8020144:	bf0c      	ite	eq
 8020146:	f001 010f 	andeq.w	r1, r1, #15
 802014a:	1109      	asrne	r1, r1, #4
 802014c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8020150:	b2c9      	uxtb	r1, r1
 8020152:	910f      	str	r1, [sp, #60]	; 0x3c
 8020154:	f1bc 0f00 	cmp.w	ip, #0
 8020158:	d019      	beq.n	802018e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802015a:	9908      	ldr	r1, [sp, #32]
 802015c:	440b      	add	r3, r1
 802015e:	0859      	lsrs	r1, r3, #1
 8020160:	f013 0f01 	tst.w	r3, #1
 8020164:	5c79      	ldrb	r1, [r7, r1]
 8020166:	bf0c      	ite	eq
 8020168:	f001 010f 	andeq.w	r1, r1, #15
 802016c:	1109      	asrne	r1, r1, #4
 802016e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8020172:	b2c9      	uxtb	r1, r1
 8020174:	3301      	adds	r3, #1
 8020176:	910b      	str	r1, [sp, #44]	; 0x2c
 8020178:	0859      	lsrs	r1, r3, #1
 802017a:	07db      	lsls	r3, r3, #31
 802017c:	5c79      	ldrb	r1, [r7, r1]
 802017e:	bf54      	ite	pl
 8020180:	f001 010f 	andpl.w	r1, r1, #15
 8020184:	1109      	asrmi	r1, r1, #4
 8020186:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802018a:	b2c9      	uxtb	r1, r1
 802018c:	9110      	str	r1, [sp, #64]	; 0x40
 802018e:	b280      	uxth	r0, r0
 8020190:	fa1f fc8c 	uxth.w	ip, ip
 8020194:	fb00 f30c 	mul.w	r3, r0, ip
 8020198:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 802019c:	0100      	lsls	r0, r0, #4
 802019e:	fa1f fc8c 	uxth.w	ip, ip
 80201a2:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 80201a6:	eba1 010c 	sub.w	r1, r1, ip
 80201aa:	fa1f fa81 	uxth.w	sl, r1
 80201ae:	1ac0      	subs	r0, r0, r3
 80201b0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80201b2:	b280      	uxth	r0, r0
 80201b4:	4348      	muls	r0, r1
 80201b6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80201b8:	fb02 020a 	mla	r2, r2, sl, r0
 80201bc:	fb0c 2c01 	mla	ip, ip, r1, r2
 80201c0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80201c2:	fb03 c302 	mla	r3, r3, r2, ip
 80201c6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80201ca:	2bff      	cmp	r3, #255	; 0xff
 80201cc:	d12c      	bne.n	8020228 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 80201ce:	4b14      	ldr	r3, [pc, #80]	; (8020220 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80201d0:	681a      	ldr	r2, [r3, #0]
 80201d2:	4b14      	ldr	r3, [pc, #80]	; (8020224 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 80201d4:	0951      	lsrs	r1, r2, #5
 80201d6:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80201da:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80201de:	430b      	orrs	r3, r1
 80201e0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80201e4:	4313      	orrs	r3, r2
 80201e6:	f8ae 3000 	strh.w	r3, [lr]
 80201ea:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80201ec:	441c      	add	r4, r3
 80201ee:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80201f0:	f10e 0e02 	add.w	lr, lr, #2
 80201f4:	441e      	add	r6, r3
 80201f6:	f108 38ff 	add.w	r8, r8, #4294967295
 80201fa:	e6ce      	b.n	801ff9a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80201fc:	f1bc 0f00 	cmp.w	ip, #0
 8020200:	d0c5      	beq.n	802018e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8020202:	9908      	ldr	r1, [sp, #32]
 8020204:	440b      	add	r3, r1
 8020206:	0859      	lsrs	r1, r3, #1
 8020208:	07db      	lsls	r3, r3, #31
 802020a:	5c79      	ldrb	r1, [r7, r1]
 802020c:	bf54      	ite	pl
 802020e:	f001 010f 	andpl.w	r1, r1, #15
 8020212:	1109      	asrmi	r1, r1, #4
 8020214:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8020218:	b2c9      	uxtb	r1, r1
 802021a:	910b      	str	r1, [sp, #44]	; 0x2c
 802021c:	e7b7      	b.n	802018e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802021e:	bf00      	nop
 8020220:	20017460 	.word	0x20017460
 8020224:	fffff800 	.word	0xfffff800
 8020228:	2b00      	cmp	r3, #0
 802022a:	d0de      	beq.n	80201ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802022c:	4a21      	ldr	r2, [pc, #132]	; (80202b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 802022e:	f8be c000 	ldrh.w	ip, [lr]
 8020232:	6810      	ldr	r0, [r2, #0]
 8020234:	fa1f fa83 	uxth.w	sl, r3
 8020238:	ea4f 212c 	mov.w	r1, ip, asr #8
 802023c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8020240:	43db      	mvns	r3, r3
 8020242:	b2db      	uxtb	r3, r3
 8020244:	fb12 f20a 	smulbb	r2, r2, sl
 8020248:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802024c:	fb01 2103 	mla	r1, r1, r3, r2
 8020250:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8020254:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8020258:	b2c0      	uxtb	r0, r0
 802025a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802025e:	fa5f fc8c 	uxtb.w	ip, ip
 8020262:	fb10 f00a 	smulbb	r0, r0, sl
 8020266:	fb0c 0003 	mla	r0, ip, r3, r0
 802026a:	b289      	uxth	r1, r1
 802026c:	fb1b fb0a 	smulbb	fp, fp, sl
 8020270:	b280      	uxth	r0, r0
 8020272:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8020276:	fb02 b203 	mla	r2, r2, r3, fp
 802027a:	1c4b      	adds	r3, r1, #1
 802027c:	f100 0b01 	add.w	fp, r0, #1
 8020280:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8020284:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8020288:	b292      	uxth	r2, r2
 802028a:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 802028e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8020292:	ea4b 0101 	orr.w	r1, fp, r1
 8020296:	f102 0b01 	add.w	fp, r2, #1
 802029a:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802029e:	0952      	lsrs	r2, r2, #5
 80202a0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80202a4:	4311      	orrs	r1, r2
 80202a6:	f8ae 1000 	strh.w	r1, [lr]
 80202aa:	e79e      	b.n	80201ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80202ac:	b013      	add	sp, #76	; 0x4c
 80202ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80202b2:	bf00      	nop
 80202b4:	20017460 	.word	0x20017460

080202b8 <CRC_Lock>:
 80202b8:	b530      	push	{r4, r5, lr}
 80202ba:	4a20      	ldr	r2, [pc, #128]	; (802033c <CRC_Lock+0x84>)
 80202bc:	6813      	ldr	r3, [r2, #0]
 80202be:	f023 0301 	bic.w	r3, r3, #1
 80202c2:	6013      	str	r3, [r2, #0]
 80202c4:	4b1e      	ldr	r3, [pc, #120]	; (8020340 <CRC_Lock+0x88>)
 80202c6:	681a      	ldr	r2, [r3, #0]
 80202c8:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 80202cc:	4022      	ands	r2, r4
 80202ce:	f24c 2540 	movw	r5, #49728	; 0xc240
 80202d2:	42aa      	cmp	r2, r5
 80202d4:	d005      	beq.n	80202e2 <CRC_Lock+0x2a>
 80202d6:	681b      	ldr	r3, [r3, #0]
 80202d8:	f24c 2270 	movw	r2, #49776	; 0xc270
 80202dc:	4023      	ands	r3, r4
 80202de:	4293      	cmp	r3, r2
 80202e0:	d124      	bne.n	802032c <CRC_Lock+0x74>
 80202e2:	4b18      	ldr	r3, [pc, #96]	; (8020344 <CRC_Lock+0x8c>)
 80202e4:	681b      	ldr	r3, [r3, #0]
 80202e6:	bb0b      	cbnz	r3, 802032c <CRC_Lock+0x74>
 80202e8:	4b17      	ldr	r3, [pc, #92]	; (8020348 <CRC_Lock+0x90>)
 80202ea:	681a      	ldr	r2, [r3, #0]
 80202ec:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80202f0:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 80202f4:	d00d      	beq.n	8020312 <CRC_Lock+0x5a>
 80202f6:	681a      	ldr	r2, [r3, #0]
 80202f8:	f240 4483 	movw	r4, #1155	; 0x483
 80202fc:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8020300:	42a2      	cmp	r2, r4
 8020302:	d006      	beq.n	8020312 <CRC_Lock+0x5a>
 8020304:	681b      	ldr	r3, [r3, #0]
 8020306:	f240 4285 	movw	r2, #1157	; 0x485
 802030a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 802030e:	4293      	cmp	r3, r2
 8020310:	d10c      	bne.n	802032c <CRC_Lock+0x74>
 8020312:	4b0e      	ldr	r3, [pc, #56]	; (802034c <CRC_Lock+0x94>)
 8020314:	2201      	movs	r2, #1
 8020316:	601a      	str	r2, [r3, #0]
 8020318:	681a      	ldr	r2, [r3, #0]
 802031a:	2a00      	cmp	r2, #0
 802031c:	d1fc      	bne.n	8020318 <CRC_Lock+0x60>
 802031e:	4b0c      	ldr	r3, [pc, #48]	; (8020350 <CRC_Lock+0x98>)
 8020320:	6018      	str	r0, [r3, #0]
 8020322:	6818      	ldr	r0, [r3, #0]
 8020324:	1a43      	subs	r3, r0, r1
 8020326:	4258      	negs	r0, r3
 8020328:	4158      	adcs	r0, r3
 802032a:	bd30      	pop	{r4, r5, pc}
 802032c:	4b09      	ldr	r3, [pc, #36]	; (8020354 <CRC_Lock+0x9c>)
 802032e:	2201      	movs	r2, #1
 8020330:	601a      	str	r2, [r3, #0]
 8020332:	681a      	ldr	r2, [r3, #0]
 8020334:	2a00      	cmp	r2, #0
 8020336:	d1fc      	bne.n	8020332 <CRC_Lock+0x7a>
 8020338:	4b07      	ldr	r3, [pc, #28]	; (8020358 <CRC_Lock+0xa0>)
 802033a:	e7f1      	b.n	8020320 <CRC_Lock+0x68>
 802033c:	e0002000 	.word	0xe0002000
 8020340:	e000ed00 	.word	0xe000ed00
 8020344:	e0042000 	.word	0xe0042000
 8020348:	5c001000 	.word	0x5c001000
 802034c:	58024c08 	.word	0x58024c08
 8020350:	58024c00 	.word	0x58024c00
 8020354:	40023008 	.word	0x40023008
 8020358:	40023000 	.word	0x40023000

0802035c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 802035c:	6101      	str	r1, [r0, #16]
 802035e:	4770      	bx	lr

08020360 <_ZN8touchgfx8Gestures4tickEv>:
 8020360:	7b83      	ldrb	r3, [r0, #14]
 8020362:	b14b      	cbz	r3, 8020378 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8020364:	8903      	ldrh	r3, [r0, #8]
 8020366:	3301      	adds	r3, #1
 8020368:	b29b      	uxth	r3, r3
 802036a:	2b07      	cmp	r3, #7
 802036c:	8103      	strh	r3, [r0, #8]
 802036e:	bf81      	itttt	hi
 8020370:	2300      	movhi	r3, #0
 8020372:	8143      	strhhi	r3, [r0, #10]
 8020374:	8183      	strhhi	r3, [r0, #12]
 8020376:	7383      	strbhi	r3, [r0, #14]
 8020378:	4770      	bx	lr
	...

0802037c <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 802037c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8020380:	4698      	mov	r8, r3
 8020382:	8883      	ldrh	r3, [r0, #4]
 8020384:	f8ad 3006 	strh.w	r3, [sp, #6]
 8020388:	eba8 0303 	sub.w	r3, r8, r3
 802038c:	b21b      	sxth	r3, r3
 802038e:	4604      	mov	r4, r0
 8020390:	2b00      	cmp	r3, #0
 8020392:	4617      	mov	r7, r2
 8020394:	4a18      	ldr	r2, [pc, #96]	; (80203f8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8020396:	9200      	str	r2, [sp, #0]
 8020398:	bfb8      	it	lt
 802039a:	425b      	neglt	r3, r3
 802039c:	8aa2      	ldrh	r2, [r4, #20]
 802039e:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 80203a2:	f8ad 800a 	strh.w	r8, [sp, #10]
 80203a6:	b21b      	sxth	r3, r3
 80203a8:	460e      	mov	r6, r1
 80203aa:	4293      	cmp	r3, r2
 80203ac:	88c1      	ldrh	r1, [r0, #6]
 80203ae:	f8ad 1008 	strh.w	r1, [sp, #8]
 80203b2:	f04f 0000 	mov.w	r0, #0
 80203b6:	f88d 0004 	strb.w	r0, [sp, #4]
 80203ba:	f8ad 500c 	strh.w	r5, [sp, #12]
 80203be:	dc07      	bgt.n	80203d0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 80203c0:	1a69      	subs	r1, r5, r1
 80203c2:	b209      	sxth	r1, r1
 80203c4:	2900      	cmp	r1, #0
 80203c6:	bfb8      	it	lt
 80203c8:	4249      	neglt	r1, r1
 80203ca:	b209      	sxth	r1, r1
 80203cc:	428a      	cmp	r2, r1
 80203ce:	da10      	bge.n	80203f2 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 80203d0:	6920      	ldr	r0, [r4, #16]
 80203d2:	6803      	ldr	r3, [r0, #0]
 80203d4:	4669      	mov	r1, sp
 80203d6:	685b      	ldr	r3, [r3, #4]
 80203d8:	4798      	blx	r3
 80203da:	eba8 0606 	sub.w	r6, r8, r6
 80203de:	2300      	movs	r3, #0
 80203e0:	1bef      	subs	r7, r5, r7
 80203e2:	2001      	movs	r0, #1
 80203e4:	8123      	strh	r3, [r4, #8]
 80203e6:	8166      	strh	r6, [r4, #10]
 80203e8:	81a7      	strh	r7, [r4, #12]
 80203ea:	f8a4 8004 	strh.w	r8, [r4, #4]
 80203ee:	80e5      	strh	r5, [r4, #6]
 80203f0:	73a0      	strb	r0, [r4, #14]
 80203f2:	b004      	add	sp, #16
 80203f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80203f8:	08024318 	.word	0x08024318

080203fc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 80203fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80203fe:	461e      	mov	r6, r3
 8020400:	1e4b      	subs	r3, r1, #1
 8020402:	2b01      	cmp	r3, #1
 8020404:	b085      	sub	sp, #20
 8020406:	4604      	mov	r4, r0
 8020408:	460d      	mov	r5, r1
 802040a:	4617      	mov	r7, r2
 802040c:	d84b      	bhi.n	80204a6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 802040e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8020412:	1cd3      	adds	r3, r2, #3
 8020414:	b29b      	uxth	r3, r3
 8020416:	2b06      	cmp	r3, #6
 8020418:	d916      	bls.n	8020448 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 802041a:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 80204bc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 802041e:	f8cd c004 	str.w	ip, [sp, #4]
 8020422:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8020426:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802042a:	6900      	ldr	r0, [r0, #16]
 802042c:	f8ad 100c 	strh.w	r1, [sp, #12]
 8020430:	f04f 0c00 	mov.w	ip, #0
 8020434:	f88d c008 	strb.w	ip, [sp, #8]
 8020438:	f8ad 200a 	strh.w	r2, [sp, #10]
 802043c:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020440:	6803      	ldr	r3, [r0, #0]
 8020442:	a901      	add	r1, sp, #4
 8020444:	689b      	ldr	r3, [r3, #8]
 8020446:	4798      	blx	r3
 8020448:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802044c:	1cd3      	adds	r3, r2, #3
 802044e:	b29b      	uxth	r3, r3
 8020450:	2b06      	cmp	r3, #6
 8020452:	d916      	bls.n	8020482 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8020454:	f8df c064 	ldr.w	ip, [pc, #100]	; 80204bc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8020458:	f8cd c004 	str.w	ip, [sp, #4]
 802045c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8020460:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8020464:	6920      	ldr	r0, [r4, #16]
 8020466:	f8ad 100c 	strh.w	r1, [sp, #12]
 802046a:	f04f 0c01 	mov.w	ip, #1
 802046e:	f88d c008 	strb.w	ip, [sp, #8]
 8020472:	f8ad 200a 	strh.w	r2, [sp, #10]
 8020476:	f8ad 300e 	strh.w	r3, [sp, #14]
 802047a:	6803      	ldr	r3, [r0, #0]
 802047c:	a901      	add	r1, sp, #4
 802047e:	689b      	ldr	r3, [r3, #8]
 8020480:	4798      	blx	r3
 8020482:	4b0d      	ldr	r3, [pc, #52]	; (80204b8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8020484:	9301      	str	r3, [sp, #4]
 8020486:	6920      	ldr	r0, [r4, #16]
 8020488:	f88d 5008 	strb.w	r5, [sp, #8]
 802048c:	2300      	movs	r3, #0
 802048e:	f8ad 700a 	strh.w	r7, [sp, #10]
 8020492:	f8ad 600c 	strh.w	r6, [sp, #12]
 8020496:	f8ad 300e 	strh.w	r3, [sp, #14]
 802049a:	6803      	ldr	r3, [r0, #0]
 802049c:	a901      	add	r1, sp, #4
 802049e:	681b      	ldr	r3, [r3, #0]
 80204a0:	4798      	blx	r3
 80204a2:	b005      	add	sp, #20
 80204a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80204a6:	2900      	cmp	r1, #0
 80204a8:	d1eb      	bne.n	8020482 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80204aa:	80a2      	strh	r2, [r4, #4]
 80204ac:	80c6      	strh	r6, [r0, #6]
 80204ae:	60a1      	str	r1, [r4, #8]
 80204b0:	81a1      	strh	r1, [r4, #12]
 80204b2:	73a1      	strb	r1, [r4, #14]
 80204b4:	e7e5      	b.n	8020482 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80204b6:	bf00      	nop
 80204b8:	08024304 	.word	0x08024304
 80204bc:	0802432c 	.word	0x0802432c

080204c0 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 80204c0:	10c9      	asrs	r1, r1, #3
 80204c2:	2900      	cmp	r1, #0
 80204c4:	bfb8      	it	lt
 80204c6:	4249      	neglt	r1, r1
 80204c8:	2801      	cmp	r0, #1
 80204ca:	d108      	bne.n	80204de <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 80204cc:	f3c1 0008 	ubfx	r0, r1, #0, #9
 80204d0:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 80204d4:	4601      	mov	r1, r0
 80204d6:	dd02      	ble.n	80204de <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 80204d8:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 80204dc:	4770      	bx	lr
 80204de:	29ff      	cmp	r1, #255	; 0xff
 80204e0:	bfa8      	it	ge
 80204e2:	21ff      	movge	r1, #255	; 0xff
 80204e4:	4608      	mov	r0, r1
 80204e6:	4770      	bx	lr

080204e8 <_ZN8touchgfx10Rasterizer6lineToEii>:
 80204e8:	b410      	push	{r4}
 80204ea:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80204ee:	429c      	cmp	r4, r3
 80204f0:	d803      	bhi.n	80204fa <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 80204f2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80204f6:	f7ef b97d 	b.w	800f7f4 <_ZN8touchgfx7Outline6lineToEii>
 80204fa:	f85d 4b04 	ldr.w	r4, [sp], #4
 80204fe:	4770      	bx	lr

08020500 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8020500:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020504:	b08b      	sub	sp, #44	; 0x2c
 8020506:	e9cd 2306 	strd	r2, r3, [sp, #24]
 802050a:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 802050e:	9308      	str	r3, [sp, #32]
 8020510:	4606      	mov	r6, r0
 8020512:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8020516:	9309      	str	r3, [sp, #36]	; 0x24
 8020518:	468a      	mov	sl, r1
 802051a:	f7ef fad8 	bl	800face <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 802051e:	68b5      	ldr	r5, [r6, #8]
 8020520:	4604      	mov	r4, r0
 8020522:	2d00      	cmp	r5, #0
 8020524:	d044      	beq.n	80205b0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8020526:	6873      	ldr	r3, [r6, #4]
 8020528:	42ab      	cmp	r3, r5
 802052a:	d33d      	bcc.n	80205a8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 802052c:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8020530:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 8020534:	eb02 0b03 	add.w	fp, r2, r3
 8020538:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 802053c:	fb02 1203 	mla	r2, r2, r3, r1
 8020540:	9205      	str	r2, [sp, #20]
 8020542:	1e6a      	subs	r2, r5, #1
 8020544:	9204      	str	r2, [sp, #16]
 8020546:	f04f 0800 	mov.w	r8, #0
 802054a:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 802054e:	f9b4 7000 	ldrsh.w	r7, [r4]
 8020552:	454b      	cmp	r3, r9
 8020554:	463a      	mov	r2, r7
 8020556:	d008      	beq.n	802056a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8020558:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 802055c:	eb03 0b09 	add.w	fp, r3, r9
 8020560:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8020564:	fb03 1309 	mla	r3, r3, r9, r1
 8020568:	9305      	str	r3, [sp, #20]
 802056a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 802056e:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8020572:	4498      	add	r8, r3
 8020574:	9b04      	ldr	r3, [sp, #16]
 8020576:	3b01      	subs	r3, #1
 8020578:	9304      	str	r3, [sp, #16]
 802057a:	9b04      	ldr	r3, [sp, #16]
 802057c:	3301      	adds	r3, #1
 802057e:	d015      	beq.n	80205ac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8020580:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8020584:	42bb      	cmp	r3, r7
 8020586:	d117      	bne.n	80205b8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8020588:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 802058c:	9b04      	ldr	r3, [sp, #16]
 802058e:	4548      	cmp	r0, r9
 8020590:	f103 33ff 	add.w	r3, r3, #4294967295
 8020594:	d17f      	bne.n	8020696 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8020596:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 802059a:	4401      	add	r1, r0
 802059c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80205a0:	4480      	add	r8, r0
 80205a2:	e7e9      	b.n	8020578 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 80205a4:	461f      	mov	r7, r3
 80205a6:	e044      	b.n	8020632 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 80205a8:	2000      	movs	r0, #0
 80205aa:	e002      	b.n	80205b2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 80205ac:	2900      	cmp	r1, #0
 80205ae:	d16f      	bne.n	8020690 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 80205b0:	2001      	movs	r0, #1
 80205b2:	b00b      	add	sp, #44	; 0x2c
 80205b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80205b8:	2900      	cmp	r1, #0
 80205ba:	d030      	beq.n	802061e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 80205bc:	2f00      	cmp	r7, #0
 80205be:	db29      	blt.n	8020614 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 80205c0:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 80205c4:	42bb      	cmp	r3, r7
 80205c6:	dd25      	ble.n	8020614 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 80205c8:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 80205cc:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 80205d0:	f7ff ff76 	bl	80204c0 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 80205d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80205d6:	fb10 f003 	smulbb	r0, r0, r3
 80205da:	b280      	uxth	r0, r0
 80205dc:	1c41      	adds	r1, r0, #1
 80205de:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80205e2:	1209      	asrs	r1, r1, #8
 80205e4:	f011 0fff 	tst.w	r1, #255	; 0xff
 80205e8:	d014      	beq.n	8020614 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 80205ea:	9808      	ldr	r0, [sp, #32]
 80205ec:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 80205ee:	b2c9      	uxtb	r1, r1
 80205f0:	b2ba      	uxth	r2, r7
 80205f2:	9102      	str	r1, [sp, #8]
 80205f4:	2101      	movs	r1, #1
 80205f6:	4413      	add	r3, r2
 80205f8:	9101      	str	r1, [sp, #4]
 80205fa:	4402      	add	r2, r0
 80205fc:	fa0f f18b 	sxth.w	r1, fp
 8020600:	f8da 0000 	ldr.w	r0, [sl]
 8020604:	9100      	str	r1, [sp, #0]
 8020606:	6941      	ldr	r1, [r0, #20]
 8020608:	b21b      	sxth	r3, r3
 802060a:	460d      	mov	r5, r1
 802060c:	b212      	sxth	r2, r2
 802060e:	9905      	ldr	r1, [sp, #20]
 8020610:	4650      	mov	r0, sl
 8020612:	47a8      	blx	r5
 8020614:	9b04      	ldr	r3, [sp, #16]
 8020616:	3301      	adds	r3, #1
 8020618:	f107 0201 	add.w	r2, r7, #1
 802061c:	d0c8      	beq.n	80205b0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802061e:	f9b4 7000 	ldrsh.w	r7, [r4]
 8020622:	1abb      	subs	r3, r7, r2
 8020624:	2b00      	cmp	r3, #0
 8020626:	dd31      	ble.n	802068c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8020628:	2a00      	cmp	r2, #0
 802062a:	dabb      	bge.n	80205a4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 802062c:	2f00      	cmp	r7, #0
 802062e:	dd2d      	ble.n	802068c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8020630:	2200      	movs	r2, #0
 8020632:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8020636:	19d1      	adds	r1, r2, r7
 8020638:	4299      	cmp	r1, r3
 802063a:	db02      	blt.n	8020642 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 802063c:	1a9f      	subs	r7, r3, r2
 802063e:	2f00      	cmp	r7, #0
 8020640:	dd24      	ble.n	802068c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8020642:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8020646:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 802064a:	f7ff ff39 	bl	80204c0 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 802064e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020650:	fb10 f003 	smulbb	r0, r0, r3
 8020654:	b280      	uxth	r0, r0
 8020656:	1c41      	adds	r1, r0, #1
 8020658:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802065c:	1209      	asrs	r1, r1, #8
 802065e:	f011 0fff 	tst.w	r1, #255	; 0xff
 8020662:	d013      	beq.n	802068c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8020664:	9808      	ldr	r0, [sp, #32]
 8020666:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8020668:	b292      	uxth	r2, r2
 802066a:	b2c9      	uxtb	r1, r1
 802066c:	4413      	add	r3, r2
 802066e:	9102      	str	r1, [sp, #8]
 8020670:	4402      	add	r2, r0
 8020672:	b23f      	sxth	r7, r7
 8020674:	f8da 0000 	ldr.w	r0, [sl]
 8020678:	9701      	str	r7, [sp, #4]
 802067a:	fa0f f18b 	sxth.w	r1, fp
 802067e:	9100      	str	r1, [sp, #0]
 8020680:	6947      	ldr	r7, [r0, #20]
 8020682:	9905      	ldr	r1, [sp, #20]
 8020684:	b21b      	sxth	r3, r3
 8020686:	b212      	sxth	r2, r2
 8020688:	4650      	mov	r0, sl
 802068a:	47b8      	blx	r7
 802068c:	464b      	mov	r3, r9
 802068e:	e75c      	b.n	802054a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8020690:	2f00      	cmp	r7, #0
 8020692:	da95      	bge.n	80205c0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8020694:	e78c      	b.n	80205b0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8020696:	2900      	cmp	r1, #0
 8020698:	d0f8      	beq.n	802068c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802069a:	e78f      	b.n	80205bc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

0802069c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 802069c:	4b4c      	ldr	r3, [pc, #304]	; (80207d0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x134>)
 802069e:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80206a2:	2500      	movs	r5, #0
 80206a4:	f100 0620 	add.w	r6, r0, #32
 80206a8:	4604      	mov	r4, r0
 80206aa:	e9c0 3100 	strd	r3, r1, [r0]
 80206ae:	e9c0 5502 	strd	r5, r5, [r0, #8]
 80206b2:	e9c0 5504 	strd	r5, r5, [r0, #16]
 80206b6:	e9c0 5506 	strd	r5, r5, [r0, #24]
 80206ba:	f100 0718 	add.w	r7, r0, #24
 80206be:	4630      	mov	r0, r6
 80206c0:	4690      	mov	r8, r2
 80206c2:	f7ee fbcf 	bl	800ee64 <_ZN8touchgfx7OutlineC1Ev>
 80206c6:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 80206ca:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 80206ce:	2301      	movs	r3, #1
 80206d0:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 80206d4:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 80206d8:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 80206dc:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 80206e0:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80206e4:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 80206e8:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 80206ec:	f9b8 2000 	ldrsh.w	r2, [r8]
 80206f0:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 80206f4:	f8d4 c004 	ldr.w	ip, [r4, #4]
 80206f8:	9500      	str	r5, [sp, #0]
 80206fa:	4410      	add	r0, r2
 80206fc:	b280      	uxth	r0, r0
 80206fe:	fa0f fa80 	sxth.w	sl, r0
 8020702:	45aa      	cmp	sl, r5
 8020704:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 8020708:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 802070c:	dd5c      	ble.n	80207c8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 802070e:	4591      	cmp	r9, r2
 8020710:	dd5a      	ble.n	80207c8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 8020712:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8020716:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 802071a:	440b      	add	r3, r1
 802071c:	b29b      	uxth	r3, r3
 802071e:	b21d      	sxth	r5, r3
 8020720:	2d00      	cmp	r5, #0
 8020722:	dd51      	ble.n	80207c8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 8020724:	458e      	cmp	lr, r1
 8020726:	dd4f      	ble.n	80207c8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 8020728:	45d1      	cmp	r9, sl
 802072a:	bfb8      	it	lt
 802072c:	fa1f f089 	uxthlt.w	r0, r9
 8020730:	45ae      	cmp	lr, r5
 8020732:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8020736:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 802073a:	bfb8      	it	lt
 802073c:	fa1f f38e 	uxthlt.w	r3, lr
 8020740:	1a80      	subs	r0, r0, r2
 8020742:	1a5b      	subs	r3, r3, r1
 8020744:	f8ad 0004 	strh.w	r0, [sp, #4]
 8020748:	f8ad 3006 	strh.w	r3, [sp, #6]
 802074c:	f8ad 2000 	strh.w	r2, [sp]
 8020750:	f8ad 1002 	strh.w	r1, [sp, #2]
 8020754:	466d      	mov	r5, sp
 8020756:	e895 0003 	ldmia.w	r5, {r0, r1}
 802075a:	e887 0003 	stmia.w	r7, {r0, r1}
 802075e:	f8dc 3000 	ldr.w	r3, [ip]
 8020762:	4660      	mov	r0, ip
 8020764:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020766:	4639      	mov	r1, r7
 8020768:	4798      	blx	r3
 802076a:	6861      	ldr	r1, [r4, #4]
 802076c:	4628      	mov	r0, r5
 802076e:	3104      	adds	r1, #4
 8020770:	f7f0 fd0c 	bl	801118c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020774:	4638      	mov	r0, r7
 8020776:	f7f0 fce1 	bl	801113c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802077a:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 802077e:	f8bd 2000 	ldrh.w	r2, [sp]
 8020782:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 8020786:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 802078a:	4630      	mov	r0, r6
 802078c:	f7ee fb4e 	bl	800ee2c <_ZN8touchgfx7Outline5resetEv>
 8020790:	f9bd 3000 	ldrsh.w	r3, [sp]
 8020794:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 8020798:	015b      	lsls	r3, r3, #5
 802079a:	60a3      	str	r3, [r4, #8]
 802079c:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80207a0:	015b      	lsls	r3, r3, #5
 80207a2:	60e3      	str	r3, [r4, #12]
 80207a4:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80207a8:	015b      	lsls	r3, r3, #5
 80207aa:	6123      	str	r3, [r4, #16]
 80207ac:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 80207b0:	015b      	lsls	r3, r3, #5
 80207b2:	6163      	str	r3, [r4, #20]
 80207b4:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 80207b8:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 80207bc:	4620      	mov	r0, r4
 80207be:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 80207c2:	b002      	add	sp, #8
 80207c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80207c8:	2300      	movs	r3, #0
 80207ca:	9301      	str	r3, [sp, #4]
 80207cc:	e7c2      	b.n	8020754 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb8>
 80207ce:	bf00      	nop
 80207d0:	08023c78 	.word	0x08023c78

080207d4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 80207d4:	b510      	push	{r4, lr}
 80207d6:	4b07      	ldr	r3, [pc, #28]	; (80207f4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 80207d8:	781b      	ldrb	r3, [r3, #0]
 80207da:	2b01      	cmp	r3, #1
 80207dc:	d108      	bne.n	80207f0 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 80207de:	6843      	ldr	r3, [r0, #4]
 80207e0:	6814      	ldr	r4, [r2, #0]
 80207e2:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80207e6:	680b      	ldr	r3, [r1, #0]
 80207e8:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 80207ec:	6013      	str	r3, [r2, #0]
 80207ee:	600c      	str	r4, [r1, #0]
 80207f0:	bd10      	pop	{r4, pc}
 80207f2:	bf00      	nop
 80207f4:	20017448 	.word	0x20017448

080207f8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 80207f8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80207fa:	ab02      	add	r3, sp, #8
 80207fc:	4604      	mov	r4, r0
 80207fe:	f843 2d08 	str.w	r2, [r3, #-8]!
 8020802:	9101      	str	r1, [sp, #4]
 8020804:	461a      	mov	r2, r3
 8020806:	a901      	add	r1, sp, #4
 8020808:	f7ff ffe4 	bl	80207d4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802080c:	68a3      	ldr	r3, [r4, #8]
 802080e:	9901      	ldr	r1, [sp, #4]
 8020810:	9a00      	ldr	r2, [sp, #0]
 8020812:	1ac9      	subs	r1, r1, r3
 8020814:	68e3      	ldr	r3, [r4, #12]
 8020816:	9101      	str	r1, [sp, #4]
 8020818:	1ad2      	subs	r2, r2, r3
 802081a:	2a00      	cmp	r2, #0
 802081c:	9200      	str	r2, [sp, #0]
 802081e:	db1c      	blt.n	802085a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 8020820:	6963      	ldr	r3, [r4, #20]
 8020822:	429a      	cmp	r2, r3
 8020824:	bfac      	ite	ge
 8020826:	2002      	movge	r0, #2
 8020828:	2000      	movlt	r0, #0
 802082a:	2900      	cmp	r1, #0
 802082c:	db17      	blt.n	802085e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 802082e:	6923      	ldr	r3, [r4, #16]
 8020830:	4299      	cmp	r1, r3
 8020832:	bfac      	ite	ge
 8020834:	2308      	movge	r3, #8
 8020836:	2300      	movlt	r3, #0
 8020838:	4303      	orrs	r3, r0
 802083a:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 802083e:	b2dd      	uxtb	r5, r3
 8020840:	b978      	cbnz	r0, 8020862 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 8020842:	f104 0020 	add.w	r0, r4, #32
 8020846:	f7ff fe4f 	bl	80204e8 <_ZN8touchgfx10Rasterizer6lineToEii>
 802084a:	9b01      	ldr	r3, [sp, #4]
 802084c:	65e3      	str	r3, [r4, #92]	; 0x5c
 802084e:	9b00      	ldr	r3, [sp, #0]
 8020850:	6623      	str	r3, [r4, #96]	; 0x60
 8020852:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 8020856:	b002      	add	sp, #8
 8020858:	bd70      	pop	{r4, r5, r6, pc}
 802085a:	2001      	movs	r0, #1
 802085c:	e7e5      	b.n	802082a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 802085e:	2304      	movs	r3, #4
 8020860:	e7ea      	b.n	8020838 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 8020862:	b113      	cbz	r3, 802086a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 8020864:	ea10 0305 	ands.w	r3, r0, r5
 8020868:	d11d      	bne.n	80208a6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xae>
 802086a:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 802086e:	f104 0620 	add.w	r6, r4, #32
 8020872:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 8020876:	b193      	cbz	r3, 802089e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa6>
 8020878:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 802087c:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8020880:	4298      	cmp	r0, r3
 8020882:	d802      	bhi.n	802088a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 8020884:	4630      	mov	r0, r6
 8020886:	f7ee ffcf 	bl	800f828 <_ZN8touchgfx7Outline6moveToEii>
 802088a:	2300      	movs	r3, #0
 802088c:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8020890:	2301      	movs	r3, #1
 8020892:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8020896:	e9dd 2100 	ldrd	r2, r1, [sp]
 802089a:	4630      	mov	r0, r6
 802089c:	e7d3      	b.n	8020846 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 802089e:	4630      	mov	r0, r6
 80208a0:	f7ff fe22 	bl	80204e8 <_ZN8touchgfx10Rasterizer6lineToEii>
 80208a4:	e7f7      	b.n	8020896 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9e>
 80208a6:	461d      	mov	r5, r3
 80208a8:	e7cf      	b.n	802084a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>

080208aa <_ZN8touchgfx6Canvas5closeEv>:
 80208aa:	b538      	push	{r3, r4, r5, lr}
 80208ac:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 80208b0:	4604      	mov	r4, r0
 80208b2:	b993      	cbnz	r3, 80208da <_ZN8touchgfx6Canvas5closeEv+0x30>
 80208b4:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 80208b8:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 80208bc:	4213      	tst	r3, r2
 80208be:	d10c      	bne.n	80208da <_ZN8touchgfx6Canvas5closeEv+0x30>
 80208c0:	f100 0520 	add.w	r5, r0, #32
 80208c4:	b123      	cbz	r3, 80208d0 <_ZN8touchgfx6Canvas5closeEv+0x26>
 80208c6:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 80208ca:	4628      	mov	r0, r5
 80208cc:	f7ff fe0c 	bl	80204e8 <_ZN8touchgfx10Rasterizer6lineToEii>
 80208d0:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 80208d4:	4628      	mov	r0, r5
 80208d6:	f7ff fe07 	bl	80204e8 <_ZN8touchgfx10Rasterizer6lineToEii>
 80208da:	2300      	movs	r3, #0
 80208dc:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80208e0:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 80208e4:	4298      	cmp	r0, r3
 80208e6:	bf34      	ite	cc
 80208e8:	2000      	movcc	r0, #0
 80208ea:	2001      	movcs	r0, #1
 80208ec:	bd38      	pop	{r3, r4, r5, pc}
	...

080208f0 <_ZN8touchgfx6Canvas6renderEh>:
 80208f0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80208f4:	4604      	mov	r4, r0
 80208f6:	6840      	ldr	r0, [r0, #4]
 80208f8:	6803      	ldr	r3, [r0, #0]
 80208fa:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80208fc:	460d      	mov	r5, r1
 80208fe:	4798      	blx	r3
 8020900:	fb10 f105 	smulbb	r1, r0, r5
 8020904:	b289      	uxth	r1, r1
 8020906:	1c4d      	adds	r5, r1, #1
 8020908:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 802090c:	122d      	asrs	r5, r5, #8
 802090e:	f000 8098 	beq.w	8020a42 <_ZN8touchgfx6Canvas6renderEh+0x152>
 8020912:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 8020916:	2b00      	cmp	r3, #0
 8020918:	f000 8093 	beq.w	8020a42 <_ZN8touchgfx6Canvas6renderEh+0x152>
 802091c:	4620      	mov	r0, r4
 802091e:	f7ff ffc4 	bl	80208aa <_ZN8touchgfx6Canvas5closeEv>
 8020922:	4607      	mov	r7, r0
 8020924:	2800      	cmp	r0, #0
 8020926:	d043      	beq.n	80209b0 <_ZN8touchgfx6Canvas6renderEh+0xc0>
 8020928:	6863      	ldr	r3, [r4, #4]
 802092a:	4e47      	ldr	r6, [pc, #284]	; (8020a48 <_ZN8touchgfx6Canvas6renderEh+0x158>)
 802092c:	6a98      	ldr	r0, [r3, #40]	; 0x28
 802092e:	6837      	ldr	r7, [r6, #0]
 8020930:	6803      	ldr	r3, [r0, #0]
 8020932:	689b      	ldr	r3, [r3, #8]
 8020934:	4798      	blx	r3
 8020936:	4601      	mov	r1, r0
 8020938:	4638      	mov	r0, r7
 802093a:	f7eb fb55 	bl	800bfe8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 802093e:	4607      	mov	r7, r0
 8020940:	f7e1 fd10 	bl	8002364 <_ZN8touchgfx3HAL3lcdEv>
 8020944:	6803      	ldr	r3, [r0, #0]
 8020946:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8020948:	4798      	blx	r3
 802094a:	4680      	mov	r8, r0
 802094c:	f7e1 fd0a 	bl	8002364 <_ZN8touchgfx3HAL3lcdEv>
 8020950:	6803      	ldr	r3, [r0, #0]
 8020952:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020954:	4798      	blx	r3
 8020956:	280b      	cmp	r0, #11
 8020958:	d858      	bhi.n	8020a0c <_ZN8touchgfx6Canvas6renderEh+0x11c>
 802095a:	e8df f000 	tbb	[pc, r0]
 802095e:	594e      	.short	0x594e
 8020960:	2d570669 	.word	0x2d570669
 8020964:	6262623d 	.word	0x6262623d
 8020968:	6262      	.short	0x6262
 802096a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802096e:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8020972:	2208      	movs	r2, #8
 8020974:	fb91 f2f2 	sdiv	r2, r1, r2
 8020978:	fb08 2303 	mla	r3, r8, r3, r2
 802097c:	441f      	add	r7, r3
 802097e:	424b      	negs	r3, r1
 8020980:	f003 0307 	and.w	r3, r3, #7
 8020984:	f001 0107 	and.w	r1, r1, #7
 8020988:	bf58      	it	pl
 802098a:	4259      	negpl	r1, r3
 802098c:	b2c9      	uxtb	r1, r1
 802098e:	b2ed      	uxtb	r5, r5
 8020990:	e9cd 1500 	strd	r1, r5, [sp]
 8020994:	6860      	ldr	r0, [r4, #4]
 8020996:	fa0f f388 	sxth.w	r3, r8
 802099a:	463a      	mov	r2, r7
 802099c:	6a81      	ldr	r1, [r0, #40]	; 0x28
 802099e:	f104 0020 	add.w	r0, r4, #32
 80209a2:	f7ff fdad 	bl	8020500 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 80209a6:	4607      	mov	r7, r0
 80209a8:	6830      	ldr	r0, [r6, #0]
 80209aa:	6803      	ldr	r3, [r0, #0]
 80209ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80209ae:	4798      	blx	r3
 80209b0:	4638      	mov	r0, r7
 80209b2:	b002      	add	sp, #8
 80209b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80209b8:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80209bc:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 80209c0:	2204      	movs	r2, #4
 80209c2:	fb91 f2f2 	sdiv	r2, r1, r2
 80209c6:	fb08 2303 	mla	r3, r8, r3, r2
 80209ca:	441f      	add	r7, r3
 80209cc:	424b      	negs	r3, r1
 80209ce:	f003 0303 	and.w	r3, r3, #3
 80209d2:	f001 0103 	and.w	r1, r1, #3
 80209d6:	e7d7      	b.n	8020988 <_ZN8touchgfx6Canvas6renderEh+0x98>
 80209d8:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 80209dc:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80209e0:	2900      	cmp	r1, #0
 80209e2:	f04f 0202 	mov.w	r2, #2
 80209e6:	fb91 f2f2 	sdiv	r2, r1, r2
 80209ea:	f001 0101 	and.w	r1, r1, #1
 80209ee:	fb08 2303 	mla	r3, r8, r3, r2
 80209f2:	441f      	add	r7, r3
 80209f4:	bfb8      	it	lt
 80209f6:	4249      	neglt	r1, r1
 80209f8:	e7c8      	b.n	802098c <_ZN8touchgfx6Canvas6renderEh+0x9c>
 80209fa:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80209fe:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8020a02:	fb08 f303 	mul.w	r3, r8, r3
 8020a06:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8020a0a:	441f      	add	r7, r3
 8020a0c:	2100      	movs	r1, #0
 8020a0e:	e7be      	b.n	802098e <_ZN8touchgfx6Canvas6renderEh+0x9e>
 8020a10:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020a14:	fb08 f203 	mul.w	r2, r8, r3
 8020a18:	8b23      	ldrh	r3, [r4, #24]
 8020a1a:	2103      	movs	r1, #3
 8020a1c:	fb13 2301 	smlabb	r3, r3, r1, r2
 8020a20:	e7f3      	b.n	8020a0a <_ZN8touchgfx6Canvas6renderEh+0x11a>
 8020a22:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020a26:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8020a2a:	fb08 2303 	mla	r3, r8, r3, r2
 8020a2e:	e7ec      	b.n	8020a0a <_ZN8touchgfx6Canvas6renderEh+0x11a>
 8020a30:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020a34:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8020a38:	fb08 f303 	mul.w	r3, r8, r3
 8020a3c:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8020a40:	e7e3      	b.n	8020a0a <_ZN8touchgfx6Canvas6renderEh+0x11a>
 8020a42:	2701      	movs	r7, #1
 8020a44:	e7b4      	b.n	80209b0 <_ZN8touchgfx6Canvas6renderEh+0xc0>
 8020a46:	bf00      	nop
 8020a48:	20017450 	.word	0x20017450

08020a4c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8020a4c:	b513      	push	{r0, r1, r4, lr}
 8020a4e:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8020a52:	4604      	mov	r4, r0
 8020a54:	e9cd 2100 	strd	r2, r1, [sp]
 8020a58:	b1a3      	cbz	r3, 8020a84 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8020a5a:	466a      	mov	r2, sp
 8020a5c:	a901      	add	r1, sp, #4
 8020a5e:	4620      	mov	r0, r4
 8020a60:	f7ff feb8 	bl	80207d4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8020a64:	68a3      	ldr	r3, [r4, #8]
 8020a66:	9901      	ldr	r1, [sp, #4]
 8020a68:	9a00      	ldr	r2, [sp, #0]
 8020a6a:	1ac9      	subs	r1, r1, r3
 8020a6c:	68e3      	ldr	r3, [r4, #12]
 8020a6e:	9101      	str	r1, [sp, #4]
 8020a70:	1ad2      	subs	r2, r2, r3
 8020a72:	2a00      	cmp	r2, #0
 8020a74:	9200      	str	r2, [sp, #0]
 8020a76:	da0b      	bge.n	8020a90 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8020a78:	2301      	movs	r3, #1
 8020a7a:	2900      	cmp	r1, #0
 8020a7c:	da0e      	bge.n	8020a9c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8020a7e:	f043 0304 	orr.w	r3, r3, #4
 8020a82:	e013      	b.n	8020aac <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8020a84:	f7ff ff11 	bl	80208aa <_ZN8touchgfx6Canvas5closeEv>
 8020a88:	2800      	cmp	r0, #0
 8020a8a:	d1e6      	bne.n	8020a5a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8020a8c:	b002      	add	sp, #8
 8020a8e:	bd10      	pop	{r4, pc}
 8020a90:	6963      	ldr	r3, [r4, #20]
 8020a92:	429a      	cmp	r2, r3
 8020a94:	bfac      	ite	ge
 8020a96:	2302      	movge	r3, #2
 8020a98:	2300      	movlt	r3, #0
 8020a9a:	e7ee      	b.n	8020a7a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8020a9c:	6920      	ldr	r0, [r4, #16]
 8020a9e:	4281      	cmp	r1, r0
 8020aa0:	bfac      	ite	ge
 8020aa2:	2008      	movge	r0, #8
 8020aa4:	2000      	movlt	r0, #0
 8020aa6:	4318      	orrs	r0, r3
 8020aa8:	b2c3      	uxtb	r3, r0
 8020aaa:	b158      	cbz	r0, 8020ac4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8020aac:	2201      	movs	r2, #1
 8020aae:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 8020ab2:	9901      	ldr	r1, [sp, #4]
 8020ab4:	9a00      	ldr	r2, [sp, #0]
 8020ab6:	66a1      	str	r1, [r4, #104]	; 0x68
 8020ab8:	66e2      	str	r2, [r4, #108]	; 0x6c
 8020aba:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 8020abe:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8020ac2:	e7e3      	b.n	8020a8c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8020ac4:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8020ac8:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8020acc:	4298      	cmp	r0, r3
 8020ace:	d803      	bhi.n	8020ad8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8020ad0:	f104 0020 	add.w	r0, r4, #32
 8020ad4:	f7ee fea8 	bl	800f828 <_ZN8touchgfx7Outline6moveToEii>
 8020ad8:	2300      	movs	r3, #0
 8020ada:	2201      	movs	r2, #1
 8020adc:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8020ae0:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8020ae4:	e7e5      	b.n	8020ab2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

08020ae6 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8020ae6:	b570      	push	{r4, r5, r6, lr}
 8020ae8:	790b      	ldrb	r3, [r1, #4]
 8020aea:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8020aee:	2b00      	cmp	r3, #0
 8020af0:	bf0c      	ite	eq
 8020af2:	2301      	moveq	r3, #1
 8020af4:	2300      	movne	r3, #0
 8020af6:	4604      	mov	r4, r0
 8020af8:	460e      	mov	r6, r1
 8020afa:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8020afe:	d109      	bne.n	8020b14 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8020b00:	b14d      	cbz	r5, 8020b16 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8020b02:	7933      	ldrb	r3, [r6, #4]
 8020b04:	2b01      	cmp	r3, #1
 8020b06:	d10c      	bne.n	8020b22 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8020b08:	6823      	ldr	r3, [r4, #0]
 8020b0a:	4620      	mov	r0, r4
 8020b0c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8020b0e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8020b12:	4718      	bx	r3
 8020b14:	b12d      	cbz	r5, 8020b22 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8020b16:	6823      	ldr	r3, [r4, #0]
 8020b18:	4620      	mov	r0, r4
 8020b1a:	695b      	ldr	r3, [r3, #20]
 8020b1c:	4798      	blx	r3
 8020b1e:	2d00      	cmp	r5, #0
 8020b20:	d1ef      	bne.n	8020b02 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8020b22:	bd70      	pop	{r4, r5, r6, pc}

08020b24 <__aeabi_atexit>:
 8020b24:	460b      	mov	r3, r1
 8020b26:	4601      	mov	r1, r0
 8020b28:	4618      	mov	r0, r3
 8020b2a:	f000 b853 	b.w	8020bd4 <__cxa_atexit>

08020b2e <_ZdlPvj>:
 8020b2e:	f000 b812 	b.w	8020b56 <_ZdlPv>

08020b32 <__cxa_guard_acquire>:
 8020b32:	6803      	ldr	r3, [r0, #0]
 8020b34:	07db      	lsls	r3, r3, #31
 8020b36:	d406      	bmi.n	8020b46 <__cxa_guard_acquire+0x14>
 8020b38:	7843      	ldrb	r3, [r0, #1]
 8020b3a:	b103      	cbz	r3, 8020b3e <__cxa_guard_acquire+0xc>
 8020b3c:	deff      	udf	#255	; 0xff
 8020b3e:	2301      	movs	r3, #1
 8020b40:	7043      	strb	r3, [r0, #1]
 8020b42:	4618      	mov	r0, r3
 8020b44:	4770      	bx	lr
 8020b46:	2000      	movs	r0, #0
 8020b48:	4770      	bx	lr

08020b4a <__cxa_guard_release>:
 8020b4a:	2301      	movs	r3, #1
 8020b4c:	6003      	str	r3, [r0, #0]
 8020b4e:	4770      	bx	lr

08020b50 <__cxa_pure_virtual>:
 8020b50:	b508      	push	{r3, lr}
 8020b52:	f000 f80f 	bl	8020b74 <_ZSt9terminatev>

08020b56 <_ZdlPv>:
 8020b56:	f000 b989 	b.w	8020e6c <free>

08020b5a <_ZN10__cxxabiv111__terminateEPFvvE>:
 8020b5a:	b508      	push	{r3, lr}
 8020b5c:	4780      	blx	r0
 8020b5e:	f000 f80e 	bl	8020b7e <abort>
	...

08020b64 <_ZSt13get_terminatev>:
 8020b64:	4b02      	ldr	r3, [pc, #8]	; (8020b70 <_ZSt13get_terminatev+0xc>)
 8020b66:	6818      	ldr	r0, [r3, #0]
 8020b68:	f3bf 8f5b 	dmb	ish
 8020b6c:	4770      	bx	lr
 8020b6e:	bf00      	nop
 8020b70:	20000100 	.word	0x20000100

08020b74 <_ZSt9terminatev>:
 8020b74:	b508      	push	{r3, lr}
 8020b76:	f7ff fff5 	bl	8020b64 <_ZSt13get_terminatev>
 8020b7a:	f7ff ffee 	bl	8020b5a <_ZN10__cxxabiv111__terminateEPFvvE>

08020b7e <abort>:
 8020b7e:	b508      	push	{r3, lr}
 8020b80:	2006      	movs	r0, #6
 8020b82:	f000 fe01 	bl	8021788 <raise>
 8020b86:	2001      	movs	r0, #1
 8020b88:	f7e1 f9e6 	bl	8001f58 <_exit>

08020b8c <__assert_func>:
 8020b8c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8020b8e:	4614      	mov	r4, r2
 8020b90:	461a      	mov	r2, r3
 8020b92:	4b09      	ldr	r3, [pc, #36]	; (8020bb8 <__assert_func+0x2c>)
 8020b94:	681b      	ldr	r3, [r3, #0]
 8020b96:	4605      	mov	r5, r0
 8020b98:	68d8      	ldr	r0, [r3, #12]
 8020b9a:	b14c      	cbz	r4, 8020bb0 <__assert_func+0x24>
 8020b9c:	4b07      	ldr	r3, [pc, #28]	; (8020bbc <__assert_func+0x30>)
 8020b9e:	9100      	str	r1, [sp, #0]
 8020ba0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8020ba4:	4906      	ldr	r1, [pc, #24]	; (8020bc0 <__assert_func+0x34>)
 8020ba6:	462b      	mov	r3, r5
 8020ba8:	f000 f8fe 	bl	8020da8 <fiprintf>
 8020bac:	f7ff ffe7 	bl	8020b7e <abort>
 8020bb0:	4b04      	ldr	r3, [pc, #16]	; (8020bc4 <__assert_func+0x38>)
 8020bb2:	461c      	mov	r4, r3
 8020bb4:	e7f3      	b.n	8020b9e <__assert_func+0x12>
 8020bb6:	bf00      	nop
 8020bb8:	20000104 	.word	0x20000104
 8020bbc:	080245f4 	.word	0x080245f4
 8020bc0:	08024601 	.word	0x08024601
 8020bc4:	0802462f 	.word	0x0802462f

08020bc8 <atexit>:
 8020bc8:	2300      	movs	r3, #0
 8020bca:	4601      	mov	r1, r0
 8020bcc:	461a      	mov	r2, r3
 8020bce:	4618      	mov	r0, r3
 8020bd0:	f000 bf0c 	b.w	80219ec <__register_exitproc>

08020bd4 <__cxa_atexit>:
 8020bd4:	b510      	push	{r4, lr}
 8020bd6:	4c05      	ldr	r4, [pc, #20]	; (8020bec <__cxa_atexit+0x18>)
 8020bd8:	4613      	mov	r3, r2
 8020bda:	b12c      	cbz	r4, 8020be8 <__cxa_atexit+0x14>
 8020bdc:	460a      	mov	r2, r1
 8020bde:	4601      	mov	r1, r0
 8020be0:	2002      	movs	r0, #2
 8020be2:	f000 ff03 	bl	80219ec <__register_exitproc>
 8020be6:	bd10      	pop	{r4, pc}
 8020be8:	4620      	mov	r0, r4
 8020bea:	e7fc      	b.n	8020be6 <__cxa_atexit+0x12>
 8020bec:	080219ed 	.word	0x080219ed

08020bf0 <__errno>:
 8020bf0:	4b01      	ldr	r3, [pc, #4]	; (8020bf8 <__errno+0x8>)
 8020bf2:	6818      	ldr	r0, [r3, #0]
 8020bf4:	4770      	bx	lr
 8020bf6:	bf00      	nop
 8020bf8:	20000104 	.word	0x20000104

08020bfc <std>:
 8020bfc:	2300      	movs	r3, #0
 8020bfe:	b510      	push	{r4, lr}
 8020c00:	4604      	mov	r4, r0
 8020c02:	e9c0 3300 	strd	r3, r3, [r0]
 8020c06:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8020c0a:	6083      	str	r3, [r0, #8]
 8020c0c:	8181      	strh	r1, [r0, #12]
 8020c0e:	6643      	str	r3, [r0, #100]	; 0x64
 8020c10:	81c2      	strh	r2, [r0, #14]
 8020c12:	6183      	str	r3, [r0, #24]
 8020c14:	4619      	mov	r1, r3
 8020c16:	2208      	movs	r2, #8
 8020c18:	305c      	adds	r0, #92	; 0x5c
 8020c1a:	f000 f93d 	bl	8020e98 <memset>
 8020c1e:	4b05      	ldr	r3, [pc, #20]	; (8020c34 <std+0x38>)
 8020c20:	6263      	str	r3, [r4, #36]	; 0x24
 8020c22:	4b05      	ldr	r3, [pc, #20]	; (8020c38 <std+0x3c>)
 8020c24:	62a3      	str	r3, [r4, #40]	; 0x28
 8020c26:	4b05      	ldr	r3, [pc, #20]	; (8020c3c <std+0x40>)
 8020c28:	62e3      	str	r3, [r4, #44]	; 0x2c
 8020c2a:	4b05      	ldr	r3, [pc, #20]	; (8020c40 <std+0x44>)
 8020c2c:	6224      	str	r4, [r4, #32]
 8020c2e:	6323      	str	r3, [r4, #48]	; 0x30
 8020c30:	bd10      	pop	{r4, pc}
 8020c32:	bf00      	nop
 8020c34:	080217c1 	.word	0x080217c1
 8020c38:	080217e3 	.word	0x080217e3
 8020c3c:	0802181b 	.word	0x0802181b
 8020c40:	0802183f 	.word	0x0802183f

08020c44 <_cleanup_r>:
 8020c44:	4901      	ldr	r1, [pc, #4]	; (8020c4c <_cleanup_r+0x8>)
 8020c46:	f000 b8c1 	b.w	8020dcc <_fwalk_reent>
 8020c4a:	bf00      	nop
 8020c4c:	08021bdd 	.word	0x08021bdd

08020c50 <__sfmoreglue>:
 8020c50:	b570      	push	{r4, r5, r6, lr}
 8020c52:	2268      	movs	r2, #104	; 0x68
 8020c54:	1e4d      	subs	r5, r1, #1
 8020c56:	4355      	muls	r5, r2
 8020c58:	460e      	mov	r6, r1
 8020c5a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8020c5e:	f000 f98f 	bl	8020f80 <_malloc_r>
 8020c62:	4604      	mov	r4, r0
 8020c64:	b140      	cbz	r0, 8020c78 <__sfmoreglue+0x28>
 8020c66:	2100      	movs	r1, #0
 8020c68:	e9c0 1600 	strd	r1, r6, [r0]
 8020c6c:	300c      	adds	r0, #12
 8020c6e:	60a0      	str	r0, [r4, #8]
 8020c70:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8020c74:	f000 f910 	bl	8020e98 <memset>
 8020c78:	4620      	mov	r0, r4
 8020c7a:	bd70      	pop	{r4, r5, r6, pc}

08020c7c <__sfp_lock_acquire>:
 8020c7c:	4801      	ldr	r0, [pc, #4]	; (8020c84 <__sfp_lock_acquire+0x8>)
 8020c7e:	f000 b8ea 	b.w	8020e56 <__retarget_lock_acquire_recursive>
 8020c82:	bf00      	nop
 8020c84:	20017556 	.word	0x20017556

08020c88 <__sfp_lock_release>:
 8020c88:	4801      	ldr	r0, [pc, #4]	; (8020c90 <__sfp_lock_release+0x8>)
 8020c8a:	f000 b8e6 	b.w	8020e5a <__retarget_lock_release_recursive>
 8020c8e:	bf00      	nop
 8020c90:	20017556 	.word	0x20017556

08020c94 <__sinit_lock_acquire>:
 8020c94:	4801      	ldr	r0, [pc, #4]	; (8020c9c <__sinit_lock_acquire+0x8>)
 8020c96:	f000 b8de 	b.w	8020e56 <__retarget_lock_acquire_recursive>
 8020c9a:	bf00      	nop
 8020c9c:	20017557 	.word	0x20017557

08020ca0 <__sinit_lock_release>:
 8020ca0:	4801      	ldr	r0, [pc, #4]	; (8020ca8 <__sinit_lock_release+0x8>)
 8020ca2:	f000 b8da 	b.w	8020e5a <__retarget_lock_release_recursive>
 8020ca6:	bf00      	nop
 8020ca8:	20017557 	.word	0x20017557

08020cac <__sinit>:
 8020cac:	b510      	push	{r4, lr}
 8020cae:	4604      	mov	r4, r0
 8020cb0:	f7ff fff0 	bl	8020c94 <__sinit_lock_acquire>
 8020cb4:	69a3      	ldr	r3, [r4, #24]
 8020cb6:	b11b      	cbz	r3, 8020cc0 <__sinit+0x14>
 8020cb8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020cbc:	f7ff bff0 	b.w	8020ca0 <__sinit_lock_release>
 8020cc0:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8020cc4:	6523      	str	r3, [r4, #80]	; 0x50
 8020cc6:	4b13      	ldr	r3, [pc, #76]	; (8020d14 <__sinit+0x68>)
 8020cc8:	4a13      	ldr	r2, [pc, #76]	; (8020d18 <__sinit+0x6c>)
 8020cca:	681b      	ldr	r3, [r3, #0]
 8020ccc:	62a2      	str	r2, [r4, #40]	; 0x28
 8020cce:	42a3      	cmp	r3, r4
 8020cd0:	bf04      	itt	eq
 8020cd2:	2301      	moveq	r3, #1
 8020cd4:	61a3      	streq	r3, [r4, #24]
 8020cd6:	4620      	mov	r0, r4
 8020cd8:	f000 f820 	bl	8020d1c <__sfp>
 8020cdc:	6060      	str	r0, [r4, #4]
 8020cde:	4620      	mov	r0, r4
 8020ce0:	f000 f81c 	bl	8020d1c <__sfp>
 8020ce4:	60a0      	str	r0, [r4, #8]
 8020ce6:	4620      	mov	r0, r4
 8020ce8:	f000 f818 	bl	8020d1c <__sfp>
 8020cec:	2200      	movs	r2, #0
 8020cee:	60e0      	str	r0, [r4, #12]
 8020cf0:	2104      	movs	r1, #4
 8020cf2:	6860      	ldr	r0, [r4, #4]
 8020cf4:	f7ff ff82 	bl	8020bfc <std>
 8020cf8:	68a0      	ldr	r0, [r4, #8]
 8020cfa:	2201      	movs	r2, #1
 8020cfc:	2109      	movs	r1, #9
 8020cfe:	f7ff ff7d 	bl	8020bfc <std>
 8020d02:	68e0      	ldr	r0, [r4, #12]
 8020d04:	2202      	movs	r2, #2
 8020d06:	2112      	movs	r1, #18
 8020d08:	f7ff ff78 	bl	8020bfc <std>
 8020d0c:	2301      	movs	r3, #1
 8020d0e:	61a3      	str	r3, [r4, #24]
 8020d10:	e7d2      	b.n	8020cb8 <__sinit+0xc>
 8020d12:	bf00      	nop
 8020d14:	08024690 	.word	0x08024690
 8020d18:	08020c45 	.word	0x08020c45

08020d1c <__sfp>:
 8020d1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8020d1e:	4607      	mov	r7, r0
 8020d20:	f7ff ffac 	bl	8020c7c <__sfp_lock_acquire>
 8020d24:	4b1e      	ldr	r3, [pc, #120]	; (8020da0 <__sfp+0x84>)
 8020d26:	681e      	ldr	r6, [r3, #0]
 8020d28:	69b3      	ldr	r3, [r6, #24]
 8020d2a:	b913      	cbnz	r3, 8020d32 <__sfp+0x16>
 8020d2c:	4630      	mov	r0, r6
 8020d2e:	f7ff ffbd 	bl	8020cac <__sinit>
 8020d32:	3648      	adds	r6, #72	; 0x48
 8020d34:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8020d38:	3b01      	subs	r3, #1
 8020d3a:	d503      	bpl.n	8020d44 <__sfp+0x28>
 8020d3c:	6833      	ldr	r3, [r6, #0]
 8020d3e:	b30b      	cbz	r3, 8020d84 <__sfp+0x68>
 8020d40:	6836      	ldr	r6, [r6, #0]
 8020d42:	e7f7      	b.n	8020d34 <__sfp+0x18>
 8020d44:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8020d48:	b9d5      	cbnz	r5, 8020d80 <__sfp+0x64>
 8020d4a:	4b16      	ldr	r3, [pc, #88]	; (8020da4 <__sfp+0x88>)
 8020d4c:	60e3      	str	r3, [r4, #12]
 8020d4e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8020d52:	6665      	str	r5, [r4, #100]	; 0x64
 8020d54:	f000 f87e 	bl	8020e54 <__retarget_lock_init_recursive>
 8020d58:	f7ff ff96 	bl	8020c88 <__sfp_lock_release>
 8020d5c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8020d60:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8020d64:	6025      	str	r5, [r4, #0]
 8020d66:	61a5      	str	r5, [r4, #24]
 8020d68:	2208      	movs	r2, #8
 8020d6a:	4629      	mov	r1, r5
 8020d6c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8020d70:	f000 f892 	bl	8020e98 <memset>
 8020d74:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8020d78:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8020d7c:	4620      	mov	r0, r4
 8020d7e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8020d80:	3468      	adds	r4, #104	; 0x68
 8020d82:	e7d9      	b.n	8020d38 <__sfp+0x1c>
 8020d84:	2104      	movs	r1, #4
 8020d86:	4638      	mov	r0, r7
 8020d88:	f7ff ff62 	bl	8020c50 <__sfmoreglue>
 8020d8c:	4604      	mov	r4, r0
 8020d8e:	6030      	str	r0, [r6, #0]
 8020d90:	2800      	cmp	r0, #0
 8020d92:	d1d5      	bne.n	8020d40 <__sfp+0x24>
 8020d94:	f7ff ff78 	bl	8020c88 <__sfp_lock_release>
 8020d98:	230c      	movs	r3, #12
 8020d9a:	603b      	str	r3, [r7, #0]
 8020d9c:	e7ee      	b.n	8020d7c <__sfp+0x60>
 8020d9e:	bf00      	nop
 8020da0:	08024690 	.word	0x08024690
 8020da4:	ffff0001 	.word	0xffff0001

08020da8 <fiprintf>:
 8020da8:	b40e      	push	{r1, r2, r3}
 8020daa:	b503      	push	{r0, r1, lr}
 8020dac:	4601      	mov	r1, r0
 8020dae:	ab03      	add	r3, sp, #12
 8020db0:	4805      	ldr	r0, [pc, #20]	; (8020dc8 <fiprintf+0x20>)
 8020db2:	f853 2b04 	ldr.w	r2, [r3], #4
 8020db6:	6800      	ldr	r0, [r0, #0]
 8020db8:	9301      	str	r3, [sp, #4]
 8020dba:	f000 f97f 	bl	80210bc <_vfiprintf_r>
 8020dbe:	b002      	add	sp, #8
 8020dc0:	f85d eb04 	ldr.w	lr, [sp], #4
 8020dc4:	b003      	add	sp, #12
 8020dc6:	4770      	bx	lr
 8020dc8:	20000104 	.word	0x20000104

08020dcc <_fwalk_reent>:
 8020dcc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8020dd0:	4606      	mov	r6, r0
 8020dd2:	4688      	mov	r8, r1
 8020dd4:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8020dd8:	2700      	movs	r7, #0
 8020dda:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8020dde:	f1b9 0901 	subs.w	r9, r9, #1
 8020de2:	d505      	bpl.n	8020df0 <_fwalk_reent+0x24>
 8020de4:	6824      	ldr	r4, [r4, #0]
 8020de6:	2c00      	cmp	r4, #0
 8020de8:	d1f7      	bne.n	8020dda <_fwalk_reent+0xe>
 8020dea:	4638      	mov	r0, r7
 8020dec:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8020df0:	89ab      	ldrh	r3, [r5, #12]
 8020df2:	2b01      	cmp	r3, #1
 8020df4:	d907      	bls.n	8020e06 <_fwalk_reent+0x3a>
 8020df6:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8020dfa:	3301      	adds	r3, #1
 8020dfc:	d003      	beq.n	8020e06 <_fwalk_reent+0x3a>
 8020dfe:	4629      	mov	r1, r5
 8020e00:	4630      	mov	r0, r6
 8020e02:	47c0      	blx	r8
 8020e04:	4307      	orrs	r7, r0
 8020e06:	3568      	adds	r5, #104	; 0x68
 8020e08:	e7e9      	b.n	8020dde <_fwalk_reent+0x12>
	...

08020e0c <__libc_init_array>:
 8020e0c:	b570      	push	{r4, r5, r6, lr}
 8020e0e:	4d0d      	ldr	r5, [pc, #52]	; (8020e44 <__libc_init_array+0x38>)
 8020e10:	4c0d      	ldr	r4, [pc, #52]	; (8020e48 <__libc_init_array+0x3c>)
 8020e12:	1b64      	subs	r4, r4, r5
 8020e14:	10a4      	asrs	r4, r4, #2
 8020e16:	2600      	movs	r6, #0
 8020e18:	42a6      	cmp	r6, r4
 8020e1a:	d109      	bne.n	8020e30 <__libc_init_array+0x24>
 8020e1c:	4d0b      	ldr	r5, [pc, #44]	; (8020e4c <__libc_init_array+0x40>)
 8020e1e:	4c0c      	ldr	r4, [pc, #48]	; (8020e50 <__libc_init_array+0x44>)
 8020e20:	f000 ffd0 	bl	8021dc4 <_init>
 8020e24:	1b64      	subs	r4, r4, r5
 8020e26:	10a4      	asrs	r4, r4, #2
 8020e28:	2600      	movs	r6, #0
 8020e2a:	42a6      	cmp	r6, r4
 8020e2c:	d105      	bne.n	8020e3a <__libc_init_array+0x2e>
 8020e2e:	bd70      	pop	{r4, r5, r6, pc}
 8020e30:	f855 3b04 	ldr.w	r3, [r5], #4
 8020e34:	4798      	blx	r3
 8020e36:	3601      	adds	r6, #1
 8020e38:	e7ee      	b.n	8020e18 <__libc_init_array+0xc>
 8020e3a:	f855 3b04 	ldr.w	r3, [r5], #4
 8020e3e:	4798      	blx	r3
 8020e40:	3601      	adds	r6, #1
 8020e42:	e7f2      	b.n	8020e2a <__libc_init_array+0x1e>
 8020e44:	08064eb0 	.word	0x08064eb0
 8020e48:	08064eb0 	.word	0x08064eb0
 8020e4c:	08064eb0 	.word	0x08064eb0
 8020e50:	08064ec4 	.word	0x08064ec4

08020e54 <__retarget_lock_init_recursive>:
 8020e54:	4770      	bx	lr

08020e56 <__retarget_lock_acquire_recursive>:
 8020e56:	4770      	bx	lr

08020e58 <__retarget_lock_release>:
 8020e58:	4770      	bx	lr

08020e5a <__retarget_lock_release_recursive>:
 8020e5a:	4770      	bx	lr

08020e5c <malloc>:
 8020e5c:	4b02      	ldr	r3, [pc, #8]	; (8020e68 <malloc+0xc>)
 8020e5e:	4601      	mov	r1, r0
 8020e60:	6818      	ldr	r0, [r3, #0]
 8020e62:	f000 b88d 	b.w	8020f80 <_malloc_r>
 8020e66:	bf00      	nop
 8020e68:	20000104 	.word	0x20000104

08020e6c <free>:
 8020e6c:	4b02      	ldr	r3, [pc, #8]	; (8020e78 <free+0xc>)
 8020e6e:	4601      	mov	r1, r0
 8020e70:	6818      	ldr	r0, [r3, #0]
 8020e72:	f000 b819 	b.w	8020ea8 <_free_r>
 8020e76:	bf00      	nop
 8020e78:	20000104 	.word	0x20000104

08020e7c <memcpy>:
 8020e7c:	440a      	add	r2, r1
 8020e7e:	4291      	cmp	r1, r2
 8020e80:	f100 33ff 	add.w	r3, r0, #4294967295
 8020e84:	d100      	bne.n	8020e88 <memcpy+0xc>
 8020e86:	4770      	bx	lr
 8020e88:	b510      	push	{r4, lr}
 8020e8a:	f811 4b01 	ldrb.w	r4, [r1], #1
 8020e8e:	f803 4f01 	strb.w	r4, [r3, #1]!
 8020e92:	4291      	cmp	r1, r2
 8020e94:	d1f9      	bne.n	8020e8a <memcpy+0xe>
 8020e96:	bd10      	pop	{r4, pc}

08020e98 <memset>:
 8020e98:	4402      	add	r2, r0
 8020e9a:	4603      	mov	r3, r0
 8020e9c:	4293      	cmp	r3, r2
 8020e9e:	d100      	bne.n	8020ea2 <memset+0xa>
 8020ea0:	4770      	bx	lr
 8020ea2:	f803 1b01 	strb.w	r1, [r3], #1
 8020ea6:	e7f9      	b.n	8020e9c <memset+0x4>

08020ea8 <_free_r>:
 8020ea8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8020eaa:	2900      	cmp	r1, #0
 8020eac:	d044      	beq.n	8020f38 <_free_r+0x90>
 8020eae:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8020eb2:	9001      	str	r0, [sp, #4]
 8020eb4:	2b00      	cmp	r3, #0
 8020eb6:	f1a1 0404 	sub.w	r4, r1, #4
 8020eba:	bfb8      	it	lt
 8020ebc:	18e4      	addlt	r4, r4, r3
 8020ebe:	f000 ff41 	bl	8021d44 <__malloc_lock>
 8020ec2:	4a1e      	ldr	r2, [pc, #120]	; (8020f3c <_free_r+0x94>)
 8020ec4:	9801      	ldr	r0, [sp, #4]
 8020ec6:	6813      	ldr	r3, [r2, #0]
 8020ec8:	b933      	cbnz	r3, 8020ed8 <_free_r+0x30>
 8020eca:	6063      	str	r3, [r4, #4]
 8020ecc:	6014      	str	r4, [r2, #0]
 8020ece:	b003      	add	sp, #12
 8020ed0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8020ed4:	f000 bf3c 	b.w	8021d50 <__malloc_unlock>
 8020ed8:	42a3      	cmp	r3, r4
 8020eda:	d908      	bls.n	8020eee <_free_r+0x46>
 8020edc:	6825      	ldr	r5, [r4, #0]
 8020ede:	1961      	adds	r1, r4, r5
 8020ee0:	428b      	cmp	r3, r1
 8020ee2:	bf01      	itttt	eq
 8020ee4:	6819      	ldreq	r1, [r3, #0]
 8020ee6:	685b      	ldreq	r3, [r3, #4]
 8020ee8:	1949      	addeq	r1, r1, r5
 8020eea:	6021      	streq	r1, [r4, #0]
 8020eec:	e7ed      	b.n	8020eca <_free_r+0x22>
 8020eee:	461a      	mov	r2, r3
 8020ef0:	685b      	ldr	r3, [r3, #4]
 8020ef2:	b10b      	cbz	r3, 8020ef8 <_free_r+0x50>
 8020ef4:	42a3      	cmp	r3, r4
 8020ef6:	d9fa      	bls.n	8020eee <_free_r+0x46>
 8020ef8:	6811      	ldr	r1, [r2, #0]
 8020efa:	1855      	adds	r5, r2, r1
 8020efc:	42a5      	cmp	r5, r4
 8020efe:	d10b      	bne.n	8020f18 <_free_r+0x70>
 8020f00:	6824      	ldr	r4, [r4, #0]
 8020f02:	4421      	add	r1, r4
 8020f04:	1854      	adds	r4, r2, r1
 8020f06:	42a3      	cmp	r3, r4
 8020f08:	6011      	str	r1, [r2, #0]
 8020f0a:	d1e0      	bne.n	8020ece <_free_r+0x26>
 8020f0c:	681c      	ldr	r4, [r3, #0]
 8020f0e:	685b      	ldr	r3, [r3, #4]
 8020f10:	6053      	str	r3, [r2, #4]
 8020f12:	4421      	add	r1, r4
 8020f14:	6011      	str	r1, [r2, #0]
 8020f16:	e7da      	b.n	8020ece <_free_r+0x26>
 8020f18:	d902      	bls.n	8020f20 <_free_r+0x78>
 8020f1a:	230c      	movs	r3, #12
 8020f1c:	6003      	str	r3, [r0, #0]
 8020f1e:	e7d6      	b.n	8020ece <_free_r+0x26>
 8020f20:	6825      	ldr	r5, [r4, #0]
 8020f22:	1961      	adds	r1, r4, r5
 8020f24:	428b      	cmp	r3, r1
 8020f26:	bf04      	itt	eq
 8020f28:	6819      	ldreq	r1, [r3, #0]
 8020f2a:	685b      	ldreq	r3, [r3, #4]
 8020f2c:	6063      	str	r3, [r4, #4]
 8020f2e:	bf04      	itt	eq
 8020f30:	1949      	addeq	r1, r1, r5
 8020f32:	6021      	streq	r1, [r4, #0]
 8020f34:	6054      	str	r4, [r2, #4]
 8020f36:	e7ca      	b.n	8020ece <_free_r+0x26>
 8020f38:	b003      	add	sp, #12
 8020f3a:	bd30      	pop	{r4, r5, pc}
 8020f3c:	20017558 	.word	0x20017558

08020f40 <sbrk_aligned>:
 8020f40:	b570      	push	{r4, r5, r6, lr}
 8020f42:	4e0e      	ldr	r6, [pc, #56]	; (8020f7c <sbrk_aligned+0x3c>)
 8020f44:	460c      	mov	r4, r1
 8020f46:	6831      	ldr	r1, [r6, #0]
 8020f48:	4605      	mov	r5, r0
 8020f4a:	b911      	cbnz	r1, 8020f52 <sbrk_aligned+0x12>
 8020f4c:	f000 fbe4 	bl	8021718 <_sbrk_r>
 8020f50:	6030      	str	r0, [r6, #0]
 8020f52:	4621      	mov	r1, r4
 8020f54:	4628      	mov	r0, r5
 8020f56:	f000 fbdf 	bl	8021718 <_sbrk_r>
 8020f5a:	1c43      	adds	r3, r0, #1
 8020f5c:	d00a      	beq.n	8020f74 <sbrk_aligned+0x34>
 8020f5e:	1cc4      	adds	r4, r0, #3
 8020f60:	f024 0403 	bic.w	r4, r4, #3
 8020f64:	42a0      	cmp	r0, r4
 8020f66:	d007      	beq.n	8020f78 <sbrk_aligned+0x38>
 8020f68:	1a21      	subs	r1, r4, r0
 8020f6a:	4628      	mov	r0, r5
 8020f6c:	f000 fbd4 	bl	8021718 <_sbrk_r>
 8020f70:	3001      	adds	r0, #1
 8020f72:	d101      	bne.n	8020f78 <sbrk_aligned+0x38>
 8020f74:	f04f 34ff 	mov.w	r4, #4294967295
 8020f78:	4620      	mov	r0, r4
 8020f7a:	bd70      	pop	{r4, r5, r6, pc}
 8020f7c:	2001755c 	.word	0x2001755c

08020f80 <_malloc_r>:
 8020f80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8020f84:	1ccd      	adds	r5, r1, #3
 8020f86:	f025 0503 	bic.w	r5, r5, #3
 8020f8a:	3508      	adds	r5, #8
 8020f8c:	2d0c      	cmp	r5, #12
 8020f8e:	bf38      	it	cc
 8020f90:	250c      	movcc	r5, #12
 8020f92:	2d00      	cmp	r5, #0
 8020f94:	4607      	mov	r7, r0
 8020f96:	db01      	blt.n	8020f9c <_malloc_r+0x1c>
 8020f98:	42a9      	cmp	r1, r5
 8020f9a:	d905      	bls.n	8020fa8 <_malloc_r+0x28>
 8020f9c:	230c      	movs	r3, #12
 8020f9e:	603b      	str	r3, [r7, #0]
 8020fa0:	2600      	movs	r6, #0
 8020fa2:	4630      	mov	r0, r6
 8020fa4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8020fa8:	4e2e      	ldr	r6, [pc, #184]	; (8021064 <_malloc_r+0xe4>)
 8020faa:	f000 fecb 	bl	8021d44 <__malloc_lock>
 8020fae:	6833      	ldr	r3, [r6, #0]
 8020fb0:	461c      	mov	r4, r3
 8020fb2:	bb34      	cbnz	r4, 8021002 <_malloc_r+0x82>
 8020fb4:	4629      	mov	r1, r5
 8020fb6:	4638      	mov	r0, r7
 8020fb8:	f7ff ffc2 	bl	8020f40 <sbrk_aligned>
 8020fbc:	1c43      	adds	r3, r0, #1
 8020fbe:	4604      	mov	r4, r0
 8020fc0:	d14d      	bne.n	802105e <_malloc_r+0xde>
 8020fc2:	6834      	ldr	r4, [r6, #0]
 8020fc4:	4626      	mov	r6, r4
 8020fc6:	2e00      	cmp	r6, #0
 8020fc8:	d140      	bne.n	802104c <_malloc_r+0xcc>
 8020fca:	6823      	ldr	r3, [r4, #0]
 8020fcc:	4631      	mov	r1, r6
 8020fce:	4638      	mov	r0, r7
 8020fd0:	eb04 0803 	add.w	r8, r4, r3
 8020fd4:	f000 fba0 	bl	8021718 <_sbrk_r>
 8020fd8:	4580      	cmp	r8, r0
 8020fda:	d13a      	bne.n	8021052 <_malloc_r+0xd2>
 8020fdc:	6821      	ldr	r1, [r4, #0]
 8020fde:	3503      	adds	r5, #3
 8020fe0:	1a6d      	subs	r5, r5, r1
 8020fe2:	f025 0503 	bic.w	r5, r5, #3
 8020fe6:	3508      	adds	r5, #8
 8020fe8:	2d0c      	cmp	r5, #12
 8020fea:	bf38      	it	cc
 8020fec:	250c      	movcc	r5, #12
 8020fee:	4629      	mov	r1, r5
 8020ff0:	4638      	mov	r0, r7
 8020ff2:	f7ff ffa5 	bl	8020f40 <sbrk_aligned>
 8020ff6:	3001      	adds	r0, #1
 8020ff8:	d02b      	beq.n	8021052 <_malloc_r+0xd2>
 8020ffa:	6823      	ldr	r3, [r4, #0]
 8020ffc:	442b      	add	r3, r5
 8020ffe:	6023      	str	r3, [r4, #0]
 8021000:	e00e      	b.n	8021020 <_malloc_r+0xa0>
 8021002:	6822      	ldr	r2, [r4, #0]
 8021004:	1b52      	subs	r2, r2, r5
 8021006:	d41e      	bmi.n	8021046 <_malloc_r+0xc6>
 8021008:	2a0b      	cmp	r2, #11
 802100a:	d916      	bls.n	802103a <_malloc_r+0xba>
 802100c:	1961      	adds	r1, r4, r5
 802100e:	42a3      	cmp	r3, r4
 8021010:	6025      	str	r5, [r4, #0]
 8021012:	bf18      	it	ne
 8021014:	6059      	strne	r1, [r3, #4]
 8021016:	6863      	ldr	r3, [r4, #4]
 8021018:	bf08      	it	eq
 802101a:	6031      	streq	r1, [r6, #0]
 802101c:	5162      	str	r2, [r4, r5]
 802101e:	604b      	str	r3, [r1, #4]
 8021020:	4638      	mov	r0, r7
 8021022:	f104 060b 	add.w	r6, r4, #11
 8021026:	f000 fe93 	bl	8021d50 <__malloc_unlock>
 802102a:	f026 0607 	bic.w	r6, r6, #7
 802102e:	1d23      	adds	r3, r4, #4
 8021030:	1af2      	subs	r2, r6, r3
 8021032:	d0b6      	beq.n	8020fa2 <_malloc_r+0x22>
 8021034:	1b9b      	subs	r3, r3, r6
 8021036:	50a3      	str	r3, [r4, r2]
 8021038:	e7b3      	b.n	8020fa2 <_malloc_r+0x22>
 802103a:	6862      	ldr	r2, [r4, #4]
 802103c:	42a3      	cmp	r3, r4
 802103e:	bf0c      	ite	eq
 8021040:	6032      	streq	r2, [r6, #0]
 8021042:	605a      	strne	r2, [r3, #4]
 8021044:	e7ec      	b.n	8021020 <_malloc_r+0xa0>
 8021046:	4623      	mov	r3, r4
 8021048:	6864      	ldr	r4, [r4, #4]
 802104a:	e7b2      	b.n	8020fb2 <_malloc_r+0x32>
 802104c:	4634      	mov	r4, r6
 802104e:	6876      	ldr	r6, [r6, #4]
 8021050:	e7b9      	b.n	8020fc6 <_malloc_r+0x46>
 8021052:	230c      	movs	r3, #12
 8021054:	603b      	str	r3, [r7, #0]
 8021056:	4638      	mov	r0, r7
 8021058:	f000 fe7a 	bl	8021d50 <__malloc_unlock>
 802105c:	e7a1      	b.n	8020fa2 <_malloc_r+0x22>
 802105e:	6025      	str	r5, [r4, #0]
 8021060:	e7de      	b.n	8021020 <_malloc_r+0xa0>
 8021062:	bf00      	nop
 8021064:	20017558 	.word	0x20017558

08021068 <__sfputc_r>:
 8021068:	6893      	ldr	r3, [r2, #8]
 802106a:	3b01      	subs	r3, #1
 802106c:	2b00      	cmp	r3, #0
 802106e:	b410      	push	{r4}
 8021070:	6093      	str	r3, [r2, #8]
 8021072:	da08      	bge.n	8021086 <__sfputc_r+0x1e>
 8021074:	6994      	ldr	r4, [r2, #24]
 8021076:	42a3      	cmp	r3, r4
 8021078:	db01      	blt.n	802107e <__sfputc_r+0x16>
 802107a:	290a      	cmp	r1, #10
 802107c:	d103      	bne.n	8021086 <__sfputc_r+0x1e>
 802107e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8021082:	f000 bbe1 	b.w	8021848 <__swbuf_r>
 8021086:	6813      	ldr	r3, [r2, #0]
 8021088:	1c58      	adds	r0, r3, #1
 802108a:	6010      	str	r0, [r2, #0]
 802108c:	7019      	strb	r1, [r3, #0]
 802108e:	4608      	mov	r0, r1
 8021090:	f85d 4b04 	ldr.w	r4, [sp], #4
 8021094:	4770      	bx	lr

08021096 <__sfputs_r>:
 8021096:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021098:	4606      	mov	r6, r0
 802109a:	460f      	mov	r7, r1
 802109c:	4614      	mov	r4, r2
 802109e:	18d5      	adds	r5, r2, r3
 80210a0:	42ac      	cmp	r4, r5
 80210a2:	d101      	bne.n	80210a8 <__sfputs_r+0x12>
 80210a4:	2000      	movs	r0, #0
 80210a6:	e007      	b.n	80210b8 <__sfputs_r+0x22>
 80210a8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80210ac:	463a      	mov	r2, r7
 80210ae:	4630      	mov	r0, r6
 80210b0:	f7ff ffda 	bl	8021068 <__sfputc_r>
 80210b4:	1c43      	adds	r3, r0, #1
 80210b6:	d1f3      	bne.n	80210a0 <__sfputs_r+0xa>
 80210b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080210bc <_vfiprintf_r>:
 80210bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80210c0:	460d      	mov	r5, r1
 80210c2:	b09d      	sub	sp, #116	; 0x74
 80210c4:	4614      	mov	r4, r2
 80210c6:	4698      	mov	r8, r3
 80210c8:	4606      	mov	r6, r0
 80210ca:	b118      	cbz	r0, 80210d4 <_vfiprintf_r+0x18>
 80210cc:	6983      	ldr	r3, [r0, #24]
 80210ce:	b90b      	cbnz	r3, 80210d4 <_vfiprintf_r+0x18>
 80210d0:	f7ff fdec 	bl	8020cac <__sinit>
 80210d4:	4b89      	ldr	r3, [pc, #548]	; (80212fc <_vfiprintf_r+0x240>)
 80210d6:	429d      	cmp	r5, r3
 80210d8:	d11b      	bne.n	8021112 <_vfiprintf_r+0x56>
 80210da:	6875      	ldr	r5, [r6, #4]
 80210dc:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80210de:	07d9      	lsls	r1, r3, #31
 80210e0:	d405      	bmi.n	80210ee <_vfiprintf_r+0x32>
 80210e2:	89ab      	ldrh	r3, [r5, #12]
 80210e4:	059a      	lsls	r2, r3, #22
 80210e6:	d402      	bmi.n	80210ee <_vfiprintf_r+0x32>
 80210e8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80210ea:	f7ff feb4 	bl	8020e56 <__retarget_lock_acquire_recursive>
 80210ee:	89ab      	ldrh	r3, [r5, #12]
 80210f0:	071b      	lsls	r3, r3, #28
 80210f2:	d501      	bpl.n	80210f8 <_vfiprintf_r+0x3c>
 80210f4:	692b      	ldr	r3, [r5, #16]
 80210f6:	b9eb      	cbnz	r3, 8021134 <_vfiprintf_r+0x78>
 80210f8:	4629      	mov	r1, r5
 80210fa:	4630      	mov	r0, r6
 80210fc:	f000 fc08 	bl	8021910 <__swsetup_r>
 8021100:	b1c0      	cbz	r0, 8021134 <_vfiprintf_r+0x78>
 8021102:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8021104:	07dc      	lsls	r4, r3, #31
 8021106:	d50e      	bpl.n	8021126 <_vfiprintf_r+0x6a>
 8021108:	f04f 30ff 	mov.w	r0, #4294967295
 802110c:	b01d      	add	sp, #116	; 0x74
 802110e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021112:	4b7b      	ldr	r3, [pc, #492]	; (8021300 <_vfiprintf_r+0x244>)
 8021114:	429d      	cmp	r5, r3
 8021116:	d101      	bne.n	802111c <_vfiprintf_r+0x60>
 8021118:	68b5      	ldr	r5, [r6, #8]
 802111a:	e7df      	b.n	80210dc <_vfiprintf_r+0x20>
 802111c:	4b79      	ldr	r3, [pc, #484]	; (8021304 <_vfiprintf_r+0x248>)
 802111e:	429d      	cmp	r5, r3
 8021120:	bf08      	it	eq
 8021122:	68f5      	ldreq	r5, [r6, #12]
 8021124:	e7da      	b.n	80210dc <_vfiprintf_r+0x20>
 8021126:	89ab      	ldrh	r3, [r5, #12]
 8021128:	0598      	lsls	r0, r3, #22
 802112a:	d4ed      	bmi.n	8021108 <_vfiprintf_r+0x4c>
 802112c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802112e:	f7ff fe94 	bl	8020e5a <__retarget_lock_release_recursive>
 8021132:	e7e9      	b.n	8021108 <_vfiprintf_r+0x4c>
 8021134:	2300      	movs	r3, #0
 8021136:	9309      	str	r3, [sp, #36]	; 0x24
 8021138:	2320      	movs	r3, #32
 802113a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802113e:	f8cd 800c 	str.w	r8, [sp, #12]
 8021142:	2330      	movs	r3, #48	; 0x30
 8021144:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8021308 <_vfiprintf_r+0x24c>
 8021148:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802114c:	f04f 0901 	mov.w	r9, #1
 8021150:	4623      	mov	r3, r4
 8021152:	469a      	mov	sl, r3
 8021154:	f813 2b01 	ldrb.w	r2, [r3], #1
 8021158:	b10a      	cbz	r2, 802115e <_vfiprintf_r+0xa2>
 802115a:	2a25      	cmp	r2, #37	; 0x25
 802115c:	d1f9      	bne.n	8021152 <_vfiprintf_r+0x96>
 802115e:	ebba 0b04 	subs.w	fp, sl, r4
 8021162:	d00b      	beq.n	802117c <_vfiprintf_r+0xc0>
 8021164:	465b      	mov	r3, fp
 8021166:	4622      	mov	r2, r4
 8021168:	4629      	mov	r1, r5
 802116a:	4630      	mov	r0, r6
 802116c:	f7ff ff93 	bl	8021096 <__sfputs_r>
 8021170:	3001      	adds	r0, #1
 8021172:	f000 80aa 	beq.w	80212ca <_vfiprintf_r+0x20e>
 8021176:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8021178:	445a      	add	r2, fp
 802117a:	9209      	str	r2, [sp, #36]	; 0x24
 802117c:	f89a 3000 	ldrb.w	r3, [sl]
 8021180:	2b00      	cmp	r3, #0
 8021182:	f000 80a2 	beq.w	80212ca <_vfiprintf_r+0x20e>
 8021186:	2300      	movs	r3, #0
 8021188:	f04f 32ff 	mov.w	r2, #4294967295
 802118c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8021190:	f10a 0a01 	add.w	sl, sl, #1
 8021194:	9304      	str	r3, [sp, #16]
 8021196:	9307      	str	r3, [sp, #28]
 8021198:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802119c:	931a      	str	r3, [sp, #104]	; 0x68
 802119e:	4654      	mov	r4, sl
 80211a0:	2205      	movs	r2, #5
 80211a2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80211a6:	4858      	ldr	r0, [pc, #352]	; (8021308 <_vfiprintf_r+0x24c>)
 80211a8:	f7df f822 	bl	80001f0 <memchr>
 80211ac:	9a04      	ldr	r2, [sp, #16]
 80211ae:	b9d8      	cbnz	r0, 80211e8 <_vfiprintf_r+0x12c>
 80211b0:	06d1      	lsls	r1, r2, #27
 80211b2:	bf44      	itt	mi
 80211b4:	2320      	movmi	r3, #32
 80211b6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80211ba:	0713      	lsls	r3, r2, #28
 80211bc:	bf44      	itt	mi
 80211be:	232b      	movmi	r3, #43	; 0x2b
 80211c0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80211c4:	f89a 3000 	ldrb.w	r3, [sl]
 80211c8:	2b2a      	cmp	r3, #42	; 0x2a
 80211ca:	d015      	beq.n	80211f8 <_vfiprintf_r+0x13c>
 80211cc:	9a07      	ldr	r2, [sp, #28]
 80211ce:	4654      	mov	r4, sl
 80211d0:	2000      	movs	r0, #0
 80211d2:	f04f 0c0a 	mov.w	ip, #10
 80211d6:	4621      	mov	r1, r4
 80211d8:	f811 3b01 	ldrb.w	r3, [r1], #1
 80211dc:	3b30      	subs	r3, #48	; 0x30
 80211de:	2b09      	cmp	r3, #9
 80211e0:	d94e      	bls.n	8021280 <_vfiprintf_r+0x1c4>
 80211e2:	b1b0      	cbz	r0, 8021212 <_vfiprintf_r+0x156>
 80211e4:	9207      	str	r2, [sp, #28]
 80211e6:	e014      	b.n	8021212 <_vfiprintf_r+0x156>
 80211e8:	eba0 0308 	sub.w	r3, r0, r8
 80211ec:	fa09 f303 	lsl.w	r3, r9, r3
 80211f0:	4313      	orrs	r3, r2
 80211f2:	9304      	str	r3, [sp, #16]
 80211f4:	46a2      	mov	sl, r4
 80211f6:	e7d2      	b.n	802119e <_vfiprintf_r+0xe2>
 80211f8:	9b03      	ldr	r3, [sp, #12]
 80211fa:	1d19      	adds	r1, r3, #4
 80211fc:	681b      	ldr	r3, [r3, #0]
 80211fe:	9103      	str	r1, [sp, #12]
 8021200:	2b00      	cmp	r3, #0
 8021202:	bfbb      	ittet	lt
 8021204:	425b      	neglt	r3, r3
 8021206:	f042 0202 	orrlt.w	r2, r2, #2
 802120a:	9307      	strge	r3, [sp, #28]
 802120c:	9307      	strlt	r3, [sp, #28]
 802120e:	bfb8      	it	lt
 8021210:	9204      	strlt	r2, [sp, #16]
 8021212:	7823      	ldrb	r3, [r4, #0]
 8021214:	2b2e      	cmp	r3, #46	; 0x2e
 8021216:	d10c      	bne.n	8021232 <_vfiprintf_r+0x176>
 8021218:	7863      	ldrb	r3, [r4, #1]
 802121a:	2b2a      	cmp	r3, #42	; 0x2a
 802121c:	d135      	bne.n	802128a <_vfiprintf_r+0x1ce>
 802121e:	9b03      	ldr	r3, [sp, #12]
 8021220:	1d1a      	adds	r2, r3, #4
 8021222:	681b      	ldr	r3, [r3, #0]
 8021224:	9203      	str	r2, [sp, #12]
 8021226:	2b00      	cmp	r3, #0
 8021228:	bfb8      	it	lt
 802122a:	f04f 33ff 	movlt.w	r3, #4294967295
 802122e:	3402      	adds	r4, #2
 8021230:	9305      	str	r3, [sp, #20]
 8021232:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8021318 <_vfiprintf_r+0x25c>
 8021236:	7821      	ldrb	r1, [r4, #0]
 8021238:	2203      	movs	r2, #3
 802123a:	4650      	mov	r0, sl
 802123c:	f7de ffd8 	bl	80001f0 <memchr>
 8021240:	b140      	cbz	r0, 8021254 <_vfiprintf_r+0x198>
 8021242:	2340      	movs	r3, #64	; 0x40
 8021244:	eba0 000a 	sub.w	r0, r0, sl
 8021248:	fa03 f000 	lsl.w	r0, r3, r0
 802124c:	9b04      	ldr	r3, [sp, #16]
 802124e:	4303      	orrs	r3, r0
 8021250:	3401      	adds	r4, #1
 8021252:	9304      	str	r3, [sp, #16]
 8021254:	f814 1b01 	ldrb.w	r1, [r4], #1
 8021258:	482c      	ldr	r0, [pc, #176]	; (802130c <_vfiprintf_r+0x250>)
 802125a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802125e:	2206      	movs	r2, #6
 8021260:	f7de ffc6 	bl	80001f0 <memchr>
 8021264:	2800      	cmp	r0, #0
 8021266:	d03f      	beq.n	80212e8 <_vfiprintf_r+0x22c>
 8021268:	4b29      	ldr	r3, [pc, #164]	; (8021310 <_vfiprintf_r+0x254>)
 802126a:	bb1b      	cbnz	r3, 80212b4 <_vfiprintf_r+0x1f8>
 802126c:	9b03      	ldr	r3, [sp, #12]
 802126e:	3307      	adds	r3, #7
 8021270:	f023 0307 	bic.w	r3, r3, #7
 8021274:	3308      	adds	r3, #8
 8021276:	9303      	str	r3, [sp, #12]
 8021278:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802127a:	443b      	add	r3, r7
 802127c:	9309      	str	r3, [sp, #36]	; 0x24
 802127e:	e767      	b.n	8021150 <_vfiprintf_r+0x94>
 8021280:	fb0c 3202 	mla	r2, ip, r2, r3
 8021284:	460c      	mov	r4, r1
 8021286:	2001      	movs	r0, #1
 8021288:	e7a5      	b.n	80211d6 <_vfiprintf_r+0x11a>
 802128a:	2300      	movs	r3, #0
 802128c:	3401      	adds	r4, #1
 802128e:	9305      	str	r3, [sp, #20]
 8021290:	4619      	mov	r1, r3
 8021292:	f04f 0c0a 	mov.w	ip, #10
 8021296:	4620      	mov	r0, r4
 8021298:	f810 2b01 	ldrb.w	r2, [r0], #1
 802129c:	3a30      	subs	r2, #48	; 0x30
 802129e:	2a09      	cmp	r2, #9
 80212a0:	d903      	bls.n	80212aa <_vfiprintf_r+0x1ee>
 80212a2:	2b00      	cmp	r3, #0
 80212a4:	d0c5      	beq.n	8021232 <_vfiprintf_r+0x176>
 80212a6:	9105      	str	r1, [sp, #20]
 80212a8:	e7c3      	b.n	8021232 <_vfiprintf_r+0x176>
 80212aa:	fb0c 2101 	mla	r1, ip, r1, r2
 80212ae:	4604      	mov	r4, r0
 80212b0:	2301      	movs	r3, #1
 80212b2:	e7f0      	b.n	8021296 <_vfiprintf_r+0x1da>
 80212b4:	ab03      	add	r3, sp, #12
 80212b6:	9300      	str	r3, [sp, #0]
 80212b8:	462a      	mov	r2, r5
 80212ba:	4b16      	ldr	r3, [pc, #88]	; (8021314 <_vfiprintf_r+0x258>)
 80212bc:	a904      	add	r1, sp, #16
 80212be:	4630      	mov	r0, r6
 80212c0:	f3af 8000 	nop.w
 80212c4:	4607      	mov	r7, r0
 80212c6:	1c78      	adds	r0, r7, #1
 80212c8:	d1d6      	bne.n	8021278 <_vfiprintf_r+0x1bc>
 80212ca:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80212cc:	07d9      	lsls	r1, r3, #31
 80212ce:	d405      	bmi.n	80212dc <_vfiprintf_r+0x220>
 80212d0:	89ab      	ldrh	r3, [r5, #12]
 80212d2:	059a      	lsls	r2, r3, #22
 80212d4:	d402      	bmi.n	80212dc <_vfiprintf_r+0x220>
 80212d6:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80212d8:	f7ff fdbf 	bl	8020e5a <__retarget_lock_release_recursive>
 80212dc:	89ab      	ldrh	r3, [r5, #12]
 80212de:	065b      	lsls	r3, r3, #25
 80212e0:	f53f af12 	bmi.w	8021108 <_vfiprintf_r+0x4c>
 80212e4:	9809      	ldr	r0, [sp, #36]	; 0x24
 80212e6:	e711      	b.n	802110c <_vfiprintf_r+0x50>
 80212e8:	ab03      	add	r3, sp, #12
 80212ea:	9300      	str	r3, [sp, #0]
 80212ec:	462a      	mov	r2, r5
 80212ee:	4b09      	ldr	r3, [pc, #36]	; (8021314 <_vfiprintf_r+0x258>)
 80212f0:	a904      	add	r1, sp, #16
 80212f2:	4630      	mov	r0, r6
 80212f4:	f000 f880 	bl	80213f8 <_printf_i>
 80212f8:	e7e4      	b.n	80212c4 <_vfiprintf_r+0x208>
 80212fa:	bf00      	nop
 80212fc:	08024650 	.word	0x08024650
 8021300:	08024670 	.word	0x08024670
 8021304:	08024630 	.word	0x08024630
 8021308:	08024694 	.word	0x08024694
 802130c:	0802469e 	.word	0x0802469e
 8021310:	00000000 	.word	0x00000000
 8021314:	08021097 	.word	0x08021097
 8021318:	0802469a 	.word	0x0802469a

0802131c <_printf_common>:
 802131c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8021320:	4616      	mov	r6, r2
 8021322:	4699      	mov	r9, r3
 8021324:	688a      	ldr	r2, [r1, #8]
 8021326:	690b      	ldr	r3, [r1, #16]
 8021328:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802132c:	4293      	cmp	r3, r2
 802132e:	bfb8      	it	lt
 8021330:	4613      	movlt	r3, r2
 8021332:	6033      	str	r3, [r6, #0]
 8021334:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8021338:	4607      	mov	r7, r0
 802133a:	460c      	mov	r4, r1
 802133c:	b10a      	cbz	r2, 8021342 <_printf_common+0x26>
 802133e:	3301      	adds	r3, #1
 8021340:	6033      	str	r3, [r6, #0]
 8021342:	6823      	ldr	r3, [r4, #0]
 8021344:	0699      	lsls	r1, r3, #26
 8021346:	bf42      	ittt	mi
 8021348:	6833      	ldrmi	r3, [r6, #0]
 802134a:	3302      	addmi	r3, #2
 802134c:	6033      	strmi	r3, [r6, #0]
 802134e:	6825      	ldr	r5, [r4, #0]
 8021350:	f015 0506 	ands.w	r5, r5, #6
 8021354:	d106      	bne.n	8021364 <_printf_common+0x48>
 8021356:	f104 0a19 	add.w	sl, r4, #25
 802135a:	68e3      	ldr	r3, [r4, #12]
 802135c:	6832      	ldr	r2, [r6, #0]
 802135e:	1a9b      	subs	r3, r3, r2
 8021360:	42ab      	cmp	r3, r5
 8021362:	dc26      	bgt.n	80213b2 <_printf_common+0x96>
 8021364:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8021368:	1e13      	subs	r3, r2, #0
 802136a:	6822      	ldr	r2, [r4, #0]
 802136c:	bf18      	it	ne
 802136e:	2301      	movne	r3, #1
 8021370:	0692      	lsls	r2, r2, #26
 8021372:	d42b      	bmi.n	80213cc <_printf_common+0xb0>
 8021374:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8021378:	4649      	mov	r1, r9
 802137a:	4638      	mov	r0, r7
 802137c:	47c0      	blx	r8
 802137e:	3001      	adds	r0, #1
 8021380:	d01e      	beq.n	80213c0 <_printf_common+0xa4>
 8021382:	6823      	ldr	r3, [r4, #0]
 8021384:	68e5      	ldr	r5, [r4, #12]
 8021386:	6832      	ldr	r2, [r6, #0]
 8021388:	f003 0306 	and.w	r3, r3, #6
 802138c:	2b04      	cmp	r3, #4
 802138e:	bf08      	it	eq
 8021390:	1aad      	subeq	r5, r5, r2
 8021392:	68a3      	ldr	r3, [r4, #8]
 8021394:	6922      	ldr	r2, [r4, #16]
 8021396:	bf0c      	ite	eq
 8021398:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802139c:	2500      	movne	r5, #0
 802139e:	4293      	cmp	r3, r2
 80213a0:	bfc4      	itt	gt
 80213a2:	1a9b      	subgt	r3, r3, r2
 80213a4:	18ed      	addgt	r5, r5, r3
 80213a6:	2600      	movs	r6, #0
 80213a8:	341a      	adds	r4, #26
 80213aa:	42b5      	cmp	r5, r6
 80213ac:	d11a      	bne.n	80213e4 <_printf_common+0xc8>
 80213ae:	2000      	movs	r0, #0
 80213b0:	e008      	b.n	80213c4 <_printf_common+0xa8>
 80213b2:	2301      	movs	r3, #1
 80213b4:	4652      	mov	r2, sl
 80213b6:	4649      	mov	r1, r9
 80213b8:	4638      	mov	r0, r7
 80213ba:	47c0      	blx	r8
 80213bc:	3001      	adds	r0, #1
 80213be:	d103      	bne.n	80213c8 <_printf_common+0xac>
 80213c0:	f04f 30ff 	mov.w	r0, #4294967295
 80213c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80213c8:	3501      	adds	r5, #1
 80213ca:	e7c6      	b.n	802135a <_printf_common+0x3e>
 80213cc:	18e1      	adds	r1, r4, r3
 80213ce:	1c5a      	adds	r2, r3, #1
 80213d0:	2030      	movs	r0, #48	; 0x30
 80213d2:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80213d6:	4422      	add	r2, r4
 80213d8:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80213dc:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80213e0:	3302      	adds	r3, #2
 80213e2:	e7c7      	b.n	8021374 <_printf_common+0x58>
 80213e4:	2301      	movs	r3, #1
 80213e6:	4622      	mov	r2, r4
 80213e8:	4649      	mov	r1, r9
 80213ea:	4638      	mov	r0, r7
 80213ec:	47c0      	blx	r8
 80213ee:	3001      	adds	r0, #1
 80213f0:	d0e6      	beq.n	80213c0 <_printf_common+0xa4>
 80213f2:	3601      	adds	r6, #1
 80213f4:	e7d9      	b.n	80213aa <_printf_common+0x8e>
	...

080213f8 <_printf_i>:
 80213f8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80213fc:	7e0f      	ldrb	r7, [r1, #24]
 80213fe:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8021400:	2f78      	cmp	r7, #120	; 0x78
 8021402:	4691      	mov	r9, r2
 8021404:	4680      	mov	r8, r0
 8021406:	460c      	mov	r4, r1
 8021408:	469a      	mov	sl, r3
 802140a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802140e:	d807      	bhi.n	8021420 <_printf_i+0x28>
 8021410:	2f62      	cmp	r7, #98	; 0x62
 8021412:	d80a      	bhi.n	802142a <_printf_i+0x32>
 8021414:	2f00      	cmp	r7, #0
 8021416:	f000 80d8 	beq.w	80215ca <_printf_i+0x1d2>
 802141a:	2f58      	cmp	r7, #88	; 0x58
 802141c:	f000 80a3 	beq.w	8021566 <_printf_i+0x16e>
 8021420:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8021424:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8021428:	e03a      	b.n	80214a0 <_printf_i+0xa8>
 802142a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802142e:	2b15      	cmp	r3, #21
 8021430:	d8f6      	bhi.n	8021420 <_printf_i+0x28>
 8021432:	a101      	add	r1, pc, #4	; (adr r1, 8021438 <_printf_i+0x40>)
 8021434:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8021438:	08021491 	.word	0x08021491
 802143c:	080214a5 	.word	0x080214a5
 8021440:	08021421 	.word	0x08021421
 8021444:	08021421 	.word	0x08021421
 8021448:	08021421 	.word	0x08021421
 802144c:	08021421 	.word	0x08021421
 8021450:	080214a5 	.word	0x080214a5
 8021454:	08021421 	.word	0x08021421
 8021458:	08021421 	.word	0x08021421
 802145c:	08021421 	.word	0x08021421
 8021460:	08021421 	.word	0x08021421
 8021464:	080215b1 	.word	0x080215b1
 8021468:	080214d5 	.word	0x080214d5
 802146c:	08021593 	.word	0x08021593
 8021470:	08021421 	.word	0x08021421
 8021474:	08021421 	.word	0x08021421
 8021478:	080215d3 	.word	0x080215d3
 802147c:	08021421 	.word	0x08021421
 8021480:	080214d5 	.word	0x080214d5
 8021484:	08021421 	.word	0x08021421
 8021488:	08021421 	.word	0x08021421
 802148c:	0802159b 	.word	0x0802159b
 8021490:	682b      	ldr	r3, [r5, #0]
 8021492:	1d1a      	adds	r2, r3, #4
 8021494:	681b      	ldr	r3, [r3, #0]
 8021496:	602a      	str	r2, [r5, #0]
 8021498:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802149c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80214a0:	2301      	movs	r3, #1
 80214a2:	e0a3      	b.n	80215ec <_printf_i+0x1f4>
 80214a4:	6820      	ldr	r0, [r4, #0]
 80214a6:	6829      	ldr	r1, [r5, #0]
 80214a8:	0606      	lsls	r6, r0, #24
 80214aa:	f101 0304 	add.w	r3, r1, #4
 80214ae:	d50a      	bpl.n	80214c6 <_printf_i+0xce>
 80214b0:	680e      	ldr	r6, [r1, #0]
 80214b2:	602b      	str	r3, [r5, #0]
 80214b4:	2e00      	cmp	r6, #0
 80214b6:	da03      	bge.n	80214c0 <_printf_i+0xc8>
 80214b8:	232d      	movs	r3, #45	; 0x2d
 80214ba:	4276      	negs	r6, r6
 80214bc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80214c0:	485e      	ldr	r0, [pc, #376]	; (802163c <_printf_i+0x244>)
 80214c2:	230a      	movs	r3, #10
 80214c4:	e019      	b.n	80214fa <_printf_i+0x102>
 80214c6:	680e      	ldr	r6, [r1, #0]
 80214c8:	602b      	str	r3, [r5, #0]
 80214ca:	f010 0f40 	tst.w	r0, #64	; 0x40
 80214ce:	bf18      	it	ne
 80214d0:	b236      	sxthne	r6, r6
 80214d2:	e7ef      	b.n	80214b4 <_printf_i+0xbc>
 80214d4:	682b      	ldr	r3, [r5, #0]
 80214d6:	6820      	ldr	r0, [r4, #0]
 80214d8:	1d19      	adds	r1, r3, #4
 80214da:	6029      	str	r1, [r5, #0]
 80214dc:	0601      	lsls	r1, r0, #24
 80214de:	d501      	bpl.n	80214e4 <_printf_i+0xec>
 80214e0:	681e      	ldr	r6, [r3, #0]
 80214e2:	e002      	b.n	80214ea <_printf_i+0xf2>
 80214e4:	0646      	lsls	r6, r0, #25
 80214e6:	d5fb      	bpl.n	80214e0 <_printf_i+0xe8>
 80214e8:	881e      	ldrh	r6, [r3, #0]
 80214ea:	4854      	ldr	r0, [pc, #336]	; (802163c <_printf_i+0x244>)
 80214ec:	2f6f      	cmp	r7, #111	; 0x6f
 80214ee:	bf0c      	ite	eq
 80214f0:	2308      	moveq	r3, #8
 80214f2:	230a      	movne	r3, #10
 80214f4:	2100      	movs	r1, #0
 80214f6:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80214fa:	6865      	ldr	r5, [r4, #4]
 80214fc:	60a5      	str	r5, [r4, #8]
 80214fe:	2d00      	cmp	r5, #0
 8021500:	bfa2      	ittt	ge
 8021502:	6821      	ldrge	r1, [r4, #0]
 8021504:	f021 0104 	bicge.w	r1, r1, #4
 8021508:	6021      	strge	r1, [r4, #0]
 802150a:	b90e      	cbnz	r6, 8021510 <_printf_i+0x118>
 802150c:	2d00      	cmp	r5, #0
 802150e:	d04d      	beq.n	80215ac <_printf_i+0x1b4>
 8021510:	4615      	mov	r5, r2
 8021512:	fbb6 f1f3 	udiv	r1, r6, r3
 8021516:	fb03 6711 	mls	r7, r3, r1, r6
 802151a:	5dc7      	ldrb	r7, [r0, r7]
 802151c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8021520:	4637      	mov	r7, r6
 8021522:	42bb      	cmp	r3, r7
 8021524:	460e      	mov	r6, r1
 8021526:	d9f4      	bls.n	8021512 <_printf_i+0x11a>
 8021528:	2b08      	cmp	r3, #8
 802152a:	d10b      	bne.n	8021544 <_printf_i+0x14c>
 802152c:	6823      	ldr	r3, [r4, #0]
 802152e:	07de      	lsls	r6, r3, #31
 8021530:	d508      	bpl.n	8021544 <_printf_i+0x14c>
 8021532:	6923      	ldr	r3, [r4, #16]
 8021534:	6861      	ldr	r1, [r4, #4]
 8021536:	4299      	cmp	r1, r3
 8021538:	bfde      	ittt	le
 802153a:	2330      	movle	r3, #48	; 0x30
 802153c:	f805 3c01 	strble.w	r3, [r5, #-1]
 8021540:	f105 35ff 	addle.w	r5, r5, #4294967295
 8021544:	1b52      	subs	r2, r2, r5
 8021546:	6122      	str	r2, [r4, #16]
 8021548:	f8cd a000 	str.w	sl, [sp]
 802154c:	464b      	mov	r3, r9
 802154e:	aa03      	add	r2, sp, #12
 8021550:	4621      	mov	r1, r4
 8021552:	4640      	mov	r0, r8
 8021554:	f7ff fee2 	bl	802131c <_printf_common>
 8021558:	3001      	adds	r0, #1
 802155a:	d14c      	bne.n	80215f6 <_printf_i+0x1fe>
 802155c:	f04f 30ff 	mov.w	r0, #4294967295
 8021560:	b004      	add	sp, #16
 8021562:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8021566:	4835      	ldr	r0, [pc, #212]	; (802163c <_printf_i+0x244>)
 8021568:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 802156c:	6829      	ldr	r1, [r5, #0]
 802156e:	6823      	ldr	r3, [r4, #0]
 8021570:	f851 6b04 	ldr.w	r6, [r1], #4
 8021574:	6029      	str	r1, [r5, #0]
 8021576:	061d      	lsls	r5, r3, #24
 8021578:	d514      	bpl.n	80215a4 <_printf_i+0x1ac>
 802157a:	07df      	lsls	r7, r3, #31
 802157c:	bf44      	itt	mi
 802157e:	f043 0320 	orrmi.w	r3, r3, #32
 8021582:	6023      	strmi	r3, [r4, #0]
 8021584:	b91e      	cbnz	r6, 802158e <_printf_i+0x196>
 8021586:	6823      	ldr	r3, [r4, #0]
 8021588:	f023 0320 	bic.w	r3, r3, #32
 802158c:	6023      	str	r3, [r4, #0]
 802158e:	2310      	movs	r3, #16
 8021590:	e7b0      	b.n	80214f4 <_printf_i+0xfc>
 8021592:	6823      	ldr	r3, [r4, #0]
 8021594:	f043 0320 	orr.w	r3, r3, #32
 8021598:	6023      	str	r3, [r4, #0]
 802159a:	2378      	movs	r3, #120	; 0x78
 802159c:	4828      	ldr	r0, [pc, #160]	; (8021640 <_printf_i+0x248>)
 802159e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80215a2:	e7e3      	b.n	802156c <_printf_i+0x174>
 80215a4:	0659      	lsls	r1, r3, #25
 80215a6:	bf48      	it	mi
 80215a8:	b2b6      	uxthmi	r6, r6
 80215aa:	e7e6      	b.n	802157a <_printf_i+0x182>
 80215ac:	4615      	mov	r5, r2
 80215ae:	e7bb      	b.n	8021528 <_printf_i+0x130>
 80215b0:	682b      	ldr	r3, [r5, #0]
 80215b2:	6826      	ldr	r6, [r4, #0]
 80215b4:	6961      	ldr	r1, [r4, #20]
 80215b6:	1d18      	adds	r0, r3, #4
 80215b8:	6028      	str	r0, [r5, #0]
 80215ba:	0635      	lsls	r5, r6, #24
 80215bc:	681b      	ldr	r3, [r3, #0]
 80215be:	d501      	bpl.n	80215c4 <_printf_i+0x1cc>
 80215c0:	6019      	str	r1, [r3, #0]
 80215c2:	e002      	b.n	80215ca <_printf_i+0x1d2>
 80215c4:	0670      	lsls	r0, r6, #25
 80215c6:	d5fb      	bpl.n	80215c0 <_printf_i+0x1c8>
 80215c8:	8019      	strh	r1, [r3, #0]
 80215ca:	2300      	movs	r3, #0
 80215cc:	6123      	str	r3, [r4, #16]
 80215ce:	4615      	mov	r5, r2
 80215d0:	e7ba      	b.n	8021548 <_printf_i+0x150>
 80215d2:	682b      	ldr	r3, [r5, #0]
 80215d4:	1d1a      	adds	r2, r3, #4
 80215d6:	602a      	str	r2, [r5, #0]
 80215d8:	681d      	ldr	r5, [r3, #0]
 80215da:	6862      	ldr	r2, [r4, #4]
 80215dc:	2100      	movs	r1, #0
 80215de:	4628      	mov	r0, r5
 80215e0:	f7de fe06 	bl	80001f0 <memchr>
 80215e4:	b108      	cbz	r0, 80215ea <_printf_i+0x1f2>
 80215e6:	1b40      	subs	r0, r0, r5
 80215e8:	6060      	str	r0, [r4, #4]
 80215ea:	6863      	ldr	r3, [r4, #4]
 80215ec:	6123      	str	r3, [r4, #16]
 80215ee:	2300      	movs	r3, #0
 80215f0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80215f4:	e7a8      	b.n	8021548 <_printf_i+0x150>
 80215f6:	6923      	ldr	r3, [r4, #16]
 80215f8:	462a      	mov	r2, r5
 80215fa:	4649      	mov	r1, r9
 80215fc:	4640      	mov	r0, r8
 80215fe:	47d0      	blx	sl
 8021600:	3001      	adds	r0, #1
 8021602:	d0ab      	beq.n	802155c <_printf_i+0x164>
 8021604:	6823      	ldr	r3, [r4, #0]
 8021606:	079b      	lsls	r3, r3, #30
 8021608:	d413      	bmi.n	8021632 <_printf_i+0x23a>
 802160a:	68e0      	ldr	r0, [r4, #12]
 802160c:	9b03      	ldr	r3, [sp, #12]
 802160e:	4298      	cmp	r0, r3
 8021610:	bfb8      	it	lt
 8021612:	4618      	movlt	r0, r3
 8021614:	e7a4      	b.n	8021560 <_printf_i+0x168>
 8021616:	2301      	movs	r3, #1
 8021618:	4632      	mov	r2, r6
 802161a:	4649      	mov	r1, r9
 802161c:	4640      	mov	r0, r8
 802161e:	47d0      	blx	sl
 8021620:	3001      	adds	r0, #1
 8021622:	d09b      	beq.n	802155c <_printf_i+0x164>
 8021624:	3501      	adds	r5, #1
 8021626:	68e3      	ldr	r3, [r4, #12]
 8021628:	9903      	ldr	r1, [sp, #12]
 802162a:	1a5b      	subs	r3, r3, r1
 802162c:	42ab      	cmp	r3, r5
 802162e:	dcf2      	bgt.n	8021616 <_printf_i+0x21e>
 8021630:	e7eb      	b.n	802160a <_printf_i+0x212>
 8021632:	2500      	movs	r5, #0
 8021634:	f104 0619 	add.w	r6, r4, #25
 8021638:	e7f5      	b.n	8021626 <_printf_i+0x22e>
 802163a:	bf00      	nop
 802163c:	080246a5 	.word	0x080246a5
 8021640:	080246b6 	.word	0x080246b6

08021644 <cleanup_glue>:
 8021644:	b538      	push	{r3, r4, r5, lr}
 8021646:	460c      	mov	r4, r1
 8021648:	6809      	ldr	r1, [r1, #0]
 802164a:	4605      	mov	r5, r0
 802164c:	b109      	cbz	r1, 8021652 <cleanup_glue+0xe>
 802164e:	f7ff fff9 	bl	8021644 <cleanup_glue>
 8021652:	4621      	mov	r1, r4
 8021654:	4628      	mov	r0, r5
 8021656:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802165a:	f7ff bc25 	b.w	8020ea8 <_free_r>
	...

08021660 <_reclaim_reent>:
 8021660:	4b2c      	ldr	r3, [pc, #176]	; (8021714 <_reclaim_reent+0xb4>)
 8021662:	681b      	ldr	r3, [r3, #0]
 8021664:	4283      	cmp	r3, r0
 8021666:	b570      	push	{r4, r5, r6, lr}
 8021668:	4604      	mov	r4, r0
 802166a:	d051      	beq.n	8021710 <_reclaim_reent+0xb0>
 802166c:	6a43      	ldr	r3, [r0, #36]	; 0x24
 802166e:	b143      	cbz	r3, 8021682 <_reclaim_reent+0x22>
 8021670:	68db      	ldr	r3, [r3, #12]
 8021672:	2b00      	cmp	r3, #0
 8021674:	d14a      	bne.n	802170c <_reclaim_reent+0xac>
 8021676:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8021678:	6819      	ldr	r1, [r3, #0]
 802167a:	b111      	cbz	r1, 8021682 <_reclaim_reent+0x22>
 802167c:	4620      	mov	r0, r4
 802167e:	f7ff fc13 	bl	8020ea8 <_free_r>
 8021682:	6961      	ldr	r1, [r4, #20]
 8021684:	b111      	cbz	r1, 802168c <_reclaim_reent+0x2c>
 8021686:	4620      	mov	r0, r4
 8021688:	f7ff fc0e 	bl	8020ea8 <_free_r>
 802168c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 802168e:	b111      	cbz	r1, 8021696 <_reclaim_reent+0x36>
 8021690:	4620      	mov	r0, r4
 8021692:	f7ff fc09 	bl	8020ea8 <_free_r>
 8021696:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8021698:	b111      	cbz	r1, 80216a0 <_reclaim_reent+0x40>
 802169a:	4620      	mov	r0, r4
 802169c:	f7ff fc04 	bl	8020ea8 <_free_r>
 80216a0:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 80216a2:	b111      	cbz	r1, 80216aa <_reclaim_reent+0x4a>
 80216a4:	4620      	mov	r0, r4
 80216a6:	f7ff fbff 	bl	8020ea8 <_free_r>
 80216aa:	6c21      	ldr	r1, [r4, #64]	; 0x40
 80216ac:	b111      	cbz	r1, 80216b4 <_reclaim_reent+0x54>
 80216ae:	4620      	mov	r0, r4
 80216b0:	f7ff fbfa 	bl	8020ea8 <_free_r>
 80216b4:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 80216b6:	b111      	cbz	r1, 80216be <_reclaim_reent+0x5e>
 80216b8:	4620      	mov	r0, r4
 80216ba:	f7ff fbf5 	bl	8020ea8 <_free_r>
 80216be:	6da1      	ldr	r1, [r4, #88]	; 0x58
 80216c0:	b111      	cbz	r1, 80216c8 <_reclaim_reent+0x68>
 80216c2:	4620      	mov	r0, r4
 80216c4:	f7ff fbf0 	bl	8020ea8 <_free_r>
 80216c8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80216ca:	b111      	cbz	r1, 80216d2 <_reclaim_reent+0x72>
 80216cc:	4620      	mov	r0, r4
 80216ce:	f7ff fbeb 	bl	8020ea8 <_free_r>
 80216d2:	69a3      	ldr	r3, [r4, #24]
 80216d4:	b1e3      	cbz	r3, 8021710 <_reclaim_reent+0xb0>
 80216d6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80216d8:	4620      	mov	r0, r4
 80216da:	4798      	blx	r3
 80216dc:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 80216de:	b1b9      	cbz	r1, 8021710 <_reclaim_reent+0xb0>
 80216e0:	4620      	mov	r0, r4
 80216e2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80216e6:	f7ff bfad 	b.w	8021644 <cleanup_glue>
 80216ea:	5949      	ldr	r1, [r1, r5]
 80216ec:	b941      	cbnz	r1, 8021700 <_reclaim_reent+0xa0>
 80216ee:	3504      	adds	r5, #4
 80216f0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80216f2:	2d80      	cmp	r5, #128	; 0x80
 80216f4:	68d9      	ldr	r1, [r3, #12]
 80216f6:	d1f8      	bne.n	80216ea <_reclaim_reent+0x8a>
 80216f8:	4620      	mov	r0, r4
 80216fa:	f7ff fbd5 	bl	8020ea8 <_free_r>
 80216fe:	e7ba      	b.n	8021676 <_reclaim_reent+0x16>
 8021700:	680e      	ldr	r6, [r1, #0]
 8021702:	4620      	mov	r0, r4
 8021704:	f7ff fbd0 	bl	8020ea8 <_free_r>
 8021708:	4631      	mov	r1, r6
 802170a:	e7ef      	b.n	80216ec <_reclaim_reent+0x8c>
 802170c:	2500      	movs	r5, #0
 802170e:	e7ef      	b.n	80216f0 <_reclaim_reent+0x90>
 8021710:	bd70      	pop	{r4, r5, r6, pc}
 8021712:	bf00      	nop
 8021714:	20000104 	.word	0x20000104

08021718 <_sbrk_r>:
 8021718:	b538      	push	{r3, r4, r5, lr}
 802171a:	4d06      	ldr	r5, [pc, #24]	; (8021734 <_sbrk_r+0x1c>)
 802171c:	2300      	movs	r3, #0
 802171e:	4604      	mov	r4, r0
 8021720:	4608      	mov	r0, r1
 8021722:	602b      	str	r3, [r5, #0]
 8021724:	f7e0 fc46 	bl	8001fb4 <_sbrk>
 8021728:	1c43      	adds	r3, r0, #1
 802172a:	d102      	bne.n	8021732 <_sbrk_r+0x1a>
 802172c:	682b      	ldr	r3, [r5, #0]
 802172e:	b103      	cbz	r3, 8021732 <_sbrk_r+0x1a>
 8021730:	6023      	str	r3, [r4, #0]
 8021732:	bd38      	pop	{r3, r4, r5, pc}
 8021734:	20017668 	.word	0x20017668

08021738 <_raise_r>:
 8021738:	291f      	cmp	r1, #31
 802173a:	b538      	push	{r3, r4, r5, lr}
 802173c:	4604      	mov	r4, r0
 802173e:	460d      	mov	r5, r1
 8021740:	d904      	bls.n	802174c <_raise_r+0x14>
 8021742:	2316      	movs	r3, #22
 8021744:	6003      	str	r3, [r0, #0]
 8021746:	f04f 30ff 	mov.w	r0, #4294967295
 802174a:	bd38      	pop	{r3, r4, r5, pc}
 802174c:	6c42      	ldr	r2, [r0, #68]	; 0x44
 802174e:	b112      	cbz	r2, 8021756 <_raise_r+0x1e>
 8021750:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8021754:	b94b      	cbnz	r3, 802176a <_raise_r+0x32>
 8021756:	4620      	mov	r0, r4
 8021758:	f000 f830 	bl	80217bc <_getpid_r>
 802175c:	462a      	mov	r2, r5
 802175e:	4601      	mov	r1, r0
 8021760:	4620      	mov	r0, r4
 8021762:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8021766:	f000 b817 	b.w	8021798 <_kill_r>
 802176a:	2b01      	cmp	r3, #1
 802176c:	d00a      	beq.n	8021784 <_raise_r+0x4c>
 802176e:	1c59      	adds	r1, r3, #1
 8021770:	d103      	bne.n	802177a <_raise_r+0x42>
 8021772:	2316      	movs	r3, #22
 8021774:	6003      	str	r3, [r0, #0]
 8021776:	2001      	movs	r0, #1
 8021778:	e7e7      	b.n	802174a <_raise_r+0x12>
 802177a:	2400      	movs	r4, #0
 802177c:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8021780:	4628      	mov	r0, r5
 8021782:	4798      	blx	r3
 8021784:	2000      	movs	r0, #0
 8021786:	e7e0      	b.n	802174a <_raise_r+0x12>

08021788 <raise>:
 8021788:	4b02      	ldr	r3, [pc, #8]	; (8021794 <raise+0xc>)
 802178a:	4601      	mov	r1, r0
 802178c:	6818      	ldr	r0, [r3, #0]
 802178e:	f7ff bfd3 	b.w	8021738 <_raise_r>
 8021792:	bf00      	nop
 8021794:	20000104 	.word	0x20000104

08021798 <_kill_r>:
 8021798:	b538      	push	{r3, r4, r5, lr}
 802179a:	4d07      	ldr	r5, [pc, #28]	; (80217b8 <_kill_r+0x20>)
 802179c:	2300      	movs	r3, #0
 802179e:	4604      	mov	r4, r0
 80217a0:	4608      	mov	r0, r1
 80217a2:	4611      	mov	r1, r2
 80217a4:	602b      	str	r3, [r5, #0]
 80217a6:	f7e0 fbcf 	bl	8001f48 <_kill>
 80217aa:	1c43      	adds	r3, r0, #1
 80217ac:	d102      	bne.n	80217b4 <_kill_r+0x1c>
 80217ae:	682b      	ldr	r3, [r5, #0]
 80217b0:	b103      	cbz	r3, 80217b4 <_kill_r+0x1c>
 80217b2:	6023      	str	r3, [r4, #0]
 80217b4:	bd38      	pop	{r3, r4, r5, pc}
 80217b6:	bf00      	nop
 80217b8:	20017668 	.word	0x20017668

080217bc <_getpid_r>:
 80217bc:	f7e0 bbc2 	b.w	8001f44 <_getpid>

080217c0 <__sread>:
 80217c0:	b510      	push	{r4, lr}
 80217c2:	460c      	mov	r4, r1
 80217c4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80217c8:	f000 fac8 	bl	8021d5c <_read_r>
 80217cc:	2800      	cmp	r0, #0
 80217ce:	bfab      	itete	ge
 80217d0:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80217d2:	89a3      	ldrhlt	r3, [r4, #12]
 80217d4:	181b      	addge	r3, r3, r0
 80217d6:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80217da:	bfac      	ite	ge
 80217dc:	6563      	strge	r3, [r4, #84]	; 0x54
 80217de:	81a3      	strhlt	r3, [r4, #12]
 80217e0:	bd10      	pop	{r4, pc}

080217e2 <__swrite>:
 80217e2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80217e6:	461f      	mov	r7, r3
 80217e8:	898b      	ldrh	r3, [r1, #12]
 80217ea:	05db      	lsls	r3, r3, #23
 80217ec:	4605      	mov	r5, r0
 80217ee:	460c      	mov	r4, r1
 80217f0:	4616      	mov	r6, r2
 80217f2:	d505      	bpl.n	8021800 <__swrite+0x1e>
 80217f4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80217f8:	2302      	movs	r3, #2
 80217fa:	2200      	movs	r2, #0
 80217fc:	f000 fa2a 	bl	8021c54 <_lseek_r>
 8021800:	89a3      	ldrh	r3, [r4, #12]
 8021802:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8021806:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802180a:	81a3      	strh	r3, [r4, #12]
 802180c:	4632      	mov	r2, r6
 802180e:	463b      	mov	r3, r7
 8021810:	4628      	mov	r0, r5
 8021812:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8021816:	f000 b869 	b.w	80218ec <_write_r>

0802181a <__sseek>:
 802181a:	b510      	push	{r4, lr}
 802181c:	460c      	mov	r4, r1
 802181e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021822:	f000 fa17 	bl	8021c54 <_lseek_r>
 8021826:	1c43      	adds	r3, r0, #1
 8021828:	89a3      	ldrh	r3, [r4, #12]
 802182a:	bf15      	itete	ne
 802182c:	6560      	strne	r0, [r4, #84]	; 0x54
 802182e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8021832:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8021836:	81a3      	strheq	r3, [r4, #12]
 8021838:	bf18      	it	ne
 802183a:	81a3      	strhne	r3, [r4, #12]
 802183c:	bd10      	pop	{r4, pc}

0802183e <__sclose>:
 802183e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021842:	f000 b935 	b.w	8021ab0 <_close_r>
	...

08021848 <__swbuf_r>:
 8021848:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802184a:	460e      	mov	r6, r1
 802184c:	4614      	mov	r4, r2
 802184e:	4605      	mov	r5, r0
 8021850:	b118      	cbz	r0, 802185a <__swbuf_r+0x12>
 8021852:	6983      	ldr	r3, [r0, #24]
 8021854:	b90b      	cbnz	r3, 802185a <__swbuf_r+0x12>
 8021856:	f7ff fa29 	bl	8020cac <__sinit>
 802185a:	4b21      	ldr	r3, [pc, #132]	; (80218e0 <__swbuf_r+0x98>)
 802185c:	429c      	cmp	r4, r3
 802185e:	d12b      	bne.n	80218b8 <__swbuf_r+0x70>
 8021860:	686c      	ldr	r4, [r5, #4]
 8021862:	69a3      	ldr	r3, [r4, #24]
 8021864:	60a3      	str	r3, [r4, #8]
 8021866:	89a3      	ldrh	r3, [r4, #12]
 8021868:	071a      	lsls	r2, r3, #28
 802186a:	d52f      	bpl.n	80218cc <__swbuf_r+0x84>
 802186c:	6923      	ldr	r3, [r4, #16]
 802186e:	b36b      	cbz	r3, 80218cc <__swbuf_r+0x84>
 8021870:	6923      	ldr	r3, [r4, #16]
 8021872:	6820      	ldr	r0, [r4, #0]
 8021874:	1ac0      	subs	r0, r0, r3
 8021876:	6963      	ldr	r3, [r4, #20]
 8021878:	b2f6      	uxtb	r6, r6
 802187a:	4283      	cmp	r3, r0
 802187c:	4637      	mov	r7, r6
 802187e:	dc04      	bgt.n	802188a <__swbuf_r+0x42>
 8021880:	4621      	mov	r1, r4
 8021882:	4628      	mov	r0, r5
 8021884:	f000 f9aa 	bl	8021bdc <_fflush_r>
 8021888:	bb30      	cbnz	r0, 80218d8 <__swbuf_r+0x90>
 802188a:	68a3      	ldr	r3, [r4, #8]
 802188c:	3b01      	subs	r3, #1
 802188e:	60a3      	str	r3, [r4, #8]
 8021890:	6823      	ldr	r3, [r4, #0]
 8021892:	1c5a      	adds	r2, r3, #1
 8021894:	6022      	str	r2, [r4, #0]
 8021896:	701e      	strb	r6, [r3, #0]
 8021898:	6963      	ldr	r3, [r4, #20]
 802189a:	3001      	adds	r0, #1
 802189c:	4283      	cmp	r3, r0
 802189e:	d004      	beq.n	80218aa <__swbuf_r+0x62>
 80218a0:	89a3      	ldrh	r3, [r4, #12]
 80218a2:	07db      	lsls	r3, r3, #31
 80218a4:	d506      	bpl.n	80218b4 <__swbuf_r+0x6c>
 80218a6:	2e0a      	cmp	r6, #10
 80218a8:	d104      	bne.n	80218b4 <__swbuf_r+0x6c>
 80218aa:	4621      	mov	r1, r4
 80218ac:	4628      	mov	r0, r5
 80218ae:	f000 f995 	bl	8021bdc <_fflush_r>
 80218b2:	b988      	cbnz	r0, 80218d8 <__swbuf_r+0x90>
 80218b4:	4638      	mov	r0, r7
 80218b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80218b8:	4b0a      	ldr	r3, [pc, #40]	; (80218e4 <__swbuf_r+0x9c>)
 80218ba:	429c      	cmp	r4, r3
 80218bc:	d101      	bne.n	80218c2 <__swbuf_r+0x7a>
 80218be:	68ac      	ldr	r4, [r5, #8]
 80218c0:	e7cf      	b.n	8021862 <__swbuf_r+0x1a>
 80218c2:	4b09      	ldr	r3, [pc, #36]	; (80218e8 <__swbuf_r+0xa0>)
 80218c4:	429c      	cmp	r4, r3
 80218c6:	bf08      	it	eq
 80218c8:	68ec      	ldreq	r4, [r5, #12]
 80218ca:	e7ca      	b.n	8021862 <__swbuf_r+0x1a>
 80218cc:	4621      	mov	r1, r4
 80218ce:	4628      	mov	r0, r5
 80218d0:	f000 f81e 	bl	8021910 <__swsetup_r>
 80218d4:	2800      	cmp	r0, #0
 80218d6:	d0cb      	beq.n	8021870 <__swbuf_r+0x28>
 80218d8:	f04f 37ff 	mov.w	r7, #4294967295
 80218dc:	e7ea      	b.n	80218b4 <__swbuf_r+0x6c>
 80218de:	bf00      	nop
 80218e0:	08024650 	.word	0x08024650
 80218e4:	08024670 	.word	0x08024670
 80218e8:	08024630 	.word	0x08024630

080218ec <_write_r>:
 80218ec:	b538      	push	{r3, r4, r5, lr}
 80218ee:	4d07      	ldr	r5, [pc, #28]	; (802190c <_write_r+0x20>)
 80218f0:	4604      	mov	r4, r0
 80218f2:	4608      	mov	r0, r1
 80218f4:	4611      	mov	r1, r2
 80218f6:	2200      	movs	r2, #0
 80218f8:	602a      	str	r2, [r5, #0]
 80218fa:	461a      	mov	r2, r3
 80218fc:	f7e0 fb40 	bl	8001f80 <_write>
 8021900:	1c43      	adds	r3, r0, #1
 8021902:	d102      	bne.n	802190a <_write_r+0x1e>
 8021904:	682b      	ldr	r3, [r5, #0]
 8021906:	b103      	cbz	r3, 802190a <_write_r+0x1e>
 8021908:	6023      	str	r3, [r4, #0]
 802190a:	bd38      	pop	{r3, r4, r5, pc}
 802190c:	20017668 	.word	0x20017668

08021910 <__swsetup_r>:
 8021910:	4b32      	ldr	r3, [pc, #200]	; (80219dc <__swsetup_r+0xcc>)
 8021912:	b570      	push	{r4, r5, r6, lr}
 8021914:	681d      	ldr	r5, [r3, #0]
 8021916:	4606      	mov	r6, r0
 8021918:	460c      	mov	r4, r1
 802191a:	b125      	cbz	r5, 8021926 <__swsetup_r+0x16>
 802191c:	69ab      	ldr	r3, [r5, #24]
 802191e:	b913      	cbnz	r3, 8021926 <__swsetup_r+0x16>
 8021920:	4628      	mov	r0, r5
 8021922:	f7ff f9c3 	bl	8020cac <__sinit>
 8021926:	4b2e      	ldr	r3, [pc, #184]	; (80219e0 <__swsetup_r+0xd0>)
 8021928:	429c      	cmp	r4, r3
 802192a:	d10f      	bne.n	802194c <__swsetup_r+0x3c>
 802192c:	686c      	ldr	r4, [r5, #4]
 802192e:	89a3      	ldrh	r3, [r4, #12]
 8021930:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8021934:	0719      	lsls	r1, r3, #28
 8021936:	d42c      	bmi.n	8021992 <__swsetup_r+0x82>
 8021938:	06dd      	lsls	r5, r3, #27
 802193a:	d411      	bmi.n	8021960 <__swsetup_r+0x50>
 802193c:	2309      	movs	r3, #9
 802193e:	6033      	str	r3, [r6, #0]
 8021940:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8021944:	81a3      	strh	r3, [r4, #12]
 8021946:	f04f 30ff 	mov.w	r0, #4294967295
 802194a:	e03e      	b.n	80219ca <__swsetup_r+0xba>
 802194c:	4b25      	ldr	r3, [pc, #148]	; (80219e4 <__swsetup_r+0xd4>)
 802194e:	429c      	cmp	r4, r3
 8021950:	d101      	bne.n	8021956 <__swsetup_r+0x46>
 8021952:	68ac      	ldr	r4, [r5, #8]
 8021954:	e7eb      	b.n	802192e <__swsetup_r+0x1e>
 8021956:	4b24      	ldr	r3, [pc, #144]	; (80219e8 <__swsetup_r+0xd8>)
 8021958:	429c      	cmp	r4, r3
 802195a:	bf08      	it	eq
 802195c:	68ec      	ldreq	r4, [r5, #12]
 802195e:	e7e6      	b.n	802192e <__swsetup_r+0x1e>
 8021960:	0758      	lsls	r0, r3, #29
 8021962:	d512      	bpl.n	802198a <__swsetup_r+0x7a>
 8021964:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8021966:	b141      	cbz	r1, 802197a <__swsetup_r+0x6a>
 8021968:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802196c:	4299      	cmp	r1, r3
 802196e:	d002      	beq.n	8021976 <__swsetup_r+0x66>
 8021970:	4630      	mov	r0, r6
 8021972:	f7ff fa99 	bl	8020ea8 <_free_r>
 8021976:	2300      	movs	r3, #0
 8021978:	6363      	str	r3, [r4, #52]	; 0x34
 802197a:	89a3      	ldrh	r3, [r4, #12]
 802197c:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8021980:	81a3      	strh	r3, [r4, #12]
 8021982:	2300      	movs	r3, #0
 8021984:	6063      	str	r3, [r4, #4]
 8021986:	6923      	ldr	r3, [r4, #16]
 8021988:	6023      	str	r3, [r4, #0]
 802198a:	89a3      	ldrh	r3, [r4, #12]
 802198c:	f043 0308 	orr.w	r3, r3, #8
 8021990:	81a3      	strh	r3, [r4, #12]
 8021992:	6923      	ldr	r3, [r4, #16]
 8021994:	b94b      	cbnz	r3, 80219aa <__swsetup_r+0x9a>
 8021996:	89a3      	ldrh	r3, [r4, #12]
 8021998:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802199c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80219a0:	d003      	beq.n	80219aa <__swsetup_r+0x9a>
 80219a2:	4621      	mov	r1, r4
 80219a4:	4630      	mov	r0, r6
 80219a6:	f000 f98d 	bl	8021cc4 <__smakebuf_r>
 80219aa:	89a0      	ldrh	r0, [r4, #12]
 80219ac:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80219b0:	f010 0301 	ands.w	r3, r0, #1
 80219b4:	d00a      	beq.n	80219cc <__swsetup_r+0xbc>
 80219b6:	2300      	movs	r3, #0
 80219b8:	60a3      	str	r3, [r4, #8]
 80219ba:	6963      	ldr	r3, [r4, #20]
 80219bc:	425b      	negs	r3, r3
 80219be:	61a3      	str	r3, [r4, #24]
 80219c0:	6923      	ldr	r3, [r4, #16]
 80219c2:	b943      	cbnz	r3, 80219d6 <__swsetup_r+0xc6>
 80219c4:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80219c8:	d1ba      	bne.n	8021940 <__swsetup_r+0x30>
 80219ca:	bd70      	pop	{r4, r5, r6, pc}
 80219cc:	0781      	lsls	r1, r0, #30
 80219ce:	bf58      	it	pl
 80219d0:	6963      	ldrpl	r3, [r4, #20]
 80219d2:	60a3      	str	r3, [r4, #8]
 80219d4:	e7f4      	b.n	80219c0 <__swsetup_r+0xb0>
 80219d6:	2000      	movs	r0, #0
 80219d8:	e7f7      	b.n	80219ca <__swsetup_r+0xba>
 80219da:	bf00      	nop
 80219dc:	20000104 	.word	0x20000104
 80219e0:	08024650 	.word	0x08024650
 80219e4:	08024670 	.word	0x08024670
 80219e8:	08024630 	.word	0x08024630

080219ec <__register_exitproc>:
 80219ec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80219f0:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 8021aac <__register_exitproc+0xc0>
 80219f4:	4606      	mov	r6, r0
 80219f6:	f8d8 0000 	ldr.w	r0, [r8]
 80219fa:	461f      	mov	r7, r3
 80219fc:	460d      	mov	r5, r1
 80219fe:	4691      	mov	r9, r2
 8021a00:	f7ff fa29 	bl	8020e56 <__retarget_lock_acquire_recursive>
 8021a04:	4b25      	ldr	r3, [pc, #148]	; (8021a9c <__register_exitproc+0xb0>)
 8021a06:	681c      	ldr	r4, [r3, #0]
 8021a08:	b934      	cbnz	r4, 8021a18 <__register_exitproc+0x2c>
 8021a0a:	4c25      	ldr	r4, [pc, #148]	; (8021aa0 <__register_exitproc+0xb4>)
 8021a0c:	601c      	str	r4, [r3, #0]
 8021a0e:	4b25      	ldr	r3, [pc, #148]	; (8021aa4 <__register_exitproc+0xb8>)
 8021a10:	b113      	cbz	r3, 8021a18 <__register_exitproc+0x2c>
 8021a12:	681b      	ldr	r3, [r3, #0]
 8021a14:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 8021a18:	6863      	ldr	r3, [r4, #4]
 8021a1a:	2b1f      	cmp	r3, #31
 8021a1c:	dd07      	ble.n	8021a2e <__register_exitproc+0x42>
 8021a1e:	f8d8 0000 	ldr.w	r0, [r8]
 8021a22:	f7ff fa1a 	bl	8020e5a <__retarget_lock_release_recursive>
 8021a26:	f04f 30ff 	mov.w	r0, #4294967295
 8021a2a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8021a2e:	b34e      	cbz	r6, 8021a84 <__register_exitproc+0x98>
 8021a30:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8021a34:	b988      	cbnz	r0, 8021a5a <__register_exitproc+0x6e>
 8021a36:	4b1c      	ldr	r3, [pc, #112]	; (8021aa8 <__register_exitproc+0xbc>)
 8021a38:	b923      	cbnz	r3, 8021a44 <__register_exitproc+0x58>
 8021a3a:	f8d8 0000 	ldr.w	r0, [r8]
 8021a3e:	f7ff fa0b 	bl	8020e58 <__retarget_lock_release>
 8021a42:	e7f0      	b.n	8021a26 <__register_exitproc+0x3a>
 8021a44:	f44f 7084 	mov.w	r0, #264	; 0x108
 8021a48:	f7ff fa08 	bl	8020e5c <malloc>
 8021a4c:	2800      	cmp	r0, #0
 8021a4e:	d0f4      	beq.n	8021a3a <__register_exitproc+0x4e>
 8021a50:	2300      	movs	r3, #0
 8021a52:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 8021a56:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 8021a5a:	6863      	ldr	r3, [r4, #4]
 8021a5c:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8021a60:	2201      	movs	r2, #1
 8021a62:	409a      	lsls	r2, r3
 8021a64:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8021a68:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8021a6c:	4313      	orrs	r3, r2
 8021a6e:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 8021a72:	2e02      	cmp	r6, #2
 8021a74:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 8021a78:	bf02      	ittt	eq
 8021a7a:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 8021a7e:	4313      	orreq	r3, r2
 8021a80:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 8021a84:	6863      	ldr	r3, [r4, #4]
 8021a86:	f8d8 0000 	ldr.w	r0, [r8]
 8021a8a:	1c5a      	adds	r2, r3, #1
 8021a8c:	3302      	adds	r3, #2
 8021a8e:	6062      	str	r2, [r4, #4]
 8021a90:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8021a94:	f7ff f9e1 	bl	8020e5a <__retarget_lock_release_recursive>
 8021a98:	2000      	movs	r0, #0
 8021a9a:	e7c6      	b.n	8021a2a <__register_exitproc+0x3e>
 8021a9c:	200176f8 	.word	0x200176f8
 8021aa0:	2001766c 	.word	0x2001766c
 8021aa4:	080246c8 	.word	0x080246c8
 8021aa8:	08020e5d 	.word	0x08020e5d
 8021aac:	20000168 	.word	0x20000168

08021ab0 <_close_r>:
 8021ab0:	b538      	push	{r3, r4, r5, lr}
 8021ab2:	4d06      	ldr	r5, [pc, #24]	; (8021acc <_close_r+0x1c>)
 8021ab4:	2300      	movs	r3, #0
 8021ab6:	4604      	mov	r4, r0
 8021ab8:	4608      	mov	r0, r1
 8021aba:	602b      	str	r3, [r5, #0]
 8021abc:	f7e0 fa6e 	bl	8001f9c <_close>
 8021ac0:	1c43      	adds	r3, r0, #1
 8021ac2:	d102      	bne.n	8021aca <_close_r+0x1a>
 8021ac4:	682b      	ldr	r3, [r5, #0]
 8021ac6:	b103      	cbz	r3, 8021aca <_close_r+0x1a>
 8021ac8:	6023      	str	r3, [r4, #0]
 8021aca:	bd38      	pop	{r3, r4, r5, pc}
 8021acc:	20017668 	.word	0x20017668

08021ad0 <__sflush_r>:
 8021ad0:	898a      	ldrh	r2, [r1, #12]
 8021ad2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8021ad6:	4605      	mov	r5, r0
 8021ad8:	0710      	lsls	r0, r2, #28
 8021ada:	460c      	mov	r4, r1
 8021adc:	d458      	bmi.n	8021b90 <__sflush_r+0xc0>
 8021ade:	684b      	ldr	r3, [r1, #4]
 8021ae0:	2b00      	cmp	r3, #0
 8021ae2:	dc05      	bgt.n	8021af0 <__sflush_r+0x20>
 8021ae4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8021ae6:	2b00      	cmp	r3, #0
 8021ae8:	dc02      	bgt.n	8021af0 <__sflush_r+0x20>
 8021aea:	2000      	movs	r0, #0
 8021aec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8021af0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8021af2:	2e00      	cmp	r6, #0
 8021af4:	d0f9      	beq.n	8021aea <__sflush_r+0x1a>
 8021af6:	2300      	movs	r3, #0
 8021af8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8021afc:	682f      	ldr	r7, [r5, #0]
 8021afe:	602b      	str	r3, [r5, #0]
 8021b00:	d032      	beq.n	8021b68 <__sflush_r+0x98>
 8021b02:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8021b04:	89a3      	ldrh	r3, [r4, #12]
 8021b06:	075a      	lsls	r2, r3, #29
 8021b08:	d505      	bpl.n	8021b16 <__sflush_r+0x46>
 8021b0a:	6863      	ldr	r3, [r4, #4]
 8021b0c:	1ac0      	subs	r0, r0, r3
 8021b0e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8021b10:	b10b      	cbz	r3, 8021b16 <__sflush_r+0x46>
 8021b12:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8021b14:	1ac0      	subs	r0, r0, r3
 8021b16:	2300      	movs	r3, #0
 8021b18:	4602      	mov	r2, r0
 8021b1a:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8021b1c:	6a21      	ldr	r1, [r4, #32]
 8021b1e:	4628      	mov	r0, r5
 8021b20:	47b0      	blx	r6
 8021b22:	1c43      	adds	r3, r0, #1
 8021b24:	89a3      	ldrh	r3, [r4, #12]
 8021b26:	d106      	bne.n	8021b36 <__sflush_r+0x66>
 8021b28:	6829      	ldr	r1, [r5, #0]
 8021b2a:	291d      	cmp	r1, #29
 8021b2c:	d82c      	bhi.n	8021b88 <__sflush_r+0xb8>
 8021b2e:	4a2a      	ldr	r2, [pc, #168]	; (8021bd8 <__sflush_r+0x108>)
 8021b30:	40ca      	lsrs	r2, r1
 8021b32:	07d6      	lsls	r6, r2, #31
 8021b34:	d528      	bpl.n	8021b88 <__sflush_r+0xb8>
 8021b36:	2200      	movs	r2, #0
 8021b38:	6062      	str	r2, [r4, #4]
 8021b3a:	04d9      	lsls	r1, r3, #19
 8021b3c:	6922      	ldr	r2, [r4, #16]
 8021b3e:	6022      	str	r2, [r4, #0]
 8021b40:	d504      	bpl.n	8021b4c <__sflush_r+0x7c>
 8021b42:	1c42      	adds	r2, r0, #1
 8021b44:	d101      	bne.n	8021b4a <__sflush_r+0x7a>
 8021b46:	682b      	ldr	r3, [r5, #0]
 8021b48:	b903      	cbnz	r3, 8021b4c <__sflush_r+0x7c>
 8021b4a:	6560      	str	r0, [r4, #84]	; 0x54
 8021b4c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8021b4e:	602f      	str	r7, [r5, #0]
 8021b50:	2900      	cmp	r1, #0
 8021b52:	d0ca      	beq.n	8021aea <__sflush_r+0x1a>
 8021b54:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8021b58:	4299      	cmp	r1, r3
 8021b5a:	d002      	beq.n	8021b62 <__sflush_r+0x92>
 8021b5c:	4628      	mov	r0, r5
 8021b5e:	f7ff f9a3 	bl	8020ea8 <_free_r>
 8021b62:	2000      	movs	r0, #0
 8021b64:	6360      	str	r0, [r4, #52]	; 0x34
 8021b66:	e7c1      	b.n	8021aec <__sflush_r+0x1c>
 8021b68:	6a21      	ldr	r1, [r4, #32]
 8021b6a:	2301      	movs	r3, #1
 8021b6c:	4628      	mov	r0, r5
 8021b6e:	47b0      	blx	r6
 8021b70:	1c41      	adds	r1, r0, #1
 8021b72:	d1c7      	bne.n	8021b04 <__sflush_r+0x34>
 8021b74:	682b      	ldr	r3, [r5, #0]
 8021b76:	2b00      	cmp	r3, #0
 8021b78:	d0c4      	beq.n	8021b04 <__sflush_r+0x34>
 8021b7a:	2b1d      	cmp	r3, #29
 8021b7c:	d001      	beq.n	8021b82 <__sflush_r+0xb2>
 8021b7e:	2b16      	cmp	r3, #22
 8021b80:	d101      	bne.n	8021b86 <__sflush_r+0xb6>
 8021b82:	602f      	str	r7, [r5, #0]
 8021b84:	e7b1      	b.n	8021aea <__sflush_r+0x1a>
 8021b86:	89a3      	ldrh	r3, [r4, #12]
 8021b88:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8021b8c:	81a3      	strh	r3, [r4, #12]
 8021b8e:	e7ad      	b.n	8021aec <__sflush_r+0x1c>
 8021b90:	690f      	ldr	r7, [r1, #16]
 8021b92:	2f00      	cmp	r7, #0
 8021b94:	d0a9      	beq.n	8021aea <__sflush_r+0x1a>
 8021b96:	0793      	lsls	r3, r2, #30
 8021b98:	680e      	ldr	r6, [r1, #0]
 8021b9a:	bf08      	it	eq
 8021b9c:	694b      	ldreq	r3, [r1, #20]
 8021b9e:	600f      	str	r7, [r1, #0]
 8021ba0:	bf18      	it	ne
 8021ba2:	2300      	movne	r3, #0
 8021ba4:	eba6 0807 	sub.w	r8, r6, r7
 8021ba8:	608b      	str	r3, [r1, #8]
 8021baa:	f1b8 0f00 	cmp.w	r8, #0
 8021bae:	dd9c      	ble.n	8021aea <__sflush_r+0x1a>
 8021bb0:	6a21      	ldr	r1, [r4, #32]
 8021bb2:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8021bb4:	4643      	mov	r3, r8
 8021bb6:	463a      	mov	r2, r7
 8021bb8:	4628      	mov	r0, r5
 8021bba:	47b0      	blx	r6
 8021bbc:	2800      	cmp	r0, #0
 8021bbe:	dc06      	bgt.n	8021bce <__sflush_r+0xfe>
 8021bc0:	89a3      	ldrh	r3, [r4, #12]
 8021bc2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8021bc6:	81a3      	strh	r3, [r4, #12]
 8021bc8:	f04f 30ff 	mov.w	r0, #4294967295
 8021bcc:	e78e      	b.n	8021aec <__sflush_r+0x1c>
 8021bce:	4407      	add	r7, r0
 8021bd0:	eba8 0800 	sub.w	r8, r8, r0
 8021bd4:	e7e9      	b.n	8021baa <__sflush_r+0xda>
 8021bd6:	bf00      	nop
 8021bd8:	20400001 	.word	0x20400001

08021bdc <_fflush_r>:
 8021bdc:	b538      	push	{r3, r4, r5, lr}
 8021bde:	690b      	ldr	r3, [r1, #16]
 8021be0:	4605      	mov	r5, r0
 8021be2:	460c      	mov	r4, r1
 8021be4:	b913      	cbnz	r3, 8021bec <_fflush_r+0x10>
 8021be6:	2500      	movs	r5, #0
 8021be8:	4628      	mov	r0, r5
 8021bea:	bd38      	pop	{r3, r4, r5, pc}
 8021bec:	b118      	cbz	r0, 8021bf6 <_fflush_r+0x1a>
 8021bee:	6983      	ldr	r3, [r0, #24]
 8021bf0:	b90b      	cbnz	r3, 8021bf6 <_fflush_r+0x1a>
 8021bf2:	f7ff f85b 	bl	8020cac <__sinit>
 8021bf6:	4b14      	ldr	r3, [pc, #80]	; (8021c48 <_fflush_r+0x6c>)
 8021bf8:	429c      	cmp	r4, r3
 8021bfa:	d11b      	bne.n	8021c34 <_fflush_r+0x58>
 8021bfc:	686c      	ldr	r4, [r5, #4]
 8021bfe:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021c02:	2b00      	cmp	r3, #0
 8021c04:	d0ef      	beq.n	8021be6 <_fflush_r+0xa>
 8021c06:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8021c08:	07d0      	lsls	r0, r2, #31
 8021c0a:	d404      	bmi.n	8021c16 <_fflush_r+0x3a>
 8021c0c:	0599      	lsls	r1, r3, #22
 8021c0e:	d402      	bmi.n	8021c16 <_fflush_r+0x3a>
 8021c10:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8021c12:	f7ff f920 	bl	8020e56 <__retarget_lock_acquire_recursive>
 8021c16:	4628      	mov	r0, r5
 8021c18:	4621      	mov	r1, r4
 8021c1a:	f7ff ff59 	bl	8021ad0 <__sflush_r>
 8021c1e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8021c20:	07da      	lsls	r2, r3, #31
 8021c22:	4605      	mov	r5, r0
 8021c24:	d4e0      	bmi.n	8021be8 <_fflush_r+0xc>
 8021c26:	89a3      	ldrh	r3, [r4, #12]
 8021c28:	059b      	lsls	r3, r3, #22
 8021c2a:	d4dd      	bmi.n	8021be8 <_fflush_r+0xc>
 8021c2c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8021c2e:	f7ff f914 	bl	8020e5a <__retarget_lock_release_recursive>
 8021c32:	e7d9      	b.n	8021be8 <_fflush_r+0xc>
 8021c34:	4b05      	ldr	r3, [pc, #20]	; (8021c4c <_fflush_r+0x70>)
 8021c36:	429c      	cmp	r4, r3
 8021c38:	d101      	bne.n	8021c3e <_fflush_r+0x62>
 8021c3a:	68ac      	ldr	r4, [r5, #8]
 8021c3c:	e7df      	b.n	8021bfe <_fflush_r+0x22>
 8021c3e:	4b04      	ldr	r3, [pc, #16]	; (8021c50 <_fflush_r+0x74>)
 8021c40:	429c      	cmp	r4, r3
 8021c42:	bf08      	it	eq
 8021c44:	68ec      	ldreq	r4, [r5, #12]
 8021c46:	e7da      	b.n	8021bfe <_fflush_r+0x22>
 8021c48:	08024650 	.word	0x08024650
 8021c4c:	08024670 	.word	0x08024670
 8021c50:	08024630 	.word	0x08024630

08021c54 <_lseek_r>:
 8021c54:	b538      	push	{r3, r4, r5, lr}
 8021c56:	4d07      	ldr	r5, [pc, #28]	; (8021c74 <_lseek_r+0x20>)
 8021c58:	4604      	mov	r4, r0
 8021c5a:	4608      	mov	r0, r1
 8021c5c:	4611      	mov	r1, r2
 8021c5e:	2200      	movs	r2, #0
 8021c60:	602a      	str	r2, [r5, #0]
 8021c62:	461a      	mov	r2, r3
 8021c64:	f7e0 f9a4 	bl	8001fb0 <_lseek>
 8021c68:	1c43      	adds	r3, r0, #1
 8021c6a:	d102      	bne.n	8021c72 <_lseek_r+0x1e>
 8021c6c:	682b      	ldr	r3, [r5, #0]
 8021c6e:	b103      	cbz	r3, 8021c72 <_lseek_r+0x1e>
 8021c70:	6023      	str	r3, [r4, #0]
 8021c72:	bd38      	pop	{r3, r4, r5, pc}
 8021c74:	20017668 	.word	0x20017668

08021c78 <__swhatbuf_r>:
 8021c78:	b570      	push	{r4, r5, r6, lr}
 8021c7a:	460e      	mov	r6, r1
 8021c7c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021c80:	2900      	cmp	r1, #0
 8021c82:	b096      	sub	sp, #88	; 0x58
 8021c84:	4614      	mov	r4, r2
 8021c86:	461d      	mov	r5, r3
 8021c88:	da08      	bge.n	8021c9c <__swhatbuf_r+0x24>
 8021c8a:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8021c8e:	2200      	movs	r2, #0
 8021c90:	602a      	str	r2, [r5, #0]
 8021c92:	061a      	lsls	r2, r3, #24
 8021c94:	d410      	bmi.n	8021cb8 <__swhatbuf_r+0x40>
 8021c96:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8021c9a:	e00e      	b.n	8021cba <__swhatbuf_r+0x42>
 8021c9c:	466a      	mov	r2, sp
 8021c9e:	f000 f86f 	bl	8021d80 <_fstat_r>
 8021ca2:	2800      	cmp	r0, #0
 8021ca4:	dbf1      	blt.n	8021c8a <__swhatbuf_r+0x12>
 8021ca6:	9a01      	ldr	r2, [sp, #4]
 8021ca8:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8021cac:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8021cb0:	425a      	negs	r2, r3
 8021cb2:	415a      	adcs	r2, r3
 8021cb4:	602a      	str	r2, [r5, #0]
 8021cb6:	e7ee      	b.n	8021c96 <__swhatbuf_r+0x1e>
 8021cb8:	2340      	movs	r3, #64	; 0x40
 8021cba:	2000      	movs	r0, #0
 8021cbc:	6023      	str	r3, [r4, #0]
 8021cbe:	b016      	add	sp, #88	; 0x58
 8021cc0:	bd70      	pop	{r4, r5, r6, pc}
	...

08021cc4 <__smakebuf_r>:
 8021cc4:	898b      	ldrh	r3, [r1, #12]
 8021cc6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8021cc8:	079d      	lsls	r5, r3, #30
 8021cca:	4606      	mov	r6, r0
 8021ccc:	460c      	mov	r4, r1
 8021cce:	d507      	bpl.n	8021ce0 <__smakebuf_r+0x1c>
 8021cd0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8021cd4:	6023      	str	r3, [r4, #0]
 8021cd6:	6123      	str	r3, [r4, #16]
 8021cd8:	2301      	movs	r3, #1
 8021cda:	6163      	str	r3, [r4, #20]
 8021cdc:	b002      	add	sp, #8
 8021cde:	bd70      	pop	{r4, r5, r6, pc}
 8021ce0:	ab01      	add	r3, sp, #4
 8021ce2:	466a      	mov	r2, sp
 8021ce4:	f7ff ffc8 	bl	8021c78 <__swhatbuf_r>
 8021ce8:	9900      	ldr	r1, [sp, #0]
 8021cea:	4605      	mov	r5, r0
 8021cec:	4630      	mov	r0, r6
 8021cee:	f7ff f947 	bl	8020f80 <_malloc_r>
 8021cf2:	b948      	cbnz	r0, 8021d08 <__smakebuf_r+0x44>
 8021cf4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021cf8:	059a      	lsls	r2, r3, #22
 8021cfa:	d4ef      	bmi.n	8021cdc <__smakebuf_r+0x18>
 8021cfc:	f023 0303 	bic.w	r3, r3, #3
 8021d00:	f043 0302 	orr.w	r3, r3, #2
 8021d04:	81a3      	strh	r3, [r4, #12]
 8021d06:	e7e3      	b.n	8021cd0 <__smakebuf_r+0xc>
 8021d08:	4b0d      	ldr	r3, [pc, #52]	; (8021d40 <__smakebuf_r+0x7c>)
 8021d0a:	62b3      	str	r3, [r6, #40]	; 0x28
 8021d0c:	89a3      	ldrh	r3, [r4, #12]
 8021d0e:	6020      	str	r0, [r4, #0]
 8021d10:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8021d14:	81a3      	strh	r3, [r4, #12]
 8021d16:	9b00      	ldr	r3, [sp, #0]
 8021d18:	6163      	str	r3, [r4, #20]
 8021d1a:	9b01      	ldr	r3, [sp, #4]
 8021d1c:	6120      	str	r0, [r4, #16]
 8021d1e:	b15b      	cbz	r3, 8021d38 <__smakebuf_r+0x74>
 8021d20:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8021d24:	4630      	mov	r0, r6
 8021d26:	f000 f83d 	bl	8021da4 <_isatty_r>
 8021d2a:	b128      	cbz	r0, 8021d38 <__smakebuf_r+0x74>
 8021d2c:	89a3      	ldrh	r3, [r4, #12]
 8021d2e:	f023 0303 	bic.w	r3, r3, #3
 8021d32:	f043 0301 	orr.w	r3, r3, #1
 8021d36:	81a3      	strh	r3, [r4, #12]
 8021d38:	89a0      	ldrh	r0, [r4, #12]
 8021d3a:	4305      	orrs	r5, r0
 8021d3c:	81a5      	strh	r5, [r4, #12]
 8021d3e:	e7cd      	b.n	8021cdc <__smakebuf_r+0x18>
 8021d40:	08020c45 	.word	0x08020c45

08021d44 <__malloc_lock>:
 8021d44:	4801      	ldr	r0, [pc, #4]	; (8021d4c <__malloc_lock+0x8>)
 8021d46:	f7ff b886 	b.w	8020e56 <__retarget_lock_acquire_recursive>
 8021d4a:	bf00      	nop
 8021d4c:	20017555 	.word	0x20017555

08021d50 <__malloc_unlock>:
 8021d50:	4801      	ldr	r0, [pc, #4]	; (8021d58 <__malloc_unlock+0x8>)
 8021d52:	f7ff b882 	b.w	8020e5a <__retarget_lock_release_recursive>
 8021d56:	bf00      	nop
 8021d58:	20017555 	.word	0x20017555

08021d5c <_read_r>:
 8021d5c:	b538      	push	{r3, r4, r5, lr}
 8021d5e:	4d07      	ldr	r5, [pc, #28]	; (8021d7c <_read_r+0x20>)
 8021d60:	4604      	mov	r4, r0
 8021d62:	4608      	mov	r0, r1
 8021d64:	4611      	mov	r1, r2
 8021d66:	2200      	movs	r2, #0
 8021d68:	602a      	str	r2, [r5, #0]
 8021d6a:	461a      	mov	r2, r3
 8021d6c:	f7e0 f8fa 	bl	8001f64 <_read>
 8021d70:	1c43      	adds	r3, r0, #1
 8021d72:	d102      	bne.n	8021d7a <_read_r+0x1e>
 8021d74:	682b      	ldr	r3, [r5, #0]
 8021d76:	b103      	cbz	r3, 8021d7a <_read_r+0x1e>
 8021d78:	6023      	str	r3, [r4, #0]
 8021d7a:	bd38      	pop	{r3, r4, r5, pc}
 8021d7c:	20017668 	.word	0x20017668

08021d80 <_fstat_r>:
 8021d80:	b538      	push	{r3, r4, r5, lr}
 8021d82:	4d07      	ldr	r5, [pc, #28]	; (8021da0 <_fstat_r+0x20>)
 8021d84:	2300      	movs	r3, #0
 8021d86:	4604      	mov	r4, r0
 8021d88:	4608      	mov	r0, r1
 8021d8a:	4611      	mov	r1, r2
 8021d8c:	602b      	str	r3, [r5, #0]
 8021d8e:	f7e0 f908 	bl	8001fa2 <_fstat>
 8021d92:	1c43      	adds	r3, r0, #1
 8021d94:	d102      	bne.n	8021d9c <_fstat_r+0x1c>
 8021d96:	682b      	ldr	r3, [r5, #0]
 8021d98:	b103      	cbz	r3, 8021d9c <_fstat_r+0x1c>
 8021d9a:	6023      	str	r3, [r4, #0]
 8021d9c:	bd38      	pop	{r3, r4, r5, pc}
 8021d9e:	bf00      	nop
 8021da0:	20017668 	.word	0x20017668

08021da4 <_isatty_r>:
 8021da4:	b538      	push	{r3, r4, r5, lr}
 8021da6:	4d06      	ldr	r5, [pc, #24]	; (8021dc0 <_isatty_r+0x1c>)
 8021da8:	2300      	movs	r3, #0
 8021daa:	4604      	mov	r4, r0
 8021dac:	4608      	mov	r0, r1
 8021dae:	602b      	str	r3, [r5, #0]
 8021db0:	f7e0 f8fc 	bl	8001fac <_isatty>
 8021db4:	1c43      	adds	r3, r0, #1
 8021db6:	d102      	bne.n	8021dbe <_isatty_r+0x1a>
 8021db8:	682b      	ldr	r3, [r5, #0]
 8021dba:	b103      	cbz	r3, 8021dbe <_isatty_r+0x1a>
 8021dbc:	6023      	str	r3, [r4, #0]
 8021dbe:	bd38      	pop	{r3, r4, r5, pc}
 8021dc0:	20017668 	.word	0x20017668

08021dc4 <_init>:
 8021dc4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021dc6:	bf00      	nop
 8021dc8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8021dca:	bc08      	pop	{r3}
 8021dcc:	469e      	mov	lr, r3
 8021dce:	4770      	bx	lr

08021dd0 <_fini>:
 8021dd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021dd2:	bf00      	nop
 8021dd4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8021dd6:	bc08      	pop	{r3}
 8021dd8:	469e      	mov	lr, r3
 8021dda:	4770      	bx	lr
